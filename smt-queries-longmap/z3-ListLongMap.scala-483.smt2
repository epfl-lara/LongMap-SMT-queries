; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10188 () Bool)

(assert start!10188)

(declare-fun b!77786 () Bool)

(declare-fun b_free!2185 () Bool)

(declare-fun b_next!2185 () Bool)

(assert (=> b!77786 (= b_free!2185 (not b_next!2185))))

(declare-fun tp!8756 () Bool)

(declare-fun b_and!4785 () Bool)

(assert (=> b!77786 (= tp!8756 b_and!4785)))

(declare-fun b!77791 () Bool)

(declare-fun b_free!2187 () Bool)

(declare-fun b_next!2187 () Bool)

(assert (=> b!77791 (= b_free!2187 (not b_next!2187))))

(declare-fun tp!8757 () Bool)

(declare-fun b_and!4787 () Bool)

(assert (=> b!77791 (= tp!8757 b_and!4787)))

(declare-fun b!77776 () Bool)

(declare-fun e!50849 () Bool)

(declare-fun tp_is_empty!2509 () Bool)

(assert (=> b!77776 (= e!50849 tp_is_empty!2509)))

(declare-fun mapNonEmpty!3297 () Bool)

(declare-fun mapRes!3298 () Bool)

(declare-fun tp!8758 () Bool)

(declare-fun e!50857 () Bool)

(assert (=> mapNonEmpty!3297 (= mapRes!3298 (and tp!8758 e!50857))))

(declare-datatypes ((V!2993 0))(
  ( (V!2994 (val!1299 Int)) )
))
(declare-datatypes ((array!3957 0))(
  ( (array!3958 (arr!1886 (Array (_ BitVec 32) (_ BitVec 64))) (size!2127 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!911 0))(
  ( (ValueCellFull!911 (v!2593 V!2993)) (EmptyCell!911) )
))
(declare-datatypes ((array!3959 0))(
  ( (array!3960 (arr!1887 (Array (_ BitVec 32) ValueCell!911)) (size!2128 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!730 0))(
  ( (LongMapFixedSize!731 (defaultEntry!2271 Int) (mask!6267 (_ BitVec 32)) (extraKeys!2122 (_ BitVec 32)) (zeroValue!2169 V!2993) (minValue!2169 V!2993) (_size!414 (_ BitVec 32)) (_keys!3931 array!3957) (_values!2254 array!3959) (_vacant!414 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!538 0))(
  ( (Cell!539 (v!2594 LongMapFixedSize!730)) )
))
(declare-datatypes ((LongMap!538 0))(
  ( (LongMap!539 (underlying!280 Cell!538)) )
))
(declare-fun thiss!992 () LongMap!538)

(declare-fun mapRest!3297 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapKey!3297 () (_ BitVec 32))

(declare-fun mapValue!3297 () ValueCell!911)

(assert (=> mapNonEmpty!3297 (= (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (store mapRest!3297 mapKey!3297 mapValue!3297))))

(declare-fun b!77777 () Bool)

(declare-fun e!50854 () Bool)

(declare-fun e!50848 () Bool)

(assert (=> b!77777 (= e!50854 e!50848)))

(declare-fun b!77778 () Bool)

(declare-fun e!50859 () Bool)

(declare-fun e!50855 () Bool)

(declare-fun mapRes!3297 () Bool)

(assert (=> b!77778 (= e!50859 (and e!50855 mapRes!3297))))

(declare-fun condMapEmpty!3297 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!730)

(declare-fun mapDefault!3297 () ValueCell!911)

(assert (=> b!77778 (= condMapEmpty!3297 (= (arr!1887 (_values!2254 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3297)))))

(declare-fun b!77779 () Bool)

(declare-fun e!50864 () Bool)

(declare-fun e!50863 () Bool)

(assert (=> b!77779 (= e!50864 (not e!50863))))

(declare-fun res!40792 () Bool)

(assert (=> b!77779 (=> res!40792 e!50863)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!77779 (= res!40792 (not (validMask!0 (mask!6267 (v!2594 (underlying!280 thiss!992))))))))

(declare-datatypes ((tuple2!2162 0))(
  ( (tuple2!2163 (_1!1092 (_ BitVec 64)) (_2!1092 V!2993)) )
))
(declare-datatypes ((List!1494 0))(
  ( (Nil!1491) (Cons!1490 (h!2078 tuple2!2162) (t!5132 List!1494)) )
))
(declare-datatypes ((ListLongMap!1427 0))(
  ( (ListLongMap!1428 (toList!729 List!1494)) )
))
(declare-fun lt!35790 () ListLongMap!1427)

(declare-fun lt!35792 () tuple2!2162)

(declare-fun lt!35806 () tuple2!2162)

(declare-fun lt!35804 () ListLongMap!1427)

(declare-fun +!100 (ListLongMap!1427 tuple2!2162) ListLongMap!1427)

(assert (=> b!77779 (= (+!100 lt!35790 lt!35806) (+!100 (+!100 lt!35804 lt!35806) lt!35792))))

(assert (=> b!77779 (= lt!35806 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun from!355 () (_ BitVec 32))

(declare-datatypes ((Unit!2237 0))(
  ( (Unit!2238) )
))
(declare-fun lt!35805 () Unit!2237)

(declare-fun lt!35794 () V!2993)

(declare-fun addCommutativeForDiffKeys!20 (ListLongMap!1427 (_ BitVec 64) V!2993 (_ BitVec 64) V!2993) Unit!2237)

(assert (=> b!77779 (= lt!35805 (addCommutativeForDiffKeys!20 lt!35804 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun lt!35798 () ListLongMap!1427)

(assert (=> b!77779 (= lt!35798 lt!35790)))

(assert (=> b!77779 (= lt!35790 (+!100 lt!35804 lt!35792))))

(declare-fun lt!35793 () ListLongMap!1427)

(declare-fun lt!35789 () tuple2!2162)

(assert (=> b!77779 (= lt!35798 (+!100 lt!35793 lt!35789))))

(declare-fun lt!35791 () ListLongMap!1427)

(assert (=> b!77779 (= lt!35804 (+!100 lt!35791 lt!35789))))

(assert (=> b!77779 (= lt!35789 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))

(assert (=> b!77779 (= lt!35793 (+!100 lt!35791 lt!35792))))

(assert (=> b!77779 (= lt!35792 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))

(declare-fun lt!35795 () Unit!2237)

(assert (=> b!77779 (= lt!35795 (addCommutativeForDiffKeys!20 lt!35791 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!65 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) Int) ListLongMap!1427)

(assert (=> b!77779 (= lt!35791 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun b!77780 () Bool)

(declare-fun res!40788 () Bool)

(declare-fun e!50851 () Bool)

(assert (=> b!77780 (=> (not res!40788) (not e!50851))))

(assert (=> b!77780 (= res!40788 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6267 newMap!16)) (_size!414 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun b!77781 () Bool)

(declare-fun e!50847 () Bool)

(declare-fun e!50862 () Bool)

(assert (=> b!77781 (= e!50847 e!50862)))

(declare-fun res!40791 () Bool)

(assert (=> b!77781 (=> (not res!40791) (not e!50862))))

(assert (=> b!77781 (= res!40791 (and (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1183 (ValueCell!911 V!2993) V!2993)

(declare-fun dynLambda!340 (Int (_ BitVec 64)) V!2993)

(assert (=> b!77781 (= lt!35794 (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) from!355) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!77782 () Bool)

(assert (=> b!77782 (= e!50862 e!50864)))

(declare-fun res!40794 () Bool)

(assert (=> b!77782 (=> (not res!40794) (not e!50864))))

(declare-datatypes ((tuple2!2164 0))(
  ( (tuple2!2165 (_1!1093 Bool) (_2!1093 LongMapFixedSize!730)) )
))
(declare-fun lt!35802 () tuple2!2164)

(assert (=> b!77782 (= res!40794 (and (_1!1093 lt!35802) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!35799 () Unit!2237)

(declare-fun e!50853 () Unit!2237)

(assert (=> b!77782 (= lt!35799 e!50853)))

(declare-fun lt!35796 () ListLongMap!1427)

(declare-fun c!11891 () Bool)

(declare-fun contains!736 (ListLongMap!1427 (_ BitVec 64)) Bool)

(assert (=> b!77782 (= c!11891 (contains!736 lt!35796 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun update!118 (LongMapFixedSize!730 (_ BitVec 64) V!2993) tuple2!2164)

(assert (=> b!77782 (= lt!35802 (update!118 newMap!16 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))

(declare-fun b!77783 () Bool)

(declare-fun Unit!2239 () Unit!2237)

(assert (=> b!77783 (= e!50853 Unit!2239)))

(declare-fun mapIsEmpty!3297 () Bool)

(assert (=> mapIsEmpty!3297 mapRes!3298))

(declare-fun b!77784 () Bool)

(declare-fun e!50856 () Bool)

(declare-fun e!50858 () Bool)

(assert (=> b!77784 (= e!50856 (and e!50858 mapRes!3298))))

(declare-fun condMapEmpty!3298 () Bool)

(declare-fun mapDefault!3298 () ValueCell!911)

(assert (=> b!77784 (= condMapEmpty!3298 (= (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3298)))))

(declare-fun b!77785 () Bool)

(declare-fun res!40793 () Bool)

(assert (=> b!77785 (=> (not res!40793) (not e!50851))))

(assert (=> b!77785 (= res!40793 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!50861 () Bool)

(declare-fun array_inv!1161 (array!3957) Bool)

(declare-fun array_inv!1162 (array!3959) Bool)

(assert (=> b!77786 (= e!50861 (and tp!8756 tp_is_empty!2509 (array_inv!1161 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (array_inv!1162 (_values!2254 (v!2594 (underlying!280 thiss!992)))) e!50856))))

(declare-fun b!77787 () Bool)

(declare-fun res!40790 () Bool)

(assert (=> b!77787 (=> (not res!40790) (not e!50851))))

(declare-fun valid!323 (LongMapFixedSize!730) Bool)

(assert (=> b!77787 (= res!40790 (valid!323 newMap!16))))

(declare-fun b!77788 () Bool)

(assert (=> b!77788 (= e!50848 e!50861)))

(declare-fun b!77789 () Bool)

(assert (=> b!77789 (= e!50858 tp_is_empty!2509)))

(declare-fun b!77790 () Bool)

(assert (=> b!77790 (= e!50851 e!50847)))

(declare-fun res!40789 () Bool)

(assert (=> b!77790 (=> (not res!40789) (not e!50847))))

(declare-fun lt!35803 () ListLongMap!1427)

(assert (=> b!77790 (= res!40789 (= lt!35803 lt!35796))))

(declare-fun map!1183 (LongMapFixedSize!730) ListLongMap!1427)

(assert (=> b!77790 (= lt!35796 (map!1183 newMap!16))))

(declare-fun getCurrentListMap!425 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) Int) ListLongMap!1427)

(assert (=> b!77790 (= lt!35803 (getCurrentListMap!425 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun e!50850 () Bool)

(assert (=> b!77791 (= e!50850 (and tp!8757 tp_is_empty!2509 (array_inv!1161 (_keys!3931 newMap!16)) (array_inv!1162 (_values!2254 newMap!16)) e!50859))))

(declare-fun mapNonEmpty!3298 () Bool)

(declare-fun tp!8755 () Bool)

(assert (=> mapNonEmpty!3298 (= mapRes!3297 (and tp!8755 e!50849))))

(declare-fun mapValue!3298 () ValueCell!911)

(declare-fun mapRest!3298 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapKey!3298 () (_ BitVec 32))

(assert (=> mapNonEmpty!3298 (= (arr!1887 (_values!2254 newMap!16)) (store mapRest!3298 mapKey!3298 mapValue!3298))))

(declare-fun b!77792 () Bool)

(assert (=> b!77792 (= e!50855 tp_is_empty!2509)))

(declare-fun b!77793 () Bool)

(declare-fun Unit!2240 () Unit!2237)

(assert (=> b!77793 (= e!50853 Unit!2240)))

(declare-fun lt!35797 () Unit!2237)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!52 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) (_ BitVec 32) Int) Unit!2237)

(assert (=> b!77793 (= lt!35797 (lemmaListMapContainsThenArrayContainsFrom!52 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3957 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!77793 (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!35801 () Unit!2237)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3957 (_ BitVec 32) (_ BitVec 32)) Unit!2237)

(assert (=> b!77793 (= lt!35801 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1495 0))(
  ( (Nil!1492) (Cons!1491 (h!2079 (_ BitVec 64)) (t!5133 List!1495)) )
))
(declare-fun arrayNoDuplicates!0 (array!3957 (_ BitVec 32) List!1495) Bool)

(assert (=> b!77793 (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) from!355 Nil!1492)))

(declare-fun lt!35800 () Unit!2237)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3957 (_ BitVec 32) (_ BitVec 64) List!1495) Unit!2237)

(assert (=> b!77793 (= lt!35800 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492)))))

(assert (=> b!77793 false))

(declare-fun b!77794 () Bool)

(assert (=> b!77794 (= e!50863 (= (size!2128 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6267 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun res!40787 () Bool)

(assert (=> start!10188 (=> (not res!40787) (not e!50851))))

(declare-fun valid!324 (LongMap!538) Bool)

(assert (=> start!10188 (= res!40787 (valid!324 thiss!992))))

(assert (=> start!10188 e!50851))

(assert (=> start!10188 e!50854))

(assert (=> start!10188 true))

(assert (=> start!10188 e!50850))

(declare-fun mapIsEmpty!3298 () Bool)

(assert (=> mapIsEmpty!3298 mapRes!3297))

(declare-fun b!77795 () Bool)

(assert (=> b!77795 (= e!50857 tp_is_empty!2509)))

(assert (= (and start!10188 res!40787) b!77785))

(assert (= (and b!77785 res!40793) b!77787))

(assert (= (and b!77787 res!40790) b!77780))

(assert (= (and b!77780 res!40788) b!77790))

(assert (= (and b!77790 res!40789) b!77781))

(assert (= (and b!77781 res!40791) b!77782))

(assert (= (and b!77782 c!11891) b!77793))

(assert (= (and b!77782 (not c!11891)) b!77783))

(assert (= (and b!77782 res!40794) b!77779))

(assert (= (and b!77779 (not res!40792)) b!77794))

(assert (= (and b!77784 condMapEmpty!3298) mapIsEmpty!3297))

(assert (= (and b!77784 (not condMapEmpty!3298)) mapNonEmpty!3297))

(get-info :version)

(assert (= (and mapNonEmpty!3297 ((_ is ValueCellFull!911) mapValue!3297)) b!77795))

(assert (= (and b!77784 ((_ is ValueCellFull!911) mapDefault!3298)) b!77789))

(assert (= b!77786 b!77784))

(assert (= b!77788 b!77786))

(assert (= b!77777 b!77788))

(assert (= start!10188 b!77777))

(assert (= (and b!77778 condMapEmpty!3297) mapIsEmpty!3298))

(assert (= (and b!77778 (not condMapEmpty!3297)) mapNonEmpty!3298))

(assert (= (and mapNonEmpty!3298 ((_ is ValueCellFull!911) mapValue!3298)) b!77776))

(assert (= (and b!77778 ((_ is ValueCellFull!911) mapDefault!3297)) b!77792))

(assert (= b!77791 b!77778))

(assert (= start!10188 b!77791))

(declare-fun b_lambda!3493 () Bool)

(assert (=> (not b_lambda!3493) (not b!77781)))

(declare-fun t!5129 () Bool)

(declare-fun tb!1609 () Bool)

(assert (=> (and b!77786 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))) t!5129) tb!1609))

(declare-fun result!2801 () Bool)

(assert (=> tb!1609 (= result!2801 tp_is_empty!2509)))

(assert (=> b!77781 t!5129))

(declare-fun b_and!4789 () Bool)

(assert (= b_and!4785 (and (=> t!5129 result!2801) b_and!4789)))

(declare-fun tb!1611 () Bool)

(declare-fun t!5131 () Bool)

(assert (=> (and b!77791 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))) t!5131) tb!1611))

(declare-fun result!2805 () Bool)

(assert (= result!2805 result!2801))

(assert (=> b!77781 t!5131))

(declare-fun b_and!4791 () Bool)

(assert (= b_and!4787 (and (=> t!5131 result!2805) b_and!4791)))

(declare-fun m!77879 () Bool)

(assert (=> b!77791 m!77879))

(declare-fun m!77881 () Bool)

(assert (=> b!77791 m!77881))

(declare-fun m!77883 () Bool)

(assert (=> mapNonEmpty!3297 m!77883))

(declare-fun m!77885 () Bool)

(assert (=> b!77782 m!77885))

(assert (=> b!77782 m!77885))

(declare-fun m!77887 () Bool)

(assert (=> b!77782 m!77887))

(assert (=> b!77782 m!77885))

(declare-fun m!77889 () Bool)

(assert (=> b!77782 m!77889))

(declare-fun m!77891 () Bool)

(assert (=> b!77787 m!77891))

(declare-fun m!77893 () Bool)

(assert (=> start!10188 m!77893))

(declare-fun m!77895 () Bool)

(assert (=> b!77790 m!77895))

(declare-fun m!77897 () Bool)

(assert (=> b!77790 m!77897))

(declare-fun m!77899 () Bool)

(assert (=> b!77793 m!77899))

(declare-fun m!77901 () Bool)

(assert (=> b!77793 m!77901))

(assert (=> b!77793 m!77885))

(declare-fun m!77903 () Bool)

(assert (=> b!77793 m!77903))

(assert (=> b!77793 m!77885))

(assert (=> b!77793 m!77885))

(declare-fun m!77905 () Bool)

(assert (=> b!77793 m!77905))

(assert (=> b!77793 m!77885))

(declare-fun m!77907 () Bool)

(assert (=> b!77793 m!77907))

(declare-fun m!77909 () Bool)

(assert (=> mapNonEmpty!3298 m!77909))

(declare-fun m!77911 () Bool)

(assert (=> b!77786 m!77911))

(declare-fun m!77913 () Bool)

(assert (=> b!77786 m!77913))

(declare-fun m!77915 () Bool)

(assert (=> b!77779 m!77915))

(declare-fun m!77917 () Bool)

(assert (=> b!77779 m!77917))

(declare-fun m!77919 () Bool)

(assert (=> b!77779 m!77919))

(declare-fun m!77921 () Bool)

(assert (=> b!77779 m!77921))

(declare-fun m!77923 () Bool)

(assert (=> b!77779 m!77923))

(assert (=> b!77779 m!77885))

(declare-fun m!77925 () Bool)

(assert (=> b!77779 m!77925))

(declare-fun m!77927 () Bool)

(assert (=> b!77779 m!77927))

(assert (=> b!77779 m!77885))

(declare-fun m!77929 () Bool)

(assert (=> b!77779 m!77929))

(assert (=> b!77779 m!77919))

(declare-fun m!77931 () Bool)

(assert (=> b!77779 m!77931))

(assert (=> b!77779 m!77885))

(declare-fun m!77933 () Bool)

(assert (=> b!77779 m!77933))

(declare-fun m!77935 () Bool)

(assert (=> b!77779 m!77935))

(assert (=> b!77781 m!77885))

(declare-fun m!77937 () Bool)

(assert (=> b!77781 m!77937))

(declare-fun m!77939 () Bool)

(assert (=> b!77781 m!77939))

(assert (=> b!77781 m!77937))

(assert (=> b!77781 m!77939))

(declare-fun m!77941 () Bool)

(assert (=> b!77781 m!77941))

(check-sat (not b_lambda!3493) (not b_next!2185) (not start!10188) (not b!77787) (not b!77793) (not b!77790) (not b!77781) b_and!4791 (not b_next!2187) (not b!77782) (not b!77779) (not b!77786) (not mapNonEmpty!3298) (not mapNonEmpty!3297) tp_is_empty!2509 b_and!4789 (not b!77791))
(check-sat b_and!4789 b_and!4791 (not b_next!2185) (not b_next!2187))
(get-model)

(declare-fun b_lambda!3499 () Bool)

(assert (= b_lambda!3493 (or (and b!77786 b_free!2185) (and b!77791 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))) b_lambda!3499)))

(check-sat (not b_next!2185) (not start!10188) (not b!77787) (not b!77793) (not b!77790) (not b!77781) b_and!4791 (not b_lambda!3499) (not b_next!2187) (not b!77782) (not b!77779) (not b!77786) (not mapNonEmpty!3298) (not mapNonEmpty!3297) tp_is_empty!2509 b_and!4789 (not b!77791))
(check-sat b_and!4789 b_and!4791 (not b_next!2185) (not b_next!2187))
(get-model)

(declare-fun d!18457 () Bool)

(assert (=> d!18457 (= (+!100 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (+!100 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun lt!35917 () Unit!2237)

(declare-fun choose!460 (ListLongMap!1427 (_ BitVec 64) V!2993 (_ BitVec 64) V!2993) Unit!2237)

(assert (=> d!18457 (= lt!35917 (choose!460 lt!35804 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))

(assert (=> d!18457 (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18457 (= (addCommutativeForDiffKeys!20 lt!35804 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))) lt!35917)))

(declare-fun bs!3313 () Bool)

(assert (= bs!3313 d!18457))

(declare-fun m!78071 () Bool)

(assert (=> bs!3313 m!78071))

(declare-fun m!78073 () Bool)

(assert (=> bs!3313 m!78073))

(assert (=> bs!3313 m!78071))

(declare-fun m!78075 () Bool)

(assert (=> bs!3313 m!78075))

(assert (=> bs!3313 m!77885))

(declare-fun m!78077 () Bool)

(assert (=> bs!3313 m!78077))

(assert (=> bs!3313 m!78075))

(declare-fun m!78079 () Bool)

(assert (=> bs!3313 m!78079))

(assert (=> b!77779 d!18457))

(declare-fun b!77946 () Bool)

(assert (=> b!77946 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> b!77946 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2128 (_values!2254 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!50990 () Bool)

(declare-fun lt!35932 () ListLongMap!1427)

(declare-fun apply!79 (ListLongMap!1427 (_ BitVec 64)) V!2993)

(assert (=> b!77946 (= e!50990 (= (apply!79 lt!35932 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!77947 () Bool)

(declare-fun e!50991 () ListLongMap!1427)

(assert (=> b!77947 (= e!50991 (ListLongMap!1428 Nil!1491))))

(declare-fun bm!7065 () Bool)

(declare-fun call!7068 () ListLongMap!1427)

(assert (=> bm!7065 (= call!7068 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun d!18459 () Bool)

(declare-fun e!50989 () Bool)

(assert (=> d!18459 e!50989))

(declare-fun res!40851 () Bool)

(assert (=> d!18459 (=> (not res!40851) (not e!50989))))

(assert (=> d!18459 (= res!40851 (not (contains!736 lt!35932 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18459 (= lt!35932 e!50991)))

(declare-fun c!11907 () Bool)

(assert (=> d!18459 (= c!11907 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!18459 (validMask!0 (mask!6267 (v!2594 (underlying!280 thiss!992))))))

(assert (=> d!18459 (= (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))) lt!35932)))

(declare-fun b!77948 () Bool)

(declare-fun lt!35936 () Unit!2237)

(declare-fun lt!35934 () Unit!2237)

(assert (=> b!77948 (= lt!35936 lt!35934)))

(declare-fun lt!35935 () (_ BitVec 64))

(declare-fun lt!35937 () ListLongMap!1427)

(declare-fun lt!35938 () V!2993)

(declare-fun lt!35933 () (_ BitVec 64))

(assert (=> b!77948 (not (contains!736 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)) lt!35933))))

(declare-fun addStillNotContains!30 (ListLongMap!1427 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2237)

(assert (=> b!77948 (= lt!35934 (addStillNotContains!30 lt!35937 lt!35935 lt!35938 lt!35933))))

(assert (=> b!77948 (= lt!35933 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!77948 (= lt!35938 (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!77948 (= lt!35935 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!77948 (= lt!35937 call!7068)))

(declare-fun e!50992 () ListLongMap!1427)

(assert (=> b!77948 (= e!50992 (+!100 call!7068 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!77949 () Bool)

(declare-fun e!50988 () Bool)

(assert (=> b!77949 (= e!50989 e!50988)))

(declare-fun c!11906 () Bool)

(declare-fun e!50987 () Bool)

(assert (=> b!77949 (= c!11906 e!50987)))

(declare-fun res!40854 () Bool)

(assert (=> b!77949 (=> (not res!40854) (not e!50987))))

(assert (=> b!77949 (= res!40854 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!50993 () Bool)

(declare-fun b!77950 () Bool)

(assert (=> b!77950 (= e!50993 (= lt!35932 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!77951 () Bool)

(declare-fun res!40852 () Bool)

(assert (=> b!77951 (=> (not res!40852) (not e!50989))))

(assert (=> b!77951 (= res!40852 (not (contains!736 lt!35932 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!77952 () Bool)

(assert (=> b!77952 (= e!50988 e!50990)))

(assert (=> b!77952 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun res!40853 () Bool)

(assert (=> b!77952 (= res!40853 (contains!736 lt!35932 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!77952 (=> (not res!40853) (not e!50990))))

(declare-fun b!77953 () Bool)

(assert (=> b!77953 (= e!50992 call!7068)))

(declare-fun b!77954 () Bool)

(assert (=> b!77954 (= e!50991 e!50992)))

(declare-fun c!11909 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!77954 (= c!11909 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!77955 () Bool)

(assert (=> b!77955 (= e!50988 e!50993)))

(declare-fun c!11908 () Bool)

(assert (=> b!77955 (= c!11908 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!77956 () Bool)

(declare-fun isEmpty!332 (ListLongMap!1427) Bool)

(assert (=> b!77956 (= e!50993 (isEmpty!332 lt!35932))))

(declare-fun b!77957 () Bool)

(assert (=> b!77957 (= e!50987 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!77957 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(assert (= (and d!18459 c!11907) b!77947))

(assert (= (and d!18459 (not c!11907)) b!77954))

(assert (= (and b!77954 c!11909) b!77948))

(assert (= (and b!77954 (not c!11909)) b!77953))

(assert (= (or b!77948 b!77953) bm!7065))

(assert (= (and d!18459 res!40851) b!77951))

(assert (= (and b!77951 res!40852) b!77949))

(assert (= (and b!77949 res!40854) b!77957))

(assert (= (and b!77949 c!11906) b!77952))

(assert (= (and b!77949 (not c!11906)) b!77955))

(assert (= (and b!77952 res!40853) b!77946))

(assert (= (and b!77955 c!11908) b!77950))

(assert (= (and b!77955 (not c!11908)) b!77956))

(declare-fun b_lambda!3501 () Bool)

(assert (=> (not b_lambda!3501) (not b!77946)))

(assert (=> b!77946 t!5129))

(declare-fun b_and!4809 () Bool)

(assert (= b_and!4789 (and (=> t!5129 result!2801) b_and!4809)))

(assert (=> b!77946 t!5131))

(declare-fun b_and!4811 () Bool)

(assert (= b_and!4791 (and (=> t!5131 result!2805) b_and!4811)))

(declare-fun b_lambda!3503 () Bool)

(assert (=> (not b_lambda!3503) (not b!77948)))

(assert (=> b!77948 t!5129))

(declare-fun b_and!4813 () Bool)

(assert (= b_and!4809 (and (=> t!5129 result!2801) b_and!4813)))

(assert (=> b!77948 t!5131))

(declare-fun b_and!4815 () Bool)

(assert (= b_and!4811 (and (=> t!5131 result!2805) b_and!4815)))

(declare-fun m!78081 () Bool)

(assert (=> d!18459 m!78081))

(assert (=> d!18459 m!77921))

(declare-fun m!78083 () Bool)

(assert (=> bm!7065 m!78083))

(declare-fun m!78085 () Bool)

(assert (=> b!77952 m!78085))

(assert (=> b!77952 m!78085))

(declare-fun m!78087 () Bool)

(assert (=> b!77952 m!78087))

(declare-fun m!78089 () Bool)

(assert (=> b!77951 m!78089))

(assert (=> b!77954 m!78085))

(assert (=> b!77954 m!78085))

(declare-fun m!78091 () Bool)

(assert (=> b!77954 m!78091))

(declare-fun m!78093 () Bool)

(assert (=> b!77956 m!78093))

(assert (=> b!77950 m!78083))

(assert (=> b!77957 m!78085))

(assert (=> b!77957 m!78085))

(assert (=> b!77957 m!78091))

(declare-fun m!78095 () Bool)

(assert (=> b!77948 m!78095))

(declare-fun m!78097 () Bool)

(assert (=> b!77948 m!78097))

(declare-fun m!78099 () Bool)

(assert (=> b!77948 m!78099))

(assert (=> b!77948 m!78097))

(assert (=> b!77948 m!77939))

(declare-fun m!78101 () Bool)

(assert (=> b!77948 m!78101))

(declare-fun m!78103 () Bool)

(assert (=> b!77948 m!78103))

(assert (=> b!77948 m!78085))

(assert (=> b!77948 m!78103))

(assert (=> b!77948 m!77939))

(declare-fun m!78105 () Bool)

(assert (=> b!77948 m!78105))

(assert (=> b!77946 m!78085))

(declare-fun m!78107 () Bool)

(assert (=> b!77946 m!78107))

(assert (=> b!77946 m!77939))

(assert (=> b!77946 m!78103))

(assert (=> b!77946 m!78085))

(assert (=> b!77946 m!78103))

(assert (=> b!77946 m!77939))

(assert (=> b!77946 m!78105))

(assert (=> b!77779 d!18459))

(declare-fun d!18461 () Bool)

(declare-fun e!50996 () Bool)

(assert (=> d!18461 e!50996))

(declare-fun res!40859 () Bool)

(assert (=> d!18461 (=> (not res!40859) (not e!50996))))

(declare-fun lt!35948 () ListLongMap!1427)

(assert (=> d!18461 (= res!40859 (contains!736 lt!35948 (_1!1092 lt!35792)))))

(declare-fun lt!35947 () List!1494)

(assert (=> d!18461 (= lt!35948 (ListLongMap!1428 lt!35947))))

(declare-fun lt!35949 () Unit!2237)

(declare-fun lt!35950 () Unit!2237)

(assert (=> d!18461 (= lt!35949 lt!35950)))

(declare-datatypes ((Option!144 0))(
  ( (Some!143 (v!2600 V!2993)) (None!142) )
))
(declare-fun getValueByKey!138 (List!1494 (_ BitVec 64)) Option!144)

(assert (=> d!18461 (= (getValueByKey!138 lt!35947 (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792)))))

(declare-fun lemmaContainsTupThenGetReturnValue!55 (List!1494 (_ BitVec 64) V!2993) Unit!2237)

(assert (=> d!18461 (= lt!35950 (lemmaContainsTupThenGetReturnValue!55 lt!35947 (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(declare-fun insertStrictlySorted!58 (List!1494 (_ BitVec 64) V!2993) List!1494)

(assert (=> d!18461 (= lt!35947 (insertStrictlySorted!58 (toList!729 lt!35791) (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(assert (=> d!18461 (= (+!100 lt!35791 lt!35792) lt!35948)))

(declare-fun b!77962 () Bool)

(declare-fun res!40860 () Bool)

(assert (=> b!77962 (=> (not res!40860) (not e!50996))))

(assert (=> b!77962 (= res!40860 (= (getValueByKey!138 (toList!729 lt!35948) (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792))))))

(declare-fun b!77963 () Bool)

(declare-fun contains!737 (List!1494 tuple2!2162) Bool)

(assert (=> b!77963 (= e!50996 (contains!737 (toList!729 lt!35948) lt!35792))))

(assert (= (and d!18461 res!40859) b!77962))

(assert (= (and b!77962 res!40860) b!77963))

(declare-fun m!78109 () Bool)

(assert (=> d!18461 m!78109))

(declare-fun m!78111 () Bool)

(assert (=> d!18461 m!78111))

(declare-fun m!78113 () Bool)

(assert (=> d!18461 m!78113))

(declare-fun m!78115 () Bool)

(assert (=> d!18461 m!78115))

(declare-fun m!78117 () Bool)

(assert (=> b!77962 m!78117))

(declare-fun m!78119 () Bool)

(assert (=> b!77963 m!78119))

(assert (=> b!77779 d!18461))

(declare-fun d!18463 () Bool)

(assert (=> d!18463 (= (+!100 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (+!100 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun lt!35951 () Unit!2237)

(assert (=> d!18463 (= lt!35951 (choose!460 lt!35791 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))

(assert (=> d!18463 (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18463 (= (addCommutativeForDiffKeys!20 lt!35791 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) lt!35951)))

(declare-fun bs!3314 () Bool)

(assert (= bs!3314 d!18463))

(declare-fun m!78121 () Bool)

(assert (=> bs!3314 m!78121))

(declare-fun m!78123 () Bool)

(assert (=> bs!3314 m!78123))

(assert (=> bs!3314 m!78121))

(declare-fun m!78125 () Bool)

(assert (=> bs!3314 m!78125))

(assert (=> bs!3314 m!77885))

(declare-fun m!78127 () Bool)

(assert (=> bs!3314 m!78127))

(assert (=> bs!3314 m!78125))

(declare-fun m!78129 () Bool)

(assert (=> bs!3314 m!78129))

(assert (=> b!77779 d!18463))

(declare-fun d!18465 () Bool)

(declare-fun e!50997 () Bool)

(assert (=> d!18465 e!50997))

(declare-fun res!40861 () Bool)

(assert (=> d!18465 (=> (not res!40861) (not e!50997))))

(declare-fun lt!35953 () ListLongMap!1427)

(assert (=> d!18465 (= res!40861 (contains!736 lt!35953 (_1!1092 lt!35792)))))

(declare-fun lt!35952 () List!1494)

(assert (=> d!18465 (= lt!35953 (ListLongMap!1428 lt!35952))))

(declare-fun lt!35954 () Unit!2237)

(declare-fun lt!35955 () Unit!2237)

(assert (=> d!18465 (= lt!35954 lt!35955)))

(assert (=> d!18465 (= (getValueByKey!138 lt!35952 (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792)))))

(assert (=> d!18465 (= lt!35955 (lemmaContainsTupThenGetReturnValue!55 lt!35952 (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(assert (=> d!18465 (= lt!35952 (insertStrictlySorted!58 (toList!729 (+!100 lt!35804 lt!35806)) (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(assert (=> d!18465 (= (+!100 (+!100 lt!35804 lt!35806) lt!35792) lt!35953)))

(declare-fun b!77964 () Bool)

(declare-fun res!40862 () Bool)

(assert (=> b!77964 (=> (not res!40862) (not e!50997))))

(assert (=> b!77964 (= res!40862 (= (getValueByKey!138 (toList!729 lt!35953) (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792))))))

(declare-fun b!77965 () Bool)

(assert (=> b!77965 (= e!50997 (contains!737 (toList!729 lt!35953) lt!35792))))

(assert (= (and d!18465 res!40861) b!77964))

(assert (= (and b!77964 res!40862) b!77965))

(declare-fun m!78131 () Bool)

(assert (=> d!18465 m!78131))

(declare-fun m!78133 () Bool)

(assert (=> d!18465 m!78133))

(declare-fun m!78135 () Bool)

(assert (=> d!18465 m!78135))

(declare-fun m!78137 () Bool)

(assert (=> d!18465 m!78137))

(declare-fun m!78139 () Bool)

(assert (=> b!77964 m!78139))

(declare-fun m!78141 () Bool)

(assert (=> b!77965 m!78141))

(assert (=> b!77779 d!18465))

(declare-fun d!18467 () Bool)

(declare-fun e!50998 () Bool)

(assert (=> d!18467 e!50998))

(declare-fun res!40863 () Bool)

(assert (=> d!18467 (=> (not res!40863) (not e!50998))))

(declare-fun lt!35957 () ListLongMap!1427)

(assert (=> d!18467 (= res!40863 (contains!736 lt!35957 (_1!1092 lt!35789)))))

(declare-fun lt!35956 () List!1494)

(assert (=> d!18467 (= lt!35957 (ListLongMap!1428 lt!35956))))

(declare-fun lt!35958 () Unit!2237)

(declare-fun lt!35959 () Unit!2237)

(assert (=> d!18467 (= lt!35958 lt!35959)))

(assert (=> d!18467 (= (getValueByKey!138 lt!35956 (_1!1092 lt!35789)) (Some!143 (_2!1092 lt!35789)))))

(assert (=> d!18467 (= lt!35959 (lemmaContainsTupThenGetReturnValue!55 lt!35956 (_1!1092 lt!35789) (_2!1092 lt!35789)))))

(assert (=> d!18467 (= lt!35956 (insertStrictlySorted!58 (toList!729 lt!35791) (_1!1092 lt!35789) (_2!1092 lt!35789)))))

(assert (=> d!18467 (= (+!100 lt!35791 lt!35789) lt!35957)))

(declare-fun b!77966 () Bool)

(declare-fun res!40864 () Bool)

(assert (=> b!77966 (=> (not res!40864) (not e!50998))))

(assert (=> b!77966 (= res!40864 (= (getValueByKey!138 (toList!729 lt!35957) (_1!1092 lt!35789)) (Some!143 (_2!1092 lt!35789))))))

(declare-fun b!77967 () Bool)

(assert (=> b!77967 (= e!50998 (contains!737 (toList!729 lt!35957) lt!35789))))

(assert (= (and d!18467 res!40863) b!77966))

(assert (= (and b!77966 res!40864) b!77967))

(declare-fun m!78143 () Bool)

(assert (=> d!18467 m!78143))

(declare-fun m!78145 () Bool)

(assert (=> d!18467 m!78145))

(declare-fun m!78147 () Bool)

(assert (=> d!18467 m!78147))

(declare-fun m!78149 () Bool)

(assert (=> d!18467 m!78149))

(declare-fun m!78151 () Bool)

(assert (=> b!77966 m!78151))

(declare-fun m!78153 () Bool)

(assert (=> b!77967 m!78153))

(assert (=> b!77779 d!18467))

(declare-fun d!18469 () Bool)

(declare-fun e!50999 () Bool)

(assert (=> d!18469 e!50999))

(declare-fun res!40865 () Bool)

(assert (=> d!18469 (=> (not res!40865) (not e!50999))))

(declare-fun lt!35961 () ListLongMap!1427)

(assert (=> d!18469 (= res!40865 (contains!736 lt!35961 (_1!1092 lt!35806)))))

(declare-fun lt!35960 () List!1494)

(assert (=> d!18469 (= lt!35961 (ListLongMap!1428 lt!35960))))

(declare-fun lt!35962 () Unit!2237)

(declare-fun lt!35963 () Unit!2237)

(assert (=> d!18469 (= lt!35962 lt!35963)))

(assert (=> d!18469 (= (getValueByKey!138 lt!35960 (_1!1092 lt!35806)) (Some!143 (_2!1092 lt!35806)))))

(assert (=> d!18469 (= lt!35963 (lemmaContainsTupThenGetReturnValue!55 lt!35960 (_1!1092 lt!35806) (_2!1092 lt!35806)))))

(assert (=> d!18469 (= lt!35960 (insertStrictlySorted!58 (toList!729 lt!35804) (_1!1092 lt!35806) (_2!1092 lt!35806)))))

(assert (=> d!18469 (= (+!100 lt!35804 lt!35806) lt!35961)))

(declare-fun b!77968 () Bool)

(declare-fun res!40866 () Bool)

(assert (=> b!77968 (=> (not res!40866) (not e!50999))))

(assert (=> b!77968 (= res!40866 (= (getValueByKey!138 (toList!729 lt!35961) (_1!1092 lt!35806)) (Some!143 (_2!1092 lt!35806))))))

(declare-fun b!77969 () Bool)

(assert (=> b!77969 (= e!50999 (contains!737 (toList!729 lt!35961) lt!35806))))

(assert (= (and d!18469 res!40865) b!77968))

(assert (= (and b!77968 res!40866) b!77969))

(declare-fun m!78155 () Bool)

(assert (=> d!18469 m!78155))

(declare-fun m!78157 () Bool)

(assert (=> d!18469 m!78157))

(declare-fun m!78159 () Bool)

(assert (=> d!18469 m!78159))

(declare-fun m!78161 () Bool)

(assert (=> d!18469 m!78161))

(declare-fun m!78163 () Bool)

(assert (=> b!77968 m!78163))

(declare-fun m!78165 () Bool)

(assert (=> b!77969 m!78165))

(assert (=> b!77779 d!18469))

(declare-fun d!18471 () Bool)

(declare-fun e!51000 () Bool)

(assert (=> d!18471 e!51000))

(declare-fun res!40867 () Bool)

(assert (=> d!18471 (=> (not res!40867) (not e!51000))))

(declare-fun lt!35965 () ListLongMap!1427)

(assert (=> d!18471 (= res!40867 (contains!736 lt!35965 (_1!1092 lt!35806)))))

(declare-fun lt!35964 () List!1494)

(assert (=> d!18471 (= lt!35965 (ListLongMap!1428 lt!35964))))

(declare-fun lt!35966 () Unit!2237)

(declare-fun lt!35967 () Unit!2237)

(assert (=> d!18471 (= lt!35966 lt!35967)))

(assert (=> d!18471 (= (getValueByKey!138 lt!35964 (_1!1092 lt!35806)) (Some!143 (_2!1092 lt!35806)))))

(assert (=> d!18471 (= lt!35967 (lemmaContainsTupThenGetReturnValue!55 lt!35964 (_1!1092 lt!35806) (_2!1092 lt!35806)))))

(assert (=> d!18471 (= lt!35964 (insertStrictlySorted!58 (toList!729 lt!35790) (_1!1092 lt!35806) (_2!1092 lt!35806)))))

(assert (=> d!18471 (= (+!100 lt!35790 lt!35806) lt!35965)))

(declare-fun b!77970 () Bool)

(declare-fun res!40868 () Bool)

(assert (=> b!77970 (=> (not res!40868) (not e!51000))))

(assert (=> b!77970 (= res!40868 (= (getValueByKey!138 (toList!729 lt!35965) (_1!1092 lt!35806)) (Some!143 (_2!1092 lt!35806))))))

(declare-fun b!77971 () Bool)

(assert (=> b!77971 (= e!51000 (contains!737 (toList!729 lt!35965) lt!35806))))

(assert (= (and d!18471 res!40867) b!77970))

(assert (= (and b!77970 res!40868) b!77971))

(declare-fun m!78167 () Bool)

(assert (=> d!18471 m!78167))

(declare-fun m!78169 () Bool)

(assert (=> d!18471 m!78169))

(declare-fun m!78171 () Bool)

(assert (=> d!18471 m!78171))

(declare-fun m!78173 () Bool)

(assert (=> d!18471 m!78173))

(declare-fun m!78175 () Bool)

(assert (=> b!77970 m!78175))

(declare-fun m!78177 () Bool)

(assert (=> b!77971 m!78177))

(assert (=> b!77779 d!18471))

(declare-fun d!18473 () Bool)

(assert (=> d!18473 (= (validMask!0 (mask!6267 (v!2594 (underlying!280 thiss!992)))) (and (or (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000001111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000011111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000001111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000011111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000001111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000011111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000001111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000011111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000001111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000011111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000001111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000011111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000111111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000001111111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000011111111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000111111111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000001111111111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000011111111111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000111111111111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00001111111111111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00011111111111111111111111111111) (= (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!77779 d!18473))

(declare-fun d!18475 () Bool)

(declare-fun e!51001 () Bool)

(assert (=> d!18475 e!51001))

(declare-fun res!40869 () Bool)

(assert (=> d!18475 (=> (not res!40869) (not e!51001))))

(declare-fun lt!35969 () ListLongMap!1427)

(assert (=> d!18475 (= res!40869 (contains!736 lt!35969 (_1!1092 lt!35792)))))

(declare-fun lt!35968 () List!1494)

(assert (=> d!18475 (= lt!35969 (ListLongMap!1428 lt!35968))))

(declare-fun lt!35970 () Unit!2237)

(declare-fun lt!35971 () Unit!2237)

(assert (=> d!18475 (= lt!35970 lt!35971)))

(assert (=> d!18475 (= (getValueByKey!138 lt!35968 (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792)))))

(assert (=> d!18475 (= lt!35971 (lemmaContainsTupThenGetReturnValue!55 lt!35968 (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(assert (=> d!18475 (= lt!35968 (insertStrictlySorted!58 (toList!729 lt!35804) (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(assert (=> d!18475 (= (+!100 lt!35804 lt!35792) lt!35969)))

(declare-fun b!77972 () Bool)

(declare-fun res!40870 () Bool)

(assert (=> b!77972 (=> (not res!40870) (not e!51001))))

(assert (=> b!77972 (= res!40870 (= (getValueByKey!138 (toList!729 lt!35969) (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792))))))

(declare-fun b!77973 () Bool)

(assert (=> b!77973 (= e!51001 (contains!737 (toList!729 lt!35969) lt!35792))))

(assert (= (and d!18475 res!40869) b!77972))

(assert (= (and b!77972 res!40870) b!77973))

(declare-fun m!78179 () Bool)

(assert (=> d!18475 m!78179))

(declare-fun m!78181 () Bool)

(assert (=> d!18475 m!78181))

(declare-fun m!78183 () Bool)

(assert (=> d!18475 m!78183))

(declare-fun m!78185 () Bool)

(assert (=> d!18475 m!78185))

(declare-fun m!78187 () Bool)

(assert (=> b!77972 m!78187))

(declare-fun m!78189 () Bool)

(assert (=> b!77973 m!78189))

(assert (=> b!77779 d!18475))

(declare-fun d!18477 () Bool)

(declare-fun e!51002 () Bool)

(assert (=> d!18477 e!51002))

(declare-fun res!40871 () Bool)

(assert (=> d!18477 (=> (not res!40871) (not e!51002))))

(declare-fun lt!35973 () ListLongMap!1427)

(assert (=> d!18477 (= res!40871 (contains!736 lt!35973 (_1!1092 lt!35789)))))

(declare-fun lt!35972 () List!1494)

(assert (=> d!18477 (= lt!35973 (ListLongMap!1428 lt!35972))))

(declare-fun lt!35974 () Unit!2237)

(declare-fun lt!35975 () Unit!2237)

(assert (=> d!18477 (= lt!35974 lt!35975)))

(assert (=> d!18477 (= (getValueByKey!138 lt!35972 (_1!1092 lt!35789)) (Some!143 (_2!1092 lt!35789)))))

(assert (=> d!18477 (= lt!35975 (lemmaContainsTupThenGetReturnValue!55 lt!35972 (_1!1092 lt!35789) (_2!1092 lt!35789)))))

(assert (=> d!18477 (= lt!35972 (insertStrictlySorted!58 (toList!729 lt!35793) (_1!1092 lt!35789) (_2!1092 lt!35789)))))

(assert (=> d!18477 (= (+!100 lt!35793 lt!35789) lt!35973)))

(declare-fun b!77974 () Bool)

(declare-fun res!40872 () Bool)

(assert (=> b!77974 (=> (not res!40872) (not e!51002))))

(assert (=> b!77974 (= res!40872 (= (getValueByKey!138 (toList!729 lt!35973) (_1!1092 lt!35789)) (Some!143 (_2!1092 lt!35789))))))

(declare-fun b!77975 () Bool)

(assert (=> b!77975 (= e!51002 (contains!737 (toList!729 lt!35973) lt!35789))))

(assert (= (and d!18477 res!40871) b!77974))

(assert (= (and b!77974 res!40872) b!77975))

(declare-fun m!78191 () Bool)

(assert (=> d!18477 m!78191))

(declare-fun m!78193 () Bool)

(assert (=> d!18477 m!78193))

(declare-fun m!78195 () Bool)

(assert (=> d!18477 m!78195))

(declare-fun m!78197 () Bool)

(assert (=> d!18477 m!78197))

(declare-fun m!78199 () Bool)

(assert (=> b!77974 m!78199))

(declare-fun m!78201 () Bool)

(assert (=> b!77975 m!78201))

(assert (=> b!77779 d!18477))

(declare-fun d!18479 () Bool)

(assert (=> d!18479 (not (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35978 () Unit!2237)

(declare-fun choose!68 (array!3957 (_ BitVec 32) (_ BitVec 64) List!1495) Unit!2237)

(assert (=> d!18479 (= lt!35978 (choose!68 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492)))))

(assert (=> d!18479 (bvslt (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!18479 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492)) lt!35978)))

(declare-fun bs!3315 () Bool)

(assert (= bs!3315 d!18479))

(assert (=> bs!3315 m!77885))

(assert (=> bs!3315 m!77905))

(assert (=> bs!3315 m!77885))

(declare-fun m!78203 () Bool)

(assert (=> bs!3315 m!78203))

(assert (=> b!77793 d!18479))

(declare-fun d!18481 () Bool)

(assert (=> d!18481 (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) from!355 Nil!1492)))

(declare-fun lt!35981 () Unit!2237)

(declare-fun choose!39 (array!3957 (_ BitVec 32) (_ BitVec 32)) Unit!2237)

(assert (=> d!18481 (= lt!35981 (choose!39 (_keys!3931 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!18481 (bvslt (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!18481 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000 from!355) lt!35981)))

(declare-fun bs!3316 () Bool)

(assert (= bs!3316 d!18481))

(assert (=> bs!3316 m!77901))

(declare-fun m!78205 () Bool)

(assert (=> bs!3316 m!78205))

(assert (=> b!77793 d!18481))

(declare-fun d!18483 () Bool)

(declare-fun res!40877 () Bool)

(declare-fun e!51007 () Bool)

(assert (=> d!18483 (=> res!40877 e!51007)))

(assert (=> d!18483 (= res!40877 (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!18483 (= (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!51007)))

(declare-fun b!77980 () Bool)

(declare-fun e!51008 () Bool)

(assert (=> b!77980 (= e!51007 e!51008)))

(declare-fun res!40878 () Bool)

(assert (=> b!77980 (=> (not res!40878) (not e!51008))))

(assert (=> b!77980 (= res!40878 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!77981 () Bool)

(assert (=> b!77981 (= e!51008 (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!18483 (not res!40877)) b!77980))

(assert (= (and b!77980 res!40878) b!77981))

(assert (=> d!18483 m!78085))

(assert (=> b!77981 m!77885))

(declare-fun m!78207 () Bool)

(assert (=> b!77981 m!78207))

(assert (=> b!77793 d!18483))

(declare-fun d!18485 () Bool)

(declare-fun e!51011 () Bool)

(assert (=> d!18485 e!51011))

(declare-fun c!11912 () Bool)

(assert (=> d!18485 (= c!11912 (and (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!35984 () Unit!2237)

(declare-fun choose!461 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) (_ BitVec 32) Int) Unit!2237)

(assert (=> d!18485 (= lt!35984 (choose!461 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(assert (=> d!18485 (validMask!0 (mask!6267 (v!2594 (underlying!280 thiss!992))))))

(assert (=> d!18485 (= (lemmaListMapContainsThenArrayContainsFrom!52 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))) lt!35984)))

(declare-fun b!77986 () Bool)

(assert (=> b!77986 (= e!51011 (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!77987 () Bool)

(assert (=> b!77987 (= e!51011 (ite (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!18485 c!11912) b!77986))

(assert (= (and d!18485 (not c!11912)) b!77987))

(assert (=> d!18485 m!77885))

(declare-fun m!78209 () Bool)

(assert (=> d!18485 m!78209))

(assert (=> d!18485 m!77921))

(assert (=> b!77986 m!77885))

(assert (=> b!77986 m!77905))

(assert (=> b!77793 d!18485))

(declare-fun bm!7068 () Bool)

(declare-fun call!7071 () Bool)

(declare-fun c!11915 () Bool)

(assert (=> bm!7068 (= call!7071 (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)))))

(declare-fun b!77999 () Bool)

(declare-fun e!51023 () Bool)

(declare-fun contains!738 (List!1495 (_ BitVec 64)) Bool)

(assert (=> b!77999 (= e!51023 (contains!738 Nil!1492 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!78000 () Bool)

(declare-fun e!51021 () Bool)

(declare-fun e!51020 () Bool)

(assert (=> b!78000 (= e!51021 e!51020)))

(assert (=> b!78000 (= c!11915 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!78001 () Bool)

(declare-fun e!51022 () Bool)

(assert (=> b!78001 (= e!51022 e!51021)))

(declare-fun res!40885 () Bool)

(assert (=> b!78001 (=> (not res!40885) (not e!51021))))

(assert (=> b!78001 (= res!40885 (not e!51023))))

(declare-fun res!40887 () Bool)

(assert (=> b!78001 (=> (not res!40887) (not e!51023))))

(assert (=> b!78001 (= res!40887 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!78002 () Bool)

(assert (=> b!78002 (= e!51020 call!7071)))

(declare-fun d!18487 () Bool)

(declare-fun res!40886 () Bool)

(assert (=> d!18487 (=> res!40886 e!51022)))

(assert (=> d!18487 (= res!40886 (bvsge from!355 (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!18487 (= (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) from!355 Nil!1492) e!51022)))

(declare-fun b!77998 () Bool)

(assert (=> b!77998 (= e!51020 call!7071)))

(assert (= (and d!18487 (not res!40886)) b!78001))

(assert (= (and b!78001 res!40887) b!77999))

(assert (= (and b!78001 res!40885) b!78000))

(assert (= (and b!78000 c!11915) b!78002))

(assert (= (and b!78000 (not c!11915)) b!77998))

(assert (= (or b!78002 b!77998) bm!7068))

(assert (=> bm!7068 m!77885))

(declare-fun m!78211 () Bool)

(assert (=> bm!7068 m!78211))

(assert (=> b!77999 m!77885))

(assert (=> b!77999 m!77885))

(declare-fun m!78213 () Bool)

(assert (=> b!77999 m!78213))

(assert (=> b!78000 m!77885))

(assert (=> b!78000 m!77885))

(declare-fun m!78215 () Bool)

(assert (=> b!78000 m!78215))

(assert (=> b!78001 m!77885))

(assert (=> b!78001 m!77885))

(assert (=> b!78001 m!78215))

(assert (=> b!77793 d!18487))

(declare-fun d!18489 () Bool)

(declare-fun c!11918 () Bool)

(assert (=> d!18489 (= c!11918 ((_ is ValueCellFull!911) (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun e!51026 () V!2993)

(assert (=> d!18489 (= (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) from!355) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51026)))

(declare-fun b!78007 () Bool)

(declare-fun get!1184 (ValueCell!911 V!2993) V!2993)

(assert (=> b!78007 (= e!51026 (get!1184 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) from!355) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78008 () Bool)

(declare-fun get!1185 (ValueCell!911 V!2993) V!2993)

(assert (=> b!78008 (= e!51026 (get!1185 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) from!355) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18489 c!11918) b!78007))

(assert (= (and d!18489 (not c!11918)) b!78008))

(assert (=> b!78007 m!77937))

(assert (=> b!78007 m!77939))

(declare-fun m!78217 () Bool)

(assert (=> b!78007 m!78217))

(assert (=> b!78008 m!77937))

(assert (=> b!78008 m!77939))

(declare-fun m!78219 () Bool)

(assert (=> b!78008 m!78219))

(assert (=> b!77781 d!18489))

(declare-fun d!18491 () Bool)

(assert (=> d!18491 (= (valid!324 thiss!992) (valid!323 (v!2594 (underlying!280 thiss!992))))))

(declare-fun bs!3317 () Bool)

(assert (= bs!3317 d!18491))

(declare-fun m!78221 () Bool)

(assert (=> bs!3317 m!78221))

(assert (=> start!10188 d!18491))

(declare-fun d!18493 () Bool)

(assert (=> d!18493 (= (map!1183 newMap!16) (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun bs!3318 () Bool)

(assert (= bs!3318 d!18493))

(declare-fun m!78223 () Bool)

(assert (=> bs!3318 m!78223))

(assert (=> b!77790 d!18493))

(declare-fun b!78051 () Bool)

(declare-fun e!51059 () ListLongMap!1427)

(declare-fun call!7088 () ListLongMap!1427)

(assert (=> b!78051 (= e!51059 call!7088)))

(declare-fun b!78052 () Bool)

(declare-fun e!51060 () ListLongMap!1427)

(declare-fun call!7091 () ListLongMap!1427)

(assert (=> b!78052 (= e!51060 (+!100 call!7091 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!78054 () Bool)

(declare-fun e!51062 () Bool)

(assert (=> b!78054 (= e!51062 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!7083 () Bool)

(declare-fun call!7090 () Bool)

(declare-fun lt!36049 () ListLongMap!1427)

(assert (=> bm!7083 (= call!7090 (contains!736 lt!36049 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78055 () Bool)

(declare-fun e!51053 () Bool)

(declare-fun e!51064 () Bool)

(assert (=> b!78055 (= e!51053 e!51064)))

(declare-fun c!11931 () Bool)

(assert (=> b!78055 (= c!11931 (not (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78056 () Bool)

(declare-fun e!51056 () Unit!2237)

(declare-fun Unit!2244 () Unit!2237)

(assert (=> b!78056 (= e!51056 Unit!2244)))

(declare-fun b!78057 () Bool)

(declare-fun res!40911 () Bool)

(assert (=> b!78057 (=> (not res!40911) (not e!51053))))

(declare-fun e!51065 () Bool)

(assert (=> b!78057 (= res!40911 e!51065)))

(declare-fun c!11933 () Bool)

(assert (=> b!78057 (= c!11933 (not (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78058 () Bool)

(declare-fun lt!36037 () Unit!2237)

(assert (=> b!78058 (= e!51056 lt!36037)))

(declare-fun lt!36043 () ListLongMap!1427)

(assert (=> b!78058 (= lt!36043 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun lt!36040 () (_ BitVec 64))

(assert (=> b!78058 (= lt!36040 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36041 () (_ BitVec 64))

(assert (=> b!78058 (= lt!36041 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!36050 () Unit!2237)

(declare-fun addStillContains!55 (ListLongMap!1427 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2237)

(assert (=> b!78058 (= lt!36050 (addStillContains!55 lt!36043 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36041))))

(assert (=> b!78058 (contains!736 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36041)))

(declare-fun lt!36029 () Unit!2237)

(assert (=> b!78058 (= lt!36029 lt!36050)))

(declare-fun lt!36039 () ListLongMap!1427)

(assert (=> b!78058 (= lt!36039 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun lt!36046 () (_ BitVec 64))

(assert (=> b!78058 (= lt!36046 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36044 () (_ BitVec 64))

(assert (=> b!78058 (= lt!36044 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!36047 () Unit!2237)

(declare-fun addApplyDifferent!55 (ListLongMap!1427 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2237)

(assert (=> b!78058 (= lt!36047 (addApplyDifferent!55 lt!36039 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36044))))

(assert (=> b!78058 (= (apply!79 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36044) (apply!79 lt!36039 lt!36044))))

(declare-fun lt!36032 () Unit!2237)

(assert (=> b!78058 (= lt!36032 lt!36047)))

(declare-fun lt!36042 () ListLongMap!1427)

(assert (=> b!78058 (= lt!36042 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun lt!36045 () (_ BitVec 64))

(assert (=> b!78058 (= lt!36045 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36035 () (_ BitVec 64))

(assert (=> b!78058 (= lt!36035 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!36030 () Unit!2237)

(assert (=> b!78058 (= lt!36030 (addApplyDifferent!55 lt!36042 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36035))))

(assert (=> b!78058 (= (apply!79 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36035) (apply!79 lt!36042 lt!36035))))

(declare-fun lt!36048 () Unit!2237)

(assert (=> b!78058 (= lt!36048 lt!36030)))

(declare-fun lt!36036 () ListLongMap!1427)

(assert (=> b!78058 (= lt!36036 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun lt!36034 () (_ BitVec 64))

(assert (=> b!78058 (= lt!36034 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36033 () (_ BitVec 64))

(assert (=> b!78058 (= lt!36033 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!78058 (= lt!36037 (addApplyDifferent!55 lt!36036 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36033))))

(assert (=> b!78058 (= (apply!79 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36033) (apply!79 lt!36036 lt!36033))))

(declare-fun b!78059 () Bool)

(declare-fun e!51054 () Bool)

(assert (=> b!78059 (= e!51064 e!51054)))

(declare-fun res!40908 () Bool)

(assert (=> b!78059 (= res!40908 call!7090)))

(assert (=> b!78059 (=> (not res!40908) (not e!51054))))

(declare-fun bm!7084 () Bool)

(declare-fun call!7092 () ListLongMap!1427)

(assert (=> bm!7084 (= call!7088 call!7092)))

(declare-fun bm!7085 () Bool)

(declare-fun call!7089 () ListLongMap!1427)

(assert (=> bm!7085 (= call!7089 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun b!78060 () Bool)

(assert (=> b!78060 (= e!51064 (not call!7090))))

(declare-fun b!78061 () Bool)

(declare-fun call!7086 () Bool)

(assert (=> b!78061 (= e!51065 (not call!7086))))

(declare-fun c!11934 () Bool)

(declare-fun bm!7086 () Bool)

(declare-fun c!11936 () Bool)

(assert (=> bm!7086 (= call!7091 (+!100 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088)) (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!78062 () Bool)

(assert (=> b!78062 (= e!51054 (= (apply!79 lt!36049 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun b!78063 () Bool)

(declare-fun res!40910 () Bool)

(assert (=> b!78063 (=> (not res!40910) (not e!51053))))

(declare-fun e!51061 () Bool)

(assert (=> b!78063 (= res!40910 e!51061)))

(declare-fun res!40912 () Bool)

(assert (=> b!78063 (=> res!40912 e!51061)))

(declare-fun e!51057 () Bool)

(assert (=> b!78063 (= res!40912 (not e!51057))))

(declare-fun res!40909 () Bool)

(assert (=> b!78063 (=> (not res!40909) (not e!51057))))

(assert (=> b!78063 (= res!40909 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!78064 () Bool)

(assert (=> b!78064 (= e!51057 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!18495 () Bool)

(assert (=> d!18495 e!51053))

(declare-fun res!40914 () Bool)

(assert (=> d!18495 (=> (not res!40914) (not e!51053))))

(assert (=> d!18495 (= res!40914 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun lt!36038 () ListLongMap!1427)

(assert (=> d!18495 (= lt!36049 lt!36038)))

(declare-fun lt!36031 () Unit!2237)

(assert (=> d!18495 (= lt!36031 e!51056)))

(declare-fun c!11935 () Bool)

(assert (=> d!18495 (= c!11935 e!51062)))

(declare-fun res!40913 () Bool)

(assert (=> d!18495 (=> (not res!40913) (not e!51062))))

(assert (=> d!18495 (= res!40913 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!18495 (= lt!36038 e!51060)))

(assert (=> d!18495 (= c!11936 (and (not (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18495 (validMask!0 (mask!6267 (v!2594 (underlying!280 thiss!992))))))

(assert (=> d!18495 (= (getCurrentListMap!425 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))) lt!36049)))

(declare-fun b!78053 () Bool)

(declare-fun e!51058 () ListLongMap!1427)

(assert (=> b!78053 (= e!51060 e!51058)))

(assert (=> b!78053 (= c!11934 (and (not (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78065 () Bool)

(declare-fun call!7087 () ListLongMap!1427)

(assert (=> b!78065 (= e!51059 call!7087)))

(declare-fun bm!7087 () Bool)

(assert (=> bm!7087 (= call!7086 (contains!736 lt!36049 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7088 () Bool)

(assert (=> bm!7088 (= call!7087 call!7091)))

(declare-fun b!78066 () Bool)

(declare-fun c!11932 () Bool)

(assert (=> b!78066 (= c!11932 (and (not (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78066 (= e!51058 e!51059)))

(declare-fun b!78067 () Bool)

(declare-fun e!51055 () Bool)

(assert (=> b!78067 (= e!51055 (= (apply!79 lt!36049 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun b!78068 () Bool)

(assert (=> b!78068 (= e!51065 e!51055)))

(declare-fun res!40907 () Bool)

(assert (=> b!78068 (= res!40907 call!7086)))

(assert (=> b!78068 (=> (not res!40907) (not e!51055))))

(declare-fun b!78069 () Bool)

(declare-fun e!51063 () Bool)

(assert (=> b!78069 (= e!51061 e!51063)))

(declare-fun res!40906 () Bool)

(assert (=> b!78069 (=> (not res!40906) (not e!51063))))

(assert (=> b!78069 (= res!40906 (contains!736 lt!36049 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78069 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!78070 () Bool)

(assert (=> b!78070 (= e!51063 (= (apply!79 lt!36049 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78070 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2128 (_values!2254 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> b!78070 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!78071 () Bool)

(assert (=> b!78071 (= e!51058 call!7087)))

(declare-fun bm!7089 () Bool)

(assert (=> bm!7089 (= call!7092 call!7089)))

(assert (= (and d!18495 c!11936) b!78052))

(assert (= (and d!18495 (not c!11936)) b!78053))

(assert (= (and b!78053 c!11934) b!78071))

(assert (= (and b!78053 (not c!11934)) b!78066))

(assert (= (and b!78066 c!11932) b!78065))

(assert (= (and b!78066 (not c!11932)) b!78051))

(assert (= (or b!78065 b!78051) bm!7084))

(assert (= (or b!78071 bm!7084) bm!7089))

(assert (= (or b!78071 b!78065) bm!7088))

(assert (= (or b!78052 bm!7089) bm!7085))

(assert (= (or b!78052 bm!7088) bm!7086))

(assert (= (and d!18495 res!40913) b!78054))

(assert (= (and d!18495 c!11935) b!78058))

(assert (= (and d!18495 (not c!11935)) b!78056))

(assert (= (and d!18495 res!40914) b!78063))

(assert (= (and b!78063 res!40909) b!78064))

(assert (= (and b!78063 (not res!40912)) b!78069))

(assert (= (and b!78069 res!40906) b!78070))

(assert (= (and b!78063 res!40910) b!78057))

(assert (= (and b!78057 c!11933) b!78068))

(assert (= (and b!78057 (not c!11933)) b!78061))

(assert (= (and b!78068 res!40907) b!78067))

(assert (= (or b!78068 b!78061) bm!7087))

(assert (= (and b!78057 res!40911) b!78055))

(assert (= (and b!78055 c!11931) b!78059))

(assert (= (and b!78055 (not c!11931)) b!78060))

(assert (= (and b!78059 res!40908) b!78062))

(assert (= (or b!78059 b!78060) bm!7083))

(declare-fun b_lambda!3505 () Bool)

(assert (=> (not b_lambda!3505) (not b!78070)))

(assert (=> b!78070 t!5129))

(declare-fun b_and!4817 () Bool)

(assert (= b_and!4813 (and (=> t!5129 result!2801) b_and!4817)))

(assert (=> b!78070 t!5131))

(declare-fun b_and!4819 () Bool)

(assert (= b_and!4815 (and (=> t!5131 result!2805) b_and!4819)))

(assert (=> b!78070 m!78103))

(assert (=> b!78070 m!77939))

(assert (=> b!78070 m!78105))

(assert (=> b!78070 m!78085))

(assert (=> b!78070 m!78103))

(assert (=> b!78070 m!78085))

(declare-fun m!78225 () Bool)

(assert (=> b!78070 m!78225))

(assert (=> b!78070 m!77939))

(assert (=> d!18495 m!77921))

(declare-fun m!78227 () Bool)

(assert (=> bm!7086 m!78227))

(assert (=> b!78069 m!78085))

(assert (=> b!78069 m!78085))

(declare-fun m!78229 () Bool)

(assert (=> b!78069 m!78229))

(assert (=> bm!7085 m!77935))

(assert (=> b!78064 m!78085))

(assert (=> b!78064 m!78085))

(assert (=> b!78064 m!78091))

(assert (=> b!78054 m!78085))

(assert (=> b!78054 m!78085))

(assert (=> b!78054 m!78091))

(declare-fun m!78231 () Bool)

(assert (=> b!78058 m!78231))

(declare-fun m!78233 () Bool)

(assert (=> b!78058 m!78233))

(declare-fun m!78235 () Bool)

(assert (=> b!78058 m!78235))

(declare-fun m!78237 () Bool)

(assert (=> b!78058 m!78237))

(declare-fun m!78239 () Bool)

(assert (=> b!78058 m!78239))

(declare-fun m!78241 () Bool)

(assert (=> b!78058 m!78241))

(declare-fun m!78243 () Bool)

(assert (=> b!78058 m!78243))

(declare-fun m!78245 () Bool)

(assert (=> b!78058 m!78245))

(declare-fun m!78247 () Bool)

(assert (=> b!78058 m!78247))

(declare-fun m!78249 () Bool)

(assert (=> b!78058 m!78249))

(assert (=> b!78058 m!78243))

(declare-fun m!78251 () Bool)

(assert (=> b!78058 m!78251))

(assert (=> b!78058 m!78247))

(declare-fun m!78253 () Bool)

(assert (=> b!78058 m!78253))

(assert (=> b!78058 m!78235))

(declare-fun m!78255 () Bool)

(assert (=> b!78058 m!78255))

(assert (=> b!78058 m!78231))

(assert (=> b!78058 m!77935))

(declare-fun m!78257 () Bool)

(assert (=> b!78058 m!78257))

(declare-fun m!78259 () Bool)

(assert (=> b!78058 m!78259))

(assert (=> b!78058 m!78085))

(declare-fun m!78261 () Bool)

(assert (=> b!78052 m!78261))

(declare-fun m!78263 () Bool)

(assert (=> bm!7083 m!78263))

(declare-fun m!78265 () Bool)

(assert (=> bm!7087 m!78265))

(declare-fun m!78267 () Bool)

(assert (=> b!78062 m!78267))

(declare-fun m!78269 () Bool)

(assert (=> b!78067 m!78269))

(assert (=> b!77790 d!18495))

(declare-fun d!18497 () Bool)

(declare-fun e!51071 () Bool)

(assert (=> d!18497 e!51071))

(declare-fun res!40917 () Bool)

(assert (=> d!18497 (=> res!40917 e!51071)))

(declare-fun lt!36060 () Bool)

(assert (=> d!18497 (= res!40917 (not lt!36060))))

(declare-fun lt!36062 () Bool)

(assert (=> d!18497 (= lt!36060 lt!36062)))

(declare-fun lt!36061 () Unit!2237)

(declare-fun e!51070 () Unit!2237)

(assert (=> d!18497 (= lt!36061 e!51070)))

(declare-fun c!11939 () Bool)

(assert (=> d!18497 (= c!11939 lt!36062)))

(declare-fun containsKey!141 (List!1494 (_ BitVec 64)) Bool)

(assert (=> d!18497 (= lt!36062 (containsKey!141 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!18497 (= (contains!736 lt!35796 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) lt!36060)))

(declare-fun b!78078 () Bool)

(declare-fun lt!36059 () Unit!2237)

(assert (=> b!78078 (= e!51070 lt!36059)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!89 (List!1494 (_ BitVec 64)) Unit!2237)

(assert (=> b!78078 (= lt!36059 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun isDefined!90 (Option!144) Bool)

(assert (=> b!78078 (isDefined!90 (getValueByKey!138 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!78079 () Bool)

(declare-fun Unit!2245 () Unit!2237)

(assert (=> b!78079 (= e!51070 Unit!2245)))

(declare-fun b!78080 () Bool)

(assert (=> b!78080 (= e!51071 (isDefined!90 (getValueByKey!138 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (= (and d!18497 c!11939) b!78078))

(assert (= (and d!18497 (not c!11939)) b!78079))

(assert (= (and d!18497 (not res!40917)) b!78080))

(assert (=> d!18497 m!77885))

(declare-fun m!78271 () Bool)

(assert (=> d!18497 m!78271))

(assert (=> b!78078 m!77885))

(declare-fun m!78273 () Bool)

(assert (=> b!78078 m!78273))

(assert (=> b!78078 m!77885))

(declare-fun m!78275 () Bool)

(assert (=> b!78078 m!78275))

(assert (=> b!78078 m!78275))

(declare-fun m!78277 () Bool)

(assert (=> b!78078 m!78277))

(assert (=> b!78080 m!77885))

(assert (=> b!78080 m!78275))

(assert (=> b!78080 m!78275))

(assert (=> b!78080 m!78277))

(assert (=> b!77782 d!18497))

(declare-fun bm!7138 () Bool)

(declare-fun call!7151 () Bool)

(declare-fun call!7145 () Bool)

(assert (=> bm!7138 (= call!7151 call!7145)))

(declare-fun bm!7139 () Bool)

(declare-fun call!7152 () ListLongMap!1427)

(declare-fun call!7155 () ListLongMap!1427)

(assert (=> bm!7139 (= call!7152 call!7155)))

(declare-fun b!78166 () Bool)

(declare-fun e!51130 () tuple2!2164)

(declare-fun e!51119 () tuple2!2164)

(assert (=> b!78166 (= e!51130 e!51119)))

(declare-datatypes ((SeekEntryResult!234 0))(
  ( (MissingZero!234 (index!3070 (_ BitVec 32))) (Found!234 (index!3071 (_ BitVec 32))) (Intermediate!234 (undefined!1046 Bool) (index!3072 (_ BitVec 32)) (x!11541 (_ BitVec 32))) (Undefined!234) (MissingVacant!234 (index!3073 (_ BitVec 32))) )
))
(declare-fun lt!36137 () SeekEntryResult!234)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3957 (_ BitVec 32)) SeekEntryResult!234)

(assert (=> b!78166 (= lt!36137 (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun c!11973 () Bool)

(assert (=> b!78166 (= c!11973 ((_ is Undefined!234) lt!36137))))

(declare-fun b!78167 () Bool)

(declare-fun res!40947 () Bool)

(declare-fun e!51127 () Bool)

(assert (=> b!78167 (=> (not res!40947) (not e!51127))))

(declare-fun call!7164 () Bool)

(assert (=> b!78167 (= res!40947 call!7164)))

(declare-fun e!51126 () Bool)

(assert (=> b!78167 (= e!51126 e!51127)))

(declare-fun b!78168 () Bool)

(declare-fun c!11974 () Bool)

(declare-fun lt!36125 () SeekEntryResult!234)

(assert (=> b!78168 (= c!11974 ((_ is MissingVacant!234) lt!36125))))

(declare-fun e!51118 () Bool)

(declare-fun e!51124 () Bool)

(assert (=> b!78168 (= e!51118 e!51124)))

(declare-fun b!78169 () Bool)

(declare-fun e!51136 () Bool)

(declare-fun e!51132 () Bool)

(assert (=> b!78169 (= e!51136 e!51132)))

(declare-fun call!7148 () ListLongMap!1427)

(declare-fun res!40950 () Bool)

(assert (=> b!78169 (= res!40950 (contains!736 call!7148 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> b!78169 (=> (not res!40950) (not e!51132))))

(declare-fun b!78170 () Bool)

(declare-fun e!51117 () tuple2!2164)

(declare-fun lt!36134 () tuple2!2164)

(assert (=> b!78170 (= e!51117 (tuple2!2165 (_1!1093 lt!36134) (_2!1093 lt!36134)))))

(declare-fun call!7162 () tuple2!2164)

(assert (=> b!78170 (= lt!36134 call!7162)))

(declare-fun b!78171 () Bool)

(declare-fun e!51131 () Bool)

(declare-fun lt!36143 () SeekEntryResult!234)

(assert (=> b!78171 (= e!51131 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36143)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun bm!7140 () Bool)

(declare-fun call!7163 () Bool)

(assert (=> bm!7140 (= call!7163 call!7145)))

(declare-fun bm!7141 () Bool)

(declare-fun call!7141 () ListLongMap!1427)

(declare-fun call!7154 () ListLongMap!1427)

(assert (=> bm!7141 (= call!7141 call!7154)))

(declare-fun b!78172 () Bool)

(declare-fun e!51135 () Unit!2237)

(declare-fun Unit!2246 () Unit!2237)

(assert (=> b!78172 (= e!51135 Unit!2246)))

(declare-fun lt!36135 () Unit!2237)

(declare-fun call!7144 () Unit!2237)

(assert (=> b!78172 (= lt!36135 call!7144)))

(declare-fun lt!36138 () SeekEntryResult!234)

(declare-fun call!7156 () SeekEntryResult!234)

(assert (=> b!78172 (= lt!36138 call!7156)))

(declare-fun res!40959 () Bool)

(assert (=> b!78172 (= res!40959 ((_ is Found!234) lt!36138))))

(declare-fun e!51134 () Bool)

(assert (=> b!78172 (=> (not res!40959) (not e!51134))))

(assert (=> b!78172 e!51134))

(declare-fun lt!36126 () Unit!2237)

(assert (=> b!78172 (= lt!36126 lt!36135)))

(assert (=> b!78172 false))

(declare-fun b!78173 () Bool)

(declare-fun e!51120 () Bool)

(assert (=> b!78173 (= e!51120 e!51136)))

(declare-fun c!11978 () Bool)

(declare-fun lt!36122 () tuple2!2164)

(assert (=> b!78173 (= c!11978 (_1!1093 lt!36122))))

(declare-fun b!78174 () Bool)

(declare-fun res!40951 () Bool)

(assert (=> b!78174 (= res!40951 call!7163)))

(assert (=> b!78174 (=> (not res!40951) (not e!51134))))

(declare-fun b!78175 () Bool)

(assert (=> b!78175 (= e!51124 ((_ is Undefined!234) lt!36125))))

(declare-fun b!78176 () Bool)

(declare-fun res!40952 () Bool)

(declare-fun lt!36121 () SeekEntryResult!234)

(assert (=> b!78176 (= res!40952 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3073 lt!36121)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51129 () Bool)

(assert (=> b!78176 (=> (not res!40952) (not e!51129))))

(declare-fun b!78177 () Bool)

(declare-fun e!51137 () Bool)

(declare-fun call!7161 () Bool)

(assert (=> b!78177 (= e!51137 (not call!7161))))

(declare-fun b!78178 () Bool)

(declare-fun e!51123 () ListLongMap!1427)

(assert (=> b!78178 (= e!51123 call!7141)))

(declare-fun bm!7142 () Bool)

(declare-fun call!7142 () ListLongMap!1427)

(declare-fun call!7159 () ListLongMap!1427)

(assert (=> bm!7142 (= call!7142 call!7159)))

(declare-fun b!78179 () Bool)

(declare-fun call!7160 () Bool)

(assert (=> b!78179 (= e!51129 (not call!7160))))

(declare-fun b!78180 () Bool)

(declare-fun res!40957 () Bool)

(assert (=> b!78180 (=> (not res!40957) (not e!51137))))

(assert (=> b!78180 (= res!40957 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3070 lt!36125)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78181 () Bool)

(assert (=> b!78181 (= e!51127 (not call!7160))))

(declare-fun bm!7143 () Bool)

(assert (=> bm!7143 (= call!7148 (map!1183 (_2!1093 lt!36122)))))

(declare-fun b!78182 () Bool)

(declare-fun e!51121 () Unit!2237)

(declare-fun lt!36141 () Unit!2237)

(assert (=> b!78182 (= e!51121 lt!36141)))

(assert (=> b!78182 (= lt!36141 call!7144)))

(declare-fun call!7150 () SeekEntryResult!234)

(assert (=> b!78182 (= lt!36143 call!7150)))

(declare-fun res!40955 () Bool)

(assert (=> b!78182 (= res!40955 ((_ is Found!234) lt!36143))))

(assert (=> b!78182 (=> (not res!40955) (not e!51131))))

(assert (=> b!78182 e!51131))

(declare-fun bm!7144 () Bool)

(declare-fun call!7143 () Bool)

(assert (=> bm!7144 (= call!7143 call!7163)))

(declare-fun b!78183 () Bool)

(declare-fun res!40949 () Bool)

(assert (=> b!78183 (= res!40949 call!7151)))

(assert (=> b!78183 (=> (not res!40949) (not e!51131))))

(declare-fun b!78184 () Bool)

(declare-fun c!11976 () Bool)

(assert (=> b!78184 (= c!11976 ((_ is MissingVacant!234) lt!36121))))

(declare-fun e!51133 () Bool)

(assert (=> b!78184 (= e!51126 e!51133)))

(declare-fun b!78185 () Bool)

(declare-fun lt!36119 () Unit!2237)

(assert (=> b!78185 (= e!51135 lt!36119)))

(declare-fun call!7158 () Unit!2237)

(assert (=> b!78185 (= lt!36119 call!7158)))

(assert (=> b!78185 (= lt!36125 call!7156)))

(declare-fun c!11980 () Bool)

(assert (=> b!78185 (= c!11980 ((_ is MissingZero!234) lt!36125))))

(assert (=> b!78185 e!51118))

(declare-fun b!78186 () Bool)

(declare-fun res!40956 () Bool)

(assert (=> b!78186 (=> (not res!40956) (not e!51127))))

(assert (=> b!78186 (= res!40956 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3070 lt!36121)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7145 () Bool)

(declare-fun call!7149 () Bool)

(assert (=> bm!7145 (= call!7161 call!7149)))

(declare-fun bm!7146 () Bool)

(declare-fun c!11975 () Bool)

(declare-fun c!11979 () Bool)

(declare-fun c!11970 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7146 (= call!7145 (inRange!0 (ite c!11973 (ite c!11979 (index!3071 lt!36138) (ite c!11980 (index!3070 lt!36125) (index!3073 lt!36125))) (ite c!11970 (index!3071 lt!36143) (ite c!11975 (index!3070 lt!36121) (index!3073 lt!36121)))) (mask!6267 newMap!16)))))

(declare-fun b!78187 () Bool)

(declare-fun lt!36130 () Unit!2237)

(declare-fun lt!36132 () Unit!2237)

(assert (=> b!78187 (= lt!36130 lt!36132)))

(declare-fun call!7147 () ListLongMap!1427)

(assert (=> b!78187 (= call!7142 call!7147)))

(declare-fun lt!36142 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 V!2993 Int) Unit!2237)

(assert (=> b!78187 (= lt!36132 (lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) lt!36142 (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) lt!35794 (defaultEntry!2271 newMap!16)))))

(assert (=> b!78187 (= lt!36142 (bvor (extraKeys!2122 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!51122 () tuple2!2164)

(assert (=> b!78187 (= e!51122 (tuple2!2165 true (LongMapFixedSize!731 (defaultEntry!2271 newMap!16) (mask!6267 newMap!16) (bvor (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) (zeroValue!2169 newMap!16) lt!35794 (_size!414 newMap!16) (_keys!3931 newMap!16) (_values!2254 newMap!16) (_vacant!414 newMap!16))))))

(declare-fun b!78188 () Bool)

(declare-fun e!51116 () Bool)

(assert (=> b!78188 (= e!51116 (not call!7161))))

(declare-fun b!78189 () Bool)

(declare-fun lt!36123 () tuple2!2164)

(assert (=> b!78189 (= lt!36123 call!7162)))

(declare-fun e!51128 () tuple2!2164)

(assert (=> b!78189 (= e!51128 (tuple2!2165 (_1!1093 lt!36123) (_2!1093 lt!36123)))))

(declare-fun b!78190 () Bool)

(declare-fun call!7153 () ListLongMap!1427)

(assert (=> b!78190 (= e!51132 (= call!7148 (+!100 call!7153 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun bm!7147 () Bool)

(assert (=> bm!7147 (= call!7164 call!7151)))

(declare-fun b!78191 () Bool)

(declare-fun Unit!2247 () Unit!2237)

(assert (=> b!78191 (= e!51121 Unit!2247)))

(declare-fun lt!36124 () Unit!2237)

(assert (=> b!78191 (= lt!36124 call!7158)))

(assert (=> b!78191 (= lt!36121 call!7150)))

(assert (=> b!78191 (= c!11975 ((_ is MissingZero!234) lt!36121))))

(assert (=> b!78191 e!51126))

(declare-fun lt!36133 () Unit!2237)

(assert (=> b!78191 (= lt!36133 lt!36124)))

(assert (=> b!78191 false))

(declare-fun b!78192 () Bool)

(assert (=> b!78192 (= e!51133 e!51129)))

(declare-fun res!40958 () Bool)

(assert (=> b!78192 (= res!40958 call!7164)))

(assert (=> b!78192 (=> (not res!40958) (not e!51129))))

(declare-fun b!78193 () Bool)

(assert (=> b!78193 (= e!51136 (= call!7148 call!7153))))

(declare-fun bm!7148 () Bool)

(declare-fun call!7157 () SeekEntryResult!234)

(assert (=> bm!7148 (= call!7150 call!7157)))

(declare-fun b!78194 () Bool)

(declare-fun lt!36139 () Unit!2237)

(declare-fun lt!36118 () Unit!2237)

(assert (=> b!78194 (= lt!36139 lt!36118)))

(assert (=> b!78194 (contains!736 call!7155 (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137)))))

(declare-fun lt!36131 () array!3959)

(declare-fun lemmaValidKeyInArrayIsInListMap!88 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) Int) Unit!2237)

(assert (=> b!78194 (= lt!36118 (lemmaValidKeyInArrayIsInListMap!88 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3071 lt!36137) (defaultEntry!2271 newMap!16)))))

(assert (=> b!78194 (= lt!36131 (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))))

(declare-fun lt!36120 () Unit!2237)

(declare-fun lt!36129 () Unit!2237)

(assert (=> b!78194 (= lt!36120 lt!36129)))

(assert (=> b!78194 (= call!7159 call!7141)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) (_ BitVec 64) V!2993 Int) Unit!2237)

(assert (=> b!78194 (= lt!36129 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3071 lt!36137) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36117 () Unit!2237)

(assert (=> b!78194 (= lt!36117 e!51121)))

(declare-fun call!7146 () Bool)

(assert (=> b!78194 (= c!11970 call!7146)))

(assert (=> b!78194 (= e!51128 (tuple2!2165 true (LongMapFixedSize!731 (defaultEntry!2271 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (_size!414 newMap!16) (_keys!3931 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (_vacant!414 newMap!16))))))

(declare-fun b!78195 () Bool)

(declare-fun res!40948 () Bool)

(assert (=> b!78195 (= res!40948 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3073 lt!36125)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78195 (=> (not res!40948) (not e!51116))))

(declare-fun b!78196 () Bool)

(assert (=> b!78196 (= e!51123 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun bm!7149 () Bool)

(assert (=> bm!7149 (= call!7156 call!7157)))

(declare-fun bm!7150 () Bool)

(assert (=> bm!7150 (= call!7147 call!7154)))

(declare-fun b!78165 () Bool)

(assert (=> b!78165 (= e!51124 e!51116)))

(declare-fun res!40953 () Bool)

(assert (=> b!78165 (= res!40953 call!7143)))

(assert (=> b!78165 (=> (not res!40953) (not e!51116))))

(declare-fun d!18499 () Bool)

(assert (=> d!18499 e!51120))

(declare-fun res!40954 () Bool)

(assert (=> d!18499 (=> (not res!40954) (not e!51120))))

(assert (=> d!18499 (= res!40954 (valid!323 (_2!1093 lt!36122)))))

(assert (=> d!18499 (= lt!36122 e!51130)))

(declare-fun c!11968 () Bool)

(assert (=> d!18499 (= c!11968 (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvneg (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (=> d!18499 (valid!323 newMap!16)))

(assert (=> d!18499 (= (update!118 newMap!16 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794) lt!36122)))

(declare-fun e!51125 () ListLongMap!1427)

(declare-fun bm!7151 () Bool)

(declare-fun c!11972 () Bool)

(assert (=> bm!7151 (= call!7159 (+!100 e!51125 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun c!11977 () Bool)

(assert (=> bm!7151 (= c!11977 c!11968)))

(declare-fun b!78197 () Bool)

(assert (=> b!78197 (= e!51125 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78198 () Bool)

(declare-fun c!11981 () Bool)

(assert (=> b!78198 (= c!11981 ((_ is MissingVacant!234) lt!36137))))

(assert (=> b!78198 (= e!51119 e!51117)))

(declare-fun b!78199 () Bool)

(declare-fun lt!36136 () Unit!2237)

(declare-fun lt!36127 () Unit!2237)

(assert (=> b!78199 (= lt!36136 lt!36127)))

(assert (=> b!78199 (= call!7142 call!7147)))

(declare-fun lt!36140 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!28 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 V!2993 Int) Unit!2237)

(assert (=> b!78199 (= lt!36127 (lemmaChangeZeroKeyThenAddPairToListMap!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) lt!36140 (zeroValue!2169 newMap!16) lt!35794 (minValue!2169 newMap!16) (defaultEntry!2271 newMap!16)))))

(assert (=> b!78199 (= lt!36140 (bvor (extraKeys!2122 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!78199 (= e!51122 (tuple2!2165 true (LongMapFixedSize!731 (defaultEntry!2271 newMap!16) (mask!6267 newMap!16) (bvor (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) lt!35794 (minValue!2169 newMap!16) (_size!414 newMap!16) (_keys!3931 newMap!16) (_values!2254 newMap!16) (_vacant!414 newMap!16))))))

(declare-fun bm!7152 () Bool)

(declare-fun updateHelperNewKey!28 (LongMapFixedSize!730 (_ BitVec 64) V!2993 (_ BitVec 32)) tuple2!2164)

(assert (=> bm!7152 (= call!7162 (updateHelperNewKey!28 newMap!16 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))))))

(declare-fun bm!7153 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) Int) Unit!2237)

(assert (=> bm!7153 (= call!7144 (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(declare-fun b!78200 () Bool)

(assert (=> b!78200 (= e!51133 ((_ is Undefined!234) lt!36121))))

(declare-fun b!78201 () Bool)

(assert (=> b!78201 (= e!51117 e!51128)))

(declare-fun c!11971 () Bool)

(assert (=> b!78201 (= c!11971 ((_ is MissingZero!234) lt!36137))))

(declare-fun b!78202 () Bool)

(declare-fun res!40946 () Bool)

(assert (=> b!78202 (=> (not res!40946) (not e!51137))))

(assert (=> b!78202 (= res!40946 call!7143)))

(assert (=> b!78202 (= e!51118 e!51137)))

(declare-fun bm!7154 () Bool)

(assert (=> bm!7154 (= call!7154 (getCurrentListMap!425 (_keys!3931 newMap!16) (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) (mask!6267 newMap!16) (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun bm!7155 () Bool)

(assert (=> bm!7155 (= call!7155 (getCurrentListMap!425 (_keys!3931 newMap!16) (ite c!11968 (_values!2254 newMap!16) lt!36131) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78203 () Bool)

(assert (=> b!78203 (= e!51130 e!51122)))

(assert (=> b!78203 (= c!11972 (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7156 () Bool)

(assert (=> bm!7156 (= call!7153 (map!1183 newMap!16))))

(declare-fun bm!7157 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) Int) Unit!2237)

(assert (=> bm!7157 (= call!7158 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(declare-fun b!78204 () Bool)

(declare-fun lt!36128 () Unit!2237)

(assert (=> b!78204 (= lt!36128 e!51135)))

(assert (=> b!78204 (= c!11979 call!7146)))

(assert (=> b!78204 (= e!51119 (tuple2!2165 false newMap!16))))

(declare-fun bm!7158 () Bool)

(declare-fun c!11969 () Bool)

(assert (=> bm!7158 (= c!11969 c!11973)))

(assert (=> bm!7158 (= call!7146 (contains!736 e!51123 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun bm!7159 () Bool)

(assert (=> bm!7159 (= call!7157 (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun bm!7160 () Bool)

(assert (=> bm!7160 (= call!7160 call!7149)))

(declare-fun bm!7161 () Bool)

(assert (=> bm!7161 (= call!7149 (arrayContainsKey!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!78205 () Bool)

(assert (=> b!78205 (= e!51125 call!7152)))

(declare-fun b!78206 () Bool)

(assert (=> b!78206 (= e!51134 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36138)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!18499 c!11968) b!78203))

(assert (= (and d!18499 (not c!11968)) b!78166))

(assert (= (and b!78203 c!11972) b!78199))

(assert (= (and b!78203 (not c!11972)) b!78187))

(assert (= (or b!78199 b!78187) bm!7150))

(assert (= (or b!78199 b!78187) bm!7139))

(assert (= (or b!78199 b!78187) bm!7142))

(assert (= (and b!78166 c!11973) b!78204))

(assert (= (and b!78166 (not c!11973)) b!78198))

(assert (= (and b!78204 c!11979) b!78172))

(assert (= (and b!78204 (not c!11979)) b!78185))

(assert (= (and b!78172 res!40959) b!78174))

(assert (= (and b!78174 res!40951) b!78206))

(assert (= (and b!78185 c!11980) b!78202))

(assert (= (and b!78185 (not c!11980)) b!78168))

(assert (= (and b!78202 res!40946) b!78180))

(assert (= (and b!78180 res!40957) b!78177))

(assert (= (and b!78168 c!11974) b!78165))

(assert (= (and b!78168 (not c!11974)) b!78175))

(assert (= (and b!78165 res!40953) b!78195))

(assert (= (and b!78195 res!40948) b!78188))

(assert (= (or b!78202 b!78165) bm!7144))

(assert (= (or b!78177 b!78188) bm!7145))

(assert (= (or b!78174 bm!7144) bm!7140))

(assert (= (or b!78172 b!78185) bm!7149))

(assert (= (and b!78198 c!11981) b!78170))

(assert (= (and b!78198 (not c!11981)) b!78201))

(assert (= (and b!78201 c!11971) b!78189))

(assert (= (and b!78201 (not c!11971)) b!78194))

(assert (= (and b!78194 c!11970) b!78182))

(assert (= (and b!78194 (not c!11970)) b!78191))

(assert (= (and b!78182 res!40955) b!78183))

(assert (= (and b!78183 res!40949) b!78171))

(assert (= (and b!78191 c!11975) b!78167))

(assert (= (and b!78191 (not c!11975)) b!78184))

(assert (= (and b!78167 res!40947) b!78186))

(assert (= (and b!78186 res!40956) b!78181))

(assert (= (and b!78184 c!11976) b!78192))

(assert (= (and b!78184 (not c!11976)) b!78200))

(assert (= (and b!78192 res!40958) b!78176))

(assert (= (and b!78176 res!40952) b!78179))

(assert (= (or b!78167 b!78192) bm!7147))

(assert (= (or b!78181 b!78179) bm!7160))

(assert (= (or b!78183 bm!7147) bm!7138))

(assert (= (or b!78182 b!78191) bm!7148))

(assert (= (or b!78170 b!78189) bm!7152))

(assert (= (or bm!7149 bm!7148) bm!7159))

(assert (= (or bm!7145 bm!7160) bm!7161))

(assert (= (or b!78185 b!78191) bm!7157))

(assert (= (or b!78172 b!78182) bm!7153))

(assert (= (or b!78204 b!78194) bm!7141))

(assert (= (or bm!7140 bm!7138) bm!7146))

(assert (= (or b!78204 b!78194) bm!7158))

(assert (= (and bm!7158 c!11969) b!78178))

(assert (= (and bm!7158 (not c!11969)) b!78196))

(assert (= (or bm!7150 bm!7141) bm!7154))

(assert (= (or bm!7139 b!78194) bm!7155))

(assert (= (or bm!7142 b!78194) bm!7151))

(assert (= (and bm!7151 c!11977) b!78205))

(assert (= (and bm!7151 (not c!11977)) b!78197))

(assert (= (and d!18499 res!40954) b!78173))

(assert (= (and b!78173 c!11978) b!78169))

(assert (= (and b!78173 (not c!11978)) b!78193))

(assert (= (and b!78169 res!40950) b!78190))

(assert (= (or b!78190 b!78193) bm!7156))

(assert (= (or b!78169 b!78190 b!78193) bm!7143))

(assert (=> b!78196 m!78223))

(declare-fun m!78279 () Bool)

(assert (=> bm!7143 m!78279))

(declare-fun m!78281 () Bool)

(assert (=> b!78187 m!78281))

(declare-fun m!78283 () Bool)

(assert (=> bm!7155 m!78283))

(declare-fun m!78285 () Bool)

(assert (=> b!78199 m!78285))

(declare-fun m!78287 () Bool)

(assert (=> b!78171 m!78287))

(declare-fun m!78289 () Bool)

(assert (=> b!78195 m!78289))

(declare-fun m!78291 () Bool)

(assert (=> b!78206 m!78291))

(declare-fun m!78293 () Bool)

(assert (=> b!78194 m!78293))

(assert (=> b!78194 m!77885))

(declare-fun m!78295 () Bool)

(assert (=> b!78194 m!78295))

(declare-fun m!78297 () Bool)

(assert (=> b!78194 m!78297))

(declare-fun m!78299 () Bool)

(assert (=> b!78194 m!78299))

(assert (=> b!78194 m!78299))

(declare-fun m!78301 () Bool)

(assert (=> b!78194 m!78301))

(declare-fun m!78303 () Bool)

(assert (=> b!78186 m!78303))

(declare-fun m!78305 () Bool)

(assert (=> d!18499 m!78305))

(assert (=> d!18499 m!77891))

(declare-fun m!78307 () Bool)

(assert (=> b!78180 m!78307))

(assert (=> bm!7154 m!78297))

(declare-fun m!78309 () Bool)

(assert (=> bm!7154 m!78309))

(assert (=> bm!7156 m!77895))

(assert (=> b!78197 m!78223))

(assert (=> b!78169 m!77885))

(declare-fun m!78311 () Bool)

(assert (=> b!78169 m!78311))

(declare-fun m!78313 () Bool)

(assert (=> b!78176 m!78313))

(declare-fun m!78315 () Bool)

(assert (=> bm!7146 m!78315))

(assert (=> bm!7161 m!77885))

(declare-fun m!78317 () Bool)

(assert (=> bm!7161 m!78317))

(declare-fun m!78319 () Bool)

(assert (=> bm!7151 m!78319))

(assert (=> bm!7158 m!77885))

(declare-fun m!78321 () Bool)

(assert (=> bm!7158 m!78321))

(assert (=> bm!7157 m!77885))

(declare-fun m!78323 () Bool)

(assert (=> bm!7157 m!78323))

(assert (=> bm!7152 m!77885))

(declare-fun m!78325 () Bool)

(assert (=> bm!7152 m!78325))

(assert (=> b!78166 m!77885))

(declare-fun m!78327 () Bool)

(assert (=> b!78166 m!78327))

(assert (=> bm!7153 m!77885))

(declare-fun m!78329 () Bool)

(assert (=> bm!7153 m!78329))

(assert (=> bm!7159 m!77885))

(assert (=> bm!7159 m!78327))

(declare-fun m!78331 () Bool)

(assert (=> b!78190 m!78331))

(assert (=> b!77782 d!18499))

(declare-fun d!18501 () Bool)

(assert (=> d!18501 (= (array_inv!1161 (_keys!3931 newMap!16)) (bvsge (size!2127 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!77791 d!18501))

(declare-fun d!18503 () Bool)

(assert (=> d!18503 (= (array_inv!1162 (_values!2254 newMap!16)) (bvsge (size!2128 (_values!2254 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!77791 d!18503))

(declare-fun d!18505 () Bool)

(assert (=> d!18505 (= (array_inv!1161 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvsge (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!77786 d!18505))

(declare-fun d!18507 () Bool)

(assert (=> d!18507 (= (array_inv!1162 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvsge (size!2128 (_values!2254 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!77786 d!18507))

(declare-fun d!18509 () Bool)

(declare-fun res!40966 () Bool)

(declare-fun e!51140 () Bool)

(assert (=> d!18509 (=> (not res!40966) (not e!51140))))

(declare-fun simpleValid!55 (LongMapFixedSize!730) Bool)

(assert (=> d!18509 (= res!40966 (simpleValid!55 newMap!16))))

(assert (=> d!18509 (= (valid!323 newMap!16) e!51140)))

(declare-fun b!78213 () Bool)

(declare-fun res!40967 () Bool)

(assert (=> b!78213 (=> (not res!40967) (not e!51140))))

(declare-fun arrayCountValidKeys!0 (array!3957 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!78213 (= res!40967 (= (arrayCountValidKeys!0 (_keys!3931 newMap!16) #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (_size!414 newMap!16)))))

(declare-fun b!78214 () Bool)

(declare-fun res!40968 () Bool)

(assert (=> b!78214 (=> (not res!40968) (not e!51140))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3957 (_ BitVec 32)) Bool)

(assert (=> b!78214 (= res!40968 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun b!78215 () Bool)

(assert (=> b!78215 (= e!51140 (arrayNoDuplicates!0 (_keys!3931 newMap!16) #b00000000000000000000000000000000 Nil!1492))))

(assert (= (and d!18509 res!40966) b!78213))

(assert (= (and b!78213 res!40967) b!78214))

(assert (= (and b!78214 res!40968) b!78215))

(declare-fun m!78333 () Bool)

(assert (=> d!18509 m!78333))

(declare-fun m!78335 () Bool)

(assert (=> b!78213 m!78335))

(declare-fun m!78337 () Bool)

(assert (=> b!78214 m!78337))

(declare-fun m!78339 () Bool)

(assert (=> b!78215 m!78339))

(assert (=> b!77787 d!18509))

(declare-fun mapNonEmpty!3313 () Bool)

(declare-fun mapRes!3313 () Bool)

(declare-fun tp!8785 () Bool)

(declare-fun e!51145 () Bool)

(assert (=> mapNonEmpty!3313 (= mapRes!3313 (and tp!8785 e!51145))))

(declare-fun mapRest!3313 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapValue!3313 () ValueCell!911)

(declare-fun mapKey!3313 () (_ BitVec 32))

(assert (=> mapNonEmpty!3313 (= mapRest!3298 (store mapRest!3313 mapKey!3313 mapValue!3313))))

(declare-fun b!78222 () Bool)

(assert (=> b!78222 (= e!51145 tp_is_empty!2509)))

(declare-fun condMapEmpty!3313 () Bool)

(declare-fun mapDefault!3313 () ValueCell!911)

(assert (=> mapNonEmpty!3298 (= condMapEmpty!3313 (= mapRest!3298 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3313)))))

(declare-fun e!51146 () Bool)

(assert (=> mapNonEmpty!3298 (= tp!8755 (and e!51146 mapRes!3313))))

(declare-fun b!78223 () Bool)

(assert (=> b!78223 (= e!51146 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3313 () Bool)

(assert (=> mapIsEmpty!3313 mapRes!3313))

(assert (= (and mapNonEmpty!3298 condMapEmpty!3313) mapIsEmpty!3313))

(assert (= (and mapNonEmpty!3298 (not condMapEmpty!3313)) mapNonEmpty!3313))

(assert (= (and mapNonEmpty!3313 ((_ is ValueCellFull!911) mapValue!3313)) b!78222))

(assert (= (and mapNonEmpty!3298 ((_ is ValueCellFull!911) mapDefault!3313)) b!78223))

(declare-fun m!78341 () Bool)

(assert (=> mapNonEmpty!3313 m!78341))

(declare-fun mapNonEmpty!3314 () Bool)

(declare-fun mapRes!3314 () Bool)

(declare-fun tp!8786 () Bool)

(declare-fun e!51147 () Bool)

(assert (=> mapNonEmpty!3314 (= mapRes!3314 (and tp!8786 e!51147))))

(declare-fun mapKey!3314 () (_ BitVec 32))

(declare-fun mapValue!3314 () ValueCell!911)

(declare-fun mapRest!3314 () (Array (_ BitVec 32) ValueCell!911))

(assert (=> mapNonEmpty!3314 (= mapRest!3297 (store mapRest!3314 mapKey!3314 mapValue!3314))))

(declare-fun b!78224 () Bool)

(assert (=> b!78224 (= e!51147 tp_is_empty!2509)))

(declare-fun condMapEmpty!3314 () Bool)

(declare-fun mapDefault!3314 () ValueCell!911)

(assert (=> mapNonEmpty!3297 (= condMapEmpty!3314 (= mapRest!3297 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3314)))))

(declare-fun e!51148 () Bool)

(assert (=> mapNonEmpty!3297 (= tp!8758 (and e!51148 mapRes!3314))))

(declare-fun b!78225 () Bool)

(assert (=> b!78225 (= e!51148 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3314 () Bool)

(assert (=> mapIsEmpty!3314 mapRes!3314))

(assert (= (and mapNonEmpty!3297 condMapEmpty!3314) mapIsEmpty!3314))

(assert (= (and mapNonEmpty!3297 (not condMapEmpty!3314)) mapNonEmpty!3314))

(assert (= (and mapNonEmpty!3314 ((_ is ValueCellFull!911) mapValue!3314)) b!78224))

(assert (= (and mapNonEmpty!3297 ((_ is ValueCellFull!911) mapDefault!3314)) b!78225))

(declare-fun m!78343 () Bool)

(assert (=> mapNonEmpty!3314 m!78343))

(declare-fun b_lambda!3507 () Bool)

(assert (= b_lambda!3501 (or (and b!77786 b_free!2185) (and b!77791 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))) b_lambda!3507)))

(declare-fun b_lambda!3509 () Bool)

(assert (= b_lambda!3503 (or (and b!77786 b_free!2185) (and b!77791 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))) b_lambda!3509)))

(declare-fun b_lambda!3511 () Bool)

(assert (= b_lambda!3505 (or (and b!77786 b_free!2185) (and b!77791 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))) b_lambda!3511)))

(check-sat (not b!77967) (not b!78190) (not b_lambda!3511) (not b!78008) (not b!77956) (not b!77964) (not bm!7153) (not b!78166) (not bm!7158) (not b!78214) (not bm!7083) (not b!77971) (not d!18461) (not b!77954) (not b!78080) (not bm!7086) (not b!77963) b_and!4817 (not b!78058) (not b!78196) (not b!77999) (not d!18475) (not b!78194) (not bm!7151) (not b_next!2185) (not b!78215) (not b!77970) (not d!18469) (not bm!7154) (not bm!7152) (not b!77946) (not b!78052) (not bm!7156) (not b!78213) (not b!77951) (not d!18463) (not b_lambda!3507) (not b!77981) (not bm!7146) (not b!77974) (not b!77957) (not mapNonEmpty!3314) (not d!18457) (not d!18509) (not d!18465) b_and!4819 (not bm!7085) (not b!78064) (not b!78197) (not bm!7159) (not b!78000) (not b!77966) (not b!77962) (not b!78169) (not b!78199) (not b!77969) (not bm!7161) (not b!77950) (not b!77973) (not b!78078) (not bm!7065) (not d!18459) (not b!78062) (not d!18481) (not d!18493) (not bm!7087) (not b!77965) tp_is_empty!2509 (not d!18477) (not b!78187) (not bm!7155) (not b_lambda!3509) (not bm!7143) (not b_lambda!3499) (not d!18479) (not d!18495) (not b!77986) (not d!18471) (not b!78054) (not d!18485) (not d!18467) (not b!78067) (not b!77968) (not d!18497) (not b_next!2187) (not d!18499) (not b!77972) (not b!78001) (not b!77948) (not b!78069) (not d!18491) (not bm!7068) (not bm!7157) (not mapNonEmpty!3313) (not b!78007) (not b!78070) (not b!77952) (not b!77975))
(check-sat b_and!4817 b_and!4819 (not b_next!2185) (not b_next!2187))
(get-model)

(declare-fun d!18511 () Bool)

(declare-fun e!51150 () Bool)

(assert (=> d!18511 e!51150))

(declare-fun res!40969 () Bool)

(assert (=> d!18511 (=> res!40969 e!51150)))

(declare-fun lt!36145 () Bool)

(assert (=> d!18511 (= res!40969 (not lt!36145))))

(declare-fun lt!36147 () Bool)

(assert (=> d!18511 (= lt!36145 lt!36147)))

(declare-fun lt!36146 () Unit!2237)

(declare-fun e!51149 () Unit!2237)

(assert (=> d!18511 (= lt!36146 e!51149)))

(declare-fun c!11982 () Bool)

(assert (=> d!18511 (= c!11982 lt!36147)))

(assert (=> d!18511 (= lt!36147 (containsKey!141 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18511 (= (contains!736 lt!36049 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36145)))

(declare-fun b!78226 () Bool)

(declare-fun lt!36144 () Unit!2237)

(assert (=> b!78226 (= e!51149 lt!36144)))

(assert (=> b!78226 (= lt!36144 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78226 (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78227 () Bool)

(declare-fun Unit!2248 () Unit!2237)

(assert (=> b!78227 (= e!51149 Unit!2248)))

(declare-fun b!78228 () Bool)

(assert (=> b!78228 (= e!51150 (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18511 c!11982) b!78226))

(assert (= (and d!18511 (not c!11982)) b!78227))

(assert (= (and d!18511 (not res!40969)) b!78228))

(declare-fun m!78345 () Bool)

(assert (=> d!18511 m!78345))

(declare-fun m!78347 () Bool)

(assert (=> b!78226 m!78347))

(declare-fun m!78349 () Bool)

(assert (=> b!78226 m!78349))

(assert (=> b!78226 m!78349))

(declare-fun m!78351 () Bool)

(assert (=> b!78226 m!78351))

(assert (=> b!78228 m!78349))

(assert (=> b!78228 m!78349))

(assert (=> b!78228 m!78351))

(assert (=> bm!7087 d!18511))

(declare-fun d!18513 () Bool)

(declare-fun isEmpty!333 (List!1494) Bool)

(assert (=> d!18513 (= (isEmpty!332 lt!35932) (isEmpty!333 (toList!729 lt!35932)))))

(declare-fun bs!3319 () Bool)

(assert (= bs!3319 d!18513))

(declare-fun m!78353 () Bool)

(assert (=> bs!3319 m!78353))

(assert (=> b!77956 d!18513))

(declare-fun d!18515 () Bool)

(assert (=> d!18515 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36140 lt!35794 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36150 () Unit!2237)

(declare-fun choose!462 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 V!2993 Int) Unit!2237)

(assert (=> d!18515 (= lt!36150 (choose!462 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) lt!36140 (zeroValue!2169 newMap!16) lt!35794 (minValue!2169 newMap!16) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18515 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18515 (= (lemmaChangeZeroKeyThenAddPairToListMap!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) lt!36140 (zeroValue!2169 newMap!16) lt!35794 (minValue!2169 newMap!16) (defaultEntry!2271 newMap!16)) lt!36150)))

(declare-fun bs!3320 () Bool)

(assert (= bs!3320 d!18515))

(declare-fun m!78355 () Bool)

(assert (=> bs!3320 m!78355))

(declare-fun m!78357 () Bool)

(assert (=> bs!3320 m!78357))

(declare-fun m!78359 () Bool)

(assert (=> bs!3320 m!78359))

(assert (=> bs!3320 m!78223))

(declare-fun m!78361 () Bool)

(assert (=> bs!3320 m!78361))

(assert (=> bs!3320 m!78223))

(assert (=> b!78199 d!18515))

(declare-fun d!18517 () Bool)

(declare-fun e!51152 () Bool)

(assert (=> d!18517 e!51152))

(declare-fun res!40970 () Bool)

(assert (=> d!18517 (=> res!40970 e!51152)))

(declare-fun lt!36152 () Bool)

(assert (=> d!18517 (= res!40970 (not lt!36152))))

(declare-fun lt!36154 () Bool)

(assert (=> d!18517 (= lt!36152 lt!36154)))

(declare-fun lt!36153 () Unit!2237)

(declare-fun e!51151 () Unit!2237)

(assert (=> d!18517 (= lt!36153 e!51151)))

(declare-fun c!11983 () Bool)

(assert (=> d!18517 (= c!11983 lt!36154)))

(assert (=> d!18517 (= lt!36154 (containsKey!141 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!18517 (= (contains!736 call!7148 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) lt!36152)))

(declare-fun b!78229 () Bool)

(declare-fun lt!36151 () Unit!2237)

(assert (=> b!78229 (= e!51151 lt!36151)))

(assert (=> b!78229 (= lt!36151 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> b!78229 (isDefined!90 (getValueByKey!138 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!78230 () Bool)

(declare-fun Unit!2249 () Unit!2237)

(assert (=> b!78230 (= e!51151 Unit!2249)))

(declare-fun b!78231 () Bool)

(assert (=> b!78231 (= e!51152 (isDefined!90 (getValueByKey!138 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (= (and d!18517 c!11983) b!78229))

(assert (= (and d!18517 (not c!11983)) b!78230))

(assert (= (and d!18517 (not res!40970)) b!78231))

(assert (=> d!18517 m!77885))

(declare-fun m!78363 () Bool)

(assert (=> d!18517 m!78363))

(assert (=> b!78229 m!77885))

(declare-fun m!78365 () Bool)

(assert (=> b!78229 m!78365))

(assert (=> b!78229 m!77885))

(declare-fun m!78367 () Bool)

(assert (=> b!78229 m!78367))

(assert (=> b!78229 m!78367))

(declare-fun m!78369 () Bool)

(assert (=> b!78229 m!78369))

(assert (=> b!78231 m!77885))

(assert (=> b!78231 m!78367))

(assert (=> b!78231 m!78367))

(assert (=> b!78231 m!78369))

(assert (=> b!78169 d!18517))

(declare-fun d!18519 () Bool)

(declare-fun res!40971 () Bool)

(declare-fun e!51153 () Bool)

(assert (=> d!18519 (=> (not res!40971) (not e!51153))))

(assert (=> d!18519 (= res!40971 (simpleValid!55 (_2!1093 lt!36122)))))

(assert (=> d!18519 (= (valid!323 (_2!1093 lt!36122)) e!51153)))

(declare-fun b!78232 () Bool)

(declare-fun res!40972 () Bool)

(assert (=> b!78232 (=> (not res!40972) (not e!51153))))

(assert (=> b!78232 (= res!40972 (= (arrayCountValidKeys!0 (_keys!3931 (_2!1093 lt!36122)) #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))) (_size!414 (_2!1093 lt!36122))))))

(declare-fun b!78233 () Bool)

(declare-fun res!40973 () Bool)

(assert (=> b!78233 (=> (not res!40973) (not e!51153))))

(assert (=> b!78233 (= res!40973 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3931 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122))))))

(declare-fun b!78234 () Bool)

(assert (=> b!78234 (= e!51153 (arrayNoDuplicates!0 (_keys!3931 (_2!1093 lt!36122)) #b00000000000000000000000000000000 Nil!1492))))

(assert (= (and d!18519 res!40971) b!78232))

(assert (= (and b!78232 res!40972) b!78233))

(assert (= (and b!78233 res!40973) b!78234))

(declare-fun m!78371 () Bool)

(assert (=> d!18519 m!78371))

(declare-fun m!78373 () Bool)

(assert (=> b!78232 m!78373))

(declare-fun m!78375 () Bool)

(assert (=> b!78233 m!78375))

(declare-fun m!78377 () Bool)

(assert (=> b!78234 m!78377))

(assert (=> d!18499 d!18519))

(assert (=> d!18499 d!18509))

(declare-fun d!18521 () Bool)

(declare-fun e!51156 () Bool)

(assert (=> d!18521 e!51156))

(declare-fun res!40978 () Bool)

(assert (=> d!18521 (=> (not res!40978) (not e!51156))))

(declare-fun lt!36160 () SeekEntryResult!234)

(assert (=> d!18521 (= res!40978 ((_ is Found!234) lt!36160))))

(assert (=> d!18521 (= lt!36160 (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun lt!36159 () Unit!2237)

(declare-fun choose!463 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) Int) Unit!2237)

(assert (=> d!18521 (= lt!36159 (choose!463 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18521 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18521 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)) lt!36159)))

(declare-fun b!78239 () Bool)

(declare-fun res!40979 () Bool)

(assert (=> b!78239 (=> (not res!40979) (not e!51156))))

(assert (=> b!78239 (= res!40979 (inRange!0 (index!3071 lt!36160) (mask!6267 newMap!16)))))

(declare-fun b!78240 () Bool)

(assert (=> b!78240 (= e!51156 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36160)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> b!78240 (and (bvsge (index!3071 lt!36160) #b00000000000000000000000000000000) (bvslt (index!3071 lt!36160) (size!2127 (_keys!3931 newMap!16))))))

(assert (= (and d!18521 res!40978) b!78239))

(assert (= (and b!78239 res!40979) b!78240))

(assert (=> d!18521 m!77885))

(assert (=> d!18521 m!78327))

(assert (=> d!18521 m!77885))

(declare-fun m!78379 () Bool)

(assert (=> d!18521 m!78379))

(assert (=> d!18521 m!78355))

(declare-fun m!78381 () Bool)

(assert (=> b!78239 m!78381))

(declare-fun m!78383 () Bool)

(assert (=> b!78240 m!78383))

(assert (=> bm!7153 d!18521))

(declare-fun d!18523 () Bool)

(declare-fun e!51157 () Bool)

(assert (=> d!18523 e!51157))

(declare-fun res!40980 () Bool)

(assert (=> d!18523 (=> (not res!40980) (not e!51157))))

(declare-fun lt!36162 () ListLongMap!1427)

(assert (=> d!18523 (= res!40980 (contains!736 lt!36162 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36161 () List!1494)

(assert (=> d!18523 (= lt!36162 (ListLongMap!1428 lt!36161))))

(declare-fun lt!36163 () Unit!2237)

(declare-fun lt!36164 () Unit!2237)

(assert (=> d!18523 (= lt!36163 lt!36164)))

(assert (=> d!18523 (= (getValueByKey!138 lt!36161 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18523 (= lt!36164 (lemmaContainsTupThenGetReturnValue!55 lt!36161 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18523 (= lt!36161 (insertStrictlySorted!58 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18523 (= (+!100 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36162)))

(declare-fun b!78241 () Bool)

(declare-fun res!40981 () Bool)

(assert (=> b!78241 (=> (not res!40981) (not e!51157))))

(assert (=> b!78241 (= res!40981 (= (getValueByKey!138 (toList!729 lt!36162) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!78242 () Bool)

(assert (=> b!78242 (= e!51157 (contains!737 (toList!729 lt!36162) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!18523 res!40980) b!78241))

(assert (= (and b!78241 res!40981) b!78242))

(declare-fun m!78385 () Bool)

(assert (=> d!18523 m!78385))

(declare-fun m!78387 () Bool)

(assert (=> d!18523 m!78387))

(declare-fun m!78389 () Bool)

(assert (=> d!18523 m!78389))

(declare-fun m!78391 () Bool)

(assert (=> d!18523 m!78391))

(declare-fun m!78393 () Bool)

(assert (=> b!78241 m!78393))

(declare-fun m!78395 () Bool)

(assert (=> b!78242 m!78395))

(assert (=> d!18463 d!18523))

(declare-fun d!18525 () Bool)

(declare-fun e!51158 () Bool)

(assert (=> d!18525 e!51158))

(declare-fun res!40982 () Bool)

(assert (=> d!18525 (=> (not res!40982) (not e!51158))))

(declare-fun lt!36166 () ListLongMap!1427)

(assert (=> d!18525 (= res!40982 (contains!736 lt!36166 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36165 () List!1494)

(assert (=> d!18525 (= lt!36166 (ListLongMap!1428 lt!36165))))

(declare-fun lt!36167 () Unit!2237)

(declare-fun lt!36168 () Unit!2237)

(assert (=> d!18525 (= lt!36167 lt!36168)))

(assert (=> d!18525 (= (getValueByKey!138 lt!36165 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18525 (= lt!36168 (lemmaContainsTupThenGetReturnValue!55 lt!36165 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18525 (= lt!36165 (insertStrictlySorted!58 (toList!729 lt!35791) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18525 (= (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36166)))

(declare-fun b!78243 () Bool)

(declare-fun res!40983 () Bool)

(assert (=> b!78243 (=> (not res!40983) (not e!51158))))

(assert (=> b!78243 (= res!40983 (= (getValueByKey!138 (toList!729 lt!36166) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!78244 () Bool)

(assert (=> b!78244 (= e!51158 (contains!737 (toList!729 lt!36166) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!18525 res!40982) b!78243))

(assert (= (and b!78243 res!40983) b!78244))

(declare-fun m!78397 () Bool)

(assert (=> d!18525 m!78397))

(declare-fun m!78399 () Bool)

(assert (=> d!18525 m!78399))

(declare-fun m!78401 () Bool)

(assert (=> d!18525 m!78401))

(declare-fun m!78403 () Bool)

(assert (=> d!18525 m!78403))

(declare-fun m!78405 () Bool)

(assert (=> b!78243 m!78405))

(declare-fun m!78407 () Bool)

(assert (=> b!78244 m!78407))

(assert (=> d!18463 d!18525))

(declare-fun d!18527 () Bool)

(declare-fun e!51159 () Bool)

(assert (=> d!18527 e!51159))

(declare-fun res!40984 () Bool)

(assert (=> d!18527 (=> (not res!40984) (not e!51159))))

(declare-fun lt!36170 () ListLongMap!1427)

(assert (=> d!18527 (= res!40984 (contains!736 lt!36170 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36169 () List!1494)

(assert (=> d!18527 (= lt!36170 (ListLongMap!1428 lt!36169))))

(declare-fun lt!36171 () Unit!2237)

(declare-fun lt!36172 () Unit!2237)

(assert (=> d!18527 (= lt!36171 lt!36172)))

(assert (=> d!18527 (= (getValueByKey!138 lt!36169 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18527 (= lt!36172 (lemmaContainsTupThenGetReturnValue!55 lt!36169 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18527 (= lt!36169 (insertStrictlySorted!58 (toList!729 lt!35791) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18527 (= (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36170)))

(declare-fun b!78245 () Bool)

(declare-fun res!40985 () Bool)

(assert (=> b!78245 (=> (not res!40985) (not e!51159))))

(assert (=> b!78245 (= res!40985 (= (getValueByKey!138 (toList!729 lt!36170) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!78246 () Bool)

(assert (=> b!78246 (= e!51159 (contains!737 (toList!729 lt!36170) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!18527 res!40984) b!78245))

(assert (= (and b!78245 res!40985) b!78246))

(declare-fun m!78409 () Bool)

(assert (=> d!18527 m!78409))

(declare-fun m!78411 () Bool)

(assert (=> d!18527 m!78411))

(declare-fun m!78413 () Bool)

(assert (=> d!18527 m!78413))

(declare-fun m!78415 () Bool)

(assert (=> d!18527 m!78415))

(declare-fun m!78417 () Bool)

(assert (=> b!78245 m!78417))

(declare-fun m!78419 () Bool)

(assert (=> b!78246 m!78419))

(assert (=> d!18463 d!18527))

(declare-fun d!18529 () Bool)

(declare-fun e!51160 () Bool)

(assert (=> d!18529 e!51160))

(declare-fun res!40986 () Bool)

(assert (=> d!18529 (=> (not res!40986) (not e!51160))))

(declare-fun lt!36174 () ListLongMap!1427)

(assert (=> d!18529 (= res!40986 (contains!736 lt!36174 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36173 () List!1494)

(assert (=> d!18529 (= lt!36174 (ListLongMap!1428 lt!36173))))

(declare-fun lt!36175 () Unit!2237)

(declare-fun lt!36176 () Unit!2237)

(assert (=> d!18529 (= lt!36175 lt!36176)))

(assert (=> d!18529 (= (getValueByKey!138 lt!36173 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18529 (= lt!36176 (lemmaContainsTupThenGetReturnValue!55 lt!36173 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18529 (= lt!36173 (insertStrictlySorted!58 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18529 (= (+!100 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36174)))

(declare-fun b!78247 () Bool)

(declare-fun res!40987 () Bool)

(assert (=> b!78247 (=> (not res!40987) (not e!51160))))

(assert (=> b!78247 (= res!40987 (= (getValueByKey!138 (toList!729 lt!36174) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!78248 () Bool)

(assert (=> b!78248 (= e!51160 (contains!737 (toList!729 lt!36174) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!18529 res!40986) b!78247))

(assert (= (and b!78247 res!40987) b!78248))

(declare-fun m!78421 () Bool)

(assert (=> d!18529 m!78421))

(declare-fun m!78423 () Bool)

(assert (=> d!18529 m!78423))

(declare-fun m!78425 () Bool)

(assert (=> d!18529 m!78425))

(declare-fun m!78427 () Bool)

(assert (=> d!18529 m!78427))

(declare-fun m!78429 () Bool)

(assert (=> b!78247 m!78429))

(declare-fun m!78431 () Bool)

(assert (=> b!78248 m!78431))

(assert (=> d!18463 d!18529))

(declare-fun d!18531 () Bool)

(assert (=> d!18531 (= (+!100 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (+!100 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (=> d!18531 true))

(declare-fun _$28!130 () Unit!2237)

(assert (=> d!18531 (= (choose!460 lt!35791 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) _$28!130)))

(declare-fun bs!3321 () Bool)

(assert (= bs!3321 d!18531))

(assert (=> bs!3321 m!78121))

(assert (=> bs!3321 m!78121))

(assert (=> bs!3321 m!78123))

(assert (=> bs!3321 m!78125))

(assert (=> bs!3321 m!78125))

(assert (=> bs!3321 m!78129))

(assert (=> d!18463 d!18531))

(declare-fun b!78257 () Bool)

(declare-fun e!51165 () (_ BitVec 32))

(declare-fun call!7167 () (_ BitVec 32))

(assert (=> b!78257 (= e!51165 (bvadd #b00000000000000000000000000000001 call!7167))))

(declare-fun b!78258 () Bool)

(declare-fun e!51166 () (_ BitVec 32))

(assert (=> b!78258 (= e!51166 #b00000000000000000000000000000000)))

(declare-fun bm!7164 () Bool)

(assert (=> bm!7164 (= call!7167 (arrayCountValidKeys!0 (_keys!3931 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78259 () Bool)

(assert (=> b!78259 (= e!51165 call!7167)))

(declare-fun d!18533 () Bool)

(declare-fun lt!36179 () (_ BitVec 32))

(assert (=> d!18533 (and (bvsge lt!36179 #b00000000000000000000000000000000) (bvsle lt!36179 (bvsub (size!2127 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!18533 (= lt!36179 e!51166)))

(declare-fun c!11989 () Bool)

(assert (=> d!18533 (= c!11989 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18533 (and (bvsle #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2127 (_keys!3931 newMap!16)) (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18533 (= (arrayCountValidKeys!0 (_keys!3931 newMap!16) #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) lt!36179)))

(declare-fun b!78260 () Bool)

(assert (=> b!78260 (= e!51166 e!51165)))

(declare-fun c!11988 () Bool)

(assert (=> b!78260 (= c!11988 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!18533 c!11989) b!78258))

(assert (= (and d!18533 (not c!11989)) b!78260))

(assert (= (and b!78260 c!11988) b!78257))

(assert (= (and b!78260 (not c!11988)) b!78259))

(assert (= (or b!78257 b!78259) bm!7164))

(declare-fun m!78433 () Bool)

(assert (=> bm!7164 m!78433))

(declare-fun m!78435 () Bool)

(assert (=> b!78260 m!78435))

(assert (=> b!78260 m!78435))

(declare-fun m!78437 () Bool)

(assert (=> b!78260 m!78437))

(assert (=> b!78213 d!18533))

(declare-fun d!18535 () Bool)

(assert (=> d!18535 (= (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (and (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78001 d!18535))

(declare-fun b!78261 () Bool)

(assert (=> b!78261 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> b!78261 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2128 (_values!2254 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun lt!36180 () ListLongMap!1427)

(declare-fun e!51170 () Bool)

(assert (=> b!78261 (= e!51170 (= (apply!79 lt!36180 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!78262 () Bool)

(declare-fun e!51171 () ListLongMap!1427)

(assert (=> b!78262 (= e!51171 (ListLongMap!1428 Nil!1491))))

(declare-fun bm!7165 () Bool)

(declare-fun call!7168 () ListLongMap!1427)

(assert (=> bm!7165 (= call!7168 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun d!18537 () Bool)

(declare-fun e!51169 () Bool)

(assert (=> d!18537 e!51169))

(declare-fun res!40988 () Bool)

(assert (=> d!18537 (=> (not res!40988) (not e!51169))))

(assert (=> d!18537 (= res!40988 (not (contains!736 lt!36180 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18537 (= lt!36180 e!51171)))

(declare-fun c!11991 () Bool)

(assert (=> d!18537 (= c!11991 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!18537 (validMask!0 (mask!6267 (v!2594 (underlying!280 thiss!992))))))

(assert (=> d!18537 (= (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))) lt!36180)))

(declare-fun b!78263 () Bool)

(declare-fun lt!36184 () Unit!2237)

(declare-fun lt!36182 () Unit!2237)

(assert (=> b!78263 (= lt!36184 lt!36182)))

(declare-fun lt!36183 () (_ BitVec 64))

(declare-fun lt!36185 () ListLongMap!1427)

(declare-fun lt!36181 () (_ BitVec 64))

(declare-fun lt!36186 () V!2993)

(assert (=> b!78263 (not (contains!736 (+!100 lt!36185 (tuple2!2163 lt!36183 lt!36186)) lt!36181))))

(assert (=> b!78263 (= lt!36182 (addStillNotContains!30 lt!36185 lt!36183 lt!36186 lt!36181))))

(assert (=> b!78263 (= lt!36181 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!78263 (= lt!36186 (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!78263 (= lt!36183 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!78263 (= lt!36185 call!7168)))

(declare-fun e!51172 () ListLongMap!1427)

(assert (=> b!78263 (= e!51172 (+!100 call!7168 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!78264 () Bool)

(declare-fun e!51168 () Bool)

(assert (=> b!78264 (= e!51169 e!51168)))

(declare-fun c!11990 () Bool)

(declare-fun e!51167 () Bool)

(assert (=> b!78264 (= c!11990 e!51167)))

(declare-fun res!40991 () Bool)

(assert (=> b!78264 (=> (not res!40991) (not e!51167))))

(assert (=> b!78264 (= res!40991 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!78265 () Bool)

(declare-fun e!51173 () Bool)

(assert (=> b!78265 (= e!51173 (= lt!36180 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!78266 () Bool)

(declare-fun res!40989 () Bool)

(assert (=> b!78266 (=> (not res!40989) (not e!51169))))

(assert (=> b!78266 (= res!40989 (not (contains!736 lt!36180 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78267 () Bool)

(assert (=> b!78267 (= e!51168 e!51170)))

(assert (=> b!78267 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun res!40990 () Bool)

(assert (=> b!78267 (= res!40990 (contains!736 lt!36180 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!78267 (=> (not res!40990) (not e!51170))))

(declare-fun b!78268 () Bool)

(assert (=> b!78268 (= e!51172 call!7168)))

(declare-fun b!78269 () Bool)

(assert (=> b!78269 (= e!51171 e!51172)))

(declare-fun c!11993 () Bool)

(assert (=> b!78269 (= c!11993 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78270 () Bool)

(assert (=> b!78270 (= e!51168 e!51173)))

(declare-fun c!11992 () Bool)

(assert (=> b!78270 (= c!11992 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!78271 () Bool)

(assert (=> b!78271 (= e!51173 (isEmpty!332 lt!36180))))

(declare-fun b!78272 () Bool)

(assert (=> b!78272 (= e!51167 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!78272 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!18537 c!11991) b!78262))

(assert (= (and d!18537 (not c!11991)) b!78269))

(assert (= (and b!78269 c!11993) b!78263))

(assert (= (and b!78269 (not c!11993)) b!78268))

(assert (= (or b!78263 b!78268) bm!7165))

(assert (= (and d!18537 res!40988) b!78266))

(assert (= (and b!78266 res!40989) b!78264))

(assert (= (and b!78264 res!40991) b!78272))

(assert (= (and b!78264 c!11990) b!78267))

(assert (= (and b!78264 (not c!11990)) b!78270))

(assert (= (and b!78267 res!40990) b!78261))

(assert (= (and b!78270 c!11992) b!78265))

(assert (= (and b!78270 (not c!11992)) b!78271))

(declare-fun b_lambda!3513 () Bool)

(assert (=> (not b_lambda!3513) (not b!78261)))

(assert (=> b!78261 t!5129))

(declare-fun b_and!4821 () Bool)

(assert (= b_and!4817 (and (=> t!5129 result!2801) b_and!4821)))

(assert (=> b!78261 t!5131))

(declare-fun b_and!4823 () Bool)

(assert (= b_and!4819 (and (=> t!5131 result!2805) b_and!4823)))

(declare-fun b_lambda!3515 () Bool)

(assert (=> (not b_lambda!3515) (not b!78263)))

(assert (=> b!78263 t!5129))

(declare-fun b_and!4825 () Bool)

(assert (= b_and!4821 (and (=> t!5129 result!2801) b_and!4825)))

(assert (=> b!78263 t!5131))

(declare-fun b_and!4827 () Bool)

(assert (= b_and!4823 (and (=> t!5131 result!2805) b_and!4827)))

(declare-fun m!78439 () Bool)

(assert (=> d!18537 m!78439))

(assert (=> d!18537 m!77921))

(declare-fun m!78441 () Bool)

(assert (=> bm!7165 m!78441))

(declare-fun m!78443 () Bool)

(assert (=> b!78267 m!78443))

(assert (=> b!78267 m!78443))

(declare-fun m!78445 () Bool)

(assert (=> b!78267 m!78445))

(declare-fun m!78447 () Bool)

(assert (=> b!78266 m!78447))

(assert (=> b!78269 m!78443))

(assert (=> b!78269 m!78443))

(declare-fun m!78449 () Bool)

(assert (=> b!78269 m!78449))

(declare-fun m!78451 () Bool)

(assert (=> b!78271 m!78451))

(assert (=> b!78265 m!78441))

(assert (=> b!78272 m!78443))

(assert (=> b!78272 m!78443))

(assert (=> b!78272 m!78449))

(declare-fun m!78453 () Bool)

(assert (=> b!78263 m!78453))

(declare-fun m!78455 () Bool)

(assert (=> b!78263 m!78455))

(declare-fun m!78457 () Bool)

(assert (=> b!78263 m!78457))

(assert (=> b!78263 m!78455))

(assert (=> b!78263 m!77939))

(declare-fun m!78459 () Bool)

(assert (=> b!78263 m!78459))

(declare-fun m!78461 () Bool)

(assert (=> b!78263 m!78461))

(assert (=> b!78263 m!78443))

(assert (=> b!78263 m!78461))

(assert (=> b!78263 m!77939))

(declare-fun m!78463 () Bool)

(assert (=> b!78263 m!78463))

(assert (=> b!78261 m!78443))

(declare-fun m!78465 () Bool)

(assert (=> b!78261 m!78465))

(assert (=> b!78261 m!77939))

(assert (=> b!78261 m!78461))

(assert (=> b!78261 m!78443))

(assert (=> b!78261 m!78461))

(assert (=> b!78261 m!77939))

(assert (=> b!78261 m!78463))

(assert (=> b!77950 d!18537))

(declare-fun d!18539 () Bool)

(declare-fun res!40992 () Bool)

(declare-fun e!51174 () Bool)

(assert (=> d!18539 (=> res!40992 e!51174)))

(assert (=> d!18539 (= res!40992 (= (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!18539 (= (arrayContainsKey!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000) e!51174)))

(declare-fun b!78273 () Bool)

(declare-fun e!51175 () Bool)

(assert (=> b!78273 (= e!51174 e!51175)))

(declare-fun res!40993 () Bool)

(assert (=> b!78273 (=> (not res!40993) (not e!51175))))

(assert (=> b!78273 (= res!40993 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78274 () Bool)

(assert (=> b!78274 (= e!51175 (arrayContainsKey!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!18539 (not res!40992)) b!78273))

(assert (= (and b!78273 res!40993) b!78274))

(assert (=> d!18539 m!78435))

(assert (=> b!78274 m!77885))

(declare-fun m!78467 () Bool)

(assert (=> b!78274 m!78467))

(assert (=> bm!7161 d!18539))

(declare-fun b!78275 () Bool)

(declare-fun e!51182 () ListLongMap!1427)

(declare-fun call!7171 () ListLongMap!1427)

(assert (=> b!78275 (= e!51182 call!7171)))

(declare-fun b!78276 () Bool)

(declare-fun e!51183 () ListLongMap!1427)

(declare-fun call!7174 () ListLongMap!1427)

(assert (=> b!78276 (= e!51183 (+!100 call!7174 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun b!78278 () Bool)

(declare-fun e!51185 () Bool)

(assert (=> b!78278 (= e!51185 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7166 () Bool)

(declare-fun call!7173 () Bool)

(declare-fun lt!36207 () ListLongMap!1427)

(assert (=> bm!7166 (= call!7173 (contains!736 lt!36207 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78279 () Bool)

(declare-fun e!51176 () Bool)

(declare-fun e!51187 () Bool)

(assert (=> b!78279 (= e!51176 e!51187)))

(declare-fun c!11994 () Bool)

(assert (=> b!78279 (= c!11994 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78280 () Bool)

(declare-fun e!51179 () Unit!2237)

(declare-fun Unit!2250 () Unit!2237)

(assert (=> b!78280 (= e!51179 Unit!2250)))

(declare-fun b!78281 () Bool)

(declare-fun res!40999 () Bool)

(assert (=> b!78281 (=> (not res!40999) (not e!51176))))

(declare-fun e!51188 () Bool)

(assert (=> b!78281 (= res!40999 e!51188)))

(declare-fun c!11996 () Bool)

(assert (=> b!78281 (= c!11996 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78282 () Bool)

(declare-fun lt!36195 () Unit!2237)

(assert (=> b!78282 (= e!51179 lt!36195)))

(declare-fun lt!36201 () ListLongMap!1427)

(assert (=> b!78282 (= lt!36201 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36198 () (_ BitVec 64))

(assert (=> b!78282 (= lt!36198 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36199 () (_ BitVec 64))

(assert (=> b!78282 (= lt!36199 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36208 () Unit!2237)

(assert (=> b!78282 (= lt!36208 (addStillContains!55 lt!36201 lt!36198 (zeroValue!2169 newMap!16) lt!36199))))

(assert (=> b!78282 (contains!736 (+!100 lt!36201 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16))) lt!36199)))

(declare-fun lt!36187 () Unit!2237)

(assert (=> b!78282 (= lt!36187 lt!36208)))

(declare-fun lt!36197 () ListLongMap!1427)

(assert (=> b!78282 (= lt!36197 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36204 () (_ BitVec 64))

(assert (=> b!78282 (= lt!36204 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36202 () (_ BitVec 64))

(assert (=> b!78282 (= lt!36202 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36205 () Unit!2237)

(assert (=> b!78282 (= lt!36205 (addApplyDifferent!55 lt!36197 lt!36204 (minValue!2169 newMap!16) lt!36202))))

(assert (=> b!78282 (= (apply!79 (+!100 lt!36197 (tuple2!2163 lt!36204 (minValue!2169 newMap!16))) lt!36202) (apply!79 lt!36197 lt!36202))))

(declare-fun lt!36190 () Unit!2237)

(assert (=> b!78282 (= lt!36190 lt!36205)))

(declare-fun lt!36200 () ListLongMap!1427)

(assert (=> b!78282 (= lt!36200 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36203 () (_ BitVec 64))

(assert (=> b!78282 (= lt!36203 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36193 () (_ BitVec 64))

(assert (=> b!78282 (= lt!36193 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36188 () Unit!2237)

(assert (=> b!78282 (= lt!36188 (addApplyDifferent!55 lt!36200 lt!36203 (zeroValue!2169 newMap!16) lt!36193))))

(assert (=> b!78282 (= (apply!79 (+!100 lt!36200 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16))) lt!36193) (apply!79 lt!36200 lt!36193))))

(declare-fun lt!36206 () Unit!2237)

(assert (=> b!78282 (= lt!36206 lt!36188)))

(declare-fun lt!36194 () ListLongMap!1427)

(assert (=> b!78282 (= lt!36194 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36192 () (_ BitVec 64))

(assert (=> b!78282 (= lt!36192 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36191 () (_ BitVec 64))

(assert (=> b!78282 (= lt!36191 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78282 (= lt!36195 (addApplyDifferent!55 lt!36194 lt!36192 (minValue!2169 newMap!16) lt!36191))))

(assert (=> b!78282 (= (apply!79 (+!100 lt!36194 (tuple2!2163 lt!36192 (minValue!2169 newMap!16))) lt!36191) (apply!79 lt!36194 lt!36191))))

(declare-fun b!78283 () Bool)

(declare-fun e!51177 () Bool)

(assert (=> b!78283 (= e!51187 e!51177)))

(declare-fun res!40996 () Bool)

(assert (=> b!78283 (= res!40996 call!7173)))

(assert (=> b!78283 (=> (not res!40996) (not e!51177))))

(declare-fun bm!7167 () Bool)

(declare-fun call!7175 () ListLongMap!1427)

(assert (=> bm!7167 (= call!7171 call!7175)))

(declare-fun bm!7168 () Bool)

(declare-fun call!7172 () ListLongMap!1427)

(assert (=> bm!7168 (= call!7172 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78284 () Bool)

(assert (=> b!78284 (= e!51187 (not call!7173))))

(declare-fun b!78285 () Bool)

(declare-fun call!7169 () Bool)

(assert (=> b!78285 (= e!51188 (not call!7169))))

(declare-fun c!11997 () Bool)

(declare-fun bm!7169 () Bool)

(declare-fun c!11999 () Bool)

(assert (=> bm!7169 (= call!7174 (+!100 (ite c!11999 call!7172 (ite c!11997 call!7175 call!7171)) (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!78286 () Bool)

(assert (=> b!78286 (= e!51177 (= (apply!79 lt!36207 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(declare-fun b!78287 () Bool)

(declare-fun res!40998 () Bool)

(assert (=> b!78287 (=> (not res!40998) (not e!51176))))

(declare-fun e!51184 () Bool)

(assert (=> b!78287 (= res!40998 e!51184)))

(declare-fun res!41000 () Bool)

(assert (=> b!78287 (=> res!41000 e!51184)))

(declare-fun e!51180 () Bool)

(assert (=> b!78287 (= res!41000 (not e!51180))))

(declare-fun res!40997 () Bool)

(assert (=> b!78287 (=> (not res!40997) (not e!51180))))

(assert (=> b!78287 (= res!40997 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78288 () Bool)

(assert (=> b!78288 (= e!51180 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!18541 () Bool)

(assert (=> d!18541 e!51176))

(declare-fun res!41002 () Bool)

(assert (=> d!18541 (=> (not res!41002) (not e!51176))))

(assert (=> d!18541 (= res!41002 (or (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))))

(declare-fun lt!36196 () ListLongMap!1427)

(assert (=> d!18541 (= lt!36207 lt!36196)))

(declare-fun lt!36189 () Unit!2237)

(assert (=> d!18541 (= lt!36189 e!51179)))

(declare-fun c!11998 () Bool)

(assert (=> d!18541 (= c!11998 e!51185)))

(declare-fun res!41001 () Bool)

(assert (=> d!18541 (=> (not res!41001) (not e!51185))))

(assert (=> d!18541 (= res!41001 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18541 (= lt!36196 e!51183)))

(assert (=> d!18541 (= c!11999 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18541 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18541 (= (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36207)))

(declare-fun b!78277 () Bool)

(declare-fun e!51181 () ListLongMap!1427)

(assert (=> b!78277 (= e!51183 e!51181)))

(assert (=> b!78277 (= c!11997 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78289 () Bool)

(declare-fun call!7170 () ListLongMap!1427)

(assert (=> b!78289 (= e!51182 call!7170)))

(declare-fun bm!7170 () Bool)

(assert (=> bm!7170 (= call!7169 (contains!736 lt!36207 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7171 () Bool)

(assert (=> bm!7171 (= call!7170 call!7174)))

(declare-fun b!78290 () Bool)

(declare-fun c!11995 () Bool)

(assert (=> b!78290 (= c!11995 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78290 (= e!51181 e!51182)))

(declare-fun b!78291 () Bool)

(declare-fun e!51178 () Bool)

(assert (=> b!78291 (= e!51178 (= (apply!79 lt!36207 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!78292 () Bool)

(assert (=> b!78292 (= e!51188 e!51178)))

(declare-fun res!40995 () Bool)

(assert (=> b!78292 (= res!40995 call!7169)))

(assert (=> b!78292 (=> (not res!40995) (not e!51178))))

(declare-fun b!78293 () Bool)

(declare-fun e!51186 () Bool)

(assert (=> b!78293 (= e!51184 e!51186)))

(declare-fun res!40994 () Bool)

(assert (=> b!78293 (=> (not res!40994) (not e!51186))))

(assert (=> b!78293 (= res!40994 (contains!736 lt!36207 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78293 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78294 () Bool)

(assert (=> b!78294 (= e!51186 (= (apply!79 lt!36207 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78294 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (_values!2254 newMap!16))))))

(assert (=> b!78294 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78295 () Bool)

(assert (=> b!78295 (= e!51181 call!7170)))

(declare-fun bm!7172 () Bool)

(assert (=> bm!7172 (= call!7175 call!7172)))

(assert (= (and d!18541 c!11999) b!78276))

(assert (= (and d!18541 (not c!11999)) b!78277))

(assert (= (and b!78277 c!11997) b!78295))

(assert (= (and b!78277 (not c!11997)) b!78290))

(assert (= (and b!78290 c!11995) b!78289))

(assert (= (and b!78290 (not c!11995)) b!78275))

(assert (= (or b!78289 b!78275) bm!7167))

(assert (= (or b!78295 bm!7167) bm!7172))

(assert (= (or b!78295 b!78289) bm!7171))

(assert (= (or b!78276 bm!7172) bm!7168))

(assert (= (or b!78276 bm!7171) bm!7169))

(assert (= (and d!18541 res!41001) b!78278))

(assert (= (and d!18541 c!11998) b!78282))

(assert (= (and d!18541 (not c!11998)) b!78280))

(assert (= (and d!18541 res!41002) b!78287))

(assert (= (and b!78287 res!40997) b!78288))

(assert (= (and b!78287 (not res!41000)) b!78293))

(assert (= (and b!78293 res!40994) b!78294))

(assert (= (and b!78287 res!40998) b!78281))

(assert (= (and b!78281 c!11996) b!78292))

(assert (= (and b!78281 (not c!11996)) b!78285))

(assert (= (and b!78292 res!40995) b!78291))

(assert (= (or b!78292 b!78285) bm!7170))

(assert (= (and b!78281 res!40999) b!78279))

(assert (= (and b!78279 c!11994) b!78283))

(assert (= (and b!78279 (not c!11994)) b!78284))

(assert (= (and b!78283 res!40996) b!78286))

(assert (= (or b!78283 b!78284) bm!7166))

(declare-fun b_lambda!3517 () Bool)

(assert (=> (not b_lambda!3517) (not b!78294)))

(declare-fun t!5144 () Bool)

(declare-fun tb!1621 () Bool)

(assert (=> (and b!77786 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16)) t!5144) tb!1621))

(declare-fun result!2821 () Bool)

(assert (=> tb!1621 (= result!2821 tp_is_empty!2509)))

(assert (=> b!78294 t!5144))

(declare-fun b_and!4829 () Bool)

(assert (= b_and!4825 (and (=> t!5144 result!2821) b_and!4829)))

(declare-fun t!5146 () Bool)

(declare-fun tb!1623 () Bool)

(assert (=> (and b!77791 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 newMap!16)) t!5146) tb!1623))

(declare-fun result!2823 () Bool)

(assert (= result!2823 result!2821))

(assert (=> b!78294 t!5146))

(declare-fun b_and!4831 () Bool)

(assert (= b_and!4827 (and (=> t!5146 result!2823) b_and!4831)))

(declare-fun m!78469 () Bool)

(assert (=> b!78294 m!78469))

(declare-fun m!78471 () Bool)

(assert (=> b!78294 m!78471))

(declare-fun m!78473 () Bool)

(assert (=> b!78294 m!78473))

(assert (=> b!78294 m!78435))

(assert (=> b!78294 m!78469))

(assert (=> b!78294 m!78435))

(declare-fun m!78475 () Bool)

(assert (=> b!78294 m!78475))

(assert (=> b!78294 m!78471))

(assert (=> d!18541 m!78355))

(declare-fun m!78477 () Bool)

(assert (=> bm!7169 m!78477))

(assert (=> b!78293 m!78435))

(assert (=> b!78293 m!78435))

(declare-fun m!78479 () Bool)

(assert (=> b!78293 m!78479))

(declare-fun m!78481 () Bool)

(assert (=> bm!7168 m!78481))

(assert (=> b!78288 m!78435))

(assert (=> b!78288 m!78435))

(assert (=> b!78288 m!78437))

(assert (=> b!78278 m!78435))

(assert (=> b!78278 m!78435))

(assert (=> b!78278 m!78437))

(declare-fun m!78483 () Bool)

(assert (=> b!78282 m!78483))

(declare-fun m!78485 () Bool)

(assert (=> b!78282 m!78485))

(declare-fun m!78487 () Bool)

(assert (=> b!78282 m!78487))

(declare-fun m!78489 () Bool)

(assert (=> b!78282 m!78489))

(declare-fun m!78491 () Bool)

(assert (=> b!78282 m!78491))

(declare-fun m!78493 () Bool)

(assert (=> b!78282 m!78493))

(declare-fun m!78495 () Bool)

(assert (=> b!78282 m!78495))

(declare-fun m!78497 () Bool)

(assert (=> b!78282 m!78497))

(declare-fun m!78499 () Bool)

(assert (=> b!78282 m!78499))

(declare-fun m!78501 () Bool)

(assert (=> b!78282 m!78501))

(assert (=> b!78282 m!78495))

(declare-fun m!78503 () Bool)

(assert (=> b!78282 m!78503))

(assert (=> b!78282 m!78499))

(declare-fun m!78505 () Bool)

(assert (=> b!78282 m!78505))

(assert (=> b!78282 m!78487))

(declare-fun m!78507 () Bool)

(assert (=> b!78282 m!78507))

(assert (=> b!78282 m!78483))

(assert (=> b!78282 m!78481))

(declare-fun m!78509 () Bool)

(assert (=> b!78282 m!78509))

(declare-fun m!78511 () Bool)

(assert (=> b!78282 m!78511))

(assert (=> b!78282 m!78435))

(declare-fun m!78513 () Bool)

(assert (=> b!78276 m!78513))

(declare-fun m!78515 () Bool)

(assert (=> bm!7166 m!78515))

(declare-fun m!78517 () Bool)

(assert (=> bm!7170 m!78517))

(declare-fun m!78519 () Bool)

(assert (=> b!78286 m!78519))

(declare-fun m!78521 () Bool)

(assert (=> b!78291 m!78521))

(assert (=> b!78196 d!18541))

(declare-fun d!18543 () Bool)

(declare-fun lt!36211 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!84 (List!1494) (InoxSet tuple2!2162))

(assert (=> d!18543 (= lt!36211 (select (content!84 (toList!729 lt!35969)) lt!35792))))

(declare-fun e!51194 () Bool)

(assert (=> d!18543 (= lt!36211 e!51194)))

(declare-fun res!41008 () Bool)

(assert (=> d!18543 (=> (not res!41008) (not e!51194))))

(assert (=> d!18543 (= res!41008 ((_ is Cons!1490) (toList!729 lt!35969)))))

(assert (=> d!18543 (= (contains!737 (toList!729 lt!35969) lt!35792) lt!36211)))

(declare-fun b!78300 () Bool)

(declare-fun e!51193 () Bool)

(assert (=> b!78300 (= e!51194 e!51193)))

(declare-fun res!41007 () Bool)

(assert (=> b!78300 (=> res!41007 e!51193)))

(assert (=> b!78300 (= res!41007 (= (h!2078 (toList!729 lt!35969)) lt!35792))))

(declare-fun b!78301 () Bool)

(assert (=> b!78301 (= e!51193 (contains!737 (t!5132 (toList!729 lt!35969)) lt!35792))))

(assert (= (and d!18543 res!41008) b!78300))

(assert (= (and b!78300 (not res!41007)) b!78301))

(declare-fun m!78523 () Bool)

(assert (=> d!18543 m!78523))

(declare-fun m!78525 () Bool)

(assert (=> d!18543 m!78525))

(declare-fun m!78527 () Bool)

(assert (=> b!78301 m!78527))

(assert (=> b!77973 d!18543))

(declare-fun d!18545 () Bool)

(declare-fun get!1186 (Option!144) V!2993)

(assert (=> d!18545 (= (apply!79 lt!36049 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1186 (getValueByKey!138 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3322 () Bool)

(assert (= bs!3322 d!18545))

(declare-fun m!78529 () Bool)

(assert (=> bs!3322 m!78529))

(assert (=> bs!3322 m!78529))

(declare-fun m!78531 () Bool)

(assert (=> bs!3322 m!78531))

(assert (=> b!78062 d!18545))

(declare-fun d!18547 () Bool)

(declare-fun e!51196 () Bool)

(assert (=> d!18547 e!51196))

(declare-fun res!41009 () Bool)

(assert (=> d!18547 (=> res!41009 e!51196)))

(declare-fun lt!36213 () Bool)

(assert (=> d!18547 (= res!41009 (not lt!36213))))

(declare-fun lt!36215 () Bool)

(assert (=> d!18547 (= lt!36213 lt!36215)))

(declare-fun lt!36214 () Unit!2237)

(declare-fun e!51195 () Unit!2237)

(assert (=> d!18547 (= lt!36214 e!51195)))

(declare-fun c!12000 () Bool)

(assert (=> d!18547 (= c!12000 lt!36215)))

(assert (=> d!18547 (= lt!36215 (containsKey!141 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!18547 (= (contains!736 lt!35932 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36213)))

(declare-fun b!78302 () Bool)

(declare-fun lt!36212 () Unit!2237)

(assert (=> b!78302 (= e!51195 lt!36212)))

(assert (=> b!78302 (= lt!36212 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78302 (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78303 () Bool)

(declare-fun Unit!2251 () Unit!2237)

(assert (=> b!78303 (= e!51195 Unit!2251)))

(declare-fun b!78304 () Bool)

(assert (=> b!78304 (= e!51196 (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!18547 c!12000) b!78302))

(assert (= (and d!18547 (not c!12000)) b!78303))

(assert (= (and d!18547 (not res!41009)) b!78304))

(assert (=> d!18547 m!78085))

(declare-fun m!78533 () Bool)

(assert (=> d!18547 m!78533))

(assert (=> b!78302 m!78085))

(declare-fun m!78535 () Bool)

(assert (=> b!78302 m!78535))

(assert (=> b!78302 m!78085))

(declare-fun m!78537 () Bool)

(assert (=> b!78302 m!78537))

(assert (=> b!78302 m!78537))

(declare-fun m!78539 () Bool)

(assert (=> b!78302 m!78539))

(assert (=> b!78304 m!78085))

(assert (=> b!78304 m!78537))

(assert (=> b!78304 m!78537))

(assert (=> b!78304 m!78539))

(assert (=> b!77952 d!18547))

(declare-fun d!18549 () Bool)

(declare-fun lt!36216 () Bool)

(assert (=> d!18549 (= lt!36216 (select (content!84 (toList!729 lt!35973)) lt!35789))))

(declare-fun e!51198 () Bool)

(assert (=> d!18549 (= lt!36216 e!51198)))

(declare-fun res!41011 () Bool)

(assert (=> d!18549 (=> (not res!41011) (not e!51198))))

(assert (=> d!18549 (= res!41011 ((_ is Cons!1490) (toList!729 lt!35973)))))

(assert (=> d!18549 (= (contains!737 (toList!729 lt!35973) lt!35789) lt!36216)))

(declare-fun b!78305 () Bool)

(declare-fun e!51197 () Bool)

(assert (=> b!78305 (= e!51198 e!51197)))

(declare-fun res!41010 () Bool)

(assert (=> b!78305 (=> res!41010 e!51197)))

(assert (=> b!78305 (= res!41010 (= (h!2078 (toList!729 lt!35973)) lt!35789))))

(declare-fun b!78306 () Bool)

(assert (=> b!78306 (= e!51197 (contains!737 (t!5132 (toList!729 lt!35973)) lt!35789))))

(assert (= (and d!18549 res!41011) b!78305))

(assert (= (and b!78305 (not res!41010)) b!78306))

(declare-fun m!78541 () Bool)

(assert (=> d!18549 m!78541))

(declare-fun m!78543 () Bool)

(assert (=> d!18549 m!78543))

(declare-fun m!78545 () Bool)

(assert (=> b!78306 m!78545))

(assert (=> b!77975 d!18549))

(declare-fun d!18551 () Bool)

(assert (=> d!18551 (= (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78064 d!18551))

(assert (=> b!77954 d!18551))

(declare-fun d!18553 () Bool)

(assert (=> d!18553 (= (get!1185 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) from!355) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78008 d!18553))

(assert (=> b!78197 d!18541))

(declare-fun d!18555 () Bool)

(declare-fun lt!36217 () Bool)

(assert (=> d!18555 (= lt!36217 (select (content!84 (toList!729 lt!35965)) lt!35806))))

(declare-fun e!51200 () Bool)

(assert (=> d!18555 (= lt!36217 e!51200)))

(declare-fun res!41013 () Bool)

(assert (=> d!18555 (=> (not res!41013) (not e!51200))))

(assert (=> d!18555 (= res!41013 ((_ is Cons!1490) (toList!729 lt!35965)))))

(assert (=> d!18555 (= (contains!737 (toList!729 lt!35965) lt!35806) lt!36217)))

(declare-fun b!78307 () Bool)

(declare-fun e!51199 () Bool)

(assert (=> b!78307 (= e!51200 e!51199)))

(declare-fun res!41012 () Bool)

(assert (=> b!78307 (=> res!41012 e!51199)))

(assert (=> b!78307 (= res!41012 (= (h!2078 (toList!729 lt!35965)) lt!35806))))

(declare-fun b!78308 () Bool)

(assert (=> b!78308 (= e!51199 (contains!737 (t!5132 (toList!729 lt!35965)) lt!35806))))

(assert (= (and d!18555 res!41013) b!78307))

(assert (= (and b!78307 (not res!41012)) b!78308))

(declare-fun m!78547 () Bool)

(assert (=> d!18555 m!78547))

(declare-fun m!78549 () Bool)

(assert (=> d!18555 m!78549))

(declare-fun m!78551 () Bool)

(assert (=> b!78308 m!78551))

(assert (=> b!77971 d!18555))

(declare-fun b!78317 () Bool)

(declare-fun e!51205 () Option!144)

(assert (=> b!78317 (= e!51205 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35948)))))))

(declare-fun b!78318 () Bool)

(declare-fun e!51206 () Option!144)

(assert (=> b!78318 (= e!51205 e!51206)))

(declare-fun c!12006 () Bool)

(assert (=> b!78318 (= c!12006 (and ((_ is Cons!1490) (toList!729 lt!35948)) (not (= (_1!1092 (h!2078 (toList!729 lt!35948))) (_1!1092 lt!35792)))))))

(declare-fun b!78320 () Bool)

(assert (=> b!78320 (= e!51206 None!142)))

(declare-fun b!78319 () Bool)

(assert (=> b!78319 (= e!51206 (getValueByKey!138 (t!5132 (toList!729 lt!35948)) (_1!1092 lt!35792)))))

(declare-fun d!18557 () Bool)

(declare-fun c!12005 () Bool)

(assert (=> d!18557 (= c!12005 (and ((_ is Cons!1490) (toList!729 lt!35948)) (= (_1!1092 (h!2078 (toList!729 lt!35948))) (_1!1092 lt!35792))))))

(assert (=> d!18557 (= (getValueByKey!138 (toList!729 lt!35948) (_1!1092 lt!35792)) e!51205)))

(assert (= (and d!18557 c!12005) b!78317))

(assert (= (and d!18557 (not c!12005)) b!78318))

(assert (= (and b!78318 c!12006) b!78319))

(assert (= (and b!78318 (not c!12006)) b!78320))

(declare-fun m!78553 () Bool)

(assert (=> b!78319 m!78553))

(assert (=> b!77962 d!18557))

(declare-fun d!18559 () Bool)

(declare-fun e!51208 () Bool)

(assert (=> d!18559 e!51208))

(declare-fun res!41014 () Bool)

(assert (=> d!18559 (=> res!41014 e!51208)))

(declare-fun lt!36219 () Bool)

(assert (=> d!18559 (= res!41014 (not lt!36219))))

(declare-fun lt!36221 () Bool)

(assert (=> d!18559 (= lt!36219 lt!36221)))

(declare-fun lt!36220 () Unit!2237)

(declare-fun e!51207 () Unit!2237)

(assert (=> d!18559 (= lt!36220 e!51207)))

(declare-fun c!12007 () Bool)

(assert (=> d!18559 (= c!12007 lt!36221)))

(assert (=> d!18559 (= lt!36221 (containsKey!141 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18559 (= (contains!736 lt!35932 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36219)))

(declare-fun b!78321 () Bool)

(declare-fun lt!36218 () Unit!2237)

(assert (=> b!78321 (= e!51207 lt!36218)))

(assert (=> b!78321 (= lt!36218 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78321 (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78322 () Bool)

(declare-fun Unit!2252 () Unit!2237)

(assert (=> b!78322 (= e!51207 Unit!2252)))

(declare-fun b!78323 () Bool)

(assert (=> b!78323 (= e!51208 (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18559 c!12007) b!78321))

(assert (= (and d!18559 (not c!12007)) b!78322))

(assert (= (and d!18559 (not res!41014)) b!78323))

(declare-fun m!78555 () Bool)

(assert (=> d!18559 m!78555))

(declare-fun m!78557 () Bool)

(assert (=> b!78321 m!78557))

(declare-fun m!78559 () Bool)

(assert (=> b!78321 m!78559))

(assert (=> b!78321 m!78559))

(declare-fun m!78561 () Bool)

(assert (=> b!78321 m!78561))

(assert (=> b!78323 m!78559))

(assert (=> b!78323 m!78559))

(assert (=> b!78323 m!78561))

(assert (=> d!18459 d!18559))

(assert (=> d!18459 d!18473))

(assert (=> b!78058 d!18459))

(declare-fun d!18561 () Bool)

(assert (=> d!18561 (contains!736 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36041)))

(declare-fun lt!36224 () Unit!2237)

(declare-fun choose!464 (ListLongMap!1427 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2237)

(assert (=> d!18561 (= lt!36224 (choose!464 lt!36043 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36041))))

(assert (=> d!18561 (contains!736 lt!36043 lt!36041)))

(assert (=> d!18561 (= (addStillContains!55 lt!36043 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36041) lt!36224)))

(declare-fun bs!3323 () Bool)

(assert (= bs!3323 d!18561))

(assert (=> bs!3323 m!78247))

(assert (=> bs!3323 m!78247))

(assert (=> bs!3323 m!78253))

(declare-fun m!78563 () Bool)

(assert (=> bs!3323 m!78563))

(declare-fun m!78565 () Bool)

(assert (=> bs!3323 m!78565))

(assert (=> b!78058 d!18561))

(declare-fun d!18563 () Bool)

(assert (=> d!18563 (= (apply!79 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36044) (apply!79 lt!36039 lt!36044))))

(declare-fun lt!36227 () Unit!2237)

(declare-fun choose!465 (ListLongMap!1427 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2237)

(assert (=> d!18563 (= lt!36227 (choose!465 lt!36039 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36044))))

(declare-fun e!51211 () Bool)

(assert (=> d!18563 e!51211))

(declare-fun res!41017 () Bool)

(assert (=> d!18563 (=> (not res!41017) (not e!51211))))

(assert (=> d!18563 (= res!41017 (contains!736 lt!36039 lt!36044))))

(assert (=> d!18563 (= (addApplyDifferent!55 lt!36039 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36044) lt!36227)))

(declare-fun b!78328 () Bool)

(assert (=> b!78328 (= e!51211 (not (= lt!36044 lt!36046)))))

(assert (= (and d!18563 res!41017) b!78328))

(assert (=> d!18563 m!78257))

(declare-fun m!78567 () Bool)

(assert (=> d!18563 m!78567))

(assert (=> d!18563 m!78235))

(assert (=> d!18563 m!78237))

(declare-fun m!78569 () Bool)

(assert (=> d!18563 m!78569))

(assert (=> d!18563 m!78235))

(assert (=> b!78058 d!18563))

(declare-fun d!18565 () Bool)

(declare-fun e!51212 () Bool)

(assert (=> d!18565 e!51212))

(declare-fun res!41018 () Bool)

(assert (=> d!18565 (=> (not res!41018) (not e!51212))))

(declare-fun lt!36229 () ListLongMap!1427)

(assert (=> d!18565 (= res!41018 (contains!736 lt!36229 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36228 () List!1494)

(assert (=> d!18565 (= lt!36229 (ListLongMap!1428 lt!36228))))

(declare-fun lt!36230 () Unit!2237)

(declare-fun lt!36231 () Unit!2237)

(assert (=> d!18565 (= lt!36230 lt!36231)))

(assert (=> d!18565 (= (getValueByKey!138 lt!36228 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18565 (= lt!36231 (lemmaContainsTupThenGetReturnValue!55 lt!36228 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18565 (= lt!36228 (insertStrictlySorted!58 (toList!729 lt!36042) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18565 (= (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36229)))

(declare-fun b!78329 () Bool)

(declare-fun res!41019 () Bool)

(assert (=> b!78329 (=> (not res!41019) (not e!51212))))

(assert (=> b!78329 (= res!41019 (= (getValueByKey!138 (toList!729 lt!36229) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!78330 () Bool)

(assert (=> b!78330 (= e!51212 (contains!737 (toList!729 lt!36229) (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!18565 res!41018) b!78329))

(assert (= (and b!78329 res!41019) b!78330))

(declare-fun m!78571 () Bool)

(assert (=> d!18565 m!78571))

(declare-fun m!78573 () Bool)

(assert (=> d!18565 m!78573))

(declare-fun m!78575 () Bool)

(assert (=> d!18565 m!78575))

(declare-fun m!78577 () Bool)

(assert (=> d!18565 m!78577))

(declare-fun m!78579 () Bool)

(assert (=> b!78329 m!78579))

(declare-fun m!78581 () Bool)

(assert (=> b!78330 m!78581))

(assert (=> b!78058 d!18565))

(declare-fun d!18567 () Bool)

(assert (=> d!18567 (= (apply!79 lt!36039 lt!36044) (get!1186 (getValueByKey!138 (toList!729 lt!36039) lt!36044)))))

(declare-fun bs!3324 () Bool)

(assert (= bs!3324 d!18567))

(declare-fun m!78583 () Bool)

(assert (=> bs!3324 m!78583))

(assert (=> bs!3324 m!78583))

(declare-fun m!78585 () Bool)

(assert (=> bs!3324 m!78585))

(assert (=> b!78058 d!18567))

(declare-fun d!18569 () Bool)

(declare-fun e!51213 () Bool)

(assert (=> d!18569 e!51213))

(declare-fun res!41020 () Bool)

(assert (=> d!18569 (=> (not res!41020) (not e!51213))))

(declare-fun lt!36233 () ListLongMap!1427)

(assert (=> d!18569 (= res!41020 (contains!736 lt!36233 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36232 () List!1494)

(assert (=> d!18569 (= lt!36233 (ListLongMap!1428 lt!36232))))

(declare-fun lt!36234 () Unit!2237)

(declare-fun lt!36235 () Unit!2237)

(assert (=> d!18569 (= lt!36234 lt!36235)))

(assert (=> d!18569 (= (getValueByKey!138 lt!36232 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18569 (= lt!36235 (lemmaContainsTupThenGetReturnValue!55 lt!36232 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18569 (= lt!36232 (insertStrictlySorted!58 (toList!729 lt!36036) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18569 (= (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36233)))

(declare-fun b!78331 () Bool)

(declare-fun res!41021 () Bool)

(assert (=> b!78331 (=> (not res!41021) (not e!51213))))

(assert (=> b!78331 (= res!41021 (= (getValueByKey!138 (toList!729 lt!36233) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!78332 () Bool)

(assert (=> b!78332 (= e!51213 (contains!737 (toList!729 lt!36233) (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!18569 res!41020) b!78331))

(assert (= (and b!78331 res!41021) b!78332))

(declare-fun m!78587 () Bool)

(assert (=> d!18569 m!78587))

(declare-fun m!78589 () Bool)

(assert (=> d!18569 m!78589))

(declare-fun m!78591 () Bool)

(assert (=> d!18569 m!78591))

(declare-fun m!78593 () Bool)

(assert (=> d!18569 m!78593))

(declare-fun m!78595 () Bool)

(assert (=> b!78331 m!78595))

(declare-fun m!78597 () Bool)

(assert (=> b!78332 m!78597))

(assert (=> b!78058 d!18569))

(declare-fun d!18571 () Bool)

(declare-fun e!51214 () Bool)

(assert (=> d!18571 e!51214))

(declare-fun res!41022 () Bool)

(assert (=> d!18571 (=> (not res!41022) (not e!51214))))

(declare-fun lt!36237 () ListLongMap!1427)

(assert (=> d!18571 (= res!41022 (contains!736 lt!36237 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36236 () List!1494)

(assert (=> d!18571 (= lt!36237 (ListLongMap!1428 lt!36236))))

(declare-fun lt!36238 () Unit!2237)

(declare-fun lt!36239 () Unit!2237)

(assert (=> d!18571 (= lt!36238 lt!36239)))

(assert (=> d!18571 (= (getValueByKey!138 lt!36236 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18571 (= lt!36239 (lemmaContainsTupThenGetReturnValue!55 lt!36236 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18571 (= lt!36236 (insertStrictlySorted!58 (toList!729 lt!36043) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18571 (= (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36237)))

(declare-fun b!78333 () Bool)

(declare-fun res!41023 () Bool)

(assert (=> b!78333 (=> (not res!41023) (not e!51214))))

(assert (=> b!78333 (= res!41023 (= (getValueByKey!138 (toList!729 lt!36237) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!78334 () Bool)

(assert (=> b!78334 (= e!51214 (contains!737 (toList!729 lt!36237) (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!18571 res!41022) b!78333))

(assert (= (and b!78333 res!41023) b!78334))

(declare-fun m!78599 () Bool)

(assert (=> d!18571 m!78599))

(declare-fun m!78601 () Bool)

(assert (=> d!18571 m!78601))

(declare-fun m!78603 () Bool)

(assert (=> d!18571 m!78603))

(declare-fun m!78605 () Bool)

(assert (=> d!18571 m!78605))

(declare-fun m!78607 () Bool)

(assert (=> b!78333 m!78607))

(declare-fun m!78609 () Bool)

(assert (=> b!78334 m!78609))

(assert (=> b!78058 d!18571))

(declare-fun d!18573 () Bool)

(assert (=> d!18573 (= (apply!79 lt!36036 lt!36033) (get!1186 (getValueByKey!138 (toList!729 lt!36036) lt!36033)))))

(declare-fun bs!3325 () Bool)

(assert (= bs!3325 d!18573))

(declare-fun m!78611 () Bool)

(assert (=> bs!3325 m!78611))

(assert (=> bs!3325 m!78611))

(declare-fun m!78613 () Bool)

(assert (=> bs!3325 m!78613))

(assert (=> b!78058 d!18573))

(declare-fun d!18575 () Bool)

(declare-fun e!51215 () Bool)

(assert (=> d!18575 e!51215))

(declare-fun res!41024 () Bool)

(assert (=> d!18575 (=> (not res!41024) (not e!51215))))

(declare-fun lt!36241 () ListLongMap!1427)

(assert (=> d!18575 (= res!41024 (contains!736 lt!36241 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36240 () List!1494)

(assert (=> d!18575 (= lt!36241 (ListLongMap!1428 lt!36240))))

(declare-fun lt!36242 () Unit!2237)

(declare-fun lt!36243 () Unit!2237)

(assert (=> d!18575 (= lt!36242 lt!36243)))

(assert (=> d!18575 (= (getValueByKey!138 lt!36240 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18575 (= lt!36243 (lemmaContainsTupThenGetReturnValue!55 lt!36240 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18575 (= lt!36240 (insertStrictlySorted!58 (toList!729 lt!36039) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18575 (= (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36241)))

(declare-fun b!78335 () Bool)

(declare-fun res!41025 () Bool)

(assert (=> b!78335 (=> (not res!41025) (not e!51215))))

(assert (=> b!78335 (= res!41025 (= (getValueByKey!138 (toList!729 lt!36241) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!78336 () Bool)

(assert (=> b!78336 (= e!51215 (contains!737 (toList!729 lt!36241) (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!18575 res!41024) b!78335))

(assert (= (and b!78335 res!41025) b!78336))

(declare-fun m!78615 () Bool)

(assert (=> d!18575 m!78615))

(declare-fun m!78617 () Bool)

(assert (=> d!18575 m!78617))

(declare-fun m!78619 () Bool)

(assert (=> d!18575 m!78619))

(declare-fun m!78621 () Bool)

(assert (=> d!18575 m!78621))

(declare-fun m!78623 () Bool)

(assert (=> b!78335 m!78623))

(declare-fun m!78625 () Bool)

(assert (=> b!78336 m!78625))

(assert (=> b!78058 d!18575))

(declare-fun d!18577 () Bool)

(assert (=> d!18577 (= (apply!79 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36033) (apply!79 lt!36036 lt!36033))))

(declare-fun lt!36244 () Unit!2237)

(assert (=> d!18577 (= lt!36244 (choose!465 lt!36036 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36033))))

(declare-fun e!51216 () Bool)

(assert (=> d!18577 e!51216))

(declare-fun res!41026 () Bool)

(assert (=> d!18577 (=> (not res!41026) (not e!51216))))

(assert (=> d!18577 (= res!41026 (contains!736 lt!36036 lt!36033))))

(assert (=> d!18577 (= (addApplyDifferent!55 lt!36036 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36033) lt!36244)))

(declare-fun b!78337 () Bool)

(assert (=> b!78337 (= e!51216 (not (= lt!36033 lt!36034)))))

(assert (= (and d!18577 res!41026) b!78337))

(assert (=> d!18577 m!78255))

(declare-fun m!78627 () Bool)

(assert (=> d!18577 m!78627))

(assert (=> d!18577 m!78243))

(assert (=> d!18577 m!78251))

(declare-fun m!78629 () Bool)

(assert (=> d!18577 m!78629))

(assert (=> d!18577 m!78243))

(assert (=> b!78058 d!18577))

(declare-fun d!18579 () Bool)

(assert (=> d!18579 (= (apply!79 lt!36042 lt!36035) (get!1186 (getValueByKey!138 (toList!729 lt!36042) lt!36035)))))

(declare-fun bs!3326 () Bool)

(assert (= bs!3326 d!18579))

(declare-fun m!78631 () Bool)

(assert (=> bs!3326 m!78631))

(assert (=> bs!3326 m!78631))

(declare-fun m!78633 () Bool)

(assert (=> bs!3326 m!78633))

(assert (=> b!78058 d!18579))

(declare-fun d!18581 () Bool)

(assert (=> d!18581 (= (apply!79 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36035) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36035)))))

(declare-fun bs!3327 () Bool)

(assert (= bs!3327 d!18581))

(declare-fun m!78635 () Bool)

(assert (=> bs!3327 m!78635))

(assert (=> bs!3327 m!78635))

(declare-fun m!78637 () Bool)

(assert (=> bs!3327 m!78637))

(assert (=> b!78058 d!18581))

(declare-fun d!18583 () Bool)

(assert (=> d!18583 (= (apply!79 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36044) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36044)))))

(declare-fun bs!3328 () Bool)

(assert (= bs!3328 d!18583))

(declare-fun m!78639 () Bool)

(assert (=> bs!3328 m!78639))

(assert (=> bs!3328 m!78639))

(declare-fun m!78641 () Bool)

(assert (=> bs!3328 m!78641))

(assert (=> b!78058 d!18583))

(declare-fun d!18585 () Bool)

(declare-fun e!51218 () Bool)

(assert (=> d!18585 e!51218))

(declare-fun res!41027 () Bool)

(assert (=> d!18585 (=> res!41027 e!51218)))

(declare-fun lt!36246 () Bool)

(assert (=> d!18585 (= res!41027 (not lt!36246))))

(declare-fun lt!36248 () Bool)

(assert (=> d!18585 (= lt!36246 lt!36248)))

(declare-fun lt!36247 () Unit!2237)

(declare-fun e!51217 () Unit!2237)

(assert (=> d!18585 (= lt!36247 e!51217)))

(declare-fun c!12008 () Bool)

(assert (=> d!18585 (= c!12008 lt!36248)))

(assert (=> d!18585 (= lt!36248 (containsKey!141 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041))))

(assert (=> d!18585 (= (contains!736 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36041) lt!36246)))

(declare-fun b!78338 () Bool)

(declare-fun lt!36245 () Unit!2237)

(assert (=> b!78338 (= e!51217 lt!36245)))

(assert (=> b!78338 (= lt!36245 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041))))

(assert (=> b!78338 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041))))

(declare-fun b!78339 () Bool)

(declare-fun Unit!2253 () Unit!2237)

(assert (=> b!78339 (= e!51217 Unit!2253)))

(declare-fun b!78340 () Bool)

(assert (=> b!78340 (= e!51218 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041)))))

(assert (= (and d!18585 c!12008) b!78338))

(assert (= (and d!18585 (not c!12008)) b!78339))

(assert (= (and d!18585 (not res!41027)) b!78340))

(declare-fun m!78643 () Bool)

(assert (=> d!18585 m!78643))

(declare-fun m!78645 () Bool)

(assert (=> b!78338 m!78645))

(declare-fun m!78647 () Bool)

(assert (=> b!78338 m!78647))

(assert (=> b!78338 m!78647))

(declare-fun m!78649 () Bool)

(assert (=> b!78338 m!78649))

(assert (=> b!78340 m!78647))

(assert (=> b!78340 m!78647))

(assert (=> b!78340 m!78649))

(assert (=> b!78058 d!18585))

(declare-fun d!18587 () Bool)

(assert (=> d!18587 (= (apply!79 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36035) (apply!79 lt!36042 lt!36035))))

(declare-fun lt!36249 () Unit!2237)

(assert (=> d!18587 (= lt!36249 (choose!465 lt!36042 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36035))))

(declare-fun e!51219 () Bool)

(assert (=> d!18587 e!51219))

(declare-fun res!41028 () Bool)

(assert (=> d!18587 (=> (not res!41028) (not e!51219))))

(assert (=> d!18587 (= res!41028 (contains!736 lt!36042 lt!36035))))

(assert (=> d!18587 (= (addApplyDifferent!55 lt!36042 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36035) lt!36249)))

(declare-fun b!78341 () Bool)

(assert (=> b!78341 (= e!51219 (not (= lt!36035 lt!36045)))))

(assert (= (and d!18587 res!41028) b!78341))

(assert (=> d!18587 m!78241))

(declare-fun m!78651 () Bool)

(assert (=> d!18587 m!78651))

(assert (=> d!18587 m!78231))

(assert (=> d!18587 m!78233))

(declare-fun m!78653 () Bool)

(assert (=> d!18587 m!78653))

(assert (=> d!18587 m!78231))

(assert (=> b!78058 d!18587))

(declare-fun d!18589 () Bool)

(assert (=> d!18589 (= (apply!79 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36033) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36033)))))

(declare-fun bs!3329 () Bool)

(assert (= bs!3329 d!18589))

(declare-fun m!78655 () Bool)

(assert (=> bs!3329 m!78655))

(assert (=> bs!3329 m!78655))

(declare-fun m!78657 () Bool)

(assert (=> bs!3329 m!78657))

(assert (=> b!78058 d!18589))

(declare-fun b!78358 () Bool)

(declare-fun res!41039 () Bool)

(declare-fun e!51231 () Bool)

(assert (=> b!78358 (=> (not res!41039) (not e!51231))))

(declare-fun lt!36255 () SeekEntryResult!234)

(assert (=> b!78358 (= res!41039 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3073 lt!36255)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78358 (and (bvsge (index!3073 lt!36255) #b00000000000000000000000000000000) (bvslt (index!3073 lt!36255) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78359 () Bool)

(assert (=> b!78359 (and (bvsge (index!3070 lt!36255) #b00000000000000000000000000000000) (bvslt (index!3070 lt!36255) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun res!41040 () Bool)

(assert (=> b!78359 (= res!41040 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3070 lt!36255)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51228 () Bool)

(assert (=> b!78359 (=> (not res!41040) (not e!51228))))

(declare-fun b!78360 () Bool)

(declare-fun call!7180 () Bool)

(assert (=> b!78360 (= e!51231 (not call!7180))))

(declare-fun b!78361 () Bool)

(declare-fun e!51229 () Bool)

(declare-fun e!51230 () Bool)

(assert (=> b!78361 (= e!51229 e!51230)))

(declare-fun c!12013 () Bool)

(assert (=> b!78361 (= c!12013 ((_ is MissingVacant!234) lt!36255))))

(declare-fun b!78362 () Bool)

(assert (=> b!78362 (= e!51228 (not call!7180))))

(declare-fun c!12014 () Bool)

(declare-fun call!7181 () Bool)

(declare-fun bm!7177 () Bool)

(assert (=> bm!7177 (= call!7181 (inRange!0 (ite c!12014 (index!3070 lt!36255) (index!3073 lt!36255)) (mask!6267 newMap!16)))))

(declare-fun b!78363 () Bool)

(declare-fun res!41037 () Bool)

(assert (=> b!78363 (=> (not res!41037) (not e!51231))))

(assert (=> b!78363 (= res!41037 call!7181)))

(assert (=> b!78363 (= e!51230 e!51231)))

(declare-fun b!78364 () Bool)

(assert (=> b!78364 (= e!51229 e!51228)))

(declare-fun res!41038 () Bool)

(assert (=> b!78364 (= res!41038 call!7181)))

(assert (=> b!78364 (=> (not res!41038) (not e!51228))))

(declare-fun bm!7178 () Bool)

(assert (=> bm!7178 (= call!7180 (arrayContainsKey!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!18591 () Bool)

(assert (=> d!18591 e!51229))

(assert (=> d!18591 (= c!12014 ((_ is MissingZero!234) lt!36255))))

(assert (=> d!18591 (= lt!36255 (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun lt!36254 () Unit!2237)

(declare-fun choose!466 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) Int) Unit!2237)

(assert (=> d!18591 (= lt!36254 (choose!466 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18591 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18591 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)) lt!36254)))

(declare-fun b!78365 () Bool)

(assert (=> b!78365 (= e!51230 ((_ is Undefined!234) lt!36255))))

(assert (= (and d!18591 c!12014) b!78364))

(assert (= (and d!18591 (not c!12014)) b!78361))

(assert (= (and b!78364 res!41038) b!78359))

(assert (= (and b!78359 res!41040) b!78362))

(assert (= (and b!78361 c!12013) b!78363))

(assert (= (and b!78361 (not c!12013)) b!78365))

(assert (= (and b!78363 res!41037) b!78358))

(assert (= (and b!78358 res!41039) b!78360))

(assert (= (or b!78364 b!78363) bm!7177))

(assert (= (or b!78362 b!78360) bm!7178))

(declare-fun m!78659 () Bool)

(assert (=> bm!7177 m!78659))

(assert (=> d!18591 m!77885))

(assert (=> d!18591 m!78327))

(assert (=> d!18591 m!77885))

(declare-fun m!78661 () Bool)

(assert (=> d!18591 m!78661))

(assert (=> d!18591 m!78355))

(assert (=> bm!7178 m!77885))

(assert (=> bm!7178 m!78317))

(declare-fun m!78663 () Bool)

(assert (=> b!78358 m!78663))

(declare-fun m!78665 () Bool)

(assert (=> b!78359 m!78665))

(assert (=> bm!7157 d!18591))

(assert (=> d!18479 d!18483))

(declare-fun d!18593 () Bool)

(assert (=> d!18593 (not (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!18593 true))

(declare-fun _$68!64 () Unit!2237)

(assert (=> d!18593 (= (choose!68 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492)) _$68!64)))

(declare-fun bs!3330 () Bool)

(assert (= bs!3330 d!18593))

(assert (=> bs!3330 m!77885))

(assert (=> bs!3330 m!77905))

(assert (=> d!18479 d!18593))

(declare-fun d!18595 () Bool)

(assert (=> d!18595 (= (apply!79 lt!35932 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1186 (getValueByKey!138 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3331 () Bool)

(assert (= bs!3331 d!18595))

(assert (=> bs!3331 m!78085))

(assert (=> bs!3331 m!78537))

(assert (=> bs!3331 m!78537))

(declare-fun m!78667 () Bool)

(assert (=> bs!3331 m!78667))

(assert (=> b!77946 d!18595))

(declare-fun d!18597 () Bool)

(declare-fun c!12015 () Bool)

(assert (=> d!18597 (= c!12015 ((_ is ValueCellFull!911) (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!51232 () V!2993)

(assert (=> d!18597 (= (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51232)))

(declare-fun b!78366 () Bool)

(assert (=> b!78366 (= e!51232 (get!1184 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78367 () Bool)

(assert (=> b!78367 (= e!51232 (get!1185 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18597 c!12015) b!78366))

(assert (= (and d!18597 (not c!12015)) b!78367))

(assert (=> b!78366 m!78103))

(assert (=> b!78366 m!77939))

(declare-fun m!78669 () Bool)

(assert (=> b!78366 m!78669))

(assert (=> b!78367 m!78103))

(assert (=> b!78367 m!77939))

(declare-fun m!78671 () Bool)

(assert (=> b!78367 m!78671))

(assert (=> b!77946 d!18597))

(assert (=> d!18493 d!18541))

(declare-fun d!18599 () Bool)

(declare-fun e!51234 () Bool)

(assert (=> d!18599 e!51234))

(declare-fun res!41041 () Bool)

(assert (=> d!18599 (=> res!41041 e!51234)))

(declare-fun lt!36257 () Bool)

(assert (=> d!18599 (= res!41041 (not lt!36257))))

(declare-fun lt!36259 () Bool)

(assert (=> d!18599 (= lt!36257 lt!36259)))

(declare-fun lt!36258 () Unit!2237)

(declare-fun e!51233 () Unit!2237)

(assert (=> d!18599 (= lt!36258 e!51233)))

(declare-fun c!12016 () Bool)

(assert (=> d!18599 (= c!12016 lt!36259)))

(assert (=> d!18599 (= lt!36259 (containsKey!141 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!18599 (= (contains!736 e!51123 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) lt!36257)))

(declare-fun b!78368 () Bool)

(declare-fun lt!36256 () Unit!2237)

(assert (=> b!78368 (= e!51233 lt!36256)))

(assert (=> b!78368 (= lt!36256 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> b!78368 (isDefined!90 (getValueByKey!138 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!78369 () Bool)

(declare-fun Unit!2254 () Unit!2237)

(assert (=> b!78369 (= e!51233 Unit!2254)))

(declare-fun b!78370 () Bool)

(assert (=> b!78370 (= e!51234 (isDefined!90 (getValueByKey!138 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (= (and d!18599 c!12016) b!78368))

(assert (= (and d!18599 (not c!12016)) b!78369))

(assert (= (and d!18599 (not res!41041)) b!78370))

(assert (=> d!18599 m!77885))

(declare-fun m!78673 () Bool)

(assert (=> d!18599 m!78673))

(assert (=> b!78368 m!77885))

(declare-fun m!78675 () Bool)

(assert (=> b!78368 m!78675))

(assert (=> b!78368 m!77885))

(declare-fun m!78677 () Bool)

(assert (=> b!78368 m!78677))

(assert (=> b!78368 m!78677))

(declare-fun m!78679 () Bool)

(assert (=> b!78368 m!78679))

(assert (=> b!78370 m!77885))

(assert (=> b!78370 m!78677))

(assert (=> b!78370 m!78677))

(assert (=> b!78370 m!78679))

(assert (=> bm!7158 d!18599))

(assert (=> bm!7065 d!18537))

(declare-fun d!18601 () Bool)

(declare-fun res!41042 () Bool)

(declare-fun e!51235 () Bool)

(assert (=> d!18601 (=> (not res!41042) (not e!51235))))

(assert (=> d!18601 (= res!41042 (simpleValid!55 (v!2594 (underlying!280 thiss!992))))))

(assert (=> d!18601 (= (valid!323 (v!2594 (underlying!280 thiss!992))) e!51235)))

(declare-fun b!78371 () Bool)

(declare-fun res!41043 () Bool)

(assert (=> b!78371 (=> (not res!41043) (not e!51235))))

(assert (=> b!78371 (= res!41043 (= (arrayCountValidKeys!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000 (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))) (_size!414 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun b!78372 () Bool)

(declare-fun res!41044 () Bool)

(assert (=> b!78372 (=> (not res!41044) (not e!51235))))

(assert (=> b!78372 (= res!41044 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun b!78373 () Bool)

(assert (=> b!78373 (= e!51235 (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000 Nil!1492))))

(assert (= (and d!18601 res!41042) b!78371))

(assert (= (and b!78371 res!41043) b!78372))

(assert (= (and b!78372 res!41044) b!78373))

(declare-fun m!78681 () Bool)

(assert (=> d!18601 m!78681))

(declare-fun m!78683 () Bool)

(assert (=> b!78371 m!78683))

(declare-fun m!78685 () Bool)

(assert (=> b!78372 m!78685))

(declare-fun m!78687 () Bool)

(assert (=> b!78373 m!78687))

(assert (=> d!18491 d!18601))

(declare-fun bm!7179 () Bool)

(declare-fun call!7182 () Bool)

(declare-fun c!12017 () Bool)

(assert (=> bm!7179 (= call!7182 (arrayNoDuplicates!0 (_keys!3931 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12017 (Cons!1491 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) Nil!1492) Nil!1492)))))

(declare-fun b!78375 () Bool)

(declare-fun e!51239 () Bool)

(assert (=> b!78375 (= e!51239 (contains!738 Nil!1492 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78376 () Bool)

(declare-fun e!51237 () Bool)

(declare-fun e!51236 () Bool)

(assert (=> b!78376 (= e!51237 e!51236)))

(assert (=> b!78376 (= c!12017 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78377 () Bool)

(declare-fun e!51238 () Bool)

(assert (=> b!78377 (= e!51238 e!51237)))

(declare-fun res!41045 () Bool)

(assert (=> b!78377 (=> (not res!41045) (not e!51237))))

(assert (=> b!78377 (= res!41045 (not e!51239))))

(declare-fun res!41047 () Bool)

(assert (=> b!78377 (=> (not res!41047) (not e!51239))))

(assert (=> b!78377 (= res!41047 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78378 () Bool)

(assert (=> b!78378 (= e!51236 call!7182)))

(declare-fun d!18603 () Bool)

(declare-fun res!41046 () Bool)

(assert (=> d!18603 (=> res!41046 e!51238)))

(assert (=> d!18603 (= res!41046 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18603 (= (arrayNoDuplicates!0 (_keys!3931 newMap!16) #b00000000000000000000000000000000 Nil!1492) e!51238)))

(declare-fun b!78374 () Bool)

(assert (=> b!78374 (= e!51236 call!7182)))

(assert (= (and d!18603 (not res!41046)) b!78377))

(assert (= (and b!78377 res!41047) b!78375))

(assert (= (and b!78377 res!41045) b!78376))

(assert (= (and b!78376 c!12017) b!78378))

(assert (= (and b!78376 (not c!12017)) b!78374))

(assert (= (or b!78378 b!78374) bm!7179))

(assert (=> bm!7179 m!78435))

(declare-fun m!78689 () Bool)

(assert (=> bm!7179 m!78689))

(assert (=> b!78375 m!78435))

(assert (=> b!78375 m!78435))

(declare-fun m!78691 () Bool)

(assert (=> b!78375 m!78691))

(assert (=> b!78376 m!78435))

(assert (=> b!78376 m!78435))

(assert (=> b!78376 m!78437))

(assert (=> b!78377 m!78435))

(assert (=> b!78377 m!78435))

(assert (=> b!78377 m!78437))

(assert (=> b!78215 d!18603))

(declare-fun d!18605 () Bool)

(assert (=> d!18605 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36142 (zeroValue!2169 newMap!16) lt!35794 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36262 () Unit!2237)

(declare-fun choose!467 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 V!2993 Int) Unit!2237)

(assert (=> d!18605 (= lt!36262 (choose!467 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) lt!36142 (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) lt!35794 (defaultEntry!2271 newMap!16)))))

(assert (=> d!18605 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18605 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) lt!36142 (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) lt!35794 (defaultEntry!2271 newMap!16)) lt!36262)))

(declare-fun bs!3332 () Bool)

(assert (= bs!3332 d!18605))

(assert (=> bs!3332 m!78223))

(assert (=> bs!3332 m!78355))

(declare-fun m!78693 () Bool)

(assert (=> bs!3332 m!78693))

(assert (=> bs!3332 m!78223))

(declare-fun m!78695 () Bool)

(assert (=> bs!3332 m!78695))

(declare-fun m!78697 () Bool)

(assert (=> bs!3332 m!78697))

(assert (=> b!78187 d!18605))

(declare-fun d!18607 () Bool)

(declare-fun lt!36263 () Bool)

(assert (=> d!18607 (= lt!36263 (select (content!84 (toList!729 lt!35953)) lt!35792))))

(declare-fun e!51241 () Bool)

(assert (=> d!18607 (= lt!36263 e!51241)))

(declare-fun res!41049 () Bool)

(assert (=> d!18607 (=> (not res!41049) (not e!51241))))

(assert (=> d!18607 (= res!41049 ((_ is Cons!1490) (toList!729 lt!35953)))))

(assert (=> d!18607 (= (contains!737 (toList!729 lt!35953) lt!35792) lt!36263)))

(declare-fun b!78379 () Bool)

(declare-fun e!51240 () Bool)

(assert (=> b!78379 (= e!51241 e!51240)))

(declare-fun res!41048 () Bool)

(assert (=> b!78379 (=> res!41048 e!51240)))

(assert (=> b!78379 (= res!41048 (= (h!2078 (toList!729 lt!35953)) lt!35792))))

(declare-fun b!78380 () Bool)

(assert (=> b!78380 (= e!51240 (contains!737 (t!5132 (toList!729 lt!35953)) lt!35792))))

(assert (= (and d!18607 res!41049) b!78379))

(assert (= (and b!78379 (not res!41048)) b!78380))

(declare-fun m!78699 () Bool)

(assert (=> d!18607 m!78699))

(declare-fun m!78701 () Bool)

(assert (=> d!18607 m!78701))

(declare-fun m!78703 () Bool)

(assert (=> b!78380 m!78703))

(assert (=> b!77965 d!18607))

(declare-fun d!18609 () Bool)

(assert (=> d!18609 (= (apply!79 lt!36049 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1186 (getValueByKey!138 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3333 () Bool)

(assert (= bs!3333 d!18609))

(assert (=> bs!3333 m!78085))

(declare-fun m!78705 () Bool)

(assert (=> bs!3333 m!78705))

(assert (=> bs!3333 m!78705))

(declare-fun m!78707 () Bool)

(assert (=> bs!3333 m!78707))

(assert (=> b!78070 d!18609))

(assert (=> b!78070 d!18597))

(declare-fun d!18611 () Bool)

(declare-fun lt!36264 () Bool)

(assert (=> d!18611 (= lt!36264 (select (content!84 (toList!729 lt!35957)) lt!35789))))

(declare-fun e!51243 () Bool)

(assert (=> d!18611 (= lt!36264 e!51243)))

(declare-fun res!41051 () Bool)

(assert (=> d!18611 (=> (not res!41051) (not e!51243))))

(assert (=> d!18611 (= res!41051 ((_ is Cons!1490) (toList!729 lt!35957)))))

(assert (=> d!18611 (= (contains!737 (toList!729 lt!35957) lt!35789) lt!36264)))

(declare-fun b!78381 () Bool)

(declare-fun e!51242 () Bool)

(assert (=> b!78381 (= e!51243 e!51242)))

(declare-fun res!41050 () Bool)

(assert (=> b!78381 (=> res!41050 e!51242)))

(assert (=> b!78381 (= res!41050 (= (h!2078 (toList!729 lt!35957)) lt!35789))))

(declare-fun b!78382 () Bool)

(assert (=> b!78382 (= e!51242 (contains!737 (t!5132 (toList!729 lt!35957)) lt!35789))))

(assert (= (and d!18611 res!41051) b!78381))

(assert (= (and b!78381 (not res!41050)) b!78382))

(declare-fun m!78709 () Bool)

(assert (=> d!18611 m!78709))

(declare-fun m!78711 () Bool)

(assert (=> d!18611 m!78711))

(declare-fun m!78713 () Bool)

(assert (=> b!78382 m!78713))

(assert (=> b!77967 d!18611))

(declare-fun d!18613 () Bool)

(declare-fun e!51245 () Bool)

(assert (=> d!18613 e!51245))

(declare-fun res!41052 () Bool)

(assert (=> d!18613 (=> res!41052 e!51245)))

(declare-fun lt!36266 () Bool)

(assert (=> d!18613 (= res!41052 (not lt!36266))))

(declare-fun lt!36268 () Bool)

(assert (=> d!18613 (= lt!36266 lt!36268)))

(declare-fun lt!36267 () Unit!2237)

(declare-fun e!51244 () Unit!2237)

(assert (=> d!18613 (= lt!36267 e!51244)))

(declare-fun c!12018 () Bool)

(assert (=> d!18613 (= c!12018 lt!36268)))

(assert (=> d!18613 (= lt!36268 (containsKey!141 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18613 (= (contains!736 lt!36049 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36266)))

(declare-fun b!78383 () Bool)

(declare-fun lt!36265 () Unit!2237)

(assert (=> b!78383 (= e!51244 lt!36265)))

(assert (=> b!78383 (= lt!36265 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78383 (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78384 () Bool)

(declare-fun Unit!2255 () Unit!2237)

(assert (=> b!78384 (= e!51244 Unit!2255)))

(declare-fun b!78385 () Bool)

(assert (=> b!78385 (= e!51245 (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18613 c!12018) b!78383))

(assert (= (and d!18613 (not c!12018)) b!78384))

(assert (= (and d!18613 (not res!41052)) b!78385))

(declare-fun m!78715 () Bool)

(assert (=> d!18613 m!78715))

(declare-fun m!78717 () Bool)

(assert (=> b!78383 m!78717))

(assert (=> b!78383 m!78529))

(assert (=> b!78383 m!78529))

(declare-fun m!78719 () Bool)

(assert (=> b!78383 m!78719))

(assert (=> b!78385 m!78529))

(assert (=> b!78385 m!78529))

(assert (=> b!78385 m!78719))

(assert (=> bm!7083 d!18613))

(declare-fun b!78386 () Bool)

(declare-fun e!51252 () ListLongMap!1427)

(declare-fun call!7185 () ListLongMap!1427)

(assert (=> b!78386 (= e!51252 call!7185)))

(declare-fun call!7188 () ListLongMap!1427)

(declare-fun e!51253 () ListLongMap!1427)

(declare-fun b!78387 () Bool)

(assert (=> b!78387 (= e!51253 (+!100 call!7188 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))

(declare-fun b!78389 () Bool)

(declare-fun e!51255 () Bool)

(assert (=> b!78389 (= e!51255 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7180 () Bool)

(declare-fun call!7187 () Bool)

(declare-fun lt!36289 () ListLongMap!1427)

(assert (=> bm!7180 (= call!7187 (contains!736 lt!36289 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78390 () Bool)

(declare-fun e!51246 () Bool)

(declare-fun e!51257 () Bool)

(assert (=> b!78390 (= e!51246 e!51257)))

(declare-fun c!12019 () Bool)

(assert (=> b!78390 (= c!12019 (not (= (bvand (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78391 () Bool)

(declare-fun e!51249 () Unit!2237)

(declare-fun Unit!2256 () Unit!2237)

(assert (=> b!78391 (= e!51249 Unit!2256)))

(declare-fun b!78392 () Bool)

(declare-fun res!41058 () Bool)

(assert (=> b!78392 (=> (not res!41058) (not e!51246))))

(declare-fun e!51258 () Bool)

(assert (=> b!78392 (= res!41058 e!51258)))

(declare-fun c!12021 () Bool)

(assert (=> b!78392 (= c!12021 (not (= (bvand (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78393 () Bool)

(declare-fun lt!36277 () Unit!2237)

(assert (=> b!78393 (= e!51249 lt!36277)))

(declare-fun lt!36283 () ListLongMap!1427)

(assert (=> b!78393 (= lt!36283 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) (mask!6267 newMap!16) (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36280 () (_ BitVec 64))

(assert (=> b!78393 (= lt!36280 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36281 () (_ BitVec 64))

(assert (=> b!78393 (= lt!36281 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36290 () Unit!2237)

(assert (=> b!78393 (= lt!36290 (addStillContains!55 lt!36283 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) lt!36281))))

(assert (=> b!78393 (contains!736 (+!100 lt!36283 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) lt!36281)))

(declare-fun lt!36269 () Unit!2237)

(assert (=> b!78393 (= lt!36269 lt!36290)))

(declare-fun lt!36279 () ListLongMap!1427)

(assert (=> b!78393 (= lt!36279 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) (mask!6267 newMap!16) (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36286 () (_ BitVec 64))

(assert (=> b!78393 (= lt!36286 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36284 () (_ BitVec 64))

(assert (=> b!78393 (= lt!36284 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36287 () Unit!2237)

(assert (=> b!78393 (= lt!36287 (addApplyDifferent!55 lt!36279 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) lt!36284))))

(assert (=> b!78393 (= (apply!79 (+!100 lt!36279 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) lt!36284) (apply!79 lt!36279 lt!36284))))

(declare-fun lt!36272 () Unit!2237)

(assert (=> b!78393 (= lt!36272 lt!36287)))

(declare-fun lt!36282 () ListLongMap!1427)

(assert (=> b!78393 (= lt!36282 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) (mask!6267 newMap!16) (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36285 () (_ BitVec 64))

(assert (=> b!78393 (= lt!36285 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36275 () (_ BitVec 64))

(assert (=> b!78393 (= lt!36275 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36270 () Unit!2237)

(assert (=> b!78393 (= lt!36270 (addApplyDifferent!55 lt!36282 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) lt!36275))))

(assert (=> b!78393 (= (apply!79 (+!100 lt!36282 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) lt!36275) (apply!79 lt!36282 lt!36275))))

(declare-fun lt!36288 () Unit!2237)

(assert (=> b!78393 (= lt!36288 lt!36270)))

(declare-fun lt!36276 () ListLongMap!1427)

(assert (=> b!78393 (= lt!36276 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) (mask!6267 newMap!16) (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36274 () (_ BitVec 64))

(assert (=> b!78393 (= lt!36274 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36273 () (_ BitVec 64))

(assert (=> b!78393 (= lt!36273 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78393 (= lt!36277 (addApplyDifferent!55 lt!36276 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) lt!36273))))

(assert (=> b!78393 (= (apply!79 (+!100 lt!36276 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) lt!36273) (apply!79 lt!36276 lt!36273))))

(declare-fun b!78394 () Bool)

(declare-fun e!51247 () Bool)

(assert (=> b!78394 (= e!51257 e!51247)))

(declare-fun res!41055 () Bool)

(assert (=> b!78394 (= res!41055 call!7187)))

(assert (=> b!78394 (=> (not res!41055) (not e!51247))))

(declare-fun bm!7181 () Bool)

(declare-fun call!7189 () ListLongMap!1427)

(assert (=> bm!7181 (= call!7185 call!7189)))

(declare-fun bm!7182 () Bool)

(declare-fun call!7186 () ListLongMap!1427)

(assert (=> bm!7182 (= call!7186 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) (mask!6267 newMap!16) (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78395 () Bool)

(assert (=> b!78395 (= e!51257 (not call!7187))))

(declare-fun b!78396 () Bool)

(declare-fun call!7183 () Bool)

(assert (=> b!78396 (= e!51258 (not call!7183))))

(declare-fun bm!7183 () Bool)

(declare-fun c!12022 () Bool)

(declare-fun c!12024 () Bool)

(assert (=> bm!7183 (= call!7188 (+!100 (ite c!12024 call!7186 (ite c!12022 call!7189 call!7185)) (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(declare-fun b!78397 () Bool)

(assert (=> b!78397 (= e!51247 (= (apply!79 lt!36289 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))

(declare-fun b!78398 () Bool)

(declare-fun res!41057 () Bool)

(assert (=> b!78398 (=> (not res!41057) (not e!51246))))

(declare-fun e!51254 () Bool)

(assert (=> b!78398 (= res!41057 e!51254)))

(declare-fun res!41059 () Bool)

(assert (=> b!78398 (=> res!41059 e!51254)))

(declare-fun e!51250 () Bool)

(assert (=> b!78398 (= res!41059 (not e!51250))))

(declare-fun res!41056 () Bool)

(assert (=> b!78398 (=> (not res!41056) (not e!51250))))

(assert (=> b!78398 (= res!41056 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78399 () Bool)

(assert (=> b!78399 (= e!51250 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!18615 () Bool)

(assert (=> d!18615 e!51246))

(declare-fun res!41061 () Bool)

(assert (=> d!18615 (=> (not res!41061) (not e!51246))))

(assert (=> d!18615 (= res!41061 (or (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))))

(declare-fun lt!36278 () ListLongMap!1427)

(assert (=> d!18615 (= lt!36289 lt!36278)))

(declare-fun lt!36271 () Unit!2237)

(assert (=> d!18615 (= lt!36271 e!51249)))

(declare-fun c!12023 () Bool)

(assert (=> d!18615 (= c!12023 e!51255)))

(declare-fun res!41060 () Bool)

(assert (=> d!18615 (=> (not res!41060) (not e!51255))))

(assert (=> d!18615 (= res!41060 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18615 (= lt!36278 e!51253)))

(assert (=> d!18615 (= c!12024 (and (not (= (bvand (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18615 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18615 (= (getCurrentListMap!425 (_keys!3931 newMap!16) (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) (mask!6267 newMap!16) (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36289)))

(declare-fun b!78388 () Bool)

(declare-fun e!51251 () ListLongMap!1427)

(assert (=> b!78388 (= e!51253 e!51251)))

(assert (=> b!78388 (= c!12022 (and (not (= (bvand (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78400 () Bool)

(declare-fun call!7184 () ListLongMap!1427)

(assert (=> b!78400 (= e!51252 call!7184)))

(declare-fun bm!7184 () Bool)

(assert (=> bm!7184 (= call!7183 (contains!736 lt!36289 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7185 () Bool)

(assert (=> bm!7185 (= call!7184 call!7188)))

(declare-fun c!12020 () Bool)

(declare-fun b!78401 () Bool)

(assert (=> b!78401 (= c!12020 (and (not (= (bvand (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78401 (= e!51251 e!51252)))

(declare-fun b!78402 () Bool)

(declare-fun e!51248 () Bool)

(assert (=> b!78402 (= e!51248 (= (apply!79 lt!36289 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))))

(declare-fun b!78403 () Bool)

(assert (=> b!78403 (= e!51258 e!51248)))

(declare-fun res!41054 () Bool)

(assert (=> b!78403 (= res!41054 call!7183)))

(assert (=> b!78403 (=> (not res!41054) (not e!51248))))

(declare-fun b!78404 () Bool)

(declare-fun e!51256 () Bool)

(assert (=> b!78404 (= e!51254 e!51256)))

(declare-fun res!41053 () Bool)

(assert (=> b!78404 (=> (not res!41053) (not e!51256))))

(assert (=> b!78404 (= res!41053 (contains!736 lt!36289 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78404 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78405 () Bool)

(assert (=> b!78405 (= e!51256 (= (apply!79 lt!36289 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78405 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))))))))

(assert (=> b!78405 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78406 () Bool)

(assert (=> b!78406 (= e!51251 call!7184)))

(declare-fun bm!7186 () Bool)

(assert (=> bm!7186 (= call!7189 call!7186)))

(assert (= (and d!18615 c!12024) b!78387))

(assert (= (and d!18615 (not c!12024)) b!78388))

(assert (= (and b!78388 c!12022) b!78406))

(assert (= (and b!78388 (not c!12022)) b!78401))

(assert (= (and b!78401 c!12020) b!78400))

(assert (= (and b!78401 (not c!12020)) b!78386))

(assert (= (or b!78400 b!78386) bm!7181))

(assert (= (or b!78406 bm!7181) bm!7186))

(assert (= (or b!78406 b!78400) bm!7185))

(assert (= (or b!78387 bm!7186) bm!7182))

(assert (= (or b!78387 bm!7185) bm!7183))

(assert (= (and d!18615 res!41060) b!78389))

(assert (= (and d!18615 c!12023) b!78393))

(assert (= (and d!18615 (not c!12023)) b!78391))

(assert (= (and d!18615 res!41061) b!78398))

(assert (= (and b!78398 res!41056) b!78399))

(assert (= (and b!78398 (not res!41059)) b!78404))

(assert (= (and b!78404 res!41053) b!78405))

(assert (= (and b!78398 res!41057) b!78392))

(assert (= (and b!78392 c!12021) b!78403))

(assert (= (and b!78392 (not c!12021)) b!78396))

(assert (= (and b!78403 res!41054) b!78402))

(assert (= (or b!78403 b!78396) bm!7184))

(assert (= (and b!78392 res!41058) b!78390))

(assert (= (and b!78390 c!12019) b!78394))

(assert (= (and b!78390 (not c!12019)) b!78395))

(assert (= (and b!78394 res!41055) b!78397))

(assert (= (or b!78394 b!78395) bm!7180))

(declare-fun b_lambda!3519 () Bool)

(assert (=> (not b_lambda!3519) (not b!78405)))

(assert (=> b!78405 t!5144))

(declare-fun b_and!4833 () Bool)

(assert (= b_and!4829 (and (=> t!5144 result!2821) b_and!4833)))

(assert (=> b!78405 t!5146))

(declare-fun b_and!4835 () Bool)

(assert (= b_and!4831 (and (=> t!5146 result!2823) b_and!4835)))

(declare-fun m!78721 () Bool)

(assert (=> b!78405 m!78721))

(assert (=> b!78405 m!78471))

(declare-fun m!78723 () Bool)

(assert (=> b!78405 m!78723))

(assert (=> b!78405 m!78435))

(assert (=> b!78405 m!78721))

(assert (=> b!78405 m!78435))

(declare-fun m!78725 () Bool)

(assert (=> b!78405 m!78725))

(assert (=> b!78405 m!78471))

(assert (=> d!18615 m!78355))

(declare-fun m!78727 () Bool)

(assert (=> bm!7183 m!78727))

(assert (=> b!78404 m!78435))

(assert (=> b!78404 m!78435))

(declare-fun m!78729 () Bool)

(assert (=> b!78404 m!78729))

(declare-fun m!78731 () Bool)

(assert (=> bm!7182 m!78731))

(assert (=> b!78399 m!78435))

(assert (=> b!78399 m!78435))

(assert (=> b!78399 m!78437))

(assert (=> b!78389 m!78435))

(assert (=> b!78389 m!78435))

(assert (=> b!78389 m!78437))

(declare-fun m!78733 () Bool)

(assert (=> b!78393 m!78733))

(declare-fun m!78735 () Bool)

(assert (=> b!78393 m!78735))

(declare-fun m!78737 () Bool)

(assert (=> b!78393 m!78737))

(declare-fun m!78739 () Bool)

(assert (=> b!78393 m!78739))

(declare-fun m!78741 () Bool)

(assert (=> b!78393 m!78741))

(declare-fun m!78743 () Bool)

(assert (=> b!78393 m!78743))

(declare-fun m!78745 () Bool)

(assert (=> b!78393 m!78745))

(declare-fun m!78747 () Bool)

(assert (=> b!78393 m!78747))

(declare-fun m!78749 () Bool)

(assert (=> b!78393 m!78749))

(declare-fun m!78751 () Bool)

(assert (=> b!78393 m!78751))

(assert (=> b!78393 m!78745))

(declare-fun m!78753 () Bool)

(assert (=> b!78393 m!78753))

(assert (=> b!78393 m!78749))

(declare-fun m!78755 () Bool)

(assert (=> b!78393 m!78755))

(assert (=> b!78393 m!78737))

(declare-fun m!78757 () Bool)

(assert (=> b!78393 m!78757))

(assert (=> b!78393 m!78733))

(assert (=> b!78393 m!78731))

(declare-fun m!78759 () Bool)

(assert (=> b!78393 m!78759))

(declare-fun m!78761 () Bool)

(assert (=> b!78393 m!78761))

(assert (=> b!78393 m!78435))

(declare-fun m!78763 () Bool)

(assert (=> b!78387 m!78763))

(declare-fun m!78765 () Bool)

(assert (=> bm!7180 m!78765))

(declare-fun m!78767 () Bool)

(assert (=> bm!7184 m!78767))

(declare-fun m!78769 () Bool)

(assert (=> b!78397 m!78769))

(declare-fun m!78771 () Bool)

(assert (=> b!78402 m!78771))

(assert (=> bm!7154 d!18615))

(declare-fun d!18617 () Bool)

(declare-fun e!51260 () Bool)

(assert (=> d!18617 e!51260))

(declare-fun res!41062 () Bool)

(assert (=> d!18617 (=> res!41062 e!51260)))

(declare-fun lt!36292 () Bool)

(assert (=> d!18617 (= res!41062 (not lt!36292))))

(declare-fun lt!36294 () Bool)

(assert (=> d!18617 (= lt!36292 lt!36294)))

(declare-fun lt!36293 () Unit!2237)

(declare-fun e!51259 () Unit!2237)

(assert (=> d!18617 (= lt!36293 e!51259)))

(declare-fun c!12025 () Bool)

(assert (=> d!18617 (= c!12025 lt!36294)))

(assert (=> d!18617 (= lt!36294 (containsKey!141 (toList!729 lt!35969) (_1!1092 lt!35792)))))

(assert (=> d!18617 (= (contains!736 lt!35969 (_1!1092 lt!35792)) lt!36292)))

(declare-fun b!78407 () Bool)

(declare-fun lt!36291 () Unit!2237)

(assert (=> b!78407 (= e!51259 lt!36291)))

(assert (=> b!78407 (= lt!36291 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35969) (_1!1092 lt!35792)))))

(assert (=> b!78407 (isDefined!90 (getValueByKey!138 (toList!729 lt!35969) (_1!1092 lt!35792)))))

(declare-fun b!78408 () Bool)

(declare-fun Unit!2257 () Unit!2237)

(assert (=> b!78408 (= e!51259 Unit!2257)))

(declare-fun b!78409 () Bool)

(assert (=> b!78409 (= e!51260 (isDefined!90 (getValueByKey!138 (toList!729 lt!35969) (_1!1092 lt!35792))))))

(assert (= (and d!18617 c!12025) b!78407))

(assert (= (and d!18617 (not c!12025)) b!78408))

(assert (= (and d!18617 (not res!41062)) b!78409))

(declare-fun m!78773 () Bool)

(assert (=> d!18617 m!78773))

(declare-fun m!78775 () Bool)

(assert (=> b!78407 m!78775))

(assert (=> b!78407 m!78187))

(assert (=> b!78407 m!78187))

(declare-fun m!78777 () Bool)

(assert (=> b!78407 m!78777))

(assert (=> b!78409 m!78187))

(assert (=> b!78409 m!78187))

(assert (=> b!78409 m!78777))

(assert (=> d!18475 d!18617))

(declare-fun b!78410 () Bool)

(declare-fun e!51261 () Option!144)

(assert (=> b!78410 (= e!51261 (Some!143 (_2!1092 (h!2078 lt!35968))))))

(declare-fun b!78411 () Bool)

(declare-fun e!51262 () Option!144)

(assert (=> b!78411 (= e!51261 e!51262)))

(declare-fun c!12027 () Bool)

(assert (=> b!78411 (= c!12027 (and ((_ is Cons!1490) lt!35968) (not (= (_1!1092 (h!2078 lt!35968)) (_1!1092 lt!35792)))))))

(declare-fun b!78413 () Bool)

(assert (=> b!78413 (= e!51262 None!142)))

(declare-fun b!78412 () Bool)

(assert (=> b!78412 (= e!51262 (getValueByKey!138 (t!5132 lt!35968) (_1!1092 lt!35792)))))

(declare-fun d!18619 () Bool)

(declare-fun c!12026 () Bool)

(assert (=> d!18619 (= c!12026 (and ((_ is Cons!1490) lt!35968) (= (_1!1092 (h!2078 lt!35968)) (_1!1092 lt!35792))))))

(assert (=> d!18619 (= (getValueByKey!138 lt!35968 (_1!1092 lt!35792)) e!51261)))

(assert (= (and d!18619 c!12026) b!78410))

(assert (= (and d!18619 (not c!12026)) b!78411))

(assert (= (and b!78411 c!12027) b!78412))

(assert (= (and b!78411 (not c!12027)) b!78413))

(declare-fun m!78779 () Bool)

(assert (=> b!78412 m!78779))

(assert (=> d!18475 d!18619))

(declare-fun d!18621 () Bool)

(assert (=> d!18621 (= (getValueByKey!138 lt!35968 (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792)))))

(declare-fun lt!36297 () Unit!2237)

(declare-fun choose!468 (List!1494 (_ BitVec 64) V!2993) Unit!2237)

(assert (=> d!18621 (= lt!36297 (choose!468 lt!35968 (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(declare-fun e!51265 () Bool)

(assert (=> d!18621 e!51265))

(declare-fun res!41067 () Bool)

(assert (=> d!18621 (=> (not res!41067) (not e!51265))))

(declare-fun isStrictlySorted!282 (List!1494) Bool)

(assert (=> d!18621 (= res!41067 (isStrictlySorted!282 lt!35968))))

(assert (=> d!18621 (= (lemmaContainsTupThenGetReturnValue!55 lt!35968 (_1!1092 lt!35792) (_2!1092 lt!35792)) lt!36297)))

(declare-fun b!78418 () Bool)

(declare-fun res!41068 () Bool)

(assert (=> b!78418 (=> (not res!41068) (not e!51265))))

(assert (=> b!78418 (= res!41068 (containsKey!141 lt!35968 (_1!1092 lt!35792)))))

(declare-fun b!78419 () Bool)

(assert (=> b!78419 (= e!51265 (contains!737 lt!35968 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(assert (= (and d!18621 res!41067) b!78418))

(assert (= (and b!78418 res!41068) b!78419))

(assert (=> d!18621 m!78181))

(declare-fun m!78781 () Bool)

(assert (=> d!18621 m!78781))

(declare-fun m!78783 () Bool)

(assert (=> d!18621 m!78783))

(declare-fun m!78785 () Bool)

(assert (=> b!78418 m!78785))

(declare-fun m!78787 () Bool)

(assert (=> b!78419 m!78787))

(assert (=> d!18475 d!18621))

(declare-fun b!78440 () Bool)

(declare-fun e!51278 () List!1494)

(declare-fun e!51276 () List!1494)

(assert (=> b!78440 (= e!51278 e!51276)))

(declare-fun c!12037 () Bool)

(assert (=> b!78440 (= c!12037 (and ((_ is Cons!1490) (toList!729 lt!35804)) (= (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 lt!35792))))))

(declare-fun b!78441 () Bool)

(declare-fun c!12036 () Bool)

(assert (=> b!78441 (= c!12036 (and ((_ is Cons!1490) (toList!729 lt!35804)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 lt!35792))))))

(declare-fun e!51280 () List!1494)

(assert (=> b!78441 (= e!51276 e!51280)))

(declare-fun b!78442 () Bool)

(declare-fun call!7196 () List!1494)

(assert (=> b!78442 (= e!51280 call!7196)))

(declare-fun b!78443 () Bool)

(declare-fun call!7198 () List!1494)

(assert (=> b!78443 (= e!51276 call!7198)))

(declare-fun bm!7194 () Bool)

(assert (=> bm!7194 (= call!7196 call!7198)))

(declare-fun b!78444 () Bool)

(declare-fun e!51279 () List!1494)

(assert (=> b!78444 (= e!51279 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35804)) (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(declare-fun b!78445 () Bool)

(declare-fun call!7197 () List!1494)

(assert (=> b!78445 (= e!51278 call!7197)))

(declare-fun b!78446 () Bool)

(assert (=> b!78446 (= e!51279 (ite c!12037 (t!5132 (toList!729 lt!35804)) (ite c!12036 (Cons!1490 (h!2078 (toList!729 lt!35804)) (t!5132 (toList!729 lt!35804))) Nil!1491)))))

(declare-fun d!18623 () Bool)

(declare-fun e!51277 () Bool)

(assert (=> d!18623 e!51277))

(declare-fun res!41074 () Bool)

(assert (=> d!18623 (=> (not res!41074) (not e!51277))))

(declare-fun lt!36300 () List!1494)

(assert (=> d!18623 (= res!41074 (isStrictlySorted!282 lt!36300))))

(assert (=> d!18623 (= lt!36300 e!51278)))

(declare-fun c!12039 () Bool)

(assert (=> d!18623 (= c!12039 (and ((_ is Cons!1490) (toList!729 lt!35804)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 lt!35792))))))

(assert (=> d!18623 (isStrictlySorted!282 (toList!729 lt!35804))))

(assert (=> d!18623 (= (insertStrictlySorted!58 (toList!729 lt!35804) (_1!1092 lt!35792) (_2!1092 lt!35792)) lt!36300)))

(declare-fun bm!7193 () Bool)

(assert (=> bm!7193 (= call!7198 call!7197)))

(declare-fun b!78447 () Bool)

(declare-fun res!41073 () Bool)

(assert (=> b!78447 (=> (not res!41073) (not e!51277))))

(assert (=> b!78447 (= res!41073 (containsKey!141 lt!36300 (_1!1092 lt!35792)))))

(declare-fun b!78448 () Bool)

(assert (=> b!78448 (= e!51280 call!7196)))

(declare-fun b!78449 () Bool)

(assert (=> b!78449 (= e!51277 (contains!737 lt!36300 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun bm!7195 () Bool)

(declare-fun $colon$colon!68 (List!1494 tuple2!2162) List!1494)

(assert (=> bm!7195 (= call!7197 ($colon$colon!68 e!51279 (ite c!12039 (h!2078 (toList!729 lt!35804)) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792)))))))

(declare-fun c!12038 () Bool)

(assert (=> bm!7195 (= c!12038 c!12039)))

(assert (= (and d!18623 c!12039) b!78445))

(assert (= (and d!18623 (not c!12039)) b!78440))

(assert (= (and b!78440 c!12037) b!78443))

(assert (= (and b!78440 (not c!12037)) b!78441))

(assert (= (and b!78441 c!12036) b!78448))

(assert (= (and b!78441 (not c!12036)) b!78442))

(assert (= (or b!78448 b!78442) bm!7194))

(assert (= (or b!78443 bm!7194) bm!7193))

(assert (= (or b!78445 bm!7193) bm!7195))

(assert (= (and bm!7195 c!12038) b!78444))

(assert (= (and bm!7195 (not c!12038)) b!78446))

(assert (= (and d!18623 res!41074) b!78447))

(assert (= (and b!78447 res!41073) b!78449))

(declare-fun m!78789 () Bool)

(assert (=> b!78449 m!78789))

(declare-fun m!78791 () Bool)

(assert (=> b!78444 m!78791))

(declare-fun m!78793 () Bool)

(assert (=> b!78447 m!78793))

(declare-fun m!78795 () Bool)

(assert (=> d!18623 m!78795))

(declare-fun m!78797 () Bool)

(assert (=> d!18623 m!78797))

(declare-fun m!78799 () Bool)

(assert (=> bm!7195 m!78799))

(assert (=> d!18475 d!18623))

(declare-fun d!18625 () Bool)

(declare-fun lt!36301 () Bool)

(assert (=> d!18625 (= lt!36301 (select (content!84 (toList!729 lt!35961)) lt!35806))))

(declare-fun e!51282 () Bool)

(assert (=> d!18625 (= lt!36301 e!51282)))

(declare-fun res!41076 () Bool)

(assert (=> d!18625 (=> (not res!41076) (not e!51282))))

(assert (=> d!18625 (= res!41076 ((_ is Cons!1490) (toList!729 lt!35961)))))

(assert (=> d!18625 (= (contains!737 (toList!729 lt!35961) lt!35806) lt!36301)))

(declare-fun b!78450 () Bool)

(declare-fun e!51281 () Bool)

(assert (=> b!78450 (= e!51282 e!51281)))

(declare-fun res!41075 () Bool)

(assert (=> b!78450 (=> res!41075 e!51281)))

(assert (=> b!78450 (= res!41075 (= (h!2078 (toList!729 lt!35961)) lt!35806))))

(declare-fun b!78451 () Bool)

(assert (=> b!78451 (= e!51281 (contains!737 (t!5132 (toList!729 lt!35961)) lt!35806))))

(assert (= (and d!18625 res!41076) b!78450))

(assert (= (and b!78450 (not res!41075)) b!78451))

(declare-fun m!78801 () Bool)

(assert (=> d!18625 m!78801))

(declare-fun m!78803 () Bool)

(assert (=> d!18625 m!78803))

(declare-fun m!78805 () Bool)

(assert (=> b!78451 m!78805))

(assert (=> b!77969 d!18625))

(declare-fun d!18627 () Bool)

(declare-fun e!51284 () Bool)

(assert (=> d!18627 e!51284))

(declare-fun res!41077 () Bool)

(assert (=> d!18627 (=> res!41077 e!51284)))

(declare-fun lt!36303 () Bool)

(assert (=> d!18627 (= res!41077 (not lt!36303))))

(declare-fun lt!36305 () Bool)

(assert (=> d!18627 (= lt!36303 lt!36305)))

(declare-fun lt!36304 () Unit!2237)

(declare-fun e!51283 () Unit!2237)

(assert (=> d!18627 (= lt!36304 e!51283)))

(declare-fun c!12040 () Bool)

(assert (=> d!18627 (= c!12040 lt!36305)))

(assert (=> d!18627 (= lt!36305 (containsKey!141 (toList!729 lt!35973) (_1!1092 lt!35789)))))

(assert (=> d!18627 (= (contains!736 lt!35973 (_1!1092 lt!35789)) lt!36303)))

(declare-fun b!78452 () Bool)

(declare-fun lt!36302 () Unit!2237)

(assert (=> b!78452 (= e!51283 lt!36302)))

(assert (=> b!78452 (= lt!36302 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35973) (_1!1092 lt!35789)))))

(assert (=> b!78452 (isDefined!90 (getValueByKey!138 (toList!729 lt!35973) (_1!1092 lt!35789)))))

(declare-fun b!78453 () Bool)

(declare-fun Unit!2258 () Unit!2237)

(assert (=> b!78453 (= e!51283 Unit!2258)))

(declare-fun b!78454 () Bool)

(assert (=> b!78454 (= e!51284 (isDefined!90 (getValueByKey!138 (toList!729 lt!35973) (_1!1092 lt!35789))))))

(assert (= (and d!18627 c!12040) b!78452))

(assert (= (and d!18627 (not c!12040)) b!78453))

(assert (= (and d!18627 (not res!41077)) b!78454))

(declare-fun m!78807 () Bool)

(assert (=> d!18627 m!78807))

(declare-fun m!78809 () Bool)

(assert (=> b!78452 m!78809))

(assert (=> b!78452 m!78199))

(assert (=> b!78452 m!78199))

(declare-fun m!78811 () Bool)

(assert (=> b!78452 m!78811))

(assert (=> b!78454 m!78199))

(assert (=> b!78454 m!78199))

(assert (=> b!78454 m!78811))

(assert (=> d!18477 d!18627))

(declare-fun b!78455 () Bool)

(declare-fun e!51285 () Option!144)

(assert (=> b!78455 (= e!51285 (Some!143 (_2!1092 (h!2078 lt!35972))))))

(declare-fun b!78456 () Bool)

(declare-fun e!51286 () Option!144)

(assert (=> b!78456 (= e!51285 e!51286)))

(declare-fun c!12042 () Bool)

(assert (=> b!78456 (= c!12042 (and ((_ is Cons!1490) lt!35972) (not (= (_1!1092 (h!2078 lt!35972)) (_1!1092 lt!35789)))))))

(declare-fun b!78458 () Bool)

(assert (=> b!78458 (= e!51286 None!142)))

(declare-fun b!78457 () Bool)

(assert (=> b!78457 (= e!51286 (getValueByKey!138 (t!5132 lt!35972) (_1!1092 lt!35789)))))

(declare-fun d!18629 () Bool)

(declare-fun c!12041 () Bool)

(assert (=> d!18629 (= c!12041 (and ((_ is Cons!1490) lt!35972) (= (_1!1092 (h!2078 lt!35972)) (_1!1092 lt!35789))))))

(assert (=> d!18629 (= (getValueByKey!138 lt!35972 (_1!1092 lt!35789)) e!51285)))

(assert (= (and d!18629 c!12041) b!78455))

(assert (= (and d!18629 (not c!12041)) b!78456))

(assert (= (and b!78456 c!12042) b!78457))

(assert (= (and b!78456 (not c!12042)) b!78458))

(declare-fun m!78813 () Bool)

(assert (=> b!78457 m!78813))

(assert (=> d!18477 d!18629))

(declare-fun d!18631 () Bool)

(assert (=> d!18631 (= (getValueByKey!138 lt!35972 (_1!1092 lt!35789)) (Some!143 (_2!1092 lt!35789)))))

(declare-fun lt!36306 () Unit!2237)

(assert (=> d!18631 (= lt!36306 (choose!468 lt!35972 (_1!1092 lt!35789) (_2!1092 lt!35789)))))

(declare-fun e!51287 () Bool)

(assert (=> d!18631 e!51287))

(declare-fun res!41078 () Bool)

(assert (=> d!18631 (=> (not res!41078) (not e!51287))))

(assert (=> d!18631 (= res!41078 (isStrictlySorted!282 lt!35972))))

(assert (=> d!18631 (= (lemmaContainsTupThenGetReturnValue!55 lt!35972 (_1!1092 lt!35789) (_2!1092 lt!35789)) lt!36306)))

(declare-fun b!78459 () Bool)

(declare-fun res!41079 () Bool)

(assert (=> b!78459 (=> (not res!41079) (not e!51287))))

(assert (=> b!78459 (= res!41079 (containsKey!141 lt!35972 (_1!1092 lt!35789)))))

(declare-fun b!78460 () Bool)

(assert (=> b!78460 (= e!51287 (contains!737 lt!35972 (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(assert (= (and d!18631 res!41078) b!78459))

(assert (= (and b!78459 res!41079) b!78460))

(assert (=> d!18631 m!78193))

(declare-fun m!78815 () Bool)

(assert (=> d!18631 m!78815))

(declare-fun m!78817 () Bool)

(assert (=> d!18631 m!78817))

(declare-fun m!78819 () Bool)

(assert (=> b!78459 m!78819))

(declare-fun m!78821 () Bool)

(assert (=> b!78460 m!78821))

(assert (=> d!18477 d!18631))

(declare-fun b!78461 () Bool)

(declare-fun e!51290 () List!1494)

(declare-fun e!51288 () List!1494)

(assert (=> b!78461 (= e!51290 e!51288)))

(declare-fun c!12044 () Bool)

(assert (=> b!78461 (= c!12044 (and ((_ is Cons!1490) (toList!729 lt!35793)) (= (_1!1092 (h!2078 (toList!729 lt!35793))) (_1!1092 lt!35789))))))

(declare-fun b!78462 () Bool)

(declare-fun c!12043 () Bool)

(assert (=> b!78462 (= c!12043 (and ((_ is Cons!1490) (toList!729 lt!35793)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35793))) (_1!1092 lt!35789))))))

(declare-fun e!51292 () List!1494)

(assert (=> b!78462 (= e!51288 e!51292)))

(declare-fun b!78463 () Bool)

(declare-fun call!7199 () List!1494)

(assert (=> b!78463 (= e!51292 call!7199)))

(declare-fun b!78464 () Bool)

(declare-fun call!7201 () List!1494)

(assert (=> b!78464 (= e!51288 call!7201)))

(declare-fun bm!7197 () Bool)

(assert (=> bm!7197 (= call!7199 call!7201)))

(declare-fun b!78465 () Bool)

(declare-fun e!51291 () List!1494)

(assert (=> b!78465 (= e!51291 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35793)) (_1!1092 lt!35789) (_2!1092 lt!35789)))))

(declare-fun b!78466 () Bool)

(declare-fun call!7200 () List!1494)

(assert (=> b!78466 (= e!51290 call!7200)))

(declare-fun b!78467 () Bool)

(assert (=> b!78467 (= e!51291 (ite c!12044 (t!5132 (toList!729 lt!35793)) (ite c!12043 (Cons!1490 (h!2078 (toList!729 lt!35793)) (t!5132 (toList!729 lt!35793))) Nil!1491)))))

(declare-fun d!18633 () Bool)

(declare-fun e!51289 () Bool)

(assert (=> d!18633 e!51289))

(declare-fun res!41081 () Bool)

(assert (=> d!18633 (=> (not res!41081) (not e!51289))))

(declare-fun lt!36307 () List!1494)

(assert (=> d!18633 (= res!41081 (isStrictlySorted!282 lt!36307))))

(assert (=> d!18633 (= lt!36307 e!51290)))

(declare-fun c!12046 () Bool)

(assert (=> d!18633 (= c!12046 (and ((_ is Cons!1490) (toList!729 lt!35793)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35793))) (_1!1092 lt!35789))))))

(assert (=> d!18633 (isStrictlySorted!282 (toList!729 lt!35793))))

(assert (=> d!18633 (= (insertStrictlySorted!58 (toList!729 lt!35793) (_1!1092 lt!35789) (_2!1092 lt!35789)) lt!36307)))

(declare-fun bm!7196 () Bool)

(assert (=> bm!7196 (= call!7201 call!7200)))

(declare-fun b!78468 () Bool)

(declare-fun res!41080 () Bool)

(assert (=> b!78468 (=> (not res!41080) (not e!51289))))

(assert (=> b!78468 (= res!41080 (containsKey!141 lt!36307 (_1!1092 lt!35789)))))

(declare-fun b!78469 () Bool)

(assert (=> b!78469 (= e!51292 call!7199)))

(declare-fun b!78470 () Bool)

(assert (=> b!78470 (= e!51289 (contains!737 lt!36307 (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun bm!7198 () Bool)

(assert (=> bm!7198 (= call!7200 ($colon$colon!68 e!51291 (ite c!12046 (h!2078 (toList!729 lt!35793)) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789)))))))

(declare-fun c!12045 () Bool)

(assert (=> bm!7198 (= c!12045 c!12046)))

(assert (= (and d!18633 c!12046) b!78466))

(assert (= (and d!18633 (not c!12046)) b!78461))

(assert (= (and b!78461 c!12044) b!78464))

(assert (= (and b!78461 (not c!12044)) b!78462))

(assert (= (and b!78462 c!12043) b!78469))

(assert (= (and b!78462 (not c!12043)) b!78463))

(assert (= (or b!78469 b!78463) bm!7197))

(assert (= (or b!78464 bm!7197) bm!7196))

(assert (= (or b!78466 bm!7196) bm!7198))

(assert (= (and bm!7198 c!12045) b!78465))

(assert (= (and bm!7198 (not c!12045)) b!78467))

(assert (= (and d!18633 res!41081) b!78468))

(assert (= (and b!78468 res!41080) b!78470))

(declare-fun m!78823 () Bool)

(assert (=> b!78470 m!78823))

(declare-fun m!78825 () Bool)

(assert (=> b!78465 m!78825))

(declare-fun m!78827 () Bool)

(assert (=> b!78468 m!78827))

(declare-fun m!78829 () Bool)

(assert (=> d!18633 m!78829))

(declare-fun m!78831 () Bool)

(assert (=> d!18633 m!78831))

(declare-fun m!78833 () Bool)

(assert (=> bm!7198 m!78833))

(assert (=> d!18477 d!18633))

(declare-fun d!18635 () Bool)

(declare-fun e!51293 () Bool)

(assert (=> d!18635 e!51293))

(declare-fun res!41082 () Bool)

(assert (=> d!18635 (=> (not res!41082) (not e!51293))))

(declare-fun lt!36309 () ListLongMap!1427)

(assert (=> d!18635 (= res!41082 (contains!736 lt!36309 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36308 () List!1494)

(assert (=> d!18635 (= lt!36309 (ListLongMap!1428 lt!36308))))

(declare-fun lt!36310 () Unit!2237)

(declare-fun lt!36311 () Unit!2237)

(assert (=> d!18635 (= lt!36310 lt!36311)))

(assert (=> d!18635 (= (getValueByKey!138 lt!36308 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18635 (= lt!36311 (lemmaContainsTupThenGetReturnValue!55 lt!36308 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18635 (= lt!36308 (insertStrictlySorted!58 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18635 (= (+!100 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36309)))

(declare-fun b!78471 () Bool)

(declare-fun res!41083 () Bool)

(assert (=> b!78471 (=> (not res!41083) (not e!51293))))

(assert (=> b!78471 (= res!41083 (= (getValueByKey!138 (toList!729 lt!36309) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!78472 () Bool)

(assert (=> b!78472 (= e!51293 (contains!737 (toList!729 lt!36309) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!18635 res!41082) b!78471))

(assert (= (and b!78471 res!41083) b!78472))

(declare-fun m!78835 () Bool)

(assert (=> d!18635 m!78835))

(declare-fun m!78837 () Bool)

(assert (=> d!18635 m!78837))

(declare-fun m!78839 () Bool)

(assert (=> d!18635 m!78839))

(declare-fun m!78841 () Bool)

(assert (=> d!18635 m!78841))

(declare-fun m!78843 () Bool)

(assert (=> b!78471 m!78843))

(declare-fun m!78845 () Bool)

(assert (=> b!78472 m!78845))

(assert (=> d!18457 d!18635))

(declare-fun d!18637 () Bool)

(declare-fun e!51294 () Bool)

(assert (=> d!18637 e!51294))

(declare-fun res!41084 () Bool)

(assert (=> d!18637 (=> (not res!41084) (not e!51294))))

(declare-fun lt!36313 () ListLongMap!1427)

(assert (=> d!18637 (= res!41084 (contains!736 lt!36313 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36312 () List!1494)

(assert (=> d!18637 (= lt!36313 (ListLongMap!1428 lt!36312))))

(declare-fun lt!36314 () Unit!2237)

(declare-fun lt!36315 () Unit!2237)

(assert (=> d!18637 (= lt!36314 lt!36315)))

(assert (=> d!18637 (= (getValueByKey!138 lt!36312 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18637 (= lt!36315 (lemmaContainsTupThenGetReturnValue!55 lt!36312 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18637 (= lt!36312 (insertStrictlySorted!58 (toList!729 lt!35804) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18637 (= (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36313)))

(declare-fun b!78473 () Bool)

(declare-fun res!41085 () Bool)

(assert (=> b!78473 (=> (not res!41085) (not e!51294))))

(assert (=> b!78473 (= res!41085 (= (getValueByKey!138 (toList!729 lt!36313) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!78474 () Bool)

(assert (=> b!78474 (= e!51294 (contains!737 (toList!729 lt!36313) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!18637 res!41084) b!78473))

(assert (= (and b!78473 res!41085) b!78474))

(declare-fun m!78847 () Bool)

(assert (=> d!18637 m!78847))

(declare-fun m!78849 () Bool)

(assert (=> d!18637 m!78849))

(declare-fun m!78851 () Bool)

(assert (=> d!18637 m!78851))

(declare-fun m!78853 () Bool)

(assert (=> d!18637 m!78853))

(declare-fun m!78855 () Bool)

(assert (=> b!78473 m!78855))

(declare-fun m!78857 () Bool)

(assert (=> b!78474 m!78857))

(assert (=> d!18457 d!18637))

(declare-fun d!18639 () Bool)

(assert (=> d!18639 (= (+!100 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (+!100 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (=> d!18639 true))

(declare-fun _$28!131 () Unit!2237)

(assert (=> d!18639 (= (choose!460 lt!35804 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))) _$28!131)))

(declare-fun bs!3334 () Bool)

(assert (= bs!3334 d!18639))

(assert (=> bs!3334 m!78071))

(assert (=> bs!3334 m!78071))

(assert (=> bs!3334 m!78073))

(assert (=> bs!3334 m!78075))

(assert (=> bs!3334 m!78075))

(assert (=> bs!3334 m!78079))

(assert (=> d!18457 d!18639))

(declare-fun d!18641 () Bool)

(declare-fun e!51295 () Bool)

(assert (=> d!18641 e!51295))

(declare-fun res!41086 () Bool)

(assert (=> d!18641 (=> (not res!41086) (not e!51295))))

(declare-fun lt!36317 () ListLongMap!1427)

(assert (=> d!18641 (= res!41086 (contains!736 lt!36317 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36316 () List!1494)

(assert (=> d!18641 (= lt!36317 (ListLongMap!1428 lt!36316))))

(declare-fun lt!36318 () Unit!2237)

(declare-fun lt!36319 () Unit!2237)

(assert (=> d!18641 (= lt!36318 lt!36319)))

(assert (=> d!18641 (= (getValueByKey!138 lt!36316 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18641 (= lt!36319 (lemmaContainsTupThenGetReturnValue!55 lt!36316 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18641 (= lt!36316 (insertStrictlySorted!58 (toList!729 lt!35804) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18641 (= (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36317)))

(declare-fun b!78475 () Bool)

(declare-fun res!41087 () Bool)

(assert (=> b!78475 (=> (not res!41087) (not e!51295))))

(assert (=> b!78475 (= res!41087 (= (getValueByKey!138 (toList!729 lt!36317) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!78476 () Bool)

(assert (=> b!78476 (= e!51295 (contains!737 (toList!729 lt!36317) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!18641 res!41086) b!78475))

(assert (= (and b!78475 res!41087) b!78476))

(declare-fun m!78859 () Bool)

(assert (=> d!18641 m!78859))

(declare-fun m!78861 () Bool)

(assert (=> d!18641 m!78861))

(declare-fun m!78863 () Bool)

(assert (=> d!18641 m!78863))

(declare-fun m!78865 () Bool)

(assert (=> d!18641 m!78865))

(declare-fun m!78867 () Bool)

(assert (=> b!78475 m!78867))

(declare-fun m!78869 () Bool)

(assert (=> b!78476 m!78869))

(assert (=> d!18457 d!18641))

(declare-fun d!18643 () Bool)

(declare-fun e!51296 () Bool)

(assert (=> d!18643 e!51296))

(declare-fun res!41088 () Bool)

(assert (=> d!18643 (=> (not res!41088) (not e!51296))))

(declare-fun lt!36321 () ListLongMap!1427)

(assert (=> d!18643 (= res!41088 (contains!736 lt!36321 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36320 () List!1494)

(assert (=> d!18643 (= lt!36321 (ListLongMap!1428 lt!36320))))

(declare-fun lt!36322 () Unit!2237)

(declare-fun lt!36323 () Unit!2237)

(assert (=> d!18643 (= lt!36322 lt!36323)))

(assert (=> d!18643 (= (getValueByKey!138 lt!36320 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18643 (= lt!36323 (lemmaContainsTupThenGetReturnValue!55 lt!36320 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18643 (= lt!36320 (insertStrictlySorted!58 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18643 (= (+!100 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36321)))

(declare-fun b!78477 () Bool)

(declare-fun res!41089 () Bool)

(assert (=> b!78477 (=> (not res!41089) (not e!51296))))

(assert (=> b!78477 (= res!41089 (= (getValueByKey!138 (toList!729 lt!36321) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!78478 () Bool)

(assert (=> b!78478 (= e!51296 (contains!737 (toList!729 lt!36321) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!18643 res!41088) b!78477))

(assert (= (and b!78477 res!41089) b!78478))

(declare-fun m!78871 () Bool)

(assert (=> d!18643 m!78871))

(declare-fun m!78873 () Bool)

(assert (=> d!18643 m!78873))

(declare-fun m!78875 () Bool)

(assert (=> d!18643 m!78875))

(declare-fun m!78877 () Bool)

(assert (=> d!18643 m!78877))

(declare-fun m!78879 () Bool)

(assert (=> b!78477 m!78879))

(declare-fun m!78881 () Bool)

(assert (=> b!78478 m!78881))

(assert (=> d!18457 d!18643))

(declare-fun d!18645 () Bool)

(declare-fun e!51298 () Bool)

(assert (=> d!18645 e!51298))

(declare-fun res!41090 () Bool)

(assert (=> d!18645 (=> res!41090 e!51298)))

(declare-fun lt!36325 () Bool)

(assert (=> d!18645 (= res!41090 (not lt!36325))))

(declare-fun lt!36327 () Bool)

(assert (=> d!18645 (= lt!36325 lt!36327)))

(declare-fun lt!36326 () Unit!2237)

(declare-fun e!51297 () Unit!2237)

(assert (=> d!18645 (= lt!36326 e!51297)))

(declare-fun c!12047 () Bool)

(assert (=> d!18645 (= c!12047 lt!36327)))

(assert (=> d!18645 (= lt!36327 (containsKey!141 (toList!729 lt!35961) (_1!1092 lt!35806)))))

(assert (=> d!18645 (= (contains!736 lt!35961 (_1!1092 lt!35806)) lt!36325)))

(declare-fun b!78479 () Bool)

(declare-fun lt!36324 () Unit!2237)

(assert (=> b!78479 (= e!51297 lt!36324)))

(assert (=> b!78479 (= lt!36324 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35961) (_1!1092 lt!35806)))))

(assert (=> b!78479 (isDefined!90 (getValueByKey!138 (toList!729 lt!35961) (_1!1092 lt!35806)))))

(declare-fun b!78480 () Bool)

(declare-fun Unit!2259 () Unit!2237)

(assert (=> b!78480 (= e!51297 Unit!2259)))

(declare-fun b!78481 () Bool)

(assert (=> b!78481 (= e!51298 (isDefined!90 (getValueByKey!138 (toList!729 lt!35961) (_1!1092 lt!35806))))))

(assert (= (and d!18645 c!12047) b!78479))

(assert (= (and d!18645 (not c!12047)) b!78480))

(assert (= (and d!18645 (not res!41090)) b!78481))

(declare-fun m!78883 () Bool)

(assert (=> d!18645 m!78883))

(declare-fun m!78885 () Bool)

(assert (=> b!78479 m!78885))

(assert (=> b!78479 m!78163))

(assert (=> b!78479 m!78163))

(declare-fun m!78887 () Bool)

(assert (=> b!78479 m!78887))

(assert (=> b!78481 m!78163))

(assert (=> b!78481 m!78163))

(assert (=> b!78481 m!78887))

(assert (=> d!18469 d!18645))

(declare-fun b!78482 () Bool)

(declare-fun e!51299 () Option!144)

(assert (=> b!78482 (= e!51299 (Some!143 (_2!1092 (h!2078 lt!35960))))))

(declare-fun b!78483 () Bool)

(declare-fun e!51300 () Option!144)

(assert (=> b!78483 (= e!51299 e!51300)))

(declare-fun c!12049 () Bool)

(assert (=> b!78483 (= c!12049 (and ((_ is Cons!1490) lt!35960) (not (= (_1!1092 (h!2078 lt!35960)) (_1!1092 lt!35806)))))))

(declare-fun b!78485 () Bool)

(assert (=> b!78485 (= e!51300 None!142)))

(declare-fun b!78484 () Bool)

(assert (=> b!78484 (= e!51300 (getValueByKey!138 (t!5132 lt!35960) (_1!1092 lt!35806)))))

(declare-fun d!18647 () Bool)

(declare-fun c!12048 () Bool)

(assert (=> d!18647 (= c!12048 (and ((_ is Cons!1490) lt!35960) (= (_1!1092 (h!2078 lt!35960)) (_1!1092 lt!35806))))))

(assert (=> d!18647 (= (getValueByKey!138 lt!35960 (_1!1092 lt!35806)) e!51299)))

(assert (= (and d!18647 c!12048) b!78482))

(assert (= (and d!18647 (not c!12048)) b!78483))

(assert (= (and b!78483 c!12049) b!78484))

(assert (= (and b!78483 (not c!12049)) b!78485))

(declare-fun m!78889 () Bool)

(assert (=> b!78484 m!78889))

(assert (=> d!18469 d!18647))

(declare-fun d!18649 () Bool)

(assert (=> d!18649 (= (getValueByKey!138 lt!35960 (_1!1092 lt!35806)) (Some!143 (_2!1092 lt!35806)))))

(declare-fun lt!36328 () Unit!2237)

(assert (=> d!18649 (= lt!36328 (choose!468 lt!35960 (_1!1092 lt!35806) (_2!1092 lt!35806)))))

(declare-fun e!51301 () Bool)

(assert (=> d!18649 e!51301))

(declare-fun res!41091 () Bool)

(assert (=> d!18649 (=> (not res!41091) (not e!51301))))

(assert (=> d!18649 (= res!41091 (isStrictlySorted!282 lt!35960))))

(assert (=> d!18649 (= (lemmaContainsTupThenGetReturnValue!55 lt!35960 (_1!1092 lt!35806) (_2!1092 lt!35806)) lt!36328)))

(declare-fun b!78486 () Bool)

(declare-fun res!41092 () Bool)

(assert (=> b!78486 (=> (not res!41092) (not e!51301))))

(assert (=> b!78486 (= res!41092 (containsKey!141 lt!35960 (_1!1092 lt!35806)))))

(declare-fun b!78487 () Bool)

(assert (=> b!78487 (= e!51301 (contains!737 lt!35960 (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(assert (= (and d!18649 res!41091) b!78486))

(assert (= (and b!78486 res!41092) b!78487))

(assert (=> d!18649 m!78157))

(declare-fun m!78891 () Bool)

(assert (=> d!18649 m!78891))

(declare-fun m!78893 () Bool)

(assert (=> d!18649 m!78893))

(declare-fun m!78895 () Bool)

(assert (=> b!78486 m!78895))

(declare-fun m!78897 () Bool)

(assert (=> b!78487 m!78897))

(assert (=> d!18469 d!18649))

(declare-fun b!78488 () Bool)

(declare-fun e!51304 () List!1494)

(declare-fun e!51302 () List!1494)

(assert (=> b!78488 (= e!51304 e!51302)))

(declare-fun c!12051 () Bool)

(assert (=> b!78488 (= c!12051 (and ((_ is Cons!1490) (toList!729 lt!35804)) (= (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 lt!35806))))))

(declare-fun b!78489 () Bool)

(declare-fun c!12050 () Bool)

(assert (=> b!78489 (= c!12050 (and ((_ is Cons!1490) (toList!729 lt!35804)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 lt!35806))))))

(declare-fun e!51306 () List!1494)

(assert (=> b!78489 (= e!51302 e!51306)))

(declare-fun b!78490 () Bool)

(declare-fun call!7202 () List!1494)

(assert (=> b!78490 (= e!51306 call!7202)))

(declare-fun b!78491 () Bool)

(declare-fun call!7204 () List!1494)

(assert (=> b!78491 (= e!51302 call!7204)))

(declare-fun bm!7200 () Bool)

(assert (=> bm!7200 (= call!7202 call!7204)))

(declare-fun b!78492 () Bool)

(declare-fun e!51305 () List!1494)

(assert (=> b!78492 (= e!51305 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35804)) (_1!1092 lt!35806) (_2!1092 lt!35806)))))

(declare-fun b!78493 () Bool)

(declare-fun call!7203 () List!1494)

(assert (=> b!78493 (= e!51304 call!7203)))

(declare-fun b!78494 () Bool)

(assert (=> b!78494 (= e!51305 (ite c!12051 (t!5132 (toList!729 lt!35804)) (ite c!12050 (Cons!1490 (h!2078 (toList!729 lt!35804)) (t!5132 (toList!729 lt!35804))) Nil!1491)))))

(declare-fun d!18651 () Bool)

(declare-fun e!51303 () Bool)

(assert (=> d!18651 e!51303))

(declare-fun res!41094 () Bool)

(assert (=> d!18651 (=> (not res!41094) (not e!51303))))

(declare-fun lt!36329 () List!1494)

(assert (=> d!18651 (= res!41094 (isStrictlySorted!282 lt!36329))))

(assert (=> d!18651 (= lt!36329 e!51304)))

(declare-fun c!12053 () Bool)

(assert (=> d!18651 (= c!12053 (and ((_ is Cons!1490) (toList!729 lt!35804)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 lt!35806))))))

(assert (=> d!18651 (isStrictlySorted!282 (toList!729 lt!35804))))

(assert (=> d!18651 (= (insertStrictlySorted!58 (toList!729 lt!35804) (_1!1092 lt!35806) (_2!1092 lt!35806)) lt!36329)))

(declare-fun bm!7199 () Bool)

(assert (=> bm!7199 (= call!7204 call!7203)))

(declare-fun b!78495 () Bool)

(declare-fun res!41093 () Bool)

(assert (=> b!78495 (=> (not res!41093) (not e!51303))))

(assert (=> b!78495 (= res!41093 (containsKey!141 lt!36329 (_1!1092 lt!35806)))))

(declare-fun b!78496 () Bool)

(assert (=> b!78496 (= e!51306 call!7202)))

(declare-fun b!78497 () Bool)

(assert (=> b!78497 (= e!51303 (contains!737 lt!36329 (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun bm!7201 () Bool)

(assert (=> bm!7201 (= call!7203 ($colon$colon!68 e!51305 (ite c!12053 (h!2078 (toList!729 lt!35804)) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806)))))))

(declare-fun c!12052 () Bool)

(assert (=> bm!7201 (= c!12052 c!12053)))

(assert (= (and d!18651 c!12053) b!78493))

(assert (= (and d!18651 (not c!12053)) b!78488))

(assert (= (and b!78488 c!12051) b!78491))

(assert (= (and b!78488 (not c!12051)) b!78489))

(assert (= (and b!78489 c!12050) b!78496))

(assert (= (and b!78489 (not c!12050)) b!78490))

(assert (= (or b!78496 b!78490) bm!7200))

(assert (= (or b!78491 bm!7200) bm!7199))

(assert (= (or b!78493 bm!7199) bm!7201))

(assert (= (and bm!7201 c!12052) b!78492))

(assert (= (and bm!7201 (not c!12052)) b!78494))

(assert (= (and d!18651 res!41094) b!78495))

(assert (= (and b!78495 res!41093) b!78497))

(declare-fun m!78899 () Bool)

(assert (=> b!78497 m!78899))

(declare-fun m!78901 () Bool)

(assert (=> b!78492 m!78901))

(declare-fun m!78903 () Bool)

(assert (=> b!78495 m!78903))

(declare-fun m!78905 () Bool)

(assert (=> d!18651 m!78905))

(assert (=> d!18651 m!78797))

(declare-fun m!78907 () Bool)

(assert (=> bm!7201 m!78907))

(assert (=> d!18469 d!18651))

(assert (=> d!18495 d!18473))

(declare-fun d!18653 () Bool)

(declare-fun e!51309 () Bool)

(assert (=> d!18653 e!51309))

(declare-fun c!12056 () Bool)

(assert (=> d!18653 (= c!12056 (and (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!18653 true))

(declare-fun _$29!99 () Unit!2237)

(assert (=> d!18653 (= (choose!461 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))) _$29!99)))

(declare-fun b!78502 () Bool)

(assert (=> b!78502 (= e!51309 (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!78503 () Bool)

(assert (=> b!78503 (= e!51309 (ite (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!18653 c!12056) b!78502))

(assert (= (and d!18653 (not c!12056)) b!78503))

(assert (=> b!78502 m!77885))

(assert (=> b!78502 m!77905))

(assert (=> d!18485 d!18653))

(assert (=> d!18485 d!18473))

(declare-fun d!18655 () Bool)

(declare-fun e!51311 () Bool)

(assert (=> d!18655 e!51311))

(declare-fun res!41095 () Bool)

(assert (=> d!18655 (=> res!41095 e!51311)))

(declare-fun lt!36331 () Bool)

(assert (=> d!18655 (= res!41095 (not lt!36331))))

(declare-fun lt!36333 () Bool)

(assert (=> d!18655 (= lt!36331 lt!36333)))

(declare-fun lt!36332 () Unit!2237)

(declare-fun e!51310 () Unit!2237)

(assert (=> d!18655 (= lt!36332 e!51310)))

(declare-fun c!12057 () Bool)

(assert (=> d!18655 (= c!12057 lt!36333)))

(assert (=> d!18655 (= lt!36333 (containsKey!141 (toList!729 lt!35965) (_1!1092 lt!35806)))))

(assert (=> d!18655 (= (contains!736 lt!35965 (_1!1092 lt!35806)) lt!36331)))

(declare-fun b!78504 () Bool)

(declare-fun lt!36330 () Unit!2237)

(assert (=> b!78504 (= e!51310 lt!36330)))

(assert (=> b!78504 (= lt!36330 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35965) (_1!1092 lt!35806)))))

(assert (=> b!78504 (isDefined!90 (getValueByKey!138 (toList!729 lt!35965) (_1!1092 lt!35806)))))

(declare-fun b!78505 () Bool)

(declare-fun Unit!2260 () Unit!2237)

(assert (=> b!78505 (= e!51310 Unit!2260)))

(declare-fun b!78506 () Bool)

(assert (=> b!78506 (= e!51311 (isDefined!90 (getValueByKey!138 (toList!729 lt!35965) (_1!1092 lt!35806))))))

(assert (= (and d!18655 c!12057) b!78504))

(assert (= (and d!18655 (not c!12057)) b!78505))

(assert (= (and d!18655 (not res!41095)) b!78506))

(declare-fun m!78909 () Bool)

(assert (=> d!18655 m!78909))

(declare-fun m!78911 () Bool)

(assert (=> b!78504 m!78911))

(assert (=> b!78504 m!78175))

(assert (=> b!78504 m!78175))

(declare-fun m!78913 () Bool)

(assert (=> b!78504 m!78913))

(assert (=> b!78506 m!78175))

(assert (=> b!78506 m!78175))

(assert (=> b!78506 m!78913))

(assert (=> d!18471 d!18655))

(declare-fun b!78507 () Bool)

(declare-fun e!51312 () Option!144)

(assert (=> b!78507 (= e!51312 (Some!143 (_2!1092 (h!2078 lt!35964))))))

(declare-fun b!78508 () Bool)

(declare-fun e!51313 () Option!144)

(assert (=> b!78508 (= e!51312 e!51313)))

(declare-fun c!12059 () Bool)

(assert (=> b!78508 (= c!12059 (and ((_ is Cons!1490) lt!35964) (not (= (_1!1092 (h!2078 lt!35964)) (_1!1092 lt!35806)))))))

(declare-fun b!78510 () Bool)

(assert (=> b!78510 (= e!51313 None!142)))

(declare-fun b!78509 () Bool)

(assert (=> b!78509 (= e!51313 (getValueByKey!138 (t!5132 lt!35964) (_1!1092 lt!35806)))))

(declare-fun d!18657 () Bool)

(declare-fun c!12058 () Bool)

(assert (=> d!18657 (= c!12058 (and ((_ is Cons!1490) lt!35964) (= (_1!1092 (h!2078 lt!35964)) (_1!1092 lt!35806))))))

(assert (=> d!18657 (= (getValueByKey!138 lt!35964 (_1!1092 lt!35806)) e!51312)))

(assert (= (and d!18657 c!12058) b!78507))

(assert (= (and d!18657 (not c!12058)) b!78508))

(assert (= (and b!78508 c!12059) b!78509))

(assert (= (and b!78508 (not c!12059)) b!78510))

(declare-fun m!78915 () Bool)

(assert (=> b!78509 m!78915))

(assert (=> d!18471 d!18657))

(declare-fun d!18659 () Bool)

(assert (=> d!18659 (= (getValueByKey!138 lt!35964 (_1!1092 lt!35806)) (Some!143 (_2!1092 lt!35806)))))

(declare-fun lt!36334 () Unit!2237)

(assert (=> d!18659 (= lt!36334 (choose!468 lt!35964 (_1!1092 lt!35806) (_2!1092 lt!35806)))))

(declare-fun e!51314 () Bool)

(assert (=> d!18659 e!51314))

(declare-fun res!41096 () Bool)

(assert (=> d!18659 (=> (not res!41096) (not e!51314))))

(assert (=> d!18659 (= res!41096 (isStrictlySorted!282 lt!35964))))

(assert (=> d!18659 (= (lemmaContainsTupThenGetReturnValue!55 lt!35964 (_1!1092 lt!35806) (_2!1092 lt!35806)) lt!36334)))

(declare-fun b!78511 () Bool)

(declare-fun res!41097 () Bool)

(assert (=> b!78511 (=> (not res!41097) (not e!51314))))

(assert (=> b!78511 (= res!41097 (containsKey!141 lt!35964 (_1!1092 lt!35806)))))

(declare-fun b!78512 () Bool)

(assert (=> b!78512 (= e!51314 (contains!737 lt!35964 (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(assert (= (and d!18659 res!41096) b!78511))

(assert (= (and b!78511 res!41097) b!78512))

(assert (=> d!18659 m!78169))

(declare-fun m!78917 () Bool)

(assert (=> d!18659 m!78917))

(declare-fun m!78919 () Bool)

(assert (=> d!18659 m!78919))

(declare-fun m!78921 () Bool)

(assert (=> b!78511 m!78921))

(declare-fun m!78923 () Bool)

(assert (=> b!78512 m!78923))

(assert (=> d!18471 d!18659))

(declare-fun b!78513 () Bool)

(declare-fun e!51317 () List!1494)

(declare-fun e!51315 () List!1494)

(assert (=> b!78513 (= e!51317 e!51315)))

(declare-fun c!12061 () Bool)

(assert (=> b!78513 (= c!12061 (and ((_ is Cons!1490) (toList!729 lt!35790)) (= (_1!1092 (h!2078 (toList!729 lt!35790))) (_1!1092 lt!35806))))))

(declare-fun b!78514 () Bool)

(declare-fun c!12060 () Bool)

(assert (=> b!78514 (= c!12060 (and ((_ is Cons!1490) (toList!729 lt!35790)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35790))) (_1!1092 lt!35806))))))

(declare-fun e!51319 () List!1494)

(assert (=> b!78514 (= e!51315 e!51319)))

(declare-fun b!78515 () Bool)

(declare-fun call!7205 () List!1494)

(assert (=> b!78515 (= e!51319 call!7205)))

(declare-fun b!78516 () Bool)

(declare-fun call!7207 () List!1494)

(assert (=> b!78516 (= e!51315 call!7207)))

(declare-fun bm!7203 () Bool)

(assert (=> bm!7203 (= call!7205 call!7207)))

(declare-fun b!78517 () Bool)

(declare-fun e!51318 () List!1494)

(assert (=> b!78517 (= e!51318 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35790)) (_1!1092 lt!35806) (_2!1092 lt!35806)))))

(declare-fun b!78518 () Bool)

(declare-fun call!7206 () List!1494)

(assert (=> b!78518 (= e!51317 call!7206)))

(declare-fun b!78519 () Bool)

(assert (=> b!78519 (= e!51318 (ite c!12061 (t!5132 (toList!729 lt!35790)) (ite c!12060 (Cons!1490 (h!2078 (toList!729 lt!35790)) (t!5132 (toList!729 lt!35790))) Nil!1491)))))

(declare-fun d!18661 () Bool)

(declare-fun e!51316 () Bool)

(assert (=> d!18661 e!51316))

(declare-fun res!41099 () Bool)

(assert (=> d!18661 (=> (not res!41099) (not e!51316))))

(declare-fun lt!36335 () List!1494)

(assert (=> d!18661 (= res!41099 (isStrictlySorted!282 lt!36335))))

(assert (=> d!18661 (= lt!36335 e!51317)))

(declare-fun c!12063 () Bool)

(assert (=> d!18661 (= c!12063 (and ((_ is Cons!1490) (toList!729 lt!35790)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35790))) (_1!1092 lt!35806))))))

(assert (=> d!18661 (isStrictlySorted!282 (toList!729 lt!35790))))

(assert (=> d!18661 (= (insertStrictlySorted!58 (toList!729 lt!35790) (_1!1092 lt!35806) (_2!1092 lt!35806)) lt!36335)))

(declare-fun bm!7202 () Bool)

(assert (=> bm!7202 (= call!7207 call!7206)))

(declare-fun b!78520 () Bool)

(declare-fun res!41098 () Bool)

(assert (=> b!78520 (=> (not res!41098) (not e!51316))))

(assert (=> b!78520 (= res!41098 (containsKey!141 lt!36335 (_1!1092 lt!35806)))))

(declare-fun b!78521 () Bool)

(assert (=> b!78521 (= e!51319 call!7205)))

(declare-fun b!78522 () Bool)

(assert (=> b!78522 (= e!51316 (contains!737 lt!36335 (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun bm!7204 () Bool)

(assert (=> bm!7204 (= call!7206 ($colon$colon!68 e!51318 (ite c!12063 (h!2078 (toList!729 lt!35790)) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806)))))))

(declare-fun c!12062 () Bool)

(assert (=> bm!7204 (= c!12062 c!12063)))

(assert (= (and d!18661 c!12063) b!78518))

(assert (= (and d!18661 (not c!12063)) b!78513))

(assert (= (and b!78513 c!12061) b!78516))

(assert (= (and b!78513 (not c!12061)) b!78514))

(assert (= (and b!78514 c!12060) b!78521))

(assert (= (and b!78514 (not c!12060)) b!78515))

(assert (= (or b!78521 b!78515) bm!7203))

(assert (= (or b!78516 bm!7203) bm!7202))

(assert (= (or b!78518 bm!7202) bm!7204))

(assert (= (and bm!7204 c!12062) b!78517))

(assert (= (and bm!7204 (not c!12062)) b!78519))

(assert (= (and d!18661 res!41099) b!78520))

(assert (= (and b!78520 res!41098) b!78522))

(declare-fun m!78925 () Bool)

(assert (=> b!78522 m!78925))

(declare-fun m!78927 () Bool)

(assert (=> b!78517 m!78927))

(declare-fun m!78929 () Bool)

(assert (=> b!78520 m!78929))

(declare-fun m!78931 () Bool)

(assert (=> d!18661 m!78931))

(declare-fun m!78933 () Bool)

(assert (=> d!18661 m!78933))

(declare-fun m!78935 () Bool)

(assert (=> bm!7204 m!78935))

(assert (=> d!18471 d!18661))

(declare-fun d!18663 () Bool)

(declare-fun e!51321 () Bool)

(assert (=> d!18663 e!51321))

(declare-fun res!41100 () Bool)

(assert (=> d!18663 (=> res!41100 e!51321)))

(declare-fun lt!36337 () Bool)

(assert (=> d!18663 (= res!41100 (not lt!36337))))

(declare-fun lt!36339 () Bool)

(assert (=> d!18663 (= lt!36337 lt!36339)))

(declare-fun lt!36338 () Unit!2237)

(declare-fun e!51320 () Unit!2237)

(assert (=> d!18663 (= lt!36338 e!51320)))

(declare-fun c!12064 () Bool)

(assert (=> d!18663 (= c!12064 lt!36339)))

(assert (=> d!18663 (= lt!36339 (containsKey!141 (toList!729 lt!35948) (_1!1092 lt!35792)))))

(assert (=> d!18663 (= (contains!736 lt!35948 (_1!1092 lt!35792)) lt!36337)))

(declare-fun b!78523 () Bool)

(declare-fun lt!36336 () Unit!2237)

(assert (=> b!78523 (= e!51320 lt!36336)))

(assert (=> b!78523 (= lt!36336 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35948) (_1!1092 lt!35792)))))

(assert (=> b!78523 (isDefined!90 (getValueByKey!138 (toList!729 lt!35948) (_1!1092 lt!35792)))))

(declare-fun b!78524 () Bool)

(declare-fun Unit!2261 () Unit!2237)

(assert (=> b!78524 (= e!51320 Unit!2261)))

(declare-fun b!78525 () Bool)

(assert (=> b!78525 (= e!51321 (isDefined!90 (getValueByKey!138 (toList!729 lt!35948) (_1!1092 lt!35792))))))

(assert (= (and d!18663 c!12064) b!78523))

(assert (= (and d!18663 (not c!12064)) b!78524))

(assert (= (and d!18663 (not res!41100)) b!78525))

(declare-fun m!78937 () Bool)

(assert (=> d!18663 m!78937))

(declare-fun m!78939 () Bool)

(assert (=> b!78523 m!78939))

(assert (=> b!78523 m!78117))

(assert (=> b!78523 m!78117))

(declare-fun m!78941 () Bool)

(assert (=> b!78523 m!78941))

(assert (=> b!78525 m!78117))

(assert (=> b!78525 m!78117))

(assert (=> b!78525 m!78941))

(assert (=> d!18461 d!18663))

(declare-fun b!78526 () Bool)

(declare-fun e!51322 () Option!144)

(assert (=> b!78526 (= e!51322 (Some!143 (_2!1092 (h!2078 lt!35947))))))

(declare-fun b!78527 () Bool)

(declare-fun e!51323 () Option!144)

(assert (=> b!78527 (= e!51322 e!51323)))

(declare-fun c!12066 () Bool)

(assert (=> b!78527 (= c!12066 (and ((_ is Cons!1490) lt!35947) (not (= (_1!1092 (h!2078 lt!35947)) (_1!1092 lt!35792)))))))

(declare-fun b!78529 () Bool)

(assert (=> b!78529 (= e!51323 None!142)))

(declare-fun b!78528 () Bool)

(assert (=> b!78528 (= e!51323 (getValueByKey!138 (t!5132 lt!35947) (_1!1092 lt!35792)))))

(declare-fun d!18665 () Bool)

(declare-fun c!12065 () Bool)

(assert (=> d!18665 (= c!12065 (and ((_ is Cons!1490) lt!35947) (= (_1!1092 (h!2078 lt!35947)) (_1!1092 lt!35792))))))

(assert (=> d!18665 (= (getValueByKey!138 lt!35947 (_1!1092 lt!35792)) e!51322)))

(assert (= (and d!18665 c!12065) b!78526))

(assert (= (and d!18665 (not c!12065)) b!78527))

(assert (= (and b!78527 c!12066) b!78528))

(assert (= (and b!78527 (not c!12066)) b!78529))

(declare-fun m!78943 () Bool)

(assert (=> b!78528 m!78943))

(assert (=> d!18461 d!18665))

(declare-fun d!18667 () Bool)

(assert (=> d!18667 (= (getValueByKey!138 lt!35947 (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792)))))

(declare-fun lt!36340 () Unit!2237)

(assert (=> d!18667 (= lt!36340 (choose!468 lt!35947 (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(declare-fun e!51324 () Bool)

(assert (=> d!18667 e!51324))

(declare-fun res!41101 () Bool)

(assert (=> d!18667 (=> (not res!41101) (not e!51324))))

(assert (=> d!18667 (= res!41101 (isStrictlySorted!282 lt!35947))))

(assert (=> d!18667 (= (lemmaContainsTupThenGetReturnValue!55 lt!35947 (_1!1092 lt!35792) (_2!1092 lt!35792)) lt!36340)))

(declare-fun b!78530 () Bool)

(declare-fun res!41102 () Bool)

(assert (=> b!78530 (=> (not res!41102) (not e!51324))))

(assert (=> b!78530 (= res!41102 (containsKey!141 lt!35947 (_1!1092 lt!35792)))))

(declare-fun b!78531 () Bool)

(assert (=> b!78531 (= e!51324 (contains!737 lt!35947 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(assert (= (and d!18667 res!41101) b!78530))

(assert (= (and b!78530 res!41102) b!78531))

(assert (=> d!18667 m!78111))

(declare-fun m!78945 () Bool)

(assert (=> d!18667 m!78945))

(declare-fun m!78947 () Bool)

(assert (=> d!18667 m!78947))

(declare-fun m!78949 () Bool)

(assert (=> b!78530 m!78949))

(declare-fun m!78951 () Bool)

(assert (=> b!78531 m!78951))

(assert (=> d!18461 d!18667))

(declare-fun b!78532 () Bool)

(declare-fun e!51327 () List!1494)

(declare-fun e!51325 () List!1494)

(assert (=> b!78532 (= e!51327 e!51325)))

(declare-fun c!12068 () Bool)

(assert (=> b!78532 (= c!12068 (and ((_ is Cons!1490) (toList!729 lt!35791)) (= (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 lt!35792))))))

(declare-fun b!78533 () Bool)

(declare-fun c!12067 () Bool)

(assert (=> b!78533 (= c!12067 (and ((_ is Cons!1490) (toList!729 lt!35791)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 lt!35792))))))

(declare-fun e!51329 () List!1494)

(assert (=> b!78533 (= e!51325 e!51329)))

(declare-fun b!78534 () Bool)

(declare-fun call!7208 () List!1494)

(assert (=> b!78534 (= e!51329 call!7208)))

(declare-fun b!78535 () Bool)

(declare-fun call!7210 () List!1494)

(assert (=> b!78535 (= e!51325 call!7210)))

(declare-fun bm!7206 () Bool)

(assert (=> bm!7206 (= call!7208 call!7210)))

(declare-fun b!78536 () Bool)

(declare-fun e!51328 () List!1494)

(assert (=> b!78536 (= e!51328 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35791)) (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(declare-fun b!78537 () Bool)

(declare-fun call!7209 () List!1494)

(assert (=> b!78537 (= e!51327 call!7209)))

(declare-fun b!78538 () Bool)

(assert (=> b!78538 (= e!51328 (ite c!12068 (t!5132 (toList!729 lt!35791)) (ite c!12067 (Cons!1490 (h!2078 (toList!729 lt!35791)) (t!5132 (toList!729 lt!35791))) Nil!1491)))))

(declare-fun d!18669 () Bool)

(declare-fun e!51326 () Bool)

(assert (=> d!18669 e!51326))

(declare-fun res!41104 () Bool)

(assert (=> d!18669 (=> (not res!41104) (not e!51326))))

(declare-fun lt!36341 () List!1494)

(assert (=> d!18669 (= res!41104 (isStrictlySorted!282 lt!36341))))

(assert (=> d!18669 (= lt!36341 e!51327)))

(declare-fun c!12070 () Bool)

(assert (=> d!18669 (= c!12070 (and ((_ is Cons!1490) (toList!729 lt!35791)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 lt!35792))))))

(assert (=> d!18669 (isStrictlySorted!282 (toList!729 lt!35791))))

(assert (=> d!18669 (= (insertStrictlySorted!58 (toList!729 lt!35791) (_1!1092 lt!35792) (_2!1092 lt!35792)) lt!36341)))

(declare-fun bm!7205 () Bool)

(assert (=> bm!7205 (= call!7210 call!7209)))

(declare-fun b!78539 () Bool)

(declare-fun res!41103 () Bool)

(assert (=> b!78539 (=> (not res!41103) (not e!51326))))

(assert (=> b!78539 (= res!41103 (containsKey!141 lt!36341 (_1!1092 lt!35792)))))

(declare-fun b!78540 () Bool)

(assert (=> b!78540 (= e!51329 call!7208)))

(declare-fun b!78541 () Bool)

(assert (=> b!78541 (= e!51326 (contains!737 lt!36341 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun bm!7207 () Bool)

(assert (=> bm!7207 (= call!7209 ($colon$colon!68 e!51328 (ite c!12070 (h!2078 (toList!729 lt!35791)) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792)))))))

(declare-fun c!12069 () Bool)

(assert (=> bm!7207 (= c!12069 c!12070)))

(assert (= (and d!18669 c!12070) b!78537))

(assert (= (and d!18669 (not c!12070)) b!78532))

(assert (= (and b!78532 c!12068) b!78535))

(assert (= (and b!78532 (not c!12068)) b!78533))

(assert (= (and b!78533 c!12067) b!78540))

(assert (= (and b!78533 (not c!12067)) b!78534))

(assert (= (or b!78540 b!78534) bm!7206))

(assert (= (or b!78535 bm!7206) bm!7205))

(assert (= (or b!78537 bm!7205) bm!7207))

(assert (= (and bm!7207 c!12069) b!78536))

(assert (= (and bm!7207 (not c!12069)) b!78538))

(assert (= (and d!18669 res!41104) b!78539))

(assert (= (and b!78539 res!41103) b!78541))

(declare-fun m!78953 () Bool)

(assert (=> b!78541 m!78953))

(declare-fun m!78955 () Bool)

(assert (=> b!78536 m!78955))

(declare-fun m!78957 () Bool)

(assert (=> b!78539 m!78957))

(declare-fun m!78959 () Bool)

(assert (=> d!18669 m!78959))

(declare-fun m!78961 () Bool)

(assert (=> d!18669 m!78961))

(declare-fun m!78963 () Bool)

(assert (=> bm!7207 m!78963))

(assert (=> d!18461 d!18669))

(declare-fun b!78576 () Bool)

(declare-fun c!12079 () Bool)

(declare-fun lt!36413 () SeekEntryResult!234)

(assert (=> b!78576 (= c!12079 ((_ is MissingVacant!234) lt!36413))))

(declare-fun e!51346 () Bool)

(declare-fun e!51351 () Bool)

(assert (=> b!78576 (= e!51346 e!51351)))

(declare-fun b!78577 () Bool)

(declare-fun e!51347 () Bool)

(declare-fun lt!36421 () SeekEntryResult!234)

(assert (=> b!78577 (= e!51347 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36421)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun bm!7216 () Bool)

(declare-fun call!7220 () Bool)

(declare-fun call!7219 () Bool)

(assert (=> bm!7216 (= call!7220 call!7219)))

(declare-fun b!78578 () Bool)

(declare-fun e!51352 () Unit!2237)

(declare-fun Unit!2262 () Unit!2237)

(assert (=> b!78578 (= e!51352 Unit!2262)))

(declare-fun c!12082 () Bool)

(declare-fun c!12081 () Bool)

(declare-fun bm!7217 () Bool)

(assert (=> bm!7217 (= call!7219 (inRange!0 (ite c!12081 (index!3071 lt!36421) (ite c!12082 (index!3070 lt!36413) (index!3073 lt!36413))) (mask!6267 newMap!16)))))

(declare-fun call!7221 () SeekEntryResult!234)

(declare-fun bm!7218 () Bool)

(assert (=> bm!7218 (= call!7221 (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun b!78579 () Bool)

(declare-fun e!51348 () Bool)

(assert (=> b!78579 (= e!51351 e!51348)))

(declare-fun res!41129 () Bool)

(assert (=> b!78579 (= res!41129 call!7220)))

(assert (=> b!78579 (=> (not res!41129) (not e!51348))))

(declare-fun b!78580 () Bool)

(declare-fun Unit!2263 () Unit!2237)

(assert (=> b!78580 (= e!51352 Unit!2263)))

(declare-fun lt!36420 () Unit!2237)

(declare-fun lemmaArrayContainsKeyThenInListMap!16 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) (_ BitVec 32) Int) Unit!2237)

(assert (=> b!78580 (= lt!36420 (lemmaArrayContainsKeyThenInListMap!16 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(assert (=> b!78580 (contains!736 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))

(declare-fun lt!36409 () Unit!2237)

(assert (=> b!78580 (= lt!36409 lt!36420)))

(assert (=> b!78580 false))

(declare-fun b!78581 () Bool)

(declare-fun res!41123 () Bool)

(declare-fun e!51350 () Bool)

(assert (=> b!78581 (=> (not res!41123) (not e!51350))))

(declare-fun lt!36425 () tuple2!2164)

(assert (=> b!78581 (= res!41123 (contains!736 (map!1183 (_2!1093 lt!36425)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!78582 () Bool)

(assert (=> b!78582 (= e!51350 (= (map!1183 (_2!1093 lt!36425)) (+!100 (map!1183 newMap!16) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!78583 () Bool)

(declare-fun res!41128 () Bool)

(assert (=> b!78583 (= res!41128 call!7219)))

(assert (=> b!78583 (=> (not res!41128) (not e!51347))))

(declare-fun b!78584 () Bool)

(declare-fun e!51353 () Unit!2237)

(declare-fun Unit!2264 () Unit!2237)

(assert (=> b!78584 (= e!51353 Unit!2264)))

(declare-fun lt!36406 () Unit!2237)

(assert (=> b!78584 (= lt!36406 (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(assert (=> b!78584 (= lt!36421 call!7221)))

(declare-fun res!41130 () Bool)

(assert (=> b!78584 (= res!41130 ((_ is Found!234) lt!36421))))

(assert (=> b!78584 (=> (not res!41130) (not e!51347))))

(assert (=> b!78584 e!51347))

(declare-fun lt!36410 () Unit!2237)

(assert (=> b!78584 (= lt!36410 lt!36406)))

(assert (=> b!78584 false))

(declare-fun call!7222 () Bool)

(declare-fun bm!7219 () Bool)

(assert (=> bm!7219 (= call!7222 (arrayContainsKey!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!78586 () Bool)

(assert (=> b!78586 (= e!51351 ((_ is Undefined!234) lt!36413))))

(declare-fun b!78587 () Bool)

(declare-fun e!51349 () Bool)

(assert (=> b!78587 (= e!51349 (not call!7222))))

(declare-fun b!78588 () Bool)

(assert (=> b!78588 (= e!51348 (not call!7222))))

(declare-fun b!78589 () Bool)

(declare-fun res!41124 () Bool)

(assert (=> b!78589 (= res!41124 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3073 lt!36413)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78589 (=> (not res!41124) (not e!51348))))

(declare-fun b!78590 () Bool)

(declare-fun res!41126 () Bool)

(assert (=> b!78590 (=> (not res!41126) (not e!51350))))

(assert (=> b!78590 (= res!41126 (valid!323 (_2!1093 lt!36425)))))

(declare-fun b!78591 () Bool)

(declare-fun lt!36430 () Unit!2237)

(assert (=> b!78591 (= e!51353 lt!36430)))

(assert (=> b!78591 (= lt!36430 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(assert (=> b!78591 (= lt!36413 call!7221)))

(assert (=> b!78591 (= c!12082 ((_ is MissingZero!234) lt!36413))))

(assert (=> b!78591 e!51346))

(declare-fun b!78592 () Bool)

(declare-fun res!41127 () Bool)

(assert (=> b!78592 (=> (not res!41127) (not e!51349))))

(assert (=> b!78592 (= res!41127 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3070 lt!36413)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78585 () Bool)

(declare-fun res!41131 () Bool)

(assert (=> b!78585 (=> (not res!41131) (not e!51349))))

(assert (=> b!78585 (= res!41131 call!7220)))

(assert (=> b!78585 (= e!51346 e!51349)))

(declare-fun d!18671 () Bool)

(assert (=> d!18671 e!51350))

(declare-fun res!41125 () Bool)

(assert (=> d!18671 (=> (not res!41125) (not e!51350))))

(assert (=> d!18671 (= res!41125 (_1!1093 lt!36425))))

(assert (=> d!18671 (= lt!36425 (tuple2!2165 true (LongMapFixedSize!731 (defaultEntry!2271 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (bvadd (_size!414 newMap!16) #b00000000000000000000000000000001) (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (_vacant!414 newMap!16))))))

(declare-fun lt!36404 () Unit!2237)

(declare-fun lt!36405 () Unit!2237)

(assert (=> d!18671 (= lt!36404 lt!36405)))

(declare-fun lt!36428 () array!3959)

(declare-fun lt!36429 () array!3957)

(assert (=> d!18671 (contains!736 (getCurrentListMap!425 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))))))

(assert (=> d!18671 (= lt!36405 (lemmaValidKeyInArrayIsInListMap!88 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18671 (= lt!36428 (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))))

(assert (=> d!18671 (= lt!36429 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun lt!36416 () Unit!2237)

(declare-fun lt!36426 () Unit!2237)

(assert (=> d!18671 (= lt!36416 lt!36426)))

(declare-fun lt!36422 () array!3957)

(assert (=> d!18671 (= (arrayCountValidKeys!0 lt!36422 (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (bvadd (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3957 (_ BitVec 32)) Unit!2237)

(assert (=> d!18671 (= lt!36426 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!36422 (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))))))

(assert (=> d!18671 (= lt!36422 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun lt!36411 () Unit!2237)

(declare-fun lt!36427 () Unit!2237)

(assert (=> d!18671 (= lt!36411 lt!36427)))

(declare-fun lt!36431 () array!3957)

(assert (=> d!18671 (arrayContainsKey!0 lt!36431 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3957 (_ BitVec 64) (_ BitVec 32)) Unit!2237)

(assert (=> d!18671 (= lt!36427 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!36431 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))))))

(assert (=> d!18671 (= lt!36431 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun lt!36418 () Unit!2237)

(declare-fun lt!36403 () Unit!2237)

(assert (=> d!18671 (= lt!36418 lt!36403)))

(assert (=> d!18671 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (getCurrentListMap!425 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!16 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) (_ BitVec 64) V!2993 Int) Unit!2237)

(assert (=> d!18671 (= lt!36403 (lemmaAddValidKeyToArrayThenAddPairToListMap!16 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36407 () Unit!2237)

(declare-fun lt!36419 () Unit!2237)

(assert (=> d!18671 (= lt!36407 lt!36419)))

(assert (=> d!18671 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (mask!6267 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3957 (_ BitVec 32) (_ BitVec 32)) Unit!2237)

(assert (=> d!18671 (= lt!36419 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (mask!6267 newMap!16)))))

(declare-fun lt!36412 () Unit!2237)

(declare-fun lt!36414 () Unit!2237)

(assert (=> d!18671 (= lt!36412 lt!36414)))

(assert (=> d!18671 (= (arrayCountValidKeys!0 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3931 newMap!16) #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3957 (_ BitVec 32) (_ BitVec 64)) Unit!2237)

(assert (=> d!18671 (= lt!36414 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3931 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun lt!36423 () Unit!2237)

(declare-fun lt!36402 () Unit!2237)

(assert (=> d!18671 (= lt!36423 lt!36402)))

(declare-fun lt!36408 () (_ BitVec 32))

(declare-fun lt!36415 () List!1495)

(assert (=> d!18671 (arrayNoDuplicates!0 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) lt!36408 lt!36415)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3957 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1495) Unit!2237)

(assert (=> d!18671 (= lt!36402 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) lt!36408 lt!36415))))

(assert (=> d!18671 (= lt!36415 Nil!1492)))

(assert (=> d!18671 (= lt!36408 #b00000000000000000000000000000000)))

(declare-fun lt!36417 () Unit!2237)

(assert (=> d!18671 (= lt!36417 e!51352)))

(declare-fun c!12080 () Bool)

(assert (=> d!18671 (= c!12080 (arrayContainsKey!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!36424 () Unit!2237)

(assert (=> d!18671 (= lt!36424 e!51353)))

(assert (=> d!18671 (= c!12081 (contains!736 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!18671 (valid!323 newMap!16)))

(assert (=> d!18671 (= (updateHelperNewKey!28 newMap!16 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))) lt!36425)))

(assert (= (and d!18671 c!12081) b!78584))

(assert (= (and d!18671 (not c!12081)) b!78591))

(assert (= (and b!78584 res!41130) b!78583))

(assert (= (and b!78583 res!41128) b!78577))

(assert (= (and b!78591 c!12082) b!78585))

(assert (= (and b!78591 (not c!12082)) b!78576))

(assert (= (and b!78585 res!41131) b!78592))

(assert (= (and b!78592 res!41127) b!78587))

(assert (= (and b!78576 c!12079) b!78579))

(assert (= (and b!78576 (not c!12079)) b!78586))

(assert (= (and b!78579 res!41129) b!78589))

(assert (= (and b!78589 res!41124) b!78588))

(assert (= (or b!78585 b!78579) bm!7216))

(assert (= (or b!78587 b!78588) bm!7219))

(assert (= (or b!78583 bm!7216) bm!7217))

(assert (= (or b!78584 b!78591) bm!7218))

(assert (= (and d!18671 c!12080) b!78580))

(assert (= (and d!18671 (not c!12080)) b!78578))

(assert (= (and d!18671 res!41125) b!78590))

(assert (= (and b!78590 res!41126) b!78581))

(assert (= (and b!78581 res!41123) b!78582))

(declare-fun m!78965 () Bool)

(assert (=> b!78581 m!78965))

(assert (=> b!78581 m!78965))

(assert (=> b!78581 m!77885))

(declare-fun m!78967 () Bool)

(assert (=> b!78581 m!78967))

(assert (=> b!78582 m!78965))

(assert (=> b!78582 m!77895))

(assert (=> b!78582 m!77895))

(declare-fun m!78969 () Bool)

(assert (=> b!78582 m!78969))

(assert (=> b!78580 m!77885))

(declare-fun m!78971 () Bool)

(assert (=> b!78580 m!78971))

(assert (=> b!78580 m!78223))

(assert (=> b!78580 m!78223))

(assert (=> b!78580 m!77885))

(declare-fun m!78973 () Bool)

(assert (=> b!78580 m!78973))

(declare-fun m!78975 () Bool)

(assert (=> b!78590 m!78975))

(assert (=> bm!7218 m!77885))

(assert (=> bm!7218 m!78327))

(declare-fun m!78977 () Bool)

(assert (=> b!78592 m!78977))

(declare-fun m!78979 () Bool)

(assert (=> bm!7217 m!78979))

(assert (=> bm!7219 m!77885))

(assert (=> bm!7219 m!78317))

(declare-fun m!78981 () Bool)

(assert (=> b!78589 m!78981))

(assert (=> b!78584 m!77885))

(assert (=> b!78584 m!78329))

(assert (=> d!18671 m!77891))

(declare-fun m!78983 () Bool)

(assert (=> d!18671 m!78983))

(declare-fun m!78985 () Bool)

(assert (=> d!18671 m!78985))

(declare-fun m!78987 () Bool)

(assert (=> d!18671 m!78987))

(assert (=> d!18671 m!78223))

(declare-fun m!78989 () Bool)

(assert (=> d!18671 m!78989))

(assert (=> d!18671 m!77885))

(declare-fun m!78991 () Bool)

(assert (=> d!18671 m!78991))

(assert (=> d!18671 m!77885))

(assert (=> d!18671 m!78317))

(declare-fun m!78993 () Bool)

(assert (=> d!18671 m!78993))

(assert (=> d!18671 m!77885))

(declare-fun m!78995 () Bool)

(assert (=> d!18671 m!78995))

(assert (=> d!18671 m!78983))

(declare-fun m!78997 () Bool)

(assert (=> d!18671 m!78997))

(declare-fun m!78999 () Bool)

(assert (=> d!18671 m!78999))

(assert (=> d!18671 m!78223))

(assert (=> d!18671 m!77885))

(assert (=> d!18671 m!78973))

(declare-fun m!79001 () Bool)

(assert (=> d!18671 m!79001))

(declare-fun m!79003 () Bool)

(assert (=> d!18671 m!79003))

(assert (=> d!18671 m!78335))

(assert (=> d!18671 m!77885))

(declare-fun m!79005 () Bool)

(assert (=> d!18671 m!79005))

(declare-fun m!79007 () Bool)

(assert (=> d!18671 m!79007))

(declare-fun m!79009 () Bool)

(assert (=> d!18671 m!79009))

(assert (=> d!18671 m!78985))

(assert (=> d!18671 m!77885))

(declare-fun m!79011 () Bool)

(assert (=> d!18671 m!79011))

(declare-fun m!79013 () Bool)

(assert (=> d!18671 m!79013))

(assert (=> d!18671 m!77885))

(declare-fun m!79015 () Bool)

(assert (=> d!18671 m!79015))

(assert (=> d!18671 m!78223))

(declare-fun m!79017 () Bool)

(assert (=> d!18671 m!79017))

(assert (=> d!18671 m!77885))

(declare-fun m!79019 () Bool)

(assert (=> d!18671 m!79019))

(assert (=> b!78591 m!77885))

(assert (=> b!78591 m!78323))

(declare-fun m!79021 () Bool)

(assert (=> b!78577 m!79021))

(assert (=> bm!7152 d!18671))

(assert (=> b!77957 d!18551))

(declare-fun b!78604 () Bool)

(declare-fun e!51356 () Bool)

(assert (=> b!78604 (= e!51356 (and (bvsge (extraKeys!2122 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2122 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!414 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!78602 () Bool)

(declare-fun res!41140 () Bool)

(assert (=> b!78602 (=> (not res!41140) (not e!51356))))

(declare-fun size!2133 (LongMapFixedSize!730) (_ BitVec 32))

(assert (=> b!78602 (= res!41140 (bvsge (size!2133 newMap!16) (_size!414 newMap!16)))))

(declare-fun b!78601 () Bool)

(declare-fun res!41141 () Bool)

(assert (=> b!78601 (=> (not res!41141) (not e!51356))))

(assert (=> b!78601 (= res!41141 (and (= (size!2128 (_values!2254 newMap!16)) (bvadd (mask!6267 newMap!16) #b00000000000000000000000000000001)) (= (size!2127 (_keys!3931 newMap!16)) (size!2128 (_values!2254 newMap!16))) (bvsge (_size!414 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!414 newMap!16) (bvadd (mask!6267 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!78603 () Bool)

(declare-fun res!41143 () Bool)

(assert (=> b!78603 (=> (not res!41143) (not e!51356))))

(assert (=> b!78603 (= res!41143 (= (size!2133 newMap!16) (bvadd (_size!414 newMap!16) (bvsdiv (bvadd (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!18673 () Bool)

(declare-fun res!41142 () Bool)

(assert (=> d!18673 (=> (not res!41142) (not e!51356))))

(assert (=> d!18673 (= res!41142 (validMask!0 (mask!6267 newMap!16)))))

(assert (=> d!18673 (= (simpleValid!55 newMap!16) e!51356)))

(assert (= (and d!18673 res!41142) b!78601))

(assert (= (and b!78601 res!41141) b!78602))

(assert (= (and b!78602 res!41140) b!78603))

(assert (= (and b!78603 res!41143) b!78604))

(declare-fun m!79023 () Bool)

(assert (=> b!78602 m!79023))

(assert (=> b!78603 m!79023))

(assert (=> d!18673 m!78355))

(assert (=> d!18509 d!18673))

(declare-fun d!18675 () Bool)

(assert (=> d!18675 (= (apply!79 lt!36049 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1186 (getValueByKey!138 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3335 () Bool)

(assert (= bs!3335 d!18675))

(assert (=> bs!3335 m!78349))

(assert (=> bs!3335 m!78349))

(declare-fun m!79025 () Bool)

(assert (=> bs!3335 m!79025))

(assert (=> b!78067 d!18675))

(declare-fun d!18677 () Bool)

(declare-fun e!51357 () Bool)

(assert (=> d!18677 e!51357))

(declare-fun res!41144 () Bool)

(assert (=> d!18677 (=> (not res!41144) (not e!51357))))

(declare-fun lt!36433 () ListLongMap!1427)

(assert (=> d!18677 (= res!41144 (contains!736 lt!36433 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36432 () List!1494)

(assert (=> d!18677 (= lt!36433 (ListLongMap!1428 lt!36432))))

(declare-fun lt!36434 () Unit!2237)

(declare-fun lt!36435 () Unit!2237)

(assert (=> d!18677 (= lt!36434 lt!36435)))

(assert (=> d!18677 (= (getValueByKey!138 lt!36432 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18677 (= lt!36435 (lemmaContainsTupThenGetReturnValue!55 lt!36432 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18677 (= lt!36432 (insertStrictlySorted!58 (toList!729 call!7091) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18677 (= (+!100 call!7091 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36433)))

(declare-fun b!78605 () Bool)

(declare-fun res!41145 () Bool)

(assert (=> b!78605 (=> (not res!41145) (not e!51357))))

(assert (=> b!78605 (= res!41145 (= (getValueByKey!138 (toList!729 lt!36433) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!78606 () Bool)

(assert (=> b!78606 (= e!51357 (contains!737 (toList!729 lt!36433) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!18677 res!41144) b!78605))

(assert (= (and b!78605 res!41145) b!78606))

(declare-fun m!79027 () Bool)

(assert (=> d!18677 m!79027))

(declare-fun m!79029 () Bool)

(assert (=> d!18677 m!79029))

(declare-fun m!79031 () Bool)

(assert (=> d!18677 m!79031))

(declare-fun m!79033 () Bool)

(assert (=> d!18677 m!79033))

(declare-fun m!79035 () Bool)

(assert (=> b!78605 m!79035))

(declare-fun m!79037 () Bool)

(assert (=> b!78606 m!79037))

(assert (=> b!78052 d!18677))

(declare-fun b!78607 () Bool)

(declare-fun e!51358 () Option!144)

(assert (=> b!78607 (= e!51358 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35953)))))))

(declare-fun b!78608 () Bool)

(declare-fun e!51359 () Option!144)

(assert (=> b!78608 (= e!51358 e!51359)))

(declare-fun c!12084 () Bool)

(assert (=> b!78608 (= c!12084 (and ((_ is Cons!1490) (toList!729 lt!35953)) (not (= (_1!1092 (h!2078 (toList!729 lt!35953))) (_1!1092 lt!35792)))))))

(declare-fun b!78610 () Bool)

(assert (=> b!78610 (= e!51359 None!142)))

(declare-fun b!78609 () Bool)

(assert (=> b!78609 (= e!51359 (getValueByKey!138 (t!5132 (toList!729 lt!35953)) (_1!1092 lt!35792)))))

(declare-fun d!18679 () Bool)

(declare-fun c!12083 () Bool)

(assert (=> d!18679 (= c!12083 (and ((_ is Cons!1490) (toList!729 lt!35953)) (= (_1!1092 (h!2078 (toList!729 lt!35953))) (_1!1092 lt!35792))))))

(assert (=> d!18679 (= (getValueByKey!138 (toList!729 lt!35953) (_1!1092 lt!35792)) e!51358)))

(assert (= (and d!18679 c!12083) b!78607))

(assert (= (and d!18679 (not c!12083)) b!78608))

(assert (= (and b!78608 c!12084) b!78609))

(assert (= (and b!78608 (not c!12084)) b!78610))

(declare-fun m!79039 () Bool)

(assert (=> b!78609 m!79039))

(assert (=> b!77964 d!18679))

(assert (=> d!18481 d!18487))

(declare-fun d!18681 () Bool)

(assert (=> d!18681 (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) from!355 Nil!1492)))

(assert (=> d!18681 true))

(declare-fun _$71!105 () Unit!2237)

(assert (=> d!18681 (= (choose!39 (_keys!3931 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!105)))

(declare-fun bs!3336 () Bool)

(assert (= bs!3336 d!18681))

(assert (=> bs!3336 m!77901))

(assert (=> d!18481 d!18681))

(declare-fun b!78619 () Bool)

(declare-fun e!51368 () Bool)

(declare-fun call!7225 () Bool)

(assert (=> b!78619 (= e!51368 call!7225)))

(declare-fun d!18683 () Bool)

(declare-fun res!41150 () Bool)

(declare-fun e!51367 () Bool)

(assert (=> d!18683 (=> res!41150 e!51367)))

(assert (=> d!18683 (= res!41150 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18683 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3931 newMap!16) (mask!6267 newMap!16)) e!51367)))

(declare-fun bm!7222 () Bool)

(assert (=> bm!7222 (= call!7225 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun b!78620 () Bool)

(declare-fun e!51366 () Bool)

(assert (=> b!78620 (= e!51367 e!51366)))

(declare-fun c!12087 () Bool)

(assert (=> b!78620 (= c!12087 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78621 () Bool)

(assert (=> b!78621 (= e!51366 call!7225)))

(declare-fun b!78622 () Bool)

(assert (=> b!78622 (= e!51366 e!51368)))

(declare-fun lt!36443 () (_ BitVec 64))

(assert (=> b!78622 (= lt!36443 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36442 () Unit!2237)

(assert (=> b!78622 (= lt!36442 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3931 newMap!16) lt!36443 #b00000000000000000000000000000000))))

(assert (=> b!78622 (arrayContainsKey!0 (_keys!3931 newMap!16) lt!36443 #b00000000000000000000000000000000)))

(declare-fun lt!36444 () Unit!2237)

(assert (=> b!78622 (= lt!36444 lt!36442)))

(declare-fun res!41151 () Bool)

(assert (=> b!78622 (= res!41151 (= (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) (_keys!3931 newMap!16) (mask!6267 newMap!16)) (Found!234 #b00000000000000000000000000000000)))))

(assert (=> b!78622 (=> (not res!41151) (not e!51368))))

(assert (= (and d!18683 (not res!41150)) b!78620))

(assert (= (and b!78620 c!12087) b!78622))

(assert (= (and b!78620 (not c!12087)) b!78621))

(assert (= (and b!78622 res!41151) b!78619))

(assert (= (or b!78619 b!78621) bm!7222))

(declare-fun m!79041 () Bool)

(assert (=> bm!7222 m!79041))

(assert (=> b!78620 m!78435))

(assert (=> b!78620 m!78435))

(assert (=> b!78620 m!78437))

(assert (=> b!78622 m!78435))

(declare-fun m!79043 () Bool)

(assert (=> b!78622 m!79043))

(declare-fun m!79045 () Bool)

(assert (=> b!78622 m!79045))

(assert (=> b!78622 m!78435))

(declare-fun m!79047 () Bool)

(assert (=> b!78622 m!79047))

(assert (=> b!78214 d!18683))

(declare-fun d!18685 () Bool)

(assert (=> d!18685 (= (inRange!0 (ite c!11973 (ite c!11979 (index!3071 lt!36138) (ite c!11980 (index!3070 lt!36125) (index!3073 lt!36125))) (ite c!11970 (index!3071 lt!36143) (ite c!11975 (index!3070 lt!36121) (index!3073 lt!36121)))) (mask!6267 newMap!16)) (and (bvsge (ite c!11973 (ite c!11979 (index!3071 lt!36138) (ite c!11980 (index!3070 lt!36125) (index!3073 lt!36125))) (ite c!11970 (index!3071 lt!36143) (ite c!11975 (index!3070 lt!36121) (index!3073 lt!36121)))) #b00000000000000000000000000000000) (bvslt (ite c!11973 (ite c!11979 (index!3071 lt!36138) (ite c!11980 (index!3070 lt!36125) (index!3073 lt!36125))) (ite c!11970 (index!3071 lt!36143) (ite c!11975 (index!3070 lt!36121) (index!3073 lt!36121)))) (bvadd (mask!6267 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7146 d!18685))

(assert (=> b!78000 d!18535))

(declare-fun b!78623 () Bool)

(declare-fun e!51369 () Option!144)

(assert (=> b!78623 (= e!51369 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35969)))))))

(declare-fun b!78624 () Bool)

(declare-fun e!51370 () Option!144)

(assert (=> b!78624 (= e!51369 e!51370)))

(declare-fun c!12089 () Bool)

(assert (=> b!78624 (= c!12089 (and ((_ is Cons!1490) (toList!729 lt!35969)) (not (= (_1!1092 (h!2078 (toList!729 lt!35969))) (_1!1092 lt!35792)))))))

(declare-fun b!78626 () Bool)

(assert (=> b!78626 (= e!51370 None!142)))

(declare-fun b!78625 () Bool)

(assert (=> b!78625 (= e!51370 (getValueByKey!138 (t!5132 (toList!729 lt!35969)) (_1!1092 lt!35792)))))

(declare-fun d!18687 () Bool)

(declare-fun c!12088 () Bool)

(assert (=> d!18687 (= c!12088 (and ((_ is Cons!1490) (toList!729 lt!35969)) (= (_1!1092 (h!2078 (toList!729 lt!35969))) (_1!1092 lt!35792))))))

(assert (=> d!18687 (= (getValueByKey!138 (toList!729 lt!35969) (_1!1092 lt!35792)) e!51369)))

(assert (= (and d!18687 c!12088) b!78623))

(assert (= (and d!18687 (not c!12088)) b!78624))

(assert (= (and b!78624 c!12089) b!78625))

(assert (= (and b!78624 (not c!12089)) b!78626))

(declare-fun m!79049 () Bool)

(assert (=> b!78625 m!79049))

(assert (=> b!77972 d!18687))

(declare-fun d!18689 () Bool)

(declare-fun e!51371 () Bool)

(assert (=> d!18689 e!51371))

(declare-fun res!41152 () Bool)

(assert (=> d!18689 (=> (not res!41152) (not e!51371))))

(declare-fun lt!36446 () ListLongMap!1427)

(assert (=> d!18689 (= res!41152 (contains!736 lt!36446 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun lt!36445 () List!1494)

(assert (=> d!18689 (= lt!36446 (ListLongMap!1428 lt!36445))))

(declare-fun lt!36447 () Unit!2237)

(declare-fun lt!36448 () Unit!2237)

(assert (=> d!18689 (= lt!36447 lt!36448)))

(assert (=> d!18689 (= (getValueByKey!138 lt!36445 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (Some!143 (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!18689 (= lt!36448 (lemmaContainsTupThenGetReturnValue!55 lt!36445 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!18689 (= lt!36445 (insertStrictlySorted!58 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088))) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!18689 (= (+!100 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088)) (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36446)))

(declare-fun b!78627 () Bool)

(declare-fun res!41153 () Bool)

(assert (=> b!78627 (=> (not res!41153) (not e!51371))))

(assert (=> b!78627 (= res!41153 (= (getValueByKey!138 (toList!729 lt!36446) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (Some!143 (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!78628 () Bool)

(assert (=> b!78628 (= e!51371 (contains!737 (toList!729 lt!36446) (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (= (and d!18689 res!41152) b!78627))

(assert (= (and b!78627 res!41153) b!78628))

(declare-fun m!79051 () Bool)

(assert (=> d!18689 m!79051))

(declare-fun m!79053 () Bool)

(assert (=> d!18689 m!79053))

(declare-fun m!79055 () Bool)

(assert (=> d!18689 m!79055))

(declare-fun m!79057 () Bool)

(assert (=> d!18689 m!79057))

(declare-fun m!79059 () Bool)

(assert (=> b!78627 m!79059))

(declare-fun m!79061 () Bool)

(assert (=> b!78628 m!79061))

(assert (=> bm!7086 d!18689))

(declare-fun b!78629 () Bool)

(declare-fun e!51372 () Option!144)

(assert (=> b!78629 (= e!51372 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35973)))))))

(declare-fun b!78630 () Bool)

(declare-fun e!51373 () Option!144)

(assert (=> b!78630 (= e!51372 e!51373)))

(declare-fun c!12091 () Bool)

(assert (=> b!78630 (= c!12091 (and ((_ is Cons!1490) (toList!729 lt!35973)) (not (= (_1!1092 (h!2078 (toList!729 lt!35973))) (_1!1092 lt!35789)))))))

(declare-fun b!78632 () Bool)

(assert (=> b!78632 (= e!51373 None!142)))

(declare-fun b!78631 () Bool)

(assert (=> b!78631 (= e!51373 (getValueByKey!138 (t!5132 (toList!729 lt!35973)) (_1!1092 lt!35789)))))

(declare-fun d!18691 () Bool)

(declare-fun c!12090 () Bool)

(assert (=> d!18691 (= c!12090 (and ((_ is Cons!1490) (toList!729 lt!35973)) (= (_1!1092 (h!2078 (toList!729 lt!35973))) (_1!1092 lt!35789))))))

(assert (=> d!18691 (= (getValueByKey!138 (toList!729 lt!35973) (_1!1092 lt!35789)) e!51372)))

(assert (= (and d!18691 c!12090) b!78629))

(assert (= (and d!18691 (not c!12090)) b!78630))

(assert (= (and b!78630 c!12091) b!78631))

(assert (= (and b!78630 (not c!12091)) b!78632))

(declare-fun m!79063 () Bool)

(assert (=> b!78631 m!79063))

(assert (=> b!77974 d!18691))

(declare-fun d!18693 () Bool)

(declare-fun e!51375 () Bool)

(assert (=> d!18693 e!51375))

(declare-fun res!41154 () Bool)

(assert (=> d!18693 (=> res!41154 e!51375)))

(declare-fun lt!36450 () Bool)

(assert (=> d!18693 (= res!41154 (not lt!36450))))

(declare-fun lt!36452 () Bool)

(assert (=> d!18693 (= lt!36450 lt!36452)))

(declare-fun lt!36451 () Unit!2237)

(declare-fun e!51374 () Unit!2237)

(assert (=> d!18693 (= lt!36451 e!51374)))

(declare-fun c!12092 () Bool)

(assert (=> d!18693 (= c!12092 lt!36452)))

(assert (=> d!18693 (= lt!36452 (containsKey!141 (toList!729 lt!35953) (_1!1092 lt!35792)))))

(assert (=> d!18693 (= (contains!736 lt!35953 (_1!1092 lt!35792)) lt!36450)))

(declare-fun b!78633 () Bool)

(declare-fun lt!36449 () Unit!2237)

(assert (=> b!78633 (= e!51374 lt!36449)))

(assert (=> b!78633 (= lt!36449 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35953) (_1!1092 lt!35792)))))

(assert (=> b!78633 (isDefined!90 (getValueByKey!138 (toList!729 lt!35953) (_1!1092 lt!35792)))))

(declare-fun b!78634 () Bool)

(declare-fun Unit!2265 () Unit!2237)

(assert (=> b!78634 (= e!51374 Unit!2265)))

(declare-fun b!78635 () Bool)

(assert (=> b!78635 (= e!51375 (isDefined!90 (getValueByKey!138 (toList!729 lt!35953) (_1!1092 lt!35792))))))

(assert (= (and d!18693 c!12092) b!78633))

(assert (= (and d!18693 (not c!12092)) b!78634))

(assert (= (and d!18693 (not res!41154)) b!78635))

(declare-fun m!79065 () Bool)

(assert (=> d!18693 m!79065))

(declare-fun m!79067 () Bool)

(assert (=> b!78633 m!79067))

(assert (=> b!78633 m!78139))

(assert (=> b!78633 m!78139))

(declare-fun m!79069 () Bool)

(assert (=> b!78633 m!79069))

(assert (=> b!78635 m!78139))

(assert (=> b!78635 m!78139))

(assert (=> b!78635 m!79069))

(assert (=> d!18465 d!18693))

(declare-fun b!78636 () Bool)

(declare-fun e!51376 () Option!144)

(assert (=> b!78636 (= e!51376 (Some!143 (_2!1092 (h!2078 lt!35952))))))

(declare-fun b!78637 () Bool)

(declare-fun e!51377 () Option!144)

(assert (=> b!78637 (= e!51376 e!51377)))

(declare-fun c!12094 () Bool)

(assert (=> b!78637 (= c!12094 (and ((_ is Cons!1490) lt!35952) (not (= (_1!1092 (h!2078 lt!35952)) (_1!1092 lt!35792)))))))

(declare-fun b!78639 () Bool)

(assert (=> b!78639 (= e!51377 None!142)))

(declare-fun b!78638 () Bool)

(assert (=> b!78638 (= e!51377 (getValueByKey!138 (t!5132 lt!35952) (_1!1092 lt!35792)))))

(declare-fun d!18695 () Bool)

(declare-fun c!12093 () Bool)

(assert (=> d!18695 (= c!12093 (and ((_ is Cons!1490) lt!35952) (= (_1!1092 (h!2078 lt!35952)) (_1!1092 lt!35792))))))

(assert (=> d!18695 (= (getValueByKey!138 lt!35952 (_1!1092 lt!35792)) e!51376)))

(assert (= (and d!18695 c!12093) b!78636))

(assert (= (and d!18695 (not c!12093)) b!78637))

(assert (= (and b!78637 c!12094) b!78638))

(assert (= (and b!78637 (not c!12094)) b!78639))

(declare-fun m!79071 () Bool)

(assert (=> b!78638 m!79071))

(assert (=> d!18465 d!18695))

(declare-fun d!18697 () Bool)

(assert (=> d!18697 (= (getValueByKey!138 lt!35952 (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792)))))

(declare-fun lt!36453 () Unit!2237)

(assert (=> d!18697 (= lt!36453 (choose!468 lt!35952 (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(declare-fun e!51378 () Bool)

(assert (=> d!18697 e!51378))

(declare-fun res!41155 () Bool)

(assert (=> d!18697 (=> (not res!41155) (not e!51378))))

(assert (=> d!18697 (= res!41155 (isStrictlySorted!282 lt!35952))))

(assert (=> d!18697 (= (lemmaContainsTupThenGetReturnValue!55 lt!35952 (_1!1092 lt!35792) (_2!1092 lt!35792)) lt!36453)))

(declare-fun b!78640 () Bool)

(declare-fun res!41156 () Bool)

(assert (=> b!78640 (=> (not res!41156) (not e!51378))))

(assert (=> b!78640 (= res!41156 (containsKey!141 lt!35952 (_1!1092 lt!35792)))))

(declare-fun b!78641 () Bool)

(assert (=> b!78641 (= e!51378 (contains!737 lt!35952 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(assert (= (and d!18697 res!41155) b!78640))

(assert (= (and b!78640 res!41156) b!78641))

(assert (=> d!18697 m!78133))

(declare-fun m!79073 () Bool)

(assert (=> d!18697 m!79073))

(declare-fun m!79075 () Bool)

(assert (=> d!18697 m!79075))

(declare-fun m!79077 () Bool)

(assert (=> b!78640 m!79077))

(declare-fun m!79079 () Bool)

(assert (=> b!78641 m!79079))

(assert (=> d!18465 d!18697))

(declare-fun b!78642 () Bool)

(declare-fun e!51381 () List!1494)

(declare-fun e!51379 () List!1494)

(assert (=> b!78642 (= e!51381 e!51379)))

(declare-fun c!12096 () Bool)

(assert (=> b!78642 (= c!12096 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35804 lt!35806))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!35804 lt!35806)))) (_1!1092 lt!35792))))))

(declare-fun c!12095 () Bool)

(declare-fun b!78643 () Bool)

(assert (=> b!78643 (= c!12095 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35804 lt!35806))) (bvsgt (_1!1092 (h!2078 (toList!729 (+!100 lt!35804 lt!35806)))) (_1!1092 lt!35792))))))

(declare-fun e!51383 () List!1494)

(assert (=> b!78643 (= e!51379 e!51383)))

(declare-fun b!78644 () Bool)

(declare-fun call!7226 () List!1494)

(assert (=> b!78644 (= e!51383 call!7226)))

(declare-fun b!78645 () Bool)

(declare-fun call!7228 () List!1494)

(assert (=> b!78645 (= e!51379 call!7228)))

(declare-fun bm!7224 () Bool)

(assert (=> bm!7224 (= call!7226 call!7228)))

(declare-fun e!51382 () List!1494)

(declare-fun b!78646 () Bool)

(assert (=> b!78646 (= e!51382 (insertStrictlySorted!58 (t!5132 (toList!729 (+!100 lt!35804 lt!35806))) (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(declare-fun b!78647 () Bool)

(declare-fun call!7227 () List!1494)

(assert (=> b!78647 (= e!51381 call!7227)))

(declare-fun b!78648 () Bool)

(assert (=> b!78648 (= e!51382 (ite c!12096 (t!5132 (toList!729 (+!100 lt!35804 lt!35806))) (ite c!12095 (Cons!1490 (h!2078 (toList!729 (+!100 lt!35804 lt!35806))) (t!5132 (toList!729 (+!100 lt!35804 lt!35806)))) Nil!1491)))))

(declare-fun d!18699 () Bool)

(declare-fun e!51380 () Bool)

(assert (=> d!18699 e!51380))

(declare-fun res!41158 () Bool)

(assert (=> d!18699 (=> (not res!41158) (not e!51380))))

(declare-fun lt!36454 () List!1494)

(assert (=> d!18699 (= res!41158 (isStrictlySorted!282 lt!36454))))

(assert (=> d!18699 (= lt!36454 e!51381)))

(declare-fun c!12098 () Bool)

(assert (=> d!18699 (= c!12098 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35804 lt!35806))) (bvslt (_1!1092 (h!2078 (toList!729 (+!100 lt!35804 lt!35806)))) (_1!1092 lt!35792))))))

(assert (=> d!18699 (isStrictlySorted!282 (toList!729 (+!100 lt!35804 lt!35806)))))

(assert (=> d!18699 (= (insertStrictlySorted!58 (toList!729 (+!100 lt!35804 lt!35806)) (_1!1092 lt!35792) (_2!1092 lt!35792)) lt!36454)))

(declare-fun bm!7223 () Bool)

(assert (=> bm!7223 (= call!7228 call!7227)))

(declare-fun b!78649 () Bool)

(declare-fun res!41157 () Bool)

(assert (=> b!78649 (=> (not res!41157) (not e!51380))))

(assert (=> b!78649 (= res!41157 (containsKey!141 lt!36454 (_1!1092 lt!35792)))))

(declare-fun b!78650 () Bool)

(assert (=> b!78650 (= e!51383 call!7226)))

(declare-fun b!78651 () Bool)

(assert (=> b!78651 (= e!51380 (contains!737 lt!36454 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun bm!7225 () Bool)

(assert (=> bm!7225 (= call!7227 ($colon$colon!68 e!51382 (ite c!12098 (h!2078 (toList!729 (+!100 lt!35804 lt!35806))) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792)))))))

(declare-fun c!12097 () Bool)

(assert (=> bm!7225 (= c!12097 c!12098)))

(assert (= (and d!18699 c!12098) b!78647))

(assert (= (and d!18699 (not c!12098)) b!78642))

(assert (= (and b!78642 c!12096) b!78645))

(assert (= (and b!78642 (not c!12096)) b!78643))

(assert (= (and b!78643 c!12095) b!78650))

(assert (= (and b!78643 (not c!12095)) b!78644))

(assert (= (or b!78650 b!78644) bm!7224))

(assert (= (or b!78645 bm!7224) bm!7223))

(assert (= (or b!78647 bm!7223) bm!7225))

(assert (= (and bm!7225 c!12097) b!78646))

(assert (= (and bm!7225 (not c!12097)) b!78648))

(assert (= (and d!18699 res!41158) b!78649))

(assert (= (and b!78649 res!41157) b!78651))

(declare-fun m!79081 () Bool)

(assert (=> b!78651 m!79081))

(declare-fun m!79083 () Bool)

(assert (=> b!78646 m!79083))

(declare-fun m!79085 () Bool)

(assert (=> b!78649 m!79085))

(declare-fun m!79087 () Bool)

(assert (=> d!18699 m!79087))

(declare-fun m!79089 () Bool)

(assert (=> d!18699 m!79089))

(declare-fun m!79091 () Bool)

(assert (=> bm!7225 m!79091))

(assert (=> d!18465 d!18699))

(declare-fun d!18701 () Bool)

(declare-fun e!51385 () Bool)

(assert (=> d!18701 e!51385))

(declare-fun res!41159 () Bool)

(assert (=> d!18701 (=> res!41159 e!51385)))

(declare-fun lt!36456 () Bool)

(assert (=> d!18701 (= res!41159 (not lt!36456))))

(declare-fun lt!36458 () Bool)

(assert (=> d!18701 (= lt!36456 lt!36458)))

(declare-fun lt!36457 () Unit!2237)

(declare-fun e!51384 () Unit!2237)

(assert (=> d!18701 (= lt!36457 e!51384)))

(declare-fun c!12099 () Bool)

(assert (=> d!18701 (= c!12099 lt!36458)))

(assert (=> d!18701 (= lt!36458 (containsKey!141 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18701 (= (contains!736 lt!35932 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36456)))

(declare-fun b!78652 () Bool)

(declare-fun lt!36455 () Unit!2237)

(assert (=> b!78652 (= e!51384 lt!36455)))

(assert (=> b!78652 (= lt!36455 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78652 (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78653 () Bool)

(declare-fun Unit!2266 () Unit!2237)

(assert (=> b!78653 (= e!51384 Unit!2266)))

(declare-fun b!78654 () Bool)

(assert (=> b!78654 (= e!51385 (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18701 c!12099) b!78652))

(assert (= (and d!18701 (not c!12099)) b!78653))

(assert (= (and d!18701 (not res!41159)) b!78654))

(declare-fun m!79093 () Bool)

(assert (=> d!18701 m!79093))

(declare-fun m!79095 () Bool)

(assert (=> b!78652 m!79095))

(declare-fun m!79097 () Bool)

(assert (=> b!78652 m!79097))

(assert (=> b!78652 m!79097))

(declare-fun m!79099 () Bool)

(assert (=> b!78652 m!79099))

(assert (=> b!78654 m!79097))

(assert (=> b!78654 m!79097))

(assert (=> b!78654 m!79099))

(assert (=> b!77951 d!18701))

(declare-fun d!18703 () Bool)

(assert (=> d!18703 (= (map!1183 (_2!1093 lt!36122)) (getCurrentListMap!425 (_keys!3931 (_2!1093 lt!36122)) (_values!2254 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122)) (extraKeys!2122 (_2!1093 lt!36122)) (zeroValue!2169 (_2!1093 lt!36122)) (minValue!2169 (_2!1093 lt!36122)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1093 lt!36122))))))

(declare-fun bs!3337 () Bool)

(assert (= bs!3337 d!18703))

(declare-fun m!79101 () Bool)

(assert (=> bs!3337 m!79101))

(assert (=> bm!7143 d!18703))

(declare-fun d!18705 () Bool)

(assert (=> d!18705 (= (get!1184 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) from!355) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2593 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> b!78007 d!18705))

(declare-fun d!18707 () Bool)

(declare-fun res!41160 () Bool)

(declare-fun e!51386 () Bool)

(assert (=> d!18707 (=> res!41160 e!51386)))

(assert (=> d!18707 (= res!41160 (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!18707 (= (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!51386)))

(declare-fun b!78655 () Bool)

(declare-fun e!51387 () Bool)

(assert (=> b!78655 (= e!51386 e!51387)))

(declare-fun res!41161 () Bool)

(assert (=> b!78655 (=> (not res!41161) (not e!51387))))

(assert (=> b!78655 (= res!41161 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!78656 () Bool)

(assert (=> b!78656 (= e!51387 (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!18707 (not res!41160)) b!78655))

(assert (= (and b!78655 res!41161) b!78656))

(assert (=> d!18707 m!78443))

(assert (=> b!78656 m!77885))

(declare-fun m!79103 () Bool)

(assert (=> b!78656 m!79103))

(assert (=> b!77981 d!18707))

(declare-fun d!18709 () Bool)

(declare-fun e!51388 () Bool)

(assert (=> d!18709 e!51388))

(declare-fun res!41162 () Bool)

(assert (=> d!18709 (=> (not res!41162) (not e!51388))))

(declare-fun lt!36460 () ListLongMap!1427)

(assert (=> d!18709 (= res!41162 (contains!736 lt!36460 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun lt!36459 () List!1494)

(assert (=> d!18709 (= lt!36460 (ListLongMap!1428 lt!36459))))

(declare-fun lt!36461 () Unit!2237)

(declare-fun lt!36462 () Unit!2237)

(assert (=> d!18709 (= lt!36461 lt!36462)))

(assert (=> d!18709 (= (getValueByKey!138 lt!36459 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (Some!143 (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!18709 (= lt!36462 (lemmaContainsTupThenGetReturnValue!55 lt!36459 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!18709 (= lt!36459 (insertStrictlySorted!58 (toList!729 e!51125) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!18709 (= (+!100 e!51125 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36460)))

(declare-fun b!78657 () Bool)

(declare-fun res!41163 () Bool)

(assert (=> b!78657 (=> (not res!41163) (not e!51388))))

(assert (=> b!78657 (= res!41163 (= (getValueByKey!138 (toList!729 lt!36460) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (Some!143 (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!78658 () Bool)

(assert (=> b!78658 (= e!51388 (contains!737 (toList!729 lt!36460) (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (= (and d!18709 res!41162) b!78657))

(assert (= (and b!78657 res!41163) b!78658))

(declare-fun m!79105 () Bool)

(assert (=> d!18709 m!79105))

(declare-fun m!79107 () Bool)

(assert (=> d!18709 m!79107))

(declare-fun m!79109 () Bool)

(assert (=> d!18709 m!79109))

(declare-fun m!79111 () Bool)

(assert (=> d!18709 m!79111))

(declare-fun m!79113 () Bool)

(assert (=> b!78657 m!79113))

(declare-fun m!79115 () Bool)

(assert (=> b!78658 m!79115))

(assert (=> bm!7151 d!18709))

(declare-fun d!18711 () Bool)

(declare-fun e!51390 () Bool)

(assert (=> d!18711 e!51390))

(declare-fun res!41164 () Bool)

(assert (=> d!18711 (=> res!41164 e!51390)))

(declare-fun lt!36464 () Bool)

(assert (=> d!18711 (= res!41164 (not lt!36464))))

(declare-fun lt!36466 () Bool)

(assert (=> d!18711 (= lt!36464 lt!36466)))

(declare-fun lt!36465 () Unit!2237)

(declare-fun e!51389 () Unit!2237)

(assert (=> d!18711 (= lt!36465 e!51389)))

(declare-fun c!12100 () Bool)

(assert (=> d!18711 (= c!12100 lt!36466)))

(assert (=> d!18711 (= lt!36466 (containsKey!141 (toList!729 lt!35957) (_1!1092 lt!35789)))))

(assert (=> d!18711 (= (contains!736 lt!35957 (_1!1092 lt!35789)) lt!36464)))

(declare-fun b!78659 () Bool)

(declare-fun lt!36463 () Unit!2237)

(assert (=> b!78659 (= e!51389 lt!36463)))

(assert (=> b!78659 (= lt!36463 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35957) (_1!1092 lt!35789)))))

(assert (=> b!78659 (isDefined!90 (getValueByKey!138 (toList!729 lt!35957) (_1!1092 lt!35789)))))

(declare-fun b!78660 () Bool)

(declare-fun Unit!2267 () Unit!2237)

(assert (=> b!78660 (= e!51389 Unit!2267)))

(declare-fun b!78661 () Bool)

(assert (=> b!78661 (= e!51390 (isDefined!90 (getValueByKey!138 (toList!729 lt!35957) (_1!1092 lt!35789))))))

(assert (= (and d!18711 c!12100) b!78659))

(assert (= (and d!18711 (not c!12100)) b!78660))

(assert (= (and d!18711 (not res!41164)) b!78661))

(declare-fun m!79117 () Bool)

(assert (=> d!18711 m!79117))

(declare-fun m!79119 () Bool)

(assert (=> b!78659 m!79119))

(assert (=> b!78659 m!78151))

(assert (=> b!78659 m!78151))

(declare-fun m!79121 () Bool)

(assert (=> b!78659 m!79121))

(assert (=> b!78661 m!78151))

(assert (=> b!78661 m!78151))

(assert (=> b!78661 m!79121))

(assert (=> d!18467 d!18711))

(declare-fun b!78662 () Bool)

(declare-fun e!51391 () Option!144)

(assert (=> b!78662 (= e!51391 (Some!143 (_2!1092 (h!2078 lt!35956))))))

(declare-fun b!78663 () Bool)

(declare-fun e!51392 () Option!144)

(assert (=> b!78663 (= e!51391 e!51392)))

(declare-fun c!12102 () Bool)

(assert (=> b!78663 (= c!12102 (and ((_ is Cons!1490) lt!35956) (not (= (_1!1092 (h!2078 lt!35956)) (_1!1092 lt!35789)))))))

(declare-fun b!78665 () Bool)

(assert (=> b!78665 (= e!51392 None!142)))

(declare-fun b!78664 () Bool)

(assert (=> b!78664 (= e!51392 (getValueByKey!138 (t!5132 lt!35956) (_1!1092 lt!35789)))))

(declare-fun d!18713 () Bool)

(declare-fun c!12101 () Bool)

(assert (=> d!18713 (= c!12101 (and ((_ is Cons!1490) lt!35956) (= (_1!1092 (h!2078 lt!35956)) (_1!1092 lt!35789))))))

(assert (=> d!18713 (= (getValueByKey!138 lt!35956 (_1!1092 lt!35789)) e!51391)))

(assert (= (and d!18713 c!12101) b!78662))

(assert (= (and d!18713 (not c!12101)) b!78663))

(assert (= (and b!78663 c!12102) b!78664))

(assert (= (and b!78663 (not c!12102)) b!78665))

(declare-fun m!79123 () Bool)

(assert (=> b!78664 m!79123))

(assert (=> d!18467 d!18713))

(declare-fun d!18715 () Bool)

(assert (=> d!18715 (= (getValueByKey!138 lt!35956 (_1!1092 lt!35789)) (Some!143 (_2!1092 lt!35789)))))

(declare-fun lt!36467 () Unit!2237)

(assert (=> d!18715 (= lt!36467 (choose!468 lt!35956 (_1!1092 lt!35789) (_2!1092 lt!35789)))))

(declare-fun e!51393 () Bool)

(assert (=> d!18715 e!51393))

(declare-fun res!41165 () Bool)

(assert (=> d!18715 (=> (not res!41165) (not e!51393))))

(assert (=> d!18715 (= res!41165 (isStrictlySorted!282 lt!35956))))

(assert (=> d!18715 (= (lemmaContainsTupThenGetReturnValue!55 lt!35956 (_1!1092 lt!35789) (_2!1092 lt!35789)) lt!36467)))

(declare-fun b!78666 () Bool)

(declare-fun res!41166 () Bool)

(assert (=> b!78666 (=> (not res!41166) (not e!51393))))

(assert (=> b!78666 (= res!41166 (containsKey!141 lt!35956 (_1!1092 lt!35789)))))

(declare-fun b!78667 () Bool)

(assert (=> b!78667 (= e!51393 (contains!737 lt!35956 (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(assert (= (and d!18715 res!41165) b!78666))

(assert (= (and b!78666 res!41166) b!78667))

(assert (=> d!18715 m!78145))

(declare-fun m!79125 () Bool)

(assert (=> d!18715 m!79125))

(declare-fun m!79127 () Bool)

(assert (=> d!18715 m!79127))

(declare-fun m!79129 () Bool)

(assert (=> b!78666 m!79129))

(declare-fun m!79131 () Bool)

(assert (=> b!78667 m!79131))

(assert (=> d!18467 d!18715))

(declare-fun b!78668 () Bool)

(declare-fun e!51396 () List!1494)

(declare-fun e!51394 () List!1494)

(assert (=> b!78668 (= e!51396 e!51394)))

(declare-fun c!12104 () Bool)

(assert (=> b!78668 (= c!12104 (and ((_ is Cons!1490) (toList!729 lt!35791)) (= (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 lt!35789))))))

(declare-fun b!78669 () Bool)

(declare-fun c!12103 () Bool)

(assert (=> b!78669 (= c!12103 (and ((_ is Cons!1490) (toList!729 lt!35791)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 lt!35789))))))

(declare-fun e!51398 () List!1494)

(assert (=> b!78669 (= e!51394 e!51398)))

(declare-fun b!78670 () Bool)

(declare-fun call!7229 () List!1494)

(assert (=> b!78670 (= e!51398 call!7229)))

(declare-fun b!78671 () Bool)

(declare-fun call!7231 () List!1494)

(assert (=> b!78671 (= e!51394 call!7231)))

(declare-fun bm!7227 () Bool)

(assert (=> bm!7227 (= call!7229 call!7231)))

(declare-fun b!78672 () Bool)

(declare-fun e!51397 () List!1494)

(assert (=> b!78672 (= e!51397 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35791)) (_1!1092 lt!35789) (_2!1092 lt!35789)))))

(declare-fun b!78673 () Bool)

(declare-fun call!7230 () List!1494)

(assert (=> b!78673 (= e!51396 call!7230)))

(declare-fun b!78674 () Bool)

(assert (=> b!78674 (= e!51397 (ite c!12104 (t!5132 (toList!729 lt!35791)) (ite c!12103 (Cons!1490 (h!2078 (toList!729 lt!35791)) (t!5132 (toList!729 lt!35791))) Nil!1491)))))

(declare-fun d!18717 () Bool)

(declare-fun e!51395 () Bool)

(assert (=> d!18717 e!51395))

(declare-fun res!41168 () Bool)

(assert (=> d!18717 (=> (not res!41168) (not e!51395))))

(declare-fun lt!36468 () List!1494)

(assert (=> d!18717 (= res!41168 (isStrictlySorted!282 lt!36468))))

(assert (=> d!18717 (= lt!36468 e!51396)))

(declare-fun c!12106 () Bool)

(assert (=> d!18717 (= c!12106 (and ((_ is Cons!1490) (toList!729 lt!35791)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 lt!35789))))))

(assert (=> d!18717 (isStrictlySorted!282 (toList!729 lt!35791))))

(assert (=> d!18717 (= (insertStrictlySorted!58 (toList!729 lt!35791) (_1!1092 lt!35789) (_2!1092 lt!35789)) lt!36468)))

(declare-fun bm!7226 () Bool)

(assert (=> bm!7226 (= call!7231 call!7230)))

(declare-fun b!78675 () Bool)

(declare-fun res!41167 () Bool)

(assert (=> b!78675 (=> (not res!41167) (not e!51395))))

(assert (=> b!78675 (= res!41167 (containsKey!141 lt!36468 (_1!1092 lt!35789)))))

(declare-fun b!78676 () Bool)

(assert (=> b!78676 (= e!51398 call!7229)))

(declare-fun b!78677 () Bool)

(assert (=> b!78677 (= e!51395 (contains!737 lt!36468 (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun bm!7228 () Bool)

(assert (=> bm!7228 (= call!7230 ($colon$colon!68 e!51397 (ite c!12106 (h!2078 (toList!729 lt!35791)) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789)))))))

(declare-fun c!12105 () Bool)

(assert (=> bm!7228 (= c!12105 c!12106)))

(assert (= (and d!18717 c!12106) b!78673))

(assert (= (and d!18717 (not c!12106)) b!78668))

(assert (= (and b!78668 c!12104) b!78671))

(assert (= (and b!78668 (not c!12104)) b!78669))

(assert (= (and b!78669 c!12103) b!78676))

(assert (= (and b!78669 (not c!12103)) b!78670))

(assert (= (or b!78676 b!78670) bm!7227))

(assert (= (or b!78671 bm!7227) bm!7226))

(assert (= (or b!78673 bm!7226) bm!7228))

(assert (= (and bm!7228 c!12105) b!78672))

(assert (= (and bm!7228 (not c!12105)) b!78674))

(assert (= (and d!18717 res!41168) b!78675))

(assert (= (and b!78675 res!41167) b!78677))

(declare-fun m!79133 () Bool)

(assert (=> b!78677 m!79133))

(declare-fun m!79135 () Bool)

(assert (=> b!78672 m!79135))

(declare-fun m!79137 () Bool)

(assert (=> b!78675 m!79137))

(declare-fun m!79139 () Bool)

(assert (=> d!18717 m!79139))

(assert (=> d!18717 m!78961))

(declare-fun m!79141 () Bool)

(assert (=> bm!7228 m!79141))

(assert (=> d!18467 d!18717))

(declare-fun d!18719 () Bool)

(declare-fun res!41173 () Bool)

(declare-fun e!51403 () Bool)

(assert (=> d!18719 (=> res!41173 e!51403)))

(assert (=> d!18719 (= res!41173 (and ((_ is Cons!1490) (toList!729 lt!35796)) (= (_1!1092 (h!2078 (toList!729 lt!35796))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (=> d!18719 (= (containsKey!141 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) e!51403)))

(declare-fun b!78682 () Bool)

(declare-fun e!51404 () Bool)

(assert (=> b!78682 (= e!51403 e!51404)))

(declare-fun res!41174 () Bool)

(assert (=> b!78682 (=> (not res!41174) (not e!51404))))

(assert (=> b!78682 (= res!41174 (and (or (not ((_ is Cons!1490) (toList!729 lt!35796))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35796))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))) ((_ is Cons!1490) (toList!729 lt!35796)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35796))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(declare-fun b!78683 () Bool)

(assert (=> b!78683 (= e!51404 (containsKey!141 (t!5132 (toList!729 lt!35796)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!18719 (not res!41173)) b!78682))

(assert (= (and b!78682 res!41174) b!78683))

(assert (=> b!78683 m!77885))

(declare-fun m!79143 () Bool)

(assert (=> b!78683 m!79143))

(assert (=> d!18497 d!18719))

(declare-fun b!78696 () Bool)

(declare-fun e!51412 () SeekEntryResult!234)

(assert (=> b!78696 (= e!51412 Undefined!234)))

(declare-fun b!78697 () Bool)

(declare-fun e!51413 () SeekEntryResult!234)

(assert (=> b!78697 (= e!51412 e!51413)))

(declare-fun lt!36476 () (_ BitVec 64))

(declare-fun lt!36475 () SeekEntryResult!234)

(assert (=> b!78697 (= lt!36476 (select (arr!1886 (_keys!3931 newMap!16)) (index!3072 lt!36475)))))

(declare-fun c!12115 () Bool)

(assert (=> b!78697 (= c!12115 (= lt!36476 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!78698 () Bool)

(declare-fun e!51411 () SeekEntryResult!234)

(assert (=> b!78698 (= e!51411 (MissingZero!234 (index!3072 lt!36475)))))

(declare-fun b!78699 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3957 (_ BitVec 32)) SeekEntryResult!234)

(assert (=> b!78699 (= e!51411 (seekKeyOrZeroReturnVacant!0 (x!11541 lt!36475) (index!3072 lt!36475) (index!3072 lt!36475) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun b!78700 () Bool)

(assert (=> b!78700 (= e!51413 (Found!234 (index!3072 lt!36475)))))

(declare-fun lt!36477 () SeekEntryResult!234)

(declare-fun d!18721 () Bool)

(assert (=> d!18721 (and (or ((_ is Undefined!234) lt!36477) (not ((_ is Found!234) lt!36477)) (and (bvsge (index!3071 lt!36477) #b00000000000000000000000000000000) (bvslt (index!3071 lt!36477) (size!2127 (_keys!3931 newMap!16))))) (or ((_ is Undefined!234) lt!36477) ((_ is Found!234) lt!36477) (not ((_ is MissingZero!234) lt!36477)) (and (bvsge (index!3070 lt!36477) #b00000000000000000000000000000000) (bvslt (index!3070 lt!36477) (size!2127 (_keys!3931 newMap!16))))) (or ((_ is Undefined!234) lt!36477) ((_ is Found!234) lt!36477) ((_ is MissingZero!234) lt!36477) (not ((_ is MissingVacant!234) lt!36477)) (and (bvsge (index!3073 lt!36477) #b00000000000000000000000000000000) (bvslt (index!3073 lt!36477) (size!2127 (_keys!3931 newMap!16))))) (or ((_ is Undefined!234) lt!36477) (ite ((_ is Found!234) lt!36477) (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36477)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (ite ((_ is MissingZero!234) lt!36477) (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3070 lt!36477)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!234) lt!36477) (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3073 lt!36477)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18721 (= lt!36477 e!51412)))

(declare-fun c!12113 () Bool)

(assert (=> d!18721 (= c!12113 (and ((_ is Intermediate!234) lt!36475) (undefined!1046 lt!36475)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3957 (_ BitVec 32)) SeekEntryResult!234)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!18721 (= lt!36475 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (mask!6267 newMap!16)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(assert (=> d!18721 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18721 (= (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)) lt!36477)))

(declare-fun b!78701 () Bool)

(declare-fun c!12114 () Bool)

(assert (=> b!78701 (= c!12114 (= lt!36476 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78701 (= e!51413 e!51411)))

(assert (= (and d!18721 c!12113) b!78696))

(assert (= (and d!18721 (not c!12113)) b!78697))

(assert (= (and b!78697 c!12115) b!78700))

(assert (= (and b!78697 (not c!12115)) b!78701))

(assert (= (and b!78701 c!12114) b!78698))

(assert (= (and b!78701 (not c!12114)) b!78699))

(declare-fun m!79145 () Bool)

(assert (=> b!78697 m!79145))

(assert (=> b!78699 m!77885))

(declare-fun m!79147 () Bool)

(assert (=> b!78699 m!79147))

(assert (=> d!18721 m!78355))

(declare-fun m!79149 () Bool)

(assert (=> d!18721 m!79149))

(assert (=> d!18721 m!77885))

(declare-fun m!79151 () Bool)

(assert (=> d!18721 m!79151))

(declare-fun m!79153 () Bool)

(assert (=> d!18721 m!79153))

(declare-fun m!79155 () Bool)

(assert (=> d!18721 m!79155))

(assert (=> d!18721 m!79151))

(assert (=> d!18721 m!77885))

(declare-fun m!79157 () Bool)

(assert (=> d!18721 m!79157))

(assert (=> b!78166 d!18721))

(assert (=> bm!7156 d!18493))

(declare-fun d!18723 () Bool)

(declare-fun lt!36478 () Bool)

(assert (=> d!18723 (= lt!36478 (select (content!84 (toList!729 lt!35948)) lt!35792))))

(declare-fun e!51415 () Bool)

(assert (=> d!18723 (= lt!36478 e!51415)))

(declare-fun res!41176 () Bool)

(assert (=> d!18723 (=> (not res!41176) (not e!51415))))

(assert (=> d!18723 (= res!41176 ((_ is Cons!1490) (toList!729 lt!35948)))))

(assert (=> d!18723 (= (contains!737 (toList!729 lt!35948) lt!35792) lt!36478)))

(declare-fun b!78702 () Bool)

(declare-fun e!51414 () Bool)

(assert (=> b!78702 (= e!51415 e!51414)))

(declare-fun res!41175 () Bool)

(assert (=> b!78702 (=> res!41175 e!51414)))

(assert (=> b!78702 (= res!41175 (= (h!2078 (toList!729 lt!35948)) lt!35792))))

(declare-fun b!78703 () Bool)

(assert (=> b!78703 (= e!51414 (contains!737 (t!5132 (toList!729 lt!35948)) lt!35792))))

(assert (= (and d!18723 res!41176) b!78702))

(assert (= (and b!78702 (not res!41175)) b!78703))

(declare-fun m!79159 () Bool)

(assert (=> d!18723 m!79159))

(declare-fun m!79161 () Bool)

(assert (=> d!18723 m!79161))

(declare-fun m!79163 () Bool)

(assert (=> b!78703 m!79163))

(assert (=> b!77963 d!18723))

(declare-fun bm!7229 () Bool)

(declare-fun call!7232 () Bool)

(declare-fun c!12116 () Bool)

(assert (=> bm!7229 (= call!7232 (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12116 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492))))))

(declare-fun e!51419 () Bool)

(declare-fun b!78705 () Bool)

(assert (=> b!78705 (= e!51419 (contains!738 (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78706 () Bool)

(declare-fun e!51417 () Bool)

(declare-fun e!51416 () Bool)

(assert (=> b!78706 (= e!51417 e!51416)))

(assert (=> b!78706 (= c!12116 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78707 () Bool)

(declare-fun e!51418 () Bool)

(assert (=> b!78707 (= e!51418 e!51417)))

(declare-fun res!41177 () Bool)

(assert (=> b!78707 (=> (not res!41177) (not e!51417))))

(assert (=> b!78707 (= res!41177 (not e!51419))))

(declare-fun res!41179 () Bool)

(assert (=> b!78707 (=> (not res!41179) (not e!51419))))

(assert (=> b!78707 (= res!41179 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78708 () Bool)

(assert (=> b!78708 (= e!51416 call!7232)))

(declare-fun d!18725 () Bool)

(declare-fun res!41178 () Bool)

(assert (=> d!18725 (=> res!41178 e!51418)))

(assert (=> d!18725 (= res!41178 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!18725 (= (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)) e!51418)))

(declare-fun b!78704 () Bool)

(assert (=> b!78704 (= e!51416 call!7232)))

(assert (= (and d!18725 (not res!41178)) b!78707))

(assert (= (and b!78707 res!41179) b!78705))

(assert (= (and b!78707 res!41177) b!78706))

(assert (= (and b!78706 c!12116) b!78708))

(assert (= (and b!78706 (not c!12116)) b!78704))

(assert (= (or b!78708 b!78704) bm!7229))

(declare-fun m!79165 () Bool)

(assert (=> bm!7229 m!79165))

(declare-fun m!79167 () Bool)

(assert (=> bm!7229 m!79167))

(assert (=> b!78705 m!79165))

(assert (=> b!78705 m!79165))

(declare-fun m!79169 () Bool)

(assert (=> b!78705 m!79169))

(assert (=> b!78706 m!79165))

(assert (=> b!78706 m!79165))

(declare-fun m!79171 () Bool)

(assert (=> b!78706 m!79171))

(assert (=> b!78707 m!79165))

(assert (=> b!78707 m!79165))

(assert (=> b!78707 m!79171))

(assert (=> bm!7068 d!18725))

(declare-fun d!18727 () Bool)

(assert (=> d!18727 (isDefined!90 (getValueByKey!138 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun lt!36481 () Unit!2237)

(declare-fun choose!469 (List!1494 (_ BitVec 64)) Unit!2237)

(assert (=> d!18727 (= lt!36481 (choose!469 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun e!51422 () Bool)

(assert (=> d!18727 e!51422))

(declare-fun res!41182 () Bool)

(assert (=> d!18727 (=> (not res!41182) (not e!51422))))

(assert (=> d!18727 (= res!41182 (isStrictlySorted!282 (toList!729 lt!35796)))))

(assert (=> d!18727 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) lt!36481)))

(declare-fun b!78711 () Bool)

(assert (=> b!78711 (= e!51422 (containsKey!141 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!18727 res!41182) b!78711))

(assert (=> d!18727 m!77885))

(assert (=> d!18727 m!78275))

(assert (=> d!18727 m!78275))

(assert (=> d!18727 m!78277))

(assert (=> d!18727 m!77885))

(declare-fun m!79173 () Bool)

(assert (=> d!18727 m!79173))

(declare-fun m!79175 () Bool)

(assert (=> d!18727 m!79175))

(assert (=> b!78711 m!77885))

(assert (=> b!78711 m!78271))

(assert (=> b!78078 d!18727))

(declare-fun d!18729 () Bool)

(declare-fun isEmpty!334 (Option!144) Bool)

(assert (=> d!18729 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))))

(declare-fun bs!3338 () Bool)

(assert (= bs!3338 d!18729))

(assert (=> bs!3338 m!78275))

(declare-fun m!79177 () Bool)

(assert (=> bs!3338 m!79177))

(assert (=> b!78078 d!18729))

(declare-fun b!78712 () Bool)

(declare-fun e!51423 () Option!144)

(assert (=> b!78712 (= e!51423 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35796)))))))

(declare-fun b!78713 () Bool)

(declare-fun e!51424 () Option!144)

(assert (=> b!78713 (= e!51423 e!51424)))

(declare-fun c!12118 () Bool)

(assert (=> b!78713 (= c!12118 (and ((_ is Cons!1490) (toList!729 lt!35796)) (not (= (_1!1092 (h!2078 (toList!729 lt!35796))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))))

(declare-fun b!78715 () Bool)

(assert (=> b!78715 (= e!51424 None!142)))

(declare-fun b!78714 () Bool)

(assert (=> b!78714 (= e!51424 (getValueByKey!138 (t!5132 (toList!729 lt!35796)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun d!18731 () Bool)

(declare-fun c!12117 () Bool)

(assert (=> d!18731 (= c!12117 (and ((_ is Cons!1490) (toList!729 lt!35796)) (= (_1!1092 (h!2078 (toList!729 lt!35796))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (=> d!18731 (= (getValueByKey!138 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) e!51423)))

(assert (= (and d!18731 c!12117) b!78712))

(assert (= (and d!18731 (not c!12117)) b!78713))

(assert (= (and b!78713 c!12118) b!78714))

(assert (= (and b!78713 (not c!12118)) b!78715))

(assert (=> b!78714 m!77885))

(declare-fun m!79179 () Bool)

(assert (=> b!78714 m!79179))

(assert (=> b!78078 d!18731))

(assert (=> bm!7085 d!18459))

(declare-fun d!18733 () Bool)

(declare-fun lt!36484 () Bool)

(declare-fun content!85 (List!1495) (InoxSet (_ BitVec 64)))

(assert (=> d!18733 (= lt!36484 (select (content!85 Nil!1492) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun e!51430 () Bool)

(assert (=> d!18733 (= lt!36484 e!51430)))

(declare-fun res!41188 () Bool)

(assert (=> d!18733 (=> (not res!41188) (not e!51430))))

(assert (=> d!18733 (= res!41188 ((_ is Cons!1491) Nil!1492))))

(assert (=> d!18733 (= (contains!738 Nil!1492 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) lt!36484)))

(declare-fun b!78720 () Bool)

(declare-fun e!51429 () Bool)

(assert (=> b!78720 (= e!51430 e!51429)))

(declare-fun res!41187 () Bool)

(assert (=> b!78720 (=> res!41187 e!51429)))

(assert (=> b!78720 (= res!41187 (= (h!2079 Nil!1492) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!78721 () Bool)

(assert (=> b!78721 (= e!51429 (contains!738 (t!5133 Nil!1492) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!18733 res!41188) b!78720))

(assert (= (and b!78720 (not res!41187)) b!78721))

(declare-fun m!79181 () Bool)

(assert (=> d!18733 m!79181))

(assert (=> d!18733 m!77885))

(declare-fun m!79183 () Bool)

(assert (=> d!18733 m!79183))

(assert (=> b!78721 m!77885))

(declare-fun m!79185 () Bool)

(assert (=> b!78721 m!79185))

(assert (=> b!77999 d!18733))

(assert (=> b!77948 d!18597))

(declare-fun d!18735 () Bool)

(declare-fun e!51431 () Bool)

(assert (=> d!18735 e!51431))

(declare-fun res!41189 () Bool)

(assert (=> d!18735 (=> (not res!41189) (not e!51431))))

(declare-fun lt!36486 () ListLongMap!1427)

(assert (=> d!18735 (= res!41189 (contains!736 lt!36486 (_1!1092 (tuple2!2163 lt!35935 lt!35938))))))

(declare-fun lt!36485 () List!1494)

(assert (=> d!18735 (= lt!36486 (ListLongMap!1428 lt!36485))))

(declare-fun lt!36487 () Unit!2237)

(declare-fun lt!36488 () Unit!2237)

(assert (=> d!18735 (= lt!36487 lt!36488)))

(assert (=> d!18735 (= (getValueByKey!138 lt!36485 (_1!1092 (tuple2!2163 lt!35935 lt!35938))) (Some!143 (_2!1092 (tuple2!2163 lt!35935 lt!35938))))))

(assert (=> d!18735 (= lt!36488 (lemmaContainsTupThenGetReturnValue!55 lt!36485 (_1!1092 (tuple2!2163 lt!35935 lt!35938)) (_2!1092 (tuple2!2163 lt!35935 lt!35938))))))

(assert (=> d!18735 (= lt!36485 (insertStrictlySorted!58 (toList!729 lt!35937) (_1!1092 (tuple2!2163 lt!35935 lt!35938)) (_2!1092 (tuple2!2163 lt!35935 lt!35938))))))

(assert (=> d!18735 (= (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)) lt!36486)))

(declare-fun b!78722 () Bool)

(declare-fun res!41190 () Bool)

(assert (=> b!78722 (=> (not res!41190) (not e!51431))))

(assert (=> b!78722 (= res!41190 (= (getValueByKey!138 (toList!729 lt!36486) (_1!1092 (tuple2!2163 lt!35935 lt!35938))) (Some!143 (_2!1092 (tuple2!2163 lt!35935 lt!35938)))))))

(declare-fun b!78723 () Bool)

(assert (=> b!78723 (= e!51431 (contains!737 (toList!729 lt!36486) (tuple2!2163 lt!35935 lt!35938)))))

(assert (= (and d!18735 res!41189) b!78722))

(assert (= (and b!78722 res!41190) b!78723))

(declare-fun m!79187 () Bool)

(assert (=> d!18735 m!79187))

(declare-fun m!79189 () Bool)

(assert (=> d!18735 m!79189))

(declare-fun m!79191 () Bool)

(assert (=> d!18735 m!79191))

(declare-fun m!79193 () Bool)

(assert (=> d!18735 m!79193))

(declare-fun m!79195 () Bool)

(assert (=> b!78722 m!79195))

(declare-fun m!79197 () Bool)

(assert (=> b!78723 m!79197))

(assert (=> b!77948 d!18735))

(declare-fun d!18737 () Bool)

(assert (=> d!18737 (not (contains!736 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)) lt!35933))))

(declare-fun lt!36491 () Unit!2237)

(declare-fun choose!470 (ListLongMap!1427 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2237)

(assert (=> d!18737 (= lt!36491 (choose!470 lt!35937 lt!35935 lt!35938 lt!35933))))

(declare-fun e!51434 () Bool)

(assert (=> d!18737 e!51434))

(declare-fun res!41193 () Bool)

(assert (=> d!18737 (=> (not res!41193) (not e!51434))))

(assert (=> d!18737 (= res!41193 (not (contains!736 lt!35937 lt!35933)))))

(assert (=> d!18737 (= (addStillNotContains!30 lt!35937 lt!35935 lt!35938 lt!35933) lt!36491)))

(declare-fun b!78727 () Bool)

(assert (=> b!78727 (= e!51434 (not (= lt!35935 lt!35933)))))

(assert (= (and d!18737 res!41193) b!78727))

(assert (=> d!18737 m!78097))

(assert (=> d!18737 m!78097))

(assert (=> d!18737 m!78099))

(declare-fun m!79199 () Bool)

(assert (=> d!18737 m!79199))

(declare-fun m!79201 () Bool)

(assert (=> d!18737 m!79201))

(assert (=> b!77948 d!18737))

(declare-fun d!18739 () Bool)

(declare-fun e!51436 () Bool)

(assert (=> d!18739 e!51436))

(declare-fun res!41194 () Bool)

(assert (=> d!18739 (=> res!41194 e!51436)))

(declare-fun lt!36493 () Bool)

(assert (=> d!18739 (= res!41194 (not lt!36493))))

(declare-fun lt!36495 () Bool)

(assert (=> d!18739 (= lt!36493 lt!36495)))

(declare-fun lt!36494 () Unit!2237)

(declare-fun e!51435 () Unit!2237)

(assert (=> d!18739 (= lt!36494 e!51435)))

(declare-fun c!12119 () Bool)

(assert (=> d!18739 (= c!12119 lt!36495)))

(assert (=> d!18739 (= lt!36495 (containsKey!141 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933))))

(assert (=> d!18739 (= (contains!736 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)) lt!35933) lt!36493)))

(declare-fun b!78728 () Bool)

(declare-fun lt!36492 () Unit!2237)

(assert (=> b!78728 (= e!51435 lt!36492)))

(assert (=> b!78728 (= lt!36492 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933))))

(assert (=> b!78728 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933))))

(declare-fun b!78729 () Bool)

(declare-fun Unit!2268 () Unit!2237)

(assert (=> b!78729 (= e!51435 Unit!2268)))

(declare-fun b!78730 () Bool)

(assert (=> b!78730 (= e!51436 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933)))))

(assert (= (and d!18739 c!12119) b!78728))

(assert (= (and d!18739 (not c!12119)) b!78729))

(assert (= (and d!18739 (not res!41194)) b!78730))

(declare-fun m!79203 () Bool)

(assert (=> d!18739 m!79203))

(declare-fun m!79205 () Bool)

(assert (=> b!78728 m!79205))

(declare-fun m!79207 () Bool)

(assert (=> b!78728 m!79207))

(assert (=> b!78728 m!79207))

(declare-fun m!79209 () Bool)

(assert (=> b!78728 m!79209))

(assert (=> b!78730 m!79207))

(assert (=> b!78730 m!79207))

(assert (=> b!78730 m!79209))

(assert (=> b!77948 d!18739))

(declare-fun d!18741 () Bool)

(declare-fun e!51437 () Bool)

(assert (=> d!18741 e!51437))

(declare-fun res!41195 () Bool)

(assert (=> d!18741 (=> (not res!41195) (not e!51437))))

(declare-fun lt!36497 () ListLongMap!1427)

(assert (=> d!18741 (= res!41195 (contains!736 lt!36497 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!36496 () List!1494)

(assert (=> d!18741 (= lt!36497 (ListLongMap!1428 lt!36496))))

(declare-fun lt!36498 () Unit!2237)

(declare-fun lt!36499 () Unit!2237)

(assert (=> d!18741 (= lt!36498 lt!36499)))

(assert (=> d!18741 (= (getValueByKey!138 lt!36496 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18741 (= lt!36499 (lemmaContainsTupThenGetReturnValue!55 lt!36496 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18741 (= lt!36496 (insertStrictlySorted!58 (toList!729 call!7068) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18741 (= (+!100 call!7068 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!36497)))

(declare-fun b!78731 () Bool)

(declare-fun res!41196 () Bool)

(assert (=> b!78731 (=> (not res!41196) (not e!51437))))

(assert (=> b!78731 (= res!41196 (= (getValueByKey!138 (toList!729 lt!36497) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!78732 () Bool)

(assert (=> b!78732 (= e!51437 (contains!737 (toList!729 lt!36497) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!18741 res!41195) b!78731))

(assert (= (and b!78731 res!41196) b!78732))

(declare-fun m!79211 () Bool)

(assert (=> d!18741 m!79211))

(declare-fun m!79213 () Bool)

(assert (=> d!18741 m!79213))

(declare-fun m!79215 () Bool)

(assert (=> d!18741 m!79215))

(declare-fun m!79217 () Bool)

(assert (=> d!18741 m!79217))

(declare-fun m!79219 () Bool)

(assert (=> b!78731 m!79219))

(declare-fun m!79221 () Bool)

(assert (=> b!78732 m!79221))

(assert (=> b!77948 d!18741))

(assert (=> bm!7159 d!18721))

(assert (=> b!78080 d!18729))

(assert (=> b!78080 d!18731))

(declare-fun d!18743 () Bool)

(declare-fun e!51439 () Bool)

(assert (=> d!18743 e!51439))

(declare-fun res!41197 () Bool)

(assert (=> d!18743 (=> res!41197 e!51439)))

(declare-fun lt!36501 () Bool)

(assert (=> d!18743 (= res!41197 (not lt!36501))))

(declare-fun lt!36503 () Bool)

(assert (=> d!18743 (= lt!36501 lt!36503)))

(declare-fun lt!36502 () Unit!2237)

(declare-fun e!51438 () Unit!2237)

(assert (=> d!18743 (= lt!36502 e!51438)))

(declare-fun c!12120 () Bool)

(assert (=> d!18743 (= c!12120 lt!36503)))

(assert (=> d!18743 (= lt!36503 (containsKey!141 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(assert (=> d!18743 (= (contains!736 call!7155 (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))) lt!36501)))

(declare-fun b!78733 () Bool)

(declare-fun lt!36500 () Unit!2237)

(assert (=> b!78733 (= e!51438 lt!36500)))

(assert (=> b!78733 (= lt!36500 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(assert (=> b!78733 (isDefined!90 (getValueByKey!138 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(declare-fun b!78734 () Bool)

(declare-fun Unit!2269 () Unit!2237)

(assert (=> b!78734 (= e!51438 Unit!2269)))

(declare-fun b!78735 () Bool)

(assert (=> b!78735 (= e!51439 (isDefined!90 (getValueByKey!138 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137)))))))

(assert (= (and d!18743 c!12120) b!78733))

(assert (= (and d!18743 (not c!12120)) b!78734))

(assert (= (and d!18743 (not res!41197)) b!78735))

(assert (=> d!18743 m!78299))

(declare-fun m!79223 () Bool)

(assert (=> d!18743 m!79223))

(assert (=> b!78733 m!78299))

(declare-fun m!79225 () Bool)

(assert (=> b!78733 m!79225))

(assert (=> b!78733 m!78299))

(declare-fun m!79227 () Bool)

(assert (=> b!78733 m!79227))

(assert (=> b!78733 m!79227))

(declare-fun m!79229 () Bool)

(assert (=> b!78733 m!79229))

(assert (=> b!78735 m!78299))

(assert (=> b!78735 m!79227))

(assert (=> b!78735 m!79227))

(assert (=> b!78735 m!79229))

(assert (=> b!78194 d!18743))

(declare-fun d!18745 () Bool)

(declare-fun e!51442 () Bool)

(assert (=> d!18745 e!51442))

(declare-fun res!41200 () Bool)

(assert (=> d!18745 (=> (not res!41200) (not e!51442))))

(assert (=> d!18745 (= res!41200 (and (bvsge (index!3071 lt!36137) #b00000000000000000000000000000000) (bvslt (index!3071 lt!36137) (size!2127 (_keys!3931 newMap!16)))))))

(declare-fun lt!36506 () Unit!2237)

(declare-fun choose!471 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) Int) Unit!2237)

(assert (=> d!18745 (= lt!36506 (choose!471 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3071 lt!36137) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18745 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18745 (= (lemmaValidKeyInArrayIsInListMap!88 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3071 lt!36137) (defaultEntry!2271 newMap!16)) lt!36506)))

(declare-fun b!78738 () Bool)

(assert (=> b!78738 (= e!51442 (contains!736 (getCurrentListMap!425 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(assert (= (and d!18745 res!41200) b!78738))

(declare-fun m!79231 () Bool)

(assert (=> d!18745 m!79231))

(assert (=> d!18745 m!78355))

(declare-fun m!79233 () Bool)

(assert (=> b!78738 m!79233))

(assert (=> b!78738 m!78299))

(assert (=> b!78738 m!79233))

(assert (=> b!78738 m!78299))

(declare-fun m!79235 () Bool)

(assert (=> b!78738 m!79235))

(assert (=> b!78194 d!18745))

(declare-fun d!18747 () Bool)

(declare-fun e!51445 () Bool)

(assert (=> d!18747 e!51445))

(declare-fun res!41203 () Bool)

(assert (=> d!18747 (=> (not res!41203) (not e!51445))))

(assert (=> d!18747 (= res!41203 (and (bvsge (index!3071 lt!36137) #b00000000000000000000000000000000) (bvslt (index!3071 lt!36137) (size!2128 (_values!2254 newMap!16)))))))

(declare-fun lt!36509 () Unit!2237)

(declare-fun choose!472 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) (_ BitVec 64) V!2993 Int) Unit!2237)

(assert (=> d!18747 (= lt!36509 (choose!472 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3071 lt!36137) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 (defaultEntry!2271 newMap!16)))))

(assert (=> d!18747 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18747 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3071 lt!36137) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 (defaultEntry!2271 newMap!16)) lt!36509)))

(declare-fun b!78741 () Bool)

(assert (=> b!78741 (= e!51445 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (getCurrentListMap!425 (_keys!3931 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))))))

(assert (= (and d!18747 res!41203) b!78741))

(assert (=> d!18747 m!77885))

(declare-fun m!79237 () Bool)

(assert (=> d!18747 m!79237))

(assert (=> d!18747 m!78355))

(assert (=> b!78741 m!78223))

(assert (=> b!78741 m!78223))

(assert (=> b!78741 m!78989))

(assert (=> b!78741 m!78297))

(declare-fun m!79239 () Bool)

(assert (=> b!78741 m!79239))

(assert (=> b!78194 d!18747))

(assert (=> b!77986 d!18483))

(declare-fun d!18749 () Bool)

(declare-fun e!51447 () Bool)

(assert (=> d!18749 e!51447))

(declare-fun res!41204 () Bool)

(assert (=> d!18749 (=> res!41204 e!51447)))

(declare-fun lt!36511 () Bool)

(assert (=> d!18749 (= res!41204 (not lt!36511))))

(declare-fun lt!36513 () Bool)

(assert (=> d!18749 (= lt!36511 lt!36513)))

(declare-fun lt!36512 () Unit!2237)

(declare-fun e!51446 () Unit!2237)

(assert (=> d!18749 (= lt!36512 e!51446)))

(declare-fun c!12121 () Bool)

(assert (=> d!18749 (= c!12121 lt!36513)))

(assert (=> d!18749 (= lt!36513 (containsKey!141 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!18749 (= (contains!736 lt!36049 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36511)))

(declare-fun b!78742 () Bool)

(declare-fun lt!36510 () Unit!2237)

(assert (=> b!78742 (= e!51446 lt!36510)))

(assert (=> b!78742 (= lt!36510 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78742 (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78743 () Bool)

(declare-fun Unit!2270 () Unit!2237)

(assert (=> b!78743 (= e!51446 Unit!2270)))

(declare-fun b!78744 () Bool)

(assert (=> b!78744 (= e!51447 (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!18749 c!12121) b!78742))

(assert (= (and d!18749 (not c!12121)) b!78743))

(assert (= (and d!18749 (not res!41204)) b!78744))

(assert (=> d!18749 m!78085))

(declare-fun m!79241 () Bool)

(assert (=> d!18749 m!79241))

(assert (=> b!78742 m!78085))

(declare-fun m!79243 () Bool)

(assert (=> b!78742 m!79243))

(assert (=> b!78742 m!78085))

(assert (=> b!78742 m!78705))

(assert (=> b!78742 m!78705))

(declare-fun m!79245 () Bool)

(assert (=> b!78742 m!79245))

(assert (=> b!78744 m!78085))

(assert (=> b!78744 m!78705))

(assert (=> b!78744 m!78705))

(assert (=> b!78744 m!79245))

(assert (=> b!78069 d!18749))

(assert (=> b!78054 d!18551))

(declare-fun b!78745 () Bool)

(declare-fun e!51448 () Option!144)

(assert (=> b!78745 (= e!51448 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35957)))))))

(declare-fun b!78746 () Bool)

(declare-fun e!51449 () Option!144)

(assert (=> b!78746 (= e!51448 e!51449)))

(declare-fun c!12123 () Bool)

(assert (=> b!78746 (= c!12123 (and ((_ is Cons!1490) (toList!729 lt!35957)) (not (= (_1!1092 (h!2078 (toList!729 lt!35957))) (_1!1092 lt!35789)))))))

(declare-fun b!78748 () Bool)

(assert (=> b!78748 (= e!51449 None!142)))

(declare-fun b!78747 () Bool)

(assert (=> b!78747 (= e!51449 (getValueByKey!138 (t!5132 (toList!729 lt!35957)) (_1!1092 lt!35789)))))

(declare-fun d!18751 () Bool)

(declare-fun c!12122 () Bool)

(assert (=> d!18751 (= c!12122 (and ((_ is Cons!1490) (toList!729 lt!35957)) (= (_1!1092 (h!2078 (toList!729 lt!35957))) (_1!1092 lt!35789))))))

(assert (=> d!18751 (= (getValueByKey!138 (toList!729 lt!35957) (_1!1092 lt!35789)) e!51448)))

(assert (= (and d!18751 c!12122) b!78745))

(assert (= (and d!18751 (not c!12122)) b!78746))

(assert (= (and b!78746 c!12123) b!78747))

(assert (= (and b!78746 (not c!12123)) b!78748))

(declare-fun m!79247 () Bool)

(assert (=> b!78747 m!79247))

(assert (=> b!77966 d!18751))

(declare-fun b!78749 () Bool)

(declare-fun e!51450 () Option!144)

(assert (=> b!78749 (= e!51450 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35961)))))))

(declare-fun b!78750 () Bool)

(declare-fun e!51451 () Option!144)

(assert (=> b!78750 (= e!51450 e!51451)))

(declare-fun c!12125 () Bool)

(assert (=> b!78750 (= c!12125 (and ((_ is Cons!1490) (toList!729 lt!35961)) (not (= (_1!1092 (h!2078 (toList!729 lt!35961))) (_1!1092 lt!35806)))))))

(declare-fun b!78752 () Bool)

(assert (=> b!78752 (= e!51451 None!142)))

(declare-fun b!78751 () Bool)

(assert (=> b!78751 (= e!51451 (getValueByKey!138 (t!5132 (toList!729 lt!35961)) (_1!1092 lt!35806)))))

(declare-fun d!18753 () Bool)

(declare-fun c!12124 () Bool)

(assert (=> d!18753 (= c!12124 (and ((_ is Cons!1490) (toList!729 lt!35961)) (= (_1!1092 (h!2078 (toList!729 lt!35961))) (_1!1092 lt!35806))))))

(assert (=> d!18753 (= (getValueByKey!138 (toList!729 lt!35961) (_1!1092 lt!35806)) e!51450)))

(assert (= (and d!18753 c!12124) b!78749))

(assert (= (and d!18753 (not c!12124)) b!78750))

(assert (= (and b!78750 c!12125) b!78751))

(assert (= (and b!78750 (not c!12125)) b!78752))

(declare-fun m!79249 () Bool)

(assert (=> b!78751 m!79249))

(assert (=> b!77968 d!18753))

(declare-fun b!78753 () Bool)

(declare-fun e!51458 () ListLongMap!1427)

(declare-fun call!7235 () ListLongMap!1427)

(assert (=> b!78753 (= e!51458 call!7235)))

(declare-fun b!78754 () Bool)

(declare-fun e!51459 () ListLongMap!1427)

(declare-fun call!7238 () ListLongMap!1427)

(assert (=> b!78754 (= e!51459 (+!100 call!7238 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun b!78756 () Bool)

(declare-fun e!51461 () Bool)

(assert (=> b!78756 (= e!51461 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7230 () Bool)

(declare-fun call!7237 () Bool)

(declare-fun lt!36534 () ListLongMap!1427)

(assert (=> bm!7230 (= call!7237 (contains!736 lt!36534 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78757 () Bool)

(declare-fun e!51452 () Bool)

(declare-fun e!51463 () Bool)

(assert (=> b!78757 (= e!51452 e!51463)))

(declare-fun c!12126 () Bool)

(assert (=> b!78757 (= c!12126 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78758 () Bool)

(declare-fun e!51455 () Unit!2237)

(declare-fun Unit!2271 () Unit!2237)

(assert (=> b!78758 (= e!51455 Unit!2271)))

(declare-fun b!78759 () Bool)

(declare-fun res!41210 () Bool)

(assert (=> b!78759 (=> (not res!41210) (not e!51452))))

(declare-fun e!51464 () Bool)

(assert (=> b!78759 (= res!41210 e!51464)))

(declare-fun c!12128 () Bool)

(assert (=> b!78759 (= c!12128 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78760 () Bool)

(declare-fun lt!36522 () Unit!2237)

(assert (=> b!78760 (= e!51455 lt!36522)))

(declare-fun lt!36528 () ListLongMap!1427)

(assert (=> b!78760 (= lt!36528 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite c!11968 (_values!2254 newMap!16) lt!36131) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36525 () (_ BitVec 64))

(assert (=> b!78760 (= lt!36525 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36526 () (_ BitVec 64))

(assert (=> b!78760 (= lt!36526 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36535 () Unit!2237)

(assert (=> b!78760 (= lt!36535 (addStillContains!55 lt!36528 lt!36525 (zeroValue!2169 newMap!16) lt!36526))))

(assert (=> b!78760 (contains!736 (+!100 lt!36528 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16))) lt!36526)))

(declare-fun lt!36514 () Unit!2237)

(assert (=> b!78760 (= lt!36514 lt!36535)))

(declare-fun lt!36524 () ListLongMap!1427)

(assert (=> b!78760 (= lt!36524 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite c!11968 (_values!2254 newMap!16) lt!36131) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36531 () (_ BitVec 64))

(assert (=> b!78760 (= lt!36531 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36529 () (_ BitVec 64))

(assert (=> b!78760 (= lt!36529 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36532 () Unit!2237)

(assert (=> b!78760 (= lt!36532 (addApplyDifferent!55 lt!36524 lt!36531 (minValue!2169 newMap!16) lt!36529))))

(assert (=> b!78760 (= (apply!79 (+!100 lt!36524 (tuple2!2163 lt!36531 (minValue!2169 newMap!16))) lt!36529) (apply!79 lt!36524 lt!36529))))

(declare-fun lt!36517 () Unit!2237)

(assert (=> b!78760 (= lt!36517 lt!36532)))

(declare-fun lt!36527 () ListLongMap!1427)

(assert (=> b!78760 (= lt!36527 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite c!11968 (_values!2254 newMap!16) lt!36131) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36530 () (_ BitVec 64))

(assert (=> b!78760 (= lt!36530 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36520 () (_ BitVec 64))

(assert (=> b!78760 (= lt!36520 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36515 () Unit!2237)

(assert (=> b!78760 (= lt!36515 (addApplyDifferent!55 lt!36527 lt!36530 (zeroValue!2169 newMap!16) lt!36520))))

(assert (=> b!78760 (= (apply!79 (+!100 lt!36527 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16))) lt!36520) (apply!79 lt!36527 lt!36520))))

(declare-fun lt!36533 () Unit!2237)

(assert (=> b!78760 (= lt!36533 lt!36515)))

(declare-fun lt!36521 () ListLongMap!1427)

(assert (=> b!78760 (= lt!36521 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite c!11968 (_values!2254 newMap!16) lt!36131) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36519 () (_ BitVec 64))

(assert (=> b!78760 (= lt!36519 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36518 () (_ BitVec 64))

(assert (=> b!78760 (= lt!36518 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78760 (= lt!36522 (addApplyDifferent!55 lt!36521 lt!36519 (minValue!2169 newMap!16) lt!36518))))

(assert (=> b!78760 (= (apply!79 (+!100 lt!36521 (tuple2!2163 lt!36519 (minValue!2169 newMap!16))) lt!36518) (apply!79 lt!36521 lt!36518))))

(declare-fun b!78761 () Bool)

(declare-fun e!51453 () Bool)

(assert (=> b!78761 (= e!51463 e!51453)))

(declare-fun res!41207 () Bool)

(assert (=> b!78761 (= res!41207 call!7237)))

(assert (=> b!78761 (=> (not res!41207) (not e!51453))))

(declare-fun bm!7231 () Bool)

(declare-fun call!7239 () ListLongMap!1427)

(assert (=> bm!7231 (= call!7235 call!7239)))

(declare-fun bm!7232 () Bool)

(declare-fun call!7236 () ListLongMap!1427)

(assert (=> bm!7232 (= call!7236 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite c!11968 (_values!2254 newMap!16) lt!36131) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78762 () Bool)

(assert (=> b!78762 (= e!51463 (not call!7237))))

(declare-fun b!78763 () Bool)

(declare-fun call!7233 () Bool)

(assert (=> b!78763 (= e!51464 (not call!7233))))

(declare-fun bm!7233 () Bool)

(declare-fun c!12129 () Bool)

(declare-fun c!12131 () Bool)

(assert (=> bm!7233 (= call!7238 (+!100 (ite c!12131 call!7236 (ite c!12129 call!7239 call!7235)) (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!78764 () Bool)

(assert (=> b!78764 (= e!51453 (= (apply!79 lt!36534 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(declare-fun b!78765 () Bool)

(declare-fun res!41209 () Bool)

(assert (=> b!78765 (=> (not res!41209) (not e!51452))))

(declare-fun e!51460 () Bool)

(assert (=> b!78765 (= res!41209 e!51460)))

(declare-fun res!41211 () Bool)

(assert (=> b!78765 (=> res!41211 e!51460)))

(declare-fun e!51456 () Bool)

(assert (=> b!78765 (= res!41211 (not e!51456))))

(declare-fun res!41208 () Bool)

(assert (=> b!78765 (=> (not res!41208) (not e!51456))))

(assert (=> b!78765 (= res!41208 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78766 () Bool)

(assert (=> b!78766 (= e!51456 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!18755 () Bool)

(assert (=> d!18755 e!51452))

(declare-fun res!41213 () Bool)

(assert (=> d!18755 (=> (not res!41213) (not e!51452))))

(assert (=> d!18755 (= res!41213 (or (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))))

(declare-fun lt!36523 () ListLongMap!1427)

(assert (=> d!18755 (= lt!36534 lt!36523)))

(declare-fun lt!36516 () Unit!2237)

(assert (=> d!18755 (= lt!36516 e!51455)))

(declare-fun c!12130 () Bool)

(assert (=> d!18755 (= c!12130 e!51461)))

(declare-fun res!41212 () Bool)

(assert (=> d!18755 (=> (not res!41212) (not e!51461))))

(assert (=> d!18755 (= res!41212 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18755 (= lt!36523 e!51459)))

(assert (=> d!18755 (= c!12131 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18755 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18755 (= (getCurrentListMap!425 (_keys!3931 newMap!16) (ite c!11968 (_values!2254 newMap!16) lt!36131) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36534)))

(declare-fun b!78755 () Bool)

(declare-fun e!51457 () ListLongMap!1427)

(assert (=> b!78755 (= e!51459 e!51457)))

(assert (=> b!78755 (= c!12129 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78767 () Bool)

(declare-fun call!7234 () ListLongMap!1427)

(assert (=> b!78767 (= e!51458 call!7234)))

(declare-fun bm!7234 () Bool)

(assert (=> bm!7234 (= call!7233 (contains!736 lt!36534 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7235 () Bool)

(assert (=> bm!7235 (= call!7234 call!7238)))

(declare-fun b!78768 () Bool)

(declare-fun c!12127 () Bool)

(assert (=> b!78768 (= c!12127 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78768 (= e!51457 e!51458)))

(declare-fun b!78769 () Bool)

(declare-fun e!51454 () Bool)

(assert (=> b!78769 (= e!51454 (= (apply!79 lt!36534 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!78770 () Bool)

(assert (=> b!78770 (= e!51464 e!51454)))

(declare-fun res!41206 () Bool)

(assert (=> b!78770 (= res!41206 call!7233)))

(assert (=> b!78770 (=> (not res!41206) (not e!51454))))

(declare-fun b!78771 () Bool)

(declare-fun e!51462 () Bool)

(assert (=> b!78771 (= e!51460 e!51462)))

(declare-fun res!41205 () Bool)

(assert (=> b!78771 (=> (not res!41205) (not e!51462))))

(assert (=> b!78771 (= res!41205 (contains!736 lt!36534 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78771 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78772 () Bool)

(assert (=> b!78772 (= e!51462 (= (apply!79 lt!36534 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (ite c!11968 (_values!2254 newMap!16) lt!36131)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78772 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (ite c!11968 (_values!2254 newMap!16) lt!36131))))))

(assert (=> b!78772 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78773 () Bool)

(assert (=> b!78773 (= e!51457 call!7234)))

(declare-fun bm!7236 () Bool)

(assert (=> bm!7236 (= call!7239 call!7236)))

(assert (= (and d!18755 c!12131) b!78754))

(assert (= (and d!18755 (not c!12131)) b!78755))

(assert (= (and b!78755 c!12129) b!78773))

(assert (= (and b!78755 (not c!12129)) b!78768))

(assert (= (and b!78768 c!12127) b!78767))

(assert (= (and b!78768 (not c!12127)) b!78753))

(assert (= (or b!78767 b!78753) bm!7231))

(assert (= (or b!78773 bm!7231) bm!7236))

(assert (= (or b!78773 b!78767) bm!7235))

(assert (= (or b!78754 bm!7236) bm!7232))

(assert (= (or b!78754 bm!7235) bm!7233))

(assert (= (and d!18755 res!41212) b!78756))

(assert (= (and d!18755 c!12130) b!78760))

(assert (= (and d!18755 (not c!12130)) b!78758))

(assert (= (and d!18755 res!41213) b!78765))

(assert (= (and b!78765 res!41208) b!78766))

(assert (= (and b!78765 (not res!41211)) b!78771))

(assert (= (and b!78771 res!41205) b!78772))

(assert (= (and b!78765 res!41209) b!78759))

(assert (= (and b!78759 c!12128) b!78770))

(assert (= (and b!78759 (not c!12128)) b!78763))

(assert (= (and b!78770 res!41206) b!78769))

(assert (= (or b!78770 b!78763) bm!7234))

(assert (= (and b!78759 res!41210) b!78757))

(assert (= (and b!78757 c!12126) b!78761))

(assert (= (and b!78757 (not c!12126)) b!78762))

(assert (= (and b!78761 res!41207) b!78764))

(assert (= (or b!78761 b!78762) bm!7230))

(declare-fun b_lambda!3521 () Bool)

(assert (=> (not b_lambda!3521) (not b!78772)))

(assert (=> b!78772 t!5144))

(declare-fun b_and!4837 () Bool)

(assert (= b_and!4833 (and (=> t!5144 result!2821) b_and!4837)))

(assert (=> b!78772 t!5146))

(declare-fun b_and!4839 () Bool)

(assert (= b_and!4835 (and (=> t!5146 result!2823) b_and!4839)))

(declare-fun m!79251 () Bool)

(assert (=> b!78772 m!79251))

(assert (=> b!78772 m!78471))

(declare-fun m!79253 () Bool)

(assert (=> b!78772 m!79253))

(assert (=> b!78772 m!78435))

(assert (=> b!78772 m!79251))

(assert (=> b!78772 m!78435))

(declare-fun m!79255 () Bool)

(assert (=> b!78772 m!79255))

(assert (=> b!78772 m!78471))

(assert (=> d!18755 m!78355))

(declare-fun m!79257 () Bool)

(assert (=> bm!7233 m!79257))

(assert (=> b!78771 m!78435))

(assert (=> b!78771 m!78435))

(declare-fun m!79259 () Bool)

(assert (=> b!78771 m!79259))

(declare-fun m!79261 () Bool)

(assert (=> bm!7232 m!79261))

(assert (=> b!78766 m!78435))

(assert (=> b!78766 m!78435))

(assert (=> b!78766 m!78437))

(assert (=> b!78756 m!78435))

(assert (=> b!78756 m!78435))

(assert (=> b!78756 m!78437))

(declare-fun m!79263 () Bool)

(assert (=> b!78760 m!79263))

(declare-fun m!79265 () Bool)

(assert (=> b!78760 m!79265))

(declare-fun m!79267 () Bool)

(assert (=> b!78760 m!79267))

(declare-fun m!79269 () Bool)

(assert (=> b!78760 m!79269))

(declare-fun m!79271 () Bool)

(assert (=> b!78760 m!79271))

(declare-fun m!79273 () Bool)

(assert (=> b!78760 m!79273))

(declare-fun m!79275 () Bool)

(assert (=> b!78760 m!79275))

(declare-fun m!79277 () Bool)

(assert (=> b!78760 m!79277))

(declare-fun m!79279 () Bool)

(assert (=> b!78760 m!79279))

(declare-fun m!79281 () Bool)

(assert (=> b!78760 m!79281))

(assert (=> b!78760 m!79275))

(declare-fun m!79283 () Bool)

(assert (=> b!78760 m!79283))

(assert (=> b!78760 m!79279))

(declare-fun m!79285 () Bool)

(assert (=> b!78760 m!79285))

(assert (=> b!78760 m!79267))

(declare-fun m!79287 () Bool)

(assert (=> b!78760 m!79287))

(assert (=> b!78760 m!79263))

(assert (=> b!78760 m!79261))

(declare-fun m!79289 () Bool)

(assert (=> b!78760 m!79289))

(declare-fun m!79291 () Bool)

(assert (=> b!78760 m!79291))

(assert (=> b!78760 m!78435))

(declare-fun m!79293 () Bool)

(assert (=> b!78754 m!79293))

(declare-fun m!79295 () Bool)

(assert (=> bm!7230 m!79295))

(declare-fun m!79297 () Bool)

(assert (=> bm!7234 m!79297))

(declare-fun m!79299 () Bool)

(assert (=> b!78764 m!79299))

(declare-fun m!79301 () Bool)

(assert (=> b!78769 m!79301))

(assert (=> bm!7155 d!18755))

(declare-fun d!18757 () Bool)

(declare-fun e!51465 () Bool)

(assert (=> d!18757 e!51465))

(declare-fun res!41214 () Bool)

(assert (=> d!18757 (=> (not res!41214) (not e!51465))))

(declare-fun lt!36537 () ListLongMap!1427)

(assert (=> d!18757 (= res!41214 (contains!736 lt!36537 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36536 () List!1494)

(assert (=> d!18757 (= lt!36537 (ListLongMap!1428 lt!36536))))

(declare-fun lt!36538 () Unit!2237)

(declare-fun lt!36539 () Unit!2237)

(assert (=> d!18757 (= lt!36538 lt!36539)))

(assert (=> d!18757 (= (getValueByKey!138 lt!36536 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18757 (= lt!36539 (lemmaContainsTupThenGetReturnValue!55 lt!36536 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18757 (= lt!36536 (insertStrictlySorted!58 (toList!729 call!7153) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18757 (= (+!100 call!7153 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36537)))

(declare-fun b!78774 () Bool)

(declare-fun res!41215 () Bool)

(assert (=> b!78774 (=> (not res!41215) (not e!51465))))

(assert (=> b!78774 (= res!41215 (= (getValueByKey!138 (toList!729 lt!36537) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!78775 () Bool)

(assert (=> b!78775 (= e!51465 (contains!737 (toList!729 lt!36537) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!18757 res!41214) b!78774))

(assert (= (and b!78774 res!41215) b!78775))

(declare-fun m!79303 () Bool)

(assert (=> d!18757 m!79303))

(declare-fun m!79305 () Bool)

(assert (=> d!18757 m!79305))

(declare-fun m!79307 () Bool)

(assert (=> d!18757 m!79307))

(declare-fun m!79309 () Bool)

(assert (=> d!18757 m!79309))

(declare-fun m!79311 () Bool)

(assert (=> b!78774 m!79311))

(declare-fun m!79313 () Bool)

(assert (=> b!78775 m!79313))

(assert (=> b!78190 d!18757))

(declare-fun b!78776 () Bool)

(declare-fun e!51466 () Option!144)

(assert (=> b!78776 (= e!51466 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35965)))))))

(declare-fun b!78777 () Bool)

(declare-fun e!51467 () Option!144)

(assert (=> b!78777 (= e!51466 e!51467)))

(declare-fun c!12133 () Bool)

(assert (=> b!78777 (= c!12133 (and ((_ is Cons!1490) (toList!729 lt!35965)) (not (= (_1!1092 (h!2078 (toList!729 lt!35965))) (_1!1092 lt!35806)))))))

(declare-fun b!78779 () Bool)

(assert (=> b!78779 (= e!51467 None!142)))

(declare-fun b!78778 () Bool)

(assert (=> b!78778 (= e!51467 (getValueByKey!138 (t!5132 (toList!729 lt!35965)) (_1!1092 lt!35806)))))

(declare-fun d!18759 () Bool)

(declare-fun c!12132 () Bool)

(assert (=> d!18759 (= c!12132 (and ((_ is Cons!1490) (toList!729 lt!35965)) (= (_1!1092 (h!2078 (toList!729 lt!35965))) (_1!1092 lt!35806))))))

(assert (=> d!18759 (= (getValueByKey!138 (toList!729 lt!35965) (_1!1092 lt!35806)) e!51466)))

(assert (= (and d!18759 c!12132) b!78776))

(assert (= (and d!18759 (not c!12132)) b!78777))

(assert (= (and b!78777 c!12133) b!78778))

(assert (= (and b!78777 (not c!12133)) b!78779))

(declare-fun m!79315 () Bool)

(assert (=> b!78778 m!79315))

(assert (=> b!77970 d!18759))

(declare-fun mapNonEmpty!3315 () Bool)

(declare-fun mapRes!3315 () Bool)

(declare-fun tp!8787 () Bool)

(declare-fun e!51468 () Bool)

(assert (=> mapNonEmpty!3315 (= mapRes!3315 (and tp!8787 e!51468))))

(declare-fun mapRest!3315 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapValue!3315 () ValueCell!911)

(declare-fun mapKey!3315 () (_ BitVec 32))

(assert (=> mapNonEmpty!3315 (= mapRest!3314 (store mapRest!3315 mapKey!3315 mapValue!3315))))

(declare-fun b!78780 () Bool)

(assert (=> b!78780 (= e!51468 tp_is_empty!2509)))

(declare-fun condMapEmpty!3315 () Bool)

(declare-fun mapDefault!3315 () ValueCell!911)

(assert (=> mapNonEmpty!3314 (= condMapEmpty!3315 (= mapRest!3314 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3315)))))

(declare-fun e!51469 () Bool)

(assert (=> mapNonEmpty!3314 (= tp!8786 (and e!51469 mapRes!3315))))

(declare-fun b!78781 () Bool)

(assert (=> b!78781 (= e!51469 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3315 () Bool)

(assert (=> mapIsEmpty!3315 mapRes!3315))

(assert (= (and mapNonEmpty!3314 condMapEmpty!3315) mapIsEmpty!3315))

(assert (= (and mapNonEmpty!3314 (not condMapEmpty!3315)) mapNonEmpty!3315))

(assert (= (and mapNonEmpty!3315 ((_ is ValueCellFull!911) mapValue!3315)) b!78780))

(assert (= (and mapNonEmpty!3314 ((_ is ValueCellFull!911) mapDefault!3315)) b!78781))

(declare-fun m!79317 () Bool)

(assert (=> mapNonEmpty!3315 m!79317))

(declare-fun mapNonEmpty!3316 () Bool)

(declare-fun mapRes!3316 () Bool)

(declare-fun tp!8788 () Bool)

(declare-fun e!51470 () Bool)

(assert (=> mapNonEmpty!3316 (= mapRes!3316 (and tp!8788 e!51470))))

(declare-fun mapValue!3316 () ValueCell!911)

(declare-fun mapRest!3316 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapKey!3316 () (_ BitVec 32))

(assert (=> mapNonEmpty!3316 (= mapRest!3313 (store mapRest!3316 mapKey!3316 mapValue!3316))))

(declare-fun b!78782 () Bool)

(assert (=> b!78782 (= e!51470 tp_is_empty!2509)))

(declare-fun condMapEmpty!3316 () Bool)

(declare-fun mapDefault!3316 () ValueCell!911)

(assert (=> mapNonEmpty!3313 (= condMapEmpty!3316 (= mapRest!3313 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3316)))))

(declare-fun e!51471 () Bool)

(assert (=> mapNonEmpty!3313 (= tp!8785 (and e!51471 mapRes!3316))))

(declare-fun b!78783 () Bool)

(assert (=> b!78783 (= e!51471 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3316 () Bool)

(assert (=> mapIsEmpty!3316 mapRes!3316))

(assert (= (and mapNonEmpty!3313 condMapEmpty!3316) mapIsEmpty!3316))

(assert (= (and mapNonEmpty!3313 (not condMapEmpty!3316)) mapNonEmpty!3316))

(assert (= (and mapNonEmpty!3316 ((_ is ValueCellFull!911) mapValue!3316)) b!78782))

(assert (= (and mapNonEmpty!3313 ((_ is ValueCellFull!911) mapDefault!3316)) b!78783))

(declare-fun m!79319 () Bool)

(assert (=> mapNonEmpty!3316 m!79319))

(declare-fun b_lambda!3523 () Bool)

(assert (= b_lambda!3519 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3523)))

(declare-fun b_lambda!3525 () Bool)

(assert (= b_lambda!3517 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3525)))

(declare-fun b_lambda!3527 () Bool)

(assert (= b_lambda!3513 (or (and b!77786 b_free!2185) (and b!77791 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))) b_lambda!3527)))

(declare-fun b_lambda!3529 () Bool)

(assert (= b_lambda!3515 (or (and b!77786 b_free!2185) (and b!77791 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))) b_lambda!3529)))

(declare-fun b_lambda!3531 () Bool)

(assert (= b_lambda!3521 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3531)))

(check-sat (not b!78444) (not d!18589) (not b!78622) (not b_lambda!3529) (not d!18571) (not bm!7180) (not d!18611) (not d!18545) (not d!18593) (not d!18743) (not d!18543) (not d!18579) (not bm!7195) (not b!78658) (not b!78333) (not d!18531) (not b!78368) (not b!78457) (not b!78291) (not d!18709) (not d!18515) (not b!78735) (not b!78666) (not b!78580) (not b!78732) (not b!78409) (not b_next!2185) (not d!18717) (not b!78628) (not bm!7201) (not b!78266) (not b!78733) (not d!18625) (not b!78667) (not b!78714) (not b!78512) (not bm!7219) (not b!78504) (not b!78288) (not b!78486) (not bm!7169) (not d!18735) (not b!78525) (not b!78234) (not d!18601) (not bm!7177) (not d!18615) (not bm!7164) (not b!78582) (not b!78541) (not b!78241) (not b!78245) (not b!78511) (not b!78528) (not d!18715) (not b!78373) (not b!78294) (not b!78640) (not b!78756) (not b!78451) (not bm!7228) (not d!18547) (not b_lambda!3507) (not d!18749) (not d!18733) (not b!78656) (not bm!7234) (not d!18693) (not d!18549) (not mapNonEmpty!3316) (not d!18605) (not b!78677) (not b!78651) (not b!78509) (not d!18627) (not b!78471) (not d!18701) (not b!78751) (not d!18635) (not b!78321) (not b!78404) (not b!78247) (not bm!7233) (not b!78473) (not b!78672) (not b!78766) (not b!78228) (not b!78609) (not b!78243) (not b!78272) (not bm!7218) b_and!4839 (not d!18633) (not b!78340) (not b!78376) (not b!78278) (not d!18675) (not b!78523) (not bm!7168) (not b!78248) (not d!18523) (not bm!7179) (not b!78387) (not bm!7170) (not b!78631) (not b!78331) (not b!78330) (not d!18689) (not b!78506) (not b!78370) (not d!18607) (not b!78286) (not b!78657) (not bm!7184) (not b!78683) (not b!78675) (not b!78380) (not b!78302) (not bm!7222) (not b_lambda!3523) (not b!78454) (not b!78468) (not b!78460) (not d!18595) (not d!18573) (not d!18737) (not b!78372) (not b!78282) (not d!18583) (not b!78476) (not b!78606) (not b_lambda!3527) (not d!18623) (not d!18739) (not b_lambda!3511) (not bm!7232) (not b!78771) (not b!78530) (not b!78738) (not b!78728) (not b!78385) (not b!78366) (not b!78452) (not d!18639) (not d!18661) (not b!78605) (not b!78731) (not d!18561) (not b!78721) (not b!78652) (not bm!7183) (not d!18569) (not b!78231) (not d!18527) (not b!78338) (not b!78492) (not d!18621) (not b!78705) (not b!78329) (not d!18609) (not bm!7198) (not d!18613) (not b!78747) (not b!78335) (not b!78226) (not d!18513) (not b!78470) (not b!78584) (not b!78419) (not b!78233) (not b!78654) (not d!18567) (not b!78260) (not d!18757) (not bm!7230) (not d!18521) (not b!78375) (not b!78246) (not b!78497) (not bm!7182) (not b!78772) (not b!78336) (not b!78774) (not b!78646) (not b!78602) (not b!78744) (not b!78590) (not d!18681) (not d!18641) (not b!78502) (not d!18631) (not b!78377) (not b!78407) (not b!78229) (not b!78479) (not mapNonEmpty!3315) (not b!78334) (not d!18585) (not b!78661) (not b!78447) (not b!78405) (not d!18723) (not d!18663) (not b!78276) (not b!78603) (not d!18659) (not b!78319) (not b!78539) (not b!78627) (not bm!7166) (not b!78711) (not bm!7207) (not d!18703) (not b!78232) (not bm!7217) (not d!18671) b_and!4837 (not b!78393) (not b!78267) (not d!18669) tp_is_empty!2509 (not d!18645) (not b_lambda!3525) (not d!18541) (not b!78707) (not b_lambda!3509) (not d!18565) (not b!78764) (not d!18529) (not b!78536) (not b!78332) (not d!18729) (not b!78620) (not d!18559) (not b!78269) (not d!18747) (not d!18711) (not b_lambda!3499) (not b!78323) (not b!78383) (not d!18741) (not d!18517) (not d!18581) (not b!78723) (not d!18591) (not d!18649) (not b!78412) (not b!78775) (not b!78484) (not b!78271) (not b!78706) (not b!78474) (not b!78274) (not d!18577) (not b!78722) (not d!18617) (not b!78304) (not b!78459) (not b!78730) (not b!78475) (not d!18673) (not b!78402) (not b!78769) (not b_lambda!3531) (not d!18755) (not bm!7204) (not d!18537) (not b!78308) (not b!78638) (not b!78382) (not b!78760) (not d!18511) (not b!78472) (not b!78641) (not d!18599) (not b!78741) (not b!78635) (not d!18721) (not b!78520) (not b!78293) (not b!78522) (not b_next!2187) (not b!78301) (not d!18575) (not d!18667) (not d!18555) (not d!18643) (not b!78517) (not b!78399) (not b!78581) (not bm!7229) (not b!78487) (not b!78481) (not d!18651) (not b!78699) (not b!78591) (not b!78742) (not b!78625) (not b!78664) (not b!78478) (not d!18637) (not b!78306) (not bm!7225) (not b!78239) (not d!18677) (not b!78649) (not b!78703) (not b!78633) (not b!78465) (not d!18697) (not b!78263) (not d!18655) (not b!78371) (not b!78244) (not b!78242) (not bm!7165) (not b!78449) (not d!18525) (not d!18563) (not d!18727) (not b!78659) (not b!78495) (not d!18519) (not b!78754) (not b!78265) (not b!78531) (not d!18587) (not b!78477) (not b!78367) (not b!78397) (not d!18745) (not b!78418) (not d!18699) (not b!78261) (not b!78778) (not b!78389) (not bm!7178))
(check-sat b_and!4837 b_and!4839 (not b_next!2185) (not b_next!2187))
(get-model)

(assert (=> d!18737 d!18739))

(assert (=> d!18737 d!18735))

(declare-fun d!18761 () Bool)

(assert (=> d!18761 (not (contains!736 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)) lt!35933))))

(assert (=> d!18761 true))

(declare-fun _$36!304 () Unit!2237)

(assert (=> d!18761 (= (choose!470 lt!35937 lt!35935 lt!35938 lt!35933) _$36!304)))

(declare-fun bs!3339 () Bool)

(assert (= bs!3339 d!18761))

(assert (=> bs!3339 m!78097))

(assert (=> bs!3339 m!78097))

(assert (=> bs!3339 m!78099))

(assert (=> d!18737 d!18761))

(declare-fun d!18763 () Bool)

(declare-fun e!51473 () Bool)

(assert (=> d!18763 e!51473))

(declare-fun res!41216 () Bool)

(assert (=> d!18763 (=> res!41216 e!51473)))

(declare-fun lt!36541 () Bool)

(assert (=> d!18763 (= res!41216 (not lt!36541))))

(declare-fun lt!36543 () Bool)

(assert (=> d!18763 (= lt!36541 lt!36543)))

(declare-fun lt!36542 () Unit!2237)

(declare-fun e!51472 () Unit!2237)

(assert (=> d!18763 (= lt!36542 e!51472)))

(declare-fun c!12134 () Bool)

(assert (=> d!18763 (= c!12134 lt!36543)))

(assert (=> d!18763 (= lt!36543 (containsKey!141 (toList!729 lt!35937) lt!35933))))

(assert (=> d!18763 (= (contains!736 lt!35937 lt!35933) lt!36541)))

(declare-fun b!78785 () Bool)

(declare-fun lt!36540 () Unit!2237)

(assert (=> b!78785 (= e!51472 lt!36540)))

(assert (=> b!78785 (= lt!36540 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35937) lt!35933))))

(assert (=> b!78785 (isDefined!90 (getValueByKey!138 (toList!729 lt!35937) lt!35933))))

(declare-fun b!78786 () Bool)

(declare-fun Unit!2272 () Unit!2237)

(assert (=> b!78786 (= e!51472 Unit!2272)))

(declare-fun b!78787 () Bool)

(assert (=> b!78787 (= e!51473 (isDefined!90 (getValueByKey!138 (toList!729 lt!35937) lt!35933)))))

(assert (= (and d!18763 c!12134) b!78785))

(assert (= (and d!18763 (not c!12134)) b!78786))

(assert (= (and d!18763 (not res!41216)) b!78787))

(declare-fun m!79321 () Bool)

(assert (=> d!18763 m!79321))

(declare-fun m!79323 () Bool)

(assert (=> b!78785 m!79323))

(declare-fun m!79325 () Bool)

(assert (=> b!78785 m!79325))

(assert (=> b!78785 m!79325))

(declare-fun m!79327 () Bool)

(assert (=> b!78785 m!79327))

(assert (=> b!78787 m!79325))

(assert (=> b!78787 m!79325))

(assert (=> b!78787 m!79327))

(assert (=> d!18737 d!18763))

(assert (=> bm!7218 d!18721))

(declare-fun d!18765 () Bool)

(declare-fun res!41217 () Bool)

(declare-fun e!51474 () Bool)

(assert (=> d!18765 (=> res!41217 e!51474)))

(assert (=> d!18765 (= res!41217 (and ((_ is Cons!1490) (toList!729 lt!35961)) (= (_1!1092 (h!2078 (toList!729 lt!35961))) (_1!1092 lt!35806))))))

(assert (=> d!18765 (= (containsKey!141 (toList!729 lt!35961) (_1!1092 lt!35806)) e!51474)))

(declare-fun b!78788 () Bool)

(declare-fun e!51475 () Bool)

(assert (=> b!78788 (= e!51474 e!51475)))

(declare-fun res!41218 () Bool)

(assert (=> b!78788 (=> (not res!41218) (not e!51475))))

(assert (=> b!78788 (= res!41218 (and (or (not ((_ is Cons!1490) (toList!729 lt!35961))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35961))) (_1!1092 lt!35806))) ((_ is Cons!1490) (toList!729 lt!35961)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35961))) (_1!1092 lt!35806))))))

(declare-fun b!78789 () Bool)

(assert (=> b!78789 (= e!51475 (containsKey!141 (t!5132 (toList!729 lt!35961)) (_1!1092 lt!35806)))))

(assert (= (and d!18765 (not res!41217)) b!78788))

(assert (= (and b!78788 res!41218) b!78789))

(declare-fun m!79329 () Bool)

(assert (=> b!78789 m!79329))

(assert (=> d!18645 d!18765))

(declare-fun d!18767 () Bool)

(assert (=> d!18767 (= (validMask!0 (mask!6267 newMap!16)) (and (or (= (mask!6267 newMap!16) #b00000000000000000000000000000111) (= (mask!6267 newMap!16) #b00000000000000000000000000001111) (= (mask!6267 newMap!16) #b00000000000000000000000000011111) (= (mask!6267 newMap!16) #b00000000000000000000000000111111) (= (mask!6267 newMap!16) #b00000000000000000000000001111111) (= (mask!6267 newMap!16) #b00000000000000000000000011111111) (= (mask!6267 newMap!16) #b00000000000000000000000111111111) (= (mask!6267 newMap!16) #b00000000000000000000001111111111) (= (mask!6267 newMap!16) #b00000000000000000000011111111111) (= (mask!6267 newMap!16) #b00000000000000000000111111111111) (= (mask!6267 newMap!16) #b00000000000000000001111111111111) (= (mask!6267 newMap!16) #b00000000000000000011111111111111) (= (mask!6267 newMap!16) #b00000000000000000111111111111111) (= (mask!6267 newMap!16) #b00000000000000001111111111111111) (= (mask!6267 newMap!16) #b00000000000000011111111111111111) (= (mask!6267 newMap!16) #b00000000000000111111111111111111) (= (mask!6267 newMap!16) #b00000000000001111111111111111111) (= (mask!6267 newMap!16) #b00000000000011111111111111111111) (= (mask!6267 newMap!16) #b00000000000111111111111111111111) (= (mask!6267 newMap!16) #b00000000001111111111111111111111) (= (mask!6267 newMap!16) #b00000000011111111111111111111111) (= (mask!6267 newMap!16) #b00000000111111111111111111111111) (= (mask!6267 newMap!16) #b00000001111111111111111111111111) (= (mask!6267 newMap!16) #b00000011111111111111111111111111) (= (mask!6267 newMap!16) #b00000111111111111111111111111111) (= (mask!6267 newMap!16) #b00001111111111111111111111111111) (= (mask!6267 newMap!16) #b00011111111111111111111111111111) (= (mask!6267 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6267 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!18615 d!18767))

(assert (=> d!18667 d!18665))

(declare-fun d!18769 () Bool)

(assert (=> d!18769 (= (getValueByKey!138 lt!35947 (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792)))))

(assert (=> d!18769 true))

(declare-fun _$22!391 () Unit!2237)

(assert (=> d!18769 (= (choose!468 lt!35947 (_1!1092 lt!35792) (_2!1092 lt!35792)) _$22!391)))

(declare-fun bs!3340 () Bool)

(assert (= bs!3340 d!18769))

(assert (=> bs!3340 m!78111))

(assert (=> d!18667 d!18769))

(declare-fun d!18771 () Bool)

(declare-fun res!41223 () Bool)

(declare-fun e!51480 () Bool)

(assert (=> d!18771 (=> res!41223 e!51480)))

(assert (=> d!18771 (= res!41223 (or ((_ is Nil!1491) lt!35947) ((_ is Nil!1491) (t!5132 lt!35947))))))

(assert (=> d!18771 (= (isStrictlySorted!282 lt!35947) e!51480)))

(declare-fun b!78794 () Bool)

(declare-fun e!51481 () Bool)

(assert (=> b!78794 (= e!51480 e!51481)))

(declare-fun res!41224 () Bool)

(assert (=> b!78794 (=> (not res!41224) (not e!51481))))

(assert (=> b!78794 (= res!41224 (bvslt (_1!1092 (h!2078 lt!35947)) (_1!1092 (h!2078 (t!5132 lt!35947)))))))

(declare-fun b!78795 () Bool)

(assert (=> b!78795 (= e!51481 (isStrictlySorted!282 (t!5132 lt!35947)))))

(assert (= (and d!18771 (not res!41223)) b!78794))

(assert (= (and b!78794 res!41224) b!78795))

(declare-fun m!79331 () Bool)

(assert (=> b!78795 m!79331))

(assert (=> d!18667 d!18771))

(declare-fun d!18773 () Bool)

(declare-fun e!51483 () Bool)

(assert (=> d!18773 e!51483))

(declare-fun res!41225 () Bool)

(assert (=> d!18773 (=> res!41225 e!51483)))

(declare-fun lt!36545 () Bool)

(assert (=> d!18773 (= res!41225 (not lt!36545))))

(declare-fun lt!36547 () Bool)

(assert (=> d!18773 (= lt!36545 lt!36547)))

(declare-fun lt!36546 () Unit!2237)

(declare-fun e!51482 () Unit!2237)

(assert (=> d!18773 (= lt!36546 e!51482)))

(declare-fun c!12135 () Bool)

(assert (=> d!18773 (= c!12135 lt!36547)))

(assert (=> d!18773 (= lt!36547 (containsKey!141 (toList!729 lt!36207) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!18773 (= (contains!736 lt!36207 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) lt!36545)))

(declare-fun b!78796 () Bool)

(declare-fun lt!36544 () Unit!2237)

(assert (=> b!78796 (= e!51482 lt!36544)))

(assert (=> b!78796 (= lt!36544 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36207) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78796 (isDefined!90 (getValueByKey!138 (toList!729 lt!36207) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78797 () Bool)

(declare-fun Unit!2273 () Unit!2237)

(assert (=> b!78797 (= e!51482 Unit!2273)))

(declare-fun b!78798 () Bool)

(assert (=> b!78798 (= e!51483 (isDefined!90 (getValueByKey!138 (toList!729 lt!36207) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!18773 c!12135) b!78796))

(assert (= (and d!18773 (not c!12135)) b!78797))

(assert (= (and d!18773 (not res!41225)) b!78798))

(assert (=> d!18773 m!78435))

(declare-fun m!79333 () Bool)

(assert (=> d!18773 m!79333))

(assert (=> b!78796 m!78435))

(declare-fun m!79335 () Bool)

(assert (=> b!78796 m!79335))

(assert (=> b!78796 m!78435))

(declare-fun m!79337 () Bool)

(assert (=> b!78796 m!79337))

(assert (=> b!78796 m!79337))

(declare-fun m!79339 () Bool)

(assert (=> b!78796 m!79339))

(assert (=> b!78798 m!78435))

(assert (=> b!78798 m!79337))

(assert (=> b!78798 m!79337))

(assert (=> b!78798 m!79339))

(assert (=> b!78293 d!18773))

(declare-fun d!18775 () Bool)

(declare-fun lt!36548 () Bool)

(assert (=> d!18775 (= lt!36548 (select (content!84 (t!5132 (toList!729 lt!35961))) lt!35806))))

(declare-fun e!51485 () Bool)

(assert (=> d!18775 (= lt!36548 e!51485)))

(declare-fun res!41227 () Bool)

(assert (=> d!18775 (=> (not res!41227) (not e!51485))))

(assert (=> d!18775 (= res!41227 ((_ is Cons!1490) (t!5132 (toList!729 lt!35961))))))

(assert (=> d!18775 (= (contains!737 (t!5132 (toList!729 lt!35961)) lt!35806) lt!36548)))

(declare-fun b!78799 () Bool)

(declare-fun e!51484 () Bool)

(assert (=> b!78799 (= e!51485 e!51484)))

(declare-fun res!41226 () Bool)

(assert (=> b!78799 (=> res!41226 e!51484)))

(assert (=> b!78799 (= res!41226 (= (h!2078 (t!5132 (toList!729 lt!35961))) lt!35806))))

(declare-fun b!78800 () Bool)

(assert (=> b!78800 (= e!51484 (contains!737 (t!5132 (t!5132 (toList!729 lt!35961))) lt!35806))))

(assert (= (and d!18775 res!41227) b!78799))

(assert (= (and b!78799 (not res!41226)) b!78800))

(declare-fun m!79341 () Bool)

(assert (=> d!18775 m!79341))

(declare-fun m!79343 () Bool)

(assert (=> d!18775 m!79343))

(declare-fun m!79345 () Bool)

(assert (=> b!78800 m!79345))

(assert (=> b!78451 d!18775))

(declare-fun d!18777 () Bool)

(assert (=> d!18777 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35965) (_1!1092 lt!35806))) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35965) (_1!1092 lt!35806)))))))

(declare-fun bs!3341 () Bool)

(assert (= bs!3341 d!18777))

(assert (=> bs!3341 m!78175))

(declare-fun m!79347 () Bool)

(assert (=> bs!3341 m!79347))

(assert (=> b!78506 d!18777))

(assert (=> b!78506 d!18759))

(declare-fun d!18779 () Bool)

(assert (=> d!18779 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36140 lt!35794 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(assert (=> d!18779 true))

(declare-fun _$7!65 () Unit!2237)

(assert (=> d!18779 (= (choose!462 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) lt!36140 (zeroValue!2169 newMap!16) lt!35794 (minValue!2169 newMap!16) (defaultEntry!2271 newMap!16)) _$7!65)))

(declare-fun bs!3342 () Bool)

(assert (= bs!3342 d!18779))

(assert (=> bs!3342 m!78223))

(assert (=> bs!3342 m!78223))

(assert (=> bs!3342 m!78361))

(assert (=> bs!3342 m!78357))

(assert (=> d!18515 d!18779))

(declare-fun b!78801 () Bool)

(declare-fun e!51492 () ListLongMap!1427)

(declare-fun call!7242 () ListLongMap!1427)

(assert (=> b!78801 (= e!51492 call!7242)))

(declare-fun b!78802 () Bool)

(declare-fun e!51493 () ListLongMap!1427)

(declare-fun call!7245 () ListLongMap!1427)

(assert (=> b!78802 (= e!51493 (+!100 call!7245 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun b!78804 () Bool)

(declare-fun e!51495 () Bool)

(assert (=> b!78804 (= e!51495 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7237 () Bool)

(declare-fun call!7244 () Bool)

(declare-fun lt!36569 () ListLongMap!1427)

(assert (=> bm!7237 (= call!7244 (contains!736 lt!36569 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78805 () Bool)

(declare-fun e!51486 () Bool)

(declare-fun e!51497 () Bool)

(assert (=> b!78805 (= e!51486 e!51497)))

(declare-fun c!12136 () Bool)

(assert (=> b!78805 (= c!12136 (not (= (bvand lt!36140 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78806 () Bool)

(declare-fun e!51489 () Unit!2237)

(declare-fun Unit!2274 () Unit!2237)

(assert (=> b!78806 (= e!51489 Unit!2274)))

(declare-fun b!78807 () Bool)

(declare-fun res!41233 () Bool)

(assert (=> b!78807 (=> (not res!41233) (not e!51486))))

(declare-fun e!51498 () Bool)

(assert (=> b!78807 (= res!41233 e!51498)))

(declare-fun c!12138 () Bool)

(assert (=> b!78807 (= c!12138 (not (= (bvand lt!36140 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78808 () Bool)

(declare-fun lt!36557 () Unit!2237)

(assert (=> b!78808 (= e!51489 lt!36557)))

(declare-fun lt!36563 () ListLongMap!1427)

(assert (=> b!78808 (= lt!36563 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36140 lt!35794 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36560 () (_ BitVec 64))

(assert (=> b!78808 (= lt!36560 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36561 () (_ BitVec 64))

(assert (=> b!78808 (= lt!36561 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36570 () Unit!2237)

(assert (=> b!78808 (= lt!36570 (addStillContains!55 lt!36563 lt!36560 lt!35794 lt!36561))))

(assert (=> b!78808 (contains!736 (+!100 lt!36563 (tuple2!2163 lt!36560 lt!35794)) lt!36561)))

(declare-fun lt!36549 () Unit!2237)

(assert (=> b!78808 (= lt!36549 lt!36570)))

(declare-fun lt!36559 () ListLongMap!1427)

(assert (=> b!78808 (= lt!36559 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36140 lt!35794 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36566 () (_ BitVec 64))

(assert (=> b!78808 (= lt!36566 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36564 () (_ BitVec 64))

(assert (=> b!78808 (= lt!36564 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36567 () Unit!2237)

(assert (=> b!78808 (= lt!36567 (addApplyDifferent!55 lt!36559 lt!36566 (minValue!2169 newMap!16) lt!36564))))

(assert (=> b!78808 (= (apply!79 (+!100 lt!36559 (tuple2!2163 lt!36566 (minValue!2169 newMap!16))) lt!36564) (apply!79 lt!36559 lt!36564))))

(declare-fun lt!36552 () Unit!2237)

(assert (=> b!78808 (= lt!36552 lt!36567)))

(declare-fun lt!36562 () ListLongMap!1427)

(assert (=> b!78808 (= lt!36562 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36140 lt!35794 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36565 () (_ BitVec 64))

(assert (=> b!78808 (= lt!36565 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36555 () (_ BitVec 64))

(assert (=> b!78808 (= lt!36555 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36550 () Unit!2237)

(assert (=> b!78808 (= lt!36550 (addApplyDifferent!55 lt!36562 lt!36565 lt!35794 lt!36555))))

(assert (=> b!78808 (= (apply!79 (+!100 lt!36562 (tuple2!2163 lt!36565 lt!35794)) lt!36555) (apply!79 lt!36562 lt!36555))))

(declare-fun lt!36568 () Unit!2237)

(assert (=> b!78808 (= lt!36568 lt!36550)))

(declare-fun lt!36556 () ListLongMap!1427)

(assert (=> b!78808 (= lt!36556 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36140 lt!35794 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36554 () (_ BitVec 64))

(assert (=> b!78808 (= lt!36554 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36553 () (_ BitVec 64))

(assert (=> b!78808 (= lt!36553 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78808 (= lt!36557 (addApplyDifferent!55 lt!36556 lt!36554 (minValue!2169 newMap!16) lt!36553))))

(assert (=> b!78808 (= (apply!79 (+!100 lt!36556 (tuple2!2163 lt!36554 (minValue!2169 newMap!16))) lt!36553) (apply!79 lt!36556 lt!36553))))

(declare-fun b!78809 () Bool)

(declare-fun e!51487 () Bool)

(assert (=> b!78809 (= e!51497 e!51487)))

(declare-fun res!41230 () Bool)

(assert (=> b!78809 (= res!41230 call!7244)))

(assert (=> b!78809 (=> (not res!41230) (not e!51487))))

(declare-fun bm!7238 () Bool)

(declare-fun call!7246 () ListLongMap!1427)

(assert (=> bm!7238 (= call!7242 call!7246)))

(declare-fun bm!7239 () Bool)

(declare-fun call!7243 () ListLongMap!1427)

(assert (=> bm!7239 (= call!7243 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36140 lt!35794 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78810 () Bool)

(assert (=> b!78810 (= e!51497 (not call!7244))))

(declare-fun b!78811 () Bool)

(declare-fun call!7240 () Bool)

(assert (=> b!78811 (= e!51498 (not call!7240))))

(declare-fun bm!7240 () Bool)

(declare-fun c!12139 () Bool)

(declare-fun c!12141 () Bool)

(assert (=> bm!7240 (= call!7245 (+!100 (ite c!12141 call!7243 (ite c!12139 call!7246 call!7242)) (ite (or c!12141 c!12139) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!78812 () Bool)

(assert (=> b!78812 (= e!51487 (= (apply!79 lt!36569 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(declare-fun b!78813 () Bool)

(declare-fun res!41232 () Bool)

(assert (=> b!78813 (=> (not res!41232) (not e!51486))))

(declare-fun e!51494 () Bool)

(assert (=> b!78813 (= res!41232 e!51494)))

(declare-fun res!41234 () Bool)

(assert (=> b!78813 (=> res!41234 e!51494)))

(declare-fun e!51490 () Bool)

(assert (=> b!78813 (= res!41234 (not e!51490))))

(declare-fun res!41231 () Bool)

(assert (=> b!78813 (=> (not res!41231) (not e!51490))))

(assert (=> b!78813 (= res!41231 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78814 () Bool)

(assert (=> b!78814 (= e!51490 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!18781 () Bool)

(assert (=> d!18781 e!51486))

(declare-fun res!41236 () Bool)

(assert (=> d!18781 (=> (not res!41236) (not e!51486))))

(assert (=> d!18781 (= res!41236 (or (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))))

(declare-fun lt!36558 () ListLongMap!1427)

(assert (=> d!18781 (= lt!36569 lt!36558)))

(declare-fun lt!36551 () Unit!2237)

(assert (=> d!18781 (= lt!36551 e!51489)))

(declare-fun c!12140 () Bool)

(assert (=> d!18781 (= c!12140 e!51495)))

(declare-fun res!41235 () Bool)

(assert (=> d!18781 (=> (not res!41235) (not e!51495))))

(assert (=> d!18781 (= res!41235 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18781 (= lt!36558 e!51493)))

(assert (=> d!18781 (= c!12141 (and (not (= (bvand lt!36140 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!36140 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18781 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18781 (= (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36140 lt!35794 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36569)))

(declare-fun b!78803 () Bool)

(declare-fun e!51491 () ListLongMap!1427)

(assert (=> b!78803 (= e!51493 e!51491)))

(assert (=> b!78803 (= c!12139 (and (not (= (bvand lt!36140 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!36140 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78815 () Bool)

(declare-fun call!7241 () ListLongMap!1427)

(assert (=> b!78815 (= e!51492 call!7241)))

(declare-fun bm!7241 () Bool)

(assert (=> bm!7241 (= call!7240 (contains!736 lt!36569 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7242 () Bool)

(assert (=> bm!7242 (= call!7241 call!7245)))

(declare-fun b!78816 () Bool)

(declare-fun c!12137 () Bool)

(assert (=> b!78816 (= c!12137 (and (not (= (bvand lt!36140 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!36140 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78816 (= e!51491 e!51492)))

(declare-fun b!78817 () Bool)

(declare-fun e!51488 () Bool)

(assert (=> b!78817 (= e!51488 (= (apply!79 lt!36569 #b0000000000000000000000000000000000000000000000000000000000000000) lt!35794))))

(declare-fun b!78818 () Bool)

(assert (=> b!78818 (= e!51498 e!51488)))

(declare-fun res!41229 () Bool)

(assert (=> b!78818 (= res!41229 call!7240)))

(assert (=> b!78818 (=> (not res!41229) (not e!51488))))

(declare-fun b!78819 () Bool)

(declare-fun e!51496 () Bool)

(assert (=> b!78819 (= e!51494 e!51496)))

(declare-fun res!41228 () Bool)

(assert (=> b!78819 (=> (not res!41228) (not e!51496))))

(assert (=> b!78819 (= res!41228 (contains!736 lt!36569 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78819 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78820 () Bool)

(assert (=> b!78820 (= e!51496 (= (apply!79 lt!36569 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78820 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (_values!2254 newMap!16))))))

(assert (=> b!78820 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78821 () Bool)

(assert (=> b!78821 (= e!51491 call!7241)))

(declare-fun bm!7243 () Bool)

(assert (=> bm!7243 (= call!7246 call!7243)))

(assert (= (and d!18781 c!12141) b!78802))

(assert (= (and d!18781 (not c!12141)) b!78803))

(assert (= (and b!78803 c!12139) b!78821))

(assert (= (and b!78803 (not c!12139)) b!78816))

(assert (= (and b!78816 c!12137) b!78815))

(assert (= (and b!78816 (not c!12137)) b!78801))

(assert (= (or b!78815 b!78801) bm!7238))

(assert (= (or b!78821 bm!7238) bm!7243))

(assert (= (or b!78821 b!78815) bm!7242))

(assert (= (or b!78802 bm!7243) bm!7239))

(assert (= (or b!78802 bm!7242) bm!7240))

(assert (= (and d!18781 res!41235) b!78804))

(assert (= (and d!18781 c!12140) b!78808))

(assert (= (and d!18781 (not c!12140)) b!78806))

(assert (= (and d!18781 res!41236) b!78813))

(assert (= (and b!78813 res!41231) b!78814))

(assert (= (and b!78813 (not res!41234)) b!78819))

(assert (= (and b!78819 res!41228) b!78820))

(assert (= (and b!78813 res!41232) b!78807))

(assert (= (and b!78807 c!12138) b!78818))

(assert (= (and b!78807 (not c!12138)) b!78811))

(assert (= (and b!78818 res!41229) b!78817))

(assert (= (or b!78818 b!78811) bm!7241))

(assert (= (and b!78807 res!41233) b!78805))

(assert (= (and b!78805 c!12136) b!78809))

(assert (= (and b!78805 (not c!12136)) b!78810))

(assert (= (and b!78809 res!41230) b!78812))

(assert (= (or b!78809 b!78810) bm!7237))

(declare-fun b_lambda!3533 () Bool)

(assert (=> (not b_lambda!3533) (not b!78820)))

(assert (=> b!78820 t!5144))

(declare-fun b_and!4841 () Bool)

(assert (= b_and!4837 (and (=> t!5144 result!2821) b_and!4841)))

(assert (=> b!78820 t!5146))

(declare-fun b_and!4843 () Bool)

(assert (= b_and!4839 (and (=> t!5146 result!2823) b_and!4843)))

(assert (=> b!78820 m!78469))

(assert (=> b!78820 m!78471))

(assert (=> b!78820 m!78473))

(assert (=> b!78820 m!78435))

(assert (=> b!78820 m!78469))

(assert (=> b!78820 m!78435))

(declare-fun m!79349 () Bool)

(assert (=> b!78820 m!79349))

(assert (=> b!78820 m!78471))

(assert (=> d!18781 m!78355))

(declare-fun m!79351 () Bool)

(assert (=> bm!7240 m!79351))

(assert (=> b!78819 m!78435))

(assert (=> b!78819 m!78435))

(declare-fun m!79353 () Bool)

(assert (=> b!78819 m!79353))

(declare-fun m!79355 () Bool)

(assert (=> bm!7239 m!79355))

(assert (=> b!78814 m!78435))

(assert (=> b!78814 m!78435))

(assert (=> b!78814 m!78437))

(assert (=> b!78804 m!78435))

(assert (=> b!78804 m!78435))

(assert (=> b!78804 m!78437))

(declare-fun m!79357 () Bool)

(assert (=> b!78808 m!79357))

(declare-fun m!79359 () Bool)

(assert (=> b!78808 m!79359))

(declare-fun m!79361 () Bool)

(assert (=> b!78808 m!79361))

(declare-fun m!79363 () Bool)

(assert (=> b!78808 m!79363))

(declare-fun m!79365 () Bool)

(assert (=> b!78808 m!79365))

(declare-fun m!79367 () Bool)

(assert (=> b!78808 m!79367))

(declare-fun m!79369 () Bool)

(assert (=> b!78808 m!79369))

(declare-fun m!79371 () Bool)

(assert (=> b!78808 m!79371))

(declare-fun m!79373 () Bool)

(assert (=> b!78808 m!79373))

(declare-fun m!79375 () Bool)

(assert (=> b!78808 m!79375))

(assert (=> b!78808 m!79369))

(declare-fun m!79377 () Bool)

(assert (=> b!78808 m!79377))

(assert (=> b!78808 m!79373))

(declare-fun m!79379 () Bool)

(assert (=> b!78808 m!79379))

(assert (=> b!78808 m!79361))

(declare-fun m!79381 () Bool)

(assert (=> b!78808 m!79381))

(assert (=> b!78808 m!79357))

(assert (=> b!78808 m!79355))

(declare-fun m!79383 () Bool)

(assert (=> b!78808 m!79383))

(declare-fun m!79385 () Bool)

(assert (=> b!78808 m!79385))

(assert (=> b!78808 m!78435))

(declare-fun m!79387 () Bool)

(assert (=> b!78802 m!79387))

(declare-fun m!79389 () Bool)

(assert (=> bm!7237 m!79389))

(declare-fun m!79391 () Bool)

(assert (=> bm!7241 m!79391))

(declare-fun m!79393 () Bool)

(assert (=> b!78812 m!79393))

(declare-fun m!79395 () Bool)

(assert (=> b!78817 m!79395))

(assert (=> d!18515 d!18781))

(assert (=> d!18515 d!18541))

(declare-fun d!18783 () Bool)

(declare-fun e!51499 () Bool)

(assert (=> d!18783 e!51499))

(declare-fun res!41237 () Bool)

(assert (=> d!18783 (=> (not res!41237) (not e!51499))))

(declare-fun lt!36572 () ListLongMap!1427)

(assert (=> d!18783 (= res!41237 (contains!736 lt!36572 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794))))))

(declare-fun lt!36571 () List!1494)

(assert (=> d!18783 (= lt!36572 (ListLongMap!1428 lt!36571))))

(declare-fun lt!36573 () Unit!2237)

(declare-fun lt!36574 () Unit!2237)

(assert (=> d!18783 (= lt!36573 lt!36574)))

(assert (=> d!18783 (= (getValueByKey!138 lt!36571 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794))) (Some!143 (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794))))))

(assert (=> d!18783 (= lt!36574 (lemmaContainsTupThenGetReturnValue!55 lt!36571 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794))))))

(assert (=> d!18783 (= lt!36571 (insertStrictlySorted!58 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794))))))

(assert (=> d!18783 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794)) lt!36572)))

(declare-fun b!78822 () Bool)

(declare-fun res!41238 () Bool)

(assert (=> b!78822 (=> (not res!41238) (not e!51499))))

(assert (=> b!78822 (= res!41238 (= (getValueByKey!138 (toList!729 lt!36572) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794))) (Some!143 (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794)))))))

(declare-fun b!78823 () Bool)

(assert (=> b!78823 (= e!51499 (contains!737 (toList!729 lt!36572) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794)))))

(assert (= (and d!18783 res!41237) b!78822))

(assert (= (and b!78822 res!41238) b!78823))

(declare-fun m!79397 () Bool)

(assert (=> d!18783 m!79397))

(declare-fun m!79399 () Bool)

(assert (=> d!18783 m!79399))

(declare-fun m!79401 () Bool)

(assert (=> d!18783 m!79401))

(declare-fun m!79403 () Bool)

(assert (=> d!18783 m!79403))

(declare-fun m!79405 () Bool)

(assert (=> b!78822 m!79405))

(declare-fun m!79407 () Bool)

(assert (=> b!78823 m!79407))

(assert (=> d!18515 d!18783))

(assert (=> d!18515 d!18767))

(declare-fun d!18785 () Bool)

(assert (=> d!18785 (= (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78707 d!18785))

(declare-fun d!18787 () Bool)

(declare-fun e!51500 () Bool)

(assert (=> d!18787 e!51500))

(declare-fun res!41239 () Bool)

(assert (=> d!18787 (=> (not res!41239) (not e!51500))))

(declare-fun lt!36576 () ListLongMap!1427)

(assert (=> d!18787 (= res!41239 (contains!736 lt!36576 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun lt!36575 () List!1494)

(assert (=> d!18787 (= lt!36576 (ListLongMap!1428 lt!36575))))

(declare-fun lt!36577 () Unit!2237)

(declare-fun lt!36578 () Unit!2237)

(assert (=> d!18787 (= lt!36577 lt!36578)))

(assert (=> d!18787 (= (getValueByKey!138 lt!36575 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!18787 (= lt!36578 (lemmaContainsTupThenGetReturnValue!55 lt!36575 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!18787 (= lt!36575 (insertStrictlySorted!58 (toList!729 call!7238) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!18787 (= (+!100 call!7238 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) lt!36576)))

(declare-fun b!78824 () Bool)

(declare-fun res!41240 () Bool)

(assert (=> b!78824 (=> (not res!41240) (not e!51500))))

(assert (=> b!78824 (= res!41240 (= (getValueByKey!138 (toList!729 lt!36576) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(declare-fun b!78825 () Bool)

(assert (=> b!78825 (= e!51500 (contains!737 (toList!729 lt!36576) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(assert (= (and d!18787 res!41239) b!78824))

(assert (= (and b!78824 res!41240) b!78825))

(declare-fun m!79409 () Bool)

(assert (=> d!18787 m!79409))

(declare-fun m!79411 () Bool)

(assert (=> d!18787 m!79411))

(declare-fun m!79413 () Bool)

(assert (=> d!18787 m!79413))

(declare-fun m!79415 () Bool)

(assert (=> d!18787 m!79415))

(declare-fun m!79417 () Bool)

(assert (=> b!78824 m!79417))

(declare-fun m!79419 () Bool)

(assert (=> b!78825 m!79419))

(assert (=> b!78754 d!18787))

(declare-fun d!18789 () Bool)

(assert (=> d!18789 (= (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36044)) (v!2600 (getValueByKey!138 (toList!729 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36044)))))

(assert (=> d!18583 d!18789))

(declare-fun b!78826 () Bool)

(declare-fun e!51501 () Option!144)

(assert (=> b!78826 (= e!51501 (Some!143 (_2!1092 (h!2078 (toList!729 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))))

(declare-fun b!78827 () Bool)

(declare-fun e!51502 () Option!144)

(assert (=> b!78827 (= e!51501 e!51502)))

(declare-fun c!12143 () Bool)

(assert (=> b!78827 (= c!12143 (and ((_ is Cons!1490) (toList!729 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (not (= (_1!1092 (h!2078 (toList!729 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36044))))))

(declare-fun b!78829 () Bool)

(assert (=> b!78829 (= e!51502 None!142)))

(declare-fun b!78828 () Bool)

(assert (=> b!78828 (= e!51502 (getValueByKey!138 (t!5132 (toList!729 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) lt!36044))))

(declare-fun c!12142 () Bool)

(declare-fun d!18791 () Bool)

(assert (=> d!18791 (= c!12142 (and ((_ is Cons!1490) (toList!729 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36044)))))

(assert (=> d!18791 (= (getValueByKey!138 (toList!729 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36044) e!51501)))

(assert (= (and d!18791 c!12142) b!78826))

(assert (= (and d!18791 (not c!12142)) b!78827))

(assert (= (and b!78827 c!12143) b!78828))

(assert (= (and b!78827 (not c!12143)) b!78829))

(declare-fun m!79421 () Bool)

(assert (=> b!78828 m!79421))

(assert (=> d!18583 d!18791))

(declare-fun d!18793 () Bool)

(assert (=> d!18793 (arrayContainsKey!0 (_keys!3931 newMap!16) lt!36443 #b00000000000000000000000000000000)))

(declare-fun lt!36581 () Unit!2237)

(declare-fun choose!13 (array!3957 (_ BitVec 64) (_ BitVec 32)) Unit!2237)

(assert (=> d!18793 (= lt!36581 (choose!13 (_keys!3931 newMap!16) lt!36443 #b00000000000000000000000000000000))))

(assert (=> d!18793 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!18793 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3931 newMap!16) lt!36443 #b00000000000000000000000000000000) lt!36581)))

(declare-fun bs!3343 () Bool)

(assert (= bs!3343 d!18793))

(assert (=> bs!3343 m!79045))

(declare-fun m!79423 () Bool)

(assert (=> bs!3343 m!79423))

(assert (=> b!78622 d!18793))

(declare-fun d!18795 () Bool)

(declare-fun res!41241 () Bool)

(declare-fun e!51503 () Bool)

(assert (=> d!18795 (=> res!41241 e!51503)))

(assert (=> d!18795 (= res!41241 (= (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) lt!36443))))

(assert (=> d!18795 (= (arrayContainsKey!0 (_keys!3931 newMap!16) lt!36443 #b00000000000000000000000000000000) e!51503)))

(declare-fun b!78830 () Bool)

(declare-fun e!51504 () Bool)

(assert (=> b!78830 (= e!51503 e!51504)))

(declare-fun res!41242 () Bool)

(assert (=> b!78830 (=> (not res!41242) (not e!51504))))

(assert (=> b!78830 (= res!41242 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78831 () Bool)

(assert (=> b!78831 (= e!51504 (arrayContainsKey!0 (_keys!3931 newMap!16) lt!36443 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!18795 (not res!41241)) b!78830))

(assert (= (and b!78830 res!41242) b!78831))

(assert (=> d!18795 m!78435))

(declare-fun m!79425 () Bool)

(assert (=> b!78831 m!79425))

(assert (=> b!78622 d!18795))

(declare-fun b!78832 () Bool)

(declare-fun e!51506 () SeekEntryResult!234)

(assert (=> b!78832 (= e!51506 Undefined!234)))

(declare-fun b!78833 () Bool)

(declare-fun e!51507 () SeekEntryResult!234)

(assert (=> b!78833 (= e!51506 e!51507)))

(declare-fun lt!36583 () (_ BitVec 64))

(declare-fun lt!36582 () SeekEntryResult!234)

(assert (=> b!78833 (= lt!36583 (select (arr!1886 (_keys!3931 newMap!16)) (index!3072 lt!36582)))))

(declare-fun c!12146 () Bool)

(assert (=> b!78833 (= c!12146 (= lt!36583 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78834 () Bool)

(declare-fun e!51505 () SeekEntryResult!234)

(assert (=> b!78834 (= e!51505 (MissingZero!234 (index!3072 lt!36582)))))

(declare-fun b!78835 () Bool)

(assert (=> b!78835 (= e!51505 (seekKeyOrZeroReturnVacant!0 (x!11541 lt!36582) (index!3072 lt!36582) (index!3072 lt!36582) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun b!78836 () Bool)

(assert (=> b!78836 (= e!51507 (Found!234 (index!3072 lt!36582)))))

(declare-fun d!18797 () Bool)

(declare-fun lt!36584 () SeekEntryResult!234)

(assert (=> d!18797 (and (or ((_ is Undefined!234) lt!36584) (not ((_ is Found!234) lt!36584)) (and (bvsge (index!3071 lt!36584) #b00000000000000000000000000000000) (bvslt (index!3071 lt!36584) (size!2127 (_keys!3931 newMap!16))))) (or ((_ is Undefined!234) lt!36584) ((_ is Found!234) lt!36584) (not ((_ is MissingZero!234) lt!36584)) (and (bvsge (index!3070 lt!36584) #b00000000000000000000000000000000) (bvslt (index!3070 lt!36584) (size!2127 (_keys!3931 newMap!16))))) (or ((_ is Undefined!234) lt!36584) ((_ is Found!234) lt!36584) ((_ is MissingZero!234) lt!36584) (not ((_ is MissingVacant!234) lt!36584)) (and (bvsge (index!3073 lt!36584) #b00000000000000000000000000000000) (bvslt (index!3073 lt!36584) (size!2127 (_keys!3931 newMap!16))))) (or ((_ is Undefined!234) lt!36584) (ite ((_ is Found!234) lt!36584) (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36584)) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!234) lt!36584) (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3070 lt!36584)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!234) lt!36584) (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3073 lt!36584)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18797 (= lt!36584 e!51506)))

(declare-fun c!12144 () Bool)

(assert (=> d!18797 (= c!12144 (and ((_ is Intermediate!234) lt!36582) (undefined!1046 lt!36582)))))

(assert (=> d!18797 (= lt!36582 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) (mask!6267 newMap!16)) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(assert (=> d!18797 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18797 (= (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) (_keys!3931 newMap!16) (mask!6267 newMap!16)) lt!36584)))

(declare-fun b!78837 () Bool)

(declare-fun c!12145 () Bool)

(assert (=> b!78837 (= c!12145 (= lt!36583 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78837 (= e!51507 e!51505)))

(assert (= (and d!18797 c!12144) b!78832))

(assert (= (and d!18797 (not c!12144)) b!78833))

(assert (= (and b!78833 c!12146) b!78836))

(assert (= (and b!78833 (not c!12146)) b!78837))

(assert (= (and b!78837 c!12145) b!78834))

(assert (= (and b!78837 (not c!12145)) b!78835))

(declare-fun m!79427 () Bool)

(assert (=> b!78833 m!79427))

(assert (=> b!78835 m!78435))

(declare-fun m!79429 () Bool)

(assert (=> b!78835 m!79429))

(assert (=> d!18797 m!78355))

(declare-fun m!79431 () Bool)

(assert (=> d!18797 m!79431))

(assert (=> d!18797 m!78435))

(declare-fun m!79433 () Bool)

(assert (=> d!18797 m!79433))

(declare-fun m!79435 () Bool)

(assert (=> d!18797 m!79435))

(declare-fun m!79437 () Bool)

(assert (=> d!18797 m!79437))

(assert (=> d!18797 m!79433))

(assert (=> d!18797 m!78435))

(declare-fun m!79439 () Bool)

(assert (=> d!18797 m!79439))

(assert (=> b!78622 d!18797))

(declare-fun b!78838 () Bool)

(declare-fun e!51508 () Option!144)

(assert (=> b!78838 (= e!51508 (Some!143 (_2!1092 (h!2078 (t!5132 (toList!729 lt!35957))))))))

(declare-fun b!78839 () Bool)

(declare-fun e!51509 () Option!144)

(assert (=> b!78839 (= e!51508 e!51509)))

(declare-fun c!12148 () Bool)

(assert (=> b!78839 (= c!12148 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35957))) (not (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35957)))) (_1!1092 lt!35789)))))))

(declare-fun b!78841 () Bool)

(assert (=> b!78841 (= e!51509 None!142)))

(declare-fun b!78840 () Bool)

(assert (=> b!78840 (= e!51509 (getValueByKey!138 (t!5132 (t!5132 (toList!729 lt!35957))) (_1!1092 lt!35789)))))

(declare-fun d!18799 () Bool)

(declare-fun c!12147 () Bool)

(assert (=> d!18799 (= c!12147 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35957))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35957)))) (_1!1092 lt!35789))))))

(assert (=> d!18799 (= (getValueByKey!138 (t!5132 (toList!729 lt!35957)) (_1!1092 lt!35789)) e!51508)))

(assert (= (and d!18799 c!12147) b!78838))

(assert (= (and d!18799 (not c!12147)) b!78839))

(assert (= (and b!78839 c!12148) b!78840))

(assert (= (and b!78839 (not c!12148)) b!78841))

(declare-fun m!79441 () Bool)

(assert (=> b!78840 m!79441))

(assert (=> b!78747 d!18799))

(declare-fun b!78842 () Bool)

(declare-fun e!51510 () (_ BitVec 32))

(declare-fun call!7247 () (_ BitVec 32))

(assert (=> b!78842 (= e!51510 (bvadd #b00000000000000000000000000000001 call!7247))))

(declare-fun b!78843 () Bool)

(declare-fun e!51511 () (_ BitVec 32))

(assert (=> b!78843 (= e!51511 #b00000000000000000000000000000000)))

(declare-fun bm!7244 () Bool)

(assert (=> bm!7244 (= call!7247 (arrayCountValidKeys!0 (_keys!3931 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!78844 () Bool)

(assert (=> b!78844 (= e!51510 call!7247)))

(declare-fun d!18801 () Bool)

(declare-fun lt!36585 () (_ BitVec 32))

(assert (=> d!18801 (and (bvsge lt!36585 #b00000000000000000000000000000000) (bvsle lt!36585 (bvsub (size!2127 (_keys!3931 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!18801 (= lt!36585 e!51511)))

(declare-fun c!12150 () Bool)

(assert (=> d!18801 (= c!12150 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18801 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2127 (_keys!3931 newMap!16)) (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18801 (= (arrayCountValidKeys!0 (_keys!3931 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))) lt!36585)))

(declare-fun b!78845 () Bool)

(assert (=> b!78845 (= e!51511 e!51510)))

(declare-fun c!12149 () Bool)

(assert (=> b!78845 (= c!12149 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!18801 c!12150) b!78843))

(assert (= (and d!18801 (not c!12150)) b!78845))

(assert (= (and b!78845 c!12149) b!78842))

(assert (= (and b!78845 (not c!12149)) b!78844))

(assert (= (or b!78842 b!78844) bm!7244))

(declare-fun m!79443 () Bool)

(assert (=> bm!7244 m!79443))

(declare-fun m!79445 () Bool)

(assert (=> b!78845 m!79445))

(assert (=> b!78845 m!79445))

(declare-fun m!79447 () Bool)

(assert (=> b!78845 m!79447))

(assert (=> bm!7164 d!18801))

(assert (=> d!18621 d!18619))

(declare-fun d!18803 () Bool)

(assert (=> d!18803 (= (getValueByKey!138 lt!35968 (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792)))))

(assert (=> d!18803 true))

(declare-fun _$22!392 () Unit!2237)

(assert (=> d!18803 (= (choose!468 lt!35968 (_1!1092 lt!35792) (_2!1092 lt!35792)) _$22!392)))

(declare-fun bs!3344 () Bool)

(assert (= bs!3344 d!18803))

(assert (=> bs!3344 m!78181))

(assert (=> d!18621 d!18803))

(declare-fun d!18805 () Bool)

(declare-fun res!41243 () Bool)

(declare-fun e!51512 () Bool)

(assert (=> d!18805 (=> res!41243 e!51512)))

(assert (=> d!18805 (= res!41243 (or ((_ is Nil!1491) lt!35968) ((_ is Nil!1491) (t!5132 lt!35968))))))

(assert (=> d!18805 (= (isStrictlySorted!282 lt!35968) e!51512)))

(declare-fun b!78846 () Bool)

(declare-fun e!51513 () Bool)

(assert (=> b!78846 (= e!51512 e!51513)))

(declare-fun res!41244 () Bool)

(assert (=> b!78846 (=> (not res!41244) (not e!51513))))

(assert (=> b!78846 (= res!41244 (bvslt (_1!1092 (h!2078 lt!35968)) (_1!1092 (h!2078 (t!5132 lt!35968)))))))

(declare-fun b!78847 () Bool)

(assert (=> b!78847 (= e!51513 (isStrictlySorted!282 (t!5132 lt!35968)))))

(assert (= (and d!18805 (not res!41243)) b!78846))

(assert (= (and b!78846 res!41244) b!78847))

(declare-fun m!79449 () Bool)

(assert (=> b!78847 m!79449))

(assert (=> d!18621 d!18805))

(declare-fun d!18807 () Bool)

(declare-fun c!12151 () Bool)

(assert (=> d!18807 (= c!12151 ((_ is ValueCellFull!911) (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!51514 () V!2993)

(assert (=> d!18807 (= (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51514)))

(declare-fun b!78848 () Bool)

(assert (=> b!78848 (= e!51514 (get!1184 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78849 () Bool)

(assert (=> b!78849 (= e!51514 (get!1185 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18807 c!12151) b!78848))

(assert (= (and d!18807 (not c!12151)) b!78849))

(assert (=> b!78848 m!78461))

(assert (=> b!78848 m!77939))

(declare-fun m!79451 () Bool)

(assert (=> b!78848 m!79451))

(assert (=> b!78849 m!78461))

(assert (=> b!78849 m!77939))

(declare-fun m!79453 () Bool)

(assert (=> b!78849 m!79453))

(assert (=> b!78263 d!18807))

(declare-fun d!18809 () Bool)

(declare-fun e!51516 () Bool)

(assert (=> d!18809 e!51516))

(declare-fun res!41245 () Bool)

(assert (=> d!18809 (=> res!41245 e!51516)))

(declare-fun lt!36587 () Bool)

(assert (=> d!18809 (= res!41245 (not lt!36587))))

(declare-fun lt!36589 () Bool)

(assert (=> d!18809 (= lt!36587 lt!36589)))

(declare-fun lt!36588 () Unit!2237)

(declare-fun e!51515 () Unit!2237)

(assert (=> d!18809 (= lt!36588 e!51515)))

(declare-fun c!12152 () Bool)

(assert (=> d!18809 (= c!12152 lt!36589)))

(assert (=> d!18809 (= lt!36589 (containsKey!141 (toList!729 (+!100 lt!36185 (tuple2!2163 lt!36183 lt!36186))) lt!36181))))

(assert (=> d!18809 (= (contains!736 (+!100 lt!36185 (tuple2!2163 lt!36183 lt!36186)) lt!36181) lt!36587)))

(declare-fun b!78850 () Bool)

(declare-fun lt!36586 () Unit!2237)

(assert (=> b!78850 (= e!51515 lt!36586)))

(assert (=> b!78850 (= lt!36586 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (+!100 lt!36185 (tuple2!2163 lt!36183 lt!36186))) lt!36181))))

(assert (=> b!78850 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36185 (tuple2!2163 lt!36183 lt!36186))) lt!36181))))

(declare-fun b!78851 () Bool)

(declare-fun Unit!2275 () Unit!2237)

(assert (=> b!78851 (= e!51515 Unit!2275)))

(declare-fun b!78852 () Bool)

(assert (=> b!78852 (= e!51516 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36185 (tuple2!2163 lt!36183 lt!36186))) lt!36181)))))

(assert (= (and d!18809 c!12152) b!78850))

(assert (= (and d!18809 (not c!12152)) b!78851))

(assert (= (and d!18809 (not res!41245)) b!78852))

(declare-fun m!79455 () Bool)

(assert (=> d!18809 m!79455))

(declare-fun m!79457 () Bool)

(assert (=> b!78850 m!79457))

(declare-fun m!79459 () Bool)

(assert (=> b!78850 m!79459))

(assert (=> b!78850 m!79459))

(declare-fun m!79461 () Bool)

(assert (=> b!78850 m!79461))

(assert (=> b!78852 m!79459))

(assert (=> b!78852 m!79459))

(assert (=> b!78852 m!79461))

(assert (=> b!78263 d!18809))

(declare-fun d!18811 () Bool)

(assert (=> d!18811 (not (contains!736 (+!100 lt!36185 (tuple2!2163 lt!36183 lt!36186)) lt!36181))))

(declare-fun lt!36590 () Unit!2237)

(assert (=> d!18811 (= lt!36590 (choose!470 lt!36185 lt!36183 lt!36186 lt!36181))))

(declare-fun e!51517 () Bool)

(assert (=> d!18811 e!51517))

(declare-fun res!41246 () Bool)

(assert (=> d!18811 (=> (not res!41246) (not e!51517))))

(assert (=> d!18811 (= res!41246 (not (contains!736 lt!36185 lt!36181)))))

(assert (=> d!18811 (= (addStillNotContains!30 lt!36185 lt!36183 lt!36186 lt!36181) lt!36590)))

(declare-fun b!78853 () Bool)

(assert (=> b!78853 (= e!51517 (not (= lt!36183 lt!36181)))))

(assert (= (and d!18811 res!41246) b!78853))

(assert (=> d!18811 m!78455))

(assert (=> d!18811 m!78455))

(assert (=> d!18811 m!78457))

(declare-fun m!79463 () Bool)

(assert (=> d!18811 m!79463))

(declare-fun m!79465 () Bool)

(assert (=> d!18811 m!79465))

(assert (=> b!78263 d!18811))

(declare-fun d!18813 () Bool)

(declare-fun e!51518 () Bool)

(assert (=> d!18813 e!51518))

(declare-fun res!41247 () Bool)

(assert (=> d!18813 (=> (not res!41247) (not e!51518))))

(declare-fun lt!36592 () ListLongMap!1427)

(assert (=> d!18813 (= res!41247 (contains!736 lt!36592 (_1!1092 (tuple2!2163 lt!36183 lt!36186))))))

(declare-fun lt!36591 () List!1494)

(assert (=> d!18813 (= lt!36592 (ListLongMap!1428 lt!36591))))

(declare-fun lt!36593 () Unit!2237)

(declare-fun lt!36594 () Unit!2237)

(assert (=> d!18813 (= lt!36593 lt!36594)))

(assert (=> d!18813 (= (getValueByKey!138 lt!36591 (_1!1092 (tuple2!2163 lt!36183 lt!36186))) (Some!143 (_2!1092 (tuple2!2163 lt!36183 lt!36186))))))

(assert (=> d!18813 (= lt!36594 (lemmaContainsTupThenGetReturnValue!55 lt!36591 (_1!1092 (tuple2!2163 lt!36183 lt!36186)) (_2!1092 (tuple2!2163 lt!36183 lt!36186))))))

(assert (=> d!18813 (= lt!36591 (insertStrictlySorted!58 (toList!729 lt!36185) (_1!1092 (tuple2!2163 lt!36183 lt!36186)) (_2!1092 (tuple2!2163 lt!36183 lt!36186))))))

(assert (=> d!18813 (= (+!100 lt!36185 (tuple2!2163 lt!36183 lt!36186)) lt!36592)))

(declare-fun b!78854 () Bool)

(declare-fun res!41248 () Bool)

(assert (=> b!78854 (=> (not res!41248) (not e!51518))))

(assert (=> b!78854 (= res!41248 (= (getValueByKey!138 (toList!729 lt!36592) (_1!1092 (tuple2!2163 lt!36183 lt!36186))) (Some!143 (_2!1092 (tuple2!2163 lt!36183 lt!36186)))))))

(declare-fun b!78855 () Bool)

(assert (=> b!78855 (= e!51518 (contains!737 (toList!729 lt!36592) (tuple2!2163 lt!36183 lt!36186)))))

(assert (= (and d!18813 res!41247) b!78854))

(assert (= (and b!78854 res!41248) b!78855))

(declare-fun m!79467 () Bool)

(assert (=> d!18813 m!79467))

(declare-fun m!79469 () Bool)

(assert (=> d!18813 m!79469))

(declare-fun m!79471 () Bool)

(assert (=> d!18813 m!79471))

(declare-fun m!79473 () Bool)

(assert (=> d!18813 m!79473))

(declare-fun m!79475 () Bool)

(assert (=> b!78854 m!79475))

(declare-fun m!79477 () Bool)

(assert (=> b!78855 m!79477))

(assert (=> b!78263 d!18813))

(declare-fun d!18815 () Bool)

(declare-fun e!51519 () Bool)

(assert (=> d!18815 e!51519))

(declare-fun res!41249 () Bool)

(assert (=> d!18815 (=> (not res!41249) (not e!51519))))

(declare-fun lt!36596 () ListLongMap!1427)

(assert (=> d!18815 (= res!41249 (contains!736 lt!36596 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!36595 () List!1494)

(assert (=> d!18815 (= lt!36596 (ListLongMap!1428 lt!36595))))

(declare-fun lt!36597 () Unit!2237)

(declare-fun lt!36598 () Unit!2237)

(assert (=> d!18815 (= lt!36597 lt!36598)))

(assert (=> d!18815 (= (getValueByKey!138 lt!36595 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18815 (= lt!36598 (lemmaContainsTupThenGetReturnValue!55 lt!36595 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18815 (= lt!36595 (insertStrictlySorted!58 (toList!729 call!7168) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18815 (= (+!100 call!7168 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!36596)))

(declare-fun b!78856 () Bool)

(declare-fun res!41250 () Bool)

(assert (=> b!78856 (=> (not res!41250) (not e!51519))))

(assert (=> b!78856 (= res!41250 (= (getValueByKey!138 (toList!729 lt!36596) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!78857 () Bool)

(assert (=> b!78857 (= e!51519 (contains!737 (toList!729 lt!36596) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!18815 res!41249) b!78856))

(assert (= (and b!78856 res!41250) b!78857))

(declare-fun m!79479 () Bool)

(assert (=> d!18815 m!79479))

(declare-fun m!79481 () Bool)

(assert (=> d!18815 m!79481))

(declare-fun m!79483 () Bool)

(assert (=> d!18815 m!79483))

(declare-fun m!79485 () Bool)

(assert (=> d!18815 m!79485))

(declare-fun m!79487 () Bool)

(assert (=> b!78856 m!79487))

(declare-fun m!79489 () Bool)

(assert (=> b!78857 m!79489))

(assert (=> b!78263 d!18815))

(declare-fun b!78858 () Bool)

(declare-fun e!51520 () Option!144)

(assert (=> b!78858 (= e!51520 (Some!143 (_2!1092 (h!2078 (t!5132 lt!35956)))))))

(declare-fun b!78859 () Bool)

(declare-fun e!51521 () Option!144)

(assert (=> b!78859 (= e!51520 e!51521)))

(declare-fun c!12154 () Bool)

(assert (=> b!78859 (= c!12154 (and ((_ is Cons!1490) (t!5132 lt!35956)) (not (= (_1!1092 (h!2078 (t!5132 lt!35956))) (_1!1092 lt!35789)))))))

(declare-fun b!78861 () Bool)

(assert (=> b!78861 (= e!51521 None!142)))

(declare-fun b!78860 () Bool)

(assert (=> b!78860 (= e!51521 (getValueByKey!138 (t!5132 (t!5132 lt!35956)) (_1!1092 lt!35789)))))

(declare-fun d!18817 () Bool)

(declare-fun c!12153 () Bool)

(assert (=> d!18817 (= c!12153 (and ((_ is Cons!1490) (t!5132 lt!35956)) (= (_1!1092 (h!2078 (t!5132 lt!35956))) (_1!1092 lt!35789))))))

(assert (=> d!18817 (= (getValueByKey!138 (t!5132 lt!35956) (_1!1092 lt!35789)) e!51520)))

(assert (= (and d!18817 c!12153) b!78858))

(assert (= (and d!18817 (not c!12153)) b!78859))

(assert (= (and b!78859 c!12154) b!78860))

(assert (= (and b!78859 (not c!12154)) b!78861))

(declare-fun m!79491 () Bool)

(assert (=> b!78860 m!79491))

(assert (=> b!78664 d!18817))

(declare-fun d!18819 () Bool)

(declare-fun lt!36599 () Bool)

(assert (=> d!18819 (= lt!36599 (select (content!84 (toList!729 lt!36166)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun e!51523 () Bool)

(assert (=> d!18819 (= lt!36599 e!51523)))

(declare-fun res!41252 () Bool)

(assert (=> d!18819 (=> (not res!41252) (not e!51523))))

(assert (=> d!18819 (= res!41252 ((_ is Cons!1490) (toList!729 lt!36166)))))

(assert (=> d!18819 (= (contains!737 (toList!729 lt!36166) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36599)))

(declare-fun b!78862 () Bool)

(declare-fun e!51522 () Bool)

(assert (=> b!78862 (= e!51523 e!51522)))

(declare-fun res!41251 () Bool)

(assert (=> b!78862 (=> res!41251 e!51522)))

(assert (=> b!78862 (= res!41251 (= (h!2078 (toList!729 lt!36166)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun b!78863 () Bool)

(assert (=> b!78863 (= e!51522 (contains!737 (t!5132 (toList!729 lt!36166)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!18819 res!41252) b!78862))

(assert (= (and b!78862 (not res!41251)) b!78863))

(declare-fun m!79493 () Bool)

(assert (=> d!18819 m!79493))

(declare-fun m!79495 () Bool)

(assert (=> d!18819 m!79495))

(declare-fun m!79497 () Bool)

(assert (=> b!78863 m!79497))

(assert (=> b!78244 d!18819))

(assert (=> d!18755 d!18767))

(declare-fun d!18821 () Bool)

(assert (=> d!18821 (= (get!1186 (getValueByKey!138 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2600 (getValueByKey!138 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18675 d!18821))

(declare-fun b!78864 () Bool)

(declare-fun e!51524 () Option!144)

(assert (=> b!78864 (= e!51524 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36049)))))))

(declare-fun b!78865 () Bool)

(declare-fun e!51525 () Option!144)

(assert (=> b!78865 (= e!51524 e!51525)))

(declare-fun c!12156 () Bool)

(assert (=> b!78865 (= c!12156 (and ((_ is Cons!1490) (toList!729 lt!36049)) (not (= (_1!1092 (h!2078 (toList!729 lt!36049))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!78867 () Bool)

(assert (=> b!78867 (= e!51525 None!142)))

(declare-fun b!78866 () Bool)

(assert (=> b!78866 (= e!51525 (getValueByKey!138 (t!5132 (toList!729 lt!36049)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!18823 () Bool)

(declare-fun c!12155 () Bool)

(assert (=> d!18823 (= c!12155 (and ((_ is Cons!1490) (toList!729 lt!36049)) (= (_1!1092 (h!2078 (toList!729 lt!36049))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18823 (= (getValueByKey!138 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000) e!51524)))

(assert (= (and d!18823 c!12155) b!78864))

(assert (= (and d!18823 (not c!12155)) b!78865))

(assert (= (and b!78865 c!12156) b!78866))

(assert (= (and b!78865 (not c!12156)) b!78867))

(declare-fun m!79499 () Bool)

(assert (=> b!78866 m!79499))

(assert (=> d!18675 d!18823))

(declare-fun d!18825 () Bool)

(declare-fun res!41253 () Bool)

(declare-fun e!51526 () Bool)

(assert (=> d!18825 (=> res!41253 e!51526)))

(assert (=> d!18825 (= res!41253 (and ((_ is Cons!1490) (toList!729 call!7148)) (= (_1!1092 (h!2078 (toList!729 call!7148))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (=> d!18825 (= (containsKey!141 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) e!51526)))

(declare-fun b!78868 () Bool)

(declare-fun e!51527 () Bool)

(assert (=> b!78868 (= e!51526 e!51527)))

(declare-fun res!41254 () Bool)

(assert (=> b!78868 (=> (not res!41254) (not e!51527))))

(assert (=> b!78868 (= res!41254 (and (or (not ((_ is Cons!1490) (toList!729 call!7148))) (bvsle (_1!1092 (h!2078 (toList!729 call!7148))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))) ((_ is Cons!1490) (toList!729 call!7148)) (bvslt (_1!1092 (h!2078 (toList!729 call!7148))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(declare-fun b!78869 () Bool)

(assert (=> b!78869 (= e!51527 (containsKey!141 (t!5132 (toList!729 call!7148)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!18825 (not res!41253)) b!78868))

(assert (= (and b!78868 res!41254) b!78869))

(assert (=> b!78869 m!77885))

(declare-fun m!79501 () Bool)

(assert (=> b!78869 m!79501))

(assert (=> d!18517 d!18825))

(declare-fun d!18827 () Bool)

(declare-fun res!41255 () Bool)

(declare-fun e!51528 () Bool)

(assert (=> d!18827 (=> res!41255 e!51528)))

(assert (=> d!18827 (= res!41255 (and ((_ is Cons!1490) lt!35964) (= (_1!1092 (h!2078 lt!35964)) (_1!1092 lt!35806))))))

(assert (=> d!18827 (= (containsKey!141 lt!35964 (_1!1092 lt!35806)) e!51528)))

(declare-fun b!78870 () Bool)

(declare-fun e!51529 () Bool)

(assert (=> b!78870 (= e!51528 e!51529)))

(declare-fun res!41256 () Bool)

(assert (=> b!78870 (=> (not res!41256) (not e!51529))))

(assert (=> b!78870 (= res!41256 (and (or (not ((_ is Cons!1490) lt!35964)) (bvsle (_1!1092 (h!2078 lt!35964)) (_1!1092 lt!35806))) ((_ is Cons!1490) lt!35964) (bvslt (_1!1092 (h!2078 lt!35964)) (_1!1092 lt!35806))))))

(declare-fun b!78871 () Bool)

(assert (=> b!78871 (= e!51529 (containsKey!141 (t!5132 lt!35964) (_1!1092 lt!35806)))))

(assert (= (and d!18827 (not res!41255)) b!78870))

(assert (= (and b!78870 res!41256) b!78871))

(declare-fun m!79503 () Bool)

(assert (=> b!78871 m!79503))

(assert (=> b!78511 d!18827))

(assert (=> d!18673 d!18767))

(declare-fun d!18829 () Bool)

(assert (=> d!18829 (= (apply!79 lt!36207 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1186 (getValueByKey!138 (toList!729 lt!36207) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3345 () Bool)

(assert (= bs!3345 d!18829))

(declare-fun m!79505 () Bool)

(assert (=> bs!3345 m!79505))

(assert (=> bs!3345 m!79505))

(declare-fun m!79507 () Bool)

(assert (=> bs!3345 m!79507))

(assert (=> b!78286 d!18829))

(declare-fun d!18831 () Bool)

(assert (=> d!18831 (= ($colon$colon!68 e!51305 (ite c!12053 (h!2078 (toList!729 lt!35804)) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806)))) (Cons!1490 (ite c!12053 (h!2078 (toList!729 lt!35804)) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))) e!51305))))

(assert (=> bm!7201 d!18831))

(declare-fun d!18833 () Bool)

(assert (=> d!18833 (= (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78399 d!18833))

(declare-fun d!18835 () Bool)

(declare-fun lt!36600 () Bool)

(assert (=> d!18835 (= lt!36600 (select (content!84 lt!35952) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun e!51531 () Bool)

(assert (=> d!18835 (= lt!36600 e!51531)))

(declare-fun res!41258 () Bool)

(assert (=> d!18835 (=> (not res!41258) (not e!51531))))

(assert (=> d!18835 (= res!41258 ((_ is Cons!1490) lt!35952))))

(assert (=> d!18835 (= (contains!737 lt!35952 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))) lt!36600)))

(declare-fun b!78872 () Bool)

(declare-fun e!51530 () Bool)

(assert (=> b!78872 (= e!51531 e!51530)))

(declare-fun res!41257 () Bool)

(assert (=> b!78872 (=> res!41257 e!51530)))

(assert (=> b!78872 (= res!41257 (= (h!2078 lt!35952) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun b!78873 () Bool)

(assert (=> b!78873 (= e!51530 (contains!737 (t!5132 lt!35952) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(assert (= (and d!18835 res!41258) b!78872))

(assert (= (and b!78872 (not res!41257)) b!78873))

(declare-fun m!79509 () Bool)

(assert (=> d!18835 m!79509))

(declare-fun m!79511 () Bool)

(assert (=> d!18835 m!79511))

(declare-fun m!79513 () Bool)

(assert (=> b!78873 m!79513))

(assert (=> b!78641 d!18835))

(declare-fun d!18837 () Bool)

(assert (=> d!18837 (= (isEmpty!334 (getValueByKey!138 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))) (not ((_ is Some!143) (getValueByKey!138 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))))

(assert (=> d!18729 d!18837))

(declare-fun d!18839 () Bool)

(assert (=> d!18839 (isDefined!90 (getValueByKey!138 (toList!729 lt!35957) (_1!1092 lt!35789)))))

(declare-fun lt!36601 () Unit!2237)

(assert (=> d!18839 (= lt!36601 (choose!469 (toList!729 lt!35957) (_1!1092 lt!35789)))))

(declare-fun e!51532 () Bool)

(assert (=> d!18839 e!51532))

(declare-fun res!41259 () Bool)

(assert (=> d!18839 (=> (not res!41259) (not e!51532))))

(assert (=> d!18839 (= res!41259 (isStrictlySorted!282 (toList!729 lt!35957)))))

(assert (=> d!18839 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35957) (_1!1092 lt!35789)) lt!36601)))

(declare-fun b!78874 () Bool)

(assert (=> b!78874 (= e!51532 (containsKey!141 (toList!729 lt!35957) (_1!1092 lt!35789)))))

(assert (= (and d!18839 res!41259) b!78874))

(assert (=> d!18839 m!78151))

(assert (=> d!18839 m!78151))

(assert (=> d!18839 m!79121))

(declare-fun m!79515 () Bool)

(assert (=> d!18839 m!79515))

(declare-fun m!79517 () Bool)

(assert (=> d!18839 m!79517))

(assert (=> b!78874 m!79117))

(assert (=> b!78659 d!18839))

(declare-fun d!18841 () Bool)

(assert (=> d!18841 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35957) (_1!1092 lt!35789))) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35957) (_1!1092 lt!35789)))))))

(declare-fun bs!3346 () Bool)

(assert (= bs!3346 d!18841))

(assert (=> bs!3346 m!78151))

(declare-fun m!79519 () Bool)

(assert (=> bs!3346 m!79519))

(assert (=> b!78659 d!18841))

(assert (=> b!78659 d!18751))

(declare-fun d!18843 () Bool)

(assert (=> d!18843 (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!36602 () Unit!2237)

(assert (=> d!18843 (= lt!36602 (choose!469 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!51533 () Bool)

(assert (=> d!18843 e!51533))

(declare-fun res!41260 () Bool)

(assert (=> d!18843 (=> (not res!41260) (not e!51533))))

(assert (=> d!18843 (= res!41260 (isStrictlySorted!282 (toList!729 lt!36049)))))

(assert (=> d!18843 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36602)))

(declare-fun b!78875 () Bool)

(assert (=> b!78875 (= e!51533 (containsKey!141 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!18843 res!41260) b!78875))

(assert (=> d!18843 m!78085))

(assert (=> d!18843 m!78705))

(assert (=> d!18843 m!78705))

(assert (=> d!18843 m!79245))

(assert (=> d!18843 m!78085))

(declare-fun m!79521 () Bool)

(assert (=> d!18843 m!79521))

(declare-fun m!79523 () Bool)

(assert (=> d!18843 m!79523))

(assert (=> b!78875 m!78085))

(assert (=> b!78875 m!79241))

(assert (=> b!78742 d!18843))

(declare-fun d!18845 () Bool)

(assert (=> d!18845 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3347 () Bool)

(assert (= bs!3347 d!18845))

(assert (=> bs!3347 m!78705))

(declare-fun m!79525 () Bool)

(assert (=> bs!3347 m!79525))

(assert (=> b!78742 d!18845))

(declare-fun b!78876 () Bool)

(declare-fun e!51534 () Option!144)

(assert (=> b!78876 (= e!51534 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36049)))))))

(declare-fun b!78877 () Bool)

(declare-fun e!51535 () Option!144)

(assert (=> b!78877 (= e!51534 e!51535)))

(declare-fun c!12158 () Bool)

(assert (=> b!78877 (= c!12158 (and ((_ is Cons!1490) (toList!729 lt!36049)) (not (= (_1!1092 (h!2078 (toList!729 lt!36049))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!78879 () Bool)

(assert (=> b!78879 (= e!51535 None!142)))

(declare-fun b!78878 () Bool)

(assert (=> b!78878 (= e!51535 (getValueByKey!138 (t!5132 (toList!729 lt!36049)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!18847 () Bool)

(declare-fun c!12157 () Bool)

(assert (=> d!18847 (= c!12157 (and ((_ is Cons!1490) (toList!729 lt!36049)) (= (_1!1092 (h!2078 (toList!729 lt!36049))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18847 (= (getValueByKey!138 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!51534)))

(assert (= (and d!18847 c!12157) b!78876))

(assert (= (and d!18847 (not c!12157)) b!78877))

(assert (= (and b!78877 c!12158) b!78878))

(assert (= (and b!78877 (not c!12158)) b!78879))

(assert (=> b!78878 m!78085))

(declare-fun m!79527 () Bool)

(assert (=> b!78878 m!79527))

(assert (=> b!78742 d!18847))

(declare-fun d!18849 () Bool)

(declare-fun c!12161 () Bool)

(assert (=> d!18849 (= c!12161 ((_ is Nil!1491) (toList!729 lt!35957)))))

(declare-fun e!51538 () (InoxSet tuple2!2162))

(assert (=> d!18849 (= (content!84 (toList!729 lt!35957)) e!51538)))

(declare-fun b!78884 () Bool)

(assert (=> b!78884 (= e!51538 ((as const (Array tuple2!2162 Bool)) false))))

(declare-fun b!78885 () Bool)

(assert (=> b!78885 (= e!51538 ((_ map or) (store ((as const (Array tuple2!2162 Bool)) false) (h!2078 (toList!729 lt!35957)) true) (content!84 (t!5132 (toList!729 lt!35957)))))))

(assert (= (and d!18849 c!12161) b!78884))

(assert (= (and d!18849 (not c!12161)) b!78885))

(declare-fun m!79529 () Bool)

(assert (=> b!78885 m!79529))

(declare-fun m!79531 () Bool)

(assert (=> b!78885 m!79531))

(assert (=> d!18611 d!18849))

(assert (=> bm!7219 d!18539))

(declare-fun d!18851 () Bool)

(declare-fun res!41261 () Bool)

(declare-fun e!51539 () Bool)

(assert (=> d!18851 (=> res!41261 e!51539)))

(assert (=> d!18851 (= res!41261 (and ((_ is Cons!1490) (toList!729 lt!35973)) (= (_1!1092 (h!2078 (toList!729 lt!35973))) (_1!1092 lt!35789))))))

(assert (=> d!18851 (= (containsKey!141 (toList!729 lt!35973) (_1!1092 lt!35789)) e!51539)))

(declare-fun b!78886 () Bool)

(declare-fun e!51540 () Bool)

(assert (=> b!78886 (= e!51539 e!51540)))

(declare-fun res!41262 () Bool)

(assert (=> b!78886 (=> (not res!41262) (not e!51540))))

(assert (=> b!78886 (= res!41262 (and (or (not ((_ is Cons!1490) (toList!729 lt!35973))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35973))) (_1!1092 lt!35789))) ((_ is Cons!1490) (toList!729 lt!35973)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35973))) (_1!1092 lt!35789))))))

(declare-fun b!78887 () Bool)

(assert (=> b!78887 (= e!51540 (containsKey!141 (t!5132 (toList!729 lt!35973)) (_1!1092 lt!35789)))))

(assert (= (and d!18851 (not res!41261)) b!78886))

(assert (= (and b!78886 res!41262) b!78887))

(declare-fun m!79533 () Bool)

(assert (=> b!78887 m!79533))

(assert (=> d!18627 d!18851))

(declare-fun d!18853 () Bool)

(declare-fun res!41263 () Bool)

(declare-fun e!51541 () Bool)

(assert (=> d!18853 (=> res!41263 e!51541)))

(assert (=> d!18853 (= res!41263 (or ((_ is Nil!1491) lt!36300) ((_ is Nil!1491) (t!5132 lt!36300))))))

(assert (=> d!18853 (= (isStrictlySorted!282 lt!36300) e!51541)))

(declare-fun b!78888 () Bool)

(declare-fun e!51542 () Bool)

(assert (=> b!78888 (= e!51541 e!51542)))

(declare-fun res!41264 () Bool)

(assert (=> b!78888 (=> (not res!41264) (not e!51542))))

(assert (=> b!78888 (= res!41264 (bvslt (_1!1092 (h!2078 lt!36300)) (_1!1092 (h!2078 (t!5132 lt!36300)))))))

(declare-fun b!78889 () Bool)

(assert (=> b!78889 (= e!51542 (isStrictlySorted!282 (t!5132 lt!36300)))))

(assert (= (and d!18853 (not res!41263)) b!78888))

(assert (= (and b!78888 res!41264) b!78889))

(declare-fun m!79535 () Bool)

(assert (=> b!78889 m!79535))

(assert (=> d!18623 d!18853))

(declare-fun d!18855 () Bool)

(declare-fun res!41265 () Bool)

(declare-fun e!51543 () Bool)

(assert (=> d!18855 (=> res!41265 e!51543)))

(assert (=> d!18855 (= res!41265 (or ((_ is Nil!1491) (toList!729 lt!35804)) ((_ is Nil!1491) (t!5132 (toList!729 lt!35804)))))))

(assert (=> d!18855 (= (isStrictlySorted!282 (toList!729 lt!35804)) e!51543)))

(declare-fun b!78890 () Bool)

(declare-fun e!51544 () Bool)

(assert (=> b!78890 (= e!51543 e!51544)))

(declare-fun res!41266 () Bool)

(assert (=> b!78890 (=> (not res!41266) (not e!51544))))

(assert (=> b!78890 (= res!41266 (bvslt (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 (h!2078 (t!5132 (toList!729 lt!35804))))))))

(declare-fun b!78891 () Bool)

(assert (=> b!78891 (= e!51544 (isStrictlySorted!282 (t!5132 (toList!729 lt!35804))))))

(assert (= (and d!18855 (not res!41265)) b!78890))

(assert (= (and b!78890 res!41266) b!78891))

(declare-fun m!79537 () Bool)

(assert (=> b!78891 m!79537))

(assert (=> d!18623 d!18855))

(declare-fun d!18857 () Bool)

(declare-fun e!51546 () Bool)

(assert (=> d!18857 e!51546))

(declare-fun res!41267 () Bool)

(assert (=> d!18857 (=> res!41267 e!51546)))

(declare-fun lt!36604 () Bool)

(assert (=> d!18857 (= res!41267 (not lt!36604))))

(declare-fun lt!36606 () Bool)

(assert (=> d!18857 (= lt!36604 lt!36606)))

(declare-fun lt!36605 () Unit!2237)

(declare-fun e!51545 () Unit!2237)

(assert (=> d!18857 (= lt!36605 e!51545)))

(declare-fun c!12162 () Bool)

(assert (=> d!18857 (= c!12162 lt!36606)))

(assert (=> d!18857 (= lt!36606 (containsKey!141 (toList!729 lt!36166) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18857 (= (contains!736 lt!36166 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36604)))

(declare-fun b!78892 () Bool)

(declare-fun lt!36603 () Unit!2237)

(assert (=> b!78892 (= e!51545 lt!36603)))

(assert (=> b!78892 (= lt!36603 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36166) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> b!78892 (isDefined!90 (getValueByKey!138 (toList!729 lt!36166) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!78893 () Bool)

(declare-fun Unit!2276 () Unit!2237)

(assert (=> b!78893 (= e!51545 Unit!2276)))

(declare-fun b!78894 () Bool)

(assert (=> b!78894 (= e!51546 (isDefined!90 (getValueByKey!138 (toList!729 lt!36166) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (= (and d!18857 c!12162) b!78892))

(assert (= (and d!18857 (not c!12162)) b!78893))

(assert (= (and d!18857 (not res!41267)) b!78894))

(declare-fun m!79539 () Bool)

(assert (=> d!18857 m!79539))

(declare-fun m!79541 () Bool)

(assert (=> b!78892 m!79541))

(assert (=> b!78892 m!78405))

(assert (=> b!78892 m!78405))

(declare-fun m!79543 () Bool)

(assert (=> b!78892 m!79543))

(assert (=> b!78894 m!78405))

(assert (=> b!78894 m!78405))

(assert (=> b!78894 m!79543))

(assert (=> d!18525 d!18857))

(declare-fun b!78895 () Bool)

(declare-fun e!51547 () Option!144)

(assert (=> b!78895 (= e!51547 (Some!143 (_2!1092 (h!2078 lt!36165))))))

(declare-fun b!78896 () Bool)

(declare-fun e!51548 () Option!144)

(assert (=> b!78896 (= e!51547 e!51548)))

(declare-fun c!12164 () Bool)

(assert (=> b!78896 (= c!12164 (and ((_ is Cons!1490) lt!36165) (not (= (_1!1092 (h!2078 lt!36165)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!78898 () Bool)

(assert (=> b!78898 (= e!51548 None!142)))

(declare-fun b!78897 () Bool)

(assert (=> b!78897 (= e!51548 (getValueByKey!138 (t!5132 lt!36165) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun c!12163 () Bool)

(declare-fun d!18859 () Bool)

(assert (=> d!18859 (= c!12163 (and ((_ is Cons!1490) lt!36165) (= (_1!1092 (h!2078 lt!36165)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!18859 (= (getValueByKey!138 lt!36165 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) e!51547)))

(assert (= (and d!18859 c!12163) b!78895))

(assert (= (and d!18859 (not c!12163)) b!78896))

(assert (= (and b!78896 c!12164) b!78897))

(assert (= (and b!78896 (not c!12164)) b!78898))

(declare-fun m!79545 () Bool)

(assert (=> b!78897 m!79545))

(assert (=> d!18525 d!18859))

(declare-fun d!18861 () Bool)

(assert (=> d!18861 (= (getValueByKey!138 lt!36165 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36607 () Unit!2237)

(assert (=> d!18861 (= lt!36607 (choose!468 lt!36165 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun e!51549 () Bool)

(assert (=> d!18861 e!51549))

(declare-fun res!41268 () Bool)

(assert (=> d!18861 (=> (not res!41268) (not e!51549))))

(assert (=> d!18861 (= res!41268 (isStrictlySorted!282 lt!36165))))

(assert (=> d!18861 (= (lemmaContainsTupThenGetReturnValue!55 lt!36165 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36607)))

(declare-fun b!78899 () Bool)

(declare-fun res!41269 () Bool)

(assert (=> b!78899 (=> (not res!41269) (not e!51549))))

(assert (=> b!78899 (= res!41269 (containsKey!141 lt!36165 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!78900 () Bool)

(assert (=> b!78900 (= e!51549 (contains!737 lt!36165 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (= (and d!18861 res!41268) b!78899))

(assert (= (and b!78899 res!41269) b!78900))

(assert (=> d!18861 m!78399))

(declare-fun m!79547 () Bool)

(assert (=> d!18861 m!79547))

(declare-fun m!79549 () Bool)

(assert (=> d!18861 m!79549))

(declare-fun m!79551 () Bool)

(assert (=> b!78899 m!79551))

(declare-fun m!79553 () Bool)

(assert (=> b!78900 m!79553))

(assert (=> d!18525 d!18861))

(declare-fun b!78901 () Bool)

(declare-fun e!51552 () List!1494)

(declare-fun e!51550 () List!1494)

(assert (=> b!78901 (= e!51552 e!51550)))

(declare-fun c!12166 () Bool)

(assert (=> b!78901 (= c!12166 (and ((_ is Cons!1490) (toList!729 lt!35791)) (= (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!78902 () Bool)

(declare-fun c!12165 () Bool)

(assert (=> b!78902 (= c!12165 (and ((_ is Cons!1490) (toList!729 lt!35791)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun e!51554 () List!1494)

(assert (=> b!78902 (= e!51550 e!51554)))

(declare-fun b!78903 () Bool)

(declare-fun call!7248 () List!1494)

(assert (=> b!78903 (= e!51554 call!7248)))

(declare-fun b!78904 () Bool)

(declare-fun call!7250 () List!1494)

(assert (=> b!78904 (= e!51550 call!7250)))

(declare-fun bm!7246 () Bool)

(assert (=> bm!7246 (= call!7248 call!7250)))

(declare-fun e!51553 () List!1494)

(declare-fun b!78905 () Bool)

(assert (=> b!78905 (= e!51553 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35791)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!78906 () Bool)

(declare-fun call!7249 () List!1494)

(assert (=> b!78906 (= e!51552 call!7249)))

(declare-fun b!78907 () Bool)

(assert (=> b!78907 (= e!51553 (ite c!12166 (t!5132 (toList!729 lt!35791)) (ite c!12165 (Cons!1490 (h!2078 (toList!729 lt!35791)) (t!5132 (toList!729 lt!35791))) Nil!1491)))))

(declare-fun d!18863 () Bool)

(declare-fun e!51551 () Bool)

(assert (=> d!18863 e!51551))

(declare-fun res!41271 () Bool)

(assert (=> d!18863 (=> (not res!41271) (not e!51551))))

(declare-fun lt!36608 () List!1494)

(assert (=> d!18863 (= res!41271 (isStrictlySorted!282 lt!36608))))

(assert (=> d!18863 (= lt!36608 e!51552)))

(declare-fun c!12168 () Bool)

(assert (=> d!18863 (= c!12168 (and ((_ is Cons!1490) (toList!729 lt!35791)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!18863 (isStrictlySorted!282 (toList!729 lt!35791))))

(assert (=> d!18863 (= (insertStrictlySorted!58 (toList!729 lt!35791) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36608)))

(declare-fun bm!7245 () Bool)

(assert (=> bm!7245 (= call!7250 call!7249)))

(declare-fun b!78908 () Bool)

(declare-fun res!41270 () Bool)

(assert (=> b!78908 (=> (not res!41270) (not e!51551))))

(assert (=> b!78908 (= res!41270 (containsKey!141 lt!36608 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!78909 () Bool)

(assert (=> b!78909 (= e!51554 call!7248)))

(declare-fun b!78910 () Bool)

(assert (=> b!78910 (= e!51551 (contains!737 lt!36608 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun bm!7247 () Bool)

(assert (=> bm!7247 (= call!7249 ($colon$colon!68 e!51553 (ite c!12168 (h!2078 (toList!729 lt!35791)) (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun c!12167 () Bool)

(assert (=> bm!7247 (= c!12167 c!12168)))

(assert (= (and d!18863 c!12168) b!78906))

(assert (= (and d!18863 (not c!12168)) b!78901))

(assert (= (and b!78901 c!12166) b!78904))

(assert (= (and b!78901 (not c!12166)) b!78902))

(assert (= (and b!78902 c!12165) b!78909))

(assert (= (and b!78902 (not c!12165)) b!78903))

(assert (= (or b!78909 b!78903) bm!7246))

(assert (= (or b!78904 bm!7246) bm!7245))

(assert (= (or b!78906 bm!7245) bm!7247))

(assert (= (and bm!7247 c!12167) b!78905))

(assert (= (and bm!7247 (not c!12167)) b!78907))

(assert (= (and d!18863 res!41271) b!78908))

(assert (= (and b!78908 res!41270) b!78910))

(declare-fun m!79555 () Bool)

(assert (=> b!78910 m!79555))

(declare-fun m!79557 () Bool)

(assert (=> b!78905 m!79557))

(declare-fun m!79559 () Bool)

(assert (=> b!78908 m!79559))

(declare-fun m!79561 () Bool)

(assert (=> d!18863 m!79561))

(assert (=> d!18863 m!78961))

(declare-fun m!79563 () Bool)

(assert (=> bm!7247 m!79563))

(assert (=> d!18525 d!18863))

(declare-fun d!18865 () Bool)

(declare-fun res!41272 () Bool)

(declare-fun e!51555 () Bool)

(assert (=> d!18865 (=> res!41272 e!51555)))

(assert (=> d!18865 (= res!41272 (or ((_ is Nil!1491) lt!36341) ((_ is Nil!1491) (t!5132 lt!36341))))))

(assert (=> d!18865 (= (isStrictlySorted!282 lt!36341) e!51555)))

(declare-fun b!78911 () Bool)

(declare-fun e!51556 () Bool)

(assert (=> b!78911 (= e!51555 e!51556)))

(declare-fun res!41273 () Bool)

(assert (=> b!78911 (=> (not res!41273) (not e!51556))))

(assert (=> b!78911 (= res!41273 (bvslt (_1!1092 (h!2078 lt!36341)) (_1!1092 (h!2078 (t!5132 lt!36341)))))))

(declare-fun b!78912 () Bool)

(assert (=> b!78912 (= e!51556 (isStrictlySorted!282 (t!5132 lt!36341)))))

(assert (= (and d!18865 (not res!41272)) b!78911))

(assert (= (and b!78911 res!41273) b!78912))

(declare-fun m!79565 () Bool)

(assert (=> b!78912 m!79565))

(assert (=> d!18669 d!18865))

(declare-fun d!18867 () Bool)

(declare-fun res!41274 () Bool)

(declare-fun e!51557 () Bool)

(assert (=> d!18867 (=> res!41274 e!51557)))

(assert (=> d!18867 (= res!41274 (or ((_ is Nil!1491) (toList!729 lt!35791)) ((_ is Nil!1491) (t!5132 (toList!729 lt!35791)))))))

(assert (=> d!18867 (= (isStrictlySorted!282 (toList!729 lt!35791)) e!51557)))

(declare-fun b!78913 () Bool)

(declare-fun e!51558 () Bool)

(assert (=> b!78913 (= e!51557 e!51558)))

(declare-fun res!41275 () Bool)

(assert (=> b!78913 (=> (not res!41275) (not e!51558))))

(assert (=> b!78913 (= res!41275 (bvslt (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 (h!2078 (t!5132 (toList!729 lt!35791))))))))

(declare-fun b!78914 () Bool)

(assert (=> b!78914 (= e!51558 (isStrictlySorted!282 (t!5132 (toList!729 lt!35791))))))

(assert (= (and d!18867 (not res!41274)) b!78913))

(assert (= (and b!78913 res!41275) b!78914))

(declare-fun m!79567 () Bool)

(assert (=> b!78914 m!79567))

(assert (=> d!18669 d!18867))

(declare-fun d!18869 () Bool)

(declare-fun e!51560 () Bool)

(assert (=> d!18869 e!51560))

(declare-fun res!41276 () Bool)

(assert (=> d!18869 (=> res!41276 e!51560)))

(declare-fun lt!36610 () Bool)

(assert (=> d!18869 (= res!41276 (not lt!36610))))

(declare-fun lt!36612 () Bool)

(assert (=> d!18869 (= lt!36610 lt!36612)))

(declare-fun lt!36611 () Unit!2237)

(declare-fun e!51559 () Unit!2237)

(assert (=> d!18869 (= lt!36611 e!51559)))

(declare-fun c!12169 () Bool)

(assert (=> d!18869 (= c!12169 lt!36612)))

(assert (=> d!18869 (= lt!36612 (containsKey!141 (toList!729 (getCurrentListMap!425 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)))))))

(assert (=> d!18869 (= (contains!736 (getCurrentListMap!425 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)))) lt!36610)))

(declare-fun b!78915 () Bool)

(declare-fun lt!36609 () Unit!2237)

(assert (=> b!78915 (= e!51559 lt!36609)))

(assert (=> b!78915 (= lt!36609 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (getCurrentListMap!425 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)))))))

(assert (=> b!78915 (isDefined!90 (getValueByKey!138 (toList!729 (getCurrentListMap!425 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)))))))

(declare-fun b!78916 () Bool)

(declare-fun Unit!2277 () Unit!2237)

(assert (=> b!78916 (= e!51559 Unit!2277)))

(declare-fun b!78917 () Bool)

(assert (=> b!78917 (= e!51560 (isDefined!90 (getValueByKey!138 (toList!729 (getCurrentListMap!425 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))))))))

(assert (= (and d!18869 c!12169) b!78915))

(assert (= (and d!18869 (not c!12169)) b!78916))

(assert (= (and d!18869 (not res!41276)) b!78917))

(assert (=> d!18869 m!78985))

(declare-fun m!79569 () Bool)

(assert (=> d!18869 m!79569))

(assert (=> b!78915 m!78985))

(declare-fun m!79571 () Bool)

(assert (=> b!78915 m!79571))

(assert (=> b!78915 m!78985))

(declare-fun m!79573 () Bool)

(assert (=> b!78915 m!79573))

(assert (=> b!78915 m!79573))

(declare-fun m!79575 () Bool)

(assert (=> b!78915 m!79575))

(assert (=> b!78917 m!78985))

(assert (=> b!78917 m!79573))

(assert (=> b!78917 m!79573))

(assert (=> b!78917 m!79575))

(assert (=> d!18671 d!18869))

(declare-fun d!18871 () Bool)

(assert (=> d!18871 (= (arrayCountValidKeys!0 lt!36422 (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (bvadd (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!36615 () Unit!2237)

(declare-fun choose!2 (array!3957 (_ BitVec 32)) Unit!2237)

(assert (=> d!18871 (= lt!36615 (choose!2 lt!36422 (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))))))

(declare-fun e!51563 () Bool)

(assert (=> d!18871 e!51563))

(declare-fun res!41281 () Bool)

(assert (=> d!18871 (=> (not res!41281) (not e!51563))))

(assert (=> d!18871 (= res!41281 (and (bvsge (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000000) (bvslt (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (size!2127 lt!36422))))))

(assert (=> d!18871 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!36422 (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))) lt!36615)))

(declare-fun b!78922 () Bool)

(declare-fun res!41282 () Bool)

(assert (=> b!78922 (=> (not res!41282) (not e!51563))))

(assert (=> b!78922 (= res!41282 (validKeyInArray!0 (select (arr!1886 lt!36422) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)))))))

(declare-fun b!78923 () Bool)

(assert (=> b!78923 (= e!51563 (bvslt (size!2127 lt!36422) #b01111111111111111111111111111111))))

(assert (= (and d!18871 res!41281) b!78922))

(assert (= (and b!78922 res!41282) b!78923))

(assert (=> d!18871 m!79017))

(declare-fun m!79577 () Bool)

(assert (=> d!18871 m!79577))

(declare-fun m!79579 () Bool)

(assert (=> b!78922 m!79579))

(assert (=> b!78922 m!79579))

(declare-fun m!79581 () Bool)

(assert (=> b!78922 m!79581))

(assert (=> d!18671 d!18871))

(declare-fun b!78932 () Bool)

(declare-fun res!41291 () Bool)

(declare-fun e!51569 () Bool)

(assert (=> b!78932 (=> (not res!41291) (not e!51569))))

(assert (=> b!78932 (= res!41291 (not (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))))))))

(declare-fun e!51568 () Bool)

(declare-fun b!78935 () Bool)

(assert (=> b!78935 (= e!51568 (= (arrayCountValidKeys!0 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3931 newMap!16) #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!78934 () Bool)

(assert (=> b!78934 (= e!51569 (bvslt (size!2127 (_keys!3931 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!18873 () Bool)

(assert (=> d!18873 e!51568))

(declare-fun res!41293 () Bool)

(assert (=> d!18873 (=> (not res!41293) (not e!51568))))

(assert (=> d!18873 (= res!41293 (and (bvsge (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000000) (bvslt (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (size!2127 (_keys!3931 newMap!16)))))))

(declare-fun lt!36618 () Unit!2237)

(declare-fun choose!1 (array!3957 (_ BitVec 32) (_ BitVec 64)) Unit!2237)

(assert (=> d!18873 (= lt!36618 (choose!1 (_keys!3931 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!18873 e!51569))

(declare-fun res!41294 () Bool)

(assert (=> d!18873 (=> (not res!41294) (not e!51569))))

(assert (=> d!18873 (= res!41294 (and (bvsge (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000000) (bvslt (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (size!2127 (_keys!3931 newMap!16)))))))

(assert (=> d!18873 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3931 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) lt!36618)))

(declare-fun b!78933 () Bool)

(declare-fun res!41292 () Bool)

(assert (=> b!78933 (=> (not res!41292) (not e!51569))))

(assert (=> b!78933 (= res!41292 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!18873 res!41294) b!78932))

(assert (= (and b!78932 res!41291) b!78933))

(assert (= (and b!78933 res!41292) b!78934))

(assert (= (and d!18873 res!41293) b!78935))

(declare-fun m!79583 () Bool)

(assert (=> b!78932 m!79583))

(assert (=> b!78932 m!79583))

(declare-fun m!79585 () Bool)

(assert (=> b!78932 m!79585))

(assert (=> b!78935 m!78997))

(assert (=> b!78935 m!79003))

(assert (=> b!78935 m!78335))

(assert (=> d!18873 m!77885))

(declare-fun m!79587 () Bool)

(assert (=> d!18873 m!79587))

(assert (=> b!78933 m!77885))

(assert (=> b!78933 m!78215))

(assert (=> d!18671 d!18873))

(declare-fun d!18875 () Bool)

(declare-fun e!51570 () Bool)

(assert (=> d!18875 e!51570))

(declare-fun res!41295 () Bool)

(assert (=> d!18875 (=> (not res!41295) (not e!51570))))

(declare-fun lt!36620 () ListLongMap!1427)

(assert (=> d!18875 (= res!41295 (contains!736 lt!36620 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36619 () List!1494)

(assert (=> d!18875 (= lt!36620 (ListLongMap!1428 lt!36619))))

(declare-fun lt!36621 () Unit!2237)

(declare-fun lt!36622 () Unit!2237)

(assert (=> d!18875 (= lt!36621 lt!36622)))

(assert (=> d!18875 (= (getValueByKey!138 lt!36619 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18875 (= lt!36622 (lemmaContainsTupThenGetReturnValue!55 lt!36619 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18875 (= lt!36619 (insertStrictlySorted!58 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!18875 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36620)))

(declare-fun b!78936 () Bool)

(declare-fun res!41296 () Bool)

(assert (=> b!78936 (=> (not res!41296) (not e!51570))))

(assert (=> b!78936 (= res!41296 (= (getValueByKey!138 (toList!729 lt!36620) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!78937 () Bool)

(assert (=> b!78937 (= e!51570 (contains!737 (toList!729 lt!36620) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!18875 res!41295) b!78936))

(assert (= (and b!78936 res!41296) b!78937))

(declare-fun m!79589 () Bool)

(assert (=> d!18875 m!79589))

(declare-fun m!79591 () Bool)

(assert (=> d!18875 m!79591))

(declare-fun m!79593 () Bool)

(assert (=> d!18875 m!79593))

(declare-fun m!79595 () Bool)

(assert (=> d!18875 m!79595))

(declare-fun m!79597 () Bool)

(assert (=> b!78936 m!79597))

(declare-fun m!79599 () Bool)

(assert (=> b!78937 m!79599))

(assert (=> d!18671 d!18875))

(declare-fun d!18877 () Bool)

(declare-fun e!51572 () Bool)

(assert (=> d!18877 e!51572))

(declare-fun res!41297 () Bool)

(assert (=> d!18877 (=> res!41297 e!51572)))

(declare-fun lt!36624 () Bool)

(assert (=> d!18877 (= res!41297 (not lt!36624))))

(declare-fun lt!36626 () Bool)

(assert (=> d!18877 (= lt!36624 lt!36626)))

(declare-fun lt!36625 () Unit!2237)

(declare-fun e!51571 () Unit!2237)

(assert (=> d!18877 (= lt!36625 e!51571)))

(declare-fun c!12170 () Bool)

(assert (=> d!18877 (= c!12170 lt!36626)))

(assert (=> d!18877 (= lt!36626 (containsKey!141 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!18877 (= (contains!736 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) lt!36624)))

(declare-fun b!78938 () Bool)

(declare-fun lt!36623 () Unit!2237)

(assert (=> b!78938 (= e!51571 lt!36623)))

(assert (=> b!78938 (= lt!36623 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> b!78938 (isDefined!90 (getValueByKey!138 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!78939 () Bool)

(declare-fun Unit!2278 () Unit!2237)

(assert (=> b!78939 (= e!51571 Unit!2278)))

(declare-fun b!78940 () Bool)

(assert (=> b!78940 (= e!51572 (isDefined!90 (getValueByKey!138 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (= (and d!18877 c!12170) b!78938))

(assert (= (and d!18877 (not c!12170)) b!78939))

(assert (= (and d!18877 (not res!41297)) b!78940))

(assert (=> d!18877 m!77885))

(declare-fun m!79601 () Bool)

(assert (=> d!18877 m!79601))

(assert (=> b!78938 m!77885))

(declare-fun m!79603 () Bool)

(assert (=> b!78938 m!79603))

(assert (=> b!78938 m!77885))

(declare-fun m!79605 () Bool)

(assert (=> b!78938 m!79605))

(assert (=> b!78938 m!79605))

(declare-fun m!79607 () Bool)

(assert (=> b!78938 m!79607))

(assert (=> b!78940 m!77885))

(assert (=> b!78940 m!79605))

(assert (=> b!78940 m!79605))

(assert (=> b!78940 m!79607))

(assert (=> d!18671 d!18877))

(assert (=> d!18671 d!18541))

(assert (=> d!18671 d!18509))

(declare-fun d!18879 () Bool)

(declare-fun e!51575 () Bool)

(assert (=> d!18879 e!51575))

(declare-fun res!41300 () Bool)

(assert (=> d!18879 (=> (not res!41300) (not e!51575))))

(assert (=> d!18879 (= res!41300 (and (bvsge (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000000) (bvslt (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (size!2127 (_keys!3931 newMap!16)))))))

(declare-fun lt!36629 () Unit!2237)

(declare-fun choose!102 ((_ BitVec 64) array!3957 (_ BitVec 32) (_ BitVec 32)) Unit!2237)

(assert (=> d!18879 (= lt!36629 (choose!102 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (mask!6267 newMap!16)))))

(assert (=> d!18879 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18879 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (mask!6267 newMap!16)) lt!36629)))

(declare-fun b!78943 () Bool)

(assert (=> b!78943 (= e!51575 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (mask!6267 newMap!16)))))

(assert (= (and d!18879 res!41300) b!78943))

(assert (=> d!18879 m!77885))

(declare-fun m!79609 () Bool)

(assert (=> d!18879 m!79609))

(assert (=> d!18879 m!78355))

(assert (=> b!78943 m!78997))

(assert (=> b!78943 m!78999))

(assert (=> d!18671 d!18879))

(declare-fun b!78944 () Bool)

(declare-fun e!51582 () ListLongMap!1427)

(declare-fun call!7253 () ListLongMap!1427)

(assert (=> b!78944 (= e!51582 call!7253)))

(declare-fun b!78945 () Bool)

(declare-fun e!51583 () ListLongMap!1427)

(declare-fun call!7256 () ListLongMap!1427)

(assert (=> b!78945 (= e!51583 (+!100 call!7256 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun e!51585 () Bool)

(declare-fun b!78947 () Bool)

(assert (=> b!78947 (= e!51585 (validKeyInArray!0 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7248 () Bool)

(declare-fun call!7255 () Bool)

(declare-fun lt!36650 () ListLongMap!1427)

(assert (=> bm!7248 (= call!7255 (contains!736 lt!36650 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78948 () Bool)

(declare-fun e!51576 () Bool)

(declare-fun e!51587 () Bool)

(assert (=> b!78948 (= e!51576 e!51587)))

(declare-fun c!12171 () Bool)

(assert (=> b!78948 (= c!12171 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78949 () Bool)

(declare-fun e!51579 () Unit!2237)

(declare-fun Unit!2279 () Unit!2237)

(assert (=> b!78949 (= e!51579 Unit!2279)))

(declare-fun b!78950 () Bool)

(declare-fun res!41306 () Bool)

(assert (=> b!78950 (=> (not res!41306) (not e!51576))))

(declare-fun e!51588 () Bool)

(assert (=> b!78950 (= res!41306 e!51588)))

(declare-fun c!12173 () Bool)

(assert (=> b!78950 (= c!12173 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78951 () Bool)

(declare-fun lt!36638 () Unit!2237)

(assert (=> b!78951 (= e!51579 lt!36638)))

(declare-fun lt!36644 () ListLongMap!1427)

(assert (=> b!78951 (= lt!36644 (getCurrentListMapNoExtraKeys!65 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36641 () (_ BitVec 64))

(assert (=> b!78951 (= lt!36641 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36642 () (_ BitVec 64))

(assert (=> b!78951 (= lt!36642 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36651 () Unit!2237)

(assert (=> b!78951 (= lt!36651 (addStillContains!55 lt!36644 lt!36641 (zeroValue!2169 newMap!16) lt!36642))))

(assert (=> b!78951 (contains!736 (+!100 lt!36644 (tuple2!2163 lt!36641 (zeroValue!2169 newMap!16))) lt!36642)))

(declare-fun lt!36630 () Unit!2237)

(assert (=> b!78951 (= lt!36630 lt!36651)))

(declare-fun lt!36640 () ListLongMap!1427)

(assert (=> b!78951 (= lt!36640 (getCurrentListMapNoExtraKeys!65 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36647 () (_ BitVec 64))

(assert (=> b!78951 (= lt!36647 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36645 () (_ BitVec 64))

(assert (=> b!78951 (= lt!36645 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36648 () Unit!2237)

(assert (=> b!78951 (= lt!36648 (addApplyDifferent!55 lt!36640 lt!36647 (minValue!2169 newMap!16) lt!36645))))

(assert (=> b!78951 (= (apply!79 (+!100 lt!36640 (tuple2!2163 lt!36647 (minValue!2169 newMap!16))) lt!36645) (apply!79 lt!36640 lt!36645))))

(declare-fun lt!36633 () Unit!2237)

(assert (=> b!78951 (= lt!36633 lt!36648)))

(declare-fun lt!36643 () ListLongMap!1427)

(assert (=> b!78951 (= lt!36643 (getCurrentListMapNoExtraKeys!65 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36646 () (_ BitVec 64))

(assert (=> b!78951 (= lt!36646 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36636 () (_ BitVec 64))

(assert (=> b!78951 (= lt!36636 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36631 () Unit!2237)

(assert (=> b!78951 (= lt!36631 (addApplyDifferent!55 lt!36643 lt!36646 (zeroValue!2169 newMap!16) lt!36636))))

(assert (=> b!78951 (= (apply!79 (+!100 lt!36643 (tuple2!2163 lt!36646 (zeroValue!2169 newMap!16))) lt!36636) (apply!79 lt!36643 lt!36636))))

(declare-fun lt!36649 () Unit!2237)

(assert (=> b!78951 (= lt!36649 lt!36631)))

(declare-fun lt!36637 () ListLongMap!1427)

(assert (=> b!78951 (= lt!36637 (getCurrentListMapNoExtraKeys!65 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36635 () (_ BitVec 64))

(assert (=> b!78951 (= lt!36635 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36634 () (_ BitVec 64))

(assert (=> b!78951 (= lt!36634 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!78951 (= lt!36638 (addApplyDifferent!55 lt!36637 lt!36635 (minValue!2169 newMap!16) lt!36634))))

(assert (=> b!78951 (= (apply!79 (+!100 lt!36637 (tuple2!2163 lt!36635 (minValue!2169 newMap!16))) lt!36634) (apply!79 lt!36637 lt!36634))))

(declare-fun b!78952 () Bool)

(declare-fun e!51577 () Bool)

(assert (=> b!78952 (= e!51587 e!51577)))

(declare-fun res!41303 () Bool)

(assert (=> b!78952 (= res!41303 call!7255)))

(assert (=> b!78952 (=> (not res!41303) (not e!51577))))

(declare-fun bm!7249 () Bool)

(declare-fun call!7257 () ListLongMap!1427)

(assert (=> bm!7249 (= call!7253 call!7257)))

(declare-fun call!7254 () ListLongMap!1427)

(declare-fun bm!7250 () Bool)

(assert (=> bm!7250 (= call!7254 (getCurrentListMapNoExtraKeys!65 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78953 () Bool)

(assert (=> b!78953 (= e!51587 (not call!7255))))

(declare-fun b!78954 () Bool)

(declare-fun call!7251 () Bool)

(assert (=> b!78954 (= e!51588 (not call!7251))))

(declare-fun bm!7251 () Bool)

(declare-fun c!12174 () Bool)

(declare-fun c!12176 () Bool)

(assert (=> bm!7251 (= call!7256 (+!100 (ite c!12176 call!7254 (ite c!12174 call!7257 call!7253)) (ite (or c!12176 c!12174) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!78955 () Bool)

(assert (=> b!78955 (= e!51577 (= (apply!79 lt!36650 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(declare-fun b!78956 () Bool)

(declare-fun res!41305 () Bool)

(assert (=> b!78956 (=> (not res!41305) (not e!51576))))

(declare-fun e!51584 () Bool)

(assert (=> b!78956 (= res!41305 e!51584)))

(declare-fun res!41307 () Bool)

(assert (=> b!78956 (=> res!41307 e!51584)))

(declare-fun e!51580 () Bool)

(assert (=> b!78956 (= res!41307 (not e!51580))))

(declare-fun res!41304 () Bool)

(assert (=> b!78956 (=> (not res!41304) (not e!51580))))

(assert (=> b!78956 (= res!41304 (bvslt #b00000000000000000000000000000000 (size!2127 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))))

(declare-fun b!78957 () Bool)

(assert (=> b!78957 (= e!51580 (validKeyInArray!0 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!18881 () Bool)

(assert (=> d!18881 e!51576))

(declare-fun res!41309 () Bool)

(assert (=> d!18881 (=> (not res!41309) (not e!51576))))

(assert (=> d!18881 (= res!41309 (or (bvsge #b00000000000000000000000000000000 (size!2127 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))))))

(declare-fun lt!36639 () ListLongMap!1427)

(assert (=> d!18881 (= lt!36650 lt!36639)))

(declare-fun lt!36632 () Unit!2237)

(assert (=> d!18881 (= lt!36632 e!51579)))

(declare-fun c!12175 () Bool)

(assert (=> d!18881 (= c!12175 e!51585)))

(declare-fun res!41308 () Bool)

(assert (=> d!18881 (=> (not res!41308) (not e!51585))))

(assert (=> d!18881 (= res!41308 (bvslt #b00000000000000000000000000000000 (size!2127 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))))

(assert (=> d!18881 (= lt!36639 e!51583)))

(assert (=> d!18881 (= c!12176 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18881 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18881 (= (getCurrentListMap!425 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36650)))

(declare-fun b!78946 () Bool)

(declare-fun e!51581 () ListLongMap!1427)

(assert (=> b!78946 (= e!51583 e!51581)))

(assert (=> b!78946 (= c!12174 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78958 () Bool)

(declare-fun call!7252 () ListLongMap!1427)

(assert (=> b!78958 (= e!51582 call!7252)))

(declare-fun bm!7252 () Bool)

(assert (=> bm!7252 (= call!7251 (contains!736 lt!36650 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7253 () Bool)

(assert (=> bm!7253 (= call!7252 call!7256)))

(declare-fun b!78959 () Bool)

(declare-fun c!12172 () Bool)

(assert (=> b!78959 (= c!12172 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78959 (= e!51581 e!51582)))

(declare-fun b!78960 () Bool)

(declare-fun e!51578 () Bool)

(assert (=> b!78960 (= e!51578 (= (apply!79 lt!36650 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!78961 () Bool)

(assert (=> b!78961 (= e!51588 e!51578)))

(declare-fun res!41302 () Bool)

(assert (=> b!78961 (= res!41302 call!7251)))

(assert (=> b!78961 (=> (not res!41302) (not e!51578))))

(declare-fun b!78962 () Bool)

(declare-fun e!51586 () Bool)

(assert (=> b!78962 (= e!51584 e!51586)))

(declare-fun res!41301 () Bool)

(assert (=> b!78962 (=> (not res!41301) (not e!51586))))

(assert (=> b!78962 (= res!41301 (contains!736 lt!36650 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!78962 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))))

(declare-fun b!78963 () Bool)

(assert (=> b!78963 (= e!51586 (= (apply!79 lt!36650 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78963 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))))))

(assert (=> b!78963 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))))

(declare-fun b!78964 () Bool)

(assert (=> b!78964 (= e!51581 call!7252)))

(declare-fun bm!7254 () Bool)

(assert (=> bm!7254 (= call!7257 call!7254)))

(assert (= (and d!18881 c!12176) b!78945))

(assert (= (and d!18881 (not c!12176)) b!78946))

(assert (= (and b!78946 c!12174) b!78964))

(assert (= (and b!78946 (not c!12174)) b!78959))

(assert (= (and b!78959 c!12172) b!78958))

(assert (= (and b!78959 (not c!12172)) b!78944))

(assert (= (or b!78958 b!78944) bm!7249))

(assert (= (or b!78964 bm!7249) bm!7254))

(assert (= (or b!78964 b!78958) bm!7253))

(assert (= (or b!78945 bm!7254) bm!7250))

(assert (= (or b!78945 bm!7253) bm!7251))

(assert (= (and d!18881 res!41308) b!78947))

(assert (= (and d!18881 c!12175) b!78951))

(assert (= (and d!18881 (not c!12175)) b!78949))

(assert (= (and d!18881 res!41309) b!78956))

(assert (= (and b!78956 res!41304) b!78957))

(assert (= (and b!78956 (not res!41307)) b!78962))

(assert (= (and b!78962 res!41301) b!78963))

(assert (= (and b!78956 res!41305) b!78950))

(assert (= (and b!78950 c!12173) b!78961))

(assert (= (and b!78950 (not c!12173)) b!78954))

(assert (= (and b!78961 res!41302) b!78960))

(assert (= (or b!78961 b!78954) bm!7252))

(assert (= (and b!78950 res!41306) b!78948))

(assert (= (and b!78948 c!12171) b!78952))

(assert (= (and b!78948 (not c!12171)) b!78953))

(assert (= (and b!78952 res!41303) b!78955))

(assert (= (or b!78952 b!78953) bm!7248))

(declare-fun b_lambda!3535 () Bool)

(assert (=> (not b_lambda!3535) (not b!78963)))

(assert (=> b!78963 t!5144))

(declare-fun b_and!4845 () Bool)

(assert (= b_and!4841 (and (=> t!5144 result!2821) b_and!4845)))

(assert (=> b!78963 t!5146))

(declare-fun b_and!4847 () Bool)

(assert (= b_and!4843 (and (=> t!5146 result!2823) b_and!4847)))

(declare-fun m!79611 () Bool)

(assert (=> b!78963 m!79611))

(assert (=> b!78963 m!78471))

(declare-fun m!79613 () Bool)

(assert (=> b!78963 m!79613))

(declare-fun m!79615 () Bool)

(assert (=> b!78963 m!79615))

(assert (=> b!78963 m!79611))

(assert (=> b!78963 m!79615))

(declare-fun m!79617 () Bool)

(assert (=> b!78963 m!79617))

(assert (=> b!78963 m!78471))

(assert (=> d!18881 m!78355))

(declare-fun m!79619 () Bool)

(assert (=> bm!7251 m!79619))

(assert (=> b!78962 m!79615))

(assert (=> b!78962 m!79615))

(declare-fun m!79621 () Bool)

(assert (=> b!78962 m!79621))

(declare-fun m!79623 () Bool)

(assert (=> bm!7250 m!79623))

(assert (=> b!78957 m!79615))

(assert (=> b!78957 m!79615))

(declare-fun m!79625 () Bool)

(assert (=> b!78957 m!79625))

(assert (=> b!78947 m!79615))

(assert (=> b!78947 m!79615))

(assert (=> b!78947 m!79625))

(declare-fun m!79627 () Bool)

(assert (=> b!78951 m!79627))

(declare-fun m!79629 () Bool)

(assert (=> b!78951 m!79629))

(declare-fun m!79631 () Bool)

(assert (=> b!78951 m!79631))

(declare-fun m!79633 () Bool)

(assert (=> b!78951 m!79633))

(declare-fun m!79635 () Bool)

(assert (=> b!78951 m!79635))

(declare-fun m!79637 () Bool)

(assert (=> b!78951 m!79637))

(declare-fun m!79639 () Bool)

(assert (=> b!78951 m!79639))

(declare-fun m!79641 () Bool)

(assert (=> b!78951 m!79641))

(declare-fun m!79643 () Bool)

(assert (=> b!78951 m!79643))

(declare-fun m!79645 () Bool)

(assert (=> b!78951 m!79645))

(assert (=> b!78951 m!79639))

(declare-fun m!79647 () Bool)

(assert (=> b!78951 m!79647))

(assert (=> b!78951 m!79643))

(declare-fun m!79649 () Bool)

(assert (=> b!78951 m!79649))

(assert (=> b!78951 m!79631))

(declare-fun m!79651 () Bool)

(assert (=> b!78951 m!79651))

(assert (=> b!78951 m!79627))

(assert (=> b!78951 m!79623))

(declare-fun m!79653 () Bool)

(assert (=> b!78951 m!79653))

(declare-fun m!79655 () Bool)

(assert (=> b!78951 m!79655))

(assert (=> b!78951 m!79615))

(declare-fun m!79657 () Bool)

(assert (=> b!78945 m!79657))

(declare-fun m!79659 () Bool)

(assert (=> bm!7248 m!79659))

(declare-fun m!79661 () Bool)

(assert (=> bm!7252 m!79661))

(declare-fun m!79663 () Bool)

(assert (=> b!78955 m!79663))

(declare-fun m!79665 () Bool)

(assert (=> b!78960 m!79665))

(assert (=> d!18671 d!18881))

(declare-fun c!12177 () Bool)

(declare-fun call!7258 () Bool)

(declare-fun bm!7255 () Bool)

(assert (=> bm!7255 (= call!7258 (arrayNoDuplicates!0 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (bvadd lt!36408 #b00000000000000000000000000000001) (ite c!12177 (Cons!1491 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) lt!36408) lt!36415) lt!36415)))))

(declare-fun b!78966 () Bool)

(declare-fun e!51592 () Bool)

(assert (=> b!78966 (= e!51592 (contains!738 lt!36415 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) lt!36408)))))

(declare-fun b!78967 () Bool)

(declare-fun e!51590 () Bool)

(declare-fun e!51589 () Bool)

(assert (=> b!78967 (= e!51590 e!51589)))

(assert (=> b!78967 (= c!12177 (validKeyInArray!0 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) lt!36408)))))

(declare-fun b!78968 () Bool)

(declare-fun e!51591 () Bool)

(assert (=> b!78968 (= e!51591 e!51590)))

(declare-fun res!41310 () Bool)

(assert (=> b!78968 (=> (not res!41310) (not e!51590))))

(assert (=> b!78968 (= res!41310 (not e!51592))))

(declare-fun res!41312 () Bool)

(assert (=> b!78968 (=> (not res!41312) (not e!51592))))

(assert (=> b!78968 (= res!41312 (validKeyInArray!0 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) lt!36408)))))

(declare-fun b!78969 () Bool)

(assert (=> b!78969 (= e!51589 call!7258)))

(declare-fun d!18883 () Bool)

(declare-fun res!41311 () Bool)

(assert (=> d!18883 (=> res!41311 e!51591)))

(assert (=> d!18883 (= res!41311 (bvsge lt!36408 (size!2127 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))))

(assert (=> d!18883 (= (arrayNoDuplicates!0 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) lt!36408 lt!36415) e!51591)))

(declare-fun b!78965 () Bool)

(assert (=> b!78965 (= e!51589 call!7258)))

(assert (= (and d!18883 (not res!41311)) b!78968))

(assert (= (and b!78968 res!41312) b!78966))

(assert (= (and b!78968 res!41310) b!78967))

(assert (= (and b!78967 c!12177) b!78969))

(assert (= (and b!78967 (not c!12177)) b!78965))

(assert (= (or b!78969 b!78965) bm!7255))

(declare-fun m!79667 () Bool)

(assert (=> bm!7255 m!79667))

(declare-fun m!79669 () Bool)

(assert (=> bm!7255 m!79669))

(assert (=> b!78966 m!79667))

(assert (=> b!78966 m!79667))

(declare-fun m!79671 () Bool)

(assert (=> b!78966 m!79671))

(assert (=> b!78967 m!79667))

(assert (=> b!78967 m!79667))

(declare-fun m!79673 () Bool)

(assert (=> b!78967 m!79673))

(assert (=> b!78968 m!79667))

(assert (=> b!78968 m!79667))

(assert (=> b!78968 m!79673))

(assert (=> d!18671 d!18883))

(declare-fun d!18885 () Bool)

(declare-fun res!41313 () Bool)

(declare-fun e!51593 () Bool)

(assert (=> d!18885 (=> res!41313 e!51593)))

(assert (=> d!18885 (= res!41313 (= (select (arr!1886 lt!36431) #b00000000000000000000000000000000) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!18885 (= (arrayContainsKey!0 lt!36431 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000) e!51593)))

(declare-fun b!78970 () Bool)

(declare-fun e!51594 () Bool)

(assert (=> b!78970 (= e!51593 e!51594)))

(declare-fun res!41314 () Bool)

(assert (=> b!78970 (=> (not res!41314) (not e!51594))))

(assert (=> b!78970 (= res!41314 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 lt!36431)))))

(declare-fun b!78971 () Bool)

(assert (=> b!78971 (= e!51594 (arrayContainsKey!0 lt!36431 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!18885 (not res!41313)) b!78970))

(assert (= (and b!78970 res!41314) b!78971))

(declare-fun m!79675 () Bool)

(assert (=> d!18885 m!79675))

(assert (=> b!78971 m!77885))

(declare-fun m!79677 () Bool)

(assert (=> b!78971 m!79677))

(assert (=> d!18671 d!18885))

(declare-fun b!78972 () Bool)

(declare-fun e!51597 () Bool)

(declare-fun call!7259 () Bool)

(assert (=> b!78972 (= e!51597 call!7259)))

(declare-fun d!18887 () Bool)

(declare-fun res!41315 () Bool)

(declare-fun e!51596 () Bool)

(assert (=> d!18887 (=> res!41315 e!51596)))

(assert (=> d!18887 (= res!41315 (bvsge #b00000000000000000000000000000000 (size!2127 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))))

(assert (=> d!18887 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (mask!6267 newMap!16)) e!51596)))

(declare-fun bm!7256 () Bool)

(assert (=> bm!7256 (= call!7259 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (mask!6267 newMap!16)))))

(declare-fun b!78973 () Bool)

(declare-fun e!51595 () Bool)

(assert (=> b!78973 (= e!51596 e!51595)))

(declare-fun c!12178 () Bool)

(assert (=> b!78973 (= c!12178 (validKeyInArray!0 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!78974 () Bool)

(assert (=> b!78974 (= e!51595 call!7259)))

(declare-fun b!78975 () Bool)

(assert (=> b!78975 (= e!51595 e!51597)))

(declare-fun lt!36653 () (_ BitVec 64))

(assert (=> b!78975 (= lt!36653 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36652 () Unit!2237)

(assert (=> b!78975 (= lt!36652 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) lt!36653 #b00000000000000000000000000000000))))

(assert (=> b!78975 (arrayContainsKey!0 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) lt!36653 #b00000000000000000000000000000000)))

(declare-fun lt!36654 () Unit!2237)

(assert (=> b!78975 (= lt!36654 lt!36652)))

(declare-fun res!41316 () Bool)

(assert (=> b!78975 (= res!41316 (= (seekEntryOrOpen!0 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000) (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (mask!6267 newMap!16)) (Found!234 #b00000000000000000000000000000000)))))

(assert (=> b!78975 (=> (not res!41316) (not e!51597))))

(assert (= (and d!18887 (not res!41315)) b!78973))

(assert (= (and b!78973 c!12178) b!78975))

(assert (= (and b!78973 (not c!12178)) b!78974))

(assert (= (and b!78975 res!41316) b!78972))

(assert (= (or b!78972 b!78974) bm!7256))

(declare-fun m!79679 () Bool)

(assert (=> bm!7256 m!79679))

(assert (=> b!78973 m!79615))

(assert (=> b!78973 m!79615))

(assert (=> b!78973 m!79625))

(assert (=> b!78975 m!79615))

(declare-fun m!79681 () Bool)

(assert (=> b!78975 m!79681))

(declare-fun m!79683 () Bool)

(assert (=> b!78975 m!79683))

(assert (=> b!78975 m!79615))

(declare-fun m!79685 () Bool)

(assert (=> b!78975 m!79685))

(assert (=> d!18671 d!18887))

(declare-fun b!78976 () Bool)

(declare-fun e!51604 () ListLongMap!1427)

(declare-fun call!7262 () ListLongMap!1427)

(assert (=> b!78976 (= e!51604 call!7262)))

(declare-fun b!78977 () Bool)

(declare-fun e!51605 () ListLongMap!1427)

(declare-fun call!7265 () ListLongMap!1427)

(assert (=> b!78977 (= e!51605 (+!100 call!7265 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun b!78979 () Bool)

(declare-fun e!51607 () Bool)

(assert (=> b!78979 (= e!51607 (validKeyInArray!0 (select (arr!1886 lt!36429) #b00000000000000000000000000000000)))))

(declare-fun bm!7257 () Bool)

(declare-fun call!7264 () Bool)

(declare-fun lt!36675 () ListLongMap!1427)

(assert (=> bm!7257 (= call!7264 (contains!736 lt!36675 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78980 () Bool)

(declare-fun e!51598 () Bool)

(declare-fun e!51609 () Bool)

(assert (=> b!78980 (= e!51598 e!51609)))

(declare-fun c!12179 () Bool)

(assert (=> b!78980 (= c!12179 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78981 () Bool)

(declare-fun e!51601 () Unit!2237)

(declare-fun Unit!2280 () Unit!2237)

(assert (=> b!78981 (= e!51601 Unit!2280)))

(declare-fun b!78982 () Bool)

(declare-fun res!41322 () Bool)

(assert (=> b!78982 (=> (not res!41322) (not e!51598))))

(declare-fun e!51610 () Bool)

(assert (=> b!78982 (= res!41322 e!51610)))

(declare-fun c!12181 () Bool)

(assert (=> b!78982 (= c!12181 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78983 () Bool)

(declare-fun lt!36663 () Unit!2237)

(assert (=> b!78983 (= e!51601 lt!36663)))

(declare-fun lt!36669 () ListLongMap!1427)

(assert (=> b!78983 (= lt!36669 (getCurrentListMapNoExtraKeys!65 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36666 () (_ BitVec 64))

(assert (=> b!78983 (= lt!36666 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36667 () (_ BitVec 64))

(assert (=> b!78983 (= lt!36667 (select (arr!1886 lt!36429) #b00000000000000000000000000000000))))

(declare-fun lt!36676 () Unit!2237)

(assert (=> b!78983 (= lt!36676 (addStillContains!55 lt!36669 lt!36666 (zeroValue!2169 newMap!16) lt!36667))))

(assert (=> b!78983 (contains!736 (+!100 lt!36669 (tuple2!2163 lt!36666 (zeroValue!2169 newMap!16))) lt!36667)))

(declare-fun lt!36655 () Unit!2237)

(assert (=> b!78983 (= lt!36655 lt!36676)))

(declare-fun lt!36665 () ListLongMap!1427)

(assert (=> b!78983 (= lt!36665 (getCurrentListMapNoExtraKeys!65 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36672 () (_ BitVec 64))

(assert (=> b!78983 (= lt!36672 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36670 () (_ BitVec 64))

(assert (=> b!78983 (= lt!36670 (select (arr!1886 lt!36429) #b00000000000000000000000000000000))))

(declare-fun lt!36673 () Unit!2237)

(assert (=> b!78983 (= lt!36673 (addApplyDifferent!55 lt!36665 lt!36672 (minValue!2169 newMap!16) lt!36670))))

(assert (=> b!78983 (= (apply!79 (+!100 lt!36665 (tuple2!2163 lt!36672 (minValue!2169 newMap!16))) lt!36670) (apply!79 lt!36665 lt!36670))))

(declare-fun lt!36658 () Unit!2237)

(assert (=> b!78983 (= lt!36658 lt!36673)))

(declare-fun lt!36668 () ListLongMap!1427)

(assert (=> b!78983 (= lt!36668 (getCurrentListMapNoExtraKeys!65 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36671 () (_ BitVec 64))

(assert (=> b!78983 (= lt!36671 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36661 () (_ BitVec 64))

(assert (=> b!78983 (= lt!36661 (select (arr!1886 lt!36429) #b00000000000000000000000000000000))))

(declare-fun lt!36656 () Unit!2237)

(assert (=> b!78983 (= lt!36656 (addApplyDifferent!55 lt!36668 lt!36671 (zeroValue!2169 newMap!16) lt!36661))))

(assert (=> b!78983 (= (apply!79 (+!100 lt!36668 (tuple2!2163 lt!36671 (zeroValue!2169 newMap!16))) lt!36661) (apply!79 lt!36668 lt!36661))))

(declare-fun lt!36674 () Unit!2237)

(assert (=> b!78983 (= lt!36674 lt!36656)))

(declare-fun lt!36662 () ListLongMap!1427)

(assert (=> b!78983 (= lt!36662 (getCurrentListMapNoExtraKeys!65 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36660 () (_ BitVec 64))

(assert (=> b!78983 (= lt!36660 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36659 () (_ BitVec 64))

(assert (=> b!78983 (= lt!36659 (select (arr!1886 lt!36429) #b00000000000000000000000000000000))))

(assert (=> b!78983 (= lt!36663 (addApplyDifferent!55 lt!36662 lt!36660 (minValue!2169 newMap!16) lt!36659))))

(assert (=> b!78983 (= (apply!79 (+!100 lt!36662 (tuple2!2163 lt!36660 (minValue!2169 newMap!16))) lt!36659) (apply!79 lt!36662 lt!36659))))

(declare-fun b!78984 () Bool)

(declare-fun e!51599 () Bool)

(assert (=> b!78984 (= e!51609 e!51599)))

(declare-fun res!41319 () Bool)

(assert (=> b!78984 (= res!41319 call!7264)))

(assert (=> b!78984 (=> (not res!41319) (not e!51599))))

(declare-fun bm!7258 () Bool)

(declare-fun call!7266 () ListLongMap!1427)

(assert (=> bm!7258 (= call!7262 call!7266)))

(declare-fun call!7263 () ListLongMap!1427)

(declare-fun bm!7259 () Bool)

(assert (=> bm!7259 (= call!7263 (getCurrentListMapNoExtraKeys!65 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78985 () Bool)

(assert (=> b!78985 (= e!51609 (not call!7264))))

(declare-fun b!78986 () Bool)

(declare-fun call!7260 () Bool)

(assert (=> b!78986 (= e!51610 (not call!7260))))

(declare-fun c!12184 () Bool)

(declare-fun c!12182 () Bool)

(declare-fun bm!7260 () Bool)

(assert (=> bm!7260 (= call!7265 (+!100 (ite c!12184 call!7263 (ite c!12182 call!7266 call!7262)) (ite (or c!12184 c!12182) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!78987 () Bool)

(assert (=> b!78987 (= e!51599 (= (apply!79 lt!36675 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(declare-fun b!78988 () Bool)

(declare-fun res!41321 () Bool)

(assert (=> b!78988 (=> (not res!41321) (not e!51598))))

(declare-fun e!51606 () Bool)

(assert (=> b!78988 (= res!41321 e!51606)))

(declare-fun res!41323 () Bool)

(assert (=> b!78988 (=> res!41323 e!51606)))

(declare-fun e!51602 () Bool)

(assert (=> b!78988 (= res!41323 (not e!51602))))

(declare-fun res!41320 () Bool)

(assert (=> b!78988 (=> (not res!41320) (not e!51602))))

(assert (=> b!78988 (= res!41320 (bvslt #b00000000000000000000000000000000 (size!2127 lt!36429)))))

(declare-fun b!78989 () Bool)

(assert (=> b!78989 (= e!51602 (validKeyInArray!0 (select (arr!1886 lt!36429) #b00000000000000000000000000000000)))))

(declare-fun d!18889 () Bool)

(assert (=> d!18889 e!51598))

(declare-fun res!41325 () Bool)

(assert (=> d!18889 (=> (not res!41325) (not e!51598))))

(assert (=> d!18889 (= res!41325 (or (bvsge #b00000000000000000000000000000000 (size!2127 lt!36429)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 lt!36429)))))))

(declare-fun lt!36664 () ListLongMap!1427)

(assert (=> d!18889 (= lt!36675 lt!36664)))

(declare-fun lt!36657 () Unit!2237)

(assert (=> d!18889 (= lt!36657 e!51601)))

(declare-fun c!12183 () Bool)

(assert (=> d!18889 (= c!12183 e!51607)))

(declare-fun res!41324 () Bool)

(assert (=> d!18889 (=> (not res!41324) (not e!51607))))

(assert (=> d!18889 (= res!41324 (bvslt #b00000000000000000000000000000000 (size!2127 lt!36429)))))

(assert (=> d!18889 (= lt!36664 e!51605)))

(assert (=> d!18889 (= c!12184 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18889 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18889 (= (getCurrentListMap!425 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36675)))

(declare-fun b!78978 () Bool)

(declare-fun e!51603 () ListLongMap!1427)

(assert (=> b!78978 (= e!51605 e!51603)))

(assert (=> b!78978 (= c!12182 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78990 () Bool)

(declare-fun call!7261 () ListLongMap!1427)

(assert (=> b!78990 (= e!51604 call!7261)))

(declare-fun bm!7261 () Bool)

(assert (=> bm!7261 (= call!7260 (contains!736 lt!36675 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7262 () Bool)

(assert (=> bm!7262 (= call!7261 call!7265)))

(declare-fun b!78991 () Bool)

(declare-fun c!12180 () Bool)

(assert (=> b!78991 (= c!12180 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78991 (= e!51603 e!51604)))

(declare-fun b!78992 () Bool)

(declare-fun e!51600 () Bool)

(assert (=> b!78992 (= e!51600 (= (apply!79 lt!36675 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!78993 () Bool)

(assert (=> b!78993 (= e!51610 e!51600)))

(declare-fun res!41318 () Bool)

(assert (=> b!78993 (= res!41318 call!7260)))

(assert (=> b!78993 (=> (not res!41318) (not e!51600))))

(declare-fun b!78994 () Bool)

(declare-fun e!51608 () Bool)

(assert (=> b!78994 (= e!51606 e!51608)))

(declare-fun res!41317 () Bool)

(assert (=> b!78994 (=> (not res!41317) (not e!51608))))

(assert (=> b!78994 (= res!41317 (contains!736 lt!36675 (select (arr!1886 lt!36429) #b00000000000000000000000000000000)))))

(assert (=> b!78994 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 lt!36429)))))

(declare-fun b!78995 () Bool)

(assert (=> b!78995 (= e!51608 (= (apply!79 lt!36675 (select (arr!1886 lt!36429) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 lt!36428) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78995 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 lt!36428)))))

(assert (=> b!78995 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 lt!36429)))))

(declare-fun b!78996 () Bool)

(assert (=> b!78996 (= e!51603 call!7261)))

(declare-fun bm!7263 () Bool)

(assert (=> bm!7263 (= call!7266 call!7263)))

(assert (= (and d!18889 c!12184) b!78977))

(assert (= (and d!18889 (not c!12184)) b!78978))

(assert (= (and b!78978 c!12182) b!78996))

(assert (= (and b!78978 (not c!12182)) b!78991))

(assert (= (and b!78991 c!12180) b!78990))

(assert (= (and b!78991 (not c!12180)) b!78976))

(assert (= (or b!78990 b!78976) bm!7258))

(assert (= (or b!78996 bm!7258) bm!7263))

(assert (= (or b!78996 b!78990) bm!7262))

(assert (= (or b!78977 bm!7263) bm!7259))

(assert (= (or b!78977 bm!7262) bm!7260))

(assert (= (and d!18889 res!41324) b!78979))

(assert (= (and d!18889 c!12183) b!78983))

(assert (= (and d!18889 (not c!12183)) b!78981))

(assert (= (and d!18889 res!41325) b!78988))

(assert (= (and b!78988 res!41320) b!78989))

(assert (= (and b!78988 (not res!41323)) b!78994))

(assert (= (and b!78994 res!41317) b!78995))

(assert (= (and b!78988 res!41321) b!78982))

(assert (= (and b!78982 c!12181) b!78993))

(assert (= (and b!78982 (not c!12181)) b!78986))

(assert (= (and b!78993 res!41318) b!78992))

(assert (= (or b!78993 b!78986) bm!7261))

(assert (= (and b!78982 res!41322) b!78980))

(assert (= (and b!78980 c!12179) b!78984))

(assert (= (and b!78980 (not c!12179)) b!78985))

(assert (= (and b!78984 res!41319) b!78987))

(assert (= (or b!78984 b!78985) bm!7257))

(declare-fun b_lambda!3537 () Bool)

(assert (=> (not b_lambda!3537) (not b!78995)))

(assert (=> b!78995 t!5144))

(declare-fun b_and!4849 () Bool)

(assert (= b_and!4845 (and (=> t!5144 result!2821) b_and!4849)))

(assert (=> b!78995 t!5146))

(declare-fun b_and!4851 () Bool)

(assert (= b_and!4847 (and (=> t!5146 result!2823) b_and!4851)))

(declare-fun m!79687 () Bool)

(assert (=> b!78995 m!79687))

(assert (=> b!78995 m!78471))

(declare-fun m!79689 () Bool)

(assert (=> b!78995 m!79689))

(declare-fun m!79691 () Bool)

(assert (=> b!78995 m!79691))

(assert (=> b!78995 m!79687))

(assert (=> b!78995 m!79691))

(declare-fun m!79693 () Bool)

(assert (=> b!78995 m!79693))

(assert (=> b!78995 m!78471))

(assert (=> d!18889 m!78355))

(declare-fun m!79695 () Bool)

(assert (=> bm!7260 m!79695))

(assert (=> b!78994 m!79691))

(assert (=> b!78994 m!79691))

(declare-fun m!79697 () Bool)

(assert (=> b!78994 m!79697))

(declare-fun m!79699 () Bool)

(assert (=> bm!7259 m!79699))

(assert (=> b!78989 m!79691))

(assert (=> b!78989 m!79691))

(declare-fun m!79701 () Bool)

(assert (=> b!78989 m!79701))

(assert (=> b!78979 m!79691))

(assert (=> b!78979 m!79691))

(assert (=> b!78979 m!79701))

(declare-fun m!79703 () Bool)

(assert (=> b!78983 m!79703))

(declare-fun m!79705 () Bool)

(assert (=> b!78983 m!79705))

(declare-fun m!79707 () Bool)

(assert (=> b!78983 m!79707))

(declare-fun m!79709 () Bool)

(assert (=> b!78983 m!79709))

(declare-fun m!79711 () Bool)

(assert (=> b!78983 m!79711))

(declare-fun m!79713 () Bool)

(assert (=> b!78983 m!79713))

(declare-fun m!79715 () Bool)

(assert (=> b!78983 m!79715))

(declare-fun m!79717 () Bool)

(assert (=> b!78983 m!79717))

(declare-fun m!79719 () Bool)

(assert (=> b!78983 m!79719))

(declare-fun m!79721 () Bool)

(assert (=> b!78983 m!79721))

(assert (=> b!78983 m!79715))

(declare-fun m!79723 () Bool)

(assert (=> b!78983 m!79723))

(assert (=> b!78983 m!79719))

(declare-fun m!79725 () Bool)

(assert (=> b!78983 m!79725))

(assert (=> b!78983 m!79707))

(declare-fun m!79727 () Bool)

(assert (=> b!78983 m!79727))

(assert (=> b!78983 m!79703))

(assert (=> b!78983 m!79699))

(declare-fun m!79729 () Bool)

(assert (=> b!78983 m!79729))

(declare-fun m!79731 () Bool)

(assert (=> b!78983 m!79731))

(assert (=> b!78983 m!79691))

(declare-fun m!79733 () Bool)

(assert (=> b!78977 m!79733))

(declare-fun m!79735 () Bool)

(assert (=> bm!7257 m!79735))

(declare-fun m!79737 () Bool)

(assert (=> bm!7261 m!79737))

(declare-fun m!79739 () Bool)

(assert (=> b!78987 m!79739))

(declare-fun m!79741 () Bool)

(assert (=> b!78992 m!79741))

(assert (=> d!18671 d!18889))

(declare-fun b!78997 () Bool)

(declare-fun e!51611 () (_ BitVec 32))

(declare-fun call!7267 () (_ BitVec 32))

(assert (=> b!78997 (= e!51611 (bvadd #b00000000000000000000000000000001 call!7267))))

(declare-fun b!78998 () Bool)

(declare-fun e!51612 () (_ BitVec 32))

(assert (=> b!78998 (= e!51612 #b00000000000000000000000000000000)))

(declare-fun bm!7264 () Bool)

(assert (=> bm!7264 (= call!7267 (arrayCountValidKeys!0 lt!36422 (bvadd (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000001) (bvadd (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000001)))))

(declare-fun b!78999 () Bool)

(assert (=> b!78999 (= e!51611 call!7267)))

(declare-fun lt!36677 () (_ BitVec 32))

(declare-fun d!18891 () Bool)

(assert (=> d!18891 (and (bvsge lt!36677 #b00000000000000000000000000000000) (bvsle lt!36677 (bvsub (size!2127 lt!36422) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)))))))

(assert (=> d!18891 (= lt!36677 e!51612)))

(declare-fun c!12186 () Bool)

(assert (=> d!18891 (= c!12186 (bvsge (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (bvadd (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000001)))))

(assert (=> d!18891 (and (bvsle (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (bvadd (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000001)) (bvsge (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000001) (size!2127 lt!36422)))))

(assert (=> d!18891 (= (arrayCountValidKeys!0 lt!36422 (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (bvadd (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000001)) lt!36677)))

(declare-fun b!79000 () Bool)

(assert (=> b!79000 (= e!51612 e!51611)))

(declare-fun c!12185 () Bool)

(assert (=> b!79000 (= c!12185 (validKeyInArray!0 (select (arr!1886 lt!36422) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)))))))

(assert (= (and d!18891 c!12186) b!78998))

(assert (= (and d!18891 (not c!12186)) b!79000))

(assert (= (and b!79000 c!12185) b!78997))

(assert (= (and b!79000 (not c!12185)) b!78999))

(assert (= (or b!78997 b!78999) bm!7264))

(declare-fun m!79743 () Bool)

(assert (=> bm!7264 m!79743))

(assert (=> b!79000 m!79579))

(assert (=> b!79000 m!79579))

(assert (=> b!79000 m!79581))

(assert (=> d!18671 d!18891))

(declare-fun d!18893 () Bool)

(declare-fun e!51615 () Bool)

(assert (=> d!18893 e!51615))

(declare-fun res!41328 () Bool)

(assert (=> d!18893 (=> (not res!41328) (not e!51615))))

(assert (=> d!18893 (= res!41328 (and (bvsge (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000000) (bvslt (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (size!2127 (_keys!3931 newMap!16))) (bvslt (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (size!2128 (_values!2254 newMap!16)))))))

(declare-fun lt!36680 () Unit!2237)

(declare-fun choose!473 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) (_ BitVec 64) V!2993 Int) Unit!2237)

(assert (=> d!18893 (= lt!36680 (choose!473 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 (defaultEntry!2271 newMap!16)))))

(assert (=> d!18893 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18893 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!16 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 (defaultEntry!2271 newMap!16)) lt!36680)))

(declare-fun b!79003 () Bool)

(assert (=> b!79003 (= e!51615 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (getCurrentListMap!425 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))))))

(assert (= (and d!18893 res!41328) b!79003))

(assert (=> d!18893 m!77885))

(declare-fun m!79745 () Bool)

(assert (=> d!18893 m!79745))

(assert (=> d!18893 m!78355))

(assert (=> b!79003 m!79013))

(assert (=> b!79003 m!79009))

(assert (=> b!79003 m!78997))

(assert (=> b!79003 m!78223))

(assert (=> b!79003 m!78989))

(assert (=> b!79003 m!78223))

(assert (=> d!18671 d!18893))

(assert (=> d!18671 d!18539))

(declare-fun d!18895 () Bool)

(declare-fun e!51616 () Bool)

(assert (=> d!18895 e!51616))

(declare-fun res!41329 () Bool)

(assert (=> d!18895 (=> (not res!41329) (not e!51616))))

(assert (=> d!18895 (= res!41329 (and (bvsge (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000000) (bvslt (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (size!2127 lt!36429))))))

(declare-fun lt!36681 () Unit!2237)

(assert (=> d!18895 (= lt!36681 (choose!471 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18895 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18895 (= (lemmaValidKeyInArrayIsInListMap!88 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (defaultEntry!2271 newMap!16)) lt!36681)))

(declare-fun b!79004 () Bool)

(assert (=> b!79004 (= e!51616 (contains!736 (getCurrentListMap!425 lt!36429 lt!36428 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1886 lt!36429) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)))))))

(assert (= (and d!18895 res!41329) b!79004))

(declare-fun m!79747 () Bool)

(assert (=> d!18895 m!79747))

(assert (=> d!18895 m!78355))

(assert (=> b!79004 m!78983))

(declare-fun m!79749 () Bool)

(assert (=> b!79004 m!79749))

(assert (=> b!79004 m!78983))

(assert (=> b!79004 m!79749))

(declare-fun m!79751 () Bool)

(assert (=> b!79004 m!79751))

(assert (=> d!18671 d!18895))

(declare-fun b!79005 () Bool)

(declare-fun e!51617 () (_ BitVec 32))

(declare-fun call!7268 () (_ BitVec 32))

(assert (=> b!79005 (= e!51617 (bvadd #b00000000000000000000000000000001 call!7268))))

(declare-fun b!79006 () Bool)

(declare-fun e!51618 () (_ BitVec 32))

(assert (=> b!79006 (= e!51618 #b00000000000000000000000000000000)))

(declare-fun bm!7265 () Bool)

(assert (=> bm!7265 (= call!7268 (arrayCountValidKeys!0 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79007 () Bool)

(assert (=> b!79007 (= e!51617 call!7268)))

(declare-fun d!18897 () Bool)

(declare-fun lt!36682 () (_ BitVec 32))

(assert (=> d!18897 (and (bvsge lt!36682 #b00000000000000000000000000000000) (bvsle lt!36682 (bvsub (size!2127 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!18897 (= lt!36682 e!51618)))

(declare-fun c!12188 () Bool)

(assert (=> d!18897 (= c!12188 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18897 (and (bvsle #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2127 (_keys!3931 newMap!16)) (size!2127 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))))))))

(assert (=> d!18897 (= (arrayCountValidKeys!0 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) lt!36682)))

(declare-fun b!79008 () Bool)

(assert (=> b!79008 (= e!51618 e!51617)))

(declare-fun c!12187 () Bool)

(assert (=> b!79008 (= c!12187 (validKeyInArray!0 (select (arr!1886 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!18897 c!12188) b!79006))

(assert (= (and d!18897 (not c!12188)) b!79008))

(assert (= (and b!79008 c!12187) b!79005))

(assert (= (and b!79008 (not c!12187)) b!79007))

(assert (= (or b!79005 b!79007) bm!7265))

(declare-fun m!79753 () Bool)

(assert (=> bm!7265 m!79753))

(assert (=> b!79008 m!79615))

(assert (=> b!79008 m!79615))

(assert (=> b!79008 m!79625))

(assert (=> d!18671 d!18897))

(assert (=> d!18671 d!18533))

(declare-fun d!18899 () Bool)

(assert (=> d!18899 (arrayContainsKey!0 lt!36431 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!36683 () Unit!2237)

(assert (=> d!18899 (= lt!36683 (choose!13 lt!36431 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))))))

(assert (=> d!18899 (bvsge (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000000)))

(assert (=> d!18899 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!36431 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137))) lt!36683)))

(declare-fun bs!3348 () Bool)

(assert (= bs!3348 d!18899))

(assert (=> bs!3348 m!77885))

(assert (=> bs!3348 m!79015))

(assert (=> bs!3348 m!77885))

(declare-fun m!79755 () Bool)

(assert (=> bs!3348 m!79755))

(assert (=> d!18671 d!18899))

(declare-fun d!18901 () Bool)

(declare-fun e!51621 () Bool)

(assert (=> d!18901 e!51621))

(declare-fun res!41332 () Bool)

(assert (=> d!18901 (=> (not res!41332) (not e!51621))))

(assert (=> d!18901 (= res!41332 (and (bvsge (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) #b00000000000000000000000000000000) (bvslt (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (size!2127 (_keys!3931 newMap!16)))))))

(declare-fun lt!36686 () Unit!2237)

(declare-fun choose!41 (array!3957 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1495) Unit!2237)

(assert (=> d!18901 (= lt!36686 (choose!41 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) lt!36408 lt!36415))))

(assert (=> d!18901 (bvslt (size!2127 (_keys!3931 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!18901 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) lt!36408 lt!36415) lt!36686)))

(declare-fun b!79011 () Bool)

(assert (=> b!79011 (= e!51621 (arrayNoDuplicates!0 (array!3958 (store (arr!1886 (_keys!3931 newMap!16)) (ite c!11981 (index!3073 lt!36137) (index!3070 lt!36137)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (size!2127 (_keys!3931 newMap!16))) lt!36408 lt!36415))))

(assert (= (and d!18901 res!41332) b!79011))

(assert (=> d!18901 m!77885))

(declare-fun m!79757 () Bool)

(assert (=> d!18901 m!79757))

(assert (=> b!79011 m!78997))

(assert (=> b!79011 m!78993))

(assert (=> d!18671 d!18901))

(declare-fun lt!36687 () Bool)

(declare-fun d!18903 () Bool)

(assert (=> d!18903 (= lt!36687 (select (content!84 (toList!729 lt!36237)) (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!51623 () Bool)

(assert (=> d!18903 (= lt!36687 e!51623)))

(declare-fun res!41334 () Bool)

(assert (=> d!18903 (=> (not res!41334) (not e!51623))))

(assert (=> d!18903 (= res!41334 ((_ is Cons!1490) (toList!729 lt!36237)))))

(assert (=> d!18903 (= (contains!737 (toList!729 lt!36237) (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36687)))

(declare-fun b!79012 () Bool)

(declare-fun e!51622 () Bool)

(assert (=> b!79012 (= e!51623 e!51622)))

(declare-fun res!41333 () Bool)

(assert (=> b!79012 (=> res!41333 e!51622)))

(assert (=> b!79012 (= res!41333 (= (h!2078 (toList!729 lt!36237)) (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!79013 () Bool)

(assert (=> b!79013 (= e!51622 (contains!737 (t!5132 (toList!729 lt!36237)) (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!18903 res!41334) b!79012))

(assert (= (and b!79012 (not res!41333)) b!79013))

(declare-fun m!79759 () Bool)

(assert (=> d!18903 m!79759))

(declare-fun m!79761 () Bool)

(assert (=> d!18903 m!79761))

(declare-fun m!79763 () Bool)

(assert (=> b!79013 m!79763))

(assert (=> b!78334 d!18903))

(declare-fun b!79014 () Bool)

(declare-fun e!51626 () List!1494)

(declare-fun e!51624 () List!1494)

(assert (=> b!79014 (= e!51626 e!51624)))

(declare-fun c!12190 () Bool)

(assert (=> b!79014 (= c!12190 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35790))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35790)))) (_1!1092 lt!35806))))))

(declare-fun b!79015 () Bool)

(declare-fun c!12189 () Bool)

(assert (=> b!79015 (= c!12189 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35790))) (bvsgt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35790)))) (_1!1092 lt!35806))))))

(declare-fun e!51628 () List!1494)

(assert (=> b!79015 (= e!51624 e!51628)))

(declare-fun b!79016 () Bool)

(declare-fun call!7269 () List!1494)

(assert (=> b!79016 (= e!51628 call!7269)))

(declare-fun b!79017 () Bool)

(declare-fun call!7271 () List!1494)

(assert (=> b!79017 (= e!51624 call!7271)))

(declare-fun bm!7267 () Bool)

(assert (=> bm!7267 (= call!7269 call!7271)))

(declare-fun b!79018 () Bool)

(declare-fun e!51627 () List!1494)

(assert (=> b!79018 (= e!51627 (insertStrictlySorted!58 (t!5132 (t!5132 (toList!729 lt!35790))) (_1!1092 lt!35806) (_2!1092 lt!35806)))))

(declare-fun b!79019 () Bool)

(declare-fun call!7270 () List!1494)

(assert (=> b!79019 (= e!51626 call!7270)))

(declare-fun b!79020 () Bool)

(assert (=> b!79020 (= e!51627 (ite c!12190 (t!5132 (t!5132 (toList!729 lt!35790))) (ite c!12189 (Cons!1490 (h!2078 (t!5132 (toList!729 lt!35790))) (t!5132 (t!5132 (toList!729 lt!35790)))) Nil!1491)))))

(declare-fun d!18905 () Bool)

(declare-fun e!51625 () Bool)

(assert (=> d!18905 e!51625))

(declare-fun res!41336 () Bool)

(assert (=> d!18905 (=> (not res!41336) (not e!51625))))

(declare-fun lt!36688 () List!1494)

(assert (=> d!18905 (= res!41336 (isStrictlySorted!282 lt!36688))))

(assert (=> d!18905 (= lt!36688 e!51626)))

(declare-fun c!12192 () Bool)

(assert (=> d!18905 (= c!12192 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35790))) (bvslt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35790)))) (_1!1092 lt!35806))))))

(assert (=> d!18905 (isStrictlySorted!282 (t!5132 (toList!729 lt!35790)))))

(assert (=> d!18905 (= (insertStrictlySorted!58 (t!5132 (toList!729 lt!35790)) (_1!1092 lt!35806) (_2!1092 lt!35806)) lt!36688)))

(declare-fun bm!7266 () Bool)

(assert (=> bm!7266 (= call!7271 call!7270)))

(declare-fun b!79021 () Bool)

(declare-fun res!41335 () Bool)

(assert (=> b!79021 (=> (not res!41335) (not e!51625))))

(assert (=> b!79021 (= res!41335 (containsKey!141 lt!36688 (_1!1092 lt!35806)))))

(declare-fun b!79022 () Bool)

(assert (=> b!79022 (= e!51628 call!7269)))

(declare-fun b!79023 () Bool)

(assert (=> b!79023 (= e!51625 (contains!737 lt!36688 (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun bm!7268 () Bool)

(assert (=> bm!7268 (= call!7270 ($colon$colon!68 e!51627 (ite c!12192 (h!2078 (t!5132 (toList!729 lt!35790))) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806)))))))

(declare-fun c!12191 () Bool)

(assert (=> bm!7268 (= c!12191 c!12192)))

(assert (= (and d!18905 c!12192) b!79019))

(assert (= (and d!18905 (not c!12192)) b!79014))

(assert (= (and b!79014 c!12190) b!79017))

(assert (= (and b!79014 (not c!12190)) b!79015))

(assert (= (and b!79015 c!12189) b!79022))

(assert (= (and b!79015 (not c!12189)) b!79016))

(assert (= (or b!79022 b!79016) bm!7267))

(assert (= (or b!79017 bm!7267) bm!7266))

(assert (= (or b!79019 bm!7266) bm!7268))

(assert (= (and bm!7268 c!12191) b!79018))

(assert (= (and bm!7268 (not c!12191)) b!79020))

(assert (= (and d!18905 res!41336) b!79021))

(assert (= (and b!79021 res!41335) b!79023))

(declare-fun m!79765 () Bool)

(assert (=> b!79023 m!79765))

(declare-fun m!79767 () Bool)

(assert (=> b!79018 m!79767))

(declare-fun m!79769 () Bool)

(assert (=> b!79021 m!79769))

(declare-fun m!79771 () Bool)

(assert (=> d!18905 m!79771))

(declare-fun m!79773 () Bool)

(assert (=> d!18905 m!79773))

(declare-fun m!79775 () Bool)

(assert (=> bm!7268 m!79775))

(assert (=> b!78517 d!18905))

(declare-fun d!18907 () Bool)

(assert (=> d!18907 (= (isEmpty!332 lt!36180) (isEmpty!333 (toList!729 lt!36180)))))

(declare-fun bs!3349 () Bool)

(assert (= bs!3349 d!18907))

(declare-fun m!79777 () Bool)

(assert (=> bs!3349 m!79777))

(assert (=> b!78271 d!18907))

(declare-fun d!18909 () Bool)

(declare-fun c!12193 () Bool)

(assert (=> d!18909 (= c!12193 ((_ is Nil!1491) (toList!729 lt!35973)))))

(declare-fun e!51629 () (InoxSet tuple2!2162))

(assert (=> d!18909 (= (content!84 (toList!729 lt!35973)) e!51629)))

(declare-fun b!79024 () Bool)

(assert (=> b!79024 (= e!51629 ((as const (Array tuple2!2162 Bool)) false))))

(declare-fun b!79025 () Bool)

(assert (=> b!79025 (= e!51629 ((_ map or) (store ((as const (Array tuple2!2162 Bool)) false) (h!2078 (toList!729 lt!35973)) true) (content!84 (t!5132 (toList!729 lt!35973)))))))

(assert (= (and d!18909 c!12193) b!79024))

(assert (= (and d!18909 (not c!12193)) b!79025))

(declare-fun m!79779 () Bool)

(assert (=> b!79025 m!79779))

(declare-fun m!79781 () Bool)

(assert (=> b!79025 m!79781))

(assert (=> d!18549 d!18909))

(assert (=> b!78766 d!18833))

(declare-fun d!18911 () Bool)

(assert (=> d!18911 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041))))

(declare-fun lt!36689 () Unit!2237)

(assert (=> d!18911 (= lt!36689 (choose!469 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041))))

(declare-fun e!51630 () Bool)

(assert (=> d!18911 e!51630))

(declare-fun res!41337 () Bool)

(assert (=> d!18911 (=> (not res!41337) (not e!51630))))

(assert (=> d!18911 (= res!41337 (isStrictlySorted!282 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!18911 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041) lt!36689)))

(declare-fun b!79026 () Bool)

(assert (=> b!79026 (= e!51630 (containsKey!141 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041))))

(assert (= (and d!18911 res!41337) b!79026))

(assert (=> d!18911 m!78647))

(assert (=> d!18911 m!78647))

(assert (=> d!18911 m!78649))

(declare-fun m!79783 () Bool)

(assert (=> d!18911 m!79783))

(declare-fun m!79785 () Bool)

(assert (=> d!18911 m!79785))

(assert (=> b!79026 m!78643))

(assert (=> b!78338 d!18911))

(declare-fun d!18913 () Bool)

(assert (=> d!18913 (= (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041)) (not (isEmpty!334 (getValueByKey!138 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041))))))

(declare-fun bs!3350 () Bool)

(assert (= bs!3350 d!18913))

(assert (=> bs!3350 m!78647))

(declare-fun m!79787 () Bool)

(assert (=> bs!3350 m!79787))

(assert (=> b!78338 d!18913))

(declare-fun e!51631 () Option!144)

(declare-fun b!79027 () Bool)

(assert (=> b!79027 (= e!51631 (Some!143 (_2!1092 (h!2078 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))))

(declare-fun b!79028 () Bool)

(declare-fun e!51632 () Option!144)

(assert (=> b!79028 (= e!51631 e!51632)))

(declare-fun c!12195 () Bool)

(assert (=> b!79028 (= c!12195 (and ((_ is Cons!1490) (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (not (= (_1!1092 (h!2078 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36041))))))

(declare-fun b!79030 () Bool)

(assert (=> b!79030 (= e!51632 None!142)))

(declare-fun b!79029 () Bool)

(assert (=> b!79029 (= e!51632 (getValueByKey!138 (t!5132 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) lt!36041))))

(declare-fun c!12194 () Bool)

(declare-fun d!18915 () Bool)

(assert (=> d!18915 (= c!12194 (and ((_ is Cons!1490) (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36041)))))

(assert (=> d!18915 (= (getValueByKey!138 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041) e!51631)))

(assert (= (and d!18915 c!12194) b!79027))

(assert (= (and d!18915 (not c!12194)) b!79028))

(assert (= (and b!79028 c!12195) b!79029))

(assert (= (and b!79028 (not c!12195)) b!79030))

(declare-fun m!79789 () Bool)

(assert (=> b!79029 m!79789))

(assert (=> b!78338 d!18915))

(declare-fun d!18917 () Bool)

(assert (=> d!18917 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933))))

(declare-fun lt!36690 () Unit!2237)

(assert (=> d!18917 (= lt!36690 (choose!469 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933))))

(declare-fun e!51633 () Bool)

(assert (=> d!18917 e!51633))

(declare-fun res!41338 () Bool)

(assert (=> d!18917 (=> (not res!41338) (not e!51633))))

(assert (=> d!18917 (= res!41338 (isStrictlySorted!282 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)))))))

(assert (=> d!18917 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933) lt!36690)))

(declare-fun b!79031 () Bool)

(assert (=> b!79031 (= e!51633 (containsKey!141 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933))))

(assert (= (and d!18917 res!41338) b!79031))

(assert (=> d!18917 m!79207))

(assert (=> d!18917 m!79207))

(assert (=> d!18917 m!79209))

(declare-fun m!79791 () Bool)

(assert (=> d!18917 m!79791))

(declare-fun m!79793 () Bool)

(assert (=> d!18917 m!79793))

(assert (=> b!79031 m!79203))

(assert (=> b!78728 d!18917))

(declare-fun d!18919 () Bool)

(assert (=> d!18919 (= (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933)) (not (isEmpty!334 (getValueByKey!138 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933))))))

(declare-fun bs!3351 () Bool)

(assert (= bs!3351 d!18919))

(assert (=> bs!3351 m!79207))

(declare-fun m!79795 () Bool)

(assert (=> bs!3351 m!79795))

(assert (=> b!78728 d!18919))

(declare-fun b!79032 () Bool)

(declare-fun e!51634 () Option!144)

(assert (=> b!79032 (= e!51634 (Some!143 (_2!1092 (h!2078 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)))))))))

(declare-fun b!79033 () Bool)

(declare-fun e!51635 () Option!144)

(assert (=> b!79033 (= e!51634 e!51635)))

(declare-fun c!12197 () Bool)

(assert (=> b!79033 (= c!12197 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)))) (not (= (_1!1092 (h!2078 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))))) lt!35933))))))

(declare-fun b!79035 () Bool)

(assert (=> b!79035 (= e!51635 None!142)))

(declare-fun b!79034 () Bool)

(assert (=> b!79034 (= e!51635 (getValueByKey!138 (t!5132 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)))) lt!35933))))

(declare-fun d!18921 () Bool)

(declare-fun c!12196 () Bool)

(assert (=> d!18921 (= c!12196 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))))) lt!35933)))))

(assert (=> d!18921 (= (getValueByKey!138 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933) e!51634)))

(assert (= (and d!18921 c!12196) b!79032))

(assert (= (and d!18921 (not c!12196)) b!79033))

(assert (= (and b!79033 c!12197) b!79034))

(assert (= (and b!79033 (not c!12197)) b!79035))

(declare-fun m!79797 () Bool)

(assert (=> b!79034 m!79797))

(assert (=> b!78728 d!18921))

(declare-fun b!79036 () Bool)

(declare-fun e!51636 () Option!144)

(assert (=> b!79036 (= e!51636 (Some!143 (_2!1092 (h!2078 (t!5132 (toList!729 lt!35973))))))))

(declare-fun b!79037 () Bool)

(declare-fun e!51637 () Option!144)

(assert (=> b!79037 (= e!51636 e!51637)))

(declare-fun c!12199 () Bool)

(assert (=> b!79037 (= c!12199 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35973))) (not (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35973)))) (_1!1092 lt!35789)))))))

(declare-fun b!79039 () Bool)

(assert (=> b!79039 (= e!51637 None!142)))

(declare-fun b!79038 () Bool)

(assert (=> b!79038 (= e!51637 (getValueByKey!138 (t!5132 (t!5132 (toList!729 lt!35973))) (_1!1092 lt!35789)))))

(declare-fun d!18923 () Bool)

(declare-fun c!12198 () Bool)

(assert (=> d!18923 (= c!12198 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35973))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35973)))) (_1!1092 lt!35789))))))

(assert (=> d!18923 (= (getValueByKey!138 (t!5132 (toList!729 lt!35973)) (_1!1092 lt!35789)) e!51636)))

(assert (= (and d!18923 c!12198) b!79036))

(assert (= (and d!18923 (not c!12198)) b!79037))

(assert (= (and b!79037 c!12199) b!79038))

(assert (= (and b!79037 (not c!12199)) b!79039))

(declare-fun m!79799 () Bool)

(assert (=> b!79038 m!79799))

(assert (=> b!78631 d!18923))

(declare-fun b!79040 () Bool)

(declare-fun e!51638 () Option!144)

(assert (=> b!79040 (= e!51638 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36162)))))))

(declare-fun b!79041 () Bool)

(declare-fun e!51639 () Option!144)

(assert (=> b!79041 (= e!51638 e!51639)))

(declare-fun c!12201 () Bool)

(assert (=> b!79041 (= c!12201 (and ((_ is Cons!1490) (toList!729 lt!36162)) (not (= (_1!1092 (h!2078 (toList!729 lt!36162))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79043 () Bool)

(assert (=> b!79043 (= e!51639 None!142)))

(declare-fun b!79042 () Bool)

(assert (=> b!79042 (= e!51639 (getValueByKey!138 (t!5132 (toList!729 lt!36162)) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!18925 () Bool)

(declare-fun c!12200 () Bool)

(assert (=> d!18925 (= c!12200 (and ((_ is Cons!1490) (toList!729 lt!36162)) (= (_1!1092 (h!2078 (toList!729 lt!36162))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!18925 (= (getValueByKey!138 (toList!729 lt!36162) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!51638)))

(assert (= (and d!18925 c!12200) b!79040))

(assert (= (and d!18925 (not c!12200)) b!79041))

(assert (= (and b!79041 c!12201) b!79042))

(assert (= (and b!79041 (not c!12201)) b!79043))

(declare-fun m!79801 () Bool)

(assert (=> b!79042 m!79801))

(assert (=> b!78241 d!18925))

(declare-fun d!18927 () Bool)

(declare-fun lt!36691 () Bool)

(assert (=> d!18927 (= lt!36691 (select (content!84 lt!36341) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun e!51641 () Bool)

(assert (=> d!18927 (= lt!36691 e!51641)))

(declare-fun res!41340 () Bool)

(assert (=> d!18927 (=> (not res!41340) (not e!51641))))

(assert (=> d!18927 (= res!41340 ((_ is Cons!1490) lt!36341))))

(assert (=> d!18927 (= (contains!737 lt!36341 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))) lt!36691)))

(declare-fun b!79044 () Bool)

(declare-fun e!51640 () Bool)

(assert (=> b!79044 (= e!51641 e!51640)))

(declare-fun res!41339 () Bool)

(assert (=> b!79044 (=> res!41339 e!51640)))

(assert (=> b!79044 (= res!41339 (= (h!2078 lt!36341) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun b!79045 () Bool)

(assert (=> b!79045 (= e!51640 (contains!737 (t!5132 lt!36341) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(assert (= (and d!18927 res!41340) b!79044))

(assert (= (and b!79044 (not res!41339)) b!79045))

(declare-fun m!79803 () Bool)

(assert (=> d!18927 m!79803))

(declare-fun m!79805 () Bool)

(assert (=> d!18927 m!79805))

(declare-fun m!79807 () Bool)

(assert (=> b!79045 m!79807))

(assert (=> b!78541 d!18927))

(declare-fun d!18929 () Bool)

(declare-fun res!41341 () Bool)

(declare-fun e!51642 () Bool)

(assert (=> d!18929 (=> res!41341 e!51642)))

(assert (=> d!18929 (= res!41341 (or ((_ is Nil!1491) lt!36454) ((_ is Nil!1491) (t!5132 lt!36454))))))

(assert (=> d!18929 (= (isStrictlySorted!282 lt!36454) e!51642)))

(declare-fun b!79046 () Bool)

(declare-fun e!51643 () Bool)

(assert (=> b!79046 (= e!51642 e!51643)))

(declare-fun res!41342 () Bool)

(assert (=> b!79046 (=> (not res!41342) (not e!51643))))

(assert (=> b!79046 (= res!41342 (bvslt (_1!1092 (h!2078 lt!36454)) (_1!1092 (h!2078 (t!5132 lt!36454)))))))

(declare-fun b!79047 () Bool)

(assert (=> b!79047 (= e!51643 (isStrictlySorted!282 (t!5132 lt!36454)))))

(assert (= (and d!18929 (not res!41341)) b!79046))

(assert (= (and b!79046 res!41342) b!79047))

(declare-fun m!79809 () Bool)

(assert (=> b!79047 m!79809))

(assert (=> d!18699 d!18929))

(declare-fun d!18931 () Bool)

(declare-fun res!41343 () Bool)

(declare-fun e!51644 () Bool)

(assert (=> d!18931 (=> res!41343 e!51644)))

(assert (=> d!18931 (= res!41343 (or ((_ is Nil!1491) (toList!729 (+!100 lt!35804 lt!35806))) ((_ is Nil!1491) (t!5132 (toList!729 (+!100 lt!35804 lt!35806))))))))

(assert (=> d!18931 (= (isStrictlySorted!282 (toList!729 (+!100 lt!35804 lt!35806))) e!51644)))

(declare-fun b!79048 () Bool)

(declare-fun e!51645 () Bool)

(assert (=> b!79048 (= e!51644 e!51645)))

(declare-fun res!41344 () Bool)

(assert (=> b!79048 (=> (not res!41344) (not e!51645))))

(assert (=> b!79048 (= res!41344 (bvslt (_1!1092 (h!2078 (toList!729 (+!100 lt!35804 lt!35806)))) (_1!1092 (h!2078 (t!5132 (toList!729 (+!100 lt!35804 lt!35806)))))))))

(declare-fun b!79049 () Bool)

(assert (=> b!79049 (= e!51645 (isStrictlySorted!282 (t!5132 (toList!729 (+!100 lt!35804 lt!35806)))))))

(assert (= (and d!18931 (not res!41343)) b!79048))

(assert (= (and b!79048 res!41344) b!79049))

(declare-fun m!79811 () Bool)

(assert (=> b!79049 m!79811))

(assert (=> d!18699 d!18931))

(declare-fun d!18933 () Bool)

(assert (=> d!18933 (= (apply!79 lt!36207 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1186 (getValueByKey!138 (toList!729 lt!36207) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3352 () Bool)

(assert (= bs!3352 d!18933))

(assert (=> bs!3352 m!78435))

(assert (=> bs!3352 m!79337))

(assert (=> bs!3352 m!79337))

(declare-fun m!79813 () Bool)

(assert (=> bs!3352 m!79813))

(assert (=> b!78294 d!18933))

(declare-fun d!18935 () Bool)

(declare-fun c!12202 () Bool)

(assert (=> d!18935 (= c!12202 ((_ is ValueCellFull!911) (select (arr!1887 (_values!2254 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!51646 () V!2993)

(assert (=> d!18935 (= (get!1183 (select (arr!1887 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51646)))

(declare-fun b!79050 () Bool)

(assert (=> b!79050 (= e!51646 (get!1184 (select (arr!1887 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79051 () Bool)

(assert (=> b!79051 (= e!51646 (get!1185 (select (arr!1887 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18935 c!12202) b!79050))

(assert (= (and d!18935 (not c!12202)) b!79051))

(assert (=> b!79050 m!78469))

(assert (=> b!79050 m!78471))

(declare-fun m!79815 () Bool)

(assert (=> b!79050 m!79815))

(assert (=> b!79051 m!78469))

(assert (=> b!79051 m!78471))

(declare-fun m!79817 () Bool)

(assert (=> b!79051 m!79817))

(assert (=> b!78294 d!18935))

(assert (=> d!18531 d!18523))

(assert (=> d!18531 d!18525))

(assert (=> d!18531 d!18529))

(assert (=> d!18531 d!18527))

(declare-fun d!18937 () Bool)

(declare-fun e!51648 () Bool)

(assert (=> d!18937 e!51648))

(declare-fun res!41345 () Bool)

(assert (=> d!18937 (=> res!41345 e!51648)))

(declare-fun lt!36693 () Bool)

(assert (=> d!18937 (= res!41345 (not lt!36693))))

(declare-fun lt!36695 () Bool)

(assert (=> d!18937 (= lt!36693 lt!36695)))

(declare-fun lt!36694 () Unit!2237)

(declare-fun e!51647 () Unit!2237)

(assert (=> d!18937 (= lt!36694 e!51647)))

(declare-fun c!12203 () Bool)

(assert (=> d!18937 (= c!12203 lt!36695)))

(assert (=> d!18937 (= lt!36695 (containsKey!141 (toList!729 lt!36460) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!18937 (= (contains!736 lt!36460 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) lt!36693)))

(declare-fun b!79052 () Bool)

(declare-fun lt!36692 () Unit!2237)

(assert (=> b!79052 (= e!51647 lt!36692)))

(assert (=> b!79052 (= lt!36692 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36460) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> b!79052 (isDefined!90 (getValueByKey!138 (toList!729 lt!36460) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!79053 () Bool)

(declare-fun Unit!2281 () Unit!2237)

(assert (=> b!79053 (= e!51647 Unit!2281)))

(declare-fun b!79054 () Bool)

(assert (=> b!79054 (= e!51648 (isDefined!90 (getValueByKey!138 (toList!729 lt!36460) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(assert (= (and d!18937 c!12203) b!79052))

(assert (= (and d!18937 (not c!12203)) b!79053))

(assert (= (and d!18937 (not res!41345)) b!79054))

(declare-fun m!79819 () Bool)

(assert (=> d!18937 m!79819))

(declare-fun m!79821 () Bool)

(assert (=> b!79052 m!79821))

(assert (=> b!79052 m!79113))

(assert (=> b!79052 m!79113))

(declare-fun m!79823 () Bool)

(assert (=> b!79052 m!79823))

(assert (=> b!79054 m!79113))

(assert (=> b!79054 m!79113))

(assert (=> b!79054 m!79823))

(assert (=> d!18709 d!18937))

(declare-fun b!79055 () Bool)

(declare-fun e!51649 () Option!144)

(assert (=> b!79055 (= e!51649 (Some!143 (_2!1092 (h!2078 lt!36459))))))

(declare-fun b!79056 () Bool)

(declare-fun e!51650 () Option!144)

(assert (=> b!79056 (= e!51649 e!51650)))

(declare-fun c!12205 () Bool)

(assert (=> b!79056 (= c!12205 (and ((_ is Cons!1490) lt!36459) (not (= (_1!1092 (h!2078 lt!36459)) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))))

(declare-fun b!79058 () Bool)

(assert (=> b!79058 (= e!51650 None!142)))

(declare-fun b!79057 () Bool)

(assert (=> b!79057 (= e!51650 (getValueByKey!138 (t!5132 lt!36459) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun d!18939 () Bool)

(declare-fun c!12204 () Bool)

(assert (=> d!18939 (= c!12204 (and ((_ is Cons!1490) lt!36459) (= (_1!1092 (h!2078 lt!36459)) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(assert (=> d!18939 (= (getValueByKey!138 lt!36459 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) e!51649)))

(assert (= (and d!18939 c!12204) b!79055))

(assert (= (and d!18939 (not c!12204)) b!79056))

(assert (= (and b!79056 c!12205) b!79057))

(assert (= (and b!79056 (not c!12205)) b!79058))

(declare-fun m!79825 () Bool)

(assert (=> b!79057 m!79825))

(assert (=> d!18709 d!18939))

(declare-fun d!18941 () Bool)

(assert (=> d!18941 (= (getValueByKey!138 lt!36459 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (Some!143 (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun lt!36696 () Unit!2237)

(assert (=> d!18941 (= lt!36696 (choose!468 lt!36459 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun e!51651 () Bool)

(assert (=> d!18941 e!51651))

(declare-fun res!41346 () Bool)

(assert (=> d!18941 (=> (not res!41346) (not e!51651))))

(assert (=> d!18941 (= res!41346 (isStrictlySorted!282 lt!36459))))

(assert (=> d!18941 (= (lemmaContainsTupThenGetReturnValue!55 lt!36459 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) lt!36696)))

(declare-fun b!79059 () Bool)

(declare-fun res!41347 () Bool)

(assert (=> b!79059 (=> (not res!41347) (not e!51651))))

(assert (=> b!79059 (= res!41347 (containsKey!141 lt!36459 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!79060 () Bool)

(assert (=> b!79060 (= e!51651 (contains!737 lt!36459 (tuple2!2163 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(assert (= (and d!18941 res!41346) b!79059))

(assert (= (and b!79059 res!41347) b!79060))

(assert (=> d!18941 m!79107))

(declare-fun m!79827 () Bool)

(assert (=> d!18941 m!79827))

(declare-fun m!79829 () Bool)

(assert (=> d!18941 m!79829))

(declare-fun m!79831 () Bool)

(assert (=> b!79059 m!79831))

(declare-fun m!79833 () Bool)

(assert (=> b!79060 m!79833))

(assert (=> d!18709 d!18941))

(declare-fun b!79061 () Bool)

(declare-fun e!51654 () List!1494)

(declare-fun e!51652 () List!1494)

(assert (=> b!79061 (= e!51654 e!51652)))

(declare-fun c!12207 () Bool)

(assert (=> b!79061 (= c!12207 (and ((_ is Cons!1490) (toList!729 e!51125)) (= (_1!1092 (h!2078 (toList!729 e!51125))) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!79062 () Bool)

(declare-fun c!12206 () Bool)

(assert (=> b!79062 (= c!12206 (and ((_ is Cons!1490) (toList!729 e!51125)) (bvsgt (_1!1092 (h!2078 (toList!729 e!51125))) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun e!51656 () List!1494)

(assert (=> b!79062 (= e!51652 e!51656)))

(declare-fun b!79063 () Bool)

(declare-fun call!7272 () List!1494)

(assert (=> b!79063 (= e!51656 call!7272)))

(declare-fun b!79064 () Bool)

(declare-fun call!7274 () List!1494)

(assert (=> b!79064 (= e!51652 call!7274)))

(declare-fun bm!7270 () Bool)

(assert (=> bm!7270 (= call!7272 call!7274)))

(declare-fun b!79065 () Bool)

(declare-fun e!51655 () List!1494)

(assert (=> b!79065 (= e!51655 (insertStrictlySorted!58 (t!5132 (toList!729 e!51125)) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!79066 () Bool)

(declare-fun call!7273 () List!1494)

(assert (=> b!79066 (= e!51654 call!7273)))

(declare-fun b!79067 () Bool)

(assert (=> b!79067 (= e!51655 (ite c!12207 (t!5132 (toList!729 e!51125)) (ite c!12206 (Cons!1490 (h!2078 (toList!729 e!51125)) (t!5132 (toList!729 e!51125))) Nil!1491)))))

(declare-fun d!18943 () Bool)

(declare-fun e!51653 () Bool)

(assert (=> d!18943 e!51653))

(declare-fun res!41349 () Bool)

(assert (=> d!18943 (=> (not res!41349) (not e!51653))))

(declare-fun lt!36697 () List!1494)

(assert (=> d!18943 (= res!41349 (isStrictlySorted!282 lt!36697))))

(assert (=> d!18943 (= lt!36697 e!51654)))

(declare-fun c!12209 () Bool)

(assert (=> d!18943 (= c!12209 (and ((_ is Cons!1490) (toList!729 e!51125)) (bvslt (_1!1092 (h!2078 (toList!729 e!51125))) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(assert (=> d!18943 (isStrictlySorted!282 (toList!729 e!51125))))

(assert (=> d!18943 (= (insertStrictlySorted!58 (toList!729 e!51125) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) lt!36697)))

(declare-fun bm!7269 () Bool)

(assert (=> bm!7269 (= call!7274 call!7273)))

(declare-fun b!79068 () Bool)

(declare-fun res!41348 () Bool)

(assert (=> b!79068 (=> (not res!41348) (not e!51653))))

(assert (=> b!79068 (= res!41348 (containsKey!141 lt!36697 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!79069 () Bool)

(assert (=> b!79069 (= e!51656 call!7272)))

(declare-fun b!79070 () Bool)

(assert (=> b!79070 (= e!51653 (contains!737 lt!36697 (tuple2!2163 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun bm!7271 () Bool)

(assert (=> bm!7271 (= call!7273 ($colon$colon!68 e!51655 (ite c!12209 (h!2078 (toList!729 e!51125)) (tuple2!2163 (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_2!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))))

(declare-fun c!12208 () Bool)

(assert (=> bm!7271 (= c!12208 c!12209)))

(assert (= (and d!18943 c!12209) b!79066))

(assert (= (and d!18943 (not c!12209)) b!79061))

(assert (= (and b!79061 c!12207) b!79064))

(assert (= (and b!79061 (not c!12207)) b!79062))

(assert (= (and b!79062 c!12206) b!79069))

(assert (= (and b!79062 (not c!12206)) b!79063))

(assert (= (or b!79069 b!79063) bm!7270))

(assert (= (or b!79064 bm!7270) bm!7269))

(assert (= (or b!79066 bm!7269) bm!7271))

(assert (= (and bm!7271 c!12208) b!79065))

(assert (= (and bm!7271 (not c!12208)) b!79067))

(assert (= (and d!18943 res!41349) b!79068))

(assert (= (and b!79068 res!41348) b!79070))

(declare-fun m!79835 () Bool)

(assert (=> b!79070 m!79835))

(declare-fun m!79837 () Bool)

(assert (=> b!79065 m!79837))

(declare-fun m!79839 () Bool)

(assert (=> b!79068 m!79839))

(declare-fun m!79841 () Bool)

(assert (=> d!18943 m!79841))

(declare-fun m!79843 () Bool)

(assert (=> d!18943 m!79843))

(declare-fun m!79845 () Bool)

(assert (=> bm!7271 m!79845))

(assert (=> d!18709 d!18943))

(declare-fun d!18945 () Bool)

(declare-fun res!41350 () Bool)

(declare-fun e!51657 () Bool)

(assert (=> d!18945 (=> res!41350 e!51657)))

(assert (=> d!18945 (= res!41350 (and ((_ is Cons!1490) (toList!729 lt!35932)) (= (_1!1092 (h!2078 (toList!729 lt!35932))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18945 (= (containsKey!141 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000) e!51657)))

(declare-fun b!79071 () Bool)

(declare-fun e!51658 () Bool)

(assert (=> b!79071 (= e!51657 e!51658)))

(declare-fun res!41351 () Bool)

(assert (=> b!79071 (=> (not res!41351) (not e!51658))))

(assert (=> b!79071 (= res!41351 (and (or (not ((_ is Cons!1490) (toList!729 lt!35932))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35932))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1490) (toList!729 lt!35932)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35932))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79072 () Bool)

(assert (=> b!79072 (= e!51658 (containsKey!141 (t!5132 (toList!729 lt!35932)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!18945 (not res!41350)) b!79071))

(assert (= (and b!79071 res!41351) b!79072))

(declare-fun m!79847 () Bool)

(assert (=> b!79072 m!79847))

(assert (=> d!18701 d!18945))

(declare-fun d!18947 () Bool)

(declare-fun res!41352 () Bool)

(declare-fun e!51659 () Bool)

(assert (=> d!18947 (=> res!41352 e!51659)))

(assert (=> d!18947 (= res!41352 (and ((_ is Cons!1490) lt!36300) (= (_1!1092 (h!2078 lt!36300)) (_1!1092 lt!35792))))))

(assert (=> d!18947 (= (containsKey!141 lt!36300 (_1!1092 lt!35792)) e!51659)))

(declare-fun b!79073 () Bool)

(declare-fun e!51660 () Bool)

(assert (=> b!79073 (= e!51659 e!51660)))

(declare-fun res!41353 () Bool)

(assert (=> b!79073 (=> (not res!41353) (not e!51660))))

(assert (=> b!79073 (= res!41353 (and (or (not ((_ is Cons!1490) lt!36300)) (bvsle (_1!1092 (h!2078 lt!36300)) (_1!1092 lt!35792))) ((_ is Cons!1490) lt!36300) (bvslt (_1!1092 (h!2078 lt!36300)) (_1!1092 lt!35792))))))

(declare-fun b!79074 () Bool)

(assert (=> b!79074 (= e!51660 (containsKey!141 (t!5132 lt!36300) (_1!1092 lt!35792)))))

(assert (= (and d!18947 (not res!41352)) b!79073))

(assert (= (and b!79073 res!41353) b!79074))

(declare-fun m!79849 () Bool)

(assert (=> b!79074 m!79849))

(assert (=> b!78447 d!18947))

(declare-fun b!79075 () Bool)

(declare-fun e!51661 () (_ BitVec 32))

(declare-fun call!7275 () (_ BitVec 32))

(assert (=> b!79075 (= e!51661 (bvadd #b00000000000000000000000000000001 call!7275))))

(declare-fun b!79076 () Bool)

(declare-fun e!51662 () (_ BitVec 32))

(assert (=> b!79076 (= e!51662 #b00000000000000000000000000000000)))

(declare-fun bm!7272 () Bool)

(assert (=> bm!7272 (= call!7275 (arrayCountValidKeys!0 (_keys!3931 (_2!1093 lt!36122)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (_2!1093 lt!36122)))))))

(declare-fun b!79077 () Bool)

(assert (=> b!79077 (= e!51661 call!7275)))

(declare-fun d!18949 () Bool)

(declare-fun lt!36698 () (_ BitVec 32))

(assert (=> d!18949 (and (bvsge lt!36698 #b00000000000000000000000000000000) (bvsle lt!36698 (bvsub (size!2127 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000)))))

(assert (=> d!18949 (= lt!36698 e!51662)))

(declare-fun c!12211 () Bool)

(assert (=> d!18949 (= c!12211 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))))))

(assert (=> d!18949 (and (bvsle #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2127 (_keys!3931 (_2!1093 lt!36122))) (size!2127 (_keys!3931 (_2!1093 lt!36122)))))))

(assert (=> d!18949 (= (arrayCountValidKeys!0 (_keys!3931 (_2!1093 lt!36122)) #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))) lt!36698)))

(declare-fun b!79078 () Bool)

(assert (=> b!79078 (= e!51662 e!51661)))

(declare-fun c!12210 () Bool)

(assert (=> b!79078 (= c!12210 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000)))))

(assert (= (and d!18949 c!12211) b!79076))

(assert (= (and d!18949 (not c!12211)) b!79078))

(assert (= (and b!79078 c!12210) b!79075))

(assert (= (and b!79078 (not c!12210)) b!79077))

(assert (= (or b!79075 b!79077) bm!7272))

(declare-fun m!79851 () Bool)

(assert (=> bm!7272 m!79851))

(declare-fun m!79853 () Bool)

(assert (=> b!79078 m!79853))

(assert (=> b!79078 m!79853))

(declare-fun m!79855 () Bool)

(assert (=> b!79078 m!79855))

(assert (=> b!78232 d!18949))

(declare-fun b!79079 () Bool)

(declare-fun e!51665 () List!1494)

(declare-fun e!51663 () List!1494)

(assert (=> b!79079 (= e!51665 e!51663)))

(declare-fun c!12213 () Bool)

(assert (=> b!79079 (= c!12213 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35791))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35791)))) (_1!1092 lt!35789))))))

(declare-fun b!79080 () Bool)

(declare-fun c!12212 () Bool)

(assert (=> b!79080 (= c!12212 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35791))) (bvsgt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35791)))) (_1!1092 lt!35789))))))

(declare-fun e!51667 () List!1494)

(assert (=> b!79080 (= e!51663 e!51667)))

(declare-fun b!79081 () Bool)

(declare-fun call!7276 () List!1494)

(assert (=> b!79081 (= e!51667 call!7276)))

(declare-fun b!79082 () Bool)

(declare-fun call!7278 () List!1494)

(assert (=> b!79082 (= e!51663 call!7278)))

(declare-fun bm!7274 () Bool)

(assert (=> bm!7274 (= call!7276 call!7278)))

(declare-fun b!79083 () Bool)

(declare-fun e!51666 () List!1494)

(assert (=> b!79083 (= e!51666 (insertStrictlySorted!58 (t!5132 (t!5132 (toList!729 lt!35791))) (_1!1092 lt!35789) (_2!1092 lt!35789)))))

(declare-fun b!79084 () Bool)

(declare-fun call!7277 () List!1494)

(assert (=> b!79084 (= e!51665 call!7277)))

(declare-fun b!79085 () Bool)

(assert (=> b!79085 (= e!51666 (ite c!12213 (t!5132 (t!5132 (toList!729 lt!35791))) (ite c!12212 (Cons!1490 (h!2078 (t!5132 (toList!729 lt!35791))) (t!5132 (t!5132 (toList!729 lt!35791)))) Nil!1491)))))

(declare-fun d!18951 () Bool)

(declare-fun e!51664 () Bool)

(assert (=> d!18951 e!51664))

(declare-fun res!41355 () Bool)

(assert (=> d!18951 (=> (not res!41355) (not e!51664))))

(declare-fun lt!36699 () List!1494)

(assert (=> d!18951 (= res!41355 (isStrictlySorted!282 lt!36699))))

(assert (=> d!18951 (= lt!36699 e!51665)))

(declare-fun c!12215 () Bool)

(assert (=> d!18951 (= c!12215 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35791))) (bvslt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35791)))) (_1!1092 lt!35789))))))

(assert (=> d!18951 (isStrictlySorted!282 (t!5132 (toList!729 lt!35791)))))

(assert (=> d!18951 (= (insertStrictlySorted!58 (t!5132 (toList!729 lt!35791)) (_1!1092 lt!35789) (_2!1092 lt!35789)) lt!36699)))

(declare-fun bm!7273 () Bool)

(assert (=> bm!7273 (= call!7278 call!7277)))

(declare-fun b!79086 () Bool)

(declare-fun res!41354 () Bool)

(assert (=> b!79086 (=> (not res!41354) (not e!51664))))

(assert (=> b!79086 (= res!41354 (containsKey!141 lt!36699 (_1!1092 lt!35789)))))

(declare-fun b!79087 () Bool)

(assert (=> b!79087 (= e!51667 call!7276)))

(declare-fun b!79088 () Bool)

(assert (=> b!79088 (= e!51664 (contains!737 lt!36699 (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun bm!7275 () Bool)

(assert (=> bm!7275 (= call!7277 ($colon$colon!68 e!51666 (ite c!12215 (h!2078 (t!5132 (toList!729 lt!35791))) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789)))))))

(declare-fun c!12214 () Bool)

(assert (=> bm!7275 (= c!12214 c!12215)))

(assert (= (and d!18951 c!12215) b!79084))

(assert (= (and d!18951 (not c!12215)) b!79079))

(assert (= (and b!79079 c!12213) b!79082))

(assert (= (and b!79079 (not c!12213)) b!79080))

(assert (= (and b!79080 c!12212) b!79087))

(assert (= (and b!79080 (not c!12212)) b!79081))

(assert (= (or b!79087 b!79081) bm!7274))

(assert (= (or b!79082 bm!7274) bm!7273))

(assert (= (or b!79084 bm!7273) bm!7275))

(assert (= (and bm!7275 c!12214) b!79083))

(assert (= (and bm!7275 (not c!12214)) b!79085))

(assert (= (and d!18951 res!41355) b!79086))

(assert (= (and b!79086 res!41354) b!79088))

(declare-fun m!79857 () Bool)

(assert (=> b!79088 m!79857))

(declare-fun m!79859 () Bool)

(assert (=> b!79083 m!79859))

(declare-fun m!79861 () Bool)

(assert (=> b!79086 m!79861))

(declare-fun m!79863 () Bool)

(assert (=> d!18951 m!79863))

(assert (=> d!18951 m!79567))

(declare-fun m!79865 () Bool)

(assert (=> bm!7275 m!79865))

(assert (=> b!78672 d!18951))

(declare-fun d!18953 () Bool)

(assert (=> d!18953 (= (inRange!0 (index!3071 lt!36160) (mask!6267 newMap!16)) (and (bvsge (index!3071 lt!36160) #b00000000000000000000000000000000) (bvslt (index!3071 lt!36160) (bvadd (mask!6267 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!78239 d!18953))

(declare-fun b!79089 () Bool)

(declare-fun e!51668 () Option!144)

(assert (=> b!79089 (= e!51668 (Some!143 (_2!1092 (h!2078 (t!5132 lt!35960)))))))

(declare-fun b!79090 () Bool)

(declare-fun e!51669 () Option!144)

(assert (=> b!79090 (= e!51668 e!51669)))

(declare-fun c!12217 () Bool)

(assert (=> b!79090 (= c!12217 (and ((_ is Cons!1490) (t!5132 lt!35960)) (not (= (_1!1092 (h!2078 (t!5132 lt!35960))) (_1!1092 lt!35806)))))))

(declare-fun b!79092 () Bool)

(assert (=> b!79092 (= e!51669 None!142)))

(declare-fun b!79091 () Bool)

(assert (=> b!79091 (= e!51669 (getValueByKey!138 (t!5132 (t!5132 lt!35960)) (_1!1092 lt!35806)))))

(declare-fun d!18955 () Bool)

(declare-fun c!12216 () Bool)

(assert (=> d!18955 (= c!12216 (and ((_ is Cons!1490) (t!5132 lt!35960)) (= (_1!1092 (h!2078 (t!5132 lt!35960))) (_1!1092 lt!35806))))))

(assert (=> d!18955 (= (getValueByKey!138 (t!5132 lt!35960) (_1!1092 lt!35806)) e!51668)))

(assert (= (and d!18955 c!12216) b!79089))

(assert (= (and d!18955 (not c!12216)) b!79090))

(assert (= (and b!79090 c!12217) b!79091))

(assert (= (and b!79090 (not c!12217)) b!79092))

(declare-fun m!79867 () Bool)

(assert (=> b!79091 m!79867))

(assert (=> b!78484 d!18955))

(declare-fun d!18957 () Bool)

(declare-fun res!41356 () Bool)

(declare-fun e!51670 () Bool)

(assert (=> d!18957 (=> res!41356 e!51670)))

(assert (=> d!18957 (= res!41356 (and ((_ is Cons!1490) (toList!729 call!7155)) (= (_1!1092 (h!2078 (toList!729 call!7155))) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137)))))))

(assert (=> d!18957 (= (containsKey!141 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))) e!51670)))

(declare-fun b!79093 () Bool)

(declare-fun e!51671 () Bool)

(assert (=> b!79093 (= e!51670 e!51671)))

(declare-fun res!41357 () Bool)

(assert (=> b!79093 (=> (not res!41357) (not e!51671))))

(assert (=> b!79093 (= res!41357 (and (or (not ((_ is Cons!1490) (toList!729 call!7155))) (bvsle (_1!1092 (h!2078 (toList!729 call!7155))) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137)))) ((_ is Cons!1490) (toList!729 call!7155)) (bvslt (_1!1092 (h!2078 (toList!729 call!7155))) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137)))))))

(declare-fun b!79094 () Bool)

(assert (=> b!79094 (= e!51671 (containsKey!141 (t!5132 (toList!729 call!7155)) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(assert (= (and d!18957 (not res!41356)) b!79093))

(assert (= (and b!79093 res!41357) b!79094))

(assert (=> b!79094 m!78299))

(declare-fun m!79869 () Bool)

(assert (=> b!79094 m!79869))

(assert (=> d!18743 d!18957))

(declare-fun d!18959 () Bool)

(declare-fun e!51672 () Bool)

(assert (=> d!18959 e!51672))

(declare-fun res!41358 () Bool)

(assert (=> d!18959 (=> (not res!41358) (not e!51672))))

(declare-fun lt!36701 () ListLongMap!1427)

(assert (=> d!18959 (= res!41358 (contains!736 lt!36701 (_1!1092 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16)))))))

(declare-fun lt!36700 () List!1494)

(assert (=> d!18959 (= lt!36701 (ListLongMap!1428 lt!36700))))

(declare-fun lt!36702 () Unit!2237)

(declare-fun lt!36703 () Unit!2237)

(assert (=> d!18959 (= lt!36702 lt!36703)))

(assert (=> d!18959 (= (getValueByKey!138 lt!36700 (_1!1092 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18959 (= lt!36703 (lemmaContainsTupThenGetReturnValue!55 lt!36700 (_1!1092 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18959 (= lt!36700 (insertStrictlySorted!58 (toList!729 lt!36200) (_1!1092 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18959 (= (+!100 lt!36200 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16))) lt!36701)))

(declare-fun b!79095 () Bool)

(declare-fun res!41359 () Bool)

(assert (=> b!79095 (=> (not res!41359) (not e!51672))))

(assert (=> b!79095 (= res!41359 (= (getValueByKey!138 (toList!729 lt!36701) (_1!1092 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16))))))))

(declare-fun b!79096 () Bool)

(assert (=> b!79096 (= e!51672 (contains!737 (toList!729 lt!36701) (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16))))))

(assert (= (and d!18959 res!41358) b!79095))

(assert (= (and b!79095 res!41359) b!79096))

(declare-fun m!79871 () Bool)

(assert (=> d!18959 m!79871))

(declare-fun m!79873 () Bool)

(assert (=> d!18959 m!79873))

(declare-fun m!79875 () Bool)

(assert (=> d!18959 m!79875))

(declare-fun m!79877 () Bool)

(assert (=> d!18959 m!79877))

(declare-fun m!79879 () Bool)

(assert (=> b!79095 m!79879))

(declare-fun m!79881 () Bool)

(assert (=> b!79096 m!79881))

(assert (=> b!78282 d!18959))

(declare-fun d!18961 () Bool)

(assert (=> d!18961 (= (apply!79 (+!100 lt!36194 (tuple2!2163 lt!36192 (minValue!2169 newMap!16))) lt!36191) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36194 (tuple2!2163 lt!36192 (minValue!2169 newMap!16)))) lt!36191)))))

(declare-fun bs!3353 () Bool)

(assert (= bs!3353 d!18961))

(declare-fun m!79883 () Bool)

(assert (=> bs!3353 m!79883))

(assert (=> bs!3353 m!79883))

(declare-fun m!79885 () Bool)

(assert (=> bs!3353 m!79885))

(assert (=> b!78282 d!18961))

(declare-fun d!18963 () Bool)

(assert (=> d!18963 (= (apply!79 (+!100 lt!36200 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16))) lt!36193) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36200 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16)))) lt!36193)))))

(declare-fun bs!3354 () Bool)

(assert (= bs!3354 d!18963))

(declare-fun m!79887 () Bool)

(assert (=> bs!3354 m!79887))

(assert (=> bs!3354 m!79887))

(declare-fun m!79889 () Bool)

(assert (=> bs!3354 m!79889))

(assert (=> b!78282 d!18963))

(declare-fun d!18965 () Bool)

(declare-fun e!51673 () Bool)

(assert (=> d!18965 e!51673))

(declare-fun res!41360 () Bool)

(assert (=> d!18965 (=> (not res!41360) (not e!51673))))

(declare-fun lt!36705 () ListLongMap!1427)

(assert (=> d!18965 (= res!41360 (contains!736 lt!36705 (_1!1092 (tuple2!2163 lt!36204 (minValue!2169 newMap!16)))))))

(declare-fun lt!36704 () List!1494)

(assert (=> d!18965 (= lt!36705 (ListLongMap!1428 lt!36704))))

(declare-fun lt!36706 () Unit!2237)

(declare-fun lt!36707 () Unit!2237)

(assert (=> d!18965 (= lt!36706 lt!36707)))

(assert (=> d!18965 (= (getValueByKey!138 lt!36704 (_1!1092 (tuple2!2163 lt!36204 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36204 (minValue!2169 newMap!16)))))))

(assert (=> d!18965 (= lt!36707 (lemmaContainsTupThenGetReturnValue!55 lt!36704 (_1!1092 (tuple2!2163 lt!36204 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36204 (minValue!2169 newMap!16)))))))

(assert (=> d!18965 (= lt!36704 (insertStrictlySorted!58 (toList!729 lt!36197) (_1!1092 (tuple2!2163 lt!36204 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36204 (minValue!2169 newMap!16)))))))

(assert (=> d!18965 (= (+!100 lt!36197 (tuple2!2163 lt!36204 (minValue!2169 newMap!16))) lt!36705)))

(declare-fun b!79097 () Bool)

(declare-fun res!41361 () Bool)

(assert (=> b!79097 (=> (not res!41361) (not e!51673))))

(assert (=> b!79097 (= res!41361 (= (getValueByKey!138 (toList!729 lt!36705) (_1!1092 (tuple2!2163 lt!36204 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36204 (minValue!2169 newMap!16))))))))

(declare-fun b!79098 () Bool)

(assert (=> b!79098 (= e!51673 (contains!737 (toList!729 lt!36705) (tuple2!2163 lt!36204 (minValue!2169 newMap!16))))))

(assert (= (and d!18965 res!41360) b!79097))

(assert (= (and b!79097 res!41361) b!79098))

(declare-fun m!79891 () Bool)

(assert (=> d!18965 m!79891))

(declare-fun m!79893 () Bool)

(assert (=> d!18965 m!79893))

(declare-fun m!79895 () Bool)

(assert (=> d!18965 m!79895))

(declare-fun m!79897 () Bool)

(assert (=> d!18965 m!79897))

(declare-fun m!79899 () Bool)

(assert (=> b!79097 m!79899))

(declare-fun m!79901 () Bool)

(assert (=> b!79098 m!79901))

(assert (=> b!78282 d!18965))

(declare-fun d!18967 () Bool)

(assert (=> d!18967 (= (apply!79 (+!100 lt!36197 (tuple2!2163 lt!36204 (minValue!2169 newMap!16))) lt!36202) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36197 (tuple2!2163 lt!36204 (minValue!2169 newMap!16)))) lt!36202)))))

(declare-fun bs!3355 () Bool)

(assert (= bs!3355 d!18967))

(declare-fun m!79903 () Bool)

(assert (=> bs!3355 m!79903))

(assert (=> bs!3355 m!79903))

(declare-fun m!79905 () Bool)

(assert (=> bs!3355 m!79905))

(assert (=> b!78282 d!18967))

(declare-fun d!18969 () Bool)

(declare-fun e!51675 () Bool)

(assert (=> d!18969 e!51675))

(declare-fun res!41362 () Bool)

(assert (=> d!18969 (=> res!41362 e!51675)))

(declare-fun lt!36709 () Bool)

(assert (=> d!18969 (= res!41362 (not lt!36709))))

(declare-fun lt!36711 () Bool)

(assert (=> d!18969 (= lt!36709 lt!36711)))

(declare-fun lt!36710 () Unit!2237)

(declare-fun e!51674 () Unit!2237)

(assert (=> d!18969 (= lt!36710 e!51674)))

(declare-fun c!12218 () Bool)

(assert (=> d!18969 (= c!12218 lt!36711)))

(assert (=> d!18969 (= lt!36711 (containsKey!141 (toList!729 (+!100 lt!36201 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16)))) lt!36199))))

(assert (=> d!18969 (= (contains!736 (+!100 lt!36201 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16))) lt!36199) lt!36709)))

(declare-fun b!79099 () Bool)

(declare-fun lt!36708 () Unit!2237)

(assert (=> b!79099 (= e!51674 lt!36708)))

(assert (=> b!79099 (= lt!36708 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (+!100 lt!36201 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16)))) lt!36199))))

(assert (=> b!79099 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36201 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16)))) lt!36199))))

(declare-fun b!79100 () Bool)

(declare-fun Unit!2282 () Unit!2237)

(assert (=> b!79100 (= e!51674 Unit!2282)))

(declare-fun b!79101 () Bool)

(assert (=> b!79101 (= e!51675 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36201 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16)))) lt!36199)))))

(assert (= (and d!18969 c!12218) b!79099))

(assert (= (and d!18969 (not c!12218)) b!79100))

(assert (= (and d!18969 (not res!41362)) b!79101))

(declare-fun m!79907 () Bool)

(assert (=> d!18969 m!79907))

(declare-fun m!79909 () Bool)

(assert (=> b!79099 m!79909))

(declare-fun m!79911 () Bool)

(assert (=> b!79099 m!79911))

(assert (=> b!79099 m!79911))

(declare-fun m!79913 () Bool)

(assert (=> b!79099 m!79913))

(assert (=> b!79101 m!79911))

(assert (=> b!79101 m!79911))

(assert (=> b!79101 m!79913))

(assert (=> b!78282 d!18969))

(declare-fun d!18971 () Bool)

(declare-fun e!51676 () Bool)

(assert (=> d!18971 e!51676))

(declare-fun res!41363 () Bool)

(assert (=> d!18971 (=> (not res!41363) (not e!51676))))

(declare-fun lt!36713 () ListLongMap!1427)

(assert (=> d!18971 (= res!41363 (contains!736 lt!36713 (_1!1092 (tuple2!2163 lt!36192 (minValue!2169 newMap!16)))))))

(declare-fun lt!36712 () List!1494)

(assert (=> d!18971 (= lt!36713 (ListLongMap!1428 lt!36712))))

(declare-fun lt!36714 () Unit!2237)

(declare-fun lt!36715 () Unit!2237)

(assert (=> d!18971 (= lt!36714 lt!36715)))

(assert (=> d!18971 (= (getValueByKey!138 lt!36712 (_1!1092 (tuple2!2163 lt!36192 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36192 (minValue!2169 newMap!16)))))))

(assert (=> d!18971 (= lt!36715 (lemmaContainsTupThenGetReturnValue!55 lt!36712 (_1!1092 (tuple2!2163 lt!36192 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36192 (minValue!2169 newMap!16)))))))

(assert (=> d!18971 (= lt!36712 (insertStrictlySorted!58 (toList!729 lt!36194) (_1!1092 (tuple2!2163 lt!36192 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36192 (minValue!2169 newMap!16)))))))

(assert (=> d!18971 (= (+!100 lt!36194 (tuple2!2163 lt!36192 (minValue!2169 newMap!16))) lt!36713)))

(declare-fun b!79102 () Bool)

(declare-fun res!41364 () Bool)

(assert (=> b!79102 (=> (not res!41364) (not e!51676))))

(assert (=> b!79102 (= res!41364 (= (getValueByKey!138 (toList!729 lt!36713) (_1!1092 (tuple2!2163 lt!36192 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36192 (minValue!2169 newMap!16))))))))

(declare-fun b!79103 () Bool)

(assert (=> b!79103 (= e!51676 (contains!737 (toList!729 lt!36713) (tuple2!2163 lt!36192 (minValue!2169 newMap!16))))))

(assert (= (and d!18971 res!41363) b!79102))

(assert (= (and b!79102 res!41364) b!79103))

(declare-fun m!79915 () Bool)

(assert (=> d!18971 m!79915))

(declare-fun m!79917 () Bool)

(assert (=> d!18971 m!79917))

(declare-fun m!79919 () Bool)

(assert (=> d!18971 m!79919))

(declare-fun m!79921 () Bool)

(assert (=> d!18971 m!79921))

(declare-fun m!79923 () Bool)

(assert (=> b!79102 m!79923))

(declare-fun m!79925 () Bool)

(assert (=> b!79103 m!79925))

(assert (=> b!78282 d!18971))

(declare-fun d!18973 () Bool)

(assert (=> d!18973 (= (apply!79 lt!36200 lt!36193) (get!1186 (getValueByKey!138 (toList!729 lt!36200) lt!36193)))))

(declare-fun bs!3356 () Bool)

(assert (= bs!3356 d!18973))

(declare-fun m!79927 () Bool)

(assert (=> bs!3356 m!79927))

(assert (=> bs!3356 m!79927))

(declare-fun m!79929 () Bool)

(assert (=> bs!3356 m!79929))

(assert (=> b!78282 d!18973))

(declare-fun b!79104 () Bool)

(assert (=> b!79104 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> b!79104 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (_values!2254 newMap!16))))))

(declare-fun e!51680 () Bool)

(declare-fun lt!36716 () ListLongMap!1427)

(assert (=> b!79104 (= e!51680 (= (apply!79 lt!36716 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79105 () Bool)

(declare-fun e!51681 () ListLongMap!1427)

(assert (=> b!79105 (= e!51681 (ListLongMap!1428 Nil!1491))))

(declare-fun bm!7276 () Bool)

(declare-fun call!7279 () ListLongMap!1427)

(assert (=> bm!7276 (= call!7279 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16)))))

(declare-fun d!18975 () Bool)

(declare-fun e!51679 () Bool)

(assert (=> d!18975 e!51679))

(declare-fun res!41365 () Bool)

(assert (=> d!18975 (=> (not res!41365) (not e!51679))))

(assert (=> d!18975 (= res!41365 (not (contains!736 lt!36716 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18975 (= lt!36716 e!51681)))

(declare-fun c!12220 () Bool)

(assert (=> d!18975 (= c!12220 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!18975 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!18975 (= (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36716)))

(declare-fun b!79106 () Bool)

(declare-fun lt!36720 () Unit!2237)

(declare-fun lt!36718 () Unit!2237)

(assert (=> b!79106 (= lt!36720 lt!36718)))

(declare-fun lt!36719 () (_ BitVec 64))

(declare-fun lt!36722 () V!2993)

(declare-fun lt!36717 () (_ BitVec 64))

(declare-fun lt!36721 () ListLongMap!1427)

(assert (=> b!79106 (not (contains!736 (+!100 lt!36721 (tuple2!2163 lt!36719 lt!36722)) lt!36717))))

(assert (=> b!79106 (= lt!36718 (addStillNotContains!30 lt!36721 lt!36719 lt!36722 lt!36717))))

(assert (=> b!79106 (= lt!36717 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79106 (= lt!36722 (get!1183 (select (arr!1887 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79106 (= lt!36719 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79106 (= lt!36721 call!7279)))

(declare-fun e!51682 () ListLongMap!1427)

(assert (=> b!79106 (= e!51682 (+!100 call!7279 (tuple2!2163 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) (get!1183 (select (arr!1887 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79107 () Bool)

(declare-fun e!51678 () Bool)

(assert (=> b!79107 (= e!51679 e!51678)))

(declare-fun c!12219 () Bool)

(declare-fun e!51677 () Bool)

(assert (=> b!79107 (= c!12219 e!51677)))

(declare-fun res!41368 () Bool)

(assert (=> b!79107 (=> (not res!41368) (not e!51677))))

(assert (=> b!79107 (= res!41368 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79108 () Bool)

(declare-fun e!51683 () Bool)

(assert (=> b!79108 (= e!51683 (= lt!36716 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16))))))

(declare-fun b!79109 () Bool)

(declare-fun res!41366 () Bool)

(assert (=> b!79109 (=> (not res!41366) (not e!51679))))

(assert (=> b!79109 (= res!41366 (not (contains!736 lt!36716 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79110 () Bool)

(assert (=> b!79110 (= e!51678 e!51680)))

(assert (=> b!79110 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun res!41367 () Bool)

(assert (=> b!79110 (= res!41367 (contains!736 lt!36716 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79110 (=> (not res!41367) (not e!51680))))

(declare-fun b!79111 () Bool)

(assert (=> b!79111 (= e!51682 call!7279)))

(declare-fun b!79112 () Bool)

(assert (=> b!79112 (= e!51681 e!51682)))

(declare-fun c!12222 () Bool)

(assert (=> b!79112 (= c!12222 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79113 () Bool)

(assert (=> b!79113 (= e!51678 e!51683)))

(declare-fun c!12221 () Bool)

(assert (=> b!79113 (= c!12221 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79114 () Bool)

(assert (=> b!79114 (= e!51683 (isEmpty!332 lt!36716))))

(declare-fun b!79115 () Bool)

(assert (=> b!79115 (= e!51677 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79115 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!18975 c!12220) b!79105))

(assert (= (and d!18975 (not c!12220)) b!79112))

(assert (= (and b!79112 c!12222) b!79106))

(assert (= (and b!79112 (not c!12222)) b!79111))

(assert (= (or b!79106 b!79111) bm!7276))

(assert (= (and d!18975 res!41365) b!79109))

(assert (= (and b!79109 res!41366) b!79107))

(assert (= (and b!79107 res!41368) b!79115))

(assert (= (and b!79107 c!12219) b!79110))

(assert (= (and b!79107 (not c!12219)) b!79113))

(assert (= (and b!79110 res!41367) b!79104))

(assert (= (and b!79113 c!12221) b!79108))

(assert (= (and b!79113 (not c!12221)) b!79114))

(declare-fun b_lambda!3539 () Bool)

(assert (=> (not b_lambda!3539) (not b!79104)))

(assert (=> b!79104 t!5144))

(declare-fun b_and!4853 () Bool)

(assert (= b_and!4849 (and (=> t!5144 result!2821) b_and!4853)))

(assert (=> b!79104 t!5146))

(declare-fun b_and!4855 () Bool)

(assert (= b_and!4851 (and (=> t!5146 result!2823) b_and!4855)))

(declare-fun b_lambda!3541 () Bool)

(assert (=> (not b_lambda!3541) (not b!79106)))

(assert (=> b!79106 t!5144))

(declare-fun b_and!4857 () Bool)

(assert (= b_and!4853 (and (=> t!5144 result!2821) b_and!4857)))

(assert (=> b!79106 t!5146))

(declare-fun b_and!4859 () Bool)

(assert (= b_and!4855 (and (=> t!5146 result!2823) b_and!4859)))

(declare-fun m!79931 () Bool)

(assert (=> d!18975 m!79931))

(assert (=> d!18975 m!78355))

(declare-fun m!79933 () Bool)

(assert (=> bm!7276 m!79933))

(assert (=> b!79110 m!78435))

(assert (=> b!79110 m!78435))

(declare-fun m!79935 () Bool)

(assert (=> b!79110 m!79935))

(declare-fun m!79937 () Bool)

(assert (=> b!79109 m!79937))

(assert (=> b!79112 m!78435))

(assert (=> b!79112 m!78435))

(assert (=> b!79112 m!78437))

(declare-fun m!79939 () Bool)

(assert (=> b!79114 m!79939))

(assert (=> b!79108 m!79933))

(assert (=> b!79115 m!78435))

(assert (=> b!79115 m!78435))

(assert (=> b!79115 m!78437))

(declare-fun m!79941 () Bool)

(assert (=> b!79106 m!79941))

(declare-fun m!79943 () Bool)

(assert (=> b!79106 m!79943))

(declare-fun m!79945 () Bool)

(assert (=> b!79106 m!79945))

(assert (=> b!79106 m!79943))

(assert (=> b!79106 m!78471))

(declare-fun m!79947 () Bool)

(assert (=> b!79106 m!79947))

(assert (=> b!79106 m!78469))

(assert (=> b!79106 m!78435))

(assert (=> b!79106 m!78469))

(assert (=> b!79106 m!78471))

(assert (=> b!79106 m!78473))

(assert (=> b!79104 m!78435))

(declare-fun m!79949 () Bool)

(assert (=> b!79104 m!79949))

(assert (=> b!79104 m!78471))

(assert (=> b!79104 m!78469))

(assert (=> b!79104 m!78435))

(assert (=> b!79104 m!78469))

(assert (=> b!79104 m!78471))

(assert (=> b!79104 m!78473))

(assert (=> b!78282 d!18975))

(declare-fun d!18977 () Bool)

(assert (=> d!18977 (= (apply!79 lt!36194 lt!36191) (get!1186 (getValueByKey!138 (toList!729 lt!36194) lt!36191)))))

(declare-fun bs!3357 () Bool)

(assert (= bs!3357 d!18977))

(declare-fun m!79951 () Bool)

(assert (=> bs!3357 m!79951))

(assert (=> bs!3357 m!79951))

(declare-fun m!79953 () Bool)

(assert (=> bs!3357 m!79953))

(assert (=> b!78282 d!18977))

(declare-fun d!18979 () Bool)

(assert (=> d!18979 (= (apply!79 (+!100 lt!36197 (tuple2!2163 lt!36204 (minValue!2169 newMap!16))) lt!36202) (apply!79 lt!36197 lt!36202))))

(declare-fun lt!36723 () Unit!2237)

(assert (=> d!18979 (= lt!36723 (choose!465 lt!36197 lt!36204 (minValue!2169 newMap!16) lt!36202))))

(declare-fun e!51684 () Bool)

(assert (=> d!18979 e!51684))

(declare-fun res!41369 () Bool)

(assert (=> d!18979 (=> (not res!41369) (not e!51684))))

(assert (=> d!18979 (= res!41369 (contains!736 lt!36197 lt!36202))))

(assert (=> d!18979 (= (addApplyDifferent!55 lt!36197 lt!36204 (minValue!2169 newMap!16) lt!36202) lt!36723)))

(declare-fun b!79116 () Bool)

(assert (=> b!79116 (= e!51684 (not (= lt!36202 lt!36204)))))

(assert (= (and d!18979 res!41369) b!79116))

(assert (=> d!18979 m!78509))

(declare-fun m!79955 () Bool)

(assert (=> d!18979 m!79955))

(assert (=> d!18979 m!78487))

(assert (=> d!18979 m!78489))

(declare-fun m!79957 () Bool)

(assert (=> d!18979 m!79957))

(assert (=> d!18979 m!78487))

(assert (=> b!78282 d!18979))

(declare-fun d!18981 () Bool)

(assert (=> d!18981 (= (apply!79 lt!36197 lt!36202) (get!1186 (getValueByKey!138 (toList!729 lt!36197) lt!36202)))))

(declare-fun bs!3358 () Bool)

(assert (= bs!3358 d!18981))

(declare-fun m!79959 () Bool)

(assert (=> bs!3358 m!79959))

(assert (=> bs!3358 m!79959))

(declare-fun m!79961 () Bool)

(assert (=> bs!3358 m!79961))

(assert (=> b!78282 d!18981))

(declare-fun d!18983 () Bool)

(declare-fun e!51685 () Bool)

(assert (=> d!18983 e!51685))

(declare-fun res!41370 () Bool)

(assert (=> d!18983 (=> (not res!41370) (not e!51685))))

(declare-fun lt!36725 () ListLongMap!1427)

(assert (=> d!18983 (= res!41370 (contains!736 lt!36725 (_1!1092 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16)))))))

(declare-fun lt!36724 () List!1494)

(assert (=> d!18983 (= lt!36725 (ListLongMap!1428 lt!36724))))

(declare-fun lt!36726 () Unit!2237)

(declare-fun lt!36727 () Unit!2237)

(assert (=> d!18983 (= lt!36726 lt!36727)))

(assert (=> d!18983 (= (getValueByKey!138 lt!36724 (_1!1092 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18983 (= lt!36727 (lemmaContainsTupThenGetReturnValue!55 lt!36724 (_1!1092 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18983 (= lt!36724 (insertStrictlySorted!58 (toList!729 lt!36201) (_1!1092 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18983 (= (+!100 lt!36201 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16))) lt!36725)))

(declare-fun b!79117 () Bool)

(declare-fun res!41371 () Bool)

(assert (=> b!79117 (=> (not res!41371) (not e!51685))))

(assert (=> b!79117 (= res!41371 (= (getValueByKey!138 (toList!729 lt!36725) (_1!1092 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16))))))))

(declare-fun b!79118 () Bool)

(assert (=> b!79118 (= e!51685 (contains!737 (toList!729 lt!36725) (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16))))))

(assert (= (and d!18983 res!41370) b!79117))

(assert (= (and b!79117 res!41371) b!79118))

(declare-fun m!79963 () Bool)

(assert (=> d!18983 m!79963))

(declare-fun m!79965 () Bool)

(assert (=> d!18983 m!79965))

(declare-fun m!79967 () Bool)

(assert (=> d!18983 m!79967))

(declare-fun m!79969 () Bool)

(assert (=> d!18983 m!79969))

(declare-fun m!79971 () Bool)

(assert (=> b!79117 m!79971))

(declare-fun m!79973 () Bool)

(assert (=> b!79118 m!79973))

(assert (=> b!78282 d!18983))

(declare-fun d!18985 () Bool)

(assert (=> d!18985 (contains!736 (+!100 lt!36201 (tuple2!2163 lt!36198 (zeroValue!2169 newMap!16))) lt!36199)))

(declare-fun lt!36728 () Unit!2237)

(assert (=> d!18985 (= lt!36728 (choose!464 lt!36201 lt!36198 (zeroValue!2169 newMap!16) lt!36199))))

(assert (=> d!18985 (contains!736 lt!36201 lt!36199)))

(assert (=> d!18985 (= (addStillContains!55 lt!36201 lt!36198 (zeroValue!2169 newMap!16) lt!36199) lt!36728)))

(declare-fun bs!3359 () Bool)

(assert (= bs!3359 d!18985))

(assert (=> bs!3359 m!78499))

(assert (=> bs!3359 m!78499))

(assert (=> bs!3359 m!78505))

(declare-fun m!79975 () Bool)

(assert (=> bs!3359 m!79975))

(declare-fun m!79977 () Bool)

(assert (=> bs!3359 m!79977))

(assert (=> b!78282 d!18985))

(declare-fun d!18987 () Bool)

(assert (=> d!18987 (= (apply!79 (+!100 lt!36194 (tuple2!2163 lt!36192 (minValue!2169 newMap!16))) lt!36191) (apply!79 lt!36194 lt!36191))))

(declare-fun lt!36729 () Unit!2237)

(assert (=> d!18987 (= lt!36729 (choose!465 lt!36194 lt!36192 (minValue!2169 newMap!16) lt!36191))))

(declare-fun e!51686 () Bool)

(assert (=> d!18987 e!51686))

(declare-fun res!41372 () Bool)

(assert (=> d!18987 (=> (not res!41372) (not e!51686))))

(assert (=> d!18987 (= res!41372 (contains!736 lt!36194 lt!36191))))

(assert (=> d!18987 (= (addApplyDifferent!55 lt!36194 lt!36192 (minValue!2169 newMap!16) lt!36191) lt!36729)))

(declare-fun b!79119 () Bool)

(assert (=> b!79119 (= e!51686 (not (= lt!36191 lt!36192)))))

(assert (= (and d!18987 res!41372) b!79119))

(assert (=> d!18987 m!78507))

(declare-fun m!79979 () Bool)

(assert (=> d!18987 m!79979))

(assert (=> d!18987 m!78495))

(assert (=> d!18987 m!78503))

(declare-fun m!79981 () Bool)

(assert (=> d!18987 m!79981))

(assert (=> d!18987 m!78495))

(assert (=> b!78282 d!18987))

(declare-fun d!18989 () Bool)

(assert (=> d!18989 (= (apply!79 (+!100 lt!36200 (tuple2!2163 lt!36203 (zeroValue!2169 newMap!16))) lt!36193) (apply!79 lt!36200 lt!36193))))

(declare-fun lt!36730 () Unit!2237)

(assert (=> d!18989 (= lt!36730 (choose!465 lt!36200 lt!36203 (zeroValue!2169 newMap!16) lt!36193))))

(declare-fun e!51687 () Bool)

(assert (=> d!18989 e!51687))

(declare-fun res!41373 () Bool)

(assert (=> d!18989 (=> (not res!41373) (not e!51687))))

(assert (=> d!18989 (= res!41373 (contains!736 lt!36200 lt!36193))))

(assert (=> d!18989 (= (addApplyDifferent!55 lt!36200 lt!36203 (zeroValue!2169 newMap!16) lt!36193) lt!36730)))

(declare-fun b!79120 () Bool)

(assert (=> b!79120 (= e!51687 (not (= lt!36193 lt!36203)))))

(assert (= (and d!18989 res!41373) b!79120))

(assert (=> d!18989 m!78493))

(declare-fun m!79983 () Bool)

(assert (=> d!18989 m!79983))

(assert (=> d!18989 m!78483))

(assert (=> d!18989 m!78485))

(declare-fun m!79985 () Bool)

(assert (=> d!18989 m!79985))

(assert (=> d!18989 m!78483))

(assert (=> b!78282 d!18989))

(declare-fun d!18991 () Bool)

(declare-fun e!51689 () Bool)

(assert (=> d!18991 e!51689))

(declare-fun res!41374 () Bool)

(assert (=> d!18991 (=> res!41374 e!51689)))

(declare-fun lt!36732 () Bool)

(assert (=> d!18991 (= res!41374 (not lt!36732))))

(declare-fun lt!36734 () Bool)

(assert (=> d!18991 (= lt!36732 lt!36734)))

(declare-fun lt!36733 () Unit!2237)

(declare-fun e!51688 () Unit!2237)

(assert (=> d!18991 (= lt!36733 e!51688)))

(declare-fun c!12223 () Bool)

(assert (=> d!18991 (= c!12223 lt!36734)))

(assert (=> d!18991 (= lt!36734 (containsKey!141 (toList!729 lt!36233) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!18991 (= (contains!736 lt!36233 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36732)))

(declare-fun b!79121 () Bool)

(declare-fun lt!36731 () Unit!2237)

(assert (=> b!79121 (= e!51688 lt!36731)))

(assert (=> b!79121 (= lt!36731 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36233) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> b!79121 (isDefined!90 (getValueByKey!138 (toList!729 lt!36233) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79122 () Bool)

(declare-fun Unit!2283 () Unit!2237)

(assert (=> b!79122 (= e!51688 Unit!2283)))

(declare-fun b!79123 () Bool)

(assert (=> b!79123 (= e!51689 (isDefined!90 (getValueByKey!138 (toList!729 lt!36233) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!18991 c!12223) b!79121))

(assert (= (and d!18991 (not c!12223)) b!79122))

(assert (= (and d!18991 (not res!41374)) b!79123))

(declare-fun m!79987 () Bool)

(assert (=> d!18991 m!79987))

(declare-fun m!79989 () Bool)

(assert (=> b!79121 m!79989))

(assert (=> b!79121 m!78595))

(assert (=> b!79121 m!78595))

(declare-fun m!79991 () Bool)

(assert (=> b!79121 m!79991))

(assert (=> b!79123 m!78595))

(assert (=> b!79123 m!78595))

(assert (=> b!79123 m!79991))

(assert (=> d!18569 d!18991))

(declare-fun b!79124 () Bool)

(declare-fun e!51690 () Option!144)

(assert (=> b!79124 (= e!51690 (Some!143 (_2!1092 (h!2078 lt!36232))))))

(declare-fun b!79125 () Bool)

(declare-fun e!51691 () Option!144)

(assert (=> b!79125 (= e!51690 e!51691)))

(declare-fun c!12225 () Bool)

(assert (=> b!79125 (= c!12225 (and ((_ is Cons!1490) lt!36232) (not (= (_1!1092 (h!2078 lt!36232)) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79127 () Bool)

(assert (=> b!79127 (= e!51691 None!142)))

(declare-fun b!79126 () Bool)

(assert (=> b!79126 (= e!51691 (getValueByKey!138 (t!5132 lt!36232) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!18993 () Bool)

(declare-fun c!12224 () Bool)

(assert (=> d!18993 (= c!12224 (and ((_ is Cons!1490) lt!36232) (= (_1!1092 (h!2078 lt!36232)) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!18993 (= (getValueByKey!138 lt!36232 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!51690)))

(assert (= (and d!18993 c!12224) b!79124))

(assert (= (and d!18993 (not c!12224)) b!79125))

(assert (= (and b!79125 c!12225) b!79126))

(assert (= (and b!79125 (not c!12225)) b!79127))

(declare-fun m!79993 () Bool)

(assert (=> b!79126 m!79993))

(assert (=> d!18569 d!18993))

(declare-fun d!18995 () Bool)

(assert (=> d!18995 (= (getValueByKey!138 lt!36232 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36735 () Unit!2237)

(assert (=> d!18995 (= lt!36735 (choose!468 lt!36232 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!51692 () Bool)

(assert (=> d!18995 e!51692))

(declare-fun res!41375 () Bool)

(assert (=> d!18995 (=> (not res!41375) (not e!51692))))

(assert (=> d!18995 (= res!41375 (isStrictlySorted!282 lt!36232))))

(assert (=> d!18995 (= (lemmaContainsTupThenGetReturnValue!55 lt!36232 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36735)))

(declare-fun b!79128 () Bool)

(declare-fun res!41376 () Bool)

(assert (=> b!79128 (=> (not res!41376) (not e!51692))))

(assert (=> b!79128 (= res!41376 (containsKey!141 lt!36232 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79129 () Bool)

(assert (=> b!79129 (= e!51692 (contains!737 lt!36232 (tuple2!2163 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!18995 res!41375) b!79128))

(assert (= (and b!79128 res!41376) b!79129))

(assert (=> d!18995 m!78589))

(declare-fun m!79995 () Bool)

(assert (=> d!18995 m!79995))

(declare-fun m!79997 () Bool)

(assert (=> d!18995 m!79997))

(declare-fun m!79999 () Bool)

(assert (=> b!79128 m!79999))

(declare-fun m!80001 () Bool)

(assert (=> b!79129 m!80001))

(assert (=> d!18569 d!18995))

(declare-fun b!79130 () Bool)

(declare-fun e!51695 () List!1494)

(declare-fun e!51693 () List!1494)

(assert (=> b!79130 (= e!51695 e!51693)))

(declare-fun c!12227 () Bool)

(assert (=> b!79130 (= c!12227 (and ((_ is Cons!1490) (toList!729 lt!36036)) (= (_1!1092 (h!2078 (toList!729 lt!36036))) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79131 () Bool)

(declare-fun c!12226 () Bool)

(assert (=> b!79131 (= c!12226 (and ((_ is Cons!1490) (toList!729 lt!36036)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!36036))) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun e!51697 () List!1494)

(assert (=> b!79131 (= e!51693 e!51697)))

(declare-fun b!79132 () Bool)

(declare-fun call!7280 () List!1494)

(assert (=> b!79132 (= e!51697 call!7280)))

(declare-fun b!79133 () Bool)

(declare-fun call!7282 () List!1494)

(assert (=> b!79133 (= e!51693 call!7282)))

(declare-fun bm!7278 () Bool)

(assert (=> bm!7278 (= call!7280 call!7282)))

(declare-fun e!51696 () List!1494)

(declare-fun b!79134 () Bool)

(assert (=> b!79134 (= e!51696 (insertStrictlySorted!58 (t!5132 (toList!729 lt!36036)) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79135 () Bool)

(declare-fun call!7281 () List!1494)

(assert (=> b!79135 (= e!51695 call!7281)))

(declare-fun b!79136 () Bool)

(assert (=> b!79136 (= e!51696 (ite c!12227 (t!5132 (toList!729 lt!36036)) (ite c!12226 (Cons!1490 (h!2078 (toList!729 lt!36036)) (t!5132 (toList!729 lt!36036))) Nil!1491)))))

(declare-fun d!18997 () Bool)

(declare-fun e!51694 () Bool)

(assert (=> d!18997 e!51694))

(declare-fun res!41378 () Bool)

(assert (=> d!18997 (=> (not res!41378) (not e!51694))))

(declare-fun lt!36736 () List!1494)

(assert (=> d!18997 (= res!41378 (isStrictlySorted!282 lt!36736))))

(assert (=> d!18997 (= lt!36736 e!51695)))

(declare-fun c!12229 () Bool)

(assert (=> d!18997 (= c!12229 (and ((_ is Cons!1490) (toList!729 lt!36036)) (bvslt (_1!1092 (h!2078 (toList!729 lt!36036))) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!18997 (isStrictlySorted!282 (toList!729 lt!36036))))

(assert (=> d!18997 (= (insertStrictlySorted!58 (toList!729 lt!36036) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36736)))

(declare-fun bm!7277 () Bool)

(assert (=> bm!7277 (= call!7282 call!7281)))

(declare-fun b!79137 () Bool)

(declare-fun res!41377 () Bool)

(assert (=> b!79137 (=> (not res!41377) (not e!51694))))

(assert (=> b!79137 (= res!41377 (containsKey!141 lt!36736 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79138 () Bool)

(assert (=> b!79138 (= e!51697 call!7280)))

(declare-fun b!79139 () Bool)

(assert (=> b!79139 (= e!51694 (contains!737 lt!36736 (tuple2!2163 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun bm!7279 () Bool)

(assert (=> bm!7279 (= call!7281 ($colon$colon!68 e!51696 (ite c!12229 (h!2078 (toList!729 lt!36036)) (tuple2!2163 (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun c!12228 () Bool)

(assert (=> bm!7279 (= c!12228 c!12229)))

(assert (= (and d!18997 c!12229) b!79135))

(assert (= (and d!18997 (not c!12229)) b!79130))

(assert (= (and b!79130 c!12227) b!79133))

(assert (= (and b!79130 (not c!12227)) b!79131))

(assert (= (and b!79131 c!12226) b!79138))

(assert (= (and b!79131 (not c!12226)) b!79132))

(assert (= (or b!79138 b!79132) bm!7278))

(assert (= (or b!79133 bm!7278) bm!7277))

(assert (= (or b!79135 bm!7277) bm!7279))

(assert (= (and bm!7279 c!12228) b!79134))

(assert (= (and bm!7279 (not c!12228)) b!79136))

(assert (= (and d!18997 res!41378) b!79137))

(assert (= (and b!79137 res!41377) b!79139))

(declare-fun m!80003 () Bool)

(assert (=> b!79139 m!80003))

(declare-fun m!80005 () Bool)

(assert (=> b!79134 m!80005))

(declare-fun m!80007 () Bool)

(assert (=> b!79137 m!80007))

(declare-fun m!80009 () Bool)

(assert (=> d!18997 m!80009))

(declare-fun m!80011 () Bool)

(assert (=> d!18997 m!80011))

(declare-fun m!80013 () Bool)

(assert (=> bm!7279 m!80013))

(assert (=> d!18569 d!18997))

(declare-fun d!18999 () Bool)

(declare-fun lt!36737 () Bool)

(assert (=> d!18999 (= lt!36737 (select (content!84 lt!35964) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun e!51699 () Bool)

(assert (=> d!18999 (= lt!36737 e!51699)))

(declare-fun res!41380 () Bool)

(assert (=> d!18999 (=> (not res!41380) (not e!51699))))

(assert (=> d!18999 (= res!41380 ((_ is Cons!1490) lt!35964))))

(assert (=> d!18999 (= (contains!737 lt!35964 (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))) lt!36737)))

(declare-fun b!79140 () Bool)

(declare-fun e!51698 () Bool)

(assert (=> b!79140 (= e!51699 e!51698)))

(declare-fun res!41379 () Bool)

(assert (=> b!79140 (=> res!41379 e!51698)))

(assert (=> b!79140 (= res!41379 (= (h!2078 lt!35964) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun b!79141 () Bool)

(assert (=> b!79141 (= e!51698 (contains!737 (t!5132 lt!35964) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(assert (= (and d!18999 res!41380) b!79140))

(assert (= (and b!79140 (not res!41379)) b!79141))

(declare-fun m!80015 () Bool)

(assert (=> d!18999 m!80015))

(declare-fun m!80017 () Bool)

(assert (=> d!18999 m!80017))

(declare-fun m!80019 () Bool)

(assert (=> b!79141 m!80019))

(assert (=> b!78512 d!18999))

(declare-fun d!19001 () Bool)

(declare-fun res!41381 () Bool)

(declare-fun e!51700 () Bool)

(assert (=> d!19001 (=> res!41381 e!51700)))

(assert (=> d!19001 (= res!41381 (and ((_ is Cons!1490) lt!36454) (= (_1!1092 (h!2078 lt!36454)) (_1!1092 lt!35792))))))

(assert (=> d!19001 (= (containsKey!141 lt!36454 (_1!1092 lt!35792)) e!51700)))

(declare-fun b!79142 () Bool)

(declare-fun e!51701 () Bool)

(assert (=> b!79142 (= e!51700 e!51701)))

(declare-fun res!41382 () Bool)

(assert (=> b!79142 (=> (not res!41382) (not e!51701))))

(assert (=> b!79142 (= res!41382 (and (or (not ((_ is Cons!1490) lt!36454)) (bvsle (_1!1092 (h!2078 lt!36454)) (_1!1092 lt!35792))) ((_ is Cons!1490) lt!36454) (bvslt (_1!1092 (h!2078 lt!36454)) (_1!1092 lt!35792))))))

(declare-fun b!79143 () Bool)

(assert (=> b!79143 (= e!51701 (containsKey!141 (t!5132 lt!36454) (_1!1092 lt!35792)))))

(assert (= (and d!19001 (not res!41381)) b!79142))

(assert (= (and b!79142 res!41382) b!79143))

(declare-fun m!80021 () Bool)

(assert (=> b!79143 m!80021))

(assert (=> b!78649 d!19001))

(declare-fun d!19003 () Bool)

(assert (=> d!19003 (= (get!1186 (getValueByKey!138 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2600 (getValueByKey!138 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18545 d!19003))

(declare-fun b!79144 () Bool)

(declare-fun e!51702 () Option!144)

(assert (=> b!79144 (= e!51702 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36049)))))))

(declare-fun b!79145 () Bool)

(declare-fun e!51703 () Option!144)

(assert (=> b!79145 (= e!51702 e!51703)))

(declare-fun c!12231 () Bool)

(assert (=> b!79145 (= c!12231 (and ((_ is Cons!1490) (toList!729 lt!36049)) (not (= (_1!1092 (h!2078 (toList!729 lt!36049))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79147 () Bool)

(assert (=> b!79147 (= e!51703 None!142)))

(declare-fun b!79146 () Bool)

(assert (=> b!79146 (= e!51703 (getValueByKey!138 (t!5132 (toList!729 lt!36049)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!19005 () Bool)

(declare-fun c!12230 () Bool)

(assert (=> d!19005 (= c!12230 (and ((_ is Cons!1490) (toList!729 lt!36049)) (= (_1!1092 (h!2078 (toList!729 lt!36049))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19005 (= (getValueByKey!138 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000) e!51702)))

(assert (= (and d!19005 c!12230) b!79144))

(assert (= (and d!19005 (not c!12230)) b!79145))

(assert (= (and b!79145 c!12231) b!79146))

(assert (= (and b!79145 (not c!12231)) b!79147))

(declare-fun m!80023 () Bool)

(assert (=> b!79146 m!80023))

(assert (=> d!18545 d!19005))

(declare-fun d!19007 () Bool)

(assert (=> d!19007 (= (get!1186 (getValueByKey!138 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2600 (getValueByKey!138 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18609 d!19007))

(assert (=> d!18609 d!18847))

(declare-fun b!79148 () Bool)

(declare-fun e!51704 () Option!144)

(assert (=> b!79148 (= e!51704 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36233)))))))

(declare-fun b!79149 () Bool)

(declare-fun e!51705 () Option!144)

(assert (=> b!79149 (= e!51704 e!51705)))

(declare-fun c!12233 () Bool)

(assert (=> b!79149 (= c!12233 (and ((_ is Cons!1490) (toList!729 lt!36233)) (not (= (_1!1092 (h!2078 (toList!729 lt!36233))) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79151 () Bool)

(assert (=> b!79151 (= e!51705 None!142)))

(declare-fun b!79150 () Bool)

(assert (=> b!79150 (= e!51705 (getValueByKey!138 (t!5132 (toList!729 lt!36233)) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun c!12232 () Bool)

(declare-fun d!19009 () Bool)

(assert (=> d!19009 (= c!12232 (and ((_ is Cons!1490) (toList!729 lt!36233)) (= (_1!1092 (h!2078 (toList!729 lt!36233))) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19009 (= (getValueByKey!138 (toList!729 lt!36233) (_1!1092 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!51704)))

(assert (= (and d!19009 c!12232) b!79148))

(assert (= (and d!19009 (not c!12232)) b!79149))

(assert (= (and b!79149 c!12233) b!79150))

(assert (= (and b!79149 (not c!12233)) b!79151))

(declare-fun m!80025 () Bool)

(assert (=> b!79150 m!80025))

(assert (=> b!78331 d!19009))

(declare-fun b!79152 () Bool)

(declare-fun e!51706 () Option!144)

(assert (=> b!79152 (= e!51706 (Some!143 (_2!1092 (h!2078 (t!5132 lt!35972)))))))

(declare-fun b!79153 () Bool)

(declare-fun e!51707 () Option!144)

(assert (=> b!79153 (= e!51706 e!51707)))

(declare-fun c!12235 () Bool)

(assert (=> b!79153 (= c!12235 (and ((_ is Cons!1490) (t!5132 lt!35972)) (not (= (_1!1092 (h!2078 (t!5132 lt!35972))) (_1!1092 lt!35789)))))))

(declare-fun b!79155 () Bool)

(assert (=> b!79155 (= e!51707 None!142)))

(declare-fun b!79154 () Bool)

(assert (=> b!79154 (= e!51707 (getValueByKey!138 (t!5132 (t!5132 lt!35972)) (_1!1092 lt!35789)))))

(declare-fun d!19011 () Bool)

(declare-fun c!12234 () Bool)

(assert (=> d!19011 (= c!12234 (and ((_ is Cons!1490) (t!5132 lt!35972)) (= (_1!1092 (h!2078 (t!5132 lt!35972))) (_1!1092 lt!35789))))))

(assert (=> d!19011 (= (getValueByKey!138 (t!5132 lt!35972) (_1!1092 lt!35789)) e!51706)))

(assert (= (and d!19011 c!12234) b!79152))

(assert (= (and d!19011 (not c!12234)) b!79153))

(assert (= (and b!79153 c!12235) b!79154))

(assert (= (and b!79153 (not c!12235)) b!79155))

(declare-fun m!80027 () Bool)

(assert (=> b!79154 m!80027))

(assert (=> b!78457 d!19011))

(declare-fun b!79159 () Bool)

(declare-fun e!51708 () Bool)

(assert (=> b!79159 (= e!51708 (and (bvsge (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!414 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!79157 () Bool)

(declare-fun res!41383 () Bool)

(assert (=> b!79157 (=> (not res!41383) (not e!51708))))

(assert (=> b!79157 (= res!41383 (bvsge (size!2133 (v!2594 (underlying!280 thiss!992))) (_size!414 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun b!79156 () Bool)

(declare-fun res!41384 () Bool)

(assert (=> b!79156 (=> (not res!41384) (not e!51708))))

(assert (=> b!79156 (= res!41384 (and (= (size!2128 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000001)) (= (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (size!2128 (_values!2254 (v!2594 (underlying!280 thiss!992))))) (bvsge (_size!414 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!414 (v!2594 (underlying!280 thiss!992))) (bvadd (mask!6267 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!79158 () Bool)

(declare-fun res!41386 () Bool)

(assert (=> b!79158 (=> (not res!41386) (not e!51708))))

(assert (=> b!79158 (= res!41386 (= (size!2133 (v!2594 (underlying!280 thiss!992))) (bvadd (_size!414 (v!2594 (underlying!280 thiss!992))) (bvsdiv (bvadd (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!19013 () Bool)

(declare-fun res!41385 () Bool)

(assert (=> d!19013 (=> (not res!41385) (not e!51708))))

(assert (=> d!19013 (= res!41385 (validMask!0 (mask!6267 (v!2594 (underlying!280 thiss!992)))))))

(assert (=> d!19013 (= (simpleValid!55 (v!2594 (underlying!280 thiss!992))) e!51708)))

(assert (= (and d!19013 res!41385) b!79156))

(assert (= (and b!79156 res!41384) b!79157))

(assert (= (and b!79157 res!41383) b!79158))

(assert (= (and b!79158 res!41386) b!79159))

(declare-fun m!80029 () Bool)

(assert (=> b!79157 m!80029))

(assert (=> b!79158 m!80029))

(assert (=> d!19013 m!77921))

(assert (=> d!18601 d!19013))

(declare-fun d!19015 () Bool)

(assert (=> d!19015 (= (isEmpty!333 (toList!729 lt!35932)) ((_ is Nil!1491) (toList!729 lt!35932)))))

(assert (=> d!18513 d!19015))

(declare-fun d!19017 () Bool)

(assert (=> d!19017 (isDefined!90 (getValueByKey!138 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun lt!36738 () Unit!2237)

(assert (=> d!19017 (= lt!36738 (choose!469 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun e!51709 () Bool)

(assert (=> d!19017 e!51709))

(declare-fun res!41387 () Bool)

(assert (=> d!19017 (=> (not res!41387) (not e!51709))))

(assert (=> d!19017 (= res!41387 (isStrictlySorted!282 (toList!729 call!7148)))))

(assert (=> d!19017 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) lt!36738)))

(declare-fun b!79160 () Bool)

(assert (=> b!79160 (= e!51709 (containsKey!141 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!19017 res!41387) b!79160))

(assert (=> d!19017 m!77885))

(assert (=> d!19017 m!78367))

(assert (=> d!19017 m!78367))

(assert (=> d!19017 m!78369))

(assert (=> d!19017 m!77885))

(declare-fun m!80031 () Bool)

(assert (=> d!19017 m!80031))

(declare-fun m!80033 () Bool)

(assert (=> d!19017 m!80033))

(assert (=> b!79160 m!77885))

(assert (=> b!79160 m!78363))

(assert (=> b!78229 d!19017))

(declare-fun d!19019 () Bool)

(assert (=> d!19019 (= (isDefined!90 (getValueByKey!138 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))) (not (isEmpty!334 (getValueByKey!138 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))))

(declare-fun bs!3360 () Bool)

(assert (= bs!3360 d!19019))

(assert (=> bs!3360 m!78367))

(declare-fun m!80035 () Bool)

(assert (=> bs!3360 m!80035))

(assert (=> b!78229 d!19019))

(declare-fun b!79161 () Bool)

(declare-fun e!51710 () Option!144)

(assert (=> b!79161 (= e!51710 (Some!143 (_2!1092 (h!2078 (toList!729 call!7148)))))))

(declare-fun b!79162 () Bool)

(declare-fun e!51711 () Option!144)

(assert (=> b!79162 (= e!51710 e!51711)))

(declare-fun c!12237 () Bool)

(assert (=> b!79162 (= c!12237 (and ((_ is Cons!1490) (toList!729 call!7148)) (not (= (_1!1092 (h!2078 (toList!729 call!7148))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))))

(declare-fun b!79164 () Bool)

(assert (=> b!79164 (= e!51711 None!142)))

(declare-fun b!79163 () Bool)

(assert (=> b!79163 (= e!51711 (getValueByKey!138 (t!5132 (toList!729 call!7148)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun c!12236 () Bool)

(declare-fun d!19021 () Bool)

(assert (=> d!19021 (= c!12236 (and ((_ is Cons!1490) (toList!729 call!7148)) (= (_1!1092 (h!2078 (toList!729 call!7148))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (=> d!19021 (= (getValueByKey!138 (toList!729 call!7148) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) e!51710)))

(assert (= (and d!19021 c!12236) b!79161))

(assert (= (and d!19021 (not c!12236)) b!79162))

(assert (= (and b!79162 c!12237) b!79163))

(assert (= (and b!79162 (not c!12237)) b!79164))

(assert (=> b!79163 m!77885))

(declare-fun m!80037 () Bool)

(assert (=> b!79163 m!80037))

(assert (=> b!78229 d!19021))

(declare-fun d!19023 () Bool)

(assert (=> d!19023 (isDefined!90 (getValueByKey!138 (toList!729 lt!35961) (_1!1092 lt!35806)))))

(declare-fun lt!36739 () Unit!2237)

(assert (=> d!19023 (= lt!36739 (choose!469 (toList!729 lt!35961) (_1!1092 lt!35806)))))

(declare-fun e!51712 () Bool)

(assert (=> d!19023 e!51712))

(declare-fun res!41388 () Bool)

(assert (=> d!19023 (=> (not res!41388) (not e!51712))))

(assert (=> d!19023 (= res!41388 (isStrictlySorted!282 (toList!729 lt!35961)))))

(assert (=> d!19023 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35961) (_1!1092 lt!35806)) lt!36739)))

(declare-fun b!79165 () Bool)

(assert (=> b!79165 (= e!51712 (containsKey!141 (toList!729 lt!35961) (_1!1092 lt!35806)))))

(assert (= (and d!19023 res!41388) b!79165))

(assert (=> d!19023 m!78163))

(assert (=> d!19023 m!78163))

(assert (=> d!19023 m!78887))

(declare-fun m!80039 () Bool)

(assert (=> d!19023 m!80039))

(declare-fun m!80041 () Bool)

(assert (=> d!19023 m!80041))

(assert (=> b!79165 m!78883))

(assert (=> b!78479 d!19023))

(declare-fun d!19025 () Bool)

(assert (=> d!19025 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35961) (_1!1092 lt!35806))) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35961) (_1!1092 lt!35806)))))))

(declare-fun bs!3361 () Bool)

(assert (= bs!3361 d!19025))

(assert (=> bs!3361 m!78163))

(declare-fun m!80043 () Bool)

(assert (=> bs!3361 m!80043))

(assert (=> b!78479 d!19025))

(assert (=> b!78479 d!18753))

(declare-fun b!79166 () Bool)

(declare-fun e!51713 () Option!144)

(assert (=> b!79166 (= e!51713 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36460)))))))

(declare-fun b!79167 () Bool)

(declare-fun e!51714 () Option!144)

(assert (=> b!79167 (= e!51713 e!51714)))

(declare-fun c!12239 () Bool)

(assert (=> b!79167 (= c!12239 (and ((_ is Cons!1490) (toList!729 lt!36460)) (not (= (_1!1092 (h!2078 (toList!729 lt!36460))) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))))

(declare-fun b!79169 () Bool)

(assert (=> b!79169 (= e!51714 None!142)))

(declare-fun b!79168 () Bool)

(assert (=> b!79168 (= e!51714 (getValueByKey!138 (t!5132 (toList!729 lt!36460)) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun d!19027 () Bool)

(declare-fun c!12238 () Bool)

(assert (=> d!19027 (= c!12238 (and ((_ is Cons!1490) (toList!729 lt!36460)) (= (_1!1092 (h!2078 (toList!729 lt!36460))) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(assert (=> d!19027 (= (getValueByKey!138 (toList!729 lt!36460) (_1!1092 (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) e!51713)))

(assert (= (and d!19027 c!12238) b!79166))

(assert (= (and d!19027 (not c!12238)) b!79167))

(assert (= (and b!79167 c!12239) b!79168))

(assert (= (and b!79167 (not c!12239)) b!79169))

(declare-fun m!80045 () Bool)

(assert (=> b!79168 m!80045))

(assert (=> b!78657 d!19027))

(declare-fun d!19029 () Bool)

(assert (=> d!19029 (isDefined!90 (getValueByKey!138 (toList!729 lt!35973) (_1!1092 lt!35789)))))

(declare-fun lt!36740 () Unit!2237)

(assert (=> d!19029 (= lt!36740 (choose!469 (toList!729 lt!35973) (_1!1092 lt!35789)))))

(declare-fun e!51715 () Bool)

(assert (=> d!19029 e!51715))

(declare-fun res!41389 () Bool)

(assert (=> d!19029 (=> (not res!41389) (not e!51715))))

(assert (=> d!19029 (= res!41389 (isStrictlySorted!282 (toList!729 lt!35973)))))

(assert (=> d!19029 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35973) (_1!1092 lt!35789)) lt!36740)))

(declare-fun b!79170 () Bool)

(assert (=> b!79170 (= e!51715 (containsKey!141 (toList!729 lt!35973) (_1!1092 lt!35789)))))

(assert (= (and d!19029 res!41389) b!79170))

(assert (=> d!19029 m!78199))

(assert (=> d!19029 m!78199))

(assert (=> d!19029 m!78811))

(declare-fun m!80047 () Bool)

(assert (=> d!19029 m!80047))

(declare-fun m!80049 () Bool)

(assert (=> d!19029 m!80049))

(assert (=> b!79170 m!78807))

(assert (=> b!78452 d!19029))

(declare-fun d!19031 () Bool)

(assert (=> d!19031 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35973) (_1!1092 lt!35789))) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35973) (_1!1092 lt!35789)))))))

(declare-fun bs!3362 () Bool)

(assert (= bs!3362 d!19031))

(assert (=> bs!3362 m!78199))

(declare-fun m!80051 () Bool)

(assert (=> bs!3362 m!80051))

(assert (=> b!78452 d!19031))

(assert (=> b!78452 d!18691))

(assert (=> bm!7178 d!18539))

(declare-fun d!19033 () Bool)

(declare-fun e!51716 () Bool)

(assert (=> d!19033 e!51716))

(declare-fun res!41390 () Bool)

(assert (=> d!19033 (=> (not res!41390) (not e!51716))))

(declare-fun lt!36742 () ListLongMap!1427)

(assert (=> d!19033 (= res!41390 (contains!736 lt!36742 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(declare-fun lt!36741 () List!1494)

(assert (=> d!19033 (= lt!36742 (ListLongMap!1428 lt!36741))))

(declare-fun lt!36743 () Unit!2237)

(declare-fun lt!36744 () Unit!2237)

(assert (=> d!19033 (= lt!36743 lt!36744)))

(assert (=> d!19033 (= (getValueByKey!138 lt!36741 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(assert (=> d!19033 (= lt!36744 (lemmaContainsTupThenGetReturnValue!55 lt!36741 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(assert (=> d!19033 (= lt!36741 (insertStrictlySorted!58 (toList!729 call!7188) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(assert (=> d!19033 (= (+!100 call!7188 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) lt!36742)))

(declare-fun b!79171 () Bool)

(declare-fun res!41391 () Bool)

(assert (=> b!79171 (=> (not res!41391) (not e!51716))))

(assert (=> b!79171 (= res!41391 (= (getValueByKey!138 (toList!729 lt!36742) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))))

(declare-fun b!79172 () Bool)

(assert (=> b!79172 (= e!51716 (contains!737 (toList!729 lt!36742) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))

(assert (= (and d!19033 res!41390) b!79171))

(assert (= (and b!79171 res!41391) b!79172))

(declare-fun m!80053 () Bool)

(assert (=> d!19033 m!80053))

(declare-fun m!80055 () Bool)

(assert (=> d!19033 m!80055))

(declare-fun m!80057 () Bool)

(assert (=> d!19033 m!80057))

(declare-fun m!80059 () Bool)

(assert (=> d!19033 m!80059))

(declare-fun m!80061 () Bool)

(assert (=> b!79171 m!80061))

(declare-fun m!80063 () Bool)

(assert (=> b!79172 m!80063))

(assert (=> b!78387 d!19033))

(declare-fun d!19035 () Bool)

(assert (=> d!19035 (= (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78272 d!19035))

(assert (=> d!18639 d!18643))

(assert (=> d!18639 d!18637))

(assert (=> d!18639 d!18635))

(assert (=> d!18639 d!18641))

(declare-fun d!19037 () Bool)

(assert (=> d!19037 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3363 () Bool)

(assert (= bs!3363 d!19037))

(assert (=> bs!3363 m!78529))

(declare-fun m!80065 () Bool)

(assert (=> bs!3363 m!80065))

(assert (=> b!78385 d!19037))

(assert (=> b!78385 d!19005))

(declare-fun d!19039 () Bool)

(declare-fun res!41392 () Bool)

(declare-fun e!51717 () Bool)

(assert (=> d!19039 (=> res!41392 e!51717)))

(assert (=> d!19039 (= res!41392 (and ((_ is Cons!1490) lt!35972) (= (_1!1092 (h!2078 lt!35972)) (_1!1092 lt!35789))))))

(assert (=> d!19039 (= (containsKey!141 lt!35972 (_1!1092 lt!35789)) e!51717)))

(declare-fun b!79173 () Bool)

(declare-fun e!51718 () Bool)

(assert (=> b!79173 (= e!51717 e!51718)))

(declare-fun res!41393 () Bool)

(assert (=> b!79173 (=> (not res!41393) (not e!51718))))

(assert (=> b!79173 (= res!41393 (and (or (not ((_ is Cons!1490) lt!35972)) (bvsle (_1!1092 (h!2078 lt!35972)) (_1!1092 lt!35789))) ((_ is Cons!1490) lt!35972) (bvslt (_1!1092 (h!2078 lt!35972)) (_1!1092 lt!35789))))))

(declare-fun b!79174 () Bool)

(assert (=> b!79174 (= e!51718 (containsKey!141 (t!5132 lt!35972) (_1!1092 lt!35789)))))

(assert (= (and d!19039 (not res!41392)) b!79173))

(assert (= (and b!79173 res!41393) b!79174))

(declare-fun m!80067 () Bool)

(assert (=> b!79174 m!80067))

(assert (=> b!78459 d!19039))

(declare-fun d!19041 () Bool)

(declare-fun e!51720 () Bool)

(assert (=> d!19041 e!51720))

(declare-fun res!41394 () Bool)

(assert (=> d!19041 (=> res!41394 e!51720)))

(declare-fun lt!36746 () Bool)

(assert (=> d!19041 (= res!41394 (not lt!36746))))

(declare-fun lt!36748 () Bool)

(assert (=> d!19041 (= lt!36746 lt!36748)))

(declare-fun lt!36747 () Unit!2237)

(declare-fun e!51719 () Unit!2237)

(assert (=> d!19041 (= lt!36747 e!51719)))

(declare-fun c!12240 () Bool)

(assert (=> d!19041 (= c!12240 lt!36748)))

(assert (=> d!19041 (= lt!36748 (containsKey!141 (toList!729 lt!36486) (_1!1092 (tuple2!2163 lt!35935 lt!35938))))))

(assert (=> d!19041 (= (contains!736 lt!36486 (_1!1092 (tuple2!2163 lt!35935 lt!35938))) lt!36746)))

(declare-fun b!79175 () Bool)

(declare-fun lt!36745 () Unit!2237)

(assert (=> b!79175 (= e!51719 lt!36745)))

(assert (=> b!79175 (= lt!36745 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36486) (_1!1092 (tuple2!2163 lt!35935 lt!35938))))))

(assert (=> b!79175 (isDefined!90 (getValueByKey!138 (toList!729 lt!36486) (_1!1092 (tuple2!2163 lt!35935 lt!35938))))))

(declare-fun b!79176 () Bool)

(declare-fun Unit!2284 () Unit!2237)

(assert (=> b!79176 (= e!51719 Unit!2284)))

(declare-fun b!79177 () Bool)

(assert (=> b!79177 (= e!51720 (isDefined!90 (getValueByKey!138 (toList!729 lt!36486) (_1!1092 (tuple2!2163 lt!35935 lt!35938)))))))

(assert (= (and d!19041 c!12240) b!79175))

(assert (= (and d!19041 (not c!12240)) b!79176))

(assert (= (and d!19041 (not res!41394)) b!79177))

(declare-fun m!80069 () Bool)

(assert (=> d!19041 m!80069))

(declare-fun m!80071 () Bool)

(assert (=> b!79175 m!80071))

(assert (=> b!79175 m!79195))

(assert (=> b!79175 m!79195))

(declare-fun m!80073 () Bool)

(assert (=> b!79175 m!80073))

(assert (=> b!79177 m!79195))

(assert (=> b!79177 m!79195))

(assert (=> b!79177 m!80073))

(assert (=> d!18735 d!19041))

(declare-fun b!79178 () Bool)

(declare-fun e!51721 () Option!144)

(assert (=> b!79178 (= e!51721 (Some!143 (_2!1092 (h!2078 lt!36485))))))

(declare-fun b!79179 () Bool)

(declare-fun e!51722 () Option!144)

(assert (=> b!79179 (= e!51721 e!51722)))

(declare-fun c!12242 () Bool)

(assert (=> b!79179 (= c!12242 (and ((_ is Cons!1490) lt!36485) (not (= (_1!1092 (h!2078 lt!36485)) (_1!1092 (tuple2!2163 lt!35935 lt!35938))))))))

(declare-fun b!79181 () Bool)

(assert (=> b!79181 (= e!51722 None!142)))

(declare-fun b!79180 () Bool)

(assert (=> b!79180 (= e!51722 (getValueByKey!138 (t!5132 lt!36485) (_1!1092 (tuple2!2163 lt!35935 lt!35938))))))

(declare-fun c!12241 () Bool)

(declare-fun d!19043 () Bool)

(assert (=> d!19043 (= c!12241 (and ((_ is Cons!1490) lt!36485) (= (_1!1092 (h!2078 lt!36485)) (_1!1092 (tuple2!2163 lt!35935 lt!35938)))))))

(assert (=> d!19043 (= (getValueByKey!138 lt!36485 (_1!1092 (tuple2!2163 lt!35935 lt!35938))) e!51721)))

(assert (= (and d!19043 c!12241) b!79178))

(assert (= (and d!19043 (not c!12241)) b!79179))

(assert (= (and b!79179 c!12242) b!79180))

(assert (= (and b!79179 (not c!12242)) b!79181))

(declare-fun m!80075 () Bool)

(assert (=> b!79180 m!80075))

(assert (=> d!18735 d!19043))

(declare-fun d!19045 () Bool)

(assert (=> d!19045 (= (getValueByKey!138 lt!36485 (_1!1092 (tuple2!2163 lt!35935 lt!35938))) (Some!143 (_2!1092 (tuple2!2163 lt!35935 lt!35938))))))

(declare-fun lt!36749 () Unit!2237)

(assert (=> d!19045 (= lt!36749 (choose!468 lt!36485 (_1!1092 (tuple2!2163 lt!35935 lt!35938)) (_2!1092 (tuple2!2163 lt!35935 lt!35938))))))

(declare-fun e!51723 () Bool)

(assert (=> d!19045 e!51723))

(declare-fun res!41395 () Bool)

(assert (=> d!19045 (=> (not res!41395) (not e!51723))))

(assert (=> d!19045 (= res!41395 (isStrictlySorted!282 lt!36485))))

(assert (=> d!19045 (= (lemmaContainsTupThenGetReturnValue!55 lt!36485 (_1!1092 (tuple2!2163 lt!35935 lt!35938)) (_2!1092 (tuple2!2163 lt!35935 lt!35938))) lt!36749)))

(declare-fun b!79182 () Bool)

(declare-fun res!41396 () Bool)

(assert (=> b!79182 (=> (not res!41396) (not e!51723))))

(assert (=> b!79182 (= res!41396 (containsKey!141 lt!36485 (_1!1092 (tuple2!2163 lt!35935 lt!35938))))))

(declare-fun b!79183 () Bool)

(assert (=> b!79183 (= e!51723 (contains!737 lt!36485 (tuple2!2163 (_1!1092 (tuple2!2163 lt!35935 lt!35938)) (_2!1092 (tuple2!2163 lt!35935 lt!35938)))))))

(assert (= (and d!19045 res!41395) b!79182))

(assert (= (and b!79182 res!41396) b!79183))

(assert (=> d!19045 m!79189))

(declare-fun m!80077 () Bool)

(assert (=> d!19045 m!80077))

(declare-fun m!80079 () Bool)

(assert (=> d!19045 m!80079))

(declare-fun m!80081 () Bool)

(assert (=> b!79182 m!80081))

(declare-fun m!80083 () Bool)

(assert (=> b!79183 m!80083))

(assert (=> d!18735 d!19045))

(declare-fun b!79184 () Bool)

(declare-fun e!51726 () List!1494)

(declare-fun e!51724 () List!1494)

(assert (=> b!79184 (= e!51726 e!51724)))

(declare-fun c!12244 () Bool)

(assert (=> b!79184 (= c!12244 (and ((_ is Cons!1490) (toList!729 lt!35937)) (= (_1!1092 (h!2078 (toList!729 lt!35937))) (_1!1092 (tuple2!2163 lt!35935 lt!35938)))))))

(declare-fun c!12243 () Bool)

(declare-fun b!79185 () Bool)

(assert (=> b!79185 (= c!12243 (and ((_ is Cons!1490) (toList!729 lt!35937)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35937))) (_1!1092 (tuple2!2163 lt!35935 lt!35938)))))))

(declare-fun e!51728 () List!1494)

(assert (=> b!79185 (= e!51724 e!51728)))

(declare-fun b!79186 () Bool)

(declare-fun call!7283 () List!1494)

(assert (=> b!79186 (= e!51728 call!7283)))

(declare-fun b!79187 () Bool)

(declare-fun call!7285 () List!1494)

(assert (=> b!79187 (= e!51724 call!7285)))

(declare-fun bm!7281 () Bool)

(assert (=> bm!7281 (= call!7283 call!7285)))

(declare-fun e!51727 () List!1494)

(declare-fun b!79188 () Bool)

(assert (=> b!79188 (= e!51727 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35937)) (_1!1092 (tuple2!2163 lt!35935 lt!35938)) (_2!1092 (tuple2!2163 lt!35935 lt!35938))))))

(declare-fun b!79189 () Bool)

(declare-fun call!7284 () List!1494)

(assert (=> b!79189 (= e!51726 call!7284)))

(declare-fun b!79190 () Bool)

(assert (=> b!79190 (= e!51727 (ite c!12244 (t!5132 (toList!729 lt!35937)) (ite c!12243 (Cons!1490 (h!2078 (toList!729 lt!35937)) (t!5132 (toList!729 lt!35937))) Nil!1491)))))

(declare-fun d!19047 () Bool)

(declare-fun e!51725 () Bool)

(assert (=> d!19047 e!51725))

(declare-fun res!41398 () Bool)

(assert (=> d!19047 (=> (not res!41398) (not e!51725))))

(declare-fun lt!36750 () List!1494)

(assert (=> d!19047 (= res!41398 (isStrictlySorted!282 lt!36750))))

(assert (=> d!19047 (= lt!36750 e!51726)))

(declare-fun c!12246 () Bool)

(assert (=> d!19047 (= c!12246 (and ((_ is Cons!1490) (toList!729 lt!35937)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35937))) (_1!1092 (tuple2!2163 lt!35935 lt!35938)))))))

(assert (=> d!19047 (isStrictlySorted!282 (toList!729 lt!35937))))

(assert (=> d!19047 (= (insertStrictlySorted!58 (toList!729 lt!35937) (_1!1092 (tuple2!2163 lt!35935 lt!35938)) (_2!1092 (tuple2!2163 lt!35935 lt!35938))) lt!36750)))

(declare-fun bm!7280 () Bool)

(assert (=> bm!7280 (= call!7285 call!7284)))

(declare-fun b!79191 () Bool)

(declare-fun res!41397 () Bool)

(assert (=> b!79191 (=> (not res!41397) (not e!51725))))

(assert (=> b!79191 (= res!41397 (containsKey!141 lt!36750 (_1!1092 (tuple2!2163 lt!35935 lt!35938))))))

(declare-fun b!79192 () Bool)

(assert (=> b!79192 (= e!51728 call!7283)))

(declare-fun b!79193 () Bool)

(assert (=> b!79193 (= e!51725 (contains!737 lt!36750 (tuple2!2163 (_1!1092 (tuple2!2163 lt!35935 lt!35938)) (_2!1092 (tuple2!2163 lt!35935 lt!35938)))))))

(declare-fun bm!7282 () Bool)

(assert (=> bm!7282 (= call!7284 ($colon$colon!68 e!51727 (ite c!12246 (h!2078 (toList!729 lt!35937)) (tuple2!2163 (_1!1092 (tuple2!2163 lt!35935 lt!35938)) (_2!1092 (tuple2!2163 lt!35935 lt!35938))))))))

(declare-fun c!12245 () Bool)

(assert (=> bm!7282 (= c!12245 c!12246)))

(assert (= (and d!19047 c!12246) b!79189))

(assert (= (and d!19047 (not c!12246)) b!79184))

(assert (= (and b!79184 c!12244) b!79187))

(assert (= (and b!79184 (not c!12244)) b!79185))

(assert (= (and b!79185 c!12243) b!79192))

(assert (= (and b!79185 (not c!12243)) b!79186))

(assert (= (or b!79192 b!79186) bm!7281))

(assert (= (or b!79187 bm!7281) bm!7280))

(assert (= (or b!79189 bm!7280) bm!7282))

(assert (= (and bm!7282 c!12245) b!79188))

(assert (= (and bm!7282 (not c!12245)) b!79190))

(assert (= (and d!19047 res!41398) b!79191))

(assert (= (and b!79191 res!41397) b!79193))

(declare-fun m!80085 () Bool)

(assert (=> b!79193 m!80085))

(declare-fun m!80087 () Bool)

(assert (=> b!79188 m!80087))

(declare-fun m!80089 () Bool)

(assert (=> b!79191 m!80089))

(declare-fun m!80091 () Bool)

(assert (=> d!19047 m!80091))

(declare-fun m!80093 () Bool)

(assert (=> d!19047 m!80093))

(declare-fun m!80095 () Bool)

(assert (=> bm!7282 m!80095))

(assert (=> d!18735 d!19047))

(declare-fun b!79194 () Bool)

(declare-fun e!51729 () Option!144)

(assert (=> b!79194 (= e!51729 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36313)))))))

(declare-fun b!79195 () Bool)

(declare-fun e!51730 () Option!144)

(assert (=> b!79195 (= e!51729 e!51730)))

(declare-fun c!12248 () Bool)

(assert (=> b!79195 (= c!12248 (and ((_ is Cons!1490) (toList!729 lt!36313)) (not (= (_1!1092 (h!2078 (toList!729 lt!36313))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!79197 () Bool)

(assert (=> b!79197 (= e!51730 None!142)))

(declare-fun b!79196 () Bool)

(assert (=> b!79196 (= e!51730 (getValueByKey!138 (t!5132 (toList!729 lt!36313)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun d!19049 () Bool)

(declare-fun c!12247 () Bool)

(assert (=> d!19049 (= c!12247 (and ((_ is Cons!1490) (toList!729 lt!36313)) (= (_1!1092 (h!2078 (toList!729 lt!36313))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19049 (= (getValueByKey!138 (toList!729 lt!36313) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) e!51729)))

(assert (= (and d!19049 c!12247) b!79194))

(assert (= (and d!19049 (not c!12247)) b!79195))

(assert (= (and b!79195 c!12248) b!79196))

(assert (= (and b!79195 (not c!12248)) b!79197))

(declare-fun m!80097 () Bool)

(assert (=> b!79196 m!80097))

(assert (=> b!78473 d!19049))

(declare-fun d!19051 () Bool)

(declare-fun e!51732 () Bool)

(assert (=> d!19051 e!51732))

(declare-fun res!41399 () Bool)

(assert (=> d!19051 (=> res!41399 e!51732)))

(declare-fun lt!36752 () Bool)

(assert (=> d!19051 (= res!41399 (not lt!36752))))

(declare-fun lt!36754 () Bool)

(assert (=> d!19051 (= lt!36752 lt!36754)))

(declare-fun lt!36753 () Unit!2237)

(declare-fun e!51731 () Unit!2237)

(assert (=> d!19051 (= lt!36753 e!51731)))

(declare-fun c!12249 () Bool)

(assert (=> d!19051 (= c!12249 lt!36754)))

(assert (=> d!19051 (= lt!36754 (containsKey!141 (toList!729 lt!36321) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!19051 (= (contains!736 lt!36321 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36752)))

(declare-fun b!79198 () Bool)

(declare-fun lt!36751 () Unit!2237)

(assert (=> b!79198 (= e!51731 lt!36751)))

(assert (=> b!79198 (= lt!36751 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36321) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> b!79198 (isDefined!90 (getValueByKey!138 (toList!729 lt!36321) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79199 () Bool)

(declare-fun Unit!2285 () Unit!2237)

(assert (=> b!79199 (= e!51731 Unit!2285)))

(declare-fun b!79200 () Bool)

(assert (=> b!79200 (= e!51732 (isDefined!90 (getValueByKey!138 (toList!729 lt!36321) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19051 c!12249) b!79198))

(assert (= (and d!19051 (not c!12249)) b!79199))

(assert (= (and d!19051 (not res!41399)) b!79200))

(declare-fun m!80099 () Bool)

(assert (=> d!19051 m!80099))

(declare-fun m!80101 () Bool)

(assert (=> b!79198 m!80101))

(assert (=> b!79198 m!78879))

(assert (=> b!79198 m!78879))

(declare-fun m!80103 () Bool)

(assert (=> b!79198 m!80103))

(assert (=> b!79200 m!78879))

(assert (=> b!79200 m!78879))

(assert (=> b!79200 m!80103))

(assert (=> d!18643 d!19051))

(declare-fun b!79201 () Bool)

(declare-fun e!51733 () Option!144)

(assert (=> b!79201 (= e!51733 (Some!143 (_2!1092 (h!2078 lt!36320))))))

(declare-fun b!79202 () Bool)

(declare-fun e!51734 () Option!144)

(assert (=> b!79202 (= e!51733 e!51734)))

(declare-fun c!12251 () Bool)

(assert (=> b!79202 (= c!12251 (and ((_ is Cons!1490) lt!36320) (not (= (_1!1092 (h!2078 lt!36320)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79204 () Bool)

(assert (=> b!79204 (= e!51734 None!142)))

(declare-fun b!79203 () Bool)

(assert (=> b!79203 (= e!51734 (getValueByKey!138 (t!5132 lt!36320) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19053 () Bool)

(declare-fun c!12250 () Bool)

(assert (=> d!19053 (= c!12250 (and ((_ is Cons!1490) lt!36320) (= (_1!1092 (h!2078 lt!36320)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19053 (= (getValueByKey!138 lt!36320 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!51733)))

(assert (= (and d!19053 c!12250) b!79201))

(assert (= (and d!19053 (not c!12250)) b!79202))

(assert (= (and b!79202 c!12251) b!79203))

(assert (= (and b!79202 (not c!12251)) b!79204))

(declare-fun m!80105 () Bool)

(assert (=> b!79203 m!80105))

(assert (=> d!18643 d!19053))

(declare-fun d!19055 () Bool)

(assert (=> d!19055 (= (getValueByKey!138 lt!36320 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36755 () Unit!2237)

(assert (=> d!19055 (= lt!36755 (choose!468 lt!36320 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!51735 () Bool)

(assert (=> d!19055 e!51735))

(declare-fun res!41400 () Bool)

(assert (=> d!19055 (=> (not res!41400) (not e!51735))))

(assert (=> d!19055 (= res!41400 (isStrictlySorted!282 lt!36320))))

(assert (=> d!19055 (= (lemmaContainsTupThenGetReturnValue!55 lt!36320 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36755)))

(declare-fun b!79205 () Bool)

(declare-fun res!41401 () Bool)

(assert (=> b!79205 (=> (not res!41401) (not e!51735))))

(assert (=> b!79205 (= res!41401 (containsKey!141 lt!36320 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79206 () Bool)

(assert (=> b!79206 (= e!51735 (contains!737 lt!36320 (tuple2!2163 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19055 res!41400) b!79205))

(assert (= (and b!79205 res!41401) b!79206))

(assert (=> d!19055 m!78873))

(declare-fun m!80107 () Bool)

(assert (=> d!19055 m!80107))

(declare-fun m!80109 () Bool)

(assert (=> d!19055 m!80109))

(declare-fun m!80111 () Bool)

(assert (=> b!79205 m!80111))

(declare-fun m!80113 () Bool)

(assert (=> b!79206 m!80113))

(assert (=> d!18643 d!19055))

(declare-fun b!79207 () Bool)

(declare-fun e!51738 () List!1494)

(declare-fun e!51736 () List!1494)

(assert (=> b!79207 (= e!51738 e!51736)))

(declare-fun c!12253 () Bool)

(assert (=> b!79207 (= c!12253 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun c!12252 () Bool)

(declare-fun b!79208 () Bool)

(assert (=> b!79208 (= c!12252 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (bvsgt (_1!1092 (h!2078 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun e!51740 () List!1494)

(assert (=> b!79208 (= e!51736 e!51740)))

(declare-fun b!79209 () Bool)

(declare-fun call!7286 () List!1494)

(assert (=> b!79209 (= e!51740 call!7286)))

(declare-fun b!79210 () Bool)

(declare-fun call!7288 () List!1494)

(assert (=> b!79210 (= e!51736 call!7288)))

(declare-fun bm!7284 () Bool)

(assert (=> bm!7284 (= call!7286 call!7288)))

(declare-fun b!79211 () Bool)

(declare-fun e!51739 () List!1494)

(assert (=> b!79211 (= e!51739 (insertStrictlySorted!58 (t!5132 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79212 () Bool)

(declare-fun call!7287 () List!1494)

(assert (=> b!79212 (= e!51738 call!7287)))

(declare-fun b!79213 () Bool)

(assert (=> b!79213 (= e!51739 (ite c!12253 (t!5132 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (ite c!12252 (Cons!1490 (h!2078 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (t!5132 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))) Nil!1491)))))

(declare-fun d!19057 () Bool)

(declare-fun e!51737 () Bool)

(assert (=> d!19057 e!51737))

(declare-fun res!41403 () Bool)

(assert (=> d!19057 (=> (not res!41403) (not e!51737))))

(declare-fun lt!36756 () List!1494)

(assert (=> d!19057 (= res!41403 (isStrictlySorted!282 lt!36756))))

(assert (=> d!19057 (= lt!36756 e!51738)))

(declare-fun c!12255 () Bool)

(assert (=> d!19057 (= c!12255 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (bvslt (_1!1092 (h!2078 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19057 (isStrictlySorted!282 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!19057 (= (insertStrictlySorted!58 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36756)))

(declare-fun bm!7283 () Bool)

(assert (=> bm!7283 (= call!7288 call!7287)))

(declare-fun b!79214 () Bool)

(declare-fun res!41402 () Bool)

(assert (=> b!79214 (=> (not res!41402) (not e!51737))))

(assert (=> b!79214 (= res!41402 (containsKey!141 lt!36756 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79215 () Bool)

(assert (=> b!79215 (= e!51740 call!7286)))

(declare-fun b!79216 () Bool)

(assert (=> b!79216 (= e!51737 (contains!737 lt!36756 (tuple2!2163 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun bm!7285 () Bool)

(assert (=> bm!7285 (= call!7287 ($colon$colon!68 e!51739 (ite c!12255 (h!2078 (toList!729 (+!100 lt!35804 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (tuple2!2163 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun c!12254 () Bool)

(assert (=> bm!7285 (= c!12254 c!12255)))

(assert (= (and d!19057 c!12255) b!79212))

(assert (= (and d!19057 (not c!12255)) b!79207))

(assert (= (and b!79207 c!12253) b!79210))

(assert (= (and b!79207 (not c!12253)) b!79208))

(assert (= (and b!79208 c!12252) b!79215))

(assert (= (and b!79208 (not c!12252)) b!79209))

(assert (= (or b!79215 b!79209) bm!7284))

(assert (= (or b!79210 bm!7284) bm!7283))

(assert (= (or b!79212 bm!7283) bm!7285))

(assert (= (and bm!7285 c!12254) b!79211))

(assert (= (and bm!7285 (not c!12254)) b!79213))

(assert (= (and d!19057 res!41403) b!79214))

(assert (= (and b!79214 res!41402) b!79216))

(declare-fun m!80115 () Bool)

(assert (=> b!79216 m!80115))

(declare-fun m!80117 () Bool)

(assert (=> b!79211 m!80117))

(declare-fun m!80119 () Bool)

(assert (=> b!79214 m!80119))

(declare-fun m!80121 () Bool)

(assert (=> d!19057 m!80121))

(declare-fun m!80123 () Bool)

(assert (=> d!19057 m!80123))

(declare-fun m!80125 () Bool)

(assert (=> bm!7285 m!80125))

(assert (=> d!18643 d!19057))

(declare-fun d!19059 () Bool)

(declare-fun res!41404 () Bool)

(declare-fun e!51741 () Bool)

(assert (=> d!19059 (=> res!41404 e!51741)))

(assert (=> d!19059 (= res!41404 (and ((_ is Cons!1490) (toList!729 lt!35932)) (= (_1!1092 (h!2078 (toList!729 lt!35932))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19059 (= (containsKey!141 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000) e!51741)))

(declare-fun b!79217 () Bool)

(declare-fun e!51742 () Bool)

(assert (=> b!79217 (= e!51741 e!51742)))

(declare-fun res!41405 () Bool)

(assert (=> b!79217 (=> (not res!41405) (not e!51742))))

(assert (=> b!79217 (= res!41405 (and (or (not ((_ is Cons!1490) (toList!729 lt!35932))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35932))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1490) (toList!729 lt!35932)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35932))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79218 () Bool)

(assert (=> b!79218 (= e!51742 (containsKey!141 (t!5132 (toList!729 lt!35932)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19059 (not res!41404)) b!79217))

(assert (= (and b!79217 res!41405) b!79218))

(declare-fun m!80127 () Bool)

(assert (=> b!79218 m!80127))

(assert (=> d!18559 d!19059))

(assert (=> b!78756 d!18833))

(declare-fun d!19061 () Bool)

(declare-fun e!51743 () Bool)

(assert (=> d!19061 e!51743))

(declare-fun res!41406 () Bool)

(assert (=> d!19061 (=> (not res!41406) (not e!51743))))

(declare-fun lt!36758 () ListLongMap!1427)

(assert (=> d!19061 (= res!41406 (contains!736 lt!36758 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun lt!36757 () List!1494)

(assert (=> d!19061 (= lt!36758 (ListLongMap!1428 lt!36757))))

(declare-fun lt!36759 () Unit!2237)

(declare-fun lt!36760 () Unit!2237)

(assert (=> d!19061 (= lt!36759 lt!36760)))

(assert (=> d!19061 (= (getValueByKey!138 lt!36757 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!19061 (= lt!36760 (lemmaContainsTupThenGetReturnValue!55 lt!36757 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!19061 (= lt!36757 (insertStrictlySorted!58 (toList!729 call!7174) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!19061 (= (+!100 call!7174 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) lt!36758)))

(declare-fun b!79219 () Bool)

(declare-fun res!41407 () Bool)

(assert (=> b!79219 (=> (not res!41407) (not e!51743))))

(assert (=> b!79219 (= res!41407 (= (getValueByKey!138 (toList!729 lt!36758) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(declare-fun b!79220 () Bool)

(assert (=> b!79220 (= e!51743 (contains!737 (toList!729 lt!36758) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(assert (= (and d!19061 res!41406) b!79219))

(assert (= (and b!79219 res!41407) b!79220))

(declare-fun m!80129 () Bool)

(assert (=> d!19061 m!80129))

(declare-fun m!80131 () Bool)

(assert (=> d!19061 m!80131))

(declare-fun m!80133 () Bool)

(assert (=> d!19061 m!80133))

(declare-fun m!80135 () Bool)

(assert (=> d!19061 m!80135))

(declare-fun m!80137 () Bool)

(assert (=> b!79219 m!80137))

(declare-fun m!80139 () Bool)

(assert (=> b!79220 m!80139))

(assert (=> b!78276 d!19061))

(assert (=> b!78454 d!19031))

(assert (=> b!78454 d!18691))

(declare-fun d!19063 () Bool)

(assert (=> d!19063 (= (size!2133 newMap!16) (bvadd (_size!414 newMap!16) (bvsdiv (bvadd (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!78602 d!19063))

(assert (=> b!78389 d!18833))

(declare-fun d!19065 () Bool)

(assert (=> d!19065 (= (get!1186 (getValueByKey!138 (toList!729 lt!36039) lt!36044)) (v!2600 (getValueByKey!138 (toList!729 lt!36039) lt!36044)))))

(assert (=> d!18567 d!19065))

(declare-fun b!79221 () Bool)

(declare-fun e!51744 () Option!144)

(assert (=> b!79221 (= e!51744 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36039)))))))

(declare-fun b!79222 () Bool)

(declare-fun e!51745 () Option!144)

(assert (=> b!79222 (= e!51744 e!51745)))

(declare-fun c!12257 () Bool)

(assert (=> b!79222 (= c!12257 (and ((_ is Cons!1490) (toList!729 lt!36039)) (not (= (_1!1092 (h!2078 (toList!729 lt!36039))) lt!36044))))))

(declare-fun b!79224 () Bool)

(assert (=> b!79224 (= e!51745 None!142)))

(declare-fun b!79223 () Bool)

(assert (=> b!79223 (= e!51745 (getValueByKey!138 (t!5132 (toList!729 lt!36039)) lt!36044))))

(declare-fun d!19067 () Bool)

(declare-fun c!12256 () Bool)

(assert (=> d!19067 (= c!12256 (and ((_ is Cons!1490) (toList!729 lt!36039)) (= (_1!1092 (h!2078 (toList!729 lt!36039))) lt!36044)))))

(assert (=> d!19067 (= (getValueByKey!138 (toList!729 lt!36039) lt!36044) e!51744)))

(assert (= (and d!19067 c!12256) b!79221))

(assert (= (and d!19067 (not c!12256)) b!79222))

(assert (= (and b!79222 c!12257) b!79223))

(assert (= (and b!79222 (not c!12257)) b!79224))

(declare-fun m!80141 () Bool)

(assert (=> b!79223 m!80141))

(assert (=> d!18567 d!19067))

(declare-fun d!19069 () Bool)

(declare-fun e!51747 () Bool)

(assert (=> d!19069 e!51747))

(declare-fun res!41408 () Bool)

(assert (=> d!19069 (=> res!41408 e!51747)))

(declare-fun lt!36762 () Bool)

(assert (=> d!19069 (= res!41408 (not lt!36762))))

(declare-fun lt!36764 () Bool)

(assert (=> d!19069 (= lt!36762 lt!36764)))

(declare-fun lt!36763 () Unit!2237)

(declare-fun e!51746 () Unit!2237)

(assert (=> d!19069 (= lt!36763 e!51746)))

(declare-fun c!12258 () Bool)

(assert (=> d!19069 (= c!12258 lt!36764)))

(assert (=> d!19069 (= lt!36764 (containsKey!141 (toList!729 lt!36537) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!19069 (= (contains!736 lt!36537 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36762)))

(declare-fun b!79225 () Bool)

(declare-fun lt!36761 () Unit!2237)

(assert (=> b!79225 (= e!51746 lt!36761)))

(assert (=> b!79225 (= lt!36761 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36537) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> b!79225 (isDefined!90 (getValueByKey!138 (toList!729 lt!36537) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79226 () Bool)

(declare-fun Unit!2286 () Unit!2237)

(assert (=> b!79226 (= e!51746 Unit!2286)))

(declare-fun b!79227 () Bool)

(assert (=> b!79227 (= e!51747 (isDefined!90 (getValueByKey!138 (toList!729 lt!36537) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (= (and d!19069 c!12258) b!79225))

(assert (= (and d!19069 (not c!12258)) b!79226))

(assert (= (and d!19069 (not res!41408)) b!79227))

(declare-fun m!80143 () Bool)

(assert (=> d!19069 m!80143))

(declare-fun m!80145 () Bool)

(assert (=> b!79225 m!80145))

(assert (=> b!79225 m!79311))

(assert (=> b!79225 m!79311))

(declare-fun m!80147 () Bool)

(assert (=> b!79225 m!80147))

(assert (=> b!79227 m!79311))

(assert (=> b!79227 m!79311))

(assert (=> b!79227 m!80147))

(assert (=> d!18757 d!19069))

(declare-fun b!79228 () Bool)

(declare-fun e!51748 () Option!144)

(assert (=> b!79228 (= e!51748 (Some!143 (_2!1092 (h!2078 lt!36536))))))

(declare-fun b!79229 () Bool)

(declare-fun e!51749 () Option!144)

(assert (=> b!79229 (= e!51748 e!51749)))

(declare-fun c!12260 () Bool)

(assert (=> b!79229 (= c!12260 (and ((_ is Cons!1490) lt!36536) (not (= (_1!1092 (h!2078 lt!36536)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!79231 () Bool)

(assert (=> b!79231 (= e!51749 None!142)))

(declare-fun b!79230 () Bool)

(assert (=> b!79230 (= e!51749 (getValueByKey!138 (t!5132 lt!36536) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun c!12259 () Bool)

(declare-fun d!19071 () Bool)

(assert (=> d!19071 (= c!12259 (and ((_ is Cons!1490) lt!36536) (= (_1!1092 (h!2078 lt!36536)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19071 (= (getValueByKey!138 lt!36536 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) e!51748)))

(assert (= (and d!19071 c!12259) b!79228))

(assert (= (and d!19071 (not c!12259)) b!79229))

(assert (= (and b!79229 c!12260) b!79230))

(assert (= (and b!79229 (not c!12260)) b!79231))

(declare-fun m!80149 () Bool)

(assert (=> b!79230 m!80149))

(assert (=> d!18757 d!19071))

(declare-fun d!19073 () Bool)

(assert (=> d!19073 (= (getValueByKey!138 lt!36536 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36765 () Unit!2237)

(assert (=> d!19073 (= lt!36765 (choose!468 lt!36536 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun e!51750 () Bool)

(assert (=> d!19073 e!51750))

(declare-fun res!41409 () Bool)

(assert (=> d!19073 (=> (not res!41409) (not e!51750))))

(assert (=> d!19073 (= res!41409 (isStrictlySorted!282 lt!36536))))

(assert (=> d!19073 (= (lemmaContainsTupThenGetReturnValue!55 lt!36536 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36765)))

(declare-fun b!79232 () Bool)

(declare-fun res!41410 () Bool)

(assert (=> b!79232 (=> (not res!41410) (not e!51750))))

(assert (=> b!79232 (= res!41410 (containsKey!141 lt!36536 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79233 () Bool)

(assert (=> b!79233 (= e!51750 (contains!737 lt!36536 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (= (and d!19073 res!41409) b!79232))

(assert (= (and b!79232 res!41410) b!79233))

(assert (=> d!19073 m!79305))

(declare-fun m!80151 () Bool)

(assert (=> d!19073 m!80151))

(declare-fun m!80153 () Bool)

(assert (=> d!19073 m!80153))

(declare-fun m!80155 () Bool)

(assert (=> b!79232 m!80155))

(declare-fun m!80157 () Bool)

(assert (=> b!79233 m!80157))

(assert (=> d!18757 d!19073))

(declare-fun b!79234 () Bool)

(declare-fun e!51753 () List!1494)

(declare-fun e!51751 () List!1494)

(assert (=> b!79234 (= e!51753 e!51751)))

(declare-fun c!12262 () Bool)

(assert (=> b!79234 (= c!12262 (and ((_ is Cons!1490) (toList!729 call!7153)) (= (_1!1092 (h!2078 (toList!729 call!7153))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!79235 () Bool)

(declare-fun c!12261 () Bool)

(assert (=> b!79235 (= c!12261 (and ((_ is Cons!1490) (toList!729 call!7153)) (bvsgt (_1!1092 (h!2078 (toList!729 call!7153))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun e!51755 () List!1494)

(assert (=> b!79235 (= e!51751 e!51755)))

(declare-fun b!79236 () Bool)

(declare-fun call!7289 () List!1494)

(assert (=> b!79236 (= e!51755 call!7289)))

(declare-fun b!79237 () Bool)

(declare-fun call!7291 () List!1494)

(assert (=> b!79237 (= e!51751 call!7291)))

(declare-fun bm!7287 () Bool)

(assert (=> bm!7287 (= call!7289 call!7291)))

(declare-fun e!51754 () List!1494)

(declare-fun b!79238 () Bool)

(assert (=> b!79238 (= e!51754 (insertStrictlySorted!58 (t!5132 (toList!729 call!7153)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79239 () Bool)

(declare-fun call!7290 () List!1494)

(assert (=> b!79239 (= e!51753 call!7290)))

(declare-fun b!79240 () Bool)

(assert (=> b!79240 (= e!51754 (ite c!12262 (t!5132 (toList!729 call!7153)) (ite c!12261 (Cons!1490 (h!2078 (toList!729 call!7153)) (t!5132 (toList!729 call!7153))) Nil!1491)))))

(declare-fun d!19075 () Bool)

(declare-fun e!51752 () Bool)

(assert (=> d!19075 e!51752))

(declare-fun res!41412 () Bool)

(assert (=> d!19075 (=> (not res!41412) (not e!51752))))

(declare-fun lt!36766 () List!1494)

(assert (=> d!19075 (= res!41412 (isStrictlySorted!282 lt!36766))))

(assert (=> d!19075 (= lt!36766 e!51753)))

(declare-fun c!12264 () Bool)

(assert (=> d!19075 (= c!12264 (and ((_ is Cons!1490) (toList!729 call!7153)) (bvslt (_1!1092 (h!2078 (toList!729 call!7153))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19075 (isStrictlySorted!282 (toList!729 call!7153))))

(assert (=> d!19075 (= (insertStrictlySorted!58 (toList!729 call!7153) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36766)))

(declare-fun bm!7286 () Bool)

(assert (=> bm!7286 (= call!7291 call!7290)))

(declare-fun b!79241 () Bool)

(declare-fun res!41411 () Bool)

(assert (=> b!79241 (=> (not res!41411) (not e!51752))))

(assert (=> b!79241 (= res!41411 (containsKey!141 lt!36766 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79242 () Bool)

(assert (=> b!79242 (= e!51755 call!7289)))

(declare-fun b!79243 () Bool)

(assert (=> b!79243 (= e!51752 (contains!737 lt!36766 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun bm!7288 () Bool)

(assert (=> bm!7288 (= call!7290 ($colon$colon!68 e!51754 (ite c!12264 (h!2078 (toList!729 call!7153)) (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun c!12263 () Bool)

(assert (=> bm!7288 (= c!12263 c!12264)))

(assert (= (and d!19075 c!12264) b!79239))

(assert (= (and d!19075 (not c!12264)) b!79234))

(assert (= (and b!79234 c!12262) b!79237))

(assert (= (and b!79234 (not c!12262)) b!79235))

(assert (= (and b!79235 c!12261) b!79242))

(assert (= (and b!79235 (not c!12261)) b!79236))

(assert (= (or b!79242 b!79236) bm!7287))

(assert (= (or b!79237 bm!7287) bm!7286))

(assert (= (or b!79239 bm!7286) bm!7288))

(assert (= (and bm!7288 c!12263) b!79238))

(assert (= (and bm!7288 (not c!12263)) b!79240))

(assert (= (and d!19075 res!41412) b!79241))

(assert (= (and b!79241 res!41411) b!79243))

(declare-fun m!80159 () Bool)

(assert (=> b!79243 m!80159))

(declare-fun m!80161 () Bool)

(assert (=> b!79238 m!80161))

(declare-fun m!80163 () Bool)

(assert (=> b!79241 m!80163))

(declare-fun m!80165 () Bool)

(assert (=> d!19075 m!80165))

(declare-fun m!80167 () Bool)

(assert (=> d!19075 m!80167))

(declare-fun m!80169 () Bool)

(assert (=> bm!7288 m!80169))

(assert (=> d!18757 d!19075))

(declare-fun b!79244 () Bool)

(declare-fun e!51756 () Option!144)

(assert (=> b!79244 (= e!51756 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36321)))))))

(declare-fun b!79245 () Bool)

(declare-fun e!51757 () Option!144)

(assert (=> b!79245 (= e!51756 e!51757)))

(declare-fun c!12266 () Bool)

(assert (=> b!79245 (= c!12266 (and ((_ is Cons!1490) (toList!729 lt!36321)) (not (= (_1!1092 (h!2078 (toList!729 lt!36321))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79247 () Bool)

(assert (=> b!79247 (= e!51757 None!142)))

(declare-fun b!79246 () Bool)

(assert (=> b!79246 (= e!51757 (getValueByKey!138 (t!5132 (toList!729 lt!36321)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19077 () Bool)

(declare-fun c!12265 () Bool)

(assert (=> d!19077 (= c!12265 (and ((_ is Cons!1490) (toList!729 lt!36321)) (= (_1!1092 (h!2078 (toList!729 lt!36321))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19077 (= (getValueByKey!138 (toList!729 lt!36321) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!51756)))

(assert (= (and d!19077 c!12265) b!79244))

(assert (= (and d!19077 (not c!12265)) b!79245))

(assert (= (and b!79245 c!12266) b!79246))

(assert (= (and b!79245 (not c!12266)) b!79247))

(declare-fun m!80171 () Bool)

(assert (=> b!79246 m!80171))

(assert (=> b!78477 d!19077))

(assert (=> d!18697 d!18695))

(declare-fun d!19079 () Bool)

(assert (=> d!19079 (= (getValueByKey!138 lt!35952 (_1!1092 lt!35792)) (Some!143 (_2!1092 lt!35792)))))

(assert (=> d!19079 true))

(declare-fun _$22!393 () Unit!2237)

(assert (=> d!19079 (= (choose!468 lt!35952 (_1!1092 lt!35792) (_2!1092 lt!35792)) _$22!393)))

(declare-fun bs!3364 () Bool)

(assert (= bs!3364 d!19079))

(assert (=> bs!3364 m!78133))

(assert (=> d!18697 d!19079))

(declare-fun d!19081 () Bool)

(declare-fun res!41413 () Bool)

(declare-fun e!51758 () Bool)

(assert (=> d!19081 (=> res!41413 e!51758)))

(assert (=> d!19081 (= res!41413 (or ((_ is Nil!1491) lt!35952) ((_ is Nil!1491) (t!5132 lt!35952))))))

(assert (=> d!19081 (= (isStrictlySorted!282 lt!35952) e!51758)))

(declare-fun b!79248 () Bool)

(declare-fun e!51759 () Bool)

(assert (=> b!79248 (= e!51758 e!51759)))

(declare-fun res!41414 () Bool)

(assert (=> b!79248 (=> (not res!41414) (not e!51759))))

(assert (=> b!79248 (= res!41414 (bvslt (_1!1092 (h!2078 lt!35952)) (_1!1092 (h!2078 (t!5132 lt!35952)))))))

(declare-fun b!79249 () Bool)

(assert (=> b!79249 (= e!51759 (isStrictlySorted!282 (t!5132 lt!35952)))))

(assert (= (and d!19081 (not res!41413)) b!79248))

(assert (= (and b!79248 res!41414) b!79249))

(declare-fun m!80173 () Bool)

(assert (=> b!79249 m!80173))

(assert (=> d!18697 d!19081))

(declare-fun b!79250 () Bool)

(assert (=> b!79250 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> b!79250 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (ite c!11968 (_values!2254 newMap!16) lt!36131))))))

(declare-fun lt!36767 () ListLongMap!1427)

(declare-fun e!51763 () Bool)

(assert (=> b!79250 (= e!51763 (= (apply!79 lt!36767 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (ite c!11968 (_values!2254 newMap!16) lt!36131)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79251 () Bool)

(declare-fun e!51764 () ListLongMap!1427)

(assert (=> b!79251 (= e!51764 (ListLongMap!1428 Nil!1491))))

(declare-fun bm!7289 () Bool)

(declare-fun call!7292 () ListLongMap!1427)

(assert (=> bm!7289 (= call!7292 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite c!11968 (_values!2254 newMap!16) lt!36131) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16)))))

(declare-fun d!19083 () Bool)

(declare-fun e!51762 () Bool)

(assert (=> d!19083 e!51762))

(declare-fun res!41415 () Bool)

(assert (=> d!19083 (=> (not res!41415) (not e!51762))))

(assert (=> d!19083 (= res!41415 (not (contains!736 lt!36767 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19083 (= lt!36767 e!51764)))

(declare-fun c!12268 () Bool)

(assert (=> d!19083 (= c!12268 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!19083 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!19083 (= (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite c!11968 (_values!2254 newMap!16) lt!36131) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36767)))

(declare-fun b!79252 () Bool)

(declare-fun lt!36771 () Unit!2237)

(declare-fun lt!36769 () Unit!2237)

(assert (=> b!79252 (= lt!36771 lt!36769)))

(declare-fun lt!36773 () V!2993)

(declare-fun lt!36770 () (_ BitVec 64))

(declare-fun lt!36772 () ListLongMap!1427)

(declare-fun lt!36768 () (_ BitVec 64))

(assert (=> b!79252 (not (contains!736 (+!100 lt!36772 (tuple2!2163 lt!36770 lt!36773)) lt!36768))))

(assert (=> b!79252 (= lt!36769 (addStillNotContains!30 lt!36772 lt!36770 lt!36773 lt!36768))))

(assert (=> b!79252 (= lt!36768 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79252 (= lt!36773 (get!1183 (select (arr!1887 (ite c!11968 (_values!2254 newMap!16) lt!36131)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79252 (= lt!36770 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79252 (= lt!36772 call!7292)))

(declare-fun e!51765 () ListLongMap!1427)

(assert (=> b!79252 (= e!51765 (+!100 call!7292 (tuple2!2163 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) (get!1183 (select (arr!1887 (ite c!11968 (_values!2254 newMap!16) lt!36131)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79253 () Bool)

(declare-fun e!51761 () Bool)

(assert (=> b!79253 (= e!51762 e!51761)))

(declare-fun c!12267 () Bool)

(declare-fun e!51760 () Bool)

(assert (=> b!79253 (= c!12267 e!51760)))

(declare-fun res!41418 () Bool)

(assert (=> b!79253 (=> (not res!41418) (not e!51760))))

(assert (=> b!79253 (= res!41418 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun e!51766 () Bool)

(declare-fun b!79254 () Bool)

(assert (=> b!79254 (= e!51766 (= lt!36767 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite c!11968 (_values!2254 newMap!16) lt!36131) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16))))))

(declare-fun b!79255 () Bool)

(declare-fun res!41416 () Bool)

(assert (=> b!79255 (=> (not res!41416) (not e!51762))))

(assert (=> b!79255 (= res!41416 (not (contains!736 lt!36767 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79256 () Bool)

(assert (=> b!79256 (= e!51761 e!51763)))

(assert (=> b!79256 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun res!41417 () Bool)

(assert (=> b!79256 (= res!41417 (contains!736 lt!36767 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79256 (=> (not res!41417) (not e!51763))))

(declare-fun b!79257 () Bool)

(assert (=> b!79257 (= e!51765 call!7292)))

(declare-fun b!79258 () Bool)

(assert (=> b!79258 (= e!51764 e!51765)))

(declare-fun c!12270 () Bool)

(assert (=> b!79258 (= c!12270 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79259 () Bool)

(assert (=> b!79259 (= e!51761 e!51766)))

(declare-fun c!12269 () Bool)

(assert (=> b!79259 (= c!12269 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79260 () Bool)

(assert (=> b!79260 (= e!51766 (isEmpty!332 lt!36767))))

(declare-fun b!79261 () Bool)

(assert (=> b!79261 (= e!51760 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79261 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!19083 c!12268) b!79251))

(assert (= (and d!19083 (not c!12268)) b!79258))

(assert (= (and b!79258 c!12270) b!79252))

(assert (= (and b!79258 (not c!12270)) b!79257))

(assert (= (or b!79252 b!79257) bm!7289))

(assert (= (and d!19083 res!41415) b!79255))

(assert (= (and b!79255 res!41416) b!79253))

(assert (= (and b!79253 res!41418) b!79261))

(assert (= (and b!79253 c!12267) b!79256))

(assert (= (and b!79253 (not c!12267)) b!79259))

(assert (= (and b!79256 res!41417) b!79250))

(assert (= (and b!79259 c!12269) b!79254))

(assert (= (and b!79259 (not c!12269)) b!79260))

(declare-fun b_lambda!3543 () Bool)

(assert (=> (not b_lambda!3543) (not b!79250)))

(assert (=> b!79250 t!5144))

(declare-fun b_and!4861 () Bool)

(assert (= b_and!4857 (and (=> t!5144 result!2821) b_and!4861)))

(assert (=> b!79250 t!5146))

(declare-fun b_and!4863 () Bool)

(assert (= b_and!4859 (and (=> t!5146 result!2823) b_and!4863)))

(declare-fun b_lambda!3545 () Bool)

(assert (=> (not b_lambda!3545) (not b!79252)))

(assert (=> b!79252 t!5144))

(declare-fun b_and!4865 () Bool)

(assert (= b_and!4861 (and (=> t!5144 result!2821) b_and!4865)))

(assert (=> b!79252 t!5146))

(declare-fun b_and!4867 () Bool)

(assert (= b_and!4863 (and (=> t!5146 result!2823) b_and!4867)))

(declare-fun m!80175 () Bool)

(assert (=> d!19083 m!80175))

(assert (=> d!19083 m!78355))

(declare-fun m!80177 () Bool)

(assert (=> bm!7289 m!80177))

(assert (=> b!79256 m!78435))

(assert (=> b!79256 m!78435))

(declare-fun m!80179 () Bool)

(assert (=> b!79256 m!80179))

(declare-fun m!80181 () Bool)

(assert (=> b!79255 m!80181))

(assert (=> b!79258 m!78435))

(assert (=> b!79258 m!78435))

(assert (=> b!79258 m!78437))

(declare-fun m!80183 () Bool)

(assert (=> b!79260 m!80183))

(assert (=> b!79254 m!80177))

(assert (=> b!79261 m!78435))

(assert (=> b!79261 m!78435))

(assert (=> b!79261 m!78437))

(declare-fun m!80185 () Bool)

(assert (=> b!79252 m!80185))

(declare-fun m!80187 () Bool)

(assert (=> b!79252 m!80187))

(declare-fun m!80189 () Bool)

(assert (=> b!79252 m!80189))

(assert (=> b!79252 m!80187))

(assert (=> b!79252 m!78471))

(declare-fun m!80191 () Bool)

(assert (=> b!79252 m!80191))

(assert (=> b!79252 m!79251))

(assert (=> b!79252 m!78435))

(assert (=> b!79252 m!79251))

(assert (=> b!79252 m!78471))

(assert (=> b!79252 m!79253))

(assert (=> b!79250 m!78435))

(declare-fun m!80193 () Bool)

(assert (=> b!79250 m!80193))

(assert (=> b!79250 m!78471))

(assert (=> b!79250 m!79251))

(assert (=> b!79250 m!78435))

(assert (=> b!79250 m!79251))

(assert (=> b!79250 m!78471))

(assert (=> b!79250 m!79253))

(assert (=> bm!7232 d!19083))

(declare-fun b!79262 () Bool)

(declare-fun e!51769 () List!1494)

(declare-fun e!51767 () List!1494)

(assert (=> b!79262 (= e!51769 e!51767)))

(declare-fun c!12272 () Bool)

(assert (=> b!79262 (= c!12272 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35804))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35804)))) (_1!1092 lt!35806))))))

(declare-fun b!79263 () Bool)

(declare-fun c!12271 () Bool)

(assert (=> b!79263 (= c!12271 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35804))) (bvsgt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35804)))) (_1!1092 lt!35806))))))

(declare-fun e!51771 () List!1494)

(assert (=> b!79263 (= e!51767 e!51771)))

(declare-fun b!79264 () Bool)

(declare-fun call!7293 () List!1494)

(assert (=> b!79264 (= e!51771 call!7293)))

(declare-fun b!79265 () Bool)

(declare-fun call!7295 () List!1494)

(assert (=> b!79265 (= e!51767 call!7295)))

(declare-fun bm!7291 () Bool)

(assert (=> bm!7291 (= call!7293 call!7295)))

(declare-fun b!79266 () Bool)

(declare-fun e!51770 () List!1494)

(assert (=> b!79266 (= e!51770 (insertStrictlySorted!58 (t!5132 (t!5132 (toList!729 lt!35804))) (_1!1092 lt!35806) (_2!1092 lt!35806)))))

(declare-fun b!79267 () Bool)

(declare-fun call!7294 () List!1494)

(assert (=> b!79267 (= e!51769 call!7294)))

(declare-fun b!79268 () Bool)

(assert (=> b!79268 (= e!51770 (ite c!12272 (t!5132 (t!5132 (toList!729 lt!35804))) (ite c!12271 (Cons!1490 (h!2078 (t!5132 (toList!729 lt!35804))) (t!5132 (t!5132 (toList!729 lt!35804)))) Nil!1491)))))

(declare-fun d!19085 () Bool)

(declare-fun e!51768 () Bool)

(assert (=> d!19085 e!51768))

(declare-fun res!41420 () Bool)

(assert (=> d!19085 (=> (not res!41420) (not e!51768))))

(declare-fun lt!36774 () List!1494)

(assert (=> d!19085 (= res!41420 (isStrictlySorted!282 lt!36774))))

(assert (=> d!19085 (= lt!36774 e!51769)))

(declare-fun c!12274 () Bool)

(assert (=> d!19085 (= c!12274 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35804))) (bvslt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35804)))) (_1!1092 lt!35806))))))

(assert (=> d!19085 (isStrictlySorted!282 (t!5132 (toList!729 lt!35804)))))

(assert (=> d!19085 (= (insertStrictlySorted!58 (t!5132 (toList!729 lt!35804)) (_1!1092 lt!35806) (_2!1092 lt!35806)) lt!36774)))

(declare-fun bm!7290 () Bool)

(assert (=> bm!7290 (= call!7295 call!7294)))

(declare-fun b!79269 () Bool)

(declare-fun res!41419 () Bool)

(assert (=> b!79269 (=> (not res!41419) (not e!51768))))

(assert (=> b!79269 (= res!41419 (containsKey!141 lt!36774 (_1!1092 lt!35806)))))

(declare-fun b!79270 () Bool)

(assert (=> b!79270 (= e!51771 call!7293)))

(declare-fun b!79271 () Bool)

(assert (=> b!79271 (= e!51768 (contains!737 lt!36774 (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun bm!7292 () Bool)

(assert (=> bm!7292 (= call!7294 ($colon$colon!68 e!51770 (ite c!12274 (h!2078 (t!5132 (toList!729 lt!35804))) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806)))))))

(declare-fun c!12273 () Bool)

(assert (=> bm!7292 (= c!12273 c!12274)))

(assert (= (and d!19085 c!12274) b!79267))

(assert (= (and d!19085 (not c!12274)) b!79262))

(assert (= (and b!79262 c!12272) b!79265))

(assert (= (and b!79262 (not c!12272)) b!79263))

(assert (= (and b!79263 c!12271) b!79270))

(assert (= (and b!79263 (not c!12271)) b!79264))

(assert (= (or b!79270 b!79264) bm!7291))

(assert (= (or b!79265 bm!7291) bm!7290))

(assert (= (or b!79267 bm!7290) bm!7292))

(assert (= (and bm!7292 c!12273) b!79266))

(assert (= (and bm!7292 (not c!12273)) b!79268))

(assert (= (and d!19085 res!41420) b!79269))

(assert (= (and b!79269 res!41419) b!79271))

(declare-fun m!80195 () Bool)

(assert (=> b!79271 m!80195))

(declare-fun m!80197 () Bool)

(assert (=> b!79266 m!80197))

(declare-fun m!80199 () Bool)

(assert (=> b!79269 m!80199))

(declare-fun m!80201 () Bool)

(assert (=> d!19085 m!80201))

(assert (=> d!19085 m!79537))

(declare-fun m!80203 () Bool)

(assert (=> bm!7292 m!80203))

(assert (=> b!78492 d!19085))

(declare-fun b!79272 () Bool)

(assert (=> b!79272 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> b!79272 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))))))))

(declare-fun lt!36775 () ListLongMap!1427)

(declare-fun e!51775 () Bool)

(assert (=> b!79272 (= e!51775 (= (apply!79 lt!36775 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79273 () Bool)

(declare-fun e!51776 () ListLongMap!1427)

(assert (=> b!79273 (= e!51776 (ListLongMap!1428 Nil!1491))))

(declare-fun bm!7293 () Bool)

(declare-fun call!7296 () ListLongMap!1427)

(assert (=> bm!7293 (= call!7296 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) (mask!6267 newMap!16) (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16)))))

(declare-fun d!19087 () Bool)

(declare-fun e!51774 () Bool)

(assert (=> d!19087 e!51774))

(declare-fun res!41421 () Bool)

(assert (=> d!19087 (=> (not res!41421) (not e!51774))))

(assert (=> d!19087 (= res!41421 (not (contains!736 lt!36775 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19087 (= lt!36775 e!51776)))

(declare-fun c!12276 () Bool)

(assert (=> d!19087 (= c!12276 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!19087 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!19087 (= (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) (mask!6267 newMap!16) (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36775)))

(declare-fun b!79274 () Bool)

(declare-fun lt!36779 () Unit!2237)

(declare-fun lt!36777 () Unit!2237)

(assert (=> b!79274 (= lt!36779 lt!36777)))

(declare-fun lt!36778 () (_ BitVec 64))

(declare-fun lt!36780 () ListLongMap!1427)

(declare-fun lt!36776 () (_ BitVec 64))

(declare-fun lt!36781 () V!2993)

(assert (=> b!79274 (not (contains!736 (+!100 lt!36780 (tuple2!2163 lt!36778 lt!36781)) lt!36776))))

(assert (=> b!79274 (= lt!36777 (addStillNotContains!30 lt!36780 lt!36778 lt!36781 lt!36776))))

(assert (=> b!79274 (= lt!36776 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79274 (= lt!36781 (get!1183 (select (arr!1887 (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79274 (= lt!36778 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79274 (= lt!36780 call!7296)))

(declare-fun e!51777 () ListLongMap!1427)

(assert (=> b!79274 (= e!51777 (+!100 call!7296 (tuple2!2163 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) (get!1183 (select (arr!1887 (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79275 () Bool)

(declare-fun e!51773 () Bool)

(assert (=> b!79275 (= e!51774 e!51773)))

(declare-fun c!12275 () Bool)

(declare-fun e!51772 () Bool)

(assert (=> b!79275 (= c!12275 e!51772)))

(declare-fun res!41424 () Bool)

(assert (=> b!79275 (=> (not res!41424) (not e!51772))))

(assert (=> b!79275 (= res!41424 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79276 () Bool)

(declare-fun e!51778 () Bool)

(assert (=> b!79276 (= e!51778 (= lt!36775 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) (mask!6267 newMap!16) (ite c!11968 (ite c!11972 lt!36140 lt!36142) (extraKeys!2122 newMap!16)) (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16))))))

(declare-fun b!79277 () Bool)

(declare-fun res!41422 () Bool)

(assert (=> b!79277 (=> (not res!41422) (not e!51774))))

(assert (=> b!79277 (= res!41422 (not (contains!736 lt!36775 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79278 () Bool)

(assert (=> b!79278 (= e!51773 e!51775)))

(assert (=> b!79278 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun res!41423 () Bool)

(assert (=> b!79278 (= res!41423 (contains!736 lt!36775 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79278 (=> (not res!41423) (not e!51775))))

(declare-fun b!79279 () Bool)

(assert (=> b!79279 (= e!51777 call!7296)))

(declare-fun b!79280 () Bool)

(assert (=> b!79280 (= e!51776 e!51777)))

(declare-fun c!12278 () Bool)

(assert (=> b!79280 (= c!12278 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79281 () Bool)

(assert (=> b!79281 (= e!51773 e!51778)))

(declare-fun c!12277 () Bool)

(assert (=> b!79281 (= c!12277 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79282 () Bool)

(assert (=> b!79282 (= e!51778 (isEmpty!332 lt!36775))))

(declare-fun b!79283 () Bool)

(assert (=> b!79283 (= e!51772 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79283 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!19087 c!12276) b!79273))

(assert (= (and d!19087 (not c!12276)) b!79280))

(assert (= (and b!79280 c!12278) b!79274))

(assert (= (and b!79280 (not c!12278)) b!79279))

(assert (= (or b!79274 b!79279) bm!7293))

(assert (= (and d!19087 res!41421) b!79277))

(assert (= (and b!79277 res!41422) b!79275))

(assert (= (and b!79275 res!41424) b!79283))

(assert (= (and b!79275 c!12275) b!79278))

(assert (= (and b!79275 (not c!12275)) b!79281))

(assert (= (and b!79278 res!41423) b!79272))

(assert (= (and b!79281 c!12277) b!79276))

(assert (= (and b!79281 (not c!12277)) b!79282))

(declare-fun b_lambda!3547 () Bool)

(assert (=> (not b_lambda!3547) (not b!79272)))

(assert (=> b!79272 t!5144))

(declare-fun b_and!4869 () Bool)

(assert (= b_and!4865 (and (=> t!5144 result!2821) b_and!4869)))

(assert (=> b!79272 t!5146))

(declare-fun b_and!4871 () Bool)

(assert (= b_and!4867 (and (=> t!5146 result!2823) b_and!4871)))

(declare-fun b_lambda!3549 () Bool)

(assert (=> (not b_lambda!3549) (not b!79274)))

(assert (=> b!79274 t!5144))

(declare-fun b_and!4873 () Bool)

(assert (= b_and!4869 (and (=> t!5144 result!2821) b_and!4873)))

(assert (=> b!79274 t!5146))

(declare-fun b_and!4875 () Bool)

(assert (= b_and!4871 (and (=> t!5146 result!2823) b_and!4875)))

(declare-fun m!80205 () Bool)

(assert (=> d!19087 m!80205))

(assert (=> d!19087 m!78355))

(declare-fun m!80207 () Bool)

(assert (=> bm!7293 m!80207))

(assert (=> b!79278 m!78435))

(assert (=> b!79278 m!78435))

(declare-fun m!80209 () Bool)

(assert (=> b!79278 m!80209))

(declare-fun m!80211 () Bool)

(assert (=> b!79277 m!80211))

(assert (=> b!79280 m!78435))

(assert (=> b!79280 m!78435))

(assert (=> b!79280 m!78437))

(declare-fun m!80213 () Bool)

(assert (=> b!79282 m!80213))

(assert (=> b!79276 m!80207))

(assert (=> b!79283 m!78435))

(assert (=> b!79283 m!78435))

(assert (=> b!79283 m!78437))

(declare-fun m!80215 () Bool)

(assert (=> b!79274 m!80215))

(declare-fun m!80217 () Bool)

(assert (=> b!79274 m!80217))

(declare-fun m!80219 () Bool)

(assert (=> b!79274 m!80219))

(assert (=> b!79274 m!80217))

(assert (=> b!79274 m!78471))

(declare-fun m!80221 () Bool)

(assert (=> b!79274 m!80221))

(assert (=> b!79274 m!78721))

(assert (=> b!79274 m!78435))

(assert (=> b!79274 m!78721))

(assert (=> b!79274 m!78471))

(assert (=> b!79274 m!78723))

(assert (=> b!79272 m!78435))

(declare-fun m!80223 () Bool)

(assert (=> b!79272 m!80223))

(assert (=> b!79272 m!78471))

(assert (=> b!79272 m!78721))

(assert (=> b!79272 m!78435))

(assert (=> b!79272 m!78721))

(assert (=> b!79272 m!78471))

(assert (=> b!79272 m!78723))

(assert (=> bm!7182 d!19087))

(declare-fun d!19089 () Bool)

(declare-fun e!51780 () Bool)

(assert (=> d!19089 e!51780))

(declare-fun res!41425 () Bool)

(assert (=> d!19089 (=> res!41425 e!51780)))

(declare-fun lt!36783 () Bool)

(assert (=> d!19089 (= res!41425 (not lt!36783))))

(declare-fun lt!36785 () Bool)

(assert (=> d!19089 (= lt!36783 lt!36785)))

(declare-fun lt!36784 () Unit!2237)

(declare-fun e!51779 () Unit!2237)

(assert (=> d!19089 (= lt!36784 e!51779)))

(declare-fun c!12279 () Bool)

(assert (=> d!19089 (= c!12279 lt!36785)))

(assert (=> d!19089 (= lt!36785 (containsKey!141 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(assert (=> d!19089 (= (contains!736 (getCurrentListMap!425 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))) lt!36783)))

(declare-fun b!79284 () Bool)

(declare-fun lt!36782 () Unit!2237)

(assert (=> b!79284 (= e!51779 lt!36782)))

(assert (=> b!79284 (= lt!36782 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(assert (=> b!79284 (isDefined!90 (getValueByKey!138 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(declare-fun b!79285 () Bool)

(declare-fun Unit!2287 () Unit!2237)

(assert (=> b!79285 (= e!51779 Unit!2287)))

(declare-fun b!79286 () Bool)

(assert (=> b!79286 (= e!51780 (isDefined!90 (getValueByKey!138 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137)))))))

(assert (= (and d!19089 c!12279) b!79284))

(assert (= (and d!19089 (not c!12279)) b!79285))

(assert (= (and d!19089 (not res!41425)) b!79286))

(assert (=> d!19089 m!78299))

(declare-fun m!80225 () Bool)

(assert (=> d!19089 m!80225))

(assert (=> b!79284 m!78299))

(declare-fun m!80227 () Bool)

(assert (=> b!79284 m!80227))

(assert (=> b!79284 m!78299))

(declare-fun m!80229 () Bool)

(assert (=> b!79284 m!80229))

(assert (=> b!79284 m!80229))

(declare-fun m!80231 () Bool)

(assert (=> b!79284 m!80231))

(assert (=> b!79286 m!78299))

(assert (=> b!79286 m!80229))

(assert (=> b!79286 m!80229))

(assert (=> b!79286 m!80231))

(assert (=> b!78738 d!19089))

(declare-fun b!79287 () Bool)

(declare-fun e!51787 () ListLongMap!1427)

(declare-fun call!7299 () ListLongMap!1427)

(assert (=> b!79287 (= e!51787 call!7299)))

(declare-fun b!79288 () Bool)

(declare-fun e!51788 () ListLongMap!1427)

(declare-fun call!7302 () ListLongMap!1427)

(assert (=> b!79288 (= e!51788 (+!100 call!7302 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun b!79290 () Bool)

(declare-fun e!51790 () Bool)

(assert (=> b!79290 (= e!51790 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7294 () Bool)

(declare-fun call!7301 () Bool)

(declare-fun lt!36806 () ListLongMap!1427)

(assert (=> bm!7294 (= call!7301 (contains!736 lt!36806 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79291 () Bool)

(declare-fun e!51781 () Bool)

(declare-fun e!51792 () Bool)

(assert (=> b!79291 (= e!51781 e!51792)))

(declare-fun c!12280 () Bool)

(assert (=> b!79291 (= c!12280 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79292 () Bool)

(declare-fun e!51784 () Unit!2237)

(declare-fun Unit!2288 () Unit!2237)

(assert (=> b!79292 (= e!51784 Unit!2288)))

(declare-fun b!79293 () Bool)

(declare-fun res!41431 () Bool)

(assert (=> b!79293 (=> (not res!41431) (not e!51781))))

(declare-fun e!51793 () Bool)

(assert (=> b!79293 (= res!41431 e!51793)))

(declare-fun c!12282 () Bool)

(assert (=> b!79293 (= c!12282 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79294 () Bool)

(declare-fun lt!36794 () Unit!2237)

(assert (=> b!79294 (= e!51784 lt!36794)))

(declare-fun lt!36800 () ListLongMap!1427)

(assert (=> b!79294 (= lt!36800 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36797 () (_ BitVec 64))

(assert (=> b!79294 (= lt!36797 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36798 () (_ BitVec 64))

(assert (=> b!79294 (= lt!36798 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36807 () Unit!2237)

(assert (=> b!79294 (= lt!36807 (addStillContains!55 lt!36800 lt!36797 (zeroValue!2169 newMap!16) lt!36798))))

(assert (=> b!79294 (contains!736 (+!100 lt!36800 (tuple2!2163 lt!36797 (zeroValue!2169 newMap!16))) lt!36798)))

(declare-fun lt!36786 () Unit!2237)

(assert (=> b!79294 (= lt!36786 lt!36807)))

(declare-fun lt!36796 () ListLongMap!1427)

(assert (=> b!79294 (= lt!36796 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36803 () (_ BitVec 64))

(assert (=> b!79294 (= lt!36803 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36801 () (_ BitVec 64))

(assert (=> b!79294 (= lt!36801 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36804 () Unit!2237)

(assert (=> b!79294 (= lt!36804 (addApplyDifferent!55 lt!36796 lt!36803 (minValue!2169 newMap!16) lt!36801))))

(assert (=> b!79294 (= (apply!79 (+!100 lt!36796 (tuple2!2163 lt!36803 (minValue!2169 newMap!16))) lt!36801) (apply!79 lt!36796 lt!36801))))

(declare-fun lt!36789 () Unit!2237)

(assert (=> b!79294 (= lt!36789 lt!36804)))

(declare-fun lt!36799 () ListLongMap!1427)

(assert (=> b!79294 (= lt!36799 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36802 () (_ BitVec 64))

(assert (=> b!79294 (= lt!36802 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36792 () (_ BitVec 64))

(assert (=> b!79294 (= lt!36792 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36787 () Unit!2237)

(assert (=> b!79294 (= lt!36787 (addApplyDifferent!55 lt!36799 lt!36802 (zeroValue!2169 newMap!16) lt!36792))))

(assert (=> b!79294 (= (apply!79 (+!100 lt!36799 (tuple2!2163 lt!36802 (zeroValue!2169 newMap!16))) lt!36792) (apply!79 lt!36799 lt!36792))))

(declare-fun lt!36805 () Unit!2237)

(assert (=> b!79294 (= lt!36805 lt!36787)))

(declare-fun lt!36793 () ListLongMap!1427)

(assert (=> b!79294 (= lt!36793 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36791 () (_ BitVec 64))

(assert (=> b!79294 (= lt!36791 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36790 () (_ BitVec 64))

(assert (=> b!79294 (= lt!36790 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79294 (= lt!36794 (addApplyDifferent!55 lt!36793 lt!36791 (minValue!2169 newMap!16) lt!36790))))

(assert (=> b!79294 (= (apply!79 (+!100 lt!36793 (tuple2!2163 lt!36791 (minValue!2169 newMap!16))) lt!36790) (apply!79 lt!36793 lt!36790))))

(declare-fun b!79295 () Bool)

(declare-fun e!51782 () Bool)

(assert (=> b!79295 (= e!51792 e!51782)))

(declare-fun res!41428 () Bool)

(assert (=> b!79295 (= res!41428 call!7301)))

(assert (=> b!79295 (=> (not res!41428) (not e!51782))))

(declare-fun bm!7295 () Bool)

(declare-fun call!7303 () ListLongMap!1427)

(assert (=> bm!7295 (= call!7299 call!7303)))

(declare-fun bm!7296 () Bool)

(declare-fun call!7300 () ListLongMap!1427)

(assert (=> bm!7296 (= call!7300 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!79296 () Bool)

(assert (=> b!79296 (= e!51792 (not call!7301))))

(declare-fun b!79297 () Bool)

(declare-fun call!7297 () Bool)

(assert (=> b!79297 (= e!51793 (not call!7297))))

(declare-fun c!12285 () Bool)

(declare-fun c!12283 () Bool)

(declare-fun bm!7297 () Bool)

(assert (=> bm!7297 (= call!7302 (+!100 (ite c!12285 call!7300 (ite c!12283 call!7303 call!7299)) (ite (or c!12285 c!12283) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!79298 () Bool)

(assert (=> b!79298 (= e!51782 (= (apply!79 lt!36806 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(declare-fun b!79299 () Bool)

(declare-fun res!41430 () Bool)

(assert (=> b!79299 (=> (not res!41430) (not e!51781))))

(declare-fun e!51789 () Bool)

(assert (=> b!79299 (= res!41430 e!51789)))

(declare-fun res!41432 () Bool)

(assert (=> b!79299 (=> res!41432 e!51789)))

(declare-fun e!51785 () Bool)

(assert (=> b!79299 (= res!41432 (not e!51785))))

(declare-fun res!41429 () Bool)

(assert (=> b!79299 (=> (not res!41429) (not e!51785))))

(assert (=> b!79299 (= res!41429 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79300 () Bool)

(assert (=> b!79300 (= e!51785 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!19091 () Bool)

(assert (=> d!19091 e!51781))

(declare-fun res!41434 () Bool)

(assert (=> d!19091 (=> (not res!41434) (not e!51781))))

(assert (=> d!19091 (= res!41434 (or (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))))

(declare-fun lt!36795 () ListLongMap!1427)

(assert (=> d!19091 (= lt!36806 lt!36795)))

(declare-fun lt!36788 () Unit!2237)

(assert (=> d!19091 (= lt!36788 e!51784)))

(declare-fun c!12284 () Bool)

(assert (=> d!19091 (= c!12284 e!51790)))

(declare-fun res!41433 () Bool)

(assert (=> d!19091 (=> (not res!41433) (not e!51790))))

(assert (=> d!19091 (= res!41433 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!19091 (= lt!36795 e!51788)))

(assert (=> d!19091 (= c!12285 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19091 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!19091 (= (getCurrentListMap!425 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36806)))

(declare-fun b!79289 () Bool)

(declare-fun e!51786 () ListLongMap!1427)

(assert (=> b!79289 (= e!51788 e!51786)))

(assert (=> b!79289 (= c!12283 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79301 () Bool)

(declare-fun call!7298 () ListLongMap!1427)

(assert (=> b!79301 (= e!51787 call!7298)))

(declare-fun bm!7298 () Bool)

(assert (=> bm!7298 (= call!7297 (contains!736 lt!36806 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7299 () Bool)

(assert (=> bm!7299 (= call!7298 call!7302)))

(declare-fun b!79302 () Bool)

(declare-fun c!12281 () Bool)

(assert (=> b!79302 (= c!12281 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79302 (= e!51786 e!51787)))

(declare-fun b!79303 () Bool)

(declare-fun e!51783 () Bool)

(assert (=> b!79303 (= e!51783 (= (apply!79 lt!36806 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!79304 () Bool)

(assert (=> b!79304 (= e!51793 e!51783)))

(declare-fun res!41427 () Bool)

(assert (=> b!79304 (= res!41427 call!7297)))

(assert (=> b!79304 (=> (not res!41427) (not e!51783))))

(declare-fun b!79305 () Bool)

(declare-fun e!51791 () Bool)

(assert (=> b!79305 (= e!51789 e!51791)))

(declare-fun res!41426 () Bool)

(assert (=> b!79305 (=> (not res!41426) (not e!51791))))

(assert (=> b!79305 (= res!41426 (contains!736 lt!36806 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79305 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79306 () Bool)

(assert (=> b!79306 (= e!51791 (= (apply!79 lt!36806 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 lt!36131) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79306 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 lt!36131)))))

(assert (=> b!79306 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79307 () Bool)

(assert (=> b!79307 (= e!51786 call!7298)))

(declare-fun bm!7300 () Bool)

(assert (=> bm!7300 (= call!7303 call!7300)))

(assert (= (and d!19091 c!12285) b!79288))

(assert (= (and d!19091 (not c!12285)) b!79289))

(assert (= (and b!79289 c!12283) b!79307))

(assert (= (and b!79289 (not c!12283)) b!79302))

(assert (= (and b!79302 c!12281) b!79301))

(assert (= (and b!79302 (not c!12281)) b!79287))

(assert (= (or b!79301 b!79287) bm!7295))

(assert (= (or b!79307 bm!7295) bm!7300))

(assert (= (or b!79307 b!79301) bm!7299))

(assert (= (or b!79288 bm!7300) bm!7296))

(assert (= (or b!79288 bm!7299) bm!7297))

(assert (= (and d!19091 res!41433) b!79290))

(assert (= (and d!19091 c!12284) b!79294))

(assert (= (and d!19091 (not c!12284)) b!79292))

(assert (= (and d!19091 res!41434) b!79299))

(assert (= (and b!79299 res!41429) b!79300))

(assert (= (and b!79299 (not res!41432)) b!79305))

(assert (= (and b!79305 res!41426) b!79306))

(assert (= (and b!79299 res!41430) b!79293))

(assert (= (and b!79293 c!12282) b!79304))

(assert (= (and b!79293 (not c!12282)) b!79297))

(assert (= (and b!79304 res!41427) b!79303))

(assert (= (or b!79304 b!79297) bm!7298))

(assert (= (and b!79293 res!41431) b!79291))

(assert (= (and b!79291 c!12280) b!79295))

(assert (= (and b!79291 (not c!12280)) b!79296))

(assert (= (and b!79295 res!41428) b!79298))

(assert (= (or b!79295 b!79296) bm!7294))

(declare-fun b_lambda!3551 () Bool)

(assert (=> (not b_lambda!3551) (not b!79306)))

(assert (=> b!79306 t!5144))

(declare-fun b_and!4877 () Bool)

(assert (= b_and!4873 (and (=> t!5144 result!2821) b_and!4877)))

(assert (=> b!79306 t!5146))

(declare-fun b_and!4879 () Bool)

(assert (= b_and!4875 (and (=> t!5146 result!2823) b_and!4879)))

(declare-fun m!80233 () Bool)

(assert (=> b!79306 m!80233))

(assert (=> b!79306 m!78471))

(declare-fun m!80235 () Bool)

(assert (=> b!79306 m!80235))

(assert (=> b!79306 m!78435))

(assert (=> b!79306 m!80233))

(assert (=> b!79306 m!78435))

(declare-fun m!80237 () Bool)

(assert (=> b!79306 m!80237))

(assert (=> b!79306 m!78471))

(assert (=> d!19091 m!78355))

(declare-fun m!80239 () Bool)

(assert (=> bm!7297 m!80239))

(assert (=> b!79305 m!78435))

(assert (=> b!79305 m!78435))

(declare-fun m!80241 () Bool)

(assert (=> b!79305 m!80241))

(declare-fun m!80243 () Bool)

(assert (=> bm!7296 m!80243))

(assert (=> b!79300 m!78435))

(assert (=> b!79300 m!78435))

(assert (=> b!79300 m!78437))

(assert (=> b!79290 m!78435))

(assert (=> b!79290 m!78435))

(assert (=> b!79290 m!78437))

(declare-fun m!80245 () Bool)

(assert (=> b!79294 m!80245))

(declare-fun m!80247 () Bool)

(assert (=> b!79294 m!80247))

(declare-fun m!80249 () Bool)

(assert (=> b!79294 m!80249))

(declare-fun m!80251 () Bool)

(assert (=> b!79294 m!80251))

(declare-fun m!80253 () Bool)

(assert (=> b!79294 m!80253))

(declare-fun m!80255 () Bool)

(assert (=> b!79294 m!80255))

(declare-fun m!80257 () Bool)

(assert (=> b!79294 m!80257))

(declare-fun m!80259 () Bool)

(assert (=> b!79294 m!80259))

(declare-fun m!80261 () Bool)

(assert (=> b!79294 m!80261))

(declare-fun m!80263 () Bool)

(assert (=> b!79294 m!80263))

(assert (=> b!79294 m!80257))

(declare-fun m!80265 () Bool)

(assert (=> b!79294 m!80265))

(assert (=> b!79294 m!80261))

(declare-fun m!80267 () Bool)

(assert (=> b!79294 m!80267))

(assert (=> b!79294 m!80249))

(declare-fun m!80269 () Bool)

(assert (=> b!79294 m!80269))

(assert (=> b!79294 m!80245))

(assert (=> b!79294 m!80243))

(declare-fun m!80271 () Bool)

(assert (=> b!79294 m!80271))

(declare-fun m!80273 () Bool)

(assert (=> b!79294 m!80273))

(assert (=> b!79294 m!78435))

(declare-fun m!80275 () Bool)

(assert (=> b!79288 m!80275))

(declare-fun m!80277 () Bool)

(assert (=> bm!7294 m!80277))

(declare-fun m!80279 () Bool)

(assert (=> bm!7298 m!80279))

(declare-fun m!80281 () Bool)

(assert (=> b!79298 m!80281))

(declare-fun m!80283 () Bool)

(assert (=> b!79303 m!80283))

(assert (=> b!78738 d!19091))

(declare-fun b!79308 () Bool)

(declare-fun e!51794 () Option!144)

(assert (=> b!79308 (= e!51794 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36537)))))))

(declare-fun b!79309 () Bool)

(declare-fun e!51795 () Option!144)

(assert (=> b!79309 (= e!51794 e!51795)))

(declare-fun c!12287 () Bool)

(assert (=> b!79309 (= c!12287 (and ((_ is Cons!1490) (toList!729 lt!36537)) (not (= (_1!1092 (h!2078 (toList!729 lt!36537))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!79311 () Bool)

(assert (=> b!79311 (= e!51795 None!142)))

(declare-fun b!79310 () Bool)

(assert (=> b!79310 (= e!51795 (getValueByKey!138 (t!5132 (toList!729 lt!36537)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun c!12286 () Bool)

(declare-fun d!19093 () Bool)

(assert (=> d!19093 (= c!12286 (and ((_ is Cons!1490) (toList!729 lt!36537)) (= (_1!1092 (h!2078 (toList!729 lt!36537))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19093 (= (getValueByKey!138 (toList!729 lt!36537) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) e!51794)))

(assert (= (and d!19093 c!12286) b!79308))

(assert (= (and d!19093 (not c!12286)) b!79309))

(assert (= (and b!79309 c!12287) b!79310))

(assert (= (and b!79309 (not c!12287)) b!79311))

(declare-fun m!80285 () Bool)

(assert (=> b!79310 m!80285))

(assert (=> b!78774 d!19093))

(assert (=> b!78711 d!18719))

(assert (=> d!18541 d!18767))

(declare-fun d!19095 () Bool)

(declare-fun lt!36808 () Bool)

(assert (=> d!19095 (= lt!36808 (select (content!84 (toList!729 lt!36162)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!51797 () Bool)

(assert (=> d!19095 (= lt!36808 e!51797)))

(declare-fun res!41436 () Bool)

(assert (=> d!19095 (=> (not res!41436) (not e!51797))))

(assert (=> d!19095 (= res!41436 ((_ is Cons!1490) (toList!729 lt!36162)))))

(assert (=> d!19095 (= (contains!737 (toList!729 lt!36162) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36808)))

(declare-fun b!79312 () Bool)

(declare-fun e!51796 () Bool)

(assert (=> b!79312 (= e!51797 e!51796)))

(declare-fun res!41435 () Bool)

(assert (=> b!79312 (=> res!41435 e!51796)))

(assert (=> b!79312 (= res!41435 (= (h!2078 (toList!729 lt!36162)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!79313 () Bool)

(assert (=> b!79313 (= e!51796 (contains!737 (t!5132 (toList!729 lt!36162)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!19095 res!41436) b!79312))

(assert (= (and b!79312 (not res!41435)) b!79313))

(declare-fun m!80287 () Bool)

(assert (=> d!19095 m!80287))

(declare-fun m!80289 () Bool)

(assert (=> d!19095 m!80289))

(declare-fun m!80291 () Bool)

(assert (=> b!79313 m!80291))

(assert (=> b!78242 d!19095))

(declare-fun d!19097 () Bool)

(assert (=> d!19097 (= ($colon$colon!68 e!51328 (ite c!12070 (h!2078 (toList!729 lt!35791)) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792)))) (Cons!1490 (ite c!12070 (h!2078 (toList!729 lt!35791)) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))) e!51328))))

(assert (=> bm!7207 d!19097))

(declare-fun d!19099 () Bool)

(assert (=> d!19099 (contains!736 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))

(declare-fun lt!36811 () Unit!2237)

(declare-fun choose!474 (array!3957 array!3959 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) (_ BitVec 32) Int) Unit!2237)

(assert (=> d!19099 (= lt!36811 (choose!474 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(assert (=> d!19099 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!19099 (= (lemmaArrayContainsKeyThenInListMap!16 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36811)))

(declare-fun bs!3365 () Bool)

(assert (= bs!3365 d!19099))

(assert (=> bs!3365 m!78223))

(assert (=> bs!3365 m!78223))

(assert (=> bs!3365 m!77885))

(assert (=> bs!3365 m!78973))

(assert (=> bs!3365 m!77885))

(declare-fun m!80293 () Bool)

(assert (=> bs!3365 m!80293))

(assert (=> bs!3365 m!78355))

(assert (=> b!78580 d!19099))

(assert (=> b!78580 d!18877))

(assert (=> b!78580 d!18541))

(declare-fun d!19101 () Bool)

(assert (=> d!19101 (= (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36035)) (v!2600 (getValueByKey!138 (toList!729 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36035)))))

(assert (=> d!18581 d!19101))

(declare-fun b!79314 () Bool)

(declare-fun e!51798 () Option!144)

(assert (=> b!79314 (= e!51798 (Some!143 (_2!1092 (h!2078 (toList!729 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))))

(declare-fun b!79315 () Bool)

(declare-fun e!51799 () Option!144)

(assert (=> b!79315 (= e!51798 e!51799)))

(declare-fun c!12289 () Bool)

(assert (=> b!79315 (= c!12289 (and ((_ is Cons!1490) (toList!729 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (not (= (_1!1092 (h!2078 (toList!729 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36035))))))

(declare-fun b!79317 () Bool)

(assert (=> b!79317 (= e!51799 None!142)))

(declare-fun b!79316 () Bool)

(assert (=> b!79316 (= e!51799 (getValueByKey!138 (t!5132 (toList!729 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) lt!36035))))

(declare-fun d!19103 () Bool)

(declare-fun c!12288 () Bool)

(assert (=> d!19103 (= c!12288 (and ((_ is Cons!1490) (toList!729 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36035)))))

(assert (=> d!19103 (= (getValueByKey!138 (toList!729 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36035) e!51798)))

(assert (= (and d!19103 c!12288) b!79314))

(assert (= (and d!19103 (not c!12288)) b!79315))

(assert (= (and b!79315 c!12289) b!79316))

(assert (= (and b!79315 (not c!12289)) b!79317))

(declare-fun m!80295 () Bool)

(assert (=> b!79316 m!80295))

(assert (=> d!18581 d!19103))

(assert (=> b!78661 d!18841))

(assert (=> b!78661 d!18751))

(declare-fun d!19105 () Bool)

(assert (=> d!19105 (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!36812 () Unit!2237)

(assert (=> d!19105 (= lt!36812 (choose!469 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51800 () Bool)

(assert (=> d!19105 e!51800))

(declare-fun res!41437 () Bool)

(assert (=> d!19105 (=> (not res!41437) (not e!51800))))

(assert (=> d!19105 (= res!41437 (isStrictlySorted!282 (toList!729 lt!35932)))))

(assert (=> d!19105 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000) lt!36812)))

(declare-fun b!79318 () Bool)

(assert (=> b!79318 (= e!51800 (containsKey!141 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19105 res!41437) b!79318))

(assert (=> d!19105 m!79097))

(assert (=> d!19105 m!79097))

(assert (=> d!19105 m!79099))

(declare-fun m!80297 () Bool)

(assert (=> d!19105 m!80297))

(declare-fun m!80299 () Bool)

(assert (=> d!19105 m!80299))

(assert (=> b!79318 m!79093))

(assert (=> b!78652 d!19105))

(declare-fun d!19107 () Bool)

(assert (=> d!19107 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3366 () Bool)

(assert (= bs!3366 d!19107))

(assert (=> bs!3366 m!79097))

(declare-fun m!80301 () Bool)

(assert (=> bs!3366 m!80301))

(assert (=> b!78652 d!19107))

(declare-fun b!79319 () Bool)

(declare-fun e!51801 () Option!144)

(assert (=> b!79319 (= e!51801 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35932)))))))

(declare-fun b!79320 () Bool)

(declare-fun e!51802 () Option!144)

(assert (=> b!79320 (= e!51801 e!51802)))

(declare-fun c!12291 () Bool)

(assert (=> b!79320 (= c!12291 (and ((_ is Cons!1490) (toList!729 lt!35932)) (not (= (_1!1092 (h!2078 (toList!729 lt!35932))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79322 () Bool)

(assert (=> b!79322 (= e!51802 None!142)))

(declare-fun b!79321 () Bool)

(assert (=> b!79321 (= e!51802 (getValueByKey!138 (t!5132 (toList!729 lt!35932)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!19109 () Bool)

(declare-fun c!12290 () Bool)

(assert (=> d!19109 (= c!12290 (and ((_ is Cons!1490) (toList!729 lt!35932)) (= (_1!1092 (h!2078 (toList!729 lt!35932))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19109 (= (getValueByKey!138 (toList!729 lt!35932) #b1000000000000000000000000000000000000000000000000000000000000000) e!51801)))

(assert (= (and d!19109 c!12290) b!79319))

(assert (= (and d!19109 (not c!12290)) b!79320))

(assert (= (and b!79320 c!12291) b!79321))

(assert (= (and b!79320 (not c!12291)) b!79322))

(declare-fun m!80303 () Bool)

(assert (=> b!79321 m!80303))

(assert (=> b!78652 d!19109))

(assert (=> b!78260 d!18833))

(declare-fun b!79323 () Bool)

(assert (=> b!79323 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> b!79323 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2128 (_values!2254 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun lt!36813 () ListLongMap!1427)

(declare-fun e!51806 () Bool)

(assert (=> b!79323 (= e!51806 (= (apply!79 lt!36813 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79324 () Bool)

(declare-fun e!51807 () ListLongMap!1427)

(assert (=> b!79324 (= e!51807 (ListLongMap!1428 Nil!1491))))

(declare-fun bm!7301 () Bool)

(declare-fun call!7304 () ListLongMap!1427)

(assert (=> bm!7301 (= call!7304 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun d!19111 () Bool)

(declare-fun e!51805 () Bool)

(assert (=> d!19111 e!51805))

(declare-fun res!41438 () Bool)

(assert (=> d!19111 (=> (not res!41438) (not e!51805))))

(assert (=> d!19111 (= res!41438 (not (contains!736 lt!36813 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19111 (= lt!36813 e!51807)))

(declare-fun c!12293 () Bool)

(assert (=> d!19111 (= c!12293 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!19111 (validMask!0 (mask!6267 (v!2594 (underlying!280 thiss!992))))))

(assert (=> d!19111 (= (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992)))) lt!36813)))

(declare-fun b!79325 () Bool)

(declare-fun lt!36817 () Unit!2237)

(declare-fun lt!36815 () Unit!2237)

(assert (=> b!79325 (= lt!36817 lt!36815)))

(declare-fun lt!36818 () ListLongMap!1427)

(declare-fun lt!36816 () (_ BitVec 64))

(declare-fun lt!36819 () V!2993)

(declare-fun lt!36814 () (_ BitVec 64))

(assert (=> b!79325 (not (contains!736 (+!100 lt!36818 (tuple2!2163 lt!36816 lt!36819)) lt!36814))))

(assert (=> b!79325 (= lt!36815 (addStillNotContains!30 lt!36818 lt!36816 lt!36819 lt!36814))))

(assert (=> b!79325 (= lt!36814 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79325 (= lt!36819 (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79325 (= lt!36816 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!79325 (= lt!36818 call!7304)))

(declare-fun e!51808 () ListLongMap!1427)

(assert (=> b!79325 (= e!51808 (+!100 call!7304 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79326 () Bool)

(declare-fun e!51804 () Bool)

(assert (=> b!79326 (= e!51805 e!51804)))

(declare-fun c!12292 () Bool)

(declare-fun e!51803 () Bool)

(assert (=> b!79326 (= c!12292 e!51803)))

(declare-fun res!41441 () Bool)

(assert (=> b!79326 (=> (not res!41441) (not e!51803))))

(assert (=> b!79326 (= res!41441 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!79327 () Bool)

(declare-fun e!51809 () Bool)

(assert (=> b!79327 (= e!51809 (= lt!36813 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (_values!2254 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992))) (extraKeys!2122 (v!2594 (underlying!280 thiss!992))) (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) (minValue!2169 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!79328 () Bool)

(declare-fun res!41439 () Bool)

(assert (=> b!79328 (=> (not res!41439) (not e!51805))))

(assert (=> b!79328 (= res!41439 (not (contains!736 lt!36813 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79329 () Bool)

(assert (=> b!79329 (= e!51804 e!51806)))

(assert (=> b!79329 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun res!41440 () Bool)

(assert (=> b!79329 (= res!41440 (contains!736 lt!36813 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!79329 (=> (not res!41440) (not e!51806))))

(declare-fun b!79330 () Bool)

(assert (=> b!79330 (= e!51808 call!7304)))

(declare-fun b!79331 () Bool)

(assert (=> b!79331 (= e!51807 e!51808)))

(declare-fun c!12295 () Bool)

(assert (=> b!79331 (= c!12295 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!79332 () Bool)

(assert (=> b!79332 (= e!51804 e!51809)))

(declare-fun c!12294 () Bool)

(assert (=> b!79332 (= c!12294 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!79333 () Bool)

(assert (=> b!79333 (= e!51809 (isEmpty!332 lt!36813))))

(declare-fun b!79334 () Bool)

(assert (=> b!79334 (= e!51803 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!79334 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!19111 c!12293) b!79324))

(assert (= (and d!19111 (not c!12293)) b!79331))

(assert (= (and b!79331 c!12295) b!79325))

(assert (= (and b!79331 (not c!12295)) b!79330))

(assert (= (or b!79325 b!79330) bm!7301))

(assert (= (and d!19111 res!41438) b!79328))

(assert (= (and b!79328 res!41439) b!79326))

(assert (= (and b!79326 res!41441) b!79334))

(assert (= (and b!79326 c!12292) b!79329))

(assert (= (and b!79326 (not c!12292)) b!79332))

(assert (= (and b!79329 res!41440) b!79323))

(assert (= (and b!79332 c!12294) b!79327))

(assert (= (and b!79332 (not c!12294)) b!79333))

(declare-fun b_lambda!3553 () Bool)

(assert (=> (not b_lambda!3553) (not b!79323)))

(assert (=> b!79323 t!5129))

(declare-fun b_and!4881 () Bool)

(assert (= b_and!4877 (and (=> t!5129 result!2801) b_and!4881)))

(assert (=> b!79323 t!5131))

(declare-fun b_and!4883 () Bool)

(assert (= b_and!4879 (and (=> t!5131 result!2805) b_and!4883)))

(declare-fun b_lambda!3555 () Bool)

(assert (=> (not b_lambda!3555) (not b!79325)))

(assert (=> b!79325 t!5129))

(declare-fun b_and!4885 () Bool)

(assert (= b_and!4881 (and (=> t!5129 result!2801) b_and!4885)))

(assert (=> b!79325 t!5131))

(declare-fun b_and!4887 () Bool)

(assert (= b_and!4883 (and (=> t!5131 result!2805) b_and!4887)))

(declare-fun m!80305 () Bool)

(assert (=> d!19111 m!80305))

(assert (=> d!19111 m!77921))

(declare-fun m!80307 () Bool)

(assert (=> bm!7301 m!80307))

(declare-fun m!80309 () Bool)

(assert (=> b!79329 m!80309))

(assert (=> b!79329 m!80309))

(declare-fun m!80311 () Bool)

(assert (=> b!79329 m!80311))

(declare-fun m!80313 () Bool)

(assert (=> b!79328 m!80313))

(assert (=> b!79331 m!80309))

(assert (=> b!79331 m!80309))

(declare-fun m!80315 () Bool)

(assert (=> b!79331 m!80315))

(declare-fun m!80317 () Bool)

(assert (=> b!79333 m!80317))

(assert (=> b!79327 m!80307))

(assert (=> b!79334 m!80309))

(assert (=> b!79334 m!80309))

(assert (=> b!79334 m!80315))

(declare-fun m!80319 () Bool)

(assert (=> b!79325 m!80319))

(declare-fun m!80321 () Bool)

(assert (=> b!79325 m!80321))

(declare-fun m!80323 () Bool)

(assert (=> b!79325 m!80323))

(assert (=> b!79325 m!80321))

(assert (=> b!79325 m!77939))

(declare-fun m!80325 () Bool)

(assert (=> b!79325 m!80325))

(declare-fun m!80327 () Bool)

(assert (=> b!79325 m!80327))

(assert (=> b!79325 m!80309))

(assert (=> b!79325 m!80327))

(assert (=> b!79325 m!77939))

(declare-fun m!80329 () Bool)

(assert (=> b!79325 m!80329))

(assert (=> b!79323 m!80309))

(declare-fun m!80331 () Bool)

(assert (=> b!79323 m!80331))

(assert (=> b!79323 m!77939))

(assert (=> b!79323 m!80327))

(assert (=> b!79323 m!80309))

(assert (=> b!79323 m!80327))

(assert (=> b!79323 m!77939))

(assert (=> b!79323 m!80329))

(assert (=> b!78265 d!19111))

(declare-fun b!79335 () Bool)

(declare-fun e!51810 () Option!144)

(assert (=> b!79335 (= e!51810 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36486)))))))

(declare-fun b!79336 () Bool)

(declare-fun e!51811 () Option!144)

(assert (=> b!79336 (= e!51810 e!51811)))

(declare-fun c!12297 () Bool)

(assert (=> b!79336 (= c!12297 (and ((_ is Cons!1490) (toList!729 lt!36486)) (not (= (_1!1092 (h!2078 (toList!729 lt!36486))) (_1!1092 (tuple2!2163 lt!35935 lt!35938))))))))

(declare-fun b!79338 () Bool)

(assert (=> b!79338 (= e!51811 None!142)))

(declare-fun b!79337 () Bool)

(assert (=> b!79337 (= e!51811 (getValueByKey!138 (t!5132 (toList!729 lt!36486)) (_1!1092 (tuple2!2163 lt!35935 lt!35938))))))

(declare-fun c!12296 () Bool)

(declare-fun d!19113 () Bool)

(assert (=> d!19113 (= c!12296 (and ((_ is Cons!1490) (toList!729 lt!36486)) (= (_1!1092 (h!2078 (toList!729 lt!36486))) (_1!1092 (tuple2!2163 lt!35935 lt!35938)))))))

(assert (=> d!19113 (= (getValueByKey!138 (toList!729 lt!36486) (_1!1092 (tuple2!2163 lt!35935 lt!35938))) e!51810)))

(assert (= (and d!19113 c!12296) b!79335))

(assert (= (and d!19113 (not c!12296)) b!79336))

(assert (= (and b!79336 c!12297) b!79337))

(assert (= (and b!79336 (not c!12297)) b!79338))

(declare-fun m!80333 () Bool)

(assert (=> b!79337 m!80333))

(assert (=> b!78722 d!19113))

(declare-fun b!79339 () Bool)

(declare-fun e!51814 () Bool)

(declare-fun call!7305 () Bool)

(assert (=> b!79339 (= e!51814 call!7305)))

(declare-fun d!19115 () Bool)

(declare-fun res!41442 () Bool)

(declare-fun e!51813 () Bool)

(assert (=> d!19115 (=> res!41442 e!51813)))

(assert (=> d!19115 (= res!41442 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))))))

(assert (=> d!19115 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3931 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122))) e!51813)))

(declare-fun bm!7302 () Bool)

(assert (=> bm!7302 (= call!7305 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3931 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122))))))

(declare-fun b!79340 () Bool)

(declare-fun e!51812 () Bool)

(assert (=> b!79340 (= e!51813 e!51812)))

(declare-fun c!12298 () Bool)

(assert (=> b!79340 (= c!12298 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000)))))

(declare-fun b!79341 () Bool)

(assert (=> b!79341 (= e!51812 call!7305)))

(declare-fun b!79342 () Bool)

(assert (=> b!79342 (= e!51812 e!51814)))

(declare-fun lt!36821 () (_ BitVec 64))

(assert (=> b!79342 (= lt!36821 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000))))

(declare-fun lt!36820 () Unit!2237)

(assert (=> b!79342 (= lt!36820 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3931 (_2!1093 lt!36122)) lt!36821 #b00000000000000000000000000000000))))

(assert (=> b!79342 (arrayContainsKey!0 (_keys!3931 (_2!1093 lt!36122)) lt!36821 #b00000000000000000000000000000000)))

(declare-fun lt!36822 () Unit!2237)

(assert (=> b!79342 (= lt!36822 lt!36820)))

(declare-fun res!41443 () Bool)

(assert (=> b!79342 (= res!41443 (= (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000) (_keys!3931 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122))) (Found!234 #b00000000000000000000000000000000)))))

(assert (=> b!79342 (=> (not res!41443) (not e!51814))))

(assert (= (and d!19115 (not res!41442)) b!79340))

(assert (= (and b!79340 c!12298) b!79342))

(assert (= (and b!79340 (not c!12298)) b!79341))

(assert (= (and b!79342 res!41443) b!79339))

(assert (= (or b!79339 b!79341) bm!7302))

(declare-fun m!80335 () Bool)

(assert (=> bm!7302 m!80335))

(assert (=> b!79340 m!79853))

(assert (=> b!79340 m!79853))

(assert (=> b!79340 m!79855))

(assert (=> b!79342 m!79853))

(declare-fun m!80337 () Bool)

(assert (=> b!79342 m!80337))

(declare-fun m!80339 () Bool)

(assert (=> b!79342 m!80339))

(assert (=> b!79342 m!79853))

(declare-fun m!80341 () Bool)

(assert (=> b!79342 m!80341))

(assert (=> b!78233 d!19115))

(declare-fun lt!36823 () Bool)

(declare-fun d!19117 () Bool)

(assert (=> d!19117 (= lt!36823 (select (content!84 (toList!729 lt!36460)) (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun e!51816 () Bool)

(assert (=> d!19117 (= lt!36823 e!51816)))

(declare-fun res!41445 () Bool)

(assert (=> d!19117 (=> (not res!41445) (not e!51816))))

(assert (=> d!19117 (= res!41445 ((_ is Cons!1490) (toList!729 lt!36460)))))

(assert (=> d!19117 (= (contains!737 (toList!729 lt!36460) (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36823)))

(declare-fun b!79343 () Bool)

(declare-fun e!51815 () Bool)

(assert (=> b!79343 (= e!51816 e!51815)))

(declare-fun res!41444 () Bool)

(assert (=> b!79343 (=> res!41444 e!51815)))

(assert (=> b!79343 (= res!41444 (= (h!2078 (toList!729 lt!36460)) (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79344 () Bool)

(assert (=> b!79344 (= e!51815 (contains!737 (t!5132 (toList!729 lt!36460)) (ite c!11968 (ite c!11972 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35794) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (= (and d!19117 res!41445) b!79343))

(assert (= (and b!79343 (not res!41444)) b!79344))

(declare-fun m!80343 () Bool)

(assert (=> d!19117 m!80343))

(declare-fun m!80345 () Bool)

(assert (=> d!19117 m!80345))

(declare-fun m!80347 () Bool)

(assert (=> b!79344 m!80347))

(assert (=> b!78658 d!19117))

(assert (=> b!78741 d!18875))

(assert (=> b!78741 d!18541))

(declare-fun b!79345 () Bool)

(declare-fun e!51823 () ListLongMap!1427)

(declare-fun call!7308 () ListLongMap!1427)

(assert (=> b!79345 (= e!51823 call!7308)))

(declare-fun b!79346 () Bool)

(declare-fun e!51824 () ListLongMap!1427)

(declare-fun call!7311 () ListLongMap!1427)

(assert (=> b!79346 (= e!51824 (+!100 call!7311 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun b!79348 () Bool)

(declare-fun e!51826 () Bool)

(assert (=> b!79348 (= e!51826 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7303 () Bool)

(declare-fun call!7310 () Bool)

(declare-fun lt!36844 () ListLongMap!1427)

(assert (=> bm!7303 (= call!7310 (contains!736 lt!36844 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79349 () Bool)

(declare-fun e!51817 () Bool)

(declare-fun e!51828 () Bool)

(assert (=> b!79349 (= e!51817 e!51828)))

(declare-fun c!12299 () Bool)

(assert (=> b!79349 (= c!12299 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79350 () Bool)

(declare-fun e!51820 () Unit!2237)

(declare-fun Unit!2289 () Unit!2237)

(assert (=> b!79350 (= e!51820 Unit!2289)))

(declare-fun b!79351 () Bool)

(declare-fun res!41451 () Bool)

(assert (=> b!79351 (=> (not res!41451) (not e!51817))))

(declare-fun e!51829 () Bool)

(assert (=> b!79351 (= res!41451 e!51829)))

(declare-fun c!12301 () Bool)

(assert (=> b!79351 (= c!12301 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79352 () Bool)

(declare-fun lt!36832 () Unit!2237)

(assert (=> b!79352 (= e!51820 lt!36832)))

(declare-fun lt!36838 () ListLongMap!1427)

(assert (=> b!79352 (= lt!36838 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36835 () (_ BitVec 64))

(assert (=> b!79352 (= lt!36835 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36836 () (_ BitVec 64))

(assert (=> b!79352 (= lt!36836 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36845 () Unit!2237)

(assert (=> b!79352 (= lt!36845 (addStillContains!55 lt!36838 lt!36835 (zeroValue!2169 newMap!16) lt!36836))))

(assert (=> b!79352 (contains!736 (+!100 lt!36838 (tuple2!2163 lt!36835 (zeroValue!2169 newMap!16))) lt!36836)))

(declare-fun lt!36824 () Unit!2237)

(assert (=> b!79352 (= lt!36824 lt!36845)))

(declare-fun lt!36834 () ListLongMap!1427)

(assert (=> b!79352 (= lt!36834 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36841 () (_ BitVec 64))

(assert (=> b!79352 (= lt!36841 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36839 () (_ BitVec 64))

(assert (=> b!79352 (= lt!36839 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36842 () Unit!2237)

(assert (=> b!79352 (= lt!36842 (addApplyDifferent!55 lt!36834 lt!36841 (minValue!2169 newMap!16) lt!36839))))

(assert (=> b!79352 (= (apply!79 (+!100 lt!36834 (tuple2!2163 lt!36841 (minValue!2169 newMap!16))) lt!36839) (apply!79 lt!36834 lt!36839))))

(declare-fun lt!36827 () Unit!2237)

(assert (=> b!79352 (= lt!36827 lt!36842)))

(declare-fun lt!36837 () ListLongMap!1427)

(assert (=> b!79352 (= lt!36837 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36840 () (_ BitVec 64))

(assert (=> b!79352 (= lt!36840 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36830 () (_ BitVec 64))

(assert (=> b!79352 (= lt!36830 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36825 () Unit!2237)

(assert (=> b!79352 (= lt!36825 (addApplyDifferent!55 lt!36837 lt!36840 (zeroValue!2169 newMap!16) lt!36830))))

(assert (=> b!79352 (= (apply!79 (+!100 lt!36837 (tuple2!2163 lt!36840 (zeroValue!2169 newMap!16))) lt!36830) (apply!79 lt!36837 lt!36830))))

(declare-fun lt!36843 () Unit!2237)

(assert (=> b!79352 (= lt!36843 lt!36825)))

(declare-fun lt!36831 () ListLongMap!1427)

(assert (=> b!79352 (= lt!36831 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36829 () (_ BitVec 64))

(assert (=> b!79352 (= lt!36829 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36828 () (_ BitVec 64))

(assert (=> b!79352 (= lt!36828 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79352 (= lt!36832 (addApplyDifferent!55 lt!36831 lt!36829 (minValue!2169 newMap!16) lt!36828))))

(assert (=> b!79352 (= (apply!79 (+!100 lt!36831 (tuple2!2163 lt!36829 (minValue!2169 newMap!16))) lt!36828) (apply!79 lt!36831 lt!36828))))

(declare-fun b!79353 () Bool)

(declare-fun e!51818 () Bool)

(assert (=> b!79353 (= e!51828 e!51818)))

(declare-fun res!41448 () Bool)

(assert (=> b!79353 (= res!41448 call!7310)))

(assert (=> b!79353 (=> (not res!41448) (not e!51818))))

(declare-fun bm!7304 () Bool)

(declare-fun call!7312 () ListLongMap!1427)

(assert (=> bm!7304 (= call!7308 call!7312)))

(declare-fun call!7309 () ListLongMap!1427)

(declare-fun bm!7305 () Bool)

(assert (=> bm!7305 (= call!7309 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!79354 () Bool)

(assert (=> b!79354 (= e!51828 (not call!7310))))

(declare-fun b!79355 () Bool)

(declare-fun call!7306 () Bool)

(assert (=> b!79355 (= e!51829 (not call!7306))))

(declare-fun bm!7306 () Bool)

(declare-fun c!12304 () Bool)

(declare-fun c!12302 () Bool)

(assert (=> bm!7306 (= call!7311 (+!100 (ite c!12304 call!7309 (ite c!12302 call!7312 call!7308)) (ite (or c!12304 c!12302) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!79356 () Bool)

(assert (=> b!79356 (= e!51818 (= (apply!79 lt!36844 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(declare-fun b!79357 () Bool)

(declare-fun res!41450 () Bool)

(assert (=> b!79357 (=> (not res!41450) (not e!51817))))

(declare-fun e!51825 () Bool)

(assert (=> b!79357 (= res!41450 e!51825)))

(declare-fun res!41452 () Bool)

(assert (=> b!79357 (=> res!41452 e!51825)))

(declare-fun e!51821 () Bool)

(assert (=> b!79357 (= res!41452 (not e!51821))))

(declare-fun res!41449 () Bool)

(assert (=> b!79357 (=> (not res!41449) (not e!51821))))

(assert (=> b!79357 (= res!41449 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79358 () Bool)

(assert (=> b!79358 (= e!51821 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!19119 () Bool)

(assert (=> d!19119 e!51817))

(declare-fun res!41454 () Bool)

(assert (=> d!19119 (=> (not res!41454) (not e!51817))))

(assert (=> d!19119 (= res!41454 (or (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))))

(declare-fun lt!36833 () ListLongMap!1427)

(assert (=> d!19119 (= lt!36844 lt!36833)))

(declare-fun lt!36826 () Unit!2237)

(assert (=> d!19119 (= lt!36826 e!51820)))

(declare-fun c!12303 () Bool)

(assert (=> d!19119 (= c!12303 e!51826)))

(declare-fun res!41453 () Bool)

(assert (=> d!19119 (=> (not res!41453) (not e!51826))))

(assert (=> d!19119 (= res!41453 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!19119 (= lt!36833 e!51824)))

(assert (=> d!19119 (= c!12304 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19119 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!19119 (= (getCurrentListMap!425 (_keys!3931 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36844)))

(declare-fun b!79347 () Bool)

(declare-fun e!51822 () ListLongMap!1427)

(assert (=> b!79347 (= e!51824 e!51822)))

(assert (=> b!79347 (= c!12302 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79359 () Bool)

(declare-fun call!7307 () ListLongMap!1427)

(assert (=> b!79359 (= e!51823 call!7307)))

(declare-fun bm!7307 () Bool)

(assert (=> bm!7307 (= call!7306 (contains!736 lt!36844 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7308 () Bool)

(assert (=> bm!7308 (= call!7307 call!7311)))

(declare-fun b!79360 () Bool)

(declare-fun c!12300 () Bool)

(assert (=> b!79360 (= c!12300 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79360 (= e!51822 e!51823)))

(declare-fun b!79361 () Bool)

(declare-fun e!51819 () Bool)

(assert (=> b!79361 (= e!51819 (= (apply!79 lt!36844 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!79362 () Bool)

(assert (=> b!79362 (= e!51829 e!51819)))

(declare-fun res!41447 () Bool)

(assert (=> b!79362 (= res!41447 call!7306)))

(assert (=> b!79362 (=> (not res!41447) (not e!51819))))

(declare-fun b!79363 () Bool)

(declare-fun e!51827 () Bool)

(assert (=> b!79363 (= e!51825 e!51827)))

(declare-fun res!41446 () Bool)

(assert (=> b!79363 (=> (not res!41446) (not e!51827))))

(assert (=> b!79363 (= res!41446 (contains!736 lt!36844 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79363 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79364 () Bool)

(assert (=> b!79364 (= e!51827 (= (apply!79 lt!36844 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79364 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))))))

(assert (=> b!79364 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79365 () Bool)

(assert (=> b!79365 (= e!51822 call!7307)))

(declare-fun bm!7309 () Bool)

(assert (=> bm!7309 (= call!7312 call!7309)))

(assert (= (and d!19119 c!12304) b!79346))

(assert (= (and d!19119 (not c!12304)) b!79347))

(assert (= (and b!79347 c!12302) b!79365))

(assert (= (and b!79347 (not c!12302)) b!79360))

(assert (= (and b!79360 c!12300) b!79359))

(assert (= (and b!79360 (not c!12300)) b!79345))

(assert (= (or b!79359 b!79345) bm!7304))

(assert (= (or b!79365 bm!7304) bm!7309))

(assert (= (or b!79365 b!79359) bm!7308))

(assert (= (or b!79346 bm!7309) bm!7305))

(assert (= (or b!79346 bm!7308) bm!7306))

(assert (= (and d!19119 res!41453) b!79348))

(assert (= (and d!19119 c!12303) b!79352))

(assert (= (and d!19119 (not c!12303)) b!79350))

(assert (= (and d!19119 res!41454) b!79357))

(assert (= (and b!79357 res!41449) b!79358))

(assert (= (and b!79357 (not res!41452)) b!79363))

(assert (= (and b!79363 res!41446) b!79364))

(assert (= (and b!79357 res!41450) b!79351))

(assert (= (and b!79351 c!12301) b!79362))

(assert (= (and b!79351 (not c!12301)) b!79355))

(assert (= (and b!79362 res!41447) b!79361))

(assert (= (or b!79362 b!79355) bm!7307))

(assert (= (and b!79351 res!41451) b!79349))

(assert (= (and b!79349 c!12299) b!79353))

(assert (= (and b!79349 (not c!12299)) b!79354))

(assert (= (and b!79353 res!41448) b!79356))

(assert (= (or b!79353 b!79354) bm!7303))

(declare-fun b_lambda!3557 () Bool)

(assert (=> (not b_lambda!3557) (not b!79364)))

(assert (=> b!79364 t!5144))

(declare-fun b_and!4889 () Bool)

(assert (= b_and!4885 (and (=> t!5144 result!2821) b_and!4889)))

(assert (=> b!79364 t!5146))

(declare-fun b_and!4891 () Bool)

(assert (= b_and!4887 (and (=> t!5146 result!2823) b_and!4891)))

(declare-fun m!80349 () Bool)

(assert (=> b!79364 m!80349))

(assert (=> b!79364 m!78471))

(declare-fun m!80351 () Bool)

(assert (=> b!79364 m!80351))

(assert (=> b!79364 m!78435))

(assert (=> b!79364 m!80349))

(assert (=> b!79364 m!78435))

(declare-fun m!80353 () Bool)

(assert (=> b!79364 m!80353))

(assert (=> b!79364 m!78471))

(assert (=> d!19119 m!78355))

(declare-fun m!80355 () Bool)

(assert (=> bm!7306 m!80355))

(assert (=> b!79363 m!78435))

(assert (=> b!79363 m!78435))

(declare-fun m!80357 () Bool)

(assert (=> b!79363 m!80357))

(declare-fun m!80359 () Bool)

(assert (=> bm!7305 m!80359))

(assert (=> b!79358 m!78435))

(assert (=> b!79358 m!78435))

(assert (=> b!79358 m!78437))

(assert (=> b!79348 m!78435))

(assert (=> b!79348 m!78435))

(assert (=> b!79348 m!78437))

(declare-fun m!80361 () Bool)

(assert (=> b!79352 m!80361))

(declare-fun m!80363 () Bool)

(assert (=> b!79352 m!80363))

(declare-fun m!80365 () Bool)

(assert (=> b!79352 m!80365))

(declare-fun m!80367 () Bool)

(assert (=> b!79352 m!80367))

(declare-fun m!80369 () Bool)

(assert (=> b!79352 m!80369))

(declare-fun m!80371 () Bool)

(assert (=> b!79352 m!80371))

(declare-fun m!80373 () Bool)

(assert (=> b!79352 m!80373))

(declare-fun m!80375 () Bool)

(assert (=> b!79352 m!80375))

(declare-fun m!80377 () Bool)

(assert (=> b!79352 m!80377))

(declare-fun m!80379 () Bool)

(assert (=> b!79352 m!80379))

(assert (=> b!79352 m!80373))

(declare-fun m!80381 () Bool)

(assert (=> b!79352 m!80381))

(assert (=> b!79352 m!80377))

(declare-fun m!80383 () Bool)

(assert (=> b!79352 m!80383))

(assert (=> b!79352 m!80365))

(declare-fun m!80385 () Bool)

(assert (=> b!79352 m!80385))

(assert (=> b!79352 m!80361))

(assert (=> b!79352 m!80359))

(declare-fun m!80387 () Bool)

(assert (=> b!79352 m!80387))

(declare-fun m!80389 () Bool)

(assert (=> b!79352 m!80389))

(assert (=> b!79352 m!78435))

(declare-fun m!80391 () Bool)

(assert (=> b!79346 m!80391))

(declare-fun m!80393 () Bool)

(assert (=> bm!7303 m!80393))

(declare-fun m!80395 () Bool)

(assert (=> bm!7307 m!80395))

(declare-fun m!80397 () Bool)

(assert (=> b!79356 m!80397))

(declare-fun m!80399 () Bool)

(assert (=> b!79361 m!80399))

(assert (=> b!78741 d!19119))

(declare-fun b!79366 () Bool)

(declare-fun e!51830 () Option!144)

(assert (=> b!79366 (= e!51830 (Some!143 (_2!1092 (h!2078 (t!5132 (toList!729 lt!35953))))))))

(declare-fun b!79367 () Bool)

(declare-fun e!51831 () Option!144)

(assert (=> b!79367 (= e!51830 e!51831)))

(declare-fun c!12306 () Bool)

(assert (=> b!79367 (= c!12306 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35953))) (not (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35953)))) (_1!1092 lt!35792)))))))

(declare-fun b!79369 () Bool)

(assert (=> b!79369 (= e!51831 None!142)))

(declare-fun b!79368 () Bool)

(assert (=> b!79368 (= e!51831 (getValueByKey!138 (t!5132 (t!5132 (toList!729 lt!35953))) (_1!1092 lt!35792)))))

(declare-fun d!19121 () Bool)

(declare-fun c!12305 () Bool)

(assert (=> d!19121 (= c!12305 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35953))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35953)))) (_1!1092 lt!35792))))))

(assert (=> d!19121 (= (getValueByKey!138 (t!5132 (toList!729 lt!35953)) (_1!1092 lt!35792)) e!51830)))

(assert (= (and d!19121 c!12305) b!79366))

(assert (= (and d!19121 (not c!12305)) b!79367))

(assert (= (and b!79367 c!12306) b!79368))

(assert (= (and b!79367 (not c!12306)) b!79369))

(declare-fun m!80401 () Bool)

(assert (=> b!79368 m!80401))

(assert (=> b!78609 d!19121))

(declare-fun d!19123 () Bool)

(declare-fun lt!36846 () Bool)

(assert (=> d!19123 (= lt!36846 (select (content!84 (t!5132 (toList!729 lt!35969))) lt!35792))))

(declare-fun e!51833 () Bool)

(assert (=> d!19123 (= lt!36846 e!51833)))

(declare-fun res!41456 () Bool)

(assert (=> d!19123 (=> (not res!41456) (not e!51833))))

(assert (=> d!19123 (= res!41456 ((_ is Cons!1490) (t!5132 (toList!729 lt!35969))))))

(assert (=> d!19123 (= (contains!737 (t!5132 (toList!729 lt!35969)) lt!35792) lt!36846)))

(declare-fun b!79370 () Bool)

(declare-fun e!51832 () Bool)

(assert (=> b!79370 (= e!51833 e!51832)))

(declare-fun res!41455 () Bool)

(assert (=> b!79370 (=> res!41455 e!51832)))

(assert (=> b!79370 (= res!41455 (= (h!2078 (t!5132 (toList!729 lt!35969))) lt!35792))))

(declare-fun b!79371 () Bool)

(assert (=> b!79371 (= e!51832 (contains!737 (t!5132 (t!5132 (toList!729 lt!35969))) lt!35792))))

(assert (= (and d!19123 res!41456) b!79370))

(assert (= (and b!79370 (not res!41455)) b!79371))

(declare-fun m!80403 () Bool)

(assert (=> d!19123 m!80403))

(declare-fun m!80405 () Bool)

(assert (=> d!19123 m!80405))

(declare-fun m!80407 () Bool)

(assert (=> b!79371 m!80407))

(assert (=> b!78301 d!19123))

(declare-fun d!19125 () Bool)

(declare-fun res!41457 () Bool)

(declare-fun e!51834 () Bool)

(assert (=> d!19125 (=> res!41457 e!51834)))

(assert (=> d!19125 (= res!41457 (and ((_ is Cons!1490) lt!35956) (= (_1!1092 (h!2078 lt!35956)) (_1!1092 lt!35789))))))

(assert (=> d!19125 (= (containsKey!141 lt!35956 (_1!1092 lt!35789)) e!51834)))

(declare-fun b!79372 () Bool)

(declare-fun e!51835 () Bool)

(assert (=> b!79372 (= e!51834 e!51835)))

(declare-fun res!41458 () Bool)

(assert (=> b!79372 (=> (not res!41458) (not e!51835))))

(assert (=> b!79372 (= res!41458 (and (or (not ((_ is Cons!1490) lt!35956)) (bvsle (_1!1092 (h!2078 lt!35956)) (_1!1092 lt!35789))) ((_ is Cons!1490) lt!35956) (bvslt (_1!1092 (h!2078 lt!35956)) (_1!1092 lt!35789))))))

(declare-fun b!79373 () Bool)

(assert (=> b!79373 (= e!51835 (containsKey!141 (t!5132 lt!35956) (_1!1092 lt!35789)))))

(assert (= (and d!19125 (not res!41457)) b!79372))

(assert (= (and b!79372 res!41458) b!79373))

(declare-fun m!80409 () Bool)

(assert (=> b!79373 m!80409))

(assert (=> b!78666 d!19125))

(declare-fun d!19127 () Bool)

(assert (=> d!19127 (= (apply!79 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36033) (apply!79 lt!36036 lt!36033))))

(assert (=> d!19127 true))

(declare-fun _$34!815 () Unit!2237)

(assert (=> d!19127 (= (choose!465 lt!36036 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36033) _$34!815)))

(declare-fun bs!3367 () Bool)

(assert (= bs!3367 d!19127))

(assert (=> bs!3367 m!78243))

(assert (=> bs!3367 m!78243))

(assert (=> bs!3367 m!78251))

(assert (=> bs!3367 m!78255))

(assert (=> d!18577 d!19127))

(assert (=> d!18577 d!18589))

(assert (=> d!18577 d!18569))

(assert (=> d!18577 d!18573))

(declare-fun d!19129 () Bool)

(declare-fun e!51837 () Bool)

(assert (=> d!19129 e!51837))

(declare-fun res!41459 () Bool)

(assert (=> d!19129 (=> res!41459 e!51837)))

(declare-fun lt!36848 () Bool)

(assert (=> d!19129 (= res!41459 (not lt!36848))))

(declare-fun lt!36850 () Bool)

(assert (=> d!19129 (= lt!36848 lt!36850)))

(declare-fun lt!36849 () Unit!2237)

(declare-fun e!51836 () Unit!2237)

(assert (=> d!19129 (= lt!36849 e!51836)))

(declare-fun c!12307 () Bool)

(assert (=> d!19129 (= c!12307 lt!36850)))

(assert (=> d!19129 (= lt!36850 (containsKey!141 (toList!729 lt!36036) lt!36033))))

(assert (=> d!19129 (= (contains!736 lt!36036 lt!36033) lt!36848)))

(declare-fun b!79375 () Bool)

(declare-fun lt!36847 () Unit!2237)

(assert (=> b!79375 (= e!51836 lt!36847)))

(assert (=> b!79375 (= lt!36847 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36036) lt!36033))))

(assert (=> b!79375 (isDefined!90 (getValueByKey!138 (toList!729 lt!36036) lt!36033))))

(declare-fun b!79376 () Bool)

(declare-fun Unit!2290 () Unit!2237)

(assert (=> b!79376 (= e!51836 Unit!2290)))

(declare-fun b!79377 () Bool)

(assert (=> b!79377 (= e!51837 (isDefined!90 (getValueByKey!138 (toList!729 lt!36036) lt!36033)))))

(assert (= (and d!19129 c!12307) b!79375))

(assert (= (and d!19129 (not c!12307)) b!79376))

(assert (= (and d!19129 (not res!41459)) b!79377))

(declare-fun m!80411 () Bool)

(assert (=> d!19129 m!80411))

(declare-fun m!80413 () Bool)

(assert (=> b!79375 m!80413))

(assert (=> b!79375 m!78611))

(assert (=> b!79375 m!78611))

(declare-fun m!80415 () Bool)

(assert (=> b!79375 m!80415))

(assert (=> b!79377 m!78611))

(assert (=> b!79377 m!78611))

(assert (=> b!79377 m!80415))

(assert (=> d!18577 d!19129))

(assert (=> b!78340 d!18913))

(assert (=> b!78340 d!18915))

(declare-fun d!19131 () Bool)

(declare-fun lt!36851 () Bool)

(assert (=> d!19131 (= lt!36851 (select (content!84 (t!5132 (toList!729 lt!35953))) lt!35792))))

(declare-fun e!51839 () Bool)

(assert (=> d!19131 (= lt!36851 e!51839)))

(declare-fun res!41461 () Bool)

(assert (=> d!19131 (=> (not res!41461) (not e!51839))))

(assert (=> d!19131 (= res!41461 ((_ is Cons!1490) (t!5132 (toList!729 lt!35953))))))

(assert (=> d!19131 (= (contains!737 (t!5132 (toList!729 lt!35953)) lt!35792) lt!36851)))

(declare-fun b!79378 () Bool)

(declare-fun e!51838 () Bool)

(assert (=> b!79378 (= e!51839 e!51838)))

(declare-fun res!41460 () Bool)

(assert (=> b!79378 (=> res!41460 e!51838)))

(assert (=> b!79378 (= res!41460 (= (h!2078 (t!5132 (toList!729 lt!35953))) lt!35792))))

(declare-fun b!79379 () Bool)

(assert (=> b!79379 (= e!51838 (contains!737 (t!5132 (t!5132 (toList!729 lt!35953))) lt!35792))))

(assert (= (and d!19131 res!41461) b!79378))

(assert (= (and b!79378 (not res!41460)) b!79379))

(declare-fun m!80417 () Bool)

(assert (=> d!19131 m!80417))

(declare-fun m!80419 () Bool)

(assert (=> d!19131 m!80419))

(declare-fun m!80421 () Bool)

(assert (=> b!79379 m!80421))

(assert (=> b!78380 d!19131))

(declare-fun d!19133 () Bool)

(declare-fun e!51841 () Bool)

(assert (=> d!19133 e!51841))

(declare-fun res!41462 () Bool)

(assert (=> d!19133 (=> res!41462 e!51841)))

(declare-fun lt!36853 () Bool)

(assert (=> d!19133 (= res!41462 (not lt!36853))))

(declare-fun lt!36855 () Bool)

(assert (=> d!19133 (= lt!36853 lt!36855)))

(declare-fun lt!36854 () Unit!2237)

(declare-fun e!51840 () Unit!2237)

(assert (=> d!19133 (= lt!36854 e!51840)))

(declare-fun c!12308 () Bool)

(assert (=> d!19133 (= c!12308 lt!36855)))

(assert (=> d!19133 (= lt!36855 (containsKey!141 (toList!729 lt!36162) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!19133 (= (contains!736 lt!36162 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36853)))

(declare-fun b!79380 () Bool)

(declare-fun lt!36852 () Unit!2237)

(assert (=> b!79380 (= e!51840 lt!36852)))

(assert (=> b!79380 (= lt!36852 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36162) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> b!79380 (isDefined!90 (getValueByKey!138 (toList!729 lt!36162) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79381 () Bool)

(declare-fun Unit!2291 () Unit!2237)

(assert (=> b!79381 (= e!51840 Unit!2291)))

(declare-fun b!79382 () Bool)

(assert (=> b!79382 (= e!51841 (isDefined!90 (getValueByKey!138 (toList!729 lt!36162) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19133 c!12308) b!79380))

(assert (= (and d!19133 (not c!12308)) b!79381))

(assert (= (and d!19133 (not res!41462)) b!79382))

(declare-fun m!80423 () Bool)

(assert (=> d!19133 m!80423))

(declare-fun m!80425 () Bool)

(assert (=> b!79380 m!80425))

(assert (=> b!79380 m!78393))

(assert (=> b!79380 m!78393))

(declare-fun m!80427 () Bool)

(assert (=> b!79380 m!80427))

(assert (=> b!79382 m!78393))

(assert (=> b!79382 m!78393))

(assert (=> b!79382 m!80427))

(assert (=> d!18523 d!19133))

(declare-fun b!79383 () Bool)

(declare-fun e!51842 () Option!144)

(assert (=> b!79383 (= e!51842 (Some!143 (_2!1092 (h!2078 lt!36161))))))

(declare-fun b!79384 () Bool)

(declare-fun e!51843 () Option!144)

(assert (=> b!79384 (= e!51842 e!51843)))

(declare-fun c!12310 () Bool)

(assert (=> b!79384 (= c!12310 (and ((_ is Cons!1490) lt!36161) (not (= (_1!1092 (h!2078 lt!36161)) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79386 () Bool)

(assert (=> b!79386 (= e!51843 None!142)))

(declare-fun b!79385 () Bool)

(assert (=> b!79385 (= e!51843 (getValueByKey!138 (t!5132 lt!36161) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19135 () Bool)

(declare-fun c!12309 () Bool)

(assert (=> d!19135 (= c!12309 (and ((_ is Cons!1490) lt!36161) (= (_1!1092 (h!2078 lt!36161)) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19135 (= (getValueByKey!138 lt!36161 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!51842)))

(assert (= (and d!19135 c!12309) b!79383))

(assert (= (and d!19135 (not c!12309)) b!79384))

(assert (= (and b!79384 c!12310) b!79385))

(assert (= (and b!79384 (not c!12310)) b!79386))

(declare-fun m!80429 () Bool)

(assert (=> b!79385 m!80429))

(assert (=> d!18523 d!19135))

(declare-fun d!19137 () Bool)

(assert (=> d!19137 (= (getValueByKey!138 lt!36161 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36856 () Unit!2237)

(assert (=> d!19137 (= lt!36856 (choose!468 lt!36161 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!51844 () Bool)

(assert (=> d!19137 e!51844))

(declare-fun res!41463 () Bool)

(assert (=> d!19137 (=> (not res!41463) (not e!51844))))

(assert (=> d!19137 (= res!41463 (isStrictlySorted!282 lt!36161))))

(assert (=> d!19137 (= (lemmaContainsTupThenGetReturnValue!55 lt!36161 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36856)))

(declare-fun b!79387 () Bool)

(declare-fun res!41464 () Bool)

(assert (=> b!79387 (=> (not res!41464) (not e!51844))))

(assert (=> b!79387 (= res!41464 (containsKey!141 lt!36161 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79388 () Bool)

(assert (=> b!79388 (= e!51844 (contains!737 lt!36161 (tuple2!2163 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19137 res!41463) b!79387))

(assert (= (and b!79387 res!41464) b!79388))

(assert (=> d!19137 m!78387))

(declare-fun m!80431 () Bool)

(assert (=> d!19137 m!80431))

(declare-fun m!80433 () Bool)

(assert (=> d!19137 m!80433))

(declare-fun m!80435 () Bool)

(assert (=> b!79387 m!80435))

(declare-fun m!80437 () Bool)

(assert (=> b!79388 m!80437))

(assert (=> d!18523 d!19137))

(declare-fun b!79389 () Bool)

(declare-fun e!51847 () List!1494)

(declare-fun e!51845 () List!1494)

(assert (=> b!79389 (= e!51847 e!51845)))

(declare-fun c!12312 () Bool)

(assert (=> b!79389 (= c!12312 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79390 () Bool)

(declare-fun c!12311 () Bool)

(assert (=> b!79390 (= c!12311 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (bvsgt (_1!1092 (h!2078 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun e!51849 () List!1494)

(assert (=> b!79390 (= e!51845 e!51849)))

(declare-fun b!79391 () Bool)

(declare-fun call!7313 () List!1494)

(assert (=> b!79391 (= e!51849 call!7313)))

(declare-fun b!79392 () Bool)

(declare-fun call!7315 () List!1494)

(assert (=> b!79392 (= e!51845 call!7315)))

(declare-fun bm!7311 () Bool)

(assert (=> bm!7311 (= call!7313 call!7315)))

(declare-fun e!51848 () List!1494)

(declare-fun b!79393 () Bool)

(assert (=> b!79393 (= e!51848 (insertStrictlySorted!58 (t!5132 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79394 () Bool)

(declare-fun call!7314 () List!1494)

(assert (=> b!79394 (= e!51847 call!7314)))

(declare-fun b!79395 () Bool)

(assert (=> b!79395 (= e!51848 (ite c!12312 (t!5132 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (ite c!12311 (Cons!1490 (h!2078 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (t!5132 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))) Nil!1491)))))

(declare-fun d!19139 () Bool)

(declare-fun e!51846 () Bool)

(assert (=> d!19139 e!51846))

(declare-fun res!41466 () Bool)

(assert (=> d!19139 (=> (not res!41466) (not e!51846))))

(declare-fun lt!36857 () List!1494)

(assert (=> d!19139 (= res!41466 (isStrictlySorted!282 lt!36857))))

(assert (=> d!19139 (= lt!36857 e!51847)))

(declare-fun c!12314 () Bool)

(assert (=> d!19139 (= c!12314 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (bvslt (_1!1092 (h!2078 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19139 (isStrictlySorted!282 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!19139 (= (insertStrictlySorted!58 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36857)))

(declare-fun bm!7310 () Bool)

(assert (=> bm!7310 (= call!7315 call!7314)))

(declare-fun b!79396 () Bool)

(declare-fun res!41465 () Bool)

(assert (=> b!79396 (=> (not res!41465) (not e!51846))))

(assert (=> b!79396 (= res!41465 (containsKey!141 lt!36857 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79397 () Bool)

(assert (=> b!79397 (= e!51849 call!7313)))

(declare-fun b!79398 () Bool)

(assert (=> b!79398 (= e!51846 (contains!737 lt!36857 (tuple2!2163 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun bm!7312 () Bool)

(assert (=> bm!7312 (= call!7314 ($colon$colon!68 e!51848 (ite c!12314 (h!2078 (toList!729 (+!100 lt!35791 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))) (tuple2!2163 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun c!12313 () Bool)

(assert (=> bm!7312 (= c!12313 c!12314)))

(assert (= (and d!19139 c!12314) b!79394))

(assert (= (and d!19139 (not c!12314)) b!79389))

(assert (= (and b!79389 c!12312) b!79392))

(assert (= (and b!79389 (not c!12312)) b!79390))

(assert (= (and b!79390 c!12311) b!79397))

(assert (= (and b!79390 (not c!12311)) b!79391))

(assert (= (or b!79397 b!79391) bm!7311))

(assert (= (or b!79392 bm!7311) bm!7310))

(assert (= (or b!79394 bm!7310) bm!7312))

(assert (= (and bm!7312 c!12313) b!79393))

(assert (= (and bm!7312 (not c!12313)) b!79395))

(assert (= (and d!19139 res!41466) b!79396))

(assert (= (and b!79396 res!41465) b!79398))

(declare-fun m!80439 () Bool)

(assert (=> b!79398 m!80439))

(declare-fun m!80441 () Bool)

(assert (=> b!79393 m!80441))

(declare-fun m!80443 () Bool)

(assert (=> b!79396 m!80443))

(declare-fun m!80445 () Bool)

(assert (=> d!19139 m!80445))

(declare-fun m!80447 () Bool)

(assert (=> d!19139 m!80447))

(declare-fun m!80449 () Bool)

(assert (=> bm!7312 m!80449))

(assert (=> d!18523 d!19139))

(declare-fun d!19141 () Bool)

(assert (=> d!19141 (isDefined!90 (getValueByKey!138 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(declare-fun lt!36858 () Unit!2237)

(assert (=> d!19141 (= lt!36858 (choose!469 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(declare-fun e!51850 () Bool)

(assert (=> d!19141 e!51850))

(declare-fun res!41467 () Bool)

(assert (=> d!19141 (=> (not res!41467) (not e!51850))))

(assert (=> d!19141 (= res!41467 (isStrictlySorted!282 (toList!729 call!7155)))))

(assert (=> d!19141 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))) lt!36858)))

(declare-fun b!79399 () Bool)

(assert (=> b!79399 (= e!51850 (containsKey!141 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(assert (= (and d!19141 res!41467) b!79399))

(assert (=> d!19141 m!78299))

(assert (=> d!19141 m!79227))

(assert (=> d!19141 m!79227))

(assert (=> d!19141 m!79229))

(assert (=> d!19141 m!78299))

(declare-fun m!80451 () Bool)

(assert (=> d!19141 m!80451))

(declare-fun m!80453 () Bool)

(assert (=> d!19141 m!80453))

(assert (=> b!79399 m!78299))

(assert (=> b!79399 m!79223))

(assert (=> b!78733 d!19141))

(declare-fun d!19143 () Bool)

(assert (=> d!19143 (= (isDefined!90 (getValueByKey!138 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137)))) (not (isEmpty!334 (getValueByKey!138 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))))

(declare-fun bs!3368 () Bool)

(assert (= bs!3368 d!19143))

(assert (=> bs!3368 m!79227))

(declare-fun m!80455 () Bool)

(assert (=> bs!3368 m!80455))

(assert (=> b!78733 d!19143))

(declare-fun b!79400 () Bool)

(declare-fun e!51851 () Option!144)

(assert (=> b!79400 (= e!51851 (Some!143 (_2!1092 (h!2078 (toList!729 call!7155)))))))

(declare-fun b!79401 () Bool)

(declare-fun e!51852 () Option!144)

(assert (=> b!79401 (= e!51851 e!51852)))

(declare-fun c!12316 () Bool)

(assert (=> b!79401 (= c!12316 (and ((_ is Cons!1490) (toList!729 call!7155)) (not (= (_1!1092 (h!2078 (toList!729 call!7155))) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))))

(declare-fun b!79403 () Bool)

(assert (=> b!79403 (= e!51852 None!142)))

(declare-fun b!79402 () Bool)

(assert (=> b!79402 (= e!51852 (getValueByKey!138 (t!5132 (toList!729 call!7155)) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))))))

(declare-fun d!19145 () Bool)

(declare-fun c!12315 () Bool)

(assert (=> d!19145 (= c!12315 (and ((_ is Cons!1490) (toList!729 call!7155)) (= (_1!1092 (h!2078 (toList!729 call!7155))) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137)))))))

(assert (=> d!19145 (= (getValueByKey!138 (toList!729 call!7155) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137))) e!51851)))

(assert (= (and d!19145 c!12315) b!79400))

(assert (= (and d!19145 (not c!12315)) b!79401))

(assert (= (and b!79401 c!12316) b!79402))

(assert (= (and b!79401 (not c!12316)) b!79403))

(assert (=> b!79402 m!78299))

(declare-fun m!80457 () Bool)

(assert (=> b!79402 m!80457))

(assert (=> b!78733 d!19145))

(declare-fun d!19147 () Bool)

(declare-fun c!12317 () Bool)

(assert (=> d!19147 (= c!12317 ((_ is Nil!1491) (toList!729 lt!35961)))))

(declare-fun e!51853 () (InoxSet tuple2!2162))

(assert (=> d!19147 (= (content!84 (toList!729 lt!35961)) e!51853)))

(declare-fun b!79404 () Bool)

(assert (=> b!79404 (= e!51853 ((as const (Array tuple2!2162 Bool)) false))))

(declare-fun b!79405 () Bool)

(assert (=> b!79405 (= e!51853 ((_ map or) (store ((as const (Array tuple2!2162 Bool)) false) (h!2078 (toList!729 lt!35961)) true) (content!84 (t!5132 (toList!729 lt!35961)))))))

(assert (= (and d!19147 c!12317) b!79404))

(assert (= (and d!19147 (not c!12317)) b!79405))

(declare-fun m!80459 () Bool)

(assert (=> b!79405 m!80459))

(assert (=> b!79405 m!79341))

(assert (=> d!18625 d!19147))

(declare-fun d!19149 () Bool)

(declare-fun e!51855 () Bool)

(assert (=> d!19149 e!51855))

(declare-fun res!41468 () Bool)

(assert (=> d!19149 (=> res!41468 e!51855)))

(declare-fun lt!36860 () Bool)

(assert (=> d!19149 (= res!41468 (not lt!36860))))

(declare-fun lt!36862 () Bool)

(assert (=> d!19149 (= lt!36860 lt!36862)))

(declare-fun lt!36861 () Unit!2237)

(declare-fun e!51854 () Unit!2237)

(assert (=> d!19149 (= lt!36861 e!51854)))

(declare-fun c!12318 () Bool)

(assert (=> d!19149 (= c!12318 lt!36862)))

(assert (=> d!19149 (= lt!36862 (containsKey!141 (toList!729 lt!36534) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19149 (= (contains!736 lt!36534 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36860)))

(declare-fun b!79406 () Bool)

(declare-fun lt!36859 () Unit!2237)

(assert (=> b!79406 (= e!51854 lt!36859)))

(assert (=> b!79406 (= lt!36859 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36534) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79406 (isDefined!90 (getValueByKey!138 (toList!729 lt!36534) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79407 () Bool)

(declare-fun Unit!2292 () Unit!2237)

(assert (=> b!79407 (= e!51854 Unit!2292)))

(declare-fun b!79408 () Bool)

(assert (=> b!79408 (= e!51855 (isDefined!90 (getValueByKey!138 (toList!729 lt!36534) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19149 c!12318) b!79406))

(assert (= (and d!19149 (not c!12318)) b!79407))

(assert (= (and d!19149 (not res!41468)) b!79408))

(declare-fun m!80461 () Bool)

(assert (=> d!19149 m!80461))

(declare-fun m!80463 () Bool)

(assert (=> b!79406 m!80463))

(declare-fun m!80465 () Bool)

(assert (=> b!79406 m!80465))

(assert (=> b!79406 m!80465))

(declare-fun m!80467 () Bool)

(assert (=> b!79406 m!80467))

(assert (=> b!79408 m!80465))

(assert (=> b!79408 m!80465))

(assert (=> b!79408 m!80467))

(assert (=> bm!7234 d!19149))

(assert (=> b!78288 d!18833))

(assert (=> b!78730 d!18919))

(assert (=> b!78730 d!18921))

(declare-fun d!19151 () Bool)

(declare-fun e!51857 () Bool)

(assert (=> d!19151 e!51857))

(declare-fun res!41469 () Bool)

(assert (=> d!19151 (=> res!41469 e!51857)))

(declare-fun lt!36864 () Bool)

(assert (=> d!19151 (= res!41469 (not lt!36864))))

(declare-fun lt!36866 () Bool)

(assert (=> d!19151 (= lt!36864 lt!36866)))

(declare-fun lt!36865 () Unit!2237)

(declare-fun e!51856 () Unit!2237)

(assert (=> d!19151 (= lt!36865 e!51856)))

(declare-fun c!12319 () Bool)

(assert (=> d!19151 (= c!12319 lt!36866)))

(assert (=> d!19151 (= lt!36866 (containsKey!141 (toList!729 lt!36289) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19151 (= (contains!736 lt!36289 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36864)))

(declare-fun b!79409 () Bool)

(declare-fun lt!36863 () Unit!2237)

(assert (=> b!79409 (= e!51856 lt!36863)))

(assert (=> b!79409 (= lt!36863 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36289) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79409 (isDefined!90 (getValueByKey!138 (toList!729 lt!36289) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79410 () Bool)

(declare-fun Unit!2293 () Unit!2237)

(assert (=> b!79410 (= e!51856 Unit!2293)))

(declare-fun b!79411 () Bool)

(assert (=> b!79411 (= e!51857 (isDefined!90 (getValueByKey!138 (toList!729 lt!36289) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19151 c!12319) b!79409))

(assert (= (and d!19151 (not c!12319)) b!79410))

(assert (= (and d!19151 (not res!41469)) b!79411))

(declare-fun m!80469 () Bool)

(assert (=> d!19151 m!80469))

(declare-fun m!80471 () Bool)

(assert (=> b!79409 m!80471))

(declare-fun m!80473 () Bool)

(assert (=> b!79409 m!80473))

(assert (=> b!79409 m!80473))

(declare-fun m!80475 () Bool)

(assert (=> b!79409 m!80475))

(assert (=> b!79411 m!80473))

(assert (=> b!79411 m!80473))

(assert (=> b!79411 m!80475))

(assert (=> bm!7184 d!19151))

(assert (=> b!78744 d!18845))

(assert (=> b!78744 d!18847))

(declare-fun d!19153 () Bool)

(declare-fun lt!36867 () Bool)

(assert (=> d!19153 (= lt!36867 (select (content!84 (toList!729 lt!36233)) (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!51859 () Bool)

(assert (=> d!19153 (= lt!36867 e!51859)))

(declare-fun res!41471 () Bool)

(assert (=> d!19153 (=> (not res!41471) (not e!51859))))

(assert (=> d!19153 (= res!41471 ((_ is Cons!1490) (toList!729 lt!36233)))))

(assert (=> d!19153 (= (contains!737 (toList!729 lt!36233) (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36867)))

(declare-fun b!79412 () Bool)

(declare-fun e!51858 () Bool)

(assert (=> b!79412 (= e!51859 e!51858)))

(declare-fun res!41470 () Bool)

(assert (=> b!79412 (=> res!41470 e!51858)))

(assert (=> b!79412 (= res!41470 (= (h!2078 (toList!729 lt!36233)) (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!79413 () Bool)

(assert (=> b!79413 (= e!51858 (contains!737 (t!5132 (toList!729 lt!36233)) (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!19153 res!41471) b!79412))

(assert (= (and b!79412 (not res!41470)) b!79413))

(declare-fun m!80477 () Bool)

(assert (=> d!19153 m!80477))

(declare-fun m!80479 () Bool)

(assert (=> d!19153 m!80479))

(declare-fun m!80481 () Bool)

(assert (=> b!79413 m!80481))

(assert (=> b!78332 d!19153))

(declare-fun b!79414 () Bool)

(declare-fun e!51862 () List!1494)

(declare-fun e!51860 () List!1494)

(assert (=> b!79414 (= e!51862 e!51860)))

(declare-fun c!12321 () Bool)

(assert (=> b!79414 (= c!12321 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35793))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35793)))) (_1!1092 lt!35789))))))

(declare-fun b!79415 () Bool)

(declare-fun c!12320 () Bool)

(assert (=> b!79415 (= c!12320 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35793))) (bvsgt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35793)))) (_1!1092 lt!35789))))))

(declare-fun e!51864 () List!1494)

(assert (=> b!79415 (= e!51860 e!51864)))

(declare-fun b!79416 () Bool)

(declare-fun call!7316 () List!1494)

(assert (=> b!79416 (= e!51864 call!7316)))

(declare-fun b!79417 () Bool)

(declare-fun call!7318 () List!1494)

(assert (=> b!79417 (= e!51860 call!7318)))

(declare-fun bm!7314 () Bool)

(assert (=> bm!7314 (= call!7316 call!7318)))

(declare-fun b!79418 () Bool)

(declare-fun e!51863 () List!1494)

(assert (=> b!79418 (= e!51863 (insertStrictlySorted!58 (t!5132 (t!5132 (toList!729 lt!35793))) (_1!1092 lt!35789) (_2!1092 lt!35789)))))

(declare-fun b!79419 () Bool)

(declare-fun call!7317 () List!1494)

(assert (=> b!79419 (= e!51862 call!7317)))

(declare-fun b!79420 () Bool)

(assert (=> b!79420 (= e!51863 (ite c!12321 (t!5132 (t!5132 (toList!729 lt!35793))) (ite c!12320 (Cons!1490 (h!2078 (t!5132 (toList!729 lt!35793))) (t!5132 (t!5132 (toList!729 lt!35793)))) Nil!1491)))))

(declare-fun d!19155 () Bool)

(declare-fun e!51861 () Bool)

(assert (=> d!19155 e!51861))

(declare-fun res!41473 () Bool)

(assert (=> d!19155 (=> (not res!41473) (not e!51861))))

(declare-fun lt!36868 () List!1494)

(assert (=> d!19155 (= res!41473 (isStrictlySorted!282 lt!36868))))

(assert (=> d!19155 (= lt!36868 e!51862)))

(declare-fun c!12323 () Bool)

(assert (=> d!19155 (= c!12323 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35793))) (bvslt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35793)))) (_1!1092 lt!35789))))))

(assert (=> d!19155 (isStrictlySorted!282 (t!5132 (toList!729 lt!35793)))))

(assert (=> d!19155 (= (insertStrictlySorted!58 (t!5132 (toList!729 lt!35793)) (_1!1092 lt!35789) (_2!1092 lt!35789)) lt!36868)))

(declare-fun bm!7313 () Bool)

(assert (=> bm!7313 (= call!7318 call!7317)))

(declare-fun b!79421 () Bool)

(declare-fun res!41472 () Bool)

(assert (=> b!79421 (=> (not res!41472) (not e!51861))))

(assert (=> b!79421 (= res!41472 (containsKey!141 lt!36868 (_1!1092 lt!35789)))))

(declare-fun b!79422 () Bool)

(assert (=> b!79422 (= e!51864 call!7316)))

(declare-fun b!79423 () Bool)

(assert (=> b!79423 (= e!51861 (contains!737 lt!36868 (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun bm!7315 () Bool)

(assert (=> bm!7315 (= call!7317 ($colon$colon!68 e!51863 (ite c!12323 (h!2078 (t!5132 (toList!729 lt!35793))) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789)))))))

(declare-fun c!12322 () Bool)

(assert (=> bm!7315 (= c!12322 c!12323)))

(assert (= (and d!19155 c!12323) b!79419))

(assert (= (and d!19155 (not c!12323)) b!79414))

(assert (= (and b!79414 c!12321) b!79417))

(assert (= (and b!79414 (not c!12321)) b!79415))

(assert (= (and b!79415 c!12320) b!79422))

(assert (= (and b!79415 (not c!12320)) b!79416))

(assert (= (or b!79422 b!79416) bm!7314))

(assert (= (or b!79417 bm!7314) bm!7313))

(assert (= (or b!79419 bm!7313) bm!7315))

(assert (= (and bm!7315 c!12322) b!79418))

(assert (= (and bm!7315 (not c!12322)) b!79420))

(assert (= (and d!19155 res!41473) b!79421))

(assert (= (and b!79421 res!41472) b!79423))

(declare-fun m!80483 () Bool)

(assert (=> b!79423 m!80483))

(declare-fun m!80485 () Bool)

(assert (=> b!79418 m!80485))

(declare-fun m!80487 () Bool)

(assert (=> b!79421 m!80487))

(declare-fun m!80489 () Bool)

(assert (=> d!19155 m!80489))

(declare-fun m!80491 () Bool)

(assert (=> d!19155 m!80491))

(declare-fun m!80493 () Bool)

(assert (=> bm!7315 m!80493))

(assert (=> b!78465 d!19155))

(declare-fun d!19157 () Bool)

(declare-fun c!12324 () Bool)

(assert (=> d!19157 (= c!12324 ((_ is Nil!1491) (toList!729 lt!35969)))))

(declare-fun e!51865 () (InoxSet tuple2!2162))

(assert (=> d!19157 (= (content!84 (toList!729 lt!35969)) e!51865)))

(declare-fun b!79424 () Bool)

(assert (=> b!79424 (= e!51865 ((as const (Array tuple2!2162 Bool)) false))))

(declare-fun b!79425 () Bool)

(assert (=> b!79425 (= e!51865 ((_ map or) (store ((as const (Array tuple2!2162 Bool)) false) (h!2078 (toList!729 lt!35969)) true) (content!84 (t!5132 (toList!729 lt!35969)))))))

(assert (= (and d!19157 c!12324) b!79424))

(assert (= (and d!19157 (not c!12324)) b!79425))

(declare-fun m!80495 () Bool)

(assert (=> b!79425 m!80495))

(assert (=> b!79425 m!80403))

(assert (=> d!18543 d!19157))

(declare-fun d!19159 () Bool)

(assert (=> d!19159 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (getCurrentListMap!425 (_keys!3931 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(assert (=> d!19159 true))

(declare-fun _$5!83 () Unit!2237)

(assert (=> d!19159 (= (choose!472 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3071 lt!36137) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794 (defaultEntry!2271 newMap!16)) _$5!83)))

(declare-fun bs!3369 () Bool)

(assert (= bs!3369 d!19159))

(assert (=> bs!3369 m!78223))

(assert (=> bs!3369 m!78223))

(assert (=> bs!3369 m!78989))

(assert (=> bs!3369 m!78297))

(assert (=> bs!3369 m!79239))

(assert (=> d!18747 d!19159))

(assert (=> d!18747 d!18767))

(declare-fun b!79426 () Bool)

(declare-fun e!51866 () Option!144)

(assert (=> b!79426 (= e!51866 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36241)))))))

(declare-fun b!79427 () Bool)

(declare-fun e!51867 () Option!144)

(assert (=> b!79427 (= e!51866 e!51867)))

(declare-fun c!12326 () Bool)

(assert (=> b!79427 (= c!12326 (and ((_ is Cons!1490) (toList!729 lt!36241)) (not (= (_1!1092 (h!2078 (toList!729 lt!36241))) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79429 () Bool)

(assert (=> b!79429 (= e!51867 None!142)))

(declare-fun b!79428 () Bool)

(assert (=> b!79428 (= e!51867 (getValueByKey!138 (t!5132 (toList!729 lt!36241)) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun c!12325 () Bool)

(declare-fun d!19161 () Bool)

(assert (=> d!19161 (= c!12325 (and ((_ is Cons!1490) (toList!729 lt!36241)) (= (_1!1092 (h!2078 (toList!729 lt!36241))) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19161 (= (getValueByKey!138 (toList!729 lt!36241) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!51866)))

(assert (= (and d!19161 c!12325) b!79426))

(assert (= (and d!19161 (not c!12325)) b!79427))

(assert (= (and b!79427 c!12326) b!79428))

(assert (= (and b!79427 (not c!12326)) b!79429))

(declare-fun m!80497 () Bool)

(assert (=> b!79428 m!80497))

(assert (=> b!78335 d!19161))

(declare-fun d!19163 () Bool)

(declare-fun lt!36869 () Bool)

(assert (=> d!19163 (= lt!36869 (select (content!84 (toList!729 lt!36313)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun e!51869 () Bool)

(assert (=> d!19163 (= lt!36869 e!51869)))

(declare-fun res!41475 () Bool)

(assert (=> d!19163 (=> (not res!41475) (not e!51869))))

(assert (=> d!19163 (= res!41475 ((_ is Cons!1490) (toList!729 lt!36313)))))

(assert (=> d!19163 (= (contains!737 (toList!729 lt!36313) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36869)))

(declare-fun b!79430 () Bool)

(declare-fun e!51868 () Bool)

(assert (=> b!79430 (= e!51869 e!51868)))

(declare-fun res!41474 () Bool)

(assert (=> b!79430 (=> res!41474 e!51868)))

(assert (=> b!79430 (= res!41474 (= (h!2078 (toList!729 lt!36313)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun b!79431 () Bool)

(assert (=> b!79431 (= e!51868 (contains!737 (t!5132 (toList!729 lt!36313)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!19163 res!41475) b!79430))

(assert (= (and b!79430 (not res!41474)) b!79431))

(declare-fun m!80499 () Bool)

(assert (=> d!19163 m!80499))

(declare-fun m!80501 () Bool)

(assert (=> d!19163 m!80501))

(declare-fun m!80503 () Bool)

(assert (=> b!79431 m!80503))

(assert (=> b!78474 d!19163))

(declare-fun b!79432 () Bool)

(declare-fun e!51870 () Option!144)

(assert (=> b!79432 (= e!51870 (Some!143 (_2!1092 (h!2078 (t!5132 lt!35968)))))))

(declare-fun b!79433 () Bool)

(declare-fun e!51871 () Option!144)

(assert (=> b!79433 (= e!51870 e!51871)))

(declare-fun c!12328 () Bool)

(assert (=> b!79433 (= c!12328 (and ((_ is Cons!1490) (t!5132 lt!35968)) (not (= (_1!1092 (h!2078 (t!5132 lt!35968))) (_1!1092 lt!35792)))))))

(declare-fun b!79435 () Bool)

(assert (=> b!79435 (= e!51871 None!142)))

(declare-fun b!79434 () Bool)

(assert (=> b!79434 (= e!51871 (getValueByKey!138 (t!5132 (t!5132 lt!35968)) (_1!1092 lt!35792)))))

(declare-fun d!19165 () Bool)

(declare-fun c!12327 () Bool)

(assert (=> d!19165 (= c!12327 (and ((_ is Cons!1490) (t!5132 lt!35968)) (= (_1!1092 (h!2078 (t!5132 lt!35968))) (_1!1092 lt!35792))))))

(assert (=> d!19165 (= (getValueByKey!138 (t!5132 lt!35968) (_1!1092 lt!35792)) e!51870)))

(assert (= (and d!19165 c!12327) b!79432))

(assert (= (and d!19165 (not c!12327)) b!79433))

(assert (= (and b!79433 c!12328) b!79434))

(assert (= (and b!79433 (not c!12328)) b!79435))

(declare-fun m!80505 () Bool)

(assert (=> b!79434 m!80505))

(assert (=> b!78412 d!19165))

(declare-fun d!19167 () Bool)

(assert (=> d!19167 (isDefined!90 (getValueByKey!138 (toList!729 lt!35948) (_1!1092 lt!35792)))))

(declare-fun lt!36870 () Unit!2237)

(assert (=> d!19167 (= lt!36870 (choose!469 (toList!729 lt!35948) (_1!1092 lt!35792)))))

(declare-fun e!51872 () Bool)

(assert (=> d!19167 e!51872))

(declare-fun res!41476 () Bool)

(assert (=> d!19167 (=> (not res!41476) (not e!51872))))

(assert (=> d!19167 (= res!41476 (isStrictlySorted!282 (toList!729 lt!35948)))))

(assert (=> d!19167 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35948) (_1!1092 lt!35792)) lt!36870)))

(declare-fun b!79436 () Bool)

(assert (=> b!79436 (= e!51872 (containsKey!141 (toList!729 lt!35948) (_1!1092 lt!35792)))))

(assert (= (and d!19167 res!41476) b!79436))

(assert (=> d!19167 m!78117))

(assert (=> d!19167 m!78117))

(assert (=> d!19167 m!78941))

(declare-fun m!80507 () Bool)

(assert (=> d!19167 m!80507))

(declare-fun m!80509 () Bool)

(assert (=> d!19167 m!80509))

(assert (=> b!79436 m!78937))

(assert (=> b!78523 d!19167))

(declare-fun d!19169 () Bool)

(assert (=> d!19169 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35948) (_1!1092 lt!35792))) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35948) (_1!1092 lt!35792)))))))

(declare-fun bs!3370 () Bool)

(assert (= bs!3370 d!19169))

(assert (=> bs!3370 m!78117))

(declare-fun m!80511 () Bool)

(assert (=> bs!3370 m!80511))

(assert (=> b!78523 d!19169))

(assert (=> b!78523 d!18557))

(assert (=> d!18591 d!18721))

(declare-fun b!79453 () Bool)

(declare-fun e!51881 () Bool)

(declare-fun e!51883 () Bool)

(assert (=> b!79453 (= e!51881 e!51883)))

(declare-fun c!12333 () Bool)

(declare-fun lt!36873 () SeekEntryResult!234)

(assert (=> b!79453 (= c!12333 ((_ is MissingVacant!234) lt!36873))))

(declare-fun b!79454 () Bool)

(declare-fun e!51882 () Bool)

(assert (=> b!79454 (= e!51881 e!51882)))

(declare-fun res!41485 () Bool)

(declare-fun call!7323 () Bool)

(assert (=> b!79454 (= res!41485 call!7323)))

(assert (=> b!79454 (=> (not res!41485) (not e!51882))))

(declare-fun b!79455 () Bool)

(declare-fun res!41486 () Bool)

(assert (=> b!79455 (= res!41486 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3070 lt!36873)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79455 (=> (not res!41486) (not e!51882))))

(declare-fun c!12334 () Bool)

(declare-fun bm!7321 () Bool)

(assert (=> bm!7321 (= call!7323 (inRange!0 (ite c!12334 (index!3070 lt!36873) (index!3073 lt!36873)) (mask!6267 newMap!16)))))

(declare-fun b!79456 () Bool)

(declare-fun call!7324 () Bool)

(assert (=> b!79456 (= e!51882 (not call!7324))))

(declare-fun b!79457 () Bool)

(declare-fun res!41488 () Bool)

(declare-fun e!51884 () Bool)

(assert (=> b!79457 (=> (not res!41488) (not e!51884))))

(assert (=> b!79457 (= res!41488 call!7323)))

(assert (=> b!79457 (= e!51883 e!51884)))

(declare-fun b!79458 () Bool)

(assert (=> b!79458 (= e!51883 ((_ is Undefined!234) lt!36873))))

(declare-fun b!79459 () Bool)

(declare-fun res!41487 () Bool)

(assert (=> b!79459 (=> (not res!41487) (not e!51884))))

(assert (=> b!79459 (= res!41487 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3073 lt!36873)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79460 () Bool)

(assert (=> b!79460 (= e!51884 (not call!7324))))

(declare-fun bm!7320 () Bool)

(assert (=> bm!7320 (= call!7324 (arrayContainsKey!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!19171 () Bool)

(assert (=> d!19171 e!51881))

(assert (=> d!19171 (= c!12334 ((_ is MissingZero!234) lt!36873))))

(assert (=> d!19171 (= lt!36873 (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(assert (=> d!19171 true))

(declare-fun _$34!818 () Unit!2237)

(assert (=> d!19171 (= (choose!466 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)) _$34!818)))

(assert (= (and d!19171 c!12334) b!79454))

(assert (= (and d!19171 (not c!12334)) b!79453))

(assert (= (and b!79454 res!41485) b!79455))

(assert (= (and b!79455 res!41486) b!79456))

(assert (= (and b!79453 c!12333) b!79457))

(assert (= (and b!79453 (not c!12333)) b!79458))

(assert (= (and b!79457 res!41488) b!79459))

(assert (= (and b!79459 res!41487) b!79460))

(assert (= (or b!79454 b!79457) bm!7321))

(assert (= (or b!79456 b!79460) bm!7320))

(assert (=> d!19171 m!77885))

(assert (=> d!19171 m!78327))

(declare-fun m!80513 () Bool)

(assert (=> bm!7321 m!80513))

(declare-fun m!80515 () Bool)

(assert (=> b!79455 m!80515))

(assert (=> bm!7320 m!77885))

(assert (=> bm!7320 m!78317))

(declare-fun m!80517 () Bool)

(assert (=> b!79459 m!80517))

(assert (=> d!18591 d!19171))

(assert (=> d!18591 d!18767))

(declare-fun d!19173 () Bool)

(declare-fun e!51886 () Bool)

(assert (=> d!19173 e!51886))

(declare-fun res!41489 () Bool)

(assert (=> d!19173 (=> res!41489 e!51886)))

(declare-fun lt!36875 () Bool)

(assert (=> d!19173 (= res!41489 (not lt!36875))))

(declare-fun lt!36877 () Bool)

(assert (=> d!19173 (= lt!36875 lt!36877)))

(declare-fun lt!36876 () Unit!2237)

(declare-fun e!51885 () Unit!2237)

(assert (=> d!19173 (= lt!36876 e!51885)))

(declare-fun c!12335 () Bool)

(assert (=> d!19173 (= c!12335 lt!36877)))

(assert (=> d!19173 (= lt!36877 (containsKey!141 (toList!729 lt!36534) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19173 (= (contains!736 lt!36534 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36875)))

(declare-fun b!79461 () Bool)

(declare-fun lt!36874 () Unit!2237)

(assert (=> b!79461 (= e!51885 lt!36874)))

(assert (=> b!79461 (= lt!36874 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36534) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79461 (isDefined!90 (getValueByKey!138 (toList!729 lt!36534) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79462 () Bool)

(declare-fun Unit!2294 () Unit!2237)

(assert (=> b!79462 (= e!51885 Unit!2294)))

(declare-fun b!79463 () Bool)

(assert (=> b!79463 (= e!51886 (isDefined!90 (getValueByKey!138 (toList!729 lt!36534) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19173 c!12335) b!79461))

(assert (= (and d!19173 (not c!12335)) b!79462))

(assert (= (and d!19173 (not res!41489)) b!79463))

(declare-fun m!80519 () Bool)

(assert (=> d!19173 m!80519))

(declare-fun m!80521 () Bool)

(assert (=> b!79461 m!80521))

(declare-fun m!80523 () Bool)

(assert (=> b!79461 m!80523))

(assert (=> b!79461 m!80523))

(declare-fun m!80525 () Bool)

(assert (=> b!79461 m!80525))

(assert (=> b!79463 m!80523))

(assert (=> b!79463 m!80523))

(assert (=> b!79463 m!80525))

(assert (=> bm!7230 d!19173))

(declare-fun d!19175 () Bool)

(declare-fun e!51888 () Bool)

(assert (=> d!19175 e!51888))

(declare-fun res!41490 () Bool)

(assert (=> d!19175 (=> res!41490 e!51888)))

(declare-fun lt!36879 () Bool)

(assert (=> d!19175 (= res!41490 (not lt!36879))))

(declare-fun lt!36881 () Bool)

(assert (=> d!19175 (= lt!36879 lt!36881)))

(declare-fun lt!36880 () Unit!2237)

(declare-fun e!51887 () Unit!2237)

(assert (=> d!19175 (= lt!36880 e!51887)))

(declare-fun c!12336 () Bool)

(assert (=> d!19175 (= c!12336 lt!36881)))

(assert (=> d!19175 (= lt!36881 (containsKey!141 (toList!729 lt!36289) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19175 (= (contains!736 lt!36289 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36879)))

(declare-fun b!79464 () Bool)

(declare-fun lt!36878 () Unit!2237)

(assert (=> b!79464 (= e!51887 lt!36878)))

(assert (=> b!79464 (= lt!36878 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36289) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79464 (isDefined!90 (getValueByKey!138 (toList!729 lt!36289) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79465 () Bool)

(declare-fun Unit!2295 () Unit!2237)

(assert (=> b!79465 (= e!51887 Unit!2295)))

(declare-fun b!79466 () Bool)

(assert (=> b!79466 (= e!51888 (isDefined!90 (getValueByKey!138 (toList!729 lt!36289) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19175 c!12336) b!79464))

(assert (= (and d!19175 (not c!12336)) b!79465))

(assert (= (and d!19175 (not res!41490)) b!79466))

(declare-fun m!80527 () Bool)

(assert (=> d!19175 m!80527))

(declare-fun m!80529 () Bool)

(assert (=> b!79464 m!80529))

(declare-fun m!80531 () Bool)

(assert (=> b!79464 m!80531))

(assert (=> b!79464 m!80531))

(declare-fun m!80533 () Bool)

(assert (=> b!79464 m!80533))

(assert (=> b!79466 m!80531))

(assert (=> b!79466 m!80531))

(assert (=> b!79466 m!80533))

(assert (=> bm!7180 d!19175))

(declare-fun d!19177 () Bool)

(declare-fun e!51890 () Bool)

(assert (=> d!19177 e!51890))

(declare-fun res!41491 () Bool)

(assert (=> d!19177 (=> res!41491 e!51890)))

(declare-fun lt!36883 () Bool)

(assert (=> d!19177 (= res!41491 (not lt!36883))))

(declare-fun lt!36885 () Bool)

(assert (=> d!19177 (= lt!36883 lt!36885)))

(declare-fun lt!36884 () Unit!2237)

(declare-fun e!51889 () Unit!2237)

(assert (=> d!19177 (= lt!36884 e!51889)))

(declare-fun c!12337 () Bool)

(assert (=> d!19177 (= c!12337 lt!36885)))

(assert (=> d!19177 (= lt!36885 (containsKey!141 (toList!729 lt!36174) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!19177 (= (contains!736 lt!36174 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36883)))

(declare-fun b!79467 () Bool)

(declare-fun lt!36882 () Unit!2237)

(assert (=> b!79467 (= e!51889 lt!36882)))

(assert (=> b!79467 (= lt!36882 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36174) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> b!79467 (isDefined!90 (getValueByKey!138 (toList!729 lt!36174) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79468 () Bool)

(declare-fun Unit!2296 () Unit!2237)

(assert (=> b!79468 (= e!51889 Unit!2296)))

(declare-fun b!79469 () Bool)

(assert (=> b!79469 (= e!51890 (isDefined!90 (getValueByKey!138 (toList!729 lt!36174) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (= (and d!19177 c!12337) b!79467))

(assert (= (and d!19177 (not c!12337)) b!79468))

(assert (= (and d!19177 (not res!41491)) b!79469))

(declare-fun m!80535 () Bool)

(assert (=> d!19177 m!80535))

(declare-fun m!80537 () Bool)

(assert (=> b!79467 m!80537))

(assert (=> b!79467 m!78429))

(assert (=> b!79467 m!78429))

(declare-fun m!80539 () Bool)

(assert (=> b!79467 m!80539))

(assert (=> b!79469 m!78429))

(assert (=> b!79469 m!78429))

(assert (=> b!79469 m!80539))

(assert (=> d!18529 d!19177))

(declare-fun b!79470 () Bool)

(declare-fun e!51891 () Option!144)

(assert (=> b!79470 (= e!51891 (Some!143 (_2!1092 (h!2078 lt!36173))))))

(declare-fun b!79471 () Bool)

(declare-fun e!51892 () Option!144)

(assert (=> b!79471 (= e!51891 e!51892)))

(declare-fun c!12339 () Bool)

(assert (=> b!79471 (= c!12339 (and ((_ is Cons!1490) lt!36173) (not (= (_1!1092 (h!2078 lt!36173)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!79473 () Bool)

(assert (=> b!79473 (= e!51892 None!142)))

(declare-fun b!79472 () Bool)

(assert (=> b!79472 (= e!51892 (getValueByKey!138 (t!5132 lt!36173) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun d!19179 () Bool)

(declare-fun c!12338 () Bool)

(assert (=> d!19179 (= c!12338 (and ((_ is Cons!1490) lt!36173) (= (_1!1092 (h!2078 lt!36173)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19179 (= (getValueByKey!138 lt!36173 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) e!51891)))

(assert (= (and d!19179 c!12338) b!79470))

(assert (= (and d!19179 (not c!12338)) b!79471))

(assert (= (and b!79471 c!12339) b!79472))

(assert (= (and b!79471 (not c!12339)) b!79473))

(declare-fun m!80541 () Bool)

(assert (=> b!79472 m!80541))

(assert (=> d!18529 d!19179))

(declare-fun d!19181 () Bool)

(assert (=> d!19181 (= (getValueByKey!138 lt!36173 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36886 () Unit!2237)

(assert (=> d!19181 (= lt!36886 (choose!468 lt!36173 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun e!51893 () Bool)

(assert (=> d!19181 e!51893))

(declare-fun res!41492 () Bool)

(assert (=> d!19181 (=> (not res!41492) (not e!51893))))

(assert (=> d!19181 (= res!41492 (isStrictlySorted!282 lt!36173))))

(assert (=> d!19181 (= (lemmaContainsTupThenGetReturnValue!55 lt!36173 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36886)))

(declare-fun b!79474 () Bool)

(declare-fun res!41493 () Bool)

(assert (=> b!79474 (=> (not res!41493) (not e!51893))))

(assert (=> b!79474 (= res!41493 (containsKey!141 lt!36173 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79475 () Bool)

(assert (=> b!79475 (= e!51893 (contains!737 lt!36173 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (= (and d!19181 res!41492) b!79474))

(assert (= (and b!79474 res!41493) b!79475))

(assert (=> d!19181 m!78423))

(declare-fun m!80543 () Bool)

(assert (=> d!19181 m!80543))

(declare-fun m!80545 () Bool)

(assert (=> d!19181 m!80545))

(declare-fun m!80547 () Bool)

(assert (=> b!79474 m!80547))

(declare-fun m!80549 () Bool)

(assert (=> b!79475 m!80549))

(assert (=> d!18529 d!19181))

(declare-fun b!79476 () Bool)

(declare-fun e!51896 () List!1494)

(declare-fun e!51894 () List!1494)

(assert (=> b!79476 (= e!51896 e!51894)))

(declare-fun c!12341 () Bool)

(assert (=> b!79476 (= c!12341 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun c!12340 () Bool)

(declare-fun b!79477 () Bool)

(assert (=> b!79477 (= c!12340 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (bvsgt (_1!1092 (h!2078 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun e!51898 () List!1494)

(assert (=> b!79477 (= e!51894 e!51898)))

(declare-fun b!79478 () Bool)

(declare-fun call!7325 () List!1494)

(assert (=> b!79478 (= e!51898 call!7325)))

(declare-fun b!79479 () Bool)

(declare-fun call!7327 () List!1494)

(assert (=> b!79479 (= e!51894 call!7327)))

(declare-fun bm!7323 () Bool)

(assert (=> bm!7323 (= call!7325 call!7327)))

(declare-fun e!51897 () List!1494)

(declare-fun b!79480 () Bool)

(assert (=> b!79480 (= e!51897 (insertStrictlySorted!58 (t!5132 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79481 () Bool)

(declare-fun call!7326 () List!1494)

(assert (=> b!79481 (= e!51896 call!7326)))

(declare-fun b!79482 () Bool)

(assert (=> b!79482 (= e!51897 (ite c!12341 (t!5132 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (ite c!12340 (Cons!1490 (h!2078 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (t!5132 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) Nil!1491)))))

(declare-fun d!19183 () Bool)

(declare-fun e!51895 () Bool)

(assert (=> d!19183 e!51895))

(declare-fun res!41495 () Bool)

(assert (=> d!19183 (=> (not res!41495) (not e!51895))))

(declare-fun lt!36887 () List!1494)

(assert (=> d!19183 (= res!41495 (isStrictlySorted!282 lt!36887))))

(assert (=> d!19183 (= lt!36887 e!51896)))

(declare-fun c!12343 () Bool)

(assert (=> d!19183 (= c!12343 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (bvslt (_1!1092 (h!2078 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19183 (isStrictlySorted!282 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!19183 (= (insertStrictlySorted!58 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36887)))

(declare-fun bm!7322 () Bool)

(assert (=> bm!7322 (= call!7327 call!7326)))

(declare-fun b!79483 () Bool)

(declare-fun res!41494 () Bool)

(assert (=> b!79483 (=> (not res!41494) (not e!51895))))

(assert (=> b!79483 (= res!41494 (containsKey!141 lt!36887 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79484 () Bool)

(assert (=> b!79484 (= e!51898 call!7325)))

(declare-fun b!79485 () Bool)

(assert (=> b!79485 (= e!51895 (contains!737 lt!36887 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun bm!7324 () Bool)

(assert (=> bm!7324 (= call!7326 ($colon$colon!68 e!51897 (ite c!12343 (h!2078 (toList!729 (+!100 lt!35791 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun c!12342 () Bool)

(assert (=> bm!7324 (= c!12342 c!12343)))

(assert (= (and d!19183 c!12343) b!79481))

(assert (= (and d!19183 (not c!12343)) b!79476))

(assert (= (and b!79476 c!12341) b!79479))

(assert (= (and b!79476 (not c!12341)) b!79477))

(assert (= (and b!79477 c!12340) b!79484))

(assert (= (and b!79477 (not c!12340)) b!79478))

(assert (= (or b!79484 b!79478) bm!7323))

(assert (= (or b!79479 bm!7323) bm!7322))

(assert (= (or b!79481 bm!7322) bm!7324))

(assert (= (and bm!7324 c!12342) b!79480))

(assert (= (and bm!7324 (not c!12342)) b!79482))

(assert (= (and d!19183 res!41495) b!79483))

(assert (= (and b!79483 res!41494) b!79485))

(declare-fun m!80551 () Bool)

(assert (=> b!79485 m!80551))

(declare-fun m!80553 () Bool)

(assert (=> b!79480 m!80553))

(declare-fun m!80555 () Bool)

(assert (=> b!79483 m!80555))

(declare-fun m!80557 () Bool)

(assert (=> d!19183 m!80557))

(declare-fun m!80559 () Bool)

(assert (=> d!19183 m!80559))

(declare-fun m!80561 () Bool)

(assert (=> bm!7324 m!80561))

(assert (=> d!18529 d!19183))

(declare-fun d!19185 () Bool)

(declare-fun lt!36888 () Bool)

(assert (=> d!19185 (= lt!36888 (select (content!84 lt!36300) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun e!51900 () Bool)

(assert (=> d!19185 (= lt!36888 e!51900)))

(declare-fun res!41497 () Bool)

(assert (=> d!19185 (=> (not res!41497) (not e!51900))))

(assert (=> d!19185 (= res!41497 ((_ is Cons!1490) lt!36300))))

(assert (=> d!19185 (= (contains!737 lt!36300 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))) lt!36888)))

(declare-fun b!79486 () Bool)

(declare-fun e!51899 () Bool)

(assert (=> b!79486 (= e!51900 e!51899)))

(declare-fun res!41496 () Bool)

(assert (=> b!79486 (=> res!41496 e!51899)))

(assert (=> b!79486 (= res!41496 (= (h!2078 lt!36300) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun b!79487 () Bool)

(assert (=> b!79487 (= e!51899 (contains!737 (t!5132 lt!36300) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(assert (= (and d!19185 res!41497) b!79486))

(assert (= (and b!79486 (not res!41496)) b!79487))

(declare-fun m!80563 () Bool)

(assert (=> d!19185 m!80563))

(declare-fun m!80565 () Bool)

(assert (=> d!19185 m!80565))

(declare-fun m!80567 () Bool)

(assert (=> b!79487 m!80567))

(assert (=> b!78449 d!19185))

(declare-fun d!19187 () Bool)

(declare-fun lt!36889 () Bool)

(assert (=> d!19187 (= lt!36889 (select (content!84 (t!5132 (toList!729 lt!35948))) lt!35792))))

(declare-fun e!51902 () Bool)

(assert (=> d!19187 (= lt!36889 e!51902)))

(declare-fun res!41499 () Bool)

(assert (=> d!19187 (=> (not res!41499) (not e!51902))))

(assert (=> d!19187 (= res!41499 ((_ is Cons!1490) (t!5132 (toList!729 lt!35948))))))

(assert (=> d!19187 (= (contains!737 (t!5132 (toList!729 lt!35948)) lt!35792) lt!36889)))

(declare-fun b!79488 () Bool)

(declare-fun e!51901 () Bool)

(assert (=> b!79488 (= e!51902 e!51901)))

(declare-fun res!41498 () Bool)

(assert (=> b!79488 (=> res!41498 e!51901)))

(assert (=> b!79488 (= res!41498 (= (h!2078 (t!5132 (toList!729 lt!35948))) lt!35792))))

(declare-fun b!79489 () Bool)

(assert (=> b!79489 (= e!51901 (contains!737 (t!5132 (t!5132 (toList!729 lt!35948))) lt!35792))))

(assert (= (and d!19187 res!41499) b!79488))

(assert (= (and b!79488 (not res!41498)) b!79489))

(declare-fun m!80569 () Bool)

(assert (=> d!19187 m!80569))

(declare-fun m!80571 () Bool)

(assert (=> d!19187 m!80571))

(declare-fun m!80573 () Bool)

(assert (=> b!79489 m!80573))

(assert (=> b!78703 d!19187))

(assert (=> b!78603 d!19063))

(assert (=> d!18659 d!18657))

(declare-fun d!19189 () Bool)

(assert (=> d!19189 (= (getValueByKey!138 lt!35964 (_1!1092 lt!35806)) (Some!143 (_2!1092 lt!35806)))))

(assert (=> d!19189 true))

(declare-fun _$22!394 () Unit!2237)

(assert (=> d!19189 (= (choose!468 lt!35964 (_1!1092 lt!35806) (_2!1092 lt!35806)) _$22!394)))

(declare-fun bs!3371 () Bool)

(assert (= bs!3371 d!19189))

(assert (=> bs!3371 m!78169))

(assert (=> d!18659 d!19189))

(declare-fun d!19191 () Bool)

(declare-fun res!41500 () Bool)

(declare-fun e!51903 () Bool)

(assert (=> d!19191 (=> res!41500 e!51903)))

(assert (=> d!19191 (= res!41500 (or ((_ is Nil!1491) lt!35964) ((_ is Nil!1491) (t!5132 lt!35964))))))

(assert (=> d!19191 (= (isStrictlySorted!282 lt!35964) e!51903)))

(declare-fun b!79490 () Bool)

(declare-fun e!51904 () Bool)

(assert (=> b!79490 (= e!51903 e!51904)))

(declare-fun res!41501 () Bool)

(assert (=> b!79490 (=> (not res!41501) (not e!51904))))

(assert (=> b!79490 (= res!41501 (bvslt (_1!1092 (h!2078 lt!35964)) (_1!1092 (h!2078 (t!5132 lt!35964)))))))

(declare-fun b!79491 () Bool)

(assert (=> b!79491 (= e!51904 (isStrictlySorted!282 (t!5132 lt!35964)))))

(assert (= (and d!19191 (not res!41500)) b!79490))

(assert (= (and b!79490 res!41501) b!79491))

(declare-fun m!80575 () Bool)

(assert (=> b!79491 m!80575))

(assert (=> d!18659 d!19191))

(declare-fun b!79492 () Bool)

(declare-fun e!51905 () Option!144)

(assert (=> b!79492 (= e!51905 (Some!143 (_2!1092 (h!2078 (t!5132 (toList!729 lt!35961))))))))

(declare-fun b!79493 () Bool)

(declare-fun e!51906 () Option!144)

(assert (=> b!79493 (= e!51905 e!51906)))

(declare-fun c!12345 () Bool)

(assert (=> b!79493 (= c!12345 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35961))) (not (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35961)))) (_1!1092 lt!35806)))))))

(declare-fun b!79495 () Bool)

(assert (=> b!79495 (= e!51906 None!142)))

(declare-fun b!79494 () Bool)

(assert (=> b!79494 (= e!51906 (getValueByKey!138 (t!5132 (t!5132 (toList!729 lt!35961))) (_1!1092 lt!35806)))))

(declare-fun d!19193 () Bool)

(declare-fun c!12344 () Bool)

(assert (=> d!19193 (= c!12344 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35961))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35961)))) (_1!1092 lt!35806))))))

(assert (=> d!19193 (= (getValueByKey!138 (t!5132 (toList!729 lt!35961)) (_1!1092 lt!35806)) e!51905)))

(assert (= (and d!19193 c!12344) b!79492))

(assert (= (and d!19193 (not c!12344)) b!79493))

(assert (= (and b!79493 c!12345) b!79494))

(assert (= (and b!79493 (not c!12345)) b!79495))

(declare-fun m!80577 () Bool)

(assert (=> b!79494 m!80577))

(assert (=> b!78751 d!19193))

(declare-fun d!19195 () Bool)

(declare-fun lt!36890 () Bool)

(assert (=> d!19195 (= lt!36890 (select (content!84 lt!36454) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun e!51908 () Bool)

(assert (=> d!19195 (= lt!36890 e!51908)))

(declare-fun res!41503 () Bool)

(assert (=> d!19195 (=> (not res!41503) (not e!51908))))

(assert (=> d!19195 (= res!41503 ((_ is Cons!1490) lt!36454))))

(assert (=> d!19195 (= (contains!737 lt!36454 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))) lt!36890)))

(declare-fun b!79496 () Bool)

(declare-fun e!51907 () Bool)

(assert (=> b!79496 (= e!51908 e!51907)))

(declare-fun res!41502 () Bool)

(assert (=> b!79496 (=> res!41502 e!51907)))

(assert (=> b!79496 (= res!41502 (= (h!2078 lt!36454) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun b!79497 () Bool)

(assert (=> b!79497 (= e!51907 (contains!737 (t!5132 lt!36454) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(assert (= (and d!19195 res!41503) b!79496))

(assert (= (and b!79496 (not res!41502)) b!79497))

(declare-fun m!80579 () Bool)

(assert (=> d!19195 m!80579))

(declare-fun m!80581 () Bool)

(assert (=> d!19195 m!80581))

(declare-fun m!80583 () Bool)

(assert (=> b!79497 m!80583))

(assert (=> b!78651 d!19195))

(declare-fun b!79498 () Bool)

(declare-fun e!51909 () Option!144)

(assert (=> b!79498 (= e!51909 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36174)))))))

(declare-fun b!79499 () Bool)

(declare-fun e!51910 () Option!144)

(assert (=> b!79499 (= e!51909 e!51910)))

(declare-fun c!12347 () Bool)

(assert (=> b!79499 (= c!12347 (and ((_ is Cons!1490) (toList!729 lt!36174)) (not (= (_1!1092 (h!2078 (toList!729 lt!36174))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!79501 () Bool)

(assert (=> b!79501 (= e!51910 None!142)))

(declare-fun b!79500 () Bool)

(assert (=> b!79500 (= e!51910 (getValueByKey!138 (t!5132 (toList!729 lt!36174)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun c!12346 () Bool)

(declare-fun d!19197 () Bool)

(assert (=> d!19197 (= c!12346 (and ((_ is Cons!1490) (toList!729 lt!36174)) (= (_1!1092 (h!2078 (toList!729 lt!36174))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19197 (= (getValueByKey!138 (toList!729 lt!36174) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) e!51909)))

(assert (= (and d!19197 c!12346) b!79498))

(assert (= (and d!19197 (not c!12346)) b!79499))

(assert (= (and b!79499 c!12347) b!79500))

(assert (= (and b!79499 (not c!12347)) b!79501))

(declare-fun m!80585 () Bool)

(assert (=> b!79500 m!80585))

(assert (=> b!78247 d!19197))

(assert (=> d!18593 d!18483))

(assert (=> b!78502 d!18483))

(declare-fun lt!36891 () Bool)

(declare-fun d!19199 () Bool)

(assert (=> d!19199 (= lt!36891 (select (content!84 (toList!729 lt!36537)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun e!51912 () Bool)

(assert (=> d!19199 (= lt!36891 e!51912)))

(declare-fun res!41505 () Bool)

(assert (=> d!19199 (=> (not res!41505) (not e!51912))))

(assert (=> d!19199 (= res!41505 ((_ is Cons!1490) (toList!729 lt!36537)))))

(assert (=> d!19199 (= (contains!737 (toList!729 lt!36537) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36891)))

(declare-fun b!79502 () Bool)

(declare-fun e!51911 () Bool)

(assert (=> b!79502 (= e!51912 e!51911)))

(declare-fun res!41504 () Bool)

(assert (=> b!79502 (=> res!41504 e!51911)))

(assert (=> b!79502 (= res!41504 (= (h!2078 (toList!729 lt!36537)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun b!79503 () Bool)

(assert (=> b!79503 (= e!51911 (contains!737 (t!5132 (toList!729 lt!36537)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!19199 res!41505) b!79502))

(assert (= (and b!79502 (not res!41504)) b!79503))

(declare-fun m!80587 () Bool)

(assert (=> d!19199 m!80587))

(declare-fun m!80589 () Bool)

(assert (=> d!19199 m!80589))

(declare-fun m!80591 () Bool)

(assert (=> b!79503 m!80591))

(assert (=> b!78775 d!19199))

(declare-fun d!19201 () Bool)

(assert (=> d!19201 (isDefined!90 (getValueByKey!138 (toList!729 lt!35969) (_1!1092 lt!35792)))))

(declare-fun lt!36892 () Unit!2237)

(assert (=> d!19201 (= lt!36892 (choose!469 (toList!729 lt!35969) (_1!1092 lt!35792)))))

(declare-fun e!51913 () Bool)

(assert (=> d!19201 e!51913))

(declare-fun res!41506 () Bool)

(assert (=> d!19201 (=> (not res!41506) (not e!51913))))

(assert (=> d!19201 (= res!41506 (isStrictlySorted!282 (toList!729 lt!35969)))))

(assert (=> d!19201 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35969) (_1!1092 lt!35792)) lt!36892)))

(declare-fun b!79504 () Bool)

(assert (=> b!79504 (= e!51913 (containsKey!141 (toList!729 lt!35969) (_1!1092 lt!35792)))))

(assert (= (and d!19201 res!41506) b!79504))

(assert (=> d!19201 m!78187))

(assert (=> d!19201 m!78187))

(assert (=> d!19201 m!78777))

(declare-fun m!80593 () Bool)

(assert (=> d!19201 m!80593))

(declare-fun m!80595 () Bool)

(assert (=> d!19201 m!80595))

(assert (=> b!79504 m!78773))

(assert (=> b!78407 d!19201))

(declare-fun d!19203 () Bool)

(assert (=> d!19203 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35969) (_1!1092 lt!35792))) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35969) (_1!1092 lt!35792)))))))

(declare-fun bs!3372 () Bool)

(assert (= bs!3372 d!19203))

(assert (=> bs!3372 m!78187))

(declare-fun m!80597 () Bool)

(assert (=> bs!3372 m!80597))

(assert (=> b!78407 d!19203))

(assert (=> b!78407 d!18687))

(declare-fun d!19205 () Bool)

(assert (=> d!19205 (= (get!1186 (getValueByKey!138 (toList!729 lt!36042) lt!36035)) (v!2600 (getValueByKey!138 (toList!729 lt!36042) lt!36035)))))

(assert (=> d!18579 d!19205))

(declare-fun b!79505 () Bool)

(declare-fun e!51914 () Option!144)

(assert (=> b!79505 (= e!51914 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36042)))))))

(declare-fun b!79506 () Bool)

(declare-fun e!51915 () Option!144)

(assert (=> b!79506 (= e!51914 e!51915)))

(declare-fun c!12349 () Bool)

(assert (=> b!79506 (= c!12349 (and ((_ is Cons!1490) (toList!729 lt!36042)) (not (= (_1!1092 (h!2078 (toList!729 lt!36042))) lt!36035))))))

(declare-fun b!79508 () Bool)

(assert (=> b!79508 (= e!51915 None!142)))

(declare-fun b!79507 () Bool)

(assert (=> b!79507 (= e!51915 (getValueByKey!138 (t!5132 (toList!729 lt!36042)) lt!36035))))

(declare-fun d!19207 () Bool)

(declare-fun c!12348 () Bool)

(assert (=> d!19207 (= c!12348 (and ((_ is Cons!1490) (toList!729 lt!36042)) (= (_1!1092 (h!2078 (toList!729 lt!36042))) lt!36035)))))

(assert (=> d!19207 (= (getValueByKey!138 (toList!729 lt!36042) lt!36035) e!51914)))

(assert (= (and d!19207 c!12348) b!79505))

(assert (= (and d!19207 (not c!12348)) b!79506))

(assert (= (and b!79506 c!12349) b!79507))

(assert (= (and b!79506 (not c!12349)) b!79508))

(declare-fun m!80599 () Bool)

(assert (=> b!79507 m!80599))

(assert (=> d!18579 d!19207))

(declare-fun d!19209 () Bool)

(declare-fun e!51917 () Bool)

(assert (=> d!19209 e!51917))

(declare-fun res!41507 () Bool)

(assert (=> d!19209 (=> res!41507 e!51917)))

(declare-fun lt!36894 () Bool)

(assert (=> d!19209 (= res!41507 (not lt!36894))))

(declare-fun lt!36896 () Bool)

(assert (=> d!19209 (= lt!36894 lt!36896)))

(declare-fun lt!36895 () Unit!2237)

(declare-fun e!51916 () Unit!2237)

(assert (=> d!19209 (= lt!36895 e!51916)))

(declare-fun c!12350 () Bool)

(assert (=> d!19209 (= c!12350 lt!36896)))

(assert (=> d!19209 (= lt!36896 (containsKey!141 (toList!729 (map!1183 (_2!1093 lt!36425))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!19209 (= (contains!736 (map!1183 (_2!1093 lt!36425)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) lt!36894)))

(declare-fun b!79509 () Bool)

(declare-fun lt!36893 () Unit!2237)

(assert (=> b!79509 (= e!51916 lt!36893)))

(assert (=> b!79509 (= lt!36893 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (map!1183 (_2!1093 lt!36425))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> b!79509 (isDefined!90 (getValueByKey!138 (toList!729 (map!1183 (_2!1093 lt!36425))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!79510 () Bool)

(declare-fun Unit!2297 () Unit!2237)

(assert (=> b!79510 (= e!51916 Unit!2297)))

(declare-fun b!79511 () Bool)

(assert (=> b!79511 (= e!51917 (isDefined!90 (getValueByKey!138 (toList!729 (map!1183 (_2!1093 lt!36425))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (= (and d!19209 c!12350) b!79509))

(assert (= (and d!19209 (not c!12350)) b!79510))

(assert (= (and d!19209 (not res!41507)) b!79511))

(assert (=> d!19209 m!77885))

(declare-fun m!80601 () Bool)

(assert (=> d!19209 m!80601))

(assert (=> b!79509 m!77885))

(declare-fun m!80603 () Bool)

(assert (=> b!79509 m!80603))

(assert (=> b!79509 m!77885))

(declare-fun m!80605 () Bool)

(assert (=> b!79509 m!80605))

(assert (=> b!79509 m!80605))

(declare-fun m!80607 () Bool)

(assert (=> b!79509 m!80607))

(assert (=> b!79511 m!77885))

(assert (=> b!79511 m!80605))

(assert (=> b!79511 m!80605))

(assert (=> b!79511 m!80607))

(assert (=> b!78581 d!19209))

(declare-fun d!19211 () Bool)

(assert (=> d!19211 (= (map!1183 (_2!1093 lt!36425)) (getCurrentListMap!425 (_keys!3931 (_2!1093 lt!36425)) (_values!2254 (_2!1093 lt!36425)) (mask!6267 (_2!1093 lt!36425)) (extraKeys!2122 (_2!1093 lt!36425)) (zeroValue!2169 (_2!1093 lt!36425)) (minValue!2169 (_2!1093 lt!36425)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1093 lt!36425))))))

(declare-fun bs!3373 () Bool)

(assert (= bs!3373 d!19211))

(declare-fun m!80609 () Bool)

(assert (=> bs!3373 m!80609))

(assert (=> b!78581 d!19211))

(declare-fun d!19213 () Bool)

(declare-fun e!51919 () Bool)

(assert (=> d!19213 e!51919))

(declare-fun res!41508 () Bool)

(assert (=> d!19213 (=> res!41508 e!51919)))

(declare-fun lt!36898 () Bool)

(assert (=> d!19213 (= res!41508 (not lt!36898))))

(declare-fun lt!36900 () Bool)

(assert (=> d!19213 (= lt!36898 lt!36900)))

(declare-fun lt!36899 () Unit!2237)

(declare-fun e!51918 () Unit!2237)

(assert (=> d!19213 (= lt!36899 e!51918)))

(declare-fun c!12351 () Bool)

(assert (=> d!19213 (= c!12351 lt!36900)))

(assert (=> d!19213 (= lt!36900 (containsKey!141 (toList!729 lt!36042) lt!36035))))

(assert (=> d!19213 (= (contains!736 lt!36042 lt!36035) lt!36898)))

(declare-fun b!79512 () Bool)

(declare-fun lt!36897 () Unit!2237)

(assert (=> b!79512 (= e!51918 lt!36897)))

(assert (=> b!79512 (= lt!36897 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36042) lt!36035))))

(assert (=> b!79512 (isDefined!90 (getValueByKey!138 (toList!729 lt!36042) lt!36035))))

(declare-fun b!79513 () Bool)

(declare-fun Unit!2298 () Unit!2237)

(assert (=> b!79513 (= e!51918 Unit!2298)))

(declare-fun b!79514 () Bool)

(assert (=> b!79514 (= e!51919 (isDefined!90 (getValueByKey!138 (toList!729 lt!36042) lt!36035)))))

(assert (= (and d!19213 c!12351) b!79512))

(assert (= (and d!19213 (not c!12351)) b!79513))

(assert (= (and d!19213 (not res!41508)) b!79514))

(declare-fun m!80611 () Bool)

(assert (=> d!19213 m!80611))

(declare-fun m!80613 () Bool)

(assert (=> b!79512 m!80613))

(assert (=> b!79512 m!78631))

(assert (=> b!79512 m!78631))

(declare-fun m!80615 () Bool)

(assert (=> b!79512 m!80615))

(assert (=> b!79514 m!78631))

(assert (=> b!79514 m!78631))

(assert (=> b!79514 m!80615))

(assert (=> d!18587 d!19213))

(assert (=> d!18587 d!18565))

(declare-fun d!19215 () Bool)

(assert (=> d!19215 (= (apply!79 (+!100 lt!36042 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36035) (apply!79 lt!36042 lt!36035))))

(assert (=> d!19215 true))

(declare-fun _$34!819 () Unit!2237)

(assert (=> d!19215 (= (choose!465 lt!36042 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36035) _$34!819)))

(declare-fun bs!3374 () Bool)

(assert (= bs!3374 d!19215))

(assert (=> bs!3374 m!78231))

(assert (=> bs!3374 m!78231))

(assert (=> bs!3374 m!78233))

(assert (=> bs!3374 m!78241))

(assert (=> d!18587 d!19215))

(assert (=> d!18587 d!18579))

(assert (=> d!18587 d!18581))

(declare-fun d!19217 () Bool)

(declare-fun e!51921 () Bool)

(assert (=> d!19217 e!51921))

(declare-fun res!41509 () Bool)

(assert (=> d!19217 (=> res!41509 e!51921)))

(declare-fun lt!36902 () Bool)

(assert (=> d!19217 (= res!41509 (not lt!36902))))

(declare-fun lt!36904 () Bool)

(assert (=> d!19217 (= lt!36902 lt!36904)))

(declare-fun lt!36903 () Unit!2237)

(declare-fun e!51920 () Unit!2237)

(assert (=> d!19217 (= lt!36903 e!51920)))

(declare-fun c!12352 () Bool)

(assert (=> d!19217 (= c!12352 lt!36904)))

(assert (=> d!19217 (= lt!36904 (containsKey!141 (toList!729 lt!36497) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19217 (= (contains!736 lt!36497 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!36902)))

(declare-fun b!79515 () Bool)

(declare-fun lt!36901 () Unit!2237)

(assert (=> b!79515 (= e!51920 lt!36901)))

(assert (=> b!79515 (= lt!36901 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36497) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!79515 (isDefined!90 (getValueByKey!138 (toList!729 lt!36497) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79516 () Bool)

(declare-fun Unit!2299 () Unit!2237)

(assert (=> b!79516 (= e!51920 Unit!2299)))

(declare-fun b!79517 () Bool)

(assert (=> b!79517 (= e!51921 (isDefined!90 (getValueByKey!138 (toList!729 lt!36497) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!19217 c!12352) b!79515))

(assert (= (and d!19217 (not c!12352)) b!79516))

(assert (= (and d!19217 (not res!41509)) b!79517))

(declare-fun m!80617 () Bool)

(assert (=> d!19217 m!80617))

(declare-fun m!80619 () Bool)

(assert (=> b!79515 m!80619))

(assert (=> b!79515 m!79219))

(assert (=> b!79515 m!79219))

(declare-fun m!80621 () Bool)

(assert (=> b!79515 m!80621))

(assert (=> b!79517 m!79219))

(assert (=> b!79517 m!79219))

(assert (=> b!79517 m!80621))

(assert (=> d!18741 d!19217))

(declare-fun b!79518 () Bool)

(declare-fun e!51922 () Option!144)

(assert (=> b!79518 (= e!51922 (Some!143 (_2!1092 (h!2078 lt!36496))))))

(declare-fun b!79519 () Bool)

(declare-fun e!51923 () Option!144)

(assert (=> b!79519 (= e!51922 e!51923)))

(declare-fun c!12354 () Bool)

(assert (=> b!79519 (= c!12354 (and ((_ is Cons!1490) lt!36496) (not (= (_1!1092 (h!2078 lt!36496)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!79521 () Bool)

(assert (=> b!79521 (= e!51923 None!142)))

(declare-fun b!79520 () Bool)

(assert (=> b!79520 (= e!51923 (getValueByKey!138 (t!5132 lt!36496) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!12353 () Bool)

(declare-fun d!19219 () Bool)

(assert (=> d!19219 (= c!12353 (and ((_ is Cons!1490) lt!36496) (= (_1!1092 (h!2078 lt!36496)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!19219 (= (getValueByKey!138 lt!36496 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!51922)))

(assert (= (and d!19219 c!12353) b!79518))

(assert (= (and d!19219 (not c!12353)) b!79519))

(assert (= (and b!79519 c!12354) b!79520))

(assert (= (and b!79519 (not c!12354)) b!79521))

(declare-fun m!80623 () Bool)

(assert (=> b!79520 m!80623))

(assert (=> d!18741 d!19219))

(declare-fun d!19221 () Bool)

(assert (=> d!19221 (= (getValueByKey!138 lt!36496 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!36905 () Unit!2237)

(assert (=> d!19221 (= lt!36905 (choose!468 lt!36496 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!51924 () Bool)

(assert (=> d!19221 e!51924))

(declare-fun res!41510 () Bool)

(assert (=> d!19221 (=> (not res!41510) (not e!51924))))

(assert (=> d!19221 (= res!41510 (isStrictlySorted!282 lt!36496))))

(assert (=> d!19221 (= (lemmaContainsTupThenGetReturnValue!55 lt!36496 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!36905)))

(declare-fun b!79522 () Bool)

(declare-fun res!41511 () Bool)

(assert (=> b!79522 (=> (not res!41511) (not e!51924))))

(assert (=> b!79522 (= res!41511 (containsKey!141 lt!36496 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79523 () Bool)

(assert (=> b!79523 (= e!51924 (contains!737 lt!36496 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!19221 res!41510) b!79522))

(assert (= (and b!79522 res!41511) b!79523))

(assert (=> d!19221 m!79213))

(declare-fun m!80625 () Bool)

(assert (=> d!19221 m!80625))

(declare-fun m!80627 () Bool)

(assert (=> d!19221 m!80627))

(declare-fun m!80629 () Bool)

(assert (=> b!79522 m!80629))

(declare-fun m!80631 () Bool)

(assert (=> b!79523 m!80631))

(assert (=> d!18741 d!19221))

(declare-fun b!79524 () Bool)

(declare-fun e!51927 () List!1494)

(declare-fun e!51925 () List!1494)

(assert (=> b!79524 (= e!51927 e!51925)))

(declare-fun c!12356 () Bool)

(assert (=> b!79524 (= c!12356 (and ((_ is Cons!1490) (toList!729 call!7068)) (= (_1!1092 (h!2078 (toList!729 call!7068))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!79525 () Bool)

(declare-fun c!12355 () Bool)

(assert (=> b!79525 (= c!12355 (and ((_ is Cons!1490) (toList!729 call!7068)) (bvsgt (_1!1092 (h!2078 (toList!729 call!7068))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!51929 () List!1494)

(assert (=> b!79525 (= e!51925 e!51929)))

(declare-fun b!79526 () Bool)

(declare-fun call!7328 () List!1494)

(assert (=> b!79526 (= e!51929 call!7328)))

(declare-fun b!79527 () Bool)

(declare-fun call!7330 () List!1494)

(assert (=> b!79527 (= e!51925 call!7330)))

(declare-fun bm!7326 () Bool)

(assert (=> bm!7326 (= call!7328 call!7330)))

(declare-fun e!51928 () List!1494)

(declare-fun b!79528 () Bool)

(assert (=> b!79528 (= e!51928 (insertStrictlySorted!58 (t!5132 (toList!729 call!7068)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79529 () Bool)

(declare-fun call!7329 () List!1494)

(assert (=> b!79529 (= e!51927 call!7329)))

(declare-fun b!79530 () Bool)

(assert (=> b!79530 (= e!51928 (ite c!12356 (t!5132 (toList!729 call!7068)) (ite c!12355 (Cons!1490 (h!2078 (toList!729 call!7068)) (t!5132 (toList!729 call!7068))) Nil!1491)))))

(declare-fun d!19223 () Bool)

(declare-fun e!51926 () Bool)

(assert (=> d!19223 e!51926))

(declare-fun res!41513 () Bool)

(assert (=> d!19223 (=> (not res!41513) (not e!51926))))

(declare-fun lt!36906 () List!1494)

(assert (=> d!19223 (= res!41513 (isStrictlySorted!282 lt!36906))))

(assert (=> d!19223 (= lt!36906 e!51927)))

(declare-fun c!12358 () Bool)

(assert (=> d!19223 (= c!12358 (and ((_ is Cons!1490) (toList!729 call!7068)) (bvslt (_1!1092 (h!2078 (toList!729 call!7068))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!19223 (isStrictlySorted!282 (toList!729 call!7068))))

(assert (=> d!19223 (= (insertStrictlySorted!58 (toList!729 call!7068) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!36906)))

(declare-fun bm!7325 () Bool)

(assert (=> bm!7325 (= call!7330 call!7329)))

(declare-fun b!79531 () Bool)

(declare-fun res!41512 () Bool)

(assert (=> b!79531 (=> (not res!41512) (not e!51926))))

(assert (=> b!79531 (= res!41512 (containsKey!141 lt!36906 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79532 () Bool)

(assert (=> b!79532 (= e!51929 call!7328)))

(declare-fun b!79533 () Bool)

(assert (=> b!79533 (= e!51926 (contains!737 lt!36906 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!7327 () Bool)

(assert (=> bm!7327 (= call!7329 ($colon$colon!68 e!51928 (ite c!12358 (h!2078 (toList!729 call!7068)) (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!12357 () Bool)

(assert (=> bm!7327 (= c!12357 c!12358)))

(assert (= (and d!19223 c!12358) b!79529))

(assert (= (and d!19223 (not c!12358)) b!79524))

(assert (= (and b!79524 c!12356) b!79527))

(assert (= (and b!79524 (not c!12356)) b!79525))

(assert (= (and b!79525 c!12355) b!79532))

(assert (= (and b!79525 (not c!12355)) b!79526))

(assert (= (or b!79532 b!79526) bm!7326))

(assert (= (or b!79527 bm!7326) bm!7325))

(assert (= (or b!79529 bm!7325) bm!7327))

(assert (= (and bm!7327 c!12357) b!79528))

(assert (= (and bm!7327 (not c!12357)) b!79530))

(assert (= (and d!19223 res!41513) b!79531))

(assert (= (and b!79531 res!41512) b!79533))

(declare-fun m!80633 () Bool)

(assert (=> b!79533 m!80633))

(declare-fun m!80635 () Bool)

(assert (=> b!79528 m!80635))

(declare-fun m!80637 () Bool)

(assert (=> b!79531 m!80637))

(declare-fun m!80639 () Bool)

(assert (=> d!19223 m!80639))

(declare-fun m!80641 () Bool)

(assert (=> d!19223 m!80641))

(declare-fun m!80643 () Bool)

(assert (=> bm!7327 m!80643))

(assert (=> d!18741 d!19223))

(declare-fun d!19225 () Bool)

(declare-fun e!51931 () Bool)

(assert (=> d!19225 e!51931))

(declare-fun res!41514 () Bool)

(assert (=> d!19225 (=> res!41514 e!51931)))

(declare-fun lt!36908 () Bool)

(assert (=> d!19225 (= res!41514 (not lt!36908))))

(declare-fun lt!36910 () Bool)

(assert (=> d!19225 (= lt!36908 lt!36910)))

(declare-fun lt!36909 () Unit!2237)

(declare-fun e!51930 () Unit!2237)

(assert (=> d!19225 (= lt!36909 e!51930)))

(declare-fun c!12359 () Bool)

(assert (=> d!19225 (= c!12359 lt!36910)))

(assert (=> d!19225 (= lt!36910 (containsKey!141 (toList!729 lt!36446) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19225 (= (contains!736 lt!36446 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) lt!36908)))

(declare-fun b!79534 () Bool)

(declare-fun lt!36907 () Unit!2237)

(assert (=> b!79534 (= e!51930 lt!36907)))

(assert (=> b!79534 (= lt!36907 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36446) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> b!79534 (isDefined!90 (getValueByKey!138 (toList!729 lt!36446) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79535 () Bool)

(declare-fun Unit!2300 () Unit!2237)

(assert (=> b!79535 (= e!51930 Unit!2300)))

(declare-fun b!79536 () Bool)

(assert (=> b!79536 (= e!51931 (isDefined!90 (getValueByKey!138 (toList!729 lt!36446) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(assert (= (and d!19225 c!12359) b!79534))

(assert (= (and d!19225 (not c!12359)) b!79535))

(assert (= (and d!19225 (not res!41514)) b!79536))

(declare-fun m!80645 () Bool)

(assert (=> d!19225 m!80645))

(declare-fun m!80647 () Bool)

(assert (=> b!79534 m!80647))

(assert (=> b!79534 m!79059))

(assert (=> b!79534 m!79059))

(declare-fun m!80649 () Bool)

(assert (=> b!79534 m!80649))

(assert (=> b!79536 m!79059))

(assert (=> b!79536 m!79059))

(assert (=> b!79536 m!80649))

(assert (=> d!18689 d!19225))

(declare-fun b!79537 () Bool)

(declare-fun e!51932 () Option!144)

(assert (=> b!79537 (= e!51932 (Some!143 (_2!1092 (h!2078 lt!36445))))))

(declare-fun b!79538 () Bool)

(declare-fun e!51933 () Option!144)

(assert (=> b!79538 (= e!51932 e!51933)))

(declare-fun c!12361 () Bool)

(assert (=> b!79538 (= c!12361 (and ((_ is Cons!1490) lt!36445) (not (= (_1!1092 (h!2078 lt!36445)) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))))

(declare-fun b!79540 () Bool)

(assert (=> b!79540 (= e!51933 None!142)))

(declare-fun b!79539 () Bool)

(assert (=> b!79539 (= e!51933 (getValueByKey!138 (t!5132 lt!36445) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun d!19227 () Bool)

(declare-fun c!12360 () Bool)

(assert (=> d!19227 (= c!12360 (and ((_ is Cons!1490) lt!36445) (= (_1!1092 (h!2078 lt!36445)) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(assert (=> d!19227 (= (getValueByKey!138 lt!36445 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) e!51932)))

(assert (= (and d!19227 c!12360) b!79537))

(assert (= (and d!19227 (not c!12360)) b!79538))

(assert (= (and b!79538 c!12361) b!79539))

(assert (= (and b!79538 (not c!12361)) b!79540))

(declare-fun m!80651 () Bool)

(assert (=> b!79539 m!80651))

(assert (=> d!18689 d!19227))

(declare-fun d!19229 () Bool)

(assert (=> d!19229 (= (getValueByKey!138 lt!36445 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (Some!143 (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun lt!36911 () Unit!2237)

(assert (=> d!19229 (= lt!36911 (choose!468 lt!36445 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun e!51934 () Bool)

(assert (=> d!19229 e!51934))

(declare-fun res!41515 () Bool)

(assert (=> d!19229 (=> (not res!41515) (not e!51934))))

(assert (=> d!19229 (= res!41515 (isStrictlySorted!282 lt!36445))))

(assert (=> d!19229 (= (lemmaContainsTupThenGetReturnValue!55 lt!36445 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) lt!36911)))

(declare-fun b!79541 () Bool)

(declare-fun res!41516 () Bool)

(assert (=> b!79541 (=> (not res!41516) (not e!51934))))

(assert (=> b!79541 (= res!41516 (containsKey!141 lt!36445 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79542 () Bool)

(assert (=> b!79542 (= e!51934 (contains!737 lt!36445 (tuple2!2163 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(assert (= (and d!19229 res!41515) b!79541))

(assert (= (and b!79541 res!41516) b!79542))

(assert (=> d!19229 m!79053))

(declare-fun m!80653 () Bool)

(assert (=> d!19229 m!80653))

(declare-fun m!80655 () Bool)

(assert (=> d!19229 m!80655))

(declare-fun m!80657 () Bool)

(assert (=> b!79541 m!80657))

(declare-fun m!80659 () Bool)

(assert (=> b!79542 m!80659))

(assert (=> d!18689 d!19229))

(declare-fun b!79543 () Bool)

(declare-fun e!51937 () List!1494)

(declare-fun e!51935 () List!1494)

(assert (=> b!79543 (= e!51937 e!51935)))

(declare-fun c!12363 () Bool)

(assert (=> b!79543 (= c!12363 (and ((_ is Cons!1490) (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088)))) (= (_1!1092 (h!2078 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088))))) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun c!12362 () Bool)

(declare-fun b!79544 () Bool)

(assert (=> b!79544 (= c!12362 (and ((_ is Cons!1490) (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088)))) (bvsgt (_1!1092 (h!2078 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088))))) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun e!51939 () List!1494)

(assert (=> b!79544 (= e!51935 e!51939)))

(declare-fun b!79545 () Bool)

(declare-fun call!7331 () List!1494)

(assert (=> b!79545 (= e!51939 call!7331)))

(declare-fun b!79546 () Bool)

(declare-fun call!7333 () List!1494)

(assert (=> b!79546 (= e!51935 call!7333)))

(declare-fun bm!7329 () Bool)

(assert (=> bm!7329 (= call!7331 call!7333)))

(declare-fun b!79547 () Bool)

(declare-fun e!51938 () List!1494)

(assert (=> b!79547 (= e!51938 (insertStrictlySorted!58 (t!5132 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088)))) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79548 () Bool)

(declare-fun call!7332 () List!1494)

(assert (=> b!79548 (= e!51937 call!7332)))

(declare-fun b!79549 () Bool)

(assert (=> b!79549 (= e!51938 (ite c!12363 (t!5132 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088)))) (ite c!12362 (Cons!1490 (h!2078 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088)))) (t!5132 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088))))) Nil!1491)))))

(declare-fun d!19231 () Bool)

(declare-fun e!51936 () Bool)

(assert (=> d!19231 e!51936))

(declare-fun res!41518 () Bool)

(assert (=> d!19231 (=> (not res!41518) (not e!51936))))

(declare-fun lt!36912 () List!1494)

(assert (=> d!19231 (= res!41518 (isStrictlySorted!282 lt!36912))))

(assert (=> d!19231 (= lt!36912 e!51937)))

(declare-fun c!12365 () Bool)

(assert (=> d!19231 (= c!12365 (and ((_ is Cons!1490) (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088)))) (bvslt (_1!1092 (h!2078 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088))))) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(assert (=> d!19231 (isStrictlySorted!282 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088))))))

(assert (=> d!19231 (= (insertStrictlySorted!58 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088))) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) lt!36912)))

(declare-fun bm!7328 () Bool)

(assert (=> bm!7328 (= call!7333 call!7332)))

(declare-fun b!79550 () Bool)

(declare-fun res!41517 () Bool)

(assert (=> b!79550 (=> (not res!41517) (not e!51936))))

(assert (=> b!79550 (= res!41517 (containsKey!141 lt!36912 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79551 () Bool)

(assert (=> b!79551 (= e!51939 call!7331)))

(declare-fun b!79552 () Bool)

(assert (=> b!79552 (= e!51936 (contains!737 lt!36912 (tuple2!2163 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun bm!7330 () Bool)

(assert (=> bm!7330 (= call!7332 ($colon$colon!68 e!51938 (ite c!12365 (h!2078 (toList!729 (ite c!11936 call!7089 (ite c!11934 call!7092 call!7088)))) (tuple2!2163 (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_2!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))))

(declare-fun c!12364 () Bool)

(assert (=> bm!7330 (= c!12364 c!12365)))

(assert (= (and d!19231 c!12365) b!79548))

(assert (= (and d!19231 (not c!12365)) b!79543))

(assert (= (and b!79543 c!12363) b!79546))

(assert (= (and b!79543 (not c!12363)) b!79544))

(assert (= (and b!79544 c!12362) b!79551))

(assert (= (and b!79544 (not c!12362)) b!79545))

(assert (= (or b!79551 b!79545) bm!7329))

(assert (= (or b!79546 bm!7329) bm!7328))

(assert (= (or b!79548 bm!7328) bm!7330))

(assert (= (and bm!7330 c!12364) b!79547))

(assert (= (and bm!7330 (not c!12364)) b!79549))

(assert (= (and d!19231 res!41518) b!79550))

(assert (= (and b!79550 res!41517) b!79552))

(declare-fun m!80661 () Bool)

(assert (=> b!79552 m!80661))

(declare-fun m!80663 () Bool)

(assert (=> b!79547 m!80663))

(declare-fun m!80665 () Bool)

(assert (=> b!79550 m!80665))

(declare-fun m!80667 () Bool)

(assert (=> d!19231 m!80667))

(declare-fun m!80669 () Bool)

(assert (=> d!19231 m!80669))

(declare-fun m!80671 () Bool)

(assert (=> bm!7330 m!80671))

(assert (=> d!18689 d!19231))

(declare-fun d!19233 () Bool)

(declare-fun lt!36913 () Bool)

(assert (=> d!19233 (= lt!36913 (select (content!84 lt!35972) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun e!51941 () Bool)

(assert (=> d!19233 (= lt!36913 e!51941)))

(declare-fun res!41520 () Bool)

(assert (=> d!19233 (=> (not res!41520) (not e!51941))))

(assert (=> d!19233 (= res!41520 ((_ is Cons!1490) lt!35972))))

(assert (=> d!19233 (= (contains!737 lt!35972 (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))) lt!36913)))

(declare-fun b!79553 () Bool)

(declare-fun e!51940 () Bool)

(assert (=> b!79553 (= e!51941 e!51940)))

(declare-fun res!41519 () Bool)

(assert (=> b!79553 (=> res!41519 e!51940)))

(assert (=> b!79553 (= res!41519 (= (h!2078 lt!35972) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun b!79554 () Bool)

(assert (=> b!79554 (= e!51940 (contains!737 (t!5132 lt!35972) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(assert (= (and d!19233 res!41520) b!79553))

(assert (= (and b!79553 (not res!41519)) b!79554))

(declare-fun m!80673 () Bool)

(assert (=> d!19233 m!80673))

(declare-fun m!80675 () Bool)

(assert (=> d!19233 m!80675))

(declare-fun m!80677 () Bool)

(assert (=> b!79554 m!80677))

(assert (=> b!78460 d!19233))

(declare-fun b!79555 () Bool)

(declare-fun e!51942 () Option!144)

(assert (=> b!79555 (= e!51942 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36497)))))))

(declare-fun b!79556 () Bool)

(declare-fun e!51943 () Option!144)

(assert (=> b!79556 (= e!51942 e!51943)))

(declare-fun c!12367 () Bool)

(assert (=> b!79556 (= c!12367 (and ((_ is Cons!1490) (toList!729 lt!36497)) (not (= (_1!1092 (h!2078 (toList!729 lt!36497))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!79558 () Bool)

(assert (=> b!79558 (= e!51943 None!142)))

(declare-fun b!79557 () Bool)

(assert (=> b!79557 (= e!51943 (getValueByKey!138 (t!5132 (toList!729 lt!36497)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!12366 () Bool)

(declare-fun d!19235 () Bool)

(assert (=> d!19235 (= c!12366 (and ((_ is Cons!1490) (toList!729 lt!36497)) (= (_1!1092 (h!2078 (toList!729 lt!36497))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!19235 (= (getValueByKey!138 (toList!729 lt!36497) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!51942)))

(assert (= (and d!19235 c!12366) b!79555))

(assert (= (and d!19235 (not c!12366)) b!79556))

(assert (= (and b!79556 c!12367) b!79557))

(assert (= (and b!79556 (not c!12367)) b!79558))

(declare-fun m!80679 () Bool)

(assert (=> b!79557 m!80679))

(assert (=> b!78731 d!19235))

(assert (=> b!78481 d!19025))

(assert (=> b!78481 d!18753))

(declare-fun b!79559 () Bool)

(declare-fun e!51944 () Option!144)

(assert (=> b!79559 (= e!51944 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36446)))))))

(declare-fun b!79560 () Bool)

(declare-fun e!51945 () Option!144)

(assert (=> b!79560 (= e!51944 e!51945)))

(declare-fun c!12369 () Bool)

(assert (=> b!79560 (= c!12369 (and ((_ is Cons!1490) (toList!729 lt!36446)) (not (= (_1!1092 (h!2078 (toList!729 lt!36446))) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))))

(declare-fun b!79562 () Bool)

(assert (=> b!79562 (= e!51945 None!142)))

(declare-fun b!79561 () Bool)

(assert (=> b!79561 (= e!51945 (getValueByKey!138 (t!5132 (toList!729 lt!36446)) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun c!12368 () Bool)

(declare-fun d!19237 () Bool)

(assert (=> d!19237 (= c!12368 (and ((_ is Cons!1490) (toList!729 lt!36446)) (= (_1!1092 (h!2078 (toList!729 lt!36446))) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(assert (=> d!19237 (= (getValueByKey!138 (toList!729 lt!36446) (_1!1092 (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) e!51944)))

(assert (= (and d!19237 c!12368) b!79559))

(assert (= (and d!19237 (not c!12368)) b!79560))

(assert (= (and b!79560 c!12369) b!79561))

(assert (= (and b!79560 (not c!12369)) b!79562))

(declare-fun m!80681 () Bool)

(assert (=> b!79561 m!80681))

(assert (=> b!78627 d!19237))

(declare-fun d!19239 () Bool)

(assert (=> d!19239 (= (content!85 Nil!1492) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!18733 d!19239))

(declare-fun d!19241 () Bool)

(declare-fun e!51947 () Bool)

(assert (=> d!19241 e!51947))

(declare-fun res!41521 () Bool)

(assert (=> d!19241 (=> res!41521 e!51947)))

(declare-fun lt!36915 () Bool)

(assert (=> d!19241 (= res!41521 (not lt!36915))))

(declare-fun lt!36917 () Bool)

(assert (=> d!19241 (= lt!36915 lt!36917)))

(declare-fun lt!36916 () Unit!2237)

(declare-fun e!51946 () Unit!2237)

(assert (=> d!19241 (= lt!36916 e!51946)))

(declare-fun c!12370 () Bool)

(assert (=> d!19241 (= c!12370 lt!36917)))

(assert (=> d!19241 (= lt!36917 (containsKey!141 (toList!729 lt!36180) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19241 (= (contains!736 lt!36180 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36915)))

(declare-fun b!79563 () Bool)

(declare-fun lt!36914 () Unit!2237)

(assert (=> b!79563 (= e!51946 lt!36914)))

(assert (=> b!79563 (= lt!36914 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36180) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79563 (isDefined!90 (getValueByKey!138 (toList!729 lt!36180) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79564 () Bool)

(declare-fun Unit!2301 () Unit!2237)

(assert (=> b!79564 (= e!51946 Unit!2301)))

(declare-fun b!79565 () Bool)

(assert (=> b!79565 (= e!51947 (isDefined!90 (getValueByKey!138 (toList!729 lt!36180) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19241 c!12370) b!79563))

(assert (= (and d!19241 (not c!12370)) b!79564))

(assert (= (and d!19241 (not res!41521)) b!79565))

(declare-fun m!80683 () Bool)

(assert (=> d!19241 m!80683))

(declare-fun m!80685 () Bool)

(assert (=> b!79563 m!80685))

(declare-fun m!80687 () Bool)

(assert (=> b!79563 m!80687))

(assert (=> b!79563 m!80687))

(declare-fun m!80689 () Bool)

(assert (=> b!79563 m!80689))

(assert (=> b!79565 m!80687))

(assert (=> b!79565 m!80687))

(assert (=> b!79565 m!80689))

(assert (=> b!78266 d!19241))

(declare-fun d!19243 () Bool)

(declare-fun c!12371 () Bool)

(assert (=> d!19243 (= c!12371 ((_ is Nil!1491) (toList!729 lt!35953)))))

(declare-fun e!51948 () (InoxSet tuple2!2162))

(assert (=> d!19243 (= (content!84 (toList!729 lt!35953)) e!51948)))

(declare-fun b!79566 () Bool)

(assert (=> b!79566 (= e!51948 ((as const (Array tuple2!2162 Bool)) false))))

(declare-fun b!79567 () Bool)

(assert (=> b!79567 (= e!51948 ((_ map or) (store ((as const (Array tuple2!2162 Bool)) false) (h!2078 (toList!729 lt!35953)) true) (content!84 (t!5132 (toList!729 lt!35953)))))))

(assert (= (and d!19243 c!12371) b!79566))

(assert (= (and d!19243 (not c!12371)) b!79567))

(declare-fun m!80691 () Bool)

(assert (=> b!79567 m!80691))

(assert (=> b!79567 m!80417))

(assert (=> d!18607 d!19243))

(assert (=> d!18727 d!18729))

(assert (=> d!18727 d!18731))

(declare-fun d!19245 () Bool)

(assert (=> d!19245 (isDefined!90 (getValueByKey!138 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!19245 true))

(declare-fun _$12!326 () Unit!2237)

(assert (=> d!19245 (= (choose!469 (toList!729 lt!35796) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) _$12!326)))

(declare-fun bs!3375 () Bool)

(assert (= bs!3375 d!19245))

(assert (=> bs!3375 m!77885))

(assert (=> bs!3375 m!78275))

(assert (=> bs!3375 m!78275))

(assert (=> bs!3375 m!78277))

(assert (=> d!18727 d!19245))

(declare-fun d!19247 () Bool)

(declare-fun res!41522 () Bool)

(declare-fun e!51949 () Bool)

(assert (=> d!19247 (=> res!41522 e!51949)))

(assert (=> d!19247 (= res!41522 (or ((_ is Nil!1491) (toList!729 lt!35796)) ((_ is Nil!1491) (t!5132 (toList!729 lt!35796)))))))

(assert (=> d!19247 (= (isStrictlySorted!282 (toList!729 lt!35796)) e!51949)))

(declare-fun b!79568 () Bool)

(declare-fun e!51950 () Bool)

(assert (=> b!79568 (= e!51949 e!51950)))

(declare-fun res!41523 () Bool)

(assert (=> b!79568 (=> (not res!41523) (not e!51950))))

(assert (=> b!79568 (= res!41523 (bvslt (_1!1092 (h!2078 (toList!729 lt!35796))) (_1!1092 (h!2078 (t!5132 (toList!729 lt!35796))))))))

(declare-fun b!79569 () Bool)

(assert (=> b!79569 (= e!51950 (isStrictlySorted!282 (t!5132 (toList!729 lt!35796))))))

(assert (= (and d!19247 (not res!41522)) b!79568))

(assert (= (and b!79568 res!41523) b!79569))

(declare-fun m!80693 () Bool)

(assert (=> b!79569 m!80693))

(assert (=> d!18727 d!19247))

(declare-fun bm!7331 () Bool)

(declare-fun call!7334 () Bool)

(declare-fun c!12372 () Bool)

(assert (=> bm!7331 (= call!7334 (arrayNoDuplicates!0 (_keys!3931 (_2!1093 lt!36122)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12372 (Cons!1491 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000) Nil!1492) Nil!1492)))))

(declare-fun b!79571 () Bool)

(declare-fun e!51954 () Bool)

(assert (=> b!79571 (= e!51954 (contains!738 Nil!1492 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000)))))

(declare-fun b!79572 () Bool)

(declare-fun e!51952 () Bool)

(declare-fun e!51951 () Bool)

(assert (=> b!79572 (= e!51952 e!51951)))

(assert (=> b!79572 (= c!12372 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000)))))

(declare-fun b!79573 () Bool)

(declare-fun e!51953 () Bool)

(assert (=> b!79573 (= e!51953 e!51952)))

(declare-fun res!41524 () Bool)

(assert (=> b!79573 (=> (not res!41524) (not e!51952))))

(assert (=> b!79573 (= res!41524 (not e!51954))))

(declare-fun res!41526 () Bool)

(assert (=> b!79573 (=> (not res!41526) (not e!51954))))

(assert (=> b!79573 (= res!41526 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000)))))

(declare-fun b!79574 () Bool)

(assert (=> b!79574 (= e!51951 call!7334)))

(declare-fun d!19249 () Bool)

(declare-fun res!41525 () Bool)

(assert (=> d!19249 (=> res!41525 e!51953)))

(assert (=> d!19249 (= res!41525 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))))))

(assert (=> d!19249 (= (arrayNoDuplicates!0 (_keys!3931 (_2!1093 lt!36122)) #b00000000000000000000000000000000 Nil!1492) e!51953)))

(declare-fun b!79570 () Bool)

(assert (=> b!79570 (= e!51951 call!7334)))

(assert (= (and d!19249 (not res!41525)) b!79573))

(assert (= (and b!79573 res!41526) b!79571))

(assert (= (and b!79573 res!41524) b!79572))

(assert (= (and b!79572 c!12372) b!79574))

(assert (= (and b!79572 (not c!12372)) b!79570))

(assert (= (or b!79574 b!79570) bm!7331))

(assert (=> bm!7331 m!79853))

(declare-fun m!80695 () Bool)

(assert (=> bm!7331 m!80695))

(assert (=> b!79571 m!79853))

(assert (=> b!79571 m!79853))

(declare-fun m!80697 () Bool)

(assert (=> b!79571 m!80697))

(assert (=> b!79572 m!79853))

(assert (=> b!79572 m!79853))

(assert (=> b!79572 m!79855))

(assert (=> b!79573 m!79853))

(assert (=> b!79573 m!79853))

(assert (=> b!79573 m!79855))

(assert (=> b!78234 d!19249))

(declare-fun d!19251 () Bool)

(declare-fun lt!36918 () Bool)

(assert (=> d!19251 (= lt!36918 (select (content!84 (toList!729 lt!36321)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!51956 () Bool)

(assert (=> d!19251 (= lt!36918 e!51956)))

(declare-fun res!41528 () Bool)

(assert (=> d!19251 (=> (not res!41528) (not e!51956))))

(assert (=> d!19251 (= res!41528 ((_ is Cons!1490) (toList!729 lt!36321)))))

(assert (=> d!19251 (= (contains!737 (toList!729 lt!36321) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36918)))

(declare-fun b!79575 () Bool)

(declare-fun e!51955 () Bool)

(assert (=> b!79575 (= e!51956 e!51955)))

(declare-fun res!41527 () Bool)

(assert (=> b!79575 (=> res!41527 e!51955)))

(assert (=> b!79575 (= res!41527 (= (h!2078 (toList!729 lt!36321)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!79576 () Bool)

(assert (=> b!79576 (= e!51955 (contains!737 (t!5132 (toList!729 lt!36321)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!19251 res!41528) b!79575))

(assert (= (and b!79575 (not res!41527)) b!79576))

(declare-fun m!80699 () Bool)

(assert (=> d!19251 m!80699))

(declare-fun m!80701 () Bool)

(assert (=> d!19251 m!80701))

(declare-fun m!80703 () Bool)

(assert (=> b!79576 m!80703))

(assert (=> b!78478 d!19251))

(declare-fun b!79595 () Bool)

(declare-fun lt!36924 () SeekEntryResult!234)

(assert (=> b!79595 (and (bvsge (index!3072 lt!36924) #b00000000000000000000000000000000) (bvslt (index!3072 lt!36924) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun res!41537 () Bool)

(assert (=> b!79595 (= res!41537 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3072 lt!36924)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51971 () Bool)

(assert (=> b!79595 (=> res!41537 e!51971)))

(declare-fun e!51969 () SeekEntryResult!234)

(declare-fun b!79596 () Bool)

(assert (=> b!79596 (= e!51969 (Intermediate!234 true (toIndex!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (mask!6267 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!79597 () Bool)

(assert (=> b!79597 (and (bvsge (index!3072 lt!36924) #b00000000000000000000000000000000) (bvslt (index!3072 lt!36924) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun res!41535 () Bool)

(assert (=> b!79597 (= res!41535 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3072 lt!36924)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> b!79597 (=> res!41535 e!51971)))

(declare-fun e!51968 () Bool)

(assert (=> b!79597 (= e!51968 e!51971)))

(declare-fun b!79598 () Bool)

(declare-fun e!51970 () SeekEntryResult!234)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!79598 (= e!51970 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (mask!6267 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6267 newMap!16)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun b!79599 () Bool)

(declare-fun e!51967 () Bool)

(assert (=> b!79599 (= e!51967 e!51968)))

(declare-fun res!41536 () Bool)

(assert (=> b!79599 (= res!41536 (and ((_ is Intermediate!234) lt!36924) (not (undefined!1046 lt!36924)) (bvslt (x!11541 lt!36924) #b01111111111111111111111111111110) (bvsge (x!11541 lt!36924) #b00000000000000000000000000000000) (bvsge (x!11541 lt!36924) #b00000000000000000000000000000000)))))

(assert (=> b!79599 (=> (not res!41536) (not e!51968))))

(declare-fun b!79600 () Bool)

(assert (=> b!79600 (= e!51967 (bvsge (x!11541 lt!36924) #b01111111111111111111111111111110))))

(declare-fun b!79601 () Bool)

(assert (=> b!79601 (= e!51969 e!51970)))

(declare-fun lt!36923 () (_ BitVec 64))

(declare-fun c!12381 () Bool)

(assert (=> b!79601 (= c!12381 (or (= lt!36923 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (= (bvadd lt!36923 lt!36923) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!19253 () Bool)

(assert (=> d!19253 e!51967))

(declare-fun c!12380 () Bool)

(assert (=> d!19253 (= c!12380 (and ((_ is Intermediate!234) lt!36924) (undefined!1046 lt!36924)))))

(assert (=> d!19253 (= lt!36924 e!51969)))

(declare-fun c!12379 () Bool)

(assert (=> d!19253 (= c!12379 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!19253 (= lt!36923 (select (arr!1886 (_keys!3931 newMap!16)) (toIndex!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (mask!6267 newMap!16))))))

(assert (=> d!19253 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!19253 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (mask!6267 newMap!16)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)) lt!36924)))

(declare-fun b!79602 () Bool)

(assert (=> b!79602 (and (bvsge (index!3072 lt!36924) #b00000000000000000000000000000000) (bvslt (index!3072 lt!36924) (size!2127 (_keys!3931 newMap!16))))))

(assert (=> b!79602 (= e!51971 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3072 lt!36924)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79603 () Bool)

(assert (=> b!79603 (= e!51970 (Intermediate!234 false (toIndex!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (mask!6267 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!19253 c!12379) b!79596))

(assert (= (and d!19253 (not c!12379)) b!79601))

(assert (= (and b!79601 c!12381) b!79603))

(assert (= (and b!79601 (not c!12381)) b!79598))

(assert (= (and d!19253 c!12380) b!79600))

(assert (= (and d!19253 (not c!12380)) b!79599))

(assert (= (and b!79599 res!41536) b!79597))

(assert (= (and b!79597 (not res!41535)) b!79595))

(assert (= (and b!79595 (not res!41537)) b!79602))

(assert (=> b!79598 m!79151))

(declare-fun m!80705 () Bool)

(assert (=> b!79598 m!80705))

(assert (=> b!79598 m!80705))

(assert (=> b!79598 m!77885))

(declare-fun m!80707 () Bool)

(assert (=> b!79598 m!80707))

(declare-fun m!80709 () Bool)

(assert (=> b!79595 m!80709))

(assert (=> b!79602 m!80709))

(assert (=> b!79597 m!80709))

(assert (=> d!19253 m!79151))

(declare-fun m!80711 () Bool)

(assert (=> d!19253 m!80711))

(assert (=> d!19253 m!78355))

(assert (=> d!18721 d!19253))

(declare-fun d!19255 () Bool)

(declare-fun lt!36930 () (_ BitVec 32))

(declare-fun lt!36929 () (_ BitVec 32))

(assert (=> d!19255 (= lt!36930 (bvmul (bvxor lt!36929 (bvlshr lt!36929 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!19255 (= lt!36929 ((_ extract 31 0) (bvand (bvxor (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvlshr (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!19255 (and (bvsge (mask!6267 newMap!16) #b00000000000000000000000000000000) (let ((res!41538 (let ((h!2081 ((_ extract 31 0) (bvand (bvxor (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvlshr (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11643 (bvmul (bvxor h!2081 (bvlshr h!2081 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11643 (bvlshr x!11643 #b00000000000000000000000000001101)) (mask!6267 newMap!16)))))) (and (bvslt res!41538 (bvadd (mask!6267 newMap!16) #b00000000000000000000000000000001)) (bvsge res!41538 #b00000000000000000000000000000000))))))

(assert (=> d!19255 (= (toIndex!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (mask!6267 newMap!16)) (bvand (bvxor lt!36930 (bvlshr lt!36930 #b00000000000000000000000000001101)) (mask!6267 newMap!16)))))

(assert (=> d!18721 d!19255))

(assert (=> d!18721 d!18767))

(declare-fun lt!36931 () Bool)

(declare-fun d!19257 () Bool)

(assert (=> d!19257 (= lt!36931 (select (content!84 (toList!729 lt!36486)) (tuple2!2163 lt!35935 lt!35938)))))

(declare-fun e!51973 () Bool)

(assert (=> d!19257 (= lt!36931 e!51973)))

(declare-fun res!41540 () Bool)

(assert (=> d!19257 (=> (not res!41540) (not e!51973))))

(assert (=> d!19257 (= res!41540 ((_ is Cons!1490) (toList!729 lt!36486)))))

(assert (=> d!19257 (= (contains!737 (toList!729 lt!36486) (tuple2!2163 lt!35935 lt!35938)) lt!36931)))

(declare-fun b!79604 () Bool)

(declare-fun e!51972 () Bool)

(assert (=> b!79604 (= e!51973 e!51972)))

(declare-fun res!41539 () Bool)

(assert (=> b!79604 (=> res!41539 e!51972)))

(assert (=> b!79604 (= res!41539 (= (h!2078 (toList!729 lt!36486)) (tuple2!2163 lt!35935 lt!35938)))))

(declare-fun b!79605 () Bool)

(assert (=> b!79605 (= e!51972 (contains!737 (t!5132 (toList!729 lt!36486)) (tuple2!2163 lt!35935 lt!35938)))))

(assert (= (and d!19257 res!41540) b!79604))

(assert (= (and b!79604 (not res!41539)) b!79605))

(declare-fun m!80713 () Bool)

(assert (=> d!19257 m!80713))

(declare-fun m!80715 () Bool)

(assert (=> d!19257 m!80715))

(declare-fun m!80717 () Bool)

(assert (=> b!79605 m!80717))

(assert (=> b!78723 d!19257))

(declare-fun d!19259 () Bool)

(assert (=> d!19259 (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!36932 () Unit!2237)

(assert (=> d!19259 (= lt!36932 (choose!469 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51974 () Bool)

(assert (=> d!19259 e!51974))

(declare-fun res!41541 () Bool)

(assert (=> d!19259 (=> (not res!41541) (not e!51974))))

(assert (=> d!19259 (= res!41541 (isStrictlySorted!282 (toList!729 lt!35932)))))

(assert (=> d!19259 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000) lt!36932)))

(declare-fun b!79606 () Bool)

(assert (=> b!79606 (= e!51974 (containsKey!141 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19259 res!41541) b!79606))

(assert (=> d!19259 m!78559))

(assert (=> d!19259 m!78559))

(assert (=> d!19259 m!78561))

(declare-fun m!80719 () Bool)

(assert (=> d!19259 m!80719))

(assert (=> d!19259 m!80299))

(assert (=> b!79606 m!78555))

(assert (=> b!78321 d!19259))

(declare-fun d!19261 () Bool)

(assert (=> d!19261 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3376 () Bool)

(assert (= bs!3376 d!19261))

(assert (=> bs!3376 m!78559))

(declare-fun m!80721 () Bool)

(assert (=> bs!3376 m!80721))

(assert (=> b!78321 d!19261))

(declare-fun b!79607 () Bool)

(declare-fun e!51975 () Option!144)

(assert (=> b!79607 (= e!51975 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35932)))))))

(declare-fun b!79608 () Bool)

(declare-fun e!51976 () Option!144)

(assert (=> b!79608 (= e!51975 e!51976)))

(declare-fun c!12383 () Bool)

(assert (=> b!79608 (= c!12383 (and ((_ is Cons!1490) (toList!729 lt!35932)) (not (= (_1!1092 (h!2078 (toList!729 lt!35932))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79610 () Bool)

(assert (=> b!79610 (= e!51976 None!142)))

(declare-fun b!79609 () Bool)

(assert (=> b!79609 (= e!51976 (getValueByKey!138 (t!5132 (toList!729 lt!35932)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!19263 () Bool)

(declare-fun c!12382 () Bool)

(assert (=> d!19263 (= c!12382 (and ((_ is Cons!1490) (toList!729 lt!35932)) (= (_1!1092 (h!2078 (toList!729 lt!35932))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19263 (= (getValueByKey!138 (toList!729 lt!35932) #b0000000000000000000000000000000000000000000000000000000000000000) e!51975)))

(assert (= (and d!19263 c!12382) b!79607))

(assert (= (and d!19263 (not c!12382)) b!79608))

(assert (= (and b!79608 c!12383) b!79609))

(assert (= (and b!79608 (not c!12383)) b!79610))

(declare-fun m!80723 () Bool)

(assert (=> b!79609 m!80723))

(assert (=> b!78321 d!19263))

(declare-fun c!12384 () Bool)

(declare-fun call!7335 () Bool)

(declare-fun bm!7332 () Bool)

(assert (=> bm!7332 (= call!7335 (arrayNoDuplicates!0 (_keys!3931 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12384 (Cons!1491 (select (arr!1886 (_keys!3931 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!12017 (Cons!1491 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) Nil!1492) Nil!1492)) (ite c!12017 (Cons!1491 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) Nil!1492) Nil!1492))))))

(declare-fun b!79612 () Bool)

(declare-fun e!51980 () Bool)

(assert (=> b!79612 (= e!51980 (contains!738 (ite c!12017 (Cons!1491 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) Nil!1492) Nil!1492) (select (arr!1886 (_keys!3931 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!79613 () Bool)

(declare-fun e!51978 () Bool)

(declare-fun e!51977 () Bool)

(assert (=> b!79613 (= e!51978 e!51977)))

(assert (=> b!79613 (= c!12384 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!79614 () Bool)

(declare-fun e!51979 () Bool)

(assert (=> b!79614 (= e!51979 e!51978)))

(declare-fun res!41542 () Bool)

(assert (=> b!79614 (=> (not res!41542) (not e!51978))))

(assert (=> b!79614 (= res!41542 (not e!51980))))

(declare-fun res!41544 () Bool)

(assert (=> b!79614 (=> (not res!41544) (not e!51980))))

(assert (=> b!79614 (= res!41544 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!79615 () Bool)

(assert (=> b!79615 (= e!51977 call!7335)))

(declare-fun d!19265 () Bool)

(declare-fun res!41543 () Bool)

(assert (=> d!19265 (=> res!41543 e!51979)))

(assert (=> d!19265 (= res!41543 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!19265 (= (arrayNoDuplicates!0 (_keys!3931 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12017 (Cons!1491 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000) Nil!1492) Nil!1492)) e!51979)))

(declare-fun b!79611 () Bool)

(assert (=> b!79611 (= e!51977 call!7335)))

(assert (= (and d!19265 (not res!41543)) b!79614))

(assert (= (and b!79614 res!41544) b!79612))

(assert (= (and b!79614 res!41542) b!79613))

(assert (= (and b!79613 c!12384) b!79615))

(assert (= (and b!79613 (not c!12384)) b!79611))

(assert (= (or b!79615 b!79611) bm!7332))

(assert (=> bm!7332 m!79445))

(declare-fun m!80725 () Bool)

(assert (=> bm!7332 m!80725))

(assert (=> b!79612 m!79445))

(assert (=> b!79612 m!79445))

(declare-fun m!80727 () Bool)

(assert (=> b!79612 m!80727))

(assert (=> b!79613 m!79445))

(assert (=> b!79613 m!79445))

(assert (=> b!79613 m!79447))

(assert (=> b!79614 m!79445))

(assert (=> b!79614 m!79445))

(assert (=> b!79614 m!79447))

(assert (=> bm!7179 d!19265))

(declare-fun d!19267 () Bool)

(declare-fun res!41545 () Bool)

(declare-fun e!51981 () Bool)

(assert (=> d!19267 (=> res!41545 e!51981)))

(assert (=> d!19267 (= res!41545 (and ((_ is Cons!1490) (toList!729 lt!35969)) (= (_1!1092 (h!2078 (toList!729 lt!35969))) (_1!1092 lt!35792))))))

(assert (=> d!19267 (= (containsKey!141 (toList!729 lt!35969) (_1!1092 lt!35792)) e!51981)))

(declare-fun b!79616 () Bool)

(declare-fun e!51982 () Bool)

(assert (=> b!79616 (= e!51981 e!51982)))

(declare-fun res!41546 () Bool)

(assert (=> b!79616 (=> (not res!41546) (not e!51982))))

(assert (=> b!79616 (= res!41546 (and (or (not ((_ is Cons!1490) (toList!729 lt!35969))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35969))) (_1!1092 lt!35792))) ((_ is Cons!1490) (toList!729 lt!35969)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35969))) (_1!1092 lt!35792))))))

(declare-fun b!79617 () Bool)

(assert (=> b!79617 (= e!51982 (containsKey!141 (t!5132 (toList!729 lt!35969)) (_1!1092 lt!35792)))))

(assert (= (and d!19267 (not res!41545)) b!79616))

(assert (= (and b!79616 res!41546) b!79617))

(declare-fun m!80729 () Bool)

(assert (=> b!79617 m!80729))

(assert (=> d!18617 d!19267))

(declare-fun d!19269 () Bool)

(declare-fun lt!36933 () Bool)

(assert (=> d!19269 (= lt!36933 (select (content!84 lt!35956) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun e!51984 () Bool)

(assert (=> d!19269 (= lt!36933 e!51984)))

(declare-fun res!41548 () Bool)

(assert (=> d!19269 (=> (not res!41548) (not e!51984))))

(assert (=> d!19269 (= res!41548 ((_ is Cons!1490) lt!35956))))

(assert (=> d!19269 (= (contains!737 lt!35956 (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))) lt!36933)))

(declare-fun b!79618 () Bool)

(declare-fun e!51983 () Bool)

(assert (=> b!79618 (= e!51984 e!51983)))

(declare-fun res!41547 () Bool)

(assert (=> b!79618 (=> res!41547 e!51983)))

(assert (=> b!79618 (= res!41547 (= (h!2078 lt!35956) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun b!79619 () Bool)

(assert (=> b!79619 (= e!51983 (contains!737 (t!5132 lt!35956) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(assert (= (and d!19269 res!41548) b!79618))

(assert (= (and b!79618 (not res!41547)) b!79619))

(declare-fun m!80731 () Bool)

(assert (=> d!19269 m!80731))

(declare-fun m!80733 () Bool)

(assert (=> d!19269 m!80733))

(declare-fun m!80735 () Bool)

(assert (=> b!79619 m!80735))

(assert (=> b!78667 d!19269))

(declare-fun d!19271 () Bool)

(declare-fun res!41549 () Bool)

(declare-fun e!51985 () Bool)

(assert (=> d!19271 (=> res!41549 e!51985)))

(assert (=> d!19271 (= res!41549 (and ((_ is Cons!1490) lt!36335) (= (_1!1092 (h!2078 lt!36335)) (_1!1092 lt!35806))))))

(assert (=> d!19271 (= (containsKey!141 lt!36335 (_1!1092 lt!35806)) e!51985)))

(declare-fun b!79620 () Bool)

(declare-fun e!51986 () Bool)

(assert (=> b!79620 (= e!51985 e!51986)))

(declare-fun res!41550 () Bool)

(assert (=> b!79620 (=> (not res!41550) (not e!51986))))

(assert (=> b!79620 (= res!41550 (and (or (not ((_ is Cons!1490) lt!36335)) (bvsle (_1!1092 (h!2078 lt!36335)) (_1!1092 lt!35806))) ((_ is Cons!1490) lt!36335) (bvslt (_1!1092 (h!2078 lt!36335)) (_1!1092 lt!35806))))))

(declare-fun b!79621 () Bool)

(assert (=> b!79621 (= e!51986 (containsKey!141 (t!5132 lt!36335) (_1!1092 lt!35806)))))

(assert (= (and d!19271 (not res!41549)) b!79620))

(assert (= (and b!79620 res!41550) b!79621))

(declare-fun m!80737 () Bool)

(assert (=> b!79621 m!80737))

(assert (=> b!78520 d!19271))

(declare-fun d!19273 () Bool)

(declare-fun res!41551 () Bool)

(declare-fun e!51987 () Bool)

(assert (=> d!19273 (=> res!41551 e!51987)))

(assert (=> d!19273 (= res!41551 (and ((_ is Cons!1490) lt!35960) (= (_1!1092 (h!2078 lt!35960)) (_1!1092 lt!35806))))))

(assert (=> d!19273 (= (containsKey!141 lt!35960 (_1!1092 lt!35806)) e!51987)))

(declare-fun b!79622 () Bool)

(declare-fun e!51988 () Bool)

(assert (=> b!79622 (= e!51987 e!51988)))

(declare-fun res!41552 () Bool)

(assert (=> b!79622 (=> (not res!41552) (not e!51988))))

(assert (=> b!79622 (= res!41552 (and (or (not ((_ is Cons!1490) lt!35960)) (bvsle (_1!1092 (h!2078 lt!35960)) (_1!1092 lt!35806))) ((_ is Cons!1490) lt!35960) (bvslt (_1!1092 (h!2078 lt!35960)) (_1!1092 lt!35806))))))

(declare-fun b!79623 () Bool)

(assert (=> b!79623 (= e!51988 (containsKey!141 (t!5132 lt!35960) (_1!1092 lt!35806)))))

(assert (= (and d!19273 (not res!41551)) b!79622))

(assert (= (and b!79622 res!41552) b!79623))

(declare-fun m!80739 () Bool)

(assert (=> b!79623 m!80739))

(assert (=> b!78486 d!19273))

(declare-fun d!19275 () Bool)

(declare-fun res!41553 () Bool)

(declare-fun e!51989 () Bool)

(assert (=> d!19275 (=> res!41553 e!51989)))

(assert (=> d!19275 (= res!41553 (or ((_ is Nil!1491) lt!36335) ((_ is Nil!1491) (t!5132 lt!36335))))))

(assert (=> d!19275 (= (isStrictlySorted!282 lt!36335) e!51989)))

(declare-fun b!79624 () Bool)

(declare-fun e!51990 () Bool)

(assert (=> b!79624 (= e!51989 e!51990)))

(declare-fun res!41554 () Bool)

(assert (=> b!79624 (=> (not res!41554) (not e!51990))))

(assert (=> b!79624 (= res!41554 (bvslt (_1!1092 (h!2078 lt!36335)) (_1!1092 (h!2078 (t!5132 lt!36335)))))))

(declare-fun b!79625 () Bool)

(assert (=> b!79625 (= e!51990 (isStrictlySorted!282 (t!5132 lt!36335)))))

(assert (= (and d!19275 (not res!41553)) b!79624))

(assert (= (and b!79624 res!41554) b!79625))

(declare-fun m!80741 () Bool)

(assert (=> b!79625 m!80741))

(assert (=> d!18661 d!19275))

(declare-fun d!19277 () Bool)

(declare-fun res!41555 () Bool)

(declare-fun e!51991 () Bool)

(assert (=> d!19277 (=> res!41555 e!51991)))

(assert (=> d!19277 (= res!41555 (or ((_ is Nil!1491) (toList!729 lt!35790)) ((_ is Nil!1491) (t!5132 (toList!729 lt!35790)))))))

(assert (=> d!19277 (= (isStrictlySorted!282 (toList!729 lt!35790)) e!51991)))

(declare-fun b!79626 () Bool)

(declare-fun e!51992 () Bool)

(assert (=> b!79626 (= e!51991 e!51992)))

(declare-fun res!41556 () Bool)

(assert (=> b!79626 (=> (not res!41556) (not e!51992))))

(assert (=> b!79626 (= res!41556 (bvslt (_1!1092 (h!2078 (toList!729 lt!35790))) (_1!1092 (h!2078 (t!5132 (toList!729 lt!35790))))))))

(declare-fun b!79627 () Bool)

(assert (=> b!79627 (= e!51992 (isStrictlySorted!282 (t!5132 (toList!729 lt!35790))))))

(assert (= (and d!19277 (not res!41555)) b!79626))

(assert (= (and b!79626 res!41556) b!79627))

(assert (=> b!79627 m!79773))

(assert (=> d!18661 d!19277))

(declare-fun d!19279 () Bool)

(assert (not d!19279))

(assert (=> b!78721 d!19279))

(assert (=> b!78231 d!19019))

(assert (=> b!78231 d!19021))

(declare-fun d!19281 () Bool)

(declare-fun res!41557 () Bool)

(declare-fun e!51993 () Bool)

(assert (=> d!19281 (=> res!41557 e!51993)))

(assert (=> d!19281 (= res!41557 (and ((_ is Cons!1490) (toList!729 lt!35948)) (= (_1!1092 (h!2078 (toList!729 lt!35948))) (_1!1092 lt!35792))))))

(assert (=> d!19281 (= (containsKey!141 (toList!729 lt!35948) (_1!1092 lt!35792)) e!51993)))

(declare-fun b!79628 () Bool)

(declare-fun e!51994 () Bool)

(assert (=> b!79628 (= e!51993 e!51994)))

(declare-fun res!41558 () Bool)

(assert (=> b!79628 (=> (not res!41558) (not e!51994))))

(assert (=> b!79628 (= res!41558 (and (or (not ((_ is Cons!1490) (toList!729 lt!35948))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35948))) (_1!1092 lt!35792))) ((_ is Cons!1490) (toList!729 lt!35948)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35948))) (_1!1092 lt!35792))))))

(declare-fun b!79629 () Bool)

(assert (=> b!79629 (= e!51994 (containsKey!141 (t!5132 (toList!729 lt!35948)) (_1!1092 lt!35792)))))

(assert (= (and d!19281 (not res!41557)) b!79628))

(assert (= (and b!79628 res!41558) b!79629))

(declare-fun m!80743 () Bool)

(assert (=> b!79629 m!80743))

(assert (=> d!18663 d!19281))

(declare-fun d!19283 () Bool)

(declare-fun e!51996 () Bool)

(assert (=> d!19283 e!51996))

(declare-fun res!41559 () Bool)

(assert (=> d!19283 (=> res!41559 e!51996)))

(declare-fun lt!36935 () Bool)

(assert (=> d!19283 (= res!41559 (not lt!36935))))

(declare-fun lt!36937 () Bool)

(assert (=> d!19283 (= lt!36935 lt!36937)))

(declare-fun lt!36936 () Unit!2237)

(declare-fun e!51995 () Unit!2237)

(assert (=> d!19283 (= lt!36936 e!51995)))

(declare-fun c!12385 () Bool)

(assert (=> d!19283 (= c!12385 lt!36937)))

(assert (=> d!19283 (= lt!36937 (containsKey!141 (toList!729 lt!36313) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!19283 (= (contains!736 lt!36313 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36935)))

(declare-fun b!79630 () Bool)

(declare-fun lt!36934 () Unit!2237)

(assert (=> b!79630 (= e!51995 lt!36934)))

(assert (=> b!79630 (= lt!36934 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36313) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> b!79630 (isDefined!90 (getValueByKey!138 (toList!729 lt!36313) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79631 () Bool)

(declare-fun Unit!2302 () Unit!2237)

(assert (=> b!79631 (= e!51995 Unit!2302)))

(declare-fun b!79632 () Bool)

(assert (=> b!79632 (= e!51996 (isDefined!90 (getValueByKey!138 (toList!729 lt!36313) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (= (and d!19283 c!12385) b!79630))

(assert (= (and d!19283 (not c!12385)) b!79631))

(assert (= (and d!19283 (not res!41559)) b!79632))

(declare-fun m!80745 () Bool)

(assert (=> d!19283 m!80745))

(declare-fun m!80747 () Bool)

(assert (=> b!79630 m!80747))

(assert (=> b!79630 m!78855))

(assert (=> b!79630 m!78855))

(declare-fun m!80749 () Bool)

(assert (=> b!79630 m!80749))

(assert (=> b!79632 m!78855))

(assert (=> b!79632 m!78855))

(assert (=> b!79632 m!80749))

(assert (=> d!18637 d!19283))

(declare-fun b!79633 () Bool)

(declare-fun e!51997 () Option!144)

(assert (=> b!79633 (= e!51997 (Some!143 (_2!1092 (h!2078 lt!36312))))))

(declare-fun b!79634 () Bool)

(declare-fun e!51998 () Option!144)

(assert (=> b!79634 (= e!51997 e!51998)))

(declare-fun c!12387 () Bool)

(assert (=> b!79634 (= c!12387 (and ((_ is Cons!1490) lt!36312) (not (= (_1!1092 (h!2078 lt!36312)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!79636 () Bool)

(assert (=> b!79636 (= e!51998 None!142)))

(declare-fun b!79635 () Bool)

(assert (=> b!79635 (= e!51998 (getValueByKey!138 (t!5132 lt!36312) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun d!19285 () Bool)

(declare-fun c!12386 () Bool)

(assert (=> d!19285 (= c!12386 (and ((_ is Cons!1490) lt!36312) (= (_1!1092 (h!2078 lt!36312)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19285 (= (getValueByKey!138 lt!36312 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) e!51997)))

(assert (= (and d!19285 c!12386) b!79633))

(assert (= (and d!19285 (not c!12386)) b!79634))

(assert (= (and b!79634 c!12387) b!79635))

(assert (= (and b!79634 (not c!12387)) b!79636))

(declare-fun m!80751 () Bool)

(assert (=> b!79635 m!80751))

(assert (=> d!18637 d!19285))

(declare-fun d!19287 () Bool)

(assert (=> d!19287 (= (getValueByKey!138 lt!36312 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36938 () Unit!2237)

(assert (=> d!19287 (= lt!36938 (choose!468 lt!36312 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun e!51999 () Bool)

(assert (=> d!19287 e!51999))

(declare-fun res!41560 () Bool)

(assert (=> d!19287 (=> (not res!41560) (not e!51999))))

(assert (=> d!19287 (= res!41560 (isStrictlySorted!282 lt!36312))))

(assert (=> d!19287 (= (lemmaContainsTupThenGetReturnValue!55 lt!36312 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36938)))

(declare-fun b!79637 () Bool)

(declare-fun res!41561 () Bool)

(assert (=> b!79637 (=> (not res!41561) (not e!51999))))

(assert (=> b!79637 (= res!41561 (containsKey!141 lt!36312 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79638 () Bool)

(assert (=> b!79638 (= e!51999 (contains!737 lt!36312 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (= (and d!19287 res!41560) b!79637))

(assert (= (and b!79637 res!41561) b!79638))

(assert (=> d!19287 m!78849))

(declare-fun m!80753 () Bool)

(assert (=> d!19287 m!80753))

(declare-fun m!80755 () Bool)

(assert (=> d!19287 m!80755))

(declare-fun m!80757 () Bool)

(assert (=> b!79637 m!80757))

(declare-fun m!80759 () Bool)

(assert (=> b!79638 m!80759))

(assert (=> d!18637 d!19287))

(declare-fun b!79639 () Bool)

(declare-fun e!52002 () List!1494)

(declare-fun e!52000 () List!1494)

(assert (=> b!79639 (= e!52002 e!52000)))

(declare-fun c!12389 () Bool)

(assert (=> b!79639 (= c!12389 (and ((_ is Cons!1490) (toList!729 lt!35804)) (= (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun c!12388 () Bool)

(declare-fun b!79640 () Bool)

(assert (=> b!79640 (= c!12388 (and ((_ is Cons!1490) (toList!729 lt!35804)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun e!52004 () List!1494)

(assert (=> b!79640 (= e!52000 e!52004)))

(declare-fun b!79641 () Bool)

(declare-fun call!7336 () List!1494)

(assert (=> b!79641 (= e!52004 call!7336)))

(declare-fun b!79642 () Bool)

(declare-fun call!7338 () List!1494)

(assert (=> b!79642 (= e!52000 call!7338)))

(declare-fun bm!7334 () Bool)

(assert (=> bm!7334 (= call!7336 call!7338)))

(declare-fun e!52003 () List!1494)

(declare-fun b!79643 () Bool)

(assert (=> b!79643 (= e!52003 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35804)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79644 () Bool)

(declare-fun call!7337 () List!1494)

(assert (=> b!79644 (= e!52002 call!7337)))

(declare-fun b!79645 () Bool)

(assert (=> b!79645 (= e!52003 (ite c!12389 (t!5132 (toList!729 lt!35804)) (ite c!12388 (Cons!1490 (h!2078 (toList!729 lt!35804)) (t!5132 (toList!729 lt!35804))) Nil!1491)))))

(declare-fun d!19289 () Bool)

(declare-fun e!52001 () Bool)

(assert (=> d!19289 e!52001))

(declare-fun res!41563 () Bool)

(assert (=> d!19289 (=> (not res!41563) (not e!52001))))

(declare-fun lt!36939 () List!1494)

(assert (=> d!19289 (= res!41563 (isStrictlySorted!282 lt!36939))))

(assert (=> d!19289 (= lt!36939 e!52002)))

(declare-fun c!12391 () Bool)

(assert (=> d!19289 (= c!12391 (and ((_ is Cons!1490) (toList!729 lt!35804)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19289 (isStrictlySorted!282 (toList!729 lt!35804))))

(assert (=> d!19289 (= (insertStrictlySorted!58 (toList!729 lt!35804) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!36939)))

(declare-fun bm!7333 () Bool)

(assert (=> bm!7333 (= call!7338 call!7337)))

(declare-fun b!79646 () Bool)

(declare-fun res!41562 () Bool)

(assert (=> b!79646 (=> (not res!41562) (not e!52001))))

(assert (=> b!79646 (= res!41562 (containsKey!141 lt!36939 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79647 () Bool)

(assert (=> b!79647 (= e!52004 call!7336)))

(declare-fun b!79648 () Bool)

(assert (=> b!79648 (= e!52001 (contains!737 lt!36939 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun bm!7335 () Bool)

(assert (=> bm!7335 (= call!7337 ($colon$colon!68 e!52003 (ite c!12391 (h!2078 (toList!729 lt!35804)) (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun c!12390 () Bool)

(assert (=> bm!7335 (= c!12390 c!12391)))

(assert (= (and d!19289 c!12391) b!79644))

(assert (= (and d!19289 (not c!12391)) b!79639))

(assert (= (and b!79639 c!12389) b!79642))

(assert (= (and b!79639 (not c!12389)) b!79640))

(assert (= (and b!79640 c!12388) b!79647))

(assert (= (and b!79640 (not c!12388)) b!79641))

(assert (= (or b!79647 b!79641) bm!7334))

(assert (= (or b!79642 bm!7334) bm!7333))

(assert (= (or b!79644 bm!7333) bm!7335))

(assert (= (and bm!7335 c!12390) b!79643))

(assert (= (and bm!7335 (not c!12390)) b!79645))

(assert (= (and d!19289 res!41563) b!79646))

(assert (= (and b!79646 res!41562) b!79648))

(declare-fun m!80761 () Bool)

(assert (=> b!79648 m!80761))

(declare-fun m!80763 () Bool)

(assert (=> b!79643 m!80763))

(declare-fun m!80765 () Bool)

(assert (=> b!79646 m!80765))

(declare-fun m!80767 () Bool)

(assert (=> d!19289 m!80767))

(assert (=> d!19289 m!78797))

(declare-fun m!80769 () Bool)

(assert (=> bm!7335 m!80769))

(assert (=> d!18637 d!19289))

(declare-fun d!19291 () Bool)

(assert (=> d!19291 (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!36940 () Unit!2237)

(assert (=> d!19291 (= lt!36940 (choose!469 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!52005 () Bool)

(assert (=> d!19291 e!52005))

(declare-fun res!41564 () Bool)

(assert (=> d!19291 (=> (not res!41564) (not e!52005))))

(assert (=> d!19291 (= res!41564 (isStrictlySorted!282 (toList!729 lt!35932)))))

(assert (=> d!19291 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36940)))

(declare-fun b!79649 () Bool)

(assert (=> b!79649 (= e!52005 (containsKey!141 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19291 res!41564) b!79649))

(assert (=> d!19291 m!78085))

(assert (=> d!19291 m!78537))

(assert (=> d!19291 m!78537))

(assert (=> d!19291 m!78539))

(assert (=> d!19291 m!78085))

(declare-fun m!80771 () Bool)

(assert (=> d!19291 m!80771))

(assert (=> d!19291 m!80299))

(assert (=> b!79649 m!78085))

(assert (=> b!79649 m!78533))

(assert (=> b!78302 d!19291))

(declare-fun d!19293 () Bool)

(assert (=> d!19293 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3377 () Bool)

(assert (= bs!3377 d!19293))

(assert (=> bs!3377 m!78537))

(declare-fun m!80773 () Bool)

(assert (=> bs!3377 m!80773))

(assert (=> b!78302 d!19293))

(declare-fun b!79650 () Bool)

(declare-fun e!52006 () Option!144)

(assert (=> b!79650 (= e!52006 (Some!143 (_2!1092 (h!2078 (toList!729 lt!35932)))))))

(declare-fun b!79651 () Bool)

(declare-fun e!52007 () Option!144)

(assert (=> b!79651 (= e!52006 e!52007)))

(declare-fun c!12393 () Bool)

(assert (=> b!79651 (= c!12393 (and ((_ is Cons!1490) (toList!729 lt!35932)) (not (= (_1!1092 (h!2078 (toList!729 lt!35932))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!79653 () Bool)

(assert (=> b!79653 (= e!52007 None!142)))

(declare-fun b!79652 () Bool)

(assert (=> b!79652 (= e!52007 (getValueByKey!138 (t!5132 (toList!729 lt!35932)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!19295 () Bool)

(declare-fun c!12392 () Bool)

(assert (=> d!19295 (= c!12392 (and ((_ is Cons!1490) (toList!729 lt!35932)) (= (_1!1092 (h!2078 (toList!729 lt!35932))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19295 (= (getValueByKey!138 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!52006)))

(assert (= (and d!19295 c!12392) b!79650))

(assert (= (and d!19295 (not c!12392)) b!79651))

(assert (= (and b!79651 c!12393) b!79652))

(assert (= (and b!79651 (not c!12393)) b!79653))

(assert (=> b!79652 m!78085))

(declare-fun m!80775 () Bool)

(assert (=> b!79652 m!80775))

(assert (=> b!78302 d!19295))

(declare-fun b!79657 () Bool)

(declare-fun e!52008 () Bool)

(assert (=> b!79657 (= e!52008 (and (bvsge (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000000) (bvsle (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000011) (bvsge (_vacant!414 (_2!1093 lt!36122)) #b00000000000000000000000000000000)))))

(declare-fun b!79655 () Bool)

(declare-fun res!41565 () Bool)

(assert (=> b!79655 (=> (not res!41565) (not e!52008))))

(assert (=> b!79655 (= res!41565 (bvsge (size!2133 (_2!1093 lt!36122)) (_size!414 (_2!1093 lt!36122))))))

(declare-fun b!79654 () Bool)

(declare-fun res!41566 () Bool)

(assert (=> b!79654 (=> (not res!41566) (not e!52008))))

(assert (=> b!79654 (= res!41566 (and (= (size!2128 (_values!2254 (_2!1093 lt!36122))) (bvadd (mask!6267 (_2!1093 lt!36122)) #b00000000000000000000000000000001)) (= (size!2127 (_keys!3931 (_2!1093 lt!36122))) (size!2128 (_values!2254 (_2!1093 lt!36122)))) (bvsge (_size!414 (_2!1093 lt!36122)) #b00000000000000000000000000000000) (bvsle (_size!414 (_2!1093 lt!36122)) (bvadd (mask!6267 (_2!1093 lt!36122)) #b00000000000000000000000000000001))))))

(declare-fun b!79656 () Bool)

(declare-fun res!41568 () Bool)

(assert (=> b!79656 (=> (not res!41568) (not e!52008))))

(assert (=> b!79656 (= res!41568 (= (size!2133 (_2!1093 lt!36122)) (bvadd (_size!414 (_2!1093 lt!36122)) (bvsdiv (bvadd (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!19297 () Bool)

(declare-fun res!41567 () Bool)

(assert (=> d!19297 (=> (not res!41567) (not e!52008))))

(assert (=> d!19297 (= res!41567 (validMask!0 (mask!6267 (_2!1093 lt!36122))))))

(assert (=> d!19297 (= (simpleValid!55 (_2!1093 lt!36122)) e!52008)))

(assert (= (and d!19297 res!41567) b!79654))

(assert (= (and b!79654 res!41566) b!79655))

(assert (= (and b!79655 res!41565) b!79656))

(assert (= (and b!79656 res!41568) b!79657))

(declare-fun m!80777 () Bool)

(assert (=> b!79655 m!80777))

(assert (=> b!79656 m!80777))

(declare-fun m!80779 () Bool)

(assert (=> d!19297 m!80779))

(assert (=> d!18519 d!19297))

(declare-fun d!19299 () Bool)

(declare-fun lt!36941 () Bool)

(assert (=> d!19299 (= lt!36941 (select (content!84 (t!5132 (toList!729 lt!35965))) lt!35806))))

(declare-fun e!52010 () Bool)

(assert (=> d!19299 (= lt!36941 e!52010)))

(declare-fun res!41570 () Bool)

(assert (=> d!19299 (=> (not res!41570) (not e!52010))))

(assert (=> d!19299 (= res!41570 ((_ is Cons!1490) (t!5132 (toList!729 lt!35965))))))

(assert (=> d!19299 (= (contains!737 (t!5132 (toList!729 lt!35965)) lt!35806) lt!36941)))

(declare-fun b!79658 () Bool)

(declare-fun e!52009 () Bool)

(assert (=> b!79658 (= e!52010 e!52009)))

(declare-fun res!41569 () Bool)

(assert (=> b!79658 (=> res!41569 e!52009)))

(assert (=> b!79658 (= res!41569 (= (h!2078 (t!5132 (toList!729 lt!35965))) lt!35806))))

(declare-fun b!79659 () Bool)

(assert (=> b!79659 (= e!52009 (contains!737 (t!5132 (t!5132 (toList!729 lt!35965))) lt!35806))))

(assert (= (and d!19299 res!41570) b!79658))

(assert (= (and b!79658 (not res!41569)) b!79659))

(declare-fun m!80781 () Bool)

(assert (=> d!19299 m!80781))

(declare-fun m!80783 () Bool)

(assert (=> d!19299 m!80783))

(declare-fun m!80785 () Bool)

(assert (=> b!79659 m!80785))

(assert (=> b!78308 d!19299))

(declare-fun d!19301 () Bool)

(assert (=> d!19301 (= ($colon$colon!68 e!51279 (ite c!12039 (h!2078 (toList!729 lt!35804)) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792)))) (Cons!1490 (ite c!12039 (h!2078 (toList!729 lt!35804)) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))) e!51279))))

(assert (=> bm!7195 d!19301))

(assert (=> b!78278 d!18833))

(declare-fun b!79660 () Bool)

(declare-fun e!52011 () Option!144)

(assert (=> b!79660 (= e!52011 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36309)))))))

(declare-fun b!79661 () Bool)

(declare-fun e!52012 () Option!144)

(assert (=> b!79661 (= e!52011 e!52012)))

(declare-fun c!12395 () Bool)

(assert (=> b!79661 (= c!12395 (and ((_ is Cons!1490) (toList!729 lt!36309)) (not (= (_1!1092 (h!2078 (toList!729 lt!36309))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!79663 () Bool)

(assert (=> b!79663 (= e!52012 None!142)))

(declare-fun b!79662 () Bool)

(assert (=> b!79662 (= e!52012 (getValueByKey!138 (t!5132 (toList!729 lt!36309)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun d!19303 () Bool)

(declare-fun c!12394 () Bool)

(assert (=> d!19303 (= c!12394 (and ((_ is Cons!1490) (toList!729 lt!36309)) (= (_1!1092 (h!2078 (toList!729 lt!36309))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19303 (= (getValueByKey!138 (toList!729 lt!36309) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) e!52011)))

(assert (= (and d!19303 c!12394) b!79660))

(assert (= (and d!19303 (not c!12394)) b!79661))

(assert (= (and b!79661 c!12395) b!79662))

(assert (= (and b!79661 (not c!12395)) b!79663))

(declare-fun m!80787 () Bool)

(assert (=> b!79662 m!80787))

(assert (=> b!78471 d!19303))

(declare-fun d!19305 () Bool)

(declare-fun lt!36942 () Bool)

(assert (=> d!19305 (= lt!36942 (select (content!85 Nil!1492) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!52014 () Bool)

(assert (=> d!19305 (= lt!36942 e!52014)))

(declare-fun res!41572 () Bool)

(assert (=> d!19305 (=> (not res!41572) (not e!52014))))

(assert (=> d!19305 (= res!41572 ((_ is Cons!1491) Nil!1492))))

(assert (=> d!19305 (= (contains!738 Nil!1492 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) lt!36942)))

(declare-fun b!79664 () Bool)

(declare-fun e!52013 () Bool)

(assert (=> b!79664 (= e!52014 e!52013)))

(declare-fun res!41571 () Bool)

(assert (=> b!79664 (=> res!41571 e!52013)))

(assert (=> b!79664 (= res!41571 (= (h!2079 Nil!1492) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79665 () Bool)

(assert (=> b!79665 (= e!52013 (contains!738 (t!5133 Nil!1492) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!19305 res!41572) b!79664))

(assert (= (and b!79664 (not res!41571)) b!79665))

(assert (=> d!19305 m!79181))

(assert (=> d!19305 m!78435))

(declare-fun m!80789 () Bool)

(assert (=> d!19305 m!80789))

(assert (=> b!79665 m!78435))

(declare-fun m!80791 () Bool)

(assert (=> b!79665 m!80791))

(assert (=> b!78375 d!19305))

(declare-fun d!19307 () Bool)

(declare-fun e!52016 () Bool)

(assert (=> d!19307 e!52016))

(declare-fun res!41573 () Bool)

(assert (=> d!19307 (=> res!41573 e!52016)))

(declare-fun lt!36944 () Bool)

(assert (=> d!19307 (= res!41573 (not lt!36944))))

(declare-fun lt!36946 () Bool)

(assert (=> d!19307 (= lt!36944 lt!36946)))

(declare-fun lt!36945 () Unit!2237)

(declare-fun e!52015 () Unit!2237)

(assert (=> d!19307 (= lt!36945 e!52015)))

(declare-fun c!12396 () Bool)

(assert (=> d!19307 (= c!12396 lt!36946)))

(assert (=> d!19307 (= lt!36946 (containsKey!141 (toList!729 lt!36317) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!19307 (= (contains!736 lt!36317 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36944)))

(declare-fun b!79666 () Bool)

(declare-fun lt!36943 () Unit!2237)

(assert (=> b!79666 (= e!52015 lt!36943)))

(assert (=> b!79666 (= lt!36943 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36317) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> b!79666 (isDefined!90 (getValueByKey!138 (toList!729 lt!36317) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79667 () Bool)

(declare-fun Unit!2303 () Unit!2237)

(assert (=> b!79667 (= e!52015 Unit!2303)))

(declare-fun b!79668 () Bool)

(assert (=> b!79668 (= e!52016 (isDefined!90 (getValueByKey!138 (toList!729 lt!36317) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19307 c!12396) b!79666))

(assert (= (and d!19307 (not c!12396)) b!79667))

(assert (= (and d!19307 (not res!41573)) b!79668))

(declare-fun m!80793 () Bool)

(assert (=> d!19307 m!80793))

(declare-fun m!80795 () Bool)

(assert (=> b!79666 m!80795))

(assert (=> b!79666 m!78867))

(assert (=> b!79666 m!78867))

(declare-fun m!80797 () Bool)

(assert (=> b!79666 m!80797))

(assert (=> b!79668 m!78867))

(assert (=> b!79668 m!78867))

(assert (=> b!79668 m!80797))

(assert (=> d!18641 d!19307))

(declare-fun b!79669 () Bool)

(declare-fun e!52017 () Option!144)

(assert (=> b!79669 (= e!52017 (Some!143 (_2!1092 (h!2078 lt!36316))))))

(declare-fun b!79670 () Bool)

(declare-fun e!52018 () Option!144)

(assert (=> b!79670 (= e!52017 e!52018)))

(declare-fun c!12398 () Bool)

(assert (=> b!79670 (= c!12398 (and ((_ is Cons!1490) lt!36316) (not (= (_1!1092 (h!2078 lt!36316)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79672 () Bool)

(assert (=> b!79672 (= e!52018 None!142)))

(declare-fun b!79671 () Bool)

(assert (=> b!79671 (= e!52018 (getValueByKey!138 (t!5132 lt!36316) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19309 () Bool)

(declare-fun c!12397 () Bool)

(assert (=> d!19309 (= c!12397 (and ((_ is Cons!1490) lt!36316) (= (_1!1092 (h!2078 lt!36316)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19309 (= (getValueByKey!138 lt!36316 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52017)))

(assert (= (and d!19309 c!12397) b!79669))

(assert (= (and d!19309 (not c!12397)) b!79670))

(assert (= (and b!79670 c!12398) b!79671))

(assert (= (and b!79670 (not c!12398)) b!79672))

(declare-fun m!80799 () Bool)

(assert (=> b!79671 m!80799))

(assert (=> d!18641 d!19309))

(declare-fun d!19311 () Bool)

(assert (=> d!19311 (= (getValueByKey!138 lt!36316 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36947 () Unit!2237)

(assert (=> d!19311 (= lt!36947 (choose!468 lt!36316 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!52019 () Bool)

(assert (=> d!19311 e!52019))

(declare-fun res!41574 () Bool)

(assert (=> d!19311 (=> (not res!41574) (not e!52019))))

(assert (=> d!19311 (= res!41574 (isStrictlySorted!282 lt!36316))))

(assert (=> d!19311 (= (lemmaContainsTupThenGetReturnValue!55 lt!36316 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36947)))

(declare-fun b!79673 () Bool)

(declare-fun res!41575 () Bool)

(assert (=> b!79673 (=> (not res!41575) (not e!52019))))

(assert (=> b!79673 (= res!41575 (containsKey!141 lt!36316 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79674 () Bool)

(assert (=> b!79674 (= e!52019 (contains!737 lt!36316 (tuple2!2163 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19311 res!41574) b!79673))

(assert (= (and b!79673 res!41575) b!79674))

(assert (=> d!19311 m!78861))

(declare-fun m!80801 () Bool)

(assert (=> d!19311 m!80801))

(declare-fun m!80803 () Bool)

(assert (=> d!19311 m!80803))

(declare-fun m!80805 () Bool)

(assert (=> b!79673 m!80805))

(declare-fun m!80807 () Bool)

(assert (=> b!79674 m!80807))

(assert (=> d!18641 d!19311))

(declare-fun b!79675 () Bool)

(declare-fun e!52022 () List!1494)

(declare-fun e!52020 () List!1494)

(assert (=> b!79675 (= e!52022 e!52020)))

(declare-fun c!12400 () Bool)

(assert (=> b!79675 (= c!12400 (and ((_ is Cons!1490) (toList!729 lt!35804)) (= (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79676 () Bool)

(declare-fun c!12399 () Bool)

(assert (=> b!79676 (= c!12399 (and ((_ is Cons!1490) (toList!729 lt!35804)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun e!52024 () List!1494)

(assert (=> b!79676 (= e!52020 e!52024)))

(declare-fun b!79677 () Bool)

(declare-fun call!7339 () List!1494)

(assert (=> b!79677 (= e!52024 call!7339)))

(declare-fun b!79678 () Bool)

(declare-fun call!7341 () List!1494)

(assert (=> b!79678 (= e!52020 call!7341)))

(declare-fun bm!7337 () Bool)

(assert (=> bm!7337 (= call!7339 call!7341)))

(declare-fun b!79679 () Bool)

(declare-fun e!52023 () List!1494)

(assert (=> b!79679 (= e!52023 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35804)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79680 () Bool)

(declare-fun call!7340 () List!1494)

(assert (=> b!79680 (= e!52022 call!7340)))

(declare-fun b!79681 () Bool)

(assert (=> b!79681 (= e!52023 (ite c!12400 (t!5132 (toList!729 lt!35804)) (ite c!12399 (Cons!1490 (h!2078 (toList!729 lt!35804)) (t!5132 (toList!729 lt!35804))) Nil!1491)))))

(declare-fun d!19313 () Bool)

(declare-fun e!52021 () Bool)

(assert (=> d!19313 e!52021))

(declare-fun res!41577 () Bool)

(assert (=> d!19313 (=> (not res!41577) (not e!52021))))

(declare-fun lt!36948 () List!1494)

(assert (=> d!19313 (= res!41577 (isStrictlySorted!282 lt!36948))))

(assert (=> d!19313 (= lt!36948 e!52022)))

(declare-fun c!12402 () Bool)

(assert (=> d!19313 (= c!12402 (and ((_ is Cons!1490) (toList!729 lt!35804)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35804))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19313 (isStrictlySorted!282 (toList!729 lt!35804))))

(assert (=> d!19313 (= (insertStrictlySorted!58 (toList!729 lt!35804) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36948)))

(declare-fun bm!7336 () Bool)

(assert (=> bm!7336 (= call!7341 call!7340)))

(declare-fun b!79682 () Bool)

(declare-fun res!41576 () Bool)

(assert (=> b!79682 (=> (not res!41576) (not e!52021))))

(assert (=> b!79682 (= res!41576 (containsKey!141 lt!36948 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79683 () Bool)

(assert (=> b!79683 (= e!52024 call!7339)))

(declare-fun b!79684 () Bool)

(assert (=> b!79684 (= e!52021 (contains!737 lt!36948 (tuple2!2163 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun bm!7338 () Bool)

(assert (=> bm!7338 (= call!7340 ($colon$colon!68 e!52023 (ite c!12402 (h!2078 (toList!729 lt!35804)) (tuple2!2163 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun c!12401 () Bool)

(assert (=> bm!7338 (= c!12401 c!12402)))

(assert (= (and d!19313 c!12402) b!79680))

(assert (= (and d!19313 (not c!12402)) b!79675))

(assert (= (and b!79675 c!12400) b!79678))

(assert (= (and b!79675 (not c!12400)) b!79676))

(assert (= (and b!79676 c!12399) b!79683))

(assert (= (and b!79676 (not c!12399)) b!79677))

(assert (= (or b!79683 b!79677) bm!7337))

(assert (= (or b!79678 bm!7337) bm!7336))

(assert (= (or b!79680 bm!7336) bm!7338))

(assert (= (and bm!7338 c!12401) b!79679))

(assert (= (and bm!7338 (not c!12401)) b!79681))

(assert (= (and d!19313 res!41577) b!79682))

(assert (= (and b!79682 res!41576) b!79684))

(declare-fun m!80809 () Bool)

(assert (=> b!79684 m!80809))

(declare-fun m!80811 () Bool)

(assert (=> b!79679 m!80811))

(declare-fun m!80813 () Bool)

(assert (=> b!79682 m!80813))

(declare-fun m!80815 () Bool)

(assert (=> d!19313 m!80815))

(assert (=> d!19313 m!78797))

(declare-fun m!80817 () Bool)

(assert (=> bm!7338 m!80817))

(assert (=> d!18641 d!19313))

(assert (=> d!18521 d!18721))

(declare-fun d!19315 () Bool)

(declare-fun e!52027 () Bool)

(assert (=> d!19315 e!52027))

(declare-fun res!41582 () Bool)

(assert (=> d!19315 (=> (not res!41582) (not e!52027))))

(declare-fun lt!36951 () SeekEntryResult!234)

(assert (=> d!19315 (= res!41582 ((_ is Found!234) lt!36951))))

(assert (=> d!19315 (= lt!36951 (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(assert (=> d!19315 true))

(declare-fun _$33!63 () Unit!2237)

(assert (=> d!19315 (= (choose!463 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)) _$33!63)))

(declare-fun b!79689 () Bool)

(declare-fun res!41583 () Bool)

(assert (=> b!79689 (=> (not res!41583) (not e!52027))))

(assert (=> b!79689 (= res!41583 (inRange!0 (index!3071 lt!36951) (mask!6267 newMap!16)))))

(declare-fun b!79690 () Bool)

(assert (=> b!79690 (= e!52027 (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36951)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!19315 res!41582) b!79689))

(assert (= (and b!79689 res!41583) b!79690))

(assert (=> d!19315 m!77885))

(assert (=> d!19315 m!78327))

(declare-fun m!80819 () Bool)

(assert (=> b!79689 m!80819))

(declare-fun m!80821 () Bool)

(assert (=> b!79690 m!80821))

(assert (=> d!18521 d!19315))

(assert (=> d!18521 d!18767))

(declare-fun d!19317 () Bool)

(declare-fun lt!36952 () Bool)

(assert (=> d!19317 (= lt!36952 (select (content!84 lt!36335) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun e!52029 () Bool)

(assert (=> d!19317 (= lt!36952 e!52029)))

(declare-fun res!41585 () Bool)

(assert (=> d!19317 (=> (not res!41585) (not e!52029))))

(assert (=> d!19317 (= res!41585 ((_ is Cons!1490) lt!36335))))

(assert (=> d!19317 (= (contains!737 lt!36335 (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))) lt!36952)))

(declare-fun b!79691 () Bool)

(declare-fun e!52028 () Bool)

(assert (=> b!79691 (= e!52029 e!52028)))

(declare-fun res!41584 () Bool)

(assert (=> b!79691 (=> res!41584 e!52028)))

(assert (=> b!79691 (= res!41584 (= (h!2078 lt!36335) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun b!79692 () Bool)

(assert (=> b!79692 (= e!52028 (contains!737 (t!5132 lt!36335) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(assert (= (and d!19317 res!41585) b!79691))

(assert (= (and b!79691 (not res!41584)) b!79692))

(declare-fun m!80823 () Bool)

(assert (=> d!19317 m!80823))

(declare-fun m!80825 () Bool)

(assert (=> d!19317 m!80825))

(declare-fun m!80827 () Bool)

(assert (=> b!79692 m!80827))

(assert (=> b!78522 d!19317))

(declare-fun d!19319 () Bool)

(assert (=> d!19319 (= (apply!79 lt!36534 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1186 (getValueByKey!138 (toList!729 lt!36534) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3378 () Bool)

(assert (= bs!3378 d!19319))

(assert (=> bs!3378 m!80465))

(assert (=> bs!3378 m!80465))

(declare-fun m!80829 () Bool)

(assert (=> bs!3378 m!80829))

(assert (=> b!78769 d!19319))

(declare-fun b!79693 () Bool)

(declare-fun e!52030 () Option!144)

(assert (=> b!79693 (= e!52030 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36317)))))))

(declare-fun b!79694 () Bool)

(declare-fun e!52031 () Option!144)

(assert (=> b!79694 (= e!52030 e!52031)))

(declare-fun c!12404 () Bool)

(assert (=> b!79694 (= c!12404 (and ((_ is Cons!1490) (toList!729 lt!36317)) (not (= (_1!1092 (h!2078 (toList!729 lt!36317))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79696 () Bool)

(assert (=> b!79696 (= e!52031 None!142)))

(declare-fun b!79695 () Bool)

(assert (=> b!79695 (= e!52031 (getValueByKey!138 (t!5132 (toList!729 lt!36317)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19321 () Bool)

(declare-fun c!12403 () Bool)

(assert (=> d!19321 (= c!12403 (and ((_ is Cons!1490) (toList!729 lt!36317)) (= (_1!1092 (h!2078 (toList!729 lt!36317))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19321 (= (getValueByKey!138 (toList!729 lt!36317) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52030)))

(assert (= (and d!19321 c!12403) b!79693))

(assert (= (and d!19321 (not c!12403)) b!79694))

(assert (= (and b!79694 c!12404) b!79695))

(assert (= (and b!79694 (not c!12404)) b!79696))

(declare-fun m!80831 () Bool)

(assert (=> b!79695 m!80831))

(assert (=> b!78475 d!19321))

(assert (=> b!78582 d!19211))

(declare-fun d!19323 () Bool)

(declare-fun e!52032 () Bool)

(assert (=> d!19323 e!52032))

(declare-fun res!41586 () Bool)

(assert (=> d!19323 (=> (not res!41586) (not e!52032))))

(declare-fun lt!36954 () ListLongMap!1427)

(assert (=> d!19323 (= res!41586 (contains!736 lt!36954 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!36953 () List!1494)

(assert (=> d!19323 (= lt!36954 (ListLongMap!1428 lt!36953))))

(declare-fun lt!36955 () Unit!2237)

(declare-fun lt!36956 () Unit!2237)

(assert (=> d!19323 (= lt!36955 lt!36956)))

(assert (=> d!19323 (= (getValueByKey!138 lt!36953 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!19323 (= lt!36956 (lemmaContainsTupThenGetReturnValue!55 lt!36953 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!19323 (= lt!36953 (insertStrictlySorted!58 (toList!729 (map!1183 newMap!16)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!19323 (= (+!100 (map!1183 newMap!16) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36954)))

(declare-fun b!79697 () Bool)

(declare-fun res!41587 () Bool)

(assert (=> b!79697 (=> (not res!41587) (not e!52032))))

(assert (=> b!79697 (= res!41587 (= (getValueByKey!138 (toList!729 lt!36954) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!79698 () Bool)

(assert (=> b!79698 (= e!52032 (contains!737 (toList!729 lt!36954) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!19323 res!41586) b!79697))

(assert (= (and b!79697 res!41587) b!79698))

(declare-fun m!80833 () Bool)

(assert (=> d!19323 m!80833))

(declare-fun m!80835 () Bool)

(assert (=> d!19323 m!80835))

(declare-fun m!80837 () Bool)

(assert (=> d!19323 m!80837))

(declare-fun m!80839 () Bool)

(assert (=> d!19323 m!80839))

(declare-fun m!80841 () Bool)

(assert (=> b!79697 m!80841))

(declare-fun m!80843 () Bool)

(assert (=> b!79698 m!80843))

(assert (=> b!78582 d!19323))

(assert (=> b!78582 d!18493))

(declare-fun d!19325 () Bool)

(declare-fun res!41588 () Bool)

(declare-fun e!52033 () Bool)

(assert (=> d!19325 (=> res!41588 e!52033)))

(assert (=> d!19325 (= res!41588 (or ((_ is Nil!1491) lt!36468) ((_ is Nil!1491) (t!5132 lt!36468))))))

(assert (=> d!19325 (= (isStrictlySorted!282 lt!36468) e!52033)))

(declare-fun b!79699 () Bool)

(declare-fun e!52034 () Bool)

(assert (=> b!79699 (= e!52033 e!52034)))

(declare-fun res!41589 () Bool)

(assert (=> b!79699 (=> (not res!41589) (not e!52034))))

(assert (=> b!79699 (= res!41589 (bvslt (_1!1092 (h!2078 lt!36468)) (_1!1092 (h!2078 (t!5132 lt!36468)))))))

(declare-fun b!79700 () Bool)

(assert (=> b!79700 (= e!52034 (isStrictlySorted!282 (t!5132 lt!36468)))))

(assert (= (and d!19325 (not res!41588)) b!79699))

(assert (= (and b!79699 res!41589) b!79700))

(declare-fun m!80845 () Bool)

(assert (=> b!79700 m!80845))

(assert (=> d!18717 d!19325))

(assert (=> d!18717 d!18867))

(declare-fun b!79701 () Bool)

(declare-fun e!52035 () Option!144)

(assert (=> b!79701 (= e!52035 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36229)))))))

(declare-fun b!79702 () Bool)

(declare-fun e!52036 () Option!144)

(assert (=> b!79702 (= e!52035 e!52036)))

(declare-fun c!12406 () Bool)

(assert (=> b!79702 (= c!12406 (and ((_ is Cons!1490) (toList!729 lt!36229)) (not (= (_1!1092 (h!2078 (toList!729 lt!36229))) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79704 () Bool)

(assert (=> b!79704 (= e!52036 None!142)))

(declare-fun b!79703 () Bool)

(assert (=> b!79703 (= e!52036 (getValueByKey!138 (t!5132 (toList!729 lt!36229)) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19327 () Bool)

(declare-fun c!12405 () Bool)

(assert (=> d!19327 (= c!12405 (and ((_ is Cons!1490) (toList!729 lt!36229)) (= (_1!1092 (h!2078 (toList!729 lt!36229))) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19327 (= (getValueByKey!138 (toList!729 lt!36229) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52035)))

(assert (= (and d!19327 c!12405) b!79701))

(assert (= (and d!19327 (not c!12405)) b!79702))

(assert (= (and b!79702 c!12406) b!79703))

(assert (= (and b!79702 (not c!12406)) b!79704))

(declare-fun m!80847 () Bool)

(assert (=> b!79703 m!80847))

(assert (=> b!78329 d!19327))

(declare-fun lt!36957 () Bool)

(declare-fun d!19329 () Bool)

(assert (=> d!19329 (= lt!36957 (select (content!84 (toList!729 lt!36241)) (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!52038 () Bool)

(assert (=> d!19329 (= lt!36957 e!52038)))

(declare-fun res!41591 () Bool)

(assert (=> d!19329 (=> (not res!41591) (not e!52038))))

(assert (=> d!19329 (= res!41591 ((_ is Cons!1490) (toList!729 lt!36241)))))

(assert (=> d!19329 (= (contains!737 (toList!729 lt!36241) (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36957)))

(declare-fun b!79705 () Bool)

(declare-fun e!52037 () Bool)

(assert (=> b!79705 (= e!52038 e!52037)))

(declare-fun res!41590 () Bool)

(assert (=> b!79705 (=> res!41590 e!52037)))

(assert (=> b!79705 (= res!41590 (= (h!2078 (toList!729 lt!36241)) (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!79706 () Bool)

(assert (=> b!79706 (= e!52037 (contains!737 (t!5132 (toList!729 lt!36241)) (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!19329 res!41591) b!79705))

(assert (= (and b!79705 (not res!41590)) b!79706))

(declare-fun m!80849 () Bool)

(assert (=> d!19329 m!80849))

(declare-fun m!80851 () Bool)

(assert (=> d!19329 m!80851))

(declare-fun m!80853 () Bool)

(assert (=> b!79706 m!80853))

(assert (=> b!78336 d!19329))

(declare-fun lt!36958 () Bool)

(declare-fun d!19331 () Bool)

(assert (=> d!19331 (= lt!36958 (select (content!84 (toList!729 lt!36497)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!52040 () Bool)

(assert (=> d!19331 (= lt!36958 e!52040)))

(declare-fun res!41593 () Bool)

(assert (=> d!19331 (=> (not res!41593) (not e!52040))))

(assert (=> d!19331 (= res!41593 ((_ is Cons!1490) (toList!729 lt!36497)))))

(assert (=> d!19331 (= (contains!737 (toList!729 lt!36497) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!36958)))

(declare-fun b!79707 () Bool)

(declare-fun e!52039 () Bool)

(assert (=> b!79707 (= e!52040 e!52039)))

(declare-fun res!41592 () Bool)

(assert (=> b!79707 (=> res!41592 e!52039)))

(assert (=> b!79707 (= res!41592 (= (h!2078 (toList!729 lt!36497)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79708 () Bool)

(assert (=> b!79708 (= e!52039 (contains!737 (t!5132 (toList!729 lt!36497)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1183 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!19331 res!41593) b!79707))

(assert (= (and b!79707 (not res!41592)) b!79708))

(declare-fun m!80855 () Bool)

(assert (=> d!19331 m!80855))

(declare-fun m!80857 () Bool)

(assert (=> d!19331 m!80857))

(declare-fun m!80859 () Bool)

(assert (=> b!79708 m!80859))

(assert (=> b!78732 d!19331))

(assert (=> b!78654 d!19107))

(assert (=> b!78654 d!19109))

(declare-fun d!19333 () Bool)

(declare-fun e!52042 () Bool)

(assert (=> d!19333 e!52042))

(declare-fun res!41594 () Bool)

(assert (=> d!19333 (=> res!41594 e!52042)))

(declare-fun lt!36960 () Bool)

(assert (=> d!19333 (= res!41594 (not lt!36960))))

(declare-fun lt!36962 () Bool)

(assert (=> d!19333 (= lt!36960 lt!36962)))

(declare-fun lt!36961 () Unit!2237)

(declare-fun e!52041 () Unit!2237)

(assert (=> d!19333 (= lt!36961 e!52041)))

(declare-fun c!12407 () Bool)

(assert (=> d!19333 (= c!12407 lt!36962)))

(assert (=> d!19333 (= lt!36962 (containsKey!141 (toList!729 lt!36180) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!19333 (= (contains!736 lt!36180 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!36960)))

(declare-fun b!79709 () Bool)

(declare-fun lt!36959 () Unit!2237)

(assert (=> b!79709 (= e!52041 lt!36959)))

(assert (=> b!79709 (= lt!36959 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36180) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!79709 (isDefined!90 (getValueByKey!138 (toList!729 lt!36180) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!79710 () Bool)

(declare-fun Unit!2304 () Unit!2237)

(assert (=> b!79710 (= e!52041 Unit!2304)))

(declare-fun b!79711 () Bool)

(assert (=> b!79711 (= e!52042 (isDefined!90 (getValueByKey!138 (toList!729 lt!36180) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!19333 c!12407) b!79709))

(assert (= (and d!19333 (not c!12407)) b!79710))

(assert (= (and d!19333 (not res!41594)) b!79711))

(assert (=> d!19333 m!78443))

(declare-fun m!80861 () Bool)

(assert (=> d!19333 m!80861))

(assert (=> b!79709 m!78443))

(declare-fun m!80863 () Bool)

(assert (=> b!79709 m!80863))

(assert (=> b!79709 m!78443))

(declare-fun m!80865 () Bool)

(assert (=> b!79709 m!80865))

(assert (=> b!79709 m!80865))

(declare-fun m!80867 () Bool)

(assert (=> b!79709 m!80867))

(assert (=> b!79711 m!78443))

(assert (=> b!79711 m!80865))

(assert (=> b!79711 m!80865))

(assert (=> b!79711 m!80867))

(assert (=> b!78267 d!19333))

(declare-fun d!19335 () Bool)

(declare-fun res!41595 () Bool)

(declare-fun e!52043 () Bool)

(assert (=> d!19335 (=> res!41595 e!52043)))

(assert (=> d!19335 (= res!41595 (and ((_ is Cons!1490) lt!36468) (= (_1!1092 (h!2078 lt!36468)) (_1!1092 lt!35789))))))

(assert (=> d!19335 (= (containsKey!141 lt!36468 (_1!1092 lt!35789)) e!52043)))

(declare-fun b!79712 () Bool)

(declare-fun e!52044 () Bool)

(assert (=> b!79712 (= e!52043 e!52044)))

(declare-fun res!41596 () Bool)

(assert (=> b!79712 (=> (not res!41596) (not e!52044))))

(assert (=> b!79712 (= res!41596 (and (or (not ((_ is Cons!1490) lt!36468)) (bvsle (_1!1092 (h!2078 lt!36468)) (_1!1092 lt!35789))) ((_ is Cons!1490) lt!36468) (bvslt (_1!1092 (h!2078 lt!36468)) (_1!1092 lt!35789))))))

(declare-fun b!79713 () Bool)

(assert (=> b!79713 (= e!52044 (containsKey!141 (t!5132 lt!36468) (_1!1092 lt!35789)))))

(assert (= (and d!19335 (not res!41595)) b!79712))

(assert (= (and b!79712 res!41596) b!79713))

(declare-fun m!80869 () Bool)

(assert (=> b!79713 m!80869))

(assert (=> b!78675 d!19335))

(assert (=> bm!7168 d!18975))

(declare-fun d!19337 () Bool)

(assert (=> d!19337 (= ($colon$colon!68 e!51382 (ite c!12098 (h!2078 (toList!729 (+!100 lt!35804 lt!35806))) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792)))) (Cons!1490 (ite c!12098 (h!2078 (toList!729 (+!100 lt!35804 lt!35806))) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))) e!51382))))

(assert (=> bm!7225 d!19337))

(declare-fun lt!36963 () Bool)

(declare-fun d!19339 () Bool)

(assert (=> d!19339 (= lt!36963 (select (content!84 (toList!729 lt!36174)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun e!52046 () Bool)

(assert (=> d!19339 (= lt!36963 e!52046)))

(declare-fun res!41598 () Bool)

(assert (=> d!19339 (=> (not res!41598) (not e!52046))))

(assert (=> d!19339 (= res!41598 ((_ is Cons!1490) (toList!729 lt!36174)))))

(assert (=> d!19339 (= (contains!737 (toList!729 lt!36174) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!36963)))

(declare-fun b!79714 () Bool)

(declare-fun e!52045 () Bool)

(assert (=> b!79714 (= e!52046 e!52045)))

(declare-fun res!41597 () Bool)

(assert (=> b!79714 (=> res!41597 e!52045)))

(assert (=> b!79714 (= res!41597 (= (h!2078 (toList!729 lt!36174)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun b!79715 () Bool)

(assert (=> b!79715 (= e!52045 (contains!737 (t!5132 (toList!729 lt!36174)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!19339 res!41598) b!79714))

(assert (= (and b!79714 (not res!41597)) b!79715))

(declare-fun m!80871 () Bool)

(assert (=> d!19339 m!80871))

(declare-fun m!80873 () Bool)

(assert (=> d!19339 m!80873))

(declare-fun m!80875 () Bool)

(assert (=> b!79715 m!80875))

(assert (=> b!78248 d!19339))

(declare-fun b!79716 () Bool)

(declare-fun e!52047 () Option!144)

(assert (=> b!79716 (= e!52047 (Some!143 (_2!1092 (h!2078 (t!5132 lt!35947)))))))

(declare-fun b!79717 () Bool)

(declare-fun e!52048 () Option!144)

(assert (=> b!79717 (= e!52047 e!52048)))

(declare-fun c!12409 () Bool)

(assert (=> b!79717 (= c!12409 (and ((_ is Cons!1490) (t!5132 lt!35947)) (not (= (_1!1092 (h!2078 (t!5132 lt!35947))) (_1!1092 lt!35792)))))))

(declare-fun b!79719 () Bool)

(assert (=> b!79719 (= e!52048 None!142)))

(declare-fun b!79718 () Bool)

(assert (=> b!79718 (= e!52048 (getValueByKey!138 (t!5132 (t!5132 lt!35947)) (_1!1092 lt!35792)))))

(declare-fun d!19341 () Bool)

(declare-fun c!12408 () Bool)

(assert (=> d!19341 (= c!12408 (and ((_ is Cons!1490) (t!5132 lt!35947)) (= (_1!1092 (h!2078 (t!5132 lt!35947))) (_1!1092 lt!35792))))))

(assert (=> d!19341 (= (getValueByKey!138 (t!5132 lt!35947) (_1!1092 lt!35792)) e!52047)))

(assert (= (and d!19341 c!12408) b!79716))

(assert (= (and d!19341 (not c!12408)) b!79717))

(assert (= (and b!79717 c!12409) b!79718))

(assert (= (and b!79717 (not c!12409)) b!79719))

(declare-fun m!80877 () Bool)

(assert (=> b!79718 m!80877))

(assert (=> b!78528 d!19341))

(declare-fun b!79732 () Bool)

(declare-fun e!52056 () SeekEntryResult!234)

(declare-fun e!52055 () SeekEntryResult!234)

(assert (=> b!79732 (= e!52056 e!52055)))

(declare-fun lt!36969 () (_ BitVec 64))

(declare-fun c!12416 () Bool)

(assert (=> b!79732 (= c!12416 (= lt!36969 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun b!79733 () Bool)

(declare-fun e!52057 () SeekEntryResult!234)

(assert (=> b!79733 (= e!52057 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11541 lt!36475) #b00000000000000000000000000000001) (nextIndex!0 (index!3072 lt!36475) (bvadd (x!11541 lt!36475) #b00000000000000000000000000000001) (mask!6267 newMap!16)) (index!3072 lt!36475) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun b!79734 () Bool)

(declare-fun c!12417 () Bool)

(assert (=> b!79734 (= c!12417 (= lt!36969 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79734 (= e!52055 e!52057)))

(declare-fun b!79735 () Bool)

(assert (=> b!79735 (= e!52055 (Found!234 (index!3072 lt!36475)))))

(declare-fun b!79736 () Bool)

(assert (=> b!79736 (= e!52056 Undefined!234)))

(declare-fun b!79737 () Bool)

(assert (=> b!79737 (= e!52057 (MissingVacant!234 (index!3072 lt!36475)))))

(declare-fun lt!36968 () SeekEntryResult!234)

(declare-fun d!19343 () Bool)

(assert (=> d!19343 (and (or ((_ is Undefined!234) lt!36968) (not ((_ is Found!234) lt!36968)) (and (bvsge (index!3071 lt!36968) #b00000000000000000000000000000000) (bvslt (index!3071 lt!36968) (size!2127 (_keys!3931 newMap!16))))) (or ((_ is Undefined!234) lt!36968) ((_ is Found!234) lt!36968) (not ((_ is MissingVacant!234) lt!36968)) (not (= (index!3073 lt!36968) (index!3072 lt!36475))) (and (bvsge (index!3073 lt!36968) #b00000000000000000000000000000000) (bvslt (index!3073 lt!36968) (size!2127 (_keys!3931 newMap!16))))) (or ((_ is Undefined!234) lt!36968) (ite ((_ is Found!234) lt!36968) (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36968)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) (and ((_ is MissingVacant!234) lt!36968) (= (index!3073 lt!36968) (index!3072 lt!36475)) (= (select (arr!1886 (_keys!3931 newMap!16)) (index!3073 lt!36968)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!19343 (= lt!36968 e!52056)))

(declare-fun c!12418 () Bool)

(assert (=> d!19343 (= c!12418 (bvsge (x!11541 lt!36475) #b01111111111111111111111111111110))))

(assert (=> d!19343 (= lt!36969 (select (arr!1886 (_keys!3931 newMap!16)) (index!3072 lt!36475)))))

(assert (=> d!19343 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!19343 (= (seekKeyOrZeroReturnVacant!0 (x!11541 lt!36475) (index!3072 lt!36475) (index!3072 lt!36475) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (_keys!3931 newMap!16) (mask!6267 newMap!16)) lt!36968)))

(assert (= (and d!19343 c!12418) b!79736))

(assert (= (and d!19343 (not c!12418)) b!79732))

(assert (= (and b!79732 c!12416) b!79735))

(assert (= (and b!79732 (not c!12416)) b!79734))

(assert (= (and b!79734 c!12417) b!79737))

(assert (= (and b!79734 (not c!12417)) b!79733))

(declare-fun m!80879 () Bool)

(assert (=> b!79733 m!80879))

(assert (=> b!79733 m!80879))

(assert (=> b!79733 m!77885))

(declare-fun m!80881 () Bool)

(assert (=> b!79733 m!80881))

(declare-fun m!80883 () Bool)

(assert (=> d!19343 m!80883))

(declare-fun m!80885 () Bool)

(assert (=> d!19343 m!80885))

(assert (=> d!19343 m!79145))

(assert (=> d!19343 m!78355))

(assert (=> b!78699 d!19343))

(declare-fun d!19345 () Bool)

(declare-fun e!52059 () Bool)

(assert (=> d!19345 e!52059))

(declare-fun res!41599 () Bool)

(assert (=> d!19345 (=> res!41599 e!52059)))

(declare-fun lt!36971 () Bool)

(assert (=> d!19345 (= res!41599 (not lt!36971))))

(declare-fun lt!36973 () Bool)

(assert (=> d!19345 (= lt!36971 lt!36973)))

(declare-fun lt!36972 () Unit!2237)

(declare-fun e!52058 () Unit!2237)

(assert (=> d!19345 (= lt!36972 e!52058)))

(declare-fun c!12419 () Bool)

(assert (=> d!19345 (= c!12419 lt!36973)))

(assert (=> d!19345 (= lt!36973 (containsKey!141 (toList!729 lt!36207) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19345 (= (contains!736 lt!36207 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36971)))

(declare-fun b!79738 () Bool)

(declare-fun lt!36970 () Unit!2237)

(assert (=> b!79738 (= e!52058 lt!36970)))

(assert (=> b!79738 (= lt!36970 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36207) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79738 (isDefined!90 (getValueByKey!138 (toList!729 lt!36207) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79739 () Bool)

(declare-fun Unit!2305 () Unit!2237)

(assert (=> b!79739 (= e!52058 Unit!2305)))

(declare-fun b!79740 () Bool)

(assert (=> b!79740 (= e!52059 (isDefined!90 (getValueByKey!138 (toList!729 lt!36207) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19345 c!12419) b!79738))

(assert (= (and d!19345 (not c!12419)) b!79739))

(assert (= (and d!19345 (not res!41599)) b!79740))

(declare-fun m!80887 () Bool)

(assert (=> d!19345 m!80887))

(declare-fun m!80889 () Bool)

(assert (=> b!79738 m!80889))

(declare-fun m!80891 () Bool)

(assert (=> b!79738 m!80891))

(assert (=> b!79738 m!80891))

(declare-fun m!80893 () Bool)

(assert (=> b!79738 m!80893))

(assert (=> b!79740 m!80891))

(assert (=> b!79740 m!80891))

(assert (=> b!79740 m!80893))

(assert (=> bm!7170 d!19345))

(declare-fun d!19347 () Bool)

(declare-fun lt!36974 () Bool)

(assert (=> d!19347 (= lt!36974 (select (content!84 lt!35960) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun e!52061 () Bool)

(assert (=> d!19347 (= lt!36974 e!52061)))

(declare-fun res!41601 () Bool)

(assert (=> d!19347 (=> (not res!41601) (not e!52061))))

(assert (=> d!19347 (= res!41601 ((_ is Cons!1490) lt!35960))))

(assert (=> d!19347 (= (contains!737 lt!35960 (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))) lt!36974)))

(declare-fun b!79741 () Bool)

(declare-fun e!52060 () Bool)

(assert (=> b!79741 (= e!52061 e!52060)))

(declare-fun res!41600 () Bool)

(assert (=> b!79741 (=> res!41600 e!52060)))

(assert (=> b!79741 (= res!41600 (= (h!2078 lt!35960) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun b!79742 () Bool)

(assert (=> b!79742 (= e!52060 (contains!737 (t!5132 lt!35960) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(assert (= (and d!19347 res!41601) b!79741))

(assert (= (and b!79741 (not res!41600)) b!79742))

(declare-fun m!80895 () Bool)

(assert (=> d!19347 m!80895))

(declare-fun m!80897 () Bool)

(assert (=> d!19347 m!80897))

(declare-fun m!80899 () Bool)

(assert (=> b!79742 m!80899))

(assert (=> b!78487 d!19347))

(assert (=> b!78735 d!19143))

(assert (=> b!78735 d!19145))

(declare-fun d!19349 () Bool)

(declare-fun e!52063 () Bool)

(assert (=> d!19349 e!52063))

(declare-fun res!41602 () Bool)

(assert (=> d!19349 (=> res!41602 e!52063)))

(declare-fun lt!36976 () Bool)

(assert (=> d!19349 (= res!41602 (not lt!36976))))

(declare-fun lt!36978 () Bool)

(assert (=> d!19349 (= lt!36976 lt!36978)))

(declare-fun lt!36977 () Unit!2237)

(declare-fun e!52062 () Unit!2237)

(assert (=> d!19349 (= lt!36977 e!52062)))

(declare-fun c!12420 () Bool)

(assert (=> d!19349 (= c!12420 lt!36978)))

(assert (=> d!19349 (= lt!36978 (containsKey!141 (toList!729 lt!36241) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!19349 (= (contains!736 lt!36241 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36976)))

(declare-fun b!79743 () Bool)

(declare-fun lt!36975 () Unit!2237)

(assert (=> b!79743 (= e!52062 lt!36975)))

(assert (=> b!79743 (= lt!36975 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36241) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> b!79743 (isDefined!90 (getValueByKey!138 (toList!729 lt!36241) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79744 () Bool)

(declare-fun Unit!2306 () Unit!2237)

(assert (=> b!79744 (= e!52062 Unit!2306)))

(declare-fun b!79745 () Bool)

(assert (=> b!79745 (= e!52063 (isDefined!90 (getValueByKey!138 (toList!729 lt!36241) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19349 c!12420) b!79743))

(assert (= (and d!19349 (not c!12420)) b!79744))

(assert (= (and d!19349 (not res!41602)) b!79745))

(declare-fun m!80901 () Bool)

(assert (=> d!19349 m!80901))

(declare-fun m!80903 () Bool)

(assert (=> b!79743 m!80903))

(assert (=> b!79743 m!78623))

(assert (=> b!79743 m!78623))

(declare-fun m!80905 () Bool)

(assert (=> b!79743 m!80905))

(assert (=> b!79745 m!78623))

(assert (=> b!79745 m!78623))

(assert (=> b!79745 m!80905))

(assert (=> d!18575 d!19349))

(declare-fun b!79746 () Bool)

(declare-fun e!52064 () Option!144)

(assert (=> b!79746 (= e!52064 (Some!143 (_2!1092 (h!2078 lt!36240))))))

(declare-fun b!79747 () Bool)

(declare-fun e!52065 () Option!144)

(assert (=> b!79747 (= e!52064 e!52065)))

(declare-fun c!12422 () Bool)

(assert (=> b!79747 (= c!12422 (and ((_ is Cons!1490) lt!36240) (not (= (_1!1092 (h!2078 lt!36240)) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79749 () Bool)

(assert (=> b!79749 (= e!52065 None!142)))

(declare-fun b!79748 () Bool)

(assert (=> b!79748 (= e!52065 (getValueByKey!138 (t!5132 lt!36240) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19351 () Bool)

(declare-fun c!12421 () Bool)

(assert (=> d!19351 (= c!12421 (and ((_ is Cons!1490) lt!36240) (= (_1!1092 (h!2078 lt!36240)) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19351 (= (getValueByKey!138 lt!36240 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52064)))

(assert (= (and d!19351 c!12421) b!79746))

(assert (= (and d!19351 (not c!12421)) b!79747))

(assert (= (and b!79747 c!12422) b!79748))

(assert (= (and b!79747 (not c!12422)) b!79749))

(declare-fun m!80907 () Bool)

(assert (=> b!79748 m!80907))

(assert (=> d!18575 d!19351))

(declare-fun d!19353 () Bool)

(assert (=> d!19353 (= (getValueByKey!138 lt!36240 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!36979 () Unit!2237)

(assert (=> d!19353 (= lt!36979 (choose!468 lt!36240 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!52066 () Bool)

(assert (=> d!19353 e!52066))

(declare-fun res!41603 () Bool)

(assert (=> d!19353 (=> (not res!41603) (not e!52066))))

(assert (=> d!19353 (= res!41603 (isStrictlySorted!282 lt!36240))))

(assert (=> d!19353 (= (lemmaContainsTupThenGetReturnValue!55 lt!36240 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36979)))

(declare-fun b!79750 () Bool)

(declare-fun res!41604 () Bool)

(assert (=> b!79750 (=> (not res!41604) (not e!52066))))

(assert (=> b!79750 (= res!41604 (containsKey!141 lt!36240 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79751 () Bool)

(assert (=> b!79751 (= e!52066 (contains!737 lt!36240 (tuple2!2163 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19353 res!41603) b!79750))

(assert (= (and b!79750 res!41604) b!79751))

(assert (=> d!19353 m!78617))

(declare-fun m!80909 () Bool)

(assert (=> d!19353 m!80909))

(declare-fun m!80911 () Bool)

(assert (=> d!19353 m!80911))

(declare-fun m!80913 () Bool)

(assert (=> b!79750 m!80913))

(declare-fun m!80915 () Bool)

(assert (=> b!79751 m!80915))

(assert (=> d!18575 d!19353))

(declare-fun b!79752 () Bool)

(declare-fun e!52069 () List!1494)

(declare-fun e!52067 () List!1494)

(assert (=> b!79752 (= e!52069 e!52067)))

(declare-fun c!12424 () Bool)

(assert (=> b!79752 (= c!12424 (and ((_ is Cons!1490) (toList!729 lt!36039)) (= (_1!1092 (h!2078 (toList!729 lt!36039))) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79753 () Bool)

(declare-fun c!12423 () Bool)

(assert (=> b!79753 (= c!12423 (and ((_ is Cons!1490) (toList!729 lt!36039)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!36039))) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun e!52071 () List!1494)

(assert (=> b!79753 (= e!52067 e!52071)))

(declare-fun b!79754 () Bool)

(declare-fun call!7342 () List!1494)

(assert (=> b!79754 (= e!52071 call!7342)))

(declare-fun b!79755 () Bool)

(declare-fun call!7344 () List!1494)

(assert (=> b!79755 (= e!52067 call!7344)))

(declare-fun bm!7340 () Bool)

(assert (=> bm!7340 (= call!7342 call!7344)))

(declare-fun e!52070 () List!1494)

(declare-fun b!79756 () Bool)

(assert (=> b!79756 (= e!52070 (insertStrictlySorted!58 (t!5132 (toList!729 lt!36039)) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79757 () Bool)

(declare-fun call!7343 () List!1494)

(assert (=> b!79757 (= e!52069 call!7343)))

(declare-fun b!79758 () Bool)

(assert (=> b!79758 (= e!52070 (ite c!12424 (t!5132 (toList!729 lt!36039)) (ite c!12423 (Cons!1490 (h!2078 (toList!729 lt!36039)) (t!5132 (toList!729 lt!36039))) Nil!1491)))))

(declare-fun d!19355 () Bool)

(declare-fun e!52068 () Bool)

(assert (=> d!19355 e!52068))

(declare-fun res!41606 () Bool)

(assert (=> d!19355 (=> (not res!41606) (not e!52068))))

(declare-fun lt!36980 () List!1494)

(assert (=> d!19355 (= res!41606 (isStrictlySorted!282 lt!36980))))

(assert (=> d!19355 (= lt!36980 e!52069)))

(declare-fun c!12426 () Bool)

(assert (=> d!19355 (= c!12426 (and ((_ is Cons!1490) (toList!729 lt!36039)) (bvslt (_1!1092 (h!2078 (toList!729 lt!36039))) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19355 (isStrictlySorted!282 (toList!729 lt!36039))))

(assert (=> d!19355 (= (insertStrictlySorted!58 (toList!729 lt!36039) (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36980)))

(declare-fun bm!7339 () Bool)

(assert (=> bm!7339 (= call!7344 call!7343)))

(declare-fun b!79759 () Bool)

(declare-fun res!41605 () Bool)

(assert (=> b!79759 (=> (not res!41605) (not e!52068))))

(assert (=> b!79759 (= res!41605 (containsKey!141 lt!36980 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79760 () Bool)

(assert (=> b!79760 (= e!52071 call!7342)))

(declare-fun b!79761 () Bool)

(assert (=> b!79761 (= e!52068 (contains!737 lt!36980 (tuple2!2163 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun bm!7341 () Bool)

(assert (=> bm!7341 (= call!7343 ($colon$colon!68 e!52070 (ite c!12426 (h!2078 (toList!729 lt!36039)) (tuple2!2163 (_1!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun c!12425 () Bool)

(assert (=> bm!7341 (= c!12425 c!12426)))

(assert (= (and d!19355 c!12426) b!79757))

(assert (= (and d!19355 (not c!12426)) b!79752))

(assert (= (and b!79752 c!12424) b!79755))

(assert (= (and b!79752 (not c!12424)) b!79753))

(assert (= (and b!79753 c!12423) b!79760))

(assert (= (and b!79753 (not c!12423)) b!79754))

(assert (= (or b!79760 b!79754) bm!7340))

(assert (= (or b!79755 bm!7340) bm!7339))

(assert (= (or b!79757 bm!7339) bm!7341))

(assert (= (and bm!7341 c!12425) b!79756))

(assert (= (and bm!7341 (not c!12425)) b!79758))

(assert (= (and d!19355 res!41606) b!79759))

(assert (= (and b!79759 res!41605) b!79761))

(declare-fun m!80917 () Bool)

(assert (=> b!79761 m!80917))

(declare-fun m!80919 () Bool)

(assert (=> b!79756 m!80919))

(declare-fun m!80921 () Bool)

(assert (=> b!79759 m!80921))

(declare-fun m!80923 () Bool)

(assert (=> d!19355 m!80923))

(declare-fun m!80925 () Bool)

(assert (=> d!19355 m!80925))

(declare-fun m!80927 () Bool)

(assert (=> bm!7341 m!80927))

(assert (=> d!18575 d!19355))

(declare-fun d!19357 () Bool)

(declare-fun res!41607 () Bool)

(declare-fun e!52072 () Bool)

(assert (=> d!19357 (=> res!41607 e!52072)))

(assert (=> d!19357 (= res!41607 (and ((_ is Cons!1490) (toList!729 lt!35932)) (= (_1!1092 (h!2078 (toList!729 lt!35932))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19357 (= (containsKey!141 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!52072)))

(declare-fun b!79762 () Bool)

(declare-fun e!52073 () Bool)

(assert (=> b!79762 (= e!52072 e!52073)))

(declare-fun res!41608 () Bool)

(assert (=> b!79762 (=> (not res!41608) (not e!52073))))

(assert (=> b!79762 (= res!41608 (and (or (not ((_ is Cons!1490) (toList!729 lt!35932))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35932))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1490) (toList!729 lt!35932)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35932))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!79763 () Bool)

(assert (=> b!79763 (= e!52073 (containsKey!141 (t!5132 (toList!729 lt!35932)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19357 (not res!41607)) b!79762))

(assert (= (and b!79762 res!41608) b!79763))

(assert (=> b!79763 m!78085))

(declare-fun m!80929 () Bool)

(assert (=> b!79763 m!80929))

(assert (=> d!18547 d!19357))

(declare-fun d!19359 () Bool)

(declare-fun lt!36981 () Bool)

(assert (=> d!19359 (= lt!36981 (select (content!84 (toList!729 lt!36446)) (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!52075 () Bool)

(assert (=> d!19359 (= lt!36981 e!52075)))

(declare-fun res!41610 () Bool)

(assert (=> d!19359 (=> (not res!41610) (not e!52075))))

(assert (=> d!19359 (= res!41610 ((_ is Cons!1490) (toList!729 lt!36446)))))

(assert (=> d!19359 (= (contains!737 (toList!729 lt!36446) (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36981)))

(declare-fun b!79764 () Bool)

(declare-fun e!52074 () Bool)

(assert (=> b!79764 (= e!52075 e!52074)))

(declare-fun res!41609 () Bool)

(assert (=> b!79764 (=> res!41609 e!52074)))

(assert (=> b!79764 (= res!41609 (= (h!2078 (toList!729 lt!36446)) (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79765 () Bool)

(assert (=> b!79765 (= e!52074 (contains!737 (t!5132 (toList!729 lt!36446)) (ite (or c!11936 c!11934) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (= (and d!19359 res!41610) b!79764))

(assert (= (and b!79764 (not res!41609)) b!79765))

(declare-fun m!80931 () Bool)

(assert (=> d!19359 m!80931))

(declare-fun m!80933 () Bool)

(assert (=> d!19359 m!80933))

(declare-fun m!80935 () Bool)

(assert (=> b!79765 m!80935))

(assert (=> b!78628 d!19359))

(declare-fun b!79766 () Bool)

(declare-fun e!52076 () Option!144)

(assert (=> b!79766 (= e!52076 (Some!143 (_2!1092 (h!2078 (t!5132 lt!35952)))))))

(declare-fun b!79767 () Bool)

(declare-fun e!52077 () Option!144)

(assert (=> b!79767 (= e!52076 e!52077)))

(declare-fun c!12428 () Bool)

(assert (=> b!79767 (= c!12428 (and ((_ is Cons!1490) (t!5132 lt!35952)) (not (= (_1!1092 (h!2078 (t!5132 lt!35952))) (_1!1092 lt!35792)))))))

(declare-fun b!79769 () Bool)

(assert (=> b!79769 (= e!52077 None!142)))

(declare-fun b!79768 () Bool)

(assert (=> b!79768 (= e!52077 (getValueByKey!138 (t!5132 (t!5132 lt!35952)) (_1!1092 lt!35792)))))

(declare-fun d!19361 () Bool)

(declare-fun c!12427 () Bool)

(assert (=> d!19361 (= c!12427 (and ((_ is Cons!1490) (t!5132 lt!35952)) (= (_1!1092 (h!2078 (t!5132 lt!35952))) (_1!1092 lt!35792))))))

(assert (=> d!19361 (= (getValueByKey!138 (t!5132 lt!35952) (_1!1092 lt!35792)) e!52076)))

(assert (= (and d!19361 c!12427) b!79766))

(assert (= (and d!19361 (not c!12427)) b!79767))

(assert (= (and b!79767 c!12428) b!79768))

(assert (= (and b!79767 (not c!12428)) b!79769))

(declare-fun m!80937 () Bool)

(assert (=> b!79768 m!80937))

(assert (=> b!78638 d!19361))

(declare-fun d!19363 () Bool)

(declare-fun e!52079 () Bool)

(assert (=> d!19363 e!52079))

(declare-fun res!41611 () Bool)

(assert (=> d!19363 (=> res!41611 e!52079)))

(declare-fun lt!36983 () Bool)

(assert (=> d!19363 (= res!41611 (not lt!36983))))

(declare-fun lt!36985 () Bool)

(assert (=> d!19363 (= lt!36983 lt!36985)))

(declare-fun lt!36984 () Unit!2237)

(declare-fun e!52078 () Unit!2237)

(assert (=> d!19363 (= lt!36984 e!52078)))

(declare-fun c!12429 () Bool)

(assert (=> d!19363 (= c!12429 lt!36985)))

(assert (=> d!19363 (= lt!36985 (containsKey!141 (toList!729 lt!36207) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19363 (= (contains!736 lt!36207 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36983)))

(declare-fun b!79770 () Bool)

(declare-fun lt!36982 () Unit!2237)

(assert (=> b!79770 (= e!52078 lt!36982)))

(assert (=> b!79770 (= lt!36982 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36207) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79770 (isDefined!90 (getValueByKey!138 (toList!729 lt!36207) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79771 () Bool)

(declare-fun Unit!2307 () Unit!2237)

(assert (=> b!79771 (= e!52078 Unit!2307)))

(declare-fun b!79772 () Bool)

(assert (=> b!79772 (= e!52079 (isDefined!90 (getValueByKey!138 (toList!729 lt!36207) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19363 c!12429) b!79770))

(assert (= (and d!19363 (not c!12429)) b!79771))

(assert (= (and d!19363 (not res!41611)) b!79772))

(declare-fun m!80939 () Bool)

(assert (=> d!19363 m!80939))

(declare-fun m!80941 () Bool)

(assert (=> b!79770 m!80941))

(assert (=> b!79770 m!79505))

(assert (=> b!79770 m!79505))

(declare-fun m!80943 () Bool)

(assert (=> b!79770 m!80943))

(assert (=> b!79772 m!79505))

(assert (=> b!79772 m!79505))

(assert (=> b!79772 m!80943))

(assert (=> bm!7166 d!19363))

(declare-fun b!79773 () Bool)

(declare-fun e!52086 () ListLongMap!1427)

(declare-fun call!7347 () ListLongMap!1427)

(assert (=> b!79773 (= e!52086 call!7347)))

(declare-fun b!79774 () Bool)

(declare-fun e!52087 () ListLongMap!1427)

(declare-fun call!7350 () ListLongMap!1427)

(assert (=> b!79774 (= e!52087 (+!100 call!7350 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (_2!1093 lt!36122)))))))

(declare-fun b!79776 () Bool)

(declare-fun e!52089 () Bool)

(assert (=> b!79776 (= e!52089 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000)))))

(declare-fun bm!7342 () Bool)

(declare-fun call!7349 () Bool)

(declare-fun lt!37006 () ListLongMap!1427)

(assert (=> bm!7342 (= call!7349 (contains!736 lt!37006 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79777 () Bool)

(declare-fun e!52080 () Bool)

(declare-fun e!52091 () Bool)

(assert (=> b!79777 (= e!52080 e!52091)))

(declare-fun c!12430 () Bool)

(assert (=> b!79777 (= c!12430 (not (= (bvand (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79778 () Bool)

(declare-fun e!52083 () Unit!2237)

(declare-fun Unit!2308 () Unit!2237)

(assert (=> b!79778 (= e!52083 Unit!2308)))

(declare-fun b!79779 () Bool)

(declare-fun res!41617 () Bool)

(assert (=> b!79779 (=> (not res!41617) (not e!52080))))

(declare-fun e!52092 () Bool)

(assert (=> b!79779 (= res!41617 e!52092)))

(declare-fun c!12432 () Bool)

(assert (=> b!79779 (= c!12432 (not (= (bvand (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79780 () Bool)

(declare-fun lt!36994 () Unit!2237)

(assert (=> b!79780 (= e!52083 lt!36994)))

(declare-fun lt!37000 () ListLongMap!1427)

(assert (=> b!79780 (= lt!37000 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (_2!1093 lt!36122)) (_values!2254 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122)) (extraKeys!2122 (_2!1093 lt!36122)) (zeroValue!2169 (_2!1093 lt!36122)) (minValue!2169 (_2!1093 lt!36122)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1093 lt!36122))))))

(declare-fun lt!36997 () (_ BitVec 64))

(assert (=> b!79780 (= lt!36997 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36998 () (_ BitVec 64))

(assert (=> b!79780 (= lt!36998 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000))))

(declare-fun lt!37007 () Unit!2237)

(assert (=> b!79780 (= lt!37007 (addStillContains!55 lt!37000 lt!36997 (zeroValue!2169 (_2!1093 lt!36122)) lt!36998))))

(assert (=> b!79780 (contains!736 (+!100 lt!37000 (tuple2!2163 lt!36997 (zeroValue!2169 (_2!1093 lt!36122)))) lt!36998)))

(declare-fun lt!36986 () Unit!2237)

(assert (=> b!79780 (= lt!36986 lt!37007)))

(declare-fun lt!36996 () ListLongMap!1427)

(assert (=> b!79780 (= lt!36996 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (_2!1093 lt!36122)) (_values!2254 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122)) (extraKeys!2122 (_2!1093 lt!36122)) (zeroValue!2169 (_2!1093 lt!36122)) (minValue!2169 (_2!1093 lt!36122)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1093 lt!36122))))))

(declare-fun lt!37003 () (_ BitVec 64))

(assert (=> b!79780 (= lt!37003 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37001 () (_ BitVec 64))

(assert (=> b!79780 (= lt!37001 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000))))

(declare-fun lt!37004 () Unit!2237)

(assert (=> b!79780 (= lt!37004 (addApplyDifferent!55 lt!36996 lt!37003 (minValue!2169 (_2!1093 lt!36122)) lt!37001))))

(assert (=> b!79780 (= (apply!79 (+!100 lt!36996 (tuple2!2163 lt!37003 (minValue!2169 (_2!1093 lt!36122)))) lt!37001) (apply!79 lt!36996 lt!37001))))

(declare-fun lt!36989 () Unit!2237)

(assert (=> b!79780 (= lt!36989 lt!37004)))

(declare-fun lt!36999 () ListLongMap!1427)

(assert (=> b!79780 (= lt!36999 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (_2!1093 lt!36122)) (_values!2254 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122)) (extraKeys!2122 (_2!1093 lt!36122)) (zeroValue!2169 (_2!1093 lt!36122)) (minValue!2169 (_2!1093 lt!36122)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1093 lt!36122))))))

(declare-fun lt!37002 () (_ BitVec 64))

(assert (=> b!79780 (= lt!37002 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36992 () (_ BitVec 64))

(assert (=> b!79780 (= lt!36992 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000))))

(declare-fun lt!36987 () Unit!2237)

(assert (=> b!79780 (= lt!36987 (addApplyDifferent!55 lt!36999 lt!37002 (zeroValue!2169 (_2!1093 lt!36122)) lt!36992))))

(assert (=> b!79780 (= (apply!79 (+!100 lt!36999 (tuple2!2163 lt!37002 (zeroValue!2169 (_2!1093 lt!36122)))) lt!36992) (apply!79 lt!36999 lt!36992))))

(declare-fun lt!37005 () Unit!2237)

(assert (=> b!79780 (= lt!37005 lt!36987)))

(declare-fun lt!36993 () ListLongMap!1427)

(assert (=> b!79780 (= lt!36993 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (_2!1093 lt!36122)) (_values!2254 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122)) (extraKeys!2122 (_2!1093 lt!36122)) (zeroValue!2169 (_2!1093 lt!36122)) (minValue!2169 (_2!1093 lt!36122)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1093 lt!36122))))))

(declare-fun lt!36991 () (_ BitVec 64))

(assert (=> b!79780 (= lt!36991 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36990 () (_ BitVec 64))

(assert (=> b!79780 (= lt!36990 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000))))

(assert (=> b!79780 (= lt!36994 (addApplyDifferent!55 lt!36993 lt!36991 (minValue!2169 (_2!1093 lt!36122)) lt!36990))))

(assert (=> b!79780 (= (apply!79 (+!100 lt!36993 (tuple2!2163 lt!36991 (minValue!2169 (_2!1093 lt!36122)))) lt!36990) (apply!79 lt!36993 lt!36990))))

(declare-fun b!79781 () Bool)

(declare-fun e!52081 () Bool)

(assert (=> b!79781 (= e!52091 e!52081)))

(declare-fun res!41614 () Bool)

(assert (=> b!79781 (= res!41614 call!7349)))

(assert (=> b!79781 (=> (not res!41614) (not e!52081))))

(declare-fun bm!7343 () Bool)

(declare-fun call!7351 () ListLongMap!1427)

(assert (=> bm!7343 (= call!7347 call!7351)))

(declare-fun bm!7344 () Bool)

(declare-fun call!7348 () ListLongMap!1427)

(assert (=> bm!7344 (= call!7348 (getCurrentListMapNoExtraKeys!65 (_keys!3931 (_2!1093 lt!36122)) (_values!2254 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122)) (extraKeys!2122 (_2!1093 lt!36122)) (zeroValue!2169 (_2!1093 lt!36122)) (minValue!2169 (_2!1093 lt!36122)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1093 lt!36122))))))

(declare-fun b!79782 () Bool)

(assert (=> b!79782 (= e!52091 (not call!7349))))

(declare-fun b!79783 () Bool)

(declare-fun call!7345 () Bool)

(assert (=> b!79783 (= e!52092 (not call!7345))))

(declare-fun c!12435 () Bool)

(declare-fun bm!7345 () Bool)

(declare-fun c!12433 () Bool)

(assert (=> bm!7345 (= call!7350 (+!100 (ite c!12435 call!7348 (ite c!12433 call!7351 call!7347)) (ite (or c!12435 c!12433) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (_2!1093 lt!36122))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (_2!1093 lt!36122))))))))

(declare-fun b!79784 () Bool)

(assert (=> b!79784 (= e!52081 (= (apply!79 lt!37006 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 (_2!1093 lt!36122))))))

(declare-fun b!79785 () Bool)

(declare-fun res!41616 () Bool)

(assert (=> b!79785 (=> (not res!41616) (not e!52080))))

(declare-fun e!52088 () Bool)

(assert (=> b!79785 (= res!41616 e!52088)))

(declare-fun res!41618 () Bool)

(assert (=> b!79785 (=> res!41618 e!52088)))

(declare-fun e!52084 () Bool)

(assert (=> b!79785 (= res!41618 (not e!52084))))

(declare-fun res!41615 () Bool)

(assert (=> b!79785 (=> (not res!41615) (not e!52084))))

(assert (=> b!79785 (= res!41615 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))))))

(declare-fun b!79786 () Bool)

(assert (=> b!79786 (= e!52084 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000)))))

(declare-fun d!19365 () Bool)

(assert (=> d!19365 e!52080))

(declare-fun res!41620 () Bool)

(assert (=> d!19365 (=> (not res!41620) (not e!52080))))

(assert (=> d!19365 (= res!41620 (or (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))))))))

(declare-fun lt!36995 () ListLongMap!1427)

(assert (=> d!19365 (= lt!37006 lt!36995)))

(declare-fun lt!36988 () Unit!2237)

(assert (=> d!19365 (= lt!36988 e!52083)))

(declare-fun c!12434 () Bool)

(assert (=> d!19365 (= c!12434 e!52089)))

(declare-fun res!41619 () Bool)

(assert (=> d!19365 (=> (not res!41619) (not e!52089))))

(assert (=> d!19365 (= res!41619 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))))))

(assert (=> d!19365 (= lt!36995 e!52087)))

(assert (=> d!19365 (= c!12435 (and (not (= (bvand (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19365 (validMask!0 (mask!6267 (_2!1093 lt!36122)))))

(assert (=> d!19365 (= (getCurrentListMap!425 (_keys!3931 (_2!1093 lt!36122)) (_values!2254 (_2!1093 lt!36122)) (mask!6267 (_2!1093 lt!36122)) (extraKeys!2122 (_2!1093 lt!36122)) (zeroValue!2169 (_2!1093 lt!36122)) (minValue!2169 (_2!1093 lt!36122)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1093 lt!36122))) lt!37006)))

(declare-fun b!79775 () Bool)

(declare-fun e!52085 () ListLongMap!1427)

(assert (=> b!79775 (= e!52087 e!52085)))

(assert (=> b!79775 (= c!12433 (and (not (= (bvand (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79787 () Bool)

(declare-fun call!7346 () ListLongMap!1427)

(assert (=> b!79787 (= e!52086 call!7346)))

(declare-fun bm!7346 () Bool)

(assert (=> bm!7346 (= call!7345 (contains!736 lt!37006 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7347 () Bool)

(assert (=> bm!7347 (= call!7346 call!7350)))

(declare-fun b!79788 () Bool)

(declare-fun c!12431 () Bool)

(assert (=> b!79788 (= c!12431 (and (not (= (bvand (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 (_2!1093 lt!36122)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79788 (= e!52085 e!52086)))

(declare-fun b!79789 () Bool)

(declare-fun e!52082 () Bool)

(assert (=> b!79789 (= e!52082 (= (apply!79 lt!37006 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 (_2!1093 lt!36122))))))

(declare-fun b!79790 () Bool)

(assert (=> b!79790 (= e!52092 e!52082)))

(declare-fun res!41613 () Bool)

(assert (=> b!79790 (= res!41613 call!7345)))

(assert (=> b!79790 (=> (not res!41613) (not e!52082))))

(declare-fun b!79791 () Bool)

(declare-fun e!52090 () Bool)

(assert (=> b!79791 (= e!52088 e!52090)))

(declare-fun res!41612 () Bool)

(assert (=> b!79791 (=> (not res!41612) (not e!52090))))

(assert (=> b!79791 (= res!41612 (contains!736 lt!37006 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000)))))

(assert (=> b!79791 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))))))

(declare-fun b!79792 () Bool)

(assert (=> b!79792 (= e!52090 (= (apply!79 lt!37006 (select (arr!1886 (_keys!3931 (_2!1093 lt!36122))) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (_values!2254 (_2!1093 lt!36122))) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 (_2!1093 lt!36122)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79792 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (_values!2254 (_2!1093 lt!36122)))))))

(assert (=> b!79792 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36122)))))))

(declare-fun b!79793 () Bool)

(assert (=> b!79793 (= e!52085 call!7346)))

(declare-fun bm!7348 () Bool)

(assert (=> bm!7348 (= call!7351 call!7348)))

(assert (= (and d!19365 c!12435) b!79774))

(assert (= (and d!19365 (not c!12435)) b!79775))

(assert (= (and b!79775 c!12433) b!79793))

(assert (= (and b!79775 (not c!12433)) b!79788))

(assert (= (and b!79788 c!12431) b!79787))

(assert (= (and b!79788 (not c!12431)) b!79773))

(assert (= (or b!79787 b!79773) bm!7343))

(assert (= (or b!79793 bm!7343) bm!7348))

(assert (= (or b!79793 b!79787) bm!7347))

(assert (= (or b!79774 bm!7348) bm!7344))

(assert (= (or b!79774 bm!7347) bm!7345))

(assert (= (and d!19365 res!41619) b!79776))

(assert (= (and d!19365 c!12434) b!79780))

(assert (= (and d!19365 (not c!12434)) b!79778))

(assert (= (and d!19365 res!41620) b!79785))

(assert (= (and b!79785 res!41615) b!79786))

(assert (= (and b!79785 (not res!41618)) b!79791))

(assert (= (and b!79791 res!41612) b!79792))

(assert (= (and b!79785 res!41616) b!79779))

(assert (= (and b!79779 c!12432) b!79790))

(assert (= (and b!79779 (not c!12432)) b!79783))

(assert (= (and b!79790 res!41613) b!79789))

(assert (= (or b!79790 b!79783) bm!7346))

(assert (= (and b!79779 res!41617) b!79777))

(assert (= (and b!79777 c!12430) b!79781))

(assert (= (and b!79777 (not c!12430)) b!79782))

(assert (= (and b!79781 res!41614) b!79784))

(assert (= (or b!79781 b!79782) bm!7342))

(declare-fun b_lambda!3559 () Bool)

(assert (=> (not b_lambda!3559) (not b!79792)))

(declare-fun t!5149 () Bool)

(declare-fun tb!1625 () Bool)

(assert (=> (and b!77786 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 (_2!1093 lt!36122))) t!5149) tb!1625))

(declare-fun result!2825 () Bool)

(assert (=> tb!1625 (= result!2825 tp_is_empty!2509)))

(assert (=> b!79792 t!5149))

(declare-fun b_and!4893 () Bool)

(assert (= b_and!4889 (and (=> t!5149 result!2825) b_and!4893)))

(declare-fun tb!1627 () Bool)

(declare-fun t!5151 () Bool)

(assert (=> (and b!77791 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (_2!1093 lt!36122))) t!5151) tb!1627))

(declare-fun result!2827 () Bool)

(assert (= result!2827 result!2825))

(assert (=> b!79792 t!5151))

(declare-fun b_and!4895 () Bool)

(assert (= b_and!4891 (and (=> t!5151 result!2827) b_and!4895)))

(declare-fun m!80945 () Bool)

(assert (=> b!79792 m!80945))

(declare-fun m!80947 () Bool)

(assert (=> b!79792 m!80947))

(declare-fun m!80949 () Bool)

(assert (=> b!79792 m!80949))

(assert (=> b!79792 m!79853))

(assert (=> b!79792 m!80945))

(assert (=> b!79792 m!79853))

(declare-fun m!80951 () Bool)

(assert (=> b!79792 m!80951))

(assert (=> b!79792 m!80947))

(assert (=> d!19365 m!80779))

(declare-fun m!80953 () Bool)

(assert (=> bm!7345 m!80953))

(assert (=> b!79791 m!79853))

(assert (=> b!79791 m!79853))

(declare-fun m!80955 () Bool)

(assert (=> b!79791 m!80955))

(declare-fun m!80957 () Bool)

(assert (=> bm!7344 m!80957))

(assert (=> b!79786 m!79853))

(assert (=> b!79786 m!79853))

(assert (=> b!79786 m!79855))

(assert (=> b!79776 m!79853))

(assert (=> b!79776 m!79853))

(assert (=> b!79776 m!79855))

(declare-fun m!80959 () Bool)

(assert (=> b!79780 m!80959))

(declare-fun m!80961 () Bool)

(assert (=> b!79780 m!80961))

(declare-fun m!80963 () Bool)

(assert (=> b!79780 m!80963))

(declare-fun m!80965 () Bool)

(assert (=> b!79780 m!80965))

(declare-fun m!80967 () Bool)

(assert (=> b!79780 m!80967))

(declare-fun m!80969 () Bool)

(assert (=> b!79780 m!80969))

(declare-fun m!80971 () Bool)

(assert (=> b!79780 m!80971))

(declare-fun m!80973 () Bool)

(assert (=> b!79780 m!80973))

(declare-fun m!80975 () Bool)

(assert (=> b!79780 m!80975))

(declare-fun m!80977 () Bool)

(assert (=> b!79780 m!80977))

(assert (=> b!79780 m!80971))

(declare-fun m!80979 () Bool)

(assert (=> b!79780 m!80979))

(assert (=> b!79780 m!80975))

(declare-fun m!80981 () Bool)

(assert (=> b!79780 m!80981))

(assert (=> b!79780 m!80963))

(declare-fun m!80983 () Bool)

(assert (=> b!79780 m!80983))

(assert (=> b!79780 m!80959))

(assert (=> b!79780 m!80957))

(declare-fun m!80985 () Bool)

(assert (=> b!79780 m!80985))

(declare-fun m!80987 () Bool)

(assert (=> b!79780 m!80987))

(assert (=> b!79780 m!79853))

(declare-fun m!80989 () Bool)

(assert (=> b!79774 m!80989))

(declare-fun m!80991 () Bool)

(assert (=> bm!7342 m!80991))

(declare-fun m!80993 () Bool)

(assert (=> bm!7346 m!80993))

(declare-fun m!80995 () Bool)

(assert (=> b!79784 m!80995))

(declare-fun m!80997 () Bool)

(assert (=> b!79789 m!80997))

(assert (=> d!18703 d!19365))

(declare-fun d!19367 () Bool)

(assert (=> d!19367 (isDefined!90 (getValueByKey!138 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun lt!37008 () Unit!2237)

(assert (=> d!19367 (= lt!37008 (choose!469 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun e!52093 () Bool)

(assert (=> d!19367 e!52093))

(declare-fun res!41621 () Bool)

(assert (=> d!19367 (=> (not res!41621) (not e!52093))))

(assert (=> d!19367 (= res!41621 (isStrictlySorted!282 (toList!729 e!51123)))))

(assert (=> d!19367 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) lt!37008)))

(declare-fun b!79794 () Bool)

(assert (=> b!79794 (= e!52093 (containsKey!141 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!19367 res!41621) b!79794))

(assert (=> d!19367 m!77885))

(assert (=> d!19367 m!78677))

(assert (=> d!19367 m!78677))

(assert (=> d!19367 m!78679))

(assert (=> d!19367 m!77885))

(declare-fun m!80999 () Bool)

(assert (=> d!19367 m!80999))

(declare-fun m!81001 () Bool)

(assert (=> d!19367 m!81001))

(assert (=> b!79794 m!77885))

(assert (=> b!79794 m!78673))

(assert (=> b!78368 d!19367))

(declare-fun d!19369 () Bool)

(assert (=> d!19369 (= (isDefined!90 (getValueByKey!138 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))) (not (isEmpty!334 (getValueByKey!138 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))))

(declare-fun bs!3379 () Bool)

(assert (= bs!3379 d!19369))

(assert (=> bs!3379 m!78677))

(declare-fun m!81003 () Bool)

(assert (=> bs!3379 m!81003))

(assert (=> b!78368 d!19369))

(declare-fun b!79795 () Bool)

(declare-fun e!52094 () Option!144)

(assert (=> b!79795 (= e!52094 (Some!143 (_2!1092 (h!2078 (toList!729 e!51123)))))))

(declare-fun b!79796 () Bool)

(declare-fun e!52095 () Option!144)

(assert (=> b!79796 (= e!52094 e!52095)))

(declare-fun c!12437 () Bool)

(assert (=> b!79796 (= c!12437 (and ((_ is Cons!1490) (toList!729 e!51123)) (not (= (_1!1092 (h!2078 (toList!729 e!51123))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))))

(declare-fun b!79798 () Bool)

(assert (=> b!79798 (= e!52095 None!142)))

(declare-fun b!79797 () Bool)

(assert (=> b!79797 (= e!52095 (getValueByKey!138 (t!5132 (toList!729 e!51123)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun c!12436 () Bool)

(declare-fun d!19371 () Bool)

(assert (=> d!19371 (= c!12436 (and ((_ is Cons!1490) (toList!729 e!51123)) (= (_1!1092 (h!2078 (toList!729 e!51123))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (=> d!19371 (= (getValueByKey!138 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) e!52094)))

(assert (= (and d!19371 c!12436) b!79795))

(assert (= (and d!19371 (not c!12436)) b!79796))

(assert (= (and b!79796 c!12437) b!79797))

(assert (= (and b!79796 (not c!12437)) b!79798))

(assert (=> b!79797 m!77885))

(declare-fun m!81005 () Bool)

(assert (=> b!79797 m!81005))

(assert (=> b!78368 d!19371))

(assert (=> b!78376 d!18833))

(declare-fun d!19373 () Bool)

(assert (=> d!19373 (= ($colon$colon!68 e!51318 (ite c!12063 (h!2078 (toList!729 lt!35790)) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806)))) (Cons!1490 (ite c!12063 (h!2078 (toList!729 lt!35790)) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))) e!51318))))

(assert (=> bm!7204 d!19373))

(declare-fun lt!37009 () Bool)

(declare-fun d!19375 () Bool)

(assert (=> d!19375 (= lt!37009 (select (content!84 (toList!729 lt!36309)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun e!52097 () Bool)

(assert (=> d!19375 (= lt!37009 e!52097)))

(declare-fun res!41623 () Bool)

(assert (=> d!19375 (=> (not res!41623) (not e!52097))))

(assert (=> d!19375 (= res!41623 ((_ is Cons!1490) (toList!729 lt!36309)))))

(assert (=> d!19375 (= (contains!737 (toList!729 lt!36309) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) lt!37009)))

(declare-fun b!79799 () Bool)

(declare-fun e!52096 () Bool)

(assert (=> b!79799 (= e!52097 e!52096)))

(declare-fun res!41622 () Bool)

(assert (=> b!79799 (=> res!41622 e!52096)))

(assert (=> b!79799 (= res!41622 (= (h!2078 (toList!729 lt!36309)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(declare-fun b!79800 () Bool)

(assert (=> b!79800 (= e!52096 (contains!737 (t!5132 (toList!729 lt!36309)) (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))

(assert (= (and d!19375 res!41623) b!79799))

(assert (= (and b!79799 (not res!41622)) b!79800))

(declare-fun m!81007 () Bool)

(assert (=> d!19375 m!81007))

(declare-fun m!81009 () Bool)

(assert (=> d!19375 m!81009))

(declare-fun m!81011 () Bool)

(assert (=> b!79800 m!81011))

(assert (=> b!78472 d!19375))

(declare-fun d!19377 () Bool)

(declare-fun e!52099 () Bool)

(assert (=> d!19377 e!52099))

(declare-fun res!41624 () Bool)

(assert (=> d!19377 (=> res!41624 e!52099)))

(declare-fun lt!37011 () Bool)

(assert (=> d!19377 (= res!41624 (not lt!37011))))

(declare-fun lt!37013 () Bool)

(assert (=> d!19377 (= lt!37011 lt!37013)))

(declare-fun lt!37012 () Unit!2237)

(declare-fun e!52098 () Unit!2237)

(assert (=> d!19377 (= lt!37012 e!52098)))

(declare-fun c!12438 () Bool)

(assert (=> d!19377 (= c!12438 lt!37013)))

(assert (=> d!19377 (= lt!37013 (containsKey!141 (toList!729 lt!36170) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!19377 (= (contains!736 lt!36170 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37011)))

(declare-fun b!79801 () Bool)

(declare-fun lt!37010 () Unit!2237)

(assert (=> b!79801 (= e!52098 lt!37010)))

(assert (=> b!79801 (= lt!37010 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36170) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> b!79801 (isDefined!90 (getValueByKey!138 (toList!729 lt!36170) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79802 () Bool)

(declare-fun Unit!2309 () Unit!2237)

(assert (=> b!79802 (= e!52098 Unit!2309)))

(declare-fun b!79803 () Bool)

(assert (=> b!79803 (= e!52099 (isDefined!90 (getValueByKey!138 (toList!729 lt!36170) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19377 c!12438) b!79801))

(assert (= (and d!19377 (not c!12438)) b!79802))

(assert (= (and d!19377 (not res!41624)) b!79803))

(declare-fun m!81013 () Bool)

(assert (=> d!19377 m!81013))

(declare-fun m!81015 () Bool)

(assert (=> b!79801 m!81015))

(assert (=> b!79801 m!78417))

(assert (=> b!79801 m!78417))

(declare-fun m!81017 () Bool)

(assert (=> b!79801 m!81017))

(assert (=> b!79803 m!78417))

(assert (=> b!79803 m!78417))

(assert (=> b!79803 m!81017))

(assert (=> d!18527 d!19377))

(declare-fun b!79804 () Bool)

(declare-fun e!52100 () Option!144)

(assert (=> b!79804 (= e!52100 (Some!143 (_2!1092 (h!2078 lt!36169))))))

(declare-fun b!79805 () Bool)

(declare-fun e!52101 () Option!144)

(assert (=> b!79805 (= e!52100 e!52101)))

(declare-fun c!12440 () Bool)

(assert (=> b!79805 (= c!12440 (and ((_ is Cons!1490) lt!36169) (not (= (_1!1092 (h!2078 lt!36169)) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79807 () Bool)

(assert (=> b!79807 (= e!52101 None!142)))

(declare-fun b!79806 () Bool)

(assert (=> b!79806 (= e!52101 (getValueByKey!138 (t!5132 lt!36169) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19379 () Bool)

(declare-fun c!12439 () Bool)

(assert (=> d!19379 (= c!12439 (and ((_ is Cons!1490) lt!36169) (= (_1!1092 (h!2078 lt!36169)) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19379 (= (getValueByKey!138 lt!36169 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52100)))

(assert (= (and d!19379 c!12439) b!79804))

(assert (= (and d!19379 (not c!12439)) b!79805))

(assert (= (and b!79805 c!12440) b!79806))

(assert (= (and b!79805 (not c!12440)) b!79807))

(declare-fun m!81019 () Bool)

(assert (=> b!79806 m!81019))

(assert (=> d!18527 d!19379))

(declare-fun d!19381 () Bool)

(assert (=> d!19381 (= (getValueByKey!138 lt!36169 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!37014 () Unit!2237)

(assert (=> d!19381 (= lt!37014 (choose!468 lt!36169 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!52102 () Bool)

(assert (=> d!19381 e!52102))

(declare-fun res!41625 () Bool)

(assert (=> d!19381 (=> (not res!41625) (not e!52102))))

(assert (=> d!19381 (= res!41625 (isStrictlySorted!282 lt!36169))))

(assert (=> d!19381 (= (lemmaContainsTupThenGetReturnValue!55 lt!36169 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37014)))

(declare-fun b!79808 () Bool)

(declare-fun res!41626 () Bool)

(assert (=> b!79808 (=> (not res!41626) (not e!52102))))

(assert (=> b!79808 (= res!41626 (containsKey!141 lt!36169 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79809 () Bool)

(assert (=> b!79809 (= e!52102 (contains!737 lt!36169 (tuple2!2163 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19381 res!41625) b!79808))

(assert (= (and b!79808 res!41626) b!79809))

(assert (=> d!19381 m!78411))

(declare-fun m!81021 () Bool)

(assert (=> d!19381 m!81021))

(declare-fun m!81023 () Bool)

(assert (=> d!19381 m!81023))

(declare-fun m!81025 () Bool)

(assert (=> b!79808 m!81025))

(declare-fun m!81027 () Bool)

(assert (=> b!79809 m!81027))

(assert (=> d!18527 d!19381))

(declare-fun b!79810 () Bool)

(declare-fun e!52105 () List!1494)

(declare-fun e!52103 () List!1494)

(assert (=> b!79810 (= e!52105 e!52103)))

(declare-fun c!12442 () Bool)

(assert (=> b!79810 (= c!12442 (and ((_ is Cons!1490) (toList!729 lt!35791)) (= (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79811 () Bool)

(declare-fun c!12441 () Bool)

(assert (=> b!79811 (= c!12441 (and ((_ is Cons!1490) (toList!729 lt!35791)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun e!52107 () List!1494)

(assert (=> b!79811 (= e!52103 e!52107)))

(declare-fun b!79812 () Bool)

(declare-fun call!7352 () List!1494)

(assert (=> b!79812 (= e!52107 call!7352)))

(declare-fun b!79813 () Bool)

(declare-fun call!7354 () List!1494)

(assert (=> b!79813 (= e!52103 call!7354)))

(declare-fun bm!7350 () Bool)

(assert (=> bm!7350 (= call!7352 call!7354)))

(declare-fun b!79814 () Bool)

(declare-fun e!52106 () List!1494)

(assert (=> b!79814 (= e!52106 (insertStrictlySorted!58 (t!5132 (toList!729 lt!35791)) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79815 () Bool)

(declare-fun call!7353 () List!1494)

(assert (=> b!79815 (= e!52105 call!7353)))

(declare-fun b!79816 () Bool)

(assert (=> b!79816 (= e!52106 (ite c!12442 (t!5132 (toList!729 lt!35791)) (ite c!12441 (Cons!1490 (h!2078 (toList!729 lt!35791)) (t!5132 (toList!729 lt!35791))) Nil!1491)))))

(declare-fun d!19383 () Bool)

(declare-fun e!52104 () Bool)

(assert (=> d!19383 e!52104))

(declare-fun res!41628 () Bool)

(assert (=> d!19383 (=> (not res!41628) (not e!52104))))

(declare-fun lt!37015 () List!1494)

(assert (=> d!19383 (= res!41628 (isStrictlySorted!282 lt!37015))))

(assert (=> d!19383 (= lt!37015 e!52105)))

(declare-fun c!12444 () Bool)

(assert (=> d!19383 (= c!12444 (and ((_ is Cons!1490) (toList!729 lt!35791)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35791))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19383 (isStrictlySorted!282 (toList!729 lt!35791))))

(assert (=> d!19383 (= (insertStrictlySorted!58 (toList!729 lt!35791) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37015)))

(declare-fun bm!7349 () Bool)

(assert (=> bm!7349 (= call!7354 call!7353)))

(declare-fun b!79817 () Bool)

(declare-fun res!41627 () Bool)

(assert (=> b!79817 (=> (not res!41627) (not e!52104))))

(assert (=> b!79817 (= res!41627 (containsKey!141 lt!37015 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79818 () Bool)

(assert (=> b!79818 (= e!52107 call!7352)))

(declare-fun b!79819 () Bool)

(assert (=> b!79819 (= e!52104 (contains!737 lt!37015 (tuple2!2163 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun bm!7351 () Bool)

(assert (=> bm!7351 (= call!7353 ($colon$colon!68 e!52106 (ite c!12444 (h!2078 (toList!729 lt!35791)) (tuple2!2163 (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun c!12443 () Bool)

(assert (=> bm!7351 (= c!12443 c!12444)))

(assert (= (and d!19383 c!12444) b!79815))

(assert (= (and d!19383 (not c!12444)) b!79810))

(assert (= (and b!79810 c!12442) b!79813))

(assert (= (and b!79810 (not c!12442)) b!79811))

(assert (= (and b!79811 c!12441) b!79818))

(assert (= (and b!79811 (not c!12441)) b!79812))

(assert (= (or b!79818 b!79812) bm!7350))

(assert (= (or b!79813 bm!7350) bm!7349))

(assert (= (or b!79815 bm!7349) bm!7351))

(assert (= (and bm!7351 c!12443) b!79814))

(assert (= (and bm!7351 (not c!12443)) b!79816))

(assert (= (and d!19383 res!41628) b!79817))

(assert (= (and b!79817 res!41627) b!79819))

(declare-fun m!81029 () Bool)

(assert (=> b!79819 m!81029))

(declare-fun m!81031 () Bool)

(assert (=> b!79814 m!81031))

(declare-fun m!81033 () Bool)

(assert (=> b!79817 m!81033))

(declare-fun m!81035 () Bool)

(assert (=> d!19383 m!81035))

(assert (=> d!19383 m!78961))

(declare-fun m!81037 () Bool)

(assert (=> bm!7351 m!81037))

(assert (=> d!18527 d!19383))

(declare-fun b!79820 () Bool)

(declare-fun e!52114 () ListLongMap!1427)

(declare-fun call!7357 () ListLongMap!1427)

(assert (=> b!79820 (= e!52114 call!7357)))

(declare-fun b!79821 () Bool)

(declare-fun e!52115 () ListLongMap!1427)

(declare-fun call!7360 () ListLongMap!1427)

(assert (=> b!79821 (= e!52115 (+!100 call!7360 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)))))

(declare-fun b!79823 () Bool)

(declare-fun e!52117 () Bool)

(assert (=> b!79823 (= e!52117 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7352 () Bool)

(declare-fun call!7359 () Bool)

(declare-fun lt!37036 () ListLongMap!1427)

(assert (=> bm!7352 (= call!7359 (contains!736 lt!37036 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79824 () Bool)

(declare-fun e!52108 () Bool)

(declare-fun e!52119 () Bool)

(assert (=> b!79824 (= e!52108 e!52119)))

(declare-fun c!12445 () Bool)

(assert (=> b!79824 (= c!12445 (not (= (bvand lt!36142 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79825 () Bool)

(declare-fun e!52111 () Unit!2237)

(declare-fun Unit!2310 () Unit!2237)

(assert (=> b!79825 (= e!52111 Unit!2310)))

(declare-fun b!79826 () Bool)

(declare-fun res!41634 () Bool)

(assert (=> b!79826 (=> (not res!41634) (not e!52108))))

(declare-fun e!52120 () Bool)

(assert (=> b!79826 (= res!41634 e!52120)))

(declare-fun c!12447 () Bool)

(assert (=> b!79826 (= c!12447 (not (= (bvand lt!36142 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79827 () Bool)

(declare-fun lt!37024 () Unit!2237)

(assert (=> b!79827 (= e!52111 lt!37024)))

(declare-fun lt!37030 () ListLongMap!1427)

(assert (=> b!79827 (= lt!37030 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36142 (zeroValue!2169 newMap!16) lt!35794 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!37027 () (_ BitVec 64))

(assert (=> b!79827 (= lt!37027 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37028 () (_ BitVec 64))

(assert (=> b!79827 (= lt!37028 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37037 () Unit!2237)

(assert (=> b!79827 (= lt!37037 (addStillContains!55 lt!37030 lt!37027 (zeroValue!2169 newMap!16) lt!37028))))

(assert (=> b!79827 (contains!736 (+!100 lt!37030 (tuple2!2163 lt!37027 (zeroValue!2169 newMap!16))) lt!37028)))

(declare-fun lt!37016 () Unit!2237)

(assert (=> b!79827 (= lt!37016 lt!37037)))

(declare-fun lt!37026 () ListLongMap!1427)

(assert (=> b!79827 (= lt!37026 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36142 (zeroValue!2169 newMap!16) lt!35794 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!37033 () (_ BitVec 64))

(assert (=> b!79827 (= lt!37033 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37031 () (_ BitVec 64))

(assert (=> b!79827 (= lt!37031 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37034 () Unit!2237)

(assert (=> b!79827 (= lt!37034 (addApplyDifferent!55 lt!37026 lt!37033 lt!35794 lt!37031))))

(assert (=> b!79827 (= (apply!79 (+!100 lt!37026 (tuple2!2163 lt!37033 lt!35794)) lt!37031) (apply!79 lt!37026 lt!37031))))

(declare-fun lt!37019 () Unit!2237)

(assert (=> b!79827 (= lt!37019 lt!37034)))

(declare-fun lt!37029 () ListLongMap!1427)

(assert (=> b!79827 (= lt!37029 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36142 (zeroValue!2169 newMap!16) lt!35794 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!37032 () (_ BitVec 64))

(assert (=> b!79827 (= lt!37032 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37022 () (_ BitVec 64))

(assert (=> b!79827 (= lt!37022 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37017 () Unit!2237)

(assert (=> b!79827 (= lt!37017 (addApplyDifferent!55 lt!37029 lt!37032 (zeroValue!2169 newMap!16) lt!37022))))

(assert (=> b!79827 (= (apply!79 (+!100 lt!37029 (tuple2!2163 lt!37032 (zeroValue!2169 newMap!16))) lt!37022) (apply!79 lt!37029 lt!37022))))

(declare-fun lt!37035 () Unit!2237)

(assert (=> b!79827 (= lt!37035 lt!37017)))

(declare-fun lt!37023 () ListLongMap!1427)

(assert (=> b!79827 (= lt!37023 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36142 (zeroValue!2169 newMap!16) lt!35794 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!37021 () (_ BitVec 64))

(assert (=> b!79827 (= lt!37021 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37020 () (_ BitVec 64))

(assert (=> b!79827 (= lt!37020 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79827 (= lt!37024 (addApplyDifferent!55 lt!37023 lt!37021 lt!35794 lt!37020))))

(assert (=> b!79827 (= (apply!79 (+!100 lt!37023 (tuple2!2163 lt!37021 lt!35794)) lt!37020) (apply!79 lt!37023 lt!37020))))

(declare-fun b!79828 () Bool)

(declare-fun e!52109 () Bool)

(assert (=> b!79828 (= e!52119 e!52109)))

(declare-fun res!41631 () Bool)

(assert (=> b!79828 (= res!41631 call!7359)))

(assert (=> b!79828 (=> (not res!41631) (not e!52109))))

(declare-fun bm!7353 () Bool)

(declare-fun call!7361 () ListLongMap!1427)

(assert (=> bm!7353 (= call!7357 call!7361)))

(declare-fun call!7358 () ListLongMap!1427)

(declare-fun bm!7354 () Bool)

(assert (=> bm!7354 (= call!7358 (getCurrentListMapNoExtraKeys!65 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36142 (zeroValue!2169 newMap!16) lt!35794 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!79829 () Bool)

(assert (=> b!79829 (= e!52119 (not call!7359))))

(declare-fun b!79830 () Bool)

(declare-fun call!7355 () Bool)

(assert (=> b!79830 (= e!52120 (not call!7355))))

(declare-fun c!12448 () Bool)

(declare-fun c!12450 () Bool)

(declare-fun bm!7355 () Bool)

(assert (=> bm!7355 (= call!7360 (+!100 (ite c!12450 call!7358 (ite c!12448 call!7361 call!7357)) (ite (or c!12450 c!12448) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794))))))

(declare-fun b!79831 () Bool)

(assert (=> b!79831 (= e!52109 (= (apply!79 lt!37036 #b1000000000000000000000000000000000000000000000000000000000000000) lt!35794))))

(declare-fun b!79832 () Bool)

(declare-fun res!41633 () Bool)

(assert (=> b!79832 (=> (not res!41633) (not e!52108))))

(declare-fun e!52116 () Bool)

(assert (=> b!79832 (= res!41633 e!52116)))

(declare-fun res!41635 () Bool)

(assert (=> b!79832 (=> res!41635 e!52116)))

(declare-fun e!52112 () Bool)

(assert (=> b!79832 (= res!41635 (not e!52112))))

(declare-fun res!41632 () Bool)

(assert (=> b!79832 (=> (not res!41632) (not e!52112))))

(assert (=> b!79832 (= res!41632 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79833 () Bool)

(assert (=> b!79833 (= e!52112 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!19385 () Bool)

(assert (=> d!19385 e!52108))

(declare-fun res!41637 () Bool)

(assert (=> d!19385 (=> (not res!41637) (not e!52108))))

(assert (=> d!19385 (= res!41637 (or (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))))

(declare-fun lt!37025 () ListLongMap!1427)

(assert (=> d!19385 (= lt!37036 lt!37025)))

(declare-fun lt!37018 () Unit!2237)

(assert (=> d!19385 (= lt!37018 e!52111)))

(declare-fun c!12449 () Bool)

(assert (=> d!19385 (= c!12449 e!52117)))

(declare-fun res!41636 () Bool)

(assert (=> d!19385 (=> (not res!41636) (not e!52117))))

(assert (=> d!19385 (= res!41636 (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!19385 (= lt!37025 e!52115)))

(assert (=> d!19385 (= c!12450 (and (not (= (bvand lt!36142 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!36142 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19385 (validMask!0 (mask!6267 newMap!16))))

(assert (=> d!19385 (= (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36142 (zeroValue!2169 newMap!16) lt!35794 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!37036)))

(declare-fun b!79822 () Bool)

(declare-fun e!52113 () ListLongMap!1427)

(assert (=> b!79822 (= e!52115 e!52113)))

(assert (=> b!79822 (= c!12448 (and (not (= (bvand lt!36142 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!36142 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79834 () Bool)

(declare-fun call!7356 () ListLongMap!1427)

(assert (=> b!79834 (= e!52114 call!7356)))

(declare-fun bm!7356 () Bool)

(assert (=> bm!7356 (= call!7355 (contains!736 lt!37036 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7357 () Bool)

(assert (=> bm!7357 (= call!7356 call!7360)))

(declare-fun b!79835 () Bool)

(declare-fun c!12446 () Bool)

(assert (=> b!79835 (= c!12446 (and (not (= (bvand lt!36142 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!36142 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79835 (= e!52113 e!52114)))

(declare-fun b!79836 () Bool)

(declare-fun e!52110 () Bool)

(assert (=> b!79836 (= e!52110 (= (apply!79 lt!37036 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!79837 () Bool)

(assert (=> b!79837 (= e!52120 e!52110)))

(declare-fun res!41630 () Bool)

(assert (=> b!79837 (= res!41630 call!7355)))

(assert (=> b!79837 (=> (not res!41630) (not e!52110))))

(declare-fun b!79838 () Bool)

(declare-fun e!52118 () Bool)

(assert (=> b!79838 (= e!52116 e!52118)))

(declare-fun res!41629 () Bool)

(assert (=> b!79838 (=> (not res!41629) (not e!52118))))

(assert (=> b!79838 (= res!41629 (contains!736 lt!37036 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79838 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79839 () Bool)

(assert (=> b!79839 (= e!52118 (= (apply!79 lt!37036 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1183 (select (arr!1887 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79839 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2128 (_values!2254 newMap!16))))))

(assert (=> b!79839 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79840 () Bool)

(assert (=> b!79840 (= e!52113 call!7356)))

(declare-fun bm!7358 () Bool)

(assert (=> bm!7358 (= call!7361 call!7358)))

(assert (= (and d!19385 c!12450) b!79821))

(assert (= (and d!19385 (not c!12450)) b!79822))

(assert (= (and b!79822 c!12448) b!79840))

(assert (= (and b!79822 (not c!12448)) b!79835))

(assert (= (and b!79835 c!12446) b!79834))

(assert (= (and b!79835 (not c!12446)) b!79820))

(assert (= (or b!79834 b!79820) bm!7353))

(assert (= (or b!79840 bm!7353) bm!7358))

(assert (= (or b!79840 b!79834) bm!7357))

(assert (= (or b!79821 bm!7358) bm!7354))

(assert (= (or b!79821 bm!7357) bm!7355))

(assert (= (and d!19385 res!41636) b!79823))

(assert (= (and d!19385 c!12449) b!79827))

(assert (= (and d!19385 (not c!12449)) b!79825))

(assert (= (and d!19385 res!41637) b!79832))

(assert (= (and b!79832 res!41632) b!79833))

(assert (= (and b!79832 (not res!41635)) b!79838))

(assert (= (and b!79838 res!41629) b!79839))

(assert (= (and b!79832 res!41633) b!79826))

(assert (= (and b!79826 c!12447) b!79837))

(assert (= (and b!79826 (not c!12447)) b!79830))

(assert (= (and b!79837 res!41630) b!79836))

(assert (= (or b!79837 b!79830) bm!7356))

(assert (= (and b!79826 res!41634) b!79824))

(assert (= (and b!79824 c!12445) b!79828))

(assert (= (and b!79824 (not c!12445)) b!79829))

(assert (= (and b!79828 res!41631) b!79831))

(assert (= (or b!79828 b!79829) bm!7352))

(declare-fun b_lambda!3561 () Bool)

(assert (=> (not b_lambda!3561) (not b!79839)))

(assert (=> b!79839 t!5144))

(declare-fun b_and!4897 () Bool)

(assert (= b_and!4893 (and (=> t!5144 result!2821) b_and!4897)))

(assert (=> b!79839 t!5146))

(declare-fun b_and!4899 () Bool)

(assert (= b_and!4895 (and (=> t!5146 result!2823) b_and!4899)))

(assert (=> b!79839 m!78469))

(assert (=> b!79839 m!78471))

(assert (=> b!79839 m!78473))

(assert (=> b!79839 m!78435))

(assert (=> b!79839 m!78469))

(assert (=> b!79839 m!78435))

(declare-fun m!81039 () Bool)

(assert (=> b!79839 m!81039))

(assert (=> b!79839 m!78471))

(assert (=> d!19385 m!78355))

(declare-fun m!81041 () Bool)

(assert (=> bm!7355 m!81041))

(assert (=> b!79838 m!78435))

(assert (=> b!79838 m!78435))

(declare-fun m!81043 () Bool)

(assert (=> b!79838 m!81043))

(declare-fun m!81045 () Bool)

(assert (=> bm!7354 m!81045))

(assert (=> b!79833 m!78435))

(assert (=> b!79833 m!78435))

(assert (=> b!79833 m!78437))

(assert (=> b!79823 m!78435))

(assert (=> b!79823 m!78435))

(assert (=> b!79823 m!78437))

(declare-fun m!81047 () Bool)

(assert (=> b!79827 m!81047))

(declare-fun m!81049 () Bool)

(assert (=> b!79827 m!81049))

(declare-fun m!81051 () Bool)

(assert (=> b!79827 m!81051))

(declare-fun m!81053 () Bool)

(assert (=> b!79827 m!81053))

(declare-fun m!81055 () Bool)

(assert (=> b!79827 m!81055))

(declare-fun m!81057 () Bool)

(assert (=> b!79827 m!81057))

(declare-fun m!81059 () Bool)

(assert (=> b!79827 m!81059))

(declare-fun m!81061 () Bool)

(assert (=> b!79827 m!81061))

(declare-fun m!81063 () Bool)

(assert (=> b!79827 m!81063))

(declare-fun m!81065 () Bool)

(assert (=> b!79827 m!81065))

(assert (=> b!79827 m!81059))

(declare-fun m!81067 () Bool)

(assert (=> b!79827 m!81067))

(assert (=> b!79827 m!81063))

(declare-fun m!81069 () Bool)

(assert (=> b!79827 m!81069))

(assert (=> b!79827 m!81051))

(declare-fun m!81071 () Bool)

(assert (=> b!79827 m!81071))

(assert (=> b!79827 m!81047))

(assert (=> b!79827 m!81045))

(declare-fun m!81073 () Bool)

(assert (=> b!79827 m!81073))

(declare-fun m!81075 () Bool)

(assert (=> b!79827 m!81075))

(assert (=> b!79827 m!78435))

(declare-fun m!81077 () Bool)

(assert (=> b!79821 m!81077))

(declare-fun m!81079 () Bool)

(assert (=> bm!7352 m!81079))

(declare-fun m!81081 () Bool)

(assert (=> bm!7356 m!81081))

(declare-fun m!81083 () Bool)

(assert (=> b!79831 m!81083))

(declare-fun m!81085 () Bool)

(assert (=> b!79836 m!81085))

(assert (=> d!18605 d!19385))

(assert (=> d!18605 d!18541))

(declare-fun d!19387 () Bool)

(declare-fun e!52121 () Bool)

(assert (=> d!19387 e!52121))

(declare-fun res!41638 () Bool)

(assert (=> d!19387 (=> (not res!41638) (not e!52121))))

(declare-fun lt!37039 () ListLongMap!1427)

(assert (=> d!19387 (= res!41638 (contains!736 lt!37039 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794))))))

(declare-fun lt!37038 () List!1494)

(assert (=> d!19387 (= lt!37039 (ListLongMap!1428 lt!37038))))

(declare-fun lt!37040 () Unit!2237)

(declare-fun lt!37041 () Unit!2237)

(assert (=> d!19387 (= lt!37040 lt!37041)))

(assert (=> d!19387 (= (getValueByKey!138 lt!37038 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794))))))

(assert (=> d!19387 (= lt!37041 (lemmaContainsTupThenGetReturnValue!55 lt!37038 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794))))))

(assert (=> d!19387 (= lt!37038 (insertStrictlySorted!58 (toList!729 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794))))))

(assert (=> d!19387 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) lt!37039)))

(declare-fun b!79841 () Bool)

(declare-fun res!41639 () Bool)

(assert (=> b!79841 (=> (not res!41639) (not e!52121))))

(assert (=> b!79841 (= res!41639 (= (getValueByKey!138 (toList!729 lt!37039) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)))))))

(declare-fun b!79842 () Bool)

(assert (=> b!79842 (= e!52121 (contains!737 (toList!729 lt!37039) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)))))

(assert (= (and d!19387 res!41638) b!79841))

(assert (= (and b!79841 res!41639) b!79842))

(declare-fun m!81087 () Bool)

(assert (=> d!19387 m!81087))

(declare-fun m!81089 () Bool)

(assert (=> d!19387 m!81089))

(declare-fun m!81091 () Bool)

(assert (=> d!19387 m!81091))

(declare-fun m!81093 () Bool)

(assert (=> d!19387 m!81093))

(declare-fun m!81095 () Bool)

(assert (=> b!79841 m!81095))

(declare-fun m!81097 () Bool)

(assert (=> b!79842 m!81097))

(assert (=> d!18605 d!19387))

(assert (=> d!18605 d!18767))

(declare-fun d!19389 () Bool)

(assert (=> d!19389 (= (+!100 (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35794)) (getCurrentListMap!425 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) lt!36142 (zeroValue!2169 newMap!16) lt!35794 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(assert (=> d!19389 true))

(declare-fun _$8!67 () Unit!2237)

(assert (=> d!19389 (= (choose!467 (_keys!3931 newMap!16) (_values!2254 newMap!16) (mask!6267 newMap!16) (extraKeys!2122 newMap!16) lt!36142 (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) lt!35794 (defaultEntry!2271 newMap!16)) _$8!67)))

(declare-fun bs!3380 () Bool)

(assert (= bs!3380 d!19389))

(assert (=> bs!3380 m!78223))

(assert (=> bs!3380 m!78223))

(assert (=> bs!3380 m!78695))

(assert (=> bs!3380 m!78693))

(assert (=> d!18605 d!19389))

(declare-fun d!19391 () Bool)

(declare-fun res!41640 () Bool)

(declare-fun e!52122 () Bool)

(assert (=> d!19391 (=> res!41640 e!52122)))

(assert (=> d!19391 (= res!41640 (and ((_ is Cons!1490) lt!35968) (= (_1!1092 (h!2078 lt!35968)) (_1!1092 lt!35792))))))

(assert (=> d!19391 (= (containsKey!141 lt!35968 (_1!1092 lt!35792)) e!52122)))

(declare-fun b!79843 () Bool)

(declare-fun e!52123 () Bool)

(assert (=> b!79843 (= e!52122 e!52123)))

(declare-fun res!41641 () Bool)

(assert (=> b!79843 (=> (not res!41641) (not e!52123))))

(assert (=> b!79843 (= res!41641 (and (or (not ((_ is Cons!1490) lt!35968)) (bvsle (_1!1092 (h!2078 lt!35968)) (_1!1092 lt!35792))) ((_ is Cons!1490) lt!35968) (bvslt (_1!1092 (h!2078 lt!35968)) (_1!1092 lt!35792))))))

(declare-fun b!79844 () Bool)

(assert (=> b!79844 (= e!52123 (containsKey!141 (t!5132 lt!35968) (_1!1092 lt!35792)))))

(assert (= (and d!19391 (not res!41640)) b!79843))

(assert (= (and b!79843 res!41641) b!79844))

(declare-fun m!81099 () Bool)

(assert (=> b!79844 m!81099))

(assert (=> b!78418 d!19391))

(declare-fun d!19393 () Bool)

(declare-fun res!41642 () Bool)

(declare-fun e!52124 () Bool)

(assert (=> d!19393 (=> res!41642 e!52124)))

(assert (=> d!19393 (= res!41642 (and ((_ is Cons!1490) lt!35947) (= (_1!1092 (h!2078 lt!35947)) (_1!1092 lt!35792))))))

(assert (=> d!19393 (= (containsKey!141 lt!35947 (_1!1092 lt!35792)) e!52124)))

(declare-fun b!79845 () Bool)

(declare-fun e!52125 () Bool)

(assert (=> b!79845 (= e!52124 e!52125)))

(declare-fun res!41643 () Bool)

(assert (=> b!79845 (=> (not res!41643) (not e!52125))))

(assert (=> b!79845 (= res!41643 (and (or (not ((_ is Cons!1490) lt!35947)) (bvsle (_1!1092 (h!2078 lt!35947)) (_1!1092 lt!35792))) ((_ is Cons!1490) lt!35947) (bvslt (_1!1092 (h!2078 lt!35947)) (_1!1092 lt!35792))))))

(declare-fun b!79846 () Bool)

(assert (=> b!79846 (= e!52125 (containsKey!141 (t!5132 lt!35947) (_1!1092 lt!35792)))))

(assert (= (and d!19393 (not res!41642)) b!79845))

(assert (= (and b!79845 res!41643) b!79846))

(declare-fun m!81101 () Bool)

(assert (=> b!79846 m!81101))

(assert (=> b!78530 d!19393))

(declare-fun d!19395 () Bool)

(declare-fun lt!37042 () Bool)

(assert (=> d!19395 (= lt!37042 (select (content!84 (toList!729 lt!36317)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!52127 () Bool)

(assert (=> d!19395 (= lt!37042 e!52127)))

(declare-fun res!41645 () Bool)

(assert (=> d!19395 (=> (not res!41645) (not e!52127))))

(assert (=> d!19395 (= res!41645 ((_ is Cons!1490) (toList!729 lt!36317)))))

(assert (=> d!19395 (= (contains!737 (toList!729 lt!36317) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!37042)))

(declare-fun b!79847 () Bool)

(declare-fun e!52126 () Bool)

(assert (=> b!79847 (= e!52127 e!52126)))

(declare-fun res!41644 () Bool)

(assert (=> b!79847 (=> res!41644 e!52126)))

(assert (=> b!79847 (= res!41644 (= (h!2078 (toList!729 lt!36317)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!79848 () Bool)

(assert (=> b!79848 (= e!52126 (contains!737 (t!5132 (toList!729 lt!36317)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!19395 res!41645) b!79847))

(assert (= (and b!79847 (not res!41644)) b!79848))

(declare-fun m!81103 () Bool)

(assert (=> d!19395 m!81103))

(declare-fun m!81105 () Bool)

(assert (=> d!19395 m!81105))

(declare-fun m!81107 () Bool)

(assert (=> b!79848 m!81107))

(assert (=> b!78476 d!19395))

(declare-fun d!19397 () Bool)

(assert (=> d!19397 (contains!736 (getCurrentListMap!425 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1886 (_keys!3931 newMap!16)) (index!3071 lt!36137)))))

(assert (=> d!19397 true))

(declare-fun _$16!99 () Unit!2237)

(assert (=> d!19397 (= (choose!471 (_keys!3931 newMap!16) lt!36131 (mask!6267 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3071 lt!36137) (defaultEntry!2271 newMap!16)) _$16!99)))

(declare-fun bs!3381 () Bool)

(assert (= bs!3381 d!19397))

(assert (=> bs!3381 m!79233))

(assert (=> bs!3381 m!78299))

(assert (=> bs!3381 m!79233))

(assert (=> bs!3381 m!78299))

(assert (=> bs!3381 m!79235))

(assert (=> d!18745 d!19397))

(assert (=> d!18745 d!18767))

(declare-fun b!79849 () Bool)

(declare-fun e!52128 () Option!144)

(assert (=> b!79849 (= e!52128 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36170)))))))

(declare-fun b!79850 () Bool)

(declare-fun e!52129 () Option!144)

(assert (=> b!79850 (= e!52128 e!52129)))

(declare-fun c!12452 () Bool)

(assert (=> b!79850 (= c!12452 (and ((_ is Cons!1490) (toList!729 lt!36170)) (not (= (_1!1092 (h!2078 (toList!729 lt!36170))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79852 () Bool)

(assert (=> b!79852 (= e!52129 None!142)))

(declare-fun b!79851 () Bool)

(assert (=> b!79851 (= e!52129 (getValueByKey!138 (t!5132 (toList!729 lt!36170)) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19399 () Bool)

(declare-fun c!12451 () Bool)

(assert (=> d!19399 (= c!12451 (and ((_ is Cons!1490) (toList!729 lt!36170)) (= (_1!1092 (h!2078 (toList!729 lt!36170))) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19399 (= (getValueByKey!138 (toList!729 lt!36170) (_1!1092 (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52128)))

(assert (= (and d!19399 c!12451) b!79849))

(assert (= (and d!19399 (not c!12451)) b!79850))

(assert (= (and b!79850 c!12452) b!79851))

(assert (= (and b!79850 (not c!12452)) b!79852))

(declare-fun m!81109 () Bool)

(assert (=> b!79851 m!81109))

(assert (=> b!78245 d!19399))

(declare-fun d!19401 () Bool)

(declare-fun res!41646 () Bool)

(declare-fun e!52130 () Bool)

(assert (=> d!19401 (=> res!41646 e!52130)))

(assert (=> d!19401 (= res!41646 (or ((_ is Nil!1491) lt!36329) ((_ is Nil!1491) (t!5132 lt!36329))))))

(assert (=> d!19401 (= (isStrictlySorted!282 lt!36329) e!52130)))

(declare-fun b!79853 () Bool)

(declare-fun e!52131 () Bool)

(assert (=> b!79853 (= e!52130 e!52131)))

(declare-fun res!41647 () Bool)

(assert (=> b!79853 (=> (not res!41647) (not e!52131))))

(assert (=> b!79853 (= res!41647 (bvslt (_1!1092 (h!2078 lt!36329)) (_1!1092 (h!2078 (t!5132 lt!36329)))))))

(declare-fun b!79854 () Bool)

(assert (=> b!79854 (= e!52131 (isStrictlySorted!282 (t!5132 lt!36329)))))

(assert (= (and d!19401 (not res!41646)) b!79853))

(assert (= (and b!79853 res!41647) b!79854))

(declare-fun m!81111 () Bool)

(assert (=> b!79854 m!81111))

(assert (=> d!18651 d!19401))

(assert (=> d!18651 d!18855))

(declare-fun d!19403 () Bool)

(assert (=> d!19403 (isDefined!90 (getValueByKey!138 (toList!729 lt!35953) (_1!1092 lt!35792)))))

(declare-fun lt!37043 () Unit!2237)

(assert (=> d!19403 (= lt!37043 (choose!469 (toList!729 lt!35953) (_1!1092 lt!35792)))))

(declare-fun e!52132 () Bool)

(assert (=> d!19403 e!52132))

(declare-fun res!41648 () Bool)

(assert (=> d!19403 (=> (not res!41648) (not e!52132))))

(assert (=> d!19403 (= res!41648 (isStrictlySorted!282 (toList!729 lt!35953)))))

(assert (=> d!19403 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35953) (_1!1092 lt!35792)) lt!37043)))

(declare-fun b!79855 () Bool)

(assert (=> b!79855 (= e!52132 (containsKey!141 (toList!729 lt!35953) (_1!1092 lt!35792)))))

(assert (= (and d!19403 res!41648) b!79855))

(assert (=> d!19403 m!78139))

(assert (=> d!19403 m!78139))

(assert (=> d!19403 m!79069))

(declare-fun m!81113 () Bool)

(assert (=> d!19403 m!81113))

(declare-fun m!81115 () Bool)

(assert (=> d!19403 m!81115))

(assert (=> b!79855 m!79065))

(assert (=> b!78633 d!19403))

(declare-fun d!19405 () Bool)

(assert (=> d!19405 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!35953) (_1!1092 lt!35792))) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!35953) (_1!1092 lt!35792)))))))

(declare-fun bs!3382 () Bool)

(assert (= bs!3382 d!19405))

(assert (=> bs!3382 m!78139))

(declare-fun m!81117 () Bool)

(assert (=> bs!3382 m!81117))

(assert (=> b!78633 d!19405))

(assert (=> b!78633 d!18679))

(declare-fun d!19407 () Bool)

(declare-fun lt!37044 () Bool)

(assert (=> d!19407 (= lt!37044 (select (content!84 (toList!729 lt!36229)) (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!52134 () Bool)

(assert (=> d!19407 (= lt!37044 e!52134)))

(declare-fun res!41650 () Bool)

(assert (=> d!19407 (=> (not res!41650) (not e!52134))))

(assert (=> d!19407 (= res!41650 ((_ is Cons!1490) (toList!729 lt!36229)))))

(assert (=> d!19407 (= (contains!737 (toList!729 lt!36229) (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!37044)))

(declare-fun b!79856 () Bool)

(declare-fun e!52133 () Bool)

(assert (=> b!79856 (= e!52134 e!52133)))

(declare-fun res!41649 () Bool)

(assert (=> b!79856 (=> res!41649 e!52133)))

(assert (=> b!79856 (= res!41649 (= (h!2078 (toList!729 lt!36229)) (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!79857 () Bool)

(assert (=> b!79857 (= e!52133 (contains!737 (t!5132 (toList!729 lt!36229)) (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!19407 res!41650) b!79856))

(assert (= (and b!79856 (not res!41649)) b!79857))

(declare-fun m!81119 () Bool)

(assert (=> d!19407 m!81119))

(declare-fun m!81121 () Bool)

(assert (=> d!19407 m!81121))

(declare-fun m!81123 () Bool)

(assert (=> b!79857 m!81123))

(assert (=> b!78330 d!19407))

(declare-fun d!19409 () Bool)

(assert (=> d!19409 (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!37045 () Unit!2237)

(assert (=> d!19409 (= lt!37045 (choose!469 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52135 () Bool)

(assert (=> d!19409 e!52135))

(declare-fun res!41651 () Bool)

(assert (=> d!19409 (=> (not res!41651) (not e!52135))))

(assert (=> d!19409 (= res!41651 (isStrictlySorted!282 (toList!729 lt!36049)))))

(assert (=> d!19409 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000) lt!37045)))

(declare-fun b!79858 () Bool)

(assert (=> b!79858 (= e!52135 (containsKey!141 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19409 res!41651) b!79858))

(assert (=> d!19409 m!78349))

(assert (=> d!19409 m!78349))

(assert (=> d!19409 m!78351))

(declare-fun m!81125 () Bool)

(assert (=> d!19409 m!81125))

(assert (=> d!19409 m!79523))

(assert (=> b!79858 m!78345))

(assert (=> b!78226 d!19409))

(declare-fun d!19411 () Bool)

(assert (=> d!19411 (= (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!334 (getValueByKey!138 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3383 () Bool)

(assert (= bs!3383 d!19411))

(assert (=> bs!3383 m!78349))

(declare-fun m!81127 () Bool)

(assert (=> bs!3383 m!81127))

(assert (=> b!78226 d!19411))

(assert (=> b!78226 d!18823))

(declare-fun d!19413 () Bool)

(assert (=> d!19413 (= (apply!79 lt!36180 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1186 (getValueByKey!138 (toList!729 lt!36180) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3384 () Bool)

(assert (= bs!3384 d!19413))

(assert (=> bs!3384 m!78443))

(assert (=> bs!3384 m!80865))

(assert (=> bs!3384 m!80865))

(declare-fun m!81129 () Bool)

(assert (=> bs!3384 m!81129))

(assert (=> b!78261 d!19413))

(assert (=> b!78261 d!18807))

(assert (=> b!78525 d!19169))

(assert (=> b!78525 d!18557))

(declare-fun d!19415 () Bool)

(declare-fun res!41652 () Bool)

(declare-fun e!52136 () Bool)

(assert (=> d!19415 (=> res!41652 e!52136)))

(assert (=> d!19415 (= res!41652 (or ((_ is Nil!1491) lt!36307) ((_ is Nil!1491) (t!5132 lt!36307))))))

(assert (=> d!19415 (= (isStrictlySorted!282 lt!36307) e!52136)))

(declare-fun b!79859 () Bool)

(declare-fun e!52137 () Bool)

(assert (=> b!79859 (= e!52136 e!52137)))

(declare-fun res!41653 () Bool)

(assert (=> b!79859 (=> (not res!41653) (not e!52137))))

(assert (=> b!79859 (= res!41653 (bvslt (_1!1092 (h!2078 lt!36307)) (_1!1092 (h!2078 (t!5132 lt!36307)))))))

(declare-fun b!79860 () Bool)

(assert (=> b!79860 (= e!52137 (isStrictlySorted!282 (t!5132 lt!36307)))))

(assert (= (and d!19415 (not res!41652)) b!79859))

(assert (= (and b!79859 res!41653) b!79860))

(declare-fun m!81131 () Bool)

(assert (=> b!79860 m!81131))

(assert (=> d!18633 d!19415))

(declare-fun d!19417 () Bool)

(declare-fun res!41654 () Bool)

(declare-fun e!52138 () Bool)

(assert (=> d!19417 (=> res!41654 e!52138)))

(assert (=> d!19417 (= res!41654 (or ((_ is Nil!1491) (toList!729 lt!35793)) ((_ is Nil!1491) (t!5132 (toList!729 lt!35793)))))))

(assert (=> d!19417 (= (isStrictlySorted!282 (toList!729 lt!35793)) e!52138)))

(declare-fun b!79861 () Bool)

(declare-fun e!52139 () Bool)

(assert (=> b!79861 (= e!52138 e!52139)))

(declare-fun res!41655 () Bool)

(assert (=> b!79861 (=> (not res!41655) (not e!52139))))

(assert (=> b!79861 (= res!41655 (bvslt (_1!1092 (h!2078 (toList!729 lt!35793))) (_1!1092 (h!2078 (t!5132 (toList!729 lt!35793))))))))

(declare-fun b!79862 () Bool)

(assert (=> b!79862 (= e!52139 (isStrictlySorted!282 (t!5132 (toList!729 lt!35793))))))

(assert (= (and d!19417 (not res!41654)) b!79861))

(assert (= (and b!79861 res!41655) b!79862))

(assert (=> b!79862 m!80491))

(assert (=> d!18633 d!19417))

(declare-fun d!19419 () Bool)

(declare-fun res!41656 () Bool)

(declare-fun e!52140 () Bool)

(assert (=> d!19419 (=> res!41656 e!52140)))

(assert (=> d!19419 (= res!41656 (and ((_ is Cons!1490) (toList!729 e!51123)) (= (_1!1092 (h!2078 (toList!729 e!51123))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (=> d!19419 (= (containsKey!141 (toList!729 e!51123) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) e!52140)))

(declare-fun b!79863 () Bool)

(declare-fun e!52141 () Bool)

(assert (=> b!79863 (= e!52140 e!52141)))

(declare-fun res!41657 () Bool)

(assert (=> b!79863 (=> (not res!41657) (not e!52141))))

(assert (=> b!79863 (= res!41657 (and (or (not ((_ is Cons!1490) (toList!729 e!51123))) (bvsle (_1!1092 (h!2078 (toList!729 e!51123))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))) ((_ is Cons!1490) (toList!729 e!51123)) (bvslt (_1!1092 (h!2078 (toList!729 e!51123))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(declare-fun b!79864 () Bool)

(assert (=> b!79864 (= e!52141 (containsKey!141 (t!5132 (toList!729 e!51123)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!19419 (not res!41656)) b!79863))

(assert (= (and b!79863 res!41657) b!79864))

(assert (=> b!79864 m!77885))

(declare-fun m!81133 () Bool)

(assert (=> b!79864 m!81133))

(assert (=> d!18599 d!19419))

(declare-fun d!19421 () Bool)

(declare-fun e!52143 () Bool)

(assert (=> d!19421 e!52143))

(declare-fun res!41658 () Bool)

(assert (=> d!19421 (=> res!41658 e!52143)))

(declare-fun lt!37047 () Bool)

(assert (=> d!19421 (= res!41658 (not lt!37047))))

(declare-fun lt!37049 () Bool)

(assert (=> d!19421 (= lt!37047 lt!37049)))

(declare-fun lt!37048 () Unit!2237)

(declare-fun e!52142 () Unit!2237)

(assert (=> d!19421 (= lt!37048 e!52142)))

(declare-fun c!12453 () Bool)

(assert (=> d!19421 (= c!12453 lt!37049)))

(assert (=> d!19421 (= lt!37049 (containsKey!141 (toList!729 lt!36309) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> d!19421 (= (contains!736 lt!36309 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!37047)))

(declare-fun b!79865 () Bool)

(declare-fun lt!37046 () Unit!2237)

(assert (=> b!79865 (= e!52142 lt!37046)))

(assert (=> b!79865 (= lt!37046 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36309) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(assert (=> b!79865 (isDefined!90 (getValueByKey!138 (toList!729 lt!36309) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79866 () Bool)

(declare-fun Unit!2311 () Unit!2237)

(assert (=> b!79866 (= e!52142 Unit!2311)))

(declare-fun b!79867 () Bool)

(assert (=> b!79867 (= e!52143 (isDefined!90 (getValueByKey!138 (toList!729 lt!36309) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (= (and d!19421 c!12453) b!79865))

(assert (= (and d!19421 (not c!12453)) b!79866))

(assert (= (and d!19421 (not res!41658)) b!79867))

(declare-fun m!81135 () Bool)

(assert (=> d!19421 m!81135))

(declare-fun m!81137 () Bool)

(assert (=> b!79865 m!81137))

(assert (=> b!79865 m!78843))

(assert (=> b!79865 m!78843))

(declare-fun m!81139 () Bool)

(assert (=> b!79865 m!81139))

(assert (=> b!79867 m!78843))

(assert (=> b!79867 m!78843))

(assert (=> b!79867 m!81139))

(assert (=> d!18635 d!19421))

(declare-fun b!79868 () Bool)

(declare-fun e!52144 () Option!144)

(assert (=> b!79868 (= e!52144 (Some!143 (_2!1092 (h!2078 lt!36308))))))

(declare-fun b!79869 () Bool)

(declare-fun e!52145 () Option!144)

(assert (=> b!79869 (= e!52144 e!52145)))

(declare-fun c!12455 () Bool)

(assert (=> b!79869 (= c!12455 (and ((_ is Cons!1490) lt!36308) (not (= (_1!1092 (h!2078 lt!36308)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!79871 () Bool)

(assert (=> b!79871 (= e!52145 None!142)))

(declare-fun b!79870 () Bool)

(assert (=> b!79870 (= e!52145 (getValueByKey!138 (t!5132 lt!36308) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun c!12454 () Bool)

(declare-fun d!19423 () Bool)

(assert (=> d!19423 (= c!12454 (and ((_ is Cons!1490) lt!36308) (= (_1!1092 (h!2078 lt!36308)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19423 (= (getValueByKey!138 lt!36308 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) e!52144)))

(assert (= (and d!19423 c!12454) b!79868))

(assert (= (and d!19423 (not c!12454)) b!79869))

(assert (= (and b!79869 c!12455) b!79870))

(assert (= (and b!79869 (not c!12455)) b!79871))

(declare-fun m!81141 () Bool)

(assert (=> b!79870 m!81141))

(assert (=> d!18635 d!19423))

(declare-fun d!19425 () Bool)

(assert (=> d!19425 (= (getValueByKey!138 lt!36308 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) (Some!143 (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun lt!37050 () Unit!2237)

(assert (=> d!19425 (= lt!37050 (choose!468 lt!36308 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun e!52146 () Bool)

(assert (=> d!19425 e!52146))

(declare-fun res!41659 () Bool)

(assert (=> d!19425 (=> (not res!41659) (not e!52146))))

(assert (=> d!19425 (= res!41659 (isStrictlySorted!282 lt!36308))))

(assert (=> d!19425 (= (lemmaContainsTupThenGetReturnValue!55 lt!36308 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!37050)))

(declare-fun b!79872 () Bool)

(declare-fun res!41660 () Bool)

(assert (=> b!79872 (=> (not res!41660) (not e!52146))))

(assert (=> b!79872 (= res!41660 (containsKey!141 lt!36308 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79873 () Bool)

(assert (=> b!79873 (= e!52146 (contains!737 lt!36308 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (= (and d!19425 res!41659) b!79872))

(assert (= (and b!79872 res!41660) b!79873))

(assert (=> d!19425 m!78837))

(declare-fun m!81143 () Bool)

(assert (=> d!19425 m!81143))

(declare-fun m!81145 () Bool)

(assert (=> d!19425 m!81145))

(declare-fun m!81147 () Bool)

(assert (=> b!79872 m!81147))

(declare-fun m!81149 () Bool)

(assert (=> b!79873 m!81149))

(assert (=> d!18635 d!19425))

(declare-fun b!79874 () Bool)

(declare-fun e!52149 () List!1494)

(declare-fun e!52147 () List!1494)

(assert (=> b!79874 (= e!52149 e!52147)))

(declare-fun c!12457 () Bool)

(assert (=> b!79874 (= c!12457 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun b!79875 () Bool)

(declare-fun c!12456 () Bool)

(assert (=> b!79875 (= c!12456 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (bvsgt (_1!1092 (h!2078 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun e!52151 () List!1494)

(assert (=> b!79875 (= e!52147 e!52151)))

(declare-fun b!79876 () Bool)

(declare-fun call!7362 () List!1494)

(assert (=> b!79876 (= e!52151 call!7362)))

(declare-fun b!79877 () Bool)

(declare-fun call!7364 () List!1494)

(assert (=> b!79877 (= e!52147 call!7364)))

(declare-fun bm!7360 () Bool)

(assert (=> bm!7360 (= call!7362 call!7364)))

(declare-fun e!52150 () List!1494)

(declare-fun b!79878 () Bool)

(assert (=> b!79878 (= e!52150 (insertStrictlySorted!58 (t!5132 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79879 () Bool)

(declare-fun call!7363 () List!1494)

(assert (=> b!79879 (= e!52149 call!7363)))

(declare-fun b!79880 () Bool)

(assert (=> b!79880 (= e!52150 (ite c!12457 (t!5132 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (ite c!12456 (Cons!1490 (h!2078 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (t!5132 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))) Nil!1491)))))

(declare-fun d!19427 () Bool)

(declare-fun e!52148 () Bool)

(assert (=> d!19427 e!52148))

(declare-fun res!41662 () Bool)

(assert (=> d!19427 (=> (not res!41662) (not e!52148))))

(declare-fun lt!37051 () List!1494)

(assert (=> d!19427 (= res!41662 (isStrictlySorted!282 lt!37051))))

(assert (=> d!19427 (= lt!37051 e!52149)))

(declare-fun c!12459 () Bool)

(assert (=> d!19427 (= c!12459 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (bvslt (_1!1092 (h!2078 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19427 (isStrictlySorted!282 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!19427 (= (insertStrictlySorted!58 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) lt!37051)))

(declare-fun bm!7359 () Bool)

(assert (=> bm!7359 (= call!7364 call!7363)))

(declare-fun b!79881 () Bool)

(declare-fun res!41661 () Bool)

(assert (=> b!79881 (=> (not res!41661) (not e!52148))))

(assert (=> b!79881 (= res!41661 (containsKey!141 lt!37051 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun b!79882 () Bool)

(assert (=> b!79882 (= e!52151 call!7362)))

(declare-fun b!79883 () Bool)

(assert (=> b!79883 (= e!52148 (contains!737 lt!37051 (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(declare-fun bm!7361 () Bool)

(assert (=> bm!7361 (= call!7363 ($colon$colon!68 e!52150 (ite c!12459 (h!2078 (toList!729 (+!100 lt!35804 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (tuple2!2163 (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)) (_2!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun c!12458 () Bool)

(assert (=> bm!7361 (= c!12458 c!12459)))

(assert (= (and d!19427 c!12459) b!79879))

(assert (= (and d!19427 (not c!12459)) b!79874))

(assert (= (and b!79874 c!12457) b!79877))

(assert (= (and b!79874 (not c!12457)) b!79875))

(assert (= (and b!79875 c!12456) b!79882))

(assert (= (and b!79875 (not c!12456)) b!79876))

(assert (= (or b!79882 b!79876) bm!7360))

(assert (= (or b!79877 bm!7360) bm!7359))

(assert (= (or b!79879 bm!7359) bm!7361))

(assert (= (and bm!7361 c!12458) b!79878))

(assert (= (and bm!7361 (not c!12458)) b!79880))

(assert (= (and d!19427 res!41662) b!79881))

(assert (= (and b!79881 res!41661) b!79883))

(declare-fun m!81151 () Bool)

(assert (=> b!79883 m!81151))

(declare-fun m!81153 () Bool)

(assert (=> b!79878 m!81153))

(declare-fun m!81155 () Bool)

(assert (=> b!79881 m!81155))

(declare-fun m!81157 () Bool)

(assert (=> d!19427 m!81157))

(declare-fun m!81159 () Bool)

(assert (=> d!19427 m!81159))

(declare-fun m!81161 () Bool)

(assert (=> bm!7361 m!81161))

(assert (=> d!18635 d!19427))

(declare-fun d!19429 () Bool)

(declare-fun c!12460 () Bool)

(assert (=> d!19429 (= c!12460 ((_ is Nil!1491) (toList!729 lt!35948)))))

(declare-fun e!52152 () (InoxSet tuple2!2162))

(assert (=> d!19429 (= (content!84 (toList!729 lt!35948)) e!52152)))

(declare-fun b!79884 () Bool)

(assert (=> b!79884 (= e!52152 ((as const (Array tuple2!2162 Bool)) false))))

(declare-fun b!79885 () Bool)

(assert (=> b!79885 (= e!52152 ((_ map or) (store ((as const (Array tuple2!2162 Bool)) false) (h!2078 (toList!729 lt!35948)) true) (content!84 (t!5132 (toList!729 lt!35948)))))))

(assert (= (and d!19429 c!12460) b!79884))

(assert (= (and d!19429 (not c!12460)) b!79885))

(declare-fun m!81163 () Bool)

(assert (=> b!79885 m!81163))

(assert (=> b!79885 m!80569))

(assert (=> d!18723 d!19429))

(declare-fun d!19431 () Bool)

(declare-fun e!52153 () Bool)

(assert (=> d!19431 e!52153))

(declare-fun res!41663 () Bool)

(assert (=> d!19431 (=> (not res!41663) (not e!52153))))

(declare-fun lt!37053 () ListLongMap!1427)

(assert (=> d!19431 (= res!41663 (contains!736 lt!37053 (_1!1092 (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(declare-fun lt!37052 () List!1494)

(assert (=> d!19431 (= lt!37053 (ListLongMap!1428 lt!37052))))

(declare-fun lt!37054 () Unit!2237)

(declare-fun lt!37055 () Unit!2237)

(assert (=> d!19431 (= lt!37054 lt!37055)))

(assert (=> d!19431 (= (getValueByKey!138 lt!37052 (_1!1092 (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))) (Some!143 (_2!1092 (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!19431 (= lt!37055 (lemmaContainsTupThenGetReturnValue!55 lt!37052 (_1!1092 (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (_2!1092 (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!19431 (= lt!37052 (insertStrictlySorted!58 (toList!729 (ite c!12131 call!7236 (ite c!12129 call!7239 call!7235))) (_1!1092 (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (_2!1092 (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!19431 (= (+!100 (ite c!12131 call!7236 (ite c!12129 call!7239 call!7235)) (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) lt!37053)))

(declare-fun b!79886 () Bool)

(declare-fun res!41664 () Bool)

(assert (=> b!79886 (=> (not res!41664) (not e!52153))))

(assert (=> b!79886 (= res!41664 (= (getValueByKey!138 (toList!729 lt!37053) (_1!1092 (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))) (Some!143 (_2!1092 (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))))

(declare-fun b!79887 () Bool)

(assert (=> b!79887 (= e!52153 (contains!737 (toList!729 lt!37053) (ite (or c!12131 c!12129) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (= (and d!19431 res!41663) b!79886))

(assert (= (and b!79886 res!41664) b!79887))

(declare-fun m!81165 () Bool)

(assert (=> d!19431 m!81165))

(declare-fun m!81167 () Bool)

(assert (=> d!19431 m!81167))

(declare-fun m!81169 () Bool)

(assert (=> d!19431 m!81169))

(declare-fun m!81171 () Bool)

(assert (=> d!19431 m!81171))

(declare-fun m!81173 () Bool)

(assert (=> b!79886 m!81173))

(declare-fun m!81175 () Bool)

(assert (=> b!79887 m!81175))

(assert (=> bm!7233 d!19431))

(assert (=> d!18715 d!18713))

(declare-fun d!19433 () Bool)

(assert (=> d!19433 (= (getValueByKey!138 lt!35956 (_1!1092 lt!35789)) (Some!143 (_2!1092 lt!35789)))))

(assert (=> d!19433 true))

(declare-fun _$22!395 () Unit!2237)

(assert (=> d!19433 (= (choose!468 lt!35956 (_1!1092 lt!35789) (_2!1092 lt!35789)) _$22!395)))

(declare-fun bs!3385 () Bool)

(assert (= bs!3385 d!19433))

(assert (=> bs!3385 m!78145))

(assert (=> d!18715 d!19433))

(declare-fun d!19435 () Bool)

(declare-fun res!41665 () Bool)

(declare-fun e!52154 () Bool)

(assert (=> d!19435 (=> res!41665 e!52154)))

(assert (=> d!19435 (= res!41665 (or ((_ is Nil!1491) lt!35956) ((_ is Nil!1491) (t!5132 lt!35956))))))

(assert (=> d!19435 (= (isStrictlySorted!282 lt!35956) e!52154)))

(declare-fun b!79888 () Bool)

(declare-fun e!52155 () Bool)

(assert (=> b!79888 (= e!52154 e!52155)))

(declare-fun res!41666 () Bool)

(assert (=> b!79888 (=> (not res!41666) (not e!52155))))

(assert (=> b!79888 (= res!41666 (bvslt (_1!1092 (h!2078 lt!35956)) (_1!1092 (h!2078 (t!5132 lt!35956)))))))

(declare-fun b!79889 () Bool)

(assert (=> b!79889 (= e!52155 (isStrictlySorted!282 (t!5132 lt!35956)))))

(assert (= (and d!19435 (not res!41665)) b!79888))

(assert (= (and b!79888 res!41666) b!79889))

(declare-fun m!81177 () Bool)

(assert (=> b!79889 m!81177))

(assert (=> d!18715 d!19435))

(assert (=> b!78323 d!19261))

(assert (=> b!78323 d!19263))

(declare-fun d!19437 () Bool)

(declare-fun res!41667 () Bool)

(declare-fun e!52156 () Bool)

(assert (=> d!19437 (=> res!41667 e!52156)))

(assert (=> d!19437 (= res!41667 (and ((_ is Cons!1490) lt!36329) (= (_1!1092 (h!2078 lt!36329)) (_1!1092 lt!35806))))))

(assert (=> d!19437 (= (containsKey!141 lt!36329 (_1!1092 lt!35806)) e!52156)))

(declare-fun b!79890 () Bool)

(declare-fun e!52157 () Bool)

(assert (=> b!79890 (= e!52156 e!52157)))

(declare-fun res!41668 () Bool)

(assert (=> b!79890 (=> (not res!41668) (not e!52157))))

(assert (=> b!79890 (= res!41668 (and (or (not ((_ is Cons!1490) lt!36329)) (bvsle (_1!1092 (h!2078 lt!36329)) (_1!1092 lt!35806))) ((_ is Cons!1490) lt!36329) (bvslt (_1!1092 (h!2078 lt!36329)) (_1!1092 lt!35806))))))

(declare-fun b!79891 () Bool)

(assert (=> b!79891 (= e!52157 (containsKey!141 (t!5132 lt!36329) (_1!1092 lt!35806)))))

(assert (= (and d!19437 (not res!41667)) b!79890))

(assert (= (and b!79890 res!41668) b!79891))

(declare-fun m!81179 () Bool)

(assert (=> b!79891 m!81179))

(assert (=> b!78495 d!19437))

(declare-fun d!19439 () Bool)

(declare-fun e!52158 () Bool)

(assert (=> d!19439 e!52158))

(declare-fun res!41669 () Bool)

(assert (=> d!19439 (=> (not res!41669) (not e!52158))))

(declare-fun lt!37057 () ListLongMap!1427)

(assert (=> d!19439 (= res!41669 (contains!736 lt!37057 (_1!1092 (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))))

(declare-fun lt!37056 () List!1494)

(assert (=> d!19439 (= lt!37057 (ListLongMap!1428 lt!37056))))

(declare-fun lt!37058 () Unit!2237)

(declare-fun lt!37059 () Unit!2237)

(assert (=> d!19439 (= lt!37058 lt!37059)))

(assert (=> d!19439 (= (getValueByKey!138 lt!37056 (_1!1092 (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))) (Some!143 (_2!1092 (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))))

(assert (=> d!19439 (= lt!37059 (lemmaContainsTupThenGetReturnValue!55 lt!37056 (_1!1092 (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) (_2!1092 (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))))

(assert (=> d!19439 (= lt!37056 (insertStrictlySorted!58 (toList!729 (ite c!12024 call!7186 (ite c!12022 call!7189 call!7185))) (_1!1092 (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) (_2!1092 (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))))

(assert (=> d!19439 (= (+!100 (ite c!12024 call!7186 (ite c!12022 call!7189 call!7185)) (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) lt!37057)))

(declare-fun b!79892 () Bool)

(declare-fun res!41670 () Bool)

(assert (=> b!79892 (=> (not res!41670) (not e!52158))))

(assert (=> b!79892 (= res!41670 (= (getValueByKey!138 (toList!729 lt!37057) (_1!1092 (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))) (Some!143 (_2!1092 (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))))

(declare-fun b!79893 () Bool)

(assert (=> b!79893 (= e!52158 (contains!737 (toList!729 lt!37057) (ite (or c!12024 c!12022) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(assert (= (and d!19439 res!41669) b!79892))

(assert (= (and b!79892 res!41670) b!79893))

(declare-fun m!81181 () Bool)

(assert (=> d!19439 m!81181))

(declare-fun m!81183 () Bool)

(assert (=> d!19439 m!81183))

(declare-fun m!81185 () Bool)

(assert (=> d!19439 m!81185))

(declare-fun m!81187 () Bool)

(assert (=> d!19439 m!81187))

(declare-fun m!81189 () Bool)

(assert (=> b!79892 m!81189))

(declare-fun m!81191 () Bool)

(assert (=> b!79893 m!81191))

(assert (=> bm!7183 d!19439))

(assert (=> b!78409 d!19203))

(assert (=> b!78409 d!18687))

(declare-fun d!19441 () Bool)

(assert (=> d!19441 (= (get!1186 (getValueByKey!138 (toList!729 lt!36036) lt!36033)) (v!2600 (getValueByKey!138 (toList!729 lt!36036) lt!36033)))))

(assert (=> d!18573 d!19441))

(declare-fun b!79894 () Bool)

(declare-fun e!52159 () Option!144)

(assert (=> b!79894 (= e!52159 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36036)))))))

(declare-fun b!79895 () Bool)

(declare-fun e!52160 () Option!144)

(assert (=> b!79895 (= e!52159 e!52160)))

(declare-fun c!12462 () Bool)

(assert (=> b!79895 (= c!12462 (and ((_ is Cons!1490) (toList!729 lt!36036)) (not (= (_1!1092 (h!2078 (toList!729 lt!36036))) lt!36033))))))

(declare-fun b!79897 () Bool)

(assert (=> b!79897 (= e!52160 None!142)))

(declare-fun b!79896 () Bool)

(assert (=> b!79896 (= e!52160 (getValueByKey!138 (t!5132 (toList!729 lt!36036)) lt!36033))))

(declare-fun d!19443 () Bool)

(declare-fun c!12461 () Bool)

(assert (=> d!19443 (= c!12461 (and ((_ is Cons!1490) (toList!729 lt!36036)) (= (_1!1092 (h!2078 (toList!729 lt!36036))) lt!36033)))))

(assert (=> d!19443 (= (getValueByKey!138 (toList!729 lt!36036) lt!36033) e!52159)))

(assert (= (and d!19443 c!12461) b!79894))

(assert (= (and d!19443 (not c!12461)) b!79895))

(assert (= (and b!79895 c!12462) b!79896))

(assert (= (and b!79895 (not c!12462)) b!79897))

(declare-fun m!81193 () Bool)

(assert (=> b!79896 m!81193))

(assert (=> d!18573 d!19443))

(declare-fun d!19445 () Bool)

(declare-fun e!52162 () Bool)

(assert (=> d!19445 e!52162))

(declare-fun res!41671 () Bool)

(assert (=> d!19445 (=> res!41671 e!52162)))

(declare-fun lt!37061 () Bool)

(assert (=> d!19445 (= res!41671 (not lt!37061))))

(declare-fun lt!37063 () Bool)

(assert (=> d!19445 (= lt!37061 lt!37063)))

(declare-fun lt!37062 () Unit!2237)

(declare-fun e!52161 () Unit!2237)

(assert (=> d!19445 (= lt!37062 e!52161)))

(declare-fun c!12463 () Bool)

(assert (=> d!19445 (= c!12463 lt!37063)))

(assert (=> d!19445 (= lt!37063 (containsKey!141 (toList!729 lt!36433) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!19445 (= (contains!736 lt!36433 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37061)))

(declare-fun b!79898 () Bool)

(declare-fun lt!37060 () Unit!2237)

(assert (=> b!79898 (= e!52161 lt!37060)))

(assert (=> b!79898 (= lt!37060 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36433) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> b!79898 (isDefined!90 (getValueByKey!138 (toList!729 lt!36433) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79899 () Bool)

(declare-fun Unit!2312 () Unit!2237)

(assert (=> b!79899 (= e!52161 Unit!2312)))

(declare-fun b!79900 () Bool)

(assert (=> b!79900 (= e!52162 (isDefined!90 (getValueByKey!138 (toList!729 lt!36433) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19445 c!12463) b!79898))

(assert (= (and d!19445 (not c!12463)) b!79899))

(assert (= (and d!19445 (not res!41671)) b!79900))

(declare-fun m!81195 () Bool)

(assert (=> d!19445 m!81195))

(declare-fun m!81197 () Bool)

(assert (=> b!79898 m!81197))

(assert (=> b!79898 m!79035))

(assert (=> b!79898 m!79035))

(declare-fun m!81199 () Bool)

(assert (=> b!79898 m!81199))

(assert (=> b!79900 m!79035))

(assert (=> b!79900 m!79035))

(assert (=> b!79900 m!81199))

(assert (=> d!18677 d!19445))

(declare-fun b!79901 () Bool)

(declare-fun e!52163 () Option!144)

(assert (=> b!79901 (= e!52163 (Some!143 (_2!1092 (h!2078 lt!36432))))))

(declare-fun b!79902 () Bool)

(declare-fun e!52164 () Option!144)

(assert (=> b!79902 (= e!52163 e!52164)))

(declare-fun c!12465 () Bool)

(assert (=> b!79902 (= c!12465 (and ((_ is Cons!1490) lt!36432) (not (= (_1!1092 (h!2078 lt!36432)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79904 () Bool)

(assert (=> b!79904 (= e!52164 None!142)))

(declare-fun b!79903 () Bool)

(assert (=> b!79903 (= e!52164 (getValueByKey!138 (t!5132 lt!36432) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19447 () Bool)

(declare-fun c!12464 () Bool)

(assert (=> d!19447 (= c!12464 (and ((_ is Cons!1490) lt!36432) (= (_1!1092 (h!2078 lt!36432)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19447 (= (getValueByKey!138 lt!36432 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52163)))

(assert (= (and d!19447 c!12464) b!79901))

(assert (= (and d!19447 (not c!12464)) b!79902))

(assert (= (and b!79902 c!12465) b!79903))

(assert (= (and b!79902 (not c!12465)) b!79904))

(declare-fun m!81201 () Bool)

(assert (=> b!79903 m!81201))

(assert (=> d!18677 d!19447))

(declare-fun d!19449 () Bool)

(assert (=> d!19449 (= (getValueByKey!138 lt!36432 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!37064 () Unit!2237)

(assert (=> d!19449 (= lt!37064 (choose!468 lt!36432 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!52165 () Bool)

(assert (=> d!19449 e!52165))

(declare-fun res!41672 () Bool)

(assert (=> d!19449 (=> (not res!41672) (not e!52165))))

(assert (=> d!19449 (= res!41672 (isStrictlySorted!282 lt!36432))))

(assert (=> d!19449 (= (lemmaContainsTupThenGetReturnValue!55 lt!36432 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37064)))

(declare-fun b!79905 () Bool)

(declare-fun res!41673 () Bool)

(assert (=> b!79905 (=> (not res!41673) (not e!52165))))

(assert (=> b!79905 (= res!41673 (containsKey!141 lt!36432 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79906 () Bool)

(assert (=> b!79906 (= e!52165 (contains!737 lt!36432 (tuple2!2163 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19449 res!41672) b!79905))

(assert (= (and b!79905 res!41673) b!79906))

(assert (=> d!19449 m!79029))

(declare-fun m!81203 () Bool)

(assert (=> d!19449 m!81203))

(declare-fun m!81205 () Bool)

(assert (=> d!19449 m!81205))

(declare-fun m!81207 () Bool)

(assert (=> b!79905 m!81207))

(declare-fun m!81209 () Bool)

(assert (=> b!79906 m!81209))

(assert (=> d!18677 d!19449))

(declare-fun b!79907 () Bool)

(declare-fun e!52168 () List!1494)

(declare-fun e!52166 () List!1494)

(assert (=> b!79907 (= e!52168 e!52166)))

(declare-fun c!12467 () Bool)

(assert (=> b!79907 (= c!12467 (and ((_ is Cons!1490) (toList!729 call!7091)) (= (_1!1092 (h!2078 (toList!729 call!7091))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79908 () Bool)

(declare-fun c!12466 () Bool)

(assert (=> b!79908 (= c!12466 (and ((_ is Cons!1490) (toList!729 call!7091)) (bvsgt (_1!1092 (h!2078 (toList!729 call!7091))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun e!52170 () List!1494)

(assert (=> b!79908 (= e!52166 e!52170)))

(declare-fun b!79909 () Bool)

(declare-fun call!7365 () List!1494)

(assert (=> b!79909 (= e!52170 call!7365)))

(declare-fun b!79910 () Bool)

(declare-fun call!7367 () List!1494)

(assert (=> b!79910 (= e!52166 call!7367)))

(declare-fun bm!7363 () Bool)

(assert (=> bm!7363 (= call!7365 call!7367)))

(declare-fun b!79911 () Bool)

(declare-fun e!52169 () List!1494)

(assert (=> b!79911 (= e!52169 (insertStrictlySorted!58 (t!5132 (toList!729 call!7091)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79912 () Bool)

(declare-fun call!7366 () List!1494)

(assert (=> b!79912 (= e!52168 call!7366)))

(declare-fun b!79913 () Bool)

(assert (=> b!79913 (= e!52169 (ite c!12467 (t!5132 (toList!729 call!7091)) (ite c!12466 (Cons!1490 (h!2078 (toList!729 call!7091)) (t!5132 (toList!729 call!7091))) Nil!1491)))))

(declare-fun d!19451 () Bool)

(declare-fun e!52167 () Bool)

(assert (=> d!19451 e!52167))

(declare-fun res!41675 () Bool)

(assert (=> d!19451 (=> (not res!41675) (not e!52167))))

(declare-fun lt!37065 () List!1494)

(assert (=> d!19451 (= res!41675 (isStrictlySorted!282 lt!37065))))

(assert (=> d!19451 (= lt!37065 e!52168)))

(declare-fun c!12469 () Bool)

(assert (=> d!19451 (= c!12469 (and ((_ is Cons!1490) (toList!729 call!7091)) (bvslt (_1!1092 (h!2078 (toList!729 call!7091))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19451 (isStrictlySorted!282 (toList!729 call!7091))))

(assert (=> d!19451 (= (insertStrictlySorted!58 (toList!729 call!7091) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37065)))

(declare-fun bm!7362 () Bool)

(assert (=> bm!7362 (= call!7367 call!7366)))

(declare-fun b!79914 () Bool)

(declare-fun res!41674 () Bool)

(assert (=> b!79914 (=> (not res!41674) (not e!52167))))

(assert (=> b!79914 (= res!41674 (containsKey!141 lt!37065 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79915 () Bool)

(assert (=> b!79915 (= e!52170 call!7365)))

(declare-fun b!79916 () Bool)

(assert (=> b!79916 (= e!52167 (contains!737 lt!37065 (tuple2!2163 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun bm!7364 () Bool)

(assert (=> bm!7364 (= call!7366 ($colon$colon!68 e!52169 (ite c!12469 (h!2078 (toList!729 call!7091)) (tuple2!2163 (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun c!12468 () Bool)

(assert (=> bm!7364 (= c!12468 c!12469)))

(assert (= (and d!19451 c!12469) b!79912))

(assert (= (and d!19451 (not c!12469)) b!79907))

(assert (= (and b!79907 c!12467) b!79910))

(assert (= (and b!79907 (not c!12467)) b!79908))

(assert (= (and b!79908 c!12466) b!79915))

(assert (= (and b!79908 (not c!12466)) b!79909))

(assert (= (or b!79915 b!79909) bm!7363))

(assert (= (or b!79910 bm!7363) bm!7362))

(assert (= (or b!79912 bm!7362) bm!7364))

(assert (= (and bm!7364 c!12468) b!79911))

(assert (= (and bm!7364 (not c!12468)) b!79913))

(assert (= (and d!19451 res!41675) b!79914))

(assert (= (and b!79914 res!41674) b!79916))

(declare-fun m!81211 () Bool)

(assert (=> b!79916 m!81211))

(declare-fun m!81213 () Bool)

(assert (=> b!79911 m!81213))

(declare-fun m!81215 () Bool)

(assert (=> b!79914 m!81215))

(declare-fun m!81217 () Bool)

(assert (=> d!19451 m!81217))

(declare-fun m!81219 () Bool)

(assert (=> d!19451 m!81219))

(declare-fun m!81221 () Bool)

(assert (=> bm!7364 m!81221))

(assert (=> d!18677 d!19451))

(declare-fun b!79917 () Bool)

(declare-fun e!52173 () List!1494)

(declare-fun e!52171 () List!1494)

(assert (=> b!79917 (= e!52173 e!52171)))

(declare-fun c!12471 () Bool)

(assert (=> b!79917 (= c!12471 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35791))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35791)))) (_1!1092 lt!35792))))))

(declare-fun b!79918 () Bool)

(declare-fun c!12470 () Bool)

(assert (=> b!79918 (= c!12470 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35791))) (bvsgt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35791)))) (_1!1092 lt!35792))))))

(declare-fun e!52175 () List!1494)

(assert (=> b!79918 (= e!52171 e!52175)))

(declare-fun b!79919 () Bool)

(declare-fun call!7368 () List!1494)

(assert (=> b!79919 (= e!52175 call!7368)))

(declare-fun b!79920 () Bool)

(declare-fun call!7370 () List!1494)

(assert (=> b!79920 (= e!52171 call!7370)))

(declare-fun bm!7366 () Bool)

(assert (=> bm!7366 (= call!7368 call!7370)))

(declare-fun b!79921 () Bool)

(declare-fun e!52174 () List!1494)

(assert (=> b!79921 (= e!52174 (insertStrictlySorted!58 (t!5132 (t!5132 (toList!729 lt!35791))) (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(declare-fun b!79922 () Bool)

(declare-fun call!7369 () List!1494)

(assert (=> b!79922 (= e!52173 call!7369)))

(declare-fun b!79923 () Bool)

(assert (=> b!79923 (= e!52174 (ite c!12471 (t!5132 (t!5132 (toList!729 lt!35791))) (ite c!12470 (Cons!1490 (h!2078 (t!5132 (toList!729 lt!35791))) (t!5132 (t!5132 (toList!729 lt!35791)))) Nil!1491)))))

(declare-fun d!19453 () Bool)

(declare-fun e!52172 () Bool)

(assert (=> d!19453 e!52172))

(declare-fun res!41677 () Bool)

(assert (=> d!19453 (=> (not res!41677) (not e!52172))))

(declare-fun lt!37066 () List!1494)

(assert (=> d!19453 (= res!41677 (isStrictlySorted!282 lt!37066))))

(assert (=> d!19453 (= lt!37066 e!52173)))

(declare-fun c!12473 () Bool)

(assert (=> d!19453 (= c!12473 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35791))) (bvslt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35791)))) (_1!1092 lt!35792))))))

(assert (=> d!19453 (isStrictlySorted!282 (t!5132 (toList!729 lt!35791)))))

(assert (=> d!19453 (= (insertStrictlySorted!58 (t!5132 (toList!729 lt!35791)) (_1!1092 lt!35792) (_2!1092 lt!35792)) lt!37066)))

(declare-fun bm!7365 () Bool)

(assert (=> bm!7365 (= call!7370 call!7369)))

(declare-fun b!79924 () Bool)

(declare-fun res!41676 () Bool)

(assert (=> b!79924 (=> (not res!41676) (not e!52172))))

(assert (=> b!79924 (= res!41676 (containsKey!141 lt!37066 (_1!1092 lt!35792)))))

(declare-fun b!79925 () Bool)

(assert (=> b!79925 (= e!52175 call!7368)))

(declare-fun b!79926 () Bool)

(assert (=> b!79926 (= e!52172 (contains!737 lt!37066 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun bm!7367 () Bool)

(assert (=> bm!7367 (= call!7369 ($colon$colon!68 e!52174 (ite c!12473 (h!2078 (t!5132 (toList!729 lt!35791))) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792)))))))

(declare-fun c!12472 () Bool)

(assert (=> bm!7367 (= c!12472 c!12473)))

(assert (= (and d!19453 c!12473) b!79922))

(assert (= (and d!19453 (not c!12473)) b!79917))

(assert (= (and b!79917 c!12471) b!79920))

(assert (= (and b!79917 (not c!12471)) b!79918))

(assert (= (and b!79918 c!12470) b!79925))

(assert (= (and b!79918 (not c!12470)) b!79919))

(assert (= (or b!79925 b!79919) bm!7366))

(assert (= (or b!79920 bm!7366) bm!7365))

(assert (= (or b!79922 bm!7365) bm!7367))

(assert (= (and bm!7367 c!12472) b!79921))

(assert (= (and bm!7367 (not c!12472)) b!79923))

(assert (= (and d!19453 res!41677) b!79924))

(assert (= (and b!79924 res!41676) b!79926))

(declare-fun m!81223 () Bool)

(assert (=> b!79926 m!81223))

(declare-fun m!81225 () Bool)

(assert (=> b!79921 m!81225))

(declare-fun m!81227 () Bool)

(assert (=> b!79924 m!81227))

(declare-fun m!81229 () Bool)

(assert (=> d!19453 m!81229))

(assert (=> d!19453 m!79567))

(declare-fun m!81231 () Bool)

(assert (=> bm!7367 m!81231))

(assert (=> b!78536 d!19453))

(declare-fun d!19455 () Bool)

(assert (=> d!19455 (= (apply!79 lt!36289 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1186 (getValueByKey!138 (toList!729 lt!36289) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3386 () Bool)

(assert (= bs!3386 d!19455))

(assert (=> bs!3386 m!80473))

(assert (=> bs!3386 m!80473))

(declare-fun m!81233 () Bool)

(assert (=> bs!3386 m!81233))

(assert (=> b!78402 d!19455))

(declare-fun d!19457 () Bool)

(declare-fun res!41678 () Bool)

(declare-fun e!52176 () Bool)

(assert (=> d!19457 (=> res!41678 e!52176)))

(assert (=> d!19457 (= res!41678 (and ((_ is Cons!1490) (toList!729 lt!35953)) (= (_1!1092 (h!2078 (toList!729 lt!35953))) (_1!1092 lt!35792))))))

(assert (=> d!19457 (= (containsKey!141 (toList!729 lt!35953) (_1!1092 lt!35792)) e!52176)))

(declare-fun b!79927 () Bool)

(declare-fun e!52177 () Bool)

(assert (=> b!79927 (= e!52176 e!52177)))

(declare-fun res!41679 () Bool)

(assert (=> b!79927 (=> (not res!41679) (not e!52177))))

(assert (=> b!79927 (= res!41679 (and (or (not ((_ is Cons!1490) (toList!729 lt!35953))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35953))) (_1!1092 lt!35792))) ((_ is Cons!1490) (toList!729 lt!35953)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35953))) (_1!1092 lt!35792))))))

(declare-fun b!79928 () Bool)

(assert (=> b!79928 (= e!52177 (containsKey!141 (t!5132 (toList!729 lt!35953)) (_1!1092 lt!35792)))))

(assert (= (and d!19457 (not res!41678)) b!79927))

(assert (= (and b!79927 res!41679) b!79928))

(declare-fun m!81235 () Bool)

(assert (=> b!79928 m!81235))

(assert (=> d!18693 d!19457))

(declare-fun d!19459 () Bool)

(declare-fun e!52179 () Bool)

(assert (=> d!19459 e!52179))

(declare-fun res!41680 () Bool)

(assert (=> d!19459 (=> res!41680 e!52179)))

(declare-fun lt!37068 () Bool)

(assert (=> d!19459 (= res!41680 (not lt!37068))))

(declare-fun lt!37070 () Bool)

(assert (=> d!19459 (= lt!37068 lt!37070)))

(declare-fun lt!37069 () Unit!2237)

(declare-fun e!52178 () Unit!2237)

(assert (=> d!19459 (= lt!37069 e!52178)))

(declare-fun c!12474 () Bool)

(assert (=> d!19459 (= c!12474 lt!37070)))

(assert (=> d!19459 (= lt!37070 (containsKey!141 (toList!729 lt!36229) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!19459 (= (contains!736 lt!36229 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37068)))

(declare-fun b!79929 () Bool)

(declare-fun lt!37067 () Unit!2237)

(assert (=> b!79929 (= e!52178 lt!37067)))

(assert (=> b!79929 (= lt!37067 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36229) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> b!79929 (isDefined!90 (getValueByKey!138 (toList!729 lt!36229) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79930 () Bool)

(declare-fun Unit!2313 () Unit!2237)

(assert (=> b!79930 (= e!52178 Unit!2313)))

(declare-fun b!79931 () Bool)

(assert (=> b!79931 (= e!52179 (isDefined!90 (getValueByKey!138 (toList!729 lt!36229) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19459 c!12474) b!79929))

(assert (= (and d!19459 (not c!12474)) b!79930))

(assert (= (and d!19459 (not res!41680)) b!79931))

(declare-fun m!81237 () Bool)

(assert (=> d!19459 m!81237))

(declare-fun m!81239 () Bool)

(assert (=> b!79929 m!81239))

(assert (=> b!79929 m!78579))

(assert (=> b!79929 m!78579))

(declare-fun m!81241 () Bool)

(assert (=> b!79929 m!81241))

(assert (=> b!79931 m!78579))

(assert (=> b!79931 m!78579))

(assert (=> b!79931 m!81241))

(assert (=> d!18565 d!19459))

(declare-fun b!79932 () Bool)

(declare-fun e!52180 () Option!144)

(assert (=> b!79932 (= e!52180 (Some!143 (_2!1092 (h!2078 lt!36228))))))

(declare-fun b!79933 () Bool)

(declare-fun e!52181 () Option!144)

(assert (=> b!79933 (= e!52180 e!52181)))

(declare-fun c!12476 () Bool)

(assert (=> b!79933 (= c!12476 (and ((_ is Cons!1490) lt!36228) (not (= (_1!1092 (h!2078 lt!36228)) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79935 () Bool)

(assert (=> b!79935 (= e!52181 None!142)))

(declare-fun b!79934 () Bool)

(assert (=> b!79934 (= e!52181 (getValueByKey!138 (t!5132 lt!36228) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19461 () Bool)

(declare-fun c!12475 () Bool)

(assert (=> d!19461 (= c!12475 (and ((_ is Cons!1490) lt!36228) (= (_1!1092 (h!2078 lt!36228)) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19461 (= (getValueByKey!138 lt!36228 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52180)))

(assert (= (and d!19461 c!12475) b!79932))

(assert (= (and d!19461 (not c!12475)) b!79933))

(assert (= (and b!79933 c!12476) b!79934))

(assert (= (and b!79933 (not c!12476)) b!79935))

(declare-fun m!81243 () Bool)

(assert (=> b!79934 m!81243))

(assert (=> d!18565 d!19461))

(declare-fun d!19463 () Bool)

(assert (=> d!19463 (= (getValueByKey!138 lt!36228 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!37071 () Unit!2237)

(assert (=> d!19463 (= lt!37071 (choose!468 lt!36228 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!52182 () Bool)

(assert (=> d!19463 e!52182))

(declare-fun res!41681 () Bool)

(assert (=> d!19463 (=> (not res!41681) (not e!52182))))

(assert (=> d!19463 (= res!41681 (isStrictlySorted!282 lt!36228))))

(assert (=> d!19463 (= (lemmaContainsTupThenGetReturnValue!55 lt!36228 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37071)))

(declare-fun b!79936 () Bool)

(declare-fun res!41682 () Bool)

(assert (=> b!79936 (=> (not res!41682) (not e!52182))))

(assert (=> b!79936 (= res!41682 (containsKey!141 lt!36228 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79937 () Bool)

(assert (=> b!79937 (= e!52182 (contains!737 lt!36228 (tuple2!2163 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19463 res!41681) b!79936))

(assert (= (and b!79936 res!41682) b!79937))

(assert (=> d!19463 m!78573))

(declare-fun m!81245 () Bool)

(assert (=> d!19463 m!81245))

(declare-fun m!81247 () Bool)

(assert (=> d!19463 m!81247))

(declare-fun m!81249 () Bool)

(assert (=> b!79936 m!81249))

(declare-fun m!81251 () Bool)

(assert (=> b!79937 m!81251))

(assert (=> d!18565 d!19463))

(declare-fun b!79938 () Bool)

(declare-fun e!52185 () List!1494)

(declare-fun e!52183 () List!1494)

(assert (=> b!79938 (= e!52185 e!52183)))

(declare-fun c!12478 () Bool)

(assert (=> b!79938 (= c!12478 (and ((_ is Cons!1490) (toList!729 lt!36042)) (= (_1!1092 (h!2078 (toList!729 lt!36042))) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!79939 () Bool)

(declare-fun c!12477 () Bool)

(assert (=> b!79939 (= c!12477 (and ((_ is Cons!1490) (toList!729 lt!36042)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!36042))) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun e!52187 () List!1494)

(assert (=> b!79939 (= e!52183 e!52187)))

(declare-fun b!79940 () Bool)

(declare-fun call!7371 () List!1494)

(assert (=> b!79940 (= e!52187 call!7371)))

(declare-fun b!79941 () Bool)

(declare-fun call!7373 () List!1494)

(assert (=> b!79941 (= e!52183 call!7373)))

(declare-fun bm!7369 () Bool)

(assert (=> bm!7369 (= call!7371 call!7373)))

(declare-fun b!79942 () Bool)

(declare-fun e!52186 () List!1494)

(assert (=> b!79942 (= e!52186 (insertStrictlySorted!58 (t!5132 (toList!729 lt!36042)) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79943 () Bool)

(declare-fun call!7372 () List!1494)

(assert (=> b!79943 (= e!52185 call!7372)))

(declare-fun b!79944 () Bool)

(assert (=> b!79944 (= e!52186 (ite c!12478 (t!5132 (toList!729 lt!36042)) (ite c!12477 (Cons!1490 (h!2078 (toList!729 lt!36042)) (t!5132 (toList!729 lt!36042))) Nil!1491)))))

(declare-fun d!19465 () Bool)

(declare-fun e!52184 () Bool)

(assert (=> d!19465 e!52184))

(declare-fun res!41684 () Bool)

(assert (=> d!19465 (=> (not res!41684) (not e!52184))))

(declare-fun lt!37072 () List!1494)

(assert (=> d!19465 (= res!41684 (isStrictlySorted!282 lt!37072))))

(assert (=> d!19465 (= lt!37072 e!52185)))

(declare-fun c!12480 () Bool)

(assert (=> d!19465 (= c!12480 (and ((_ is Cons!1490) (toList!729 lt!36042)) (bvslt (_1!1092 (h!2078 (toList!729 lt!36042))) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19465 (isStrictlySorted!282 (toList!729 lt!36042))))

(assert (=> d!19465 (= (insertStrictlySorted!58 (toList!729 lt!36042) (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37072)))

(declare-fun bm!7368 () Bool)

(assert (=> bm!7368 (= call!7373 call!7372)))

(declare-fun b!79945 () Bool)

(declare-fun res!41683 () Bool)

(assert (=> b!79945 (=> (not res!41683) (not e!52184))))

(assert (=> b!79945 (= res!41683 (containsKey!141 lt!37072 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!79946 () Bool)

(assert (=> b!79946 (= e!52187 call!7371)))

(declare-fun b!79947 () Bool)

(assert (=> b!79947 (= e!52184 (contains!737 lt!37072 (tuple2!2163 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun bm!7370 () Bool)

(assert (=> bm!7370 (= call!7372 ($colon$colon!68 e!52186 (ite c!12480 (h!2078 (toList!729 lt!36042)) (tuple2!2163 (_1!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36045 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun c!12479 () Bool)

(assert (=> bm!7370 (= c!12479 c!12480)))

(assert (= (and d!19465 c!12480) b!79943))

(assert (= (and d!19465 (not c!12480)) b!79938))

(assert (= (and b!79938 c!12478) b!79941))

(assert (= (and b!79938 (not c!12478)) b!79939))

(assert (= (and b!79939 c!12477) b!79946))

(assert (= (and b!79939 (not c!12477)) b!79940))

(assert (= (or b!79946 b!79940) bm!7369))

(assert (= (or b!79941 bm!7369) bm!7368))

(assert (= (or b!79943 bm!7368) bm!7370))

(assert (= (and bm!7370 c!12479) b!79942))

(assert (= (and bm!7370 (not c!12479)) b!79944))

(assert (= (and d!19465 res!41684) b!79945))

(assert (= (and b!79945 res!41683) b!79947))

(declare-fun m!81253 () Bool)

(assert (=> b!79947 m!81253))

(declare-fun m!81255 () Bool)

(assert (=> b!79942 m!81255))

(declare-fun m!81257 () Bool)

(assert (=> b!79945 m!81257))

(declare-fun m!81259 () Bool)

(assert (=> d!19465 m!81259))

(declare-fun m!81261 () Bool)

(assert (=> d!19465 m!81261))

(declare-fun m!81263 () Bool)

(assert (=> bm!7370 m!81263))

(assert (=> d!18565 d!19465))

(declare-fun d!19467 () Bool)

(declare-fun res!41685 () Bool)

(declare-fun e!52188 () Bool)

(assert (=> d!19467 (=> res!41685 e!52188)))

(assert (=> d!19467 (= res!41685 (and ((_ is Cons!1490) lt!36307) (= (_1!1092 (h!2078 lt!36307)) (_1!1092 lt!35789))))))

(assert (=> d!19467 (= (containsKey!141 lt!36307 (_1!1092 lt!35789)) e!52188)))

(declare-fun b!79948 () Bool)

(declare-fun e!52189 () Bool)

(assert (=> b!79948 (= e!52188 e!52189)))

(declare-fun res!41686 () Bool)

(assert (=> b!79948 (=> (not res!41686) (not e!52189))))

(assert (=> b!79948 (= res!41686 (and (or (not ((_ is Cons!1490) lt!36307)) (bvsle (_1!1092 (h!2078 lt!36307)) (_1!1092 lt!35789))) ((_ is Cons!1490) lt!36307) (bvslt (_1!1092 (h!2078 lt!36307)) (_1!1092 lt!35789))))))

(declare-fun b!79949 () Bool)

(assert (=> b!79949 (= e!52189 (containsKey!141 (t!5132 lt!36307) (_1!1092 lt!35789)))))

(assert (= (and d!19467 (not res!41685)) b!79948))

(assert (= (and b!79948 res!41686) b!79949))

(declare-fun m!81265 () Bool)

(assert (=> b!79949 m!81265))

(assert (=> b!78468 d!19467))

(declare-fun call!7374 () Bool)

(declare-fun c!12481 () Bool)

(declare-fun bm!7371 () Bool)

(assert (=> bm!7371 (= call!7374 (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12481 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!12116 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492))) (ite c!12116 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)))))))

(declare-fun e!52193 () Bool)

(declare-fun b!79951 () Bool)

(assert (=> b!79951 (= e!52193 (contains!738 (ite c!12116 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!79952 () Bool)

(declare-fun e!52191 () Bool)

(declare-fun e!52190 () Bool)

(assert (=> b!79952 (= e!52191 e!52190)))

(assert (=> b!79952 (= c!12481 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!79953 () Bool)

(declare-fun e!52192 () Bool)

(assert (=> b!79953 (= e!52192 e!52191)))

(declare-fun res!41687 () Bool)

(assert (=> b!79953 (=> (not res!41687) (not e!52191))))

(assert (=> b!79953 (= res!41687 (not e!52193))))

(declare-fun res!41689 () Bool)

(assert (=> b!79953 (=> (not res!41689) (not e!52193))))

(assert (=> b!79953 (= res!41689 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!79954 () Bool)

(assert (=> b!79954 (= e!52190 call!7374)))

(declare-fun d!19469 () Bool)

(declare-fun res!41688 () Bool)

(assert (=> d!19469 (=> res!41688 e!52192)))

(assert (=> d!19469 (= res!41688 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!19469 (= (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12116 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492))) e!52192)))

(declare-fun b!79950 () Bool)

(assert (=> b!79950 (= e!52190 call!7374)))

(assert (= (and d!19469 (not res!41688)) b!79953))

(assert (= (and b!79953 res!41689) b!79951))

(assert (= (and b!79953 res!41687) b!79952))

(assert (= (and b!79952 c!12481) b!79954))

(assert (= (and b!79952 (not c!12481)) b!79950))

(assert (= (or b!79954 b!79950) bm!7371))

(declare-fun m!81267 () Bool)

(assert (=> bm!7371 m!81267))

(declare-fun m!81269 () Bool)

(assert (=> bm!7371 m!81269))

(assert (=> b!79951 m!81267))

(assert (=> b!79951 m!81267))

(declare-fun m!81271 () Bool)

(assert (=> b!79951 m!81271))

(assert (=> b!79952 m!81267))

(assert (=> b!79952 m!81267))

(declare-fun m!81273 () Bool)

(assert (=> b!79952 m!81273))

(assert (=> b!79953 m!81267))

(assert (=> b!79953 m!81267))

(assert (=> b!79953 m!81273))

(assert (=> bm!7229 d!19469))

(declare-fun b!79955 () Bool)

(declare-fun e!52194 () Option!144)

(assert (=> b!79955 (= e!52194 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36433)))))))

(declare-fun b!79956 () Bool)

(declare-fun e!52195 () Option!144)

(assert (=> b!79956 (= e!52194 e!52195)))

(declare-fun c!12483 () Bool)

(assert (=> b!79956 (= c!12483 (and ((_ is Cons!1490) (toList!729 lt!36433)) (not (= (_1!1092 (h!2078 (toList!729 lt!36433))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!79958 () Bool)

(assert (=> b!79958 (= e!52195 None!142)))

(declare-fun b!79957 () Bool)

(assert (=> b!79957 (= e!52195 (getValueByKey!138 (t!5132 (toList!729 lt!36433)) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19471 () Bool)

(declare-fun c!12482 () Bool)

(assert (=> d!19471 (= c!12482 (and ((_ is Cons!1490) (toList!729 lt!36433)) (= (_1!1092 (h!2078 (toList!729 lt!36433))) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19471 (= (getValueByKey!138 (toList!729 lt!36433) (_1!1092 (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52194)))

(assert (= (and d!19471 c!12482) b!79955))

(assert (= (and d!19471 (not c!12482)) b!79956))

(assert (= (and b!79956 c!12483) b!79957))

(assert (= (and b!79956 (not c!12483)) b!79958))

(declare-fun m!81275 () Bool)

(assert (=> b!79957 m!81275))

(assert (=> b!78605 d!19471))

(declare-fun d!19473 () Bool)

(assert (=> d!19473 (= (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36033)) (v!2600 (getValueByKey!138 (toList!729 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36033)))))

(assert (=> d!18589 d!19473))

(declare-fun b!79959 () Bool)

(declare-fun e!52196 () Option!144)

(assert (=> b!79959 (= e!52196 (Some!143 (_2!1092 (h!2078 (toList!729 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))))))

(declare-fun b!79960 () Bool)

(declare-fun e!52197 () Option!144)

(assert (=> b!79960 (= e!52196 e!52197)))

(declare-fun c!12485 () Bool)

(assert (=> b!79960 (= c!12485 (and ((_ is Cons!1490) (toList!729 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (not (= (_1!1092 (h!2078 (toList!729 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36033))))))

(declare-fun b!79962 () Bool)

(assert (=> b!79962 (= e!52197 None!142)))

(declare-fun b!79961 () Bool)

(assert (=> b!79961 (= e!52197 (getValueByKey!138 (t!5132 (toList!729 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) lt!36033))))

(declare-fun d!19475 () Bool)

(declare-fun c!12484 () Bool)

(assert (=> d!19475 (= c!12484 (and ((_ is Cons!1490) (toList!729 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36033)))))

(assert (=> d!19475 (= (getValueByKey!138 (toList!729 (+!100 lt!36036 (tuple2!2163 lt!36034 (minValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36033) e!52196)))

(assert (= (and d!19475 c!12484) b!79959))

(assert (= (and d!19475 (not c!12484)) b!79960))

(assert (= (and b!79960 c!12485) b!79961))

(assert (= (and b!79960 (not c!12485)) b!79962))

(declare-fun m!81277 () Bool)

(assert (=> b!79961 m!81277))

(assert (=> d!18589 d!19475))

(declare-fun d!19477 () Bool)

(declare-fun res!41690 () Bool)

(declare-fun e!52198 () Bool)

(assert (=> d!19477 (=> res!41690 e!52198)))

(assert (=> d!19477 (= res!41690 (and ((_ is Cons!1490) (toList!729 lt!36049)) (= (_1!1092 (h!2078 (toList!729 lt!36049))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19477 (= (containsKey!141 (toList!729 lt!36049) #b0000000000000000000000000000000000000000000000000000000000000000) e!52198)))

(declare-fun b!79963 () Bool)

(declare-fun e!52199 () Bool)

(assert (=> b!79963 (= e!52198 e!52199)))

(declare-fun res!41691 () Bool)

(assert (=> b!79963 (=> (not res!41691) (not e!52199))))

(assert (=> b!79963 (= res!41691 (and (or (not ((_ is Cons!1490) (toList!729 lt!36049))) (bvsle (_1!1092 (h!2078 (toList!729 lt!36049))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1490) (toList!729 lt!36049)) (bvslt (_1!1092 (h!2078 (toList!729 lt!36049))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79964 () Bool)

(assert (=> b!79964 (= e!52199 (containsKey!141 (t!5132 (toList!729 lt!36049)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19477 (not res!41690)) b!79963))

(assert (= (and b!79963 res!41691) b!79964))

(declare-fun m!81279 () Bool)

(assert (=> b!79964 m!81279))

(assert (=> d!18511 d!19477))

(declare-fun d!19479 () Bool)

(declare-fun res!41692 () Bool)

(declare-fun e!52200 () Bool)

(assert (=> d!19479 (=> (not res!41692) (not e!52200))))

(assert (=> d!19479 (= res!41692 (simpleValid!55 (_2!1093 lt!36425)))))

(assert (=> d!19479 (= (valid!323 (_2!1093 lt!36425)) e!52200)))

(declare-fun b!79965 () Bool)

(declare-fun res!41693 () Bool)

(assert (=> b!79965 (=> (not res!41693) (not e!52200))))

(assert (=> b!79965 (= res!41693 (= (arrayCountValidKeys!0 (_keys!3931 (_2!1093 lt!36425)) #b00000000000000000000000000000000 (size!2127 (_keys!3931 (_2!1093 lt!36425)))) (_size!414 (_2!1093 lt!36425))))))

(declare-fun b!79966 () Bool)

(declare-fun res!41694 () Bool)

(assert (=> b!79966 (=> (not res!41694) (not e!52200))))

(assert (=> b!79966 (= res!41694 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3931 (_2!1093 lt!36425)) (mask!6267 (_2!1093 lt!36425))))))

(declare-fun b!79967 () Bool)

(assert (=> b!79967 (= e!52200 (arrayNoDuplicates!0 (_keys!3931 (_2!1093 lt!36425)) #b00000000000000000000000000000000 Nil!1492))))

(assert (= (and d!19479 res!41692) b!79965))

(assert (= (and b!79965 res!41693) b!79966))

(assert (= (and b!79966 res!41694) b!79967))

(declare-fun m!81281 () Bool)

(assert (=> d!19479 m!81281))

(declare-fun m!81283 () Bool)

(assert (=> b!79965 m!81283))

(declare-fun m!81285 () Bool)

(assert (=> b!79966 m!81285))

(declare-fun m!81287 () Bool)

(assert (=> b!79967 m!81287))

(assert (=> b!78590 d!19479))

(declare-fun b!79968 () Bool)

(declare-fun e!52203 () List!1494)

(declare-fun e!52201 () List!1494)

(assert (=> b!79968 (= e!52203 e!52201)))

(declare-fun c!12487 () Bool)

(assert (=> b!79968 (= c!12487 (and ((_ is Cons!1490) (t!5132 (toList!729 (+!100 lt!35804 lt!35806)))) (= (_1!1092 (h!2078 (t!5132 (toList!729 (+!100 lt!35804 lt!35806))))) (_1!1092 lt!35792))))))

(declare-fun b!79969 () Bool)

(declare-fun c!12486 () Bool)

(assert (=> b!79969 (= c!12486 (and ((_ is Cons!1490) (t!5132 (toList!729 (+!100 lt!35804 lt!35806)))) (bvsgt (_1!1092 (h!2078 (t!5132 (toList!729 (+!100 lt!35804 lt!35806))))) (_1!1092 lt!35792))))))

(declare-fun e!52205 () List!1494)

(assert (=> b!79969 (= e!52201 e!52205)))

(declare-fun b!79970 () Bool)

(declare-fun call!7375 () List!1494)

(assert (=> b!79970 (= e!52205 call!7375)))

(declare-fun b!79971 () Bool)

(declare-fun call!7377 () List!1494)

(assert (=> b!79971 (= e!52201 call!7377)))

(declare-fun bm!7373 () Bool)

(assert (=> bm!7373 (= call!7375 call!7377)))

(declare-fun b!79972 () Bool)

(declare-fun e!52204 () List!1494)

(assert (=> b!79972 (= e!52204 (insertStrictlySorted!58 (t!5132 (t!5132 (toList!729 (+!100 lt!35804 lt!35806)))) (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(declare-fun b!79973 () Bool)

(declare-fun call!7376 () List!1494)

(assert (=> b!79973 (= e!52203 call!7376)))

(declare-fun b!79974 () Bool)

(assert (=> b!79974 (= e!52204 (ite c!12487 (t!5132 (t!5132 (toList!729 (+!100 lt!35804 lt!35806)))) (ite c!12486 (Cons!1490 (h!2078 (t!5132 (toList!729 (+!100 lt!35804 lt!35806)))) (t!5132 (t!5132 (toList!729 (+!100 lt!35804 lt!35806))))) Nil!1491)))))

(declare-fun d!19481 () Bool)

(declare-fun e!52202 () Bool)

(assert (=> d!19481 e!52202))

(declare-fun res!41696 () Bool)

(assert (=> d!19481 (=> (not res!41696) (not e!52202))))

(declare-fun lt!37073 () List!1494)

(assert (=> d!19481 (= res!41696 (isStrictlySorted!282 lt!37073))))

(assert (=> d!19481 (= lt!37073 e!52203)))

(declare-fun c!12489 () Bool)

(assert (=> d!19481 (= c!12489 (and ((_ is Cons!1490) (t!5132 (toList!729 (+!100 lt!35804 lt!35806)))) (bvslt (_1!1092 (h!2078 (t!5132 (toList!729 (+!100 lt!35804 lt!35806))))) (_1!1092 lt!35792))))))

(assert (=> d!19481 (isStrictlySorted!282 (t!5132 (toList!729 (+!100 lt!35804 lt!35806))))))

(assert (=> d!19481 (= (insertStrictlySorted!58 (t!5132 (toList!729 (+!100 lt!35804 lt!35806))) (_1!1092 lt!35792) (_2!1092 lt!35792)) lt!37073)))

(declare-fun bm!7372 () Bool)

(assert (=> bm!7372 (= call!7377 call!7376)))

(declare-fun b!79975 () Bool)

(declare-fun res!41695 () Bool)

(assert (=> b!79975 (=> (not res!41695) (not e!52202))))

(assert (=> b!79975 (= res!41695 (containsKey!141 lt!37073 (_1!1092 lt!35792)))))

(declare-fun b!79976 () Bool)

(assert (=> b!79976 (= e!52205 call!7375)))

(declare-fun b!79977 () Bool)

(assert (=> b!79977 (= e!52202 (contains!737 lt!37073 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun bm!7374 () Bool)

(assert (=> bm!7374 (= call!7376 ($colon$colon!68 e!52204 (ite c!12489 (h!2078 (t!5132 (toList!729 (+!100 lt!35804 lt!35806)))) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792)))))))

(declare-fun c!12488 () Bool)

(assert (=> bm!7374 (= c!12488 c!12489)))

(assert (= (and d!19481 c!12489) b!79973))

(assert (= (and d!19481 (not c!12489)) b!79968))

(assert (= (and b!79968 c!12487) b!79971))

(assert (= (and b!79968 (not c!12487)) b!79969))

(assert (= (and b!79969 c!12486) b!79976))

(assert (= (and b!79969 (not c!12486)) b!79970))

(assert (= (or b!79976 b!79970) bm!7373))

(assert (= (or b!79971 bm!7373) bm!7372))

(assert (= (or b!79973 bm!7372) bm!7374))

(assert (= (and bm!7374 c!12488) b!79972))

(assert (= (and bm!7374 (not c!12488)) b!79974))

(assert (= (and d!19481 res!41696) b!79975))

(assert (= (and b!79975 res!41695) b!79977))

(declare-fun m!81289 () Bool)

(assert (=> b!79977 m!81289))

(declare-fun m!81291 () Bool)

(assert (=> b!79972 m!81291))

(declare-fun m!81293 () Bool)

(assert (=> b!79975 m!81293))

(declare-fun m!81295 () Bool)

(assert (=> d!19481 m!81295))

(assert (=> d!19481 m!79811))

(declare-fun m!81297 () Bool)

(assert (=> bm!7374 m!81297))

(assert (=> b!78646 d!19481))

(declare-fun d!19483 () Bool)

(declare-fun e!52207 () Bool)

(assert (=> d!19483 e!52207))

(declare-fun res!41697 () Bool)

(assert (=> d!19483 (=> res!41697 e!52207)))

(declare-fun lt!37075 () Bool)

(assert (=> d!19483 (= res!41697 (not lt!37075))))

(declare-fun lt!37077 () Bool)

(assert (=> d!19483 (= lt!37075 lt!37077)))

(declare-fun lt!37076 () Unit!2237)

(declare-fun e!52206 () Unit!2237)

(assert (=> d!19483 (= lt!37076 e!52206)))

(declare-fun c!12490 () Bool)

(assert (=> d!19483 (= c!12490 lt!37077)))

(assert (=> d!19483 (= lt!37077 (containsKey!141 (toList!729 lt!36180) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19483 (= (contains!736 lt!36180 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37075)))

(declare-fun b!79978 () Bool)

(declare-fun lt!37074 () Unit!2237)

(assert (=> b!79978 (= e!52206 lt!37074)))

(assert (=> b!79978 (= lt!37074 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36180) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79978 (isDefined!90 (getValueByKey!138 (toList!729 lt!36180) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79979 () Bool)

(declare-fun Unit!2314 () Unit!2237)

(assert (=> b!79979 (= e!52206 Unit!2314)))

(declare-fun b!79980 () Bool)

(assert (=> b!79980 (= e!52207 (isDefined!90 (getValueByKey!138 (toList!729 lt!36180) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19483 c!12490) b!79978))

(assert (= (and d!19483 (not c!12490)) b!79979))

(assert (= (and d!19483 (not res!41697)) b!79980))

(declare-fun m!81299 () Bool)

(assert (=> d!19483 m!81299))

(declare-fun m!81301 () Bool)

(assert (=> b!79978 m!81301))

(declare-fun m!81303 () Bool)

(assert (=> b!79978 m!81303))

(assert (=> b!79978 m!81303))

(declare-fun m!81305 () Bool)

(assert (=> b!79978 m!81305))

(assert (=> b!79980 m!81303))

(assert (=> b!79980 m!81303))

(assert (=> b!79980 m!81305))

(assert (=> d!18537 d!19483))

(assert (=> d!18537 d!18473))

(assert (=> b!78377 d!18833))

(assert (=> d!18681 d!18487))

(declare-fun d!19485 () Bool)

(declare-fun lt!37078 () Bool)

(assert (=> d!19485 (= lt!37078 (select (content!84 (t!5132 (toList!729 lt!35973))) lt!35789))))

(declare-fun e!52209 () Bool)

(assert (=> d!19485 (= lt!37078 e!52209)))

(declare-fun res!41699 () Bool)

(assert (=> d!19485 (=> (not res!41699) (not e!52209))))

(assert (=> d!19485 (= res!41699 ((_ is Cons!1490) (t!5132 (toList!729 lt!35973))))))

(assert (=> d!19485 (= (contains!737 (t!5132 (toList!729 lt!35973)) lt!35789) lt!37078)))

(declare-fun b!79981 () Bool)

(declare-fun e!52208 () Bool)

(assert (=> b!79981 (= e!52209 e!52208)))

(declare-fun res!41698 () Bool)

(assert (=> b!79981 (=> res!41698 e!52208)))

(assert (=> b!79981 (= res!41698 (= (h!2078 (t!5132 (toList!729 lt!35973))) lt!35789))))

(declare-fun b!79982 () Bool)

(assert (=> b!79982 (= e!52208 (contains!737 (t!5132 (t!5132 (toList!729 lt!35973))) lt!35789))))

(assert (= (and d!19485 res!41699) b!79981))

(assert (= (and b!79981 (not res!41698)) b!79982))

(assert (=> d!19485 m!79781))

(declare-fun m!81307 () Bool)

(assert (=> d!19485 m!81307))

(declare-fun m!81309 () Bool)

(assert (=> b!79982 m!81309))

(assert (=> b!78306 d!19485))

(declare-fun d!19487 () Bool)

(declare-fun res!41700 () Bool)

(declare-fun e!52210 () Bool)

(assert (=> d!19487 (=> res!41700 e!52210)))

(assert (=> d!19487 (= res!41700 (= (select (arr!1886 (_keys!3931 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!19487 (= (arrayContainsKey!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!52210)))

(declare-fun b!79983 () Bool)

(declare-fun e!52211 () Bool)

(assert (=> b!79983 (= e!52210 e!52211)))

(declare-fun res!41701 () Bool)

(assert (=> b!79983 (=> (not res!41701) (not e!52211))))

(assert (=> b!79983 (= res!41701 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))))))

(declare-fun b!79984 () Bool)

(assert (=> b!79984 (= e!52211 (arrayContainsKey!0 (_keys!3931 newMap!16) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19487 (not res!41700)) b!79983))

(assert (= (and b!79983 res!41701) b!79984))

(assert (=> d!19487 m!79445))

(assert (=> b!79984 m!77885))

(declare-fun m!81311 () Bool)

(assert (=> b!79984 m!81311))

(assert (=> b!78274 d!19487))

(declare-fun b!79985 () Bool)

(declare-fun e!52212 () Option!144)

(assert (=> b!79985 (= e!52212 (Some!143 (_2!1092 (h!2078 (t!5132 (toList!729 lt!35969))))))))

(declare-fun b!79986 () Bool)

(declare-fun e!52213 () Option!144)

(assert (=> b!79986 (= e!52212 e!52213)))

(declare-fun c!12492 () Bool)

(assert (=> b!79986 (= c!12492 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35969))) (not (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35969)))) (_1!1092 lt!35792)))))))

(declare-fun b!79988 () Bool)

(assert (=> b!79988 (= e!52213 None!142)))

(declare-fun b!79987 () Bool)

(assert (=> b!79987 (= e!52213 (getValueByKey!138 (t!5132 (t!5132 (toList!729 lt!35969))) (_1!1092 lt!35792)))))

(declare-fun d!19489 () Bool)

(declare-fun c!12491 () Bool)

(assert (=> d!19489 (= c!12491 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35969))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35969)))) (_1!1092 lt!35792))))))

(assert (=> d!19489 (= (getValueByKey!138 (t!5132 (toList!729 lt!35969)) (_1!1092 lt!35792)) e!52212)))

(assert (= (and d!19489 c!12491) b!79985))

(assert (= (and d!19489 (not c!12491)) b!79986))

(assert (= (and b!79986 c!12492) b!79987))

(assert (= (and b!79986 (not c!12492)) b!79988))

(declare-fun m!81313 () Bool)

(assert (=> b!79987 m!81313))

(assert (=> b!78625 d!19489))

(assert (=> d!18561 d!18585))

(assert (=> d!18561 d!18571))

(declare-fun d!19491 () Bool)

(assert (=> d!19491 (contains!736 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36041)))

(assert (=> d!19491 true))

(declare-fun _$35!321 () Unit!2237)

(assert (=> d!19491 (= (choose!464 lt!36043 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36041) _$35!321)))

(declare-fun bs!3387 () Bool)

(assert (= bs!3387 d!19491))

(assert (=> bs!3387 m!78247))

(assert (=> bs!3387 m!78247))

(assert (=> bs!3387 m!78253))

(assert (=> d!18561 d!19491))

(declare-fun d!19493 () Bool)

(declare-fun e!52215 () Bool)

(assert (=> d!19493 e!52215))

(declare-fun res!41702 () Bool)

(assert (=> d!19493 (=> res!41702 e!52215)))

(declare-fun lt!37080 () Bool)

(assert (=> d!19493 (= res!41702 (not lt!37080))))

(declare-fun lt!37082 () Bool)

(assert (=> d!19493 (= lt!37080 lt!37082)))

(declare-fun lt!37081 () Unit!2237)

(declare-fun e!52214 () Unit!2237)

(assert (=> d!19493 (= lt!37081 e!52214)))

(declare-fun c!12493 () Bool)

(assert (=> d!19493 (= c!12493 lt!37082)))

(assert (=> d!19493 (= lt!37082 (containsKey!141 (toList!729 lt!36043) lt!36041))))

(assert (=> d!19493 (= (contains!736 lt!36043 lt!36041) lt!37080)))

(declare-fun b!79990 () Bool)

(declare-fun lt!37079 () Unit!2237)

(assert (=> b!79990 (= e!52214 lt!37079)))

(assert (=> b!79990 (= lt!37079 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36043) lt!36041))))

(assert (=> b!79990 (isDefined!90 (getValueByKey!138 (toList!729 lt!36043) lt!36041))))

(declare-fun b!79991 () Bool)

(declare-fun Unit!2315 () Unit!2237)

(assert (=> b!79991 (= e!52214 Unit!2315)))

(declare-fun b!79992 () Bool)

(assert (=> b!79992 (= e!52215 (isDefined!90 (getValueByKey!138 (toList!729 lt!36043) lt!36041)))))

(assert (= (and d!19493 c!12493) b!79990))

(assert (= (and d!19493 (not c!12493)) b!79991))

(assert (= (and d!19493 (not res!41702)) b!79992))

(declare-fun m!81315 () Bool)

(assert (=> d!19493 m!81315))

(declare-fun m!81317 () Bool)

(assert (=> b!79990 m!81317))

(declare-fun m!81319 () Bool)

(assert (=> b!79990 m!81319))

(assert (=> b!79990 m!81319))

(declare-fun m!81321 () Bool)

(assert (=> b!79990 m!81321))

(assert (=> b!79992 m!81319))

(assert (=> b!79992 m!81319))

(assert (=> b!79992 m!81321))

(assert (=> d!18561 d!19493))

(declare-fun d!19495 () Bool)

(declare-fun e!52217 () Bool)

(assert (=> d!19495 e!52217))

(declare-fun res!41703 () Bool)

(assert (=> d!19495 (=> res!41703 e!52217)))

(declare-fun lt!37084 () Bool)

(assert (=> d!19495 (= res!41703 (not lt!37084))))

(declare-fun lt!37086 () Bool)

(assert (=> d!19495 (= lt!37084 lt!37086)))

(declare-fun lt!37085 () Unit!2237)

(declare-fun e!52216 () Unit!2237)

(assert (=> d!19495 (= lt!37085 e!52216)))

(declare-fun c!12494 () Bool)

(assert (=> d!19495 (= c!12494 lt!37086)))

(assert (=> d!19495 (= lt!37086 (containsKey!141 (toList!729 lt!36534) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19495 (= (contains!736 lt!36534 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) lt!37084)))

(declare-fun b!79993 () Bool)

(declare-fun lt!37083 () Unit!2237)

(assert (=> b!79993 (= e!52216 lt!37083)))

(assert (=> b!79993 (= lt!37083 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36534) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79993 (isDefined!90 (getValueByKey!138 (toList!729 lt!36534) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79994 () Bool)

(declare-fun Unit!2316 () Unit!2237)

(assert (=> b!79994 (= e!52216 Unit!2316)))

(declare-fun b!79995 () Bool)

(assert (=> b!79995 (= e!52217 (isDefined!90 (getValueByKey!138 (toList!729 lt!36534) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19495 c!12494) b!79993))

(assert (= (and d!19495 (not c!12494)) b!79994))

(assert (= (and d!19495 (not res!41703)) b!79995))

(assert (=> d!19495 m!78435))

(declare-fun m!81323 () Bool)

(assert (=> d!19495 m!81323))

(assert (=> b!79993 m!78435))

(declare-fun m!81325 () Bool)

(assert (=> b!79993 m!81325))

(assert (=> b!79993 m!78435))

(declare-fun m!81327 () Bool)

(assert (=> b!79993 m!81327))

(assert (=> b!79993 m!81327))

(declare-fun m!81329 () Bool)

(assert (=> b!79993 m!81329))

(assert (=> b!79995 m!78435))

(assert (=> b!79995 m!81327))

(assert (=> b!79995 m!81327))

(assert (=> b!79995 m!81329))

(assert (=> b!78771 d!19495))

(declare-fun d!19497 () Bool)

(assert (=> d!19497 (= (apply!79 lt!36207 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1186 (getValueByKey!138 (toList!729 lt!36207) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3388 () Bool)

(assert (= bs!3388 d!19497))

(assert (=> bs!3388 m!80891))

(assert (=> bs!3388 m!80891))

(declare-fun m!81331 () Bool)

(assert (=> bs!3388 m!81331))

(assert (=> b!78291 d!19497))

(declare-fun d!19499 () Bool)

(declare-fun e!52219 () Bool)

(assert (=> d!19499 e!52219))

(declare-fun res!41704 () Bool)

(assert (=> d!19499 (=> res!41704 e!52219)))

(declare-fun lt!37088 () Bool)

(assert (=> d!19499 (= res!41704 (not lt!37088))))

(declare-fun lt!37090 () Bool)

(assert (=> d!19499 (= lt!37088 lt!37090)))

(declare-fun lt!37089 () Unit!2237)

(declare-fun e!52218 () Unit!2237)

(assert (=> d!19499 (= lt!37089 e!52218)))

(declare-fun c!12495 () Bool)

(assert (=> d!19499 (= c!12495 lt!37090)))

(assert (=> d!19499 (= lt!37090 (containsKey!141 (toList!729 lt!36289) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19499 (= (contains!736 lt!36289 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) lt!37088)))

(declare-fun b!79996 () Bool)

(declare-fun lt!37087 () Unit!2237)

(assert (=> b!79996 (= e!52218 lt!37087)))

(assert (=> b!79996 (= lt!37087 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36289) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79996 (isDefined!90 (getValueByKey!138 (toList!729 lt!36289) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79997 () Bool)

(declare-fun Unit!2317 () Unit!2237)

(assert (=> b!79997 (= e!52218 Unit!2317)))

(declare-fun b!79998 () Bool)

(assert (=> b!79998 (= e!52219 (isDefined!90 (getValueByKey!138 (toList!729 lt!36289) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19499 c!12495) b!79996))

(assert (= (and d!19499 (not c!12495)) b!79997))

(assert (= (and d!19499 (not res!41704)) b!79998))

(assert (=> d!19499 m!78435))

(declare-fun m!81333 () Bool)

(assert (=> d!19499 m!81333))

(assert (=> b!79996 m!78435))

(declare-fun m!81335 () Bool)

(assert (=> b!79996 m!81335))

(assert (=> b!79996 m!78435))

(declare-fun m!81337 () Bool)

(assert (=> b!79996 m!81337))

(assert (=> b!79996 m!81337))

(declare-fun m!81339 () Bool)

(assert (=> b!79996 m!81339))

(assert (=> b!79998 m!78435))

(assert (=> b!79998 m!81337))

(assert (=> b!79998 m!81337))

(assert (=> b!79998 m!81339))

(assert (=> b!78404 d!19499))

(declare-fun d!19501 () Bool)

(declare-fun lt!37091 () Bool)

(assert (=> d!19501 (= lt!37091 (select (content!85 (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!52221 () Bool)

(assert (=> d!19501 (= lt!37091 e!52221)))

(declare-fun res!41706 () Bool)

(assert (=> d!19501 (=> (not res!41706) (not e!52221))))

(assert (=> d!19501 (= res!41706 ((_ is Cons!1491) (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)))))

(assert (=> d!19501 (= (contains!738 (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!37091)))

(declare-fun b!79999 () Bool)

(declare-fun e!52220 () Bool)

(assert (=> b!79999 (= e!52221 e!52220)))

(declare-fun res!41705 () Bool)

(assert (=> b!79999 (=> res!41705 e!52220)))

(assert (=> b!79999 (= res!41705 (= (h!2079 (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!80000 () Bool)

(assert (=> b!80000 (= e!52220 (contains!738 (t!5133 (ite c!11915 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) Nil!1492) Nil!1492)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!19501 res!41706) b!79999))

(assert (= (and b!79999 (not res!41705)) b!80000))

(declare-fun m!81341 () Bool)

(assert (=> d!19501 m!81341))

(assert (=> d!19501 m!79165))

(declare-fun m!81343 () Bool)

(assert (=> d!19501 m!81343))

(assert (=> b!80000 m!79165))

(declare-fun m!81345 () Bool)

(assert (=> b!80000 m!81345))

(assert (=> b!78705 d!19501))

(declare-fun d!19503 () Bool)

(assert (=> d!19503 (= (get!1186 (getValueByKey!138 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2600 (getValueByKey!138 (toList!729 lt!35932) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18595 d!19503))

(assert (=> d!18595 d!19295))

(declare-fun d!19505 () Bool)

(assert (=> d!19505 (isDefined!90 (getValueByKey!138 (toList!729 lt!35965) (_1!1092 lt!35806)))))

(declare-fun lt!37092 () Unit!2237)

(assert (=> d!19505 (= lt!37092 (choose!469 (toList!729 lt!35965) (_1!1092 lt!35806)))))

(declare-fun e!52222 () Bool)

(assert (=> d!19505 e!52222))

(declare-fun res!41707 () Bool)

(assert (=> d!19505 (=> (not res!41707) (not e!52222))))

(assert (=> d!19505 (= res!41707 (isStrictlySorted!282 (toList!729 lt!35965)))))

(assert (=> d!19505 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!35965) (_1!1092 lt!35806)) lt!37092)))

(declare-fun b!80001 () Bool)

(assert (=> b!80001 (= e!52222 (containsKey!141 (toList!729 lt!35965) (_1!1092 lt!35806)))))

(assert (= (and d!19505 res!41707) b!80001))

(assert (=> d!19505 m!78175))

(assert (=> d!19505 m!78175))

(assert (=> d!19505 m!78913))

(declare-fun m!81347 () Bool)

(assert (=> d!19505 m!81347))

(declare-fun m!81349 () Bool)

(assert (=> d!19505 m!81349))

(assert (=> b!80001 m!78909))

(assert (=> b!78504 d!19505))

(assert (=> b!78504 d!18777))

(assert (=> b!78504 d!18759))

(declare-fun d!19507 () Bool)

(declare-fun lt!37093 () Bool)

(assert (=> d!19507 (= lt!37093 (select (content!84 lt!35947) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun e!52224 () Bool)

(assert (=> d!19507 (= lt!37093 e!52224)))

(declare-fun res!41709 () Bool)

(assert (=> d!19507 (=> (not res!41709) (not e!52224))))

(assert (=> d!19507 (= res!41709 ((_ is Cons!1490) lt!35947))))

(assert (=> d!19507 (= (contains!737 lt!35947 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))) lt!37093)))

(declare-fun b!80002 () Bool)

(declare-fun e!52223 () Bool)

(assert (=> b!80002 (= e!52224 e!52223)))

(declare-fun res!41708 () Bool)

(assert (=> b!80002 (=> res!41708 e!52223)))

(assert (=> b!80002 (= res!41708 (= (h!2078 lt!35947) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun b!80003 () Bool)

(assert (=> b!80003 (= e!52223 (contains!737 (t!5132 lt!35947) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(assert (= (and d!19507 res!41709) b!80002))

(assert (= (and b!80002 (not res!41708)) b!80003))

(declare-fun m!81351 () Bool)

(assert (=> d!19507 m!81351))

(declare-fun m!81353 () Bool)

(assert (=> d!19507 m!81353))

(declare-fun m!81355 () Bool)

(assert (=> b!80003 m!81355))

(assert (=> b!78531 d!19507))

(declare-fun d!19509 () Bool)

(declare-fun lt!37094 () Bool)

(assert (=> d!19509 (= lt!37094 (select (content!84 (toList!729 lt!36170)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!52226 () Bool)

(assert (=> d!19509 (= lt!37094 e!52226)))

(declare-fun res!41711 () Bool)

(assert (=> d!19509 (=> (not res!41711) (not e!52226))))

(assert (=> d!19509 (= res!41711 ((_ is Cons!1490) (toList!729 lt!36170)))))

(assert (=> d!19509 (= (contains!737 (toList!729 lt!36170) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!37094)))

(declare-fun b!80004 () Bool)

(declare-fun e!52225 () Bool)

(assert (=> b!80004 (= e!52226 e!52225)))

(declare-fun res!41710 () Bool)

(assert (=> b!80004 (=> res!41710 e!52225)))

(assert (=> b!80004 (= res!41710 (= (h!2078 (toList!729 lt!36170)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!80005 () Bool)

(assert (=> b!80005 (= e!52225 (contains!737 (t!5132 (toList!729 lt!36170)) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!19509 res!41711) b!80004))

(assert (= (and b!80004 (not res!41710)) b!80005))

(declare-fun m!81357 () Bool)

(assert (=> d!19509 m!81357))

(declare-fun m!81359 () Bool)

(assert (=> d!19509 m!81359))

(declare-fun m!81361 () Bool)

(assert (=> b!80005 m!81361))

(assert (=> b!78246 d!19509))

(assert (=> b!78584 d!18521))

(declare-fun d!19511 () Bool)

(assert (=> d!19511 (= (get!1184 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2593 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78366 d!19511))

(assert (=> b!78304 d!19293))

(assert (=> b!78304 d!19295))

(declare-fun b!80006 () Bool)

(declare-fun e!52227 () Option!144)

(assert (=> b!80006 (= e!52227 (Some!143 (_2!1092 (h!2078 (t!5132 (toList!729 lt!35796))))))))

(declare-fun b!80007 () Bool)

(declare-fun e!52228 () Option!144)

(assert (=> b!80007 (= e!52227 e!52228)))

(declare-fun c!12497 () Bool)

(assert (=> b!80007 (= c!12497 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35796))) (not (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35796)))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))))

(declare-fun b!80009 () Bool)

(assert (=> b!80009 (= e!52228 None!142)))

(declare-fun b!80008 () Bool)

(assert (=> b!80008 (= e!52228 (getValueByKey!138 (t!5132 (t!5132 (toList!729 lt!35796))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(declare-fun d!19513 () Bool)

(declare-fun c!12496 () Bool)

(assert (=> d!19513 (= c!12496 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35796))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35796)))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (=> d!19513 (= (getValueByKey!138 (t!5132 (toList!729 lt!35796)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) e!52227)))

(assert (= (and d!19513 c!12496) b!80006))

(assert (= (and d!19513 (not c!12496)) b!80007))

(assert (= (and b!80007 c!12497) b!80008))

(assert (= (and b!80007 (not c!12497)) b!80009))

(assert (=> b!80008 m!77885))

(declare-fun m!81363 () Bool)

(assert (=> b!80008 m!81363))

(assert (=> b!78714 d!19513))

(declare-fun d!19515 () Bool)

(declare-fun res!41712 () Bool)

(declare-fun e!52229 () Bool)

(assert (=> d!19515 (=> res!41712 e!52229)))

(assert (=> d!19515 (= res!41712 (and ((_ is Cons!1490) (toList!729 lt!36049)) (= (_1!1092 (h!2078 (toList!729 lt!36049))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19515 (= (containsKey!141 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000) e!52229)))

(declare-fun b!80010 () Bool)

(declare-fun e!52230 () Bool)

(assert (=> b!80010 (= e!52229 e!52230)))

(declare-fun res!41713 () Bool)

(assert (=> b!80010 (=> (not res!41713) (not e!52230))))

(assert (=> b!80010 (= res!41713 (and (or (not ((_ is Cons!1490) (toList!729 lt!36049))) (bvsle (_1!1092 (h!2078 (toList!729 lt!36049))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1490) (toList!729 lt!36049)) (bvslt (_1!1092 (h!2078 (toList!729 lt!36049))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80011 () Bool)

(assert (=> b!80011 (= e!52230 (containsKey!141 (t!5132 (toList!729 lt!36049)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19515 (not res!41712)) b!80010))

(assert (= (and b!80010 res!41713) b!80011))

(declare-fun m!81365 () Bool)

(assert (=> b!80011 m!81365))

(assert (=> d!18613 d!19515))

(assert (=> b!78269 d!19035))

(declare-fun d!19517 () Bool)

(assert (=> d!19517 (= (apply!79 lt!36534 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1186 (getValueByKey!138 (toList!729 lt!36534) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3389 () Bool)

(assert (= bs!3389 d!19517))

(assert (=> bs!3389 m!80523))

(assert (=> bs!3389 m!80523))

(declare-fun m!81367 () Bool)

(assert (=> bs!3389 m!81367))

(assert (=> b!78764 d!19517))

(declare-fun d!19519 () Bool)

(declare-fun lt!37095 () Bool)

(assert (=> d!19519 (= lt!37095 (select (content!84 lt!36468) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun e!52232 () Bool)

(assert (=> d!19519 (= lt!37095 e!52232)))

(declare-fun res!41715 () Bool)

(assert (=> d!19519 (=> (not res!41715) (not e!52232))))

(assert (=> d!19519 (= res!41715 ((_ is Cons!1490) lt!36468))))

(assert (=> d!19519 (= (contains!737 lt!36468 (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))) lt!37095)))

(declare-fun b!80012 () Bool)

(declare-fun e!52231 () Bool)

(assert (=> b!80012 (= e!52232 e!52231)))

(declare-fun res!41714 () Bool)

(assert (=> b!80012 (=> res!41714 e!52231)))

(assert (=> b!80012 (= res!41714 (= (h!2078 lt!36468) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun b!80013 () Bool)

(assert (=> b!80013 (= e!52231 (contains!737 (t!5132 lt!36468) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(assert (= (and d!19519 res!41715) b!80012))

(assert (= (and b!80012 (not res!41714)) b!80013))

(declare-fun m!81369 () Bool)

(assert (=> d!19519 m!81369))

(declare-fun m!81371 () Bool)

(assert (=> d!19519 m!81371))

(declare-fun m!81373 () Bool)

(assert (=> b!80013 m!81373))

(assert (=> b!78677 d!19519))

(assert (=> d!18649 d!18647))

(declare-fun d!19521 () Bool)

(assert (=> d!19521 (= (getValueByKey!138 lt!35960 (_1!1092 lt!35806)) (Some!143 (_2!1092 lt!35806)))))

(assert (=> d!19521 true))

(declare-fun _$22!396 () Unit!2237)

(assert (=> d!19521 (= (choose!468 lt!35960 (_1!1092 lt!35806) (_2!1092 lt!35806)) _$22!396)))

(declare-fun bs!3390 () Bool)

(assert (= bs!3390 d!19521))

(assert (=> bs!3390 m!78157))

(assert (=> d!18649 d!19521))

(declare-fun d!19523 () Bool)

(declare-fun res!41716 () Bool)

(declare-fun e!52233 () Bool)

(assert (=> d!19523 (=> res!41716 e!52233)))

(assert (=> d!19523 (= res!41716 (or ((_ is Nil!1491) lt!35960) ((_ is Nil!1491) (t!5132 lt!35960))))))

(assert (=> d!19523 (= (isStrictlySorted!282 lt!35960) e!52233)))

(declare-fun b!80014 () Bool)

(declare-fun e!52234 () Bool)

(assert (=> b!80014 (= e!52233 e!52234)))

(declare-fun res!41717 () Bool)

(assert (=> b!80014 (=> (not res!41717) (not e!52234))))

(assert (=> b!80014 (= res!41717 (bvslt (_1!1092 (h!2078 lt!35960)) (_1!1092 (h!2078 (t!5132 lt!35960)))))))

(declare-fun b!80015 () Bool)

(assert (=> b!80015 (= e!52234 (isStrictlySorted!282 (t!5132 lt!35960)))))

(assert (= (and d!19523 (not res!41716)) b!80014))

(assert (= (and b!80014 res!41717) b!80015))

(declare-fun m!81375 () Bool)

(assert (=> b!80015 m!81375))

(assert (=> d!18649 d!19523))

(declare-fun d!19525 () Bool)

(assert (=> d!19525 (= (apply!79 lt!36289 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1186 (getValueByKey!138 (toList!729 lt!36289) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3391 () Bool)

(assert (= bs!3391 d!19525))

(assert (=> bs!3391 m!80531))

(assert (=> bs!3391 m!80531))

(declare-fun m!81377 () Bool)

(assert (=> bs!3391 m!81377))

(assert (=> b!78397 d!19525))

(declare-fun d!19527 () Bool)

(declare-fun res!41718 () Bool)

(declare-fun e!52235 () Bool)

(assert (=> d!19527 (=> res!41718 e!52235)))

(assert (=> d!19527 (= res!41718 (and ((_ is Cons!1490) (toList!729 lt!35965)) (= (_1!1092 (h!2078 (toList!729 lt!35965))) (_1!1092 lt!35806))))))

(assert (=> d!19527 (= (containsKey!141 (toList!729 lt!35965) (_1!1092 lt!35806)) e!52235)))

(declare-fun b!80016 () Bool)

(declare-fun e!52236 () Bool)

(assert (=> b!80016 (= e!52235 e!52236)))

(declare-fun res!41719 () Bool)

(assert (=> b!80016 (=> (not res!41719) (not e!52236))))

(assert (=> b!80016 (= res!41719 (and (or (not ((_ is Cons!1490) (toList!729 lt!35965))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35965))) (_1!1092 lt!35806))) ((_ is Cons!1490) (toList!729 lt!35965)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35965))) (_1!1092 lt!35806))))))

(declare-fun b!80017 () Bool)

(assert (=> b!80017 (= e!52236 (containsKey!141 (t!5132 (toList!729 lt!35965)) (_1!1092 lt!35806)))))

(assert (= (and d!19527 (not res!41718)) b!80016))

(assert (= (and b!80016 res!41719) b!80017))

(declare-fun m!81379 () Bool)

(assert (=> b!80017 m!81379))

(assert (=> d!18655 d!19527))

(declare-fun d!19529 () Bool)

(declare-fun lt!37096 () Bool)

(assert (=> d!19529 (= lt!37096 (select (content!84 lt!35968) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun e!52238 () Bool)

(assert (=> d!19529 (= lt!37096 e!52238)))

(declare-fun res!41721 () Bool)

(assert (=> d!19529 (=> (not res!41721) (not e!52238))))

(assert (=> d!19529 (= res!41721 ((_ is Cons!1490) lt!35968))))

(assert (=> d!19529 (= (contains!737 lt!35968 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))) lt!37096)))

(declare-fun b!80018 () Bool)

(declare-fun e!52237 () Bool)

(assert (=> b!80018 (= e!52238 e!52237)))

(declare-fun res!41720 () Bool)

(assert (=> b!80018 (=> res!41720 e!52237)))

(assert (=> b!80018 (= res!41720 (= (h!2078 lt!35968) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun b!80019 () Bool)

(assert (=> b!80019 (= e!52237 (contains!737 (t!5132 lt!35968) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(assert (= (and d!19529 res!41721) b!80018))

(assert (= (and b!80018 (not res!41720)) b!80019))

(declare-fun m!81381 () Bool)

(assert (=> d!19529 m!81381))

(declare-fun m!81383 () Bool)

(assert (=> d!19529 m!81383))

(declare-fun m!81385 () Bool)

(assert (=> b!80019 m!81385))

(assert (=> b!78419 d!19529))

(assert (=> d!18631 d!18629))

(declare-fun d!19531 () Bool)

(assert (=> d!19531 (= (getValueByKey!138 lt!35972 (_1!1092 lt!35789)) (Some!143 (_2!1092 lt!35789)))))

(assert (=> d!19531 true))

(declare-fun _$22!397 () Unit!2237)

(assert (=> d!19531 (= (choose!468 lt!35972 (_1!1092 lt!35789) (_2!1092 lt!35789)) _$22!397)))

(declare-fun bs!3392 () Bool)

(assert (= bs!3392 d!19531))

(assert (=> bs!3392 m!78193))

(assert (=> d!18631 d!19531))

(declare-fun d!19533 () Bool)

(declare-fun res!41722 () Bool)

(declare-fun e!52239 () Bool)

(assert (=> d!19533 (=> res!41722 e!52239)))

(assert (=> d!19533 (= res!41722 (or ((_ is Nil!1491) lt!35972) ((_ is Nil!1491) (t!5132 lt!35972))))))

(assert (=> d!19533 (= (isStrictlySorted!282 lt!35972) e!52239)))

(declare-fun b!80020 () Bool)

(declare-fun e!52240 () Bool)

(assert (=> b!80020 (= e!52239 e!52240)))

(declare-fun res!41723 () Bool)

(assert (=> b!80020 (=> (not res!41723) (not e!52240))))

(assert (=> b!80020 (= res!41723 (bvslt (_1!1092 (h!2078 lt!35972)) (_1!1092 (h!2078 (t!5132 lt!35972)))))))

(declare-fun b!80021 () Bool)

(assert (=> b!80021 (= e!52240 (isStrictlySorted!282 (t!5132 lt!35972)))))

(assert (= (and d!19533 (not res!41722)) b!80020))

(assert (= (and b!80020 res!41723) b!80021))

(declare-fun m!81387 () Bool)

(assert (=> b!80021 m!81387))

(assert (=> d!18631 d!19533))

(declare-fun d!19535 () Bool)

(declare-fun lt!37097 () Bool)

(assert (=> d!19535 (= lt!37097 (select (content!84 (toList!729 lt!36433)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun e!52242 () Bool)

(assert (=> d!19535 (= lt!37097 e!52242)))

(declare-fun res!41725 () Bool)

(assert (=> d!19535 (=> (not res!41725) (not e!52242))))

(assert (=> d!19535 (= res!41725 ((_ is Cons!1490) (toList!729 lt!36433)))))

(assert (=> d!19535 (= (contains!737 (toList!729 lt!36433) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!37097)))

(declare-fun b!80022 () Bool)

(declare-fun e!52241 () Bool)

(assert (=> b!80022 (= e!52242 e!52241)))

(declare-fun res!41724 () Bool)

(assert (=> b!80022 (=> res!41724 e!52241)))

(assert (=> b!80022 (= res!41724 (= (h!2078 (toList!729 lt!36433)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!80023 () Bool)

(assert (=> b!80023 (= e!52241 (contains!737 (t!5132 (toList!729 lt!36433)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2594 (underlying!280 thiss!992))))))))

(assert (= (and d!19535 res!41725) b!80022))

(assert (= (and b!80022 (not res!41724)) b!80023))

(declare-fun m!81389 () Bool)

(assert (=> d!19535 m!81389))

(declare-fun m!81391 () Bool)

(assert (=> d!19535 m!81391))

(declare-fun m!81393 () Bool)

(assert (=> b!80023 m!81393))

(assert (=> b!78606 d!19535))

(declare-fun d!19537 () Bool)

(declare-fun res!41726 () Bool)

(declare-fun e!52243 () Bool)

(assert (=> d!19537 (=> res!41726 e!52243)))

(assert (=> d!19537 (= res!41726 (= (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (=> d!19537 (= (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!52243)))

(declare-fun b!80024 () Bool)

(declare-fun e!52244 () Bool)

(assert (=> b!80024 (= e!52243 e!52244)))

(declare-fun res!41727 () Bool)

(assert (=> b!80024 (=> (not res!41727) (not e!52244))))

(assert (=> b!80024 (= res!41727 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!80025 () Bool)

(assert (=> b!80025 (= e!52244 (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19537 (not res!41726)) b!80024))

(assert (= (and b!80024 res!41727) b!80025))

(assert (=> d!19537 m!80309))

(assert (=> b!80025 m!77885))

(declare-fun m!81395 () Bool)

(assert (=> b!80025 m!81395))

(assert (=> b!78656 d!19537))

(declare-fun b!80026 () Bool)

(declare-fun e!52245 () (_ BitVec 32))

(declare-fun call!7378 () (_ BitVec 32))

(assert (=> b!80026 (= e!52245 (bvadd #b00000000000000000000000000000001 call!7378))))

(declare-fun b!80027 () Bool)

(declare-fun e!52246 () (_ BitVec 32))

(assert (=> b!80027 (= e!52246 #b00000000000000000000000000000000)))

(declare-fun bm!7375 () Bool)

(assert (=> bm!7375 (= call!7378 (arrayCountValidKeys!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(declare-fun b!80028 () Bool)

(assert (=> b!80028 (= e!52245 call!7378)))

(declare-fun d!19539 () Bool)

(declare-fun lt!37098 () (_ BitVec 32))

(assert (=> d!19539 (and (bvsge lt!37098 #b00000000000000000000000000000000) (bvsle lt!37098 (bvsub (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!19539 (= lt!37098 e!52246)))

(declare-fun c!12499 () Bool)

(assert (=> d!19539 (= c!12499 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!19539 (and (bvsle #b00000000000000000000000000000000 (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!19539 (= (arrayCountValidKeys!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000 (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))) lt!37098)))

(declare-fun b!80029 () Bool)

(assert (=> b!80029 (= e!52246 e!52245)))

(declare-fun c!12498 () Bool)

(assert (=> b!80029 (= c!12498 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!19539 c!12499) b!80027))

(assert (= (and d!19539 (not c!12499)) b!80029))

(assert (= (and b!80029 c!12498) b!80026))

(assert (= (and b!80029 (not c!12498)) b!80028))

(assert (= (or b!80026 b!80028) bm!7375))

(declare-fun m!81397 () Bool)

(assert (=> bm!7375 m!81397))

(declare-fun m!81399 () Bool)

(assert (=> b!80029 m!81399))

(assert (=> b!80029 m!81399))

(declare-fun m!81401 () Bool)

(assert (=> b!80029 m!81401))

(assert (=> b!78371 d!19539))

(declare-fun b!80030 () Bool)

(declare-fun e!52249 () Bool)

(declare-fun call!7379 () Bool)

(assert (=> b!80030 (= e!52249 call!7379)))

(declare-fun d!19541 () Bool)

(declare-fun res!41728 () Bool)

(declare-fun e!52248 () Bool)

(assert (=> d!19541 (=> res!41728 e!52248)))

(assert (=> d!19541 (= res!41728 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2127 (_keys!3931 newMap!16))))))

(assert (=> d!19541 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3931 newMap!16) (mask!6267 newMap!16)) e!52248)))

(declare-fun bm!7376 () Bool)

(assert (=> bm!7376 (= call!7379 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3931 newMap!16) (mask!6267 newMap!16)))))

(declare-fun b!80031 () Bool)

(declare-fun e!52247 () Bool)

(assert (=> b!80031 (= e!52248 e!52247)))

(declare-fun c!12500 () Bool)

(assert (=> b!80031 (= c!12500 (validKeyInArray!0 (select (arr!1886 (_keys!3931 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!80032 () Bool)

(assert (=> b!80032 (= e!52247 call!7379)))

(declare-fun b!80033 () Bool)

(assert (=> b!80033 (= e!52247 e!52249)))

(declare-fun lt!37100 () (_ BitVec 64))

(assert (=> b!80033 (= lt!37100 (select (arr!1886 (_keys!3931 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!37099 () Unit!2237)

(assert (=> b!80033 (= lt!37099 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3931 newMap!16) lt!37100 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!80033 (arrayContainsKey!0 (_keys!3931 newMap!16) lt!37100 #b00000000000000000000000000000000)))

(declare-fun lt!37101 () Unit!2237)

(assert (=> b!80033 (= lt!37101 lt!37099)))

(declare-fun res!41729 () Bool)

(assert (=> b!80033 (= res!41729 (= (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3931 newMap!16) (mask!6267 newMap!16)) (Found!234 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!80033 (=> (not res!41729) (not e!52249))))

(assert (= (and d!19541 (not res!41728)) b!80031))

(assert (= (and b!80031 c!12500) b!80033))

(assert (= (and b!80031 (not c!12500)) b!80032))

(assert (= (and b!80033 res!41729) b!80030))

(assert (= (or b!80030 b!80032) bm!7376))

(declare-fun m!81403 () Bool)

(assert (=> bm!7376 m!81403))

(assert (=> b!80031 m!79445))

(assert (=> b!80031 m!79445))

(assert (=> b!80031 m!79447))

(assert (=> b!80033 m!79445))

(declare-fun m!81405 () Bool)

(assert (=> b!80033 m!81405))

(declare-fun m!81407 () Bool)

(assert (=> b!80033 m!81407))

(assert (=> b!80033 m!79445))

(declare-fun m!81409 () Bool)

(assert (=> b!80033 m!81409))

(assert (=> bm!7222 d!19541))

(declare-fun d!19543 () Bool)

(declare-fun c!12501 () Bool)

(assert (=> d!19543 (= c!12501 ((_ is Nil!1491) (toList!729 lt!35965)))))

(declare-fun e!52250 () (InoxSet tuple2!2162))

(assert (=> d!19543 (= (content!84 (toList!729 lt!35965)) e!52250)))

(declare-fun b!80034 () Bool)

(assert (=> b!80034 (= e!52250 ((as const (Array tuple2!2162 Bool)) false))))

(declare-fun b!80035 () Bool)

(assert (=> b!80035 (= e!52250 ((_ map or) (store ((as const (Array tuple2!2162 Bool)) false) (h!2078 (toList!729 lt!35965)) true) (content!84 (t!5132 (toList!729 lt!35965)))))))

(assert (= (and d!19543 c!12501) b!80034))

(assert (= (and d!19543 (not c!12501)) b!80035))

(declare-fun m!81411 () Bool)

(assert (=> b!80035 m!81411))

(assert (=> b!80035 m!80781))

(assert (=> d!18555 d!19543))

(declare-fun b!80036 () Bool)

(declare-fun e!52251 () Option!144)

(assert (=> b!80036 (= e!52251 (Some!143 (_2!1092 (h!2078 (t!5132 (toList!729 lt!35948))))))))

(declare-fun b!80037 () Bool)

(declare-fun e!52252 () Option!144)

(assert (=> b!80037 (= e!52251 e!52252)))

(declare-fun c!12503 () Bool)

(assert (=> b!80037 (= c!12503 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35948))) (not (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35948)))) (_1!1092 lt!35792)))))))

(declare-fun b!80039 () Bool)

(assert (=> b!80039 (= e!52252 None!142)))

(declare-fun b!80038 () Bool)

(assert (=> b!80038 (= e!52252 (getValueByKey!138 (t!5132 (t!5132 (toList!729 lt!35948))) (_1!1092 lt!35792)))))

(declare-fun d!19545 () Bool)

(declare-fun c!12502 () Bool)

(assert (=> d!19545 (= c!12502 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35948))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35948)))) (_1!1092 lt!35792))))))

(assert (=> d!19545 (= (getValueByKey!138 (t!5132 (toList!729 lt!35948)) (_1!1092 lt!35792)) e!52251)))

(assert (= (and d!19545 c!12502) b!80036))

(assert (= (and d!19545 (not c!12502)) b!80037))

(assert (= (and b!80037 c!12503) b!80038))

(assert (= (and b!80037 (not c!12503)) b!80039))

(declare-fun m!81413 () Bool)

(assert (=> b!80038 m!81413))

(assert (=> b!78319 d!19545))

(assert (=> d!18563 d!18575))

(assert (=> d!18563 d!18567))

(assert (=> d!18563 d!18583))

(declare-fun d!19547 () Bool)

(declare-fun e!52254 () Bool)

(assert (=> d!19547 e!52254))

(declare-fun res!41730 () Bool)

(assert (=> d!19547 (=> res!41730 e!52254)))

(declare-fun lt!37103 () Bool)

(assert (=> d!19547 (= res!41730 (not lt!37103))))

(declare-fun lt!37105 () Bool)

(assert (=> d!19547 (= lt!37103 lt!37105)))

(declare-fun lt!37104 () Unit!2237)

(declare-fun e!52253 () Unit!2237)

(assert (=> d!19547 (= lt!37104 e!52253)))

(declare-fun c!12504 () Bool)

(assert (=> d!19547 (= c!12504 lt!37105)))

(assert (=> d!19547 (= lt!37105 (containsKey!141 (toList!729 lt!36039) lt!36044))))

(assert (=> d!19547 (= (contains!736 lt!36039 lt!36044) lt!37103)))

(declare-fun b!80040 () Bool)

(declare-fun lt!37102 () Unit!2237)

(assert (=> b!80040 (= e!52253 lt!37102)))

(assert (=> b!80040 (= lt!37102 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36039) lt!36044))))

(assert (=> b!80040 (isDefined!90 (getValueByKey!138 (toList!729 lt!36039) lt!36044))))

(declare-fun b!80041 () Bool)

(declare-fun Unit!2318 () Unit!2237)

(assert (=> b!80041 (= e!52253 Unit!2318)))

(declare-fun b!80042 () Bool)

(assert (=> b!80042 (= e!52254 (isDefined!90 (getValueByKey!138 (toList!729 lt!36039) lt!36044)))))

(assert (= (and d!19547 c!12504) b!80040))

(assert (= (and d!19547 (not c!12504)) b!80041))

(assert (= (and d!19547 (not res!41730)) b!80042))

(declare-fun m!81415 () Bool)

(assert (=> d!19547 m!81415))

(declare-fun m!81417 () Bool)

(assert (=> b!80040 m!81417))

(assert (=> b!80040 m!78583))

(assert (=> b!80040 m!78583))

(declare-fun m!81419 () Bool)

(assert (=> b!80040 m!81419))

(assert (=> b!80042 m!78583))

(assert (=> b!80042 m!78583))

(assert (=> b!80042 m!81419))

(assert (=> d!18563 d!19547))

(declare-fun d!19549 () Bool)

(assert (=> d!19549 (= (apply!79 (+!100 lt!36039 (tuple2!2163 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))))) lt!36044) (apply!79 lt!36039 lt!36044))))

(assert (=> d!19549 true))

(declare-fun _$34!820 () Unit!2237)

(assert (=> d!19549 (= (choose!465 lt!36039 lt!36046 (minValue!2169 (v!2594 (underlying!280 thiss!992))) lt!36044) _$34!820)))

(declare-fun bs!3393 () Bool)

(assert (= bs!3393 d!19549))

(assert (=> bs!3393 m!78235))

(assert (=> bs!3393 m!78235))

(assert (=> bs!3393 m!78237))

(assert (=> bs!3393 m!78257))

(assert (=> d!18563 d!19549))

(assert (=> b!78591 d!18591))

(declare-fun d!19551 () Bool)

(assert (=> d!19551 (= (inRange!0 (ite c!12014 (index!3070 lt!36255) (index!3073 lt!36255)) (mask!6267 newMap!16)) (and (bvsge (ite c!12014 (index!3070 lt!36255) (index!3073 lt!36255)) #b00000000000000000000000000000000) (bvslt (ite c!12014 (index!3070 lt!36255) (index!3073 lt!36255)) (bvadd (mask!6267 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7177 d!19551))

(assert (=> b!78370 d!19369))

(assert (=> b!78370 d!19371))

(declare-fun d!19553 () Bool)

(declare-fun res!41731 () Bool)

(declare-fun e!52255 () Bool)

(assert (=> d!19553 (=> res!41731 e!52255)))

(assert (=> d!19553 (= res!41731 (and ((_ is Cons!1490) (toList!729 lt!35957)) (= (_1!1092 (h!2078 (toList!729 lt!35957))) (_1!1092 lt!35789))))))

(assert (=> d!19553 (= (containsKey!141 (toList!729 lt!35957) (_1!1092 lt!35789)) e!52255)))

(declare-fun b!80043 () Bool)

(declare-fun e!52256 () Bool)

(assert (=> b!80043 (= e!52255 e!52256)))

(declare-fun res!41732 () Bool)

(assert (=> b!80043 (=> (not res!41732) (not e!52256))))

(assert (=> b!80043 (= res!41732 (and (or (not ((_ is Cons!1490) (toList!729 lt!35957))) (bvsle (_1!1092 (h!2078 (toList!729 lt!35957))) (_1!1092 lt!35789))) ((_ is Cons!1490) (toList!729 lt!35957)) (bvslt (_1!1092 (h!2078 (toList!729 lt!35957))) (_1!1092 lt!35789))))))

(declare-fun b!80044 () Bool)

(assert (=> b!80044 (= e!52256 (containsKey!141 (t!5132 (toList!729 lt!35957)) (_1!1092 lt!35789)))))

(assert (= (and d!19553 (not res!41731)) b!80043))

(assert (= (and b!80043 res!41732) b!80044))

(declare-fun m!81421 () Bool)

(assert (=> b!80044 m!81421))

(assert (=> d!18711 d!19553))

(declare-fun d!19555 () Bool)

(declare-fun res!41733 () Bool)

(declare-fun e!52257 () Bool)

(assert (=> d!19555 (=> res!41733 e!52257)))

(assert (=> d!19555 (= res!41733 (and ((_ is Cons!1490) (toList!729 lt!36049)) (= (_1!1092 (h!2078 (toList!729 lt!36049))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19555 (= (containsKey!141 (toList!729 lt!36049) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!52257)))

(declare-fun b!80045 () Bool)

(declare-fun e!52258 () Bool)

(assert (=> b!80045 (= e!52257 e!52258)))

(declare-fun res!41734 () Bool)

(assert (=> b!80045 (=> (not res!41734) (not e!52258))))

(assert (=> b!80045 (= res!41734 (and (or (not ((_ is Cons!1490) (toList!729 lt!36049))) (bvsle (_1!1092 (h!2078 (toList!729 lt!36049))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1490) (toList!729 lt!36049)) (bvslt (_1!1092 (h!2078 (toList!729 lt!36049))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!80046 () Bool)

(assert (=> b!80046 (= e!52258 (containsKey!141 (t!5132 (toList!729 lt!36049)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19555 (not res!41733)) b!80045))

(assert (= (and b!80045 res!41734) b!80046))

(assert (=> b!80046 m!78085))

(declare-fun m!81423 () Bool)

(assert (=> b!80046 m!81423))

(assert (=> d!18749 d!19555))

(declare-fun d!19557 () Bool)

(assert (=> d!19557 (= (apply!79 lt!36534 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1186 (getValueByKey!138 (toList!729 lt!36534) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3394 () Bool)

(assert (= bs!3394 d!19557))

(assert (=> bs!3394 m!78435))

(assert (=> bs!3394 m!81327))

(assert (=> bs!3394 m!81327))

(declare-fun m!81425 () Bool)

(assert (=> bs!3394 m!81425))

(assert (=> b!78772 d!19557))

(declare-fun c!12505 () Bool)

(declare-fun d!19559 () Bool)

(assert (=> d!19559 (= c!12505 ((_ is ValueCellFull!911) (select (arr!1887 (ite c!11968 (_values!2254 newMap!16) lt!36131)) #b00000000000000000000000000000000)))))

(declare-fun e!52259 () V!2993)

(assert (=> d!19559 (= (get!1183 (select (arr!1887 (ite c!11968 (_values!2254 newMap!16) lt!36131)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52259)))

(declare-fun b!80047 () Bool)

(assert (=> b!80047 (= e!52259 (get!1184 (select (arr!1887 (ite c!11968 (_values!2254 newMap!16) lt!36131)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80048 () Bool)

(assert (=> b!80048 (= e!52259 (get!1185 (select (arr!1887 (ite c!11968 (_values!2254 newMap!16) lt!36131)) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19559 c!12505) b!80047))

(assert (= (and d!19559 (not c!12505)) b!80048))

(assert (=> b!80047 m!79251))

(assert (=> b!80047 m!78471))

(declare-fun m!81427 () Bool)

(assert (=> b!80047 m!81427))

(assert (=> b!80048 m!79251))

(assert (=> b!80048 m!78471))

(declare-fun m!81429 () Bool)

(assert (=> b!80048 m!81429))

(assert (=> b!78772 d!19559))

(declare-fun d!19561 () Bool)

(assert (=> d!19561 (= (inRange!0 (ite c!12081 (index!3071 lt!36421) (ite c!12082 (index!3070 lt!36413) (index!3073 lt!36413))) (mask!6267 newMap!16)) (and (bvsge (ite c!12081 (index!3071 lt!36421) (ite c!12082 (index!3070 lt!36413) (index!3073 lt!36413))) #b00000000000000000000000000000000) (bvslt (ite c!12081 (index!3071 lt!36421) (ite c!12082 (index!3070 lt!36413) (index!3073 lt!36413))) (bvadd (mask!6267 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7217 d!19561))

(declare-fun d!19563 () Bool)

(declare-fun res!41735 () Bool)

(declare-fun e!52260 () Bool)

(assert (=> d!19563 (=> res!41735 e!52260)))

(assert (=> d!19563 (= res!41735 (and ((_ is Cons!1490) lt!36341) (= (_1!1092 (h!2078 lt!36341)) (_1!1092 lt!35792))))))

(assert (=> d!19563 (= (containsKey!141 lt!36341 (_1!1092 lt!35792)) e!52260)))

(declare-fun b!80049 () Bool)

(declare-fun e!52261 () Bool)

(assert (=> b!80049 (= e!52260 e!52261)))

(declare-fun res!41736 () Bool)

(assert (=> b!80049 (=> (not res!41736) (not e!52261))))

(assert (=> b!80049 (= res!41736 (and (or (not ((_ is Cons!1490) lt!36341)) (bvsle (_1!1092 (h!2078 lt!36341)) (_1!1092 lt!35792))) ((_ is Cons!1490) lt!36341) (bvslt (_1!1092 (h!2078 lt!36341)) (_1!1092 lt!35792))))))

(declare-fun b!80050 () Bool)

(assert (=> b!80050 (= e!52261 (containsKey!141 (t!5132 lt!36341) (_1!1092 lt!35792)))))

(assert (= (and d!19563 (not res!41735)) b!80049))

(assert (= (and b!80049 res!41736) b!80050))

(declare-fun m!81431 () Bool)

(assert (=> b!80050 m!81431))

(assert (=> b!78539 d!19563))

(declare-fun d!19565 () Bool)

(assert (=> d!19565 (= (apply!79 lt!36289 (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000)) (get!1186 (getValueByKey!138 (toList!729 lt!36289) (select (arr!1886 (_keys!3931 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3395 () Bool)

(assert (= bs!3395 d!19565))

(assert (=> bs!3395 m!78435))

(assert (=> bs!3395 m!81337))

(assert (=> bs!3395 m!81337))

(declare-fun m!81433 () Bool)

(assert (=> bs!3395 m!81433))

(assert (=> b!78405 d!19565))

(declare-fun d!19567 () Bool)

(declare-fun c!12506 () Bool)

(assert (=> d!19567 (= c!12506 ((_ is ValueCellFull!911) (select (arr!1887 (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!52262 () V!2993)

(assert (=> d!19567 (= (get!1183 (select (arr!1887 (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52262)))

(declare-fun b!80051 () Bool)

(assert (=> b!80051 (= e!52262 (get!1184 (select (arr!1887 (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80052 () Bool)

(assert (=> b!80052 (= e!52262 (get!1185 (select (arr!1887 (ite (or c!11968 c!11973) (_values!2254 newMap!16) (array!3960 (store (arr!1887 (_values!2254 newMap!16)) (index!3071 lt!36137) (ValueCellFull!911 lt!35794)) (size!2128 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!340 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19567 c!12506) b!80051))

(assert (= (and d!19567 (not c!12506)) b!80052))

(assert (=> b!80051 m!78721))

(assert (=> b!80051 m!78471))

(declare-fun m!81435 () Bool)

(assert (=> b!80051 m!81435))

(assert (=> b!80052 m!78721))

(assert (=> b!80052 m!78471))

(declare-fun m!81437 () Bool)

(assert (=> b!80052 m!81437))

(assert (=> b!78405 d!19567))

(declare-fun d!19569 () Bool)

(assert (=> d!19569 (= ($colon$colon!68 e!51291 (ite c!12046 (h!2078 (toList!729 lt!35793)) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789)))) (Cons!1490 (ite c!12046 (h!2078 (toList!729 lt!35793)) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))) e!51291))))

(assert (=> bm!7198 d!19569))

(declare-fun bm!7377 () Bool)

(declare-fun call!7380 () Bool)

(declare-fun c!12507 () Bool)

(assert (=> bm!7377 (= call!7380 (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12507 (Cons!1491 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000) Nil!1492) Nil!1492)))))

(declare-fun b!80054 () Bool)

(declare-fun e!52266 () Bool)

(assert (=> b!80054 (= e!52266 (contains!738 Nil!1492 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!80055 () Bool)

(declare-fun e!52264 () Bool)

(declare-fun e!52263 () Bool)

(assert (=> b!80055 (= e!52264 e!52263)))

(assert (=> b!80055 (= c!12507 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!80056 () Bool)

(declare-fun e!52265 () Bool)

(assert (=> b!80056 (= e!52265 e!52264)))

(declare-fun res!41737 () Bool)

(assert (=> b!80056 (=> (not res!41737) (not e!52264))))

(assert (=> b!80056 (= res!41737 (not e!52266))))

(declare-fun res!41739 () Bool)

(assert (=> b!80056 (=> (not res!41739) (not e!52266))))

(assert (=> b!80056 (= res!41739 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!80057 () Bool)

(assert (=> b!80057 (= e!52263 call!7380)))

(declare-fun d!19571 () Bool)

(declare-fun res!41738 () Bool)

(assert (=> d!19571 (=> res!41738 e!52265)))

(assert (=> d!19571 (= res!41738 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!19571 (= (arrayNoDuplicates!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) #b00000000000000000000000000000000 Nil!1492) e!52265)))

(declare-fun b!80053 () Bool)

(assert (=> b!80053 (= e!52263 call!7380)))

(assert (= (and d!19571 (not res!41738)) b!80056))

(assert (= (and b!80056 res!41739) b!80054))

(assert (= (and b!80056 res!41737) b!80055))

(assert (= (and b!80055 c!12507) b!80057))

(assert (= (and b!80055 (not c!12507)) b!80053))

(assert (= (or b!80057 b!80053) bm!7377))

(assert (=> bm!7377 m!81399))

(declare-fun m!81439 () Bool)

(assert (=> bm!7377 m!81439))

(assert (=> b!80054 m!81399))

(assert (=> b!80054 m!81399))

(declare-fun m!81441 () Bool)

(assert (=> b!80054 m!81441))

(assert (=> b!80055 m!81399))

(assert (=> b!80055 m!81399))

(assert (=> b!80055 m!81401))

(assert (=> b!80056 m!81399))

(assert (=> b!80056 m!81399))

(assert (=> b!80056 m!81401))

(assert (=> b!78373 d!19571))

(assert (=> b!78706 d!18785))

(declare-fun b!80058 () Bool)

(declare-fun e!52267 () Option!144)

(assert (=> b!80058 (= e!52267 (Some!143 (_2!1092 (h!2078 (t!5132 (toList!729 lt!35965))))))))

(declare-fun b!80059 () Bool)

(declare-fun e!52268 () Option!144)

(assert (=> b!80059 (= e!52267 e!52268)))

(declare-fun c!12509 () Bool)

(assert (=> b!80059 (= c!12509 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35965))) (not (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35965)))) (_1!1092 lt!35806)))))))

(declare-fun b!80061 () Bool)

(assert (=> b!80061 (= e!52268 None!142)))

(declare-fun b!80060 () Bool)

(assert (=> b!80060 (= e!52268 (getValueByKey!138 (t!5132 (t!5132 (toList!729 lt!35965))) (_1!1092 lt!35806)))))

(declare-fun d!19573 () Bool)

(declare-fun c!12508 () Bool)

(assert (=> d!19573 (= c!12508 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35965))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35965)))) (_1!1092 lt!35806))))))

(assert (=> d!19573 (= (getValueByKey!138 (t!5132 (toList!729 lt!35965)) (_1!1092 lt!35806)) e!52267)))

(assert (= (and d!19573 c!12508) b!80058))

(assert (= (and d!19573 (not c!12508)) b!80059))

(assert (= (and b!80059 c!12509) b!80060))

(assert (= (and b!80059 (not c!12509)) b!80061))

(declare-fun m!81443 () Bool)

(assert (=> b!80060 m!81443))

(assert (=> b!78778 d!19573))

(declare-fun d!19575 () Bool)

(assert (=> d!19575 (= (get!1185 (select (arr!1887 (_values!2254 (v!2594 (underlying!280 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!340 (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78367 d!19575))

(declare-fun d!19577 () Bool)

(declare-fun e!52270 () Bool)

(assert (=> d!19577 e!52270))

(declare-fun res!41740 () Bool)

(assert (=> d!19577 (=> res!41740 e!52270)))

(declare-fun lt!37107 () Bool)

(assert (=> d!19577 (= res!41740 (not lt!37107))))

(declare-fun lt!37109 () Bool)

(assert (=> d!19577 (= lt!37107 lt!37109)))

(declare-fun lt!37108 () Unit!2237)

(declare-fun e!52269 () Unit!2237)

(assert (=> d!19577 (= lt!37108 e!52269)))

(declare-fun c!12510 () Bool)

(assert (=> d!19577 (= c!12510 lt!37109)))

(assert (=> d!19577 (= lt!37109 (containsKey!141 (toList!729 lt!36237) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> d!19577 (= (contains!736 lt!36237 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37107)))

(declare-fun b!80062 () Bool)

(declare-fun lt!37106 () Unit!2237)

(assert (=> b!80062 (= e!52269 lt!37106)))

(assert (=> b!80062 (= lt!37106 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36237) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(assert (=> b!80062 (isDefined!90 (getValueByKey!138 (toList!729 lt!36237) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!80063 () Bool)

(declare-fun Unit!2319 () Unit!2237)

(assert (=> b!80063 (= e!52269 Unit!2319)))

(declare-fun b!80064 () Bool)

(assert (=> b!80064 (= e!52270 (isDefined!90 (getValueByKey!138 (toList!729 lt!36237) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19577 c!12510) b!80062))

(assert (= (and d!19577 (not c!12510)) b!80063))

(assert (= (and d!19577 (not res!41740)) b!80064))

(declare-fun m!81445 () Bool)

(assert (=> d!19577 m!81445))

(declare-fun m!81447 () Bool)

(assert (=> b!80062 m!81447))

(assert (=> b!80062 m!78607))

(assert (=> b!80062 m!78607))

(declare-fun m!81449 () Bool)

(assert (=> b!80062 m!81449))

(assert (=> b!80064 m!78607))

(assert (=> b!80064 m!78607))

(assert (=> b!80064 m!81449))

(assert (=> d!18571 d!19577))

(declare-fun b!80065 () Bool)

(declare-fun e!52271 () Option!144)

(assert (=> b!80065 (= e!52271 (Some!143 (_2!1092 (h!2078 lt!36236))))))

(declare-fun b!80066 () Bool)

(declare-fun e!52272 () Option!144)

(assert (=> b!80066 (= e!52271 e!52272)))

(declare-fun c!12512 () Bool)

(assert (=> b!80066 (= c!12512 (and ((_ is Cons!1490) lt!36236) (not (= (_1!1092 (h!2078 lt!36236)) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!80068 () Bool)

(assert (=> b!80068 (= e!52272 None!142)))

(declare-fun b!80067 () Bool)

(assert (=> b!80067 (= e!52272 (getValueByKey!138 (t!5132 lt!36236) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun c!12511 () Bool)

(declare-fun d!19579 () Bool)

(assert (=> d!19579 (= c!12511 (and ((_ is Cons!1490) lt!36236) (= (_1!1092 (h!2078 lt!36236)) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19579 (= (getValueByKey!138 lt!36236 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52271)))

(assert (= (and d!19579 c!12511) b!80065))

(assert (= (and d!19579 (not c!12511)) b!80066))

(assert (= (and b!80066 c!12512) b!80067))

(assert (= (and b!80066 (not c!12512)) b!80068))

(declare-fun m!81451 () Bool)

(assert (=> b!80067 m!81451))

(assert (=> d!18571 d!19579))

(declare-fun d!19581 () Bool)

(assert (=> d!19581 (= (getValueByKey!138 lt!36236 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) (Some!143 (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun lt!37110 () Unit!2237)

(assert (=> d!19581 (= lt!37110 (choose!468 lt!36236 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun e!52273 () Bool)

(assert (=> d!19581 e!52273))

(declare-fun res!41741 () Bool)

(assert (=> d!19581 (=> (not res!41741) (not e!52273))))

(assert (=> d!19581 (= res!41741 (isStrictlySorted!282 lt!36236))))

(assert (=> d!19581 (= (lemmaContainsTupThenGetReturnValue!55 lt!36236 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37110)))

(declare-fun b!80069 () Bool)

(declare-fun res!41742 () Bool)

(assert (=> b!80069 (=> (not res!41742) (not e!52273))))

(assert (=> b!80069 (= res!41742 (containsKey!141 lt!36236 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!80070 () Bool)

(assert (=> b!80070 (= e!52273 (contains!737 lt!36236 (tuple2!2163 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (= (and d!19581 res!41741) b!80069))

(assert (= (and b!80069 res!41742) b!80070))

(assert (=> d!19581 m!78601))

(declare-fun m!81453 () Bool)

(assert (=> d!19581 m!81453))

(declare-fun m!81455 () Bool)

(assert (=> d!19581 m!81455))

(declare-fun m!81457 () Bool)

(assert (=> b!80069 m!81457))

(declare-fun m!81459 () Bool)

(assert (=> b!80070 m!81459))

(assert (=> d!18571 d!19581))

(declare-fun b!80071 () Bool)

(declare-fun e!52276 () List!1494)

(declare-fun e!52274 () List!1494)

(assert (=> b!80071 (= e!52276 e!52274)))

(declare-fun c!12514 () Bool)

(assert (=> b!80071 (= c!12514 (and ((_ is Cons!1490) (toList!729 lt!36043)) (= (_1!1092 (h!2078 (toList!729 lt!36043))) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun b!80072 () Bool)

(declare-fun c!12513 () Bool)

(assert (=> b!80072 (= c!12513 (and ((_ is Cons!1490) (toList!729 lt!36043)) (bvsgt (_1!1092 (h!2078 (toList!729 lt!36043))) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun e!52278 () List!1494)

(assert (=> b!80072 (= e!52274 e!52278)))

(declare-fun b!80073 () Bool)

(declare-fun call!7381 () List!1494)

(assert (=> b!80073 (= e!52278 call!7381)))

(declare-fun b!80074 () Bool)

(declare-fun call!7383 () List!1494)

(assert (=> b!80074 (= e!52274 call!7383)))

(declare-fun bm!7379 () Bool)

(assert (=> bm!7379 (= call!7381 call!7383)))

(declare-fun e!52277 () List!1494)

(declare-fun b!80075 () Bool)

(assert (=> b!80075 (= e!52277 (insertStrictlySorted!58 (t!5132 (toList!729 lt!36043)) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!80076 () Bool)

(declare-fun call!7382 () List!1494)

(assert (=> b!80076 (= e!52276 call!7382)))

(declare-fun b!80077 () Bool)

(assert (=> b!80077 (= e!52277 (ite c!12514 (t!5132 (toList!729 lt!36043)) (ite c!12513 (Cons!1490 (h!2078 (toList!729 lt!36043)) (t!5132 (toList!729 lt!36043))) Nil!1491)))))

(declare-fun d!19583 () Bool)

(declare-fun e!52275 () Bool)

(assert (=> d!19583 e!52275))

(declare-fun res!41744 () Bool)

(assert (=> d!19583 (=> (not res!41744) (not e!52275))))

(declare-fun lt!37111 () List!1494)

(assert (=> d!19583 (= res!41744 (isStrictlySorted!282 lt!37111))))

(assert (=> d!19583 (= lt!37111 e!52276)))

(declare-fun c!12516 () Bool)

(assert (=> d!19583 (= c!12516 (and ((_ is Cons!1490) (toList!729 lt!36043)) (bvslt (_1!1092 (h!2078 (toList!729 lt!36043))) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19583 (isStrictlySorted!282 (toList!729 lt!36043))))

(assert (=> d!19583 (= (insertStrictlySorted!58 (toList!729 lt!36043) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!37111)))

(declare-fun bm!7378 () Bool)

(assert (=> bm!7378 (= call!7383 call!7382)))

(declare-fun b!80078 () Bool)

(declare-fun res!41743 () Bool)

(assert (=> b!80078 (=> (not res!41743) (not e!52275))))

(assert (=> b!80078 (= res!41743 (containsKey!141 lt!37111 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun b!80079 () Bool)

(assert (=> b!80079 (= e!52278 call!7381)))

(declare-fun b!80080 () Bool)

(assert (=> b!80080 (= e!52275 (contains!737 lt!37111 (tuple2!2163 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(declare-fun bm!7380 () Bool)

(assert (=> bm!7380 (= call!7382 ($colon$colon!68 e!52277 (ite c!12516 (h!2078 (toList!729 lt!36043)) (tuple2!2163 (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))) (_2!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun c!12515 () Bool)

(assert (=> bm!7380 (= c!12515 c!12516)))

(assert (= (and d!19583 c!12516) b!80076))

(assert (= (and d!19583 (not c!12516)) b!80071))

(assert (= (and b!80071 c!12514) b!80074))

(assert (= (and b!80071 (not c!12514)) b!80072))

(assert (= (and b!80072 c!12513) b!80079))

(assert (= (and b!80072 (not c!12513)) b!80073))

(assert (= (or b!80079 b!80073) bm!7379))

(assert (= (or b!80074 bm!7379) bm!7378))

(assert (= (or b!80076 bm!7378) bm!7380))

(assert (= (and bm!7380 c!12515) b!80075))

(assert (= (and bm!7380 (not c!12515)) b!80077))

(assert (= (and d!19583 res!41744) b!80078))

(assert (= (and b!80078 res!41743) b!80080))

(declare-fun m!81461 () Bool)

(assert (=> b!80080 m!81461))

(declare-fun m!81463 () Bool)

(assert (=> b!80075 m!81463))

(declare-fun m!81465 () Bool)

(assert (=> b!80078 m!81465))

(declare-fun m!81467 () Bool)

(assert (=> d!19583 m!81467))

(declare-fun m!81469 () Bool)

(assert (=> d!19583 m!81469))

(declare-fun m!81471 () Bool)

(assert (=> bm!7380 m!81471))

(assert (=> d!18571 d!19583))

(assert (=> bm!7165 d!19111))

(declare-fun d!19585 () Bool)

(declare-fun res!41745 () Bool)

(declare-fun e!52279 () Bool)

(assert (=> d!19585 (=> res!41745 e!52279)))

(assert (=> d!19585 (= res!41745 (and ((_ is Cons!1490) (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36041)))))

(assert (=> d!19585 (= (containsKey!141 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) lt!36041) e!52279)))

(declare-fun b!80081 () Bool)

(declare-fun e!52280 () Bool)

(assert (=> b!80081 (= e!52279 e!52280)))

(declare-fun res!41746 () Bool)

(assert (=> b!80081 (=> (not res!41746) (not e!52280))))

(assert (=> b!80081 (= res!41746 (and (or (not ((_ is Cons!1490) (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) (bvsle (_1!1092 (h!2078 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36041)) ((_ is Cons!1490) (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) (bvslt (_1!1092 (h!2078 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))) lt!36041)))))

(declare-fun b!80082 () Bool)

(assert (=> b!80082 (= e!52280 (containsKey!141 (t!5132 (toList!729 (+!100 lt!36043 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))) lt!36041))))

(assert (= (and d!19585 (not res!41745)) b!80081))

(assert (= (and b!80081 res!41746) b!80082))

(declare-fun m!81473 () Bool)

(assert (=> b!80082 m!81473))

(assert (=> d!18585 d!19585))

(declare-fun d!19587 () Bool)

(declare-fun res!41747 () Bool)

(declare-fun e!52281 () Bool)

(assert (=> d!19587 (=> res!41747 e!52281)))

(assert (=> d!19587 (= res!41747 (and ((_ is Cons!1490) (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)))) (= (_1!1092 (h!2078 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))))) lt!35933)))))

(assert (=> d!19587 (= (containsKey!141 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))) lt!35933) e!52281)))

(declare-fun b!80083 () Bool)

(declare-fun e!52282 () Bool)

(assert (=> b!80083 (= e!52281 e!52282)))

(declare-fun res!41748 () Bool)

(assert (=> b!80083 (=> (not res!41748) (not e!52282))))

(assert (=> b!80083 (= res!41748 (and (or (not ((_ is Cons!1490) (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))))) (bvsle (_1!1092 (h!2078 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))))) lt!35933)) ((_ is Cons!1490) (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)))) (bvslt (_1!1092 (h!2078 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938))))) lt!35933)))))

(declare-fun b!80084 () Bool)

(assert (=> b!80084 (= e!52282 (containsKey!141 (t!5132 (toList!729 (+!100 lt!35937 (tuple2!2163 lt!35935 lt!35938)))) lt!35933))))

(assert (= (and d!19587 (not res!41747)) b!80083))

(assert (= (and b!80083 res!41748) b!80084))

(declare-fun m!81475 () Bool)

(assert (=> b!80084 m!81475))

(assert (=> d!18739 d!19587))

(declare-fun d!19589 () Bool)

(declare-fun res!41749 () Bool)

(declare-fun e!52283 () Bool)

(assert (=> d!19589 (=> res!41749 e!52283)))

(assert (=> d!19589 (= res!41749 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35796))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35796)))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(assert (=> d!19589 (= (containsKey!141 (t!5132 (toList!729 lt!35796)) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)) e!52283)))

(declare-fun b!80085 () Bool)

(declare-fun e!52284 () Bool)

(assert (=> b!80085 (= e!52283 e!52284)))

(declare-fun res!41750 () Bool)

(assert (=> b!80085 (=> (not res!41750) (not e!52284))))

(assert (=> b!80085 (= res!41750 (and (or (not ((_ is Cons!1490) (t!5132 (toList!729 lt!35796)))) (bvsle (_1!1092 (h!2078 (t!5132 (toList!729 lt!35796)))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))) ((_ is Cons!1490) (t!5132 (toList!729 lt!35796))) (bvslt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35796)))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355))))))

(declare-fun b!80086 () Bool)

(assert (=> b!80086 (= e!52284 (containsKey!141 (t!5132 (t!5132 (toList!729 lt!35796))) (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355)))))

(assert (= (and d!19589 (not res!41749)) b!80085))

(assert (= (and b!80085 res!41750) b!80086))

(assert (=> b!80086 m!77885))

(declare-fun m!81477 () Bool)

(assert (=> b!80086 m!81477))

(assert (=> b!78683 d!19589))

(declare-fun b!80087 () Bool)

(declare-fun e!52285 () Option!144)

(assert (=> b!80087 (= e!52285 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36166)))))))

(declare-fun b!80088 () Bool)

(declare-fun e!52286 () Option!144)

(assert (=> b!80088 (= e!52285 e!52286)))

(declare-fun c!12518 () Bool)

(assert (=> b!80088 (= c!12518 (and ((_ is Cons!1490) (toList!729 lt!36166)) (not (= (_1!1092 (h!2078 (toList!729 lt!36166))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))))

(declare-fun b!80090 () Bool)

(assert (=> b!80090 (= e!52286 None!142)))

(declare-fun b!80089 () Bool)

(assert (=> b!80089 (= e!52286 (getValueByKey!138 (t!5132 (toList!729 lt!36166)) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))))))

(declare-fun d!19591 () Bool)

(declare-fun c!12517 () Bool)

(assert (=> d!19591 (= c!12517 (and ((_ is Cons!1490) (toList!729 lt!36166)) (= (_1!1092 (h!2078 (toList!729 lt!36166))) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794)))))))

(assert (=> d!19591 (= (getValueByKey!138 (toList!729 lt!36166) (_1!1092 (tuple2!2163 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) from!355) lt!35794))) e!52285)))

(assert (= (and d!19591 c!12517) b!80087))

(assert (= (and d!19591 (not c!12517)) b!80088))

(assert (= (and b!80088 c!12518) b!80089))

(assert (= (and b!80088 (not c!12518)) b!80090))

(declare-fun m!81479 () Bool)

(assert (=> b!80089 m!81479))

(assert (=> b!78243 d!19591))

(declare-fun d!19593 () Bool)

(assert (=> d!19593 (= (apply!79 lt!36521 lt!36518) (get!1186 (getValueByKey!138 (toList!729 lt!36521) lt!36518)))))

(declare-fun bs!3396 () Bool)

(assert (= bs!3396 d!19593))

(declare-fun m!81481 () Bool)

(assert (=> bs!3396 m!81481))

(assert (=> bs!3396 m!81481))

(declare-fun m!81483 () Bool)

(assert (=> bs!3396 m!81483))

(assert (=> b!78760 d!19593))

(declare-fun d!19595 () Bool)

(assert (=> d!19595 (= (apply!79 (+!100 lt!36527 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16))) lt!36520) (apply!79 lt!36527 lt!36520))))

(declare-fun lt!37112 () Unit!2237)

(assert (=> d!19595 (= lt!37112 (choose!465 lt!36527 lt!36530 (zeroValue!2169 newMap!16) lt!36520))))

(declare-fun e!52287 () Bool)

(assert (=> d!19595 e!52287))

(declare-fun res!41751 () Bool)

(assert (=> d!19595 (=> (not res!41751) (not e!52287))))

(assert (=> d!19595 (= res!41751 (contains!736 lt!36527 lt!36520))))

(assert (=> d!19595 (= (addApplyDifferent!55 lt!36527 lt!36530 (zeroValue!2169 newMap!16) lt!36520) lt!37112)))

(declare-fun b!80091 () Bool)

(assert (=> b!80091 (= e!52287 (not (= lt!36520 lt!36530)))))

(assert (= (and d!19595 res!41751) b!80091))

(assert (=> d!19595 m!79273))

(declare-fun m!81485 () Bool)

(assert (=> d!19595 m!81485))

(assert (=> d!19595 m!79263))

(assert (=> d!19595 m!79265))

(declare-fun m!81487 () Bool)

(assert (=> d!19595 m!81487))

(assert (=> d!19595 m!79263))

(assert (=> b!78760 d!19595))

(assert (=> b!78760 d!19083))

(declare-fun d!19597 () Bool)

(assert (=> d!19597 (contains!736 (+!100 lt!36528 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16))) lt!36526)))

(declare-fun lt!37113 () Unit!2237)

(assert (=> d!19597 (= lt!37113 (choose!464 lt!36528 lt!36525 (zeroValue!2169 newMap!16) lt!36526))))

(assert (=> d!19597 (contains!736 lt!36528 lt!36526)))

(assert (=> d!19597 (= (addStillContains!55 lt!36528 lt!36525 (zeroValue!2169 newMap!16) lt!36526) lt!37113)))

(declare-fun bs!3397 () Bool)

(assert (= bs!3397 d!19597))

(assert (=> bs!3397 m!79279))

(assert (=> bs!3397 m!79279))

(assert (=> bs!3397 m!79285))

(declare-fun m!81489 () Bool)

(assert (=> bs!3397 m!81489))

(declare-fun m!81491 () Bool)

(assert (=> bs!3397 m!81491))

(assert (=> b!78760 d!19597))

(declare-fun d!19599 () Bool)

(assert (=> d!19599 (= (apply!79 (+!100 lt!36524 (tuple2!2163 lt!36531 (minValue!2169 newMap!16))) lt!36529) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36524 (tuple2!2163 lt!36531 (minValue!2169 newMap!16)))) lt!36529)))))

(declare-fun bs!3398 () Bool)

(assert (= bs!3398 d!19599))

(declare-fun m!81493 () Bool)

(assert (=> bs!3398 m!81493))

(assert (=> bs!3398 m!81493))

(declare-fun m!81495 () Bool)

(assert (=> bs!3398 m!81495))

(assert (=> b!78760 d!19599))

(declare-fun d!19601 () Bool)

(declare-fun e!52288 () Bool)

(assert (=> d!19601 e!52288))

(declare-fun res!41752 () Bool)

(assert (=> d!19601 (=> (not res!41752) (not e!52288))))

(declare-fun lt!37115 () ListLongMap!1427)

(assert (=> d!19601 (= res!41752 (contains!736 lt!37115 (_1!1092 (tuple2!2163 lt!36519 (minValue!2169 newMap!16)))))))

(declare-fun lt!37114 () List!1494)

(assert (=> d!19601 (= lt!37115 (ListLongMap!1428 lt!37114))))

(declare-fun lt!37116 () Unit!2237)

(declare-fun lt!37117 () Unit!2237)

(assert (=> d!19601 (= lt!37116 lt!37117)))

(assert (=> d!19601 (= (getValueByKey!138 lt!37114 (_1!1092 (tuple2!2163 lt!36519 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36519 (minValue!2169 newMap!16)))))))

(assert (=> d!19601 (= lt!37117 (lemmaContainsTupThenGetReturnValue!55 lt!37114 (_1!1092 (tuple2!2163 lt!36519 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36519 (minValue!2169 newMap!16)))))))

(assert (=> d!19601 (= lt!37114 (insertStrictlySorted!58 (toList!729 lt!36521) (_1!1092 (tuple2!2163 lt!36519 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36519 (minValue!2169 newMap!16)))))))

(assert (=> d!19601 (= (+!100 lt!36521 (tuple2!2163 lt!36519 (minValue!2169 newMap!16))) lt!37115)))

(declare-fun b!80092 () Bool)

(declare-fun res!41753 () Bool)

(assert (=> b!80092 (=> (not res!41753) (not e!52288))))

(assert (=> b!80092 (= res!41753 (= (getValueByKey!138 (toList!729 lt!37115) (_1!1092 (tuple2!2163 lt!36519 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36519 (minValue!2169 newMap!16))))))))

(declare-fun b!80093 () Bool)

(assert (=> b!80093 (= e!52288 (contains!737 (toList!729 lt!37115) (tuple2!2163 lt!36519 (minValue!2169 newMap!16))))))

(assert (= (and d!19601 res!41752) b!80092))

(assert (= (and b!80092 res!41753) b!80093))

(declare-fun m!81497 () Bool)

(assert (=> d!19601 m!81497))

(declare-fun m!81499 () Bool)

(assert (=> d!19601 m!81499))

(declare-fun m!81501 () Bool)

(assert (=> d!19601 m!81501))

(declare-fun m!81503 () Bool)

(assert (=> d!19601 m!81503))

(declare-fun m!81505 () Bool)

(assert (=> b!80092 m!81505))

(declare-fun m!81507 () Bool)

(assert (=> b!80093 m!81507))

(assert (=> b!78760 d!19601))

(declare-fun d!19603 () Bool)

(assert (=> d!19603 (= (apply!79 (+!100 lt!36527 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16))) lt!36520) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36527 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16)))) lt!36520)))))

(declare-fun bs!3399 () Bool)

(assert (= bs!3399 d!19603))

(declare-fun m!81509 () Bool)

(assert (=> bs!3399 m!81509))

(assert (=> bs!3399 m!81509))

(declare-fun m!81511 () Bool)

(assert (=> bs!3399 m!81511))

(assert (=> b!78760 d!19603))

(declare-fun d!19605 () Bool)

(declare-fun e!52289 () Bool)

(assert (=> d!19605 e!52289))

(declare-fun res!41754 () Bool)

(assert (=> d!19605 (=> (not res!41754) (not e!52289))))

(declare-fun lt!37119 () ListLongMap!1427)

(assert (=> d!19605 (= res!41754 (contains!736 lt!37119 (_1!1092 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16)))))))

(declare-fun lt!37118 () List!1494)

(assert (=> d!19605 (= lt!37119 (ListLongMap!1428 lt!37118))))

(declare-fun lt!37120 () Unit!2237)

(declare-fun lt!37121 () Unit!2237)

(assert (=> d!19605 (= lt!37120 lt!37121)))

(assert (=> d!19605 (= (getValueByKey!138 lt!37118 (_1!1092 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19605 (= lt!37121 (lemmaContainsTupThenGetReturnValue!55 lt!37118 (_1!1092 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19605 (= lt!37118 (insertStrictlySorted!58 (toList!729 lt!36527) (_1!1092 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19605 (= (+!100 lt!36527 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16))) lt!37119)))

(declare-fun b!80094 () Bool)

(declare-fun res!41755 () Bool)

(assert (=> b!80094 (=> (not res!41755) (not e!52289))))

(assert (=> b!80094 (= res!41755 (= (getValueByKey!138 (toList!729 lt!37119) (_1!1092 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16))))))))

(declare-fun b!80095 () Bool)

(assert (=> b!80095 (= e!52289 (contains!737 (toList!729 lt!37119) (tuple2!2163 lt!36530 (zeroValue!2169 newMap!16))))))

(assert (= (and d!19605 res!41754) b!80094))

(assert (= (and b!80094 res!41755) b!80095))

(declare-fun m!81513 () Bool)

(assert (=> d!19605 m!81513))

(declare-fun m!81515 () Bool)

(assert (=> d!19605 m!81515))

(declare-fun m!81517 () Bool)

(assert (=> d!19605 m!81517))

(declare-fun m!81519 () Bool)

(assert (=> d!19605 m!81519))

(declare-fun m!81521 () Bool)

(assert (=> b!80094 m!81521))

(declare-fun m!81523 () Bool)

(assert (=> b!80095 m!81523))

(assert (=> b!78760 d!19605))

(declare-fun d!19607 () Bool)

(assert (=> d!19607 (= (apply!79 (+!100 lt!36524 (tuple2!2163 lt!36531 (minValue!2169 newMap!16))) lt!36529) (apply!79 lt!36524 lt!36529))))

(declare-fun lt!37122 () Unit!2237)

(assert (=> d!19607 (= lt!37122 (choose!465 lt!36524 lt!36531 (minValue!2169 newMap!16) lt!36529))))

(declare-fun e!52290 () Bool)

(assert (=> d!19607 e!52290))

(declare-fun res!41756 () Bool)

(assert (=> d!19607 (=> (not res!41756) (not e!52290))))

(assert (=> d!19607 (= res!41756 (contains!736 lt!36524 lt!36529))))

(assert (=> d!19607 (= (addApplyDifferent!55 lt!36524 lt!36531 (minValue!2169 newMap!16) lt!36529) lt!37122)))

(declare-fun b!80096 () Bool)

(assert (=> b!80096 (= e!52290 (not (= lt!36529 lt!36531)))))

(assert (= (and d!19607 res!41756) b!80096))

(assert (=> d!19607 m!79289))

(declare-fun m!81525 () Bool)

(assert (=> d!19607 m!81525))

(assert (=> d!19607 m!79267))

(assert (=> d!19607 m!79269))

(declare-fun m!81527 () Bool)

(assert (=> d!19607 m!81527))

(assert (=> d!19607 m!79267))

(assert (=> b!78760 d!19607))

(declare-fun d!19609 () Bool)

(declare-fun e!52291 () Bool)

(assert (=> d!19609 e!52291))

(declare-fun res!41757 () Bool)

(assert (=> d!19609 (=> (not res!41757) (not e!52291))))

(declare-fun lt!37124 () ListLongMap!1427)

(assert (=> d!19609 (= res!41757 (contains!736 lt!37124 (_1!1092 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16)))))))

(declare-fun lt!37123 () List!1494)

(assert (=> d!19609 (= lt!37124 (ListLongMap!1428 lt!37123))))

(declare-fun lt!37125 () Unit!2237)

(declare-fun lt!37126 () Unit!2237)

(assert (=> d!19609 (= lt!37125 lt!37126)))

(assert (=> d!19609 (= (getValueByKey!138 lt!37123 (_1!1092 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19609 (= lt!37126 (lemmaContainsTupThenGetReturnValue!55 lt!37123 (_1!1092 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19609 (= lt!37123 (insertStrictlySorted!58 (toList!729 lt!36528) (_1!1092 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19609 (= (+!100 lt!36528 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16))) lt!37124)))

(declare-fun b!80097 () Bool)

(declare-fun res!41758 () Bool)

(assert (=> b!80097 (=> (not res!41758) (not e!52291))))

(assert (=> b!80097 (= res!41758 (= (getValueByKey!138 (toList!729 lt!37124) (_1!1092 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16))))))))

(declare-fun b!80098 () Bool)

(assert (=> b!80098 (= e!52291 (contains!737 (toList!729 lt!37124) (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16))))))

(assert (= (and d!19609 res!41757) b!80097))

(assert (= (and b!80097 res!41758) b!80098))

(declare-fun m!81529 () Bool)

(assert (=> d!19609 m!81529))

(declare-fun m!81531 () Bool)

(assert (=> d!19609 m!81531))

(declare-fun m!81533 () Bool)

(assert (=> d!19609 m!81533))

(declare-fun m!81535 () Bool)

(assert (=> d!19609 m!81535))

(declare-fun m!81537 () Bool)

(assert (=> b!80097 m!81537))

(declare-fun m!81539 () Bool)

(assert (=> b!80098 m!81539))

(assert (=> b!78760 d!19609))

(declare-fun d!19611 () Bool)

(assert (=> d!19611 (= (apply!79 (+!100 lt!36521 (tuple2!2163 lt!36519 (minValue!2169 newMap!16))) lt!36518) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36521 (tuple2!2163 lt!36519 (minValue!2169 newMap!16)))) lt!36518)))))

(declare-fun bs!3400 () Bool)

(assert (= bs!3400 d!19611))

(declare-fun m!81541 () Bool)

(assert (=> bs!3400 m!81541))

(assert (=> bs!3400 m!81541))

(declare-fun m!81543 () Bool)

(assert (=> bs!3400 m!81543))

(assert (=> b!78760 d!19611))

(declare-fun d!19613 () Bool)

(assert (=> d!19613 (= (apply!79 lt!36527 lt!36520) (get!1186 (getValueByKey!138 (toList!729 lt!36527) lt!36520)))))

(declare-fun bs!3401 () Bool)

(assert (= bs!3401 d!19613))

(declare-fun m!81545 () Bool)

(assert (=> bs!3401 m!81545))

(assert (=> bs!3401 m!81545))

(declare-fun m!81547 () Bool)

(assert (=> bs!3401 m!81547))

(assert (=> b!78760 d!19613))

(declare-fun d!19615 () Bool)

(declare-fun e!52292 () Bool)

(assert (=> d!19615 e!52292))

(declare-fun res!41759 () Bool)

(assert (=> d!19615 (=> (not res!41759) (not e!52292))))

(declare-fun lt!37128 () ListLongMap!1427)

(assert (=> d!19615 (= res!41759 (contains!736 lt!37128 (_1!1092 (tuple2!2163 lt!36531 (minValue!2169 newMap!16)))))))

(declare-fun lt!37127 () List!1494)

(assert (=> d!19615 (= lt!37128 (ListLongMap!1428 lt!37127))))

(declare-fun lt!37129 () Unit!2237)

(declare-fun lt!37130 () Unit!2237)

(assert (=> d!19615 (= lt!37129 lt!37130)))

(assert (=> d!19615 (= (getValueByKey!138 lt!37127 (_1!1092 (tuple2!2163 lt!36531 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36531 (minValue!2169 newMap!16)))))))

(assert (=> d!19615 (= lt!37130 (lemmaContainsTupThenGetReturnValue!55 lt!37127 (_1!1092 (tuple2!2163 lt!36531 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36531 (minValue!2169 newMap!16)))))))

(assert (=> d!19615 (= lt!37127 (insertStrictlySorted!58 (toList!729 lt!36524) (_1!1092 (tuple2!2163 lt!36531 (minValue!2169 newMap!16))) (_2!1092 (tuple2!2163 lt!36531 (minValue!2169 newMap!16)))))))

(assert (=> d!19615 (= (+!100 lt!36524 (tuple2!2163 lt!36531 (minValue!2169 newMap!16))) lt!37128)))

(declare-fun b!80099 () Bool)

(declare-fun res!41760 () Bool)

(assert (=> b!80099 (=> (not res!41760) (not e!52292))))

(assert (=> b!80099 (= res!41760 (= (getValueByKey!138 (toList!729 lt!37128) (_1!1092 (tuple2!2163 lt!36531 (minValue!2169 newMap!16)))) (Some!143 (_2!1092 (tuple2!2163 lt!36531 (minValue!2169 newMap!16))))))))

(declare-fun b!80100 () Bool)

(assert (=> b!80100 (= e!52292 (contains!737 (toList!729 lt!37128) (tuple2!2163 lt!36531 (minValue!2169 newMap!16))))))

(assert (= (and d!19615 res!41759) b!80099))

(assert (= (and b!80099 res!41760) b!80100))

(declare-fun m!81549 () Bool)

(assert (=> d!19615 m!81549))

(declare-fun m!81551 () Bool)

(assert (=> d!19615 m!81551))

(declare-fun m!81553 () Bool)

(assert (=> d!19615 m!81553))

(declare-fun m!81555 () Bool)

(assert (=> d!19615 m!81555))

(declare-fun m!81557 () Bool)

(assert (=> b!80099 m!81557))

(declare-fun m!81559 () Bool)

(assert (=> b!80100 m!81559))

(assert (=> b!78760 d!19615))

(declare-fun d!19617 () Bool)

(assert (=> d!19617 (= (apply!79 (+!100 lt!36521 (tuple2!2163 lt!36519 (minValue!2169 newMap!16))) lt!36518) (apply!79 lt!36521 lt!36518))))

(declare-fun lt!37131 () Unit!2237)

(assert (=> d!19617 (= lt!37131 (choose!465 lt!36521 lt!36519 (minValue!2169 newMap!16) lt!36518))))

(declare-fun e!52293 () Bool)

(assert (=> d!19617 e!52293))

(declare-fun res!41761 () Bool)

(assert (=> d!19617 (=> (not res!41761) (not e!52293))))

(assert (=> d!19617 (= res!41761 (contains!736 lt!36521 lt!36518))))

(assert (=> d!19617 (= (addApplyDifferent!55 lt!36521 lt!36519 (minValue!2169 newMap!16) lt!36518) lt!37131)))

(declare-fun b!80101 () Bool)

(assert (=> b!80101 (= e!52293 (not (= lt!36518 lt!36519)))))

(assert (= (and d!19617 res!41761) b!80101))

(assert (=> d!19617 m!79287))

(declare-fun m!81561 () Bool)

(assert (=> d!19617 m!81561))

(assert (=> d!19617 m!79275))

(assert (=> d!19617 m!79283))

(declare-fun m!81563 () Bool)

(assert (=> d!19617 m!81563))

(assert (=> d!19617 m!79275))

(assert (=> b!78760 d!19617))

(declare-fun d!19619 () Bool)

(assert (=> d!19619 (= (apply!79 lt!36524 lt!36529) (get!1186 (getValueByKey!138 (toList!729 lt!36524) lt!36529)))))

(declare-fun bs!3402 () Bool)

(assert (= bs!3402 d!19619))

(declare-fun m!81565 () Bool)

(assert (=> bs!3402 m!81565))

(assert (=> bs!3402 m!81565))

(declare-fun m!81567 () Bool)

(assert (=> bs!3402 m!81567))

(assert (=> b!78760 d!19619))

(declare-fun d!19621 () Bool)

(declare-fun e!52295 () Bool)

(assert (=> d!19621 e!52295))

(declare-fun res!41762 () Bool)

(assert (=> d!19621 (=> res!41762 e!52295)))

(declare-fun lt!37133 () Bool)

(assert (=> d!19621 (= res!41762 (not lt!37133))))

(declare-fun lt!37135 () Bool)

(assert (=> d!19621 (= lt!37133 lt!37135)))

(declare-fun lt!37134 () Unit!2237)

(declare-fun e!52294 () Unit!2237)

(assert (=> d!19621 (= lt!37134 e!52294)))

(declare-fun c!12519 () Bool)

(assert (=> d!19621 (= c!12519 lt!37135)))

(assert (=> d!19621 (= lt!37135 (containsKey!141 (toList!729 (+!100 lt!36528 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16)))) lt!36526))))

(assert (=> d!19621 (= (contains!736 (+!100 lt!36528 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16))) lt!36526) lt!37133)))

(declare-fun b!80102 () Bool)

(declare-fun lt!37132 () Unit!2237)

(assert (=> b!80102 (= e!52294 lt!37132)))

(assert (=> b!80102 (= lt!37132 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (+!100 lt!36528 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16)))) lt!36526))))

(assert (=> b!80102 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36528 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16)))) lt!36526))))

(declare-fun b!80103 () Bool)

(declare-fun Unit!2320 () Unit!2237)

(assert (=> b!80103 (= e!52294 Unit!2320)))

(declare-fun b!80104 () Bool)

(assert (=> b!80104 (= e!52295 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36528 (tuple2!2163 lt!36525 (zeroValue!2169 newMap!16)))) lt!36526)))))

(assert (= (and d!19621 c!12519) b!80102))

(assert (= (and d!19621 (not c!12519)) b!80103))

(assert (= (and d!19621 (not res!41762)) b!80104))

(declare-fun m!81569 () Bool)

(assert (=> d!19621 m!81569))

(declare-fun m!81571 () Bool)

(assert (=> b!80102 m!81571))

(declare-fun m!81573 () Bool)

(assert (=> b!80102 m!81573))

(assert (=> b!80102 m!81573))

(declare-fun m!81575 () Bool)

(assert (=> b!80102 m!81575))

(assert (=> b!80104 m!81573))

(assert (=> b!80104 m!81573))

(assert (=> b!80104 m!81575))

(assert (=> b!78760 d!19621))

(declare-fun d!19623 () Bool)

(assert (=> d!19623 (= (apply!79 lt!36282 lt!36275) (get!1186 (getValueByKey!138 (toList!729 lt!36282) lt!36275)))))

(declare-fun bs!3403 () Bool)

(assert (= bs!3403 d!19623))

(declare-fun m!81577 () Bool)

(assert (=> bs!3403 m!81577))

(assert (=> bs!3403 m!81577))

(declare-fun m!81579 () Bool)

(assert (=> bs!3403 m!81579))

(assert (=> b!78393 d!19623))

(declare-fun d!19625 () Bool)

(declare-fun e!52296 () Bool)

(assert (=> d!19625 e!52296))

(declare-fun res!41763 () Bool)

(assert (=> d!19625 (=> (not res!41763) (not e!52296))))

(declare-fun lt!37137 () ListLongMap!1427)

(assert (=> d!19625 (= res!41763 (contains!736 lt!37137 (_1!1092 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(declare-fun lt!37136 () List!1494)

(assert (=> d!19625 (= lt!37137 (ListLongMap!1428 lt!37136))))

(declare-fun lt!37138 () Unit!2237)

(declare-fun lt!37139 () Unit!2237)

(assert (=> d!19625 (= lt!37138 lt!37139)))

(assert (=> d!19625 (= (getValueByKey!138 lt!37136 (_1!1092 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) (Some!143 (_2!1092 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(assert (=> d!19625 (= lt!37139 (lemmaContainsTupThenGetReturnValue!55 lt!37136 (_1!1092 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) (_2!1092 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(assert (=> d!19625 (= lt!37136 (insertStrictlySorted!58 (toList!729 lt!36279) (_1!1092 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) (_2!1092 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(assert (=> d!19625 (= (+!100 lt!36279 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) lt!37137)))

(declare-fun b!80105 () Bool)

(declare-fun res!41764 () Bool)

(assert (=> b!80105 (=> (not res!41764) (not e!52296))))

(assert (=> b!80105 (= res!41764 (= (getValueByKey!138 (toList!729 lt!37137) (_1!1092 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) (Some!143 (_2!1092 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))))

(declare-fun b!80106 () Bool)

(assert (=> b!80106 (= e!52296 (contains!737 (toList!729 lt!37137) (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))

(assert (= (and d!19625 res!41763) b!80105))

(assert (= (and b!80105 res!41764) b!80106))

(declare-fun m!81581 () Bool)

(assert (=> d!19625 m!81581))

(declare-fun m!81583 () Bool)

(assert (=> d!19625 m!81583))

(declare-fun m!81585 () Bool)

(assert (=> d!19625 m!81585))

(declare-fun m!81587 () Bool)

(assert (=> d!19625 m!81587))

(declare-fun m!81589 () Bool)

(assert (=> b!80105 m!81589))

(declare-fun m!81591 () Bool)

(assert (=> b!80106 m!81591))

(assert (=> b!78393 d!19625))

(declare-fun d!19627 () Bool)

(assert (=> d!19627 (= (apply!79 (+!100 lt!36279 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) lt!36284) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36279 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) lt!36284)))))

(declare-fun bs!3404 () Bool)

(assert (= bs!3404 d!19627))

(declare-fun m!81593 () Bool)

(assert (=> bs!3404 m!81593))

(assert (=> bs!3404 m!81593))

(declare-fun m!81595 () Bool)

(assert (=> bs!3404 m!81595))

(assert (=> b!78393 d!19627))

(declare-fun d!19629 () Bool)

(assert (=> d!19629 (= (apply!79 (+!100 lt!36279 (tuple2!2163 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) lt!36284) (apply!79 lt!36279 lt!36284))))

(declare-fun lt!37140 () Unit!2237)

(assert (=> d!19629 (= lt!37140 (choose!465 lt!36279 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) lt!36284))))

(declare-fun e!52297 () Bool)

(assert (=> d!19629 e!52297))

(declare-fun res!41765 () Bool)

(assert (=> d!19629 (=> (not res!41765) (not e!52297))))

(assert (=> d!19629 (= res!41765 (contains!736 lt!36279 lt!36284))))

(assert (=> d!19629 (= (addApplyDifferent!55 lt!36279 lt!36286 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) lt!36284) lt!37140)))

(declare-fun b!80107 () Bool)

(assert (=> b!80107 (= e!52297 (not (= lt!36284 lt!36286)))))

(assert (= (and d!19629 res!41765) b!80107))

(assert (=> d!19629 m!78759))

(declare-fun m!81597 () Bool)

(assert (=> d!19629 m!81597))

(assert (=> d!19629 m!78737))

(assert (=> d!19629 m!78739))

(declare-fun m!81599 () Bool)

(assert (=> d!19629 m!81599))

(assert (=> d!19629 m!78737))

(assert (=> b!78393 d!19629))

(declare-fun d!19631 () Bool)

(assert (=> d!19631 (= (apply!79 (+!100 lt!36282 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) lt!36275) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36282 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))) lt!36275)))))

(declare-fun bs!3405 () Bool)

(assert (= bs!3405 d!19631))

(declare-fun m!81601 () Bool)

(assert (=> bs!3405 m!81601))

(assert (=> bs!3405 m!81601))

(declare-fun m!81603 () Bool)

(assert (=> bs!3405 m!81603))

(assert (=> b!78393 d!19631))

(assert (=> b!78393 d!19087))

(declare-fun d!19633 () Bool)

(assert (=> d!19633 (contains!736 (+!100 lt!36283 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) lt!36281)))

(declare-fun lt!37141 () Unit!2237)

(assert (=> d!19633 (= lt!37141 (choose!464 lt!36283 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) lt!36281))))

(assert (=> d!19633 (contains!736 lt!36283 lt!36281)))

(assert (=> d!19633 (= (addStillContains!55 lt!36283 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) lt!36281) lt!37141)))

(declare-fun bs!3406 () Bool)

(assert (= bs!3406 d!19633))

(assert (=> bs!3406 m!78749))

(assert (=> bs!3406 m!78749))

(assert (=> bs!3406 m!78755))

(declare-fun m!81605 () Bool)

(assert (=> bs!3406 m!81605))

(declare-fun m!81607 () Bool)

(assert (=> bs!3406 m!81607))

(assert (=> b!78393 d!19633))

(declare-fun d!19635 () Bool)

(declare-fun e!52298 () Bool)

(assert (=> d!19635 e!52298))

(declare-fun res!41766 () Bool)

(assert (=> d!19635 (=> (not res!41766) (not e!52298))))

(declare-fun lt!37143 () ListLongMap!1427)

(assert (=> d!19635 (= res!41766 (contains!736 lt!37143 (_1!1092 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))))))

(declare-fun lt!37142 () List!1494)

(assert (=> d!19635 (= lt!37143 (ListLongMap!1428 lt!37142))))

(declare-fun lt!37144 () Unit!2237)

(declare-fun lt!37145 () Unit!2237)

(assert (=> d!19635 (= lt!37144 lt!37145)))

(assert (=> d!19635 (= (getValueByKey!138 lt!37142 (_1!1092 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))) (Some!143 (_2!1092 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))))))

(assert (=> d!19635 (= lt!37145 (lemmaContainsTupThenGetReturnValue!55 lt!37142 (_1!1092 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) (_2!1092 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))))))

(assert (=> d!19635 (= lt!37142 (insertStrictlySorted!58 (toList!729 lt!36282) (_1!1092 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) (_2!1092 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))))))

(assert (=> d!19635 (= (+!100 lt!36282 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) lt!37143)))

(declare-fun b!80108 () Bool)

(declare-fun res!41767 () Bool)

(assert (=> b!80108 (=> (not res!41767) (not e!52298))))

(assert (=> b!80108 (= res!41767 (= (getValueByKey!138 (toList!729 lt!37143) (_1!1092 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))) (Some!143 (_2!1092 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))))))))

(declare-fun b!80109 () Bool)

(assert (=> b!80109 (= e!52298 (contains!737 (toList!729 lt!37143) (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))))))

(assert (= (and d!19635 res!41766) b!80108))

(assert (= (and b!80108 res!41767) b!80109))

(declare-fun m!81609 () Bool)

(assert (=> d!19635 m!81609))

(declare-fun m!81611 () Bool)

(assert (=> d!19635 m!81611))

(declare-fun m!81613 () Bool)

(assert (=> d!19635 m!81613))

(declare-fun m!81615 () Bool)

(assert (=> d!19635 m!81615))

(declare-fun m!81617 () Bool)

(assert (=> b!80108 m!81617))

(declare-fun m!81619 () Bool)

(assert (=> b!80109 m!81619))

(assert (=> b!78393 d!19635))

(declare-fun d!19637 () Bool)

(declare-fun e!52300 () Bool)

(assert (=> d!19637 e!52300))

(declare-fun res!41768 () Bool)

(assert (=> d!19637 (=> res!41768 e!52300)))

(declare-fun lt!37147 () Bool)

(assert (=> d!19637 (= res!41768 (not lt!37147))))

(declare-fun lt!37149 () Bool)

(assert (=> d!19637 (= lt!37147 lt!37149)))

(declare-fun lt!37148 () Unit!2237)

(declare-fun e!52299 () Unit!2237)

(assert (=> d!19637 (= lt!37148 e!52299)))

(declare-fun c!12520 () Bool)

(assert (=> d!19637 (= c!12520 lt!37149)))

(assert (=> d!19637 (= lt!37149 (containsKey!141 (toList!729 (+!100 lt!36283 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))) lt!36281))))

(assert (=> d!19637 (= (contains!736 (+!100 lt!36283 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) lt!36281) lt!37147)))

(declare-fun b!80110 () Bool)

(declare-fun lt!37146 () Unit!2237)

(assert (=> b!80110 (= e!52299 lt!37146)))

(assert (=> b!80110 (= lt!37146 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 (+!100 lt!36283 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))) lt!36281))))

(assert (=> b!80110 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36283 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))) lt!36281))))

(declare-fun b!80111 () Bool)

(declare-fun Unit!2321 () Unit!2237)

(assert (=> b!80111 (= e!52299 Unit!2321)))

(declare-fun b!80112 () Bool)

(assert (=> b!80112 (= e!52300 (isDefined!90 (getValueByKey!138 (toList!729 (+!100 lt!36283 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))) lt!36281)))))

(assert (= (and d!19637 c!12520) b!80110))

(assert (= (and d!19637 (not c!12520)) b!80111))

(assert (= (and d!19637 (not res!41768)) b!80112))

(declare-fun m!81621 () Bool)

(assert (=> d!19637 m!81621))

(declare-fun m!81623 () Bool)

(assert (=> b!80110 m!81623))

(declare-fun m!81625 () Bool)

(assert (=> b!80110 m!81625))

(assert (=> b!80110 m!81625))

(declare-fun m!81627 () Bool)

(assert (=> b!80110 m!81627))

(assert (=> b!80112 m!81625))

(assert (=> b!80112 m!81625))

(assert (=> b!80112 m!81627))

(assert (=> b!78393 d!19637))

(declare-fun d!19639 () Bool)

(assert (=> d!19639 (= (apply!79 (+!100 lt!36276 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) lt!36273) (apply!79 lt!36276 lt!36273))))

(declare-fun lt!37150 () Unit!2237)

(assert (=> d!19639 (= lt!37150 (choose!465 lt!36276 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) lt!36273))))

(declare-fun e!52301 () Bool)

(assert (=> d!19639 e!52301))

(declare-fun res!41769 () Bool)

(assert (=> d!19639 (=> (not res!41769) (not e!52301))))

(assert (=> d!19639 (= res!41769 (contains!736 lt!36276 lt!36273))))

(assert (=> d!19639 (= (addApplyDifferent!55 lt!36276 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)) lt!36273) lt!37150)))

(declare-fun b!80113 () Bool)

(assert (=> b!80113 (= e!52301 (not (= lt!36273 lt!36274)))))

(assert (= (and d!19639 res!41769) b!80113))

(assert (=> d!19639 m!78757))

(declare-fun m!81629 () Bool)

(assert (=> d!19639 m!81629))

(assert (=> d!19639 m!78745))

(assert (=> d!19639 m!78753))

(declare-fun m!81631 () Bool)

(assert (=> d!19639 m!81631))

(assert (=> d!19639 m!78745))

(assert (=> b!78393 d!19639))

(declare-fun d!19641 () Bool)

(assert (=> d!19641 (= (apply!79 (+!100 lt!36276 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) lt!36273) (get!1186 (getValueByKey!138 (toList!729 (+!100 lt!36276 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) lt!36273)))))

(declare-fun bs!3407 () Bool)

(assert (= bs!3407 d!19641))

(declare-fun m!81633 () Bool)

(assert (=> bs!3407 m!81633))

(assert (=> bs!3407 m!81633))

(declare-fun m!81635 () Bool)

(assert (=> bs!3407 m!81635))

(assert (=> b!78393 d!19641))

(declare-fun d!19643 () Bool)

(declare-fun e!52302 () Bool)

(assert (=> d!19643 e!52302))

(declare-fun res!41770 () Bool)

(assert (=> d!19643 (=> (not res!41770) (not e!52302))))

(declare-fun lt!37152 () ListLongMap!1427)

(assert (=> d!19643 (= res!41770 (contains!736 lt!37152 (_1!1092 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(declare-fun lt!37151 () List!1494)

(assert (=> d!19643 (= lt!37152 (ListLongMap!1428 lt!37151))))

(declare-fun lt!37153 () Unit!2237)

(declare-fun lt!37154 () Unit!2237)

(assert (=> d!19643 (= lt!37153 lt!37154)))

(assert (=> d!19643 (= (getValueByKey!138 lt!37151 (_1!1092 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) (Some!143 (_2!1092 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(assert (=> d!19643 (= lt!37154 (lemmaContainsTupThenGetReturnValue!55 lt!37151 (_1!1092 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) (_2!1092 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(assert (=> d!19643 (= lt!37151 (insertStrictlySorted!58 (toList!729 lt!36276) (_1!1092 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) (_2!1092 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))))))

(assert (=> d!19643 (= (+!100 lt!36276 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))) lt!37152)))

(declare-fun b!80114 () Bool)

(declare-fun res!41771 () Bool)

(assert (=> b!80114 (=> (not res!41771) (not e!52302))))

(assert (=> b!80114 (= res!41771 (= (getValueByKey!138 (toList!729 lt!37152) (_1!1092 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16))))) (Some!143 (_2!1092 (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))))

(declare-fun b!80115 () Bool)

(assert (=> b!80115 (= e!52302 (contains!737 (toList!729 lt!37152) (tuple2!2163 lt!36274 (ite c!11968 (ite c!11972 (minValue!2169 newMap!16) lt!35794) (minValue!2169 newMap!16)))))))

(assert (= (and d!19643 res!41770) b!80114))

(assert (= (and b!80114 res!41771) b!80115))

(declare-fun m!81637 () Bool)

(assert (=> d!19643 m!81637))

(declare-fun m!81639 () Bool)

(assert (=> d!19643 m!81639))

(declare-fun m!81641 () Bool)

(assert (=> d!19643 m!81641))

(declare-fun m!81643 () Bool)

(assert (=> d!19643 m!81643))

(declare-fun m!81645 () Bool)

(assert (=> b!80114 m!81645))

(declare-fun m!81647 () Bool)

(assert (=> b!80115 m!81647))

(assert (=> b!78393 d!19643))

(declare-fun d!19645 () Bool)

(declare-fun e!52303 () Bool)

(assert (=> d!19645 e!52303))

(declare-fun res!41772 () Bool)

(assert (=> d!19645 (=> (not res!41772) (not e!52303))))

(declare-fun lt!37156 () ListLongMap!1427)

(assert (=> d!19645 (= res!41772 (contains!736 lt!37156 (_1!1092 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))))))

(declare-fun lt!37155 () List!1494)

(assert (=> d!19645 (= lt!37156 (ListLongMap!1428 lt!37155))))

(declare-fun lt!37157 () Unit!2237)

(declare-fun lt!37158 () Unit!2237)

(assert (=> d!19645 (= lt!37157 lt!37158)))

(assert (=> d!19645 (= (getValueByKey!138 lt!37155 (_1!1092 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))) (Some!143 (_2!1092 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))))))

(assert (=> d!19645 (= lt!37158 (lemmaContainsTupThenGetReturnValue!55 lt!37155 (_1!1092 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) (_2!1092 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))))))

(assert (=> d!19645 (= lt!37155 (insertStrictlySorted!58 (toList!729 lt!36283) (_1!1092 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) (_2!1092 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))))))

(assert (=> d!19645 (= (+!100 lt!36283 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) lt!37156)))

(declare-fun b!80116 () Bool)

(declare-fun res!41773 () Bool)

(assert (=> b!80116 (=> (not res!41773) (not e!52303))))

(assert (=> b!80116 (= res!41773 (= (getValueByKey!138 (toList!729 lt!37156) (_1!1092 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16))))) (Some!143 (_2!1092 (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))))))))

(declare-fun b!80117 () Bool)

(assert (=> b!80117 (= e!52303 (contains!737 (toList!729 lt!37156) (tuple2!2163 lt!36280 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))))))

(assert (= (and d!19645 res!41772) b!80116))

(assert (= (and b!80116 res!41773) b!80117))

(declare-fun m!81649 () Bool)

(assert (=> d!19645 m!81649))

(declare-fun m!81651 () Bool)

(assert (=> d!19645 m!81651))

(declare-fun m!81653 () Bool)

(assert (=> d!19645 m!81653))

(declare-fun m!81655 () Bool)

(assert (=> d!19645 m!81655))

(declare-fun m!81657 () Bool)

(assert (=> b!80116 m!81657))

(declare-fun m!81659 () Bool)

(assert (=> b!80117 m!81659))

(assert (=> b!78393 d!19645))

(declare-fun d!19647 () Bool)

(assert (=> d!19647 (= (apply!79 lt!36279 lt!36284) (get!1186 (getValueByKey!138 (toList!729 lt!36279) lt!36284)))))

(declare-fun bs!3408 () Bool)

(assert (= bs!3408 d!19647))

(declare-fun m!81661 () Bool)

(assert (=> bs!3408 m!81661))

(assert (=> bs!3408 m!81661))

(declare-fun m!81663 () Bool)

(assert (=> bs!3408 m!81663))

(assert (=> b!78393 d!19647))

(declare-fun d!19649 () Bool)

(assert (=> d!19649 (= (apply!79 lt!36276 lt!36273) (get!1186 (getValueByKey!138 (toList!729 lt!36276) lt!36273)))))

(declare-fun bs!3409 () Bool)

(assert (= bs!3409 d!19649))

(declare-fun m!81665 () Bool)

(assert (=> bs!3409 m!81665))

(assert (=> bs!3409 m!81665))

(declare-fun m!81667 () Bool)

(assert (=> bs!3409 m!81667))

(assert (=> b!78393 d!19649))

(declare-fun d!19651 () Bool)

(assert (=> d!19651 (= (apply!79 (+!100 lt!36282 (tuple2!2163 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)))) lt!36275) (apply!79 lt!36282 lt!36275))))

(declare-fun lt!37159 () Unit!2237)

(assert (=> d!19651 (= lt!37159 (choose!465 lt!36282 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) lt!36275))))

(declare-fun e!52304 () Bool)

(assert (=> d!19651 e!52304))

(declare-fun res!41774 () Bool)

(assert (=> d!19651 (=> (not res!41774) (not e!52304))))

(assert (=> d!19651 (= res!41774 (contains!736 lt!36282 lt!36275))))

(assert (=> d!19651 (= (addApplyDifferent!55 lt!36282 lt!36285 (ite (and c!11968 c!11972) lt!35794 (zeroValue!2169 newMap!16)) lt!36275) lt!37159)))

(declare-fun b!80118 () Bool)

(assert (=> b!80118 (= e!52304 (not (= lt!36275 lt!36285)))))

(assert (= (and d!19651 res!41774) b!80118))

(assert (=> d!19651 m!78743))

(declare-fun m!81669 () Bool)

(assert (=> d!19651 m!81669))

(assert (=> d!19651 m!78733))

(assert (=> d!19651 m!78735))

(declare-fun m!81671 () Bool)

(assert (=> d!19651 m!81671))

(assert (=> d!19651 m!78733))

(assert (=> b!78393 d!19651))

(assert (=> b!78228 d!19411))

(assert (=> b!78228 d!18823))

(declare-fun d!19653 () Bool)

(assert (=> d!19653 (isDefined!90 (getValueByKey!138 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!37160 () Unit!2237)

(assert (=> d!19653 (= lt!37160 (choose!469 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52305 () Bool)

(assert (=> d!19653 e!52305))

(declare-fun res!41775 () Bool)

(assert (=> d!19653 (=> (not res!41775) (not e!52305))))

(assert (=> d!19653 (= res!41775 (isStrictlySorted!282 (toList!729 lt!36049)))))

(assert (=> d!19653 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000) lt!37160)))

(declare-fun b!80119 () Bool)

(assert (=> b!80119 (= e!52305 (containsKey!141 (toList!729 lt!36049) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19653 res!41775) b!80119))

(assert (=> d!19653 m!78529))

(assert (=> d!19653 m!78529))

(assert (=> d!19653 m!78719))

(declare-fun m!81673 () Bool)

(assert (=> d!19653 m!81673))

(assert (=> d!19653 m!79523))

(assert (=> b!80119 m!78715))

(assert (=> b!78383 d!19653))

(assert (=> b!78383 d!19037))

(assert (=> b!78383 d!19005))

(declare-fun d!19655 () Bool)

(assert (=> d!19655 (= ($colon$colon!68 e!51397 (ite c!12106 (h!2078 (toList!729 lt!35791)) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789)))) (Cons!1490 (ite c!12106 (h!2078 (toList!729 lt!35791)) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))) e!51397))))

(assert (=> bm!7228 d!19655))

(declare-fun d!19657 () Bool)

(declare-fun e!52306 () Bool)

(assert (=> d!19657 e!52306))

(declare-fun res!41776 () Bool)

(assert (=> d!19657 (=> (not res!41776) (not e!52306))))

(declare-fun lt!37162 () ListLongMap!1427)

(assert (=> d!19657 (= res!41776 (contains!736 lt!37162 (_1!1092 (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(declare-fun lt!37161 () List!1494)

(assert (=> d!19657 (= lt!37162 (ListLongMap!1428 lt!37161))))

(declare-fun lt!37163 () Unit!2237)

(declare-fun lt!37164 () Unit!2237)

(assert (=> d!19657 (= lt!37163 lt!37164)))

(assert (=> d!19657 (= (getValueByKey!138 lt!37161 (_1!1092 (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))) (Some!143 (_2!1092 (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!19657 (= lt!37164 (lemmaContainsTupThenGetReturnValue!55 lt!37161 (_1!1092 (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (_2!1092 (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!19657 (= lt!37161 (insertStrictlySorted!58 (toList!729 (ite c!11999 call!7172 (ite c!11997 call!7175 call!7171))) (_1!1092 (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (_2!1092 (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!19657 (= (+!100 (ite c!11999 call!7172 (ite c!11997 call!7175 call!7171)) (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) lt!37162)))

(declare-fun b!80120 () Bool)

(declare-fun res!41777 () Bool)

(assert (=> b!80120 (=> (not res!41777) (not e!52306))))

(assert (=> b!80120 (= res!41777 (= (getValueByKey!138 (toList!729 lt!37162) (_1!1092 (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))) (Some!143 (_2!1092 (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))))

(declare-fun b!80121 () Bool)

(assert (=> b!80121 (= e!52306 (contains!737 (toList!729 lt!37162) (ite (or c!11999 c!11997) (tuple2!2163 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2163 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (= (and d!19657 res!41776) b!80120))

(assert (= (and b!80120 res!41777) b!80121))

(declare-fun m!81675 () Bool)

(assert (=> d!19657 m!81675))

(declare-fun m!81677 () Bool)

(assert (=> d!19657 m!81677))

(declare-fun m!81679 () Bool)

(assert (=> d!19657 m!81679))

(declare-fun m!81681 () Bool)

(assert (=> d!19657 m!81681))

(declare-fun m!81683 () Bool)

(assert (=> b!80120 m!81683))

(declare-fun m!81685 () Bool)

(assert (=> b!80121 m!81685))

(assert (=> bm!7169 d!19657))

(declare-fun d!19659 () Bool)

(declare-fun lt!37165 () Bool)

(assert (=> d!19659 (= lt!37165 (select (content!84 lt!36329) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun e!52308 () Bool)

(assert (=> d!19659 (= lt!37165 e!52308)))

(declare-fun res!41779 () Bool)

(assert (=> d!19659 (=> (not res!41779) (not e!52308))))

(assert (=> d!19659 (= res!41779 ((_ is Cons!1490) lt!36329))))

(assert (=> d!19659 (= (contains!737 lt!36329 (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))) lt!37165)))

(declare-fun b!80122 () Bool)

(declare-fun e!52307 () Bool)

(assert (=> b!80122 (= e!52308 e!52307)))

(declare-fun res!41778 () Bool)

(assert (=> b!80122 (=> res!41778 e!52307)))

(assert (=> b!80122 (= res!41778 (= (h!2078 lt!36329) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(declare-fun b!80123 () Bool)

(assert (=> b!80123 (= e!52307 (contains!737 (t!5132 lt!36329) (tuple2!2163 (_1!1092 lt!35806) (_2!1092 lt!35806))))))

(assert (= (and d!19659 res!41779) b!80122))

(assert (= (and b!80122 (not res!41778)) b!80123))

(declare-fun m!81687 () Bool)

(assert (=> d!19659 m!81687))

(declare-fun m!81689 () Bool)

(assert (=> d!19659 m!81689))

(declare-fun m!81691 () Bool)

(assert (=> b!80123 m!81691))

(assert (=> b!78497 d!19659))

(declare-fun d!19661 () Bool)

(declare-fun res!41780 () Bool)

(declare-fun e!52309 () Bool)

(assert (=> d!19661 (=> res!41780 e!52309)))

(assert (=> d!19661 (= res!41780 (and ((_ is Cons!1490) lt!35952) (= (_1!1092 (h!2078 lt!35952)) (_1!1092 lt!35792))))))

(assert (=> d!19661 (= (containsKey!141 lt!35952 (_1!1092 lt!35792)) e!52309)))

(declare-fun b!80124 () Bool)

(declare-fun e!52310 () Bool)

(assert (=> b!80124 (= e!52309 e!52310)))

(declare-fun res!41781 () Bool)

(assert (=> b!80124 (=> (not res!41781) (not e!52310))))

(assert (=> b!80124 (= res!41781 (and (or (not ((_ is Cons!1490) lt!35952)) (bvsle (_1!1092 (h!2078 lt!35952)) (_1!1092 lt!35792))) ((_ is Cons!1490) lt!35952) (bvslt (_1!1092 (h!2078 lt!35952)) (_1!1092 lt!35792))))))

(declare-fun b!80125 () Bool)

(assert (=> b!80125 (= e!52310 (containsKey!141 (t!5132 lt!35952) (_1!1092 lt!35792)))))

(assert (= (and d!19661 (not res!41780)) b!80124))

(assert (= (and b!80124 res!41781) b!80125))

(declare-fun m!81693 () Bool)

(assert (=> b!80125 m!81693))

(assert (=> b!78640 d!19661))

(assert (=> b!78635 d!19405))

(assert (=> b!78635 d!18679))

(declare-fun b!80126 () Bool)

(declare-fun e!52313 () Bool)

(declare-fun call!7384 () Bool)

(assert (=> b!80126 (= e!52313 call!7384)))

(declare-fun d!19663 () Bool)

(declare-fun res!41782 () Bool)

(declare-fun e!52312 () Bool)

(assert (=> d!19663 (=> res!41782 e!52312)))

(assert (=> d!19663 (= res!41782 (bvsge #b00000000000000000000000000000000 (size!2127 (_keys!3931 (v!2594 (underlying!280 thiss!992))))))))

(assert (=> d!19663 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3931 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992)))) e!52312)))

(declare-fun bm!7381 () Bool)

(assert (=> bm!7381 (= call!7384 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3931 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992)))))))

(declare-fun b!80127 () Bool)

(declare-fun e!52311 () Bool)

(assert (=> b!80127 (= e!52312 e!52311)))

(declare-fun c!12521 () Bool)

(assert (=> b!80127 (= c!12521 (validKeyInArray!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!80128 () Bool)

(assert (=> b!80128 (= e!52311 call!7384)))

(declare-fun b!80129 () Bool)

(assert (=> b!80129 (= e!52311 e!52313)))

(declare-fun lt!37167 () (_ BitVec 64))

(assert (=> b!80129 (= lt!37167 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!37166 () Unit!2237)

(assert (=> b!80129 (= lt!37166 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) lt!37167 #b00000000000000000000000000000000))))

(assert (=> b!80129 (arrayContainsKey!0 (_keys!3931 (v!2594 (underlying!280 thiss!992))) lt!37167 #b00000000000000000000000000000000)))

(declare-fun lt!37168 () Unit!2237)

(assert (=> b!80129 (= lt!37168 lt!37166)))

(declare-fun res!41783 () Bool)

(assert (=> b!80129 (= res!41783 (= (seekEntryOrOpen!0 (select (arr!1886 (_keys!3931 (v!2594 (underlying!280 thiss!992)))) #b00000000000000000000000000000000) (_keys!3931 (v!2594 (underlying!280 thiss!992))) (mask!6267 (v!2594 (underlying!280 thiss!992)))) (Found!234 #b00000000000000000000000000000000)))))

(assert (=> b!80129 (=> (not res!41783) (not e!52313))))

(assert (= (and d!19663 (not res!41782)) b!80127))

(assert (= (and b!80127 c!12521) b!80129))

(assert (= (and b!80127 (not c!12521)) b!80128))

(assert (= (and b!80129 res!41783) b!80126))

(assert (= (or b!80126 b!80128) bm!7381))

(declare-fun m!81695 () Bool)

(assert (=> bm!7381 m!81695))

(assert (=> b!80127 m!81399))

(assert (=> b!80127 m!81399))

(assert (=> b!80127 m!81401))

(assert (=> b!80129 m!81399))

(declare-fun m!81697 () Bool)

(assert (=> b!80129 m!81697))

(declare-fun m!81699 () Bool)

(assert (=> b!80129 m!81699))

(assert (=> b!80129 m!81399))

(declare-fun m!81701 () Bool)

(assert (=> b!80129 m!81701))

(assert (=> b!78372 d!19663))

(declare-fun d!19665 () Bool)

(declare-fun lt!37169 () Bool)

(assert (=> d!19665 (= lt!37169 (select (content!84 lt!36307) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun e!52315 () Bool)

(assert (=> d!19665 (= lt!37169 e!52315)))

(declare-fun res!41785 () Bool)

(assert (=> d!19665 (=> (not res!41785) (not e!52315))))

(assert (=> d!19665 (= res!41785 ((_ is Cons!1490) lt!36307))))

(assert (=> d!19665 (= (contains!737 lt!36307 (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))) lt!37169)))

(declare-fun b!80130 () Bool)

(declare-fun e!52314 () Bool)

(assert (=> b!80130 (= e!52315 e!52314)))

(declare-fun res!41784 () Bool)

(assert (=> b!80130 (=> res!41784 e!52314)))

(assert (=> b!80130 (= res!41784 (= (h!2078 lt!36307) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(declare-fun b!80131 () Bool)

(assert (=> b!80131 (= e!52314 (contains!737 (t!5132 lt!36307) (tuple2!2163 (_1!1092 lt!35789) (_2!1092 lt!35789))))))

(assert (= (and d!19665 res!41785) b!80130))

(assert (= (and b!80130 (not res!41784)) b!80131))

(declare-fun m!81703 () Bool)

(assert (=> d!19665 m!81703))

(declare-fun m!81705 () Bool)

(assert (=> d!19665 m!81705))

(declare-fun m!81707 () Bool)

(assert (=> b!80131 m!81707))

(assert (=> b!78470 d!19665))

(assert (=> b!78620 d!18833))

(declare-fun d!19667 () Bool)

(declare-fun lt!37170 () Bool)

(assert (=> d!19667 (= lt!37170 (select (content!84 (t!5132 (toList!729 lt!35957))) lt!35789))))

(declare-fun e!52317 () Bool)

(assert (=> d!19667 (= lt!37170 e!52317)))

(declare-fun res!41787 () Bool)

(assert (=> d!19667 (=> (not res!41787) (not e!52317))))

(assert (=> d!19667 (= res!41787 ((_ is Cons!1490) (t!5132 (toList!729 lt!35957))))))

(assert (=> d!19667 (= (contains!737 (t!5132 (toList!729 lt!35957)) lt!35789) lt!37170)))

(declare-fun b!80132 () Bool)

(declare-fun e!52316 () Bool)

(assert (=> b!80132 (= e!52317 e!52316)))

(declare-fun res!41786 () Bool)

(assert (=> b!80132 (=> res!41786 e!52316)))

(assert (=> b!80132 (= res!41786 (= (h!2078 (t!5132 (toList!729 lt!35957))) lt!35789))))

(declare-fun b!80133 () Bool)

(assert (=> b!80133 (= e!52316 (contains!737 (t!5132 (t!5132 (toList!729 lt!35957))) lt!35789))))

(assert (= (and d!19667 res!41787) b!80132))

(assert (= (and b!80132 (not res!41786)) b!80133))

(assert (=> d!19667 m!79531))

(declare-fun m!81709 () Bool)

(assert (=> d!19667 m!81709))

(declare-fun m!81711 () Bool)

(assert (=> b!80133 m!81711))

(assert (=> b!78382 d!19667))

(declare-fun b!80134 () Bool)

(declare-fun e!52320 () List!1494)

(declare-fun e!52318 () List!1494)

(assert (=> b!80134 (= e!52320 e!52318)))

(declare-fun c!12523 () Bool)

(assert (=> b!80134 (= c!12523 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35804))) (= (_1!1092 (h!2078 (t!5132 (toList!729 lt!35804)))) (_1!1092 lt!35792))))))

(declare-fun b!80135 () Bool)

(declare-fun c!12522 () Bool)

(assert (=> b!80135 (= c!12522 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35804))) (bvsgt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35804)))) (_1!1092 lt!35792))))))

(declare-fun e!52322 () List!1494)

(assert (=> b!80135 (= e!52318 e!52322)))

(declare-fun b!80136 () Bool)

(declare-fun call!7385 () List!1494)

(assert (=> b!80136 (= e!52322 call!7385)))

(declare-fun b!80137 () Bool)

(declare-fun call!7387 () List!1494)

(assert (=> b!80137 (= e!52318 call!7387)))

(declare-fun bm!7383 () Bool)

(assert (=> bm!7383 (= call!7385 call!7387)))

(declare-fun b!80138 () Bool)

(declare-fun e!52321 () List!1494)

(assert (=> b!80138 (= e!52321 (insertStrictlySorted!58 (t!5132 (t!5132 (toList!729 lt!35804))) (_1!1092 lt!35792) (_2!1092 lt!35792)))))

(declare-fun b!80139 () Bool)

(declare-fun call!7386 () List!1494)

(assert (=> b!80139 (= e!52320 call!7386)))

(declare-fun b!80140 () Bool)

(assert (=> b!80140 (= e!52321 (ite c!12523 (t!5132 (t!5132 (toList!729 lt!35804))) (ite c!12522 (Cons!1490 (h!2078 (t!5132 (toList!729 lt!35804))) (t!5132 (t!5132 (toList!729 lt!35804)))) Nil!1491)))))

(declare-fun d!19669 () Bool)

(declare-fun e!52319 () Bool)

(assert (=> d!19669 e!52319))

(declare-fun res!41789 () Bool)

(assert (=> d!19669 (=> (not res!41789) (not e!52319))))

(declare-fun lt!37171 () List!1494)

(assert (=> d!19669 (= res!41789 (isStrictlySorted!282 lt!37171))))

(assert (=> d!19669 (= lt!37171 e!52320)))

(declare-fun c!12525 () Bool)

(assert (=> d!19669 (= c!12525 (and ((_ is Cons!1490) (t!5132 (toList!729 lt!35804))) (bvslt (_1!1092 (h!2078 (t!5132 (toList!729 lt!35804)))) (_1!1092 lt!35792))))))

(assert (=> d!19669 (isStrictlySorted!282 (t!5132 (toList!729 lt!35804)))))

(assert (=> d!19669 (= (insertStrictlySorted!58 (t!5132 (toList!729 lt!35804)) (_1!1092 lt!35792) (_2!1092 lt!35792)) lt!37171)))

(declare-fun bm!7382 () Bool)

(assert (=> bm!7382 (= call!7387 call!7386)))

(declare-fun b!80141 () Bool)

(declare-fun res!41788 () Bool)

(assert (=> b!80141 (=> (not res!41788) (not e!52319))))

(assert (=> b!80141 (= res!41788 (containsKey!141 lt!37171 (_1!1092 lt!35792)))))

(declare-fun b!80142 () Bool)

(assert (=> b!80142 (= e!52322 call!7385)))

(declare-fun b!80143 () Bool)

(assert (=> b!80143 (= e!52319 (contains!737 lt!37171 (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792))))))

(declare-fun bm!7384 () Bool)

(assert (=> bm!7384 (= call!7386 ($colon$colon!68 e!52321 (ite c!12525 (h!2078 (t!5132 (toList!729 lt!35804))) (tuple2!2163 (_1!1092 lt!35792) (_2!1092 lt!35792)))))))

(declare-fun c!12524 () Bool)

(assert (=> bm!7384 (= c!12524 c!12525)))

(assert (= (and d!19669 c!12525) b!80139))

(assert (= (and d!19669 (not c!12525)) b!80134))

(assert (= (and b!80134 c!12523) b!80137))

(assert (= (and b!80134 (not c!12523)) b!80135))

(assert (= (and b!80135 c!12522) b!80142))

(assert (= (and b!80135 (not c!12522)) b!80136))

(assert (= (or b!80142 b!80136) bm!7383))

(assert (= (or b!80137 bm!7383) bm!7382))

(assert (= (or b!80139 bm!7382) bm!7384))

(assert (= (and bm!7384 c!12524) b!80138))

(assert (= (and bm!7384 (not c!12524)) b!80140))

(assert (= (and d!19669 res!41789) b!80141))

(assert (= (and b!80141 res!41788) b!80143))

(declare-fun m!81713 () Bool)

(assert (=> b!80143 m!81713))

(declare-fun m!81715 () Bool)

(assert (=> b!80138 m!81715))

(declare-fun m!81717 () Bool)

(assert (=> b!80141 m!81717))

(declare-fun m!81719 () Bool)

(assert (=> d!19669 m!81719))

(assert (=> d!19669 m!79537))

(declare-fun m!81721 () Bool)

(assert (=> bm!7384 m!81721))

(assert (=> b!78444 d!19669))

(declare-fun b!80144 () Bool)

(declare-fun e!52323 () Option!144)

(assert (=> b!80144 (= e!52323 (Some!143 (_2!1092 (h!2078 (toList!729 lt!36237)))))))

(declare-fun b!80145 () Bool)

(declare-fun e!52324 () Option!144)

(assert (=> b!80145 (= e!52323 e!52324)))

(declare-fun c!12527 () Bool)

(assert (=> b!80145 (= c!12527 (and ((_ is Cons!1490) (toList!729 lt!36237)) (not (= (_1!1092 (h!2078 (toList!729 lt!36237))) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))))

(declare-fun b!80147 () Bool)

(assert (=> b!80147 (= e!52324 None!142)))

(declare-fun b!80146 () Bool)

(assert (=> b!80146 (= e!52324 (getValueByKey!138 (t!5132 (toList!729 lt!36237)) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))))))

(declare-fun d!19671 () Bool)

(declare-fun c!12526 () Bool)

(assert (=> d!19671 (= c!12526 (and ((_ is Cons!1490) (toList!729 lt!36237)) (= (_1!1092 (h!2078 (toList!729 lt!36237))) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992))))))))))

(assert (=> d!19671 (= (getValueByKey!138 (toList!729 lt!36237) (_1!1092 (tuple2!2163 lt!36040 (zeroValue!2169 (v!2594 (underlying!280 thiss!992)))))) e!52323)))

(assert (= (and d!19671 c!12526) b!80144))

(assert (= (and d!19671 (not c!12526)) b!80145))

(assert (= (and b!80145 c!12527) b!80146))

(assert (= (and b!80145 (not c!12527)) b!80147))

(declare-fun m!81723 () Bool)

(assert (=> b!80146 m!81723))

(assert (=> b!78333 d!19671))

(declare-fun b!80148 () Bool)

(declare-fun e!52325 () Option!144)

(assert (=> b!80148 (= e!52325 (Some!143 (_2!1092 (h!2078 (t!5132 lt!35964)))))))

(declare-fun b!80149 () Bool)

(declare-fun e!52326 () Option!144)

(assert (=> b!80149 (= e!52325 e!52326)))

(declare-fun c!12529 () Bool)

(assert (=> b!80149 (= c!12529 (and ((_ is Cons!1490) (t!5132 lt!35964)) (not (= (_1!1092 (h!2078 (t!5132 lt!35964))) (_1!1092 lt!35806)))))))

(declare-fun b!80151 () Bool)

(assert (=> b!80151 (= e!52326 None!142)))

(declare-fun b!80150 () Bool)

(assert (=> b!80150 (= e!52326 (getValueByKey!138 (t!5132 (t!5132 lt!35964)) (_1!1092 lt!35806)))))

(declare-fun d!19673 () Bool)

(declare-fun c!12528 () Bool)

(assert (=> d!19673 (= c!12528 (and ((_ is Cons!1490) (t!5132 lt!35964)) (= (_1!1092 (h!2078 (t!5132 lt!35964))) (_1!1092 lt!35806))))))

(assert (=> d!19673 (= (getValueByKey!138 (t!5132 lt!35964) (_1!1092 lt!35806)) e!52325)))

(assert (= (and d!19673 c!12528) b!80148))

(assert (= (and d!19673 (not c!12528)) b!80149))

(assert (= (and b!80149 c!12529) b!80150))

(assert (= (and b!80149 (not c!12529)) b!80151))

(declare-fun m!81725 () Bool)

(assert (=> b!80150 m!81725))

(assert (=> b!78509 d!19673))

(declare-fun mapNonEmpty!3317 () Bool)

(declare-fun mapRes!3317 () Bool)

(declare-fun tp!8789 () Bool)

(declare-fun e!52327 () Bool)

(assert (=> mapNonEmpty!3317 (= mapRes!3317 (and tp!8789 e!52327))))

(declare-fun mapKey!3317 () (_ BitVec 32))

(declare-fun mapRest!3317 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapValue!3317 () ValueCell!911)

(assert (=> mapNonEmpty!3317 (= mapRest!3316 (store mapRest!3317 mapKey!3317 mapValue!3317))))

(declare-fun b!80152 () Bool)

(assert (=> b!80152 (= e!52327 tp_is_empty!2509)))

(declare-fun condMapEmpty!3317 () Bool)

(declare-fun mapDefault!3317 () ValueCell!911)

(assert (=> mapNonEmpty!3316 (= condMapEmpty!3317 (= mapRest!3316 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3317)))))

(declare-fun e!52328 () Bool)

(assert (=> mapNonEmpty!3316 (= tp!8788 (and e!52328 mapRes!3317))))

(declare-fun b!80153 () Bool)

(assert (=> b!80153 (= e!52328 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3317 () Bool)

(assert (=> mapIsEmpty!3317 mapRes!3317))

(assert (= (and mapNonEmpty!3316 condMapEmpty!3317) mapIsEmpty!3317))

(assert (= (and mapNonEmpty!3316 (not condMapEmpty!3317)) mapNonEmpty!3317))

(assert (= (and mapNonEmpty!3317 ((_ is ValueCellFull!911) mapValue!3317)) b!80152))

(assert (= (and mapNonEmpty!3316 ((_ is ValueCellFull!911) mapDefault!3317)) b!80153))

(declare-fun m!81727 () Bool)

(assert (=> mapNonEmpty!3317 m!81727))

(declare-fun mapNonEmpty!3318 () Bool)

(declare-fun mapRes!3318 () Bool)

(declare-fun tp!8790 () Bool)

(declare-fun e!52329 () Bool)

(assert (=> mapNonEmpty!3318 (= mapRes!3318 (and tp!8790 e!52329))))

(declare-fun mapRest!3318 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapValue!3318 () ValueCell!911)

(declare-fun mapKey!3318 () (_ BitVec 32))

(assert (=> mapNonEmpty!3318 (= mapRest!3315 (store mapRest!3318 mapKey!3318 mapValue!3318))))

(declare-fun b!80154 () Bool)

(assert (=> b!80154 (= e!52329 tp_is_empty!2509)))

(declare-fun condMapEmpty!3318 () Bool)

(declare-fun mapDefault!3318 () ValueCell!911)

(assert (=> mapNonEmpty!3315 (= condMapEmpty!3318 (= mapRest!3315 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3318)))))

(declare-fun e!52330 () Bool)

(assert (=> mapNonEmpty!3315 (= tp!8787 (and e!52330 mapRes!3318))))

(declare-fun b!80155 () Bool)

(assert (=> b!80155 (= e!52330 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3318 () Bool)

(assert (=> mapIsEmpty!3318 mapRes!3318))

(assert (= (and mapNonEmpty!3315 condMapEmpty!3318) mapIsEmpty!3318))

(assert (= (and mapNonEmpty!3315 (not condMapEmpty!3318)) mapNonEmpty!3318))

(assert (= (and mapNonEmpty!3318 ((_ is ValueCellFull!911) mapValue!3318)) b!80154))

(assert (= (and mapNonEmpty!3315 ((_ is ValueCellFull!911) mapDefault!3318)) b!80155))

(declare-fun m!81729 () Bool)

(assert (=> mapNonEmpty!3318 m!81729))

(declare-fun b_lambda!3563 () Bool)

(assert (= b_lambda!3555 (or (and b!77786 b_free!2185) (and b!77791 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))) b_lambda!3563)))

(declare-fun b_lambda!3565 () Bool)

(assert (= b_lambda!3561 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3565)))

(declare-fun b_lambda!3567 () Bool)

(assert (= b_lambda!3541 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3567)))

(declare-fun b_lambda!3569 () Bool)

(assert (= b_lambda!3547 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3569)))

(declare-fun b_lambda!3571 () Bool)

(assert (= b_lambda!3551 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3571)))

(declare-fun b_lambda!3573 () Bool)

(assert (= b_lambda!3533 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3573)))

(declare-fun b_lambda!3575 () Bool)

(assert (= b_lambda!3557 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3575)))

(declare-fun b_lambda!3577 () Bool)

(assert (= b_lambda!3545 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3577)))

(declare-fun b_lambda!3579 () Bool)

(assert (= b_lambda!3549 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3579)))

(declare-fun b_lambda!3581 () Bool)

(assert (= b_lambda!3535 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3581)))

(declare-fun b_lambda!3583 () Bool)

(assert (= b_lambda!3539 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3583)))

(declare-fun b_lambda!3585 () Bool)

(assert (= b_lambda!3553 (or (and b!77786 b_free!2185) (and b!77791 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))))) b_lambda!3585)))

(declare-fun b_lambda!3587 () Bool)

(assert (= b_lambda!3537 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3587)))

(declare-fun b_lambda!3589 () Bool)

(assert (= b_lambda!3543 (or (and b!77786 b_free!2185 (= (defaultEntry!2271 (v!2594 (underlying!280 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77791 b_free!2187) b_lambda!3589)))

(check-sat (not b!79878) (not b!79261) (not b!79689) (not d!19425) (not b!79533) (not b_lambda!3529) (not b!80000) (not bm!7356) (not b!79598) (not b!78857) (not b!79250) (not b!79814) (not b!79128) (not b!79794) (not b!79233) (not d!19659) (not d!19397) (not b!79272) (not d!18797) (not b!79108) (not b!78994) (not b!79711) (not d!18845) (not d!19495) (not bm!7367) (not d!19195) (not b!79768) (not b!79146) (not b!80098) (not b!78891) (not b!79165) (not b!80021) (not b!79418) (not b!79220) (not d!19605) (not b!79993) (not b!78943) (not b!80033) (not b!79864) (not bm!7377) (not d!19041) (not d!19333) (not b!79021) (not b!79572) (not d!19095) (not b!78960) (not d!19565) (not b!80017) (not b!79218) (not b!79855) (not b!78995) (not b!79200) (not b!79284) (not bm!7252) (not b!79623) (not d!19405) (not b!79838) (not b!80003) (not b!79031) (not b!79276) (not b!79514) (not d!18819) (not b!79662) (not b!79619) (not bm!7351) (not d!19359) (not b!79942) (not b!79522) (not d!19213) (not b!79042) (not b!79286) (not b!79334) (not b!79792) (not d!19669) (not d!18895) (not d!19159) (not b!79274) (not b!79278) (not b!79898) (not b!79091) (not b_lambda!3559) (not b!79926) (not bm!7341) (not b_lambda!3583) (not b!78863) (not b!79271) (not d!19557) (not b!79998) (not d!19013) (not b!79188) (not d!19453) (not b!79889) (not b!79305) (not b!79377) (not d!19231) (not d!19347) (not d!19627) (not b!79682) (not b!79059) (not b!79613) (not d!18863) (not d!19647) (not b!79328) (not d!19307) (not b!80056) (not b!78910) (not b_next!2185) (not d!19641) (not b!80123) (not d!18769) (not b!79951) (not bm!7257) (not b!80050) (not b!79511) (not b!79756) (not b!79070) (not d!19501) (not b!79214) (not b!79461) (not b!79050) (not d!19623) (not b!79393) (not b!79504) (not b!79203) (not bm!7264) (not b!79303) (not d!19365) (not bm!7307) (not bm!7321) (not bm!7335) (not b!79358) (not d!19633) (not b!79402) (not d!18835) (not bm!7279) (not b!79990) (not d!18903) (not b!78845) (not d!19087) (not b!79684) (not b!79655) (not b!79531) (not d!19305) (not b!79635) (not d!19037) (not b!78983) (not b!79198) (not b!79911) (not d!19599) (not b!78850) (not d!19163) (not b!78869) (not d!19079) (not d!19667) (not b!78787) (not b!80116) (not b_lambda!3567) (not b!79831) (not d!19131) (not b!78814) (not d!19251) (not b!79638) (not b_lambda!3569) (not d!19581) (not b!79865) (not bm!7276) (not b!79117) (not d!19187) (not b!79668) (not d!19387) (not b!78932) (not b!79706) (not b!79011) (not bm!7301) (not d!18761) (not b!80008) (not d!19105) (not b!79541) (not b!78831) (not b!78840) (not b!79982) (not bm!7305) (not d!19595) (not b!80035) (not b!79552) (not b!80120) (not b!79523) (not b!79539) (not b_lambda!3507) (not d!18959) (not b!79809) (not b!79134) (not bm!7331) (not b!79088) (not d!19413) (not b!78855) (not b!79487) (not b!79363) (not d!19343) (not b!79154) (not d!18843) (not bm!7240) (not b!80025) (not b!78820) (not b!78912) (not b!79177) (not b!78819) (not d!19299) (not b!80092) (not b!79474) (not b!80110) (not b!79780) (not d!19075) (not b!79323) (not b_lambda!3585) (not b!79078) (not bm!7320) (not b!79797) (not d!19151) (not b_lambda!3589) (not b!79219) (not b!78955) (not d!19445) (not b!79485) (not bm!7345) (not d!19395) (not b!78957) (not d!19169) (not b_lambda!3565) (not d!18951) (not b!79467) (not b!79158) (not bm!7272) (not d!18861) (not b!79827) (not b!79987) (not b!79900) (not d!19137) (not d!19229) (not b!79150) (not b!79500) (not d!19141) (not b!79361) (not b!79848) (not d!19577) (not d!19289) (not b!78802) (not b!79637) (not d!19119) (not b!79171) (not b!79893) (not b!78975) (not b!79321) (not b!79759) (not b!79255) (not b_lambda!3587) (not b_lambda!3577) (not bm!7302) (not d!19381) (not b!79751) (not b!79632) (not b!79227) (not d!19601) (not b!79205) (not d!19211) (not b!78785) (not b!79745) (not b!79371) (not b!79225) (not b!79425) (not d!18779) (not b!79520) (not d!19051) (not d!19123) (not d!19649) (not b!79337) (not b!78899) (not d!19519) (not b!79547) (not b!79174) (not d!18781) (not d!19061) (not bm!7265) (not bm!7285) (not d!19215) (not b!79373) (not b!80104) (not b!80046) (not b!79065) (not b!78871) (not b!79629) (not d!19377) (not b!78905) (not b!80086) (not b!78874) (not b!79118) (not b!78860) (not b!79280) (not b!79260) (not d!19621) (not b!79517) (not b!78915) (not b!79952) (not b!79692) (not b!79557) (not d!19287) (not b!80082) (not b!79068) (not d!18913) (not b!78795) b_and!4899 (not d!18873) (not b!79885) (not d!18893) (not d!19055) (not b!78962) (not bm!7292) (not b!80112) (not d!19363) (not b!78914) (not b!79398) (not b!79074) (not b!80109) (not bm!7288) (not d!19493) (not d!19223) (not d!19173) (not b!79191) (not b!79786) (not b!79671) (not d!18919) (not b!79175) (not b!80100) (not b!79072) (not b!79571) (not b!79648) (not d!19615) (not b!79967) (not b!79536) (not b!79937) (not b!79269) (not b!79713) (not bm!7327) (not b!79018) (not b!79964) (not b!79421) (not d!19171) (not b!79246) (not b!79765) (not b!79054) (not d!19225) (not b!79480) (not d!18937) (not b!79431) (not d!18901) (not bm!7315) (not b!79715) (not b_lambda!3523) (not d!18809) (not b!79364) (not b!79104) (not b_lambda!3581) (not bm!7364) (not b!79232) (not b_lambda!3579) (not d!18875) (not b!79413) (not d!19203) (not b!79965) (not d!19427) (not b!79254) (not b!79266) (not b!80133) (not d!19455) (not d!19199) (not b!79139) (not b!79761) (not b!80114) (not d!19025) (not b!80125) b_and!4897 (not bm!7251) (not b!78908) (not b!80075) (not d!19485) (not b!79489) (not b!79695) (not d!19089) (not d!19319) (not b!79288) (not b!79115) (not d!19149) (not b!79554) (not d!19269) (not d!19431) (not b!78856) (not d!19317) (not b!79049) (not d!19619) (not d!19201) (not b!79709) (not b_lambda!3527) (not d!18965) (not d!19167) (not b!79700) (not b!79034) (not b_lambda!3511) (not d!18777) (not b!79609) (not b!79121) (not b!79094) (not b!79216) (not d!19593) (not d!18963) (not b!79854) (not b!79569) (not b!80023) (not b_lambda!3571) (not b!79114) (not b!79241) (not b!79949) (not b!79491) (not d!18787) (not d!18999) (not d!19643) (not bm!7381) (not d!19465) (not d!19329) (not b!79821) (not b!80078) (not bm!7352) (not b!79961) (not d!18905) (not b!78804) (not b!79223) (not b!78825) (not b_lambda!3563) (not bm!7306) (not b!79576) (not b!79975) (not d!18775) (not d!18927) (not bm!7338) (not b!79905) (not b!80095) (not b!79388) (not b!80129) (not b!79333) (not b!79434) (not d!19031) (not d!19153) (not b!79399) (not b!79405) (not d!19483) (not b!79170) (not d!19459) (not b!79776) (not d!19625) (not b!79534) (not b!79344) (not b!79703) (not d!18973) (not b!79408) (not d!19505) (not d!18793) (not b!79561) (not d!18815) (not bm!7355) (not b!79316) (not b!79096) (not b_lambda!3573) (not bm!7293) (not b!80131) (not b!79606) (not d!19603) (not d!19433) (not b!79649) (not d!18811) (not d!19353) (not b!79947) (not d!19665) (not b_lambda!3575) (not d!19607) (not d!19617) (not d!19047) (not b!79342) (not b!79565) (not b!78968) (not d!18813) (not bm!7324) (not b!78945) (not b!79396) (not d!19631) (not d!18981) (not b!79903) (not b!79567) (not d!19383) (not d!19189) (not b!79924) (not b!79914) (not b!78889) (not b!78922) (not b!79870) (not b!78897) (not d!18979) (not d!19221) (not d!19233) (not b!79141) (not b!79784) (not b!79382) (not b!79833) (not bm!7361) (not d!18841) (not b!79842) (not d!18967) (not d!19331) (not b!79294) (not b!79211) (not d!18871) (not d!19339) (not b!79000) (not b!79665) (not b!79483) (not bm!7244) (not b!79101) (not d!19651) (not b!78992) (not b!78979) (not b!78989) (not d!19349) (not b!79627) (not b!79252) (not d!19257) (not b!79086) (not d!19111) (not b!79857) (not b!79800) (not d!19313) (not bm!7384) (not d!19367) (not b!79550) (not d!19547) (not d!19499) (not b!79387) (not b!78900) (not d!19535) (not bm!7241) (not d!19637) (not bm!7354) (not d!19531) (not b!79238) (not d!19175) (not d!19323) (not d!19517) (not bm!7248) (not b!80146) (not b!79137) (not b!79666) (not b!79738) (not b!79428) (not d!19143) (not d!19315) (not bm!7296) (not b!79803) (not b!79352) (not b!80005) (not bm!7259) (not d!19635) (not b!79466) (not b!79763) (not bm!7330) (not d!18857) (not b!79110) (not d!18899) (not b!79008) (not b!78824) (not b!80115) (not b!80102) (not b!78817) (not b!80038) (not b!79003) (not d!19057) (not d!18969) (not b!79928) (not d!19099) (not d!19127) (not b!80119) (not b!79625) (not d!19463) (not b!79823) (not d!19509) (not b!79379) (not d!19117) (not b!79109) (not b!80067) (not b!79038) (not d!18983) (not bm!7261) (not b!78828) (not b!79673) (not b!79697) (not b!78966) (not b!79193) (not b!80054) (not b!79329) (not b!79126) (not d!18961) (not b!80019) (not b!79883) (not b!79995) (not b!79380) (not b!79659) (not d!19653) (not b!78935) (not b!79300) (not d!19069) (not b!79718) (not b!78808) (not b!79327) (not b!80143) (not bm!7275) (not d!19023) (not b!79916) (not b!80099) (not b!78848) (not b!78812) (not bm!7346) (not b!79106) (not b!80089) (not d!18911) (not bm!7255) (not b!80097) (not d!19283) tp_is_empty!2509 (not d!19657) (not d!19507) (not b!79298) (not d!19091) (not b_lambda!3525) (not b!80029) (not b!79325) (not d!19529) (not b!80051) (not b!78936) (not b!78894) (not b!79375) (not b_lambda!3509) (not b!79750) (not b!79873) (not b_lambda!3499) (not b!78854) (not b!78937) (not b!79740) (not d!19045) (not b!79097) (not b!79839) (not d!18985) (not d!19181) (not b!79733) (not d!19583) (not b!80106) (not d!18977) (not d!19645) (not b!79060) (not b!79674) (not b!78800) (not d!18773) (not d!18763) (not b!79891) (not b!79542) (not d!18877) (not b!79605) (not bm!7376) (not b!79172) (not b!78892) (not b!80001) (not b!79249) (not b!79630) (not b!79464) (not b!79906) (not b!79844) (not d!18881) (not d!19241) (not b!79996) (not b!79494) (not b!79256) (not d!18839) (not b!79886) (not d!19407) (not b!79180) (not b!79742) (not b!79872) (not b!79887) (not d!19129) (not b!79472) (not d!19597) (not d!19481) (not b!80011) (not b!79423) (not b!79051) (not b!80141) (not b!79896) (not b!79409) (not b!79643) (not b!79801) (not d!19259) (not bm!7303) (not b!79160) (not b!80052) (not b!79646) (not b!79102) (not b!79858) (not b!78852) (not bm!7380) (not b!79103) (not b!79411) (not d!19029) (not b!79047) (not b!78917) (not b!79356) (not d!18991) (not d!19609) (not b!79004) (not b!80084) (not d!18943) (not b!79617) (not b!79258) (not d!19385) (not b!79095) (not d!19293) (not bm!7370) (not b!79929) (not bm!7332) (not b!80117) (not b!79098) (not b!78873) (not b!80048) (not bm!7289) (not d!19403) (not d!19491) (not d!19261) (not d!19183) (not d!19033) (not b!79515) (not b!79497) (not b!79026) (not b!79748) (not b!79862) (not b!79652) (not b!79129) (not d!18803) (not b!79945) (not b!78977) (not bm!7237) (not bm!7298) (not b!78875) (not b_lambda!3531) (not b!79099) (not b!79806) (not bm!7256) (not b!79313) (not b!79507) (not b!79052) (not b!79306) (not d!19291) (not b!79851) (not b!79436) (not b!79573) (not d!19355) (not b!79163) (not b!80060) (not b!79025) (not b!78835) (not b!79819) (not d!19639) (not b!79867) (not b!80150) (not bm!7247) (not b!79057) (not b!79931) (not d!19345) (not bm!7374) (not b!79013) (not b!80069) (not b!79977) (not b!79283) (not b!79346) (not d!19629) (not b!78878) (not b!79183) (not d!18989) (not b!79789) (not d!19217) (not b!79992) (not b!79029) (not b!78973) (not b!79774) (not b!80121) (not d!19521) (not b!78887) (not b!79972) (not bm!7375) (not d!19073) (not b!78951) (not b!79980) (not b!78938) (not b!79045) (not b!80044) (not b!79984) (not b!79318) (not b!79512) (not b!79143) (not b_next!2187) (not d!19017) (not d!19083) (not b!80080) (not b!79612) (not d!19525) (not b!79469) (not d!18869) (not b!80093) (not d!18907) (not d!19139) (not d!18975) (not b!79243) (not b!79503) (not d!19611) (not d!19451) (not bm!7282) (not b!79892) (not d!18829) (not b!80070) (not b!78971) (not b!79310) (not b!79966) (not b!79881) (not d!19019) (not b!79679) (not b!78789) (not d!19497) (not b!79791) (not b!80042) (not d!19133) (not d!19389) (not b!79841) (not d!19185) (not b!79846) (not b!78933) (not d!18971) (not b!80094) (not b!80015) (not b!79168) (not d!18987) (not b!80127) (not b!79614) (not mapNonEmpty!3318) (not b!79368) (not d!19411) (not b!80138) (not b!79698) (not b!80031) (not b!79808) (not d!18995) (not bm!7250) (not b!78866) (not d!19479) (not mapNonEmpty!3317) (not b!78987) (not d!19449) (not b!79528) (not d!18889) (not bm!7271) (not b!79290) (not b!79083) (not b!78796) (not b!79772) (not b!79023) (not bm!7294) (not b!80062) (not b!79936) (not bm!7260) (not b!79196) (not b!78798) (not b!79123) (not b!79282) (not b!78849) (not b!79860) (not b!79348) (not d!18879) (not b!78967) (not b!79743) (not b!78885) (not d!18997) (not d!19613) (not d!19107) (not d!19311) (not d!19549) (not d!19369) (not b!79978) (not bm!7371) (not d!19297) (not b!79277) (not d!19421) (not b!79112) (not d!18783) (not b!79953) (not b!80055) (not d!19085) (not b!80040) (not bm!7268) (not b!79934) (not b!79817) (not d!19253) (not b!79475) (not b!78822) (not b!79770) (not b!79331) (not b!79921) (not b!79157) (not d!19375) (not b!78947) (not b!79957) (not b!79206) (not b!80064) (not b!79656) (not bm!7297) (not d!18941) (not b!79230) (not b!79463) (not b!79340) (not bm!7312) (not d!19439) (not bm!7342) (not b!80047) (not d!19409) (not b!80108) (not d!19155) (not b!78963) (not d!19209) (not b!79385) (not b!78847) (not b!79406) (not b!78940) (not d!19177) (not b!80013) (not b!79182) (not b!78823) (not bm!7344) (not d!19245) (not b!79836) (not b!79621) (not b!79708) (not b!79563) (not d!18933) (not b!80105) (not d!18917) (not bm!7239) (not b!79509))
(check-sat b_and!4897 b_and!4899 (not b_next!2185) (not b_next!2187))
