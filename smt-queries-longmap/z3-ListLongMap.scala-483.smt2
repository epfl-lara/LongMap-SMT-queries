; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10186 () Bool)

(assert start!10186)

(declare-fun b!77851 () Bool)

(declare-fun b_free!2189 () Bool)

(declare-fun b_next!2189 () Bool)

(assert (=> b!77851 (= b_free!2189 (not b_next!2189))))

(declare-fun tp!8769 () Bool)

(declare-fun b_and!4791 () Bool)

(assert (=> b!77851 (= tp!8769 b_and!4791)))

(declare-fun b!77848 () Bool)

(declare-fun b_free!2191 () Bool)

(declare-fun b_next!2191 () Bool)

(assert (=> b!77848 (= b_free!2191 (not b_next!2191))))

(declare-fun tp!8767 () Bool)

(declare-fun b_and!4793 () Bool)

(assert (=> b!77848 (= tp!8767 b_and!4793)))

(declare-fun b!77844 () Bool)

(declare-fun res!40826 () Bool)

(declare-fun e!50920 () Bool)

(assert (=> b!77844 (=> (not res!40826) (not e!50920))))

(declare-datatypes ((V!2995 0))(
  ( (V!2996 (val!1300 Int)) )
))
(declare-datatypes ((array!3975 0))(
  ( (array!3976 (arr!1895 (Array (_ BitVec 32) (_ BitVec 64))) (size!2136 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!912 0))(
  ( (ValueCellFull!912 (v!2591 V!2995)) (EmptyCell!912) )
))
(declare-datatypes ((array!3977 0))(
  ( (array!3978 (arr!1896 (Array (_ BitVec 32) ValueCell!912)) (size!2137 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!732 0))(
  ( (LongMapFixedSize!733 (defaultEntry!2272 Int) (mask!6268 (_ BitVec 32)) (extraKeys!2123 (_ BitVec 32)) (zeroValue!2170 V!2995) (minValue!2170 V!2995) (_size!415 (_ BitVec 32)) (_keys!3932 array!3975) (_values!2255 array!3977) (_vacant!415 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!732)

(declare-datatypes ((Cell!534 0))(
  ( (Cell!535 (v!2592 LongMapFixedSize!732)) )
))
(declare-datatypes ((LongMap!534 0))(
  ( (LongMap!535 (underlying!278 Cell!534)) )
))
(declare-fun thiss!992 () LongMap!534)

(assert (=> b!77844 (= res!40826 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6268 newMap!16)) (_size!415 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun res!40828 () Bool)

(assert (=> start!10186 (=> (not res!40828) (not e!50920))))

(declare-fun valid!312 (LongMap!534) Bool)

(assert (=> start!10186 (= res!40828 (valid!312 thiss!992))))

(assert (=> start!10186 e!50920))

(declare-fun e!50913 () Bool)

(assert (=> start!10186 e!50913))

(assert (=> start!10186 true))

(declare-fun e!50917 () Bool)

(assert (=> start!10186 e!50917))

(declare-fun b!77845 () Bool)

(declare-fun e!50924 () Bool)

(assert (=> b!77845 (= e!50920 e!50924)))

(declare-fun res!40822 () Bool)

(assert (=> b!77845 (=> (not res!40822) (not e!50924))))

(declare-datatypes ((tuple2!2172 0))(
  ( (tuple2!2173 (_1!1097 (_ BitVec 64)) (_2!1097 V!2995)) )
))
(declare-datatypes ((List!1507 0))(
  ( (Nil!1504) (Cons!1503 (h!2091 tuple2!2172) (t!5153 List!1507)) )
))
(declare-datatypes ((ListLongMap!1447 0))(
  ( (ListLongMap!1448 (toList!739 List!1507)) )
))
(declare-fun lt!35857 () ListLongMap!1447)

(declare-fun lt!35860 () ListLongMap!1447)

(assert (=> b!77845 (= res!40822 (= lt!35857 lt!35860))))

(declare-fun map!1174 (LongMapFixedSize!732) ListLongMap!1447)

(assert (=> b!77845 (= lt!35860 (map!1174 newMap!16))))

(declare-fun from!355 () (_ BitVec 32))

(declare-fun getCurrentListMap!433 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) Int) ListLongMap!1447)

(assert (=> b!77845 (= lt!35857 (getCurrentListMap!433 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun b!77846 () Bool)

(declare-datatypes ((Unit!2257 0))(
  ( (Unit!2258) )
))
(declare-fun e!50926 () Unit!2257)

(declare-fun Unit!2259 () Unit!2257)

(assert (=> b!77846 (= e!50926 Unit!2259)))

(declare-fun b!77847 () Bool)

(declare-fun e!50916 () Bool)

(assert (=> b!77847 (= e!50916 (= (size!2137 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6268 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun tp_is_empty!2511 () Bool)

(declare-fun e!50927 () Bool)

(declare-fun array_inv!1171 (array!3975) Bool)

(declare-fun array_inv!1172 (array!3977) Bool)

(assert (=> b!77848 (= e!50917 (and tp!8767 tp_is_empty!2511 (array_inv!1171 (_keys!3932 newMap!16)) (array_inv!1172 (_values!2255 newMap!16)) e!50927))))

(declare-fun mapNonEmpty!3303 () Bool)

(declare-fun mapRes!3304 () Bool)

(declare-fun tp!8770 () Bool)

(declare-fun e!50911 () Bool)

(assert (=> mapNonEmpty!3303 (= mapRes!3304 (and tp!8770 e!50911))))

(declare-fun mapKey!3304 () (_ BitVec 32))

(declare-fun mapValue!3304 () ValueCell!912)

(declare-fun mapRest!3303 () (Array (_ BitVec 32) ValueCell!912))

(assert (=> mapNonEmpty!3303 (= (arr!1896 (_values!2255 newMap!16)) (store mapRest!3303 mapKey!3304 mapValue!3304))))

(declare-fun b!77849 () Bool)

(declare-fun e!50921 () Bool)

(assert (=> b!77849 (= e!50921 tp_is_empty!2511)))

(declare-fun b!77850 () Bool)

(declare-fun res!40821 () Bool)

(assert (=> b!77850 (=> (not res!40821) (not e!50920))))

(assert (=> b!77850 (= res!40821 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!50915 () Bool)

(declare-fun e!50914 () Bool)

(assert (=> b!77851 (= e!50914 (and tp!8769 tp_is_empty!2511 (array_inv!1171 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (array_inv!1172 (_values!2255 (v!2592 (underlying!278 thiss!992)))) e!50915))))

(declare-fun b!77852 () Bool)

(declare-fun e!50925 () Bool)

(assert (=> b!77852 (= e!50913 e!50925)))

(declare-fun b!77853 () Bool)

(declare-fun e!50923 () Bool)

(declare-fun e!50919 () Bool)

(assert (=> b!77853 (= e!50923 e!50919)))

(declare-fun res!40827 () Bool)

(assert (=> b!77853 (=> (not res!40827) (not e!50919))))

(declare-datatypes ((tuple2!2174 0))(
  ( (tuple2!2175 (_1!1098 Bool) (_2!1098 LongMapFixedSize!732)) )
))
(declare-fun lt!35862 () tuple2!2174)

(assert (=> b!77853 (= res!40827 (and (_1!1098 lt!35862) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!35859 () Unit!2257)

(assert (=> b!77853 (= lt!35859 e!50926)))

(declare-fun c!11892 () Bool)

(declare-fun contains!742 (ListLongMap!1447 (_ BitVec 64)) Bool)

(assert (=> b!77853 (= c!11892 (contains!742 lt!35860 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun lt!35856 () V!2995)

(declare-fun update!107 (LongMapFixedSize!732 (_ BitVec 64) V!2995) tuple2!2174)

(assert (=> b!77853 (= lt!35862 (update!107 newMap!16 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))

(declare-fun b!77854 () Bool)

(declare-fun e!50918 () Bool)

(assert (=> b!77854 (= e!50918 tp_is_empty!2511)))

(declare-fun b!77855 () Bool)

(declare-fun res!40824 () Bool)

(assert (=> b!77855 (=> (not res!40824) (not e!50920))))

(declare-fun valid!313 (LongMapFixedSize!732) Bool)

(assert (=> b!77855 (= res!40824 (valid!313 newMap!16))))

(declare-fun mapNonEmpty!3304 () Bool)

(declare-fun mapRes!3303 () Bool)

(declare-fun tp!8768 () Bool)

(declare-fun e!50912 () Bool)

(assert (=> mapNonEmpty!3304 (= mapRes!3303 (and tp!8768 e!50912))))

(declare-fun mapValue!3303 () ValueCell!912)

(declare-fun mapRest!3304 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapKey!3303 () (_ BitVec 32))

(assert (=> mapNonEmpty!3304 (= (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (store mapRest!3304 mapKey!3303 mapValue!3303))))

(declare-fun b!77856 () Bool)

(declare-fun Unit!2260 () Unit!2257)

(assert (=> b!77856 (= e!50926 Unit!2260)))

(declare-fun lt!35863 () Unit!2257)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!62 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) (_ BitVec 32) Int) Unit!2257)

(assert (=> b!77856 (= lt!35863 (lemmaListMapContainsThenArrayContainsFrom!62 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3975 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!77856 (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!35866 () Unit!2257)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3975 (_ BitVec 32) (_ BitVec 32)) Unit!2257)

(assert (=> b!77856 (= lt!35866 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1508 0))(
  ( (Nil!1505) (Cons!1504 (h!2092 (_ BitVec 64)) (t!5154 List!1508)) )
))
(declare-fun arrayNoDuplicates!0 (array!3975 (_ BitVec 32) List!1508) Bool)

(assert (=> b!77856 (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) from!355 Nil!1505)))

(declare-fun lt!35854 () Unit!2257)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3975 (_ BitVec 32) (_ BitVec 64) List!1508) Unit!2257)

(assert (=> b!77856 (= lt!35854 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505)))))

(assert (=> b!77856 false))

(declare-fun b!77857 () Bool)

(assert (=> b!77857 (= e!50912 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3303 () Bool)

(assert (=> mapIsEmpty!3303 mapRes!3304))

(declare-fun b!77858 () Bool)

(assert (=> b!77858 (= e!50925 e!50914)))

(declare-fun mapIsEmpty!3304 () Bool)

(assert (=> mapIsEmpty!3304 mapRes!3303))

(declare-fun b!77859 () Bool)

(assert (=> b!77859 (= e!50924 e!50923)))

(declare-fun res!40825 () Bool)

(assert (=> b!77859 (=> (not res!40825) (not e!50923))))

(assert (=> b!77859 (= res!40825 (and (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1173 (ValueCell!912 V!2995) V!2995)

(declare-fun dynLambda!336 (Int (_ BitVec 64)) V!2995)

(assert (=> b!77859 (= lt!35856 (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) from!355) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!77860 () Bool)

(assert (=> b!77860 (= e!50915 (and e!50921 mapRes!3303))))

(declare-fun condMapEmpty!3303 () Bool)

(declare-fun mapDefault!3304 () ValueCell!912)

(assert (=> b!77860 (= condMapEmpty!3303 (= (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3304)))))

(declare-fun b!77861 () Bool)

(assert (=> b!77861 (= e!50927 (and e!50918 mapRes!3304))))

(declare-fun condMapEmpty!3304 () Bool)

(declare-fun mapDefault!3303 () ValueCell!912)

(assert (=> b!77861 (= condMapEmpty!3304 (= (arr!1896 (_values!2255 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3303)))))

(declare-fun b!77862 () Bool)

(assert (=> b!77862 (= e!50911 tp_is_empty!2511)))

(declare-fun b!77863 () Bool)

(assert (=> b!77863 (= e!50919 (not e!50916))))

(declare-fun res!40823 () Bool)

(assert (=> b!77863 (=> res!40823 e!50916)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!77863 (= res!40823 (not (validMask!0 (mask!6268 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun lt!35864 () tuple2!2172)

(declare-fun lt!35853 () ListLongMap!1447)

(declare-fun lt!35869 () ListLongMap!1447)

(declare-fun lt!35870 () tuple2!2172)

(declare-fun +!105 (ListLongMap!1447 tuple2!2172) ListLongMap!1447)

(assert (=> b!77863 (= (+!105 lt!35853 lt!35870) (+!105 (+!105 lt!35869 lt!35870) lt!35864))))

(assert (=> b!77863 (= lt!35870 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun lt!35867 () Unit!2257)

(declare-fun addCommutativeForDiffKeys!24 (ListLongMap!1447 (_ BitVec 64) V!2995 (_ BitVec 64) V!2995) Unit!2257)

(assert (=> b!77863 (= lt!35867 (addCommutativeForDiffKeys!24 lt!35869 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun lt!35858 () ListLongMap!1447)

(assert (=> b!77863 (= lt!35858 lt!35853)))

(assert (=> b!77863 (= lt!35853 (+!105 lt!35869 lt!35864))))

(declare-fun lt!35865 () ListLongMap!1447)

(declare-fun lt!35861 () tuple2!2172)

(assert (=> b!77863 (= lt!35858 (+!105 lt!35865 lt!35861))))

(declare-fun lt!35868 () ListLongMap!1447)

(assert (=> b!77863 (= lt!35869 (+!105 lt!35868 lt!35861))))

(assert (=> b!77863 (= lt!35861 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))

(assert (=> b!77863 (= lt!35865 (+!105 lt!35868 lt!35864))))

(assert (=> b!77863 (= lt!35864 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))

(declare-fun lt!35855 () Unit!2257)

(assert (=> b!77863 (= lt!35855 (addCommutativeForDiffKeys!24 lt!35868 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!70 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) Int) ListLongMap!1447)

(assert (=> b!77863 (= lt!35868 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(assert (= (and start!10186 res!40828) b!77850))

(assert (= (and b!77850 res!40821) b!77855))

(assert (= (and b!77855 res!40824) b!77844))

(assert (= (and b!77844 res!40826) b!77845))

(assert (= (and b!77845 res!40822) b!77859))

(assert (= (and b!77859 res!40825) b!77853))

(assert (= (and b!77853 c!11892) b!77856))

(assert (= (and b!77853 (not c!11892)) b!77846))

(assert (= (and b!77853 res!40827) b!77863))

(assert (= (and b!77863 (not res!40823)) b!77847))

(assert (= (and b!77860 condMapEmpty!3303) mapIsEmpty!3304))

(assert (= (and b!77860 (not condMapEmpty!3303)) mapNonEmpty!3304))

(get-info :version)

(assert (= (and mapNonEmpty!3304 ((_ is ValueCellFull!912) mapValue!3303)) b!77857))

(assert (= (and b!77860 ((_ is ValueCellFull!912) mapDefault!3304)) b!77849))

(assert (= b!77851 b!77860))

(assert (= b!77858 b!77851))

(assert (= b!77852 b!77858))

(assert (= start!10186 b!77852))

(assert (= (and b!77861 condMapEmpty!3304) mapIsEmpty!3303))

(assert (= (and b!77861 (not condMapEmpty!3304)) mapNonEmpty!3303))

(assert (= (and mapNonEmpty!3303 ((_ is ValueCellFull!912) mapValue!3304)) b!77862))

(assert (= (and b!77861 ((_ is ValueCellFull!912) mapDefault!3303)) b!77854))

(assert (= b!77848 b!77861))

(assert (= start!10186 b!77848))

(declare-fun b_lambda!3489 () Bool)

(assert (=> (not b_lambda!3489) (not b!77859)))

(declare-fun t!5150 () Bool)

(declare-fun tb!1617 () Bool)

(assert (=> (and b!77851 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))) t!5150) tb!1617))

(declare-fun result!2811 () Bool)

(assert (=> tb!1617 (= result!2811 tp_is_empty!2511)))

(assert (=> b!77859 t!5150))

(declare-fun b_and!4795 () Bool)

(assert (= b_and!4791 (and (=> t!5150 result!2811) b_and!4795)))

(declare-fun tb!1619 () Bool)

(declare-fun t!5152 () Bool)

(assert (=> (and b!77848 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))) t!5152) tb!1619))

(declare-fun result!2815 () Bool)

(assert (= result!2815 result!2811))

(assert (=> b!77859 t!5152))

(declare-fun b_and!4797 () Bool)

(assert (= b_and!4793 (and (=> t!5152 result!2815) b_and!4797)))

(declare-fun m!77959 () Bool)

(assert (=> b!77855 m!77959))

(declare-fun m!77961 () Bool)

(assert (=> b!77856 m!77961))

(declare-fun m!77963 () Bool)

(assert (=> b!77856 m!77963))

(declare-fun m!77965 () Bool)

(assert (=> b!77856 m!77965))

(declare-fun m!77967 () Bool)

(assert (=> b!77856 m!77967))

(assert (=> b!77856 m!77965))

(assert (=> b!77856 m!77965))

(declare-fun m!77969 () Bool)

(assert (=> b!77856 m!77969))

(assert (=> b!77856 m!77965))

(declare-fun m!77971 () Bool)

(assert (=> b!77856 m!77971))

(declare-fun m!77973 () Bool)

(assert (=> b!77863 m!77973))

(declare-fun m!77975 () Bool)

(assert (=> b!77863 m!77975))

(assert (=> b!77863 m!77965))

(declare-fun m!77977 () Bool)

(assert (=> b!77863 m!77977))

(declare-fun m!77979 () Bool)

(assert (=> b!77863 m!77979))

(declare-fun m!77981 () Bool)

(assert (=> b!77863 m!77981))

(assert (=> b!77863 m!77965))

(assert (=> b!77863 m!77973))

(declare-fun m!77983 () Bool)

(assert (=> b!77863 m!77983))

(declare-fun m!77985 () Bool)

(assert (=> b!77863 m!77985))

(declare-fun m!77987 () Bool)

(assert (=> b!77863 m!77987))

(assert (=> b!77863 m!77965))

(declare-fun m!77989 () Bool)

(assert (=> b!77863 m!77989))

(declare-fun m!77991 () Bool)

(assert (=> b!77863 m!77991))

(declare-fun m!77993 () Bool)

(assert (=> b!77863 m!77993))

(declare-fun m!77995 () Bool)

(assert (=> b!77851 m!77995))

(declare-fun m!77997 () Bool)

(assert (=> b!77851 m!77997))

(assert (=> b!77859 m!77965))

(declare-fun m!77999 () Bool)

(assert (=> b!77859 m!77999))

(declare-fun m!78001 () Bool)

(assert (=> b!77859 m!78001))

(assert (=> b!77859 m!77999))

(assert (=> b!77859 m!78001))

(declare-fun m!78003 () Bool)

(assert (=> b!77859 m!78003))

(declare-fun m!78005 () Bool)

(assert (=> mapNonEmpty!3304 m!78005))

(assert (=> b!77853 m!77965))

(assert (=> b!77853 m!77965))

(declare-fun m!78007 () Bool)

(assert (=> b!77853 m!78007))

(assert (=> b!77853 m!77965))

(declare-fun m!78009 () Bool)

(assert (=> b!77853 m!78009))

(declare-fun m!78011 () Bool)

(assert (=> mapNonEmpty!3303 m!78011))

(declare-fun m!78013 () Bool)

(assert (=> start!10186 m!78013))

(declare-fun m!78015 () Bool)

(assert (=> b!77845 m!78015))

(declare-fun m!78017 () Bool)

(assert (=> b!77845 m!78017))

(declare-fun m!78019 () Bool)

(assert (=> b!77848 m!78019))

(declare-fun m!78021 () Bool)

(assert (=> b!77848 m!78021))

(check-sat (not b!77851) b_and!4797 (not b_lambda!3489) tp_is_empty!2511 (not start!10186) b_and!4795 (not b!77859) (not b!77855) (not mapNonEmpty!3304) (not mapNonEmpty!3303) (not b!77863) (not b!77853) (not b!77845) (not b!77856) (not b!77848) (not b_next!2189) (not b_next!2191))
(check-sat b_and!4795 b_and!4797 (not b_next!2189) (not b_next!2191))
(get-model)

(declare-fun b_lambda!3493 () Bool)

(assert (= b_lambda!3489 (or (and b!77851 b_free!2189) (and b!77848 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))) b_lambda!3493)))

(check-sat (not b!77851) b_and!4797 tp_is_empty!2511 (not start!10186) b_and!4795 (not b!77859) (not b!77855) (not b_lambda!3493) (not mapNonEmpty!3304) (not mapNonEmpty!3303) (not b!77863) (not b!77853) (not b!77845) (not b!77856) (not b!77848) (not b_next!2189) (not b_next!2191))
(check-sat b_and!4795 b_and!4797 (not b_next!2189) (not b_next!2191))
(get-model)

(declare-fun d!18425 () Bool)

(assert (=> d!18425 (= (map!1174 newMap!16) (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun bs!3304 () Bool)

(assert (= bs!3304 d!18425))

(declare-fun m!78087 () Bool)

(assert (=> bs!3304 m!78087))

(assert (=> b!77845 d!18425))

(declare-fun bm!7097 () Bool)

(declare-fun c!11909 () Bool)

(declare-fun call!7104 () ListLongMap!1447)

(declare-fun c!11913 () Bool)

(declare-fun call!7105 () ListLongMap!1447)

(declare-fun call!7100 () ListLongMap!1447)

(declare-fun call!7106 () ListLongMap!1447)

(assert (=> bm!7097 (= call!7106 (+!105 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105)) (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!77970 () Bool)

(declare-fun e!51016 () Bool)

(declare-fun lt!35983 () ListLongMap!1447)

(declare-fun apply!79 (ListLongMap!1447 (_ BitVec 64)) V!2995)

(assert (=> b!77970 (= e!51016 (= (apply!79 lt!35983 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun b!77971 () Bool)

(declare-fun e!51019 () ListLongMap!1447)

(assert (=> b!77971 (= e!51019 call!7105)))

(declare-fun b!77972 () Bool)

(declare-fun e!51009 () ListLongMap!1447)

(declare-fun call!7103 () ListLongMap!1447)

(assert (=> b!77972 (= e!51009 call!7103)))

(declare-fun b!77973 () Bool)

(declare-fun c!11910 () Bool)

(assert (=> b!77973 (= c!11910 (and (not (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!77973 (= e!51009 e!51019)))

(declare-fun b!77974 () Bool)

(declare-fun e!51014 () Bool)

(declare-fun call!7101 () Bool)

(assert (=> b!77974 (= e!51014 (not call!7101))))

(declare-fun b!77975 () Bool)

(declare-fun e!51013 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!77975 (= e!51013 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!7099 () Bool)

(assert (=> bm!7099 (= call!7105 call!7100)))

(declare-fun b!77976 () Bool)

(declare-fun e!51012 () Bool)

(declare-fun call!7102 () Bool)

(assert (=> b!77976 (= e!51012 (not call!7102))))

(declare-fun b!77977 () Bool)

(declare-fun e!51011 () Bool)

(assert (=> b!77977 (= e!51011 e!51014)))

(declare-fun c!11911 () Bool)

(assert (=> b!77977 (= c!11911 (not (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7100 () Bool)

(assert (=> bm!7100 (= call!7102 (contains!742 lt!35983 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7101 () Bool)

(assert (=> bm!7101 (= call!7104 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun b!77978 () Bool)

(assert (=> b!77978 (= e!51019 call!7103)))

(declare-fun b!77979 () Bool)

(declare-fun e!51015 () ListLongMap!1447)

(assert (=> b!77979 (= e!51015 e!51009)))

(assert (=> b!77979 (= c!11913 (and (not (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7102 () Bool)

(assert (=> bm!7102 (= call!7103 call!7106)))

(declare-fun b!77980 () Bool)

(declare-fun res!40876 () Bool)

(assert (=> b!77980 (=> (not res!40876) (not e!51011))))

(assert (=> b!77980 (= res!40876 e!51012)))

(declare-fun c!11912 () Bool)

(assert (=> b!77980 (= c!11912 (not (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!77981 () Bool)

(declare-fun e!51017 () Unit!2257)

(declare-fun Unit!2261 () Unit!2257)

(assert (=> b!77981 (= e!51017 Unit!2261)))

(declare-fun b!77982 () Bool)

(declare-fun e!51010 () Bool)

(assert (=> b!77982 (= e!51012 e!51010)))

(declare-fun res!40873 () Bool)

(assert (=> b!77982 (= res!40873 call!7102)))

(assert (=> b!77982 (=> (not res!40873) (not e!51010))))

(declare-fun b!77983 () Bool)

(assert (=> b!77983 (= e!51014 e!51016)))

(declare-fun res!40875 () Bool)

(assert (=> b!77983 (= res!40875 call!7101)))

(assert (=> b!77983 (=> (not res!40875) (not e!51016))))

(declare-fun b!77984 () Bool)

(declare-fun e!51020 () Bool)

(assert (=> b!77984 (= e!51020 (= (apply!79 lt!35983 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!77984 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2137 (_values!2255 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> b!77984 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun d!18427 () Bool)

(assert (=> d!18427 e!51011))

(declare-fun res!40877 () Bool)

(assert (=> d!18427 (=> (not res!40877) (not e!51011))))

(assert (=> d!18427 (= res!40877 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun lt!35973 () ListLongMap!1447)

(assert (=> d!18427 (= lt!35983 lt!35973)))

(declare-fun lt!35990 () Unit!2257)

(assert (=> d!18427 (= lt!35990 e!51017)))

(declare-fun c!11908 () Bool)

(assert (=> d!18427 (= c!11908 e!51013)))

(declare-fun res!40872 () Bool)

(assert (=> d!18427 (=> (not res!40872) (not e!51013))))

(assert (=> d!18427 (= res!40872 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!18427 (= lt!35973 e!51015)))

(assert (=> d!18427 (= c!11909 (and (not (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18427 (validMask!0 (mask!6268 (v!2592 (underlying!278 thiss!992))))))

(assert (=> d!18427 (= (getCurrentListMap!433 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))) lt!35983)))

(declare-fun bm!7098 () Bool)

(assert (=> bm!7098 (= call!7101 (contains!742 lt!35983 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7103 () Bool)

(assert (=> bm!7103 (= call!7100 call!7104)))

(declare-fun b!77985 () Bool)

(declare-fun lt!35972 () Unit!2257)

(assert (=> b!77985 (= e!51017 lt!35972)))

(declare-fun lt!35978 () ListLongMap!1447)

(assert (=> b!77985 (= lt!35978 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun lt!35971 () (_ BitVec 64))

(assert (=> b!77985 (= lt!35971 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35980 () (_ BitVec 64))

(assert (=> b!77985 (= lt!35980 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35985 () Unit!2257)

(declare-fun addStillContains!55 (ListLongMap!1447 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2257)

(assert (=> b!77985 (= lt!35985 (addStillContains!55 lt!35978 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35980))))

(assert (=> b!77985 (contains!742 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35980)))

(declare-fun lt!35979 () Unit!2257)

(assert (=> b!77985 (= lt!35979 lt!35985)))

(declare-fun lt!35970 () ListLongMap!1447)

(assert (=> b!77985 (= lt!35970 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun lt!35974 () (_ BitVec 64))

(assert (=> b!77985 (= lt!35974 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35976 () (_ BitVec 64))

(assert (=> b!77985 (= lt!35976 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35975 () Unit!2257)

(declare-fun addApplyDifferent!55 (ListLongMap!1447 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2257)

(assert (=> b!77985 (= lt!35975 (addApplyDifferent!55 lt!35970 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35976))))

(assert (=> b!77985 (= (apply!79 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35976) (apply!79 lt!35970 lt!35976))))

(declare-fun lt!35969 () Unit!2257)

(assert (=> b!77985 (= lt!35969 lt!35975)))

(declare-fun lt!35987 () ListLongMap!1447)

(assert (=> b!77985 (= lt!35987 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun lt!35986 () (_ BitVec 64))

(assert (=> b!77985 (= lt!35986 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35988 () (_ BitVec 64))

(assert (=> b!77985 (= lt!35988 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35977 () Unit!2257)

(assert (=> b!77985 (= lt!35977 (addApplyDifferent!55 lt!35987 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35988))))

(assert (=> b!77985 (= (apply!79 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35988) (apply!79 lt!35987 lt!35988))))

(declare-fun lt!35981 () Unit!2257)

(assert (=> b!77985 (= lt!35981 lt!35977)))

(declare-fun lt!35984 () ListLongMap!1447)

(assert (=> b!77985 (= lt!35984 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun lt!35989 () (_ BitVec 64))

(assert (=> b!77985 (= lt!35989 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35982 () (_ BitVec 64))

(assert (=> b!77985 (= lt!35982 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!77985 (= lt!35972 (addApplyDifferent!55 lt!35984 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35982))))

(assert (=> b!77985 (= (apply!79 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35982) (apply!79 lt!35984 lt!35982))))

(declare-fun b!77986 () Bool)

(declare-fun res!40879 () Bool)

(assert (=> b!77986 (=> (not res!40879) (not e!51011))))

(declare-fun e!51008 () Bool)

(assert (=> b!77986 (= res!40879 e!51008)))

(declare-fun res!40874 () Bool)

(assert (=> b!77986 (=> res!40874 e!51008)))

(declare-fun e!51018 () Bool)

(assert (=> b!77986 (= res!40874 (not e!51018))))

(declare-fun res!40871 () Bool)

(assert (=> b!77986 (=> (not res!40871) (not e!51018))))

(assert (=> b!77986 (= res!40871 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!77987 () Bool)

(assert (=> b!77987 (= e!51008 e!51020)))

(declare-fun res!40878 () Bool)

(assert (=> b!77987 (=> (not res!40878) (not e!51020))))

(assert (=> b!77987 (= res!40878 (contains!742 lt!35983 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!77987 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!77988 () Bool)

(assert (=> b!77988 (= e!51010 (= (apply!79 lt!35983 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun b!77989 () Bool)

(assert (=> b!77989 (= e!51018 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!77990 () Bool)

(assert (=> b!77990 (= e!51015 (+!105 call!7106 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18427 c!11909) b!77990))

(assert (= (and d!18427 (not c!11909)) b!77979))

(assert (= (and b!77979 c!11913) b!77972))

(assert (= (and b!77979 (not c!11913)) b!77973))

(assert (= (and b!77973 c!11910) b!77978))

(assert (= (and b!77973 (not c!11910)) b!77971))

(assert (= (or b!77978 b!77971) bm!7099))

(assert (= (or b!77972 bm!7099) bm!7103))

(assert (= (or b!77972 b!77978) bm!7102))

(assert (= (or b!77990 bm!7103) bm!7101))

(assert (= (or b!77990 bm!7102) bm!7097))

(assert (= (and d!18427 res!40872) b!77975))

(assert (= (and d!18427 c!11908) b!77985))

(assert (= (and d!18427 (not c!11908)) b!77981))

(assert (= (and d!18427 res!40877) b!77986))

(assert (= (and b!77986 res!40871) b!77989))

(assert (= (and b!77986 (not res!40874)) b!77987))

(assert (= (and b!77987 res!40878) b!77984))

(assert (= (and b!77986 res!40879) b!77980))

(assert (= (and b!77980 c!11912) b!77982))

(assert (= (and b!77980 (not c!11912)) b!77976))

(assert (= (and b!77982 res!40873) b!77988))

(assert (= (or b!77982 b!77976) bm!7100))

(assert (= (and b!77980 res!40876) b!77977))

(assert (= (and b!77977 c!11911) b!77983))

(assert (= (and b!77977 (not c!11911)) b!77974))

(assert (= (and b!77983 res!40875) b!77970))

(assert (= (or b!77983 b!77974) bm!7098))

(declare-fun b_lambda!3495 () Bool)

(assert (=> (not b_lambda!3495) (not b!77984)))

(assert (=> b!77984 t!5150))

(declare-fun b_and!4807 () Bool)

(assert (= b_and!4795 (and (=> t!5150 result!2811) b_and!4807)))

(assert (=> b!77984 t!5152))

(declare-fun b_and!4809 () Bool)

(assert (= b_and!4797 (and (=> t!5152 result!2815) b_and!4809)))

(declare-fun m!78089 () Bool)

(assert (=> b!77988 m!78089))

(declare-fun m!78091 () Bool)

(assert (=> bm!7100 m!78091))

(declare-fun m!78093 () Bool)

(assert (=> bm!7098 m!78093))

(declare-fun m!78095 () Bool)

(assert (=> b!77985 m!78095))

(declare-fun m!78097 () Bool)

(assert (=> b!77985 m!78097))

(declare-fun m!78099 () Bool)

(assert (=> b!77985 m!78099))

(declare-fun m!78101 () Bool)

(assert (=> b!77985 m!78101))

(declare-fun m!78103 () Bool)

(assert (=> b!77985 m!78103))

(declare-fun m!78105 () Bool)

(assert (=> b!77985 m!78105))

(declare-fun m!78107 () Bool)

(assert (=> b!77985 m!78107))

(declare-fun m!78109 () Bool)

(assert (=> b!77985 m!78109))

(declare-fun m!78111 () Bool)

(assert (=> b!77985 m!78111))

(declare-fun m!78113 () Bool)

(assert (=> b!77985 m!78113))

(declare-fun m!78115 () Bool)

(assert (=> b!77985 m!78115))

(declare-fun m!78117 () Bool)

(assert (=> b!77985 m!78117))

(declare-fun m!78119 () Bool)

(assert (=> b!77985 m!78119))

(declare-fun m!78121 () Bool)

(assert (=> b!77985 m!78121))

(assert (=> b!77985 m!78115))

(assert (=> b!77985 m!78099))

(declare-fun m!78123 () Bool)

(assert (=> b!77985 m!78123))

(assert (=> b!77985 m!77983))

(declare-fun m!78125 () Bool)

(assert (=> b!77985 m!78125))

(assert (=> b!77985 m!78095))

(assert (=> b!77985 m!78103))

(assert (=> b!77984 m!78109))

(declare-fun m!78127 () Bool)

(assert (=> b!77984 m!78127))

(assert (=> b!77984 m!78109))

(declare-fun m!78129 () Bool)

(assert (=> b!77984 m!78129))

(assert (=> b!77984 m!78001))

(declare-fun m!78131 () Bool)

(assert (=> b!77984 m!78131))

(assert (=> b!77984 m!78001))

(assert (=> b!77984 m!78129))

(assert (=> b!77975 m!78109))

(assert (=> b!77975 m!78109))

(declare-fun m!78133 () Bool)

(assert (=> b!77975 m!78133))

(declare-fun m!78135 () Bool)

(assert (=> b!77970 m!78135))

(assert (=> bm!7101 m!77983))

(declare-fun m!78137 () Bool)

(assert (=> bm!7097 m!78137))

(assert (=> b!77987 m!78109))

(assert (=> b!77987 m!78109))

(declare-fun m!78139 () Bool)

(assert (=> b!77987 m!78139))

(declare-fun m!78141 () Bool)

(assert (=> b!77990 m!78141))

(assert (=> d!18427 m!77987))

(assert (=> b!77989 m!78109))

(assert (=> b!77989 m!78109))

(assert (=> b!77989 m!78133))

(assert (=> b!77845 d!18427))

(declare-fun d!18429 () Bool)

(assert (=> d!18429 (= (valid!312 thiss!992) (valid!313 (v!2592 (underlying!278 thiss!992))))))

(declare-fun bs!3305 () Bool)

(assert (= bs!3305 d!18429))

(declare-fun m!78143 () Bool)

(assert (=> bs!3305 m!78143))

(assert (=> start!10186 d!18429))

(declare-fun d!18431 () Bool)

(declare-fun e!51023 () Bool)

(assert (=> d!18431 e!51023))

(declare-fun res!40884 () Bool)

(assert (=> d!18431 (=> (not res!40884) (not e!51023))))

(declare-fun lt!36000 () ListLongMap!1447)

(assert (=> d!18431 (= res!40884 (contains!742 lt!36000 (_1!1097 lt!35870)))))

(declare-fun lt!35999 () List!1507)

(assert (=> d!18431 (= lt!36000 (ListLongMap!1448 lt!35999))))

(declare-fun lt!36002 () Unit!2257)

(declare-fun lt!36001 () Unit!2257)

(assert (=> d!18431 (= lt!36002 lt!36001)))

(declare-datatypes ((Option!143 0))(
  ( (Some!142 (v!2596 V!2995)) (None!141) )
))
(declare-fun getValueByKey!137 (List!1507 (_ BitVec 64)) Option!143)

(assert (=> d!18431 (= (getValueByKey!137 lt!35999 (_1!1097 lt!35870)) (Some!142 (_2!1097 lt!35870)))))

(declare-fun lemmaContainsTupThenGetReturnValue!54 (List!1507 (_ BitVec 64) V!2995) Unit!2257)

(assert (=> d!18431 (= lt!36001 (lemmaContainsTupThenGetReturnValue!54 lt!35999 (_1!1097 lt!35870) (_2!1097 lt!35870)))))

(declare-fun insertStrictlySorted!57 (List!1507 (_ BitVec 64) V!2995) List!1507)

(assert (=> d!18431 (= lt!35999 (insertStrictlySorted!57 (toList!739 lt!35869) (_1!1097 lt!35870) (_2!1097 lt!35870)))))

(assert (=> d!18431 (= (+!105 lt!35869 lt!35870) lt!36000)))

(declare-fun b!77995 () Bool)

(declare-fun res!40885 () Bool)

(assert (=> b!77995 (=> (not res!40885) (not e!51023))))

(assert (=> b!77995 (= res!40885 (= (getValueByKey!137 (toList!739 lt!36000) (_1!1097 lt!35870)) (Some!142 (_2!1097 lt!35870))))))

(declare-fun b!77996 () Bool)

(declare-fun contains!743 (List!1507 tuple2!2172) Bool)

(assert (=> b!77996 (= e!51023 (contains!743 (toList!739 lt!36000) lt!35870))))

(assert (= (and d!18431 res!40884) b!77995))

(assert (= (and b!77995 res!40885) b!77996))

(declare-fun m!78145 () Bool)

(assert (=> d!18431 m!78145))

(declare-fun m!78147 () Bool)

(assert (=> d!18431 m!78147))

(declare-fun m!78149 () Bool)

(assert (=> d!18431 m!78149))

(declare-fun m!78151 () Bool)

(assert (=> d!18431 m!78151))

(declare-fun m!78153 () Bool)

(assert (=> b!77995 m!78153))

(declare-fun m!78155 () Bool)

(assert (=> b!77996 m!78155))

(assert (=> b!77863 d!18431))

(declare-fun d!18433 () Bool)

(declare-fun e!51024 () Bool)

(assert (=> d!18433 e!51024))

(declare-fun res!40886 () Bool)

(assert (=> d!18433 (=> (not res!40886) (not e!51024))))

(declare-fun lt!36004 () ListLongMap!1447)

(assert (=> d!18433 (= res!40886 (contains!742 lt!36004 (_1!1097 lt!35864)))))

(declare-fun lt!36003 () List!1507)

(assert (=> d!18433 (= lt!36004 (ListLongMap!1448 lt!36003))))

(declare-fun lt!36006 () Unit!2257)

(declare-fun lt!36005 () Unit!2257)

(assert (=> d!18433 (= lt!36006 lt!36005)))

(assert (=> d!18433 (= (getValueByKey!137 lt!36003 (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864)))))

(assert (=> d!18433 (= lt!36005 (lemmaContainsTupThenGetReturnValue!54 lt!36003 (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(assert (=> d!18433 (= lt!36003 (insertStrictlySorted!57 (toList!739 lt!35869) (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(assert (=> d!18433 (= (+!105 lt!35869 lt!35864) lt!36004)))

(declare-fun b!77997 () Bool)

(declare-fun res!40887 () Bool)

(assert (=> b!77997 (=> (not res!40887) (not e!51024))))

(assert (=> b!77997 (= res!40887 (= (getValueByKey!137 (toList!739 lt!36004) (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864))))))

(declare-fun b!77998 () Bool)

(assert (=> b!77998 (= e!51024 (contains!743 (toList!739 lt!36004) lt!35864))))

(assert (= (and d!18433 res!40886) b!77997))

(assert (= (and b!77997 res!40887) b!77998))

(declare-fun m!78157 () Bool)

(assert (=> d!18433 m!78157))

(declare-fun m!78159 () Bool)

(assert (=> d!18433 m!78159))

(declare-fun m!78161 () Bool)

(assert (=> d!18433 m!78161))

(declare-fun m!78163 () Bool)

(assert (=> d!18433 m!78163))

(declare-fun m!78165 () Bool)

(assert (=> b!77997 m!78165))

(declare-fun m!78167 () Bool)

(assert (=> b!77998 m!78167))

(assert (=> b!77863 d!18433))

(declare-fun b!78023 () Bool)

(declare-fun e!51045 () ListLongMap!1447)

(assert (=> b!78023 (= e!51045 (ListLongMap!1448 Nil!1504))))

(declare-fun lt!36021 () ListLongMap!1447)

(declare-fun b!78024 () Bool)

(declare-fun e!51043 () Bool)

(assert (=> b!78024 (= e!51043 (= lt!36021 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!78025 () Bool)

(assert (=> b!78025 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> b!78025 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2137 (_values!2255 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!51040 () Bool)

(assert (=> b!78025 (= e!51040 (= (apply!79 lt!36021 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!78026 () Bool)

(declare-fun e!51044 () Bool)

(assert (=> b!78026 (= e!51044 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78026 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!78028 () Bool)

(declare-fun e!51042 () ListLongMap!1447)

(assert (=> b!78028 (= e!51045 e!51042)))

(declare-fun c!11923 () Bool)

(assert (=> b!78028 (= c!11923 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78029 () Bool)

(declare-fun e!51039 () Bool)

(assert (=> b!78029 (= e!51039 e!51040)))

(assert (=> b!78029 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun res!40898 () Bool)

(assert (=> b!78029 (= res!40898 (contains!742 lt!36021 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78029 (=> (not res!40898) (not e!51040))))

(declare-fun bm!7106 () Bool)

(declare-fun call!7109 () ListLongMap!1447)

(assert (=> bm!7106 (= call!7109 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun b!78030 () Bool)

(declare-fun e!51041 () Bool)

(assert (=> b!78030 (= e!51041 e!51039)))

(declare-fun c!11924 () Bool)

(assert (=> b!78030 (= c!11924 e!51044)))

(declare-fun res!40899 () Bool)

(assert (=> b!78030 (=> (not res!40899) (not e!51044))))

(assert (=> b!78030 (= res!40899 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun d!18435 () Bool)

(assert (=> d!18435 e!51041))

(declare-fun res!40896 () Bool)

(assert (=> d!18435 (=> (not res!40896) (not e!51041))))

(assert (=> d!18435 (= res!40896 (not (contains!742 lt!36021 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18435 (= lt!36021 e!51045)))

(declare-fun c!11922 () Bool)

(assert (=> d!18435 (= c!11922 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!18435 (validMask!0 (mask!6268 (v!2592 (underlying!278 thiss!992))))))

(assert (=> d!18435 (= (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))) lt!36021)))

(declare-fun b!78027 () Bool)

(declare-fun lt!36024 () Unit!2257)

(declare-fun lt!36022 () Unit!2257)

(assert (=> b!78027 (= lt!36024 lt!36022)))

(declare-fun lt!36025 () ListLongMap!1447)

(declare-fun lt!36023 () (_ BitVec 64))

(declare-fun lt!36026 () V!2995)

(declare-fun lt!36027 () (_ BitVec 64))

(assert (=> b!78027 (not (contains!742 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)) lt!36027))))

(declare-fun addStillNotContains!28 (ListLongMap!1447 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2257)

(assert (=> b!78027 (= lt!36022 (addStillNotContains!28 lt!36025 lt!36023 lt!36026 lt!36027))))

(assert (=> b!78027 (= lt!36027 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!78027 (= lt!36026 (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!78027 (= lt!36023 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!78027 (= lt!36025 call!7109)))

(assert (=> b!78027 (= e!51042 (+!105 call!7109 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!78031 () Bool)

(assert (=> b!78031 (= e!51039 e!51043)))

(declare-fun c!11925 () Bool)

(assert (=> b!78031 (= c!11925 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!78032 () Bool)

(declare-fun isEmpty!326 (ListLongMap!1447) Bool)

(assert (=> b!78032 (= e!51043 (isEmpty!326 lt!36021))))

(declare-fun b!78033 () Bool)

(declare-fun res!40897 () Bool)

(assert (=> b!78033 (=> (not res!40897) (not e!51041))))

(assert (=> b!78033 (= res!40897 (not (contains!742 lt!36021 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78034 () Bool)

(assert (=> b!78034 (= e!51042 call!7109)))

(assert (= (and d!18435 c!11922) b!78023))

(assert (= (and d!18435 (not c!11922)) b!78028))

(assert (= (and b!78028 c!11923) b!78027))

(assert (= (and b!78028 (not c!11923)) b!78034))

(assert (= (or b!78027 b!78034) bm!7106))

(assert (= (and d!18435 res!40896) b!78033))

(assert (= (and b!78033 res!40897) b!78030))

(assert (= (and b!78030 res!40899) b!78026))

(assert (= (and b!78030 c!11924) b!78029))

(assert (= (and b!78030 (not c!11924)) b!78031))

(assert (= (and b!78029 res!40898) b!78025))

(assert (= (and b!78031 c!11925) b!78024))

(assert (= (and b!78031 (not c!11925)) b!78032))

(declare-fun b_lambda!3497 () Bool)

(assert (=> (not b_lambda!3497) (not b!78025)))

(assert (=> b!78025 t!5150))

(declare-fun b_and!4811 () Bool)

(assert (= b_and!4807 (and (=> t!5150 result!2811) b_and!4811)))

(assert (=> b!78025 t!5152))

(declare-fun b_and!4813 () Bool)

(assert (= b_and!4809 (and (=> t!5152 result!2815) b_and!4813)))

(declare-fun b_lambda!3499 () Bool)

(assert (=> (not b_lambda!3499) (not b!78027)))

(assert (=> b!78027 t!5150))

(declare-fun b_and!4815 () Bool)

(assert (= b_and!4811 (and (=> t!5150 result!2811) b_and!4815)))

(assert (=> b!78027 t!5152))

(declare-fun b_and!4817 () Bool)

(assert (= b_and!4813 (and (=> t!5152 result!2815) b_and!4817)))

(declare-fun m!78169 () Bool)

(assert (=> b!78024 m!78169))

(assert (=> bm!7106 m!78169))

(assert (=> b!78029 m!78109))

(assert (=> b!78029 m!78109))

(declare-fun m!78171 () Bool)

(assert (=> b!78029 m!78171))

(declare-fun m!78173 () Bool)

(assert (=> d!18435 m!78173))

(assert (=> d!18435 m!77987))

(assert (=> b!78026 m!78109))

(assert (=> b!78026 m!78109))

(assert (=> b!78026 m!78133))

(assert (=> b!78028 m!78109))

(assert (=> b!78028 m!78109))

(assert (=> b!78028 m!78133))

(declare-fun m!78175 () Bool)

(assert (=> b!78033 m!78175))

(declare-fun m!78177 () Bool)

(assert (=> b!78032 m!78177))

(assert (=> b!78025 m!78129))

(assert (=> b!78025 m!78001))

(assert (=> b!78025 m!78131))

(assert (=> b!78025 m!78109))

(assert (=> b!78025 m!78129))

(assert (=> b!78025 m!78109))

(declare-fun m!78179 () Bool)

(assert (=> b!78025 m!78179))

(assert (=> b!78025 m!78001))

(declare-fun m!78181 () Bool)

(assert (=> b!78027 m!78181))

(assert (=> b!78027 m!78129))

(assert (=> b!78027 m!78001))

(assert (=> b!78027 m!78131))

(assert (=> b!78027 m!78109))

(declare-fun m!78183 () Bool)

(assert (=> b!78027 m!78183))

(assert (=> b!78027 m!78129))

(declare-fun m!78185 () Bool)

(assert (=> b!78027 m!78185))

(declare-fun m!78187 () Bool)

(assert (=> b!78027 m!78187))

(assert (=> b!78027 m!78185))

(assert (=> b!78027 m!78001))

(assert (=> b!77863 d!18435))

(declare-fun d!18437 () Bool)

(declare-fun e!51046 () Bool)

(assert (=> d!18437 e!51046))

(declare-fun res!40900 () Bool)

(assert (=> d!18437 (=> (not res!40900) (not e!51046))))

(declare-fun lt!36029 () ListLongMap!1447)

(assert (=> d!18437 (= res!40900 (contains!742 lt!36029 (_1!1097 lt!35861)))))

(declare-fun lt!36028 () List!1507)

(assert (=> d!18437 (= lt!36029 (ListLongMap!1448 lt!36028))))

(declare-fun lt!36031 () Unit!2257)

(declare-fun lt!36030 () Unit!2257)

(assert (=> d!18437 (= lt!36031 lt!36030)))

(assert (=> d!18437 (= (getValueByKey!137 lt!36028 (_1!1097 lt!35861)) (Some!142 (_2!1097 lt!35861)))))

(assert (=> d!18437 (= lt!36030 (lemmaContainsTupThenGetReturnValue!54 lt!36028 (_1!1097 lt!35861) (_2!1097 lt!35861)))))

(assert (=> d!18437 (= lt!36028 (insertStrictlySorted!57 (toList!739 lt!35868) (_1!1097 lt!35861) (_2!1097 lt!35861)))))

(assert (=> d!18437 (= (+!105 lt!35868 lt!35861) lt!36029)))

(declare-fun b!78035 () Bool)

(declare-fun res!40901 () Bool)

(assert (=> b!78035 (=> (not res!40901) (not e!51046))))

(assert (=> b!78035 (= res!40901 (= (getValueByKey!137 (toList!739 lt!36029) (_1!1097 lt!35861)) (Some!142 (_2!1097 lt!35861))))))

(declare-fun b!78036 () Bool)

(assert (=> b!78036 (= e!51046 (contains!743 (toList!739 lt!36029) lt!35861))))

(assert (= (and d!18437 res!40900) b!78035))

(assert (= (and b!78035 res!40901) b!78036))

(declare-fun m!78189 () Bool)

(assert (=> d!18437 m!78189))

(declare-fun m!78191 () Bool)

(assert (=> d!18437 m!78191))

(declare-fun m!78193 () Bool)

(assert (=> d!18437 m!78193))

(declare-fun m!78195 () Bool)

(assert (=> d!18437 m!78195))

(declare-fun m!78197 () Bool)

(assert (=> b!78035 m!78197))

(declare-fun m!78199 () Bool)

(assert (=> b!78036 m!78199))

(assert (=> b!77863 d!18437))

(declare-fun d!18439 () Bool)

(declare-fun e!51047 () Bool)

(assert (=> d!18439 e!51047))

(declare-fun res!40902 () Bool)

(assert (=> d!18439 (=> (not res!40902) (not e!51047))))

(declare-fun lt!36033 () ListLongMap!1447)

(assert (=> d!18439 (= res!40902 (contains!742 lt!36033 (_1!1097 lt!35864)))))

(declare-fun lt!36032 () List!1507)

(assert (=> d!18439 (= lt!36033 (ListLongMap!1448 lt!36032))))

(declare-fun lt!36035 () Unit!2257)

(declare-fun lt!36034 () Unit!2257)

(assert (=> d!18439 (= lt!36035 lt!36034)))

(assert (=> d!18439 (= (getValueByKey!137 lt!36032 (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864)))))

(assert (=> d!18439 (= lt!36034 (lemmaContainsTupThenGetReturnValue!54 lt!36032 (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(assert (=> d!18439 (= lt!36032 (insertStrictlySorted!57 (toList!739 (+!105 lt!35869 lt!35870)) (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(assert (=> d!18439 (= (+!105 (+!105 lt!35869 lt!35870) lt!35864) lt!36033)))

(declare-fun b!78037 () Bool)

(declare-fun res!40903 () Bool)

(assert (=> b!78037 (=> (not res!40903) (not e!51047))))

(assert (=> b!78037 (= res!40903 (= (getValueByKey!137 (toList!739 lt!36033) (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864))))))

(declare-fun b!78038 () Bool)

(assert (=> b!78038 (= e!51047 (contains!743 (toList!739 lt!36033) lt!35864))))

(assert (= (and d!18439 res!40902) b!78037))

(assert (= (and b!78037 res!40903) b!78038))

(declare-fun m!78201 () Bool)

(assert (=> d!18439 m!78201))

(declare-fun m!78203 () Bool)

(assert (=> d!18439 m!78203))

(declare-fun m!78205 () Bool)

(assert (=> d!18439 m!78205))

(declare-fun m!78207 () Bool)

(assert (=> d!18439 m!78207))

(declare-fun m!78209 () Bool)

(assert (=> b!78037 m!78209))

(declare-fun m!78211 () Bool)

(assert (=> b!78038 m!78211))

(assert (=> b!77863 d!18439))

(declare-fun d!18441 () Bool)

(assert (=> d!18441 (= (+!105 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (+!105 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun lt!36038 () Unit!2257)

(declare-fun choose!453 (ListLongMap!1447 (_ BitVec 64) V!2995 (_ BitVec 64) V!2995) Unit!2257)

(assert (=> d!18441 (= lt!36038 (choose!453 lt!35869 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))

(assert (=> d!18441 (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18441 (= (addCommutativeForDiffKeys!24 lt!35869 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))) lt!36038)))

(declare-fun bs!3306 () Bool)

(assert (= bs!3306 d!18441))

(declare-fun m!78213 () Bool)

(assert (=> bs!3306 m!78213))

(assert (=> bs!3306 m!77965))

(declare-fun m!78215 () Bool)

(assert (=> bs!3306 m!78215))

(declare-fun m!78217 () Bool)

(assert (=> bs!3306 m!78217))

(assert (=> bs!3306 m!78217))

(declare-fun m!78219 () Bool)

(assert (=> bs!3306 m!78219))

(assert (=> bs!3306 m!78213))

(declare-fun m!78221 () Bool)

(assert (=> bs!3306 m!78221))

(assert (=> b!77863 d!18441))

(declare-fun d!18443 () Bool)

(assert (=> d!18443 (= (+!105 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (+!105 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun lt!36039 () Unit!2257)

(assert (=> d!18443 (= lt!36039 (choose!453 lt!35868 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))

(assert (=> d!18443 (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18443 (= (addCommutativeForDiffKeys!24 lt!35868 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) lt!36039)))

(declare-fun bs!3307 () Bool)

(assert (= bs!3307 d!18443))

(declare-fun m!78223 () Bool)

(assert (=> bs!3307 m!78223))

(assert (=> bs!3307 m!77965))

(declare-fun m!78225 () Bool)

(assert (=> bs!3307 m!78225))

(declare-fun m!78227 () Bool)

(assert (=> bs!3307 m!78227))

(assert (=> bs!3307 m!78227))

(declare-fun m!78229 () Bool)

(assert (=> bs!3307 m!78229))

(assert (=> bs!3307 m!78223))

(declare-fun m!78231 () Bool)

(assert (=> bs!3307 m!78231))

(assert (=> b!77863 d!18443))

(declare-fun d!18445 () Bool)

(declare-fun e!51048 () Bool)

(assert (=> d!18445 e!51048))

(declare-fun res!40904 () Bool)

(assert (=> d!18445 (=> (not res!40904) (not e!51048))))

(declare-fun lt!36041 () ListLongMap!1447)

(assert (=> d!18445 (= res!40904 (contains!742 lt!36041 (_1!1097 lt!35861)))))

(declare-fun lt!36040 () List!1507)

(assert (=> d!18445 (= lt!36041 (ListLongMap!1448 lt!36040))))

(declare-fun lt!36043 () Unit!2257)

(declare-fun lt!36042 () Unit!2257)

(assert (=> d!18445 (= lt!36043 lt!36042)))

(assert (=> d!18445 (= (getValueByKey!137 lt!36040 (_1!1097 lt!35861)) (Some!142 (_2!1097 lt!35861)))))

(assert (=> d!18445 (= lt!36042 (lemmaContainsTupThenGetReturnValue!54 lt!36040 (_1!1097 lt!35861) (_2!1097 lt!35861)))))

(assert (=> d!18445 (= lt!36040 (insertStrictlySorted!57 (toList!739 lt!35865) (_1!1097 lt!35861) (_2!1097 lt!35861)))))

(assert (=> d!18445 (= (+!105 lt!35865 lt!35861) lt!36041)))

(declare-fun b!78039 () Bool)

(declare-fun res!40905 () Bool)

(assert (=> b!78039 (=> (not res!40905) (not e!51048))))

(assert (=> b!78039 (= res!40905 (= (getValueByKey!137 (toList!739 lt!36041) (_1!1097 lt!35861)) (Some!142 (_2!1097 lt!35861))))))

(declare-fun b!78040 () Bool)

(assert (=> b!78040 (= e!51048 (contains!743 (toList!739 lt!36041) lt!35861))))

(assert (= (and d!18445 res!40904) b!78039))

(assert (= (and b!78039 res!40905) b!78040))

(declare-fun m!78233 () Bool)

(assert (=> d!18445 m!78233))

(declare-fun m!78235 () Bool)

(assert (=> d!18445 m!78235))

(declare-fun m!78237 () Bool)

(assert (=> d!18445 m!78237))

(declare-fun m!78239 () Bool)

(assert (=> d!18445 m!78239))

(declare-fun m!78241 () Bool)

(assert (=> b!78039 m!78241))

(declare-fun m!78243 () Bool)

(assert (=> b!78040 m!78243))

(assert (=> b!77863 d!18445))

(declare-fun d!18447 () Bool)

(declare-fun e!51049 () Bool)

(assert (=> d!18447 e!51049))

(declare-fun res!40906 () Bool)

(assert (=> d!18447 (=> (not res!40906) (not e!51049))))

(declare-fun lt!36045 () ListLongMap!1447)

(assert (=> d!18447 (= res!40906 (contains!742 lt!36045 (_1!1097 lt!35864)))))

(declare-fun lt!36044 () List!1507)

(assert (=> d!18447 (= lt!36045 (ListLongMap!1448 lt!36044))))

(declare-fun lt!36047 () Unit!2257)

(declare-fun lt!36046 () Unit!2257)

(assert (=> d!18447 (= lt!36047 lt!36046)))

(assert (=> d!18447 (= (getValueByKey!137 lt!36044 (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864)))))

(assert (=> d!18447 (= lt!36046 (lemmaContainsTupThenGetReturnValue!54 lt!36044 (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(assert (=> d!18447 (= lt!36044 (insertStrictlySorted!57 (toList!739 lt!35868) (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(assert (=> d!18447 (= (+!105 lt!35868 lt!35864) lt!36045)))

(declare-fun b!78041 () Bool)

(declare-fun res!40907 () Bool)

(assert (=> b!78041 (=> (not res!40907) (not e!51049))))

(assert (=> b!78041 (= res!40907 (= (getValueByKey!137 (toList!739 lt!36045) (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864))))))

(declare-fun b!78042 () Bool)

(assert (=> b!78042 (= e!51049 (contains!743 (toList!739 lt!36045) lt!35864))))

(assert (= (and d!18447 res!40906) b!78041))

(assert (= (and b!78041 res!40907) b!78042))

(declare-fun m!78245 () Bool)

(assert (=> d!18447 m!78245))

(declare-fun m!78247 () Bool)

(assert (=> d!18447 m!78247))

(declare-fun m!78249 () Bool)

(assert (=> d!18447 m!78249))

(declare-fun m!78251 () Bool)

(assert (=> d!18447 m!78251))

(declare-fun m!78253 () Bool)

(assert (=> b!78041 m!78253))

(declare-fun m!78255 () Bool)

(assert (=> b!78042 m!78255))

(assert (=> b!77863 d!18447))

(declare-fun d!18449 () Bool)

(declare-fun e!51050 () Bool)

(assert (=> d!18449 e!51050))

(declare-fun res!40908 () Bool)

(assert (=> d!18449 (=> (not res!40908) (not e!51050))))

(declare-fun lt!36049 () ListLongMap!1447)

(assert (=> d!18449 (= res!40908 (contains!742 lt!36049 (_1!1097 lt!35870)))))

(declare-fun lt!36048 () List!1507)

(assert (=> d!18449 (= lt!36049 (ListLongMap!1448 lt!36048))))

(declare-fun lt!36051 () Unit!2257)

(declare-fun lt!36050 () Unit!2257)

(assert (=> d!18449 (= lt!36051 lt!36050)))

(assert (=> d!18449 (= (getValueByKey!137 lt!36048 (_1!1097 lt!35870)) (Some!142 (_2!1097 lt!35870)))))

(assert (=> d!18449 (= lt!36050 (lemmaContainsTupThenGetReturnValue!54 lt!36048 (_1!1097 lt!35870) (_2!1097 lt!35870)))))

(assert (=> d!18449 (= lt!36048 (insertStrictlySorted!57 (toList!739 lt!35853) (_1!1097 lt!35870) (_2!1097 lt!35870)))))

(assert (=> d!18449 (= (+!105 lt!35853 lt!35870) lt!36049)))

(declare-fun b!78043 () Bool)

(declare-fun res!40909 () Bool)

(assert (=> b!78043 (=> (not res!40909) (not e!51050))))

(assert (=> b!78043 (= res!40909 (= (getValueByKey!137 (toList!739 lt!36049) (_1!1097 lt!35870)) (Some!142 (_2!1097 lt!35870))))))

(declare-fun b!78044 () Bool)

(assert (=> b!78044 (= e!51050 (contains!743 (toList!739 lt!36049) lt!35870))))

(assert (= (and d!18449 res!40908) b!78043))

(assert (= (and b!78043 res!40909) b!78044))

(declare-fun m!78257 () Bool)

(assert (=> d!18449 m!78257))

(declare-fun m!78259 () Bool)

(assert (=> d!18449 m!78259))

(declare-fun m!78261 () Bool)

(assert (=> d!18449 m!78261))

(declare-fun m!78263 () Bool)

(assert (=> d!18449 m!78263))

(declare-fun m!78265 () Bool)

(assert (=> b!78043 m!78265))

(declare-fun m!78267 () Bool)

(assert (=> b!78044 m!78267))

(assert (=> b!77863 d!18449))

(declare-fun d!18451 () Bool)

(assert (=> d!18451 (= (validMask!0 (mask!6268 (v!2592 (underlying!278 thiss!992)))) (and (or (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000001111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000011111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000001111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000011111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000001111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000011111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000001111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000011111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000001111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000011111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000001111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000011111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000111111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000001111111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000011111111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000111111111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000001111111111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000011111111111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000111111111111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00001111111111111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00011111111111111111111111111111) (= (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!77863 d!18451))

(declare-fun d!18453 () Bool)

(declare-fun res!40916 () Bool)

(declare-fun e!51053 () Bool)

(assert (=> d!18453 (=> (not res!40916) (not e!51053))))

(declare-fun simpleValid!55 (LongMapFixedSize!732) Bool)

(assert (=> d!18453 (= res!40916 (simpleValid!55 newMap!16))))

(assert (=> d!18453 (= (valid!313 newMap!16) e!51053)))

(declare-fun b!78051 () Bool)

(declare-fun res!40917 () Bool)

(assert (=> b!78051 (=> (not res!40917) (not e!51053))))

(declare-fun arrayCountValidKeys!0 (array!3975 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!78051 (= res!40917 (= (arrayCountValidKeys!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (_size!415 newMap!16)))))

(declare-fun b!78052 () Bool)

(declare-fun res!40918 () Bool)

(assert (=> b!78052 (=> (not res!40918) (not e!51053))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3975 (_ BitVec 32)) Bool)

(assert (=> b!78052 (= res!40918 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!78053 () Bool)

(assert (=> b!78053 (= e!51053 (arrayNoDuplicates!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!18453 res!40916) b!78051))

(assert (= (and b!78051 res!40917) b!78052))

(assert (= (and b!78052 res!40918) b!78053))

(declare-fun m!78269 () Bool)

(assert (=> d!18453 m!78269))

(declare-fun m!78271 () Bool)

(assert (=> b!78051 m!78271))

(declare-fun m!78273 () Bool)

(assert (=> b!78052 m!78273))

(declare-fun m!78275 () Bool)

(assert (=> b!78053 m!78275))

(assert (=> b!77855 d!18453))

(declare-fun d!18455 () Bool)

(declare-fun c!11928 () Bool)

(assert (=> d!18455 (= c!11928 ((_ is ValueCellFull!912) (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun e!51056 () V!2995)

(assert (=> d!18455 (= (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) from!355) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51056)))

(declare-fun b!78058 () Bool)

(declare-fun get!1174 (ValueCell!912 V!2995) V!2995)

(assert (=> b!78058 (= e!51056 (get!1174 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) from!355) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78059 () Bool)

(declare-fun get!1175 (ValueCell!912 V!2995) V!2995)

(assert (=> b!78059 (= e!51056 (get!1175 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) from!355) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18455 c!11928) b!78058))

(assert (= (and d!18455 (not c!11928)) b!78059))

(assert (=> b!78058 m!77999))

(assert (=> b!78058 m!78001))

(declare-fun m!78277 () Bool)

(assert (=> b!78058 m!78277))

(assert (=> b!78059 m!77999))

(assert (=> b!78059 m!78001))

(declare-fun m!78279 () Bool)

(assert (=> b!78059 m!78279))

(assert (=> b!77859 d!18455))

(declare-fun d!18457 () Bool)

(assert (=> d!18457 (= (array_inv!1171 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvsge (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!77851 d!18457))

(declare-fun d!18459 () Bool)

(assert (=> d!18459 (= (array_inv!1172 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvsge (size!2137 (_values!2255 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!77851 d!18459))

(declare-fun d!18461 () Bool)

(assert (=> d!18461 (not (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!36054 () Unit!2257)

(declare-fun choose!68 (array!3975 (_ BitVec 32) (_ BitVec 64) List!1508) Unit!2257)

(assert (=> d!18461 (= lt!36054 (choose!68 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505)))))

(assert (=> d!18461 (bvslt (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!18461 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505)) lt!36054)))

(declare-fun bs!3308 () Bool)

(assert (= bs!3308 d!18461))

(assert (=> bs!3308 m!77965))

(assert (=> bs!3308 m!77969))

(assert (=> bs!3308 m!77965))

(declare-fun m!78281 () Bool)

(assert (=> bs!3308 m!78281))

(assert (=> b!77856 d!18461))

(declare-fun d!18463 () Bool)

(assert (=> d!18463 (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) from!355 Nil!1505)))

(declare-fun lt!36057 () Unit!2257)

(declare-fun choose!39 (array!3975 (_ BitVec 32) (_ BitVec 32)) Unit!2257)

(assert (=> d!18463 (= lt!36057 (choose!39 (_keys!3932 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!18463 (bvslt (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!18463 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000 from!355) lt!36057)))

(declare-fun bs!3309 () Bool)

(assert (= bs!3309 d!18463))

(assert (=> bs!3309 m!77963))

(declare-fun m!78283 () Bool)

(assert (=> bs!3309 m!78283))

(assert (=> b!77856 d!18463))

(declare-fun d!18465 () Bool)

(declare-fun res!40923 () Bool)

(declare-fun e!51061 () Bool)

(assert (=> d!18465 (=> res!40923 e!51061)))

(assert (=> d!18465 (= res!40923 (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!18465 (= (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!51061)))

(declare-fun b!78064 () Bool)

(declare-fun e!51062 () Bool)

(assert (=> b!78064 (= e!51061 e!51062)))

(declare-fun res!40924 () Bool)

(assert (=> b!78064 (=> (not res!40924) (not e!51062))))

(assert (=> b!78064 (= res!40924 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!78065 () Bool)

(assert (=> b!78065 (= e!51062 (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!18465 (not res!40923)) b!78064))

(assert (= (and b!78064 res!40924) b!78065))

(assert (=> d!18465 m!78109))

(assert (=> b!78065 m!77965))

(declare-fun m!78285 () Bool)

(assert (=> b!78065 m!78285))

(assert (=> b!77856 d!18465))

(declare-fun d!18467 () Bool)

(declare-fun e!51065 () Bool)

(assert (=> d!18467 e!51065))

(declare-fun c!11931 () Bool)

(assert (=> d!18467 (= c!11931 (and (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!36060 () Unit!2257)

(declare-fun choose!454 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) (_ BitVec 32) Int) Unit!2257)

(assert (=> d!18467 (= lt!36060 (choose!454 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(assert (=> d!18467 (validMask!0 (mask!6268 (v!2592 (underlying!278 thiss!992))))))

(assert (=> d!18467 (= (lemmaListMapContainsThenArrayContainsFrom!62 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))) lt!36060)))

(declare-fun b!78070 () Bool)

(assert (=> b!78070 (= e!51065 (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!78071 () Bool)

(assert (=> b!78071 (= e!51065 (ite (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!18467 c!11931) b!78070))

(assert (= (and d!18467 (not c!11931)) b!78071))

(assert (=> d!18467 m!77965))

(declare-fun m!78287 () Bool)

(assert (=> d!18467 m!78287))

(assert (=> d!18467 m!77987))

(assert (=> b!78070 m!77965))

(assert (=> b!78070 m!77969))

(assert (=> b!77856 d!18467))

(declare-fun b!78082 () Bool)

(declare-fun e!51077 () Bool)

(declare-fun call!7112 () Bool)

(assert (=> b!78082 (= e!51077 call!7112)))

(declare-fun d!18469 () Bool)

(declare-fun res!40932 () Bool)

(declare-fun e!51074 () Bool)

(assert (=> d!18469 (=> res!40932 e!51074)))

(assert (=> d!18469 (= res!40932 (bvsge from!355 (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!18469 (= (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) from!355 Nil!1505) e!51074)))

(declare-fun b!78083 () Bool)

(assert (=> b!78083 (= e!51077 call!7112)))

(declare-fun b!78084 () Bool)

(declare-fun e!51076 () Bool)

(assert (=> b!78084 (= e!51076 e!51077)))

(declare-fun c!11934 () Bool)

(assert (=> b!78084 (= c!11934 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!78085 () Bool)

(declare-fun e!51075 () Bool)

(declare-fun contains!744 (List!1508 (_ BitVec 64)) Bool)

(assert (=> b!78085 (= e!51075 (contains!744 Nil!1505 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!78086 () Bool)

(assert (=> b!78086 (= e!51074 e!51076)))

(declare-fun res!40933 () Bool)

(assert (=> b!78086 (=> (not res!40933) (not e!51076))))

(assert (=> b!78086 (= res!40933 (not e!51075))))

(declare-fun res!40931 () Bool)

(assert (=> b!78086 (=> (not res!40931) (not e!51075))))

(assert (=> b!78086 (= res!40931 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun bm!7109 () Bool)

(assert (=> bm!7109 (= call!7112 (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)))))

(assert (= (and d!18469 (not res!40932)) b!78086))

(assert (= (and b!78086 res!40931) b!78085))

(assert (= (and b!78086 res!40933) b!78084))

(assert (= (and b!78084 c!11934) b!78082))

(assert (= (and b!78084 (not c!11934)) b!78083))

(assert (= (or b!78082 b!78083) bm!7109))

(assert (=> b!78084 m!77965))

(assert (=> b!78084 m!77965))

(declare-fun m!78289 () Bool)

(assert (=> b!78084 m!78289))

(assert (=> b!78085 m!77965))

(assert (=> b!78085 m!77965))

(declare-fun m!78291 () Bool)

(assert (=> b!78085 m!78291))

(assert (=> b!78086 m!77965))

(assert (=> b!78086 m!77965))

(assert (=> b!78086 m!78289))

(assert (=> bm!7109 m!77965))

(declare-fun m!78293 () Bool)

(assert (=> bm!7109 m!78293))

(assert (=> b!77856 d!18469))

(declare-fun d!18471 () Bool)

(assert (=> d!18471 (= (array_inv!1171 (_keys!3932 newMap!16)) (bvsge (size!2136 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!77848 d!18471))

(declare-fun d!18473 () Bool)

(assert (=> d!18473 (= (array_inv!1172 (_values!2255 newMap!16)) (bvsge (size!2137 (_values!2255 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!77848 d!18473))

(declare-fun d!18475 () Bool)

(declare-fun e!51082 () Bool)

(assert (=> d!18475 e!51082))

(declare-fun res!40936 () Bool)

(assert (=> d!18475 (=> res!40936 e!51082)))

(declare-fun lt!36072 () Bool)

(assert (=> d!18475 (= res!40936 (not lt!36072))))

(declare-fun lt!36069 () Bool)

(assert (=> d!18475 (= lt!36072 lt!36069)))

(declare-fun lt!36070 () Unit!2257)

(declare-fun e!51083 () Unit!2257)

(assert (=> d!18475 (= lt!36070 e!51083)))

(declare-fun c!11937 () Bool)

(assert (=> d!18475 (= c!11937 lt!36069)))

(declare-fun containsKey!141 (List!1507 (_ BitVec 64)) Bool)

(assert (=> d!18475 (= lt!36069 (containsKey!141 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!18475 (= (contains!742 lt!35860 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) lt!36072)))

(declare-fun b!78093 () Bool)

(declare-fun lt!36071 () Unit!2257)

(assert (=> b!78093 (= e!51083 lt!36071)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!89 (List!1507 (_ BitVec 64)) Unit!2257)

(assert (=> b!78093 (= lt!36071 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun isDefined!90 (Option!143) Bool)

(assert (=> b!78093 (isDefined!90 (getValueByKey!137 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!78094 () Bool)

(declare-fun Unit!2262 () Unit!2257)

(assert (=> b!78094 (= e!51083 Unit!2262)))

(declare-fun b!78095 () Bool)

(assert (=> b!78095 (= e!51082 (isDefined!90 (getValueByKey!137 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(assert (= (and d!18475 c!11937) b!78093))

(assert (= (and d!18475 (not c!11937)) b!78094))

(assert (= (and d!18475 (not res!40936)) b!78095))

(assert (=> d!18475 m!77965))

(declare-fun m!78295 () Bool)

(assert (=> d!18475 m!78295))

(assert (=> b!78093 m!77965))

(declare-fun m!78297 () Bool)

(assert (=> b!78093 m!78297))

(assert (=> b!78093 m!77965))

(declare-fun m!78299 () Bool)

(assert (=> b!78093 m!78299))

(assert (=> b!78093 m!78299))

(declare-fun m!78301 () Bool)

(assert (=> b!78093 m!78301))

(assert (=> b!78095 m!77965))

(assert (=> b!78095 m!78299))

(assert (=> b!78095 m!78299))

(assert (=> b!78095 m!78301))

(assert (=> b!77853 d!18475))

(declare-fun b!78180 () Bool)

(declare-fun lt!36144 () Unit!2257)

(declare-fun lt!36141 () Unit!2257)

(assert (=> b!78180 (= lt!36144 lt!36141)))

(declare-fun call!7174 () Bool)

(assert (=> b!78180 call!7174))

(declare-fun lt!36130 () array!3977)

(declare-datatypes ((SeekEntryResult!240 0))(
  ( (MissingZero!240 (index!3094 (_ BitVec 32))) (Found!240 (index!3095 (_ BitVec 32))) (Intermediate!240 (undefined!1052 Bool) (index!3096 (_ BitVec 32)) (x!11547 (_ BitVec 32))) (Undefined!240) (MissingVacant!240 (index!3097 (_ BitVec 32))) )
))
(declare-fun lt!36128 () SeekEntryResult!240)

(declare-fun lemmaValidKeyInArrayIsInListMap!89 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) Int) Unit!2257)

(assert (=> b!78180 (= lt!36141 (lemmaValidKeyInArrayIsInListMap!89 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3095 lt!36128) (defaultEntry!2272 newMap!16)))))

(assert (=> b!78180 (= lt!36130 (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))))

(declare-fun lt!36148 () Unit!2257)

(declare-fun lt!36143 () Unit!2257)

(assert (=> b!78180 (= lt!36148 lt!36143)))

(declare-fun call!7164 () ListLongMap!1447)

(declare-fun call!7172 () ListLongMap!1447)

(assert (=> b!78180 (= call!7164 call!7172)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) (_ BitVec 64) V!2995 Int) Unit!2257)

(assert (=> b!78180 (= lt!36143 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3095 lt!36128) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36153 () Unit!2257)

(declare-fun e!51137 () Unit!2257)

(assert (=> b!78180 (= lt!36153 e!51137)))

(declare-fun c!11966 () Bool)

(assert (=> b!78180 (= c!11966 (contains!742 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun e!51143 () tuple2!2174)

(assert (=> b!78180 (= e!51143 (tuple2!2175 true (LongMapFixedSize!733 (defaultEntry!2272 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (_size!415 newMap!16) (_keys!3932 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (_vacant!415 newMap!16))))))

(declare-fun bm!7158 () Bool)

(declare-fun call!7181 () ListLongMap!1447)

(declare-fun call!7184 () ListLongMap!1447)

(assert (=> bm!7158 (= call!7181 call!7184)))

(declare-fun b!78181 () Bool)

(declare-fun Unit!2263 () Unit!2257)

(assert (=> b!78181 (= e!51137 Unit!2263)))

(declare-fun lt!36151 () Unit!2257)

(declare-fun call!7170 () Unit!2257)

(assert (=> b!78181 (= lt!36151 call!7170)))

(declare-fun lt!36133 () SeekEntryResult!240)

(declare-fun call!7168 () SeekEntryResult!240)

(assert (=> b!78181 (= lt!36133 call!7168)))

(declare-fun c!11976 () Bool)

(assert (=> b!78181 (= c!11976 ((_ is MissingZero!240) lt!36133))))

(declare-fun e!51130 () Bool)

(assert (=> b!78181 e!51130))

(declare-fun lt!36140 () Unit!2257)

(assert (=> b!78181 (= lt!36140 lt!36151)))

(assert (=> b!78181 false))

(declare-fun bm!7159 () Bool)

(declare-fun call!7178 () Bool)

(declare-fun call!7171 () Bool)

(assert (=> bm!7159 (= call!7178 call!7171)))

(declare-fun b!78182 () Bool)

(declare-fun res!40971 () Bool)

(declare-fun e!51134 () Bool)

(assert (=> b!78182 (=> (not res!40971) (not e!51134))))

(assert (=> b!78182 (= res!40971 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3094 lt!36133)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!11979 () Bool)

(declare-fun lt!36129 () (_ BitVec 32))

(declare-fun c!11977 () Bool)

(declare-fun bm!7160 () Bool)

(declare-fun c!11969 () Bool)

(assert (=> bm!7160 (= call!7184 (getCurrentListMap!433 (_keys!3932 newMap!16) (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) (zeroValue!2170 newMap!16) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun bm!7161 () Bool)

(declare-fun call!7162 () Bool)

(declare-fun call!7163 () Bool)

(assert (=> bm!7161 (= call!7162 call!7163)))

(declare-fun b!78183 () Bool)

(declare-fun e!51133 () Bool)

(assert (=> b!78183 (= e!51133 ((_ is Undefined!240) lt!36133))))

(declare-fun b!78184 () Bool)

(declare-fun e!51135 () Bool)

(assert (=> b!78184 (= e!51133 e!51135)))

(declare-fun res!40973 () Bool)

(declare-fun call!7183 () Bool)

(assert (=> b!78184 (= res!40973 call!7183)))

(assert (=> b!78184 (=> (not res!40973) (not e!51135))))

(declare-fun e!51144 () Bool)

(declare-fun lt!36146 () SeekEntryResult!240)

(declare-fun b!78185 () Bool)

(assert (=> b!78185 (= e!51144 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36146)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun bm!7162 () Bool)

(assert (=> bm!7162 (= call!7172 call!7184)))

(declare-fun bm!7163 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) Int) Unit!2257)

(assert (=> bm!7163 (= call!7170 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(declare-fun b!78186 () Bool)

(declare-fun call!7165 () Bool)

(assert (=> b!78186 (= e!51134 (not call!7165))))

(declare-fun b!78187 () Bool)

(declare-fun c!11978 () Bool)

(assert (=> b!78187 (= c!11978 ((_ is MissingVacant!240) lt!36128))))

(declare-fun e!51148 () tuple2!2174)

(declare-fun e!51146 () tuple2!2174)

(assert (=> b!78187 (= e!51148 e!51146)))

(declare-fun b!78188 () Bool)

(declare-fun e!51145 () tuple2!2174)

(assert (=> b!78188 (= e!51145 e!51148)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3975 (_ BitVec 32)) SeekEntryResult!240)

(assert (=> b!78188 (= lt!36128 (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(assert (=> b!78188 (= c!11969 ((_ is Undefined!240) lt!36128))))

(declare-fun b!78189 () Bool)

(declare-fun e!51131 () ListLongMap!1447)

(assert (=> b!78189 (= e!51131 call!7172)))

(declare-fun bm!7164 () Bool)

(assert (=> bm!7164 (= call!7171 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!78190 () Bool)

(declare-fun e!51149 () Bool)

(declare-fun e!51128 () Bool)

(assert (=> b!78190 (= e!51149 e!51128)))

(declare-fun res!40972 () Bool)

(assert (=> b!78190 (= res!40972 call!7162)))

(assert (=> b!78190 (=> (not res!40972) (not e!51128))))

(declare-fun b!78191 () Bool)

(declare-fun e!51129 () tuple2!2174)

(assert (=> b!78191 (= e!51145 e!51129)))

(assert (=> b!78191 (= c!11977 (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7165 () Bool)

(declare-fun call!7166 () tuple2!2174)

(declare-fun updateHelperNewKey!28 (LongMapFixedSize!732 (_ BitVec 64) V!2995 (_ BitVec 32)) tuple2!2174)

(assert (=> bm!7165 (= call!7166 (updateHelperNewKey!28 newMap!16 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))))))

(declare-fun bm!7166 () Bool)

(declare-fun call!7180 () Bool)

(assert (=> bm!7166 (= call!7183 call!7180)))

(declare-fun bm!7167 () Bool)

(declare-fun call!7175 () SeekEntryResult!240)

(assert (=> bm!7167 (= call!7168 call!7175)))

(declare-fun bm!7168 () Bool)

(assert (=> bm!7168 (= call!7175 (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!78192 () Bool)

(assert (=> b!78192 (= e!51146 e!51143)))

(declare-fun c!11967 () Bool)

(assert (=> b!78192 (= c!11967 ((_ is MissingZero!240) lt!36128))))

(declare-fun lt!36145 () (_ BitVec 32))

(declare-fun bm!7169 () Bool)

(declare-fun call!7179 () ListLongMap!1447)

(assert (=> bm!7169 (= call!7179 (getCurrentListMap!433 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36130) (mask!6268 newMap!16) (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78193 () Bool)

(declare-fun res!40970 () Bool)

(declare-fun e!51141 () Bool)

(assert (=> b!78193 (=> (not res!40970) (not e!51141))))

(assert (=> b!78193 (= res!40970 call!7162)))

(declare-fun e!51136 () Bool)

(assert (=> b!78193 (= e!51136 e!51141)))

(declare-fun d!18477 () Bool)

(declare-fun e!51138 () Bool)

(assert (=> d!18477 e!51138))

(declare-fun res!40968 () Bool)

(assert (=> d!18477 (=> (not res!40968) (not e!51138))))

(declare-fun lt!36136 () tuple2!2174)

(assert (=> d!18477 (= res!40968 (valid!313 (_2!1098 lt!36136)))))

(assert (=> d!18477 (= lt!36136 e!51145)))

(assert (=> d!18477 (= c!11979 (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvneg (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(assert (=> d!18477 (valid!313 newMap!16)))

(assert (=> d!18477 (= (update!107 newMap!16 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856) lt!36136)))

(declare-fun b!78194 () Bool)

(declare-fun lt!36132 () Unit!2257)

(declare-fun e!51132 () Unit!2257)

(assert (=> b!78194 (= lt!36132 e!51132)))

(declare-fun c!11974 () Bool)

(assert (=> b!78194 (= c!11974 call!7174)))

(assert (=> b!78194 (= e!51148 (tuple2!2175 false newMap!16))))

(declare-fun b!78195 () Bool)

(declare-fun res!40977 () Bool)

(assert (=> b!78195 (= res!40977 call!7180)))

(assert (=> b!78195 (=> (not res!40977) (not e!51144))))

(declare-fun lt!36152 () SeekEntryResult!240)

(declare-fun e!51147 () Bool)

(declare-fun b!78196 () Bool)

(assert (=> b!78196 (= e!51147 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36152)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!78197 () Bool)

(declare-fun c!11975 () Bool)

(assert (=> b!78197 (= c!11975 ((_ is MissingVacant!240) lt!36133))))

(assert (=> b!78197 (= e!51130 e!51133)))

(declare-fun b!78198 () Bool)

(declare-fun res!40976 () Bool)

(declare-fun lt!36134 () SeekEntryResult!240)

(assert (=> b!78198 (= res!40976 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3097 lt!36134)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78198 (=> (not res!40976) (not e!51128))))

(declare-fun e!51142 () ListLongMap!1447)

(declare-fun bm!7170 () Bool)

(assert (=> bm!7170 (= call!7164 (+!105 e!51142 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun c!11972 () Bool)

(assert (=> bm!7170 (= c!11972 c!11979)))

(declare-fun bm!7171 () Bool)

(declare-fun call!7176 () Unit!2257)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) Int) Unit!2257)

(assert (=> bm!7171 (= call!7176 (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(declare-fun call!7182 () ListLongMap!1447)

(declare-fun b!78199 () Bool)

(declare-fun call!7169 () ListLongMap!1447)

(declare-fun e!51140 () Bool)

(assert (=> b!78199 (= e!51140 (= call!7169 (+!105 call!7182 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!78200 () Bool)

(assert (=> b!78200 (= e!51131 call!7179)))

(declare-fun b!78201 () Bool)

(assert (=> b!78201 (= e!51135 (not call!7165))))

(declare-fun b!78202 () Bool)

(declare-fun res!40965 () Bool)

(assert (=> b!78202 (= res!40965 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3097 lt!36133)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78202 (=> (not res!40965) (not e!51135))))

(declare-fun b!78203 () Bool)

(declare-fun lt!36127 () Unit!2257)

(declare-fun lt!36150 () Unit!2257)

(assert (=> b!78203 (= lt!36127 lt!36150)))

(declare-fun call!7161 () ListLongMap!1447)

(assert (=> b!78203 (= call!7161 call!7181)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 V!2995 Int) Unit!2257)

(assert (=> b!78203 (= lt!36150 (lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36129 (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) lt!35856 (defaultEntry!2272 newMap!16)))))

(assert (=> b!78203 (= lt!36129 (bvor (extraKeys!2123 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!78203 (= e!51129 (tuple2!2175 true (LongMapFixedSize!733 (defaultEntry!2272 newMap!16) (mask!6268 newMap!16) (bvor (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) (zeroValue!2170 newMap!16) lt!35856 (_size!415 newMap!16) (_keys!3932 newMap!16) (_values!2255 newMap!16) (_vacant!415 newMap!16))))))

(declare-fun bm!7172 () Bool)

(declare-fun call!7167 () SeekEntryResult!240)

(assert (=> bm!7172 (= call!7167 call!7175)))

(declare-fun bm!7173 () Bool)

(declare-fun c!11971 () Bool)

(assert (=> bm!7173 (= c!11971 c!11969)))

(assert (=> bm!7173 (= call!7174 (contains!742 e!51131 (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))

(declare-fun bm!7174 () Bool)

(declare-fun call!7177 () Bool)

(assert (=> bm!7174 (= call!7180 call!7177)))

(declare-fun b!78204 () Bool)

(declare-fun lt!36139 () tuple2!2174)

(assert (=> b!78204 (= e!51146 (tuple2!2175 (_1!1098 lt!36139) (_2!1098 lt!36139)))))

(assert (=> b!78204 (= lt!36139 call!7166)))

(declare-fun b!78205 () Bool)

(assert (=> b!78205 (= e!51142 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun bm!7175 () Bool)

(assert (=> bm!7175 (= call!7169 (map!1174 (_2!1098 lt!36136)))))

(declare-fun b!78206 () Bool)

(assert (=> b!78206 (= e!51149 ((_ is Undefined!240) lt!36134))))

(declare-fun b!78207 () Bool)

(declare-fun call!7173 () ListLongMap!1447)

(assert (=> b!78207 (= e!51142 (ite c!11977 call!7181 call!7173))))

(declare-fun b!78208 () Bool)

(declare-fun res!40978 () Bool)

(assert (=> b!78208 (=> (not res!40978) (not e!51134))))

(assert (=> b!78208 (= res!40978 call!7183)))

(assert (=> b!78208 (= e!51130 e!51134)))

(declare-fun b!78209 () Bool)

(declare-fun c!11970 () Bool)

(assert (=> b!78209 (= c!11970 ((_ is MissingVacant!240) lt!36134))))

(assert (=> b!78209 (= e!51136 e!51149)))

(declare-fun bm!7176 () Bool)

(assert (=> bm!7176 (= call!7165 call!7171)))

(declare-fun b!78210 () Bool)

(declare-fun lt!36135 () Unit!2257)

(assert (=> b!78210 (= e!51137 lt!36135)))

(assert (=> b!78210 (= lt!36135 call!7176)))

(assert (=> b!78210 (= lt!36146 call!7168)))

(declare-fun res!40966 () Bool)

(assert (=> b!78210 (= res!40966 ((_ is Found!240) lt!36146))))

(assert (=> b!78210 (=> (not res!40966) (not e!51144))))

(assert (=> b!78210 e!51144))

(declare-fun b!78211 () Bool)

(assert (=> b!78211 (= e!51141 (not call!7178))))

(declare-fun b!78212 () Bool)

(declare-fun lt!36138 () Unit!2257)

(assert (=> b!78212 (= e!51132 lt!36138)))

(assert (=> b!78212 (= lt!36138 call!7170)))

(assert (=> b!78212 (= lt!36134 call!7167)))

(declare-fun c!11973 () Bool)

(assert (=> b!78212 (= c!11973 ((_ is MissingZero!240) lt!36134))))

(assert (=> b!78212 e!51136))

(declare-fun bm!7177 () Bool)

(assert (=> bm!7177 (= call!7173 call!7179)))

(declare-fun b!78213 () Bool)

(declare-fun e!51139 () Bool)

(assert (=> b!78213 (= e!51138 e!51139)))

(declare-fun c!11968 () Bool)

(assert (=> b!78213 (= c!11968 (_1!1098 lt!36136))))

(declare-fun b!78214 () Bool)

(assert (=> b!78214 (= e!51139 (= call!7169 call!7182))))

(declare-fun b!78215 () Bool)

(assert (=> b!78215 (= e!51128 (not call!7178))))

(declare-fun b!78216 () Bool)

(declare-fun res!40974 () Bool)

(assert (=> b!78216 (= res!40974 call!7163)))

(assert (=> b!78216 (=> (not res!40974) (not e!51147))))

(declare-fun b!78217 () Bool)

(declare-fun Unit!2264 () Unit!2257)

(assert (=> b!78217 (= e!51132 Unit!2264)))

(declare-fun lt!36137 () Unit!2257)

(assert (=> b!78217 (= lt!36137 call!7176)))

(assert (=> b!78217 (= lt!36152 call!7167)))

(declare-fun res!40975 () Bool)

(assert (=> b!78217 (= res!40975 ((_ is Found!240) lt!36152))))

(assert (=> b!78217 (=> (not res!40975) (not e!51147))))

(assert (=> b!78217 e!51147))

(declare-fun lt!36131 () Unit!2257)

(assert (=> b!78217 (= lt!36131 lt!36137)))

(assert (=> b!78217 false))

(declare-fun b!78218 () Bool)

(declare-fun res!40969 () Bool)

(assert (=> b!78218 (=> (not res!40969) (not e!51141))))

(assert (=> b!78218 (= res!40969 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3094 lt!36134)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7178 () Bool)

(assert (=> bm!7178 (= call!7182 (map!1174 newMap!16))))

(declare-fun bm!7179 () Bool)

(assert (=> bm!7179 (= call!7161 call!7164)))

(declare-fun b!78219 () Bool)

(declare-fun lt!36142 () tuple2!2174)

(assert (=> b!78219 (= lt!36142 call!7166)))

(assert (=> b!78219 (= e!51143 (tuple2!2175 (_1!1098 lt!36142) (_2!1098 lt!36142)))))

(declare-fun bm!7180 () Bool)

(assert (=> bm!7180 (= call!7163 call!7177)))

(declare-fun b!78220 () Bool)

(assert (=> b!78220 (= e!51139 e!51140)))

(declare-fun res!40967 () Bool)

(assert (=> b!78220 (= res!40967 (contains!742 call!7169 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> b!78220 (=> (not res!40967) (not e!51140))))

(declare-fun b!78221 () Bool)

(declare-fun lt!36149 () Unit!2257)

(declare-fun lt!36147 () Unit!2257)

(assert (=> b!78221 (= lt!36149 lt!36147)))

(assert (=> b!78221 (= call!7161 call!7173)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!28 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 V!2995 Int) Unit!2257)

(assert (=> b!78221 (= lt!36147 (lemmaChangeZeroKeyThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36145 (zeroValue!2170 newMap!16) lt!35856 (minValue!2170 newMap!16) (defaultEntry!2272 newMap!16)))))

(assert (=> b!78221 (= lt!36145 (bvor (extraKeys!2123 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!78221 (= e!51129 (tuple2!2175 true (LongMapFixedSize!733 (defaultEntry!2272 newMap!16) (mask!6268 newMap!16) (bvor (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) lt!35856 (minValue!2170 newMap!16) (_size!415 newMap!16) (_keys!3932 newMap!16) (_values!2255 newMap!16) (_vacant!415 newMap!16))))))

(declare-fun bm!7181 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7181 (= call!7177 (inRange!0 (ite c!11969 (ite c!11974 (index!3095 lt!36152) (ite c!11973 (index!3094 lt!36134) (index!3097 lt!36134))) (ite c!11966 (index!3095 lt!36146) (ite c!11976 (index!3094 lt!36133) (index!3097 lt!36133)))) (mask!6268 newMap!16)))))

(assert (= (and d!18477 c!11979) b!78191))

(assert (= (and d!18477 (not c!11979)) b!78188))

(assert (= (and b!78191 c!11977) b!78221))

(assert (= (and b!78191 (not c!11977)) b!78203))

(assert (= (or b!78221 b!78203) bm!7177))

(assert (= (or b!78221 b!78203) bm!7158))

(assert (= (or b!78221 b!78203) bm!7179))

(assert (= (and b!78188 c!11969) b!78194))

(assert (= (and b!78188 (not c!11969)) b!78187))

(assert (= (and b!78194 c!11974) b!78217))

(assert (= (and b!78194 (not c!11974)) b!78212))

(assert (= (and b!78217 res!40975) b!78216))

(assert (= (and b!78216 res!40974) b!78196))

(assert (= (and b!78212 c!11973) b!78193))

(assert (= (and b!78212 (not c!11973)) b!78209))

(assert (= (and b!78193 res!40970) b!78218))

(assert (= (and b!78218 res!40969) b!78211))

(assert (= (and b!78209 c!11970) b!78190))

(assert (= (and b!78209 (not c!11970)) b!78206))

(assert (= (and b!78190 res!40972) b!78198))

(assert (= (and b!78198 res!40976) b!78215))

(assert (= (or b!78193 b!78190) bm!7161))

(assert (= (or b!78211 b!78215) bm!7159))

(assert (= (or b!78216 bm!7161) bm!7180))

(assert (= (or b!78217 b!78212) bm!7172))

(assert (= (and b!78187 c!11978) b!78204))

(assert (= (and b!78187 (not c!11978)) b!78192))

(assert (= (and b!78192 c!11967) b!78219))

(assert (= (and b!78192 (not c!11967)) b!78180))

(assert (= (and b!78180 c!11966) b!78210))

(assert (= (and b!78180 (not c!11966)) b!78181))

(assert (= (and b!78210 res!40966) b!78195))

(assert (= (and b!78195 res!40977) b!78185))

(assert (= (and b!78181 c!11976) b!78208))

(assert (= (and b!78181 (not c!11976)) b!78197))

(assert (= (and b!78208 res!40978) b!78182))

(assert (= (and b!78182 res!40971) b!78186))

(assert (= (and b!78197 c!11975) b!78184))

(assert (= (and b!78197 (not c!11975)) b!78183))

(assert (= (and b!78184 res!40973) b!78202))

(assert (= (and b!78202 res!40965) b!78201))

(assert (= (or b!78208 b!78184) bm!7166))

(assert (= (or b!78186 b!78201) bm!7176))

(assert (= (or b!78195 bm!7166) bm!7174))

(assert (= (or b!78210 b!78181) bm!7167))

(assert (= (or b!78204 b!78219) bm!7165))

(assert (= (or bm!7159 bm!7176) bm!7164))

(assert (= (or b!78194 b!78180) bm!7162))

(assert (= (or bm!7172 bm!7167) bm!7168))

(assert (= (or b!78217 b!78210) bm!7171))

(assert (= (or bm!7180 bm!7174) bm!7181))

(assert (= (or b!78212 b!78181) bm!7163))

(assert (= (or b!78194 b!78180) bm!7173))

(assert (= (and bm!7173 c!11971) b!78189))

(assert (= (and bm!7173 (not c!11971)) b!78200))

(assert (= (or bm!7177 b!78200) bm!7169))

(assert (= (or bm!7158 bm!7162) bm!7160))

(assert (= (or bm!7179 b!78180) bm!7170))

(assert (= (and bm!7170 c!11972) b!78207))

(assert (= (and bm!7170 (not c!11972)) b!78205))

(assert (= (and d!18477 res!40968) b!78213))

(assert (= (and b!78213 c!11968) b!78220))

(assert (= (and b!78213 (not c!11968)) b!78214))

(assert (= (and b!78220 res!40967) b!78199))

(assert (= (or b!78220 b!78199 b!78214) bm!7175))

(assert (= (or b!78199 b!78214) bm!7178))

(declare-fun m!78303 () Bool)

(assert (=> bm!7181 m!78303))

(assert (=> bm!7171 m!77965))

(declare-fun m!78305 () Bool)

(assert (=> bm!7171 m!78305))

(assert (=> bm!7168 m!77965))

(declare-fun m!78307 () Bool)

(assert (=> bm!7168 m!78307))

(declare-fun m!78309 () Bool)

(assert (=> bm!7169 m!78309))

(declare-fun m!78311 () Bool)

(assert (=> b!78185 m!78311))

(assert (=> bm!7165 m!77965))

(declare-fun m!78313 () Bool)

(assert (=> bm!7165 m!78313))

(declare-fun m!78315 () Bool)

(assert (=> b!78182 m!78315))

(declare-fun m!78317 () Bool)

(assert (=> b!78218 m!78317))

(declare-fun m!78319 () Bool)

(assert (=> b!78202 m!78319))

(declare-fun m!78321 () Bool)

(assert (=> bm!7173 m!78321))

(declare-fun m!78323 () Bool)

(assert (=> bm!7173 m!78323))

(declare-fun m!78325 () Bool)

(assert (=> bm!7170 m!78325))

(declare-fun m!78327 () Bool)

(assert (=> b!78221 m!78327))

(assert (=> b!78188 m!77965))

(assert (=> b!78188 m!78307))

(declare-fun m!78329 () Bool)

(assert (=> bm!7175 m!78329))

(declare-fun m!78331 () Bool)

(assert (=> d!18477 m!78331))

(assert (=> d!18477 m!77959))

(declare-fun m!78333 () Bool)

(assert (=> b!78199 m!78333))

(assert (=> b!78205 m!78087))

(assert (=> b!78220 m!77965))

(declare-fun m!78335 () Bool)

(assert (=> b!78220 m!78335))

(assert (=> bm!7163 m!77965))

(declare-fun m!78337 () Bool)

(assert (=> bm!7163 m!78337))

(declare-fun m!78339 () Bool)

(assert (=> b!78196 m!78339))

(declare-fun m!78341 () Bool)

(assert (=> bm!7160 m!78341))

(declare-fun m!78343 () Bool)

(assert (=> bm!7160 m!78343))

(declare-fun m!78345 () Bool)

(assert (=> b!78203 m!78345))

(assert (=> bm!7178 m!78015))

(assert (=> b!78180 m!78341))

(assert (=> b!78180 m!77965))

(declare-fun m!78347 () Bool)

(assert (=> b!78180 m!78347))

(assert (=> b!78180 m!78087))

(assert (=> b!78180 m!77965))

(declare-fun m!78349 () Bool)

(assert (=> b!78180 m!78349))

(assert (=> b!78180 m!78087))

(declare-fun m!78351 () Bool)

(assert (=> b!78180 m!78351))

(assert (=> bm!7164 m!77965))

(declare-fun m!78353 () Bool)

(assert (=> bm!7164 m!78353))

(declare-fun m!78355 () Bool)

(assert (=> b!78198 m!78355))

(assert (=> b!77853 d!18477))

(declare-fun mapNonEmpty!3313 () Bool)

(declare-fun mapRes!3313 () Bool)

(declare-fun tp!8785 () Bool)

(declare-fun e!51154 () Bool)

(assert (=> mapNonEmpty!3313 (= mapRes!3313 (and tp!8785 e!51154))))

(declare-fun mapKey!3313 () (_ BitVec 32))

(declare-fun mapRest!3313 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapValue!3313 () ValueCell!912)

(assert (=> mapNonEmpty!3313 (= mapRest!3304 (store mapRest!3313 mapKey!3313 mapValue!3313))))

(declare-fun b!78229 () Bool)

(declare-fun e!51155 () Bool)

(assert (=> b!78229 (= e!51155 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3313 () Bool)

(assert (=> mapIsEmpty!3313 mapRes!3313))

(declare-fun condMapEmpty!3313 () Bool)

(declare-fun mapDefault!3313 () ValueCell!912)

(assert (=> mapNonEmpty!3304 (= condMapEmpty!3313 (= mapRest!3304 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3313)))))

(assert (=> mapNonEmpty!3304 (= tp!8768 (and e!51155 mapRes!3313))))

(declare-fun b!78228 () Bool)

(assert (=> b!78228 (= e!51154 tp_is_empty!2511)))

(assert (= (and mapNonEmpty!3304 condMapEmpty!3313) mapIsEmpty!3313))

(assert (= (and mapNonEmpty!3304 (not condMapEmpty!3313)) mapNonEmpty!3313))

(assert (= (and mapNonEmpty!3313 ((_ is ValueCellFull!912) mapValue!3313)) b!78228))

(assert (= (and mapNonEmpty!3304 ((_ is ValueCellFull!912) mapDefault!3313)) b!78229))

(declare-fun m!78357 () Bool)

(assert (=> mapNonEmpty!3313 m!78357))

(declare-fun mapNonEmpty!3314 () Bool)

(declare-fun mapRes!3314 () Bool)

(declare-fun tp!8786 () Bool)

(declare-fun e!51156 () Bool)

(assert (=> mapNonEmpty!3314 (= mapRes!3314 (and tp!8786 e!51156))))

(declare-fun mapKey!3314 () (_ BitVec 32))

(declare-fun mapValue!3314 () ValueCell!912)

(declare-fun mapRest!3314 () (Array (_ BitVec 32) ValueCell!912))

(assert (=> mapNonEmpty!3314 (= mapRest!3303 (store mapRest!3314 mapKey!3314 mapValue!3314))))

(declare-fun b!78231 () Bool)

(declare-fun e!51157 () Bool)

(assert (=> b!78231 (= e!51157 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3314 () Bool)

(assert (=> mapIsEmpty!3314 mapRes!3314))

(declare-fun condMapEmpty!3314 () Bool)

(declare-fun mapDefault!3314 () ValueCell!912)

(assert (=> mapNonEmpty!3303 (= condMapEmpty!3314 (= mapRest!3303 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3314)))))

(assert (=> mapNonEmpty!3303 (= tp!8770 (and e!51157 mapRes!3314))))

(declare-fun b!78230 () Bool)

(assert (=> b!78230 (= e!51156 tp_is_empty!2511)))

(assert (= (and mapNonEmpty!3303 condMapEmpty!3314) mapIsEmpty!3314))

(assert (= (and mapNonEmpty!3303 (not condMapEmpty!3314)) mapNonEmpty!3314))

(assert (= (and mapNonEmpty!3314 ((_ is ValueCellFull!912) mapValue!3314)) b!78230))

(assert (= (and mapNonEmpty!3303 ((_ is ValueCellFull!912) mapDefault!3314)) b!78231))

(declare-fun m!78359 () Bool)

(assert (=> mapNonEmpty!3314 m!78359))

(declare-fun b_lambda!3501 () Bool)

(assert (= b_lambda!3495 (or (and b!77851 b_free!2189) (and b!77848 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))) b_lambda!3501)))

(declare-fun b_lambda!3503 () Bool)

(assert (= b_lambda!3499 (or (and b!77851 b_free!2189) (and b!77848 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))) b_lambda!3503)))

(declare-fun b_lambda!3505 () Bool)

(assert (= b_lambda!3497 (or (and b!77851 b_free!2189) (and b!77848 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))) b_lambda!3505)))

(check-sat (not d!18461) (not b!78093) (not b!78040) (not b!77998) (not b!77975) (not mapNonEmpty!3314) (not b!78024) (not b!78086) (not b!78199) (not bm!7173) (not b!78180) (not bm!7181) (not bm!7168) (not b!78051) (not d!18429) (not b!78085) (not b_lambda!3501) (not b!77989) (not bm!7101) (not b!78029) (not b!78039) (not b!78043) (not b!78070) (not b!78033) (not b!78058) (not d!18435) (not b!78028) b_and!4815 (not d!18467) (not b!77995) (not b!78041) (not b!78038) tp_is_empty!2511 (not d!18475) (not bm!7106) (not bm!7171) (not b!78032) (not b!78205) (not b!77970) b_and!4817 (not b!78220) (not mapNonEmpty!3313) (not bm!7097) (not d!18447) (not b!78025) (not b!78035) (not b!77996) (not b!78221) (not b!77988) (not bm!7178) (not d!18439) (not d!18449) (not d!18425) (not b!77997) (not d!18445) (not b!78053) (not b!77990) (not b!77985) (not b!78188) (not d!18463) (not bm!7165) (not bm!7109) (not b!78065) (not b!78036) (not b_next!2189) (not b_next!2191) (not b_lambda!3505) (not b!78044) (not b!77984) (not b_lambda!3493) (not b!78203) (not bm!7098) (not b!78084) (not d!18453) (not b!78059) (not b!78095) (not bm!7164) (not b!78042) (not b!77987) (not bm!7100) (not bm!7169) (not b!78052) (not bm!7170) (not bm!7160) (not d!18433) (not bm!7175) (not b!78027) (not d!18431) (not bm!7163) (not b!78037) (not d!18441) (not d!18437) (not b_lambda!3503) (not d!18443) (not d!18427) (not b!78026) (not d!18477))
(check-sat b_and!4815 b_and!4817 (not b_next!2189) (not b_next!2191))
(get-model)

(assert (=> b!78070 d!18465))

(declare-fun d!18479 () Bool)

(declare-fun e!51158 () Bool)

(assert (=> d!18479 e!51158))

(declare-fun res!40979 () Bool)

(assert (=> d!18479 (=> (not res!40979) (not e!51158))))

(declare-fun lt!36155 () ListLongMap!1447)

(assert (=> d!18479 (= res!40979 (contains!742 lt!36155 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36154 () List!1507)

(assert (=> d!18479 (= lt!36155 (ListLongMap!1448 lt!36154))))

(declare-fun lt!36157 () Unit!2257)

(declare-fun lt!36156 () Unit!2257)

(assert (=> d!18479 (= lt!36157 lt!36156)))

(assert (=> d!18479 (= (getValueByKey!137 lt!36154 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18479 (= lt!36156 (lemmaContainsTupThenGetReturnValue!54 lt!36154 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18479 (= lt!36154 (insertStrictlySorted!57 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18479 (= (+!105 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36155)))

(declare-fun b!78232 () Bool)

(declare-fun res!40980 () Bool)

(assert (=> b!78232 (=> (not res!40980) (not e!51158))))

(assert (=> b!78232 (= res!40980 (= (getValueByKey!137 (toList!739 lt!36155) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78233 () Bool)

(assert (=> b!78233 (= e!51158 (contains!743 (toList!739 lt!36155) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18479 res!40979) b!78232))

(assert (= (and b!78232 res!40980) b!78233))

(declare-fun m!78361 () Bool)

(assert (=> d!18479 m!78361))

(declare-fun m!78363 () Bool)

(assert (=> d!18479 m!78363))

(declare-fun m!78365 () Bool)

(assert (=> d!18479 m!78365))

(declare-fun m!78367 () Bool)

(assert (=> d!18479 m!78367))

(declare-fun m!78369 () Bool)

(assert (=> b!78232 m!78369))

(declare-fun m!78371 () Bool)

(assert (=> b!78233 m!78371))

(assert (=> d!18441 d!18479))

(declare-fun d!18481 () Bool)

(assert (=> d!18481 (= (+!105 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (+!105 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (=> d!18481 true))

(declare-fun _$28!130 () Unit!2257)

(assert (=> d!18481 (= (choose!453 lt!35869 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))) _$28!130)))

(declare-fun bs!3310 () Bool)

(assert (= bs!3310 d!18481))

(assert (=> bs!3310 m!78213))

(assert (=> bs!3310 m!78213))

(assert (=> bs!3310 m!78221))

(assert (=> bs!3310 m!78217))

(assert (=> bs!3310 m!78217))

(assert (=> bs!3310 m!78219))

(assert (=> d!18441 d!18481))

(declare-fun d!18483 () Bool)

(declare-fun e!51159 () Bool)

(assert (=> d!18483 e!51159))

(declare-fun res!40981 () Bool)

(assert (=> d!18483 (=> (not res!40981) (not e!51159))))

(declare-fun lt!36159 () ListLongMap!1447)

(assert (=> d!18483 (= res!40981 (contains!742 lt!36159 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36158 () List!1507)

(assert (=> d!18483 (= lt!36159 (ListLongMap!1448 lt!36158))))

(declare-fun lt!36161 () Unit!2257)

(declare-fun lt!36160 () Unit!2257)

(assert (=> d!18483 (= lt!36161 lt!36160)))

(assert (=> d!18483 (= (getValueByKey!137 lt!36158 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18483 (= lt!36160 (lemmaContainsTupThenGetReturnValue!54 lt!36158 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18483 (= lt!36158 (insertStrictlySorted!57 (toList!739 lt!35869) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18483 (= (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36159)))

(declare-fun b!78234 () Bool)

(declare-fun res!40982 () Bool)

(assert (=> b!78234 (=> (not res!40982) (not e!51159))))

(assert (=> b!78234 (= res!40982 (= (getValueByKey!137 (toList!739 lt!36159) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78235 () Bool)

(assert (=> b!78235 (= e!51159 (contains!743 (toList!739 lt!36159) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18483 res!40981) b!78234))

(assert (= (and b!78234 res!40982) b!78235))

(declare-fun m!78373 () Bool)

(assert (=> d!18483 m!78373))

(declare-fun m!78375 () Bool)

(assert (=> d!18483 m!78375))

(declare-fun m!78377 () Bool)

(assert (=> d!18483 m!78377))

(declare-fun m!78379 () Bool)

(assert (=> d!18483 m!78379))

(declare-fun m!78381 () Bool)

(assert (=> b!78234 m!78381))

(declare-fun m!78383 () Bool)

(assert (=> b!78235 m!78383))

(assert (=> d!18441 d!18483))

(declare-fun d!18485 () Bool)

(declare-fun e!51160 () Bool)

(assert (=> d!18485 e!51160))

(declare-fun res!40983 () Bool)

(assert (=> d!18485 (=> (not res!40983) (not e!51160))))

(declare-fun lt!36163 () ListLongMap!1447)

(assert (=> d!18485 (= res!40983 (contains!742 lt!36163 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!36162 () List!1507)

(assert (=> d!18485 (= lt!36163 (ListLongMap!1448 lt!36162))))

(declare-fun lt!36165 () Unit!2257)

(declare-fun lt!36164 () Unit!2257)

(assert (=> d!18485 (= lt!36165 lt!36164)))

(assert (=> d!18485 (= (getValueByKey!137 lt!36162 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18485 (= lt!36164 (lemmaContainsTupThenGetReturnValue!54 lt!36162 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18485 (= lt!36162 (insertStrictlySorted!57 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18485 (= (+!105 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!36163)))

(declare-fun b!78236 () Bool)

(declare-fun res!40984 () Bool)

(assert (=> b!78236 (=> (not res!40984) (not e!51160))))

(assert (=> b!78236 (= res!40984 (= (getValueByKey!137 (toList!739 lt!36163) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!78237 () Bool)

(assert (=> b!78237 (= e!51160 (contains!743 (toList!739 lt!36163) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!18485 res!40983) b!78236))

(assert (= (and b!78236 res!40984) b!78237))

(declare-fun m!78385 () Bool)

(assert (=> d!18485 m!78385))

(declare-fun m!78387 () Bool)

(assert (=> d!18485 m!78387))

(declare-fun m!78389 () Bool)

(assert (=> d!18485 m!78389))

(declare-fun m!78391 () Bool)

(assert (=> d!18485 m!78391))

(declare-fun m!78393 () Bool)

(assert (=> b!78236 m!78393))

(declare-fun m!78395 () Bool)

(assert (=> b!78237 m!78395))

(assert (=> d!18441 d!18485))

(declare-fun d!18487 () Bool)

(declare-fun e!51161 () Bool)

(assert (=> d!18487 e!51161))

(declare-fun res!40985 () Bool)

(assert (=> d!18487 (=> (not res!40985) (not e!51161))))

(declare-fun lt!36167 () ListLongMap!1447)

(assert (=> d!18487 (= res!40985 (contains!742 lt!36167 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!36166 () List!1507)

(assert (=> d!18487 (= lt!36167 (ListLongMap!1448 lt!36166))))

(declare-fun lt!36169 () Unit!2257)

(declare-fun lt!36168 () Unit!2257)

(assert (=> d!18487 (= lt!36169 lt!36168)))

(assert (=> d!18487 (= (getValueByKey!137 lt!36166 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18487 (= lt!36168 (lemmaContainsTupThenGetReturnValue!54 lt!36166 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18487 (= lt!36166 (insertStrictlySorted!57 (toList!739 lt!35869) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18487 (= (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!36167)))

(declare-fun b!78238 () Bool)

(declare-fun res!40986 () Bool)

(assert (=> b!78238 (=> (not res!40986) (not e!51161))))

(assert (=> b!78238 (= res!40986 (= (getValueByKey!137 (toList!739 lt!36167) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!78239 () Bool)

(assert (=> b!78239 (= e!51161 (contains!743 (toList!739 lt!36167) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!18487 res!40985) b!78238))

(assert (= (and b!78238 res!40986) b!78239))

(declare-fun m!78397 () Bool)

(assert (=> d!18487 m!78397))

(declare-fun m!78399 () Bool)

(assert (=> d!18487 m!78399))

(declare-fun m!78401 () Bool)

(assert (=> d!18487 m!78401))

(declare-fun m!78403 () Bool)

(assert (=> d!18487 m!78403))

(declare-fun m!78405 () Bool)

(assert (=> b!78238 m!78405))

(declare-fun m!78407 () Bool)

(assert (=> b!78239 m!78407))

(assert (=> d!18441 d!18487))

(declare-fun b!78252 () Bool)

(declare-fun c!11986 () Bool)

(declare-fun lt!36178 () (_ BitVec 64))

(assert (=> b!78252 (= c!11986 (= lt!36178 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51170 () SeekEntryResult!240)

(declare-fun e!51168 () SeekEntryResult!240)

(assert (=> b!78252 (= e!51170 e!51168)))

(declare-fun d!18489 () Bool)

(declare-fun lt!36176 () SeekEntryResult!240)

(assert (=> d!18489 (and (or ((_ is Undefined!240) lt!36176) (not ((_ is Found!240) lt!36176)) (and (bvsge (index!3095 lt!36176) #b00000000000000000000000000000000) (bvslt (index!3095 lt!36176) (size!2136 (_keys!3932 newMap!16))))) (or ((_ is Undefined!240) lt!36176) ((_ is Found!240) lt!36176) (not ((_ is MissingZero!240) lt!36176)) (and (bvsge (index!3094 lt!36176) #b00000000000000000000000000000000) (bvslt (index!3094 lt!36176) (size!2136 (_keys!3932 newMap!16))))) (or ((_ is Undefined!240) lt!36176) ((_ is Found!240) lt!36176) ((_ is MissingZero!240) lt!36176) (not ((_ is MissingVacant!240) lt!36176)) (and (bvsge (index!3097 lt!36176) #b00000000000000000000000000000000) (bvslt (index!3097 lt!36176) (size!2136 (_keys!3932 newMap!16))))) (or ((_ is Undefined!240) lt!36176) (ite ((_ is Found!240) lt!36176) (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36176)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (ite ((_ is MissingZero!240) lt!36176) (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3094 lt!36176)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!240) lt!36176) (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3097 lt!36176)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!51169 () SeekEntryResult!240)

(assert (=> d!18489 (= lt!36176 e!51169)))

(declare-fun c!11988 () Bool)

(declare-fun lt!36177 () SeekEntryResult!240)

(assert (=> d!18489 (= c!11988 (and ((_ is Intermediate!240) lt!36177) (undefined!1052 lt!36177)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3975 (_ BitVec 32)) SeekEntryResult!240)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!18489 (= lt!36177 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (mask!6268 newMap!16)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(assert (=> d!18489 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18489 (= (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)) lt!36176)))

(declare-fun b!78253 () Bool)

(assert (=> b!78253 (= e!51169 Undefined!240)))

(declare-fun b!78254 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3975 (_ BitVec 32)) SeekEntryResult!240)

(assert (=> b!78254 (= e!51168 (seekKeyOrZeroReturnVacant!0 (x!11547 lt!36177) (index!3096 lt!36177) (index!3096 lt!36177) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!78255 () Bool)

(assert (=> b!78255 (= e!51168 (MissingZero!240 (index!3096 lt!36177)))))

(declare-fun b!78256 () Bool)

(assert (=> b!78256 (= e!51169 e!51170)))

(assert (=> b!78256 (= lt!36178 (select (arr!1895 (_keys!3932 newMap!16)) (index!3096 lt!36177)))))

(declare-fun c!11987 () Bool)

(assert (=> b!78256 (= c!11987 (= lt!36178 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!78257 () Bool)

(assert (=> b!78257 (= e!51170 (Found!240 (index!3096 lt!36177)))))

(assert (= (and d!18489 c!11988) b!78253))

(assert (= (and d!18489 (not c!11988)) b!78256))

(assert (= (and b!78256 c!11987) b!78257))

(assert (= (and b!78256 (not c!11987)) b!78252))

(assert (= (and b!78252 c!11986) b!78255))

(assert (= (and b!78252 (not c!11986)) b!78254))

(declare-fun m!78409 () Bool)

(assert (=> d!18489 m!78409))

(declare-fun m!78411 () Bool)

(assert (=> d!18489 m!78411))

(assert (=> d!18489 m!77965))

(declare-fun m!78413 () Bool)

(assert (=> d!18489 m!78413))

(assert (=> d!18489 m!78413))

(assert (=> d!18489 m!77965))

(declare-fun m!78415 () Bool)

(assert (=> d!18489 m!78415))

(declare-fun m!78417 () Bool)

(assert (=> d!18489 m!78417))

(declare-fun m!78419 () Bool)

(assert (=> d!18489 m!78419))

(assert (=> b!78254 m!77965))

(declare-fun m!78421 () Bool)

(assert (=> b!78254 m!78421))

(declare-fun m!78423 () Bool)

(assert (=> b!78256 m!78423))

(assert (=> bm!7168 d!18489))

(declare-fun d!18491 () Bool)

(declare-fun e!51171 () Bool)

(assert (=> d!18491 e!51171))

(declare-fun res!40987 () Bool)

(assert (=> d!18491 (=> res!40987 e!51171)))

(declare-fun lt!36182 () Bool)

(assert (=> d!18491 (= res!40987 (not lt!36182))))

(declare-fun lt!36179 () Bool)

(assert (=> d!18491 (= lt!36182 lt!36179)))

(declare-fun lt!36180 () Unit!2257)

(declare-fun e!51172 () Unit!2257)

(assert (=> d!18491 (= lt!36180 e!51172)))

(declare-fun c!11989 () Bool)

(assert (=> d!18491 (= c!11989 lt!36179)))

(assert (=> d!18491 (= lt!36179 (containsKey!141 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!18491 (= (contains!742 lt!35983 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36182)))

(declare-fun b!78258 () Bool)

(declare-fun lt!36181 () Unit!2257)

(assert (=> b!78258 (= e!51172 lt!36181)))

(assert (=> b!78258 (= lt!36181 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78258 (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78259 () Bool)

(declare-fun Unit!2265 () Unit!2257)

(assert (=> b!78259 (= e!51172 Unit!2265)))

(declare-fun b!78260 () Bool)

(assert (=> b!78260 (= e!51171 (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!18491 c!11989) b!78258))

(assert (= (and d!18491 (not c!11989)) b!78259))

(assert (= (and d!18491 (not res!40987)) b!78260))

(assert (=> d!18491 m!78109))

(declare-fun m!78425 () Bool)

(assert (=> d!18491 m!78425))

(assert (=> b!78258 m!78109))

(declare-fun m!78427 () Bool)

(assert (=> b!78258 m!78427))

(assert (=> b!78258 m!78109))

(declare-fun m!78429 () Bool)

(assert (=> b!78258 m!78429))

(assert (=> b!78258 m!78429))

(declare-fun m!78431 () Bool)

(assert (=> b!78258 m!78431))

(assert (=> b!78260 m!78109))

(assert (=> b!78260 m!78429))

(assert (=> b!78260 m!78429))

(assert (=> b!78260 m!78431))

(assert (=> b!77987 d!18491))

(declare-fun d!18493 () Bool)

(declare-fun e!51173 () Bool)

(assert (=> d!18493 e!51173))

(declare-fun res!40988 () Bool)

(assert (=> d!18493 (=> (not res!40988) (not e!51173))))

(declare-fun lt!36184 () ListLongMap!1447)

(assert (=> d!18493 (= res!40988 (contains!742 lt!36184 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36183 () List!1507)

(assert (=> d!18493 (= lt!36184 (ListLongMap!1448 lt!36183))))

(declare-fun lt!36186 () Unit!2257)

(declare-fun lt!36185 () Unit!2257)

(assert (=> d!18493 (= lt!36186 lt!36185)))

(assert (=> d!18493 (= (getValueByKey!137 lt!36183 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18493 (= lt!36185 (lemmaContainsTupThenGetReturnValue!54 lt!36183 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18493 (= lt!36183 (insertStrictlySorted!57 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18493 (= (+!105 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36184)))

(declare-fun b!78261 () Bool)

(declare-fun res!40989 () Bool)

(assert (=> b!78261 (=> (not res!40989) (not e!51173))))

(assert (=> b!78261 (= res!40989 (= (getValueByKey!137 (toList!739 lt!36184) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78262 () Bool)

(assert (=> b!78262 (= e!51173 (contains!743 (toList!739 lt!36184) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18493 res!40988) b!78261))

(assert (= (and b!78261 res!40989) b!78262))

(declare-fun m!78433 () Bool)

(assert (=> d!18493 m!78433))

(declare-fun m!78435 () Bool)

(assert (=> d!18493 m!78435))

(declare-fun m!78437 () Bool)

(assert (=> d!18493 m!78437))

(declare-fun m!78439 () Bool)

(assert (=> d!18493 m!78439))

(declare-fun m!78441 () Bool)

(assert (=> b!78261 m!78441))

(declare-fun m!78443 () Bool)

(assert (=> b!78262 m!78443))

(assert (=> d!18443 d!18493))

(declare-fun d!18495 () Bool)

(assert (=> d!18495 (= (+!105 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (+!105 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (=> d!18495 true))

(declare-fun _$28!131 () Unit!2257)

(assert (=> d!18495 (= (choose!453 lt!35868 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) _$28!131)))

(declare-fun bs!3311 () Bool)

(assert (= bs!3311 d!18495))

(assert (=> bs!3311 m!78223))

(assert (=> bs!3311 m!78223))

(assert (=> bs!3311 m!78231))

(assert (=> bs!3311 m!78227))

(assert (=> bs!3311 m!78227))

(assert (=> bs!3311 m!78229))

(assert (=> d!18443 d!18495))

(declare-fun d!18497 () Bool)

(declare-fun e!51174 () Bool)

(assert (=> d!18497 e!51174))

(declare-fun res!40990 () Bool)

(assert (=> d!18497 (=> (not res!40990) (not e!51174))))

(declare-fun lt!36188 () ListLongMap!1447)

(assert (=> d!18497 (= res!40990 (contains!742 lt!36188 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36187 () List!1507)

(assert (=> d!18497 (= lt!36188 (ListLongMap!1448 lt!36187))))

(declare-fun lt!36190 () Unit!2257)

(declare-fun lt!36189 () Unit!2257)

(assert (=> d!18497 (= lt!36190 lt!36189)))

(assert (=> d!18497 (= (getValueByKey!137 lt!36187 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18497 (= lt!36189 (lemmaContainsTupThenGetReturnValue!54 lt!36187 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18497 (= lt!36187 (insertStrictlySorted!57 (toList!739 lt!35868) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18497 (= (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36188)))

(declare-fun b!78263 () Bool)

(declare-fun res!40991 () Bool)

(assert (=> b!78263 (=> (not res!40991) (not e!51174))))

(assert (=> b!78263 (= res!40991 (= (getValueByKey!137 (toList!739 lt!36188) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78264 () Bool)

(assert (=> b!78264 (= e!51174 (contains!743 (toList!739 lt!36188) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18497 res!40990) b!78263))

(assert (= (and b!78263 res!40991) b!78264))

(declare-fun m!78445 () Bool)

(assert (=> d!18497 m!78445))

(declare-fun m!78447 () Bool)

(assert (=> d!18497 m!78447))

(declare-fun m!78449 () Bool)

(assert (=> d!18497 m!78449))

(declare-fun m!78451 () Bool)

(assert (=> d!18497 m!78451))

(declare-fun m!78453 () Bool)

(assert (=> b!78263 m!78453))

(declare-fun m!78455 () Bool)

(assert (=> b!78264 m!78455))

(assert (=> d!18443 d!18497))

(declare-fun d!18499 () Bool)

(declare-fun e!51175 () Bool)

(assert (=> d!18499 e!51175))

(declare-fun res!40992 () Bool)

(assert (=> d!18499 (=> (not res!40992) (not e!51175))))

(declare-fun lt!36192 () ListLongMap!1447)

(assert (=> d!18499 (= res!40992 (contains!742 lt!36192 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!36191 () List!1507)

(assert (=> d!18499 (= lt!36192 (ListLongMap!1448 lt!36191))))

(declare-fun lt!36194 () Unit!2257)

(declare-fun lt!36193 () Unit!2257)

(assert (=> d!18499 (= lt!36194 lt!36193)))

(assert (=> d!18499 (= (getValueByKey!137 lt!36191 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18499 (= lt!36193 (lemmaContainsTupThenGetReturnValue!54 lt!36191 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18499 (= lt!36191 (insertStrictlySorted!57 (toList!739 lt!35868) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18499 (= (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!36192)))

(declare-fun b!78265 () Bool)

(declare-fun res!40993 () Bool)

(assert (=> b!78265 (=> (not res!40993) (not e!51175))))

(assert (=> b!78265 (= res!40993 (= (getValueByKey!137 (toList!739 lt!36192) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!78266 () Bool)

(assert (=> b!78266 (= e!51175 (contains!743 (toList!739 lt!36192) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!18499 res!40992) b!78265))

(assert (= (and b!78265 res!40993) b!78266))

(declare-fun m!78457 () Bool)

(assert (=> d!18499 m!78457))

(declare-fun m!78459 () Bool)

(assert (=> d!18499 m!78459))

(declare-fun m!78461 () Bool)

(assert (=> d!18499 m!78461))

(declare-fun m!78463 () Bool)

(assert (=> d!18499 m!78463))

(declare-fun m!78465 () Bool)

(assert (=> b!78265 m!78465))

(declare-fun m!78467 () Bool)

(assert (=> b!78266 m!78467))

(assert (=> d!18443 d!18499))

(declare-fun d!18501 () Bool)

(declare-fun e!51176 () Bool)

(assert (=> d!18501 e!51176))

(declare-fun res!40994 () Bool)

(assert (=> d!18501 (=> (not res!40994) (not e!51176))))

(declare-fun lt!36196 () ListLongMap!1447)

(assert (=> d!18501 (= res!40994 (contains!742 lt!36196 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!36195 () List!1507)

(assert (=> d!18501 (= lt!36196 (ListLongMap!1448 lt!36195))))

(declare-fun lt!36198 () Unit!2257)

(declare-fun lt!36197 () Unit!2257)

(assert (=> d!18501 (= lt!36198 lt!36197)))

(assert (=> d!18501 (= (getValueByKey!137 lt!36195 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18501 (= lt!36197 (lemmaContainsTupThenGetReturnValue!54 lt!36195 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18501 (= lt!36195 (insertStrictlySorted!57 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18501 (= (+!105 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!36196)))

(declare-fun b!78267 () Bool)

(declare-fun res!40995 () Bool)

(assert (=> b!78267 (=> (not res!40995) (not e!51176))))

(assert (=> b!78267 (= res!40995 (= (getValueByKey!137 (toList!739 lt!36196) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!78268 () Bool)

(assert (=> b!78268 (= e!51176 (contains!743 (toList!739 lt!36196) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!18501 res!40994) b!78267))

(assert (= (and b!78267 res!40995) b!78268))

(declare-fun m!78469 () Bool)

(assert (=> d!18501 m!78469))

(declare-fun m!78471 () Bool)

(assert (=> d!18501 m!78471))

(declare-fun m!78473 () Bool)

(assert (=> d!18501 m!78473))

(declare-fun m!78475 () Bool)

(assert (=> d!18501 m!78475))

(declare-fun m!78477 () Bool)

(assert (=> b!78267 m!78477))

(declare-fun m!78479 () Bool)

(assert (=> b!78268 m!78479))

(assert (=> d!18443 d!18501))

(declare-fun d!18503 () Bool)

(declare-fun res!40996 () Bool)

(declare-fun e!51177 () Bool)

(assert (=> d!18503 (=> (not res!40996) (not e!51177))))

(assert (=> d!18503 (= res!40996 (simpleValid!55 (v!2592 (underlying!278 thiss!992))))))

(assert (=> d!18503 (= (valid!313 (v!2592 (underlying!278 thiss!992))) e!51177)))

(declare-fun b!78269 () Bool)

(declare-fun res!40997 () Bool)

(assert (=> b!78269 (=> (not res!40997) (not e!51177))))

(assert (=> b!78269 (= res!40997 (= (arrayCountValidKeys!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000 (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))) (_size!415 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun b!78270 () Bool)

(declare-fun res!40998 () Bool)

(assert (=> b!78270 (=> (not res!40998) (not e!51177))))

(assert (=> b!78270 (= res!40998 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun b!78271 () Bool)

(assert (=> b!78271 (= e!51177 (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!18503 res!40996) b!78269))

(assert (= (and b!78269 res!40997) b!78270))

(assert (= (and b!78270 res!40998) b!78271))

(declare-fun m!78481 () Bool)

(assert (=> d!18503 m!78481))

(declare-fun m!78483 () Bool)

(assert (=> b!78269 m!78483))

(declare-fun m!78485 () Bool)

(assert (=> b!78270 m!78485))

(declare-fun m!78487 () Bool)

(assert (=> b!78271 m!78487))

(assert (=> d!18429 d!18503))

(declare-fun bm!7182 () Bool)

(declare-fun call!7190 () ListLongMap!1447)

(declare-fun call!7189 () ListLongMap!1447)

(declare-fun call!7191 () ListLongMap!1447)

(declare-fun c!11995 () Bool)

(declare-fun call!7185 () ListLongMap!1447)

(declare-fun c!11991 () Bool)

(assert (=> bm!7182 (= call!7191 (+!105 (ite c!11991 call!7189 (ite c!11995 call!7185 call!7190)) (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun b!78272 () Bool)

(declare-fun e!51186 () Bool)

(declare-fun lt!36213 () ListLongMap!1447)

(assert (=> b!78272 (= e!51186 (= (apply!79 lt!36213 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!78273 () Bool)

(declare-fun e!51189 () ListLongMap!1447)

(assert (=> b!78273 (= e!51189 call!7190)))

(declare-fun b!78274 () Bool)

(declare-fun e!51179 () ListLongMap!1447)

(declare-fun call!7188 () ListLongMap!1447)

(assert (=> b!78274 (= e!51179 call!7188)))

(declare-fun b!78275 () Bool)

(declare-fun c!11992 () Bool)

(assert (=> b!78275 (= c!11992 (and (not (= (bvand (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78275 (= e!51179 e!51189)))

(declare-fun b!78276 () Bool)

(declare-fun e!51184 () Bool)

(declare-fun call!7186 () Bool)

(assert (=> b!78276 (= e!51184 (not call!7186))))

(declare-fun b!78277 () Bool)

(declare-fun e!51183 () Bool)

(assert (=> b!78277 (= e!51183 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7184 () Bool)

(assert (=> bm!7184 (= call!7190 call!7185)))

(declare-fun b!78278 () Bool)

(declare-fun e!51182 () Bool)

(declare-fun call!7187 () Bool)

(assert (=> b!78278 (= e!51182 (not call!7187))))

(declare-fun b!78279 () Bool)

(declare-fun e!51181 () Bool)

(assert (=> b!78279 (= e!51181 e!51184)))

(declare-fun c!11993 () Bool)

(assert (=> b!78279 (= c!11993 (not (= (bvand (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7185 () Bool)

(assert (=> bm!7185 (= call!7187 (contains!742 lt!36213 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7186 () Bool)

(assert (=> bm!7186 (= call!7189 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36130) (mask!6268 newMap!16) (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78280 () Bool)

(assert (=> b!78280 (= e!51189 call!7188)))

(declare-fun b!78281 () Bool)

(declare-fun e!51185 () ListLongMap!1447)

(assert (=> b!78281 (= e!51185 e!51179)))

(assert (=> b!78281 (= c!11995 (and (not (= (bvand (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7187 () Bool)

(assert (=> bm!7187 (= call!7188 call!7191)))

(declare-fun b!78282 () Bool)

(declare-fun res!41004 () Bool)

(assert (=> b!78282 (=> (not res!41004) (not e!51181))))

(assert (=> b!78282 (= res!41004 e!51182)))

(declare-fun c!11994 () Bool)

(assert (=> b!78282 (= c!11994 (not (= (bvand (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78283 () Bool)

(declare-fun e!51187 () Unit!2257)

(declare-fun Unit!2266 () Unit!2257)

(assert (=> b!78283 (= e!51187 Unit!2266)))

(declare-fun b!78284 () Bool)

(declare-fun e!51180 () Bool)

(assert (=> b!78284 (= e!51182 e!51180)))

(declare-fun res!41001 () Bool)

(assert (=> b!78284 (= res!41001 call!7187)))

(assert (=> b!78284 (=> (not res!41001) (not e!51180))))

(declare-fun b!78285 () Bool)

(assert (=> b!78285 (= e!51184 e!51186)))

(declare-fun res!41003 () Bool)

(assert (=> b!78285 (= res!41003 call!7186)))

(assert (=> b!78285 (=> (not res!41003) (not e!51186))))

(declare-fun e!51190 () Bool)

(declare-fun b!78286 () Bool)

(assert (=> b!78286 (= e!51190 (= (apply!79 lt!36213 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (ite c!11979 (_values!2255 newMap!16) lt!36130)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78286 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (ite c!11979 (_values!2255 newMap!16) lt!36130))))))

(assert (=> b!78286 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun d!18505 () Bool)

(assert (=> d!18505 e!51181))

(declare-fun res!41005 () Bool)

(assert (=> d!18505 (=> (not res!41005) (not e!51181))))

(assert (=> d!18505 (= res!41005 (or (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))))

(declare-fun lt!36203 () ListLongMap!1447)

(assert (=> d!18505 (= lt!36213 lt!36203)))

(declare-fun lt!36220 () Unit!2257)

(assert (=> d!18505 (= lt!36220 e!51187)))

(declare-fun c!11990 () Bool)

(assert (=> d!18505 (= c!11990 e!51183)))

(declare-fun res!41000 () Bool)

(assert (=> d!18505 (=> (not res!41000) (not e!51183))))

(assert (=> d!18505 (= res!41000 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18505 (= lt!36203 e!51185)))

(assert (=> d!18505 (= c!11991 (and (not (= (bvand (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18505 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18505 (= (getCurrentListMap!433 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36130) (mask!6268 newMap!16) (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36213)))

(declare-fun bm!7183 () Bool)

(assert (=> bm!7183 (= call!7186 (contains!742 lt!36213 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7188 () Bool)

(assert (=> bm!7188 (= call!7185 call!7189)))

(declare-fun b!78287 () Bool)

(declare-fun lt!36202 () Unit!2257)

(assert (=> b!78287 (= e!51187 lt!36202)))

(declare-fun lt!36208 () ListLongMap!1447)

(assert (=> b!78287 (= lt!36208 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36130) (mask!6268 newMap!16) (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36201 () (_ BitVec 64))

(assert (=> b!78287 (= lt!36201 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36210 () (_ BitVec 64))

(assert (=> b!78287 (= lt!36210 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36215 () Unit!2257)

(assert (=> b!78287 (= lt!36215 (addStillContains!55 lt!36208 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) lt!36210))))

(assert (=> b!78287 (contains!742 (+!105 lt!36208 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) lt!36210)))

(declare-fun lt!36209 () Unit!2257)

(assert (=> b!78287 (= lt!36209 lt!36215)))

(declare-fun lt!36200 () ListLongMap!1447)

(assert (=> b!78287 (= lt!36200 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36130) (mask!6268 newMap!16) (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36204 () (_ BitVec 64))

(assert (=> b!78287 (= lt!36204 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36206 () (_ BitVec 64))

(assert (=> b!78287 (= lt!36206 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36205 () Unit!2257)

(assert (=> b!78287 (= lt!36205 (addApplyDifferent!55 lt!36200 lt!36204 (minValue!2170 newMap!16) lt!36206))))

(assert (=> b!78287 (= (apply!79 (+!105 lt!36200 (tuple2!2173 lt!36204 (minValue!2170 newMap!16))) lt!36206) (apply!79 lt!36200 lt!36206))))

(declare-fun lt!36199 () Unit!2257)

(assert (=> b!78287 (= lt!36199 lt!36205)))

(declare-fun lt!36217 () ListLongMap!1447)

(assert (=> b!78287 (= lt!36217 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36130) (mask!6268 newMap!16) (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36216 () (_ BitVec 64))

(assert (=> b!78287 (= lt!36216 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36218 () (_ BitVec 64))

(assert (=> b!78287 (= lt!36218 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36207 () Unit!2257)

(assert (=> b!78287 (= lt!36207 (addApplyDifferent!55 lt!36217 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) lt!36218))))

(assert (=> b!78287 (= (apply!79 (+!105 lt!36217 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) lt!36218) (apply!79 lt!36217 lt!36218))))

(declare-fun lt!36211 () Unit!2257)

(assert (=> b!78287 (= lt!36211 lt!36207)))

(declare-fun lt!36214 () ListLongMap!1447)

(assert (=> b!78287 (= lt!36214 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36130) (mask!6268 newMap!16) (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36219 () (_ BitVec 64))

(assert (=> b!78287 (= lt!36219 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36212 () (_ BitVec 64))

(assert (=> b!78287 (= lt!36212 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78287 (= lt!36202 (addApplyDifferent!55 lt!36214 lt!36219 (minValue!2170 newMap!16) lt!36212))))

(assert (=> b!78287 (= (apply!79 (+!105 lt!36214 (tuple2!2173 lt!36219 (minValue!2170 newMap!16))) lt!36212) (apply!79 lt!36214 lt!36212))))

(declare-fun b!78288 () Bool)

(declare-fun res!41007 () Bool)

(assert (=> b!78288 (=> (not res!41007) (not e!51181))))

(declare-fun e!51178 () Bool)

(assert (=> b!78288 (= res!41007 e!51178)))

(declare-fun res!41002 () Bool)

(assert (=> b!78288 (=> res!41002 e!51178)))

(declare-fun e!51188 () Bool)

(assert (=> b!78288 (= res!41002 (not e!51188))))

(declare-fun res!40999 () Bool)

(assert (=> b!78288 (=> (not res!40999) (not e!51188))))

(assert (=> b!78288 (= res!40999 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78289 () Bool)

(assert (=> b!78289 (= e!51178 e!51190)))

(declare-fun res!41006 () Bool)

(assert (=> b!78289 (=> (not res!41006) (not e!51190))))

(assert (=> b!78289 (= res!41006 (contains!742 lt!36213 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78289 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78290 () Bool)

(assert (=> b!78290 (= e!51180 (= (apply!79 lt!36213 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))))

(declare-fun b!78291 () Bool)

(assert (=> b!78291 (= e!51188 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78292 () Bool)

(assert (=> b!78292 (= e!51185 (+!105 call!7191 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!18505 c!11991) b!78292))

(assert (= (and d!18505 (not c!11991)) b!78281))

(assert (= (and b!78281 c!11995) b!78274))

(assert (= (and b!78281 (not c!11995)) b!78275))

(assert (= (and b!78275 c!11992) b!78280))

(assert (= (and b!78275 (not c!11992)) b!78273))

(assert (= (or b!78280 b!78273) bm!7184))

(assert (= (or b!78274 bm!7184) bm!7188))

(assert (= (or b!78274 b!78280) bm!7187))

(assert (= (or b!78292 bm!7188) bm!7186))

(assert (= (or b!78292 bm!7187) bm!7182))

(assert (= (and d!18505 res!41000) b!78277))

(assert (= (and d!18505 c!11990) b!78287))

(assert (= (and d!18505 (not c!11990)) b!78283))

(assert (= (and d!18505 res!41005) b!78288))

(assert (= (and b!78288 res!40999) b!78291))

(assert (= (and b!78288 (not res!41002)) b!78289))

(assert (= (and b!78289 res!41006) b!78286))

(assert (= (and b!78288 res!41007) b!78282))

(assert (= (and b!78282 c!11994) b!78284))

(assert (= (and b!78282 (not c!11994)) b!78278))

(assert (= (and b!78284 res!41001) b!78290))

(assert (= (or b!78284 b!78278) bm!7185))

(assert (= (and b!78282 res!41004) b!78279))

(assert (= (and b!78279 c!11993) b!78285))

(assert (= (and b!78279 (not c!11993)) b!78276))

(assert (= (and b!78285 res!41003) b!78272))

(assert (= (or b!78285 b!78276) bm!7183))

(declare-fun b_lambda!3507 () Bool)

(assert (=> (not b_lambda!3507) (not b!78286)))

(declare-fun t!5161 () Bool)

(declare-fun tb!1625 () Bool)

(assert (=> (and b!77851 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16)) t!5161) tb!1625))

(declare-fun result!2825 () Bool)

(assert (=> tb!1625 (= result!2825 tp_is_empty!2511)))

(assert (=> b!78286 t!5161))

(declare-fun b_and!4819 () Bool)

(assert (= b_and!4815 (and (=> t!5161 result!2825) b_and!4819)))

(declare-fun t!5163 () Bool)

(declare-fun tb!1627 () Bool)

(assert (=> (and b!77848 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 newMap!16)) t!5163) tb!1627))

(declare-fun result!2827 () Bool)

(assert (= result!2827 result!2825))

(assert (=> b!78286 t!5163))

(declare-fun b_and!4821 () Bool)

(assert (= b_and!4817 (and (=> t!5163 result!2827) b_and!4821)))

(declare-fun m!78489 () Bool)

(assert (=> b!78290 m!78489))

(declare-fun m!78491 () Bool)

(assert (=> bm!7185 m!78491))

(declare-fun m!78493 () Bool)

(assert (=> bm!7183 m!78493))

(declare-fun m!78495 () Bool)

(assert (=> b!78287 m!78495))

(declare-fun m!78497 () Bool)

(assert (=> b!78287 m!78497))

(declare-fun m!78499 () Bool)

(assert (=> b!78287 m!78499))

(declare-fun m!78501 () Bool)

(assert (=> b!78287 m!78501))

(declare-fun m!78503 () Bool)

(assert (=> b!78287 m!78503))

(declare-fun m!78505 () Bool)

(assert (=> b!78287 m!78505))

(declare-fun m!78507 () Bool)

(assert (=> b!78287 m!78507))

(declare-fun m!78509 () Bool)

(assert (=> b!78287 m!78509))

(declare-fun m!78511 () Bool)

(assert (=> b!78287 m!78511))

(declare-fun m!78513 () Bool)

(assert (=> b!78287 m!78513))

(declare-fun m!78515 () Bool)

(assert (=> b!78287 m!78515))

(declare-fun m!78517 () Bool)

(assert (=> b!78287 m!78517))

(declare-fun m!78519 () Bool)

(assert (=> b!78287 m!78519))

(declare-fun m!78521 () Bool)

(assert (=> b!78287 m!78521))

(assert (=> b!78287 m!78515))

(assert (=> b!78287 m!78499))

(declare-fun m!78523 () Bool)

(assert (=> b!78287 m!78523))

(declare-fun m!78525 () Bool)

(assert (=> b!78287 m!78525))

(declare-fun m!78527 () Bool)

(assert (=> b!78287 m!78527))

(assert (=> b!78287 m!78495))

(assert (=> b!78287 m!78503))

(assert (=> b!78286 m!78509))

(declare-fun m!78529 () Bool)

(assert (=> b!78286 m!78529))

(assert (=> b!78286 m!78509))

(declare-fun m!78531 () Bool)

(assert (=> b!78286 m!78531))

(declare-fun m!78533 () Bool)

(assert (=> b!78286 m!78533))

(declare-fun m!78535 () Bool)

(assert (=> b!78286 m!78535))

(assert (=> b!78286 m!78533))

(assert (=> b!78286 m!78531))

(assert (=> b!78277 m!78509))

(assert (=> b!78277 m!78509))

(declare-fun m!78537 () Bool)

(assert (=> b!78277 m!78537))

(declare-fun m!78539 () Bool)

(assert (=> b!78272 m!78539))

(assert (=> bm!7186 m!78525))

(declare-fun m!78541 () Bool)

(assert (=> bm!7182 m!78541))

(assert (=> b!78289 m!78509))

(assert (=> b!78289 m!78509))

(declare-fun m!78543 () Bool)

(assert (=> b!78289 m!78543))

(declare-fun m!78545 () Bool)

(assert (=> b!78292 m!78545))

(assert (=> d!18505 m!78411))

(assert (=> b!78291 m!78509))

(assert (=> b!78291 m!78509))

(assert (=> b!78291 m!78537))

(assert (=> bm!7169 d!18505))

(declare-fun d!18507 () Bool)

(declare-fun res!41012 () Bool)

(declare-fun e!51195 () Bool)

(assert (=> d!18507 (=> res!41012 e!51195)))

(assert (=> d!18507 (= res!41012 (and ((_ is Cons!1503) (toList!739 lt!35860)) (= (_1!1097 (h!2091 (toList!739 lt!35860))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(assert (=> d!18507 (= (containsKey!141 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) e!51195)))

(declare-fun b!78297 () Bool)

(declare-fun e!51196 () Bool)

(assert (=> b!78297 (= e!51195 e!51196)))

(declare-fun res!41013 () Bool)

(assert (=> b!78297 (=> (not res!41013) (not e!51196))))

(assert (=> b!78297 (= res!41013 (and (or (not ((_ is Cons!1503) (toList!739 lt!35860))) (bvsle (_1!1097 (h!2091 (toList!739 lt!35860))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))) ((_ is Cons!1503) (toList!739 lt!35860)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35860))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(declare-fun b!78298 () Bool)

(assert (=> b!78298 (= e!51196 (containsKey!141 (t!5153 (toList!739 lt!35860)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (= (and d!18507 (not res!41012)) b!78297))

(assert (= (and b!78297 res!41013) b!78298))

(assert (=> b!78298 m!77965))

(declare-fun m!78547 () Bool)

(assert (=> b!78298 m!78547))

(assert (=> d!18475 d!18507))

(declare-fun d!18509 () Bool)

(declare-fun isEmpty!327 (List!1507) Bool)

(assert (=> d!18509 (= (isEmpty!326 lt!36021) (isEmpty!327 (toList!739 lt!36021)))))

(declare-fun bs!3312 () Bool)

(assert (= bs!3312 d!18509))

(declare-fun m!78549 () Bool)

(assert (=> bs!3312 m!78549))

(assert (=> b!78032 d!18509))

(declare-fun d!18511 () Bool)

(declare-fun lt!36223 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!83 (List!1507) (InoxSet tuple2!2172))

(assert (=> d!18511 (= lt!36223 (select (content!83 (toList!739 lt!36041)) lt!35861))))

(declare-fun e!51202 () Bool)

(assert (=> d!18511 (= lt!36223 e!51202)))

(declare-fun res!41018 () Bool)

(assert (=> d!18511 (=> (not res!41018) (not e!51202))))

(assert (=> d!18511 (= res!41018 ((_ is Cons!1503) (toList!739 lt!36041)))))

(assert (=> d!18511 (= (contains!743 (toList!739 lt!36041) lt!35861) lt!36223)))

(declare-fun b!78303 () Bool)

(declare-fun e!51201 () Bool)

(assert (=> b!78303 (= e!51202 e!51201)))

(declare-fun res!41019 () Bool)

(assert (=> b!78303 (=> res!41019 e!51201)))

(assert (=> b!78303 (= res!41019 (= (h!2091 (toList!739 lt!36041)) lt!35861))))

(declare-fun b!78304 () Bool)

(assert (=> b!78304 (= e!51201 (contains!743 (t!5153 (toList!739 lt!36041)) lt!35861))))

(assert (= (and d!18511 res!41018) b!78303))

(assert (= (and b!78303 (not res!41019)) b!78304))

(declare-fun m!78551 () Bool)

(assert (=> d!18511 m!78551))

(declare-fun m!78553 () Bool)

(assert (=> d!18511 m!78553))

(declare-fun m!78555 () Bool)

(assert (=> b!78304 m!78555))

(assert (=> b!78040 d!18511))

(declare-fun d!18513 () Bool)

(assert (=> d!18513 (= (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!77989 d!18513))

(declare-fun b!78316 () Bool)

(declare-fun e!51205 () Bool)

(assert (=> b!78316 (= e!51205 (and (bvsge (extraKeys!2123 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2123 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!415 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!78314 () Bool)

(declare-fun res!41029 () Bool)

(assert (=> b!78314 (=> (not res!41029) (not e!51205))))

(declare-fun size!2140 (LongMapFixedSize!732) (_ BitVec 32))

(assert (=> b!78314 (= res!41029 (bvsge (size!2140 newMap!16) (_size!415 newMap!16)))))

(declare-fun d!18515 () Bool)

(declare-fun res!41028 () Bool)

(assert (=> d!18515 (=> (not res!41028) (not e!51205))))

(assert (=> d!18515 (= res!41028 (validMask!0 (mask!6268 newMap!16)))))

(assert (=> d!18515 (= (simpleValid!55 newMap!16) e!51205)))

(declare-fun b!78313 () Bool)

(declare-fun res!41031 () Bool)

(assert (=> b!78313 (=> (not res!41031) (not e!51205))))

(assert (=> b!78313 (= res!41031 (and (= (size!2137 (_values!2255 newMap!16)) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001)) (= (size!2136 (_keys!3932 newMap!16)) (size!2137 (_values!2255 newMap!16))) (bvsge (_size!415 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!415 newMap!16) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!78315 () Bool)

(declare-fun res!41030 () Bool)

(assert (=> b!78315 (=> (not res!41030) (not e!51205))))

(assert (=> b!78315 (= res!41030 (= (size!2140 newMap!16) (bvadd (_size!415 newMap!16) (bvsdiv (bvadd (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!18515 res!41028) b!78313))

(assert (= (and b!78313 res!41031) b!78314))

(assert (= (and b!78314 res!41029) b!78315))

(assert (= (and b!78315 res!41030) b!78316))

(declare-fun m!78557 () Bool)

(assert (=> b!78314 m!78557))

(assert (=> d!18515 m!78411))

(assert (=> b!78315 m!78557))

(assert (=> d!18453 d!18515))

(declare-fun b!78328 () Bool)

(declare-fun e!51211 () Option!143)

(assert (=> b!78328 (= e!51211 None!141)))

(declare-fun d!18517 () Bool)

(declare-fun c!12000 () Bool)

(assert (=> d!18517 (= c!12000 (and ((_ is Cons!1503) (toList!739 lt!36029)) (= (_1!1097 (h!2091 (toList!739 lt!36029))) (_1!1097 lt!35861))))))

(declare-fun e!51210 () Option!143)

(assert (=> d!18517 (= (getValueByKey!137 (toList!739 lt!36029) (_1!1097 lt!35861)) e!51210)))

(declare-fun b!78327 () Bool)

(assert (=> b!78327 (= e!51211 (getValueByKey!137 (t!5153 (toList!739 lt!36029)) (_1!1097 lt!35861)))))

(declare-fun b!78325 () Bool)

(assert (=> b!78325 (= e!51210 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36029)))))))

(declare-fun b!78326 () Bool)

(assert (=> b!78326 (= e!51210 e!51211)))

(declare-fun c!12001 () Bool)

(assert (=> b!78326 (= c!12001 (and ((_ is Cons!1503) (toList!739 lt!36029)) (not (= (_1!1097 (h!2091 (toList!739 lt!36029))) (_1!1097 lt!35861)))))))

(assert (= (and d!18517 c!12000) b!78325))

(assert (= (and d!18517 (not c!12000)) b!78326))

(assert (= (and b!78326 c!12001) b!78327))

(assert (= (and b!78326 (not c!12001)) b!78328))

(declare-fun m!78559 () Bool)

(assert (=> b!78327 m!78559))

(assert (=> b!78035 d!18517))

(declare-fun d!18519 () Bool)

(declare-fun lt!36224 () Bool)

(assert (=> d!18519 (= lt!36224 (select (content!83 (toList!739 lt!36045)) lt!35864))))

(declare-fun e!51213 () Bool)

(assert (=> d!18519 (= lt!36224 e!51213)))

(declare-fun res!41032 () Bool)

(assert (=> d!18519 (=> (not res!41032) (not e!51213))))

(assert (=> d!18519 (= res!41032 ((_ is Cons!1503) (toList!739 lt!36045)))))

(assert (=> d!18519 (= (contains!743 (toList!739 lt!36045) lt!35864) lt!36224)))

(declare-fun b!78329 () Bool)

(declare-fun e!51212 () Bool)

(assert (=> b!78329 (= e!51213 e!51212)))

(declare-fun res!41033 () Bool)

(assert (=> b!78329 (=> res!41033 e!51212)))

(assert (=> b!78329 (= res!41033 (= (h!2091 (toList!739 lt!36045)) lt!35864))))

(declare-fun b!78330 () Bool)

(assert (=> b!78330 (= e!51212 (contains!743 (t!5153 (toList!739 lt!36045)) lt!35864))))

(assert (= (and d!18519 res!41032) b!78329))

(assert (= (and b!78329 (not res!41033)) b!78330))

(declare-fun m!78561 () Bool)

(assert (=> d!18519 m!78561))

(declare-fun m!78563 () Bool)

(assert (=> d!18519 m!78563))

(declare-fun m!78565 () Bool)

(assert (=> b!78330 m!78565))

(assert (=> b!78042 d!18519))

(declare-fun d!18521 () Bool)

(assert (=> d!18521 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36129 (zeroValue!2170 newMap!16) lt!35856 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36227 () Unit!2257)

(declare-fun choose!455 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 V!2995 Int) Unit!2257)

(assert (=> d!18521 (= lt!36227 (choose!455 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36129 (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) lt!35856 (defaultEntry!2272 newMap!16)))))

(assert (=> d!18521 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18521 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36129 (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) lt!35856 (defaultEntry!2272 newMap!16)) lt!36227)))

(declare-fun bs!3313 () Bool)

(assert (= bs!3313 d!18521))

(declare-fun m!78567 () Bool)

(assert (=> bs!3313 m!78567))

(declare-fun m!78569 () Bool)

(assert (=> bs!3313 m!78569))

(assert (=> bs!3313 m!78087))

(assert (=> bs!3313 m!78087))

(declare-fun m!78571 () Bool)

(assert (=> bs!3313 m!78571))

(assert (=> bs!3313 m!78411))

(assert (=> b!78203 d!18521))

(declare-fun d!18523 () Bool)

(declare-fun res!41034 () Bool)

(declare-fun e!51214 () Bool)

(assert (=> d!18523 (=> res!41034 e!51214)))

(assert (=> d!18523 (= res!41034 (= (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!18523 (= (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000) e!51214)))

(declare-fun b!78331 () Bool)

(declare-fun e!51215 () Bool)

(assert (=> b!78331 (= e!51214 e!51215)))

(declare-fun res!41035 () Bool)

(assert (=> b!78331 (=> (not res!41035) (not e!51215))))

(assert (=> b!78331 (= res!41035 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78332 () Bool)

(assert (=> b!78332 (= e!51215 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!18523 (not res!41034)) b!78331))

(assert (= (and b!78331 res!41035) b!78332))

(assert (=> d!18523 m!78509))

(assert (=> b!78332 m!77965))

(declare-fun m!78573 () Bool)

(assert (=> b!78332 m!78573))

(assert (=> bm!7164 d!18523))

(declare-fun d!18525 () Bool)

(declare-fun get!1176 (Option!143) V!2995)

(assert (=> d!18525 (= (apply!79 lt!36021 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1176 (getValueByKey!137 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3314 () Bool)

(assert (= bs!3314 d!18525))

(assert (=> bs!3314 m!78109))

(declare-fun m!78575 () Bool)

(assert (=> bs!3314 m!78575))

(assert (=> bs!3314 m!78575))

(declare-fun m!78577 () Bool)

(assert (=> bs!3314 m!78577))

(assert (=> b!78025 d!18525))

(declare-fun d!18527 () Bool)

(declare-fun c!12002 () Bool)

(assert (=> d!18527 (= c!12002 ((_ is ValueCellFull!912) (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!51216 () V!2995)

(assert (=> d!18527 (= (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51216)))

(declare-fun b!78333 () Bool)

(assert (=> b!78333 (= e!51216 (get!1174 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78334 () Bool)

(assert (=> b!78334 (= e!51216 (get!1175 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18527 c!12002) b!78333))

(assert (= (and d!18527 (not c!12002)) b!78334))

(assert (=> b!78333 m!78129))

(assert (=> b!78333 m!78001))

(declare-fun m!78579 () Bool)

(assert (=> b!78333 m!78579))

(assert (=> b!78334 m!78129))

(assert (=> b!78334 m!78001))

(declare-fun m!78581 () Bool)

(assert (=> b!78334 m!78581))

(assert (=> b!78025 d!18527))

(assert (=> d!18427 d!18451))

(declare-fun d!18529 () Bool)

(declare-fun e!51219 () Bool)

(assert (=> d!18529 e!51219))

(declare-fun c!12005 () Bool)

(assert (=> d!18529 (= c!12005 (and (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!18529 true))

(declare-fun _$29!99 () Unit!2257)

(assert (=> d!18529 (= (choose!454 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))) _$29!99)))

(declare-fun b!78339 () Bool)

(assert (=> b!78339 (= e!51219 (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!78340 () Bool)

(assert (=> b!78340 (= e!51219 (ite (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!18529 c!12005) b!78339))

(assert (= (and d!18529 (not c!12005)) b!78340))

(assert (=> b!78339 m!77965))

(assert (=> b!78339 m!77969))

(assert (=> d!18467 d!18529))

(assert (=> d!18467 d!18451))

(declare-fun d!18531 () Bool)

(declare-fun e!51220 () Bool)

(assert (=> d!18531 e!51220))

(declare-fun res!41036 () Bool)

(assert (=> d!18531 (=> res!41036 e!51220)))

(declare-fun lt!36231 () Bool)

(assert (=> d!18531 (= res!41036 (not lt!36231))))

(declare-fun lt!36228 () Bool)

(assert (=> d!18531 (= lt!36231 lt!36228)))

(declare-fun lt!36229 () Unit!2257)

(declare-fun e!51221 () Unit!2257)

(assert (=> d!18531 (= lt!36229 e!51221)))

(declare-fun c!12006 () Bool)

(assert (=> d!18531 (= c!12006 lt!36228)))

(assert (=> d!18531 (= lt!36228 (containsKey!141 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))

(assert (=> d!18531 (= (contains!742 e!51131 (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))) lt!36231)))

(declare-fun b!78341 () Bool)

(declare-fun lt!36230 () Unit!2257)

(assert (=> b!78341 (= e!51221 lt!36230)))

(assert (=> b!78341 (= lt!36230 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))

(assert (=> b!78341 (isDefined!90 (getValueByKey!137 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))

(declare-fun b!78342 () Bool)

(declare-fun Unit!2267 () Unit!2257)

(assert (=> b!78342 (= e!51221 Unit!2267)))

(declare-fun b!78343 () Bool)

(assert (=> b!78343 (= e!51220 (isDefined!90 (getValueByKey!137 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))))))))

(assert (= (and d!18531 c!12006) b!78341))

(assert (= (and d!18531 (not c!12006)) b!78342))

(assert (= (and d!18531 (not res!41036)) b!78343))

(declare-fun m!78583 () Bool)

(assert (=> d!18531 m!78583))

(declare-fun m!78585 () Bool)

(assert (=> b!78341 m!78585))

(declare-fun m!78587 () Bool)

(assert (=> b!78341 m!78587))

(assert (=> b!78341 m!78587))

(declare-fun m!78589 () Bool)

(assert (=> b!78341 m!78589))

(assert (=> b!78343 m!78587))

(assert (=> b!78343 m!78587))

(assert (=> b!78343 m!78589))

(assert (=> bm!7173 d!18531))

(declare-fun d!18533 () Bool)

(declare-fun e!51222 () Bool)

(assert (=> d!18533 e!51222))

(declare-fun res!41037 () Bool)

(assert (=> d!18533 (=> res!41037 e!51222)))

(declare-fun lt!36235 () Bool)

(assert (=> d!18533 (= res!41037 (not lt!36235))))

(declare-fun lt!36232 () Bool)

(assert (=> d!18533 (= lt!36235 lt!36232)))

(declare-fun lt!36233 () Unit!2257)

(declare-fun e!51223 () Unit!2257)

(assert (=> d!18533 (= lt!36233 e!51223)))

(declare-fun c!12007 () Bool)

(assert (=> d!18533 (= c!12007 lt!36232)))

(assert (=> d!18533 (= lt!36232 (containsKey!141 (toList!739 lt!36029) (_1!1097 lt!35861)))))

(assert (=> d!18533 (= (contains!742 lt!36029 (_1!1097 lt!35861)) lt!36235)))

(declare-fun b!78344 () Bool)

(declare-fun lt!36234 () Unit!2257)

(assert (=> b!78344 (= e!51223 lt!36234)))

(assert (=> b!78344 (= lt!36234 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36029) (_1!1097 lt!35861)))))

(assert (=> b!78344 (isDefined!90 (getValueByKey!137 (toList!739 lt!36029) (_1!1097 lt!35861)))))

(declare-fun b!78345 () Bool)

(declare-fun Unit!2268 () Unit!2257)

(assert (=> b!78345 (= e!51223 Unit!2268)))

(declare-fun b!78346 () Bool)

(assert (=> b!78346 (= e!51222 (isDefined!90 (getValueByKey!137 (toList!739 lt!36029) (_1!1097 lt!35861))))))

(assert (= (and d!18533 c!12007) b!78344))

(assert (= (and d!18533 (not c!12007)) b!78345))

(assert (= (and d!18533 (not res!41037)) b!78346))

(declare-fun m!78591 () Bool)

(assert (=> d!18533 m!78591))

(declare-fun m!78593 () Bool)

(assert (=> b!78344 m!78593))

(assert (=> b!78344 m!78197))

(assert (=> b!78344 m!78197))

(declare-fun m!78595 () Bool)

(assert (=> b!78344 m!78595))

(assert (=> b!78346 m!78197))

(assert (=> b!78346 m!78197))

(assert (=> b!78346 m!78595))

(assert (=> d!18437 d!18533))

(declare-fun b!78350 () Bool)

(declare-fun e!51225 () Option!143)

(assert (=> b!78350 (= e!51225 None!141)))

(declare-fun d!18535 () Bool)

(declare-fun c!12008 () Bool)

(assert (=> d!18535 (= c!12008 (and ((_ is Cons!1503) lt!36028) (= (_1!1097 (h!2091 lt!36028)) (_1!1097 lt!35861))))))

(declare-fun e!51224 () Option!143)

(assert (=> d!18535 (= (getValueByKey!137 lt!36028 (_1!1097 lt!35861)) e!51224)))

(declare-fun b!78349 () Bool)

(assert (=> b!78349 (= e!51225 (getValueByKey!137 (t!5153 lt!36028) (_1!1097 lt!35861)))))

(declare-fun b!78347 () Bool)

(assert (=> b!78347 (= e!51224 (Some!142 (_2!1097 (h!2091 lt!36028))))))

(declare-fun b!78348 () Bool)

(assert (=> b!78348 (= e!51224 e!51225)))

(declare-fun c!12009 () Bool)

(assert (=> b!78348 (= c!12009 (and ((_ is Cons!1503) lt!36028) (not (= (_1!1097 (h!2091 lt!36028)) (_1!1097 lt!35861)))))))

(assert (= (and d!18535 c!12008) b!78347))

(assert (= (and d!18535 (not c!12008)) b!78348))

(assert (= (and b!78348 c!12009) b!78349))

(assert (= (and b!78348 (not c!12009)) b!78350))

(declare-fun m!78597 () Bool)

(assert (=> b!78349 m!78597))

(assert (=> d!18437 d!18535))

(declare-fun d!18537 () Bool)

(assert (=> d!18537 (= (getValueByKey!137 lt!36028 (_1!1097 lt!35861)) (Some!142 (_2!1097 lt!35861)))))

(declare-fun lt!36238 () Unit!2257)

(declare-fun choose!456 (List!1507 (_ BitVec 64) V!2995) Unit!2257)

(assert (=> d!18537 (= lt!36238 (choose!456 lt!36028 (_1!1097 lt!35861) (_2!1097 lt!35861)))))

(declare-fun e!51228 () Bool)

(assert (=> d!18537 e!51228))

(declare-fun res!41042 () Bool)

(assert (=> d!18537 (=> (not res!41042) (not e!51228))))

(declare-fun isStrictlySorted!295 (List!1507) Bool)

(assert (=> d!18537 (= res!41042 (isStrictlySorted!295 lt!36028))))

(assert (=> d!18537 (= (lemmaContainsTupThenGetReturnValue!54 lt!36028 (_1!1097 lt!35861) (_2!1097 lt!35861)) lt!36238)))

(declare-fun b!78355 () Bool)

(declare-fun res!41043 () Bool)

(assert (=> b!78355 (=> (not res!41043) (not e!51228))))

(assert (=> b!78355 (= res!41043 (containsKey!141 lt!36028 (_1!1097 lt!35861)))))

(declare-fun b!78356 () Bool)

(assert (=> b!78356 (= e!51228 (contains!743 lt!36028 (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(assert (= (and d!18537 res!41042) b!78355))

(assert (= (and b!78355 res!41043) b!78356))

(assert (=> d!18537 m!78191))

(declare-fun m!78599 () Bool)

(assert (=> d!18537 m!78599))

(declare-fun m!78601 () Bool)

(assert (=> d!18537 m!78601))

(declare-fun m!78603 () Bool)

(assert (=> b!78355 m!78603))

(declare-fun m!78605 () Bool)

(assert (=> b!78356 m!78605))

(assert (=> d!18437 d!18537))

(declare-fun c!12020 () Bool)

(declare-fun c!12021 () Bool)

(declare-fun b!78377 () Bool)

(declare-fun e!51239 () List!1507)

(assert (=> b!78377 (= e!51239 (ite c!12021 (t!5153 (toList!739 lt!35868)) (ite c!12020 (Cons!1503 (h!2091 (toList!739 lt!35868)) (t!5153 (toList!739 lt!35868))) Nil!1504)))))

(declare-fun b!78378 () Bool)

(declare-fun e!51243 () List!1507)

(declare-fun call!7200 () List!1507)

(assert (=> b!78378 (= e!51243 call!7200)))

(declare-fun bm!7195 () Bool)

(declare-fun call!7198 () List!1507)

(declare-fun call!7199 () List!1507)

(assert (=> bm!7195 (= call!7198 call!7199)))

(declare-fun b!78379 () Bool)

(assert (=> b!78379 (= c!12020 (and ((_ is Cons!1503) (toList!739 lt!35868)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 lt!35861))))))

(declare-fun e!51241 () List!1507)

(declare-fun e!51240 () List!1507)

(assert (=> b!78379 (= e!51241 e!51240)))

(declare-fun b!78380 () Bool)

(assert (=> b!78380 (= e!51239 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35868)) (_1!1097 lt!35861) (_2!1097 lt!35861)))))

(declare-fun b!78381 () Bool)

(declare-fun res!41049 () Bool)

(declare-fun e!51242 () Bool)

(assert (=> b!78381 (=> (not res!41049) (not e!51242))))

(declare-fun lt!36241 () List!1507)

(assert (=> b!78381 (= res!41049 (containsKey!141 lt!36241 (_1!1097 lt!35861)))))

(declare-fun bm!7196 () Bool)

(declare-fun c!12018 () Bool)

(declare-fun $colon$colon!69 (List!1507 tuple2!2172) List!1507)

(assert (=> bm!7196 (= call!7200 ($colon$colon!69 e!51239 (ite c!12018 (h!2091 (toList!739 lt!35868)) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861)))))))

(declare-fun c!12019 () Bool)

(assert (=> bm!7196 (= c!12019 c!12018)))

(declare-fun b!78382 () Bool)

(assert (=> b!78382 (= e!51243 e!51241)))

(assert (=> b!78382 (= c!12021 (and ((_ is Cons!1503) (toList!739 lt!35868)) (= (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 lt!35861))))))

(declare-fun b!78384 () Bool)

(assert (=> b!78384 (= e!51241 call!7199)))

(declare-fun b!78385 () Bool)

(assert (=> b!78385 (= e!51242 (contains!743 lt!36241 (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun b!78383 () Bool)

(assert (=> b!78383 (= e!51240 call!7198)))

(declare-fun d!18539 () Bool)

(assert (=> d!18539 e!51242))

(declare-fun res!41048 () Bool)

(assert (=> d!18539 (=> (not res!41048) (not e!51242))))

(assert (=> d!18539 (= res!41048 (isStrictlySorted!295 lt!36241))))

(assert (=> d!18539 (= lt!36241 e!51243)))

(assert (=> d!18539 (= c!12018 (and ((_ is Cons!1503) (toList!739 lt!35868)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 lt!35861))))))

(assert (=> d!18539 (isStrictlySorted!295 (toList!739 lt!35868))))

(assert (=> d!18539 (= (insertStrictlySorted!57 (toList!739 lt!35868) (_1!1097 lt!35861) (_2!1097 lt!35861)) lt!36241)))

(declare-fun bm!7197 () Bool)

(assert (=> bm!7197 (= call!7199 call!7200)))

(declare-fun b!78386 () Bool)

(assert (=> b!78386 (= e!51240 call!7198)))

(assert (= (and d!18539 c!12018) b!78378))

(assert (= (and d!18539 (not c!12018)) b!78382))

(assert (= (and b!78382 c!12021) b!78384))

(assert (= (and b!78382 (not c!12021)) b!78379))

(assert (= (and b!78379 c!12020) b!78383))

(assert (= (and b!78379 (not c!12020)) b!78386))

(assert (= (or b!78383 b!78386) bm!7195))

(assert (= (or b!78384 bm!7195) bm!7197))

(assert (= (or b!78378 bm!7197) bm!7196))

(assert (= (and bm!7196 c!12019) b!78380))

(assert (= (and bm!7196 (not c!12019)) b!78377))

(assert (= (and d!18539 res!41048) b!78381))

(assert (= (and b!78381 res!41049) b!78385))

(declare-fun m!78607 () Bool)

(assert (=> b!78385 m!78607))

(declare-fun m!78609 () Bool)

(assert (=> d!18539 m!78609))

(declare-fun m!78611 () Bool)

(assert (=> d!18539 m!78611))

(declare-fun m!78613 () Bool)

(assert (=> b!78380 m!78613))

(declare-fun m!78615 () Bool)

(assert (=> b!78381 m!78615))

(declare-fun m!78617 () Bool)

(assert (=> bm!7196 m!78617))

(assert (=> d!18437 d!18539))

(declare-fun b!78390 () Bool)

(declare-fun e!51245 () Option!143)

(assert (=> b!78390 (= e!51245 None!141)))

(declare-fun d!18541 () Bool)

(declare-fun c!12022 () Bool)

(assert (=> d!18541 (= c!12022 (and ((_ is Cons!1503) (toList!739 lt!36000)) (= (_1!1097 (h!2091 (toList!739 lt!36000))) (_1!1097 lt!35870))))))

(declare-fun e!51244 () Option!143)

(assert (=> d!18541 (= (getValueByKey!137 (toList!739 lt!36000) (_1!1097 lt!35870)) e!51244)))

(declare-fun b!78389 () Bool)

(assert (=> b!78389 (= e!51245 (getValueByKey!137 (t!5153 (toList!739 lt!36000)) (_1!1097 lt!35870)))))

(declare-fun b!78387 () Bool)

(assert (=> b!78387 (= e!51244 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36000)))))))

(declare-fun b!78388 () Bool)

(assert (=> b!78388 (= e!51244 e!51245)))

(declare-fun c!12023 () Bool)

(assert (=> b!78388 (= c!12023 (and ((_ is Cons!1503) (toList!739 lt!36000)) (not (= (_1!1097 (h!2091 (toList!739 lt!36000))) (_1!1097 lt!35870)))))))

(assert (= (and d!18541 c!12022) b!78387))

(assert (= (and d!18541 (not c!12022)) b!78388))

(assert (= (and b!78388 c!12023) b!78389))

(assert (= (and b!78388 (not c!12023)) b!78390))

(declare-fun m!78619 () Bool)

(assert (=> b!78389 m!78619))

(assert (=> b!77995 d!18541))

(assert (=> b!78027 d!18527))

(declare-fun d!18543 () Bool)

(assert (=> d!18543 (not (contains!742 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)) lt!36027))))

(declare-fun lt!36244 () Unit!2257)

(declare-fun choose!457 (ListLongMap!1447 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2257)

(assert (=> d!18543 (= lt!36244 (choose!457 lt!36025 lt!36023 lt!36026 lt!36027))))

(declare-fun e!51248 () Bool)

(assert (=> d!18543 e!51248))

(declare-fun res!41052 () Bool)

(assert (=> d!18543 (=> (not res!41052) (not e!51248))))

(assert (=> d!18543 (= res!41052 (not (contains!742 lt!36025 lt!36027)))))

(assert (=> d!18543 (= (addStillNotContains!28 lt!36025 lt!36023 lt!36026 lt!36027) lt!36244)))

(declare-fun b!78394 () Bool)

(assert (=> b!78394 (= e!51248 (not (= lt!36023 lt!36027)))))

(assert (= (and d!18543 res!41052) b!78394))

(assert (=> d!18543 m!78185))

(assert (=> d!18543 m!78185))

(assert (=> d!18543 m!78187))

(declare-fun m!78621 () Bool)

(assert (=> d!18543 m!78621))

(declare-fun m!78623 () Bool)

(assert (=> d!18543 m!78623))

(assert (=> b!78027 d!18543))

(declare-fun d!18545 () Bool)

(declare-fun e!51249 () Bool)

(assert (=> d!18545 e!51249))

(declare-fun res!41053 () Bool)

(assert (=> d!18545 (=> (not res!41053) (not e!51249))))

(declare-fun lt!36246 () ListLongMap!1447)

(assert (=> d!18545 (= res!41053 (contains!742 lt!36246 (_1!1097 (tuple2!2173 lt!36023 lt!36026))))))

(declare-fun lt!36245 () List!1507)

(assert (=> d!18545 (= lt!36246 (ListLongMap!1448 lt!36245))))

(declare-fun lt!36248 () Unit!2257)

(declare-fun lt!36247 () Unit!2257)

(assert (=> d!18545 (= lt!36248 lt!36247)))

(assert (=> d!18545 (= (getValueByKey!137 lt!36245 (_1!1097 (tuple2!2173 lt!36023 lt!36026))) (Some!142 (_2!1097 (tuple2!2173 lt!36023 lt!36026))))))

(assert (=> d!18545 (= lt!36247 (lemmaContainsTupThenGetReturnValue!54 lt!36245 (_1!1097 (tuple2!2173 lt!36023 lt!36026)) (_2!1097 (tuple2!2173 lt!36023 lt!36026))))))

(assert (=> d!18545 (= lt!36245 (insertStrictlySorted!57 (toList!739 lt!36025) (_1!1097 (tuple2!2173 lt!36023 lt!36026)) (_2!1097 (tuple2!2173 lt!36023 lt!36026))))))

(assert (=> d!18545 (= (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)) lt!36246)))

(declare-fun b!78395 () Bool)

(declare-fun res!41054 () Bool)

(assert (=> b!78395 (=> (not res!41054) (not e!51249))))

(assert (=> b!78395 (= res!41054 (= (getValueByKey!137 (toList!739 lt!36246) (_1!1097 (tuple2!2173 lt!36023 lt!36026))) (Some!142 (_2!1097 (tuple2!2173 lt!36023 lt!36026)))))))

(declare-fun b!78396 () Bool)

(assert (=> b!78396 (= e!51249 (contains!743 (toList!739 lt!36246) (tuple2!2173 lt!36023 lt!36026)))))

(assert (= (and d!18545 res!41053) b!78395))

(assert (= (and b!78395 res!41054) b!78396))

(declare-fun m!78625 () Bool)

(assert (=> d!18545 m!78625))

(declare-fun m!78627 () Bool)

(assert (=> d!18545 m!78627))

(declare-fun m!78629 () Bool)

(assert (=> d!18545 m!78629))

(declare-fun m!78631 () Bool)

(assert (=> d!18545 m!78631))

(declare-fun m!78633 () Bool)

(assert (=> b!78395 m!78633))

(declare-fun m!78635 () Bool)

(assert (=> b!78396 m!78635))

(assert (=> b!78027 d!18545))

(declare-fun d!18547 () Bool)

(declare-fun e!51250 () Bool)

(assert (=> d!18547 e!51250))

(declare-fun res!41055 () Bool)

(assert (=> d!18547 (=> res!41055 e!51250)))

(declare-fun lt!36252 () Bool)

(assert (=> d!18547 (= res!41055 (not lt!36252))))

(declare-fun lt!36249 () Bool)

(assert (=> d!18547 (= lt!36252 lt!36249)))

(declare-fun lt!36250 () Unit!2257)

(declare-fun e!51251 () Unit!2257)

(assert (=> d!18547 (= lt!36250 e!51251)))

(declare-fun c!12024 () Bool)

(assert (=> d!18547 (= c!12024 lt!36249)))

(assert (=> d!18547 (= lt!36249 (containsKey!141 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027))))

(assert (=> d!18547 (= (contains!742 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)) lt!36027) lt!36252)))

(declare-fun b!78397 () Bool)

(declare-fun lt!36251 () Unit!2257)

(assert (=> b!78397 (= e!51251 lt!36251)))

(assert (=> b!78397 (= lt!36251 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027))))

(assert (=> b!78397 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027))))

(declare-fun b!78398 () Bool)

(declare-fun Unit!2269 () Unit!2257)

(assert (=> b!78398 (= e!51251 Unit!2269)))

(declare-fun b!78399 () Bool)

(assert (=> b!78399 (= e!51250 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027)))))

(assert (= (and d!18547 c!12024) b!78397))

(assert (= (and d!18547 (not c!12024)) b!78398))

(assert (= (and d!18547 (not res!41055)) b!78399))

(declare-fun m!78637 () Bool)

(assert (=> d!18547 m!78637))

(declare-fun m!78639 () Bool)

(assert (=> b!78397 m!78639))

(declare-fun m!78641 () Bool)

(assert (=> b!78397 m!78641))

(assert (=> b!78397 m!78641))

(declare-fun m!78643 () Bool)

(assert (=> b!78397 m!78643))

(assert (=> b!78399 m!78641))

(assert (=> b!78399 m!78641))

(assert (=> b!78399 m!78643))

(assert (=> b!78027 d!18547))

(declare-fun d!18549 () Bool)

(declare-fun e!51252 () Bool)

(assert (=> d!18549 e!51252))

(declare-fun res!41056 () Bool)

(assert (=> d!18549 (=> (not res!41056) (not e!51252))))

(declare-fun lt!36254 () ListLongMap!1447)

(assert (=> d!18549 (= res!41056 (contains!742 lt!36254 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!36253 () List!1507)

(assert (=> d!18549 (= lt!36254 (ListLongMap!1448 lt!36253))))

(declare-fun lt!36256 () Unit!2257)

(declare-fun lt!36255 () Unit!2257)

(assert (=> d!18549 (= lt!36256 lt!36255)))

(assert (=> d!18549 (= (getValueByKey!137 lt!36253 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18549 (= lt!36255 (lemmaContainsTupThenGetReturnValue!54 lt!36253 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18549 (= lt!36253 (insertStrictlySorted!57 (toList!739 call!7109) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18549 (= (+!105 call!7109 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!36254)))

(declare-fun b!78400 () Bool)

(declare-fun res!41057 () Bool)

(assert (=> b!78400 (=> (not res!41057) (not e!51252))))

(assert (=> b!78400 (= res!41057 (= (getValueByKey!137 (toList!739 lt!36254) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!78401 () Bool)

(assert (=> b!78401 (= e!51252 (contains!743 (toList!739 lt!36254) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!18549 res!41056) b!78400))

(assert (= (and b!78400 res!41057) b!78401))

(declare-fun m!78645 () Bool)

(assert (=> d!18549 m!78645))

(declare-fun m!78647 () Bool)

(assert (=> d!18549 m!78647))

(declare-fun m!78649 () Bool)

(assert (=> d!18549 m!78649))

(declare-fun m!78651 () Bool)

(assert (=> d!18549 m!78651))

(declare-fun m!78653 () Bool)

(assert (=> b!78400 m!78653))

(declare-fun m!78655 () Bool)

(assert (=> b!78401 m!78655))

(assert (=> b!78027 d!18549))

(declare-fun d!18551 () Bool)

(assert (=> d!18551 (= (apply!79 lt!35983 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1176 (getValueByKey!137 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3315 () Bool)

(assert (= bs!3315 d!18551))

(assert (=> bs!3315 m!78109))

(assert (=> bs!3315 m!78429))

(assert (=> bs!3315 m!78429))

(declare-fun m!78657 () Bool)

(assert (=> bs!3315 m!78657))

(assert (=> b!77984 d!18551))

(assert (=> b!77984 d!18527))

(declare-fun d!18553 () Bool)

(declare-fun e!51253 () Bool)

(assert (=> d!18553 e!51253))

(declare-fun res!41058 () Bool)

(assert (=> d!18553 (=> res!41058 e!51253)))

(declare-fun lt!36260 () Bool)

(assert (=> d!18553 (= res!41058 (not lt!36260))))

(declare-fun lt!36257 () Bool)

(assert (=> d!18553 (= lt!36260 lt!36257)))

(declare-fun lt!36258 () Unit!2257)

(declare-fun e!51254 () Unit!2257)

(assert (=> d!18553 (= lt!36258 e!51254)))

(declare-fun c!12025 () Bool)

(assert (=> d!18553 (= c!12025 lt!36257)))

(assert (=> d!18553 (= lt!36257 (containsKey!141 (toList!739 lt!36033) (_1!1097 lt!35864)))))

(assert (=> d!18553 (= (contains!742 lt!36033 (_1!1097 lt!35864)) lt!36260)))

(declare-fun b!78402 () Bool)

(declare-fun lt!36259 () Unit!2257)

(assert (=> b!78402 (= e!51254 lt!36259)))

(assert (=> b!78402 (= lt!36259 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36033) (_1!1097 lt!35864)))))

(assert (=> b!78402 (isDefined!90 (getValueByKey!137 (toList!739 lt!36033) (_1!1097 lt!35864)))))

(declare-fun b!78403 () Bool)

(declare-fun Unit!2270 () Unit!2257)

(assert (=> b!78403 (= e!51254 Unit!2270)))

(declare-fun b!78404 () Bool)

(assert (=> b!78404 (= e!51253 (isDefined!90 (getValueByKey!137 (toList!739 lt!36033) (_1!1097 lt!35864))))))

(assert (= (and d!18553 c!12025) b!78402))

(assert (= (and d!18553 (not c!12025)) b!78403))

(assert (= (and d!18553 (not res!41058)) b!78404))

(declare-fun m!78659 () Bool)

(assert (=> d!18553 m!78659))

(declare-fun m!78661 () Bool)

(assert (=> b!78402 m!78661))

(assert (=> b!78402 m!78209))

(assert (=> b!78402 m!78209))

(declare-fun m!78663 () Bool)

(assert (=> b!78402 m!78663))

(assert (=> b!78404 m!78209))

(assert (=> b!78404 m!78209))

(assert (=> b!78404 m!78663))

(assert (=> d!18439 d!18553))

(declare-fun b!78408 () Bool)

(declare-fun e!51256 () Option!143)

(assert (=> b!78408 (= e!51256 None!141)))

(declare-fun d!18555 () Bool)

(declare-fun c!12026 () Bool)

(assert (=> d!18555 (= c!12026 (and ((_ is Cons!1503) lt!36032) (= (_1!1097 (h!2091 lt!36032)) (_1!1097 lt!35864))))))

(declare-fun e!51255 () Option!143)

(assert (=> d!18555 (= (getValueByKey!137 lt!36032 (_1!1097 lt!35864)) e!51255)))

(declare-fun b!78407 () Bool)

(assert (=> b!78407 (= e!51256 (getValueByKey!137 (t!5153 lt!36032) (_1!1097 lt!35864)))))

(declare-fun b!78405 () Bool)

(assert (=> b!78405 (= e!51255 (Some!142 (_2!1097 (h!2091 lt!36032))))))

(declare-fun b!78406 () Bool)

(assert (=> b!78406 (= e!51255 e!51256)))

(declare-fun c!12027 () Bool)

(assert (=> b!78406 (= c!12027 (and ((_ is Cons!1503) lt!36032) (not (= (_1!1097 (h!2091 lt!36032)) (_1!1097 lt!35864)))))))

(assert (= (and d!18555 c!12026) b!78405))

(assert (= (and d!18555 (not c!12026)) b!78406))

(assert (= (and b!78406 c!12027) b!78407))

(assert (= (and b!78406 (not c!12027)) b!78408))

(declare-fun m!78665 () Bool)

(assert (=> b!78407 m!78665))

(assert (=> d!18439 d!18555))

(declare-fun d!18557 () Bool)

(assert (=> d!18557 (= (getValueByKey!137 lt!36032 (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864)))))

(declare-fun lt!36261 () Unit!2257)

(assert (=> d!18557 (= lt!36261 (choose!456 lt!36032 (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(declare-fun e!51257 () Bool)

(assert (=> d!18557 e!51257))

(declare-fun res!41059 () Bool)

(assert (=> d!18557 (=> (not res!41059) (not e!51257))))

(assert (=> d!18557 (= res!41059 (isStrictlySorted!295 lt!36032))))

(assert (=> d!18557 (= (lemmaContainsTupThenGetReturnValue!54 lt!36032 (_1!1097 lt!35864) (_2!1097 lt!35864)) lt!36261)))

(declare-fun b!78409 () Bool)

(declare-fun res!41060 () Bool)

(assert (=> b!78409 (=> (not res!41060) (not e!51257))))

(assert (=> b!78409 (= res!41060 (containsKey!141 lt!36032 (_1!1097 lt!35864)))))

(declare-fun b!78410 () Bool)

(assert (=> b!78410 (= e!51257 (contains!743 lt!36032 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(assert (= (and d!18557 res!41059) b!78409))

(assert (= (and b!78409 res!41060) b!78410))

(assert (=> d!18557 m!78203))

(declare-fun m!78667 () Bool)

(assert (=> d!18557 m!78667))

(declare-fun m!78669 () Bool)

(assert (=> d!18557 m!78669))

(declare-fun m!78671 () Bool)

(assert (=> b!78409 m!78671))

(declare-fun m!78673 () Bool)

(assert (=> b!78410 m!78673))

(assert (=> d!18439 d!18557))

(declare-fun c!12030 () Bool)

(declare-fun b!78411 () Bool)

(declare-fun c!12031 () Bool)

(declare-fun e!51258 () List!1507)

(assert (=> b!78411 (= e!51258 (ite c!12031 (t!5153 (toList!739 (+!105 lt!35869 lt!35870))) (ite c!12030 (Cons!1503 (h!2091 (toList!739 (+!105 lt!35869 lt!35870))) (t!5153 (toList!739 (+!105 lt!35869 lt!35870)))) Nil!1504)))))

(declare-fun b!78412 () Bool)

(declare-fun e!51262 () List!1507)

(declare-fun call!7203 () List!1507)

(assert (=> b!78412 (= e!51262 call!7203)))

(declare-fun bm!7198 () Bool)

(declare-fun call!7201 () List!1507)

(declare-fun call!7202 () List!1507)

(assert (=> bm!7198 (= call!7201 call!7202)))

(declare-fun b!78413 () Bool)

(assert (=> b!78413 (= c!12030 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35869 lt!35870))) (bvsgt (_1!1097 (h!2091 (toList!739 (+!105 lt!35869 lt!35870)))) (_1!1097 lt!35864))))))

(declare-fun e!51260 () List!1507)

(declare-fun e!51259 () List!1507)

(assert (=> b!78413 (= e!51260 e!51259)))

(declare-fun b!78414 () Bool)

(assert (=> b!78414 (= e!51258 (insertStrictlySorted!57 (t!5153 (toList!739 (+!105 lt!35869 lt!35870))) (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(declare-fun b!78415 () Bool)

(declare-fun res!41062 () Bool)

(declare-fun e!51261 () Bool)

(assert (=> b!78415 (=> (not res!41062) (not e!51261))))

(declare-fun lt!36262 () List!1507)

(assert (=> b!78415 (= res!41062 (containsKey!141 lt!36262 (_1!1097 lt!35864)))))

(declare-fun c!12028 () Bool)

(declare-fun bm!7199 () Bool)

(assert (=> bm!7199 (= call!7203 ($colon$colon!69 e!51258 (ite c!12028 (h!2091 (toList!739 (+!105 lt!35869 lt!35870))) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864)))))))

(declare-fun c!12029 () Bool)

(assert (=> bm!7199 (= c!12029 c!12028)))

(declare-fun b!78416 () Bool)

(assert (=> b!78416 (= e!51262 e!51260)))

(assert (=> b!78416 (= c!12031 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35869 lt!35870))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35869 lt!35870)))) (_1!1097 lt!35864))))))

(declare-fun b!78418 () Bool)

(assert (=> b!78418 (= e!51260 call!7202)))

(declare-fun b!78419 () Bool)

(assert (=> b!78419 (= e!51261 (contains!743 lt!36262 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!78417 () Bool)

(assert (=> b!78417 (= e!51259 call!7201)))

(declare-fun d!18559 () Bool)

(assert (=> d!18559 e!51261))

(declare-fun res!41061 () Bool)

(assert (=> d!18559 (=> (not res!41061) (not e!51261))))

(assert (=> d!18559 (= res!41061 (isStrictlySorted!295 lt!36262))))

(assert (=> d!18559 (= lt!36262 e!51262)))

(assert (=> d!18559 (= c!12028 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35869 lt!35870))) (bvslt (_1!1097 (h!2091 (toList!739 (+!105 lt!35869 lt!35870)))) (_1!1097 lt!35864))))))

(assert (=> d!18559 (isStrictlySorted!295 (toList!739 (+!105 lt!35869 lt!35870)))))

(assert (=> d!18559 (= (insertStrictlySorted!57 (toList!739 (+!105 lt!35869 lt!35870)) (_1!1097 lt!35864) (_2!1097 lt!35864)) lt!36262)))

(declare-fun bm!7200 () Bool)

(assert (=> bm!7200 (= call!7202 call!7203)))

(declare-fun b!78420 () Bool)

(assert (=> b!78420 (= e!51259 call!7201)))

(assert (= (and d!18559 c!12028) b!78412))

(assert (= (and d!18559 (not c!12028)) b!78416))

(assert (= (and b!78416 c!12031) b!78418))

(assert (= (and b!78416 (not c!12031)) b!78413))

(assert (= (and b!78413 c!12030) b!78417))

(assert (= (and b!78413 (not c!12030)) b!78420))

(assert (= (or b!78417 b!78420) bm!7198))

(assert (= (or b!78418 bm!7198) bm!7200))

(assert (= (or b!78412 bm!7200) bm!7199))

(assert (= (and bm!7199 c!12029) b!78414))

(assert (= (and bm!7199 (not c!12029)) b!78411))

(assert (= (and d!18559 res!41061) b!78415))

(assert (= (and b!78415 res!41062) b!78419))

(declare-fun m!78675 () Bool)

(assert (=> b!78419 m!78675))

(declare-fun m!78677 () Bool)

(assert (=> d!18559 m!78677))

(declare-fun m!78679 () Bool)

(assert (=> d!18559 m!78679))

(declare-fun m!78681 () Bool)

(assert (=> b!78414 m!78681))

(declare-fun m!78683 () Bool)

(assert (=> b!78415 m!78683))

(declare-fun m!78685 () Bool)

(assert (=> bm!7199 m!78685))

(assert (=> d!18439 d!18559))

(assert (=> d!18463 d!18469))

(declare-fun d!18561 () Bool)

(assert (=> d!18561 (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) from!355 Nil!1505)))

(assert (=> d!18561 true))

(declare-fun _$71!105 () Unit!2257)

(assert (=> d!18561 (= (choose!39 (_keys!3932 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!105)))

(declare-fun bs!3316 () Bool)

(assert (= bs!3316 d!18561))

(assert (=> bs!3316 m!77963))

(assert (=> d!18463 d!18561))

(declare-fun d!18563 () Bool)

(assert (=> d!18563 (= (map!1174 (_2!1098 lt!36136)) (getCurrentListMap!433 (_keys!3932 (_2!1098 lt!36136)) (_values!2255 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136)) (extraKeys!2123 (_2!1098 lt!36136)) (zeroValue!2170 (_2!1098 lt!36136)) (minValue!2170 (_2!1098 lt!36136)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1098 lt!36136))))))

(declare-fun bs!3317 () Bool)

(assert (= bs!3317 d!18563))

(declare-fun m!78687 () Bool)

(assert (=> bs!3317 m!78687))

(assert (=> bm!7175 d!18563))

(declare-fun d!18565 () Bool)

(assert (=> d!18565 (= (apply!79 lt!35983 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1176 (getValueByKey!137 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3318 () Bool)

(assert (= bs!3318 d!18565))

(declare-fun m!78689 () Bool)

(assert (=> bs!3318 m!78689))

(assert (=> bs!3318 m!78689))

(declare-fun m!78691 () Bool)

(assert (=> bs!3318 m!78691))

(assert (=> b!77970 d!18565))

(declare-fun d!18567 () Bool)

(declare-fun e!51263 () Bool)

(assert (=> d!18567 e!51263))

(declare-fun res!41063 () Bool)

(assert (=> d!18567 (=> res!41063 e!51263)))

(declare-fun lt!36266 () Bool)

(assert (=> d!18567 (= res!41063 (not lt!36266))))

(declare-fun lt!36263 () Bool)

(assert (=> d!18567 (= lt!36266 lt!36263)))

(declare-fun lt!36264 () Unit!2257)

(declare-fun e!51264 () Unit!2257)

(assert (=> d!18567 (= lt!36264 e!51264)))

(declare-fun c!12032 () Bool)

(assert (=> d!18567 (= c!12032 lt!36263)))

(assert (=> d!18567 (= lt!36263 (containsKey!141 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!18567 (= (contains!742 lt!36021 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36266)))

(declare-fun b!78421 () Bool)

(declare-fun lt!36265 () Unit!2257)

(assert (=> b!78421 (= e!51264 lt!36265)))

(assert (=> b!78421 (= lt!36265 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78421 (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78422 () Bool)

(declare-fun Unit!2271 () Unit!2257)

(assert (=> b!78422 (= e!51264 Unit!2271)))

(declare-fun b!78423 () Bool)

(assert (=> b!78423 (= e!51263 (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!18567 c!12032) b!78421))

(assert (= (and d!18567 (not c!12032)) b!78422))

(assert (= (and d!18567 (not res!41063)) b!78423))

(assert (=> d!18567 m!78109))

(declare-fun m!78693 () Bool)

(assert (=> d!18567 m!78693))

(assert (=> b!78421 m!78109))

(declare-fun m!78695 () Bool)

(assert (=> b!78421 m!78695))

(assert (=> b!78421 m!78109))

(assert (=> b!78421 m!78575))

(assert (=> b!78421 m!78575))

(declare-fun m!78697 () Bool)

(assert (=> b!78421 m!78697))

(assert (=> b!78423 m!78109))

(assert (=> b!78423 m!78575))

(assert (=> b!78423 m!78575))

(assert (=> b!78423 m!78697))

(assert (=> b!78029 d!18567))

(declare-fun b!78427 () Bool)

(declare-fun e!51266 () Option!143)

(assert (=> b!78427 (= e!51266 None!141)))

(declare-fun d!18569 () Bool)

(declare-fun c!12033 () Bool)

(assert (=> d!18569 (= c!12033 (and ((_ is Cons!1503) (toList!739 lt!36004)) (= (_1!1097 (h!2091 (toList!739 lt!36004))) (_1!1097 lt!35864))))))

(declare-fun e!51265 () Option!143)

(assert (=> d!18569 (= (getValueByKey!137 (toList!739 lt!36004) (_1!1097 lt!35864)) e!51265)))

(declare-fun b!78426 () Bool)

(assert (=> b!78426 (= e!51266 (getValueByKey!137 (t!5153 (toList!739 lt!36004)) (_1!1097 lt!35864)))))

(declare-fun b!78424 () Bool)

(assert (=> b!78424 (= e!51265 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36004)))))))

(declare-fun b!78425 () Bool)

(assert (=> b!78425 (= e!51265 e!51266)))

(declare-fun c!12034 () Bool)

(assert (=> b!78425 (= c!12034 (and ((_ is Cons!1503) (toList!739 lt!36004)) (not (= (_1!1097 (h!2091 (toList!739 lt!36004))) (_1!1097 lt!35864)))))))

(assert (= (and d!18569 c!12033) b!78424))

(assert (= (and d!18569 (not c!12033)) b!78425))

(assert (= (and b!78425 c!12034) b!78426))

(assert (= (and b!78425 (not c!12034)) b!78427))

(declare-fun m!78699 () Bool)

(assert (=> b!78426 m!78699))

(assert (=> b!77997 d!18569))

(declare-fun d!18571 () Bool)

(assert (=> d!18571 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36145 lt!35856 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36269 () Unit!2257)

(declare-fun choose!458 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 V!2995 Int) Unit!2257)

(assert (=> d!18571 (= lt!36269 (choose!458 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36145 (zeroValue!2170 newMap!16) lt!35856 (minValue!2170 newMap!16) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18571 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18571 (= (lemmaChangeZeroKeyThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36145 (zeroValue!2170 newMap!16) lt!35856 (minValue!2170 newMap!16) (defaultEntry!2272 newMap!16)) lt!36269)))

(declare-fun bs!3319 () Bool)

(assert (= bs!3319 d!18571))

(declare-fun m!78701 () Bool)

(assert (=> bs!3319 m!78701))

(declare-fun m!78703 () Bool)

(assert (=> bs!3319 m!78703))

(assert (=> bs!3319 m!78087))

(assert (=> bs!3319 m!78411))

(assert (=> bs!3319 m!78087))

(declare-fun m!78705 () Bool)

(assert (=> bs!3319 m!78705))

(assert (=> b!78221 d!18571))

(declare-fun d!18573 () Bool)

(assert (=> d!18573 (contains!742 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35980)))

(declare-fun lt!36272 () Unit!2257)

(declare-fun choose!459 (ListLongMap!1447 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2257)

(assert (=> d!18573 (= lt!36272 (choose!459 lt!35978 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35980))))

(assert (=> d!18573 (contains!742 lt!35978 lt!35980)))

(assert (=> d!18573 (= (addStillContains!55 lt!35978 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35980) lt!36272)))

(declare-fun bs!3320 () Bool)

(assert (= bs!3320 d!18573))

(assert (=> bs!3320 m!78115))

(assert (=> bs!3320 m!78115))

(assert (=> bs!3320 m!78117))

(declare-fun m!78707 () Bool)

(assert (=> bs!3320 m!78707))

(declare-fun m!78709 () Bool)

(assert (=> bs!3320 m!78709))

(assert (=> b!77985 d!18573))

(assert (=> b!77985 d!18435))

(declare-fun d!18575 () Bool)

(assert (=> d!18575 (= (apply!79 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35988) (apply!79 lt!35987 lt!35988))))

(declare-fun lt!36275 () Unit!2257)

(declare-fun choose!460 (ListLongMap!1447 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2257)

(assert (=> d!18575 (= lt!36275 (choose!460 lt!35987 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35988))))

(declare-fun e!51269 () Bool)

(assert (=> d!18575 e!51269))

(declare-fun res!41066 () Bool)

(assert (=> d!18575 (=> (not res!41066) (not e!51269))))

(assert (=> d!18575 (= res!41066 (contains!742 lt!35987 lt!35988))))

(assert (=> d!18575 (= (addApplyDifferent!55 lt!35987 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35988) lt!36275)))

(declare-fun b!78432 () Bool)

(assert (=> b!78432 (= e!51269 (not (= lt!35988 lt!35986)))))

(assert (= (and d!18575 res!41066) b!78432))

(declare-fun m!78711 () Bool)

(assert (=> d!18575 m!78711))

(assert (=> d!18575 m!78125))

(declare-fun m!78713 () Bool)

(assert (=> d!18575 m!78713))

(assert (=> d!18575 m!78095))

(assert (=> d!18575 m!78095))

(assert (=> d!18575 m!78097))

(assert (=> b!77985 d!18575))

(declare-fun d!18577 () Bool)

(declare-fun e!51270 () Bool)

(assert (=> d!18577 e!51270))

(declare-fun res!41067 () Bool)

(assert (=> d!18577 (=> (not res!41067) (not e!51270))))

(declare-fun lt!36277 () ListLongMap!1447)

(assert (=> d!18577 (= res!41067 (contains!742 lt!36277 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36276 () List!1507)

(assert (=> d!18577 (= lt!36277 (ListLongMap!1448 lt!36276))))

(declare-fun lt!36279 () Unit!2257)

(declare-fun lt!36278 () Unit!2257)

(assert (=> d!18577 (= lt!36279 lt!36278)))

(assert (=> d!18577 (= (getValueByKey!137 lt!36276 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18577 (= lt!36278 (lemmaContainsTupThenGetReturnValue!54 lt!36276 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18577 (= lt!36276 (insertStrictlySorted!57 (toList!739 lt!35987) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18577 (= (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36277)))

(declare-fun b!78433 () Bool)

(declare-fun res!41068 () Bool)

(assert (=> b!78433 (=> (not res!41068) (not e!51270))))

(assert (=> b!78433 (= res!41068 (= (getValueByKey!137 (toList!739 lt!36277) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78434 () Bool)

(assert (=> b!78434 (= e!51270 (contains!743 (toList!739 lt!36277) (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18577 res!41067) b!78433))

(assert (= (and b!78433 res!41068) b!78434))

(declare-fun m!78715 () Bool)

(assert (=> d!18577 m!78715))

(declare-fun m!78717 () Bool)

(assert (=> d!18577 m!78717))

(declare-fun m!78719 () Bool)

(assert (=> d!18577 m!78719))

(declare-fun m!78721 () Bool)

(assert (=> d!18577 m!78721))

(declare-fun m!78723 () Bool)

(assert (=> b!78433 m!78723))

(declare-fun m!78725 () Bool)

(assert (=> b!78434 m!78725))

(assert (=> b!77985 d!18577))

(declare-fun d!18579 () Bool)

(assert (=> d!18579 (= (apply!79 lt!35984 lt!35982) (get!1176 (getValueByKey!137 (toList!739 lt!35984) lt!35982)))))

(declare-fun bs!3321 () Bool)

(assert (= bs!3321 d!18579))

(declare-fun m!78727 () Bool)

(assert (=> bs!3321 m!78727))

(assert (=> bs!3321 m!78727))

(declare-fun m!78729 () Bool)

(assert (=> bs!3321 m!78729))

(assert (=> b!77985 d!18579))

(declare-fun d!18581 () Bool)

(assert (=> d!18581 (= (apply!79 lt!35987 lt!35988) (get!1176 (getValueByKey!137 (toList!739 lt!35987) lt!35988)))))

(declare-fun bs!3322 () Bool)

(assert (= bs!3322 d!18581))

(declare-fun m!78731 () Bool)

(assert (=> bs!3322 m!78731))

(assert (=> bs!3322 m!78731))

(declare-fun m!78733 () Bool)

(assert (=> bs!3322 m!78733))

(assert (=> b!77985 d!18581))

(declare-fun d!18583 () Bool)

(declare-fun e!51271 () Bool)

(assert (=> d!18583 e!51271))

(declare-fun res!41069 () Bool)

(assert (=> d!18583 (=> (not res!41069) (not e!51271))))

(declare-fun lt!36281 () ListLongMap!1447)

(assert (=> d!18583 (= res!41069 (contains!742 lt!36281 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36280 () List!1507)

(assert (=> d!18583 (= lt!36281 (ListLongMap!1448 lt!36280))))

(declare-fun lt!36283 () Unit!2257)

(declare-fun lt!36282 () Unit!2257)

(assert (=> d!18583 (= lt!36283 lt!36282)))

(assert (=> d!18583 (= (getValueByKey!137 lt!36280 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18583 (= lt!36282 (lemmaContainsTupThenGetReturnValue!54 lt!36280 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18583 (= lt!36280 (insertStrictlySorted!57 (toList!739 lt!35978) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18583 (= (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36281)))

(declare-fun b!78435 () Bool)

(declare-fun res!41070 () Bool)

(assert (=> b!78435 (=> (not res!41070) (not e!51271))))

(assert (=> b!78435 (= res!41070 (= (getValueByKey!137 (toList!739 lt!36281) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78436 () Bool)

(assert (=> b!78436 (= e!51271 (contains!743 (toList!739 lt!36281) (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18583 res!41069) b!78435))

(assert (= (and b!78435 res!41070) b!78436))

(declare-fun m!78735 () Bool)

(assert (=> d!18583 m!78735))

(declare-fun m!78737 () Bool)

(assert (=> d!18583 m!78737))

(declare-fun m!78739 () Bool)

(assert (=> d!18583 m!78739))

(declare-fun m!78741 () Bool)

(assert (=> d!18583 m!78741))

(declare-fun m!78743 () Bool)

(assert (=> b!78435 m!78743))

(declare-fun m!78745 () Bool)

(assert (=> b!78436 m!78745))

(assert (=> b!77985 d!18583))

(declare-fun d!18585 () Bool)

(declare-fun e!51272 () Bool)

(assert (=> d!18585 e!51272))

(declare-fun res!41071 () Bool)

(assert (=> d!18585 (=> (not res!41071) (not e!51272))))

(declare-fun lt!36285 () ListLongMap!1447)

(assert (=> d!18585 (= res!41071 (contains!742 lt!36285 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36284 () List!1507)

(assert (=> d!18585 (= lt!36285 (ListLongMap!1448 lt!36284))))

(declare-fun lt!36287 () Unit!2257)

(declare-fun lt!36286 () Unit!2257)

(assert (=> d!18585 (= lt!36287 lt!36286)))

(assert (=> d!18585 (= (getValueByKey!137 lt!36284 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18585 (= lt!36286 (lemmaContainsTupThenGetReturnValue!54 lt!36284 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18585 (= lt!36284 (insertStrictlySorted!57 (toList!739 lt!35970) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18585 (= (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36285)))

(declare-fun b!78437 () Bool)

(declare-fun res!41072 () Bool)

(assert (=> b!78437 (=> (not res!41072) (not e!51272))))

(assert (=> b!78437 (= res!41072 (= (getValueByKey!137 (toList!739 lt!36285) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78438 () Bool)

(assert (=> b!78438 (= e!51272 (contains!743 (toList!739 lt!36285) (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18585 res!41071) b!78437))

(assert (= (and b!78437 res!41072) b!78438))

(declare-fun m!78747 () Bool)

(assert (=> d!18585 m!78747))

(declare-fun m!78749 () Bool)

(assert (=> d!18585 m!78749))

(declare-fun m!78751 () Bool)

(assert (=> d!18585 m!78751))

(declare-fun m!78753 () Bool)

(assert (=> d!18585 m!78753))

(declare-fun m!78755 () Bool)

(assert (=> b!78437 m!78755))

(declare-fun m!78757 () Bool)

(assert (=> b!78438 m!78757))

(assert (=> b!77985 d!18585))

(declare-fun d!18587 () Bool)

(assert (=> d!18587 (= (apply!79 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35976) (apply!79 lt!35970 lt!35976))))

(declare-fun lt!36288 () Unit!2257)

(assert (=> d!18587 (= lt!36288 (choose!460 lt!35970 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35976))))

(declare-fun e!51273 () Bool)

(assert (=> d!18587 e!51273))

(declare-fun res!41073 () Bool)

(assert (=> d!18587 (=> (not res!41073) (not e!51273))))

(assert (=> d!18587 (= res!41073 (contains!742 lt!35970 lt!35976))))

(assert (=> d!18587 (= (addApplyDifferent!55 lt!35970 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35976) lt!36288)))

(declare-fun b!78439 () Bool)

(assert (=> b!78439 (= e!51273 (not (= lt!35976 lt!35974)))))

(assert (= (and d!18587 res!41073) b!78439))

(declare-fun m!78759 () Bool)

(assert (=> d!18587 m!78759))

(assert (=> d!18587 m!78111))

(declare-fun m!78761 () Bool)

(assert (=> d!18587 m!78761))

(assert (=> d!18587 m!78103))

(assert (=> d!18587 m!78103))

(assert (=> d!18587 m!78105))

(assert (=> b!77985 d!18587))

(declare-fun d!18589 () Bool)

(declare-fun e!51274 () Bool)

(assert (=> d!18589 e!51274))

(declare-fun res!41074 () Bool)

(assert (=> d!18589 (=> res!41074 e!51274)))

(declare-fun lt!36292 () Bool)

(assert (=> d!18589 (= res!41074 (not lt!36292))))

(declare-fun lt!36289 () Bool)

(assert (=> d!18589 (= lt!36292 lt!36289)))

(declare-fun lt!36290 () Unit!2257)

(declare-fun e!51275 () Unit!2257)

(assert (=> d!18589 (= lt!36290 e!51275)))

(declare-fun c!12035 () Bool)

(assert (=> d!18589 (= c!12035 lt!36289)))

(assert (=> d!18589 (= lt!36289 (containsKey!141 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980))))

(assert (=> d!18589 (= (contains!742 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35980) lt!36292)))

(declare-fun b!78440 () Bool)

(declare-fun lt!36291 () Unit!2257)

(assert (=> b!78440 (= e!51275 lt!36291)))

(assert (=> b!78440 (= lt!36291 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980))))

(assert (=> b!78440 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980))))

(declare-fun b!78441 () Bool)

(declare-fun Unit!2272 () Unit!2257)

(assert (=> b!78441 (= e!51275 Unit!2272)))

(declare-fun b!78442 () Bool)

(assert (=> b!78442 (= e!51274 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980)))))

(assert (= (and d!18589 c!12035) b!78440))

(assert (= (and d!18589 (not c!12035)) b!78441))

(assert (= (and d!18589 (not res!41074)) b!78442))

(declare-fun m!78763 () Bool)

(assert (=> d!18589 m!78763))

(declare-fun m!78765 () Bool)

(assert (=> b!78440 m!78765))

(declare-fun m!78767 () Bool)

(assert (=> b!78440 m!78767))

(assert (=> b!78440 m!78767))

(declare-fun m!78769 () Bool)

(assert (=> b!78440 m!78769))

(assert (=> b!78442 m!78767))

(assert (=> b!78442 m!78767))

(assert (=> b!78442 m!78769))

(assert (=> b!77985 d!18589))

(declare-fun d!18591 () Bool)

(assert (=> d!18591 (= (apply!79 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35982) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35982)))))

(declare-fun bs!3323 () Bool)

(assert (= bs!3323 d!18591))

(declare-fun m!78771 () Bool)

(assert (=> bs!3323 m!78771))

(assert (=> bs!3323 m!78771))

(declare-fun m!78773 () Bool)

(assert (=> bs!3323 m!78773))

(assert (=> b!77985 d!18591))

(declare-fun d!18593 () Bool)

(declare-fun e!51276 () Bool)

(assert (=> d!18593 e!51276))

(declare-fun res!41075 () Bool)

(assert (=> d!18593 (=> (not res!41075) (not e!51276))))

(declare-fun lt!36294 () ListLongMap!1447)

(assert (=> d!18593 (= res!41075 (contains!742 lt!36294 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36293 () List!1507)

(assert (=> d!18593 (= lt!36294 (ListLongMap!1448 lt!36293))))

(declare-fun lt!36296 () Unit!2257)

(declare-fun lt!36295 () Unit!2257)

(assert (=> d!18593 (= lt!36296 lt!36295)))

(assert (=> d!18593 (= (getValueByKey!137 lt!36293 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18593 (= lt!36295 (lemmaContainsTupThenGetReturnValue!54 lt!36293 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18593 (= lt!36293 (insertStrictlySorted!57 (toList!739 lt!35984) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18593 (= (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36294)))

(declare-fun b!78443 () Bool)

(declare-fun res!41076 () Bool)

(assert (=> b!78443 (=> (not res!41076) (not e!51276))))

(assert (=> b!78443 (= res!41076 (= (getValueByKey!137 (toList!739 lt!36294) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78444 () Bool)

(assert (=> b!78444 (= e!51276 (contains!743 (toList!739 lt!36294) (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18593 res!41075) b!78443))

(assert (= (and b!78443 res!41076) b!78444))

(declare-fun m!78775 () Bool)

(assert (=> d!18593 m!78775))

(declare-fun m!78777 () Bool)

(assert (=> d!18593 m!78777))

(declare-fun m!78779 () Bool)

(assert (=> d!18593 m!78779))

(declare-fun m!78781 () Bool)

(assert (=> d!18593 m!78781))

(declare-fun m!78783 () Bool)

(assert (=> b!78443 m!78783))

(declare-fun m!78785 () Bool)

(assert (=> b!78444 m!78785))

(assert (=> b!77985 d!18593))

(declare-fun d!18595 () Bool)

(assert (=> d!18595 (= (apply!79 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35982) (apply!79 lt!35984 lt!35982))))

(declare-fun lt!36297 () Unit!2257)

(assert (=> d!18595 (= lt!36297 (choose!460 lt!35984 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35982))))

(declare-fun e!51277 () Bool)

(assert (=> d!18595 e!51277))

(declare-fun res!41077 () Bool)

(assert (=> d!18595 (=> (not res!41077) (not e!51277))))

(assert (=> d!18595 (= res!41077 (contains!742 lt!35984 lt!35982))))

(assert (=> d!18595 (= (addApplyDifferent!55 lt!35984 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35982) lt!36297)))

(declare-fun b!78445 () Bool)

(assert (=> b!78445 (= e!51277 (not (= lt!35982 lt!35989)))))

(assert (= (and d!18595 res!41077) b!78445))

(declare-fun m!78787 () Bool)

(assert (=> d!18595 m!78787))

(assert (=> d!18595 m!78113))

(declare-fun m!78789 () Bool)

(assert (=> d!18595 m!78789))

(assert (=> d!18595 m!78099))

(assert (=> d!18595 m!78099))

(assert (=> d!18595 m!78101))

(assert (=> b!77985 d!18595))

(declare-fun d!18597 () Bool)

(assert (=> d!18597 (= (apply!79 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35976) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35976)))))

(declare-fun bs!3324 () Bool)

(assert (= bs!3324 d!18597))

(declare-fun m!78791 () Bool)

(assert (=> bs!3324 m!78791))

(assert (=> bs!3324 m!78791))

(declare-fun m!78793 () Bool)

(assert (=> bs!3324 m!78793))

(assert (=> b!77985 d!18597))

(declare-fun d!18599 () Bool)

(assert (=> d!18599 (= (apply!79 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35988) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35988)))))

(declare-fun bs!3325 () Bool)

(assert (= bs!3325 d!18599))

(declare-fun m!78795 () Bool)

(assert (=> bs!3325 m!78795))

(assert (=> bs!3325 m!78795))

(declare-fun m!78797 () Bool)

(assert (=> bs!3325 m!78797))

(assert (=> b!77985 d!18599))

(declare-fun d!18601 () Bool)

(assert (=> d!18601 (= (apply!79 lt!35970 lt!35976) (get!1176 (getValueByKey!137 (toList!739 lt!35970) lt!35976)))))

(declare-fun bs!3326 () Bool)

(assert (= bs!3326 d!18601))

(declare-fun m!78799 () Bool)

(assert (=> bs!3326 m!78799))

(assert (=> bs!3326 m!78799))

(declare-fun m!78801 () Bool)

(assert (=> bs!3326 m!78801))

(assert (=> b!77985 d!18601))

(declare-fun d!18603 () Bool)

(declare-fun e!51280 () Bool)

(assert (=> d!18603 e!51280))

(declare-fun res!41082 () Bool)

(assert (=> d!18603 (=> (not res!41082) (not e!51280))))

(declare-fun lt!36303 () SeekEntryResult!240)

(assert (=> d!18603 (= res!41082 ((_ is Found!240) lt!36303))))

(assert (=> d!18603 (= lt!36303 (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun lt!36302 () Unit!2257)

(declare-fun choose!461 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) Int) Unit!2257)

(assert (=> d!18603 (= lt!36302 (choose!461 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18603 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18603 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)) lt!36302)))

(declare-fun b!78450 () Bool)

(declare-fun res!41083 () Bool)

(assert (=> b!78450 (=> (not res!41083) (not e!51280))))

(assert (=> b!78450 (= res!41083 (inRange!0 (index!3095 lt!36303) (mask!6268 newMap!16)))))

(declare-fun b!78451 () Bool)

(assert (=> b!78451 (= e!51280 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36303)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> b!78451 (and (bvsge (index!3095 lt!36303) #b00000000000000000000000000000000) (bvslt (index!3095 lt!36303) (size!2136 (_keys!3932 newMap!16))))))

(assert (= (and d!18603 res!41082) b!78450))

(assert (= (and b!78450 res!41083) b!78451))

(assert (=> d!18603 m!77965))

(assert (=> d!18603 m!78307))

(assert (=> d!18603 m!77965))

(declare-fun m!78803 () Bool)

(assert (=> d!18603 m!78803))

(assert (=> d!18603 m!78411))

(declare-fun m!78805 () Bool)

(assert (=> b!78450 m!78805))

(declare-fun m!78807 () Bool)

(assert (=> b!78451 m!78807))

(assert (=> bm!7171 d!18603))

(declare-fun b!78468 () Bool)

(declare-fun e!51289 () Bool)

(declare-fun e!51290 () Bool)

(assert (=> b!78468 (= e!51289 e!51290)))

(declare-fun res!41092 () Bool)

(declare-fun call!7209 () Bool)

(assert (=> b!78468 (= res!41092 call!7209)))

(assert (=> b!78468 (=> (not res!41092) (not e!51290))))

(declare-fun b!78469 () Bool)

(declare-fun res!41094 () Bool)

(declare-fun e!51291 () Bool)

(assert (=> b!78469 (=> (not res!41094) (not e!51291))))

(declare-fun lt!36308 () SeekEntryResult!240)

(assert (=> b!78469 (= res!41094 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3097 lt!36308)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78469 (and (bvsge (index!3097 lt!36308) #b00000000000000000000000000000000) (bvslt (index!3097 lt!36308) (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78470 () Bool)

(assert (=> b!78470 (and (bvsge (index!3094 lt!36308) #b00000000000000000000000000000000) (bvslt (index!3094 lt!36308) (size!2136 (_keys!3932 newMap!16))))))

(declare-fun res!41095 () Bool)

(assert (=> b!78470 (= res!41095 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3094 lt!36308)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78470 (=> (not res!41095) (not e!51290))))

(declare-fun d!18605 () Bool)

(assert (=> d!18605 e!51289))

(declare-fun c!12041 () Bool)

(assert (=> d!18605 (= c!12041 ((_ is MissingZero!240) lt!36308))))

(assert (=> d!18605 (= lt!36308 (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun lt!36309 () Unit!2257)

(declare-fun choose!462 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) Int) Unit!2257)

(assert (=> d!18605 (= lt!36309 (choose!462 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18605 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18605 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)) lt!36309)))

(declare-fun b!78471 () Bool)

(declare-fun call!7208 () Bool)

(assert (=> b!78471 (= e!51291 (not call!7208))))

(declare-fun bm!7205 () Bool)

(assert (=> bm!7205 (= call!7209 (inRange!0 (ite c!12041 (index!3094 lt!36308) (index!3097 lt!36308)) (mask!6268 newMap!16)))))

(declare-fun b!78472 () Bool)

(declare-fun res!41093 () Bool)

(assert (=> b!78472 (=> (not res!41093) (not e!51291))))

(assert (=> b!78472 (= res!41093 call!7209)))

(declare-fun e!51292 () Bool)

(assert (=> b!78472 (= e!51292 e!51291)))

(declare-fun b!78473 () Bool)

(assert (=> b!78473 (= e!51290 (not call!7208))))

(declare-fun bm!7206 () Bool)

(assert (=> bm!7206 (= call!7208 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!78474 () Bool)

(assert (=> b!78474 (= e!51289 e!51292)))

(declare-fun c!12040 () Bool)

(assert (=> b!78474 (= c!12040 ((_ is MissingVacant!240) lt!36308))))

(declare-fun b!78475 () Bool)

(assert (=> b!78475 (= e!51292 ((_ is Undefined!240) lt!36308))))

(assert (= (and d!18605 c!12041) b!78468))

(assert (= (and d!18605 (not c!12041)) b!78474))

(assert (= (and b!78468 res!41092) b!78470))

(assert (= (and b!78470 res!41095) b!78473))

(assert (= (and b!78474 c!12040) b!78472))

(assert (= (and b!78474 (not c!12040)) b!78475))

(assert (= (and b!78472 res!41093) b!78469))

(assert (= (and b!78469 res!41094) b!78471))

(assert (= (or b!78468 b!78472) bm!7205))

(assert (= (or b!78473 b!78471) bm!7206))

(assert (=> bm!7206 m!77965))

(assert (=> bm!7206 m!78353))

(declare-fun m!78809 () Bool)

(assert (=> b!78470 m!78809))

(declare-fun m!78811 () Bool)

(assert (=> b!78469 m!78811))

(assert (=> d!18605 m!77965))

(assert (=> d!18605 m!78307))

(assert (=> d!18605 m!77965))

(declare-fun m!78813 () Bool)

(assert (=> d!18605 m!78813))

(assert (=> d!18605 m!78411))

(declare-fun m!78815 () Bool)

(assert (=> bm!7205 m!78815))

(assert (=> bm!7163 d!18605))

(declare-fun d!18607 () Bool)

(assert (=> d!18607 (= (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (and (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78086 d!18607))

(declare-fun d!18609 () Bool)

(assert (=> d!18609 (= (get!1175 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) from!355) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78059 d!18609))

(declare-fun d!18611 () Bool)

(declare-fun e!51293 () Bool)

(assert (=> d!18611 e!51293))

(declare-fun res!41096 () Bool)

(assert (=> d!18611 (=> res!41096 e!51293)))

(declare-fun lt!36313 () Bool)

(assert (=> d!18611 (= res!41096 (not lt!36313))))

(declare-fun lt!36310 () Bool)

(assert (=> d!18611 (= lt!36313 lt!36310)))

(declare-fun lt!36311 () Unit!2257)

(declare-fun e!51294 () Unit!2257)

(assert (=> d!18611 (= lt!36311 e!51294)))

(declare-fun c!12042 () Bool)

(assert (=> d!18611 (= c!12042 lt!36310)))

(assert (=> d!18611 (= lt!36310 (containsKey!141 (toList!739 lt!36041) (_1!1097 lt!35861)))))

(assert (=> d!18611 (= (contains!742 lt!36041 (_1!1097 lt!35861)) lt!36313)))

(declare-fun b!78476 () Bool)

(declare-fun lt!36312 () Unit!2257)

(assert (=> b!78476 (= e!51294 lt!36312)))

(assert (=> b!78476 (= lt!36312 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36041) (_1!1097 lt!35861)))))

(assert (=> b!78476 (isDefined!90 (getValueByKey!137 (toList!739 lt!36041) (_1!1097 lt!35861)))))

(declare-fun b!78477 () Bool)

(declare-fun Unit!2273 () Unit!2257)

(assert (=> b!78477 (= e!51294 Unit!2273)))

(declare-fun b!78478 () Bool)

(assert (=> b!78478 (= e!51293 (isDefined!90 (getValueByKey!137 (toList!739 lt!36041) (_1!1097 lt!35861))))))

(assert (= (and d!18611 c!12042) b!78476))

(assert (= (and d!18611 (not c!12042)) b!78477))

(assert (= (and d!18611 (not res!41096)) b!78478))

(declare-fun m!78817 () Bool)

(assert (=> d!18611 m!78817))

(declare-fun m!78819 () Bool)

(assert (=> b!78476 m!78819))

(assert (=> b!78476 m!78241))

(assert (=> b!78476 m!78241))

(declare-fun m!78821 () Bool)

(assert (=> b!78476 m!78821))

(assert (=> b!78478 m!78241))

(assert (=> b!78478 m!78241))

(assert (=> b!78478 m!78821))

(assert (=> d!18445 d!18611))

(declare-fun b!78482 () Bool)

(declare-fun e!51296 () Option!143)

(assert (=> b!78482 (= e!51296 None!141)))

(declare-fun d!18613 () Bool)

(declare-fun c!12043 () Bool)

(assert (=> d!18613 (= c!12043 (and ((_ is Cons!1503) lt!36040) (= (_1!1097 (h!2091 lt!36040)) (_1!1097 lt!35861))))))

(declare-fun e!51295 () Option!143)

(assert (=> d!18613 (= (getValueByKey!137 lt!36040 (_1!1097 lt!35861)) e!51295)))

(declare-fun b!78481 () Bool)

(assert (=> b!78481 (= e!51296 (getValueByKey!137 (t!5153 lt!36040) (_1!1097 lt!35861)))))

(declare-fun b!78479 () Bool)

(assert (=> b!78479 (= e!51295 (Some!142 (_2!1097 (h!2091 lt!36040))))))

(declare-fun b!78480 () Bool)

(assert (=> b!78480 (= e!51295 e!51296)))

(declare-fun c!12044 () Bool)

(assert (=> b!78480 (= c!12044 (and ((_ is Cons!1503) lt!36040) (not (= (_1!1097 (h!2091 lt!36040)) (_1!1097 lt!35861)))))))

(assert (= (and d!18613 c!12043) b!78479))

(assert (= (and d!18613 (not c!12043)) b!78480))

(assert (= (and b!78480 c!12044) b!78481))

(assert (= (and b!78480 (not c!12044)) b!78482))

(declare-fun m!78823 () Bool)

(assert (=> b!78481 m!78823))

(assert (=> d!18445 d!18613))

(declare-fun d!18615 () Bool)

(assert (=> d!18615 (= (getValueByKey!137 lt!36040 (_1!1097 lt!35861)) (Some!142 (_2!1097 lt!35861)))))

(declare-fun lt!36314 () Unit!2257)

(assert (=> d!18615 (= lt!36314 (choose!456 lt!36040 (_1!1097 lt!35861) (_2!1097 lt!35861)))))

(declare-fun e!51297 () Bool)

(assert (=> d!18615 e!51297))

(declare-fun res!41097 () Bool)

(assert (=> d!18615 (=> (not res!41097) (not e!51297))))

(assert (=> d!18615 (= res!41097 (isStrictlySorted!295 lt!36040))))

(assert (=> d!18615 (= (lemmaContainsTupThenGetReturnValue!54 lt!36040 (_1!1097 lt!35861) (_2!1097 lt!35861)) lt!36314)))

(declare-fun b!78483 () Bool)

(declare-fun res!41098 () Bool)

(assert (=> b!78483 (=> (not res!41098) (not e!51297))))

(assert (=> b!78483 (= res!41098 (containsKey!141 lt!36040 (_1!1097 lt!35861)))))

(declare-fun b!78484 () Bool)

(assert (=> b!78484 (= e!51297 (contains!743 lt!36040 (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(assert (= (and d!18615 res!41097) b!78483))

(assert (= (and b!78483 res!41098) b!78484))

(assert (=> d!18615 m!78235))

(declare-fun m!78825 () Bool)

(assert (=> d!18615 m!78825))

(declare-fun m!78827 () Bool)

(assert (=> d!18615 m!78827))

(declare-fun m!78829 () Bool)

(assert (=> b!78483 m!78829))

(declare-fun m!78831 () Bool)

(assert (=> b!78484 m!78831))

(assert (=> d!18445 d!18615))

(declare-fun b!78485 () Bool)

(declare-fun e!51298 () List!1507)

(declare-fun c!12047 () Bool)

(declare-fun c!12048 () Bool)

(assert (=> b!78485 (= e!51298 (ite c!12048 (t!5153 (toList!739 lt!35865)) (ite c!12047 (Cons!1503 (h!2091 (toList!739 lt!35865)) (t!5153 (toList!739 lt!35865))) Nil!1504)))))

(declare-fun b!78486 () Bool)

(declare-fun e!51302 () List!1507)

(declare-fun call!7212 () List!1507)

(assert (=> b!78486 (= e!51302 call!7212)))

(declare-fun bm!7207 () Bool)

(declare-fun call!7210 () List!1507)

(declare-fun call!7211 () List!1507)

(assert (=> bm!7207 (= call!7210 call!7211)))

(declare-fun b!78487 () Bool)

(assert (=> b!78487 (= c!12047 (and ((_ is Cons!1503) (toList!739 lt!35865)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35865))) (_1!1097 lt!35861))))))

(declare-fun e!51300 () List!1507)

(declare-fun e!51299 () List!1507)

(assert (=> b!78487 (= e!51300 e!51299)))

(declare-fun b!78488 () Bool)

(assert (=> b!78488 (= e!51298 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35865)) (_1!1097 lt!35861) (_2!1097 lt!35861)))))

(declare-fun b!78489 () Bool)

(declare-fun res!41100 () Bool)

(declare-fun e!51301 () Bool)

(assert (=> b!78489 (=> (not res!41100) (not e!51301))))

(declare-fun lt!36315 () List!1507)

(assert (=> b!78489 (= res!41100 (containsKey!141 lt!36315 (_1!1097 lt!35861)))))

(declare-fun bm!7208 () Bool)

(declare-fun c!12045 () Bool)

(assert (=> bm!7208 (= call!7212 ($colon$colon!69 e!51298 (ite c!12045 (h!2091 (toList!739 lt!35865)) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861)))))))

(declare-fun c!12046 () Bool)

(assert (=> bm!7208 (= c!12046 c!12045)))

(declare-fun b!78490 () Bool)

(assert (=> b!78490 (= e!51302 e!51300)))

(assert (=> b!78490 (= c!12048 (and ((_ is Cons!1503) (toList!739 lt!35865)) (= (_1!1097 (h!2091 (toList!739 lt!35865))) (_1!1097 lt!35861))))))

(declare-fun b!78492 () Bool)

(assert (=> b!78492 (= e!51300 call!7211)))

(declare-fun b!78493 () Bool)

(assert (=> b!78493 (= e!51301 (contains!743 lt!36315 (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun b!78491 () Bool)

(assert (=> b!78491 (= e!51299 call!7210)))

(declare-fun d!18617 () Bool)

(assert (=> d!18617 e!51301))

(declare-fun res!41099 () Bool)

(assert (=> d!18617 (=> (not res!41099) (not e!51301))))

(assert (=> d!18617 (= res!41099 (isStrictlySorted!295 lt!36315))))

(assert (=> d!18617 (= lt!36315 e!51302)))

(assert (=> d!18617 (= c!12045 (and ((_ is Cons!1503) (toList!739 lt!35865)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35865))) (_1!1097 lt!35861))))))

(assert (=> d!18617 (isStrictlySorted!295 (toList!739 lt!35865))))

(assert (=> d!18617 (= (insertStrictlySorted!57 (toList!739 lt!35865) (_1!1097 lt!35861) (_2!1097 lt!35861)) lt!36315)))

(declare-fun bm!7209 () Bool)

(assert (=> bm!7209 (= call!7211 call!7212)))

(declare-fun b!78494 () Bool)

(assert (=> b!78494 (= e!51299 call!7210)))

(assert (= (and d!18617 c!12045) b!78486))

(assert (= (and d!18617 (not c!12045)) b!78490))

(assert (= (and b!78490 c!12048) b!78492))

(assert (= (and b!78490 (not c!12048)) b!78487))

(assert (= (and b!78487 c!12047) b!78491))

(assert (= (and b!78487 (not c!12047)) b!78494))

(assert (= (or b!78491 b!78494) bm!7207))

(assert (= (or b!78492 bm!7207) bm!7209))

(assert (= (or b!78486 bm!7209) bm!7208))

(assert (= (and bm!7208 c!12046) b!78488))

(assert (= (and bm!7208 (not c!12046)) b!78485))

(assert (= (and d!18617 res!41099) b!78489))

(assert (= (and b!78489 res!41100) b!78493))

(declare-fun m!78833 () Bool)

(assert (=> b!78493 m!78833))

(declare-fun m!78835 () Bool)

(assert (=> d!18617 m!78835))

(declare-fun m!78837 () Bool)

(assert (=> d!18617 m!78837))

(declare-fun m!78839 () Bool)

(assert (=> b!78488 m!78839))

(declare-fun m!78841 () Bool)

(assert (=> b!78489 m!78841))

(declare-fun m!78843 () Bool)

(assert (=> bm!7208 m!78843))

(assert (=> d!18445 d!18617))

(declare-fun b!78495 () Bool)

(declare-fun e!51309 () ListLongMap!1447)

(assert (=> b!78495 (= e!51309 (ListLongMap!1448 Nil!1504))))

(declare-fun e!51307 () Bool)

(declare-fun lt!36316 () ListLongMap!1447)

(declare-fun b!78496 () Bool)

(assert (=> b!78496 (= e!51307 (= lt!36316 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!78497 () Bool)

(assert (=> b!78497 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> b!78497 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2137 (_values!2255 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!51304 () Bool)

(assert (=> b!78497 (= e!51304 (= (apply!79 lt!36316 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!78498 () Bool)

(declare-fun e!51308 () Bool)

(assert (=> b!78498 (= e!51308 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!78498 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!78500 () Bool)

(declare-fun e!51306 () ListLongMap!1447)

(assert (=> b!78500 (= e!51309 e!51306)))

(declare-fun c!12050 () Bool)

(assert (=> b!78500 (= c!12050 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78501 () Bool)

(declare-fun e!51303 () Bool)

(assert (=> b!78501 (= e!51303 e!51304)))

(assert (=> b!78501 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun res!41103 () Bool)

(assert (=> b!78501 (= res!41103 (contains!742 lt!36316 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!78501 (=> (not res!41103) (not e!51304))))

(declare-fun bm!7210 () Bool)

(declare-fun call!7213 () ListLongMap!1447)

(assert (=> bm!7210 (= call!7213 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun b!78502 () Bool)

(declare-fun e!51305 () Bool)

(assert (=> b!78502 (= e!51305 e!51303)))

(declare-fun c!12051 () Bool)

(assert (=> b!78502 (= c!12051 e!51308)))

(declare-fun res!41104 () Bool)

(assert (=> b!78502 (=> (not res!41104) (not e!51308))))

(assert (=> b!78502 (= res!41104 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun d!18619 () Bool)

(assert (=> d!18619 e!51305))

(declare-fun res!41101 () Bool)

(assert (=> d!18619 (=> (not res!41101) (not e!51305))))

(assert (=> d!18619 (= res!41101 (not (contains!742 lt!36316 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18619 (= lt!36316 e!51309)))

(declare-fun c!12049 () Bool)

(assert (=> d!18619 (= c!12049 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!18619 (validMask!0 (mask!6268 (v!2592 (underlying!278 thiss!992))))))

(assert (=> d!18619 (= (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))) lt!36316)))

(declare-fun b!78499 () Bool)

(declare-fun lt!36319 () Unit!2257)

(declare-fun lt!36317 () Unit!2257)

(assert (=> b!78499 (= lt!36319 lt!36317)))

(declare-fun lt!36318 () (_ BitVec 64))

(declare-fun lt!36320 () ListLongMap!1447)

(declare-fun lt!36322 () (_ BitVec 64))

(declare-fun lt!36321 () V!2995)

(assert (=> b!78499 (not (contains!742 (+!105 lt!36320 (tuple2!2173 lt!36318 lt!36321)) lt!36322))))

(assert (=> b!78499 (= lt!36317 (addStillNotContains!28 lt!36320 lt!36318 lt!36321 lt!36322))))

(assert (=> b!78499 (= lt!36322 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!78499 (= lt!36321 (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!78499 (= lt!36318 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!78499 (= lt!36320 call!7213)))

(assert (=> b!78499 (= e!51306 (+!105 call!7213 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!78503 () Bool)

(assert (=> b!78503 (= e!51303 e!51307)))

(declare-fun c!12052 () Bool)

(assert (=> b!78503 (= c!12052 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!78504 () Bool)

(assert (=> b!78504 (= e!51307 (isEmpty!326 lt!36316))))

(declare-fun b!78505 () Bool)

(declare-fun res!41102 () Bool)

(assert (=> b!78505 (=> (not res!41102) (not e!51305))))

(assert (=> b!78505 (= res!41102 (not (contains!742 lt!36316 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78506 () Bool)

(assert (=> b!78506 (= e!51306 call!7213)))

(assert (= (and d!18619 c!12049) b!78495))

(assert (= (and d!18619 (not c!12049)) b!78500))

(assert (= (and b!78500 c!12050) b!78499))

(assert (= (and b!78500 (not c!12050)) b!78506))

(assert (= (or b!78499 b!78506) bm!7210))

(assert (= (and d!18619 res!41101) b!78505))

(assert (= (and b!78505 res!41102) b!78502))

(assert (= (and b!78502 res!41104) b!78498))

(assert (= (and b!78502 c!12051) b!78501))

(assert (= (and b!78502 (not c!12051)) b!78503))

(assert (= (and b!78501 res!41103) b!78497))

(assert (= (and b!78503 c!12052) b!78496))

(assert (= (and b!78503 (not c!12052)) b!78504))

(declare-fun b_lambda!3509 () Bool)

(assert (=> (not b_lambda!3509) (not b!78497)))

(assert (=> b!78497 t!5150))

(declare-fun b_and!4823 () Bool)

(assert (= b_and!4819 (and (=> t!5150 result!2811) b_and!4823)))

(assert (=> b!78497 t!5152))

(declare-fun b_and!4825 () Bool)

(assert (= b_and!4821 (and (=> t!5152 result!2815) b_and!4825)))

(declare-fun b_lambda!3511 () Bool)

(assert (=> (not b_lambda!3511) (not b!78499)))

(assert (=> b!78499 t!5150))

(declare-fun b_and!4827 () Bool)

(assert (= b_and!4823 (and (=> t!5150 result!2811) b_and!4827)))

(assert (=> b!78499 t!5152))

(declare-fun b_and!4829 () Bool)

(assert (= b_and!4825 (and (=> t!5152 result!2815) b_and!4829)))

(declare-fun m!78845 () Bool)

(assert (=> b!78496 m!78845))

(assert (=> bm!7210 m!78845))

(declare-fun m!78847 () Bool)

(assert (=> b!78501 m!78847))

(assert (=> b!78501 m!78847))

(declare-fun m!78849 () Bool)

(assert (=> b!78501 m!78849))

(declare-fun m!78851 () Bool)

(assert (=> d!18619 m!78851))

(assert (=> d!18619 m!77987))

(assert (=> b!78498 m!78847))

(assert (=> b!78498 m!78847))

(declare-fun m!78853 () Bool)

(assert (=> b!78498 m!78853))

(assert (=> b!78500 m!78847))

(assert (=> b!78500 m!78847))

(assert (=> b!78500 m!78853))

(declare-fun m!78855 () Bool)

(assert (=> b!78505 m!78855))

(declare-fun m!78857 () Bool)

(assert (=> b!78504 m!78857))

(declare-fun m!78859 () Bool)

(assert (=> b!78497 m!78859))

(assert (=> b!78497 m!78001))

(declare-fun m!78861 () Bool)

(assert (=> b!78497 m!78861))

(assert (=> b!78497 m!78847))

(assert (=> b!78497 m!78859))

(assert (=> b!78497 m!78847))

(declare-fun m!78863 () Bool)

(assert (=> b!78497 m!78863))

(assert (=> b!78497 m!78001))

(declare-fun m!78865 () Bool)

(assert (=> b!78499 m!78865))

(assert (=> b!78499 m!78859))

(assert (=> b!78499 m!78001))

(assert (=> b!78499 m!78861))

(assert (=> b!78499 m!78847))

(declare-fun m!78867 () Bool)

(assert (=> b!78499 m!78867))

(assert (=> b!78499 m!78859))

(declare-fun m!78869 () Bool)

(assert (=> b!78499 m!78869))

(declare-fun m!78871 () Bool)

(assert (=> b!78499 m!78871))

(assert (=> b!78499 m!78869))

(assert (=> b!78499 m!78001))

(assert (=> b!78024 d!18619))

(assert (=> b!77975 d!18513))

(declare-fun call!7218 () ListLongMap!1447)

(declare-fun c!12058 () Bool)

(declare-fun c!12054 () Bool)

(declare-fun call!7220 () ListLongMap!1447)

(declare-fun call!7214 () ListLongMap!1447)

(declare-fun call!7219 () ListLongMap!1447)

(declare-fun bm!7211 () Bool)

(assert (=> bm!7211 (= call!7220 (+!105 (ite c!12054 call!7218 (ite c!12058 call!7214 call!7219)) (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(declare-fun b!78507 () Bool)

(declare-fun lt!36337 () ListLongMap!1447)

(declare-fun e!51318 () Bool)

(assert (=> b!78507 (= e!51318 (= (apply!79 lt!36337 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))

(declare-fun b!78508 () Bool)

(declare-fun e!51321 () ListLongMap!1447)

(assert (=> b!78508 (= e!51321 call!7219)))

(declare-fun b!78509 () Bool)

(declare-fun e!51311 () ListLongMap!1447)

(declare-fun call!7217 () ListLongMap!1447)

(assert (=> b!78509 (= e!51311 call!7217)))

(declare-fun c!12055 () Bool)

(declare-fun b!78510 () Bool)

(assert (=> b!78510 (= c!12055 (and (not (= (bvand (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78510 (= e!51311 e!51321)))

(declare-fun b!78511 () Bool)

(declare-fun e!51316 () Bool)

(declare-fun call!7215 () Bool)

(assert (=> b!78511 (= e!51316 (not call!7215))))

(declare-fun b!78512 () Bool)

(declare-fun e!51315 () Bool)

(assert (=> b!78512 (= e!51315 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7213 () Bool)

(assert (=> bm!7213 (= call!7219 call!7214)))

(declare-fun b!78513 () Bool)

(declare-fun e!51314 () Bool)

(declare-fun call!7216 () Bool)

(assert (=> b!78513 (= e!51314 (not call!7216))))

(declare-fun b!78514 () Bool)

(declare-fun e!51313 () Bool)

(assert (=> b!78514 (= e!51313 e!51316)))

(declare-fun c!12056 () Bool)

(assert (=> b!78514 (= c!12056 (not (= (bvand (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7214 () Bool)

(assert (=> bm!7214 (= call!7216 (contains!742 lt!36337 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7215 () Bool)

(assert (=> bm!7215 (= call!7218 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) (zeroValue!2170 newMap!16) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78515 () Bool)

(assert (=> b!78515 (= e!51321 call!7217)))

(declare-fun b!78516 () Bool)

(declare-fun e!51317 () ListLongMap!1447)

(assert (=> b!78516 (= e!51317 e!51311)))

(assert (=> b!78516 (= c!12058 (and (not (= (bvand (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7216 () Bool)

(assert (=> bm!7216 (= call!7217 call!7220)))

(declare-fun b!78517 () Bool)

(declare-fun res!41110 () Bool)

(assert (=> b!78517 (=> (not res!41110) (not e!51313))))

(assert (=> b!78517 (= res!41110 e!51314)))

(declare-fun c!12057 () Bool)

(assert (=> b!78517 (= c!12057 (not (= (bvand (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78518 () Bool)

(declare-fun e!51319 () Unit!2257)

(declare-fun Unit!2274 () Unit!2257)

(assert (=> b!78518 (= e!51319 Unit!2274)))

(declare-fun b!78519 () Bool)

(declare-fun e!51312 () Bool)

(assert (=> b!78519 (= e!51314 e!51312)))

(declare-fun res!41107 () Bool)

(assert (=> b!78519 (= res!41107 call!7216)))

(assert (=> b!78519 (=> (not res!41107) (not e!51312))))

(declare-fun b!78520 () Bool)

(assert (=> b!78520 (= e!51316 e!51318)))

(declare-fun res!41109 () Bool)

(assert (=> b!78520 (= res!41109 call!7215)))

(assert (=> b!78520 (=> (not res!41109) (not e!51318))))

(declare-fun b!78521 () Bool)

(declare-fun e!51322 () Bool)

(assert (=> b!78521 (= e!51322 (= (apply!79 lt!36337 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78521 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))))))))

(assert (=> b!78521 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun d!18621 () Bool)

(assert (=> d!18621 e!51313))

(declare-fun res!41111 () Bool)

(assert (=> d!18621 (=> (not res!41111) (not e!51313))))

(assert (=> d!18621 (= res!41111 (or (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))))

(declare-fun lt!36327 () ListLongMap!1447)

(assert (=> d!18621 (= lt!36337 lt!36327)))

(declare-fun lt!36344 () Unit!2257)

(assert (=> d!18621 (= lt!36344 e!51319)))

(declare-fun c!12053 () Bool)

(assert (=> d!18621 (= c!12053 e!51315)))

(declare-fun res!41106 () Bool)

(assert (=> d!18621 (=> (not res!41106) (not e!51315))))

(assert (=> d!18621 (= res!41106 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18621 (= lt!36327 e!51317)))

(assert (=> d!18621 (= c!12054 (and (not (= (bvand (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18621 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18621 (= (getCurrentListMap!433 (_keys!3932 newMap!16) (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) (zeroValue!2170 newMap!16) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36337)))

(declare-fun bm!7212 () Bool)

(assert (=> bm!7212 (= call!7215 (contains!742 lt!36337 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7217 () Bool)

(assert (=> bm!7217 (= call!7214 call!7218)))

(declare-fun b!78522 () Bool)

(declare-fun lt!36326 () Unit!2257)

(assert (=> b!78522 (= e!51319 lt!36326)))

(declare-fun lt!36332 () ListLongMap!1447)

(assert (=> b!78522 (= lt!36332 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) (zeroValue!2170 newMap!16) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36325 () (_ BitVec 64))

(assert (=> b!78522 (= lt!36325 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36334 () (_ BitVec 64))

(assert (=> b!78522 (= lt!36334 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36339 () Unit!2257)

(assert (=> b!78522 (= lt!36339 (addStillContains!55 lt!36332 lt!36325 (zeroValue!2170 newMap!16) lt!36334))))

(assert (=> b!78522 (contains!742 (+!105 lt!36332 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16))) lt!36334)))

(declare-fun lt!36333 () Unit!2257)

(assert (=> b!78522 (= lt!36333 lt!36339)))

(declare-fun lt!36324 () ListLongMap!1447)

(assert (=> b!78522 (= lt!36324 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) (zeroValue!2170 newMap!16) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36328 () (_ BitVec 64))

(assert (=> b!78522 (= lt!36328 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36330 () (_ BitVec 64))

(assert (=> b!78522 (= lt!36330 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36329 () Unit!2257)

(assert (=> b!78522 (= lt!36329 (addApplyDifferent!55 lt!36324 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) lt!36330))))

(assert (=> b!78522 (= (apply!79 (+!105 lt!36324 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) lt!36330) (apply!79 lt!36324 lt!36330))))

(declare-fun lt!36323 () Unit!2257)

(assert (=> b!78522 (= lt!36323 lt!36329)))

(declare-fun lt!36341 () ListLongMap!1447)

(assert (=> b!78522 (= lt!36341 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) (zeroValue!2170 newMap!16) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36340 () (_ BitVec 64))

(assert (=> b!78522 (= lt!36340 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36342 () (_ BitVec 64))

(assert (=> b!78522 (= lt!36342 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36331 () Unit!2257)

(assert (=> b!78522 (= lt!36331 (addApplyDifferent!55 lt!36341 lt!36340 (zeroValue!2170 newMap!16) lt!36342))))

(assert (=> b!78522 (= (apply!79 (+!105 lt!36341 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16))) lt!36342) (apply!79 lt!36341 lt!36342))))

(declare-fun lt!36335 () Unit!2257)

(assert (=> b!78522 (= lt!36335 lt!36331)))

(declare-fun lt!36338 () ListLongMap!1447)

(assert (=> b!78522 (= lt!36338 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) (zeroValue!2170 newMap!16) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36343 () (_ BitVec 64))

(assert (=> b!78522 (= lt!36343 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36336 () (_ BitVec 64))

(assert (=> b!78522 (= lt!36336 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78522 (= lt!36326 (addApplyDifferent!55 lt!36338 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) lt!36336))))

(assert (=> b!78522 (= (apply!79 (+!105 lt!36338 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) lt!36336) (apply!79 lt!36338 lt!36336))))

(declare-fun b!78523 () Bool)

(declare-fun res!41113 () Bool)

(assert (=> b!78523 (=> (not res!41113) (not e!51313))))

(declare-fun e!51310 () Bool)

(assert (=> b!78523 (= res!41113 e!51310)))

(declare-fun res!41108 () Bool)

(assert (=> b!78523 (=> res!41108 e!51310)))

(declare-fun e!51320 () Bool)

(assert (=> b!78523 (= res!41108 (not e!51320))))

(declare-fun res!41105 () Bool)

(assert (=> b!78523 (=> (not res!41105) (not e!51320))))

(assert (=> b!78523 (= res!41105 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78524 () Bool)

(assert (=> b!78524 (= e!51310 e!51322)))

(declare-fun res!41112 () Bool)

(assert (=> b!78524 (=> (not res!41112) (not e!51322))))

(assert (=> b!78524 (= res!41112 (contains!742 lt!36337 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78524 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78525 () Bool)

(assert (=> b!78525 (= e!51312 (= (apply!79 lt!36337 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(declare-fun b!78526 () Bool)

(assert (=> b!78526 (= e!51320 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78527 () Bool)

(assert (=> b!78527 (= e!51317 (+!105 call!7220 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))

(assert (= (and d!18621 c!12054) b!78527))

(assert (= (and d!18621 (not c!12054)) b!78516))

(assert (= (and b!78516 c!12058) b!78509))

(assert (= (and b!78516 (not c!12058)) b!78510))

(assert (= (and b!78510 c!12055) b!78515))

(assert (= (and b!78510 (not c!12055)) b!78508))

(assert (= (or b!78515 b!78508) bm!7213))

(assert (= (or b!78509 bm!7213) bm!7217))

(assert (= (or b!78509 b!78515) bm!7216))

(assert (= (or b!78527 bm!7217) bm!7215))

(assert (= (or b!78527 bm!7216) bm!7211))

(assert (= (and d!18621 res!41106) b!78512))

(assert (= (and d!18621 c!12053) b!78522))

(assert (= (and d!18621 (not c!12053)) b!78518))

(assert (= (and d!18621 res!41111) b!78523))

(assert (= (and b!78523 res!41105) b!78526))

(assert (= (and b!78523 (not res!41108)) b!78524))

(assert (= (and b!78524 res!41112) b!78521))

(assert (= (and b!78523 res!41113) b!78517))

(assert (= (and b!78517 c!12057) b!78519))

(assert (= (and b!78517 (not c!12057)) b!78513))

(assert (= (and b!78519 res!41107) b!78525))

(assert (= (or b!78519 b!78513) bm!7214))

(assert (= (and b!78517 res!41110) b!78514))

(assert (= (and b!78514 c!12056) b!78520))

(assert (= (and b!78514 (not c!12056)) b!78511))

(assert (= (and b!78520 res!41109) b!78507))

(assert (= (or b!78520 b!78511) bm!7212))

(declare-fun b_lambda!3513 () Bool)

(assert (=> (not b_lambda!3513) (not b!78521)))

(assert (=> b!78521 t!5161))

(declare-fun b_and!4831 () Bool)

(assert (= b_and!4827 (and (=> t!5161 result!2825) b_and!4831)))

(assert (=> b!78521 t!5163))

(declare-fun b_and!4833 () Bool)

(assert (= b_and!4829 (and (=> t!5163 result!2827) b_and!4833)))

(declare-fun m!78873 () Bool)

(assert (=> b!78525 m!78873))

(declare-fun m!78875 () Bool)

(assert (=> bm!7214 m!78875))

(declare-fun m!78877 () Bool)

(assert (=> bm!7212 m!78877))

(declare-fun m!78879 () Bool)

(assert (=> b!78522 m!78879))

(declare-fun m!78881 () Bool)

(assert (=> b!78522 m!78881))

(declare-fun m!78883 () Bool)

(assert (=> b!78522 m!78883))

(declare-fun m!78885 () Bool)

(assert (=> b!78522 m!78885))

(declare-fun m!78887 () Bool)

(assert (=> b!78522 m!78887))

(declare-fun m!78889 () Bool)

(assert (=> b!78522 m!78889))

(declare-fun m!78891 () Bool)

(assert (=> b!78522 m!78891))

(assert (=> b!78522 m!78509))

(declare-fun m!78893 () Bool)

(assert (=> b!78522 m!78893))

(declare-fun m!78895 () Bool)

(assert (=> b!78522 m!78895))

(declare-fun m!78897 () Bool)

(assert (=> b!78522 m!78897))

(declare-fun m!78899 () Bool)

(assert (=> b!78522 m!78899))

(declare-fun m!78901 () Bool)

(assert (=> b!78522 m!78901))

(declare-fun m!78903 () Bool)

(assert (=> b!78522 m!78903))

(assert (=> b!78522 m!78897))

(assert (=> b!78522 m!78883))

(declare-fun m!78905 () Bool)

(assert (=> b!78522 m!78905))

(declare-fun m!78907 () Bool)

(assert (=> b!78522 m!78907))

(declare-fun m!78909 () Bool)

(assert (=> b!78522 m!78909))

(assert (=> b!78522 m!78879))

(assert (=> b!78522 m!78887))

(assert (=> b!78521 m!78509))

(declare-fun m!78911 () Bool)

(assert (=> b!78521 m!78911))

(assert (=> b!78521 m!78509))

(declare-fun m!78913 () Bool)

(assert (=> b!78521 m!78913))

(assert (=> b!78521 m!78533))

(declare-fun m!78915 () Bool)

(assert (=> b!78521 m!78915))

(assert (=> b!78521 m!78533))

(assert (=> b!78521 m!78913))

(assert (=> b!78512 m!78509))

(assert (=> b!78512 m!78509))

(assert (=> b!78512 m!78537))

(declare-fun m!78917 () Bool)

(assert (=> b!78507 m!78917))

(assert (=> bm!7215 m!78907))

(declare-fun m!78919 () Bool)

(assert (=> bm!7211 m!78919))

(assert (=> b!78524 m!78509))

(assert (=> b!78524 m!78509))

(declare-fun m!78921 () Bool)

(assert (=> b!78524 m!78921))

(declare-fun m!78923 () Bool)

(assert (=> b!78527 m!78923))

(assert (=> d!18621 m!78411))

(assert (=> b!78526 m!78509))

(assert (=> b!78526 m!78509))

(assert (=> b!78526 m!78537))

(assert (=> bm!7160 d!18621))

(declare-fun bm!7220 () Bool)

(declare-fun call!7223 () Bool)

(assert (=> bm!7220 (= call!7223 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!78536 () Bool)

(declare-fun e!51330 () Bool)

(assert (=> b!78536 (= e!51330 call!7223)))

(declare-fun b!78537 () Bool)

(declare-fun e!51331 () Bool)

(declare-fun e!51329 () Bool)

(assert (=> b!78537 (= e!51331 e!51329)))

(declare-fun c!12061 () Bool)

(assert (=> b!78537 (= c!12061 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78538 () Bool)

(assert (=> b!78538 (= e!51329 call!7223)))

(declare-fun b!78539 () Bool)

(assert (=> b!78539 (= e!51329 e!51330)))

(declare-fun lt!36351 () (_ BitVec 64))

(assert (=> b!78539 (= lt!36351 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36353 () Unit!2257)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3975 (_ BitVec 64) (_ BitVec 32)) Unit!2257)

(assert (=> b!78539 (= lt!36353 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3932 newMap!16) lt!36351 #b00000000000000000000000000000000))))

(assert (=> b!78539 (arrayContainsKey!0 (_keys!3932 newMap!16) lt!36351 #b00000000000000000000000000000000)))

(declare-fun lt!36352 () Unit!2257)

(assert (=> b!78539 (= lt!36352 lt!36353)))

(declare-fun res!41119 () Bool)

(assert (=> b!78539 (= res!41119 (= (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (_keys!3932 newMap!16) (mask!6268 newMap!16)) (Found!240 #b00000000000000000000000000000000)))))

(assert (=> b!78539 (=> (not res!41119) (not e!51330))))

(declare-fun d!18623 () Bool)

(declare-fun res!41118 () Bool)

(assert (=> d!18623 (=> res!41118 e!51331)))

(assert (=> d!18623 (= res!41118 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18623 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 newMap!16) (mask!6268 newMap!16)) e!51331)))

(assert (= (and d!18623 (not res!41118)) b!78537))

(assert (= (and b!78537 c!12061) b!78539))

(assert (= (and b!78537 (not c!12061)) b!78538))

(assert (= (and b!78539 res!41119) b!78536))

(assert (= (or b!78536 b!78538) bm!7220))

(declare-fun m!78925 () Bool)

(assert (=> bm!7220 m!78925))

(assert (=> b!78537 m!78509))

(assert (=> b!78537 m!78509))

(assert (=> b!78537 m!78537))

(assert (=> b!78539 m!78509))

(declare-fun m!78927 () Bool)

(assert (=> b!78539 m!78927))

(declare-fun m!78929 () Bool)

(assert (=> b!78539 m!78929))

(assert (=> b!78539 m!78509))

(declare-fun m!78931 () Bool)

(assert (=> b!78539 m!78931))

(assert (=> b!78052 d!18623))

(declare-fun b!78543 () Bool)

(declare-fun e!51333 () Option!143)

(assert (=> b!78543 (= e!51333 None!141)))

(declare-fun d!18625 () Bool)

(declare-fun c!12062 () Bool)

(assert (=> d!18625 (= c!12062 (and ((_ is Cons!1503) (toList!739 lt!36033)) (= (_1!1097 (h!2091 (toList!739 lt!36033))) (_1!1097 lt!35864))))))

(declare-fun e!51332 () Option!143)

(assert (=> d!18625 (= (getValueByKey!137 (toList!739 lt!36033) (_1!1097 lt!35864)) e!51332)))

(declare-fun b!78542 () Bool)

(assert (=> b!78542 (= e!51333 (getValueByKey!137 (t!5153 (toList!739 lt!36033)) (_1!1097 lt!35864)))))

(declare-fun b!78540 () Bool)

(assert (=> b!78540 (= e!51332 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36033)))))))

(declare-fun b!78541 () Bool)

(assert (=> b!78541 (= e!51332 e!51333)))

(declare-fun c!12063 () Bool)

(assert (=> b!78541 (= c!12063 (and ((_ is Cons!1503) (toList!739 lt!36033)) (not (= (_1!1097 (h!2091 (toList!739 lt!36033))) (_1!1097 lt!35864)))))))

(assert (= (and d!18625 c!12062) b!78540))

(assert (= (and d!18625 (not c!12062)) b!78541))

(assert (= (and b!78541 c!12063) b!78542))

(assert (= (and b!78541 (not c!12063)) b!78543))

(declare-fun m!78933 () Bool)

(assert (=> b!78542 m!78933))

(assert (=> b!78037 d!18625))

(declare-fun d!18627 () Bool)

(declare-fun lt!36354 () Bool)

(assert (=> d!18627 (= lt!36354 (select (content!83 (toList!739 lt!36049)) lt!35870))))

(declare-fun e!51335 () Bool)

(assert (=> d!18627 (= lt!36354 e!51335)))

(declare-fun res!41120 () Bool)

(assert (=> d!18627 (=> (not res!41120) (not e!51335))))

(assert (=> d!18627 (= res!41120 ((_ is Cons!1503) (toList!739 lt!36049)))))

(assert (=> d!18627 (= (contains!743 (toList!739 lt!36049) lt!35870) lt!36354)))

(declare-fun b!78544 () Bool)

(declare-fun e!51334 () Bool)

(assert (=> b!78544 (= e!51335 e!51334)))

(declare-fun res!41121 () Bool)

(assert (=> b!78544 (=> res!41121 e!51334)))

(assert (=> b!78544 (= res!41121 (= (h!2091 (toList!739 lt!36049)) lt!35870))))

(declare-fun b!78545 () Bool)

(assert (=> b!78545 (= e!51334 (contains!743 (t!5153 (toList!739 lt!36049)) lt!35870))))

(assert (= (and d!18627 res!41120) b!78544))

(assert (= (and b!78544 (not res!41121)) b!78545))

(declare-fun m!78935 () Bool)

(assert (=> d!18627 m!78935))

(declare-fun m!78937 () Bool)

(assert (=> d!18627 m!78937))

(declare-fun m!78939 () Bool)

(assert (=> b!78545 m!78939))

(assert (=> b!78044 d!18627))

(declare-fun d!18629 () Bool)

(declare-fun e!51336 () Bool)

(assert (=> d!18629 e!51336))

(declare-fun res!41122 () Bool)

(assert (=> d!18629 (=> res!41122 e!51336)))

(declare-fun lt!36358 () Bool)

(assert (=> d!18629 (= res!41122 (not lt!36358))))

(declare-fun lt!36355 () Bool)

(assert (=> d!18629 (= lt!36358 lt!36355)))

(declare-fun lt!36356 () Unit!2257)

(declare-fun e!51337 () Unit!2257)

(assert (=> d!18629 (= lt!36356 e!51337)))

(declare-fun c!12064 () Bool)

(assert (=> d!18629 (= c!12064 lt!36355)))

(assert (=> d!18629 (= lt!36355 (containsKey!141 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18629 (= (contains!742 lt!35983 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36358)))

(declare-fun b!78546 () Bool)

(declare-fun lt!36357 () Unit!2257)

(assert (=> b!78546 (= e!51337 lt!36357)))

(assert (=> b!78546 (= lt!36357 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78546 (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78547 () Bool)

(declare-fun Unit!2275 () Unit!2257)

(assert (=> b!78547 (= e!51337 Unit!2275)))

(declare-fun b!78548 () Bool)

(assert (=> b!78548 (= e!51336 (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18629 c!12064) b!78546))

(assert (= (and d!18629 (not c!12064)) b!78547))

(assert (= (and d!18629 (not res!41122)) b!78548))

(declare-fun m!78941 () Bool)

(assert (=> d!18629 m!78941))

(declare-fun m!78943 () Bool)

(assert (=> b!78546 m!78943))

(declare-fun m!78945 () Bool)

(assert (=> b!78546 m!78945))

(assert (=> b!78546 m!78945))

(declare-fun m!78947 () Bool)

(assert (=> b!78546 m!78947))

(assert (=> b!78548 m!78945))

(assert (=> b!78548 m!78945))

(assert (=> b!78548 m!78947))

(assert (=> bm!7100 d!18629))

(assert (=> b!78084 d!18607))

(declare-fun d!18631 () Bool)

(declare-fun e!51338 () Bool)

(assert (=> d!18631 e!51338))

(declare-fun res!41123 () Bool)

(assert (=> d!18631 (=> res!41123 e!51338)))

(declare-fun lt!36362 () Bool)

(assert (=> d!18631 (= res!41123 (not lt!36362))))

(declare-fun lt!36359 () Bool)

(assert (=> d!18631 (= lt!36362 lt!36359)))

(declare-fun lt!36360 () Unit!2257)

(declare-fun e!51339 () Unit!2257)

(assert (=> d!18631 (= lt!36360 e!51339)))

(declare-fun c!12065 () Bool)

(assert (=> d!18631 (= c!12065 lt!36359)))

(assert (=> d!18631 (= lt!36359 (containsKey!141 (toList!739 lt!36000) (_1!1097 lt!35870)))))

(assert (=> d!18631 (= (contains!742 lt!36000 (_1!1097 lt!35870)) lt!36362)))

(declare-fun b!78549 () Bool)

(declare-fun lt!36361 () Unit!2257)

(assert (=> b!78549 (= e!51339 lt!36361)))

(assert (=> b!78549 (= lt!36361 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36000) (_1!1097 lt!35870)))))

(assert (=> b!78549 (isDefined!90 (getValueByKey!137 (toList!739 lt!36000) (_1!1097 lt!35870)))))

(declare-fun b!78550 () Bool)

(declare-fun Unit!2276 () Unit!2257)

(assert (=> b!78550 (= e!51339 Unit!2276)))

(declare-fun b!78551 () Bool)

(assert (=> b!78551 (= e!51338 (isDefined!90 (getValueByKey!137 (toList!739 lt!36000) (_1!1097 lt!35870))))))

(assert (= (and d!18631 c!12065) b!78549))

(assert (= (and d!18631 (not c!12065)) b!78550))

(assert (= (and d!18631 (not res!41123)) b!78551))

(declare-fun m!78949 () Bool)

(assert (=> d!18631 m!78949))

(declare-fun m!78951 () Bool)

(assert (=> b!78549 m!78951))

(assert (=> b!78549 m!78153))

(assert (=> b!78549 m!78153))

(declare-fun m!78953 () Bool)

(assert (=> b!78549 m!78953))

(assert (=> b!78551 m!78153))

(assert (=> b!78551 m!78153))

(assert (=> b!78551 m!78953))

(assert (=> d!18431 d!18631))

(declare-fun b!78555 () Bool)

(declare-fun e!51341 () Option!143)

(assert (=> b!78555 (= e!51341 None!141)))

(declare-fun d!18633 () Bool)

(declare-fun c!12066 () Bool)

(assert (=> d!18633 (= c!12066 (and ((_ is Cons!1503) lt!35999) (= (_1!1097 (h!2091 lt!35999)) (_1!1097 lt!35870))))))

(declare-fun e!51340 () Option!143)

(assert (=> d!18633 (= (getValueByKey!137 lt!35999 (_1!1097 lt!35870)) e!51340)))

(declare-fun b!78554 () Bool)

(assert (=> b!78554 (= e!51341 (getValueByKey!137 (t!5153 lt!35999) (_1!1097 lt!35870)))))

(declare-fun b!78552 () Bool)

(assert (=> b!78552 (= e!51340 (Some!142 (_2!1097 (h!2091 lt!35999))))))

(declare-fun b!78553 () Bool)

(assert (=> b!78553 (= e!51340 e!51341)))

(declare-fun c!12067 () Bool)

(assert (=> b!78553 (= c!12067 (and ((_ is Cons!1503) lt!35999) (not (= (_1!1097 (h!2091 lt!35999)) (_1!1097 lt!35870)))))))

(assert (= (and d!18633 c!12066) b!78552))

(assert (= (and d!18633 (not c!12066)) b!78553))

(assert (= (and b!78553 c!12067) b!78554))

(assert (= (and b!78553 (not c!12067)) b!78555))

(declare-fun m!78955 () Bool)

(assert (=> b!78554 m!78955))

(assert (=> d!18431 d!18633))

(declare-fun d!18635 () Bool)

(assert (=> d!18635 (= (getValueByKey!137 lt!35999 (_1!1097 lt!35870)) (Some!142 (_2!1097 lt!35870)))))

(declare-fun lt!36363 () Unit!2257)

(assert (=> d!18635 (= lt!36363 (choose!456 lt!35999 (_1!1097 lt!35870) (_2!1097 lt!35870)))))

(declare-fun e!51342 () Bool)

(assert (=> d!18635 e!51342))

(declare-fun res!41124 () Bool)

(assert (=> d!18635 (=> (not res!41124) (not e!51342))))

(assert (=> d!18635 (= res!41124 (isStrictlySorted!295 lt!35999))))

(assert (=> d!18635 (= (lemmaContainsTupThenGetReturnValue!54 lt!35999 (_1!1097 lt!35870) (_2!1097 lt!35870)) lt!36363)))

(declare-fun b!78556 () Bool)

(declare-fun res!41125 () Bool)

(assert (=> b!78556 (=> (not res!41125) (not e!51342))))

(assert (=> b!78556 (= res!41125 (containsKey!141 lt!35999 (_1!1097 lt!35870)))))

(declare-fun b!78557 () Bool)

(assert (=> b!78557 (= e!51342 (contains!743 lt!35999 (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(assert (= (and d!18635 res!41124) b!78556))

(assert (= (and b!78556 res!41125) b!78557))

(assert (=> d!18635 m!78147))

(declare-fun m!78957 () Bool)

(assert (=> d!18635 m!78957))

(declare-fun m!78959 () Bool)

(assert (=> d!18635 m!78959))

(declare-fun m!78961 () Bool)

(assert (=> b!78556 m!78961))

(declare-fun m!78963 () Bool)

(assert (=> b!78557 m!78963))

(assert (=> d!18431 d!18635))

(declare-fun c!12071 () Bool)

(declare-fun b!78558 () Bool)

(declare-fun c!12070 () Bool)

(declare-fun e!51343 () List!1507)

(assert (=> b!78558 (= e!51343 (ite c!12071 (t!5153 (toList!739 lt!35869)) (ite c!12070 (Cons!1503 (h!2091 (toList!739 lt!35869)) (t!5153 (toList!739 lt!35869))) Nil!1504)))))

(declare-fun b!78559 () Bool)

(declare-fun e!51347 () List!1507)

(declare-fun call!7226 () List!1507)

(assert (=> b!78559 (= e!51347 call!7226)))

(declare-fun bm!7221 () Bool)

(declare-fun call!7224 () List!1507)

(declare-fun call!7225 () List!1507)

(assert (=> bm!7221 (= call!7224 call!7225)))

(declare-fun b!78560 () Bool)

(assert (=> b!78560 (= c!12070 (and ((_ is Cons!1503) (toList!739 lt!35869)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 lt!35870))))))

(declare-fun e!51345 () List!1507)

(declare-fun e!51344 () List!1507)

(assert (=> b!78560 (= e!51345 e!51344)))

(declare-fun b!78561 () Bool)

(assert (=> b!78561 (= e!51343 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35869)) (_1!1097 lt!35870) (_2!1097 lt!35870)))))

(declare-fun b!78562 () Bool)

(declare-fun res!41127 () Bool)

(declare-fun e!51346 () Bool)

(assert (=> b!78562 (=> (not res!41127) (not e!51346))))

(declare-fun lt!36364 () List!1507)

(assert (=> b!78562 (= res!41127 (containsKey!141 lt!36364 (_1!1097 lt!35870)))))

(declare-fun c!12068 () Bool)

(declare-fun bm!7222 () Bool)

(assert (=> bm!7222 (= call!7226 ($colon$colon!69 e!51343 (ite c!12068 (h!2091 (toList!739 lt!35869)) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870)))))))

(declare-fun c!12069 () Bool)

(assert (=> bm!7222 (= c!12069 c!12068)))

(declare-fun b!78563 () Bool)

(assert (=> b!78563 (= e!51347 e!51345)))

(assert (=> b!78563 (= c!12071 (and ((_ is Cons!1503) (toList!739 lt!35869)) (= (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 lt!35870))))))

(declare-fun b!78565 () Bool)

(assert (=> b!78565 (= e!51345 call!7225)))

(declare-fun b!78566 () Bool)

(assert (=> b!78566 (= e!51346 (contains!743 lt!36364 (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun b!78564 () Bool)

(assert (=> b!78564 (= e!51344 call!7224)))

(declare-fun d!18637 () Bool)

(assert (=> d!18637 e!51346))

(declare-fun res!41126 () Bool)

(assert (=> d!18637 (=> (not res!41126) (not e!51346))))

(assert (=> d!18637 (= res!41126 (isStrictlySorted!295 lt!36364))))

(assert (=> d!18637 (= lt!36364 e!51347)))

(assert (=> d!18637 (= c!12068 (and ((_ is Cons!1503) (toList!739 lt!35869)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 lt!35870))))))

(assert (=> d!18637 (isStrictlySorted!295 (toList!739 lt!35869))))

(assert (=> d!18637 (= (insertStrictlySorted!57 (toList!739 lt!35869) (_1!1097 lt!35870) (_2!1097 lt!35870)) lt!36364)))

(declare-fun bm!7223 () Bool)

(assert (=> bm!7223 (= call!7225 call!7226)))

(declare-fun b!78567 () Bool)

(assert (=> b!78567 (= e!51344 call!7224)))

(assert (= (and d!18637 c!12068) b!78559))

(assert (= (and d!18637 (not c!12068)) b!78563))

(assert (= (and b!78563 c!12071) b!78565))

(assert (= (and b!78563 (not c!12071)) b!78560))

(assert (= (and b!78560 c!12070) b!78564))

(assert (= (and b!78560 (not c!12070)) b!78567))

(assert (= (or b!78564 b!78567) bm!7221))

(assert (= (or b!78565 bm!7221) bm!7223))

(assert (= (or b!78559 bm!7223) bm!7222))

(assert (= (and bm!7222 c!12069) b!78561))

(assert (= (and bm!7222 (not c!12069)) b!78558))

(assert (= (and d!18637 res!41126) b!78562))

(assert (= (and b!78562 res!41127) b!78566))

(declare-fun m!78965 () Bool)

(assert (=> b!78566 m!78965))

(declare-fun m!78967 () Bool)

(assert (=> d!18637 m!78967))

(declare-fun m!78969 () Bool)

(assert (=> d!18637 m!78969))

(declare-fun m!78971 () Bool)

(assert (=> b!78561 m!78971))

(declare-fun m!78973 () Bool)

(assert (=> b!78562 m!78973))

(declare-fun m!78975 () Bool)

(assert (=> bm!7222 m!78975))

(assert (=> d!18431 d!18637))

(declare-fun d!18639 () Bool)

(declare-fun e!51350 () Bool)

(assert (=> d!18639 e!51350))

(declare-fun res!41130 () Bool)

(assert (=> d!18639 (=> (not res!41130) (not e!51350))))

(assert (=> d!18639 (= res!41130 (and (bvsge (index!3095 lt!36128) #b00000000000000000000000000000000) (bvslt (index!3095 lt!36128) (size!2136 (_keys!3932 newMap!16)))))))

(declare-fun lt!36367 () Unit!2257)

(declare-fun choose!463 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) Int) Unit!2257)

(assert (=> d!18639 (= lt!36367 (choose!463 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3095 lt!36128) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18639 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18639 (= (lemmaValidKeyInArrayIsInListMap!89 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3095 lt!36128) (defaultEntry!2272 newMap!16)) lt!36367)))

(declare-fun b!78570 () Bool)

(assert (=> b!78570 (= e!51350 (contains!742 (getCurrentListMap!433 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))))))

(assert (= (and d!18639 res!41130) b!78570))

(declare-fun m!78977 () Bool)

(assert (=> d!18639 m!78977))

(assert (=> d!18639 m!78411))

(declare-fun m!78979 () Bool)

(assert (=> b!78570 m!78979))

(assert (=> b!78570 m!78321))

(assert (=> b!78570 m!78979))

(assert (=> b!78570 m!78321))

(declare-fun m!78981 () Bool)

(assert (=> b!78570 m!78981))

(assert (=> b!78180 d!18639))

(declare-fun d!18641 () Bool)

(declare-fun e!51353 () Bool)

(assert (=> d!18641 e!51353))

(declare-fun res!41133 () Bool)

(assert (=> d!18641 (=> (not res!41133) (not e!51353))))

(assert (=> d!18641 (= res!41133 (and (bvsge (index!3095 lt!36128) #b00000000000000000000000000000000) (bvslt (index!3095 lt!36128) (size!2137 (_values!2255 newMap!16)))))))

(declare-fun lt!36370 () Unit!2257)

(declare-fun choose!464 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) (_ BitVec 64) V!2995 Int) Unit!2257)

(assert (=> d!18641 (= lt!36370 (choose!464 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3095 lt!36128) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 (defaultEntry!2272 newMap!16)))))

(assert (=> d!18641 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18641 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3095 lt!36128) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 (defaultEntry!2272 newMap!16)) lt!36370)))

(declare-fun b!78573 () Bool)

(assert (=> b!78573 (= e!51353 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (getCurrentListMap!433 (_keys!3932 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))))

(assert (= (and d!18641 res!41133) b!78573))

(assert (=> d!18641 m!77965))

(declare-fun m!78983 () Bool)

(assert (=> d!18641 m!78983))

(assert (=> d!18641 m!78411))

(assert (=> b!78573 m!78087))

(assert (=> b!78573 m!78087))

(declare-fun m!78985 () Bool)

(assert (=> b!78573 m!78985))

(assert (=> b!78573 m!78341))

(declare-fun m!78987 () Bool)

(assert (=> b!78573 m!78987))

(assert (=> b!78180 d!18641))

(declare-fun d!18643 () Bool)

(declare-fun e!51354 () Bool)

(assert (=> d!18643 e!51354))

(declare-fun res!41134 () Bool)

(assert (=> d!18643 (=> res!41134 e!51354)))

(declare-fun lt!36374 () Bool)

(assert (=> d!18643 (= res!41134 (not lt!36374))))

(declare-fun lt!36371 () Bool)

(assert (=> d!18643 (= lt!36374 lt!36371)))

(declare-fun lt!36372 () Unit!2257)

(declare-fun e!51355 () Unit!2257)

(assert (=> d!18643 (= lt!36372 e!51355)))

(declare-fun c!12072 () Bool)

(assert (=> d!18643 (= c!12072 lt!36371)))

(assert (=> d!18643 (= lt!36371 (containsKey!141 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!18643 (= (contains!742 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) lt!36374)))

(declare-fun b!78574 () Bool)

(declare-fun lt!36373 () Unit!2257)

(assert (=> b!78574 (= e!51355 lt!36373)))

(assert (=> b!78574 (= lt!36373 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> b!78574 (isDefined!90 (getValueByKey!137 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!78575 () Bool)

(declare-fun Unit!2277 () Unit!2257)

(assert (=> b!78575 (= e!51355 Unit!2277)))

(declare-fun b!78576 () Bool)

(assert (=> b!78576 (= e!51354 (isDefined!90 (getValueByKey!137 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(assert (= (and d!18643 c!12072) b!78574))

(assert (= (and d!18643 (not c!12072)) b!78575))

(assert (= (and d!18643 (not res!41134)) b!78576))

(assert (=> d!18643 m!77965))

(declare-fun m!78989 () Bool)

(assert (=> d!18643 m!78989))

(assert (=> b!78574 m!77965))

(declare-fun m!78991 () Bool)

(assert (=> b!78574 m!78991))

(assert (=> b!78574 m!77965))

(declare-fun m!78993 () Bool)

(assert (=> b!78574 m!78993))

(assert (=> b!78574 m!78993))

(declare-fun m!78995 () Bool)

(assert (=> b!78574 m!78995))

(assert (=> b!78576 m!77965))

(assert (=> b!78576 m!78993))

(assert (=> b!78576 m!78993))

(assert (=> b!78576 m!78995))

(assert (=> b!78180 d!18643))

(declare-fun call!7231 () ListLongMap!1447)

(declare-fun call!7232 () ListLongMap!1447)

(declare-fun bm!7224 () Bool)

(declare-fun call!7227 () ListLongMap!1447)

(declare-fun c!12078 () Bool)

(declare-fun c!12074 () Bool)

(declare-fun call!7233 () ListLongMap!1447)

(assert (=> bm!7224 (= call!7233 (+!105 (ite c!12074 call!7231 (ite c!12078 call!7227 call!7232)) (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun b!78577 () Bool)

(declare-fun e!51364 () Bool)

(declare-fun lt!36389 () ListLongMap!1447)

(assert (=> b!78577 (= e!51364 (= (apply!79 lt!36389 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!78578 () Bool)

(declare-fun e!51367 () ListLongMap!1447)

(assert (=> b!78578 (= e!51367 call!7232)))

(declare-fun b!78579 () Bool)

(declare-fun e!51357 () ListLongMap!1447)

(declare-fun call!7230 () ListLongMap!1447)

(assert (=> b!78579 (= e!51357 call!7230)))

(declare-fun b!78580 () Bool)

(declare-fun c!12075 () Bool)

(assert (=> b!78580 (= c!12075 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78580 (= e!51357 e!51367)))

(declare-fun b!78581 () Bool)

(declare-fun e!51362 () Bool)

(declare-fun call!7228 () Bool)

(assert (=> b!78581 (= e!51362 (not call!7228))))

(declare-fun b!78582 () Bool)

(declare-fun e!51361 () Bool)

(assert (=> b!78582 (= e!51361 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7226 () Bool)

(assert (=> bm!7226 (= call!7232 call!7227)))

(declare-fun b!78583 () Bool)

(declare-fun e!51360 () Bool)

(declare-fun call!7229 () Bool)

(assert (=> b!78583 (= e!51360 (not call!7229))))

(declare-fun b!78584 () Bool)

(declare-fun e!51359 () Bool)

(assert (=> b!78584 (= e!51359 e!51362)))

(declare-fun c!12076 () Bool)

(assert (=> b!78584 (= c!12076 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7227 () Bool)

(assert (=> bm!7227 (= call!7229 (contains!742 lt!36389 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7228 () Bool)

(assert (=> bm!7228 (= call!7231 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78585 () Bool)

(assert (=> b!78585 (= e!51367 call!7230)))

(declare-fun b!78586 () Bool)

(declare-fun e!51363 () ListLongMap!1447)

(assert (=> b!78586 (= e!51363 e!51357)))

(assert (=> b!78586 (= c!12078 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7229 () Bool)

(assert (=> bm!7229 (= call!7230 call!7233)))

(declare-fun b!78587 () Bool)

(declare-fun res!41140 () Bool)

(assert (=> b!78587 (=> (not res!41140) (not e!51359))))

(assert (=> b!78587 (= res!41140 e!51360)))

(declare-fun c!12077 () Bool)

(assert (=> b!78587 (= c!12077 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78588 () Bool)

(declare-fun e!51365 () Unit!2257)

(declare-fun Unit!2278 () Unit!2257)

(assert (=> b!78588 (= e!51365 Unit!2278)))

(declare-fun b!78589 () Bool)

(declare-fun e!51358 () Bool)

(assert (=> b!78589 (= e!51360 e!51358)))

(declare-fun res!41137 () Bool)

(assert (=> b!78589 (= res!41137 call!7229)))

(assert (=> b!78589 (=> (not res!41137) (not e!51358))))

(declare-fun b!78590 () Bool)

(assert (=> b!78590 (= e!51362 e!51364)))

(declare-fun res!41139 () Bool)

(assert (=> b!78590 (= res!41139 call!7228)))

(assert (=> b!78590 (=> (not res!41139) (not e!51364))))

(declare-fun b!78591 () Bool)

(declare-fun e!51368 () Bool)

(assert (=> b!78591 (= e!51368 (= (apply!79 lt!36389 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78591 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (_values!2255 newMap!16))))))

(assert (=> b!78591 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun d!18645 () Bool)

(assert (=> d!18645 e!51359))

(declare-fun res!41141 () Bool)

(assert (=> d!18645 (=> (not res!41141) (not e!51359))))

(assert (=> d!18645 (= res!41141 (or (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))))

(declare-fun lt!36379 () ListLongMap!1447)

(assert (=> d!18645 (= lt!36389 lt!36379)))

(declare-fun lt!36396 () Unit!2257)

(assert (=> d!18645 (= lt!36396 e!51365)))

(declare-fun c!12073 () Bool)

(assert (=> d!18645 (= c!12073 e!51361)))

(declare-fun res!41136 () Bool)

(assert (=> d!18645 (=> (not res!41136) (not e!51361))))

(assert (=> d!18645 (= res!41136 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18645 (= lt!36379 e!51363)))

(assert (=> d!18645 (= c!12074 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18645 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18645 (= (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36389)))

(declare-fun bm!7225 () Bool)

(assert (=> bm!7225 (= call!7228 (contains!742 lt!36389 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7230 () Bool)

(assert (=> bm!7230 (= call!7227 call!7231)))

(declare-fun b!78592 () Bool)

(declare-fun lt!36378 () Unit!2257)

(assert (=> b!78592 (= e!51365 lt!36378)))

(declare-fun lt!36384 () ListLongMap!1447)

(assert (=> b!78592 (= lt!36384 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36377 () (_ BitVec 64))

(assert (=> b!78592 (= lt!36377 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36386 () (_ BitVec 64))

(assert (=> b!78592 (= lt!36386 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36391 () Unit!2257)

(assert (=> b!78592 (= lt!36391 (addStillContains!55 lt!36384 lt!36377 (zeroValue!2170 newMap!16) lt!36386))))

(assert (=> b!78592 (contains!742 (+!105 lt!36384 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16))) lt!36386)))

(declare-fun lt!36385 () Unit!2257)

(assert (=> b!78592 (= lt!36385 lt!36391)))

(declare-fun lt!36376 () ListLongMap!1447)

(assert (=> b!78592 (= lt!36376 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36380 () (_ BitVec 64))

(assert (=> b!78592 (= lt!36380 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36382 () (_ BitVec 64))

(assert (=> b!78592 (= lt!36382 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36381 () Unit!2257)

(assert (=> b!78592 (= lt!36381 (addApplyDifferent!55 lt!36376 lt!36380 (minValue!2170 newMap!16) lt!36382))))

(assert (=> b!78592 (= (apply!79 (+!105 lt!36376 (tuple2!2173 lt!36380 (minValue!2170 newMap!16))) lt!36382) (apply!79 lt!36376 lt!36382))))

(declare-fun lt!36375 () Unit!2257)

(assert (=> b!78592 (= lt!36375 lt!36381)))

(declare-fun lt!36393 () ListLongMap!1447)

(assert (=> b!78592 (= lt!36393 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36392 () (_ BitVec 64))

(assert (=> b!78592 (= lt!36392 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36394 () (_ BitVec 64))

(assert (=> b!78592 (= lt!36394 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36383 () Unit!2257)

(assert (=> b!78592 (= lt!36383 (addApplyDifferent!55 lt!36393 lt!36392 (zeroValue!2170 newMap!16) lt!36394))))

(assert (=> b!78592 (= (apply!79 (+!105 lt!36393 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16))) lt!36394) (apply!79 lt!36393 lt!36394))))

(declare-fun lt!36387 () Unit!2257)

(assert (=> b!78592 (= lt!36387 lt!36383)))

(declare-fun lt!36390 () ListLongMap!1447)

(assert (=> b!78592 (= lt!36390 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36395 () (_ BitVec 64))

(assert (=> b!78592 (= lt!36395 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36388 () (_ BitVec 64))

(assert (=> b!78592 (= lt!36388 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78592 (= lt!36378 (addApplyDifferent!55 lt!36390 lt!36395 (minValue!2170 newMap!16) lt!36388))))

(assert (=> b!78592 (= (apply!79 (+!105 lt!36390 (tuple2!2173 lt!36395 (minValue!2170 newMap!16))) lt!36388) (apply!79 lt!36390 lt!36388))))

(declare-fun b!78593 () Bool)

(declare-fun res!41143 () Bool)

(assert (=> b!78593 (=> (not res!41143) (not e!51359))))

(declare-fun e!51356 () Bool)

(assert (=> b!78593 (= res!41143 e!51356)))

(declare-fun res!41138 () Bool)

(assert (=> b!78593 (=> res!41138 e!51356)))

(declare-fun e!51366 () Bool)

(assert (=> b!78593 (= res!41138 (not e!51366))))

(declare-fun res!41135 () Bool)

(assert (=> b!78593 (=> (not res!41135) (not e!51366))))

(assert (=> b!78593 (= res!41135 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78594 () Bool)

(assert (=> b!78594 (= e!51356 e!51368)))

(declare-fun res!41142 () Bool)

(assert (=> b!78594 (=> (not res!41142) (not e!51368))))

(assert (=> b!78594 (= res!41142 (contains!742 lt!36389 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78594 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78595 () Bool)

(assert (=> b!78595 (= e!51358 (= (apply!79 lt!36389 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(declare-fun b!78596 () Bool)

(assert (=> b!78596 (= e!51366 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78597 () Bool)

(assert (=> b!78597 (= e!51363 (+!105 call!7233 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!18645 c!12074) b!78597))

(assert (= (and d!18645 (not c!12074)) b!78586))

(assert (= (and b!78586 c!12078) b!78579))

(assert (= (and b!78586 (not c!12078)) b!78580))

(assert (= (and b!78580 c!12075) b!78585))

(assert (= (and b!78580 (not c!12075)) b!78578))

(assert (= (or b!78585 b!78578) bm!7226))

(assert (= (or b!78579 bm!7226) bm!7230))

(assert (= (or b!78579 b!78585) bm!7229))

(assert (= (or b!78597 bm!7230) bm!7228))

(assert (= (or b!78597 bm!7229) bm!7224))

(assert (= (and d!18645 res!41136) b!78582))

(assert (= (and d!18645 c!12073) b!78592))

(assert (= (and d!18645 (not c!12073)) b!78588))

(assert (= (and d!18645 res!41141) b!78593))

(assert (= (and b!78593 res!41135) b!78596))

(assert (= (and b!78593 (not res!41138)) b!78594))

(assert (= (and b!78594 res!41142) b!78591))

(assert (= (and b!78593 res!41143) b!78587))

(assert (= (and b!78587 c!12077) b!78589))

(assert (= (and b!78587 (not c!12077)) b!78583))

(assert (= (and b!78589 res!41137) b!78595))

(assert (= (or b!78589 b!78583) bm!7227))

(assert (= (and b!78587 res!41140) b!78584))

(assert (= (and b!78584 c!12076) b!78590))

(assert (= (and b!78584 (not c!12076)) b!78581))

(assert (= (and b!78590 res!41139) b!78577))

(assert (= (or b!78590 b!78581) bm!7225))

(declare-fun b_lambda!3515 () Bool)

(assert (=> (not b_lambda!3515) (not b!78591)))

(assert (=> b!78591 t!5161))

(declare-fun b_and!4835 () Bool)

(assert (= b_and!4831 (and (=> t!5161 result!2825) b_and!4835)))

(assert (=> b!78591 t!5163))

(declare-fun b_and!4837 () Bool)

(assert (= b_and!4833 (and (=> t!5163 result!2827) b_and!4837)))

(declare-fun m!78997 () Bool)

(assert (=> b!78595 m!78997))

(declare-fun m!78999 () Bool)

(assert (=> bm!7227 m!78999))

(declare-fun m!79001 () Bool)

(assert (=> bm!7225 m!79001))

(declare-fun m!79003 () Bool)

(assert (=> b!78592 m!79003))

(declare-fun m!79005 () Bool)

(assert (=> b!78592 m!79005))

(declare-fun m!79007 () Bool)

(assert (=> b!78592 m!79007))

(declare-fun m!79009 () Bool)

(assert (=> b!78592 m!79009))

(declare-fun m!79011 () Bool)

(assert (=> b!78592 m!79011))

(declare-fun m!79013 () Bool)

(assert (=> b!78592 m!79013))

(declare-fun m!79015 () Bool)

(assert (=> b!78592 m!79015))

(assert (=> b!78592 m!78509))

(declare-fun m!79017 () Bool)

(assert (=> b!78592 m!79017))

(declare-fun m!79019 () Bool)

(assert (=> b!78592 m!79019))

(declare-fun m!79021 () Bool)

(assert (=> b!78592 m!79021))

(declare-fun m!79023 () Bool)

(assert (=> b!78592 m!79023))

(declare-fun m!79025 () Bool)

(assert (=> b!78592 m!79025))

(declare-fun m!79027 () Bool)

(assert (=> b!78592 m!79027))

(assert (=> b!78592 m!79021))

(assert (=> b!78592 m!79007))

(declare-fun m!79029 () Bool)

(assert (=> b!78592 m!79029))

(declare-fun m!79031 () Bool)

(assert (=> b!78592 m!79031))

(declare-fun m!79033 () Bool)

(assert (=> b!78592 m!79033))

(assert (=> b!78592 m!79003))

(assert (=> b!78592 m!79011))

(assert (=> b!78591 m!78509))

(declare-fun m!79035 () Bool)

(assert (=> b!78591 m!79035))

(assert (=> b!78591 m!78509))

(declare-fun m!79037 () Bool)

(assert (=> b!78591 m!79037))

(assert (=> b!78591 m!78533))

(declare-fun m!79039 () Bool)

(assert (=> b!78591 m!79039))

(assert (=> b!78591 m!78533))

(assert (=> b!78591 m!79037))

(assert (=> b!78582 m!78509))

(assert (=> b!78582 m!78509))

(assert (=> b!78582 m!78537))

(declare-fun m!79041 () Bool)

(assert (=> b!78577 m!79041))

(assert (=> bm!7228 m!79031))

(declare-fun m!79043 () Bool)

(assert (=> bm!7224 m!79043))

(assert (=> b!78594 m!78509))

(assert (=> b!78594 m!78509))

(declare-fun m!79045 () Bool)

(assert (=> b!78594 m!79045))

(declare-fun m!79047 () Bool)

(assert (=> b!78597 m!79047))

(assert (=> d!18645 m!78411))

(assert (=> b!78596 m!78509))

(assert (=> b!78596 m!78509))

(assert (=> b!78596 m!78537))

(assert (=> b!78180 d!18645))

(assert (=> bm!7106 d!18619))

(declare-fun d!18647 () Bool)

(declare-fun lt!36397 () Bool)

(assert (=> d!18647 (= lt!36397 (select (content!83 (toList!739 lt!36004)) lt!35864))))

(declare-fun e!51370 () Bool)

(assert (=> d!18647 (= lt!36397 e!51370)))

(declare-fun res!41144 () Bool)

(assert (=> d!18647 (=> (not res!41144) (not e!51370))))

(assert (=> d!18647 (= res!41144 ((_ is Cons!1503) (toList!739 lt!36004)))))

(assert (=> d!18647 (= (contains!743 (toList!739 lt!36004) lt!35864) lt!36397)))

(declare-fun b!78598 () Bool)

(declare-fun e!51369 () Bool)

(assert (=> b!78598 (= e!51370 e!51369)))

(declare-fun res!41145 () Bool)

(assert (=> b!78598 (=> res!41145 e!51369)))

(assert (=> b!78598 (= res!41145 (= (h!2091 (toList!739 lt!36004)) lt!35864))))

(declare-fun b!78599 () Bool)

(assert (=> b!78599 (= e!51369 (contains!743 (t!5153 (toList!739 lt!36004)) lt!35864))))

(assert (= (and d!18647 res!41144) b!78598))

(assert (= (and b!78598 (not res!41145)) b!78599))

(declare-fun m!79049 () Bool)

(assert (=> d!18647 m!79049))

(declare-fun m!79051 () Bool)

(assert (=> d!18647 m!79051))

(declare-fun m!79053 () Bool)

(assert (=> b!78599 m!79053))

(assert (=> b!77998 d!18647))

(declare-fun d!18649 () Bool)

(declare-fun e!51371 () Bool)

(assert (=> d!18649 e!51371))

(declare-fun res!41146 () Bool)

(assert (=> d!18649 (=> res!41146 e!51371)))

(declare-fun lt!36401 () Bool)

(assert (=> d!18649 (= res!41146 (not lt!36401))))

(declare-fun lt!36398 () Bool)

(assert (=> d!18649 (= lt!36401 lt!36398)))

(declare-fun lt!36399 () Unit!2257)

(declare-fun e!51372 () Unit!2257)

(assert (=> d!18649 (= lt!36399 e!51372)))

(declare-fun c!12079 () Bool)

(assert (=> d!18649 (= c!12079 lt!36398)))

(assert (=> d!18649 (= lt!36398 (containsKey!141 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!18649 (= (contains!742 call!7169 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) lt!36401)))

(declare-fun b!78600 () Bool)

(declare-fun lt!36400 () Unit!2257)

(assert (=> b!78600 (= e!51372 lt!36400)))

(assert (=> b!78600 (= lt!36400 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> b!78600 (isDefined!90 (getValueByKey!137 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!78601 () Bool)

(declare-fun Unit!2279 () Unit!2257)

(assert (=> b!78601 (= e!51372 Unit!2279)))

(declare-fun b!78602 () Bool)

(assert (=> b!78602 (= e!51371 (isDefined!90 (getValueByKey!137 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(assert (= (and d!18649 c!12079) b!78600))

(assert (= (and d!18649 (not c!12079)) b!78601))

(assert (= (and d!18649 (not res!41146)) b!78602))

(assert (=> d!18649 m!77965))

(declare-fun m!79055 () Bool)

(assert (=> d!18649 m!79055))

(assert (=> b!78600 m!77965))

(declare-fun m!79057 () Bool)

(assert (=> b!78600 m!79057))

(assert (=> b!78600 m!77965))

(declare-fun m!79059 () Bool)

(assert (=> b!78600 m!79059))

(assert (=> b!78600 m!79059))

(declare-fun m!79061 () Bool)

(assert (=> b!78600 m!79061))

(assert (=> b!78602 m!77965))

(assert (=> b!78602 m!79059))

(assert (=> b!78602 m!79059))

(assert (=> b!78602 m!79061))

(assert (=> b!78220 d!18649))

(declare-fun d!18651 () Bool)

(assert (=> d!18651 (= (apply!79 lt!35983 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1176 (getValueByKey!137 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3327 () Bool)

(assert (= bs!3327 d!18651))

(assert (=> bs!3327 m!78945))

(assert (=> bs!3327 m!78945))

(declare-fun m!79063 () Bool)

(assert (=> bs!3327 m!79063))

(assert (=> b!77988 d!18651))

(declare-fun b!78606 () Bool)

(declare-fun e!51374 () Option!143)

(assert (=> b!78606 (= e!51374 None!141)))

(declare-fun d!18653 () Bool)

(declare-fun c!12080 () Bool)

(assert (=> d!18653 (= c!12080 (and ((_ is Cons!1503) (toList!739 lt!36041)) (= (_1!1097 (h!2091 (toList!739 lt!36041))) (_1!1097 lt!35861))))))

(declare-fun e!51373 () Option!143)

(assert (=> d!18653 (= (getValueByKey!137 (toList!739 lt!36041) (_1!1097 lt!35861)) e!51373)))

(declare-fun b!78605 () Bool)

(assert (=> b!78605 (= e!51374 (getValueByKey!137 (t!5153 (toList!739 lt!36041)) (_1!1097 lt!35861)))))

(declare-fun b!78603 () Bool)

(assert (=> b!78603 (= e!51373 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36041)))))))

(declare-fun b!78604 () Bool)

(assert (=> b!78604 (= e!51373 e!51374)))

(declare-fun c!12081 () Bool)

(assert (=> b!78604 (= c!12081 (and ((_ is Cons!1503) (toList!739 lt!36041)) (not (= (_1!1097 (h!2091 (toList!739 lt!36041))) (_1!1097 lt!35861)))))))

(assert (= (and d!18653 c!12080) b!78603))

(assert (= (and d!18653 (not c!12080)) b!78604))

(assert (= (and b!78604 c!12081) b!78605))

(assert (= (and b!78604 (not c!12081)) b!78606))

(declare-fun m!79065 () Bool)

(assert (=> b!78605 m!79065))

(assert (=> b!78039 d!18653))

(declare-fun d!18655 () Bool)

(declare-fun e!51375 () Bool)

(assert (=> d!18655 e!51375))

(declare-fun res!41147 () Bool)

(assert (=> d!18655 (=> res!41147 e!51375)))

(declare-fun lt!36405 () Bool)

(assert (=> d!18655 (= res!41147 (not lt!36405))))

(declare-fun lt!36402 () Bool)

(assert (=> d!18655 (= lt!36405 lt!36402)))

(declare-fun lt!36403 () Unit!2257)

(declare-fun e!51376 () Unit!2257)

(assert (=> d!18655 (= lt!36403 e!51376)))

(declare-fun c!12082 () Bool)

(assert (=> d!18655 (= c!12082 lt!36402)))

(assert (=> d!18655 (= lt!36402 (containsKey!141 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18655 (= (contains!742 lt!35983 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36405)))

(declare-fun b!78607 () Bool)

(declare-fun lt!36404 () Unit!2257)

(assert (=> b!78607 (= e!51376 lt!36404)))

(assert (=> b!78607 (= lt!36404 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78607 (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78608 () Bool)

(declare-fun Unit!2280 () Unit!2257)

(assert (=> b!78608 (= e!51376 Unit!2280)))

(declare-fun b!78609 () Bool)

(assert (=> b!78609 (= e!51375 (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18655 c!12082) b!78607))

(assert (= (and d!18655 (not c!12082)) b!78608))

(assert (= (and d!18655 (not res!41147)) b!78609))

(declare-fun m!79067 () Bool)

(assert (=> d!18655 m!79067))

(declare-fun m!79069 () Bool)

(assert (=> b!78607 m!79069))

(assert (=> b!78607 m!78689))

(assert (=> b!78607 m!78689))

(declare-fun m!79071 () Bool)

(assert (=> b!78607 m!79071))

(assert (=> b!78609 m!78689))

(assert (=> b!78609 m!78689))

(assert (=> b!78609 m!79071))

(assert (=> bm!7098 d!18655))

(declare-fun d!18657 () Bool)

(declare-fun e!51377 () Bool)

(assert (=> d!18657 e!51377))

(declare-fun res!41148 () Bool)

(assert (=> d!18657 (=> (not res!41148) (not e!51377))))

(declare-fun lt!36407 () ListLongMap!1447)

(assert (=> d!18657 (= res!41148 (contains!742 lt!36407 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36406 () List!1507)

(assert (=> d!18657 (= lt!36407 (ListLongMap!1448 lt!36406))))

(declare-fun lt!36409 () Unit!2257)

(declare-fun lt!36408 () Unit!2257)

(assert (=> d!18657 (= lt!36409 lt!36408)))

(assert (=> d!18657 (= (getValueByKey!137 lt!36406 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18657 (= lt!36408 (lemmaContainsTupThenGetReturnValue!54 lt!36406 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18657 (= lt!36406 (insertStrictlySorted!57 (toList!739 call!7106) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18657 (= (+!105 call!7106 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36407)))

(declare-fun b!78610 () Bool)

(declare-fun res!41149 () Bool)

(assert (=> b!78610 (=> (not res!41149) (not e!51377))))

(assert (=> b!78610 (= res!41149 (= (getValueByKey!137 (toList!739 lt!36407) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78611 () Bool)

(assert (=> b!78611 (= e!51377 (contains!743 (toList!739 lt!36407) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18657 res!41148) b!78610))

(assert (= (and b!78610 res!41149) b!78611))

(declare-fun m!79073 () Bool)

(assert (=> d!18657 m!79073))

(declare-fun m!79075 () Bool)

(assert (=> d!18657 m!79075))

(declare-fun m!79077 () Bool)

(assert (=> d!18657 m!79077))

(declare-fun m!79079 () Bool)

(assert (=> d!18657 m!79079))

(declare-fun m!79081 () Bool)

(assert (=> b!78610 m!79081))

(declare-fun m!79083 () Bool)

(assert (=> b!78611 m!79083))

(assert (=> b!77990 d!18657))

(declare-fun b!78615 () Bool)

(declare-fun e!51379 () Option!143)

(assert (=> b!78615 (= e!51379 None!141)))

(declare-fun d!18659 () Bool)

(declare-fun c!12083 () Bool)

(assert (=> d!18659 (= c!12083 (and ((_ is Cons!1503) (toList!739 lt!36045)) (= (_1!1097 (h!2091 (toList!739 lt!36045))) (_1!1097 lt!35864))))))

(declare-fun e!51378 () Option!143)

(assert (=> d!18659 (= (getValueByKey!137 (toList!739 lt!36045) (_1!1097 lt!35864)) e!51378)))

(declare-fun b!78614 () Bool)

(assert (=> b!78614 (= e!51379 (getValueByKey!137 (t!5153 (toList!739 lt!36045)) (_1!1097 lt!35864)))))

(declare-fun b!78612 () Bool)

(assert (=> b!78612 (= e!51378 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36045)))))))

(declare-fun b!78613 () Bool)

(assert (=> b!78613 (= e!51378 e!51379)))

(declare-fun c!12084 () Bool)

(assert (=> b!78613 (= c!12084 (and ((_ is Cons!1503) (toList!739 lt!36045)) (not (= (_1!1097 (h!2091 (toList!739 lt!36045))) (_1!1097 lt!35864)))))))

(assert (= (and d!18659 c!12083) b!78612))

(assert (= (and d!18659 (not c!12083)) b!78613))

(assert (= (and b!78613 c!12084) b!78614))

(assert (= (and b!78613 (not c!12084)) b!78615))

(declare-fun m!79085 () Bool)

(assert (=> b!78614 m!79085))

(assert (=> b!78041 d!18659))

(declare-fun d!18661 () Bool)

(declare-fun e!51380 () Bool)

(assert (=> d!18661 e!51380))

(declare-fun res!41150 () Bool)

(assert (=> d!18661 (=> res!41150 e!51380)))

(declare-fun lt!36413 () Bool)

(assert (=> d!18661 (= res!41150 (not lt!36413))))

(declare-fun lt!36410 () Bool)

(assert (=> d!18661 (= lt!36413 lt!36410)))

(declare-fun lt!36411 () Unit!2257)

(declare-fun e!51381 () Unit!2257)

(assert (=> d!18661 (= lt!36411 e!51381)))

(declare-fun c!12085 () Bool)

(assert (=> d!18661 (= c!12085 lt!36410)))

(assert (=> d!18661 (= lt!36410 (containsKey!141 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18661 (= (contains!742 lt!36021 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36413)))

(declare-fun b!78616 () Bool)

(declare-fun lt!36412 () Unit!2257)

(assert (=> b!78616 (= e!51381 lt!36412)))

(assert (=> b!78616 (= lt!36412 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78616 (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78617 () Bool)

(declare-fun Unit!2281 () Unit!2257)

(assert (=> b!78617 (= e!51381 Unit!2281)))

(declare-fun b!78618 () Bool)

(assert (=> b!78618 (= e!51380 (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18661 c!12085) b!78616))

(assert (= (and d!18661 (not c!12085)) b!78617))

(assert (= (and d!18661 (not res!41150)) b!78618))

(declare-fun m!79087 () Bool)

(assert (=> d!18661 m!79087))

(declare-fun m!79089 () Bool)

(assert (=> b!78616 m!79089))

(declare-fun m!79091 () Bool)

(assert (=> b!78616 m!79091))

(assert (=> b!78616 m!79091))

(declare-fun m!79093 () Bool)

(assert (=> b!78616 m!79093))

(assert (=> b!78618 m!79091))

(assert (=> b!78618 m!79091))

(assert (=> b!78618 m!79093))

(assert (=> b!78033 d!18661))

(assert (=> bm!7178 d!18425))

(declare-fun d!18663 () Bool)

(declare-fun lt!36416 () (_ BitVec 32))

(assert (=> d!18663 (and (bvsge lt!36416 #b00000000000000000000000000000000) (bvsle lt!36416 (bvsub (size!2136 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!51386 () (_ BitVec 32))

(assert (=> d!18663 (= lt!36416 e!51386)))

(declare-fun c!12091 () Bool)

(assert (=> d!18663 (= c!12091 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18663 (and (bvsle #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2136 (_keys!3932 newMap!16)) (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18663 (= (arrayCountValidKeys!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) lt!36416)))

(declare-fun b!78627 () Bool)

(declare-fun e!51387 () (_ BitVec 32))

(declare-fun call!7236 () (_ BitVec 32))

(assert (=> b!78627 (= e!51387 call!7236)))

(declare-fun b!78628 () Bool)

(assert (=> b!78628 (= e!51386 #b00000000000000000000000000000000)))

(declare-fun b!78629 () Bool)

(assert (=> b!78629 (= e!51386 e!51387)))

(declare-fun c!12090 () Bool)

(assert (=> b!78629 (= c!12090 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78630 () Bool)

(assert (=> b!78630 (= e!51387 (bvadd #b00000000000000000000000000000001 call!7236))))

(declare-fun bm!7233 () Bool)

(assert (=> bm!7233 (= call!7236 (arrayCountValidKeys!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))))))

(assert (= (and d!18663 c!12091) b!78628))

(assert (= (and d!18663 (not c!12091)) b!78629))

(assert (= (and b!78629 c!12090) b!78630))

(assert (= (and b!78629 (not c!12090)) b!78627))

(assert (= (or b!78630 b!78627) bm!7233))

(assert (=> b!78629 m!78509))

(assert (=> b!78629 m!78509))

(assert (=> b!78629 m!78537))

(declare-fun m!79095 () Bool)

(assert (=> bm!7233 m!79095))

(assert (=> b!78051 d!18663))

(declare-fun d!18665 () Bool)

(assert (=> d!18665 (isDefined!90 (getValueByKey!137 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun lt!36419 () Unit!2257)

(declare-fun choose!465 (List!1507 (_ BitVec 64)) Unit!2257)

(assert (=> d!18665 (= lt!36419 (choose!465 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun e!51390 () Bool)

(assert (=> d!18665 e!51390))

(declare-fun res!41153 () Bool)

(assert (=> d!18665 (=> (not res!41153) (not e!51390))))

(assert (=> d!18665 (= res!41153 (isStrictlySorted!295 (toList!739 lt!35860)))))

(assert (=> d!18665 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) lt!36419)))

(declare-fun b!78633 () Bool)

(assert (=> b!78633 (= e!51390 (containsKey!141 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (= (and d!18665 res!41153) b!78633))

(assert (=> d!18665 m!77965))

(assert (=> d!18665 m!78299))

(assert (=> d!18665 m!78299))

(assert (=> d!18665 m!78301))

(assert (=> d!18665 m!77965))

(declare-fun m!79097 () Bool)

(assert (=> d!18665 m!79097))

(declare-fun m!79099 () Bool)

(assert (=> d!18665 m!79099))

(assert (=> b!78633 m!77965))

(assert (=> b!78633 m!78295))

(assert (=> b!78093 d!18665))

(declare-fun d!18667 () Bool)

(declare-fun isEmpty!328 (Option!143) Bool)

(assert (=> d!18667 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))))

(declare-fun bs!3328 () Bool)

(assert (= bs!3328 d!18667))

(assert (=> bs!3328 m!78299))

(declare-fun m!79101 () Bool)

(assert (=> bs!3328 m!79101))

(assert (=> b!78093 d!18667))

(declare-fun b!78637 () Bool)

(declare-fun e!51392 () Option!143)

(assert (=> b!78637 (= e!51392 None!141)))

(declare-fun d!18669 () Bool)

(declare-fun c!12092 () Bool)

(assert (=> d!18669 (= c!12092 (and ((_ is Cons!1503) (toList!739 lt!35860)) (= (_1!1097 (h!2091 (toList!739 lt!35860))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(declare-fun e!51391 () Option!143)

(assert (=> d!18669 (= (getValueByKey!137 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) e!51391)))

(declare-fun b!78636 () Bool)

(assert (=> b!78636 (= e!51392 (getValueByKey!137 (t!5153 (toList!739 lt!35860)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!78634 () Bool)

(assert (=> b!78634 (= e!51391 (Some!142 (_2!1097 (h!2091 (toList!739 lt!35860)))))))

(declare-fun b!78635 () Bool)

(assert (=> b!78635 (= e!51391 e!51392)))

(declare-fun c!12093 () Bool)

(assert (=> b!78635 (= c!12093 (and ((_ is Cons!1503) (toList!739 lt!35860)) (not (= (_1!1097 (h!2091 (toList!739 lt!35860))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))))

(assert (= (and d!18669 c!12092) b!78634))

(assert (= (and d!18669 (not c!12092)) b!78635))

(assert (= (and b!78635 c!12093) b!78636))

(assert (= (and b!78635 (not c!12093)) b!78637))

(assert (=> b!78636 m!77965))

(declare-fun m!79103 () Bool)

(assert (=> b!78636 m!79103))

(assert (=> b!78093 d!18669))

(declare-fun d!18671 () Bool)

(declare-fun e!51393 () Bool)

(assert (=> d!18671 e!51393))

(declare-fun res!41154 () Bool)

(assert (=> d!18671 (=> res!41154 e!51393)))

(declare-fun lt!36423 () Bool)

(assert (=> d!18671 (= res!41154 (not lt!36423))))

(declare-fun lt!36420 () Bool)

(assert (=> d!18671 (= lt!36423 lt!36420)))

(declare-fun lt!36421 () Unit!2257)

(declare-fun e!51394 () Unit!2257)

(assert (=> d!18671 (= lt!36421 e!51394)))

(declare-fun c!12094 () Bool)

(assert (=> d!18671 (= c!12094 lt!36420)))

(assert (=> d!18671 (= lt!36420 (containsKey!141 (toList!739 lt!36045) (_1!1097 lt!35864)))))

(assert (=> d!18671 (= (contains!742 lt!36045 (_1!1097 lt!35864)) lt!36423)))

(declare-fun b!78638 () Bool)

(declare-fun lt!36422 () Unit!2257)

(assert (=> b!78638 (= e!51394 lt!36422)))

(assert (=> b!78638 (= lt!36422 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36045) (_1!1097 lt!35864)))))

(assert (=> b!78638 (isDefined!90 (getValueByKey!137 (toList!739 lt!36045) (_1!1097 lt!35864)))))

(declare-fun b!78639 () Bool)

(declare-fun Unit!2282 () Unit!2257)

(assert (=> b!78639 (= e!51394 Unit!2282)))

(declare-fun b!78640 () Bool)

(assert (=> b!78640 (= e!51393 (isDefined!90 (getValueByKey!137 (toList!739 lt!36045) (_1!1097 lt!35864))))))

(assert (= (and d!18671 c!12094) b!78638))

(assert (= (and d!18671 (not c!12094)) b!78639))

(assert (= (and d!18671 (not res!41154)) b!78640))

(declare-fun m!79105 () Bool)

(assert (=> d!18671 m!79105))

(declare-fun m!79107 () Bool)

(assert (=> b!78638 m!79107))

(assert (=> b!78638 m!78253))

(assert (=> b!78638 m!78253))

(declare-fun m!79109 () Bool)

(assert (=> b!78638 m!79109))

(assert (=> b!78640 m!78253))

(assert (=> b!78640 m!78253))

(assert (=> b!78640 m!79109))

(assert (=> d!18447 d!18671))

(declare-fun b!78644 () Bool)

(declare-fun e!51396 () Option!143)

(assert (=> b!78644 (= e!51396 None!141)))

(declare-fun d!18673 () Bool)

(declare-fun c!12095 () Bool)

(assert (=> d!18673 (= c!12095 (and ((_ is Cons!1503) lt!36044) (= (_1!1097 (h!2091 lt!36044)) (_1!1097 lt!35864))))))

(declare-fun e!51395 () Option!143)

(assert (=> d!18673 (= (getValueByKey!137 lt!36044 (_1!1097 lt!35864)) e!51395)))

(declare-fun b!78643 () Bool)

(assert (=> b!78643 (= e!51396 (getValueByKey!137 (t!5153 lt!36044) (_1!1097 lt!35864)))))

(declare-fun b!78641 () Bool)

(assert (=> b!78641 (= e!51395 (Some!142 (_2!1097 (h!2091 lt!36044))))))

(declare-fun b!78642 () Bool)

(assert (=> b!78642 (= e!51395 e!51396)))

(declare-fun c!12096 () Bool)

(assert (=> b!78642 (= c!12096 (and ((_ is Cons!1503) lt!36044) (not (= (_1!1097 (h!2091 lt!36044)) (_1!1097 lt!35864)))))))

(assert (= (and d!18673 c!12095) b!78641))

(assert (= (and d!18673 (not c!12095)) b!78642))

(assert (= (and b!78642 c!12096) b!78643))

(assert (= (and b!78642 (not c!12096)) b!78644))

(declare-fun m!79111 () Bool)

(assert (=> b!78643 m!79111))

(assert (=> d!18447 d!18673))

(declare-fun d!18675 () Bool)

(assert (=> d!18675 (= (getValueByKey!137 lt!36044 (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864)))))

(declare-fun lt!36424 () Unit!2257)

(assert (=> d!18675 (= lt!36424 (choose!456 lt!36044 (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(declare-fun e!51397 () Bool)

(assert (=> d!18675 e!51397))

(declare-fun res!41155 () Bool)

(assert (=> d!18675 (=> (not res!41155) (not e!51397))))

(assert (=> d!18675 (= res!41155 (isStrictlySorted!295 lt!36044))))

(assert (=> d!18675 (= (lemmaContainsTupThenGetReturnValue!54 lt!36044 (_1!1097 lt!35864) (_2!1097 lt!35864)) lt!36424)))

(declare-fun b!78645 () Bool)

(declare-fun res!41156 () Bool)

(assert (=> b!78645 (=> (not res!41156) (not e!51397))))

(assert (=> b!78645 (= res!41156 (containsKey!141 lt!36044 (_1!1097 lt!35864)))))

(declare-fun b!78646 () Bool)

(assert (=> b!78646 (= e!51397 (contains!743 lt!36044 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(assert (= (and d!18675 res!41155) b!78645))

(assert (= (and b!78645 res!41156) b!78646))

(assert (=> d!18675 m!78247))

(declare-fun m!79113 () Bool)

(assert (=> d!18675 m!79113))

(declare-fun m!79115 () Bool)

(assert (=> d!18675 m!79115))

(declare-fun m!79117 () Bool)

(assert (=> b!78645 m!79117))

(declare-fun m!79119 () Bool)

(assert (=> b!78646 m!79119))

(assert (=> d!18447 d!18675))

(declare-fun e!51398 () List!1507)

(declare-fun c!12099 () Bool)

(declare-fun c!12100 () Bool)

(declare-fun b!78647 () Bool)

(assert (=> b!78647 (= e!51398 (ite c!12100 (t!5153 (toList!739 lt!35868)) (ite c!12099 (Cons!1503 (h!2091 (toList!739 lt!35868)) (t!5153 (toList!739 lt!35868))) Nil!1504)))))

(declare-fun b!78648 () Bool)

(declare-fun e!51402 () List!1507)

(declare-fun call!7239 () List!1507)

(assert (=> b!78648 (= e!51402 call!7239)))

(declare-fun bm!7234 () Bool)

(declare-fun call!7237 () List!1507)

(declare-fun call!7238 () List!1507)

(assert (=> bm!7234 (= call!7237 call!7238)))

(declare-fun b!78649 () Bool)

(assert (=> b!78649 (= c!12099 (and ((_ is Cons!1503) (toList!739 lt!35868)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 lt!35864))))))

(declare-fun e!51400 () List!1507)

(declare-fun e!51399 () List!1507)

(assert (=> b!78649 (= e!51400 e!51399)))

(declare-fun b!78650 () Bool)

(assert (=> b!78650 (= e!51398 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35868)) (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(declare-fun b!78651 () Bool)

(declare-fun res!41158 () Bool)

(declare-fun e!51401 () Bool)

(assert (=> b!78651 (=> (not res!41158) (not e!51401))))

(declare-fun lt!36425 () List!1507)

(assert (=> b!78651 (= res!41158 (containsKey!141 lt!36425 (_1!1097 lt!35864)))))

(declare-fun c!12097 () Bool)

(declare-fun bm!7235 () Bool)

(assert (=> bm!7235 (= call!7239 ($colon$colon!69 e!51398 (ite c!12097 (h!2091 (toList!739 lt!35868)) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864)))))))

(declare-fun c!12098 () Bool)

(assert (=> bm!7235 (= c!12098 c!12097)))

(declare-fun b!78652 () Bool)

(assert (=> b!78652 (= e!51402 e!51400)))

(assert (=> b!78652 (= c!12100 (and ((_ is Cons!1503) (toList!739 lt!35868)) (= (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 lt!35864))))))

(declare-fun b!78654 () Bool)

(assert (=> b!78654 (= e!51400 call!7238)))

(declare-fun b!78655 () Bool)

(assert (=> b!78655 (= e!51401 (contains!743 lt!36425 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!78653 () Bool)

(assert (=> b!78653 (= e!51399 call!7237)))

(declare-fun d!18677 () Bool)

(assert (=> d!18677 e!51401))

(declare-fun res!41157 () Bool)

(assert (=> d!18677 (=> (not res!41157) (not e!51401))))

(assert (=> d!18677 (= res!41157 (isStrictlySorted!295 lt!36425))))

(assert (=> d!18677 (= lt!36425 e!51402)))

(assert (=> d!18677 (= c!12097 (and ((_ is Cons!1503) (toList!739 lt!35868)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 lt!35864))))))

(assert (=> d!18677 (isStrictlySorted!295 (toList!739 lt!35868))))

(assert (=> d!18677 (= (insertStrictlySorted!57 (toList!739 lt!35868) (_1!1097 lt!35864) (_2!1097 lt!35864)) lt!36425)))

(declare-fun bm!7236 () Bool)

(assert (=> bm!7236 (= call!7238 call!7239)))

(declare-fun b!78656 () Bool)

(assert (=> b!78656 (= e!51399 call!7237)))

(assert (= (and d!18677 c!12097) b!78648))

(assert (= (and d!18677 (not c!12097)) b!78652))

(assert (= (and b!78652 c!12100) b!78654))

(assert (= (and b!78652 (not c!12100)) b!78649))

(assert (= (and b!78649 c!12099) b!78653))

(assert (= (and b!78649 (not c!12099)) b!78656))

(assert (= (or b!78653 b!78656) bm!7234))

(assert (= (or b!78654 bm!7234) bm!7236))

(assert (= (or b!78648 bm!7236) bm!7235))

(assert (= (and bm!7235 c!12098) b!78650))

(assert (= (and bm!7235 (not c!12098)) b!78647))

(assert (= (and d!18677 res!41157) b!78651))

(assert (= (and b!78651 res!41158) b!78655))

(declare-fun m!79121 () Bool)

(assert (=> b!78655 m!79121))

(declare-fun m!79123 () Bool)

(assert (=> d!18677 m!79123))

(assert (=> d!18677 m!78611))

(declare-fun m!79125 () Bool)

(assert (=> b!78650 m!79125))

(declare-fun m!79127 () Bool)

(assert (=> b!78651 m!79127))

(declare-fun m!79129 () Bool)

(assert (=> bm!7235 m!79129))

(assert (=> d!18447 d!18677))

(assert (=> b!78026 d!18513))

(assert (=> b!78095 d!18667))

(assert (=> b!78095 d!18669))

(declare-fun d!18679 () Bool)

(declare-fun e!51403 () Bool)

(assert (=> d!18679 e!51403))

(declare-fun res!41159 () Bool)

(assert (=> d!18679 (=> res!41159 e!51403)))

(declare-fun lt!36429 () Bool)

(assert (=> d!18679 (= res!41159 (not lt!36429))))

(declare-fun lt!36426 () Bool)

(assert (=> d!18679 (= lt!36429 lt!36426)))

(declare-fun lt!36427 () Unit!2257)

(declare-fun e!51404 () Unit!2257)

(assert (=> d!18679 (= lt!36427 e!51404)))

(declare-fun c!12101 () Bool)

(assert (=> d!18679 (= c!12101 lt!36426)))

(assert (=> d!18679 (= lt!36426 (containsKey!141 (toList!739 lt!36049) (_1!1097 lt!35870)))))

(assert (=> d!18679 (= (contains!742 lt!36049 (_1!1097 lt!35870)) lt!36429)))

(declare-fun b!78657 () Bool)

(declare-fun lt!36428 () Unit!2257)

(assert (=> b!78657 (= e!51404 lt!36428)))

(assert (=> b!78657 (= lt!36428 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36049) (_1!1097 lt!35870)))))

(assert (=> b!78657 (isDefined!90 (getValueByKey!137 (toList!739 lt!36049) (_1!1097 lt!35870)))))

(declare-fun b!78658 () Bool)

(declare-fun Unit!2283 () Unit!2257)

(assert (=> b!78658 (= e!51404 Unit!2283)))

(declare-fun b!78659 () Bool)

(assert (=> b!78659 (= e!51403 (isDefined!90 (getValueByKey!137 (toList!739 lt!36049) (_1!1097 lt!35870))))))

(assert (= (and d!18679 c!12101) b!78657))

(assert (= (and d!18679 (not c!12101)) b!78658))

(assert (= (and d!18679 (not res!41159)) b!78659))

(declare-fun m!79131 () Bool)

(assert (=> d!18679 m!79131))

(declare-fun m!79133 () Bool)

(assert (=> b!78657 m!79133))

(assert (=> b!78657 m!78265))

(assert (=> b!78657 m!78265))

(declare-fun m!79135 () Bool)

(assert (=> b!78657 m!79135))

(assert (=> b!78659 m!78265))

(assert (=> b!78659 m!78265))

(assert (=> b!78659 m!79135))

(assert (=> d!18449 d!18679))

(declare-fun b!78663 () Bool)

(declare-fun e!51406 () Option!143)

(assert (=> b!78663 (= e!51406 None!141)))

(declare-fun d!18681 () Bool)

(declare-fun c!12102 () Bool)

(assert (=> d!18681 (= c!12102 (and ((_ is Cons!1503) lt!36048) (= (_1!1097 (h!2091 lt!36048)) (_1!1097 lt!35870))))))

(declare-fun e!51405 () Option!143)

(assert (=> d!18681 (= (getValueByKey!137 lt!36048 (_1!1097 lt!35870)) e!51405)))

(declare-fun b!78662 () Bool)

(assert (=> b!78662 (= e!51406 (getValueByKey!137 (t!5153 lt!36048) (_1!1097 lt!35870)))))

(declare-fun b!78660 () Bool)

(assert (=> b!78660 (= e!51405 (Some!142 (_2!1097 (h!2091 lt!36048))))))

(declare-fun b!78661 () Bool)

(assert (=> b!78661 (= e!51405 e!51406)))

(declare-fun c!12103 () Bool)

(assert (=> b!78661 (= c!12103 (and ((_ is Cons!1503) lt!36048) (not (= (_1!1097 (h!2091 lt!36048)) (_1!1097 lt!35870)))))))

(assert (= (and d!18681 c!12102) b!78660))

(assert (= (and d!18681 (not c!12102)) b!78661))

(assert (= (and b!78661 c!12103) b!78662))

(assert (= (and b!78661 (not c!12103)) b!78663))

(declare-fun m!79137 () Bool)

(assert (=> b!78662 m!79137))

(assert (=> d!18449 d!18681))

(declare-fun d!18683 () Bool)

(assert (=> d!18683 (= (getValueByKey!137 lt!36048 (_1!1097 lt!35870)) (Some!142 (_2!1097 lt!35870)))))

(declare-fun lt!36430 () Unit!2257)

(assert (=> d!18683 (= lt!36430 (choose!456 lt!36048 (_1!1097 lt!35870) (_2!1097 lt!35870)))))

(declare-fun e!51407 () Bool)

(assert (=> d!18683 e!51407))

(declare-fun res!41160 () Bool)

(assert (=> d!18683 (=> (not res!41160) (not e!51407))))

(assert (=> d!18683 (= res!41160 (isStrictlySorted!295 lt!36048))))

(assert (=> d!18683 (= (lemmaContainsTupThenGetReturnValue!54 lt!36048 (_1!1097 lt!35870) (_2!1097 lt!35870)) lt!36430)))

(declare-fun b!78664 () Bool)

(declare-fun res!41161 () Bool)

(assert (=> b!78664 (=> (not res!41161) (not e!51407))))

(assert (=> b!78664 (= res!41161 (containsKey!141 lt!36048 (_1!1097 lt!35870)))))

(declare-fun b!78665 () Bool)

(assert (=> b!78665 (= e!51407 (contains!743 lt!36048 (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(assert (= (and d!18683 res!41160) b!78664))

(assert (= (and b!78664 res!41161) b!78665))

(assert (=> d!18683 m!78259))

(declare-fun m!79139 () Bool)

(assert (=> d!18683 m!79139))

(declare-fun m!79141 () Bool)

(assert (=> d!18683 m!79141))

(declare-fun m!79143 () Bool)

(assert (=> b!78664 m!79143))

(declare-fun m!79145 () Bool)

(assert (=> b!78665 m!79145))

(assert (=> d!18449 d!18683))

(declare-fun e!51408 () List!1507)

(declare-fun b!78666 () Bool)

(declare-fun c!12106 () Bool)

(declare-fun c!12107 () Bool)

(assert (=> b!78666 (= e!51408 (ite c!12107 (t!5153 (toList!739 lt!35853)) (ite c!12106 (Cons!1503 (h!2091 (toList!739 lt!35853)) (t!5153 (toList!739 lt!35853))) Nil!1504)))))

(declare-fun b!78667 () Bool)

(declare-fun e!51412 () List!1507)

(declare-fun call!7242 () List!1507)

(assert (=> b!78667 (= e!51412 call!7242)))

(declare-fun bm!7237 () Bool)

(declare-fun call!7240 () List!1507)

(declare-fun call!7241 () List!1507)

(assert (=> bm!7237 (= call!7240 call!7241)))

(declare-fun b!78668 () Bool)

(assert (=> b!78668 (= c!12106 (and ((_ is Cons!1503) (toList!739 lt!35853)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35853))) (_1!1097 lt!35870))))))

(declare-fun e!51410 () List!1507)

(declare-fun e!51409 () List!1507)

(assert (=> b!78668 (= e!51410 e!51409)))

(declare-fun b!78669 () Bool)

(assert (=> b!78669 (= e!51408 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35853)) (_1!1097 lt!35870) (_2!1097 lt!35870)))))

(declare-fun b!78670 () Bool)

(declare-fun res!41163 () Bool)

(declare-fun e!51411 () Bool)

(assert (=> b!78670 (=> (not res!41163) (not e!51411))))

(declare-fun lt!36431 () List!1507)

(assert (=> b!78670 (= res!41163 (containsKey!141 lt!36431 (_1!1097 lt!35870)))))

(declare-fun bm!7238 () Bool)

(declare-fun c!12104 () Bool)

(assert (=> bm!7238 (= call!7242 ($colon$colon!69 e!51408 (ite c!12104 (h!2091 (toList!739 lt!35853)) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870)))))))

(declare-fun c!12105 () Bool)

(assert (=> bm!7238 (= c!12105 c!12104)))

(declare-fun b!78671 () Bool)

(assert (=> b!78671 (= e!51412 e!51410)))

(assert (=> b!78671 (= c!12107 (and ((_ is Cons!1503) (toList!739 lt!35853)) (= (_1!1097 (h!2091 (toList!739 lt!35853))) (_1!1097 lt!35870))))))

(declare-fun b!78673 () Bool)

(assert (=> b!78673 (= e!51410 call!7241)))

(declare-fun b!78674 () Bool)

(assert (=> b!78674 (= e!51411 (contains!743 lt!36431 (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun b!78672 () Bool)

(assert (=> b!78672 (= e!51409 call!7240)))

(declare-fun d!18685 () Bool)

(assert (=> d!18685 e!51411))

(declare-fun res!41162 () Bool)

(assert (=> d!18685 (=> (not res!41162) (not e!51411))))

(assert (=> d!18685 (= res!41162 (isStrictlySorted!295 lt!36431))))

(assert (=> d!18685 (= lt!36431 e!51412)))

(assert (=> d!18685 (= c!12104 (and ((_ is Cons!1503) (toList!739 lt!35853)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35853))) (_1!1097 lt!35870))))))

(assert (=> d!18685 (isStrictlySorted!295 (toList!739 lt!35853))))

(assert (=> d!18685 (= (insertStrictlySorted!57 (toList!739 lt!35853) (_1!1097 lt!35870) (_2!1097 lt!35870)) lt!36431)))

(declare-fun bm!7239 () Bool)

(assert (=> bm!7239 (= call!7241 call!7242)))

(declare-fun b!78675 () Bool)

(assert (=> b!78675 (= e!51409 call!7240)))

(assert (= (and d!18685 c!12104) b!78667))

(assert (= (and d!18685 (not c!12104)) b!78671))

(assert (= (and b!78671 c!12107) b!78673))

(assert (= (and b!78671 (not c!12107)) b!78668))

(assert (= (and b!78668 c!12106) b!78672))

(assert (= (and b!78668 (not c!12106)) b!78675))

(assert (= (or b!78672 b!78675) bm!7237))

(assert (= (or b!78673 bm!7237) bm!7239))

(assert (= (or b!78667 bm!7239) bm!7238))

(assert (= (and bm!7238 c!12105) b!78669))

(assert (= (and bm!7238 (not c!12105)) b!78666))

(assert (= (and d!18685 res!41162) b!78670))

(assert (= (and b!78670 res!41163) b!78674))

(declare-fun m!79147 () Bool)

(assert (=> b!78674 m!79147))

(declare-fun m!79149 () Bool)

(assert (=> d!18685 m!79149))

(declare-fun m!79151 () Bool)

(assert (=> d!18685 m!79151))

(declare-fun m!79153 () Bool)

(assert (=> b!78669 m!79153))

(declare-fun m!79155 () Bool)

(assert (=> b!78670 m!79155))

(declare-fun m!79157 () Bool)

(assert (=> bm!7238 m!79157))

(assert (=> d!18449 d!18685))

(declare-fun b!78710 () Bool)

(declare-fun res!41182 () Bool)

(declare-fun e!51434 () Bool)

(assert (=> b!78710 (=> (not res!41182) (not e!51434))))

(declare-fun lt!36498 () tuple2!2174)

(assert (=> b!78710 (= res!41182 (contains!742 (map!1174 (_2!1098 lt!36498)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!78711 () Bool)

(declare-fun res!41187 () Bool)

(declare-fun call!7254 () Bool)

(assert (=> b!78711 (= res!41187 call!7254)))

(declare-fun e!51429 () Bool)

(assert (=> b!78711 (=> (not res!41187) (not e!51429))))

(declare-fun bm!7249 () Bool)

(declare-fun call!7251 () Bool)

(assert (=> bm!7249 (= call!7251 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!78712 () Bool)

(declare-fun e!51436 () Unit!2257)

(declare-fun Unit!2284 () Unit!2257)

(assert (=> b!78712 (= e!51436 Unit!2284)))

(declare-fun lt!36508 () SeekEntryResult!240)

(declare-fun lt!36504 () SeekEntryResult!240)

(declare-fun c!12117 () Bool)

(declare-fun c!12118 () Bool)

(declare-fun bm!7250 () Bool)

(assert (=> bm!7250 (= call!7254 (inRange!0 (ite c!12118 (index!3095 lt!36508) (ite c!12117 (index!3094 lt!36504) (index!3097 lt!36504))) (mask!6268 newMap!16)))))

(declare-fun b!78713 () Bool)

(declare-fun Unit!2285 () Unit!2257)

(assert (=> b!78713 (= e!51436 Unit!2285)))

(declare-fun lt!36502 () Unit!2257)

(declare-fun lemmaArrayContainsKeyThenInListMap!16 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) (_ BitVec 32) Int) Unit!2257)

(assert (=> b!78713 (= lt!36502 (lemmaArrayContainsKeyThenInListMap!16 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(assert (=> b!78713 (contains!742 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))

(declare-fun lt!36510 () Unit!2257)

(assert (=> b!78713 (= lt!36510 lt!36502)))

(assert (=> b!78713 false))

(declare-fun b!78714 () Bool)

(declare-fun e!51433 () Bool)

(assert (=> b!78714 (= e!51433 (not call!7251))))

(declare-fun b!78715 () Bool)

(declare-fun res!41184 () Bool)

(declare-fun e!51435 () Bool)

(assert (=> b!78715 (=> (not res!41184) (not e!51435))))

(assert (=> b!78715 (= res!41184 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3094 lt!36504)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78716 () Bool)

(declare-fun res!41186 () Bool)

(assert (=> b!78716 (=> (not res!41186) (not e!51434))))

(assert (=> b!78716 (= res!41186 (valid!313 (_2!1098 lt!36498)))))

(declare-fun bm!7251 () Bool)

(declare-fun call!7253 () Bool)

(assert (=> bm!7251 (= call!7253 call!7254)))

(declare-fun b!78717 () Bool)

(declare-fun e!51430 () Unit!2257)

(declare-fun Unit!2286 () Unit!2257)

(assert (=> b!78717 (= e!51430 Unit!2286)))

(declare-fun lt!36517 () Unit!2257)

(assert (=> b!78717 (= lt!36517 (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(declare-fun call!7252 () SeekEntryResult!240)

(assert (=> b!78717 (= lt!36508 call!7252)))

(declare-fun res!41185 () Bool)

(assert (=> b!78717 (= res!41185 ((_ is Found!240) lt!36508))))

(assert (=> b!78717 (=> (not res!41185) (not e!51429))))

(assert (=> b!78717 e!51429))

(declare-fun lt!36497 () Unit!2257)

(assert (=> b!78717 (= lt!36497 lt!36517)))

(assert (=> b!78717 false))

(declare-fun b!78718 () Bool)

(assert (=> b!78718 (= e!51429 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36508)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun bm!7248 () Bool)

(assert (=> bm!7248 (= call!7252 (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun d!18687 () Bool)

(assert (=> d!18687 e!51434))

(declare-fun res!41190 () Bool)

(assert (=> d!18687 (=> (not res!41190) (not e!51434))))

(assert (=> d!18687 (= res!41190 (_1!1098 lt!36498))))

(assert (=> d!18687 (= lt!36498 (tuple2!2175 true (LongMapFixedSize!733 (defaultEntry!2272 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (bvadd (_size!415 newMap!16) #b00000000000000000000000000000001) (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (_vacant!415 newMap!16))))))

(declare-fun lt!36494 () Unit!2257)

(declare-fun lt!36512 () Unit!2257)

(assert (=> d!18687 (= lt!36494 lt!36512)))

(declare-fun lt!36521 () array!3975)

(declare-fun lt!36505 () array!3977)

(assert (=> d!18687 (contains!742 (getCurrentListMap!433 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))))))

(assert (=> d!18687 (= lt!36512 (lemmaValidKeyInArrayIsInListMap!89 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18687 (= lt!36505 (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))))

(assert (=> d!18687 (= lt!36521 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))

(declare-fun lt!36514 () Unit!2257)

(declare-fun lt!36499 () Unit!2257)

(assert (=> d!18687 (= lt!36514 lt!36499)))

(declare-fun lt!36500 () array!3975)

(assert (=> d!18687 (= (arrayCountValidKeys!0 lt!36500 (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (bvadd (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3975 (_ BitVec 32)) Unit!2257)

(assert (=> d!18687 (= lt!36499 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!36500 (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))))))

(assert (=> d!18687 (= lt!36500 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))

(declare-fun lt!36511 () Unit!2257)

(declare-fun lt!36507 () Unit!2257)

(assert (=> d!18687 (= lt!36511 lt!36507)))

(declare-fun lt!36506 () array!3975)

(assert (=> d!18687 (arrayContainsKey!0 lt!36506 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!18687 (= lt!36507 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!36506 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))))))

(assert (=> d!18687 (= lt!36506 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))

(declare-fun lt!36509 () Unit!2257)

(declare-fun lt!36493 () Unit!2257)

(assert (=> d!18687 (= lt!36509 lt!36493)))

(assert (=> d!18687 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (getCurrentListMap!433 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!16 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) (_ BitVec 64) V!2995 Int) Unit!2257)

(assert (=> d!18687 (= lt!36493 (lemmaAddValidKeyToArrayThenAddPairToListMap!16 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36519 () Unit!2257)

(declare-fun lt!36492 () Unit!2257)

(assert (=> d!18687 (= lt!36519 lt!36492)))

(assert (=> d!18687 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (mask!6268 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3975 (_ BitVec 32) (_ BitVec 32)) Unit!2257)

(assert (=> d!18687 (= lt!36492 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (mask!6268 newMap!16)))))

(declare-fun lt!36501 () Unit!2257)

(declare-fun lt!36513 () Unit!2257)

(assert (=> d!18687 (= lt!36501 lt!36513)))

(assert (=> d!18687 (= (arrayCountValidKeys!0 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3975 (_ BitVec 32) (_ BitVec 64)) Unit!2257)

(assert (=> d!18687 (= lt!36513 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3932 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun lt!36503 () Unit!2257)

(declare-fun lt!36516 () Unit!2257)

(assert (=> d!18687 (= lt!36503 lt!36516)))

(declare-fun lt!36520 () List!1508)

(declare-fun lt!36515 () (_ BitVec 32))

(assert (=> d!18687 (arrayNoDuplicates!0 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) lt!36515 lt!36520)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3975 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1508) Unit!2257)

(assert (=> d!18687 (= lt!36516 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) lt!36515 lt!36520))))

(assert (=> d!18687 (= lt!36520 Nil!1505)))

(assert (=> d!18687 (= lt!36515 #b00000000000000000000000000000000)))

(declare-fun lt!36495 () Unit!2257)

(assert (=> d!18687 (= lt!36495 e!51436)))

(declare-fun c!12119 () Bool)

(assert (=> d!18687 (= c!12119 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!36518 () Unit!2257)

(assert (=> d!18687 (= lt!36518 e!51430)))

(assert (=> d!18687 (= c!12118 (contains!742 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!18687 (valid!313 newMap!16)))

(assert (=> d!18687 (= (updateHelperNewKey!28 newMap!16 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))) lt!36498)))

(declare-fun b!78719 () Bool)

(declare-fun e!51431 () Bool)

(assert (=> b!78719 (= e!51431 e!51433)))

(declare-fun res!41183 () Bool)

(assert (=> b!78719 (= res!41183 call!7253)))

(assert (=> b!78719 (=> (not res!41183) (not e!51433))))

(declare-fun b!78720 () Bool)

(assert (=> b!78720 (= e!51435 (not call!7251))))

(declare-fun b!78721 () Bool)

(declare-fun res!41188 () Bool)

(assert (=> b!78721 (= res!41188 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3097 lt!36504)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78721 (=> (not res!41188) (not e!51433))))

(declare-fun b!78722 () Bool)

(assert (=> b!78722 (= e!51434 (= (map!1174 (_2!1098 lt!36498)) (+!105 (map!1174 newMap!16) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!78723 () Bool)

(declare-fun res!41189 () Bool)

(assert (=> b!78723 (=> (not res!41189) (not e!51435))))

(assert (=> b!78723 (= res!41189 call!7253)))

(declare-fun e!51432 () Bool)

(assert (=> b!78723 (= e!51432 e!51435)))

(declare-fun b!78724 () Bool)

(declare-fun c!12116 () Bool)

(assert (=> b!78724 (= c!12116 ((_ is MissingVacant!240) lt!36504))))

(assert (=> b!78724 (= e!51432 e!51431)))

(declare-fun b!78725 () Bool)

(declare-fun lt!36496 () Unit!2257)

(assert (=> b!78725 (= e!51430 lt!36496)))

(assert (=> b!78725 (= lt!36496 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(assert (=> b!78725 (= lt!36504 call!7252)))

(assert (=> b!78725 (= c!12117 ((_ is MissingZero!240) lt!36504))))

(assert (=> b!78725 e!51432))

(declare-fun b!78726 () Bool)

(assert (=> b!78726 (= e!51431 ((_ is Undefined!240) lt!36504))))

(assert (= (and d!18687 c!12118) b!78717))

(assert (= (and d!18687 (not c!12118)) b!78725))

(assert (= (and b!78717 res!41185) b!78711))

(assert (= (and b!78711 res!41187) b!78718))

(assert (= (and b!78725 c!12117) b!78723))

(assert (= (and b!78725 (not c!12117)) b!78724))

(assert (= (and b!78723 res!41189) b!78715))

(assert (= (and b!78715 res!41184) b!78720))

(assert (= (and b!78724 c!12116) b!78719))

(assert (= (and b!78724 (not c!12116)) b!78726))

(assert (= (and b!78719 res!41183) b!78721))

(assert (= (and b!78721 res!41188) b!78714))

(assert (= (or b!78723 b!78719) bm!7251))

(assert (= (or b!78720 b!78714) bm!7249))

(assert (= (or b!78711 bm!7251) bm!7250))

(assert (= (or b!78717 b!78725) bm!7248))

(assert (= (and d!18687 c!12119) b!78713))

(assert (= (and d!18687 (not c!12119)) b!78712))

(assert (= (and d!18687 res!41190) b!78716))

(assert (= (and b!78716 res!41186) b!78710))

(assert (= (and b!78710 res!41182) b!78722))

(declare-fun m!79159 () Bool)

(assert (=> b!78710 m!79159))

(assert (=> b!78710 m!79159))

(assert (=> b!78710 m!77965))

(declare-fun m!79161 () Bool)

(assert (=> b!78710 m!79161))

(assert (=> bm!7248 m!77965))

(assert (=> bm!7248 m!78307))

(assert (=> b!78722 m!79159))

(assert (=> b!78722 m!78015))

(assert (=> b!78722 m!78015))

(declare-fun m!79163 () Bool)

(assert (=> b!78722 m!79163))

(assert (=> b!78713 m!77965))

(declare-fun m!79165 () Bool)

(assert (=> b!78713 m!79165))

(assert (=> b!78713 m!78087))

(assert (=> b!78713 m!78087))

(assert (=> b!78713 m!77965))

(assert (=> b!78713 m!78349))

(declare-fun m!79167 () Bool)

(assert (=> bm!7250 m!79167))

(declare-fun m!79169 () Bool)

(assert (=> b!78715 m!79169))

(declare-fun m!79171 () Bool)

(assert (=> d!18687 m!79171))

(declare-fun m!79173 () Bool)

(assert (=> d!18687 m!79173))

(declare-fun m!79175 () Bool)

(assert (=> d!18687 m!79175))

(assert (=> d!18687 m!77965))

(assert (=> d!18687 m!78353))

(assert (=> d!18687 m!77965))

(declare-fun m!79177 () Bool)

(assert (=> d!18687 m!79177))

(assert (=> d!18687 m!77965))

(declare-fun m!79179 () Bool)

(assert (=> d!18687 m!79179))

(assert (=> d!18687 m!77959))

(declare-fun m!79181 () Bool)

(assert (=> d!18687 m!79181))

(assert (=> d!18687 m!78087))

(assert (=> d!18687 m!78985))

(assert (=> d!18687 m!78087))

(assert (=> d!18687 m!77965))

(assert (=> d!18687 m!78349))

(assert (=> d!18687 m!78271))

(assert (=> d!18687 m!77965))

(declare-fun m!79183 () Bool)

(assert (=> d!18687 m!79183))

(declare-fun m!79185 () Bool)

(assert (=> d!18687 m!79185))

(assert (=> d!18687 m!79171))

(declare-fun m!79187 () Bool)

(assert (=> d!18687 m!79187))

(declare-fun m!79189 () Bool)

(assert (=> d!18687 m!79189))

(declare-fun m!79191 () Bool)

(assert (=> d!18687 m!79191))

(declare-fun m!79193 () Bool)

(assert (=> d!18687 m!79193))

(assert (=> d!18687 m!78087))

(assert (=> d!18687 m!77965))

(declare-fun m!79195 () Bool)

(assert (=> d!18687 m!79195))

(declare-fun m!79197 () Bool)

(assert (=> d!18687 m!79197))

(assert (=> d!18687 m!77965))

(declare-fun m!79199 () Bool)

(assert (=> d!18687 m!79199))

(assert (=> d!18687 m!79173))

(assert (=> d!18687 m!77965))

(declare-fun m!79201 () Bool)

(assert (=> d!18687 m!79201))

(declare-fun m!79203 () Bool)

(assert (=> d!18687 m!79203))

(declare-fun m!79205 () Bool)

(assert (=> d!18687 m!79205))

(declare-fun m!79207 () Bool)

(assert (=> b!78716 m!79207))

(declare-fun m!79209 () Bool)

(assert (=> b!78718 m!79209))

(assert (=> b!78717 m!77965))

(assert (=> b!78717 m!78305))

(assert (=> b!78725 m!77965))

(assert (=> b!78725 m!78337))

(assert (=> bm!7249 m!77965))

(assert (=> bm!7249 m!78353))

(declare-fun m!79211 () Bool)

(assert (=> b!78721 m!79211))

(assert (=> bm!7165 d!18687))

(assert (=> b!78028 d!18513))

(declare-fun d!18689 () Bool)

(assert (=> d!18689 (= (inRange!0 (ite c!11969 (ite c!11974 (index!3095 lt!36152) (ite c!11973 (index!3094 lt!36134) (index!3097 lt!36134))) (ite c!11966 (index!3095 lt!36146) (ite c!11976 (index!3094 lt!36133) (index!3097 lt!36133)))) (mask!6268 newMap!16)) (and (bvsge (ite c!11969 (ite c!11974 (index!3095 lt!36152) (ite c!11973 (index!3094 lt!36134) (index!3097 lt!36134))) (ite c!11966 (index!3095 lt!36146) (ite c!11976 (index!3094 lt!36133) (index!3097 lt!36133)))) #b00000000000000000000000000000000) (bvslt (ite c!11969 (ite c!11974 (index!3095 lt!36152) (ite c!11973 (index!3094 lt!36134) (index!3097 lt!36134))) (ite c!11966 (index!3095 lt!36146) (ite c!11976 (index!3094 lt!36133) (index!3097 lt!36133)))) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7181 d!18689))

(declare-fun d!18691 () Bool)

(declare-fun lt!36522 () Bool)

(assert (=> d!18691 (= lt!36522 (select (content!83 (toList!739 lt!36000)) lt!35870))))

(declare-fun e!51438 () Bool)

(assert (=> d!18691 (= lt!36522 e!51438)))

(declare-fun res!41191 () Bool)

(assert (=> d!18691 (=> (not res!41191) (not e!51438))))

(assert (=> d!18691 (= res!41191 ((_ is Cons!1503) (toList!739 lt!36000)))))

(assert (=> d!18691 (= (contains!743 (toList!739 lt!36000) lt!35870) lt!36522)))

(declare-fun b!78727 () Bool)

(declare-fun e!51437 () Bool)

(assert (=> b!78727 (= e!51438 e!51437)))

(declare-fun res!41192 () Bool)

(assert (=> b!78727 (=> res!41192 e!51437)))

(assert (=> b!78727 (= res!41192 (= (h!2091 (toList!739 lt!36000)) lt!35870))))

(declare-fun b!78728 () Bool)

(assert (=> b!78728 (= e!51437 (contains!743 (t!5153 (toList!739 lt!36000)) lt!35870))))

(assert (= (and d!18691 res!41191) b!78727))

(assert (= (and b!78727 (not res!41192)) b!78728))

(declare-fun m!79213 () Bool)

(assert (=> d!18691 m!79213))

(declare-fun m!79215 () Bool)

(assert (=> d!18691 m!79215))

(declare-fun m!79217 () Bool)

(assert (=> b!78728 m!79217))

(assert (=> b!77996 d!18691))

(declare-fun d!18693 () Bool)

(declare-fun e!51439 () Bool)

(assert (=> d!18693 e!51439))

(declare-fun res!41193 () Bool)

(assert (=> d!18693 (=> (not res!41193) (not e!51439))))

(declare-fun lt!36524 () ListLongMap!1447)

(assert (=> d!18693 (= res!41193 (contains!742 lt!36524 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun lt!36523 () List!1507)

(assert (=> d!18693 (= lt!36524 (ListLongMap!1448 lt!36523))))

(declare-fun lt!36526 () Unit!2257)

(declare-fun lt!36525 () Unit!2257)

(assert (=> d!18693 (= lt!36526 lt!36525)))

(assert (=> d!18693 (= (getValueByKey!137 lt!36523 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (Some!142 (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!18693 (= lt!36525 (lemmaContainsTupThenGetReturnValue!54 lt!36523 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!18693 (= lt!36523 (insertStrictlySorted!57 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105))) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!18693 (= (+!105 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105)) (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36524)))

(declare-fun b!78729 () Bool)

(declare-fun res!41194 () Bool)

(assert (=> b!78729 (=> (not res!41194) (not e!51439))))

(assert (=> b!78729 (= res!41194 (= (getValueByKey!137 (toList!739 lt!36524) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (Some!142 (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun b!78730 () Bool)

(assert (=> b!78730 (= e!51439 (contains!743 (toList!739 lt!36524) (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (= (and d!18693 res!41193) b!78729))

(assert (= (and b!78729 res!41194) b!78730))

(declare-fun m!79219 () Bool)

(assert (=> d!18693 m!79219))

(declare-fun m!79221 () Bool)

(assert (=> d!18693 m!79221))

(declare-fun m!79223 () Bool)

(assert (=> d!18693 m!79223))

(declare-fun m!79225 () Bool)

(assert (=> d!18693 m!79225))

(declare-fun m!79227 () Bool)

(assert (=> b!78729 m!79227))

(declare-fun m!79229 () Bool)

(assert (=> b!78730 m!79229))

(assert (=> bm!7097 d!18693))

(assert (=> b!78205 d!18645))

(declare-fun d!18695 () Bool)

(assert (=> d!18695 (= (get!1174 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) from!355) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2591 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> b!78058 d!18695))

(assert (=> bm!7101 d!18435))

(declare-fun d!18697 () Bool)

(declare-fun e!51440 () Bool)

(assert (=> d!18697 e!51440))

(declare-fun res!41195 () Bool)

(assert (=> d!18697 (=> (not res!41195) (not e!51440))))

(declare-fun lt!36528 () ListLongMap!1447)

(assert (=> d!18697 (= res!41195 (contains!742 lt!36528 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!36527 () List!1507)

(assert (=> d!18697 (= lt!36528 (ListLongMap!1448 lt!36527))))

(declare-fun lt!36530 () Unit!2257)

(declare-fun lt!36529 () Unit!2257)

(assert (=> d!18697 (= lt!36530 lt!36529)))

(assert (=> d!18697 (= (getValueByKey!137 lt!36527 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18697 (= lt!36529 (lemmaContainsTupThenGetReturnValue!54 lt!36527 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18697 (= lt!36527 (insertStrictlySorted!57 (toList!739 call!7182) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18697 (= (+!105 call!7182 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!36528)))

(declare-fun b!78731 () Bool)

(declare-fun res!41196 () Bool)

(assert (=> b!78731 (=> (not res!41196) (not e!51440))))

(assert (=> b!78731 (= res!41196 (= (getValueByKey!137 (toList!739 lt!36528) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!78732 () Bool)

(assert (=> b!78732 (= e!51440 (contains!743 (toList!739 lt!36528) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!18697 res!41195) b!78731))

(assert (= (and b!78731 res!41196) b!78732))

(declare-fun m!79231 () Bool)

(assert (=> d!18697 m!79231))

(declare-fun m!79233 () Bool)

(assert (=> d!18697 m!79233))

(declare-fun m!79235 () Bool)

(assert (=> d!18697 m!79235))

(declare-fun m!79237 () Bool)

(assert (=> d!18697 m!79237))

(declare-fun m!79239 () Bool)

(assert (=> b!78731 m!79239))

(declare-fun m!79241 () Bool)

(assert (=> b!78732 m!79241))

(assert (=> b!78199 d!18697))

(declare-fun b!78733 () Bool)

(declare-fun e!51444 () Bool)

(declare-fun call!7255 () Bool)

(assert (=> b!78733 (= e!51444 call!7255)))

(declare-fun d!18699 () Bool)

(declare-fun res!41198 () Bool)

(declare-fun e!51441 () Bool)

(assert (=> d!18699 (=> res!41198 e!51441)))

(assert (=> d!18699 (= res!41198 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!18699 (= (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)) e!51441)))

(declare-fun b!78734 () Bool)

(assert (=> b!78734 (= e!51444 call!7255)))

(declare-fun b!78735 () Bool)

(declare-fun e!51443 () Bool)

(assert (=> b!78735 (= e!51443 e!51444)))

(declare-fun c!12120 () Bool)

(assert (=> b!78735 (= c!12120 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78736 () Bool)

(declare-fun e!51442 () Bool)

(assert (=> b!78736 (= e!51442 (contains!744 (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78737 () Bool)

(assert (=> b!78737 (= e!51441 e!51443)))

(declare-fun res!41199 () Bool)

(assert (=> b!78737 (=> (not res!41199) (not e!51443))))

(assert (=> b!78737 (= res!41199 (not e!51442))))

(declare-fun res!41197 () Bool)

(assert (=> b!78737 (=> (not res!41197) (not e!51442))))

(assert (=> b!78737 (= res!41197 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!7252 () Bool)

(assert (=> bm!7252 (= call!7255 (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12120 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505))))))

(assert (= (and d!18699 (not res!41198)) b!78737))

(assert (= (and b!78737 res!41197) b!78736))

(assert (= (and b!78737 res!41199) b!78735))

(assert (= (and b!78735 c!12120) b!78733))

(assert (= (and b!78735 (not c!12120)) b!78734))

(assert (= (or b!78733 b!78734) bm!7252))

(declare-fun m!79243 () Bool)

(assert (=> b!78735 m!79243))

(assert (=> b!78735 m!79243))

(declare-fun m!79245 () Bool)

(assert (=> b!78735 m!79245))

(assert (=> b!78736 m!79243))

(assert (=> b!78736 m!79243))

(declare-fun m!79247 () Bool)

(assert (=> b!78736 m!79247))

(assert (=> b!78737 m!79243))

(assert (=> b!78737 m!79243))

(assert (=> b!78737 m!79245))

(assert (=> bm!7252 m!79243))

(declare-fun m!79249 () Bool)

(assert (=> bm!7252 m!79249))

(assert (=> bm!7109 d!18699))

(declare-fun d!18701 () Bool)

(declare-fun e!51445 () Bool)

(assert (=> d!18701 e!51445))

(declare-fun res!41200 () Bool)

(assert (=> d!18701 (=> res!41200 e!51445)))

(declare-fun lt!36534 () Bool)

(assert (=> d!18701 (= res!41200 (not lt!36534))))

(declare-fun lt!36531 () Bool)

(assert (=> d!18701 (= lt!36534 lt!36531)))

(declare-fun lt!36532 () Unit!2257)

(declare-fun e!51446 () Unit!2257)

(assert (=> d!18701 (= lt!36532 e!51446)))

(declare-fun c!12121 () Bool)

(assert (=> d!18701 (= c!12121 lt!36531)))

(assert (=> d!18701 (= lt!36531 (containsKey!141 (toList!739 lt!36004) (_1!1097 lt!35864)))))

(assert (=> d!18701 (= (contains!742 lt!36004 (_1!1097 lt!35864)) lt!36534)))

(declare-fun b!78738 () Bool)

(declare-fun lt!36533 () Unit!2257)

(assert (=> b!78738 (= e!51446 lt!36533)))

(assert (=> b!78738 (= lt!36533 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36004) (_1!1097 lt!35864)))))

(assert (=> b!78738 (isDefined!90 (getValueByKey!137 (toList!739 lt!36004) (_1!1097 lt!35864)))))

(declare-fun b!78739 () Bool)

(declare-fun Unit!2287 () Unit!2257)

(assert (=> b!78739 (= e!51446 Unit!2287)))

(declare-fun b!78740 () Bool)

(assert (=> b!78740 (= e!51445 (isDefined!90 (getValueByKey!137 (toList!739 lt!36004) (_1!1097 lt!35864))))))

(assert (= (and d!18701 c!12121) b!78738))

(assert (= (and d!18701 (not c!12121)) b!78739))

(assert (= (and d!18701 (not res!41200)) b!78740))

(declare-fun m!79251 () Bool)

(assert (=> d!18701 m!79251))

(declare-fun m!79253 () Bool)

(assert (=> b!78738 m!79253))

(assert (=> b!78738 m!78165))

(assert (=> b!78738 m!78165))

(declare-fun m!79255 () Bool)

(assert (=> b!78738 m!79255))

(assert (=> b!78740 m!78165))

(assert (=> b!78740 m!78165))

(assert (=> b!78740 m!79255))

(assert (=> d!18433 d!18701))

(declare-fun b!78744 () Bool)

(declare-fun e!51448 () Option!143)

(assert (=> b!78744 (= e!51448 None!141)))

(declare-fun d!18703 () Bool)

(declare-fun c!12122 () Bool)

(assert (=> d!18703 (= c!12122 (and ((_ is Cons!1503) lt!36003) (= (_1!1097 (h!2091 lt!36003)) (_1!1097 lt!35864))))))

(declare-fun e!51447 () Option!143)

(assert (=> d!18703 (= (getValueByKey!137 lt!36003 (_1!1097 lt!35864)) e!51447)))

(declare-fun b!78743 () Bool)

(assert (=> b!78743 (= e!51448 (getValueByKey!137 (t!5153 lt!36003) (_1!1097 lt!35864)))))

(declare-fun b!78741 () Bool)

(assert (=> b!78741 (= e!51447 (Some!142 (_2!1097 (h!2091 lt!36003))))))

(declare-fun b!78742 () Bool)

(assert (=> b!78742 (= e!51447 e!51448)))

(declare-fun c!12123 () Bool)

(assert (=> b!78742 (= c!12123 (and ((_ is Cons!1503) lt!36003) (not (= (_1!1097 (h!2091 lt!36003)) (_1!1097 lt!35864)))))))

(assert (= (and d!18703 c!12122) b!78741))

(assert (= (and d!18703 (not c!12122)) b!78742))

(assert (= (and b!78742 c!12123) b!78743))

(assert (= (and b!78742 (not c!12123)) b!78744))

(declare-fun m!79257 () Bool)

(assert (=> b!78743 m!79257))

(assert (=> d!18433 d!18703))

(declare-fun d!18705 () Bool)

(assert (=> d!18705 (= (getValueByKey!137 lt!36003 (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864)))))

(declare-fun lt!36535 () Unit!2257)

(assert (=> d!18705 (= lt!36535 (choose!456 lt!36003 (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(declare-fun e!51449 () Bool)

(assert (=> d!18705 e!51449))

(declare-fun res!41201 () Bool)

(assert (=> d!18705 (=> (not res!41201) (not e!51449))))

(assert (=> d!18705 (= res!41201 (isStrictlySorted!295 lt!36003))))

(assert (=> d!18705 (= (lemmaContainsTupThenGetReturnValue!54 lt!36003 (_1!1097 lt!35864) (_2!1097 lt!35864)) lt!36535)))

(declare-fun b!78745 () Bool)

(declare-fun res!41202 () Bool)

(assert (=> b!78745 (=> (not res!41202) (not e!51449))))

(assert (=> b!78745 (= res!41202 (containsKey!141 lt!36003 (_1!1097 lt!35864)))))

(declare-fun b!78746 () Bool)

(assert (=> b!78746 (= e!51449 (contains!743 lt!36003 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(assert (= (and d!18705 res!41201) b!78745))

(assert (= (and b!78745 res!41202) b!78746))

(assert (=> d!18705 m!78159))

(declare-fun m!79259 () Bool)

(assert (=> d!18705 m!79259))

(declare-fun m!79261 () Bool)

(assert (=> d!18705 m!79261))

(declare-fun m!79263 () Bool)

(assert (=> b!78745 m!79263))

(declare-fun m!79265 () Bool)

(assert (=> b!78746 m!79265))

(assert (=> d!18433 d!18705))

(declare-fun b!78747 () Bool)

(declare-fun e!51450 () List!1507)

(declare-fun c!12127 () Bool)

(declare-fun c!12126 () Bool)

(assert (=> b!78747 (= e!51450 (ite c!12127 (t!5153 (toList!739 lt!35869)) (ite c!12126 (Cons!1503 (h!2091 (toList!739 lt!35869)) (t!5153 (toList!739 lt!35869))) Nil!1504)))))

(declare-fun b!78748 () Bool)

(declare-fun e!51454 () List!1507)

(declare-fun call!7258 () List!1507)

(assert (=> b!78748 (= e!51454 call!7258)))

(declare-fun bm!7253 () Bool)

(declare-fun call!7256 () List!1507)

(declare-fun call!7257 () List!1507)

(assert (=> bm!7253 (= call!7256 call!7257)))

(declare-fun b!78749 () Bool)

(assert (=> b!78749 (= c!12126 (and ((_ is Cons!1503) (toList!739 lt!35869)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 lt!35864))))))

(declare-fun e!51452 () List!1507)

(declare-fun e!51451 () List!1507)

(assert (=> b!78749 (= e!51452 e!51451)))

(declare-fun b!78750 () Bool)

(assert (=> b!78750 (= e!51450 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35869)) (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(declare-fun b!78751 () Bool)

(declare-fun res!41204 () Bool)

(declare-fun e!51453 () Bool)

(assert (=> b!78751 (=> (not res!41204) (not e!51453))))

(declare-fun lt!36536 () List!1507)

(assert (=> b!78751 (= res!41204 (containsKey!141 lt!36536 (_1!1097 lt!35864)))))

(declare-fun c!12124 () Bool)

(declare-fun bm!7254 () Bool)

(assert (=> bm!7254 (= call!7258 ($colon$colon!69 e!51450 (ite c!12124 (h!2091 (toList!739 lt!35869)) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864)))))))

(declare-fun c!12125 () Bool)

(assert (=> bm!7254 (= c!12125 c!12124)))

(declare-fun b!78752 () Bool)

(assert (=> b!78752 (= e!51454 e!51452)))

(assert (=> b!78752 (= c!12127 (and ((_ is Cons!1503) (toList!739 lt!35869)) (= (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 lt!35864))))))

(declare-fun b!78754 () Bool)

(assert (=> b!78754 (= e!51452 call!7257)))

(declare-fun b!78755 () Bool)

(assert (=> b!78755 (= e!51453 (contains!743 lt!36536 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!78753 () Bool)

(assert (=> b!78753 (= e!51451 call!7256)))

(declare-fun d!18707 () Bool)

(assert (=> d!18707 e!51453))

(declare-fun res!41203 () Bool)

(assert (=> d!18707 (=> (not res!41203) (not e!51453))))

(assert (=> d!18707 (= res!41203 (isStrictlySorted!295 lt!36536))))

(assert (=> d!18707 (= lt!36536 e!51454)))

(assert (=> d!18707 (= c!12124 (and ((_ is Cons!1503) (toList!739 lt!35869)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 lt!35864))))))

(assert (=> d!18707 (isStrictlySorted!295 (toList!739 lt!35869))))

(assert (=> d!18707 (= (insertStrictlySorted!57 (toList!739 lt!35869) (_1!1097 lt!35864) (_2!1097 lt!35864)) lt!36536)))

(declare-fun bm!7255 () Bool)

(assert (=> bm!7255 (= call!7257 call!7258)))

(declare-fun b!78756 () Bool)

(assert (=> b!78756 (= e!51451 call!7256)))

(assert (= (and d!18707 c!12124) b!78748))

(assert (= (and d!18707 (not c!12124)) b!78752))

(assert (= (and b!78752 c!12127) b!78754))

(assert (= (and b!78752 (not c!12127)) b!78749))

(assert (= (and b!78749 c!12126) b!78753))

(assert (= (and b!78749 (not c!12126)) b!78756))

(assert (= (or b!78753 b!78756) bm!7253))

(assert (= (or b!78754 bm!7253) bm!7255))

(assert (= (or b!78748 bm!7255) bm!7254))

(assert (= (and bm!7254 c!12125) b!78750))

(assert (= (and bm!7254 (not c!12125)) b!78747))

(assert (= (and d!18707 res!41203) b!78751))

(assert (= (and b!78751 res!41204) b!78755))

(declare-fun m!79267 () Bool)

(assert (=> b!78755 m!79267))

(declare-fun m!79269 () Bool)

(assert (=> d!18707 m!79269))

(assert (=> d!18707 m!78969))

(declare-fun m!79271 () Bool)

(assert (=> b!78750 m!79271))

(declare-fun m!79273 () Bool)

(assert (=> b!78751 m!79273))

(declare-fun m!79275 () Bool)

(assert (=> bm!7254 m!79275))

(assert (=> d!18433 d!18707))

(declare-fun d!18709 () Bool)

(declare-fun res!41205 () Bool)

(declare-fun e!51455 () Bool)

(assert (=> d!18709 (=> res!41205 e!51455)))

(assert (=> d!18709 (= res!41205 (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!18709 (= (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!51455)))

(declare-fun b!78757 () Bool)

(declare-fun e!51456 () Bool)

(assert (=> b!78757 (= e!51455 e!51456)))

(declare-fun res!41206 () Bool)

(assert (=> b!78757 (=> (not res!41206) (not e!51456))))

(assert (=> b!78757 (= res!41206 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!78758 () Bool)

(assert (=> b!78758 (= e!51456 (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!18709 (not res!41205)) b!78757))

(assert (= (and b!78757 res!41206) b!78758))

(assert (=> d!18709 m!78847))

(assert (=> b!78758 m!77965))

(declare-fun m!79277 () Bool)

(assert (=> b!78758 m!79277))

(assert (=> b!78065 d!18709))

(assert (=> b!78188 d!18489))

(declare-fun d!18711 () Bool)

(declare-fun e!51457 () Bool)

(assert (=> d!18711 e!51457))

(declare-fun res!41207 () Bool)

(assert (=> d!18711 (=> res!41207 e!51457)))

(declare-fun lt!36540 () Bool)

(assert (=> d!18711 (= res!41207 (not lt!36540))))

(declare-fun lt!36537 () Bool)

(assert (=> d!18711 (= lt!36540 lt!36537)))

(declare-fun lt!36538 () Unit!2257)

(declare-fun e!51458 () Unit!2257)

(assert (=> d!18711 (= lt!36538 e!51458)))

(declare-fun c!12128 () Bool)

(assert (=> d!18711 (= c!12128 lt!36537)))

(assert (=> d!18711 (= lt!36537 (containsKey!141 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18711 (= (contains!742 lt!36021 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36540)))

(declare-fun b!78759 () Bool)

(declare-fun lt!36539 () Unit!2257)

(assert (=> b!78759 (= e!51458 lt!36539)))

(assert (=> b!78759 (= lt!36539 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78759 (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78760 () Bool)

(declare-fun Unit!2288 () Unit!2257)

(assert (=> b!78760 (= e!51458 Unit!2288)))

(declare-fun b!78761 () Bool)

(assert (=> b!78761 (= e!51457 (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18711 c!12128) b!78759))

(assert (= (and d!18711 (not c!12128)) b!78760))

(assert (= (and d!18711 (not res!41207)) b!78761))

(declare-fun m!79279 () Bool)

(assert (=> d!18711 m!79279))

(declare-fun m!79281 () Bool)

(assert (=> b!78759 m!79281))

(declare-fun m!79283 () Bool)

(assert (=> b!78759 m!79283))

(assert (=> b!78759 m!79283))

(declare-fun m!79285 () Bool)

(assert (=> b!78759 m!79285))

(assert (=> b!78761 m!79283))

(assert (=> b!78761 m!79283))

(assert (=> b!78761 m!79285))

(assert (=> d!18435 d!18711))

(assert (=> d!18435 d!18451))

(declare-fun b!78765 () Bool)

(declare-fun e!51460 () Option!143)

(assert (=> b!78765 (= e!51460 None!141)))

(declare-fun d!18713 () Bool)

(declare-fun c!12129 () Bool)

(assert (=> d!18713 (= c!12129 (and ((_ is Cons!1503) (toList!739 lt!36049)) (= (_1!1097 (h!2091 (toList!739 lt!36049))) (_1!1097 lt!35870))))))

(declare-fun e!51459 () Option!143)

(assert (=> d!18713 (= (getValueByKey!137 (toList!739 lt!36049) (_1!1097 lt!35870)) e!51459)))

(declare-fun b!78764 () Bool)

(assert (=> b!78764 (= e!51460 (getValueByKey!137 (t!5153 (toList!739 lt!36049)) (_1!1097 lt!35870)))))

(declare-fun b!78762 () Bool)

(assert (=> b!78762 (= e!51459 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36049)))))))

(declare-fun b!78763 () Bool)

(assert (=> b!78763 (= e!51459 e!51460)))

(declare-fun c!12130 () Bool)

(assert (=> b!78763 (= c!12130 (and ((_ is Cons!1503) (toList!739 lt!36049)) (not (= (_1!1097 (h!2091 (toList!739 lt!36049))) (_1!1097 lt!35870)))))))

(assert (= (and d!18713 c!12129) b!78762))

(assert (= (and d!18713 (not c!12129)) b!78763))

(assert (= (and b!78763 c!12130) b!78764))

(assert (= (and b!78763 (not c!12130)) b!78765))

(declare-fun m!79287 () Bool)

(assert (=> b!78764 m!79287))

(assert (=> b!78043 d!18713))

(declare-fun d!18715 () Bool)

(declare-fun lt!36541 () Bool)

(assert (=> d!18715 (= lt!36541 (select (content!83 (toList!739 lt!36029)) lt!35861))))

(declare-fun e!51462 () Bool)

(assert (=> d!18715 (= lt!36541 e!51462)))

(declare-fun res!41208 () Bool)

(assert (=> d!18715 (=> (not res!41208) (not e!51462))))

(assert (=> d!18715 (= res!41208 ((_ is Cons!1503) (toList!739 lt!36029)))))

(assert (=> d!18715 (= (contains!743 (toList!739 lt!36029) lt!35861) lt!36541)))

(declare-fun b!78766 () Bool)

(declare-fun e!51461 () Bool)

(assert (=> b!78766 (= e!51462 e!51461)))

(declare-fun res!41209 () Bool)

(assert (=> b!78766 (=> res!41209 e!51461)))

(assert (=> b!78766 (= res!41209 (= (h!2091 (toList!739 lt!36029)) lt!35861))))

(declare-fun b!78767 () Bool)

(assert (=> b!78767 (= e!51461 (contains!743 (t!5153 (toList!739 lt!36029)) lt!35861))))

(assert (= (and d!18715 res!41208) b!78766))

(assert (= (and b!78766 (not res!41209)) b!78767))

(declare-fun m!79289 () Bool)

(assert (=> d!18715 m!79289))

(declare-fun m!79291 () Bool)

(assert (=> d!18715 m!79291))

(declare-fun m!79293 () Bool)

(assert (=> b!78767 m!79293))

(assert (=> b!78036 d!18715))

(assert (=> d!18461 d!18465))

(declare-fun d!18717 () Bool)

(assert (=> d!18717 (not (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!18717 true))

(declare-fun _$68!64 () Unit!2257)

(assert (=> d!18717 (= (choose!68 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505)) _$68!64)))

(declare-fun bs!3329 () Bool)

(assert (= bs!3329 d!18717))

(assert (=> bs!3329 m!77965))

(assert (=> bs!3329 m!77969))

(assert (=> d!18461 d!18717))

(declare-fun b!78768 () Bool)

(declare-fun e!51466 () Bool)

(declare-fun call!7259 () Bool)

(assert (=> b!78768 (= e!51466 call!7259)))

(declare-fun d!18719 () Bool)

(declare-fun res!41211 () Bool)

(declare-fun e!51463 () Bool)

(assert (=> d!18719 (=> res!41211 e!51463)))

(assert (=> d!18719 (= res!41211 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18719 (= (arrayNoDuplicates!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 Nil!1505) e!51463)))

(declare-fun b!78769 () Bool)

(assert (=> b!78769 (= e!51466 call!7259)))

(declare-fun b!78770 () Bool)

(declare-fun e!51465 () Bool)

(assert (=> b!78770 (= e!51465 e!51466)))

(declare-fun c!12131 () Bool)

(assert (=> b!78770 (= c!12131 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78771 () Bool)

(declare-fun e!51464 () Bool)

(assert (=> b!78771 (= e!51464 (contains!744 Nil!1505 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78772 () Bool)

(assert (=> b!78772 (= e!51463 e!51465)))

(declare-fun res!41212 () Bool)

(assert (=> b!78772 (=> (not res!41212) (not e!51465))))

(assert (=> b!78772 (= res!41212 (not e!51464))))

(declare-fun res!41210 () Bool)

(assert (=> b!78772 (=> (not res!41210) (not e!51464))))

(assert (=> b!78772 (= res!41210 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7256 () Bool)

(assert (=> bm!7256 (= call!7259 (arrayNoDuplicates!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12131 (Cons!1504 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505)))))

(assert (= (and d!18719 (not res!41211)) b!78772))

(assert (= (and b!78772 res!41210) b!78771))

(assert (= (and b!78772 res!41212) b!78770))

(assert (= (and b!78770 c!12131) b!78768))

(assert (= (and b!78770 (not c!12131)) b!78769))

(assert (= (or b!78768 b!78769) bm!7256))

(assert (=> b!78770 m!78509))

(assert (=> b!78770 m!78509))

(assert (=> b!78770 m!78537))

(assert (=> b!78771 m!78509))

(assert (=> b!78771 m!78509))

(declare-fun m!79295 () Bool)

(assert (=> b!78771 m!79295))

(assert (=> b!78772 m!78509))

(assert (=> b!78772 m!78509))

(assert (=> b!78772 m!78537))

(assert (=> bm!7256 m!78509))

(declare-fun m!79297 () Bool)

(assert (=> bm!7256 m!79297))

(assert (=> b!78053 d!18719))

(declare-fun d!18721 () Bool)

(declare-fun res!41213 () Bool)

(declare-fun e!51467 () Bool)

(assert (=> d!18721 (=> (not res!41213) (not e!51467))))

(assert (=> d!18721 (= res!41213 (simpleValid!55 (_2!1098 lt!36136)))))

(assert (=> d!18721 (= (valid!313 (_2!1098 lt!36136)) e!51467)))

(declare-fun b!78773 () Bool)

(declare-fun res!41214 () Bool)

(assert (=> b!78773 (=> (not res!41214) (not e!51467))))

(assert (=> b!78773 (= res!41214 (= (arrayCountValidKeys!0 (_keys!3932 (_2!1098 lt!36136)) #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))) (_size!415 (_2!1098 lt!36136))))))

(declare-fun b!78774 () Bool)

(declare-fun res!41215 () Bool)

(assert (=> b!78774 (=> (not res!41215) (not e!51467))))

(assert (=> b!78774 (= res!41215 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136))))))

(declare-fun b!78775 () Bool)

(assert (=> b!78775 (= e!51467 (arrayNoDuplicates!0 (_keys!3932 (_2!1098 lt!36136)) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!18721 res!41213) b!78773))

(assert (= (and b!78773 res!41214) b!78774))

(assert (= (and b!78774 res!41215) b!78775))

(declare-fun m!79299 () Bool)

(assert (=> d!18721 m!79299))

(declare-fun m!79301 () Bool)

(assert (=> b!78773 m!79301))

(declare-fun m!79303 () Bool)

(assert (=> b!78774 m!79303))

(declare-fun m!79305 () Bool)

(assert (=> b!78775 m!79305))

(assert (=> d!18477 d!18721))

(assert (=> d!18477 d!18453))

(declare-fun d!18723 () Bool)

(declare-fun lt!36542 () Bool)

(assert (=> d!18723 (= lt!36542 (select (content!83 (toList!739 lt!36033)) lt!35864))))

(declare-fun e!51469 () Bool)

(assert (=> d!18723 (= lt!36542 e!51469)))

(declare-fun res!41216 () Bool)

(assert (=> d!18723 (=> (not res!41216) (not e!51469))))

(assert (=> d!18723 (= res!41216 ((_ is Cons!1503) (toList!739 lt!36033)))))

(assert (=> d!18723 (= (contains!743 (toList!739 lt!36033) lt!35864) lt!36542)))

(declare-fun b!78776 () Bool)

(declare-fun e!51468 () Bool)

(assert (=> b!78776 (= e!51469 e!51468)))

(declare-fun res!41217 () Bool)

(assert (=> b!78776 (=> res!41217 e!51468)))

(assert (=> b!78776 (= res!41217 (= (h!2091 (toList!739 lt!36033)) lt!35864))))

(declare-fun b!78777 () Bool)

(assert (=> b!78777 (= e!51468 (contains!743 (t!5153 (toList!739 lt!36033)) lt!35864))))

(assert (= (and d!18723 res!41216) b!78776))

(assert (= (and b!78776 (not res!41217)) b!78777))

(declare-fun m!79307 () Bool)

(assert (=> d!18723 m!79307))

(declare-fun m!79309 () Bool)

(assert (=> d!18723 m!79309))

(declare-fun m!79311 () Bool)

(assert (=> b!78777 m!79311))

(assert (=> b!78038 d!18723))

(assert (=> d!18425 d!18645))

(declare-fun d!18725 () Bool)

(declare-fun e!51470 () Bool)

(assert (=> d!18725 e!51470))

(declare-fun res!41218 () Bool)

(assert (=> d!18725 (=> (not res!41218) (not e!51470))))

(declare-fun lt!36544 () ListLongMap!1447)

(assert (=> d!18725 (= res!41218 (contains!742 lt!36544 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun lt!36543 () List!1507)

(assert (=> d!18725 (= lt!36544 (ListLongMap!1448 lt!36543))))

(declare-fun lt!36546 () Unit!2257)

(declare-fun lt!36545 () Unit!2257)

(assert (=> d!18725 (= lt!36546 lt!36545)))

(assert (=> d!18725 (= (getValueByKey!137 lt!36543 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (Some!142 (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (=> d!18725 (= lt!36545 (lemmaContainsTupThenGetReturnValue!54 lt!36543 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (=> d!18725 (= lt!36543 (insertStrictlySorted!57 (toList!739 e!51142) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (=> d!18725 (= (+!105 e!51142 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!36544)))

(declare-fun b!78778 () Bool)

(declare-fun res!41219 () Bool)

(assert (=> b!78778 (=> (not res!41219) (not e!51470))))

(assert (=> b!78778 (= res!41219 (= (getValueByKey!137 (toList!739 lt!36544) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (Some!142 (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun b!78779 () Bool)

(assert (=> b!78779 (= e!51470 (contains!743 (toList!739 lt!36544) (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (= (and d!18725 res!41218) b!78778))

(assert (= (and b!78778 res!41219) b!78779))

(declare-fun m!79313 () Bool)

(assert (=> d!18725 m!79313))

(declare-fun m!79315 () Bool)

(assert (=> d!18725 m!79315))

(declare-fun m!79317 () Bool)

(assert (=> d!18725 m!79317))

(declare-fun m!79319 () Bool)

(assert (=> d!18725 m!79319))

(declare-fun m!79321 () Bool)

(assert (=> b!78778 m!79321))

(declare-fun m!79323 () Bool)

(assert (=> b!78779 m!79323))

(assert (=> bm!7170 d!18725))

(declare-fun d!18727 () Bool)

(declare-fun lt!36549 () Bool)

(declare-fun content!84 (List!1508) (InoxSet (_ BitVec 64)))

(assert (=> d!18727 (= lt!36549 (select (content!84 Nil!1505) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun e!51476 () Bool)

(assert (=> d!18727 (= lt!36549 e!51476)))

(declare-fun res!41225 () Bool)

(assert (=> d!18727 (=> (not res!41225) (not e!51476))))

(assert (=> d!18727 (= res!41225 ((_ is Cons!1504) Nil!1505))))

(assert (=> d!18727 (= (contains!744 Nil!1505 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) lt!36549)))

(declare-fun b!78784 () Bool)

(declare-fun e!51475 () Bool)

(assert (=> b!78784 (= e!51476 e!51475)))

(declare-fun res!41224 () Bool)

(assert (=> b!78784 (=> res!41224 e!51475)))

(assert (=> b!78784 (= res!41224 (= (h!2092 Nil!1505) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!78785 () Bool)

(assert (=> b!78785 (= e!51475 (contains!744 (t!5154 Nil!1505) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (= (and d!18727 res!41225) b!78784))

(assert (= (and b!78784 (not res!41224)) b!78785))

(declare-fun m!79325 () Bool)

(assert (=> d!18727 m!79325))

(assert (=> d!18727 m!77965))

(declare-fun m!79327 () Bool)

(assert (=> d!18727 m!79327))

(assert (=> b!78785 m!77965))

(declare-fun m!79329 () Bool)

(assert (=> b!78785 m!79329))

(assert (=> b!78085 d!18727))

(declare-fun mapNonEmpty!3315 () Bool)

(declare-fun mapRes!3315 () Bool)

(declare-fun tp!8787 () Bool)

(declare-fun e!51477 () Bool)

(assert (=> mapNonEmpty!3315 (= mapRes!3315 (and tp!8787 e!51477))))

(declare-fun mapRest!3315 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapKey!3315 () (_ BitVec 32))

(declare-fun mapValue!3315 () ValueCell!912)

(assert (=> mapNonEmpty!3315 (= mapRest!3313 (store mapRest!3315 mapKey!3315 mapValue!3315))))

(declare-fun b!78787 () Bool)

(declare-fun e!51478 () Bool)

(assert (=> b!78787 (= e!51478 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3315 () Bool)

(assert (=> mapIsEmpty!3315 mapRes!3315))

(declare-fun condMapEmpty!3315 () Bool)

(declare-fun mapDefault!3315 () ValueCell!912)

(assert (=> mapNonEmpty!3313 (= condMapEmpty!3315 (= mapRest!3313 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3315)))))

(assert (=> mapNonEmpty!3313 (= tp!8785 (and e!51478 mapRes!3315))))

(declare-fun b!78786 () Bool)

(assert (=> b!78786 (= e!51477 tp_is_empty!2511)))

(assert (= (and mapNonEmpty!3313 condMapEmpty!3315) mapIsEmpty!3315))

(assert (= (and mapNonEmpty!3313 (not condMapEmpty!3315)) mapNonEmpty!3315))

(assert (= (and mapNonEmpty!3315 ((_ is ValueCellFull!912) mapValue!3315)) b!78786))

(assert (= (and mapNonEmpty!3313 ((_ is ValueCellFull!912) mapDefault!3315)) b!78787))

(declare-fun m!79331 () Bool)

(assert (=> mapNonEmpty!3315 m!79331))

(declare-fun mapNonEmpty!3316 () Bool)

(declare-fun mapRes!3316 () Bool)

(declare-fun tp!8788 () Bool)

(declare-fun e!51479 () Bool)

(assert (=> mapNonEmpty!3316 (= mapRes!3316 (and tp!8788 e!51479))))

(declare-fun mapRest!3316 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapValue!3316 () ValueCell!912)

(declare-fun mapKey!3316 () (_ BitVec 32))

(assert (=> mapNonEmpty!3316 (= mapRest!3314 (store mapRest!3316 mapKey!3316 mapValue!3316))))

(declare-fun b!78789 () Bool)

(declare-fun e!51480 () Bool)

(assert (=> b!78789 (= e!51480 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3316 () Bool)

(assert (=> mapIsEmpty!3316 mapRes!3316))

(declare-fun condMapEmpty!3316 () Bool)

(declare-fun mapDefault!3316 () ValueCell!912)

(assert (=> mapNonEmpty!3314 (= condMapEmpty!3316 (= mapRest!3314 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3316)))))

(assert (=> mapNonEmpty!3314 (= tp!8786 (and e!51480 mapRes!3316))))

(declare-fun b!78788 () Bool)

(assert (=> b!78788 (= e!51479 tp_is_empty!2511)))

(assert (= (and mapNonEmpty!3314 condMapEmpty!3316) mapIsEmpty!3316))

(assert (= (and mapNonEmpty!3314 (not condMapEmpty!3316)) mapNonEmpty!3316))

(assert (= (and mapNonEmpty!3316 ((_ is ValueCellFull!912) mapValue!3316)) b!78788))

(assert (= (and mapNonEmpty!3314 ((_ is ValueCellFull!912) mapDefault!3316)) b!78789))

(declare-fun m!79333 () Bool)

(assert (=> mapNonEmpty!3316 m!79333))

(declare-fun b_lambda!3517 () Bool)

(assert (= b_lambda!3507 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3517)))

(declare-fun b_lambda!3519 () Bool)

(assert (= b_lambda!3515 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3519)))

(declare-fun b_lambda!3521 () Bool)

(assert (= b_lambda!3513 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3521)))

(declare-fun b_lambda!3523 () Bool)

(assert (= b_lambda!3511 (or (and b!77851 b_free!2189) (and b!77848 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))) b_lambda!3523)))

(declare-fun b_lambda!3525 () Bool)

(assert (= b_lambda!3509 (or (and b!77851 b_free!2189) (and b!77848 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))) b_lambda!3525)))

(check-sat (not d!18501) (not b!78267) (not b!78264) (not bm!7212) (not b!78478) (not b!78505) (not d!18511) (not b!78381) (not bm!7248) (not bm!7235) (not b!78450) (not d!18643) (not b!78669) (not b!78507) (not d!18701) (not d!18571) (not bm!7238) (not mapNonEmpty!3316) (not bm!7186) (not b!78277) (not b!78779) (not b!78334) (not b!78610) (not b_lambda!3525) (not b!78396) (not b!78557) (not b!78436) (not d!18593) (not b!78443) (not d!18603) (not b!78664) (not b!78263) (not bm!7199) (not b_lambda!3501) (not b!78773) (not d!18489) (not b!78481) (not b!78287) (not d!18655) (not b!78237) (not b!78258) (not d!18587) (not b!78562) (not d!18505) (not b!78484) (not d!18577) (not b!78333) (not d!18647) (not b!78674) (not b!78618) (not d!18595) (not bm!7256) (not b!78570) (not b!78767) (not b!78542) (not d!18537) (not b!78426) (not b!78764) (not d!18619) (not b!78591) (not d!18483) (not b!78270) (not d!18553) (not b!78597) (not d!18615) (not b!78770) (not d!18671) (not b!78254) (not b!78605) (not b!78401) (not b!78304) (not b!78545) tp_is_empty!2511 (not b!78410) (not bm!7208) (not b!78291) (not bm!7210) (not b!78582) (not b!78339) (not b!78327) (not bm!7211) (not d!18627) (not b!78548) (not d!18685) (not b!78771) b_and!4837 (not b!78602) (not b!78433) (not d!18525) (not b!78573) (not d!18559) (not bm!7182) (not d!18691) (not bm!7214) (not d!18657) (not d!18617) (not b!78414) (not b!78260) (not d!18491) (not d!18683) (not b!78440) (not b!78614) (not bm!7215) (not d!18545) (not b!78415) (not b!78576) (not b!78636) (not d!18575) (not b!78717) (not b!78759) (not d!18635) (not d!18721) (not b!78444) (not b!78561) (not b!78599) (not b!78268) (not d!18611) (not b!78389) (not bm!7228) (not b!78314) (not b!78402) (not d!18677) (not b!78737) (not d!18645) (not b!78262) (not b_lambda!3521) (not b!78777) (not b!78232) (not b!78524) (not b_lambda!3519) (not b!78743) (not b!78577) (not b!78233) (not b!78496) (not b!78594) (not b!78489) (not d!18639) (not b!78609) (not b!78356) (not b!78730) (not d!18579) (not b!78646) (not b!78483) (not d!18495) (not d!18711) (not d!18481) (not d!18725) (not b!78355) (not d!18485) (not b!78421) (not b!78289) (not b!78385) (not b!78434) (not b_lambda!3517) (not bm!7183) (not b!78546) (not d!18591) (not b!78549) (not b!78761) (not d!18543) (not b!78713) (not d!18717) (not b!78574) (not d!18679) (not d!18515) (not b!78643) (not bm!7225) (not b!78272) (not d!18651) (not bm!7206) (not d!18597) (not b!78271) (not b!78554) (not d!18697) (not d!18687) (not b!78512) (not d!18693) (not b!78504) (not b!78745) (not b!78501) (not d!18499) (not b!78736) (not b!78607) (not d!18641) (not bm!7227) (not b!78343) (not b!78651) (not bm!7222) (not d!18629) (not b!78493) (not b!78419) (not b!78551) (not d!18547) (not b!78600) (not d!18521) (not b!78729) (not b!78409) (not b_next!2189) (not b_next!2191) (not b!78728) (not b!78265) (not b!78731) (not b_lambda!3505) (not b!78423) (not b!78499) (not d!18621) (not b!78772) (not d!18487) (not b!78640) (not d!18565) (not b!78332) (not d!18727) (not bm!7233) (not b!78286) (not bm!7205) (not b_lambda!3493) (not d!18675) (not b!78522) (not b!78236) (not d!18557) (not bm!7254) (not b!78539) (not d!18549) (not b!78645) (not d!18601) (not b!78774) (not b!78397) (not b!78500) (not d!18665) (not b!78234) (not b!78775) (not b!78616) (not b!78269) (not b!78476) (not bm!7224) (not b!78785) (not b!78596) (not d!18531) (not b!78290) (not b!78537) (not bm!7196) (not d!18493) (not b!78732) (not b!78341) (not d!18479) (not d!18605) (not b!78239) (not b!78435) (not d!18723) (not b!78722) (not b!78521) (not b!78629) (not b!78442) (not bm!7185) (not b!78488) (not b!78655) (not b!78716) (not b!78657) (not d!18561) (not b!78725) (not d!18667) (not b!78292) (not d!18707) (not b!78395) (not b!78498) (not d!18705) (not b!78438) (not b!78349) (not b!78746) (not d!18631) (not d!18581) (not bm!7250) (not b!78670) (not b!78633) (not b!78611) (not b!78400) (not d!18583) (not b!78638) (not b!78750) (not bm!7249) (not b!78399) (not b!78261) (not d!18539) (not d!18661) (not b!78566) (not b!78710) (not b!78346) (not d!18715) (not b!78758) (not d!18589) (not b!78662) b_and!4835 (not b!78315) (not b!78556) (not d!18573) (not b!78650) (not b!78380) (not mapNonEmpty!3315) (not d!18649) (not d!18551) (not b!78778) (not b!78330) (not b!78437) (not d!18563) (not b!78740) (not b!78755) (not b!78266) (not b!78235) (not d!18497) (not b!78592) (not d!18599) (not b!78525) (not d!18519) (not d!18567) (not b!78665) (not b_lambda!3523) (not b!78595) (not b!78751) (not d!18637) (not b!78238) (not d!18533) (not b_lambda!3503) (not b!78527) (not b!78497) (not b!78738) (not d!18503) (not d!18585) (not b!78407) (not b!78526) (not b!78404) (not b!78735) (not b!78298) (not bm!7220) (not bm!7252) (not b!78344) (not b!78659) (not d!18509))
(check-sat b_and!4835 b_and!4837 (not b_next!2189) (not b_next!2191))
(get-model)

(declare-fun e!51481 () List!1507)

(declare-fun c!12134 () Bool)

(declare-fun b!78790 () Bool)

(declare-fun c!12135 () Bool)

(assert (=> b!78790 (= e!51481 (ite c!12135 (t!5153 (t!5153 (toList!739 lt!35865))) (ite c!12134 (Cons!1503 (h!2091 (t!5153 (toList!739 lt!35865))) (t!5153 (t!5153 (toList!739 lt!35865)))) Nil!1504)))))

(declare-fun b!78791 () Bool)

(declare-fun e!51485 () List!1507)

(declare-fun call!7262 () List!1507)

(assert (=> b!78791 (= e!51485 call!7262)))

(declare-fun bm!7257 () Bool)

(declare-fun call!7260 () List!1507)

(declare-fun call!7261 () List!1507)

(assert (=> bm!7257 (= call!7260 call!7261)))

(declare-fun b!78792 () Bool)

(assert (=> b!78792 (= c!12134 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35865))) (bvsgt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35865)))) (_1!1097 lt!35861))))))

(declare-fun e!51483 () List!1507)

(declare-fun e!51482 () List!1507)

(assert (=> b!78792 (= e!51483 e!51482)))

(declare-fun b!78793 () Bool)

(assert (=> b!78793 (= e!51481 (insertStrictlySorted!57 (t!5153 (t!5153 (toList!739 lt!35865))) (_1!1097 lt!35861) (_2!1097 lt!35861)))))

(declare-fun b!78794 () Bool)

(declare-fun res!41227 () Bool)

(declare-fun e!51484 () Bool)

(assert (=> b!78794 (=> (not res!41227) (not e!51484))))

(declare-fun lt!36550 () List!1507)

(assert (=> b!78794 (= res!41227 (containsKey!141 lt!36550 (_1!1097 lt!35861)))))

(declare-fun bm!7258 () Bool)

(declare-fun c!12132 () Bool)

(assert (=> bm!7258 (= call!7262 ($colon$colon!69 e!51481 (ite c!12132 (h!2091 (t!5153 (toList!739 lt!35865))) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861)))))))

(declare-fun c!12133 () Bool)

(assert (=> bm!7258 (= c!12133 c!12132)))

(declare-fun b!78795 () Bool)

(assert (=> b!78795 (= e!51485 e!51483)))

(assert (=> b!78795 (= c!12135 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35865))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!35865)))) (_1!1097 lt!35861))))))

(declare-fun b!78797 () Bool)

(assert (=> b!78797 (= e!51483 call!7261)))

(declare-fun b!78798 () Bool)

(assert (=> b!78798 (= e!51484 (contains!743 lt!36550 (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun b!78796 () Bool)

(assert (=> b!78796 (= e!51482 call!7260)))

(declare-fun d!18729 () Bool)

(assert (=> d!18729 e!51484))

(declare-fun res!41226 () Bool)

(assert (=> d!18729 (=> (not res!41226) (not e!51484))))

(assert (=> d!18729 (= res!41226 (isStrictlySorted!295 lt!36550))))

(assert (=> d!18729 (= lt!36550 e!51485)))

(assert (=> d!18729 (= c!12132 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35865))) (bvslt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35865)))) (_1!1097 lt!35861))))))

(assert (=> d!18729 (isStrictlySorted!295 (t!5153 (toList!739 lt!35865)))))

(assert (=> d!18729 (= (insertStrictlySorted!57 (t!5153 (toList!739 lt!35865)) (_1!1097 lt!35861) (_2!1097 lt!35861)) lt!36550)))

(declare-fun bm!7259 () Bool)

(assert (=> bm!7259 (= call!7261 call!7262)))

(declare-fun b!78799 () Bool)

(assert (=> b!78799 (= e!51482 call!7260)))

(assert (= (and d!18729 c!12132) b!78791))

(assert (= (and d!18729 (not c!12132)) b!78795))

(assert (= (and b!78795 c!12135) b!78797))

(assert (= (and b!78795 (not c!12135)) b!78792))

(assert (= (and b!78792 c!12134) b!78796))

(assert (= (and b!78792 (not c!12134)) b!78799))

(assert (= (or b!78796 b!78799) bm!7257))

(assert (= (or b!78797 bm!7257) bm!7259))

(assert (= (or b!78791 bm!7259) bm!7258))

(assert (= (and bm!7258 c!12133) b!78793))

(assert (= (and bm!7258 (not c!12133)) b!78790))

(assert (= (and d!18729 res!41226) b!78794))

(assert (= (and b!78794 res!41227) b!78798))

(declare-fun m!79335 () Bool)

(assert (=> b!78798 m!79335))

(declare-fun m!79337 () Bool)

(assert (=> d!18729 m!79337))

(declare-fun m!79339 () Bool)

(assert (=> d!18729 m!79339))

(declare-fun m!79341 () Bool)

(assert (=> b!78793 m!79341))

(declare-fun m!79343 () Bool)

(assert (=> b!78794 m!79343))

(declare-fun m!79345 () Bool)

(assert (=> bm!7258 m!79345))

(assert (=> b!78488 d!18729))

(declare-fun d!18731 () Bool)

(assert (=> d!18731 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3330 () Bool)

(assert (= bs!3330 d!18731))

(assert (=> bs!3330 m!79091))

(declare-fun m!79347 () Bool)

(assert (=> bs!3330 m!79347))

(assert (=> b!78618 d!18731))

(declare-fun b!78803 () Bool)

(declare-fun e!51487 () Option!143)

(assert (=> b!78803 (= e!51487 None!141)))

(declare-fun d!18733 () Bool)

(declare-fun c!12136 () Bool)

(assert (=> d!18733 (= c!12136 (and ((_ is Cons!1503) (toList!739 lt!36021)) (= (_1!1097 (h!2091 (toList!739 lt!36021))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!51486 () Option!143)

(assert (=> d!18733 (= (getValueByKey!137 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000) e!51486)))

(declare-fun b!78802 () Bool)

(assert (=> b!78802 (= e!51487 (getValueByKey!137 (t!5153 (toList!739 lt!36021)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78800 () Bool)

(assert (=> b!78800 (= e!51486 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36021)))))))

(declare-fun b!78801 () Bool)

(assert (=> b!78801 (= e!51486 e!51487)))

(declare-fun c!12137 () Bool)

(assert (=> b!78801 (= c!12137 (and ((_ is Cons!1503) (toList!739 lt!36021)) (not (= (_1!1097 (h!2091 (toList!739 lt!36021))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!18733 c!12136) b!78800))

(assert (= (and d!18733 (not c!12136)) b!78801))

(assert (= (and b!78801 c!12137) b!78802))

(assert (= (and b!78801 (not c!12137)) b!78803))

(declare-fun m!79349 () Bool)

(assert (=> b!78802 m!79349))

(assert (=> b!78618 d!18733))

(declare-fun b!78804 () Bool)

(declare-fun e!51494 () ListLongMap!1447)

(assert (=> b!78804 (= e!51494 (ListLongMap!1448 Nil!1504))))

(declare-fun b!78805 () Bool)

(declare-fun e!51492 () Bool)

(declare-fun lt!36551 () ListLongMap!1447)

(assert (=> b!78805 (= e!51492 (= lt!36551 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16))))))

(declare-fun b!78806 () Bool)

(assert (=> b!78806 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> b!78806 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (_values!2255 newMap!16))))))

(declare-fun e!51489 () Bool)

(assert (=> b!78806 (= e!51489 (= (apply!79 lt!36551 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!78807 () Bool)

(declare-fun e!51493 () Bool)

(assert (=> b!78807 (= e!51493 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78807 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!78809 () Bool)

(declare-fun e!51491 () ListLongMap!1447)

(assert (=> b!78809 (= e!51494 e!51491)))

(declare-fun c!12139 () Bool)

(assert (=> b!78809 (= c!12139 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78810 () Bool)

(declare-fun e!51488 () Bool)

(assert (=> b!78810 (= e!51488 e!51489)))

(assert (=> b!78810 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun res!41230 () Bool)

(assert (=> b!78810 (= res!41230 (contains!742 lt!36551 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78810 (=> (not res!41230) (not e!51489))))

(declare-fun bm!7260 () Bool)

(declare-fun call!7263 () ListLongMap!1447)

(assert (=> bm!7260 (= call!7263 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16)))))

(declare-fun b!78811 () Bool)

(declare-fun e!51490 () Bool)

(assert (=> b!78811 (= e!51490 e!51488)))

(declare-fun c!12140 () Bool)

(assert (=> b!78811 (= c!12140 e!51493)))

(declare-fun res!41231 () Bool)

(assert (=> b!78811 (=> (not res!41231) (not e!51493))))

(assert (=> b!78811 (= res!41231 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun d!18735 () Bool)

(assert (=> d!18735 e!51490))

(declare-fun res!41228 () Bool)

(assert (=> d!18735 (=> (not res!41228) (not e!51490))))

(assert (=> d!18735 (= res!41228 (not (contains!742 lt!36551 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18735 (= lt!36551 e!51494)))

(declare-fun c!12138 () Bool)

(assert (=> d!18735 (= c!12138 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18735 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18735 (= (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36551)))

(declare-fun b!78808 () Bool)

(declare-fun lt!36554 () Unit!2257)

(declare-fun lt!36552 () Unit!2257)

(assert (=> b!78808 (= lt!36554 lt!36552)))

(declare-fun lt!36553 () (_ BitVec 64))

(declare-fun lt!36556 () V!2995)

(declare-fun lt!36557 () (_ BitVec 64))

(declare-fun lt!36555 () ListLongMap!1447)

(assert (=> b!78808 (not (contains!742 (+!105 lt!36555 (tuple2!2173 lt!36553 lt!36556)) lt!36557))))

(assert (=> b!78808 (= lt!36552 (addStillNotContains!28 lt!36555 lt!36553 lt!36556 lt!36557))))

(assert (=> b!78808 (= lt!36557 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!78808 (= lt!36556 (get!1173 (select (arr!1896 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!78808 (= lt!36553 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78808 (= lt!36555 call!7263)))

(assert (=> b!78808 (= e!51491 (+!105 call!7263 (tuple2!2173 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (get!1173 (select (arr!1896 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!78812 () Bool)

(assert (=> b!78812 (= e!51488 e!51492)))

(declare-fun c!12141 () Bool)

(assert (=> b!78812 (= c!12141 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78813 () Bool)

(assert (=> b!78813 (= e!51492 (isEmpty!326 lt!36551))))

(declare-fun b!78814 () Bool)

(declare-fun res!41229 () Bool)

(assert (=> b!78814 (=> (not res!41229) (not e!51490))))

(assert (=> b!78814 (= res!41229 (not (contains!742 lt!36551 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78815 () Bool)

(assert (=> b!78815 (= e!51491 call!7263)))

(assert (= (and d!18735 c!12138) b!78804))

(assert (= (and d!18735 (not c!12138)) b!78809))

(assert (= (and b!78809 c!12139) b!78808))

(assert (= (and b!78809 (not c!12139)) b!78815))

(assert (= (or b!78808 b!78815) bm!7260))

(assert (= (and d!18735 res!41228) b!78814))

(assert (= (and b!78814 res!41229) b!78811))

(assert (= (and b!78811 res!41231) b!78807))

(assert (= (and b!78811 c!12140) b!78810))

(assert (= (and b!78811 (not c!12140)) b!78812))

(assert (= (and b!78810 res!41230) b!78806))

(assert (= (and b!78812 c!12141) b!78805))

(assert (= (and b!78812 (not c!12141)) b!78813))

(declare-fun b_lambda!3527 () Bool)

(assert (=> (not b_lambda!3527) (not b!78806)))

(assert (=> b!78806 t!5161))

(declare-fun b_and!4839 () Bool)

(assert (= b_and!4835 (and (=> t!5161 result!2825) b_and!4839)))

(assert (=> b!78806 t!5163))

(declare-fun b_and!4841 () Bool)

(assert (= b_and!4837 (and (=> t!5163 result!2827) b_and!4841)))

(declare-fun b_lambda!3529 () Bool)

(assert (=> (not b_lambda!3529) (not b!78808)))

(assert (=> b!78808 t!5161))

(declare-fun b_and!4843 () Bool)

(assert (= b_and!4839 (and (=> t!5161 result!2825) b_and!4843)))

(assert (=> b!78808 t!5163))

(declare-fun b_and!4845 () Bool)

(assert (= b_and!4841 (and (=> t!5163 result!2827) b_and!4845)))

(declare-fun m!79351 () Bool)

(assert (=> b!78805 m!79351))

(assert (=> bm!7260 m!79351))

(assert (=> b!78810 m!78509))

(assert (=> b!78810 m!78509))

(declare-fun m!79353 () Bool)

(assert (=> b!78810 m!79353))

(declare-fun m!79355 () Bool)

(assert (=> d!18735 m!79355))

(assert (=> d!18735 m!78411))

(assert (=> b!78807 m!78509))

(assert (=> b!78807 m!78509))

(assert (=> b!78807 m!78537))

(assert (=> b!78809 m!78509))

(assert (=> b!78809 m!78509))

(assert (=> b!78809 m!78537))

(declare-fun m!79357 () Bool)

(assert (=> b!78814 m!79357))

(declare-fun m!79359 () Bool)

(assert (=> b!78813 m!79359))

(assert (=> b!78806 m!79037))

(assert (=> b!78806 m!78533))

(assert (=> b!78806 m!79039))

(assert (=> b!78806 m!78509))

(assert (=> b!78806 m!79037))

(assert (=> b!78806 m!78509))

(declare-fun m!79361 () Bool)

(assert (=> b!78806 m!79361))

(assert (=> b!78806 m!78533))

(declare-fun m!79363 () Bool)

(assert (=> b!78808 m!79363))

(assert (=> b!78808 m!79037))

(assert (=> b!78808 m!78533))

(assert (=> b!78808 m!79039))

(assert (=> b!78808 m!78509))

(declare-fun m!79365 () Bool)

(assert (=> b!78808 m!79365))

(assert (=> b!78808 m!79037))

(declare-fun m!79367 () Bool)

(assert (=> b!78808 m!79367))

(declare-fun m!79369 () Bool)

(assert (=> b!78808 m!79369))

(assert (=> b!78808 m!79367))

(assert (=> b!78808 m!78533))

(assert (=> bm!7228 d!18735))

(declare-fun d!18737 () Bool)

(declare-fun res!41232 () Bool)

(declare-fun e!51495 () Bool)

(assert (=> d!18737 (=> res!41232 e!51495)))

(assert (=> d!18737 (= res!41232 (and ((_ is Cons!1503) (toList!739 lt!36041)) (= (_1!1097 (h!2091 (toList!739 lt!36041))) (_1!1097 lt!35861))))))

(assert (=> d!18737 (= (containsKey!141 (toList!739 lt!36041) (_1!1097 lt!35861)) e!51495)))

(declare-fun b!78816 () Bool)

(declare-fun e!51496 () Bool)

(assert (=> b!78816 (= e!51495 e!51496)))

(declare-fun res!41233 () Bool)

(assert (=> b!78816 (=> (not res!41233) (not e!51496))))

(assert (=> b!78816 (= res!41233 (and (or (not ((_ is Cons!1503) (toList!739 lt!36041))) (bvsle (_1!1097 (h!2091 (toList!739 lt!36041))) (_1!1097 lt!35861))) ((_ is Cons!1503) (toList!739 lt!36041)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36041))) (_1!1097 lt!35861))))))

(declare-fun b!78817 () Bool)

(assert (=> b!78817 (= e!51496 (containsKey!141 (t!5153 (toList!739 lt!36041)) (_1!1097 lt!35861)))))

(assert (= (and d!18737 (not res!41232)) b!78816))

(assert (= (and b!78816 res!41233) b!78817))

(declare-fun m!79371 () Bool)

(assert (=> b!78817 m!79371))

(assert (=> d!18611 d!18737))

(declare-fun d!18739 () Bool)

(declare-fun e!51497 () Bool)

(assert (=> d!18739 e!51497))

(declare-fun res!41234 () Bool)

(assert (=> d!18739 (=> res!41234 e!51497)))

(declare-fun lt!36561 () Bool)

(assert (=> d!18739 (= res!41234 (not lt!36561))))

(declare-fun lt!36558 () Bool)

(assert (=> d!18739 (= lt!36561 lt!36558)))

(declare-fun lt!36559 () Unit!2257)

(declare-fun e!51498 () Unit!2257)

(assert (=> d!18739 (= lt!36559 e!51498)))

(declare-fun c!12142 () Bool)

(assert (=> d!18739 (= c!12142 lt!36558)))

(assert (=> d!18739 (= lt!36558 (containsKey!141 (toList!739 lt!36281) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18739 (= (contains!742 lt!36281 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36561)))

(declare-fun b!78818 () Bool)

(declare-fun lt!36560 () Unit!2257)

(assert (=> b!78818 (= e!51498 lt!36560)))

(assert (=> b!78818 (= lt!36560 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36281) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> b!78818 (isDefined!90 (getValueByKey!137 (toList!739 lt!36281) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!78819 () Bool)

(declare-fun Unit!2289 () Unit!2257)

(assert (=> b!78819 (= e!51498 Unit!2289)))

(declare-fun b!78820 () Bool)

(assert (=> b!78820 (= e!51497 (isDefined!90 (getValueByKey!137 (toList!739 lt!36281) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!18739 c!12142) b!78818))

(assert (= (and d!18739 (not c!12142)) b!78819))

(assert (= (and d!18739 (not res!41234)) b!78820))

(declare-fun m!79373 () Bool)

(assert (=> d!18739 m!79373))

(declare-fun m!79375 () Bool)

(assert (=> b!78818 m!79375))

(assert (=> b!78818 m!78743))

(assert (=> b!78818 m!78743))

(declare-fun m!79377 () Bool)

(assert (=> b!78818 m!79377))

(assert (=> b!78820 m!78743))

(assert (=> b!78820 m!78743))

(assert (=> b!78820 m!79377))

(assert (=> d!18583 d!18739))

(declare-fun b!78824 () Bool)

(declare-fun e!51500 () Option!143)

(assert (=> b!78824 (= e!51500 None!141)))

(declare-fun c!12143 () Bool)

(declare-fun d!18741 () Bool)

(assert (=> d!18741 (= c!12143 (and ((_ is Cons!1503) lt!36280) (= (_1!1097 (h!2091 lt!36280)) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51499 () Option!143)

(assert (=> d!18741 (= (getValueByKey!137 lt!36280 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!51499)))

(declare-fun b!78823 () Bool)

(assert (=> b!78823 (= e!51500 (getValueByKey!137 (t!5153 lt!36280) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!78821 () Bool)

(assert (=> b!78821 (= e!51499 (Some!142 (_2!1097 (h!2091 lt!36280))))))

(declare-fun b!78822 () Bool)

(assert (=> b!78822 (= e!51499 e!51500)))

(declare-fun c!12144 () Bool)

(assert (=> b!78822 (= c!12144 (and ((_ is Cons!1503) lt!36280) (not (= (_1!1097 (h!2091 lt!36280)) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!18741 c!12143) b!78821))

(assert (= (and d!18741 (not c!12143)) b!78822))

(assert (= (and b!78822 c!12144) b!78823))

(assert (= (and b!78822 (not c!12144)) b!78824))

(declare-fun m!79379 () Bool)

(assert (=> b!78823 m!79379))

(assert (=> d!18583 d!18741))

(declare-fun d!18743 () Bool)

(assert (=> d!18743 (= (getValueByKey!137 lt!36280 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36562 () Unit!2257)

(assert (=> d!18743 (= lt!36562 (choose!456 lt!36280 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!51501 () Bool)

(assert (=> d!18743 e!51501))

(declare-fun res!41235 () Bool)

(assert (=> d!18743 (=> (not res!41235) (not e!51501))))

(assert (=> d!18743 (= res!41235 (isStrictlySorted!295 lt!36280))))

(assert (=> d!18743 (= (lemmaContainsTupThenGetReturnValue!54 lt!36280 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36562)))

(declare-fun b!78825 () Bool)

(declare-fun res!41236 () Bool)

(assert (=> b!78825 (=> (not res!41236) (not e!51501))))

(assert (=> b!78825 (= res!41236 (containsKey!141 lt!36280 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!78826 () Bool)

(assert (=> b!78826 (= e!51501 (contains!743 lt!36280 (tuple2!2173 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!18743 res!41235) b!78825))

(assert (= (and b!78825 res!41236) b!78826))

(assert (=> d!18743 m!78737))

(declare-fun m!79381 () Bool)

(assert (=> d!18743 m!79381))

(declare-fun m!79383 () Bool)

(assert (=> d!18743 m!79383))

(declare-fun m!79385 () Bool)

(assert (=> b!78825 m!79385))

(declare-fun m!79387 () Bool)

(assert (=> b!78826 m!79387))

(assert (=> d!18583 d!18743))

(declare-fun b!78827 () Bool)

(declare-fun c!12147 () Bool)

(declare-fun c!12148 () Bool)

(declare-fun e!51502 () List!1507)

(assert (=> b!78827 (= e!51502 (ite c!12148 (t!5153 (toList!739 lt!35978)) (ite c!12147 (Cons!1503 (h!2091 (toList!739 lt!35978)) (t!5153 (toList!739 lt!35978))) Nil!1504)))))

(declare-fun b!78828 () Bool)

(declare-fun e!51506 () List!1507)

(declare-fun call!7266 () List!1507)

(assert (=> b!78828 (= e!51506 call!7266)))

(declare-fun bm!7261 () Bool)

(declare-fun call!7264 () List!1507)

(declare-fun call!7265 () List!1507)

(assert (=> bm!7261 (= call!7264 call!7265)))

(declare-fun b!78829 () Bool)

(assert (=> b!78829 (= c!12147 (and ((_ is Cons!1503) (toList!739 lt!35978)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35978))) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51504 () List!1507)

(declare-fun e!51503 () List!1507)

(assert (=> b!78829 (= e!51504 e!51503)))

(declare-fun b!78830 () Bool)

(assert (=> b!78830 (= e!51502 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35978)) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!78831 () Bool)

(declare-fun res!41238 () Bool)

(declare-fun e!51505 () Bool)

(assert (=> b!78831 (=> (not res!41238) (not e!51505))))

(declare-fun lt!36563 () List!1507)

(assert (=> b!78831 (= res!41238 (containsKey!141 lt!36563 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun c!12145 () Bool)

(declare-fun bm!7262 () Bool)

(assert (=> bm!7262 (= call!7266 ($colon$colon!69 e!51502 (ite c!12145 (h!2091 (toList!739 lt!35978)) (tuple2!2173 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun c!12146 () Bool)

(assert (=> bm!7262 (= c!12146 c!12145)))

(declare-fun b!78832 () Bool)

(assert (=> b!78832 (= e!51506 e!51504)))

(assert (=> b!78832 (= c!12148 (and ((_ is Cons!1503) (toList!739 lt!35978)) (= (_1!1097 (h!2091 (toList!739 lt!35978))) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78834 () Bool)

(assert (=> b!78834 (= e!51504 call!7265)))

(declare-fun b!78835 () Bool)

(assert (=> b!78835 (= e!51505 (contains!743 lt!36563 (tuple2!2173 (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78833 () Bool)

(assert (=> b!78833 (= e!51503 call!7264)))

(declare-fun d!18745 () Bool)

(assert (=> d!18745 e!51505))

(declare-fun res!41237 () Bool)

(assert (=> d!18745 (=> (not res!41237) (not e!51505))))

(assert (=> d!18745 (= res!41237 (isStrictlySorted!295 lt!36563))))

(assert (=> d!18745 (= lt!36563 e!51506)))

(assert (=> d!18745 (= c!12145 (and ((_ is Cons!1503) (toList!739 lt!35978)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35978))) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!18745 (isStrictlySorted!295 (toList!739 lt!35978))))

(assert (=> d!18745 (= (insertStrictlySorted!57 (toList!739 lt!35978) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36563)))

(declare-fun bm!7263 () Bool)

(assert (=> bm!7263 (= call!7265 call!7266)))

(declare-fun b!78836 () Bool)

(assert (=> b!78836 (= e!51503 call!7264)))

(assert (= (and d!18745 c!12145) b!78828))

(assert (= (and d!18745 (not c!12145)) b!78832))

(assert (= (and b!78832 c!12148) b!78834))

(assert (= (and b!78832 (not c!12148)) b!78829))

(assert (= (and b!78829 c!12147) b!78833))

(assert (= (and b!78829 (not c!12147)) b!78836))

(assert (= (or b!78833 b!78836) bm!7261))

(assert (= (or b!78834 bm!7261) bm!7263))

(assert (= (or b!78828 bm!7263) bm!7262))

(assert (= (and bm!7262 c!12146) b!78830))

(assert (= (and bm!7262 (not c!12146)) b!78827))

(assert (= (and d!18745 res!41237) b!78831))

(assert (= (and b!78831 res!41238) b!78835))

(declare-fun m!79389 () Bool)

(assert (=> b!78835 m!79389))

(declare-fun m!79391 () Bool)

(assert (=> d!18745 m!79391))

(declare-fun m!79393 () Bool)

(assert (=> d!18745 m!79393))

(declare-fun m!79395 () Bool)

(assert (=> b!78830 m!79395))

(declare-fun m!79397 () Bool)

(assert (=> b!78831 m!79397))

(declare-fun m!79399 () Bool)

(assert (=> bm!7262 m!79399))

(assert (=> d!18583 d!18745))

(declare-fun d!18747 () Bool)

(declare-fun e!51507 () Bool)

(assert (=> d!18747 e!51507))

(declare-fun res!41239 () Bool)

(assert (=> d!18747 (=> res!41239 e!51507)))

(declare-fun lt!36567 () Bool)

(assert (=> d!18747 (= res!41239 (not lt!36567))))

(declare-fun lt!36564 () Bool)

(assert (=> d!18747 (= lt!36567 lt!36564)))

(declare-fun lt!36565 () Unit!2257)

(declare-fun e!51508 () Unit!2257)

(assert (=> d!18747 (= lt!36565 e!51508)))

(declare-fun c!12149 () Bool)

(assert (=> d!18747 (= c!12149 lt!36564)))

(assert (=> d!18747 (= lt!36564 (containsKey!141 (toList!739 lt!36294) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18747 (= (contains!742 lt!36294 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36567)))

(declare-fun b!78837 () Bool)

(declare-fun lt!36566 () Unit!2257)

(assert (=> b!78837 (= e!51508 lt!36566)))

(assert (=> b!78837 (= lt!36566 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36294) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> b!78837 (isDefined!90 (getValueByKey!137 (toList!739 lt!36294) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!78838 () Bool)

(declare-fun Unit!2290 () Unit!2257)

(assert (=> b!78838 (= e!51508 Unit!2290)))

(declare-fun b!78839 () Bool)

(assert (=> b!78839 (= e!51507 (isDefined!90 (getValueByKey!137 (toList!739 lt!36294) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!18747 c!12149) b!78837))

(assert (= (and d!18747 (not c!12149)) b!78838))

(assert (= (and d!18747 (not res!41239)) b!78839))

(declare-fun m!79401 () Bool)

(assert (=> d!18747 m!79401))

(declare-fun m!79403 () Bool)

(assert (=> b!78837 m!79403))

(assert (=> b!78837 m!78783))

(assert (=> b!78837 m!78783))

(declare-fun m!79405 () Bool)

(assert (=> b!78837 m!79405))

(assert (=> b!78839 m!78783))

(assert (=> b!78839 m!78783))

(assert (=> b!78839 m!79405))

(assert (=> d!18593 d!18747))

(declare-fun b!78843 () Bool)

(declare-fun e!51510 () Option!143)

(assert (=> b!78843 (= e!51510 None!141)))

(declare-fun c!12150 () Bool)

(declare-fun d!18749 () Bool)

(assert (=> d!18749 (= c!12150 (and ((_ is Cons!1503) lt!36293) (= (_1!1097 (h!2091 lt!36293)) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51509 () Option!143)

(assert (=> d!18749 (= (getValueByKey!137 lt!36293 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!51509)))

(declare-fun b!78842 () Bool)

(assert (=> b!78842 (= e!51510 (getValueByKey!137 (t!5153 lt!36293) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!78840 () Bool)

(assert (=> b!78840 (= e!51509 (Some!142 (_2!1097 (h!2091 lt!36293))))))

(declare-fun b!78841 () Bool)

(assert (=> b!78841 (= e!51509 e!51510)))

(declare-fun c!12151 () Bool)

(assert (=> b!78841 (= c!12151 (and ((_ is Cons!1503) lt!36293) (not (= (_1!1097 (h!2091 lt!36293)) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!18749 c!12150) b!78840))

(assert (= (and d!18749 (not c!12150)) b!78841))

(assert (= (and b!78841 c!12151) b!78842))

(assert (= (and b!78841 (not c!12151)) b!78843))

(declare-fun m!79407 () Bool)

(assert (=> b!78842 m!79407))

(assert (=> d!18593 d!18749))

(declare-fun d!18751 () Bool)

(assert (=> d!18751 (= (getValueByKey!137 lt!36293 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36568 () Unit!2257)

(assert (=> d!18751 (= lt!36568 (choose!456 lt!36293 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!51511 () Bool)

(assert (=> d!18751 e!51511))

(declare-fun res!41240 () Bool)

(assert (=> d!18751 (=> (not res!41240) (not e!51511))))

(assert (=> d!18751 (= res!41240 (isStrictlySorted!295 lt!36293))))

(assert (=> d!18751 (= (lemmaContainsTupThenGetReturnValue!54 lt!36293 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36568)))

(declare-fun b!78844 () Bool)

(declare-fun res!41241 () Bool)

(assert (=> b!78844 (=> (not res!41241) (not e!51511))))

(assert (=> b!78844 (= res!41241 (containsKey!141 lt!36293 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!78845 () Bool)

(assert (=> b!78845 (= e!51511 (contains!743 lt!36293 (tuple2!2173 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!18751 res!41240) b!78844))

(assert (= (and b!78844 res!41241) b!78845))

(assert (=> d!18751 m!78777))

(declare-fun m!79409 () Bool)

(assert (=> d!18751 m!79409))

(declare-fun m!79411 () Bool)

(assert (=> d!18751 m!79411))

(declare-fun m!79413 () Bool)

(assert (=> b!78844 m!79413))

(declare-fun m!79415 () Bool)

(assert (=> b!78845 m!79415))

(assert (=> d!18593 d!18751))

(declare-fun e!51512 () List!1507)

(declare-fun b!78846 () Bool)

(declare-fun c!12155 () Bool)

(declare-fun c!12154 () Bool)

(assert (=> b!78846 (= e!51512 (ite c!12155 (t!5153 (toList!739 lt!35984)) (ite c!12154 (Cons!1503 (h!2091 (toList!739 lt!35984)) (t!5153 (toList!739 lt!35984))) Nil!1504)))))

(declare-fun b!78847 () Bool)

(declare-fun e!51516 () List!1507)

(declare-fun call!7269 () List!1507)

(assert (=> b!78847 (= e!51516 call!7269)))

(declare-fun bm!7264 () Bool)

(declare-fun call!7267 () List!1507)

(declare-fun call!7268 () List!1507)

(assert (=> bm!7264 (= call!7267 call!7268)))

(declare-fun b!78848 () Bool)

(assert (=> b!78848 (= c!12154 (and ((_ is Cons!1503) (toList!739 lt!35984)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35984))) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51514 () List!1507)

(declare-fun e!51513 () List!1507)

(assert (=> b!78848 (= e!51514 e!51513)))

(declare-fun b!78849 () Bool)

(assert (=> b!78849 (= e!51512 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35984)) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!78850 () Bool)

(declare-fun res!41243 () Bool)

(declare-fun e!51515 () Bool)

(assert (=> b!78850 (=> (not res!41243) (not e!51515))))

(declare-fun lt!36569 () List!1507)

(assert (=> b!78850 (= res!41243 (containsKey!141 lt!36569 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun bm!7265 () Bool)

(declare-fun c!12152 () Bool)

(assert (=> bm!7265 (= call!7269 ($colon$colon!69 e!51512 (ite c!12152 (h!2091 (toList!739 lt!35984)) (tuple2!2173 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun c!12153 () Bool)

(assert (=> bm!7265 (= c!12153 c!12152)))

(declare-fun b!78851 () Bool)

(assert (=> b!78851 (= e!51516 e!51514)))

(assert (=> b!78851 (= c!12155 (and ((_ is Cons!1503) (toList!739 lt!35984)) (= (_1!1097 (h!2091 (toList!739 lt!35984))) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78853 () Bool)

(assert (=> b!78853 (= e!51514 call!7268)))

(declare-fun b!78854 () Bool)

(assert (=> b!78854 (= e!51515 (contains!743 lt!36569 (tuple2!2173 (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!78852 () Bool)

(assert (=> b!78852 (= e!51513 call!7267)))

(declare-fun d!18753 () Bool)

(assert (=> d!18753 e!51515))

(declare-fun res!41242 () Bool)

(assert (=> d!18753 (=> (not res!41242) (not e!51515))))

(assert (=> d!18753 (= res!41242 (isStrictlySorted!295 lt!36569))))

(assert (=> d!18753 (= lt!36569 e!51516)))

(assert (=> d!18753 (= c!12152 (and ((_ is Cons!1503) (toList!739 lt!35984)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35984))) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!18753 (isStrictlySorted!295 (toList!739 lt!35984))))

(assert (=> d!18753 (= (insertStrictlySorted!57 (toList!739 lt!35984) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36569)))

(declare-fun bm!7266 () Bool)

(assert (=> bm!7266 (= call!7268 call!7269)))

(declare-fun b!78855 () Bool)

(assert (=> b!78855 (= e!51513 call!7267)))

(assert (= (and d!18753 c!12152) b!78847))

(assert (= (and d!18753 (not c!12152)) b!78851))

(assert (= (and b!78851 c!12155) b!78853))

(assert (= (and b!78851 (not c!12155)) b!78848))

(assert (= (and b!78848 c!12154) b!78852))

(assert (= (and b!78848 (not c!12154)) b!78855))

(assert (= (or b!78852 b!78855) bm!7264))

(assert (= (or b!78853 bm!7264) bm!7266))

(assert (= (or b!78847 bm!7266) bm!7265))

(assert (= (and bm!7265 c!12153) b!78849))

(assert (= (and bm!7265 (not c!12153)) b!78846))

(assert (= (and d!18753 res!41242) b!78850))

(assert (= (and b!78850 res!41243) b!78854))

(declare-fun m!79417 () Bool)

(assert (=> b!78854 m!79417))

(declare-fun m!79419 () Bool)

(assert (=> d!18753 m!79419))

(declare-fun m!79421 () Bool)

(assert (=> d!18753 m!79421))

(declare-fun m!79423 () Bool)

(assert (=> b!78849 m!79423))

(declare-fun m!79425 () Bool)

(assert (=> b!78850 m!79425))

(declare-fun m!79427 () Bool)

(assert (=> bm!7265 m!79427))

(assert (=> d!18593 d!18753))

(assert (=> bm!7249 d!18523))

(declare-fun d!18755 () Bool)

(assert (=> d!18755 (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!36570 () Unit!2257)

(assert (=> d!18755 (= lt!36570 (choose!465 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51517 () Bool)

(assert (=> d!18755 e!51517))

(declare-fun res!41244 () Bool)

(assert (=> d!18755 (=> (not res!41244) (not e!51517))))

(assert (=> d!18755 (= res!41244 (isStrictlySorted!295 (toList!739 lt!36021)))))

(assert (=> d!18755 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000) lt!36570)))

(declare-fun b!78856 () Bool)

(assert (=> b!78856 (= e!51517 (containsKey!141 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!18755 res!41244) b!78856))

(assert (=> d!18755 m!79283))

(assert (=> d!18755 m!79283))

(assert (=> d!18755 m!79285))

(declare-fun m!79429 () Bool)

(assert (=> d!18755 m!79429))

(declare-fun m!79431 () Bool)

(assert (=> d!18755 m!79431))

(assert (=> b!78856 m!79279))

(assert (=> b!78759 d!18755))

(declare-fun d!18757 () Bool)

(assert (=> d!18757 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3331 () Bool)

(assert (= bs!3331 d!18757))

(assert (=> bs!3331 m!79283))

(declare-fun m!79433 () Bool)

(assert (=> bs!3331 m!79433))

(assert (=> b!78759 d!18757))

(declare-fun b!78860 () Bool)

(declare-fun e!51519 () Option!143)

(assert (=> b!78860 (= e!51519 None!141)))

(declare-fun d!18759 () Bool)

(declare-fun c!12156 () Bool)

(assert (=> d!18759 (= c!12156 (and ((_ is Cons!1503) (toList!739 lt!36021)) (= (_1!1097 (h!2091 (toList!739 lt!36021))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!51518 () Option!143)

(assert (=> d!18759 (= (getValueByKey!137 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000) e!51518)))

(declare-fun b!78859 () Bool)

(assert (=> b!78859 (= e!51519 (getValueByKey!137 (t!5153 (toList!739 lt!36021)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78857 () Bool)

(assert (=> b!78857 (= e!51518 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36021)))))))

(declare-fun b!78858 () Bool)

(assert (=> b!78858 (= e!51518 e!51519)))

(declare-fun c!12157 () Bool)

(assert (=> b!78858 (= c!12157 (and ((_ is Cons!1503) (toList!739 lt!36021)) (not (= (_1!1097 (h!2091 (toList!739 lt!36021))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!18759 c!12156) b!78857))

(assert (= (and d!18759 (not c!12156)) b!78858))

(assert (= (and b!78858 c!12157) b!78859))

(assert (= (and b!78858 (not c!12157)) b!78860))

(declare-fun m!79435 () Bool)

(assert (=> b!78859 m!79435))

(assert (=> b!78759 d!18759))

(declare-fun d!18761 () Bool)

(declare-fun e!51520 () Bool)

(assert (=> d!18761 e!51520))

(declare-fun res!41245 () Bool)

(assert (=> d!18761 (=> (not res!41245) (not e!51520))))

(declare-fun lt!36572 () ListLongMap!1447)

(assert (=> d!18761 (= res!41245 (contains!742 lt!36572 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856))))))

(declare-fun lt!36571 () List!1507)

(assert (=> d!18761 (= lt!36572 (ListLongMap!1448 lt!36571))))

(declare-fun lt!36574 () Unit!2257)

(declare-fun lt!36573 () Unit!2257)

(assert (=> d!18761 (= lt!36574 lt!36573)))

(assert (=> d!18761 (= (getValueByKey!137 lt!36571 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856))))))

(assert (=> d!18761 (= lt!36573 (lemmaContainsTupThenGetReturnValue!54 lt!36571 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856))))))

(assert (=> d!18761 (= lt!36571 (insertStrictlySorted!57 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856))))))

(assert (=> d!18761 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) lt!36572)))

(declare-fun b!78861 () Bool)

(declare-fun res!41246 () Bool)

(assert (=> b!78861 (=> (not res!41246) (not e!51520))))

(assert (=> b!78861 (= res!41246 (= (getValueByKey!137 (toList!739 lt!36572) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)))))))

(declare-fun b!78862 () Bool)

(assert (=> b!78862 (= e!51520 (contains!743 (toList!739 lt!36572) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)))))

(assert (= (and d!18761 res!41245) b!78861))

(assert (= (and b!78861 res!41246) b!78862))

(declare-fun m!79437 () Bool)

(assert (=> d!18761 m!79437))

(declare-fun m!79439 () Bool)

(assert (=> d!18761 m!79439))

(declare-fun m!79441 () Bool)

(assert (=> d!18761 m!79441))

(declare-fun m!79443 () Bool)

(assert (=> d!18761 m!79443))

(declare-fun m!79445 () Bool)

(assert (=> b!78861 m!79445))

(declare-fun m!79447 () Bool)

(assert (=> b!78862 m!79447))

(assert (=> d!18521 d!18761))

(declare-fun d!18763 () Bool)

(assert (=> d!18763 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36129 (zeroValue!2170 newMap!16) lt!35856 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(assert (=> d!18763 true))

(declare-fun _$8!67 () Unit!2257)

(assert (=> d!18763 (= (choose!455 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36129 (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) lt!35856 (defaultEntry!2272 newMap!16)) _$8!67)))

(declare-fun bs!3332 () Bool)

(assert (= bs!3332 d!18763))

(assert (=> bs!3332 m!78087))

(assert (=> bs!3332 m!78087))

(assert (=> bs!3332 m!78571))

(assert (=> bs!3332 m!78567))

(assert (=> d!18521 d!18763))

(assert (=> d!18521 d!18645))

(declare-fun d!18765 () Bool)

(assert (=> d!18765 (= (validMask!0 (mask!6268 newMap!16)) (and (or (= (mask!6268 newMap!16) #b00000000000000000000000000000111) (= (mask!6268 newMap!16) #b00000000000000000000000000001111) (= (mask!6268 newMap!16) #b00000000000000000000000000011111) (= (mask!6268 newMap!16) #b00000000000000000000000000111111) (= (mask!6268 newMap!16) #b00000000000000000000000001111111) (= (mask!6268 newMap!16) #b00000000000000000000000011111111) (= (mask!6268 newMap!16) #b00000000000000000000000111111111) (= (mask!6268 newMap!16) #b00000000000000000000001111111111) (= (mask!6268 newMap!16) #b00000000000000000000011111111111) (= (mask!6268 newMap!16) #b00000000000000000000111111111111) (= (mask!6268 newMap!16) #b00000000000000000001111111111111) (= (mask!6268 newMap!16) #b00000000000000000011111111111111) (= (mask!6268 newMap!16) #b00000000000000000111111111111111) (= (mask!6268 newMap!16) #b00000000000000001111111111111111) (= (mask!6268 newMap!16) #b00000000000000011111111111111111) (= (mask!6268 newMap!16) #b00000000000000111111111111111111) (= (mask!6268 newMap!16) #b00000000000001111111111111111111) (= (mask!6268 newMap!16) #b00000000000011111111111111111111) (= (mask!6268 newMap!16) #b00000000000111111111111111111111) (= (mask!6268 newMap!16) #b00000000001111111111111111111111) (= (mask!6268 newMap!16) #b00000000011111111111111111111111) (= (mask!6268 newMap!16) #b00000000111111111111111111111111) (= (mask!6268 newMap!16) #b00000001111111111111111111111111) (= (mask!6268 newMap!16) #b00000011111111111111111111111111) (= (mask!6268 newMap!16) #b00000111111111111111111111111111) (= (mask!6268 newMap!16) #b00001111111111111111111111111111) (= (mask!6268 newMap!16) #b00011111111111111111111111111111) (= (mask!6268 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6268 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!18521 d!18765))

(declare-fun c!12163 () Bool)

(declare-fun call!7276 () ListLongMap!1447)

(declare-fun c!12159 () Bool)

(declare-fun call!7275 () ListLongMap!1447)

(declare-fun call!7274 () ListLongMap!1447)

(declare-fun bm!7267 () Bool)

(declare-fun call!7270 () ListLongMap!1447)

(assert (=> bm!7267 (= call!7276 (+!105 (ite c!12159 call!7274 (ite c!12163 call!7270 call!7275)) (ite (or c!12159 c!12163) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856))))))

(declare-fun b!78863 () Bool)

(declare-fun e!51529 () Bool)

(declare-fun lt!36589 () ListLongMap!1447)

(assert (=> b!78863 (= e!51529 (= (apply!79 lt!36589 #b1000000000000000000000000000000000000000000000000000000000000000) lt!35856))))

(declare-fun b!78864 () Bool)

(declare-fun e!51532 () ListLongMap!1447)

(assert (=> b!78864 (= e!51532 call!7275)))

(declare-fun b!78865 () Bool)

(declare-fun e!51522 () ListLongMap!1447)

(declare-fun call!7273 () ListLongMap!1447)

(assert (=> b!78865 (= e!51522 call!7273)))

(declare-fun b!78866 () Bool)

(declare-fun c!12160 () Bool)

(assert (=> b!78866 (= c!12160 (and (not (= (bvand lt!36129 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!36129 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78866 (= e!51522 e!51532)))

(declare-fun b!78867 () Bool)

(declare-fun e!51527 () Bool)

(declare-fun call!7271 () Bool)

(assert (=> b!78867 (= e!51527 (not call!7271))))

(declare-fun b!78868 () Bool)

(declare-fun e!51526 () Bool)

(assert (=> b!78868 (= e!51526 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7269 () Bool)

(assert (=> bm!7269 (= call!7275 call!7270)))

(declare-fun b!78869 () Bool)

(declare-fun e!51525 () Bool)

(declare-fun call!7272 () Bool)

(assert (=> b!78869 (= e!51525 (not call!7272))))

(declare-fun b!78870 () Bool)

(declare-fun e!51524 () Bool)

(assert (=> b!78870 (= e!51524 e!51527)))

(declare-fun c!12161 () Bool)

(assert (=> b!78870 (= c!12161 (not (= (bvand lt!36129 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7270 () Bool)

(assert (=> bm!7270 (= call!7272 (contains!742 lt!36589 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7271 () Bool)

(assert (=> bm!7271 (= call!7274 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36129 (zeroValue!2170 newMap!16) lt!35856 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78871 () Bool)

(assert (=> b!78871 (= e!51532 call!7273)))

(declare-fun b!78872 () Bool)

(declare-fun e!51528 () ListLongMap!1447)

(assert (=> b!78872 (= e!51528 e!51522)))

(assert (=> b!78872 (= c!12163 (and (not (= (bvand lt!36129 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!36129 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7272 () Bool)

(assert (=> bm!7272 (= call!7273 call!7276)))

(declare-fun b!78873 () Bool)

(declare-fun res!41252 () Bool)

(assert (=> b!78873 (=> (not res!41252) (not e!51524))))

(assert (=> b!78873 (= res!41252 e!51525)))

(declare-fun c!12162 () Bool)

(assert (=> b!78873 (= c!12162 (not (= (bvand lt!36129 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78874 () Bool)

(declare-fun e!51530 () Unit!2257)

(declare-fun Unit!2291 () Unit!2257)

(assert (=> b!78874 (= e!51530 Unit!2291)))

(declare-fun b!78875 () Bool)

(declare-fun e!51523 () Bool)

(assert (=> b!78875 (= e!51525 e!51523)))

(declare-fun res!41249 () Bool)

(assert (=> b!78875 (= res!41249 call!7272)))

(assert (=> b!78875 (=> (not res!41249) (not e!51523))))

(declare-fun b!78876 () Bool)

(assert (=> b!78876 (= e!51527 e!51529)))

(declare-fun res!41251 () Bool)

(assert (=> b!78876 (= res!41251 call!7271)))

(assert (=> b!78876 (=> (not res!41251) (not e!51529))))

(declare-fun b!78877 () Bool)

(declare-fun e!51533 () Bool)

(assert (=> b!78877 (= e!51533 (= (apply!79 lt!36589 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78877 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (_values!2255 newMap!16))))))

(assert (=> b!78877 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun d!18767 () Bool)

(assert (=> d!18767 e!51524))

(declare-fun res!41253 () Bool)

(assert (=> d!18767 (=> (not res!41253) (not e!51524))))

(assert (=> d!18767 (= res!41253 (or (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))))

(declare-fun lt!36579 () ListLongMap!1447)

(assert (=> d!18767 (= lt!36589 lt!36579)))

(declare-fun lt!36596 () Unit!2257)

(assert (=> d!18767 (= lt!36596 e!51530)))

(declare-fun c!12158 () Bool)

(assert (=> d!18767 (= c!12158 e!51526)))

(declare-fun res!41248 () Bool)

(assert (=> d!18767 (=> (not res!41248) (not e!51526))))

(assert (=> d!18767 (= res!41248 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18767 (= lt!36579 e!51528)))

(assert (=> d!18767 (= c!12159 (and (not (= (bvand lt!36129 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!36129 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18767 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18767 (= (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36129 (zeroValue!2170 newMap!16) lt!35856 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36589)))

(declare-fun bm!7268 () Bool)

(assert (=> bm!7268 (= call!7271 (contains!742 lt!36589 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7273 () Bool)

(assert (=> bm!7273 (= call!7270 call!7274)))

(declare-fun b!78878 () Bool)

(declare-fun lt!36578 () Unit!2257)

(assert (=> b!78878 (= e!51530 lt!36578)))

(declare-fun lt!36584 () ListLongMap!1447)

(assert (=> b!78878 (= lt!36584 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36129 (zeroValue!2170 newMap!16) lt!35856 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36577 () (_ BitVec 64))

(assert (=> b!78878 (= lt!36577 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36586 () (_ BitVec 64))

(assert (=> b!78878 (= lt!36586 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36591 () Unit!2257)

(assert (=> b!78878 (= lt!36591 (addStillContains!55 lt!36584 lt!36577 (zeroValue!2170 newMap!16) lt!36586))))

(assert (=> b!78878 (contains!742 (+!105 lt!36584 (tuple2!2173 lt!36577 (zeroValue!2170 newMap!16))) lt!36586)))

(declare-fun lt!36585 () Unit!2257)

(assert (=> b!78878 (= lt!36585 lt!36591)))

(declare-fun lt!36576 () ListLongMap!1447)

(assert (=> b!78878 (= lt!36576 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36129 (zeroValue!2170 newMap!16) lt!35856 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36580 () (_ BitVec 64))

(assert (=> b!78878 (= lt!36580 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36582 () (_ BitVec 64))

(assert (=> b!78878 (= lt!36582 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36581 () Unit!2257)

(assert (=> b!78878 (= lt!36581 (addApplyDifferent!55 lt!36576 lt!36580 lt!35856 lt!36582))))

(assert (=> b!78878 (= (apply!79 (+!105 lt!36576 (tuple2!2173 lt!36580 lt!35856)) lt!36582) (apply!79 lt!36576 lt!36582))))

(declare-fun lt!36575 () Unit!2257)

(assert (=> b!78878 (= lt!36575 lt!36581)))

(declare-fun lt!36593 () ListLongMap!1447)

(assert (=> b!78878 (= lt!36593 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36129 (zeroValue!2170 newMap!16) lt!35856 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36592 () (_ BitVec 64))

(assert (=> b!78878 (= lt!36592 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36594 () (_ BitVec 64))

(assert (=> b!78878 (= lt!36594 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36583 () Unit!2257)

(assert (=> b!78878 (= lt!36583 (addApplyDifferent!55 lt!36593 lt!36592 (zeroValue!2170 newMap!16) lt!36594))))

(assert (=> b!78878 (= (apply!79 (+!105 lt!36593 (tuple2!2173 lt!36592 (zeroValue!2170 newMap!16))) lt!36594) (apply!79 lt!36593 lt!36594))))

(declare-fun lt!36587 () Unit!2257)

(assert (=> b!78878 (= lt!36587 lt!36583)))

(declare-fun lt!36590 () ListLongMap!1447)

(assert (=> b!78878 (= lt!36590 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36129 (zeroValue!2170 newMap!16) lt!35856 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36595 () (_ BitVec 64))

(assert (=> b!78878 (= lt!36595 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36588 () (_ BitVec 64))

(assert (=> b!78878 (= lt!36588 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78878 (= lt!36578 (addApplyDifferent!55 lt!36590 lt!36595 lt!35856 lt!36588))))

(assert (=> b!78878 (= (apply!79 (+!105 lt!36590 (tuple2!2173 lt!36595 lt!35856)) lt!36588) (apply!79 lt!36590 lt!36588))))

(declare-fun b!78879 () Bool)

(declare-fun res!41255 () Bool)

(assert (=> b!78879 (=> (not res!41255) (not e!51524))))

(declare-fun e!51521 () Bool)

(assert (=> b!78879 (= res!41255 e!51521)))

(declare-fun res!41250 () Bool)

(assert (=> b!78879 (=> res!41250 e!51521)))

(declare-fun e!51531 () Bool)

(assert (=> b!78879 (= res!41250 (not e!51531))))

(declare-fun res!41247 () Bool)

(assert (=> b!78879 (=> (not res!41247) (not e!51531))))

(assert (=> b!78879 (= res!41247 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78880 () Bool)

(assert (=> b!78880 (= e!51521 e!51533)))

(declare-fun res!41254 () Bool)

(assert (=> b!78880 (=> (not res!41254) (not e!51533))))

(assert (=> b!78880 (= res!41254 (contains!742 lt!36589 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78880 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!78881 () Bool)

(assert (=> b!78881 (= e!51523 (= (apply!79 lt!36589 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(declare-fun b!78882 () Bool)

(assert (=> b!78882 (= e!51531 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78883 () Bool)

(assert (=> b!78883 (= e!51528 (+!105 call!7276 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)))))

(assert (= (and d!18767 c!12159) b!78883))

(assert (= (and d!18767 (not c!12159)) b!78872))

(assert (= (and b!78872 c!12163) b!78865))

(assert (= (and b!78872 (not c!12163)) b!78866))

(assert (= (and b!78866 c!12160) b!78871))

(assert (= (and b!78866 (not c!12160)) b!78864))

(assert (= (or b!78871 b!78864) bm!7269))

(assert (= (or b!78865 bm!7269) bm!7273))

(assert (= (or b!78865 b!78871) bm!7272))

(assert (= (or b!78883 bm!7273) bm!7271))

(assert (= (or b!78883 bm!7272) bm!7267))

(assert (= (and d!18767 res!41248) b!78868))

(assert (= (and d!18767 c!12158) b!78878))

(assert (= (and d!18767 (not c!12158)) b!78874))

(assert (= (and d!18767 res!41253) b!78879))

(assert (= (and b!78879 res!41247) b!78882))

(assert (= (and b!78879 (not res!41250)) b!78880))

(assert (= (and b!78880 res!41254) b!78877))

(assert (= (and b!78879 res!41255) b!78873))

(assert (= (and b!78873 c!12162) b!78875))

(assert (= (and b!78873 (not c!12162)) b!78869))

(assert (= (and b!78875 res!41249) b!78881))

(assert (= (or b!78875 b!78869) bm!7270))

(assert (= (and b!78873 res!41252) b!78870))

(assert (= (and b!78870 c!12161) b!78876))

(assert (= (and b!78870 (not c!12161)) b!78867))

(assert (= (and b!78876 res!41251) b!78863))

(assert (= (or b!78876 b!78867) bm!7268))

(declare-fun b_lambda!3531 () Bool)

(assert (=> (not b_lambda!3531) (not b!78877)))

(assert (=> b!78877 t!5161))

(declare-fun b_and!4847 () Bool)

(assert (= b_and!4843 (and (=> t!5161 result!2825) b_and!4847)))

(assert (=> b!78877 t!5163))

(declare-fun b_and!4849 () Bool)

(assert (= b_and!4845 (and (=> t!5163 result!2827) b_and!4849)))

(declare-fun m!79449 () Bool)

(assert (=> b!78881 m!79449))

(declare-fun m!79451 () Bool)

(assert (=> bm!7270 m!79451))

(declare-fun m!79453 () Bool)

(assert (=> bm!7268 m!79453))

(declare-fun m!79455 () Bool)

(assert (=> b!78878 m!79455))

(declare-fun m!79457 () Bool)

(assert (=> b!78878 m!79457))

(declare-fun m!79459 () Bool)

(assert (=> b!78878 m!79459))

(declare-fun m!79461 () Bool)

(assert (=> b!78878 m!79461))

(declare-fun m!79463 () Bool)

(assert (=> b!78878 m!79463))

(declare-fun m!79465 () Bool)

(assert (=> b!78878 m!79465))

(declare-fun m!79467 () Bool)

(assert (=> b!78878 m!79467))

(assert (=> b!78878 m!78509))

(declare-fun m!79469 () Bool)

(assert (=> b!78878 m!79469))

(declare-fun m!79471 () Bool)

(assert (=> b!78878 m!79471))

(declare-fun m!79473 () Bool)

(assert (=> b!78878 m!79473))

(declare-fun m!79475 () Bool)

(assert (=> b!78878 m!79475))

(declare-fun m!79477 () Bool)

(assert (=> b!78878 m!79477))

(declare-fun m!79479 () Bool)

(assert (=> b!78878 m!79479))

(assert (=> b!78878 m!79473))

(assert (=> b!78878 m!79459))

(declare-fun m!79481 () Bool)

(assert (=> b!78878 m!79481))

(declare-fun m!79483 () Bool)

(assert (=> b!78878 m!79483))

(declare-fun m!79485 () Bool)

(assert (=> b!78878 m!79485))

(assert (=> b!78878 m!79455))

(assert (=> b!78878 m!79463))

(assert (=> b!78877 m!78509))

(declare-fun m!79487 () Bool)

(assert (=> b!78877 m!79487))

(assert (=> b!78877 m!78509))

(assert (=> b!78877 m!79037))

(assert (=> b!78877 m!78533))

(assert (=> b!78877 m!79039))

(assert (=> b!78877 m!78533))

(assert (=> b!78877 m!79037))

(assert (=> b!78868 m!78509))

(assert (=> b!78868 m!78509))

(assert (=> b!78868 m!78537))

(declare-fun m!79489 () Bool)

(assert (=> b!78863 m!79489))

(assert (=> bm!7271 m!79483))

(declare-fun m!79491 () Bool)

(assert (=> bm!7267 m!79491))

(assert (=> b!78880 m!78509))

(assert (=> b!78880 m!78509))

(declare-fun m!79493 () Bool)

(assert (=> b!78880 m!79493))

(declare-fun m!79495 () Bool)

(assert (=> b!78883 m!79495))

(assert (=> d!18767 m!78411))

(assert (=> b!78882 m!78509))

(assert (=> b!78882 m!78509))

(assert (=> b!78882 m!78537))

(assert (=> d!18521 d!18767))

(declare-fun b!78887 () Bool)

(declare-fun e!51535 () Option!143)

(assert (=> b!78887 (= e!51535 None!141)))

(declare-fun c!12164 () Bool)

(declare-fun d!18769 () Bool)

(assert (=> d!18769 (= c!12164 (and ((_ is Cons!1503) (toList!739 lt!36281)) (= (_1!1097 (h!2091 (toList!739 lt!36281))) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51534 () Option!143)

(assert (=> d!18769 (= (getValueByKey!137 (toList!739 lt!36281) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!51534)))

(declare-fun b!78886 () Bool)

(assert (=> b!78886 (= e!51535 (getValueByKey!137 (t!5153 (toList!739 lt!36281)) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!78884 () Bool)

(assert (=> b!78884 (= e!51534 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36281)))))))

(declare-fun b!78885 () Bool)

(assert (=> b!78885 (= e!51534 e!51535)))

(declare-fun c!12165 () Bool)

(assert (=> b!78885 (= c!12165 (and ((_ is Cons!1503) (toList!739 lt!36281)) (not (= (_1!1097 (h!2091 (toList!739 lt!36281))) (_1!1097 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!18769 c!12164) b!78884))

(assert (= (and d!18769 (not c!12164)) b!78885))

(assert (= (and b!78885 c!12165) b!78886))

(assert (= (and b!78885 (not c!12165)) b!78887))

(declare-fun m!79497 () Bool)

(assert (=> b!78886 m!79497))

(assert (=> b!78435 d!18769))

(declare-fun d!18771 () Bool)

(declare-fun lt!36597 () Bool)

(assert (=> d!18771 (= lt!36597 (select (content!83 lt!36048) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun e!51537 () Bool)

(assert (=> d!18771 (= lt!36597 e!51537)))

(declare-fun res!41256 () Bool)

(assert (=> d!18771 (=> (not res!41256) (not e!51537))))

(assert (=> d!18771 (= res!41256 ((_ is Cons!1503) lt!36048))))

(assert (=> d!18771 (= (contains!743 lt!36048 (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))) lt!36597)))

(declare-fun b!78888 () Bool)

(declare-fun e!51536 () Bool)

(assert (=> b!78888 (= e!51537 e!51536)))

(declare-fun res!41257 () Bool)

(assert (=> b!78888 (=> res!41257 e!51536)))

(assert (=> b!78888 (= res!41257 (= (h!2091 lt!36048) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun b!78889 () Bool)

(assert (=> b!78889 (= e!51536 (contains!743 (t!5153 lt!36048) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(assert (= (and d!18771 res!41256) b!78888))

(assert (= (and b!78888 (not res!41257)) b!78889))

(declare-fun m!79499 () Bool)

(assert (=> d!18771 m!79499))

(declare-fun m!79501 () Bool)

(assert (=> d!18771 m!79501))

(declare-fun m!79503 () Bool)

(assert (=> b!78889 m!79503))

(assert (=> b!78665 d!18771))

(declare-fun call!7277 () ListLongMap!1447)

(declare-fun call!7283 () ListLongMap!1447)

(declare-fun bm!7274 () Bool)

(declare-fun call!7282 () ListLongMap!1447)

(declare-fun c!12171 () Bool)

(declare-fun c!12167 () Bool)

(declare-fun call!7281 () ListLongMap!1447)

(assert (=> bm!7274 (= call!7283 (+!105 (ite c!12167 call!7281 (ite c!12171 call!7277 call!7282)) (ite (or c!12167 c!12171) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (_2!1098 lt!36136))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (_2!1098 lt!36136))))))))

(declare-fun b!78890 () Bool)

(declare-fun e!51546 () Bool)

(declare-fun lt!36612 () ListLongMap!1447)

(assert (=> b!78890 (= e!51546 (= (apply!79 lt!36612 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 (_2!1098 lt!36136))))))

(declare-fun b!78891 () Bool)

(declare-fun e!51549 () ListLongMap!1447)

(assert (=> b!78891 (= e!51549 call!7282)))

(declare-fun b!78892 () Bool)

(declare-fun e!51539 () ListLongMap!1447)

(declare-fun call!7280 () ListLongMap!1447)

(assert (=> b!78892 (= e!51539 call!7280)))

(declare-fun b!78893 () Bool)

(declare-fun c!12168 () Bool)

(assert (=> b!78893 (= c!12168 (and (not (= (bvand (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78893 (= e!51539 e!51549)))

(declare-fun b!78894 () Bool)

(declare-fun e!51544 () Bool)

(declare-fun call!7278 () Bool)

(assert (=> b!78894 (= e!51544 (not call!7278))))

(declare-fun b!78895 () Bool)

(declare-fun e!51543 () Bool)

(assert (=> b!78895 (= e!51543 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000)))))

(declare-fun bm!7276 () Bool)

(assert (=> bm!7276 (= call!7282 call!7277)))

(declare-fun b!78896 () Bool)

(declare-fun e!51542 () Bool)

(declare-fun call!7279 () Bool)

(assert (=> b!78896 (= e!51542 (not call!7279))))

(declare-fun b!78897 () Bool)

(declare-fun e!51541 () Bool)

(assert (=> b!78897 (= e!51541 e!51544)))

(declare-fun c!12169 () Bool)

(assert (=> b!78897 (= c!12169 (not (= (bvand (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7277 () Bool)

(assert (=> bm!7277 (= call!7279 (contains!742 lt!36612 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7278 () Bool)

(assert (=> bm!7278 (= call!7281 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (_2!1098 lt!36136)) (_values!2255 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136)) (extraKeys!2123 (_2!1098 lt!36136)) (zeroValue!2170 (_2!1098 lt!36136)) (minValue!2170 (_2!1098 lt!36136)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1098 lt!36136))))))

(declare-fun b!78898 () Bool)

(assert (=> b!78898 (= e!51549 call!7280)))

(declare-fun b!78899 () Bool)

(declare-fun e!51545 () ListLongMap!1447)

(assert (=> b!78899 (= e!51545 e!51539)))

(assert (=> b!78899 (= c!12171 (and (not (= (bvand (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7279 () Bool)

(assert (=> bm!7279 (= call!7280 call!7283)))

(declare-fun b!78900 () Bool)

(declare-fun res!41263 () Bool)

(assert (=> b!78900 (=> (not res!41263) (not e!51541))))

(assert (=> b!78900 (= res!41263 e!51542)))

(declare-fun c!12170 () Bool)

(assert (=> b!78900 (= c!12170 (not (= (bvand (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78901 () Bool)

(declare-fun e!51547 () Unit!2257)

(declare-fun Unit!2292 () Unit!2257)

(assert (=> b!78901 (= e!51547 Unit!2292)))

(declare-fun b!78902 () Bool)

(declare-fun e!51540 () Bool)

(assert (=> b!78902 (= e!51542 e!51540)))

(declare-fun res!41260 () Bool)

(assert (=> b!78902 (= res!41260 call!7279)))

(assert (=> b!78902 (=> (not res!41260) (not e!51540))))

(declare-fun b!78903 () Bool)

(assert (=> b!78903 (= e!51544 e!51546)))

(declare-fun res!41262 () Bool)

(assert (=> b!78903 (= res!41262 call!7278)))

(assert (=> b!78903 (=> (not res!41262) (not e!51546))))

(declare-fun b!78904 () Bool)

(declare-fun e!51550 () Bool)

(assert (=> b!78904 (= e!51550 (= (apply!79 lt!36612 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (_values!2255 (_2!1098 lt!36136))) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 (_2!1098 lt!36136)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78904 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (_values!2255 (_2!1098 lt!36136)))))))

(assert (=> b!78904 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))))))

(declare-fun d!18773 () Bool)

(assert (=> d!18773 e!51541))

(declare-fun res!41264 () Bool)

(assert (=> d!18773 (=> (not res!41264) (not e!51541))))

(assert (=> d!18773 (= res!41264 (or (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))))))))

(declare-fun lt!36602 () ListLongMap!1447)

(assert (=> d!18773 (= lt!36612 lt!36602)))

(declare-fun lt!36619 () Unit!2257)

(assert (=> d!18773 (= lt!36619 e!51547)))

(declare-fun c!12166 () Bool)

(assert (=> d!18773 (= c!12166 e!51543)))

(declare-fun res!41259 () Bool)

(assert (=> d!18773 (=> (not res!41259) (not e!51543))))

(assert (=> d!18773 (= res!41259 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))))))

(assert (=> d!18773 (= lt!36602 e!51545)))

(assert (=> d!18773 (= c!12167 (and (not (= (bvand (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18773 (validMask!0 (mask!6268 (_2!1098 lt!36136)))))

(assert (=> d!18773 (= (getCurrentListMap!433 (_keys!3932 (_2!1098 lt!36136)) (_values!2255 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136)) (extraKeys!2123 (_2!1098 lt!36136)) (zeroValue!2170 (_2!1098 lt!36136)) (minValue!2170 (_2!1098 lt!36136)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1098 lt!36136))) lt!36612)))

(declare-fun bm!7275 () Bool)

(assert (=> bm!7275 (= call!7278 (contains!742 lt!36612 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7280 () Bool)

(assert (=> bm!7280 (= call!7277 call!7281)))

(declare-fun b!78905 () Bool)

(declare-fun lt!36601 () Unit!2257)

(assert (=> b!78905 (= e!51547 lt!36601)))

(declare-fun lt!36607 () ListLongMap!1447)

(assert (=> b!78905 (= lt!36607 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (_2!1098 lt!36136)) (_values!2255 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136)) (extraKeys!2123 (_2!1098 lt!36136)) (zeroValue!2170 (_2!1098 lt!36136)) (minValue!2170 (_2!1098 lt!36136)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1098 lt!36136))))))

(declare-fun lt!36600 () (_ BitVec 64))

(assert (=> b!78905 (= lt!36600 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36609 () (_ BitVec 64))

(assert (=> b!78905 (= lt!36609 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000))))

(declare-fun lt!36614 () Unit!2257)

(assert (=> b!78905 (= lt!36614 (addStillContains!55 lt!36607 lt!36600 (zeroValue!2170 (_2!1098 lt!36136)) lt!36609))))

(assert (=> b!78905 (contains!742 (+!105 lt!36607 (tuple2!2173 lt!36600 (zeroValue!2170 (_2!1098 lt!36136)))) lt!36609)))

(declare-fun lt!36608 () Unit!2257)

(assert (=> b!78905 (= lt!36608 lt!36614)))

(declare-fun lt!36599 () ListLongMap!1447)

(assert (=> b!78905 (= lt!36599 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (_2!1098 lt!36136)) (_values!2255 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136)) (extraKeys!2123 (_2!1098 lt!36136)) (zeroValue!2170 (_2!1098 lt!36136)) (minValue!2170 (_2!1098 lt!36136)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1098 lt!36136))))))

(declare-fun lt!36603 () (_ BitVec 64))

(assert (=> b!78905 (= lt!36603 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36605 () (_ BitVec 64))

(assert (=> b!78905 (= lt!36605 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000))))

(declare-fun lt!36604 () Unit!2257)

(assert (=> b!78905 (= lt!36604 (addApplyDifferent!55 lt!36599 lt!36603 (minValue!2170 (_2!1098 lt!36136)) lt!36605))))

(assert (=> b!78905 (= (apply!79 (+!105 lt!36599 (tuple2!2173 lt!36603 (minValue!2170 (_2!1098 lt!36136)))) lt!36605) (apply!79 lt!36599 lt!36605))))

(declare-fun lt!36598 () Unit!2257)

(assert (=> b!78905 (= lt!36598 lt!36604)))

(declare-fun lt!36616 () ListLongMap!1447)

(assert (=> b!78905 (= lt!36616 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (_2!1098 lt!36136)) (_values!2255 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136)) (extraKeys!2123 (_2!1098 lt!36136)) (zeroValue!2170 (_2!1098 lt!36136)) (minValue!2170 (_2!1098 lt!36136)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1098 lt!36136))))))

(declare-fun lt!36615 () (_ BitVec 64))

(assert (=> b!78905 (= lt!36615 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36617 () (_ BitVec 64))

(assert (=> b!78905 (= lt!36617 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000))))

(declare-fun lt!36606 () Unit!2257)

(assert (=> b!78905 (= lt!36606 (addApplyDifferent!55 lt!36616 lt!36615 (zeroValue!2170 (_2!1098 lt!36136)) lt!36617))))

(assert (=> b!78905 (= (apply!79 (+!105 lt!36616 (tuple2!2173 lt!36615 (zeroValue!2170 (_2!1098 lt!36136)))) lt!36617) (apply!79 lt!36616 lt!36617))))

(declare-fun lt!36610 () Unit!2257)

(assert (=> b!78905 (= lt!36610 lt!36606)))

(declare-fun lt!36613 () ListLongMap!1447)

(assert (=> b!78905 (= lt!36613 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (_2!1098 lt!36136)) (_values!2255 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136)) (extraKeys!2123 (_2!1098 lt!36136)) (zeroValue!2170 (_2!1098 lt!36136)) (minValue!2170 (_2!1098 lt!36136)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1098 lt!36136))))))

(declare-fun lt!36618 () (_ BitVec 64))

(assert (=> b!78905 (= lt!36618 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36611 () (_ BitVec 64))

(assert (=> b!78905 (= lt!36611 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000))))

(assert (=> b!78905 (= lt!36601 (addApplyDifferent!55 lt!36613 lt!36618 (minValue!2170 (_2!1098 lt!36136)) lt!36611))))

(assert (=> b!78905 (= (apply!79 (+!105 lt!36613 (tuple2!2173 lt!36618 (minValue!2170 (_2!1098 lt!36136)))) lt!36611) (apply!79 lt!36613 lt!36611))))

(declare-fun b!78906 () Bool)

(declare-fun res!41266 () Bool)

(assert (=> b!78906 (=> (not res!41266) (not e!51541))))

(declare-fun e!51538 () Bool)

(assert (=> b!78906 (= res!41266 e!51538)))

(declare-fun res!41261 () Bool)

(assert (=> b!78906 (=> res!41261 e!51538)))

(declare-fun e!51548 () Bool)

(assert (=> b!78906 (= res!41261 (not e!51548))))

(declare-fun res!41258 () Bool)

(assert (=> b!78906 (=> (not res!41258) (not e!51548))))

(assert (=> b!78906 (= res!41258 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))))))

(declare-fun b!78907 () Bool)

(assert (=> b!78907 (= e!51538 e!51550)))

(declare-fun res!41265 () Bool)

(assert (=> b!78907 (=> (not res!41265) (not e!51550))))

(assert (=> b!78907 (= res!41265 (contains!742 lt!36612 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000)))))

(assert (=> b!78907 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))))))

(declare-fun b!78908 () Bool)

(assert (=> b!78908 (= e!51540 (= (apply!79 lt!36612 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 (_2!1098 lt!36136))))))

(declare-fun b!78909 () Bool)

(assert (=> b!78909 (= e!51548 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000)))))

(declare-fun b!78910 () Bool)

(assert (=> b!78910 (= e!51545 (+!105 call!7283 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (_2!1098 lt!36136)))))))

(assert (= (and d!18773 c!12167) b!78910))

(assert (= (and d!18773 (not c!12167)) b!78899))

(assert (= (and b!78899 c!12171) b!78892))

(assert (= (and b!78899 (not c!12171)) b!78893))

(assert (= (and b!78893 c!12168) b!78898))

(assert (= (and b!78893 (not c!12168)) b!78891))

(assert (= (or b!78898 b!78891) bm!7276))

(assert (= (or b!78892 bm!7276) bm!7280))

(assert (= (or b!78892 b!78898) bm!7279))

(assert (= (or b!78910 bm!7280) bm!7278))

(assert (= (or b!78910 bm!7279) bm!7274))

(assert (= (and d!18773 res!41259) b!78895))

(assert (= (and d!18773 c!12166) b!78905))

(assert (= (and d!18773 (not c!12166)) b!78901))

(assert (= (and d!18773 res!41264) b!78906))

(assert (= (and b!78906 res!41258) b!78909))

(assert (= (and b!78906 (not res!41261)) b!78907))

(assert (= (and b!78907 res!41265) b!78904))

(assert (= (and b!78906 res!41266) b!78900))

(assert (= (and b!78900 c!12170) b!78902))

(assert (= (and b!78900 (not c!12170)) b!78896))

(assert (= (and b!78902 res!41260) b!78908))

(assert (= (or b!78902 b!78896) bm!7277))

(assert (= (and b!78900 res!41263) b!78897))

(assert (= (and b!78897 c!12169) b!78903))

(assert (= (and b!78897 (not c!12169)) b!78894))

(assert (= (and b!78903 res!41262) b!78890))

(assert (= (or b!78903 b!78894) bm!7275))

(declare-fun b_lambda!3533 () Bool)

(assert (=> (not b_lambda!3533) (not b!78904)))

(declare-fun tb!1629 () Bool)

(declare-fun t!5165 () Bool)

(assert (=> (and b!77851 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 (_2!1098 lt!36136))) t!5165) tb!1629))

(declare-fun result!2829 () Bool)

(assert (=> tb!1629 (= result!2829 tp_is_empty!2511)))

(assert (=> b!78904 t!5165))

(declare-fun b_and!4851 () Bool)

(assert (= b_and!4847 (and (=> t!5165 result!2829) b_and!4851)))

(declare-fun tb!1631 () Bool)

(declare-fun t!5167 () Bool)

(assert (=> (and b!77848 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (_2!1098 lt!36136))) t!5167) tb!1631))

(declare-fun result!2831 () Bool)

(assert (= result!2831 result!2829))

(assert (=> b!78904 t!5167))

(declare-fun b_and!4853 () Bool)

(assert (= b_and!4849 (and (=> t!5167 result!2831) b_and!4853)))

(declare-fun m!79505 () Bool)

(assert (=> b!78908 m!79505))

(declare-fun m!79507 () Bool)

(assert (=> bm!7277 m!79507))

(declare-fun m!79509 () Bool)

(assert (=> bm!7275 m!79509))

(declare-fun m!79511 () Bool)

(assert (=> b!78905 m!79511))

(declare-fun m!79513 () Bool)

(assert (=> b!78905 m!79513))

(declare-fun m!79515 () Bool)

(assert (=> b!78905 m!79515))

(declare-fun m!79517 () Bool)

(assert (=> b!78905 m!79517))

(declare-fun m!79519 () Bool)

(assert (=> b!78905 m!79519))

(declare-fun m!79521 () Bool)

(assert (=> b!78905 m!79521))

(declare-fun m!79523 () Bool)

(assert (=> b!78905 m!79523))

(declare-fun m!79525 () Bool)

(assert (=> b!78905 m!79525))

(declare-fun m!79527 () Bool)

(assert (=> b!78905 m!79527))

(declare-fun m!79529 () Bool)

(assert (=> b!78905 m!79529))

(declare-fun m!79531 () Bool)

(assert (=> b!78905 m!79531))

(declare-fun m!79533 () Bool)

(assert (=> b!78905 m!79533))

(declare-fun m!79535 () Bool)

(assert (=> b!78905 m!79535))

(declare-fun m!79537 () Bool)

(assert (=> b!78905 m!79537))

(assert (=> b!78905 m!79531))

(assert (=> b!78905 m!79515))

(declare-fun m!79539 () Bool)

(assert (=> b!78905 m!79539))

(declare-fun m!79541 () Bool)

(assert (=> b!78905 m!79541))

(declare-fun m!79543 () Bool)

(assert (=> b!78905 m!79543))

(assert (=> b!78905 m!79511))

(assert (=> b!78905 m!79519))

(assert (=> b!78904 m!79525))

(declare-fun m!79545 () Bool)

(assert (=> b!78904 m!79545))

(assert (=> b!78904 m!79525))

(declare-fun m!79547 () Bool)

(assert (=> b!78904 m!79547))

(declare-fun m!79549 () Bool)

(assert (=> b!78904 m!79549))

(declare-fun m!79551 () Bool)

(assert (=> b!78904 m!79551))

(assert (=> b!78904 m!79549))

(assert (=> b!78904 m!79547))

(assert (=> b!78895 m!79525))

(assert (=> b!78895 m!79525))

(declare-fun m!79553 () Bool)

(assert (=> b!78895 m!79553))

(declare-fun m!79555 () Bool)

(assert (=> b!78890 m!79555))

(assert (=> bm!7278 m!79541))

(declare-fun m!79557 () Bool)

(assert (=> bm!7274 m!79557))

(assert (=> b!78907 m!79525))

(assert (=> b!78907 m!79525))

(declare-fun m!79559 () Bool)

(assert (=> b!78907 m!79559))

(declare-fun m!79561 () Bool)

(assert (=> b!78910 m!79561))

(declare-fun m!79563 () Bool)

(assert (=> d!18773 m!79563))

(assert (=> b!78909 m!79525))

(assert (=> b!78909 m!79525))

(assert (=> b!78909 m!79553))

(assert (=> d!18563 d!18773))

(declare-fun b!78914 () Bool)

(declare-fun e!51552 () Option!143)

(assert (=> b!78914 (= e!51552 None!141)))

(declare-fun d!18775 () Bool)

(declare-fun c!12172 () Bool)

(assert (=> d!18775 (= c!12172 (and ((_ is Cons!1503) (toList!739 lt!36294)) (= (_1!1097 (h!2091 (toList!739 lt!36294))) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51551 () Option!143)

(assert (=> d!18775 (= (getValueByKey!137 (toList!739 lt!36294) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!51551)))

(declare-fun b!78913 () Bool)

(assert (=> b!78913 (= e!51552 (getValueByKey!137 (t!5153 (toList!739 lt!36294)) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!78911 () Bool)

(assert (=> b!78911 (= e!51551 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36294)))))))

(declare-fun b!78912 () Bool)

(assert (=> b!78912 (= e!51551 e!51552)))

(declare-fun c!12173 () Bool)

(assert (=> b!78912 (= c!12173 (and ((_ is Cons!1503) (toList!739 lt!36294)) (not (= (_1!1097 (h!2091 (toList!739 lt!36294))) (_1!1097 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!18775 c!12172) b!78911))

(assert (= (and d!18775 (not c!12172)) b!78912))

(assert (= (and b!78912 c!12173) b!78913))

(assert (= (and b!78912 (not c!12173)) b!78914))

(declare-fun m!79565 () Bool)

(assert (=> b!78913 m!79565))

(assert (=> b!78443 d!18775))

(assert (=> b!78717 d!18603))

(declare-fun d!18777 () Bool)

(declare-fun lt!36620 () Bool)

(assert (=> d!18777 (= lt!36620 (select (content!83 (toList!739 lt!36184)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!51554 () Bool)

(assert (=> d!18777 (= lt!36620 e!51554)))

(declare-fun res!41267 () Bool)

(assert (=> d!18777 (=> (not res!41267) (not e!51554))))

(assert (=> d!18777 (= res!41267 ((_ is Cons!1503) (toList!739 lt!36184)))))

(assert (=> d!18777 (= (contains!743 (toList!739 lt!36184) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36620)))

(declare-fun b!78915 () Bool)

(declare-fun e!51553 () Bool)

(assert (=> b!78915 (= e!51554 e!51553)))

(declare-fun res!41268 () Bool)

(assert (=> b!78915 (=> res!41268 e!51553)))

(assert (=> b!78915 (= res!41268 (= (h!2091 (toList!739 lt!36184)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!78916 () Bool)

(assert (=> b!78916 (= e!51553 (contains!743 (t!5153 (toList!739 lt!36184)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18777 res!41267) b!78915))

(assert (= (and b!78915 (not res!41268)) b!78916))

(declare-fun m!79567 () Bool)

(assert (=> d!18777 m!79567))

(declare-fun m!79569 () Bool)

(assert (=> d!18777 m!79569))

(declare-fun m!79571 () Bool)

(assert (=> b!78916 m!79571))

(assert (=> b!78262 d!18777))

(assert (=> d!18537 d!18535))

(declare-fun d!18779 () Bool)

(assert (=> d!18779 (= (getValueByKey!137 lt!36028 (_1!1097 lt!35861)) (Some!142 (_2!1097 lt!35861)))))

(assert (=> d!18779 true))

(declare-fun _$22!391 () Unit!2257)

(assert (=> d!18779 (= (choose!456 lt!36028 (_1!1097 lt!35861) (_2!1097 lt!35861)) _$22!391)))

(declare-fun bs!3333 () Bool)

(assert (= bs!3333 d!18779))

(assert (=> bs!3333 m!78191))

(assert (=> d!18537 d!18779))

(declare-fun d!18781 () Bool)

(declare-fun res!41273 () Bool)

(declare-fun e!51559 () Bool)

(assert (=> d!18781 (=> res!41273 e!51559)))

(assert (=> d!18781 (= res!41273 (or ((_ is Nil!1504) lt!36028) ((_ is Nil!1504) (t!5153 lt!36028))))))

(assert (=> d!18781 (= (isStrictlySorted!295 lt!36028) e!51559)))

(declare-fun b!78921 () Bool)

(declare-fun e!51560 () Bool)

(assert (=> b!78921 (= e!51559 e!51560)))

(declare-fun res!41274 () Bool)

(assert (=> b!78921 (=> (not res!41274) (not e!51560))))

(assert (=> b!78921 (= res!41274 (bvslt (_1!1097 (h!2091 lt!36028)) (_1!1097 (h!2091 (t!5153 lt!36028)))))))

(declare-fun b!78922 () Bool)

(assert (=> b!78922 (= e!51560 (isStrictlySorted!295 (t!5153 lt!36028)))))

(assert (= (and d!18781 (not res!41273)) b!78921))

(assert (= (and b!78921 res!41274) b!78922))

(declare-fun m!79573 () Bool)

(assert (=> b!78922 m!79573))

(assert (=> d!18537 d!18781))

(declare-fun d!18783 () Bool)

(declare-fun res!41275 () Bool)

(declare-fun e!51561 () Bool)

(assert (=> d!18783 (=> res!41275 e!51561)))

(assert (=> d!18783 (= res!41275 (or ((_ is Nil!1504) lt!36536) ((_ is Nil!1504) (t!5153 lt!36536))))))

(assert (=> d!18783 (= (isStrictlySorted!295 lt!36536) e!51561)))

(declare-fun b!78923 () Bool)

(declare-fun e!51562 () Bool)

(assert (=> b!78923 (= e!51561 e!51562)))

(declare-fun res!41276 () Bool)

(assert (=> b!78923 (=> (not res!41276) (not e!51562))))

(assert (=> b!78923 (= res!41276 (bvslt (_1!1097 (h!2091 lt!36536)) (_1!1097 (h!2091 (t!5153 lt!36536)))))))

(declare-fun b!78924 () Bool)

(assert (=> b!78924 (= e!51562 (isStrictlySorted!295 (t!5153 lt!36536)))))

(assert (= (and d!18783 (not res!41275)) b!78923))

(assert (= (and b!78923 res!41276) b!78924))

(declare-fun m!79575 () Bool)

(assert (=> b!78924 m!79575))

(assert (=> d!18707 d!18783))

(declare-fun d!18785 () Bool)

(declare-fun res!41277 () Bool)

(declare-fun e!51563 () Bool)

(assert (=> d!18785 (=> res!41277 e!51563)))

(assert (=> d!18785 (= res!41277 (or ((_ is Nil!1504) (toList!739 lt!35869)) ((_ is Nil!1504) (t!5153 (toList!739 lt!35869)))))))

(assert (=> d!18785 (= (isStrictlySorted!295 (toList!739 lt!35869)) e!51563)))

(declare-fun b!78925 () Bool)

(declare-fun e!51564 () Bool)

(assert (=> b!78925 (= e!51563 e!51564)))

(declare-fun res!41278 () Bool)

(assert (=> b!78925 (=> (not res!41278) (not e!51564))))

(assert (=> b!78925 (= res!41278 (bvslt (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 (h!2091 (t!5153 (toList!739 lt!35869))))))))

(declare-fun b!78926 () Bool)

(assert (=> b!78926 (= e!51564 (isStrictlySorted!295 (t!5153 (toList!739 lt!35869))))))

(assert (= (and d!18785 (not res!41277)) b!78925))

(assert (= (and b!78925 res!41278) b!78926))

(declare-fun m!79577 () Bool)

(assert (=> b!78926 m!79577))

(assert (=> d!18707 d!18785))

(declare-fun d!18787 () Bool)

(assert (=> d!18787 (= (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980)) (not (isEmpty!328 (getValueByKey!137 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980))))))

(declare-fun bs!3334 () Bool)

(assert (= bs!3334 d!18787))

(assert (=> bs!3334 m!78767))

(declare-fun m!79579 () Bool)

(assert (=> bs!3334 m!79579))

(assert (=> b!78442 d!18787))

(declare-fun b!78930 () Bool)

(declare-fun e!51566 () Option!143)

(assert (=> b!78930 (= e!51566 None!141)))

(declare-fun d!18789 () Bool)

(declare-fun c!12174 () Bool)

(assert (=> d!18789 (= c!12174 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35980)))))

(declare-fun e!51565 () Option!143)

(assert (=> d!18789 (= (getValueByKey!137 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980) e!51565)))

(declare-fun b!78929 () Bool)

(assert (=> b!78929 (= e!51566 (getValueByKey!137 (t!5153 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) lt!35980))))

(declare-fun b!78927 () Bool)

(assert (=> b!78927 (= e!51565 (Some!142 (_2!1097 (h!2091 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))))

(declare-fun b!78928 () Bool)

(assert (=> b!78928 (= e!51565 e!51566)))

(declare-fun c!12175 () Bool)

(assert (=> b!78928 (= c!12175 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (not (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35980))))))

(assert (= (and d!18789 c!12174) b!78927))

(assert (= (and d!18789 (not c!12174)) b!78928))

(assert (= (and b!78928 c!12175) b!78929))

(assert (= (and b!78928 (not c!12175)) b!78930))

(declare-fun m!79581 () Bool)

(assert (=> b!78929 m!79581))

(assert (=> b!78442 d!18789))

(declare-fun d!18791 () Bool)

(declare-fun c!12178 () Bool)

(assert (=> d!18791 (= c!12178 ((_ is Nil!1504) (toList!739 lt!36004)))))

(declare-fun e!51569 () (InoxSet tuple2!2172))

(assert (=> d!18791 (= (content!83 (toList!739 lt!36004)) e!51569)))

(declare-fun b!78935 () Bool)

(assert (=> b!78935 (= e!51569 ((as const (Array tuple2!2172 Bool)) false))))

(declare-fun b!78936 () Bool)

(assert (=> b!78936 (= e!51569 ((_ map or) (store ((as const (Array tuple2!2172 Bool)) false) (h!2091 (toList!739 lt!36004)) true) (content!83 (t!5153 (toList!739 lt!36004)))))))

(assert (= (and d!18791 c!12178) b!78935))

(assert (= (and d!18791 (not c!12178)) b!78936))

(declare-fun m!79583 () Bool)

(assert (=> b!78936 m!79583))

(declare-fun m!79585 () Bool)

(assert (=> b!78936 m!79585))

(assert (=> d!18647 d!18791))

(declare-fun d!18793 () Bool)

(assert (=> d!18793 (= (apply!79 lt!36337 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1176 (getValueByKey!137 (toList!739 lt!36337) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3335 () Bool)

(assert (= bs!3335 d!18793))

(declare-fun m!79587 () Bool)

(assert (=> bs!3335 m!79587))

(assert (=> bs!3335 m!79587))

(declare-fun m!79589 () Bool)

(assert (=> bs!3335 m!79589))

(assert (=> b!78507 d!18793))

(declare-fun d!18795 () Bool)

(declare-fun lt!36621 () Bool)

(assert (=> d!18795 (= lt!36621 (select (content!83 (toList!739 lt!36192)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun e!51571 () Bool)

(assert (=> d!18795 (= lt!36621 e!51571)))

(declare-fun res!41279 () Bool)

(assert (=> d!18795 (=> (not res!41279) (not e!51571))))

(assert (=> d!18795 (= res!41279 ((_ is Cons!1503) (toList!739 lt!36192)))))

(assert (=> d!18795 (= (contains!743 (toList!739 lt!36192) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!36621)))

(declare-fun b!78937 () Bool)

(declare-fun e!51570 () Bool)

(assert (=> b!78937 (= e!51571 e!51570)))

(declare-fun res!41280 () Bool)

(assert (=> b!78937 (=> res!41280 e!51570)))

(assert (=> b!78937 (= res!41280 (= (h!2091 (toList!739 lt!36192)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun b!78938 () Bool)

(assert (=> b!78938 (= e!51570 (contains!743 (t!5153 (toList!739 lt!36192)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!18795 res!41279) b!78937))

(assert (= (and b!78937 (not res!41280)) b!78938))

(declare-fun m!79591 () Bool)

(assert (=> d!18795 m!79591))

(declare-fun m!79593 () Bool)

(assert (=> d!18795 m!79593))

(declare-fun m!79595 () Bool)

(assert (=> b!78938 m!79595))

(assert (=> b!78266 d!18795))

(declare-fun d!18797 () Bool)

(declare-fun lt!36622 () (_ BitVec 32))

(assert (=> d!18797 (and (bvsge lt!36622 #b00000000000000000000000000000000) (bvsle lt!36622 (bvsub (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!51572 () (_ BitVec 32))

(assert (=> d!18797 (= lt!36622 e!51572)))

(declare-fun c!12180 () Bool)

(assert (=> d!18797 (= c!12180 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!18797 (and (bvsle #b00000000000000000000000000000000 (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!18797 (= (arrayCountValidKeys!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000 (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))) lt!36622)))

(declare-fun b!78939 () Bool)

(declare-fun e!51573 () (_ BitVec 32))

(declare-fun call!7284 () (_ BitVec 32))

(assert (=> b!78939 (= e!51573 call!7284)))

(declare-fun b!78940 () Bool)

(assert (=> b!78940 (= e!51572 #b00000000000000000000000000000000)))

(declare-fun b!78941 () Bool)

(assert (=> b!78941 (= e!51572 e!51573)))

(declare-fun c!12179 () Bool)

(assert (=> b!78941 (= c!12179 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!78942 () Bool)

(assert (=> b!78942 (= e!51573 (bvadd #b00000000000000000000000000000001 call!7284))))

(declare-fun bm!7281 () Bool)

(assert (=> bm!7281 (= call!7284 (arrayCountValidKeys!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18797 c!12180) b!78940))

(assert (= (and d!18797 (not c!12180)) b!78941))

(assert (= (and b!78941 c!12179) b!78942))

(assert (= (and b!78941 (not c!12179)) b!78939))

(assert (= (or b!78942 b!78939) bm!7281))

(declare-fun m!79597 () Bool)

(assert (=> b!78941 m!79597))

(assert (=> b!78941 m!79597))

(declare-fun m!79599 () Bool)

(assert (=> b!78941 m!79599))

(declare-fun m!79601 () Bool)

(assert (=> bm!7281 m!79601))

(assert (=> b!78269 d!18797))

(declare-fun d!18799 () Bool)

(assert (=> d!18799 (= (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35976)) (v!2596 (getValueByKey!137 (toList!739 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35976)))))

(assert (=> d!18597 d!18799))

(declare-fun b!78946 () Bool)

(declare-fun e!51575 () Option!143)

(assert (=> b!78946 (= e!51575 None!141)))

(declare-fun c!12181 () Bool)

(declare-fun d!18801 () Bool)

(assert (=> d!18801 (= c!12181 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35976)))))

(declare-fun e!51574 () Option!143)

(assert (=> d!18801 (= (getValueByKey!137 (toList!739 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35976) e!51574)))

(declare-fun b!78945 () Bool)

(assert (=> b!78945 (= e!51575 (getValueByKey!137 (t!5153 (toList!739 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) lt!35976))))

(declare-fun b!78943 () Bool)

(assert (=> b!78943 (= e!51574 (Some!142 (_2!1097 (h!2091 (toList!739 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))))

(declare-fun b!78944 () Bool)

(assert (=> b!78944 (= e!51574 e!51575)))

(declare-fun c!12182 () Bool)

(assert (=> b!78944 (= c!12182 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (not (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35976))))))

(assert (= (and d!18801 c!12181) b!78943))

(assert (= (and d!18801 (not c!12181)) b!78944))

(assert (= (and b!78944 c!12182) b!78945))

(assert (= (and b!78944 (not c!12182)) b!78946))

(declare-fun m!79603 () Bool)

(assert (=> b!78945 m!79603))

(assert (=> d!18597 d!18801))

(declare-fun b!78965 () Bool)

(declare-fun e!51586 () Bool)

(declare-fun lt!36628 () SeekEntryResult!240)

(assert (=> b!78965 (= e!51586 (bvsge (x!11547 lt!36628) #b01111111111111111111111111111110))))

(declare-fun e!51588 () SeekEntryResult!240)

(declare-fun b!78966 () Bool)

(assert (=> b!78966 (= e!51588 (Intermediate!240 true (toIndex!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (mask!6268 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!78967 () Bool)

(assert (=> b!78967 (and (bvsge (index!3096 lt!36628) #b00000000000000000000000000000000) (bvslt (index!3096 lt!36628) (size!2136 (_keys!3932 newMap!16))))))

(declare-fun res!41288 () Bool)

(assert (=> b!78967 (= res!41288 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3096 lt!36628)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun e!51589 () Bool)

(assert (=> b!78967 (=> res!41288 e!51589)))

(declare-fun e!51587 () Bool)

(assert (=> b!78967 (= e!51587 e!51589)))

(declare-fun d!18803 () Bool)

(assert (=> d!18803 e!51586))

(declare-fun c!12189 () Bool)

(assert (=> d!18803 (= c!12189 (and ((_ is Intermediate!240) lt!36628) (undefined!1052 lt!36628)))))

(assert (=> d!18803 (= lt!36628 e!51588)))

(declare-fun c!12191 () Bool)

(assert (=> d!18803 (= c!12191 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!36627 () (_ BitVec 64))

(assert (=> d!18803 (= lt!36627 (select (arr!1895 (_keys!3932 newMap!16)) (toIndex!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (mask!6268 newMap!16))))))

(assert (=> d!18803 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18803 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (mask!6268 newMap!16)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)) lt!36628)))

(declare-fun b!78968 () Bool)

(assert (=> b!78968 (and (bvsge (index!3096 lt!36628) #b00000000000000000000000000000000) (bvslt (index!3096 lt!36628) (size!2136 (_keys!3932 newMap!16))))))

(assert (=> b!78968 (= e!51589 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3096 lt!36628)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78969 () Bool)

(assert (=> b!78969 (= e!51586 e!51587)))

(declare-fun res!41287 () Bool)

(assert (=> b!78969 (= res!41287 (and ((_ is Intermediate!240) lt!36628) (not (undefined!1052 lt!36628)) (bvslt (x!11547 lt!36628) #b01111111111111111111111111111110) (bvsge (x!11547 lt!36628) #b00000000000000000000000000000000) (bvsge (x!11547 lt!36628) #b00000000000000000000000000000000)))))

(assert (=> b!78969 (=> (not res!41287) (not e!51587))))

(declare-fun b!78970 () Bool)

(declare-fun e!51590 () SeekEntryResult!240)

(assert (=> b!78970 (= e!51590 (Intermediate!240 false (toIndex!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (mask!6268 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!78971 () Bool)

(assert (=> b!78971 (and (bvsge (index!3096 lt!36628) #b00000000000000000000000000000000) (bvslt (index!3096 lt!36628) (size!2136 (_keys!3932 newMap!16))))))

(declare-fun res!41289 () Bool)

(assert (=> b!78971 (= res!41289 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3096 lt!36628)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78971 (=> res!41289 e!51589)))

(declare-fun b!78972 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!78972 (= e!51590 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (mask!6268 newMap!16)) #b00000000000000000000000000000000 (mask!6268 newMap!16)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!78973 () Bool)

(assert (=> b!78973 (= e!51588 e!51590)))

(declare-fun c!12190 () Bool)

(assert (=> b!78973 (= c!12190 (or (= lt!36627 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (= (bvadd lt!36627 lt!36627) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18803 c!12191) b!78966))

(assert (= (and d!18803 (not c!12191)) b!78973))

(assert (= (and b!78973 c!12190) b!78970))

(assert (= (and b!78973 (not c!12190)) b!78972))

(assert (= (and d!18803 c!12189) b!78965))

(assert (= (and d!18803 (not c!12189)) b!78969))

(assert (= (and b!78969 res!41287) b!78967))

(assert (= (and b!78967 (not res!41288)) b!78971))

(assert (= (and b!78971 (not res!41289)) b!78968))

(assert (=> b!78972 m!78413))

(declare-fun m!79605 () Bool)

(assert (=> b!78972 m!79605))

(assert (=> b!78972 m!79605))

(assert (=> b!78972 m!77965))

(declare-fun m!79607 () Bool)

(assert (=> b!78972 m!79607))

(declare-fun m!79609 () Bool)

(assert (=> b!78971 m!79609))

(assert (=> d!18803 m!78413))

(declare-fun m!79611 () Bool)

(assert (=> d!18803 m!79611))

(assert (=> d!18803 m!78411))

(assert (=> b!78968 m!79609))

(assert (=> b!78967 m!79609))

(assert (=> d!18489 d!18803))

(declare-fun d!18805 () Bool)

(declare-fun lt!36634 () (_ BitVec 32))

(declare-fun lt!36633 () (_ BitVec 32))

(assert (=> d!18805 (= lt!36634 (bvmul (bvxor lt!36633 (bvlshr lt!36633 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!18805 (= lt!36633 ((_ extract 31 0) (bvand (bvxor (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvlshr (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!18805 (and (bvsge (mask!6268 newMap!16) #b00000000000000000000000000000000) (let ((res!41290 (let ((h!2094 ((_ extract 31 0) (bvand (bvxor (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvlshr (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11649 (bvmul (bvxor h!2094 (bvlshr h!2094 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11649 (bvlshr x!11649 #b00000000000000000000000000001101)) (mask!6268 newMap!16)))))) (and (bvslt res!41290 (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001)) (bvsge res!41290 #b00000000000000000000000000000000))))))

(assert (=> d!18805 (= (toIndex!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (mask!6268 newMap!16)) (bvand (bvxor lt!36634 (bvlshr lt!36634 #b00000000000000000000000000001101)) (mask!6268 newMap!16)))))

(assert (=> d!18489 d!18805))

(assert (=> d!18489 d!18765))

(declare-fun d!18807 () Bool)

(declare-fun c!12192 () Bool)

(assert (=> d!18807 (= c!12192 ((_ is ValueCellFull!912) (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!51591 () V!2995)

(assert (=> d!18807 (= (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51591)))

(declare-fun b!78974 () Bool)

(assert (=> b!78974 (= e!51591 (get!1174 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78975 () Bool)

(assert (=> b!78975 (= e!51591 (get!1175 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18807 c!12192) b!78974))

(assert (= (and d!18807 (not c!12192)) b!78975))

(assert (=> b!78974 m!78859))

(assert (=> b!78974 m!78001))

(declare-fun m!79613 () Bool)

(assert (=> b!78974 m!79613))

(assert (=> b!78975 m!78859))

(assert (=> b!78975 m!78001))

(declare-fun m!79615 () Bool)

(assert (=> b!78975 m!79615))

(assert (=> b!78499 d!18807))

(declare-fun d!18809 () Bool)

(declare-fun e!51592 () Bool)

(assert (=> d!18809 e!51592))

(declare-fun res!41291 () Bool)

(assert (=> d!18809 (=> (not res!41291) (not e!51592))))

(declare-fun lt!36636 () ListLongMap!1447)

(assert (=> d!18809 (= res!41291 (contains!742 lt!36636 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!36635 () List!1507)

(assert (=> d!18809 (= lt!36636 (ListLongMap!1448 lt!36635))))

(declare-fun lt!36638 () Unit!2257)

(declare-fun lt!36637 () Unit!2257)

(assert (=> d!18809 (= lt!36638 lt!36637)))

(assert (=> d!18809 (= (getValueByKey!137 lt!36635 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18809 (= lt!36637 (lemmaContainsTupThenGetReturnValue!54 lt!36635 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18809 (= lt!36635 (insertStrictlySorted!57 (toList!739 call!7213) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18809 (= (+!105 call!7213 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!36636)))

(declare-fun b!78976 () Bool)

(declare-fun res!41292 () Bool)

(assert (=> b!78976 (=> (not res!41292) (not e!51592))))

(assert (=> b!78976 (= res!41292 (= (getValueByKey!137 (toList!739 lt!36636) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!78977 () Bool)

(assert (=> b!78977 (= e!51592 (contains!743 (toList!739 lt!36636) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!18809 res!41291) b!78976))

(assert (= (and b!78976 res!41292) b!78977))

(declare-fun m!79617 () Bool)

(assert (=> d!18809 m!79617))

(declare-fun m!79619 () Bool)

(assert (=> d!18809 m!79619))

(declare-fun m!79621 () Bool)

(assert (=> d!18809 m!79621))

(declare-fun m!79623 () Bool)

(assert (=> d!18809 m!79623))

(declare-fun m!79625 () Bool)

(assert (=> b!78976 m!79625))

(declare-fun m!79627 () Bool)

(assert (=> b!78977 m!79627))

(assert (=> b!78499 d!18809))

(declare-fun d!18811 () Bool)

(assert (=> d!18811 (not (contains!742 (+!105 lt!36320 (tuple2!2173 lt!36318 lt!36321)) lt!36322))))

(declare-fun lt!36639 () Unit!2257)

(assert (=> d!18811 (= lt!36639 (choose!457 lt!36320 lt!36318 lt!36321 lt!36322))))

(declare-fun e!51593 () Bool)

(assert (=> d!18811 e!51593))

(declare-fun res!41293 () Bool)

(assert (=> d!18811 (=> (not res!41293) (not e!51593))))

(assert (=> d!18811 (= res!41293 (not (contains!742 lt!36320 lt!36322)))))

(assert (=> d!18811 (= (addStillNotContains!28 lt!36320 lt!36318 lt!36321 lt!36322) lt!36639)))

(declare-fun b!78978 () Bool)

(assert (=> b!78978 (= e!51593 (not (= lt!36318 lt!36322)))))

(assert (= (and d!18811 res!41293) b!78978))

(assert (=> d!18811 m!78869))

(assert (=> d!18811 m!78869))

(assert (=> d!18811 m!78871))

(declare-fun m!79629 () Bool)

(assert (=> d!18811 m!79629))

(declare-fun m!79631 () Bool)

(assert (=> d!18811 m!79631))

(assert (=> b!78499 d!18811))

(declare-fun d!18813 () Bool)

(declare-fun e!51594 () Bool)

(assert (=> d!18813 e!51594))

(declare-fun res!41294 () Bool)

(assert (=> d!18813 (=> (not res!41294) (not e!51594))))

(declare-fun lt!36641 () ListLongMap!1447)

(assert (=> d!18813 (= res!41294 (contains!742 lt!36641 (_1!1097 (tuple2!2173 lt!36318 lt!36321))))))

(declare-fun lt!36640 () List!1507)

(assert (=> d!18813 (= lt!36641 (ListLongMap!1448 lt!36640))))

(declare-fun lt!36643 () Unit!2257)

(declare-fun lt!36642 () Unit!2257)

(assert (=> d!18813 (= lt!36643 lt!36642)))

(assert (=> d!18813 (= (getValueByKey!137 lt!36640 (_1!1097 (tuple2!2173 lt!36318 lt!36321))) (Some!142 (_2!1097 (tuple2!2173 lt!36318 lt!36321))))))

(assert (=> d!18813 (= lt!36642 (lemmaContainsTupThenGetReturnValue!54 lt!36640 (_1!1097 (tuple2!2173 lt!36318 lt!36321)) (_2!1097 (tuple2!2173 lt!36318 lt!36321))))))

(assert (=> d!18813 (= lt!36640 (insertStrictlySorted!57 (toList!739 lt!36320) (_1!1097 (tuple2!2173 lt!36318 lt!36321)) (_2!1097 (tuple2!2173 lt!36318 lt!36321))))))

(assert (=> d!18813 (= (+!105 lt!36320 (tuple2!2173 lt!36318 lt!36321)) lt!36641)))

(declare-fun b!78979 () Bool)

(declare-fun res!41295 () Bool)

(assert (=> b!78979 (=> (not res!41295) (not e!51594))))

(assert (=> b!78979 (= res!41295 (= (getValueByKey!137 (toList!739 lt!36641) (_1!1097 (tuple2!2173 lt!36318 lt!36321))) (Some!142 (_2!1097 (tuple2!2173 lt!36318 lt!36321)))))))

(declare-fun b!78980 () Bool)

(assert (=> b!78980 (= e!51594 (contains!743 (toList!739 lt!36641) (tuple2!2173 lt!36318 lt!36321)))))

(assert (= (and d!18813 res!41294) b!78979))

(assert (= (and b!78979 res!41295) b!78980))

(declare-fun m!79633 () Bool)

(assert (=> d!18813 m!79633))

(declare-fun m!79635 () Bool)

(assert (=> d!18813 m!79635))

(declare-fun m!79637 () Bool)

(assert (=> d!18813 m!79637))

(declare-fun m!79639 () Bool)

(assert (=> d!18813 m!79639))

(declare-fun m!79641 () Bool)

(assert (=> b!78979 m!79641))

(declare-fun m!79643 () Bool)

(assert (=> b!78980 m!79643))

(assert (=> b!78499 d!18813))

(declare-fun d!18815 () Bool)

(declare-fun e!51595 () Bool)

(assert (=> d!18815 e!51595))

(declare-fun res!41296 () Bool)

(assert (=> d!18815 (=> res!41296 e!51595)))

(declare-fun lt!36647 () Bool)

(assert (=> d!18815 (= res!41296 (not lt!36647))))

(declare-fun lt!36644 () Bool)

(assert (=> d!18815 (= lt!36647 lt!36644)))

(declare-fun lt!36645 () Unit!2257)

(declare-fun e!51596 () Unit!2257)

(assert (=> d!18815 (= lt!36645 e!51596)))

(declare-fun c!12193 () Bool)

(assert (=> d!18815 (= c!12193 lt!36644)))

(assert (=> d!18815 (= lt!36644 (containsKey!141 (toList!739 (+!105 lt!36320 (tuple2!2173 lt!36318 lt!36321))) lt!36322))))

(assert (=> d!18815 (= (contains!742 (+!105 lt!36320 (tuple2!2173 lt!36318 lt!36321)) lt!36322) lt!36647)))

(declare-fun b!78981 () Bool)

(declare-fun lt!36646 () Unit!2257)

(assert (=> b!78981 (= e!51596 lt!36646)))

(assert (=> b!78981 (= lt!36646 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (+!105 lt!36320 (tuple2!2173 lt!36318 lt!36321))) lt!36322))))

(assert (=> b!78981 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36320 (tuple2!2173 lt!36318 lt!36321))) lt!36322))))

(declare-fun b!78982 () Bool)

(declare-fun Unit!2293 () Unit!2257)

(assert (=> b!78982 (= e!51596 Unit!2293)))

(declare-fun b!78983 () Bool)

(assert (=> b!78983 (= e!51595 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36320 (tuple2!2173 lt!36318 lt!36321))) lt!36322)))))

(assert (= (and d!18815 c!12193) b!78981))

(assert (= (and d!18815 (not c!12193)) b!78982))

(assert (= (and d!18815 (not res!41296)) b!78983))

(declare-fun m!79645 () Bool)

(assert (=> d!18815 m!79645))

(declare-fun m!79647 () Bool)

(assert (=> b!78981 m!79647))

(declare-fun m!79649 () Bool)

(assert (=> b!78981 m!79649))

(assert (=> b!78981 m!79649))

(declare-fun m!79651 () Bool)

(assert (=> b!78981 m!79651))

(assert (=> b!78983 m!79649))

(assert (=> b!78983 m!79649))

(assert (=> b!78983 m!79651))

(assert (=> b!78499 d!18815))

(declare-fun d!18817 () Bool)

(declare-fun res!41297 () Bool)

(declare-fun e!51597 () Bool)

(assert (=> d!18817 (=> res!41297 e!51597)))

(assert (=> d!18817 (= res!41297 (and ((_ is Cons!1503) (toList!739 lt!36021)) (= (_1!1097 (h!2091 (toList!739 lt!36021))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18817 (= (containsKey!141 (toList!739 lt!36021) #b0000000000000000000000000000000000000000000000000000000000000000) e!51597)))

(declare-fun b!78984 () Bool)

(declare-fun e!51598 () Bool)

(assert (=> b!78984 (= e!51597 e!51598)))

(declare-fun res!41298 () Bool)

(assert (=> b!78984 (=> (not res!41298) (not e!51598))))

(assert (=> b!78984 (= res!41298 (and (or (not ((_ is Cons!1503) (toList!739 lt!36021))) (bvsle (_1!1097 (h!2091 (toList!739 lt!36021))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1503) (toList!739 lt!36021)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36021))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78985 () Bool)

(assert (=> b!78985 (= e!51598 (containsKey!141 (t!5153 (toList!739 lt!36021)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!18817 (not res!41297)) b!78984))

(assert (= (and b!78984 res!41298) b!78985))

(declare-fun m!79653 () Bool)

(assert (=> b!78985 m!79653))

(assert (=> d!18711 d!18817))

(declare-fun d!18819 () Bool)

(assert (=> d!18819 (= (get!1176 (getValueByKey!137 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2596 (getValueByKey!137 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18525 d!18819))

(declare-fun b!78989 () Bool)

(declare-fun e!51600 () Option!143)

(assert (=> b!78989 (= e!51600 None!141)))

(declare-fun c!12194 () Bool)

(declare-fun d!18821 () Bool)

(assert (=> d!18821 (= c!12194 (and ((_ is Cons!1503) (toList!739 lt!36021)) (= (_1!1097 (h!2091 (toList!739 lt!36021))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!51599 () Option!143)

(assert (=> d!18821 (= (getValueByKey!137 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!51599)))

(declare-fun b!78988 () Bool)

(assert (=> b!78988 (= e!51600 (getValueByKey!137 (t!5153 (toList!739 lt!36021)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78986 () Bool)

(assert (=> b!78986 (= e!51599 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36021)))))))

(declare-fun b!78987 () Bool)

(assert (=> b!78987 (= e!51599 e!51600)))

(declare-fun c!12195 () Bool)

(assert (=> b!78987 (= c!12195 (and ((_ is Cons!1503) (toList!739 lt!36021)) (not (= (_1!1097 (h!2091 (toList!739 lt!36021))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!18821 c!12194) b!78986))

(assert (= (and d!18821 (not c!12194)) b!78987))

(assert (= (and b!78987 c!12195) b!78988))

(assert (= (and b!78987 (not c!12195)) b!78989))

(assert (=> b!78988 m!78109))

(declare-fun m!79655 () Bool)

(assert (=> b!78988 m!79655))

(assert (=> d!18525 d!18821))

(declare-fun d!18823 () Bool)

(declare-fun lt!36648 () Bool)

(assert (=> d!18823 (= lt!36648 (select (content!84 (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!51602 () Bool)

(assert (=> d!18823 (= lt!36648 e!51602)))

(declare-fun res!41300 () Bool)

(assert (=> d!18823 (=> (not res!41300) (not e!51602))))

(assert (=> d!18823 (= res!41300 ((_ is Cons!1504) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)))))

(assert (=> d!18823 (= (contains!744 (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!36648)))

(declare-fun b!78990 () Bool)

(declare-fun e!51601 () Bool)

(assert (=> b!78990 (= e!51602 e!51601)))

(declare-fun res!41299 () Bool)

(assert (=> b!78990 (=> res!41299 e!51601)))

(assert (=> b!78990 (= res!41299 (= (h!2092 (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78991 () Bool)

(assert (=> b!78991 (= e!51601 (contains!744 (t!5154 (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!18823 res!41300) b!78990))

(assert (= (and b!78990 (not res!41299)) b!78991))

(declare-fun m!79657 () Bool)

(assert (=> d!18823 m!79657))

(assert (=> d!18823 m!79243))

(declare-fun m!79659 () Bool)

(assert (=> d!18823 m!79659))

(assert (=> b!78991 m!79243))

(declare-fun m!79661 () Bool)

(assert (=> b!78991 m!79661))

(assert (=> b!78736 d!18823))

(declare-fun d!18825 () Bool)

(assert (=> d!18825 (= (apply!79 lt!36389 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1176 (getValueByKey!137 (toList!739 lt!36389) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3336 () Bool)

(assert (= bs!3336 d!18825))

(assert (=> bs!3336 m!78509))

(declare-fun m!79663 () Bool)

(assert (=> bs!3336 m!79663))

(assert (=> bs!3336 m!79663))

(declare-fun m!79665 () Bool)

(assert (=> bs!3336 m!79665))

(assert (=> b!78591 d!18825))

(declare-fun d!18827 () Bool)

(declare-fun c!12196 () Bool)

(assert (=> d!18827 (= c!12196 ((_ is ValueCellFull!912) (select (arr!1896 (_values!2255 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!51603 () V!2995)

(assert (=> d!18827 (= (get!1173 (select (arr!1896 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51603)))

(declare-fun b!78992 () Bool)

(assert (=> b!78992 (= e!51603 (get!1174 (select (arr!1896 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78993 () Bool)

(assert (=> b!78993 (= e!51603 (get!1175 (select (arr!1896 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18827 c!12196) b!78992))

(assert (= (and d!18827 (not c!12196)) b!78993))

(assert (=> b!78992 m!79037))

(assert (=> b!78992 m!78533))

(declare-fun m!79667 () Bool)

(assert (=> b!78992 m!79667))

(assert (=> b!78993 m!79037))

(assert (=> b!78993 m!78533))

(declare-fun m!79669 () Bool)

(assert (=> b!78993 m!79669))

(assert (=> b!78591 d!18827))

(declare-fun d!18829 () Bool)

(declare-fun e!51604 () Bool)

(assert (=> d!18829 e!51604))

(declare-fun res!41301 () Bool)

(assert (=> d!18829 (=> (not res!41301) (not e!51604))))

(declare-fun lt!36650 () ListLongMap!1447)

(assert (=> d!18829 (= res!41301 (contains!742 lt!36650 (_1!1097 (tuple2!2173 lt!36219 (minValue!2170 newMap!16)))))))

(declare-fun lt!36649 () List!1507)

(assert (=> d!18829 (= lt!36650 (ListLongMap!1448 lt!36649))))

(declare-fun lt!36652 () Unit!2257)

(declare-fun lt!36651 () Unit!2257)

(assert (=> d!18829 (= lt!36652 lt!36651)))

(assert (=> d!18829 (= (getValueByKey!137 lt!36649 (_1!1097 (tuple2!2173 lt!36219 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36219 (minValue!2170 newMap!16)))))))

(assert (=> d!18829 (= lt!36651 (lemmaContainsTupThenGetReturnValue!54 lt!36649 (_1!1097 (tuple2!2173 lt!36219 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36219 (minValue!2170 newMap!16)))))))

(assert (=> d!18829 (= lt!36649 (insertStrictlySorted!57 (toList!739 lt!36214) (_1!1097 (tuple2!2173 lt!36219 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36219 (minValue!2170 newMap!16)))))))

(assert (=> d!18829 (= (+!105 lt!36214 (tuple2!2173 lt!36219 (minValue!2170 newMap!16))) lt!36650)))

(declare-fun b!78994 () Bool)

(declare-fun res!41302 () Bool)

(assert (=> b!78994 (=> (not res!41302) (not e!51604))))

(assert (=> b!78994 (= res!41302 (= (getValueByKey!137 (toList!739 lt!36650) (_1!1097 (tuple2!2173 lt!36219 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36219 (minValue!2170 newMap!16))))))))

(declare-fun b!78995 () Bool)

(assert (=> b!78995 (= e!51604 (contains!743 (toList!739 lt!36650) (tuple2!2173 lt!36219 (minValue!2170 newMap!16))))))

(assert (= (and d!18829 res!41301) b!78994))

(assert (= (and b!78994 res!41302) b!78995))

(declare-fun m!79671 () Bool)

(assert (=> d!18829 m!79671))

(declare-fun m!79673 () Bool)

(assert (=> d!18829 m!79673))

(declare-fun m!79675 () Bool)

(assert (=> d!18829 m!79675))

(declare-fun m!79677 () Bool)

(assert (=> d!18829 m!79677))

(declare-fun m!79679 () Bool)

(assert (=> b!78994 m!79679))

(declare-fun m!79681 () Bool)

(assert (=> b!78995 m!79681))

(assert (=> b!78287 d!18829))

(declare-fun d!18831 () Bool)

(assert (=> d!18831 (contains!742 (+!105 lt!36208 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) lt!36210)))

(declare-fun lt!36653 () Unit!2257)

(assert (=> d!18831 (= lt!36653 (choose!459 lt!36208 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) lt!36210))))

(assert (=> d!18831 (contains!742 lt!36208 lt!36210)))

(assert (=> d!18831 (= (addStillContains!55 lt!36208 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) lt!36210) lt!36653)))

(declare-fun bs!3337 () Bool)

(assert (= bs!3337 d!18831))

(assert (=> bs!3337 m!78515))

(assert (=> bs!3337 m!78515))

(assert (=> bs!3337 m!78517))

(declare-fun m!79683 () Bool)

(assert (=> bs!3337 m!79683))

(declare-fun m!79685 () Bool)

(assert (=> bs!3337 m!79685))

(assert (=> b!78287 d!18831))

(declare-fun d!18833 () Bool)

(declare-fun e!51605 () Bool)

(assert (=> d!18833 e!51605))

(declare-fun res!41303 () Bool)

(assert (=> d!18833 (=> res!41303 e!51605)))

(declare-fun lt!36657 () Bool)

(assert (=> d!18833 (= res!41303 (not lt!36657))))

(declare-fun lt!36654 () Bool)

(assert (=> d!18833 (= lt!36657 lt!36654)))

(declare-fun lt!36655 () Unit!2257)

(declare-fun e!51606 () Unit!2257)

(assert (=> d!18833 (= lt!36655 e!51606)))

(declare-fun c!12197 () Bool)

(assert (=> d!18833 (= c!12197 lt!36654)))

(assert (=> d!18833 (= lt!36654 (containsKey!141 (toList!739 (+!105 lt!36208 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))) lt!36210))))

(assert (=> d!18833 (= (contains!742 (+!105 lt!36208 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) lt!36210) lt!36657)))

(declare-fun b!78996 () Bool)

(declare-fun lt!36656 () Unit!2257)

(assert (=> b!78996 (= e!51606 lt!36656)))

(assert (=> b!78996 (= lt!36656 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (+!105 lt!36208 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))) lt!36210))))

(assert (=> b!78996 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36208 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))) lt!36210))))

(declare-fun b!78997 () Bool)

(declare-fun Unit!2294 () Unit!2257)

(assert (=> b!78997 (= e!51606 Unit!2294)))

(declare-fun b!78998 () Bool)

(assert (=> b!78998 (= e!51605 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36208 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))) lt!36210)))))

(assert (= (and d!18833 c!12197) b!78996))

(assert (= (and d!18833 (not c!12197)) b!78997))

(assert (= (and d!18833 (not res!41303)) b!78998))

(declare-fun m!79687 () Bool)

(assert (=> d!18833 m!79687))

(declare-fun m!79689 () Bool)

(assert (=> b!78996 m!79689))

(declare-fun m!79691 () Bool)

(assert (=> b!78996 m!79691))

(assert (=> b!78996 m!79691))

(declare-fun m!79693 () Bool)

(assert (=> b!78996 m!79693))

(assert (=> b!78998 m!79691))

(assert (=> b!78998 m!79691))

(assert (=> b!78998 m!79693))

(assert (=> b!78287 d!18833))

(declare-fun d!18835 () Bool)

(assert (=> d!18835 (= (apply!79 lt!36214 lt!36212) (get!1176 (getValueByKey!137 (toList!739 lt!36214) lt!36212)))))

(declare-fun bs!3338 () Bool)

(assert (= bs!3338 d!18835))

(declare-fun m!79695 () Bool)

(assert (=> bs!3338 m!79695))

(assert (=> bs!3338 m!79695))

(declare-fun m!79697 () Bool)

(assert (=> bs!3338 m!79697))

(assert (=> b!78287 d!18835))

(declare-fun d!18837 () Bool)

(declare-fun e!51607 () Bool)

(assert (=> d!18837 e!51607))

(declare-fun res!41304 () Bool)

(assert (=> d!18837 (=> (not res!41304) (not e!51607))))

(declare-fun lt!36659 () ListLongMap!1447)

(assert (=> d!18837 (= res!41304 (contains!742 lt!36659 (_1!1097 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))))))

(declare-fun lt!36658 () List!1507)

(assert (=> d!18837 (= lt!36659 (ListLongMap!1448 lt!36658))))

(declare-fun lt!36661 () Unit!2257)

(declare-fun lt!36660 () Unit!2257)

(assert (=> d!18837 (= lt!36661 lt!36660)))

(assert (=> d!18837 (= (getValueByKey!137 lt!36658 (_1!1097 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))) (Some!142 (_2!1097 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))))))

(assert (=> d!18837 (= lt!36660 (lemmaContainsTupThenGetReturnValue!54 lt!36658 (_1!1097 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) (_2!1097 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))))))

(assert (=> d!18837 (= lt!36658 (insertStrictlySorted!57 (toList!739 lt!36217) (_1!1097 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) (_2!1097 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))))))

(assert (=> d!18837 (= (+!105 lt!36217 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) lt!36659)))

(declare-fun b!78999 () Bool)

(declare-fun res!41305 () Bool)

(assert (=> b!78999 (=> (not res!41305) (not e!51607))))

(assert (=> b!78999 (= res!41305 (= (getValueByKey!137 (toList!739 lt!36659) (_1!1097 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))) (Some!142 (_2!1097 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))))))))

(declare-fun b!79000 () Bool)

(assert (=> b!79000 (= e!51607 (contains!743 (toList!739 lt!36659) (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))))))

(assert (= (and d!18837 res!41304) b!78999))

(assert (= (and b!78999 res!41305) b!79000))

(declare-fun m!79699 () Bool)

(assert (=> d!18837 m!79699))

(declare-fun m!79701 () Bool)

(assert (=> d!18837 m!79701))

(declare-fun m!79703 () Bool)

(assert (=> d!18837 m!79703))

(declare-fun m!79705 () Bool)

(assert (=> d!18837 m!79705))

(declare-fun m!79707 () Bool)

(assert (=> b!78999 m!79707))

(declare-fun m!79709 () Bool)

(assert (=> b!79000 m!79709))

(assert (=> b!78287 d!18837))

(declare-fun d!18839 () Bool)

(assert (=> d!18839 (= (apply!79 (+!105 lt!36200 (tuple2!2173 lt!36204 (minValue!2170 newMap!16))) lt!36206) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!36200 (tuple2!2173 lt!36204 (minValue!2170 newMap!16)))) lt!36206)))))

(declare-fun bs!3339 () Bool)

(assert (= bs!3339 d!18839))

(declare-fun m!79711 () Bool)

(assert (=> bs!3339 m!79711))

(assert (=> bs!3339 m!79711))

(declare-fun m!79713 () Bool)

(assert (=> bs!3339 m!79713))

(assert (=> b!78287 d!18839))

(declare-fun d!18841 () Bool)

(assert (=> d!18841 (= (apply!79 lt!36200 lt!36206) (get!1176 (getValueByKey!137 (toList!739 lt!36200) lt!36206)))))

(declare-fun bs!3340 () Bool)

(assert (= bs!3340 d!18841))

(declare-fun m!79715 () Bool)

(assert (=> bs!3340 m!79715))

(assert (=> bs!3340 m!79715))

(declare-fun m!79717 () Bool)

(assert (=> bs!3340 m!79717))

(assert (=> b!78287 d!18841))

(declare-fun d!18843 () Bool)

(declare-fun e!51608 () Bool)

(assert (=> d!18843 e!51608))

(declare-fun res!41306 () Bool)

(assert (=> d!18843 (=> (not res!41306) (not e!51608))))

(declare-fun lt!36663 () ListLongMap!1447)

(assert (=> d!18843 (= res!41306 (contains!742 lt!36663 (_1!1097 (tuple2!2173 lt!36204 (minValue!2170 newMap!16)))))))

(declare-fun lt!36662 () List!1507)

(assert (=> d!18843 (= lt!36663 (ListLongMap!1448 lt!36662))))

(declare-fun lt!36665 () Unit!2257)

(declare-fun lt!36664 () Unit!2257)

(assert (=> d!18843 (= lt!36665 lt!36664)))

(assert (=> d!18843 (= (getValueByKey!137 lt!36662 (_1!1097 (tuple2!2173 lt!36204 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36204 (minValue!2170 newMap!16)))))))

(assert (=> d!18843 (= lt!36664 (lemmaContainsTupThenGetReturnValue!54 lt!36662 (_1!1097 (tuple2!2173 lt!36204 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36204 (minValue!2170 newMap!16)))))))

(assert (=> d!18843 (= lt!36662 (insertStrictlySorted!57 (toList!739 lt!36200) (_1!1097 (tuple2!2173 lt!36204 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36204 (minValue!2170 newMap!16)))))))

(assert (=> d!18843 (= (+!105 lt!36200 (tuple2!2173 lt!36204 (minValue!2170 newMap!16))) lt!36663)))

(declare-fun b!79001 () Bool)

(declare-fun res!41307 () Bool)

(assert (=> b!79001 (=> (not res!41307) (not e!51608))))

(assert (=> b!79001 (= res!41307 (= (getValueByKey!137 (toList!739 lt!36663) (_1!1097 (tuple2!2173 lt!36204 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36204 (minValue!2170 newMap!16))))))))

(declare-fun b!79002 () Bool)

(assert (=> b!79002 (= e!51608 (contains!743 (toList!739 lt!36663) (tuple2!2173 lt!36204 (minValue!2170 newMap!16))))))

(assert (= (and d!18843 res!41306) b!79001))

(assert (= (and b!79001 res!41307) b!79002))

(declare-fun m!79719 () Bool)

(assert (=> d!18843 m!79719))

(declare-fun m!79721 () Bool)

(assert (=> d!18843 m!79721))

(declare-fun m!79723 () Bool)

(assert (=> d!18843 m!79723))

(declare-fun m!79725 () Bool)

(assert (=> d!18843 m!79725))

(declare-fun m!79727 () Bool)

(assert (=> b!79001 m!79727))

(declare-fun m!79729 () Bool)

(assert (=> b!79002 m!79729))

(assert (=> b!78287 d!18843))

(declare-fun d!18845 () Bool)

(assert (=> d!18845 (= (apply!79 lt!36217 lt!36218) (get!1176 (getValueByKey!137 (toList!739 lt!36217) lt!36218)))))

(declare-fun bs!3341 () Bool)

(assert (= bs!3341 d!18845))

(declare-fun m!79731 () Bool)

(assert (=> bs!3341 m!79731))

(assert (=> bs!3341 m!79731))

(declare-fun m!79733 () Bool)

(assert (=> bs!3341 m!79733))

(assert (=> b!78287 d!18845))

(declare-fun d!18847 () Bool)

(assert (=> d!18847 (= (apply!79 (+!105 lt!36217 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) lt!36218) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!36217 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))) lt!36218)))))

(declare-fun bs!3342 () Bool)

(assert (= bs!3342 d!18847))

(declare-fun m!79735 () Bool)

(assert (=> bs!3342 m!79735))

(assert (=> bs!3342 m!79735))

(declare-fun m!79737 () Bool)

(assert (=> bs!3342 m!79737))

(assert (=> b!78287 d!18847))

(declare-fun b!79003 () Bool)

(declare-fun e!51615 () ListLongMap!1447)

(assert (=> b!79003 (= e!51615 (ListLongMap!1448 Nil!1504))))

(declare-fun e!51613 () Bool)

(declare-fun b!79004 () Bool)

(declare-fun lt!36666 () ListLongMap!1447)

(assert (=> b!79004 (= e!51613 (= lt!36666 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36130) (mask!6268 newMap!16) (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) (minValue!2170 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16))))))

(declare-fun b!79005 () Bool)

(assert (=> b!79005 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> b!79005 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (ite c!11979 (_values!2255 newMap!16) lt!36130))))))

(declare-fun e!51610 () Bool)

(assert (=> b!79005 (= e!51610 (= (apply!79 lt!36666 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (ite c!11979 (_values!2255 newMap!16) lt!36130)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79006 () Bool)

(declare-fun e!51614 () Bool)

(assert (=> b!79006 (= e!51614 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79006 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!79008 () Bool)

(declare-fun e!51612 () ListLongMap!1447)

(assert (=> b!79008 (= e!51615 e!51612)))

(declare-fun c!12199 () Bool)

(assert (=> b!79008 (= c!12199 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79009 () Bool)

(declare-fun e!51609 () Bool)

(assert (=> b!79009 (= e!51609 e!51610)))

(assert (=> b!79009 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun res!41310 () Bool)

(assert (=> b!79009 (= res!41310 (contains!742 lt!36666 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79009 (=> (not res!41310) (not e!51610))))

(declare-fun bm!7282 () Bool)

(declare-fun call!7285 () ListLongMap!1447)

(assert (=> bm!7282 (= call!7285 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36130) (mask!6268 newMap!16) (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) (minValue!2170 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16)))))

(declare-fun b!79010 () Bool)

(declare-fun e!51611 () Bool)

(assert (=> b!79010 (= e!51611 e!51609)))

(declare-fun c!12200 () Bool)

(assert (=> b!79010 (= c!12200 e!51614)))

(declare-fun res!41311 () Bool)

(assert (=> b!79010 (=> (not res!41311) (not e!51614))))

(assert (=> b!79010 (= res!41311 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun d!18849 () Bool)

(assert (=> d!18849 e!51611))

(declare-fun res!41308 () Bool)

(assert (=> d!18849 (=> (not res!41308) (not e!51611))))

(assert (=> d!18849 (= res!41308 (not (contains!742 lt!36666 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18849 (= lt!36666 e!51615)))

(declare-fun c!12198 () Bool)

(assert (=> d!18849 (= c!12198 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18849 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18849 (= (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36130) (mask!6268 newMap!16) (ite (and c!11979 c!11977) lt!36145 (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36666)))

(declare-fun b!79007 () Bool)

(declare-fun lt!36669 () Unit!2257)

(declare-fun lt!36667 () Unit!2257)

(assert (=> b!79007 (= lt!36669 lt!36667)))

(declare-fun lt!36672 () (_ BitVec 64))

(declare-fun lt!36671 () V!2995)

(declare-fun lt!36670 () ListLongMap!1447)

(declare-fun lt!36668 () (_ BitVec 64))

(assert (=> b!79007 (not (contains!742 (+!105 lt!36670 (tuple2!2173 lt!36668 lt!36671)) lt!36672))))

(assert (=> b!79007 (= lt!36667 (addStillNotContains!28 lt!36670 lt!36668 lt!36671 lt!36672))))

(assert (=> b!79007 (= lt!36672 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79007 (= lt!36671 (get!1173 (select (arr!1896 (ite c!11979 (_values!2255 newMap!16) lt!36130)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79007 (= lt!36668 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79007 (= lt!36670 call!7285)))

(assert (=> b!79007 (= e!51612 (+!105 call!7285 (tuple2!2173 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (get!1173 (select (arr!1896 (ite c!11979 (_values!2255 newMap!16) lt!36130)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79011 () Bool)

(assert (=> b!79011 (= e!51609 e!51613)))

(declare-fun c!12201 () Bool)

(assert (=> b!79011 (= c!12201 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!79012 () Bool)

(assert (=> b!79012 (= e!51613 (isEmpty!326 lt!36666))))

(declare-fun b!79013 () Bool)

(declare-fun res!41309 () Bool)

(assert (=> b!79013 (=> (not res!41309) (not e!51611))))

(assert (=> b!79013 (= res!41309 (not (contains!742 lt!36666 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79014 () Bool)

(assert (=> b!79014 (= e!51612 call!7285)))

(assert (= (and d!18849 c!12198) b!79003))

(assert (= (and d!18849 (not c!12198)) b!79008))

(assert (= (and b!79008 c!12199) b!79007))

(assert (= (and b!79008 (not c!12199)) b!79014))

(assert (= (or b!79007 b!79014) bm!7282))

(assert (= (and d!18849 res!41308) b!79013))

(assert (= (and b!79013 res!41309) b!79010))

(assert (= (and b!79010 res!41311) b!79006))

(assert (= (and b!79010 c!12200) b!79009))

(assert (= (and b!79010 (not c!12200)) b!79011))

(assert (= (and b!79009 res!41310) b!79005))

(assert (= (and b!79011 c!12201) b!79004))

(assert (= (and b!79011 (not c!12201)) b!79012))

(declare-fun b_lambda!3535 () Bool)

(assert (=> (not b_lambda!3535) (not b!79005)))

(assert (=> b!79005 t!5161))

(declare-fun b_and!4855 () Bool)

(assert (= b_and!4851 (and (=> t!5161 result!2825) b_and!4855)))

(assert (=> b!79005 t!5163))

(declare-fun b_and!4857 () Bool)

(assert (= b_and!4853 (and (=> t!5163 result!2827) b_and!4857)))

(declare-fun b_lambda!3537 () Bool)

(assert (=> (not b_lambda!3537) (not b!79007)))

(assert (=> b!79007 t!5161))

(declare-fun b_and!4859 () Bool)

(assert (= b_and!4855 (and (=> t!5161 result!2825) b_and!4859)))

(assert (=> b!79007 t!5163))

(declare-fun b_and!4861 () Bool)

(assert (= b_and!4857 (and (=> t!5163 result!2827) b_and!4861)))

(declare-fun m!79739 () Bool)

(assert (=> b!79004 m!79739))

(assert (=> bm!7282 m!79739))

(assert (=> b!79009 m!78509))

(assert (=> b!79009 m!78509))

(declare-fun m!79741 () Bool)

(assert (=> b!79009 m!79741))

(declare-fun m!79743 () Bool)

(assert (=> d!18849 m!79743))

(assert (=> d!18849 m!78411))

(assert (=> b!79006 m!78509))

(assert (=> b!79006 m!78509))

(assert (=> b!79006 m!78537))

(assert (=> b!79008 m!78509))

(assert (=> b!79008 m!78509))

(assert (=> b!79008 m!78537))

(declare-fun m!79745 () Bool)

(assert (=> b!79013 m!79745))

(declare-fun m!79747 () Bool)

(assert (=> b!79012 m!79747))

(assert (=> b!79005 m!78531))

(assert (=> b!79005 m!78533))

(assert (=> b!79005 m!78535))

(assert (=> b!79005 m!78509))

(assert (=> b!79005 m!78531))

(assert (=> b!79005 m!78509))

(declare-fun m!79749 () Bool)

(assert (=> b!79005 m!79749))

(assert (=> b!79005 m!78533))

(declare-fun m!79751 () Bool)

(assert (=> b!79007 m!79751))

(assert (=> b!79007 m!78531))

(assert (=> b!79007 m!78533))

(assert (=> b!79007 m!78535))

(assert (=> b!79007 m!78509))

(declare-fun m!79753 () Bool)

(assert (=> b!79007 m!79753))

(assert (=> b!79007 m!78531))

(declare-fun m!79755 () Bool)

(assert (=> b!79007 m!79755))

(declare-fun m!79757 () Bool)

(assert (=> b!79007 m!79757))

(assert (=> b!79007 m!79755))

(assert (=> b!79007 m!78533))

(assert (=> b!78287 d!18849))

(declare-fun d!18851 () Bool)

(declare-fun e!51616 () Bool)

(assert (=> d!18851 e!51616))

(declare-fun res!41312 () Bool)

(assert (=> d!18851 (=> (not res!41312) (not e!51616))))

(declare-fun lt!36674 () ListLongMap!1447)

(assert (=> d!18851 (= res!41312 (contains!742 lt!36674 (_1!1097 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))))))

(declare-fun lt!36673 () List!1507)

(assert (=> d!18851 (= lt!36674 (ListLongMap!1448 lt!36673))))

(declare-fun lt!36676 () Unit!2257)

(declare-fun lt!36675 () Unit!2257)

(assert (=> d!18851 (= lt!36676 lt!36675)))

(assert (=> d!18851 (= (getValueByKey!137 lt!36673 (_1!1097 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))) (Some!142 (_2!1097 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))))))

(assert (=> d!18851 (= lt!36675 (lemmaContainsTupThenGetReturnValue!54 lt!36673 (_1!1097 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) (_2!1097 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))))))

(assert (=> d!18851 (= lt!36673 (insertStrictlySorted!57 (toList!739 lt!36208) (_1!1097 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) (_2!1097 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))))))

(assert (=> d!18851 (= (+!105 lt!36208 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) lt!36674)))

(declare-fun b!79015 () Bool)

(declare-fun res!41313 () Bool)

(assert (=> b!79015 (=> (not res!41313) (not e!51616))))

(assert (=> b!79015 (= res!41313 (= (getValueByKey!137 (toList!739 lt!36674) (_1!1097 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))))) (Some!142 (_2!1097 (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))))))))

(declare-fun b!79016 () Bool)

(assert (=> b!79016 (= e!51616 (contains!743 (toList!739 lt!36674) (tuple2!2173 lt!36201 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))))))

(assert (= (and d!18851 res!41312) b!79015))

(assert (= (and b!79015 res!41313) b!79016))

(declare-fun m!79759 () Bool)

(assert (=> d!18851 m!79759))

(declare-fun m!79761 () Bool)

(assert (=> d!18851 m!79761))

(declare-fun m!79763 () Bool)

(assert (=> d!18851 m!79763))

(declare-fun m!79765 () Bool)

(assert (=> d!18851 m!79765))

(declare-fun m!79767 () Bool)

(assert (=> b!79015 m!79767))

(declare-fun m!79769 () Bool)

(assert (=> b!79016 m!79769))

(assert (=> b!78287 d!18851))

(declare-fun d!18853 () Bool)

(assert (=> d!18853 (= (apply!79 (+!105 lt!36200 (tuple2!2173 lt!36204 (minValue!2170 newMap!16))) lt!36206) (apply!79 lt!36200 lt!36206))))

(declare-fun lt!36677 () Unit!2257)

(assert (=> d!18853 (= lt!36677 (choose!460 lt!36200 lt!36204 (minValue!2170 newMap!16) lt!36206))))

(declare-fun e!51617 () Bool)

(assert (=> d!18853 e!51617))

(declare-fun res!41314 () Bool)

(assert (=> d!18853 (=> (not res!41314) (not e!51617))))

(assert (=> d!18853 (= res!41314 (contains!742 lt!36200 lt!36206))))

(assert (=> d!18853 (= (addApplyDifferent!55 lt!36200 lt!36204 (minValue!2170 newMap!16) lt!36206) lt!36677)))

(declare-fun b!79017 () Bool)

(assert (=> b!79017 (= e!51617 (not (= lt!36206 lt!36204)))))

(assert (= (and d!18853 res!41314) b!79017))

(declare-fun m!79771 () Bool)

(assert (=> d!18853 m!79771))

(assert (=> d!18853 m!78511))

(declare-fun m!79773 () Bool)

(assert (=> d!18853 m!79773))

(assert (=> d!18853 m!78503))

(assert (=> d!18853 m!78503))

(assert (=> d!18853 m!78505))

(assert (=> b!78287 d!18853))

(declare-fun d!18855 () Bool)

(assert (=> d!18855 (= (apply!79 (+!105 lt!36214 (tuple2!2173 lt!36219 (minValue!2170 newMap!16))) lt!36212) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!36214 (tuple2!2173 lt!36219 (minValue!2170 newMap!16)))) lt!36212)))))

(declare-fun bs!3343 () Bool)

(assert (= bs!3343 d!18855))

(declare-fun m!79775 () Bool)

(assert (=> bs!3343 m!79775))

(assert (=> bs!3343 m!79775))

(declare-fun m!79777 () Bool)

(assert (=> bs!3343 m!79777))

(assert (=> b!78287 d!18855))

(declare-fun d!18857 () Bool)

(assert (=> d!18857 (= (apply!79 (+!105 lt!36214 (tuple2!2173 lt!36219 (minValue!2170 newMap!16))) lt!36212) (apply!79 lt!36214 lt!36212))))

(declare-fun lt!36678 () Unit!2257)

(assert (=> d!18857 (= lt!36678 (choose!460 lt!36214 lt!36219 (minValue!2170 newMap!16) lt!36212))))

(declare-fun e!51618 () Bool)

(assert (=> d!18857 e!51618))

(declare-fun res!41315 () Bool)

(assert (=> d!18857 (=> (not res!41315) (not e!51618))))

(assert (=> d!18857 (= res!41315 (contains!742 lt!36214 lt!36212))))

(assert (=> d!18857 (= (addApplyDifferent!55 lt!36214 lt!36219 (minValue!2170 newMap!16) lt!36212) lt!36678)))

(declare-fun b!79018 () Bool)

(assert (=> b!79018 (= e!51618 (not (= lt!36212 lt!36219)))))

(assert (= (and d!18857 res!41315) b!79018))

(declare-fun m!79779 () Bool)

(assert (=> d!18857 m!79779))

(assert (=> d!18857 m!78513))

(declare-fun m!79781 () Bool)

(assert (=> d!18857 m!79781))

(assert (=> d!18857 m!78499))

(assert (=> d!18857 m!78499))

(assert (=> d!18857 m!78501))

(assert (=> b!78287 d!18857))

(declare-fun d!18859 () Bool)

(assert (=> d!18859 (= (apply!79 (+!105 lt!36217 (tuple2!2173 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)))) lt!36218) (apply!79 lt!36217 lt!36218))))

(declare-fun lt!36679 () Unit!2257)

(assert (=> d!18859 (= lt!36679 (choose!460 lt!36217 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) lt!36218))))

(declare-fun e!51619 () Bool)

(assert (=> d!18859 e!51619))

(declare-fun res!41316 () Bool)

(assert (=> d!18859 (=> (not res!41316) (not e!51619))))

(assert (=> d!18859 (= res!41316 (contains!742 lt!36217 lt!36218))))

(assert (=> d!18859 (= (addApplyDifferent!55 lt!36217 lt!36216 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16)) lt!36218) lt!36679)))

(declare-fun b!79019 () Bool)

(assert (=> b!79019 (= e!51619 (not (= lt!36218 lt!36216)))))

(assert (= (and d!18859 res!41316) b!79019))

(declare-fun m!79783 () Bool)

(assert (=> d!18859 m!79783))

(assert (=> d!18859 m!78527))

(declare-fun m!79785 () Bool)

(assert (=> d!18859 m!79785))

(assert (=> d!18859 m!78495))

(assert (=> d!18859 m!78495))

(assert (=> d!18859 m!78497))

(assert (=> b!78287 d!18859))

(declare-fun d!18861 () Bool)

(assert (=> d!18861 (= (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78537 d!18861))

(declare-fun b!79032 () Bool)

(declare-fun e!51626 () SeekEntryResult!240)

(declare-fun e!51628 () SeekEntryResult!240)

(assert (=> b!79032 (= e!51626 e!51628)))

(declare-fun c!12208 () Bool)

(declare-fun lt!36685 () (_ BitVec 64))

(assert (=> b!79032 (= c!12208 (= lt!36685 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!79033 () Bool)

(declare-fun c!12210 () Bool)

(assert (=> b!79033 (= c!12210 (= lt!36685 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51627 () SeekEntryResult!240)

(assert (=> b!79033 (= e!51628 e!51627)))

(declare-fun b!79034 () Bool)

(assert (=> b!79034 (= e!51627 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11547 lt!36177) #b00000000000000000000000000000001) (nextIndex!0 (index!3096 lt!36177) (x!11547 lt!36177) (mask!6268 newMap!16)) (index!3096 lt!36177) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!79036 () Bool)

(assert (=> b!79036 (= e!51626 Undefined!240)))

(declare-fun b!79037 () Bool)

(assert (=> b!79037 (= e!51628 (Found!240 (index!3096 lt!36177)))))

(declare-fun d!18863 () Bool)

(declare-fun lt!36684 () SeekEntryResult!240)

(assert (=> d!18863 (and (or ((_ is Undefined!240) lt!36684) (not ((_ is Found!240) lt!36684)) (and (bvsge (index!3095 lt!36684) #b00000000000000000000000000000000) (bvslt (index!3095 lt!36684) (size!2136 (_keys!3932 newMap!16))))) (or ((_ is Undefined!240) lt!36684) ((_ is Found!240) lt!36684) (not ((_ is MissingVacant!240) lt!36684)) (not (= (index!3097 lt!36684) (index!3096 lt!36177))) (and (bvsge (index!3097 lt!36684) #b00000000000000000000000000000000) (bvslt (index!3097 lt!36684) (size!2136 (_keys!3932 newMap!16))))) (or ((_ is Undefined!240) lt!36684) (ite ((_ is Found!240) lt!36684) (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36684)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (and ((_ is MissingVacant!240) lt!36684) (= (index!3097 lt!36684) (index!3096 lt!36177)) (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3097 lt!36684)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!18863 (= lt!36684 e!51626)))

(declare-fun c!12209 () Bool)

(assert (=> d!18863 (= c!12209 (bvsge (x!11547 lt!36177) #b01111111111111111111111111111110))))

(assert (=> d!18863 (= lt!36685 (select (arr!1895 (_keys!3932 newMap!16)) (index!3096 lt!36177)))))

(assert (=> d!18863 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18863 (= (seekKeyOrZeroReturnVacant!0 (x!11547 lt!36177) (index!3096 lt!36177) (index!3096 lt!36177) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)) lt!36684)))

(declare-fun b!79035 () Bool)

(assert (=> b!79035 (= e!51627 (MissingVacant!240 (index!3096 lt!36177)))))

(assert (= (and d!18863 c!12209) b!79036))

(assert (= (and d!18863 (not c!12209)) b!79032))

(assert (= (and b!79032 c!12208) b!79037))

(assert (= (and b!79032 (not c!12208)) b!79033))

(assert (= (and b!79033 c!12210) b!79035))

(assert (= (and b!79033 (not c!12210)) b!79034))

(declare-fun m!79787 () Bool)

(assert (=> b!79034 m!79787))

(assert (=> b!79034 m!79787))

(assert (=> b!79034 m!77965))

(declare-fun m!79789 () Bool)

(assert (=> b!79034 m!79789))

(declare-fun m!79791 () Bool)

(assert (=> d!18863 m!79791))

(declare-fun m!79793 () Bool)

(assert (=> d!18863 m!79793))

(assert (=> d!18863 m!78423))

(assert (=> d!18863 m!78411))

(assert (=> b!78254 d!18863))

(assert (=> d!18621 d!18765))

(declare-fun d!18865 () Bool)

(declare-fun e!51629 () Bool)

(assert (=> d!18865 e!51629))

(declare-fun res!41317 () Bool)

(assert (=> d!18865 (=> res!41317 e!51629)))

(declare-fun lt!36689 () Bool)

(assert (=> d!18865 (= res!41317 (not lt!36689))))

(declare-fun lt!36686 () Bool)

(assert (=> d!18865 (= lt!36689 lt!36686)))

(declare-fun lt!36687 () Unit!2257)

(declare-fun e!51630 () Unit!2257)

(assert (=> d!18865 (= lt!36687 e!51630)))

(declare-fun c!12211 () Bool)

(assert (=> d!18865 (= c!12211 lt!36686)))

(assert (=> d!18865 (= lt!36686 (containsKey!141 (toList!739 lt!36184) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18865 (= (contains!742 lt!36184 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36689)))

(declare-fun b!79038 () Bool)

(declare-fun lt!36688 () Unit!2257)

(assert (=> b!79038 (= e!51630 lt!36688)))

(assert (=> b!79038 (= lt!36688 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36184) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> b!79038 (isDefined!90 (getValueByKey!137 (toList!739 lt!36184) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79039 () Bool)

(declare-fun Unit!2295 () Unit!2257)

(assert (=> b!79039 (= e!51630 Unit!2295)))

(declare-fun b!79040 () Bool)

(assert (=> b!79040 (= e!51629 (isDefined!90 (getValueByKey!137 (toList!739 lt!36184) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!18865 c!12211) b!79038))

(assert (= (and d!18865 (not c!12211)) b!79039))

(assert (= (and d!18865 (not res!41317)) b!79040))

(declare-fun m!79795 () Bool)

(assert (=> d!18865 m!79795))

(declare-fun m!79797 () Bool)

(assert (=> b!79038 m!79797))

(assert (=> b!79038 m!78441))

(assert (=> b!79038 m!78441))

(declare-fun m!79799 () Bool)

(assert (=> b!79038 m!79799))

(assert (=> b!79040 m!78441))

(assert (=> b!79040 m!78441))

(assert (=> b!79040 m!79799))

(assert (=> d!18493 d!18865))

(declare-fun b!79044 () Bool)

(declare-fun e!51632 () Option!143)

(assert (=> b!79044 (= e!51632 None!141)))

(declare-fun d!18867 () Bool)

(declare-fun c!12212 () Bool)

(assert (=> d!18867 (= c!12212 (and ((_ is Cons!1503) lt!36183) (= (_1!1097 (h!2091 lt!36183)) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51631 () Option!143)

(assert (=> d!18867 (= (getValueByKey!137 lt!36183 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!51631)))

(declare-fun b!79043 () Bool)

(assert (=> b!79043 (= e!51632 (getValueByKey!137 (t!5153 lt!36183) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79041 () Bool)

(assert (=> b!79041 (= e!51631 (Some!142 (_2!1097 (h!2091 lt!36183))))))

(declare-fun b!79042 () Bool)

(assert (=> b!79042 (= e!51631 e!51632)))

(declare-fun c!12213 () Bool)

(assert (=> b!79042 (= c!12213 (and ((_ is Cons!1503) lt!36183) (not (= (_1!1097 (h!2091 lt!36183)) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!18867 c!12212) b!79041))

(assert (= (and d!18867 (not c!12212)) b!79042))

(assert (= (and b!79042 c!12213) b!79043))

(assert (= (and b!79042 (not c!12213)) b!79044))

(declare-fun m!79801 () Bool)

(assert (=> b!79043 m!79801))

(assert (=> d!18493 d!18867))

(declare-fun d!18869 () Bool)

(assert (=> d!18869 (= (getValueByKey!137 lt!36183 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36690 () Unit!2257)

(assert (=> d!18869 (= lt!36690 (choose!456 lt!36183 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!51633 () Bool)

(assert (=> d!18869 e!51633))

(declare-fun res!41318 () Bool)

(assert (=> d!18869 (=> (not res!41318) (not e!51633))))

(assert (=> d!18869 (= res!41318 (isStrictlySorted!295 lt!36183))))

(assert (=> d!18869 (= (lemmaContainsTupThenGetReturnValue!54 lt!36183 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36690)))

(declare-fun b!79045 () Bool)

(declare-fun res!41319 () Bool)

(assert (=> b!79045 (=> (not res!41319) (not e!51633))))

(assert (=> b!79045 (= res!41319 (containsKey!141 lt!36183 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79046 () Bool)

(assert (=> b!79046 (= e!51633 (contains!743 lt!36183 (tuple2!2173 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!18869 res!41318) b!79045))

(assert (= (and b!79045 res!41319) b!79046))

(assert (=> d!18869 m!78435))

(declare-fun m!79803 () Bool)

(assert (=> d!18869 m!79803))

(declare-fun m!79805 () Bool)

(assert (=> d!18869 m!79805))

(declare-fun m!79807 () Bool)

(assert (=> b!79045 m!79807))

(declare-fun m!79809 () Bool)

(assert (=> b!79046 m!79809))

(assert (=> d!18493 d!18869))

(declare-fun b!79047 () Bool)

(declare-fun e!51634 () List!1507)

(declare-fun c!12216 () Bool)

(declare-fun c!12217 () Bool)

(assert (=> b!79047 (= e!51634 (ite c!12217 (t!5153 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (ite c!12216 (Cons!1503 (h!2091 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (t!5153 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))) Nil!1504)))))

(declare-fun b!79048 () Bool)

(declare-fun e!51638 () List!1507)

(declare-fun call!7288 () List!1507)

(assert (=> b!79048 (= e!51638 call!7288)))

(declare-fun bm!7283 () Bool)

(declare-fun call!7286 () List!1507)

(declare-fun call!7287 () List!1507)

(assert (=> bm!7283 (= call!7286 call!7287)))

(declare-fun b!79049 () Bool)

(assert (=> b!79049 (= c!12216 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (bvsgt (_1!1097 (h!2091 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51636 () List!1507)

(declare-fun e!51635 () List!1507)

(assert (=> b!79049 (= e!51636 e!51635)))

(declare-fun b!79050 () Bool)

(assert (=> b!79050 (= e!51634 (insertStrictlySorted!57 (t!5153 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79051 () Bool)

(declare-fun res!41321 () Bool)

(declare-fun e!51637 () Bool)

(assert (=> b!79051 (=> (not res!41321) (not e!51637))))

(declare-fun lt!36691 () List!1507)

(assert (=> b!79051 (= res!41321 (containsKey!141 lt!36691 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun bm!7284 () Bool)

(declare-fun c!12214 () Bool)

(assert (=> bm!7284 (= call!7288 ($colon$colon!69 e!51634 (ite c!12214 (h!2091 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (tuple2!2173 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun c!12215 () Bool)

(assert (=> bm!7284 (= c!12215 c!12214)))

(declare-fun b!79052 () Bool)

(assert (=> b!79052 (= e!51638 e!51636)))

(assert (=> b!79052 (= c!12217 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79054 () Bool)

(assert (=> b!79054 (= e!51636 call!7287)))

(declare-fun b!79055 () Bool)

(assert (=> b!79055 (= e!51637 (contains!743 lt!36691 (tuple2!2173 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79053 () Bool)

(assert (=> b!79053 (= e!51635 call!7286)))

(declare-fun d!18871 () Bool)

(assert (=> d!18871 e!51637))

(declare-fun res!41320 () Bool)

(assert (=> d!18871 (=> (not res!41320) (not e!51637))))

(assert (=> d!18871 (= res!41320 (isStrictlySorted!295 lt!36691))))

(assert (=> d!18871 (= lt!36691 e!51638)))

(assert (=> d!18871 (= c!12214 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (bvslt (_1!1097 (h!2091 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!18871 (isStrictlySorted!295 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!18871 (= (insertStrictlySorted!57 (toList!739 (+!105 lt!35868 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36691)))

(declare-fun bm!7285 () Bool)

(assert (=> bm!7285 (= call!7287 call!7288)))

(declare-fun b!79056 () Bool)

(assert (=> b!79056 (= e!51635 call!7286)))

(assert (= (and d!18871 c!12214) b!79048))

(assert (= (and d!18871 (not c!12214)) b!79052))

(assert (= (and b!79052 c!12217) b!79054))

(assert (= (and b!79052 (not c!12217)) b!79049))

(assert (= (and b!79049 c!12216) b!79053))

(assert (= (and b!79049 (not c!12216)) b!79056))

(assert (= (or b!79053 b!79056) bm!7283))

(assert (= (or b!79054 bm!7283) bm!7285))

(assert (= (or b!79048 bm!7285) bm!7284))

(assert (= (and bm!7284 c!12215) b!79050))

(assert (= (and bm!7284 (not c!12215)) b!79047))

(assert (= (and d!18871 res!41320) b!79051))

(assert (= (and b!79051 res!41321) b!79055))

(declare-fun m!79811 () Bool)

(assert (=> b!79055 m!79811))

(declare-fun m!79813 () Bool)

(assert (=> d!18871 m!79813))

(declare-fun m!79815 () Bool)

(assert (=> d!18871 m!79815))

(declare-fun m!79817 () Bool)

(assert (=> b!79050 m!79817))

(declare-fun m!79819 () Bool)

(assert (=> b!79051 m!79819))

(declare-fun m!79821 () Bool)

(assert (=> bm!7284 m!79821))

(assert (=> d!18493 d!18871))

(assert (=> b!78526 d!18861))

(declare-fun d!18873 () Bool)

(declare-fun res!41322 () Bool)

(declare-fun e!51639 () Bool)

(assert (=> d!18873 (=> res!41322 e!51639)))

(assert (=> d!18873 (= res!41322 (or ((_ is Nil!1504) lt!36241) ((_ is Nil!1504) (t!5153 lt!36241))))))

(assert (=> d!18873 (= (isStrictlySorted!295 lt!36241) e!51639)))

(declare-fun b!79057 () Bool)

(declare-fun e!51640 () Bool)

(assert (=> b!79057 (= e!51639 e!51640)))

(declare-fun res!41323 () Bool)

(assert (=> b!79057 (=> (not res!41323) (not e!51640))))

(assert (=> b!79057 (= res!41323 (bvslt (_1!1097 (h!2091 lt!36241)) (_1!1097 (h!2091 (t!5153 lt!36241)))))))

(declare-fun b!79058 () Bool)

(assert (=> b!79058 (= e!51640 (isStrictlySorted!295 (t!5153 lt!36241)))))

(assert (= (and d!18873 (not res!41322)) b!79057))

(assert (= (and b!79057 res!41323) b!79058))

(declare-fun m!79823 () Bool)

(assert (=> b!79058 m!79823))

(assert (=> d!18539 d!18873))

(declare-fun d!18875 () Bool)

(declare-fun res!41324 () Bool)

(declare-fun e!51641 () Bool)

(assert (=> d!18875 (=> res!41324 e!51641)))

(assert (=> d!18875 (= res!41324 (or ((_ is Nil!1504) (toList!739 lt!35868)) ((_ is Nil!1504) (t!5153 (toList!739 lt!35868)))))))

(assert (=> d!18875 (= (isStrictlySorted!295 (toList!739 lt!35868)) e!51641)))

(declare-fun b!79059 () Bool)

(declare-fun e!51642 () Bool)

(assert (=> b!79059 (= e!51641 e!51642)))

(declare-fun res!41325 () Bool)

(assert (=> b!79059 (=> (not res!41325) (not e!51642))))

(assert (=> b!79059 (= res!41325 (bvslt (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 (h!2091 (t!5153 (toList!739 lt!35868))))))))

(declare-fun b!79060 () Bool)

(assert (=> b!79060 (= e!51642 (isStrictlySorted!295 (t!5153 (toList!739 lt!35868))))))

(assert (= (and d!18875 (not res!41324)) b!79059))

(assert (= (and b!79059 res!41325) b!79060))

(declare-fun m!79825 () Bool)

(assert (=> b!79060 m!79825))

(assert (=> d!18539 d!18875))

(assert (=> b!78725 d!18605))

(assert (=> b!78277 d!18861))

(declare-fun d!18877 () Bool)

(assert (=> d!18877 (isDefined!90 (getValueByKey!137 (toList!739 lt!36000) (_1!1097 lt!35870)))))

(declare-fun lt!36692 () Unit!2257)

(assert (=> d!18877 (= lt!36692 (choose!465 (toList!739 lt!36000) (_1!1097 lt!35870)))))

(declare-fun e!51643 () Bool)

(assert (=> d!18877 e!51643))

(declare-fun res!41326 () Bool)

(assert (=> d!18877 (=> (not res!41326) (not e!51643))))

(assert (=> d!18877 (= res!41326 (isStrictlySorted!295 (toList!739 lt!36000)))))

(assert (=> d!18877 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36000) (_1!1097 lt!35870)) lt!36692)))

(declare-fun b!79061 () Bool)

(assert (=> b!79061 (= e!51643 (containsKey!141 (toList!739 lt!36000) (_1!1097 lt!35870)))))

(assert (= (and d!18877 res!41326) b!79061))

(assert (=> d!18877 m!78153))

(assert (=> d!18877 m!78153))

(assert (=> d!18877 m!78953))

(declare-fun m!79827 () Bool)

(assert (=> d!18877 m!79827))

(declare-fun m!79829 () Bool)

(assert (=> d!18877 m!79829))

(assert (=> b!79061 m!78949))

(assert (=> b!78549 d!18877))

(declare-fun d!18879 () Bool)

(assert (=> d!18879 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!36000) (_1!1097 lt!35870))) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!36000) (_1!1097 lt!35870)))))))

(declare-fun bs!3344 () Bool)

(assert (= bs!3344 d!18879))

(assert (=> bs!3344 m!78153))

(declare-fun m!79831 () Bool)

(assert (=> bs!3344 m!79831))

(assert (=> b!78549 d!18879))

(assert (=> b!78549 d!18541))

(declare-fun d!18881 () Bool)

(declare-fun e!51644 () Bool)

(assert (=> d!18881 e!51644))

(declare-fun res!41327 () Bool)

(assert (=> d!18881 (=> res!41327 e!51644)))

(declare-fun lt!36696 () Bool)

(assert (=> d!18881 (= res!41327 (not lt!36696))))

(declare-fun lt!36693 () Bool)

(assert (=> d!18881 (= lt!36696 lt!36693)))

(declare-fun lt!36694 () Unit!2257)

(declare-fun e!51645 () Unit!2257)

(assert (=> d!18881 (= lt!36694 e!51645)))

(declare-fun c!12218 () Bool)

(assert (=> d!18881 (= c!12218 lt!36693)))

(assert (=> d!18881 (= lt!36693 (containsKey!141 (toList!739 lt!36337) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18881 (= (contains!742 lt!36337 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36696)))

(declare-fun b!79062 () Bool)

(declare-fun lt!36695 () Unit!2257)

(assert (=> b!79062 (= e!51645 lt!36695)))

(assert (=> b!79062 (= lt!36695 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36337) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79062 (isDefined!90 (getValueByKey!137 (toList!739 lt!36337) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79063 () Bool)

(declare-fun Unit!2296 () Unit!2257)

(assert (=> b!79063 (= e!51645 Unit!2296)))

(declare-fun b!79064 () Bool)

(assert (=> b!79064 (= e!51644 (isDefined!90 (getValueByKey!137 (toList!739 lt!36337) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18881 c!12218) b!79062))

(assert (= (and d!18881 (not c!12218)) b!79063))

(assert (= (and d!18881 (not res!41327)) b!79064))

(declare-fun m!79833 () Bool)

(assert (=> d!18881 m!79833))

(declare-fun m!79835 () Bool)

(assert (=> b!79062 m!79835))

(declare-fun m!79837 () Bool)

(assert (=> b!79062 m!79837))

(assert (=> b!79062 m!79837))

(declare-fun m!79839 () Bool)

(assert (=> b!79062 m!79839))

(assert (=> b!79064 m!79837))

(assert (=> b!79064 m!79837))

(assert (=> b!79064 m!79839))

(assert (=> bm!7214 d!18881))

(declare-fun d!18883 () Bool)

(declare-fun e!51646 () Bool)

(assert (=> d!18883 e!51646))

(declare-fun res!41328 () Bool)

(assert (=> d!18883 (=> res!41328 e!51646)))

(declare-fun lt!36700 () Bool)

(assert (=> d!18883 (= res!41328 (not lt!36700))))

(declare-fun lt!36697 () Bool)

(assert (=> d!18883 (= lt!36700 lt!36697)))

(declare-fun lt!36698 () Unit!2257)

(declare-fun e!51647 () Unit!2257)

(assert (=> d!18883 (= lt!36698 e!51647)))

(declare-fun c!12219 () Bool)

(assert (=> d!18883 (= c!12219 lt!36697)))

(assert (=> d!18883 (= lt!36697 (containsKey!141 (toList!739 lt!36188) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!18883 (= (contains!742 lt!36188 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36700)))

(declare-fun b!79065 () Bool)

(declare-fun lt!36699 () Unit!2257)

(assert (=> b!79065 (= e!51647 lt!36699)))

(assert (=> b!79065 (= lt!36699 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36188) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> b!79065 (isDefined!90 (getValueByKey!137 (toList!739 lt!36188) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79066 () Bool)

(declare-fun Unit!2297 () Unit!2257)

(assert (=> b!79066 (= e!51647 Unit!2297)))

(declare-fun b!79067 () Bool)

(assert (=> b!79067 (= e!51646 (isDefined!90 (getValueByKey!137 (toList!739 lt!36188) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!18883 c!12219) b!79065))

(assert (= (and d!18883 (not c!12219)) b!79066))

(assert (= (and d!18883 (not res!41328)) b!79067))

(declare-fun m!79841 () Bool)

(assert (=> d!18883 m!79841))

(declare-fun m!79843 () Bool)

(assert (=> b!79065 m!79843))

(assert (=> b!79065 m!78453))

(assert (=> b!79065 m!78453))

(declare-fun m!79845 () Bool)

(assert (=> b!79065 m!79845))

(assert (=> b!79067 m!78453))

(assert (=> b!79067 m!78453))

(assert (=> b!79067 m!79845))

(assert (=> d!18497 d!18883))

(declare-fun b!79071 () Bool)

(declare-fun e!51649 () Option!143)

(assert (=> b!79071 (= e!51649 None!141)))

(declare-fun d!18885 () Bool)

(declare-fun c!12220 () Bool)

(assert (=> d!18885 (= c!12220 (and ((_ is Cons!1503) lt!36187) (= (_1!1097 (h!2091 lt!36187)) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51648 () Option!143)

(assert (=> d!18885 (= (getValueByKey!137 lt!36187 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!51648)))

(declare-fun b!79070 () Bool)

(assert (=> b!79070 (= e!51649 (getValueByKey!137 (t!5153 lt!36187) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79068 () Bool)

(assert (=> b!79068 (= e!51648 (Some!142 (_2!1097 (h!2091 lt!36187))))))

(declare-fun b!79069 () Bool)

(assert (=> b!79069 (= e!51648 e!51649)))

(declare-fun c!12221 () Bool)

(assert (=> b!79069 (= c!12221 (and ((_ is Cons!1503) lt!36187) (not (= (_1!1097 (h!2091 lt!36187)) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!18885 c!12220) b!79068))

(assert (= (and d!18885 (not c!12220)) b!79069))

(assert (= (and b!79069 c!12221) b!79070))

(assert (= (and b!79069 (not c!12221)) b!79071))

(declare-fun m!79847 () Bool)

(assert (=> b!79070 m!79847))

(assert (=> d!18497 d!18885))

(declare-fun d!18887 () Bool)

(assert (=> d!18887 (= (getValueByKey!137 lt!36187 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36701 () Unit!2257)

(assert (=> d!18887 (= lt!36701 (choose!456 lt!36187 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!51650 () Bool)

(assert (=> d!18887 e!51650))

(declare-fun res!41329 () Bool)

(assert (=> d!18887 (=> (not res!41329) (not e!51650))))

(assert (=> d!18887 (= res!41329 (isStrictlySorted!295 lt!36187))))

(assert (=> d!18887 (= (lemmaContainsTupThenGetReturnValue!54 lt!36187 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36701)))

(declare-fun b!79072 () Bool)

(declare-fun res!41330 () Bool)

(assert (=> b!79072 (=> (not res!41330) (not e!51650))))

(assert (=> b!79072 (= res!41330 (containsKey!141 lt!36187 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79073 () Bool)

(assert (=> b!79073 (= e!51650 (contains!743 lt!36187 (tuple2!2173 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!18887 res!41329) b!79072))

(assert (= (and b!79072 res!41330) b!79073))

(assert (=> d!18887 m!78447))

(declare-fun m!79849 () Bool)

(assert (=> d!18887 m!79849))

(declare-fun m!79851 () Bool)

(assert (=> d!18887 m!79851))

(declare-fun m!79853 () Bool)

(assert (=> b!79072 m!79853))

(declare-fun m!79855 () Bool)

(assert (=> b!79073 m!79855))

(assert (=> d!18497 d!18887))

(declare-fun c!12224 () Bool)

(declare-fun b!79074 () Bool)

(declare-fun e!51651 () List!1507)

(declare-fun c!12225 () Bool)

(assert (=> b!79074 (= e!51651 (ite c!12225 (t!5153 (toList!739 lt!35868)) (ite c!12224 (Cons!1503 (h!2091 (toList!739 lt!35868)) (t!5153 (toList!739 lt!35868))) Nil!1504)))))

(declare-fun b!79075 () Bool)

(declare-fun e!51655 () List!1507)

(declare-fun call!7291 () List!1507)

(assert (=> b!79075 (= e!51655 call!7291)))

(declare-fun bm!7286 () Bool)

(declare-fun call!7289 () List!1507)

(declare-fun call!7290 () List!1507)

(assert (=> bm!7286 (= call!7289 call!7290)))

(declare-fun b!79076 () Bool)

(assert (=> b!79076 (= c!12224 (and ((_ is Cons!1503) (toList!739 lt!35868)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51653 () List!1507)

(declare-fun e!51652 () List!1507)

(assert (=> b!79076 (= e!51653 e!51652)))

(declare-fun b!79077 () Bool)

(assert (=> b!79077 (= e!51651 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35868)) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79078 () Bool)

(declare-fun res!41332 () Bool)

(declare-fun e!51654 () Bool)

(assert (=> b!79078 (=> (not res!41332) (not e!51654))))

(declare-fun lt!36702 () List!1507)

(assert (=> b!79078 (= res!41332 (containsKey!141 lt!36702 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun bm!7287 () Bool)

(declare-fun c!12222 () Bool)

(assert (=> bm!7287 (= call!7291 ($colon$colon!69 e!51651 (ite c!12222 (h!2091 (toList!739 lt!35868)) (tuple2!2173 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun c!12223 () Bool)

(assert (=> bm!7287 (= c!12223 c!12222)))

(declare-fun b!79079 () Bool)

(assert (=> b!79079 (= e!51655 e!51653)))

(assert (=> b!79079 (= c!12225 (and ((_ is Cons!1503) (toList!739 lt!35868)) (= (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79081 () Bool)

(assert (=> b!79081 (= e!51653 call!7290)))

(declare-fun b!79082 () Bool)

(assert (=> b!79082 (= e!51654 (contains!743 lt!36702 (tuple2!2173 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79080 () Bool)

(assert (=> b!79080 (= e!51652 call!7289)))

(declare-fun d!18889 () Bool)

(assert (=> d!18889 e!51654))

(declare-fun res!41331 () Bool)

(assert (=> d!18889 (=> (not res!41331) (not e!51654))))

(assert (=> d!18889 (= res!41331 (isStrictlySorted!295 lt!36702))))

(assert (=> d!18889 (= lt!36702 e!51655)))

(assert (=> d!18889 (= c!12222 (and ((_ is Cons!1503) (toList!739 lt!35868)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!18889 (isStrictlySorted!295 (toList!739 lt!35868))))

(assert (=> d!18889 (= (insertStrictlySorted!57 (toList!739 lt!35868) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36702)))

(declare-fun bm!7288 () Bool)

(assert (=> bm!7288 (= call!7290 call!7291)))

(declare-fun b!79083 () Bool)

(assert (=> b!79083 (= e!51652 call!7289)))

(assert (= (and d!18889 c!12222) b!79075))

(assert (= (and d!18889 (not c!12222)) b!79079))

(assert (= (and b!79079 c!12225) b!79081))

(assert (= (and b!79079 (not c!12225)) b!79076))

(assert (= (and b!79076 c!12224) b!79080))

(assert (= (and b!79076 (not c!12224)) b!79083))

(assert (= (or b!79080 b!79083) bm!7286))

(assert (= (or b!79081 bm!7286) bm!7288))

(assert (= (or b!79075 bm!7288) bm!7287))

(assert (= (and bm!7287 c!12223) b!79077))

(assert (= (and bm!7287 (not c!12223)) b!79074))

(assert (= (and d!18889 res!41331) b!79078))

(assert (= (and b!79078 res!41332) b!79082))

(declare-fun m!79857 () Bool)

(assert (=> b!79082 m!79857))

(declare-fun m!79859 () Bool)

(assert (=> d!18889 m!79859))

(assert (=> d!18889 m!78611))

(declare-fun m!79861 () Bool)

(assert (=> b!79077 m!79861))

(declare-fun m!79863 () Bool)

(assert (=> b!79078 m!79863))

(declare-fun m!79865 () Bool)

(assert (=> bm!7287 m!79865))

(assert (=> d!18497 d!18889))

(declare-fun d!18891 () Bool)

(assert (not d!18891))

(assert (=> b!78785 d!18891))

(declare-fun d!18893 () Bool)

(assert (=> d!18893 (isDefined!90 (getValueByKey!137 (toList!739 lt!36033) (_1!1097 lt!35864)))))

(declare-fun lt!36703 () Unit!2257)

(assert (=> d!18893 (= lt!36703 (choose!465 (toList!739 lt!36033) (_1!1097 lt!35864)))))

(declare-fun e!51656 () Bool)

(assert (=> d!18893 e!51656))

(declare-fun res!41333 () Bool)

(assert (=> d!18893 (=> (not res!41333) (not e!51656))))

(assert (=> d!18893 (= res!41333 (isStrictlySorted!295 (toList!739 lt!36033)))))

(assert (=> d!18893 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36033) (_1!1097 lt!35864)) lt!36703)))

(declare-fun b!79084 () Bool)

(assert (=> b!79084 (= e!51656 (containsKey!141 (toList!739 lt!36033) (_1!1097 lt!35864)))))

(assert (= (and d!18893 res!41333) b!79084))

(assert (=> d!18893 m!78209))

(assert (=> d!18893 m!78209))

(assert (=> d!18893 m!78663))

(declare-fun m!79867 () Bool)

(assert (=> d!18893 m!79867))

(declare-fun m!79869 () Bool)

(assert (=> d!18893 m!79869))

(assert (=> b!79084 m!78659))

(assert (=> b!78402 d!18893))

(declare-fun d!18895 () Bool)

(assert (=> d!18895 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!36033) (_1!1097 lt!35864))) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!36033) (_1!1097 lt!35864)))))))

(declare-fun bs!3345 () Bool)

(assert (= bs!3345 d!18895))

(assert (=> bs!3345 m!78209))

(declare-fun m!79871 () Bool)

(assert (=> bs!3345 m!79871))

(assert (=> b!78402 d!18895))

(assert (=> b!78402 d!18625))

(declare-fun d!18897 () Bool)

(assert (=> d!18897 (arrayContainsKey!0 (_keys!3932 newMap!16) lt!36351 #b00000000000000000000000000000000)))

(declare-fun lt!36706 () Unit!2257)

(declare-fun choose!13 (array!3975 (_ BitVec 64) (_ BitVec 32)) Unit!2257)

(assert (=> d!18897 (= lt!36706 (choose!13 (_keys!3932 newMap!16) lt!36351 #b00000000000000000000000000000000))))

(assert (=> d!18897 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!18897 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3932 newMap!16) lt!36351 #b00000000000000000000000000000000) lt!36706)))

(declare-fun bs!3346 () Bool)

(assert (= bs!3346 d!18897))

(assert (=> bs!3346 m!78929))

(declare-fun m!79873 () Bool)

(assert (=> bs!3346 m!79873))

(assert (=> b!78539 d!18897))

(declare-fun d!18899 () Bool)

(declare-fun res!41334 () Bool)

(declare-fun e!51657 () Bool)

(assert (=> d!18899 (=> res!41334 e!51657)))

(assert (=> d!18899 (= res!41334 (= (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) lt!36351))))

(assert (=> d!18899 (= (arrayContainsKey!0 (_keys!3932 newMap!16) lt!36351 #b00000000000000000000000000000000) e!51657)))

(declare-fun b!79085 () Bool)

(declare-fun e!51658 () Bool)

(assert (=> b!79085 (= e!51657 e!51658)))

(declare-fun res!41335 () Bool)

(assert (=> b!79085 (=> (not res!41335) (not e!51658))))

(assert (=> b!79085 (= res!41335 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!79086 () Bool)

(assert (=> b!79086 (= e!51658 (arrayContainsKey!0 (_keys!3932 newMap!16) lt!36351 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!18899 (not res!41334)) b!79085))

(assert (= (and b!79085 res!41335) b!79086))

(assert (=> d!18899 m!78509))

(declare-fun m!79875 () Bool)

(assert (=> b!79086 m!79875))

(assert (=> b!78539 d!18899))

(declare-fun b!79087 () Bool)

(declare-fun c!12226 () Bool)

(declare-fun lt!36709 () (_ BitVec 64))

(assert (=> b!79087 (= c!12226 (= lt!36709 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51661 () SeekEntryResult!240)

(declare-fun e!51659 () SeekEntryResult!240)

(assert (=> b!79087 (= e!51661 e!51659)))

(declare-fun d!18901 () Bool)

(declare-fun lt!36707 () SeekEntryResult!240)

(assert (=> d!18901 (and (or ((_ is Undefined!240) lt!36707) (not ((_ is Found!240) lt!36707)) (and (bvsge (index!3095 lt!36707) #b00000000000000000000000000000000) (bvslt (index!3095 lt!36707) (size!2136 (_keys!3932 newMap!16))))) (or ((_ is Undefined!240) lt!36707) ((_ is Found!240) lt!36707) (not ((_ is MissingZero!240) lt!36707)) (and (bvsge (index!3094 lt!36707) #b00000000000000000000000000000000) (bvslt (index!3094 lt!36707) (size!2136 (_keys!3932 newMap!16))))) (or ((_ is Undefined!240) lt!36707) ((_ is Found!240) lt!36707) ((_ is MissingZero!240) lt!36707) (not ((_ is MissingVacant!240) lt!36707)) (and (bvsge (index!3097 lt!36707) #b00000000000000000000000000000000) (bvslt (index!3097 lt!36707) (size!2136 (_keys!3932 newMap!16))))) (or ((_ is Undefined!240) lt!36707) (ite ((_ is Found!240) lt!36707) (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36707)) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!240) lt!36707) (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3094 lt!36707)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!240) lt!36707) (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3097 lt!36707)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!51660 () SeekEntryResult!240)

(assert (=> d!18901 (= lt!36707 e!51660)))

(declare-fun c!12228 () Bool)

(declare-fun lt!36708 () SeekEntryResult!240)

(assert (=> d!18901 (= c!12228 (and ((_ is Intermediate!240) lt!36708) (undefined!1052 lt!36708)))))

(assert (=> d!18901 (= lt!36708 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (mask!6268 newMap!16)) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(assert (=> d!18901 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18901 (= (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (_keys!3932 newMap!16) (mask!6268 newMap!16)) lt!36707)))

(declare-fun b!79088 () Bool)

(assert (=> b!79088 (= e!51660 Undefined!240)))

(declare-fun b!79089 () Bool)

(assert (=> b!79089 (= e!51659 (seekKeyOrZeroReturnVacant!0 (x!11547 lt!36708) (index!3096 lt!36708) (index!3096 lt!36708) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!79090 () Bool)

(assert (=> b!79090 (= e!51659 (MissingZero!240 (index!3096 lt!36708)))))

(declare-fun b!79091 () Bool)

(assert (=> b!79091 (= e!51660 e!51661)))

(assert (=> b!79091 (= lt!36709 (select (arr!1895 (_keys!3932 newMap!16)) (index!3096 lt!36708)))))

(declare-fun c!12227 () Bool)

(assert (=> b!79091 (= c!12227 (= lt!36709 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79092 () Bool)

(assert (=> b!79092 (= e!51661 (Found!240 (index!3096 lt!36708)))))

(assert (= (and d!18901 c!12228) b!79088))

(assert (= (and d!18901 (not c!12228)) b!79091))

(assert (= (and b!79091 c!12227) b!79092))

(assert (= (and b!79091 (not c!12227)) b!79087))

(assert (= (and b!79087 c!12226) b!79090))

(assert (= (and b!79087 (not c!12226)) b!79089))

(declare-fun m!79877 () Bool)

(assert (=> d!18901 m!79877))

(assert (=> d!18901 m!78411))

(assert (=> d!18901 m!78509))

(declare-fun m!79879 () Bool)

(assert (=> d!18901 m!79879))

(assert (=> d!18901 m!79879))

(assert (=> d!18901 m!78509))

(declare-fun m!79881 () Bool)

(assert (=> d!18901 m!79881))

(declare-fun m!79883 () Bool)

(assert (=> d!18901 m!79883))

(declare-fun m!79885 () Bool)

(assert (=> d!18901 m!79885))

(assert (=> b!79089 m!78509))

(declare-fun m!79887 () Bool)

(assert (=> b!79089 m!79887))

(declare-fun m!79889 () Bool)

(assert (=> b!79091 m!79889))

(assert (=> b!78539 d!18901))

(declare-fun d!18903 () Bool)

(declare-fun e!51662 () Bool)

(assert (=> d!18903 e!51662))

(declare-fun res!41336 () Bool)

(assert (=> d!18903 (=> res!41336 e!51662)))

(declare-fun lt!36713 () Bool)

(assert (=> d!18903 (= res!41336 (not lt!36713))))

(declare-fun lt!36710 () Bool)

(assert (=> d!18903 (= lt!36713 lt!36710)))

(declare-fun lt!36711 () Unit!2257)

(declare-fun e!51663 () Unit!2257)

(assert (=> d!18903 (= lt!36711 e!51663)))

(declare-fun c!12229 () Bool)

(assert (=> d!18903 (= c!12229 lt!36710)))

(assert (=> d!18903 (= lt!36710 (containsKey!141 (toList!739 lt!36213) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!18903 (= (contains!742 lt!36213 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) lt!36713)))

(declare-fun b!79093 () Bool)

(declare-fun lt!36712 () Unit!2257)

(assert (=> b!79093 (= e!51663 lt!36712)))

(assert (=> b!79093 (= lt!36712 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36213) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79093 (isDefined!90 (getValueByKey!137 (toList!739 lt!36213) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79094 () Bool)

(declare-fun Unit!2298 () Unit!2257)

(assert (=> b!79094 (= e!51663 Unit!2298)))

(declare-fun b!79095 () Bool)

(assert (=> b!79095 (= e!51662 (isDefined!90 (getValueByKey!137 (toList!739 lt!36213) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!18903 c!12229) b!79093))

(assert (= (and d!18903 (not c!12229)) b!79094))

(assert (= (and d!18903 (not res!41336)) b!79095))

(assert (=> d!18903 m!78509))

(declare-fun m!79891 () Bool)

(assert (=> d!18903 m!79891))

(assert (=> b!79093 m!78509))

(declare-fun m!79893 () Bool)

(assert (=> b!79093 m!79893))

(assert (=> b!79093 m!78509))

(declare-fun m!79895 () Bool)

(assert (=> b!79093 m!79895))

(assert (=> b!79093 m!79895))

(declare-fun m!79897 () Bool)

(assert (=> b!79093 m!79897))

(assert (=> b!79095 m!78509))

(assert (=> b!79095 m!79895))

(assert (=> b!79095 m!79895))

(assert (=> b!79095 m!79897))

(assert (=> b!78289 d!18903))

(declare-fun b!79099 () Bool)

(declare-fun e!51665 () Option!143)

(assert (=> b!79099 (= e!51665 None!141)))

(declare-fun d!18905 () Bool)

(declare-fun c!12230 () Bool)

(assert (=> d!18905 (= c!12230 (and ((_ is Cons!1503) (t!5153 lt!35999)) (= (_1!1097 (h!2091 (t!5153 lt!35999))) (_1!1097 lt!35870))))))

(declare-fun e!51664 () Option!143)

(assert (=> d!18905 (= (getValueByKey!137 (t!5153 lt!35999) (_1!1097 lt!35870)) e!51664)))

(declare-fun b!79098 () Bool)

(assert (=> b!79098 (= e!51665 (getValueByKey!137 (t!5153 (t!5153 lt!35999)) (_1!1097 lt!35870)))))

(declare-fun b!79096 () Bool)

(assert (=> b!79096 (= e!51664 (Some!142 (_2!1097 (h!2091 (t!5153 lt!35999)))))))

(declare-fun b!79097 () Bool)

(assert (=> b!79097 (= e!51664 e!51665)))

(declare-fun c!12231 () Bool)

(assert (=> b!79097 (= c!12231 (and ((_ is Cons!1503) (t!5153 lt!35999)) (not (= (_1!1097 (h!2091 (t!5153 lt!35999))) (_1!1097 lt!35870)))))))

(assert (= (and d!18905 c!12230) b!79096))

(assert (= (and d!18905 (not c!12230)) b!79097))

(assert (= (and b!79097 c!12231) b!79098))

(assert (= (and b!79097 (not c!12231)) b!79099))

(declare-fun m!79899 () Bool)

(assert (=> b!79098 m!79899))

(assert (=> b!78554 d!18905))

(declare-fun lt!36714 () Bool)

(declare-fun d!18907 () Bool)

(assert (=> d!18907 (= lt!36714 (select (content!83 (toList!739 lt!36294)) (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!51667 () Bool)

(assert (=> d!18907 (= lt!36714 e!51667)))

(declare-fun res!41337 () Bool)

(assert (=> d!18907 (=> (not res!41337) (not e!51667))))

(assert (=> d!18907 (= res!41337 ((_ is Cons!1503) (toList!739 lt!36294)))))

(assert (=> d!18907 (= (contains!743 (toList!739 lt!36294) (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36714)))

(declare-fun b!79100 () Bool)

(declare-fun e!51666 () Bool)

(assert (=> b!79100 (= e!51667 e!51666)))

(declare-fun res!41338 () Bool)

(assert (=> b!79100 (=> res!41338 e!51666)))

(assert (=> b!79100 (= res!41338 (= (h!2091 (toList!739 lt!36294)) (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!79101 () Bool)

(assert (=> b!79101 (= e!51666 (contains!743 (t!5153 (toList!739 lt!36294)) (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18907 res!41337) b!79100))

(assert (= (and b!79100 (not res!41338)) b!79101))

(declare-fun m!79901 () Bool)

(assert (=> d!18907 m!79901))

(declare-fun m!79903 () Bool)

(assert (=> d!18907 m!79903))

(declare-fun m!79905 () Bool)

(assert (=> b!79101 m!79905))

(assert (=> b!78444 d!18907))

(declare-fun b!79105 () Bool)

(declare-fun e!51669 () Option!143)

(assert (=> b!79105 (= e!51669 None!141)))

(declare-fun d!18909 () Bool)

(declare-fun c!12232 () Bool)

(assert (=> d!18909 (= c!12232 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36045))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36045)))) (_1!1097 lt!35864))))))

(declare-fun e!51668 () Option!143)

(assert (=> d!18909 (= (getValueByKey!137 (t!5153 (toList!739 lt!36045)) (_1!1097 lt!35864)) e!51668)))

(declare-fun b!79104 () Bool)

(assert (=> b!79104 (= e!51669 (getValueByKey!137 (t!5153 (t!5153 (toList!739 lt!36045))) (_1!1097 lt!35864)))))

(declare-fun b!79102 () Bool)

(assert (=> b!79102 (= e!51668 (Some!142 (_2!1097 (h!2091 (t!5153 (toList!739 lt!36045))))))))

(declare-fun b!79103 () Bool)

(assert (=> b!79103 (= e!51668 e!51669)))

(declare-fun c!12233 () Bool)

(assert (=> b!79103 (= c!12233 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36045))) (not (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36045)))) (_1!1097 lt!35864)))))))

(assert (= (and d!18909 c!12232) b!79102))

(assert (= (and d!18909 (not c!12232)) b!79103))

(assert (= (and b!79103 c!12233) b!79104))

(assert (= (and b!79103 (not c!12233)) b!79105))

(declare-fun m!79907 () Bool)

(assert (=> b!79104 m!79907))

(assert (=> b!78614 d!18909))

(declare-fun d!18911 () Bool)

(declare-fun lt!36715 () Bool)

(assert (=> d!18911 (= lt!36715 (select (content!83 lt!36536) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun e!51671 () Bool)

(assert (=> d!18911 (= lt!36715 e!51671)))

(declare-fun res!41339 () Bool)

(assert (=> d!18911 (=> (not res!41339) (not e!51671))))

(assert (=> d!18911 (= res!41339 ((_ is Cons!1503) lt!36536))))

(assert (=> d!18911 (= (contains!743 lt!36536 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))) lt!36715)))

(declare-fun b!79106 () Bool)

(declare-fun e!51670 () Bool)

(assert (=> b!79106 (= e!51671 e!51670)))

(declare-fun res!41340 () Bool)

(assert (=> b!79106 (=> res!41340 e!51670)))

(assert (=> b!79106 (= res!41340 (= (h!2091 lt!36536) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!79107 () Bool)

(assert (=> b!79107 (= e!51670 (contains!743 (t!5153 lt!36536) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(assert (= (and d!18911 res!41339) b!79106))

(assert (= (and b!79106 (not res!41340)) b!79107))

(declare-fun m!79909 () Bool)

(assert (=> d!18911 m!79909))

(declare-fun m!79911 () Bool)

(assert (=> d!18911 m!79911))

(declare-fun m!79913 () Bool)

(assert (=> b!79107 m!79913))

(assert (=> b!78755 d!18911))

(assert (=> d!18605 d!18489))

(declare-fun b!79124 () Bool)

(declare-fun e!51682 () Bool)

(declare-fun e!51681 () Bool)

(assert (=> b!79124 (= e!51682 e!51681)))

(declare-fun c!12239 () Bool)

(declare-fun lt!36718 () SeekEntryResult!240)

(assert (=> b!79124 (= c!12239 ((_ is MissingVacant!240) lt!36718))))

(declare-fun b!79125 () Bool)

(declare-fun e!51680 () Bool)

(declare-fun call!7296 () Bool)

(assert (=> b!79125 (= e!51680 (not call!7296))))

(declare-fun d!18913 () Bool)

(assert (=> d!18913 e!51682))

(declare-fun c!12238 () Bool)

(assert (=> d!18913 (= c!12238 ((_ is MissingZero!240) lt!36718))))

(assert (=> d!18913 (= lt!36718 (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(assert (=> d!18913 true))

(declare-fun _$34!815 () Unit!2257)

(assert (=> d!18913 (= (choose!462 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)) _$34!815)))

(declare-fun b!79126 () Bool)

(declare-fun res!41352 () Bool)

(declare-fun e!51683 () Bool)

(assert (=> b!79126 (=> (not res!41352) (not e!51683))))

(declare-fun call!7297 () Bool)

(assert (=> b!79126 (= res!41352 call!7297)))

(assert (=> b!79126 (= e!51681 e!51683)))

(declare-fun b!79127 () Bool)

(assert (=> b!79127 (= e!51681 ((_ is Undefined!240) lt!36718))))

(declare-fun bm!7293 () Bool)

(assert (=> bm!7293 (= call!7297 (inRange!0 (ite c!12238 (index!3094 lt!36718) (index!3097 lt!36718)) (mask!6268 newMap!16)))))

(declare-fun b!79128 () Bool)

(declare-fun res!41349 () Bool)

(assert (=> b!79128 (=> (not res!41349) (not e!51683))))

(assert (=> b!79128 (= res!41349 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3097 lt!36718)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79129 () Bool)

(declare-fun res!41351 () Bool)

(assert (=> b!79129 (= res!41351 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3094 lt!36718)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79129 (=> (not res!41351) (not e!51680))))

(declare-fun bm!7294 () Bool)

(assert (=> bm!7294 (= call!7296 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!79130 () Bool)

(assert (=> b!79130 (= e!51683 (not call!7296))))

(declare-fun b!79131 () Bool)

(assert (=> b!79131 (= e!51682 e!51680)))

(declare-fun res!41350 () Bool)

(assert (=> b!79131 (= res!41350 call!7297)))

(assert (=> b!79131 (=> (not res!41350) (not e!51680))))

(assert (= (and d!18913 c!12238) b!79131))

(assert (= (and d!18913 (not c!12238)) b!79124))

(assert (= (and b!79131 res!41350) b!79129))

(assert (= (and b!79129 res!41351) b!79125))

(assert (= (and b!79124 c!12239) b!79126))

(assert (= (and b!79124 (not c!12239)) b!79127))

(assert (= (and b!79126 res!41352) b!79128))

(assert (= (and b!79128 res!41349) b!79130))

(assert (= (or b!79131 b!79126) bm!7293))

(assert (= (or b!79125 b!79130) bm!7294))

(declare-fun m!79915 () Bool)

(assert (=> bm!7293 m!79915))

(declare-fun m!79917 () Bool)

(assert (=> b!79128 m!79917))

(declare-fun m!79919 () Bool)

(assert (=> b!79129 m!79919))

(assert (=> bm!7294 m!77965))

(assert (=> bm!7294 m!78353))

(assert (=> d!18913 m!77965))

(assert (=> d!18913 m!78307))

(assert (=> d!18605 d!18913))

(assert (=> d!18605 d!18765))

(assert (=> d!18571 d!18645))

(declare-fun d!18915 () Bool)

(assert (=> d!18915 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36145 lt!35856 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(assert (=> d!18915 true))

(declare-fun _$7!65 () Unit!2257)

(assert (=> d!18915 (= (choose!458 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36145 (zeroValue!2170 newMap!16) lt!35856 (minValue!2170 newMap!16) (defaultEntry!2272 newMap!16)) _$7!65)))

(declare-fun bs!3347 () Bool)

(assert (= bs!3347 d!18915))

(assert (=> bs!3347 m!78087))

(assert (=> bs!3347 m!78087))

(assert (=> bs!3347 m!78705))

(assert (=> bs!3347 m!78701))

(assert (=> d!18571 d!18915))

(assert (=> d!18571 d!18765))

(declare-fun d!18917 () Bool)

(declare-fun e!51684 () Bool)

(assert (=> d!18917 e!51684))

(declare-fun res!41353 () Bool)

(assert (=> d!18917 (=> (not res!41353) (not e!51684))))

(declare-fun lt!36720 () ListLongMap!1447)

(assert (=> d!18917 (= res!41353 (contains!742 lt!36720 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856))))))

(declare-fun lt!36719 () List!1507)

(assert (=> d!18917 (= lt!36720 (ListLongMap!1448 lt!36719))))

(declare-fun lt!36722 () Unit!2257)

(declare-fun lt!36721 () Unit!2257)

(assert (=> d!18917 (= lt!36722 lt!36721)))

(assert (=> d!18917 (= (getValueByKey!137 lt!36719 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856))) (Some!142 (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856))))))

(assert (=> d!18917 (= lt!36721 (lemmaContainsTupThenGetReturnValue!54 lt!36719 (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856))))))

(assert (=> d!18917 (= lt!36719 (insertStrictlySorted!57 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856))))))

(assert (=> d!18917 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856)) lt!36720)))

(declare-fun b!79132 () Bool)

(declare-fun res!41354 () Bool)

(assert (=> b!79132 (=> (not res!41354) (not e!51684))))

(assert (=> b!79132 (= res!41354 (= (getValueByKey!137 (toList!739 lt!36720) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856))) (Some!142 (_2!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856)))))))

(declare-fun b!79133 () Bool)

(assert (=> b!79133 (= e!51684 (contains!743 (toList!739 lt!36720) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856)))))

(assert (= (and d!18917 res!41353) b!79132))

(assert (= (and b!79132 res!41354) b!79133))

(declare-fun m!79921 () Bool)

(assert (=> d!18917 m!79921))

(declare-fun m!79923 () Bool)

(assert (=> d!18917 m!79923))

(declare-fun m!79925 () Bool)

(assert (=> d!18917 m!79925))

(declare-fun m!79927 () Bool)

(assert (=> d!18917 m!79927))

(declare-fun m!79929 () Bool)

(assert (=> b!79132 m!79929))

(declare-fun m!79931 () Bool)

(assert (=> b!79133 m!79931))

(assert (=> d!18571 d!18917))

(declare-fun c!12245 () Bool)

(declare-fun call!7302 () ListLongMap!1447)

(declare-fun bm!7295 () Bool)

(declare-fun call!7303 () ListLongMap!1447)

(declare-fun call!7304 () ListLongMap!1447)

(declare-fun c!12241 () Bool)

(declare-fun call!7298 () ListLongMap!1447)

(assert (=> bm!7295 (= call!7304 (+!105 (ite c!12241 call!7302 (ite c!12245 call!7298 call!7303)) (ite (or c!12241 c!12245) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun b!79134 () Bool)

(declare-fun e!51693 () Bool)

(declare-fun lt!36737 () ListLongMap!1447)

(assert (=> b!79134 (= e!51693 (= (apply!79 lt!36737 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!79135 () Bool)

(declare-fun e!51696 () ListLongMap!1447)

(assert (=> b!79135 (= e!51696 call!7303)))

(declare-fun b!79136 () Bool)

(declare-fun e!51686 () ListLongMap!1447)

(declare-fun call!7301 () ListLongMap!1447)

(assert (=> b!79136 (= e!51686 call!7301)))

(declare-fun b!79137 () Bool)

(declare-fun c!12242 () Bool)

(assert (=> b!79137 (= c!12242 (and (not (= (bvand lt!36145 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!36145 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79137 (= e!51686 e!51696)))

(declare-fun b!79138 () Bool)

(declare-fun e!51691 () Bool)

(declare-fun call!7299 () Bool)

(assert (=> b!79138 (= e!51691 (not call!7299))))

(declare-fun b!79139 () Bool)

(declare-fun e!51690 () Bool)

(assert (=> b!79139 (= e!51690 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7297 () Bool)

(assert (=> bm!7297 (= call!7303 call!7298)))

(declare-fun b!79140 () Bool)

(declare-fun e!51689 () Bool)

(declare-fun call!7300 () Bool)

(assert (=> b!79140 (= e!51689 (not call!7300))))

(declare-fun b!79141 () Bool)

(declare-fun e!51688 () Bool)

(assert (=> b!79141 (= e!51688 e!51691)))

(declare-fun c!12243 () Bool)

(assert (=> b!79141 (= c!12243 (not (= (bvand lt!36145 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7298 () Bool)

(assert (=> bm!7298 (= call!7300 (contains!742 lt!36737 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7299 () Bool)

(assert (=> bm!7299 (= call!7302 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36145 lt!35856 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!79142 () Bool)

(assert (=> b!79142 (= e!51696 call!7301)))

(declare-fun b!79143 () Bool)

(declare-fun e!51692 () ListLongMap!1447)

(assert (=> b!79143 (= e!51692 e!51686)))

(assert (=> b!79143 (= c!12245 (and (not (= (bvand lt!36145 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!36145 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7300 () Bool)

(assert (=> bm!7300 (= call!7301 call!7304)))

(declare-fun b!79144 () Bool)

(declare-fun res!41360 () Bool)

(assert (=> b!79144 (=> (not res!41360) (not e!51688))))

(assert (=> b!79144 (= res!41360 e!51689)))

(declare-fun c!12244 () Bool)

(assert (=> b!79144 (= c!12244 (not (= (bvand lt!36145 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79145 () Bool)

(declare-fun e!51694 () Unit!2257)

(declare-fun Unit!2299 () Unit!2257)

(assert (=> b!79145 (= e!51694 Unit!2299)))

(declare-fun b!79146 () Bool)

(declare-fun e!51687 () Bool)

(assert (=> b!79146 (= e!51689 e!51687)))

(declare-fun res!41357 () Bool)

(assert (=> b!79146 (= res!41357 call!7300)))

(assert (=> b!79146 (=> (not res!41357) (not e!51687))))

(declare-fun b!79147 () Bool)

(assert (=> b!79147 (= e!51691 e!51693)))

(declare-fun res!41359 () Bool)

(assert (=> b!79147 (= res!41359 call!7299)))

(assert (=> b!79147 (=> (not res!41359) (not e!51693))))

(declare-fun b!79148 () Bool)

(declare-fun e!51697 () Bool)

(assert (=> b!79148 (= e!51697 (= (apply!79 lt!36737 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79148 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (_values!2255 newMap!16))))))

(assert (=> b!79148 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun d!18919 () Bool)

(assert (=> d!18919 e!51688))

(declare-fun res!41361 () Bool)

(assert (=> d!18919 (=> (not res!41361) (not e!51688))))

(assert (=> d!18919 (= res!41361 (or (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))))

(declare-fun lt!36727 () ListLongMap!1447)

(assert (=> d!18919 (= lt!36737 lt!36727)))

(declare-fun lt!36744 () Unit!2257)

(assert (=> d!18919 (= lt!36744 e!51694)))

(declare-fun c!12240 () Bool)

(assert (=> d!18919 (= c!12240 e!51690)))

(declare-fun res!41356 () Bool)

(assert (=> d!18919 (=> (not res!41356) (not e!51690))))

(assert (=> d!18919 (= res!41356 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18919 (= lt!36727 e!51692)))

(assert (=> d!18919 (= c!12241 (and (not (= (bvand lt!36145 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!36145 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18919 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18919 (= (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36145 lt!35856 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36737)))

(declare-fun bm!7296 () Bool)

(assert (=> bm!7296 (= call!7299 (contains!742 lt!36737 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7301 () Bool)

(assert (=> bm!7301 (= call!7298 call!7302)))

(declare-fun b!79149 () Bool)

(declare-fun lt!36726 () Unit!2257)

(assert (=> b!79149 (= e!51694 lt!36726)))

(declare-fun lt!36732 () ListLongMap!1447)

(assert (=> b!79149 (= lt!36732 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36145 lt!35856 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36725 () (_ BitVec 64))

(assert (=> b!79149 (= lt!36725 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36734 () (_ BitVec 64))

(assert (=> b!79149 (= lt!36734 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36739 () Unit!2257)

(assert (=> b!79149 (= lt!36739 (addStillContains!55 lt!36732 lt!36725 lt!35856 lt!36734))))

(assert (=> b!79149 (contains!742 (+!105 lt!36732 (tuple2!2173 lt!36725 lt!35856)) lt!36734)))

(declare-fun lt!36733 () Unit!2257)

(assert (=> b!79149 (= lt!36733 lt!36739)))

(declare-fun lt!36724 () ListLongMap!1447)

(assert (=> b!79149 (= lt!36724 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36145 lt!35856 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36728 () (_ BitVec 64))

(assert (=> b!79149 (= lt!36728 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36730 () (_ BitVec 64))

(assert (=> b!79149 (= lt!36730 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36729 () Unit!2257)

(assert (=> b!79149 (= lt!36729 (addApplyDifferent!55 lt!36724 lt!36728 (minValue!2170 newMap!16) lt!36730))))

(assert (=> b!79149 (= (apply!79 (+!105 lt!36724 (tuple2!2173 lt!36728 (minValue!2170 newMap!16))) lt!36730) (apply!79 lt!36724 lt!36730))))

(declare-fun lt!36723 () Unit!2257)

(assert (=> b!79149 (= lt!36723 lt!36729)))

(declare-fun lt!36741 () ListLongMap!1447)

(assert (=> b!79149 (= lt!36741 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36145 lt!35856 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36740 () (_ BitVec 64))

(assert (=> b!79149 (= lt!36740 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36742 () (_ BitVec 64))

(assert (=> b!79149 (= lt!36742 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36731 () Unit!2257)

(assert (=> b!79149 (= lt!36731 (addApplyDifferent!55 lt!36741 lt!36740 lt!35856 lt!36742))))

(assert (=> b!79149 (= (apply!79 (+!105 lt!36741 (tuple2!2173 lt!36740 lt!35856)) lt!36742) (apply!79 lt!36741 lt!36742))))

(declare-fun lt!36735 () Unit!2257)

(assert (=> b!79149 (= lt!36735 lt!36731)))

(declare-fun lt!36738 () ListLongMap!1447)

(assert (=> b!79149 (= lt!36738 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36145 lt!35856 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36743 () (_ BitVec 64))

(assert (=> b!79149 (= lt!36743 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36736 () (_ BitVec 64))

(assert (=> b!79149 (= lt!36736 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79149 (= lt!36726 (addApplyDifferent!55 lt!36738 lt!36743 (minValue!2170 newMap!16) lt!36736))))

(assert (=> b!79149 (= (apply!79 (+!105 lt!36738 (tuple2!2173 lt!36743 (minValue!2170 newMap!16))) lt!36736) (apply!79 lt!36738 lt!36736))))

(declare-fun b!79150 () Bool)

(declare-fun res!41363 () Bool)

(assert (=> b!79150 (=> (not res!41363) (not e!51688))))

(declare-fun e!51685 () Bool)

(assert (=> b!79150 (= res!41363 e!51685)))

(declare-fun res!41358 () Bool)

(assert (=> b!79150 (=> res!41358 e!51685)))

(declare-fun e!51695 () Bool)

(assert (=> b!79150 (= res!41358 (not e!51695))))

(declare-fun res!41355 () Bool)

(assert (=> b!79150 (=> (not res!41355) (not e!51695))))

(assert (=> b!79150 (= res!41355 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!79151 () Bool)

(assert (=> b!79151 (= e!51685 e!51697)))

(declare-fun res!41362 () Bool)

(assert (=> b!79151 (=> (not res!41362) (not e!51697))))

(assert (=> b!79151 (= res!41362 (contains!742 lt!36737 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79151 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!79152 () Bool)

(assert (=> b!79152 (= e!51687 (= (apply!79 lt!36737 #b0000000000000000000000000000000000000000000000000000000000000000) lt!35856))))

(declare-fun b!79153 () Bool)

(assert (=> b!79153 (= e!51695 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79154 () Bool)

(assert (=> b!79154 (= e!51692 (+!105 call!7304 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!18919 c!12241) b!79154))

(assert (= (and d!18919 (not c!12241)) b!79143))

(assert (= (and b!79143 c!12245) b!79136))

(assert (= (and b!79143 (not c!12245)) b!79137))

(assert (= (and b!79137 c!12242) b!79142))

(assert (= (and b!79137 (not c!12242)) b!79135))

(assert (= (or b!79142 b!79135) bm!7297))

(assert (= (or b!79136 bm!7297) bm!7301))

(assert (= (or b!79136 b!79142) bm!7300))

(assert (= (or b!79154 bm!7301) bm!7299))

(assert (= (or b!79154 bm!7300) bm!7295))

(assert (= (and d!18919 res!41356) b!79139))

(assert (= (and d!18919 c!12240) b!79149))

(assert (= (and d!18919 (not c!12240)) b!79145))

(assert (= (and d!18919 res!41361) b!79150))

(assert (= (and b!79150 res!41355) b!79153))

(assert (= (and b!79150 (not res!41358)) b!79151))

(assert (= (and b!79151 res!41362) b!79148))

(assert (= (and b!79150 res!41363) b!79144))

(assert (= (and b!79144 c!12244) b!79146))

(assert (= (and b!79144 (not c!12244)) b!79140))

(assert (= (and b!79146 res!41357) b!79152))

(assert (= (or b!79146 b!79140) bm!7298))

(assert (= (and b!79144 res!41360) b!79141))

(assert (= (and b!79141 c!12243) b!79147))

(assert (= (and b!79141 (not c!12243)) b!79138))

(assert (= (and b!79147 res!41359) b!79134))

(assert (= (or b!79147 b!79138) bm!7296))

(declare-fun b_lambda!3539 () Bool)

(assert (=> (not b_lambda!3539) (not b!79148)))

(assert (=> b!79148 t!5161))

(declare-fun b_and!4863 () Bool)

(assert (= b_and!4859 (and (=> t!5161 result!2825) b_and!4863)))

(assert (=> b!79148 t!5163))

(declare-fun b_and!4865 () Bool)

(assert (= b_and!4861 (and (=> t!5163 result!2827) b_and!4865)))

(declare-fun m!79933 () Bool)

(assert (=> b!79152 m!79933))

(declare-fun m!79935 () Bool)

(assert (=> bm!7298 m!79935))

(declare-fun m!79937 () Bool)

(assert (=> bm!7296 m!79937))

(declare-fun m!79939 () Bool)

(assert (=> b!79149 m!79939))

(declare-fun m!79941 () Bool)

(assert (=> b!79149 m!79941))

(declare-fun m!79943 () Bool)

(assert (=> b!79149 m!79943))

(declare-fun m!79945 () Bool)

(assert (=> b!79149 m!79945))

(declare-fun m!79947 () Bool)

(assert (=> b!79149 m!79947))

(declare-fun m!79949 () Bool)

(assert (=> b!79149 m!79949))

(declare-fun m!79951 () Bool)

(assert (=> b!79149 m!79951))

(assert (=> b!79149 m!78509))

(declare-fun m!79953 () Bool)

(assert (=> b!79149 m!79953))

(declare-fun m!79955 () Bool)

(assert (=> b!79149 m!79955))

(declare-fun m!79957 () Bool)

(assert (=> b!79149 m!79957))

(declare-fun m!79959 () Bool)

(assert (=> b!79149 m!79959))

(declare-fun m!79961 () Bool)

(assert (=> b!79149 m!79961))

(declare-fun m!79963 () Bool)

(assert (=> b!79149 m!79963))

(assert (=> b!79149 m!79957))

(assert (=> b!79149 m!79943))

(declare-fun m!79965 () Bool)

(assert (=> b!79149 m!79965))

(declare-fun m!79967 () Bool)

(assert (=> b!79149 m!79967))

(declare-fun m!79969 () Bool)

(assert (=> b!79149 m!79969))

(assert (=> b!79149 m!79939))

(assert (=> b!79149 m!79947))

(assert (=> b!79148 m!78509))

(declare-fun m!79971 () Bool)

(assert (=> b!79148 m!79971))

(assert (=> b!79148 m!78509))

(assert (=> b!79148 m!79037))

(assert (=> b!79148 m!78533))

(assert (=> b!79148 m!79039))

(assert (=> b!79148 m!78533))

(assert (=> b!79148 m!79037))

(assert (=> b!79139 m!78509))

(assert (=> b!79139 m!78509))

(assert (=> b!79139 m!78537))

(declare-fun m!79973 () Bool)

(assert (=> b!79134 m!79973))

(assert (=> bm!7299 m!79967))

(declare-fun m!79975 () Bool)

(assert (=> bm!7295 m!79975))

(assert (=> b!79151 m!78509))

(assert (=> b!79151 m!78509))

(declare-fun m!79977 () Bool)

(assert (=> b!79151 m!79977))

(declare-fun m!79979 () Bool)

(assert (=> b!79154 m!79979))

(assert (=> d!18919 m!78411))

(assert (=> b!79153 m!78509))

(assert (=> b!79153 m!78509))

(assert (=> b!79153 m!78537))

(assert (=> d!18571 d!18919))

(assert (=> b!78633 d!18507))

(declare-fun d!18921 () Bool)

(assert (=> d!18921 (= (isDefined!90 (getValueByKey!137 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))))) (not (isEmpty!328 (getValueByKey!137 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))))

(declare-fun bs!3348 () Bool)

(assert (= bs!3348 d!18921))

(assert (=> bs!3348 m!78587))

(declare-fun m!79981 () Bool)

(assert (=> bs!3348 m!79981))

(assert (=> b!78343 d!18921))

(declare-fun b!79158 () Bool)

(declare-fun e!51699 () Option!143)

(assert (=> b!79158 (= e!51699 None!141)))

(declare-fun d!18923 () Bool)

(declare-fun c!12246 () Bool)

(assert (=> d!18923 (= c!12246 (and ((_ is Cons!1503) (toList!739 e!51131)) (= (_1!1097 (h!2091 (toList!739 e!51131))) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))))))))

(declare-fun e!51698 () Option!143)

(assert (=> d!18923 (= (getValueByKey!137 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))) e!51698)))

(declare-fun b!79157 () Bool)

(assert (=> b!79157 (= e!51699 (getValueByKey!137 (t!5153 (toList!739 e!51131)) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))

(declare-fun b!79155 () Bool)

(assert (=> b!79155 (= e!51698 (Some!142 (_2!1097 (h!2091 (toList!739 e!51131)))))))

(declare-fun b!79156 () Bool)

(assert (=> b!79156 (= e!51698 e!51699)))

(declare-fun c!12247 () Bool)

(assert (=> b!79156 (= c!12247 (and ((_ is Cons!1503) (toList!739 e!51131)) (not (= (_1!1097 (h!2091 (toList!739 e!51131))) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))))

(assert (= (and d!18923 c!12246) b!79155))

(assert (= (and d!18923 (not c!12246)) b!79156))

(assert (= (and b!79156 c!12247) b!79157))

(assert (= (and b!79156 (not c!12247)) b!79158))

(declare-fun m!79983 () Bool)

(assert (=> b!79157 m!79983))

(assert (=> b!78343 d!18923))

(declare-fun b!79162 () Bool)

(declare-fun e!51701 () Option!143)

(assert (=> b!79162 (= e!51701 None!141)))

(declare-fun d!18925 () Bool)

(declare-fun c!12248 () Bool)

(assert (=> d!18925 (= c!12248 (and ((_ is Cons!1503) (t!5153 lt!36040)) (= (_1!1097 (h!2091 (t!5153 lt!36040))) (_1!1097 lt!35861))))))

(declare-fun e!51700 () Option!143)

(assert (=> d!18925 (= (getValueByKey!137 (t!5153 lt!36040) (_1!1097 lt!35861)) e!51700)))

(declare-fun b!79161 () Bool)

(assert (=> b!79161 (= e!51701 (getValueByKey!137 (t!5153 (t!5153 lt!36040)) (_1!1097 lt!35861)))))

(declare-fun b!79159 () Bool)

(assert (=> b!79159 (= e!51700 (Some!142 (_2!1097 (h!2091 (t!5153 lt!36040)))))))

(declare-fun b!79160 () Bool)

(assert (=> b!79160 (= e!51700 e!51701)))

(declare-fun c!12249 () Bool)

(assert (=> b!79160 (= c!12249 (and ((_ is Cons!1503) (t!5153 lt!36040)) (not (= (_1!1097 (h!2091 (t!5153 lt!36040))) (_1!1097 lt!35861)))))))

(assert (= (and d!18925 c!12248) b!79159))

(assert (= (and d!18925 (not c!12248)) b!79160))

(assert (= (and b!79160 c!12249) b!79161))

(assert (= (and b!79160 (not c!12249)) b!79162))

(declare-fun m!79985 () Bool)

(assert (=> b!79161 m!79985))

(assert (=> b!78481 d!18925))

(declare-fun d!18927 () Bool)

(declare-fun res!41364 () Bool)

(declare-fun e!51702 () Bool)

(assert (=> d!18927 (=> res!41364 e!51702)))

(assert (=> d!18927 (= res!41364 (and ((_ is Cons!1503) lt!36315) (= (_1!1097 (h!2091 lt!36315)) (_1!1097 lt!35861))))))

(assert (=> d!18927 (= (containsKey!141 lt!36315 (_1!1097 lt!35861)) e!51702)))

(declare-fun b!79163 () Bool)

(declare-fun e!51703 () Bool)

(assert (=> b!79163 (= e!51702 e!51703)))

(declare-fun res!41365 () Bool)

(assert (=> b!79163 (=> (not res!41365) (not e!51703))))

(assert (=> b!79163 (= res!41365 (and (or (not ((_ is Cons!1503) lt!36315)) (bvsle (_1!1097 (h!2091 lt!36315)) (_1!1097 lt!35861))) ((_ is Cons!1503) lt!36315) (bvslt (_1!1097 (h!2091 lt!36315)) (_1!1097 lt!35861))))))

(declare-fun b!79164 () Bool)

(assert (=> b!79164 (= e!51703 (containsKey!141 (t!5153 lt!36315) (_1!1097 lt!35861)))))

(assert (= (and d!18927 (not res!41364)) b!79163))

(assert (= (and b!79163 res!41365) b!79164))

(declare-fun m!79987 () Bool)

(assert (=> b!79164 m!79987))

(assert (=> b!78489 d!18927))

(declare-fun d!18929 () Bool)

(declare-fun res!41366 () Bool)

(declare-fun e!51704 () Bool)

(assert (=> d!18929 (=> res!41366 e!51704)))

(assert (=> d!18929 (= res!41366 (and ((_ is Cons!1503) (toList!739 lt!36033)) (= (_1!1097 (h!2091 (toList!739 lt!36033))) (_1!1097 lt!35864))))))

(assert (=> d!18929 (= (containsKey!141 (toList!739 lt!36033) (_1!1097 lt!35864)) e!51704)))

(declare-fun b!79165 () Bool)

(declare-fun e!51705 () Bool)

(assert (=> b!79165 (= e!51704 e!51705)))

(declare-fun res!41367 () Bool)

(assert (=> b!79165 (=> (not res!41367) (not e!51705))))

(assert (=> b!79165 (= res!41367 (and (or (not ((_ is Cons!1503) (toList!739 lt!36033))) (bvsle (_1!1097 (h!2091 (toList!739 lt!36033))) (_1!1097 lt!35864))) ((_ is Cons!1503) (toList!739 lt!36033)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36033))) (_1!1097 lt!35864))))))

(declare-fun b!79166 () Bool)

(assert (=> b!79166 (= e!51705 (containsKey!141 (t!5153 (toList!739 lt!36033)) (_1!1097 lt!35864)))))

(assert (= (and d!18929 (not res!41366)) b!79165))

(assert (= (and b!79165 res!41367) b!79166))

(declare-fun m!79989 () Bool)

(assert (=> b!79166 m!79989))

(assert (=> d!18553 d!18929))

(declare-fun bm!7302 () Bool)

(declare-fun call!7305 () Bool)

(assert (=> bm!7302 (= call!7305 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3932 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun b!79167 () Bool)

(declare-fun e!51707 () Bool)

(assert (=> b!79167 (= e!51707 call!7305)))

(declare-fun b!79168 () Bool)

(declare-fun e!51708 () Bool)

(declare-fun e!51706 () Bool)

(assert (=> b!79168 (= e!51708 e!51706)))

(declare-fun c!12250 () Bool)

(assert (=> b!79168 (= c!12250 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!79169 () Bool)

(assert (=> b!79169 (= e!51706 call!7305)))

(declare-fun b!79170 () Bool)

(assert (=> b!79170 (= e!51706 e!51707)))

(declare-fun lt!36745 () (_ BitVec 64))

(assert (=> b!79170 (= lt!36745 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!36747 () Unit!2257)

(assert (=> b!79170 (= lt!36747 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) lt!36745 #b00000000000000000000000000000000))))

(assert (=> b!79170 (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) lt!36745 #b00000000000000000000000000000000)))

(declare-fun lt!36746 () Unit!2257)

(assert (=> b!79170 (= lt!36746 lt!36747)))

(declare-fun res!41369 () Bool)

(assert (=> b!79170 (= res!41369 (= (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000) (_keys!3932 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992)))) (Found!240 #b00000000000000000000000000000000)))))

(assert (=> b!79170 (=> (not res!41369) (not e!51707))))

(declare-fun d!18931 () Bool)

(declare-fun res!41368 () Bool)

(assert (=> d!18931 (=> res!41368 e!51708)))

(assert (=> d!18931 (= res!41368 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!18931 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992)))) e!51708)))

(assert (= (and d!18931 (not res!41368)) b!79168))

(assert (= (and b!79168 c!12250) b!79170))

(assert (= (and b!79168 (not c!12250)) b!79169))

(assert (= (and b!79170 res!41369) b!79167))

(assert (= (or b!79167 b!79169) bm!7302))

(declare-fun m!79991 () Bool)

(assert (=> bm!7302 m!79991))

(assert (=> b!79168 m!79597))

(assert (=> b!79168 m!79597))

(assert (=> b!79168 m!79599))

(assert (=> b!79170 m!79597))

(declare-fun m!79993 () Bool)

(assert (=> b!79170 m!79993))

(declare-fun m!79995 () Bool)

(assert (=> b!79170 m!79995))

(assert (=> b!79170 m!79597))

(declare-fun m!79997 () Bool)

(assert (=> b!79170 m!79997))

(assert (=> b!78270 d!18931))

(declare-fun d!18933 () Bool)

(assert (=> d!18933 (= (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78500 d!18933))

(declare-fun d!18935 () Bool)

(declare-fun lt!36748 () Bool)

(assert (=> d!18935 (= lt!36748 (select (content!83 (t!5153 (toList!739 lt!36045))) lt!35864))))

(declare-fun e!51710 () Bool)

(assert (=> d!18935 (= lt!36748 e!51710)))

(declare-fun res!41370 () Bool)

(assert (=> d!18935 (=> (not res!41370) (not e!51710))))

(assert (=> d!18935 (= res!41370 ((_ is Cons!1503) (t!5153 (toList!739 lt!36045))))))

(assert (=> d!18935 (= (contains!743 (t!5153 (toList!739 lt!36045)) lt!35864) lt!36748)))

(declare-fun b!79171 () Bool)

(declare-fun e!51709 () Bool)

(assert (=> b!79171 (= e!51710 e!51709)))

(declare-fun res!41371 () Bool)

(assert (=> b!79171 (=> res!41371 e!51709)))

(assert (=> b!79171 (= res!41371 (= (h!2091 (t!5153 (toList!739 lt!36045))) lt!35864))))

(declare-fun b!79172 () Bool)

(assert (=> b!79172 (= e!51709 (contains!743 (t!5153 (t!5153 (toList!739 lt!36045))) lt!35864))))

(assert (= (and d!18935 res!41370) b!79171))

(assert (= (and b!79171 (not res!41371)) b!79172))

(declare-fun m!79999 () Bool)

(assert (=> d!18935 m!79999))

(declare-fun m!80001 () Bool)

(assert (=> d!18935 m!80001))

(declare-fun m!80003 () Bool)

(assert (=> b!79172 m!80003))

(assert (=> b!78330 d!18935))

(declare-fun d!18937 () Bool)

(declare-fun lt!36749 () Bool)

(assert (=> d!18937 (= lt!36749 (select (content!83 (toList!739 lt!36281)) (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!51712 () Bool)

(assert (=> d!18937 (= lt!36749 e!51712)))

(declare-fun res!41372 () Bool)

(assert (=> d!18937 (=> (not res!41372) (not e!51712))))

(assert (=> d!18937 (= res!41372 ((_ is Cons!1503) (toList!739 lt!36281)))))

(assert (=> d!18937 (= (contains!743 (toList!739 lt!36281) (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36749)))

(declare-fun b!79173 () Bool)

(declare-fun e!51711 () Bool)

(assert (=> b!79173 (= e!51712 e!51711)))

(declare-fun res!41373 () Bool)

(assert (=> b!79173 (=> res!41373 e!51711)))

(assert (=> b!79173 (= res!41373 (= (h!2091 (toList!739 lt!36281)) (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!79174 () Bool)

(assert (=> b!79174 (= e!51711 (contains!743 (t!5153 (toList!739 lt!36281)) (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!18937 res!41372) b!79173))

(assert (= (and b!79173 (not res!41373)) b!79174))

(declare-fun m!80005 () Bool)

(assert (=> d!18937 m!80005))

(declare-fun m!80007 () Bool)

(assert (=> d!18937 m!80007))

(declare-fun m!80009 () Bool)

(assert (=> b!79174 m!80009))

(assert (=> b!78436 d!18937))

(declare-fun b!79178 () Bool)

(declare-fun e!51714 () Option!143)

(assert (=> b!79178 (= e!51714 None!141)))

(declare-fun d!18939 () Bool)

(declare-fun c!12251 () Bool)

(assert (=> d!18939 (= c!12251 (and ((_ is Cons!1503) (toList!739 lt!36188)) (= (_1!1097 (h!2091 (toList!739 lt!36188))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51713 () Option!143)

(assert (=> d!18939 (= (getValueByKey!137 (toList!739 lt!36188) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!51713)))

(declare-fun b!79177 () Bool)

(assert (=> b!79177 (= e!51714 (getValueByKey!137 (t!5153 (toList!739 lt!36188)) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79175 () Bool)

(assert (=> b!79175 (= e!51713 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36188)))))))

(declare-fun b!79176 () Bool)

(assert (=> b!79176 (= e!51713 e!51714)))

(declare-fun c!12252 () Bool)

(assert (=> b!79176 (= c!12252 (and ((_ is Cons!1503) (toList!739 lt!36188)) (not (= (_1!1097 (h!2091 (toList!739 lt!36188))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!18939 c!12251) b!79175))

(assert (= (and d!18939 (not c!12251)) b!79176))

(assert (= (and b!79176 c!12252) b!79177))

(assert (= (and b!79176 (not c!12252)) b!79178))

(declare-fun m!80011 () Bool)

(assert (=> b!79177 m!80011))

(assert (=> b!78263 d!18939))

(assert (=> d!18705 d!18703))

(declare-fun d!18941 () Bool)

(assert (=> d!18941 (= (getValueByKey!137 lt!36003 (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864)))))

(assert (=> d!18941 true))

(declare-fun _$22!392 () Unit!2257)

(assert (=> d!18941 (= (choose!456 lt!36003 (_1!1097 lt!35864) (_2!1097 lt!35864)) _$22!392)))

(declare-fun bs!3349 () Bool)

(assert (= bs!3349 d!18941))

(assert (=> bs!3349 m!78159))

(assert (=> d!18705 d!18941))

(declare-fun d!18943 () Bool)

(declare-fun res!41374 () Bool)

(declare-fun e!51715 () Bool)

(assert (=> d!18943 (=> res!41374 e!51715)))

(assert (=> d!18943 (= res!41374 (or ((_ is Nil!1504) lt!36003) ((_ is Nil!1504) (t!5153 lt!36003))))))

(assert (=> d!18943 (= (isStrictlySorted!295 lt!36003) e!51715)))

(declare-fun b!79179 () Bool)

(declare-fun e!51716 () Bool)

(assert (=> b!79179 (= e!51715 e!51716)))

(declare-fun res!41375 () Bool)

(assert (=> b!79179 (=> (not res!41375) (not e!51716))))

(assert (=> b!79179 (= res!41375 (bvslt (_1!1097 (h!2091 lt!36003)) (_1!1097 (h!2091 (t!5153 lt!36003)))))))

(declare-fun b!79180 () Bool)

(assert (=> b!79180 (= e!51716 (isStrictlySorted!295 (t!5153 lt!36003)))))

(assert (= (and d!18943 (not res!41374)) b!79179))

(assert (= (and b!79179 res!41375) b!79180))

(declare-fun m!80013 () Bool)

(assert (=> b!79180 m!80013))

(assert (=> d!18705 d!18943))

(declare-fun d!18945 () Bool)

(assert (=> d!18945 (isDefined!90 (getValueByKey!137 (toList!739 lt!36041) (_1!1097 lt!35861)))))

(declare-fun lt!36750 () Unit!2257)

(assert (=> d!18945 (= lt!36750 (choose!465 (toList!739 lt!36041) (_1!1097 lt!35861)))))

(declare-fun e!51717 () Bool)

(assert (=> d!18945 e!51717))

(declare-fun res!41376 () Bool)

(assert (=> d!18945 (=> (not res!41376) (not e!51717))))

(assert (=> d!18945 (= res!41376 (isStrictlySorted!295 (toList!739 lt!36041)))))

(assert (=> d!18945 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36041) (_1!1097 lt!35861)) lt!36750)))

(declare-fun b!79181 () Bool)

(assert (=> b!79181 (= e!51717 (containsKey!141 (toList!739 lt!36041) (_1!1097 lt!35861)))))

(assert (= (and d!18945 res!41376) b!79181))

(assert (=> d!18945 m!78241))

(assert (=> d!18945 m!78241))

(assert (=> d!18945 m!78821))

(declare-fun m!80015 () Bool)

(assert (=> d!18945 m!80015))

(declare-fun m!80017 () Bool)

(assert (=> d!18945 m!80017))

(assert (=> b!79181 m!78817))

(assert (=> b!78476 d!18945))

(declare-fun d!18947 () Bool)

(assert (=> d!18947 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!36041) (_1!1097 lt!35861))) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!36041) (_1!1097 lt!35861)))))))

(declare-fun bs!3350 () Bool)

(assert (= bs!3350 d!18947))

(assert (=> bs!3350 m!78241))

(declare-fun m!80019 () Bool)

(assert (=> bs!3350 m!80019))

(assert (=> b!78476 d!18947))

(assert (=> b!78476 d!18653))

(declare-fun d!18949 () Bool)

(assert (=> d!18949 (= (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78737 d!18949))

(declare-fun d!18951 () Bool)

(assert (=> d!18951 (= (inRange!0 (index!3095 lt!36303) (mask!6268 newMap!16)) (and (bvsge (index!3095 lt!36303) #b00000000000000000000000000000000) (bvslt (index!3095 lt!36303) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!78450 d!18951))

(declare-fun b!79185 () Bool)

(declare-fun e!51719 () Option!143)

(assert (=> b!79185 (= e!51719 None!141)))

(declare-fun d!18953 () Bool)

(declare-fun c!12253 () Bool)

(assert (=> d!18953 (= c!12253 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36000))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36000)))) (_1!1097 lt!35870))))))

(declare-fun e!51718 () Option!143)

(assert (=> d!18953 (= (getValueByKey!137 (t!5153 (toList!739 lt!36000)) (_1!1097 lt!35870)) e!51718)))

(declare-fun b!79184 () Bool)

(assert (=> b!79184 (= e!51719 (getValueByKey!137 (t!5153 (t!5153 (toList!739 lt!36000))) (_1!1097 lt!35870)))))

(declare-fun b!79182 () Bool)

(assert (=> b!79182 (= e!51718 (Some!142 (_2!1097 (h!2091 (t!5153 (toList!739 lt!36000))))))))

(declare-fun b!79183 () Bool)

(assert (=> b!79183 (= e!51718 e!51719)))

(declare-fun c!12254 () Bool)

(assert (=> b!79183 (= c!12254 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36000))) (not (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36000)))) (_1!1097 lt!35870)))))))

(assert (= (and d!18953 c!12253) b!79182))

(assert (= (and d!18953 (not c!12253)) b!79183))

(assert (= (and b!79183 c!12254) b!79184))

(assert (= (and b!79183 (not c!12254)) b!79185))

(declare-fun m!80021 () Bool)

(assert (=> b!79184 m!80021))

(assert (=> b!78389 d!18953))

(declare-fun d!18955 () Bool)

(declare-fun e!51720 () Bool)

(assert (=> d!18955 e!51720))

(declare-fun res!41377 () Bool)

(assert (=> d!18955 (=> (not res!41377) (not e!51720))))

(declare-fun lt!36752 () ListLongMap!1447)

(assert (=> d!18955 (= res!41377 (contains!742 lt!36752 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(declare-fun lt!36751 () List!1507)

(assert (=> d!18955 (= lt!36752 (ListLongMap!1448 lt!36751))))

(declare-fun lt!36754 () Unit!2257)

(declare-fun lt!36753 () Unit!2257)

(assert (=> d!18955 (= lt!36754 lt!36753)))

(assert (=> d!18955 (= (getValueByKey!137 lt!36751 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(assert (=> d!18955 (= lt!36753 (lemmaContainsTupThenGetReturnValue!54 lt!36751 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(assert (=> d!18955 (= lt!36751 (insertStrictlySorted!57 (toList!739 call!7220) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(assert (=> d!18955 (= (+!105 call!7220 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) lt!36752)))

(declare-fun b!79186 () Bool)

(declare-fun res!41378 () Bool)

(assert (=> b!79186 (=> (not res!41378) (not e!51720))))

(assert (=> b!79186 (= res!41378 (= (getValueByKey!137 (toList!739 lt!36752) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))))

(declare-fun b!79187 () Bool)

(assert (=> b!79187 (= e!51720 (contains!743 (toList!739 lt!36752) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))

(assert (= (and d!18955 res!41377) b!79186))

(assert (= (and b!79186 res!41378) b!79187))

(declare-fun m!80023 () Bool)

(assert (=> d!18955 m!80023))

(declare-fun m!80025 () Bool)

(assert (=> d!18955 m!80025))

(declare-fun m!80027 () Bool)

(assert (=> d!18955 m!80027))

(declare-fun m!80029 () Bool)

(assert (=> d!18955 m!80029))

(declare-fun m!80031 () Bool)

(assert (=> b!79186 m!80031))

(declare-fun m!80033 () Bool)

(assert (=> b!79187 m!80033))

(assert (=> b!78527 d!18955))

(declare-fun c!12257 () Bool)

(declare-fun c!12258 () Bool)

(declare-fun e!51721 () List!1507)

(declare-fun b!79188 () Bool)

(assert (=> b!79188 (= e!51721 (ite c!12258 (t!5153 (t!5153 (toList!739 lt!35869))) (ite c!12257 (Cons!1503 (h!2091 (t!5153 (toList!739 lt!35869))) (t!5153 (t!5153 (toList!739 lt!35869)))) Nil!1504)))))

(declare-fun b!79189 () Bool)

(declare-fun e!51725 () List!1507)

(declare-fun call!7308 () List!1507)

(assert (=> b!79189 (= e!51725 call!7308)))

(declare-fun bm!7303 () Bool)

(declare-fun call!7306 () List!1507)

(declare-fun call!7307 () List!1507)

(assert (=> bm!7303 (= call!7306 call!7307)))

(declare-fun b!79190 () Bool)

(assert (=> b!79190 (= c!12257 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35869))) (bvsgt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35869)))) (_1!1097 lt!35870))))))

(declare-fun e!51723 () List!1507)

(declare-fun e!51722 () List!1507)

(assert (=> b!79190 (= e!51723 e!51722)))

(declare-fun b!79191 () Bool)

(assert (=> b!79191 (= e!51721 (insertStrictlySorted!57 (t!5153 (t!5153 (toList!739 lt!35869))) (_1!1097 lt!35870) (_2!1097 lt!35870)))))

(declare-fun b!79192 () Bool)

(declare-fun res!41380 () Bool)

(declare-fun e!51724 () Bool)

(assert (=> b!79192 (=> (not res!41380) (not e!51724))))

(declare-fun lt!36755 () List!1507)

(assert (=> b!79192 (= res!41380 (containsKey!141 lt!36755 (_1!1097 lt!35870)))))

(declare-fun c!12255 () Bool)

(declare-fun bm!7304 () Bool)

(assert (=> bm!7304 (= call!7308 ($colon$colon!69 e!51721 (ite c!12255 (h!2091 (t!5153 (toList!739 lt!35869))) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870)))))))

(declare-fun c!12256 () Bool)

(assert (=> bm!7304 (= c!12256 c!12255)))

(declare-fun b!79193 () Bool)

(assert (=> b!79193 (= e!51725 e!51723)))

(assert (=> b!79193 (= c!12258 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35869))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!35869)))) (_1!1097 lt!35870))))))

(declare-fun b!79195 () Bool)

(assert (=> b!79195 (= e!51723 call!7307)))

(declare-fun b!79196 () Bool)

(assert (=> b!79196 (= e!51724 (contains!743 lt!36755 (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun b!79194 () Bool)

(assert (=> b!79194 (= e!51722 call!7306)))

(declare-fun d!18957 () Bool)

(assert (=> d!18957 e!51724))

(declare-fun res!41379 () Bool)

(assert (=> d!18957 (=> (not res!41379) (not e!51724))))

(assert (=> d!18957 (= res!41379 (isStrictlySorted!295 lt!36755))))

(assert (=> d!18957 (= lt!36755 e!51725)))

(assert (=> d!18957 (= c!12255 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35869))) (bvslt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35869)))) (_1!1097 lt!35870))))))

(assert (=> d!18957 (isStrictlySorted!295 (t!5153 (toList!739 lt!35869)))))

(assert (=> d!18957 (= (insertStrictlySorted!57 (t!5153 (toList!739 lt!35869)) (_1!1097 lt!35870) (_2!1097 lt!35870)) lt!36755)))

(declare-fun bm!7305 () Bool)

(assert (=> bm!7305 (= call!7307 call!7308)))

(declare-fun b!79197 () Bool)

(assert (=> b!79197 (= e!51722 call!7306)))

(assert (= (and d!18957 c!12255) b!79189))

(assert (= (and d!18957 (not c!12255)) b!79193))

(assert (= (and b!79193 c!12258) b!79195))

(assert (= (and b!79193 (not c!12258)) b!79190))

(assert (= (and b!79190 c!12257) b!79194))

(assert (= (and b!79190 (not c!12257)) b!79197))

(assert (= (or b!79194 b!79197) bm!7303))

(assert (= (or b!79195 bm!7303) bm!7305))

(assert (= (or b!79189 bm!7305) bm!7304))

(assert (= (and bm!7304 c!12256) b!79191))

(assert (= (and bm!7304 (not c!12256)) b!79188))

(assert (= (and d!18957 res!41379) b!79192))

(assert (= (and b!79192 res!41380) b!79196))

(declare-fun m!80035 () Bool)

(assert (=> b!79196 m!80035))

(declare-fun m!80037 () Bool)

(assert (=> d!18957 m!80037))

(assert (=> d!18957 m!79577))

(declare-fun m!80039 () Bool)

(assert (=> b!79191 m!80039))

(declare-fun m!80041 () Bool)

(assert (=> b!79192 m!80041))

(declare-fun m!80043 () Bool)

(assert (=> bm!7304 m!80043))

(assert (=> b!78561 d!18957))

(declare-fun d!18959 () Bool)

(assert (=> d!18959 (= (isDefined!90 (getValueByKey!137 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))) (not (isEmpty!328 (getValueByKey!137 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))))

(declare-fun bs!3351 () Bool)

(assert (= bs!3351 d!18959))

(assert (=> bs!3351 m!79059))

(declare-fun m!80045 () Bool)

(assert (=> bs!3351 m!80045))

(assert (=> b!78602 d!18959))

(declare-fun b!79201 () Bool)

(declare-fun e!51727 () Option!143)

(assert (=> b!79201 (= e!51727 None!141)))

(declare-fun d!18961 () Bool)

(declare-fun c!12259 () Bool)

(assert (=> d!18961 (= c!12259 (and ((_ is Cons!1503) (toList!739 call!7169)) (= (_1!1097 (h!2091 (toList!739 call!7169))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(declare-fun e!51726 () Option!143)

(assert (=> d!18961 (= (getValueByKey!137 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) e!51726)))

(declare-fun b!79200 () Bool)

(assert (=> b!79200 (= e!51727 (getValueByKey!137 (t!5153 (toList!739 call!7169)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!79198 () Bool)

(assert (=> b!79198 (= e!51726 (Some!142 (_2!1097 (h!2091 (toList!739 call!7169)))))))

(declare-fun b!79199 () Bool)

(assert (=> b!79199 (= e!51726 e!51727)))

(declare-fun c!12260 () Bool)

(assert (=> b!79199 (= c!12260 (and ((_ is Cons!1503) (toList!739 call!7169)) (not (= (_1!1097 (h!2091 (toList!739 call!7169))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))))

(assert (= (and d!18961 c!12259) b!79198))

(assert (= (and d!18961 (not c!12259)) b!79199))

(assert (= (and b!79199 c!12260) b!79200))

(assert (= (and b!79199 (not c!12260)) b!79201))

(assert (=> b!79200 m!77965))

(declare-fun m!80047 () Bool)

(assert (=> b!79200 m!80047))

(assert (=> b!78602 d!18961))

(declare-fun c!12263 () Bool)

(declare-fun e!51728 () List!1507)

(declare-fun b!79202 () Bool)

(declare-fun c!12264 () Bool)

(assert (=> b!79202 (= e!51728 (ite c!12264 (t!5153 (t!5153 (toList!739 (+!105 lt!35869 lt!35870)))) (ite c!12263 (Cons!1503 (h!2091 (t!5153 (toList!739 (+!105 lt!35869 lt!35870)))) (t!5153 (t!5153 (toList!739 (+!105 lt!35869 lt!35870))))) Nil!1504)))))

(declare-fun b!79203 () Bool)

(declare-fun e!51732 () List!1507)

(declare-fun call!7311 () List!1507)

(assert (=> b!79203 (= e!51732 call!7311)))

(declare-fun bm!7306 () Bool)

(declare-fun call!7309 () List!1507)

(declare-fun call!7310 () List!1507)

(assert (=> bm!7306 (= call!7309 call!7310)))

(declare-fun b!79204 () Bool)

(assert (=> b!79204 (= c!12263 (and ((_ is Cons!1503) (t!5153 (toList!739 (+!105 lt!35869 lt!35870)))) (bvsgt (_1!1097 (h!2091 (t!5153 (toList!739 (+!105 lt!35869 lt!35870))))) (_1!1097 lt!35864))))))

(declare-fun e!51730 () List!1507)

(declare-fun e!51729 () List!1507)

(assert (=> b!79204 (= e!51730 e!51729)))

(declare-fun b!79205 () Bool)

(assert (=> b!79205 (= e!51728 (insertStrictlySorted!57 (t!5153 (t!5153 (toList!739 (+!105 lt!35869 lt!35870)))) (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(declare-fun b!79206 () Bool)

(declare-fun res!41382 () Bool)

(declare-fun e!51731 () Bool)

(assert (=> b!79206 (=> (not res!41382) (not e!51731))))

(declare-fun lt!36756 () List!1507)

(assert (=> b!79206 (= res!41382 (containsKey!141 lt!36756 (_1!1097 lt!35864)))))

(declare-fun bm!7307 () Bool)

(declare-fun c!12261 () Bool)

(assert (=> bm!7307 (= call!7311 ($colon$colon!69 e!51728 (ite c!12261 (h!2091 (t!5153 (toList!739 (+!105 lt!35869 lt!35870)))) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864)))))))

(declare-fun c!12262 () Bool)

(assert (=> bm!7307 (= c!12262 c!12261)))

(declare-fun b!79207 () Bool)

(assert (=> b!79207 (= e!51732 e!51730)))

(assert (=> b!79207 (= c!12264 (and ((_ is Cons!1503) (t!5153 (toList!739 (+!105 lt!35869 lt!35870)))) (= (_1!1097 (h!2091 (t!5153 (toList!739 (+!105 lt!35869 lt!35870))))) (_1!1097 lt!35864))))))

(declare-fun b!79209 () Bool)

(assert (=> b!79209 (= e!51730 call!7310)))

(declare-fun b!79210 () Bool)

(assert (=> b!79210 (= e!51731 (contains!743 lt!36756 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!79208 () Bool)

(assert (=> b!79208 (= e!51729 call!7309)))

(declare-fun d!18963 () Bool)

(assert (=> d!18963 e!51731))

(declare-fun res!41381 () Bool)

(assert (=> d!18963 (=> (not res!41381) (not e!51731))))

(assert (=> d!18963 (= res!41381 (isStrictlySorted!295 lt!36756))))

(assert (=> d!18963 (= lt!36756 e!51732)))

(assert (=> d!18963 (= c!12261 (and ((_ is Cons!1503) (t!5153 (toList!739 (+!105 lt!35869 lt!35870)))) (bvslt (_1!1097 (h!2091 (t!5153 (toList!739 (+!105 lt!35869 lt!35870))))) (_1!1097 lt!35864))))))

(assert (=> d!18963 (isStrictlySorted!295 (t!5153 (toList!739 (+!105 lt!35869 lt!35870))))))

(assert (=> d!18963 (= (insertStrictlySorted!57 (t!5153 (toList!739 (+!105 lt!35869 lt!35870))) (_1!1097 lt!35864) (_2!1097 lt!35864)) lt!36756)))

(declare-fun bm!7308 () Bool)

(assert (=> bm!7308 (= call!7310 call!7311)))

(declare-fun b!79211 () Bool)

(assert (=> b!79211 (= e!51729 call!7309)))

(assert (= (and d!18963 c!12261) b!79203))

(assert (= (and d!18963 (not c!12261)) b!79207))

(assert (= (and b!79207 c!12264) b!79209))

(assert (= (and b!79207 (not c!12264)) b!79204))

(assert (= (and b!79204 c!12263) b!79208))

(assert (= (and b!79204 (not c!12263)) b!79211))

(assert (= (or b!79208 b!79211) bm!7306))

(assert (= (or b!79209 bm!7306) bm!7308))

(assert (= (or b!79203 bm!7308) bm!7307))

(assert (= (and bm!7307 c!12262) b!79205))

(assert (= (and bm!7307 (not c!12262)) b!79202))

(assert (= (and d!18963 res!41381) b!79206))

(assert (= (and b!79206 res!41382) b!79210))

(declare-fun m!80049 () Bool)

(assert (=> b!79210 m!80049))

(declare-fun m!80051 () Bool)

(assert (=> d!18963 m!80051))

(declare-fun m!80053 () Bool)

(assert (=> d!18963 m!80053))

(declare-fun m!80055 () Bool)

(assert (=> b!79205 m!80055))

(declare-fun m!80057 () Bool)

(assert (=> b!79206 m!80057))

(declare-fun m!80059 () Bool)

(assert (=> bm!7307 m!80059))

(assert (=> b!78414 d!18963))

(declare-fun d!18965 () Bool)

(declare-fun e!51733 () Bool)

(assert (=> d!18965 e!51733))

(declare-fun res!41383 () Bool)

(assert (=> d!18965 (=> res!41383 e!51733)))

(declare-fun lt!36760 () Bool)

(assert (=> d!18965 (= res!41383 (not lt!36760))))

(declare-fun lt!36757 () Bool)

(assert (=> d!18965 (= lt!36760 lt!36757)))

(declare-fun lt!36758 () Unit!2257)

(declare-fun e!51734 () Unit!2257)

(assert (=> d!18965 (= lt!36758 e!51734)))

(declare-fun c!12265 () Bool)

(assert (=> d!18965 (= c!12265 lt!36757)))

(assert (=> d!18965 (= lt!36757 (containsKey!141 (toList!739 lt!36389) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18965 (= (contains!742 lt!36389 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36760)))

(declare-fun b!79212 () Bool)

(declare-fun lt!36759 () Unit!2257)

(assert (=> b!79212 (= e!51734 lt!36759)))

(assert (=> b!79212 (= lt!36759 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36389) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79212 (isDefined!90 (getValueByKey!137 (toList!739 lt!36389) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79213 () Bool)

(declare-fun Unit!2300 () Unit!2257)

(assert (=> b!79213 (= e!51734 Unit!2300)))

(declare-fun b!79214 () Bool)

(assert (=> b!79214 (= e!51733 (isDefined!90 (getValueByKey!137 (toList!739 lt!36389) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18965 c!12265) b!79212))

(assert (= (and d!18965 (not c!12265)) b!79213))

(assert (= (and d!18965 (not res!41383)) b!79214))

(declare-fun m!80061 () Bool)

(assert (=> d!18965 m!80061))

(declare-fun m!80063 () Bool)

(assert (=> b!79212 m!80063))

(declare-fun m!80065 () Bool)

(assert (=> b!79212 m!80065))

(assert (=> b!79212 m!80065))

(declare-fun m!80067 () Bool)

(assert (=> b!79212 m!80067))

(assert (=> b!79214 m!80065))

(assert (=> b!79214 m!80065))

(assert (=> b!79214 m!80067))

(assert (=> bm!7225 d!18965))

(declare-fun d!18967 () Bool)

(declare-fun res!41384 () Bool)

(declare-fun e!51735 () Bool)

(assert (=> d!18967 (=> res!41384 e!51735)))

(assert (=> d!18967 (= res!41384 (and ((_ is Cons!1503) (toList!739 lt!36000)) (= (_1!1097 (h!2091 (toList!739 lt!36000))) (_1!1097 lt!35870))))))

(assert (=> d!18967 (= (containsKey!141 (toList!739 lt!36000) (_1!1097 lt!35870)) e!51735)))

(declare-fun b!79215 () Bool)

(declare-fun e!51736 () Bool)

(assert (=> b!79215 (= e!51735 e!51736)))

(declare-fun res!41385 () Bool)

(assert (=> b!79215 (=> (not res!41385) (not e!51736))))

(assert (=> b!79215 (= res!41385 (and (or (not ((_ is Cons!1503) (toList!739 lt!36000))) (bvsle (_1!1097 (h!2091 (toList!739 lt!36000))) (_1!1097 lt!35870))) ((_ is Cons!1503) (toList!739 lt!36000)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36000))) (_1!1097 lt!35870))))))

(declare-fun b!79216 () Bool)

(assert (=> b!79216 (= e!51736 (containsKey!141 (t!5153 (toList!739 lt!36000)) (_1!1097 lt!35870)))))

(assert (= (and d!18967 (not res!41384)) b!79215))

(assert (= (and b!79215 res!41385) b!79216))

(declare-fun m!80069 () Bool)

(assert (=> b!79216 m!80069))

(assert (=> d!18631 d!18967))

(declare-fun b!79217 () Bool)

(declare-fun e!51743 () ListLongMap!1447)

(assert (=> b!79217 (= e!51743 (ListLongMap!1448 Nil!1504))))

(declare-fun lt!36761 () ListLongMap!1447)

(declare-fun e!51741 () Bool)

(declare-fun b!79218 () Bool)

(assert (=> b!79218 (= e!51741 (= lt!36761 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) (zeroValue!2170 newMap!16) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16))))))

(declare-fun b!79219 () Bool)

(assert (=> b!79219 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> b!79219 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))))))))

(declare-fun e!51738 () Bool)

(assert (=> b!79219 (= e!51738 (= (apply!79 lt!36761 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79220 () Bool)

(declare-fun e!51742 () Bool)

(assert (=> b!79220 (= e!51742 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79220 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!79222 () Bool)

(declare-fun e!51740 () ListLongMap!1447)

(assert (=> b!79222 (= e!51743 e!51740)))

(declare-fun c!12267 () Bool)

(assert (=> b!79222 (= c!12267 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79223 () Bool)

(declare-fun e!51737 () Bool)

(assert (=> b!79223 (= e!51737 e!51738)))

(assert (=> b!79223 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun res!41388 () Bool)

(assert (=> b!79223 (= res!41388 (contains!742 lt!36761 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79223 (=> (not res!41388) (not e!51738))))

(declare-fun bm!7309 () Bool)

(declare-fun call!7312 () ListLongMap!1447)

(assert (=> bm!7309 (= call!7312 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) (zeroValue!2170 newMap!16) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16)))))

(declare-fun b!79224 () Bool)

(declare-fun e!51739 () Bool)

(assert (=> b!79224 (= e!51739 e!51737)))

(declare-fun c!12268 () Bool)

(assert (=> b!79224 (= c!12268 e!51742)))

(declare-fun res!41389 () Bool)

(assert (=> b!79224 (=> (not res!41389) (not e!51742))))

(assert (=> b!79224 (= res!41389 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun d!18969 () Bool)

(assert (=> d!18969 e!51739))

(declare-fun res!41386 () Bool)

(assert (=> d!18969 (=> (not res!41386) (not e!51739))))

(assert (=> d!18969 (= res!41386 (not (contains!742 lt!36761 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18969 (= lt!36761 e!51743)))

(declare-fun c!12266 () Bool)

(assert (=> d!18969 (= c!12266 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!18969 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18969 (= (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (ite c!11979 (ite c!11977 (extraKeys!2123 newMap!16) lt!36129) (extraKeys!2123 newMap!16)) (zeroValue!2170 newMap!16) (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36761)))

(declare-fun b!79221 () Bool)

(declare-fun lt!36764 () Unit!2257)

(declare-fun lt!36762 () Unit!2257)

(assert (=> b!79221 (= lt!36764 lt!36762)))

(declare-fun lt!36763 () (_ BitVec 64))

(declare-fun lt!36765 () ListLongMap!1447)

(declare-fun lt!36767 () (_ BitVec 64))

(declare-fun lt!36766 () V!2995)

(assert (=> b!79221 (not (contains!742 (+!105 lt!36765 (tuple2!2173 lt!36763 lt!36766)) lt!36767))))

(assert (=> b!79221 (= lt!36762 (addStillNotContains!28 lt!36765 lt!36763 lt!36766 lt!36767))))

(assert (=> b!79221 (= lt!36767 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79221 (= lt!36766 (get!1173 (select (arr!1896 (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79221 (= lt!36763 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79221 (= lt!36765 call!7312)))

(assert (=> b!79221 (= e!51740 (+!105 call!7312 (tuple2!2173 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (get!1173 (select (arr!1896 (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79225 () Bool)

(assert (=> b!79225 (= e!51737 e!51741)))

(declare-fun c!12269 () Bool)

(assert (=> b!79225 (= c!12269 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!79226 () Bool)

(assert (=> b!79226 (= e!51741 (isEmpty!326 lt!36761))))

(declare-fun b!79227 () Bool)

(declare-fun res!41387 () Bool)

(assert (=> b!79227 (=> (not res!41387) (not e!51739))))

(assert (=> b!79227 (= res!41387 (not (contains!742 lt!36761 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79228 () Bool)

(assert (=> b!79228 (= e!51740 call!7312)))

(assert (= (and d!18969 c!12266) b!79217))

(assert (= (and d!18969 (not c!12266)) b!79222))

(assert (= (and b!79222 c!12267) b!79221))

(assert (= (and b!79222 (not c!12267)) b!79228))

(assert (= (or b!79221 b!79228) bm!7309))

(assert (= (and d!18969 res!41386) b!79227))

(assert (= (and b!79227 res!41387) b!79224))

(assert (= (and b!79224 res!41389) b!79220))

(assert (= (and b!79224 c!12268) b!79223))

(assert (= (and b!79224 (not c!12268)) b!79225))

(assert (= (and b!79223 res!41388) b!79219))

(assert (= (and b!79225 c!12269) b!79218))

(assert (= (and b!79225 (not c!12269)) b!79226))

(declare-fun b_lambda!3541 () Bool)

(assert (=> (not b_lambda!3541) (not b!79219)))

(assert (=> b!79219 t!5161))

(declare-fun b_and!4867 () Bool)

(assert (= b_and!4863 (and (=> t!5161 result!2825) b_and!4867)))

(assert (=> b!79219 t!5163))

(declare-fun b_and!4869 () Bool)

(assert (= b_and!4865 (and (=> t!5163 result!2827) b_and!4869)))

(declare-fun b_lambda!3543 () Bool)

(assert (=> (not b_lambda!3543) (not b!79221)))

(assert (=> b!79221 t!5161))

(declare-fun b_and!4871 () Bool)

(assert (= b_and!4867 (and (=> t!5161 result!2825) b_and!4871)))

(assert (=> b!79221 t!5163))

(declare-fun b_and!4873 () Bool)

(assert (= b_and!4869 (and (=> t!5163 result!2827) b_and!4873)))

(declare-fun m!80071 () Bool)

(assert (=> b!79218 m!80071))

(assert (=> bm!7309 m!80071))

(assert (=> b!79223 m!78509))

(assert (=> b!79223 m!78509))

(declare-fun m!80073 () Bool)

(assert (=> b!79223 m!80073))

(declare-fun m!80075 () Bool)

(assert (=> d!18969 m!80075))

(assert (=> d!18969 m!78411))

(assert (=> b!79220 m!78509))

(assert (=> b!79220 m!78509))

(assert (=> b!79220 m!78537))

(assert (=> b!79222 m!78509))

(assert (=> b!79222 m!78509))

(assert (=> b!79222 m!78537))

(declare-fun m!80077 () Bool)

(assert (=> b!79227 m!80077))

(declare-fun m!80079 () Bool)

(assert (=> b!79226 m!80079))

(assert (=> b!79219 m!78913))

(assert (=> b!79219 m!78533))

(assert (=> b!79219 m!78915))

(assert (=> b!79219 m!78509))

(assert (=> b!79219 m!78913))

(assert (=> b!79219 m!78509))

(declare-fun m!80081 () Bool)

(assert (=> b!79219 m!80081))

(assert (=> b!79219 m!78533))

(declare-fun m!80083 () Bool)

(assert (=> b!79221 m!80083))

(assert (=> b!79221 m!78913))

(assert (=> b!79221 m!78533))

(assert (=> b!79221 m!78915))

(assert (=> b!79221 m!78509))

(declare-fun m!80085 () Bool)

(assert (=> b!79221 m!80085))

(assert (=> b!79221 m!78913))

(declare-fun m!80087 () Bool)

(assert (=> b!79221 m!80087))

(declare-fun m!80089 () Bool)

(assert (=> b!79221 m!80089))

(assert (=> b!79221 m!80087))

(assert (=> b!79221 m!78533))

(assert (=> bm!7215 d!18969))

(declare-fun d!18971 () Bool)

(assert (=> d!18971 (= (inRange!0 (ite c!12118 (index!3095 lt!36508) (ite c!12117 (index!3094 lt!36504) (index!3097 lt!36504))) (mask!6268 newMap!16)) (and (bvsge (ite c!12118 (index!3095 lt!36508) (ite c!12117 (index!3094 lt!36504) (index!3097 lt!36504))) #b00000000000000000000000000000000) (bvslt (ite c!12118 (index!3095 lt!36508) (ite c!12117 (index!3094 lt!36504) (index!3097 lt!36504))) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7250 d!18971))

(assert (=> b!78761 d!18757))

(assert (=> b!78761 d!18759))

(declare-fun d!18973 () Bool)

(declare-fun lt!36768 () Bool)

(assert (=> d!18973 (= lt!36768 (select (content!83 lt!36431) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun e!51745 () Bool)

(assert (=> d!18973 (= lt!36768 e!51745)))

(declare-fun res!41390 () Bool)

(assert (=> d!18973 (=> (not res!41390) (not e!51745))))

(assert (=> d!18973 (= res!41390 ((_ is Cons!1503) lt!36431))))

(assert (=> d!18973 (= (contains!743 lt!36431 (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))) lt!36768)))

(declare-fun b!79229 () Bool)

(declare-fun e!51744 () Bool)

(assert (=> b!79229 (= e!51745 e!51744)))

(declare-fun res!41391 () Bool)

(assert (=> b!79229 (=> res!41391 e!51744)))

(assert (=> b!79229 (= res!41391 (= (h!2091 lt!36431) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun b!79230 () Bool)

(assert (=> b!79230 (= e!51744 (contains!743 (t!5153 lt!36431) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(assert (= (and d!18973 res!41390) b!79229))

(assert (= (and b!79229 (not res!41391)) b!79230))

(declare-fun m!80091 () Bool)

(assert (=> d!18973 m!80091))

(declare-fun m!80093 () Bool)

(assert (=> d!18973 m!80093))

(declare-fun m!80095 () Bool)

(assert (=> b!79230 m!80095))

(assert (=> b!78674 d!18973))

(declare-fun d!18975 () Bool)

(declare-fun res!41392 () Bool)

(declare-fun e!51746 () Bool)

(assert (=> d!18975 (=> res!41392 e!51746)))

(assert (=> d!18975 (= res!41392 (and ((_ is Cons!1503) (toList!739 lt!35983)) (= (_1!1097 (h!2091 (toList!739 lt!35983))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18975 (= (containsKey!141 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000) e!51746)))

(declare-fun b!79231 () Bool)

(declare-fun e!51747 () Bool)

(assert (=> b!79231 (= e!51746 e!51747)))

(declare-fun res!41393 () Bool)

(assert (=> b!79231 (=> (not res!41393) (not e!51747))))

(assert (=> b!79231 (= res!41393 (and (or (not ((_ is Cons!1503) (toList!739 lt!35983))) (bvsle (_1!1097 (h!2091 (toList!739 lt!35983))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1503) (toList!739 lt!35983)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35983))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79232 () Bool)

(assert (=> b!79232 (= e!51747 (containsKey!141 (t!5153 (toList!739 lt!35983)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!18975 (not res!41392)) b!79231))

(assert (= (and b!79231 res!41393) b!79232))

(declare-fun m!80097 () Bool)

(assert (=> b!79232 m!80097))

(assert (=> d!18655 d!18975))

(assert (=> d!18683 d!18681))

(declare-fun d!18977 () Bool)

(assert (=> d!18977 (= (getValueByKey!137 lt!36048 (_1!1097 lt!35870)) (Some!142 (_2!1097 lt!35870)))))

(assert (=> d!18977 true))

(declare-fun _$22!393 () Unit!2257)

(assert (=> d!18977 (= (choose!456 lt!36048 (_1!1097 lt!35870) (_2!1097 lt!35870)) _$22!393)))

(declare-fun bs!3352 () Bool)

(assert (= bs!3352 d!18977))

(assert (=> bs!3352 m!78259))

(assert (=> d!18683 d!18977))

(declare-fun d!18979 () Bool)

(declare-fun res!41394 () Bool)

(declare-fun e!51748 () Bool)

(assert (=> d!18979 (=> res!41394 e!51748)))

(assert (=> d!18979 (= res!41394 (or ((_ is Nil!1504) lt!36048) ((_ is Nil!1504) (t!5153 lt!36048))))))

(assert (=> d!18979 (= (isStrictlySorted!295 lt!36048) e!51748)))

(declare-fun b!79233 () Bool)

(declare-fun e!51749 () Bool)

(assert (=> b!79233 (= e!51748 e!51749)))

(declare-fun res!41395 () Bool)

(assert (=> b!79233 (=> (not res!41395) (not e!51749))))

(assert (=> b!79233 (= res!41395 (bvslt (_1!1097 (h!2091 lt!36048)) (_1!1097 (h!2091 (t!5153 lt!36048)))))))

(declare-fun b!79234 () Bool)

(assert (=> b!79234 (= e!51749 (isStrictlySorted!295 (t!5153 lt!36048)))))

(assert (= (and d!18979 (not res!41394)) b!79233))

(assert (= (and b!79233 res!41395) b!79234))

(declare-fun m!80099 () Bool)

(assert (=> b!79234 m!80099))

(assert (=> d!18683 d!18979))

(declare-fun d!18981 () Bool)

(declare-fun lt!36769 () Bool)

(assert (=> d!18981 (= lt!36769 (select (content!83 (t!5153 (toList!739 lt!36000))) lt!35870))))

(declare-fun e!51751 () Bool)

(assert (=> d!18981 (= lt!36769 e!51751)))

(declare-fun res!41396 () Bool)

(assert (=> d!18981 (=> (not res!41396) (not e!51751))))

(assert (=> d!18981 (= res!41396 ((_ is Cons!1503) (t!5153 (toList!739 lt!36000))))))

(assert (=> d!18981 (= (contains!743 (t!5153 (toList!739 lt!36000)) lt!35870) lt!36769)))

(declare-fun b!79235 () Bool)

(declare-fun e!51750 () Bool)

(assert (=> b!79235 (= e!51751 e!51750)))

(declare-fun res!41397 () Bool)

(assert (=> b!79235 (=> res!41397 e!51750)))

(assert (=> b!79235 (= res!41397 (= (h!2091 (t!5153 (toList!739 lt!36000))) lt!35870))))

(declare-fun b!79236 () Bool)

(assert (=> b!79236 (= e!51750 (contains!743 (t!5153 (t!5153 (toList!739 lt!36000))) lt!35870))))

(assert (= (and d!18981 res!41396) b!79235))

(assert (= (and b!79235 (not res!41397)) b!79236))

(declare-fun m!80101 () Bool)

(assert (=> d!18981 m!80101))

(declare-fun m!80103 () Bool)

(assert (=> d!18981 m!80103))

(declare-fun m!80105 () Bool)

(assert (=> b!79236 m!80105))

(assert (=> b!78728 d!18981))

(declare-fun d!18983 () Bool)

(assert (=> d!18983 (= (apply!79 lt!36213 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1176 (getValueByKey!137 (toList!739 lt!36213) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3353 () Bool)

(assert (= bs!3353 d!18983))

(declare-fun m!80107 () Bool)

(assert (=> bs!3353 m!80107))

(assert (=> bs!3353 m!80107))

(declare-fun m!80109 () Bool)

(assert (=> bs!3353 m!80109))

(assert (=> b!78290 d!18983))

(declare-fun d!18985 () Bool)

(assert (=> d!18985 (= ($colon$colon!69 e!51343 (ite c!12068 (h!2091 (toList!739 lt!35869)) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870)))) (Cons!1503 (ite c!12068 (h!2091 (toList!739 lt!35869)) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))) e!51343))))

(assert (=> bm!7222 d!18985))

(declare-fun d!18987 () Bool)

(assert (=> d!18987 (isDefined!90 (getValueByKey!137 (toList!739 lt!36045) (_1!1097 lt!35864)))))

(declare-fun lt!36770 () Unit!2257)

(assert (=> d!18987 (= lt!36770 (choose!465 (toList!739 lt!36045) (_1!1097 lt!35864)))))

(declare-fun e!51752 () Bool)

(assert (=> d!18987 e!51752))

(declare-fun res!41398 () Bool)

(assert (=> d!18987 (=> (not res!41398) (not e!51752))))

(assert (=> d!18987 (= res!41398 (isStrictlySorted!295 (toList!739 lt!36045)))))

(assert (=> d!18987 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36045) (_1!1097 lt!35864)) lt!36770)))

(declare-fun b!79237 () Bool)

(assert (=> b!79237 (= e!51752 (containsKey!141 (toList!739 lt!36045) (_1!1097 lt!35864)))))

(assert (= (and d!18987 res!41398) b!79237))

(assert (=> d!18987 m!78253))

(assert (=> d!18987 m!78253))

(assert (=> d!18987 m!79109))

(declare-fun m!80111 () Bool)

(assert (=> d!18987 m!80111))

(declare-fun m!80113 () Bool)

(assert (=> d!18987 m!80113))

(assert (=> b!79237 m!79105))

(assert (=> b!78638 d!18987))

(declare-fun d!18989 () Bool)

(assert (=> d!18989 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!36045) (_1!1097 lt!35864))) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!36045) (_1!1097 lt!35864)))))))

(declare-fun bs!3354 () Bool)

(assert (= bs!3354 d!18989))

(assert (=> bs!3354 m!78253))

(declare-fun m!80115 () Bool)

(assert (=> bs!3354 m!80115))

(assert (=> b!78638 d!18989))

(assert (=> b!78638 d!18659))

(declare-fun d!18991 () Bool)

(assert (=> d!18991 (= (inRange!0 (ite c!12041 (index!3094 lt!36308) (index!3097 lt!36308)) (mask!6268 newMap!16)) (and (bvsge (ite c!12041 (index!3094 lt!36308) (index!3097 lt!36308)) #b00000000000000000000000000000000) (bvslt (ite c!12041 (index!3094 lt!36308) (index!3097 lt!36308)) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7205 d!18991))

(declare-fun d!18993 () Bool)

(declare-fun e!51753 () Bool)

(assert (=> d!18993 e!51753))

(declare-fun res!41399 () Bool)

(assert (=> d!18993 (=> res!41399 e!51753)))

(declare-fun lt!36774 () Bool)

(assert (=> d!18993 (= res!41399 (not lt!36774))))

(declare-fun lt!36771 () Bool)

(assert (=> d!18993 (= lt!36774 lt!36771)))

(declare-fun lt!36772 () Unit!2257)

(declare-fun e!51754 () Unit!2257)

(assert (=> d!18993 (= lt!36772 e!51754)))

(declare-fun c!12270 () Bool)

(assert (=> d!18993 (= c!12270 lt!36771)))

(assert (=> d!18993 (= lt!36771 (containsKey!141 (toList!739 lt!36524) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!18993 (= (contains!742 lt!36524 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) lt!36774)))

(declare-fun b!79238 () Bool)

(declare-fun lt!36773 () Unit!2257)

(assert (=> b!79238 (= e!51754 lt!36773)))

(assert (=> b!79238 (= lt!36773 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36524) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> b!79238 (isDefined!90 (getValueByKey!137 (toList!739 lt!36524) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79239 () Bool)

(declare-fun Unit!2301 () Unit!2257)

(assert (=> b!79239 (= e!51754 Unit!2301)))

(declare-fun b!79240 () Bool)

(assert (=> b!79240 (= e!51753 (isDefined!90 (getValueByKey!137 (toList!739 lt!36524) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!18993 c!12270) b!79238))

(assert (= (and d!18993 (not c!12270)) b!79239))

(assert (= (and d!18993 (not res!41399)) b!79240))

(declare-fun m!80117 () Bool)

(assert (=> d!18993 m!80117))

(declare-fun m!80119 () Bool)

(assert (=> b!79238 m!80119))

(assert (=> b!79238 m!79227))

(assert (=> b!79238 m!79227))

(declare-fun m!80121 () Bool)

(assert (=> b!79238 m!80121))

(assert (=> b!79240 m!79227))

(assert (=> b!79240 m!79227))

(assert (=> b!79240 m!80121))

(assert (=> d!18693 d!18993))

(declare-fun b!79244 () Bool)

(declare-fun e!51756 () Option!143)

(assert (=> b!79244 (= e!51756 None!141)))

(declare-fun d!18995 () Bool)

(declare-fun c!12271 () Bool)

(assert (=> d!18995 (= c!12271 (and ((_ is Cons!1503) lt!36523) (= (_1!1097 (h!2091 lt!36523)) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun e!51755 () Option!143)

(assert (=> d!18995 (= (getValueByKey!137 lt!36523 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) e!51755)))

(declare-fun b!79243 () Bool)

(assert (=> b!79243 (= e!51756 (getValueByKey!137 (t!5153 lt!36523) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79241 () Bool)

(assert (=> b!79241 (= e!51755 (Some!142 (_2!1097 (h!2091 lt!36523))))))

(declare-fun b!79242 () Bool)

(assert (=> b!79242 (= e!51755 e!51756)))

(declare-fun c!12272 () Bool)

(assert (=> b!79242 (= c!12272 (and ((_ is Cons!1503) lt!36523) (not (= (_1!1097 (h!2091 lt!36523)) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))))

(assert (= (and d!18995 c!12271) b!79241))

(assert (= (and d!18995 (not c!12271)) b!79242))

(assert (= (and b!79242 c!12272) b!79243))

(assert (= (and b!79242 (not c!12272)) b!79244))

(declare-fun m!80123 () Bool)

(assert (=> b!79243 m!80123))

(assert (=> d!18693 d!18995))

(declare-fun d!18997 () Bool)

(assert (=> d!18997 (= (getValueByKey!137 lt!36523 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (Some!142 (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun lt!36775 () Unit!2257)

(assert (=> d!18997 (= lt!36775 (choose!456 lt!36523 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51757 () Bool)

(assert (=> d!18997 e!51757))

(declare-fun res!41400 () Bool)

(assert (=> d!18997 (=> (not res!41400) (not e!51757))))

(assert (=> d!18997 (= res!41400 (isStrictlySorted!295 lt!36523))))

(assert (=> d!18997 (= (lemmaContainsTupThenGetReturnValue!54 lt!36523 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) lt!36775)))

(declare-fun b!79245 () Bool)

(declare-fun res!41401 () Bool)

(assert (=> b!79245 (=> (not res!41401) (not e!51757))))

(assert (=> b!79245 (= res!41401 (containsKey!141 lt!36523 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79246 () Bool)

(assert (=> b!79246 (= e!51757 (contains!743 lt!36523 (tuple2!2173 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!18997 res!41400) b!79245))

(assert (= (and b!79245 res!41401) b!79246))

(assert (=> d!18997 m!79221))

(declare-fun m!80125 () Bool)

(assert (=> d!18997 m!80125))

(declare-fun m!80127 () Bool)

(assert (=> d!18997 m!80127))

(declare-fun m!80129 () Bool)

(assert (=> b!79245 m!80129))

(declare-fun m!80131 () Bool)

(assert (=> b!79246 m!80131))

(assert (=> d!18693 d!18997))

(declare-fun c!12275 () Bool)

(declare-fun e!51758 () List!1507)

(declare-fun b!79247 () Bool)

(declare-fun c!12276 () Bool)

(assert (=> b!79247 (= e!51758 (ite c!12276 (t!5153 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105)))) (ite c!12275 (Cons!1503 (h!2091 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105)))) (t!5153 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105))))) Nil!1504)))))

(declare-fun b!79248 () Bool)

(declare-fun e!51762 () List!1507)

(declare-fun call!7315 () List!1507)

(assert (=> b!79248 (= e!51762 call!7315)))

(declare-fun bm!7310 () Bool)

(declare-fun call!7313 () List!1507)

(declare-fun call!7314 () List!1507)

(assert (=> bm!7310 (= call!7313 call!7314)))

(declare-fun b!79249 () Bool)

(assert (=> b!79249 (= c!12275 (and ((_ is Cons!1503) (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105)))) (bvsgt (_1!1097 (h!2091 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105))))) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun e!51760 () List!1507)

(declare-fun e!51759 () List!1507)

(assert (=> b!79249 (= e!51760 e!51759)))

(declare-fun b!79250 () Bool)

(assert (=> b!79250 (= e!51758 (insertStrictlySorted!57 (t!5153 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105)))) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79251 () Bool)

(declare-fun res!41403 () Bool)

(declare-fun e!51761 () Bool)

(assert (=> b!79251 (=> (not res!41403) (not e!51761))))

(declare-fun lt!36776 () List!1507)

(assert (=> b!79251 (= res!41403 (containsKey!141 lt!36776 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun bm!7311 () Bool)

(declare-fun c!12273 () Bool)

(assert (=> bm!7311 (= call!7315 ($colon$colon!69 e!51758 (ite c!12273 (h!2091 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105)))) (tuple2!2173 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))))

(declare-fun c!12274 () Bool)

(assert (=> bm!7311 (= c!12274 c!12273)))

(declare-fun b!79252 () Bool)

(assert (=> b!79252 (= e!51762 e!51760)))

(assert (=> b!79252 (= c!12276 (and ((_ is Cons!1503) (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105)))) (= (_1!1097 (h!2091 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105))))) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun b!79254 () Bool)

(assert (=> b!79254 (= e!51760 call!7314)))

(declare-fun b!79255 () Bool)

(assert (=> b!79255 (= e!51761 (contains!743 lt!36776 (tuple2!2173 (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun b!79253 () Bool)

(assert (=> b!79253 (= e!51759 call!7313)))

(declare-fun d!18999 () Bool)

(assert (=> d!18999 e!51761))

(declare-fun res!41402 () Bool)

(assert (=> d!18999 (=> (not res!41402) (not e!51761))))

(assert (=> d!18999 (= res!41402 (isStrictlySorted!295 lt!36776))))

(assert (=> d!18999 (= lt!36776 e!51762)))

(assert (=> d!18999 (= c!12273 (and ((_ is Cons!1503) (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105)))) (bvslt (_1!1097 (h!2091 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105))))) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (=> d!18999 (isStrictlySorted!295 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105))))))

(assert (=> d!18999 (= (insertStrictlySorted!57 (toList!739 (ite c!11909 call!7104 (ite c!11913 call!7100 call!7105))) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_2!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) lt!36776)))

(declare-fun bm!7312 () Bool)

(assert (=> bm!7312 (= call!7314 call!7315)))

(declare-fun b!79256 () Bool)

(assert (=> b!79256 (= e!51759 call!7313)))

(assert (= (and d!18999 c!12273) b!79248))

(assert (= (and d!18999 (not c!12273)) b!79252))

(assert (= (and b!79252 c!12276) b!79254))

(assert (= (and b!79252 (not c!12276)) b!79249))

(assert (= (and b!79249 c!12275) b!79253))

(assert (= (and b!79249 (not c!12275)) b!79256))

(assert (= (or b!79253 b!79256) bm!7310))

(assert (= (or b!79254 bm!7310) bm!7312))

(assert (= (or b!79248 bm!7312) bm!7311))

(assert (= (and bm!7311 c!12274) b!79250))

(assert (= (and bm!7311 (not c!12274)) b!79247))

(assert (= (and d!18999 res!41402) b!79251))

(assert (= (and b!79251 res!41403) b!79255))

(declare-fun m!80133 () Bool)

(assert (=> b!79255 m!80133))

(declare-fun m!80135 () Bool)

(assert (=> d!18999 m!80135))

(declare-fun m!80137 () Bool)

(assert (=> d!18999 m!80137))

(declare-fun m!80139 () Bool)

(assert (=> b!79250 m!80139))

(declare-fun m!80141 () Bool)

(assert (=> b!79251 m!80141))

(declare-fun m!80143 () Bool)

(assert (=> bm!7311 m!80143))

(assert (=> d!18693 d!18999))

(declare-fun d!19001 () Bool)

(declare-fun res!41404 () Bool)

(declare-fun e!51763 () Bool)

(assert (=> d!19001 (=> res!41404 e!51763)))

(assert (=> d!19001 (= res!41404 (and ((_ is Cons!1503) (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))))) lt!36027)))))

(assert (=> d!19001 (= (containsKey!141 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027) e!51763)))

(declare-fun b!79257 () Bool)

(declare-fun e!51764 () Bool)

(assert (=> b!79257 (= e!51763 e!51764)))

(declare-fun res!41405 () Bool)

(assert (=> b!79257 (=> (not res!41405) (not e!51764))))

(assert (=> b!79257 (= res!41405 (and (or (not ((_ is Cons!1503) (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))))) (bvsle (_1!1097 (h!2091 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))))) lt!36027)) ((_ is Cons!1503) (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)))) (bvslt (_1!1097 (h!2091 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))))) lt!36027)))))

(declare-fun b!79258 () Bool)

(assert (=> b!79258 (= e!51764 (containsKey!141 (t!5153 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)))) lt!36027))))

(assert (= (and d!19001 (not res!41404)) b!79257))

(assert (= (and b!79257 res!41405) b!79258))

(declare-fun m!80145 () Bool)

(assert (=> b!79258 m!80145))

(assert (=> d!18547 d!19001))

(declare-fun d!19003 () Bool)

(assert (=> d!19003 (= (get!1176 (getValueByKey!137 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2596 (getValueByKey!137 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18651 d!19003))

(declare-fun b!79262 () Bool)

(declare-fun e!51766 () Option!143)

(assert (=> b!79262 (= e!51766 None!141)))

(declare-fun d!19005 () Bool)

(declare-fun c!12277 () Bool)

(assert (=> d!19005 (= c!12277 (and ((_ is Cons!1503) (toList!739 lt!35983)) (= (_1!1097 (h!2091 (toList!739 lt!35983))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!51765 () Option!143)

(assert (=> d!19005 (= (getValueByKey!137 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000) e!51765)))

(declare-fun b!79261 () Bool)

(assert (=> b!79261 (= e!51766 (getValueByKey!137 (t!5153 (toList!739 lt!35983)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79259 () Bool)

(assert (=> b!79259 (= e!51765 (Some!142 (_2!1097 (h!2091 (toList!739 lt!35983)))))))

(declare-fun b!79260 () Bool)

(assert (=> b!79260 (= e!51765 e!51766)))

(declare-fun c!12278 () Bool)

(assert (=> b!79260 (= c!12278 (and ((_ is Cons!1503) (toList!739 lt!35983)) (not (= (_1!1097 (h!2091 (toList!739 lt!35983))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!19005 c!12277) b!79259))

(assert (= (and d!19005 (not c!12277)) b!79260))

(assert (= (and b!79260 c!12278) b!79261))

(assert (= (and b!79260 (not c!12278)) b!79262))

(declare-fun m!80147 () Bool)

(assert (=> b!79261 m!80147))

(assert (=> d!18651 d!19005))

(declare-fun d!19007 () Bool)

(assert (=> d!19007 (isDefined!90 (getValueByKey!137 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun lt!36777 () Unit!2257)

(assert (=> d!19007 (= lt!36777 (choose!465 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun e!51767 () Bool)

(assert (=> d!19007 e!51767))

(declare-fun res!41406 () Bool)

(assert (=> d!19007 (=> (not res!41406) (not e!51767))))

(assert (=> d!19007 (= res!41406 (isStrictlySorted!295 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))))

(assert (=> d!19007 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) lt!36777)))

(declare-fun b!79263 () Bool)

(assert (=> b!79263 (= e!51767 (containsKey!141 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (= (and d!19007 res!41406) b!79263))

(assert (=> d!19007 m!77965))

(assert (=> d!19007 m!78993))

(assert (=> d!19007 m!78993))

(assert (=> d!19007 m!78995))

(assert (=> d!19007 m!77965))

(declare-fun m!80149 () Bool)

(assert (=> d!19007 m!80149))

(declare-fun m!80151 () Bool)

(assert (=> d!19007 m!80151))

(assert (=> b!79263 m!77965))

(assert (=> b!79263 m!78989))

(assert (=> b!78574 d!19007))

(declare-fun d!19009 () Bool)

(assert (=> d!19009 (= (isDefined!90 (getValueByKey!137 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))) (not (isEmpty!328 (getValueByKey!137 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))))

(declare-fun bs!3355 () Bool)

(assert (= bs!3355 d!19009))

(assert (=> bs!3355 m!78993))

(declare-fun m!80153 () Bool)

(assert (=> bs!3355 m!80153))

(assert (=> b!78574 d!19009))

(declare-fun b!79267 () Bool)

(declare-fun e!51769 () Option!143)

(assert (=> b!79267 (= e!51769 None!141)))

(declare-fun c!12279 () Bool)

(declare-fun d!19011 () Bool)

(assert (=> d!19011 (= c!12279 (and ((_ is Cons!1503) (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (= (_1!1097 (h!2091 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(declare-fun e!51768 () Option!143)

(assert (=> d!19011 (= (getValueByKey!137 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) e!51768)))

(declare-fun b!79266 () Bool)

(assert (=> b!79266 (= e!51769 (getValueByKey!137 (t!5153 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!79264 () Bool)

(assert (=> b!79264 (= e!51768 (Some!142 (_2!1097 (h!2091 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))))))

(declare-fun b!79265 () Bool)

(assert (=> b!79265 (= e!51768 e!51769)))

(declare-fun c!12280 () Bool)

(assert (=> b!79265 (= c!12280 (and ((_ is Cons!1503) (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (not (= (_1!1097 (h!2091 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))))

(assert (= (and d!19011 c!12279) b!79264))

(assert (= (and d!19011 (not c!12279)) b!79265))

(assert (= (and b!79265 c!12280) b!79266))

(assert (= (and b!79265 (not c!12280)) b!79267))

(assert (=> b!79266 m!77965))

(declare-fun m!80155 () Bool)

(assert (=> b!79266 m!80155))

(assert (=> b!78574 d!19011))

(declare-fun d!19013 () Bool)

(assert (=> d!19013 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (getCurrentListMap!433 (_keys!3932 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(assert (=> d!19013 true))

(declare-fun _$5!83 () Unit!2257)

(assert (=> d!19013 (= (choose!464 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3095 lt!36128) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 (defaultEntry!2272 newMap!16)) _$5!83)))

(declare-fun bs!3356 () Bool)

(assert (= bs!3356 d!19013))

(assert (=> bs!3356 m!78087))

(assert (=> bs!3356 m!78087))

(assert (=> bs!3356 m!78985))

(assert (=> bs!3356 m!78341))

(assert (=> bs!3356 m!78987))

(assert (=> d!18641 d!19013))

(assert (=> d!18641 d!18765))

(declare-fun d!19015 () Bool)

(assert (=> d!19015 (= ($colon$colon!69 e!51298 (ite c!12045 (h!2091 (toList!739 lt!35865)) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861)))) (Cons!1503 (ite c!12045 (h!2091 (toList!739 lt!35865)) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))) e!51298))))

(assert (=> bm!7208 d!19015))

(declare-fun d!19017 () Bool)

(declare-fun c!12281 () Bool)

(assert (=> d!19017 (= c!12281 ((_ is Nil!1504) (toList!739 lt!36045)))))

(declare-fun e!51770 () (InoxSet tuple2!2172))

(assert (=> d!19017 (= (content!83 (toList!739 lt!36045)) e!51770)))

(declare-fun b!79268 () Bool)

(assert (=> b!79268 (= e!51770 ((as const (Array tuple2!2172 Bool)) false))))

(declare-fun b!79269 () Bool)

(assert (=> b!79269 (= e!51770 ((_ map or) (store ((as const (Array tuple2!2172 Bool)) false) (h!2091 (toList!739 lt!36045)) true) (content!83 (t!5153 (toList!739 lt!36045)))))))

(assert (= (and d!19017 c!12281) b!79268))

(assert (= (and d!19017 (not c!12281)) b!79269))

(declare-fun m!80157 () Bool)

(assert (=> b!79269 m!80157))

(assert (=> b!79269 m!79999))

(assert (=> d!18519 d!19017))

(assert (=> d!18481 d!18479))

(assert (=> d!18481 d!18487))

(assert (=> d!18481 d!18485))

(assert (=> d!18481 d!18483))

(declare-fun d!19019 () Bool)

(assert (=> d!19019 (= (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35982)) (v!2596 (getValueByKey!137 (toList!739 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35982)))))

(assert (=> d!18591 d!19019))

(declare-fun b!79273 () Bool)

(declare-fun e!51772 () Option!143)

(assert (=> b!79273 (= e!51772 None!141)))

(declare-fun d!19021 () Bool)

(declare-fun c!12282 () Bool)

(assert (=> d!19021 (= c!12282 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35982)))))

(declare-fun e!51771 () Option!143)

(assert (=> d!19021 (= (getValueByKey!137 (toList!739 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35982) e!51771)))

(declare-fun b!79272 () Bool)

(assert (=> b!79272 (= e!51772 (getValueByKey!137 (t!5153 (toList!739 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) lt!35982))))

(declare-fun b!79270 () Bool)

(assert (=> b!79270 (= e!51771 (Some!142 (_2!1097 (h!2091 (toList!739 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))))

(declare-fun b!79271 () Bool)

(assert (=> b!79271 (= e!51771 e!51772)))

(declare-fun c!12283 () Bool)

(assert (=> b!79271 (= c!12283 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (not (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35982))))))

(assert (= (and d!19021 c!12282) b!79270))

(assert (= (and d!19021 (not c!12282)) b!79271))

(assert (= (and b!79271 c!12283) b!79272))

(assert (= (and b!79271 (not c!12283)) b!79273))

(declare-fun m!80159 () Bool)

(assert (=> b!79272 m!80159))

(assert (=> d!18591 d!19021))

(declare-fun b!79274 () Bool)

(declare-fun e!51776 () Bool)

(declare-fun call!7316 () Bool)

(assert (=> b!79274 (= e!51776 call!7316)))

(declare-fun d!19023 () Bool)

(declare-fun res!41408 () Bool)

(declare-fun e!51773 () Bool)

(assert (=> d!19023 (=> res!41408 e!51773)))

(assert (=> d!19023 (= res!41408 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!19023 (= (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000 Nil!1505) e!51773)))

(declare-fun b!79275 () Bool)

(assert (=> b!79275 (= e!51776 call!7316)))

(declare-fun b!79276 () Bool)

(declare-fun e!51775 () Bool)

(assert (=> b!79276 (= e!51775 e!51776)))

(declare-fun c!12284 () Bool)

(assert (=> b!79276 (= c!12284 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!79277 () Bool)

(declare-fun e!51774 () Bool)

(assert (=> b!79277 (= e!51774 (contains!744 Nil!1505 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!79278 () Bool)

(assert (=> b!79278 (= e!51773 e!51775)))

(declare-fun res!41409 () Bool)

(assert (=> b!79278 (=> (not res!41409) (not e!51775))))

(assert (=> b!79278 (= res!41409 (not e!51774))))

(declare-fun res!41407 () Bool)

(assert (=> b!79278 (=> (not res!41407) (not e!51774))))

(assert (=> b!79278 (= res!41407 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7313 () Bool)

(assert (=> bm!7313 (= call!7316 (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12284 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) #b00000000000000000000000000000000) Nil!1505) Nil!1505)))))

(assert (= (and d!19023 (not res!41408)) b!79278))

(assert (= (and b!79278 res!41407) b!79277))

(assert (= (and b!79278 res!41409) b!79276))

(assert (= (and b!79276 c!12284) b!79274))

(assert (= (and b!79276 (not c!12284)) b!79275))

(assert (= (or b!79274 b!79275) bm!7313))

(assert (=> b!79276 m!79597))

(assert (=> b!79276 m!79597))

(assert (=> b!79276 m!79599))

(assert (=> b!79277 m!79597))

(assert (=> b!79277 m!79597))

(declare-fun m!80161 () Bool)

(assert (=> b!79277 m!80161))

(assert (=> b!79278 m!79597))

(assert (=> b!79278 m!79597))

(assert (=> b!79278 m!79599))

(assert (=> bm!7313 m!79597))

(declare-fun m!80163 () Bool)

(assert (=> bm!7313 m!80163))

(assert (=> b!78271 d!19023))

(declare-fun d!19025 () Bool)

(declare-fun e!51777 () Bool)

(assert (=> d!19025 e!51777))

(declare-fun res!41410 () Bool)

(assert (=> d!19025 (=> (not res!41410) (not e!51777))))

(declare-fun lt!36779 () ListLongMap!1447)

(assert (=> d!19025 (= res!41410 (contains!742 lt!36779 (_1!1097 (tuple2!2173 lt!36395 (minValue!2170 newMap!16)))))))

(declare-fun lt!36778 () List!1507)

(assert (=> d!19025 (= lt!36779 (ListLongMap!1448 lt!36778))))

(declare-fun lt!36781 () Unit!2257)

(declare-fun lt!36780 () Unit!2257)

(assert (=> d!19025 (= lt!36781 lt!36780)))

(assert (=> d!19025 (= (getValueByKey!137 lt!36778 (_1!1097 (tuple2!2173 lt!36395 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36395 (minValue!2170 newMap!16)))))))

(assert (=> d!19025 (= lt!36780 (lemmaContainsTupThenGetReturnValue!54 lt!36778 (_1!1097 (tuple2!2173 lt!36395 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36395 (minValue!2170 newMap!16)))))))

(assert (=> d!19025 (= lt!36778 (insertStrictlySorted!57 (toList!739 lt!36390) (_1!1097 (tuple2!2173 lt!36395 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36395 (minValue!2170 newMap!16)))))))

(assert (=> d!19025 (= (+!105 lt!36390 (tuple2!2173 lt!36395 (minValue!2170 newMap!16))) lt!36779)))

(declare-fun b!79279 () Bool)

(declare-fun res!41411 () Bool)

(assert (=> b!79279 (=> (not res!41411) (not e!51777))))

(assert (=> b!79279 (= res!41411 (= (getValueByKey!137 (toList!739 lt!36779) (_1!1097 (tuple2!2173 lt!36395 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36395 (minValue!2170 newMap!16))))))))

(declare-fun b!79280 () Bool)

(assert (=> b!79280 (= e!51777 (contains!743 (toList!739 lt!36779) (tuple2!2173 lt!36395 (minValue!2170 newMap!16))))))

(assert (= (and d!19025 res!41410) b!79279))

(assert (= (and b!79279 res!41411) b!79280))

(declare-fun m!80165 () Bool)

(assert (=> d!19025 m!80165))

(declare-fun m!80167 () Bool)

(assert (=> d!19025 m!80167))

(declare-fun m!80169 () Bool)

(assert (=> d!19025 m!80169))

(declare-fun m!80171 () Bool)

(assert (=> d!19025 m!80171))

(declare-fun m!80173 () Bool)

(assert (=> b!79279 m!80173))

(declare-fun m!80175 () Bool)

(assert (=> b!79280 m!80175))

(assert (=> b!78592 d!19025))

(declare-fun d!19027 () Bool)

(assert (=> d!19027 (contains!742 (+!105 lt!36384 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16))) lt!36386)))

(declare-fun lt!36782 () Unit!2257)

(assert (=> d!19027 (= lt!36782 (choose!459 lt!36384 lt!36377 (zeroValue!2170 newMap!16) lt!36386))))

(assert (=> d!19027 (contains!742 lt!36384 lt!36386)))

(assert (=> d!19027 (= (addStillContains!55 lt!36384 lt!36377 (zeroValue!2170 newMap!16) lt!36386) lt!36782)))

(declare-fun bs!3357 () Bool)

(assert (= bs!3357 d!19027))

(assert (=> bs!3357 m!79021))

(assert (=> bs!3357 m!79021))

(assert (=> bs!3357 m!79023))

(declare-fun m!80177 () Bool)

(assert (=> bs!3357 m!80177))

(declare-fun m!80179 () Bool)

(assert (=> bs!3357 m!80179))

(assert (=> b!78592 d!19027))

(declare-fun d!19029 () Bool)

(declare-fun e!51778 () Bool)

(assert (=> d!19029 e!51778))

(declare-fun res!41412 () Bool)

(assert (=> d!19029 (=> (not res!41412) (not e!51778))))

(declare-fun lt!36784 () ListLongMap!1447)

(assert (=> d!19029 (= res!41412 (contains!742 lt!36784 (_1!1097 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16)))))))

(declare-fun lt!36783 () List!1507)

(assert (=> d!19029 (= lt!36784 (ListLongMap!1448 lt!36783))))

(declare-fun lt!36786 () Unit!2257)

(declare-fun lt!36785 () Unit!2257)

(assert (=> d!19029 (= lt!36786 lt!36785)))

(assert (=> d!19029 (= (getValueByKey!137 lt!36783 (_1!1097 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19029 (= lt!36785 (lemmaContainsTupThenGetReturnValue!54 lt!36783 (_1!1097 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19029 (= lt!36783 (insertStrictlySorted!57 (toList!739 lt!36384) (_1!1097 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19029 (= (+!105 lt!36384 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16))) lt!36784)))

(declare-fun b!79281 () Bool)

(declare-fun res!41413 () Bool)

(assert (=> b!79281 (=> (not res!41413) (not e!51778))))

(assert (=> b!79281 (= res!41413 (= (getValueByKey!137 (toList!739 lt!36784) (_1!1097 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16))))))))

(declare-fun b!79282 () Bool)

(assert (=> b!79282 (= e!51778 (contains!743 (toList!739 lt!36784) (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16))))))

(assert (= (and d!19029 res!41412) b!79281))

(assert (= (and b!79281 res!41413) b!79282))

(declare-fun m!80181 () Bool)

(assert (=> d!19029 m!80181))

(declare-fun m!80183 () Bool)

(assert (=> d!19029 m!80183))

(declare-fun m!80185 () Bool)

(assert (=> d!19029 m!80185))

(declare-fun m!80187 () Bool)

(assert (=> d!19029 m!80187))

(declare-fun m!80189 () Bool)

(assert (=> b!79281 m!80189))

(declare-fun m!80191 () Bool)

(assert (=> b!79282 m!80191))

(assert (=> b!78592 d!19029))

(declare-fun d!19031 () Bool)

(assert (=> d!19031 (= (apply!79 lt!36390 lt!36388) (get!1176 (getValueByKey!137 (toList!739 lt!36390) lt!36388)))))

(declare-fun bs!3358 () Bool)

(assert (= bs!3358 d!19031))

(declare-fun m!80193 () Bool)

(assert (=> bs!3358 m!80193))

(assert (=> bs!3358 m!80193))

(declare-fun m!80195 () Bool)

(assert (=> bs!3358 m!80195))

(assert (=> b!78592 d!19031))

(declare-fun d!19033 () Bool)

(assert (=> d!19033 (= (apply!79 lt!36376 lt!36382) (get!1176 (getValueByKey!137 (toList!739 lt!36376) lt!36382)))))

(declare-fun bs!3359 () Bool)

(assert (= bs!3359 d!19033))

(declare-fun m!80197 () Bool)

(assert (=> bs!3359 m!80197))

(assert (=> bs!3359 m!80197))

(declare-fun m!80199 () Bool)

(assert (=> bs!3359 m!80199))

(assert (=> b!78592 d!19033))

(declare-fun d!19035 () Bool)

(assert (=> d!19035 (= (apply!79 (+!105 lt!36376 (tuple2!2173 lt!36380 (minValue!2170 newMap!16))) lt!36382) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!36376 (tuple2!2173 lt!36380 (minValue!2170 newMap!16)))) lt!36382)))))

(declare-fun bs!3360 () Bool)

(assert (= bs!3360 d!19035))

(declare-fun m!80201 () Bool)

(assert (=> bs!3360 m!80201))

(assert (=> bs!3360 m!80201))

(declare-fun m!80203 () Bool)

(assert (=> bs!3360 m!80203))

(assert (=> b!78592 d!19035))

(declare-fun d!19037 () Bool)

(assert (=> d!19037 (= (apply!79 lt!36393 lt!36394) (get!1176 (getValueByKey!137 (toList!739 lt!36393) lt!36394)))))

(declare-fun bs!3361 () Bool)

(assert (= bs!3361 d!19037))

(declare-fun m!80205 () Bool)

(assert (=> bs!3361 m!80205))

(assert (=> bs!3361 m!80205))

(declare-fun m!80207 () Bool)

(assert (=> bs!3361 m!80207))

(assert (=> b!78592 d!19037))

(declare-fun d!19039 () Bool)

(assert (=> d!19039 (= (apply!79 (+!105 lt!36393 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16))) lt!36394) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!36393 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16)))) lt!36394)))))

(declare-fun bs!3362 () Bool)

(assert (= bs!3362 d!19039))

(declare-fun m!80209 () Bool)

(assert (=> bs!3362 m!80209))

(assert (=> bs!3362 m!80209))

(declare-fun m!80211 () Bool)

(assert (=> bs!3362 m!80211))

(assert (=> b!78592 d!19039))

(declare-fun d!19041 () Bool)

(declare-fun e!51779 () Bool)

(assert (=> d!19041 e!51779))

(declare-fun res!41414 () Bool)

(assert (=> d!19041 (=> (not res!41414) (not e!51779))))

(declare-fun lt!36788 () ListLongMap!1447)

(assert (=> d!19041 (= res!41414 (contains!742 lt!36788 (_1!1097 (tuple2!2173 lt!36380 (minValue!2170 newMap!16)))))))

(declare-fun lt!36787 () List!1507)

(assert (=> d!19041 (= lt!36788 (ListLongMap!1448 lt!36787))))

(declare-fun lt!36790 () Unit!2257)

(declare-fun lt!36789 () Unit!2257)

(assert (=> d!19041 (= lt!36790 lt!36789)))

(assert (=> d!19041 (= (getValueByKey!137 lt!36787 (_1!1097 (tuple2!2173 lt!36380 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36380 (minValue!2170 newMap!16)))))))

(assert (=> d!19041 (= lt!36789 (lemmaContainsTupThenGetReturnValue!54 lt!36787 (_1!1097 (tuple2!2173 lt!36380 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36380 (minValue!2170 newMap!16)))))))

(assert (=> d!19041 (= lt!36787 (insertStrictlySorted!57 (toList!739 lt!36376) (_1!1097 (tuple2!2173 lt!36380 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36380 (minValue!2170 newMap!16)))))))

(assert (=> d!19041 (= (+!105 lt!36376 (tuple2!2173 lt!36380 (minValue!2170 newMap!16))) lt!36788)))

(declare-fun b!79283 () Bool)

(declare-fun res!41415 () Bool)

(assert (=> b!79283 (=> (not res!41415) (not e!51779))))

(assert (=> b!79283 (= res!41415 (= (getValueByKey!137 (toList!739 lt!36788) (_1!1097 (tuple2!2173 lt!36380 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36380 (minValue!2170 newMap!16))))))))

(declare-fun b!79284 () Bool)

(assert (=> b!79284 (= e!51779 (contains!743 (toList!739 lt!36788) (tuple2!2173 lt!36380 (minValue!2170 newMap!16))))))

(assert (= (and d!19041 res!41414) b!79283))

(assert (= (and b!79283 res!41415) b!79284))

(declare-fun m!80213 () Bool)

(assert (=> d!19041 m!80213))

(declare-fun m!80215 () Bool)

(assert (=> d!19041 m!80215))

(declare-fun m!80217 () Bool)

(assert (=> d!19041 m!80217))

(declare-fun m!80219 () Bool)

(assert (=> d!19041 m!80219))

(declare-fun m!80221 () Bool)

(assert (=> b!79283 m!80221))

(declare-fun m!80223 () Bool)

(assert (=> b!79284 m!80223))

(assert (=> b!78592 d!19041))

(declare-fun d!19043 () Bool)

(assert (=> d!19043 (= (apply!79 (+!105 lt!36376 (tuple2!2173 lt!36380 (minValue!2170 newMap!16))) lt!36382) (apply!79 lt!36376 lt!36382))))

(declare-fun lt!36791 () Unit!2257)

(assert (=> d!19043 (= lt!36791 (choose!460 lt!36376 lt!36380 (minValue!2170 newMap!16) lt!36382))))

(declare-fun e!51780 () Bool)

(assert (=> d!19043 e!51780))

(declare-fun res!41416 () Bool)

(assert (=> d!19043 (=> (not res!41416) (not e!51780))))

(assert (=> d!19043 (= res!41416 (contains!742 lt!36376 lt!36382))))

(assert (=> d!19043 (= (addApplyDifferent!55 lt!36376 lt!36380 (minValue!2170 newMap!16) lt!36382) lt!36791)))

(declare-fun b!79285 () Bool)

(assert (=> b!79285 (= e!51780 (not (= lt!36382 lt!36380)))))

(assert (= (and d!19043 res!41416) b!79285))

(declare-fun m!80225 () Bool)

(assert (=> d!19043 m!80225))

(assert (=> d!19043 m!79017))

(declare-fun m!80227 () Bool)

(assert (=> d!19043 m!80227))

(assert (=> d!19043 m!79011))

(assert (=> d!19043 m!79011))

(assert (=> d!19043 m!79013))

(assert (=> b!78592 d!19043))

(declare-fun d!19045 () Bool)

(declare-fun e!51781 () Bool)

(assert (=> d!19045 e!51781))

(declare-fun res!41417 () Bool)

(assert (=> d!19045 (=> res!41417 e!51781)))

(declare-fun lt!36795 () Bool)

(assert (=> d!19045 (= res!41417 (not lt!36795))))

(declare-fun lt!36792 () Bool)

(assert (=> d!19045 (= lt!36795 lt!36792)))

(declare-fun lt!36793 () Unit!2257)

(declare-fun e!51782 () Unit!2257)

(assert (=> d!19045 (= lt!36793 e!51782)))

(declare-fun c!12285 () Bool)

(assert (=> d!19045 (= c!12285 lt!36792)))

(assert (=> d!19045 (= lt!36792 (containsKey!141 (toList!739 (+!105 lt!36384 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16)))) lt!36386))))

(assert (=> d!19045 (= (contains!742 (+!105 lt!36384 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16))) lt!36386) lt!36795)))

(declare-fun b!79286 () Bool)

(declare-fun lt!36794 () Unit!2257)

(assert (=> b!79286 (= e!51782 lt!36794)))

(assert (=> b!79286 (= lt!36794 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (+!105 lt!36384 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16)))) lt!36386))))

(assert (=> b!79286 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36384 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16)))) lt!36386))))

(declare-fun b!79287 () Bool)

(declare-fun Unit!2302 () Unit!2257)

(assert (=> b!79287 (= e!51782 Unit!2302)))

(declare-fun b!79288 () Bool)

(assert (=> b!79288 (= e!51781 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36384 (tuple2!2173 lt!36377 (zeroValue!2170 newMap!16)))) lt!36386)))))

(assert (= (and d!19045 c!12285) b!79286))

(assert (= (and d!19045 (not c!12285)) b!79287))

(assert (= (and d!19045 (not res!41417)) b!79288))

(declare-fun m!80229 () Bool)

(assert (=> d!19045 m!80229))

(declare-fun m!80231 () Bool)

(assert (=> b!79286 m!80231))

(declare-fun m!80233 () Bool)

(assert (=> b!79286 m!80233))

(assert (=> b!79286 m!80233))

(declare-fun m!80235 () Bool)

(assert (=> b!79286 m!80235))

(assert (=> b!79288 m!80233))

(assert (=> b!79288 m!80233))

(assert (=> b!79288 m!80235))

(assert (=> b!78592 d!19045))

(declare-fun d!19047 () Bool)

(declare-fun e!51783 () Bool)

(assert (=> d!19047 e!51783))

(declare-fun res!41418 () Bool)

(assert (=> d!19047 (=> (not res!41418) (not e!51783))))

(declare-fun lt!36797 () ListLongMap!1447)

(assert (=> d!19047 (= res!41418 (contains!742 lt!36797 (_1!1097 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16)))))))

(declare-fun lt!36796 () List!1507)

(assert (=> d!19047 (= lt!36797 (ListLongMap!1448 lt!36796))))

(declare-fun lt!36799 () Unit!2257)

(declare-fun lt!36798 () Unit!2257)

(assert (=> d!19047 (= lt!36799 lt!36798)))

(assert (=> d!19047 (= (getValueByKey!137 lt!36796 (_1!1097 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19047 (= lt!36798 (lemmaContainsTupThenGetReturnValue!54 lt!36796 (_1!1097 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19047 (= lt!36796 (insertStrictlySorted!57 (toList!739 lt!36393) (_1!1097 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19047 (= (+!105 lt!36393 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16))) lt!36797)))

(declare-fun b!79289 () Bool)

(declare-fun res!41419 () Bool)

(assert (=> b!79289 (=> (not res!41419) (not e!51783))))

(assert (=> b!79289 (= res!41419 (= (getValueByKey!137 (toList!739 lt!36797) (_1!1097 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16))))))))

(declare-fun b!79290 () Bool)

(assert (=> b!79290 (= e!51783 (contains!743 (toList!739 lt!36797) (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16))))))

(assert (= (and d!19047 res!41418) b!79289))

(assert (= (and b!79289 res!41419) b!79290))

(declare-fun m!80237 () Bool)

(assert (=> d!19047 m!80237))

(declare-fun m!80239 () Bool)

(assert (=> d!19047 m!80239))

(declare-fun m!80241 () Bool)

(assert (=> d!19047 m!80241))

(declare-fun m!80243 () Bool)

(assert (=> d!19047 m!80243))

(declare-fun m!80245 () Bool)

(assert (=> b!79289 m!80245))

(declare-fun m!80247 () Bool)

(assert (=> b!79290 m!80247))

(assert (=> b!78592 d!19047))

(declare-fun d!19049 () Bool)

(assert (=> d!19049 (= (apply!79 (+!105 lt!36390 (tuple2!2173 lt!36395 (minValue!2170 newMap!16))) lt!36388) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!36390 (tuple2!2173 lt!36395 (minValue!2170 newMap!16)))) lt!36388)))))

(declare-fun bs!3363 () Bool)

(assert (= bs!3363 d!19049))

(declare-fun m!80249 () Bool)

(assert (=> bs!3363 m!80249))

(assert (=> bs!3363 m!80249))

(declare-fun m!80251 () Bool)

(assert (=> bs!3363 m!80251))

(assert (=> b!78592 d!19049))

(declare-fun d!19051 () Bool)

(assert (=> d!19051 (= (apply!79 (+!105 lt!36390 (tuple2!2173 lt!36395 (minValue!2170 newMap!16))) lt!36388) (apply!79 lt!36390 lt!36388))))

(declare-fun lt!36800 () Unit!2257)

(assert (=> d!19051 (= lt!36800 (choose!460 lt!36390 lt!36395 (minValue!2170 newMap!16) lt!36388))))

(declare-fun e!51784 () Bool)

(assert (=> d!19051 e!51784))

(declare-fun res!41420 () Bool)

(assert (=> d!19051 (=> (not res!41420) (not e!51784))))

(assert (=> d!19051 (= res!41420 (contains!742 lt!36390 lt!36388))))

(assert (=> d!19051 (= (addApplyDifferent!55 lt!36390 lt!36395 (minValue!2170 newMap!16) lt!36388) lt!36800)))

(declare-fun b!79291 () Bool)

(assert (=> b!79291 (= e!51784 (not (= lt!36388 lt!36395)))))

(assert (= (and d!19051 res!41420) b!79291))

(declare-fun m!80253 () Bool)

(assert (=> d!19051 m!80253))

(assert (=> d!19051 m!79019))

(declare-fun m!80255 () Bool)

(assert (=> d!19051 m!80255))

(assert (=> d!19051 m!79007))

(assert (=> d!19051 m!79007))

(assert (=> d!19051 m!79009))

(assert (=> b!78592 d!19051))

(assert (=> b!78592 d!18735))

(declare-fun d!19053 () Bool)

(assert (=> d!19053 (= (apply!79 (+!105 lt!36393 (tuple2!2173 lt!36392 (zeroValue!2170 newMap!16))) lt!36394) (apply!79 lt!36393 lt!36394))))

(declare-fun lt!36801 () Unit!2257)

(assert (=> d!19053 (= lt!36801 (choose!460 lt!36393 lt!36392 (zeroValue!2170 newMap!16) lt!36394))))

(declare-fun e!51785 () Bool)

(assert (=> d!19053 e!51785))

(declare-fun res!41421 () Bool)

(assert (=> d!19053 (=> (not res!41421) (not e!51785))))

(assert (=> d!19053 (= res!41421 (contains!742 lt!36393 lt!36394))))

(assert (=> d!19053 (= (addApplyDifferent!55 lt!36393 lt!36392 (zeroValue!2170 newMap!16) lt!36394) lt!36801)))

(declare-fun b!79292 () Bool)

(assert (=> b!79292 (= e!51785 (not (= lt!36394 lt!36392)))))

(assert (= (and d!19053 res!41421) b!79292))

(declare-fun m!80257 () Bool)

(assert (=> d!19053 m!80257))

(assert (=> d!19053 m!79033))

(declare-fun m!80259 () Bool)

(assert (=> d!19053 m!80259))

(assert (=> d!19053 m!79003))

(assert (=> d!19053 m!79003))

(assert (=> d!19053 m!79005))

(assert (=> b!78592 d!19053))

(declare-fun d!19055 () Bool)

(declare-fun e!51786 () Bool)

(assert (=> d!19055 e!51786))

(declare-fun res!41422 () Bool)

(assert (=> d!19055 (=> res!41422 e!51786)))

(declare-fun lt!36805 () Bool)

(assert (=> d!19055 (= res!41422 (not lt!36805))))

(declare-fun lt!36802 () Bool)

(assert (=> d!19055 (= lt!36805 lt!36802)))

(declare-fun lt!36803 () Unit!2257)

(declare-fun e!51787 () Unit!2257)

(assert (=> d!19055 (= lt!36803 e!51787)))

(declare-fun c!12286 () Bool)

(assert (=> d!19055 (= c!12286 lt!36802)))

(assert (=> d!19055 (= lt!36802 (containsKey!141 (toList!739 lt!36316) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!19055 (= (contains!742 lt!36316 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!36805)))

(declare-fun b!79293 () Bool)

(declare-fun lt!36804 () Unit!2257)

(assert (=> b!79293 (= e!51787 lt!36804)))

(assert (=> b!79293 (= lt!36804 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36316) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!79293 (isDefined!90 (getValueByKey!137 (toList!739 lt!36316) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!79294 () Bool)

(declare-fun Unit!2303 () Unit!2257)

(assert (=> b!79294 (= e!51787 Unit!2303)))

(declare-fun b!79295 () Bool)

(assert (=> b!79295 (= e!51786 (isDefined!90 (getValueByKey!137 (toList!739 lt!36316) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!19055 c!12286) b!79293))

(assert (= (and d!19055 (not c!12286)) b!79294))

(assert (= (and d!19055 (not res!41422)) b!79295))

(assert (=> d!19055 m!78847))

(declare-fun m!80261 () Bool)

(assert (=> d!19055 m!80261))

(assert (=> b!79293 m!78847))

(declare-fun m!80263 () Bool)

(assert (=> b!79293 m!80263))

(assert (=> b!79293 m!78847))

(declare-fun m!80265 () Bool)

(assert (=> b!79293 m!80265))

(assert (=> b!79293 m!80265))

(declare-fun m!80267 () Bool)

(assert (=> b!79293 m!80267))

(assert (=> b!79295 m!78847))

(assert (=> b!79295 m!80265))

(assert (=> b!79295 m!80265))

(assert (=> b!79295 m!80267))

(assert (=> b!78501 d!19055))

(declare-fun d!19057 () Bool)

(declare-fun res!41423 () Bool)

(declare-fun e!51788 () Bool)

(assert (=> d!19057 (=> res!41423 e!51788)))

(assert (=> d!19057 (= res!41423 (and ((_ is Cons!1503) (toList!739 lt!36045)) (= (_1!1097 (h!2091 (toList!739 lt!36045))) (_1!1097 lt!35864))))))

(assert (=> d!19057 (= (containsKey!141 (toList!739 lt!36045) (_1!1097 lt!35864)) e!51788)))

(declare-fun b!79296 () Bool)

(declare-fun e!51789 () Bool)

(assert (=> b!79296 (= e!51788 e!51789)))

(declare-fun res!41424 () Bool)

(assert (=> b!79296 (=> (not res!41424) (not e!51789))))

(assert (=> b!79296 (= res!41424 (and (or (not ((_ is Cons!1503) (toList!739 lt!36045))) (bvsle (_1!1097 (h!2091 (toList!739 lt!36045))) (_1!1097 lt!35864))) ((_ is Cons!1503) (toList!739 lt!36045)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36045))) (_1!1097 lt!35864))))))

(declare-fun b!79297 () Bool)

(assert (=> b!79297 (= e!51789 (containsKey!141 (t!5153 (toList!739 lt!36045)) (_1!1097 lt!35864)))))

(assert (= (and d!19057 (not res!41423)) b!79296))

(assert (= (and b!79296 res!41424) b!79297))

(declare-fun m!80269 () Bool)

(assert (=> b!79297 m!80269))

(assert (=> d!18671 d!19057))

(declare-fun d!19059 () Bool)

(declare-fun lt!36806 () (_ BitVec 32))

(assert (=> d!19059 (and (bvsge lt!36806 #b00000000000000000000000000000000) (bvsle lt!36806 (bvsub (size!2136 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000)))))

(declare-fun e!51790 () (_ BitVec 32))

(assert (=> d!19059 (= lt!36806 e!51790)))

(declare-fun c!12288 () Bool)

(assert (=> d!19059 (= c!12288 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))))))

(assert (=> d!19059 (and (bvsle #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2136 (_keys!3932 (_2!1098 lt!36136))) (size!2136 (_keys!3932 (_2!1098 lt!36136)))))))

(assert (=> d!19059 (= (arrayCountValidKeys!0 (_keys!3932 (_2!1098 lt!36136)) #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))) lt!36806)))

(declare-fun b!79298 () Bool)

(declare-fun e!51791 () (_ BitVec 32))

(declare-fun call!7317 () (_ BitVec 32))

(assert (=> b!79298 (= e!51791 call!7317)))

(declare-fun b!79299 () Bool)

(assert (=> b!79299 (= e!51790 #b00000000000000000000000000000000)))

(declare-fun b!79300 () Bool)

(assert (=> b!79300 (= e!51790 e!51791)))

(declare-fun c!12287 () Bool)

(assert (=> b!79300 (= c!12287 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000)))))

(declare-fun b!79301 () Bool)

(assert (=> b!79301 (= e!51791 (bvadd #b00000000000000000000000000000001 call!7317))))

(declare-fun bm!7314 () Bool)

(assert (=> bm!7314 (= call!7317 (arrayCountValidKeys!0 (_keys!3932 (_2!1098 lt!36136)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (_2!1098 lt!36136)))))))

(assert (= (and d!19059 c!12288) b!79299))

(assert (= (and d!19059 (not c!12288)) b!79300))

(assert (= (and b!79300 c!12287) b!79301))

(assert (= (and b!79300 (not c!12287)) b!79298))

(assert (= (or b!79301 b!79298) bm!7314))

(assert (=> b!79300 m!79525))

(assert (=> b!79300 m!79525))

(assert (=> b!79300 m!79553))

(declare-fun m!80271 () Bool)

(assert (=> bm!7314 m!80271))

(assert (=> b!78773 d!19059))

(assert (=> d!18665 d!18667))

(assert (=> d!18665 d!18669))

(declare-fun d!19061 () Bool)

(assert (=> d!19061 (isDefined!90 (getValueByKey!137 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!19061 true))

(declare-fun _$12!326 () Unit!2257)

(assert (=> d!19061 (= (choose!465 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) _$12!326)))

(declare-fun bs!3364 () Bool)

(assert (= bs!3364 d!19061))

(assert (=> bs!3364 m!77965))

(assert (=> bs!3364 m!78299))

(assert (=> bs!3364 m!78299))

(assert (=> bs!3364 m!78301))

(assert (=> d!18665 d!19061))

(declare-fun d!19063 () Bool)

(declare-fun res!41425 () Bool)

(declare-fun e!51792 () Bool)

(assert (=> d!19063 (=> res!41425 e!51792)))

(assert (=> d!19063 (= res!41425 (or ((_ is Nil!1504) (toList!739 lt!35860)) ((_ is Nil!1504) (t!5153 (toList!739 lt!35860)))))))

(assert (=> d!19063 (= (isStrictlySorted!295 (toList!739 lt!35860)) e!51792)))

(declare-fun b!79302 () Bool)

(declare-fun e!51793 () Bool)

(assert (=> b!79302 (= e!51792 e!51793)))

(declare-fun res!41426 () Bool)

(assert (=> b!79302 (=> (not res!41426) (not e!51793))))

(assert (=> b!79302 (= res!41426 (bvslt (_1!1097 (h!2091 (toList!739 lt!35860))) (_1!1097 (h!2091 (t!5153 (toList!739 lt!35860))))))))

(declare-fun b!79303 () Bool)

(assert (=> b!79303 (= e!51793 (isStrictlySorted!295 (t!5153 (toList!739 lt!35860))))))

(assert (= (and d!19063 (not res!41425)) b!79302))

(assert (= (and b!79302 res!41426) b!79303))

(declare-fun m!80273 () Bool)

(assert (=> b!79303 m!80273))

(assert (=> d!18665 d!19063))

(declare-fun d!19065 () Bool)

(declare-fun lt!36807 () Bool)

(assert (=> d!19065 (= lt!36807 (select (content!83 (toList!739 lt!36188)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!51795 () Bool)

(assert (=> d!19065 (= lt!36807 e!51795)))

(declare-fun res!41427 () Bool)

(assert (=> d!19065 (=> (not res!41427) (not e!51795))))

(assert (=> d!19065 (= res!41427 ((_ is Cons!1503) (toList!739 lt!36188)))))

(assert (=> d!19065 (= (contains!743 (toList!739 lt!36188) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36807)))

(declare-fun b!79304 () Bool)

(declare-fun e!51794 () Bool)

(assert (=> b!79304 (= e!51795 e!51794)))

(declare-fun res!41428 () Bool)

(assert (=> b!79304 (=> res!41428 e!51794)))

(assert (=> b!79304 (= res!41428 (= (h!2091 (toList!739 lt!36188)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!79305 () Bool)

(assert (=> b!79305 (= e!51794 (contains!743 (t!5153 (toList!739 lt!36188)) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!19065 res!41427) b!79304))

(assert (= (and b!79304 (not res!41428)) b!79305))

(declare-fun m!80275 () Bool)

(assert (=> d!19065 m!80275))

(declare-fun m!80277 () Bool)

(assert (=> d!19065 m!80277))

(declare-fun m!80279 () Bool)

(assert (=> b!79305 m!80279))

(assert (=> b!78264 d!19065))

(declare-fun b!79306 () Bool)

(declare-fun e!51799 () Bool)

(declare-fun call!7318 () Bool)

(assert (=> b!79306 (= e!51799 call!7318)))

(declare-fun d!19067 () Bool)

(declare-fun res!41430 () Bool)

(declare-fun e!51796 () Bool)

(assert (=> d!19067 (=> res!41430 e!51796)))

(assert (=> d!19067 (= res!41430 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!19067 (= (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12120 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505))) e!51796)))

(declare-fun b!79307 () Bool)

(assert (=> b!79307 (= e!51799 call!7318)))

(declare-fun b!79308 () Bool)

(declare-fun e!51798 () Bool)

(assert (=> b!79308 (= e!51798 e!51799)))

(declare-fun c!12289 () Bool)

(assert (=> b!79308 (= c!12289 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!79309 () Bool)

(declare-fun e!51797 () Bool)

(assert (=> b!79309 (= e!51797 (contains!744 (ite c!12120 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!79310 () Bool)

(assert (=> b!79310 (= e!51796 e!51798)))

(declare-fun res!41431 () Bool)

(assert (=> b!79310 (=> (not res!41431) (not e!51798))))

(assert (=> b!79310 (= res!41431 (not e!51797))))

(declare-fun res!41429 () Bool)

(assert (=> b!79310 (=> (not res!41429) (not e!51797))))

(assert (=> b!79310 (= res!41429 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!7315 () Bool)

(assert (=> bm!7315 (= call!7318 (arrayNoDuplicates!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12289 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!12120 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505))) (ite c!12120 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!11934 (Cons!1504 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) Nil!1505) Nil!1505)))))))

(assert (= (and d!19067 (not res!41430)) b!79310))

(assert (= (and b!79310 res!41429) b!79309))

(assert (= (and b!79310 res!41431) b!79308))

(assert (= (and b!79308 c!12289) b!79306))

(assert (= (and b!79308 (not c!12289)) b!79307))

(assert (= (or b!79306 b!79307) bm!7315))

(declare-fun m!80281 () Bool)

(assert (=> b!79308 m!80281))

(assert (=> b!79308 m!80281))

(declare-fun m!80283 () Bool)

(assert (=> b!79308 m!80283))

(assert (=> b!79309 m!80281))

(assert (=> b!79309 m!80281))

(declare-fun m!80285 () Bool)

(assert (=> b!79309 m!80285))

(assert (=> b!79310 m!80281))

(assert (=> b!79310 m!80281))

(assert (=> b!79310 m!80283))

(assert (=> bm!7315 m!80281))

(declare-fun m!80287 () Bool)

(assert (=> bm!7315 m!80287))

(assert (=> bm!7252 d!19067))

(declare-fun d!19069 () Bool)

(assert (=> d!19069 (= (apply!79 lt!36337 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1176 (getValueByKey!137 (toList!739 lt!36337) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3365 () Bool)

(assert (= bs!3365 d!19069))

(assert (=> bs!3365 m!78509))

(declare-fun m!80289 () Bool)

(assert (=> bs!3365 m!80289))

(assert (=> bs!3365 m!80289))

(declare-fun m!80291 () Bool)

(assert (=> bs!3365 m!80291))

(assert (=> b!78521 d!19069))

(declare-fun d!19071 () Bool)

(declare-fun c!12290 () Bool)

(assert (=> d!19071 (= c!12290 ((_ is ValueCellFull!912) (select (arr!1896 (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!51800 () V!2995)

(assert (=> d!19071 (= (get!1173 (select (arr!1896 (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51800)))

(declare-fun b!79311 () Bool)

(assert (=> b!79311 (= e!51800 (get!1174 (select (arr!1896 (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79312 () Bool)

(assert (=> b!79312 (= e!51800 (get!1175 (select (arr!1896 (ite (or c!11979 c!11969) (_values!2255 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19071 c!12290) b!79311))

(assert (= (and d!19071 (not c!12290)) b!79312))

(assert (=> b!79311 m!78913))

(assert (=> b!79311 m!78533))

(declare-fun m!80293 () Bool)

(assert (=> b!79311 m!80293))

(assert (=> b!79312 m!78913))

(assert (=> b!79312 m!78533))

(declare-fun m!80295 () Bool)

(assert (=> b!79312 m!80295))

(assert (=> b!78521 d!19071))

(declare-fun d!19073 () Bool)

(declare-fun e!51801 () Bool)

(assert (=> d!19073 e!51801))

(declare-fun res!41432 () Bool)

(assert (=> d!19073 (=> res!41432 e!51801)))

(declare-fun lt!36811 () Bool)

(assert (=> d!19073 (= res!41432 (not lt!36811))))

(declare-fun lt!36808 () Bool)

(assert (=> d!19073 (= lt!36811 lt!36808)))

(declare-fun lt!36809 () Unit!2257)

(declare-fun e!51802 () Unit!2257)

(assert (=> d!19073 (= lt!36809 e!51802)))

(declare-fun c!12291 () Bool)

(assert (=> d!19073 (= c!12291 lt!36808)))

(assert (=> d!19073 (= lt!36808 (containsKey!141 (toList!739 lt!36167) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19073 (= (contains!742 lt!36167 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!36811)))

(declare-fun b!79313 () Bool)

(declare-fun lt!36810 () Unit!2257)

(assert (=> b!79313 (= e!51802 lt!36810)))

(assert (=> b!79313 (= lt!36810 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36167) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> b!79313 (isDefined!90 (getValueByKey!137 (toList!739 lt!36167) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79314 () Bool)

(declare-fun Unit!2304 () Unit!2257)

(assert (=> b!79314 (= e!51802 Unit!2304)))

(declare-fun b!79315 () Bool)

(assert (=> b!79315 (= e!51801 (isDefined!90 (getValueByKey!137 (toList!739 lt!36167) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (= (and d!19073 c!12291) b!79313))

(assert (= (and d!19073 (not c!12291)) b!79314))

(assert (= (and d!19073 (not res!41432)) b!79315))

(declare-fun m!80297 () Bool)

(assert (=> d!19073 m!80297))

(declare-fun m!80299 () Bool)

(assert (=> b!79313 m!80299))

(assert (=> b!79313 m!78405))

(assert (=> b!79313 m!78405))

(declare-fun m!80301 () Bool)

(assert (=> b!79313 m!80301))

(assert (=> b!79315 m!78405))

(assert (=> b!79315 m!78405))

(assert (=> b!79315 m!80301))

(assert (=> d!18487 d!19073))

(declare-fun b!79319 () Bool)

(declare-fun e!51804 () Option!143)

(assert (=> b!79319 (= e!51804 None!141)))

(declare-fun d!19075 () Bool)

(declare-fun c!12292 () Bool)

(assert (=> d!19075 (= c!12292 (and ((_ is Cons!1503) lt!36166) (= (_1!1097 (h!2091 lt!36166)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!51803 () Option!143)

(assert (=> d!19075 (= (getValueByKey!137 lt!36166 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) e!51803)))

(declare-fun b!79318 () Bool)

(assert (=> b!79318 (= e!51804 (getValueByKey!137 (t!5153 lt!36166) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79316 () Bool)

(assert (=> b!79316 (= e!51803 (Some!142 (_2!1097 (h!2091 lt!36166))))))

(declare-fun b!79317 () Bool)

(assert (=> b!79317 (= e!51803 e!51804)))

(declare-fun c!12293 () Bool)

(assert (=> b!79317 (= c!12293 (and ((_ is Cons!1503) lt!36166) (not (= (_1!1097 (h!2091 lt!36166)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19075 c!12292) b!79316))

(assert (= (and d!19075 (not c!12292)) b!79317))

(assert (= (and b!79317 c!12293) b!79318))

(assert (= (and b!79317 (not c!12293)) b!79319))

(declare-fun m!80303 () Bool)

(assert (=> b!79318 m!80303))

(assert (=> d!18487 d!19075))

(declare-fun d!19077 () Bool)

(assert (=> d!19077 (= (getValueByKey!137 lt!36166 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!36812 () Unit!2257)

(assert (=> d!19077 (= lt!36812 (choose!456 lt!36166 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun e!51805 () Bool)

(assert (=> d!19077 e!51805))

(declare-fun res!41433 () Bool)

(assert (=> d!19077 (=> (not res!41433) (not e!51805))))

(assert (=> d!19077 (= res!41433 (isStrictlySorted!295 lt!36166))))

(assert (=> d!19077 (= (lemmaContainsTupThenGetReturnValue!54 lt!36166 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!36812)))

(declare-fun b!79320 () Bool)

(declare-fun res!41434 () Bool)

(assert (=> b!79320 (=> (not res!41434) (not e!51805))))

(assert (=> b!79320 (= res!41434 (containsKey!141 lt!36166 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79321 () Bool)

(assert (=> b!79321 (= e!51805 (contains!743 lt!36166 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (= (and d!19077 res!41433) b!79320))

(assert (= (and b!79320 res!41434) b!79321))

(assert (=> d!19077 m!78399))

(declare-fun m!80305 () Bool)

(assert (=> d!19077 m!80305))

(declare-fun m!80307 () Bool)

(assert (=> d!19077 m!80307))

(declare-fun m!80309 () Bool)

(assert (=> b!79320 m!80309))

(declare-fun m!80311 () Bool)

(assert (=> b!79321 m!80311))

(assert (=> d!18487 d!19077))

(declare-fun c!12296 () Bool)

(declare-fun c!12297 () Bool)

(declare-fun b!79322 () Bool)

(declare-fun e!51806 () List!1507)

(assert (=> b!79322 (= e!51806 (ite c!12297 (t!5153 (toList!739 lt!35869)) (ite c!12296 (Cons!1503 (h!2091 (toList!739 lt!35869)) (t!5153 (toList!739 lt!35869))) Nil!1504)))))

(declare-fun b!79323 () Bool)

(declare-fun e!51810 () List!1507)

(declare-fun call!7321 () List!1507)

(assert (=> b!79323 (= e!51810 call!7321)))

(declare-fun bm!7316 () Bool)

(declare-fun call!7319 () List!1507)

(declare-fun call!7320 () List!1507)

(assert (=> bm!7316 (= call!7319 call!7320)))

(declare-fun b!79324 () Bool)

(assert (=> b!79324 (= c!12296 (and ((_ is Cons!1503) (toList!739 lt!35869)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!51808 () List!1507)

(declare-fun e!51807 () List!1507)

(assert (=> b!79324 (= e!51808 e!51807)))

(declare-fun b!79325 () Bool)

(assert (=> b!79325 (= e!51806 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35869)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79326 () Bool)

(declare-fun res!41436 () Bool)

(declare-fun e!51809 () Bool)

(assert (=> b!79326 (=> (not res!41436) (not e!51809))))

(declare-fun lt!36813 () List!1507)

(assert (=> b!79326 (= res!41436 (containsKey!141 lt!36813 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun c!12294 () Bool)

(declare-fun bm!7317 () Bool)

(assert (=> bm!7317 (= call!7321 ($colon$colon!69 e!51806 (ite c!12294 (h!2091 (toList!739 lt!35869)) (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun c!12295 () Bool)

(assert (=> bm!7317 (= c!12295 c!12294)))

(declare-fun b!79327 () Bool)

(assert (=> b!79327 (= e!51810 e!51808)))

(assert (=> b!79327 (= c!12297 (and ((_ is Cons!1503) (toList!739 lt!35869)) (= (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79329 () Bool)

(assert (=> b!79329 (= e!51808 call!7320)))

(declare-fun b!79330 () Bool)

(assert (=> b!79330 (= e!51809 (contains!743 lt!36813 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79328 () Bool)

(assert (=> b!79328 (= e!51807 call!7319)))

(declare-fun d!19079 () Bool)

(assert (=> d!19079 e!51809))

(declare-fun res!41435 () Bool)

(assert (=> d!19079 (=> (not res!41435) (not e!51809))))

(assert (=> d!19079 (= res!41435 (isStrictlySorted!295 lt!36813))))

(assert (=> d!19079 (= lt!36813 e!51810)))

(assert (=> d!19079 (= c!12294 (and ((_ is Cons!1503) (toList!739 lt!35869)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (=> d!19079 (isStrictlySorted!295 (toList!739 lt!35869))))

(assert (=> d!19079 (= (insertStrictlySorted!57 (toList!739 lt!35869) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!36813)))

(declare-fun bm!7318 () Bool)

(assert (=> bm!7318 (= call!7320 call!7321)))

(declare-fun b!79331 () Bool)

(assert (=> b!79331 (= e!51807 call!7319)))

(assert (= (and d!19079 c!12294) b!79323))

(assert (= (and d!19079 (not c!12294)) b!79327))

(assert (= (and b!79327 c!12297) b!79329))

(assert (= (and b!79327 (not c!12297)) b!79324))

(assert (= (and b!79324 c!12296) b!79328))

(assert (= (and b!79324 (not c!12296)) b!79331))

(assert (= (or b!79328 b!79331) bm!7316))

(assert (= (or b!79329 bm!7316) bm!7318))

(assert (= (or b!79323 bm!7318) bm!7317))

(assert (= (and bm!7317 c!12295) b!79325))

(assert (= (and bm!7317 (not c!12295)) b!79322))

(assert (= (and d!19079 res!41435) b!79326))

(assert (= (and b!79326 res!41436) b!79330))

(declare-fun m!80313 () Bool)

(assert (=> b!79330 m!80313))

(declare-fun m!80315 () Bool)

(assert (=> d!19079 m!80315))

(assert (=> d!19079 m!78969))

(declare-fun m!80317 () Bool)

(assert (=> b!79325 m!80317))

(declare-fun m!80319 () Bool)

(assert (=> b!79326 m!80319))

(declare-fun m!80321 () Bool)

(assert (=> bm!7317 m!80321))

(assert (=> d!18487 d!19079))

(declare-fun d!19081 () Bool)

(declare-fun e!51811 () Bool)

(assert (=> d!19081 e!51811))

(declare-fun res!41437 () Bool)

(assert (=> d!19081 (=> (not res!41437) (not e!51811))))

(declare-fun lt!36815 () ListLongMap!1447)

(assert (=> d!19081 (= res!41437 (contains!742 lt!36815 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!36814 () List!1507)

(assert (=> d!19081 (= lt!36815 (ListLongMap!1448 lt!36814))))

(declare-fun lt!36817 () Unit!2257)

(declare-fun lt!36816 () Unit!2257)

(assert (=> d!19081 (= lt!36817 lt!36816)))

(assert (=> d!19081 (= (getValueByKey!137 lt!36814 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19081 (= lt!36816 (lemmaContainsTupThenGetReturnValue!54 lt!36814 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19081 (= lt!36814 (insertStrictlySorted!57 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19081 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!36815)))

(declare-fun b!79332 () Bool)

(declare-fun res!41438 () Bool)

(assert (=> b!79332 (=> (not res!41438) (not e!51811))))

(assert (=> b!79332 (= res!41438 (= (getValueByKey!137 (toList!739 lt!36815) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79333 () Bool)

(assert (=> b!79333 (= e!51811 (contains!743 (toList!739 lt!36815) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!19081 res!41437) b!79332))

(assert (= (and b!79332 res!41438) b!79333))

(declare-fun m!80323 () Bool)

(assert (=> d!19081 m!80323))

(declare-fun m!80325 () Bool)

(assert (=> d!19081 m!80325))

(declare-fun m!80327 () Bool)

(assert (=> d!19081 m!80327))

(declare-fun m!80329 () Bool)

(assert (=> d!19081 m!80329))

(declare-fun m!80331 () Bool)

(assert (=> b!79332 m!80331))

(declare-fun m!80333 () Bool)

(assert (=> b!79333 m!80333))

(assert (=> b!78573 d!19081))

(assert (=> b!78573 d!18645))

(declare-fun bm!7319 () Bool)

(declare-fun c!12303 () Bool)

(declare-fun call!7328 () ListLongMap!1447)

(declare-fun c!12299 () Bool)

(declare-fun call!7326 () ListLongMap!1447)

(declare-fun call!7322 () ListLongMap!1447)

(declare-fun call!7327 () ListLongMap!1447)

(assert (=> bm!7319 (= call!7328 (+!105 (ite c!12299 call!7326 (ite c!12303 call!7322 call!7327)) (ite (or c!12299 c!12303) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun b!79334 () Bool)

(declare-fun e!51820 () Bool)

(declare-fun lt!36832 () ListLongMap!1447)

(assert (=> b!79334 (= e!51820 (= (apply!79 lt!36832 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!79335 () Bool)

(declare-fun e!51823 () ListLongMap!1447)

(assert (=> b!79335 (= e!51823 call!7327)))

(declare-fun b!79336 () Bool)

(declare-fun e!51813 () ListLongMap!1447)

(declare-fun call!7325 () ListLongMap!1447)

(assert (=> b!79336 (= e!51813 call!7325)))

(declare-fun b!79337 () Bool)

(declare-fun c!12300 () Bool)

(assert (=> b!79337 (= c!12300 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79337 (= e!51813 e!51823)))

(declare-fun b!79338 () Bool)

(declare-fun e!51818 () Bool)

(declare-fun call!7323 () Bool)

(assert (=> b!79338 (= e!51818 (not call!7323))))

(declare-fun b!79339 () Bool)

(declare-fun e!51817 () Bool)

(assert (=> b!79339 (= e!51817 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7321 () Bool)

(assert (=> bm!7321 (= call!7327 call!7322)))

(declare-fun b!79340 () Bool)

(declare-fun e!51816 () Bool)

(declare-fun call!7324 () Bool)

(assert (=> b!79340 (= e!51816 (not call!7324))))

(declare-fun b!79341 () Bool)

(declare-fun e!51815 () Bool)

(assert (=> b!79341 (= e!51815 e!51818)))

(declare-fun c!12301 () Bool)

(assert (=> b!79341 (= c!12301 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7322 () Bool)

(assert (=> bm!7322 (= call!7324 (contains!742 lt!36832 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7323 () Bool)

(assert (=> bm!7323 (= call!7326 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!79342 () Bool)

(assert (=> b!79342 (= e!51823 call!7325)))

(declare-fun b!79343 () Bool)

(declare-fun e!51819 () ListLongMap!1447)

(assert (=> b!79343 (= e!51819 e!51813)))

(assert (=> b!79343 (= c!12303 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7324 () Bool)

(assert (=> bm!7324 (= call!7325 call!7328)))

(declare-fun b!79344 () Bool)

(declare-fun res!41444 () Bool)

(assert (=> b!79344 (=> (not res!41444) (not e!51815))))

(assert (=> b!79344 (= res!41444 e!51816)))

(declare-fun c!12302 () Bool)

(assert (=> b!79344 (= c!12302 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79345 () Bool)

(declare-fun e!51821 () Unit!2257)

(declare-fun Unit!2305 () Unit!2257)

(assert (=> b!79345 (= e!51821 Unit!2305)))

(declare-fun b!79346 () Bool)

(declare-fun e!51814 () Bool)

(assert (=> b!79346 (= e!51816 e!51814)))

(declare-fun res!41441 () Bool)

(assert (=> b!79346 (= res!41441 call!7324)))

(assert (=> b!79346 (=> (not res!41441) (not e!51814))))

(declare-fun b!79347 () Bool)

(assert (=> b!79347 (= e!51818 e!51820)))

(declare-fun res!41443 () Bool)

(assert (=> b!79347 (= res!41443 call!7323)))

(assert (=> b!79347 (=> (not res!41443) (not e!51820))))

(declare-fun e!51824 () Bool)

(declare-fun b!79348 () Bool)

(assert (=> b!79348 (= e!51824 (= (apply!79 lt!36832 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79348 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))))))

(assert (=> b!79348 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun d!19083 () Bool)

(assert (=> d!19083 e!51815))

(declare-fun res!41445 () Bool)

(assert (=> d!19083 (=> (not res!41445) (not e!51815))))

(assert (=> d!19083 (= res!41445 (or (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))))

(declare-fun lt!36822 () ListLongMap!1447)

(assert (=> d!19083 (= lt!36832 lt!36822)))

(declare-fun lt!36839 () Unit!2257)

(assert (=> d!19083 (= lt!36839 e!51821)))

(declare-fun c!12298 () Bool)

(assert (=> d!19083 (= c!12298 e!51817)))

(declare-fun res!41440 () Bool)

(assert (=> d!19083 (=> (not res!41440) (not e!51817))))

(assert (=> d!19083 (= res!41440 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!19083 (= lt!36822 e!51819)))

(assert (=> d!19083 (= c!12299 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19083 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19083 (= (getCurrentListMap!433 (_keys!3932 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36832)))

(declare-fun bm!7320 () Bool)

(assert (=> bm!7320 (= call!7323 (contains!742 lt!36832 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7325 () Bool)

(assert (=> bm!7325 (= call!7322 call!7326)))

(declare-fun b!79349 () Bool)

(declare-fun lt!36821 () Unit!2257)

(assert (=> b!79349 (= e!51821 lt!36821)))

(declare-fun lt!36827 () ListLongMap!1447)

(assert (=> b!79349 (= lt!36827 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36820 () (_ BitVec 64))

(assert (=> b!79349 (= lt!36820 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36829 () (_ BitVec 64))

(assert (=> b!79349 (= lt!36829 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36834 () Unit!2257)

(assert (=> b!79349 (= lt!36834 (addStillContains!55 lt!36827 lt!36820 (zeroValue!2170 newMap!16) lt!36829))))

(assert (=> b!79349 (contains!742 (+!105 lt!36827 (tuple2!2173 lt!36820 (zeroValue!2170 newMap!16))) lt!36829)))

(declare-fun lt!36828 () Unit!2257)

(assert (=> b!79349 (= lt!36828 lt!36834)))

(declare-fun lt!36819 () ListLongMap!1447)

(assert (=> b!79349 (= lt!36819 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36823 () (_ BitVec 64))

(assert (=> b!79349 (= lt!36823 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36825 () (_ BitVec 64))

(assert (=> b!79349 (= lt!36825 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36824 () Unit!2257)

(assert (=> b!79349 (= lt!36824 (addApplyDifferent!55 lt!36819 lt!36823 (minValue!2170 newMap!16) lt!36825))))

(assert (=> b!79349 (= (apply!79 (+!105 lt!36819 (tuple2!2173 lt!36823 (minValue!2170 newMap!16))) lt!36825) (apply!79 lt!36819 lt!36825))))

(declare-fun lt!36818 () Unit!2257)

(assert (=> b!79349 (= lt!36818 lt!36824)))

(declare-fun lt!36836 () ListLongMap!1447)

(assert (=> b!79349 (= lt!36836 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36835 () (_ BitVec 64))

(assert (=> b!79349 (= lt!36835 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36837 () (_ BitVec 64))

(assert (=> b!79349 (= lt!36837 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36826 () Unit!2257)

(assert (=> b!79349 (= lt!36826 (addApplyDifferent!55 lt!36836 lt!36835 (zeroValue!2170 newMap!16) lt!36837))))

(assert (=> b!79349 (= (apply!79 (+!105 lt!36836 (tuple2!2173 lt!36835 (zeroValue!2170 newMap!16))) lt!36837) (apply!79 lt!36836 lt!36837))))

(declare-fun lt!36830 () Unit!2257)

(assert (=> b!79349 (= lt!36830 lt!36826)))

(declare-fun lt!36833 () ListLongMap!1447)

(assert (=> b!79349 (= lt!36833 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (index!3095 lt!36128) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36838 () (_ BitVec 64))

(assert (=> b!79349 (= lt!36838 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36831 () (_ BitVec 64))

(assert (=> b!79349 (= lt!36831 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79349 (= lt!36821 (addApplyDifferent!55 lt!36833 lt!36838 (minValue!2170 newMap!16) lt!36831))))

(assert (=> b!79349 (= (apply!79 (+!105 lt!36833 (tuple2!2173 lt!36838 (minValue!2170 newMap!16))) lt!36831) (apply!79 lt!36833 lt!36831))))

(declare-fun b!79350 () Bool)

(declare-fun res!41447 () Bool)

(assert (=> b!79350 (=> (not res!41447) (not e!51815))))

(declare-fun e!51812 () Bool)

(assert (=> b!79350 (= res!41447 e!51812)))

(declare-fun res!41442 () Bool)

(assert (=> b!79350 (=> res!41442 e!51812)))

(declare-fun e!51822 () Bool)

(assert (=> b!79350 (= res!41442 (not e!51822))))

(declare-fun res!41439 () Bool)

(assert (=> b!79350 (=> (not res!41439) (not e!51822))))

(assert (=> b!79350 (= res!41439 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!79351 () Bool)

(assert (=> b!79351 (= e!51812 e!51824)))

(declare-fun res!41446 () Bool)

(assert (=> b!79351 (=> (not res!41446) (not e!51824))))

(assert (=> b!79351 (= res!41446 (contains!742 lt!36832 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79351 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!79352 () Bool)

(assert (=> b!79352 (= e!51814 (= (apply!79 lt!36832 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(declare-fun b!79353 () Bool)

(assert (=> b!79353 (= e!51822 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79354 () Bool)

(assert (=> b!79354 (= e!51819 (+!105 call!7328 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!19083 c!12299) b!79354))

(assert (= (and d!19083 (not c!12299)) b!79343))

(assert (= (and b!79343 c!12303) b!79336))

(assert (= (and b!79343 (not c!12303)) b!79337))

(assert (= (and b!79337 c!12300) b!79342))

(assert (= (and b!79337 (not c!12300)) b!79335))

(assert (= (or b!79342 b!79335) bm!7321))

(assert (= (or b!79336 bm!7321) bm!7325))

(assert (= (or b!79336 b!79342) bm!7324))

(assert (= (or b!79354 bm!7325) bm!7323))

(assert (= (or b!79354 bm!7324) bm!7319))

(assert (= (and d!19083 res!41440) b!79339))

(assert (= (and d!19083 c!12298) b!79349))

(assert (= (and d!19083 (not c!12298)) b!79345))

(assert (= (and d!19083 res!41445) b!79350))

(assert (= (and b!79350 res!41439) b!79353))

(assert (= (and b!79350 (not res!41442)) b!79351))

(assert (= (and b!79351 res!41446) b!79348))

(assert (= (and b!79350 res!41447) b!79344))

(assert (= (and b!79344 c!12302) b!79346))

(assert (= (and b!79344 (not c!12302)) b!79340))

(assert (= (and b!79346 res!41441) b!79352))

(assert (= (or b!79346 b!79340) bm!7322))

(assert (= (and b!79344 res!41444) b!79341))

(assert (= (and b!79341 c!12301) b!79347))

(assert (= (and b!79341 (not c!12301)) b!79338))

(assert (= (and b!79347 res!41443) b!79334))

(assert (= (or b!79347 b!79338) bm!7320))

(declare-fun b_lambda!3545 () Bool)

(assert (=> (not b_lambda!3545) (not b!79348)))

(assert (=> b!79348 t!5161))

(declare-fun b_and!4875 () Bool)

(assert (= b_and!4871 (and (=> t!5161 result!2825) b_and!4875)))

(assert (=> b!79348 t!5163))

(declare-fun b_and!4877 () Bool)

(assert (= b_and!4873 (and (=> t!5163 result!2827) b_and!4877)))

(declare-fun m!80335 () Bool)

(assert (=> b!79352 m!80335))

(declare-fun m!80337 () Bool)

(assert (=> bm!7322 m!80337))

(declare-fun m!80339 () Bool)

(assert (=> bm!7320 m!80339))

(declare-fun m!80341 () Bool)

(assert (=> b!79349 m!80341))

(declare-fun m!80343 () Bool)

(assert (=> b!79349 m!80343))

(declare-fun m!80345 () Bool)

(assert (=> b!79349 m!80345))

(declare-fun m!80347 () Bool)

(assert (=> b!79349 m!80347))

(declare-fun m!80349 () Bool)

(assert (=> b!79349 m!80349))

(declare-fun m!80351 () Bool)

(assert (=> b!79349 m!80351))

(declare-fun m!80353 () Bool)

(assert (=> b!79349 m!80353))

(assert (=> b!79349 m!78509))

(declare-fun m!80355 () Bool)

(assert (=> b!79349 m!80355))

(declare-fun m!80357 () Bool)

(assert (=> b!79349 m!80357))

(declare-fun m!80359 () Bool)

(assert (=> b!79349 m!80359))

(declare-fun m!80361 () Bool)

(assert (=> b!79349 m!80361))

(declare-fun m!80363 () Bool)

(assert (=> b!79349 m!80363))

(declare-fun m!80365 () Bool)

(assert (=> b!79349 m!80365))

(assert (=> b!79349 m!80359))

(assert (=> b!79349 m!80345))

(declare-fun m!80367 () Bool)

(assert (=> b!79349 m!80367))

(declare-fun m!80369 () Bool)

(assert (=> b!79349 m!80369))

(declare-fun m!80371 () Bool)

(assert (=> b!79349 m!80371))

(assert (=> b!79349 m!80341))

(assert (=> b!79349 m!80349))

(assert (=> b!79348 m!78509))

(declare-fun m!80373 () Bool)

(assert (=> b!79348 m!80373))

(assert (=> b!79348 m!78509))

(declare-fun m!80375 () Bool)

(assert (=> b!79348 m!80375))

(assert (=> b!79348 m!78533))

(declare-fun m!80377 () Bool)

(assert (=> b!79348 m!80377))

(assert (=> b!79348 m!78533))

(assert (=> b!79348 m!80375))

(assert (=> b!79339 m!78509))

(assert (=> b!79339 m!78509))

(assert (=> b!79339 m!78537))

(declare-fun m!80379 () Bool)

(assert (=> b!79334 m!80379))

(assert (=> bm!7323 m!80369))

(declare-fun m!80381 () Bool)

(assert (=> bm!7319 m!80381))

(assert (=> b!79351 m!78509))

(assert (=> b!79351 m!78509))

(declare-fun m!80383 () Bool)

(assert (=> b!79351 m!80383))

(declare-fun m!80385 () Bool)

(assert (=> b!79354 m!80385))

(assert (=> d!19083 m!78411))

(assert (=> b!79353 m!78509))

(assert (=> b!79353 m!78509))

(assert (=> b!79353 m!78537))

(assert (=> b!78573 d!19083))

(declare-fun b!79358 () Bool)

(declare-fun e!51826 () Option!143)

(assert (=> b!79358 (= e!51826 None!141)))

(declare-fun d!19085 () Bool)

(declare-fun c!12304 () Bool)

(assert (=> d!19085 (= c!12304 (and ((_ is Cons!1503) (t!5153 lt!36032)) (= (_1!1097 (h!2091 (t!5153 lt!36032))) (_1!1097 lt!35864))))))

(declare-fun e!51825 () Option!143)

(assert (=> d!19085 (= (getValueByKey!137 (t!5153 lt!36032) (_1!1097 lt!35864)) e!51825)))

(declare-fun b!79357 () Bool)

(assert (=> b!79357 (= e!51826 (getValueByKey!137 (t!5153 (t!5153 lt!36032)) (_1!1097 lt!35864)))))

(declare-fun b!79355 () Bool)

(assert (=> b!79355 (= e!51825 (Some!142 (_2!1097 (h!2091 (t!5153 lt!36032)))))))

(declare-fun b!79356 () Bool)

(assert (=> b!79356 (= e!51825 e!51826)))

(declare-fun c!12305 () Bool)

(assert (=> b!79356 (= c!12305 (and ((_ is Cons!1503) (t!5153 lt!36032)) (not (= (_1!1097 (h!2091 (t!5153 lt!36032))) (_1!1097 lt!35864)))))))

(assert (= (and d!19085 c!12304) b!79355))

(assert (= (and d!19085 (not c!12304)) b!79356))

(assert (= (and b!79356 c!12305) b!79357))

(assert (= (and b!79356 (not c!12305)) b!79358))

(declare-fun m!80387 () Bool)

(assert (=> b!79357 m!80387))

(assert (=> b!78407 d!19085))

(declare-fun d!19087 () Bool)

(declare-fun res!41448 () Bool)

(declare-fun e!51827 () Bool)

(assert (=> d!19087 (=> res!41448 e!51827)))

(assert (=> d!19087 (= res!41448 (and ((_ is Cons!1503) lt!36364) (= (_1!1097 (h!2091 lt!36364)) (_1!1097 lt!35870))))))

(assert (=> d!19087 (= (containsKey!141 lt!36364 (_1!1097 lt!35870)) e!51827)))

(declare-fun b!79359 () Bool)

(declare-fun e!51828 () Bool)

(assert (=> b!79359 (= e!51827 e!51828)))

(declare-fun res!41449 () Bool)

(assert (=> b!79359 (=> (not res!41449) (not e!51828))))

(assert (=> b!79359 (= res!41449 (and (or (not ((_ is Cons!1503) lt!36364)) (bvsle (_1!1097 (h!2091 lt!36364)) (_1!1097 lt!35870))) ((_ is Cons!1503) lt!36364) (bvslt (_1!1097 (h!2091 lt!36364)) (_1!1097 lt!35870))))))

(declare-fun b!79360 () Bool)

(assert (=> b!79360 (= e!51828 (containsKey!141 (t!5153 lt!36364) (_1!1097 lt!35870)))))

(assert (= (and d!19087 (not res!41448)) b!79359))

(assert (= (and b!79359 res!41449) b!79360))

(declare-fun m!80389 () Bool)

(assert (=> b!79360 m!80389))

(assert (=> b!78562 d!19087))

(declare-fun d!19089 () Bool)

(assert (=> d!19089 (= (content!84 Nil!1505) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!18727 d!19089))

(declare-fun d!19091 () Bool)

(declare-fun res!41450 () Bool)

(declare-fun e!51829 () Bool)

(assert (=> d!19091 (=> res!41450 e!51829)))

(assert (=> d!19091 (= res!41450 (and ((_ is Cons!1503) lt!36262) (= (_1!1097 (h!2091 lt!36262)) (_1!1097 lt!35864))))))

(assert (=> d!19091 (= (containsKey!141 lt!36262 (_1!1097 lt!35864)) e!51829)))

(declare-fun b!79361 () Bool)

(declare-fun e!51830 () Bool)

(assert (=> b!79361 (= e!51829 e!51830)))

(declare-fun res!41451 () Bool)

(assert (=> b!79361 (=> (not res!41451) (not e!51830))))

(assert (=> b!79361 (= res!41451 (and (or (not ((_ is Cons!1503) lt!36262)) (bvsle (_1!1097 (h!2091 lt!36262)) (_1!1097 lt!35864))) ((_ is Cons!1503) lt!36262) (bvslt (_1!1097 (h!2091 lt!36262)) (_1!1097 lt!35864))))))

(declare-fun b!79362 () Bool)

(assert (=> b!79362 (= e!51830 (containsKey!141 (t!5153 lt!36262) (_1!1097 lt!35864)))))

(assert (= (and d!19091 (not res!41450)) b!79361))

(assert (= (and b!79361 res!41451) b!79362))

(declare-fun m!80391 () Bool)

(assert (=> b!79362 m!80391))

(assert (=> b!78415 d!19091))

(declare-fun b!79363 () Bool)

(declare-fun e!51834 () Bool)

(declare-fun call!7329 () Bool)

(assert (=> b!79363 (= e!51834 call!7329)))

(declare-fun d!19093 () Bool)

(declare-fun res!41453 () Bool)

(declare-fun e!51831 () Bool)

(assert (=> d!19093 (=> res!41453 e!51831)))

(assert (=> d!19093 (= res!41453 (bvsge lt!36515 (size!2136 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))))

(assert (=> d!19093 (= (arrayNoDuplicates!0 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) lt!36515 lt!36520) e!51831)))

(declare-fun b!79364 () Bool)

(assert (=> b!79364 (= e!51834 call!7329)))

(declare-fun b!79365 () Bool)

(declare-fun e!51833 () Bool)

(assert (=> b!79365 (= e!51833 e!51834)))

(declare-fun c!12306 () Bool)

(assert (=> b!79365 (= c!12306 (validKeyInArray!0 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) lt!36515)))))

(declare-fun e!51832 () Bool)

(declare-fun b!79366 () Bool)

(assert (=> b!79366 (= e!51832 (contains!744 lt!36520 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) lt!36515)))))

(declare-fun b!79367 () Bool)

(assert (=> b!79367 (= e!51831 e!51833)))

(declare-fun res!41454 () Bool)

(assert (=> b!79367 (=> (not res!41454) (not e!51833))))

(assert (=> b!79367 (= res!41454 (not e!51832))))

(declare-fun res!41452 () Bool)

(assert (=> b!79367 (=> (not res!41452) (not e!51832))))

(assert (=> b!79367 (= res!41452 (validKeyInArray!0 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) lt!36515)))))

(declare-fun bm!7326 () Bool)

(assert (=> bm!7326 (= call!7329 (arrayNoDuplicates!0 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (bvadd lt!36515 #b00000000000000000000000000000001) (ite c!12306 (Cons!1504 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) lt!36515) lt!36520) lt!36520)))))

(assert (= (and d!19093 (not res!41453)) b!79367))

(assert (= (and b!79367 res!41452) b!79366))

(assert (= (and b!79367 res!41454) b!79365))

(assert (= (and b!79365 c!12306) b!79363))

(assert (= (and b!79365 (not c!12306)) b!79364))

(assert (= (or b!79363 b!79364) bm!7326))

(declare-fun m!80393 () Bool)

(assert (=> b!79365 m!80393))

(assert (=> b!79365 m!80393))

(declare-fun m!80395 () Bool)

(assert (=> b!79365 m!80395))

(assert (=> b!79366 m!80393))

(assert (=> b!79366 m!80393))

(declare-fun m!80397 () Bool)

(assert (=> b!79366 m!80397))

(assert (=> b!79367 m!80393))

(assert (=> b!79367 m!80393))

(assert (=> b!79367 m!80395))

(assert (=> bm!7326 m!80393))

(declare-fun m!80399 () Bool)

(assert (=> bm!7326 m!80399))

(assert (=> d!18687 d!19093))

(declare-fun d!19095 () Bool)

(declare-fun lt!36840 () (_ BitVec 32))

(assert (=> d!19095 (and (bvsge lt!36840 #b00000000000000000000000000000000) (bvsle lt!36840 (bvsub (size!2136 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!51835 () (_ BitVec 32))

(assert (=> d!19095 (= lt!36840 e!51835)))

(declare-fun c!12308 () Bool)

(assert (=> d!19095 (= c!12308 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!19095 (and (bvsle #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2136 (_keys!3932 newMap!16)) (size!2136 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))))

(assert (=> d!19095 (= (arrayCountValidKeys!0 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) lt!36840)))

(declare-fun b!79368 () Bool)

(declare-fun e!51836 () (_ BitVec 32))

(declare-fun call!7330 () (_ BitVec 32))

(assert (=> b!79368 (= e!51836 call!7330)))

(declare-fun b!79369 () Bool)

(assert (=> b!79369 (= e!51835 #b00000000000000000000000000000000)))

(declare-fun b!79370 () Bool)

(assert (=> b!79370 (= e!51835 e!51836)))

(declare-fun c!12307 () Bool)

(assert (=> b!79370 (= c!12307 (validKeyInArray!0 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!79371 () Bool)

(assert (=> b!79371 (= e!51836 (bvadd #b00000000000000000000000000000001 call!7330))))

(declare-fun bm!7327 () Bool)

(assert (=> bm!7327 (= call!7330 (arrayCountValidKeys!0 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))))))

(assert (= (and d!19095 c!12308) b!79369))

(assert (= (and d!19095 (not c!12308)) b!79370))

(assert (= (and b!79370 c!12307) b!79371))

(assert (= (and b!79370 (not c!12307)) b!79368))

(assert (= (or b!79371 b!79368) bm!7327))

(declare-fun m!80401 () Bool)

(assert (=> b!79370 m!80401))

(assert (=> b!79370 m!80401))

(declare-fun m!80403 () Bool)

(assert (=> b!79370 m!80403))

(declare-fun m!80405 () Bool)

(assert (=> bm!7327 m!80405))

(assert (=> d!18687 d!19095))

(declare-fun call!7336 () ListLongMap!1447)

(declare-fun c!12314 () Bool)

(declare-fun call!7335 () ListLongMap!1447)

(declare-fun bm!7328 () Bool)

(declare-fun call!7337 () ListLongMap!1447)

(declare-fun call!7331 () ListLongMap!1447)

(declare-fun c!12310 () Bool)

(assert (=> bm!7328 (= call!7337 (+!105 (ite c!12310 call!7335 (ite c!12314 call!7331 call!7336)) (ite (or c!12310 c!12314) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun b!79372 () Bool)

(declare-fun e!51845 () Bool)

(declare-fun lt!36855 () ListLongMap!1447)

(assert (=> b!79372 (= e!51845 (= (apply!79 lt!36855 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!79373 () Bool)

(declare-fun e!51848 () ListLongMap!1447)

(assert (=> b!79373 (= e!51848 call!7336)))

(declare-fun b!79374 () Bool)

(declare-fun e!51838 () ListLongMap!1447)

(declare-fun call!7334 () ListLongMap!1447)

(assert (=> b!79374 (= e!51838 call!7334)))

(declare-fun b!79375 () Bool)

(declare-fun c!12311 () Bool)

(assert (=> b!79375 (= c!12311 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79375 (= e!51838 e!51848)))

(declare-fun b!79376 () Bool)

(declare-fun e!51843 () Bool)

(declare-fun call!7332 () Bool)

(assert (=> b!79376 (= e!51843 (not call!7332))))

(declare-fun b!79377 () Bool)

(declare-fun e!51842 () Bool)

(assert (=> b!79377 (= e!51842 (validKeyInArray!0 (select (arr!1895 lt!36521) #b00000000000000000000000000000000)))))

(declare-fun bm!7330 () Bool)

(assert (=> bm!7330 (= call!7336 call!7331)))

(declare-fun b!79378 () Bool)

(declare-fun e!51841 () Bool)

(declare-fun call!7333 () Bool)

(assert (=> b!79378 (= e!51841 (not call!7333))))

(declare-fun b!79379 () Bool)

(declare-fun e!51840 () Bool)

(assert (=> b!79379 (= e!51840 e!51843)))

(declare-fun c!12312 () Bool)

(assert (=> b!79379 (= c!12312 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7331 () Bool)

(assert (=> bm!7331 (= call!7333 (contains!742 lt!36855 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7332 () Bool)

(assert (=> bm!7332 (= call!7335 (getCurrentListMapNoExtraKeys!70 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!79380 () Bool)

(assert (=> b!79380 (= e!51848 call!7334)))

(declare-fun b!79381 () Bool)

(declare-fun e!51844 () ListLongMap!1447)

(assert (=> b!79381 (= e!51844 e!51838)))

(assert (=> b!79381 (= c!12314 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7333 () Bool)

(assert (=> bm!7333 (= call!7334 call!7337)))

(declare-fun b!79382 () Bool)

(declare-fun res!41460 () Bool)

(assert (=> b!79382 (=> (not res!41460) (not e!51840))))

(assert (=> b!79382 (= res!41460 e!51841)))

(declare-fun c!12313 () Bool)

(assert (=> b!79382 (= c!12313 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79383 () Bool)

(declare-fun e!51846 () Unit!2257)

(declare-fun Unit!2306 () Unit!2257)

(assert (=> b!79383 (= e!51846 Unit!2306)))

(declare-fun b!79384 () Bool)

(declare-fun e!51839 () Bool)

(assert (=> b!79384 (= e!51841 e!51839)))

(declare-fun res!41457 () Bool)

(assert (=> b!79384 (= res!41457 call!7333)))

(assert (=> b!79384 (=> (not res!41457) (not e!51839))))

(declare-fun b!79385 () Bool)

(assert (=> b!79385 (= e!51843 e!51845)))

(declare-fun res!41459 () Bool)

(assert (=> b!79385 (= res!41459 call!7332)))

(assert (=> b!79385 (=> (not res!41459) (not e!51845))))

(declare-fun e!51849 () Bool)

(declare-fun b!79386 () Bool)

(assert (=> b!79386 (= e!51849 (= (apply!79 lt!36855 (select (arr!1895 lt!36521) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 lt!36505) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79386 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 lt!36505)))))

(assert (=> b!79386 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 lt!36521)))))

(declare-fun d!19097 () Bool)

(assert (=> d!19097 e!51840))

(declare-fun res!41461 () Bool)

(assert (=> d!19097 (=> (not res!41461) (not e!51840))))

(assert (=> d!19097 (= res!41461 (or (bvsge #b00000000000000000000000000000000 (size!2136 lt!36521)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 lt!36521)))))))

(declare-fun lt!36845 () ListLongMap!1447)

(assert (=> d!19097 (= lt!36855 lt!36845)))

(declare-fun lt!36862 () Unit!2257)

(assert (=> d!19097 (= lt!36862 e!51846)))

(declare-fun c!12309 () Bool)

(assert (=> d!19097 (= c!12309 e!51842)))

(declare-fun res!41456 () Bool)

(assert (=> d!19097 (=> (not res!41456) (not e!51842))))

(assert (=> d!19097 (= res!41456 (bvslt #b00000000000000000000000000000000 (size!2136 lt!36521)))))

(assert (=> d!19097 (= lt!36845 e!51844)))

(assert (=> d!19097 (= c!12310 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19097 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19097 (= (getCurrentListMap!433 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36855)))

(declare-fun bm!7329 () Bool)

(assert (=> bm!7329 (= call!7332 (contains!742 lt!36855 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7334 () Bool)

(assert (=> bm!7334 (= call!7331 call!7335)))

(declare-fun b!79387 () Bool)

(declare-fun lt!36844 () Unit!2257)

(assert (=> b!79387 (= e!51846 lt!36844)))

(declare-fun lt!36850 () ListLongMap!1447)

(assert (=> b!79387 (= lt!36850 (getCurrentListMapNoExtraKeys!70 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36843 () (_ BitVec 64))

(assert (=> b!79387 (= lt!36843 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36852 () (_ BitVec 64))

(assert (=> b!79387 (= lt!36852 (select (arr!1895 lt!36521) #b00000000000000000000000000000000))))

(declare-fun lt!36857 () Unit!2257)

(assert (=> b!79387 (= lt!36857 (addStillContains!55 lt!36850 lt!36843 (zeroValue!2170 newMap!16) lt!36852))))

(assert (=> b!79387 (contains!742 (+!105 lt!36850 (tuple2!2173 lt!36843 (zeroValue!2170 newMap!16))) lt!36852)))

(declare-fun lt!36851 () Unit!2257)

(assert (=> b!79387 (= lt!36851 lt!36857)))

(declare-fun lt!36842 () ListLongMap!1447)

(assert (=> b!79387 (= lt!36842 (getCurrentListMapNoExtraKeys!70 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36846 () (_ BitVec 64))

(assert (=> b!79387 (= lt!36846 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36848 () (_ BitVec 64))

(assert (=> b!79387 (= lt!36848 (select (arr!1895 lt!36521) #b00000000000000000000000000000000))))

(declare-fun lt!36847 () Unit!2257)

(assert (=> b!79387 (= lt!36847 (addApplyDifferent!55 lt!36842 lt!36846 (minValue!2170 newMap!16) lt!36848))))

(assert (=> b!79387 (= (apply!79 (+!105 lt!36842 (tuple2!2173 lt!36846 (minValue!2170 newMap!16))) lt!36848) (apply!79 lt!36842 lt!36848))))

(declare-fun lt!36841 () Unit!2257)

(assert (=> b!79387 (= lt!36841 lt!36847)))

(declare-fun lt!36859 () ListLongMap!1447)

(assert (=> b!79387 (= lt!36859 (getCurrentListMapNoExtraKeys!70 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36858 () (_ BitVec 64))

(assert (=> b!79387 (= lt!36858 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36860 () (_ BitVec 64))

(assert (=> b!79387 (= lt!36860 (select (arr!1895 lt!36521) #b00000000000000000000000000000000))))

(declare-fun lt!36849 () Unit!2257)

(assert (=> b!79387 (= lt!36849 (addApplyDifferent!55 lt!36859 lt!36858 (zeroValue!2170 newMap!16) lt!36860))))

(assert (=> b!79387 (= (apply!79 (+!105 lt!36859 (tuple2!2173 lt!36858 (zeroValue!2170 newMap!16))) lt!36860) (apply!79 lt!36859 lt!36860))))

(declare-fun lt!36853 () Unit!2257)

(assert (=> b!79387 (= lt!36853 lt!36849)))

(declare-fun lt!36856 () ListLongMap!1447)

(assert (=> b!79387 (= lt!36856 (getCurrentListMapNoExtraKeys!70 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36861 () (_ BitVec 64))

(assert (=> b!79387 (= lt!36861 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36854 () (_ BitVec 64))

(assert (=> b!79387 (= lt!36854 (select (arr!1895 lt!36521) #b00000000000000000000000000000000))))

(assert (=> b!79387 (= lt!36844 (addApplyDifferent!55 lt!36856 lt!36861 (minValue!2170 newMap!16) lt!36854))))

(assert (=> b!79387 (= (apply!79 (+!105 lt!36856 (tuple2!2173 lt!36861 (minValue!2170 newMap!16))) lt!36854) (apply!79 lt!36856 lt!36854))))

(declare-fun b!79388 () Bool)

(declare-fun res!41463 () Bool)

(assert (=> b!79388 (=> (not res!41463) (not e!51840))))

(declare-fun e!51837 () Bool)

(assert (=> b!79388 (= res!41463 e!51837)))

(declare-fun res!41458 () Bool)

(assert (=> b!79388 (=> res!41458 e!51837)))

(declare-fun e!51847 () Bool)

(assert (=> b!79388 (= res!41458 (not e!51847))))

(declare-fun res!41455 () Bool)

(assert (=> b!79388 (=> (not res!41455) (not e!51847))))

(assert (=> b!79388 (= res!41455 (bvslt #b00000000000000000000000000000000 (size!2136 lt!36521)))))

(declare-fun b!79389 () Bool)

(assert (=> b!79389 (= e!51837 e!51849)))

(declare-fun res!41462 () Bool)

(assert (=> b!79389 (=> (not res!41462) (not e!51849))))

(assert (=> b!79389 (= res!41462 (contains!742 lt!36855 (select (arr!1895 lt!36521) #b00000000000000000000000000000000)))))

(assert (=> b!79389 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 lt!36521)))))

(declare-fun b!79390 () Bool)

(assert (=> b!79390 (= e!51839 (= (apply!79 lt!36855 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(declare-fun b!79391 () Bool)

(assert (=> b!79391 (= e!51847 (validKeyInArray!0 (select (arr!1895 lt!36521) #b00000000000000000000000000000000)))))

(declare-fun b!79392 () Bool)

(assert (=> b!79392 (= e!51844 (+!105 call!7337 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!19097 c!12310) b!79392))

(assert (= (and d!19097 (not c!12310)) b!79381))

(assert (= (and b!79381 c!12314) b!79374))

(assert (= (and b!79381 (not c!12314)) b!79375))

(assert (= (and b!79375 c!12311) b!79380))

(assert (= (and b!79375 (not c!12311)) b!79373))

(assert (= (or b!79380 b!79373) bm!7330))

(assert (= (or b!79374 bm!7330) bm!7334))

(assert (= (or b!79374 b!79380) bm!7333))

(assert (= (or b!79392 bm!7334) bm!7332))

(assert (= (or b!79392 bm!7333) bm!7328))

(assert (= (and d!19097 res!41456) b!79377))

(assert (= (and d!19097 c!12309) b!79387))

(assert (= (and d!19097 (not c!12309)) b!79383))

(assert (= (and d!19097 res!41461) b!79388))

(assert (= (and b!79388 res!41455) b!79391))

(assert (= (and b!79388 (not res!41458)) b!79389))

(assert (= (and b!79389 res!41462) b!79386))

(assert (= (and b!79388 res!41463) b!79382))

(assert (= (and b!79382 c!12313) b!79384))

(assert (= (and b!79382 (not c!12313)) b!79378))

(assert (= (and b!79384 res!41457) b!79390))

(assert (= (or b!79384 b!79378) bm!7331))

(assert (= (and b!79382 res!41460) b!79379))

(assert (= (and b!79379 c!12312) b!79385))

(assert (= (and b!79379 (not c!12312)) b!79376))

(assert (= (and b!79385 res!41459) b!79372))

(assert (= (or b!79385 b!79376) bm!7329))

(declare-fun b_lambda!3547 () Bool)

(assert (=> (not b_lambda!3547) (not b!79386)))

(assert (=> b!79386 t!5161))

(declare-fun b_and!4879 () Bool)

(assert (= b_and!4875 (and (=> t!5161 result!2825) b_and!4879)))

(assert (=> b!79386 t!5163))

(declare-fun b_and!4881 () Bool)

(assert (= b_and!4877 (and (=> t!5163 result!2827) b_and!4881)))

(declare-fun m!80407 () Bool)

(assert (=> b!79390 m!80407))

(declare-fun m!80409 () Bool)

(assert (=> bm!7331 m!80409))

(declare-fun m!80411 () Bool)

(assert (=> bm!7329 m!80411))

(declare-fun m!80413 () Bool)

(assert (=> b!79387 m!80413))

(declare-fun m!80415 () Bool)

(assert (=> b!79387 m!80415))

(declare-fun m!80417 () Bool)

(assert (=> b!79387 m!80417))

(declare-fun m!80419 () Bool)

(assert (=> b!79387 m!80419))

(declare-fun m!80421 () Bool)

(assert (=> b!79387 m!80421))

(declare-fun m!80423 () Bool)

(assert (=> b!79387 m!80423))

(declare-fun m!80425 () Bool)

(assert (=> b!79387 m!80425))

(declare-fun m!80427 () Bool)

(assert (=> b!79387 m!80427))

(declare-fun m!80429 () Bool)

(assert (=> b!79387 m!80429))

(declare-fun m!80431 () Bool)

(assert (=> b!79387 m!80431))

(declare-fun m!80433 () Bool)

(assert (=> b!79387 m!80433))

(declare-fun m!80435 () Bool)

(assert (=> b!79387 m!80435))

(declare-fun m!80437 () Bool)

(assert (=> b!79387 m!80437))

(declare-fun m!80439 () Bool)

(assert (=> b!79387 m!80439))

(assert (=> b!79387 m!80433))

(assert (=> b!79387 m!80417))

(declare-fun m!80441 () Bool)

(assert (=> b!79387 m!80441))

(declare-fun m!80443 () Bool)

(assert (=> b!79387 m!80443))

(declare-fun m!80445 () Bool)

(assert (=> b!79387 m!80445))

(assert (=> b!79387 m!80413))

(assert (=> b!79387 m!80421))

(assert (=> b!79386 m!80427))

(declare-fun m!80447 () Bool)

(assert (=> b!79386 m!80447))

(assert (=> b!79386 m!80427))

(declare-fun m!80449 () Bool)

(assert (=> b!79386 m!80449))

(assert (=> b!79386 m!78533))

(declare-fun m!80451 () Bool)

(assert (=> b!79386 m!80451))

(assert (=> b!79386 m!78533))

(assert (=> b!79386 m!80449))

(assert (=> b!79377 m!80427))

(assert (=> b!79377 m!80427))

(declare-fun m!80453 () Bool)

(assert (=> b!79377 m!80453))

(declare-fun m!80455 () Bool)

(assert (=> b!79372 m!80455))

(assert (=> bm!7332 m!80443))

(declare-fun m!80457 () Bool)

(assert (=> bm!7328 m!80457))

(assert (=> b!79389 m!80427))

(assert (=> b!79389 m!80427))

(declare-fun m!80459 () Bool)

(assert (=> b!79389 m!80459))

(declare-fun m!80461 () Bool)

(assert (=> b!79392 m!80461))

(assert (=> d!19097 m!78411))

(assert (=> b!79391 m!80427))

(assert (=> b!79391 m!80427))

(assert (=> b!79391 m!80453))

(assert (=> d!18687 d!19097))

(declare-fun d!19099 () Bool)

(declare-fun e!51850 () Bool)

(assert (=> d!19099 e!51850))

(declare-fun res!41464 () Bool)

(assert (=> d!19099 (=> res!41464 e!51850)))

(declare-fun lt!36866 () Bool)

(assert (=> d!19099 (= res!41464 (not lt!36866))))

(declare-fun lt!36863 () Bool)

(assert (=> d!19099 (= lt!36866 lt!36863)))

(declare-fun lt!36864 () Unit!2257)

(declare-fun e!51851 () Unit!2257)

(assert (=> d!19099 (= lt!36864 e!51851)))

(declare-fun c!12315 () Bool)

(assert (=> d!19099 (= c!12315 lt!36863)))

(assert (=> d!19099 (= lt!36863 (containsKey!141 (toList!739 (getCurrentListMap!433 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)))))))

(assert (=> d!19099 (= (contains!742 (getCurrentListMap!433 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)))) lt!36866)))

(declare-fun b!79393 () Bool)

(declare-fun lt!36865 () Unit!2257)

(assert (=> b!79393 (= e!51851 lt!36865)))

(assert (=> b!79393 (= lt!36865 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (getCurrentListMap!433 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)))))))

(assert (=> b!79393 (isDefined!90 (getValueByKey!137 (toList!739 (getCurrentListMap!433 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)))))))

(declare-fun b!79394 () Bool)

(declare-fun Unit!2307 () Unit!2257)

(assert (=> b!79394 (= e!51851 Unit!2307)))

(declare-fun b!79395 () Bool)

(assert (=> b!79395 (= e!51850 (isDefined!90 (getValueByKey!137 (toList!739 (getCurrentListMap!433 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))))))))

(assert (= (and d!19099 c!12315) b!79393))

(assert (= (and d!19099 (not c!12315)) b!79394))

(assert (= (and d!19099 (not res!41464)) b!79395))

(assert (=> d!19099 m!79173))

(declare-fun m!80463 () Bool)

(assert (=> d!19099 m!80463))

(assert (=> b!79393 m!79173))

(declare-fun m!80465 () Bool)

(assert (=> b!79393 m!80465))

(assert (=> b!79393 m!79173))

(declare-fun m!80467 () Bool)

(assert (=> b!79393 m!80467))

(assert (=> b!79393 m!80467))

(declare-fun m!80469 () Bool)

(assert (=> b!79393 m!80469))

(assert (=> b!79395 m!79173))

(assert (=> b!79395 m!80467))

(assert (=> b!79395 m!80467))

(assert (=> b!79395 m!80469))

(assert (=> d!18687 d!19099))

(declare-fun d!19101 () Bool)

(assert (=> d!19101 (arrayContainsKey!0 lt!36506 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!36867 () Unit!2257)

(assert (=> d!19101 (= lt!36867 (choose!13 lt!36506 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))))))

(assert (=> d!19101 (bvsge (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000000)))

(assert (=> d!19101 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!36506 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))) lt!36867)))

(declare-fun bs!3366 () Bool)

(assert (= bs!3366 d!19101))

(assert (=> bs!3366 m!77965))

(assert (=> bs!3366 m!79183))

(assert (=> bs!3366 m!77965))

(declare-fun m!80471 () Bool)

(assert (=> bs!3366 m!80471))

(assert (=> d!18687 d!19101))

(declare-fun b!79405 () Bool)

(declare-fun res!41476 () Bool)

(declare-fun e!51856 () Bool)

(assert (=> b!79405 (=> (not res!41476) (not e!51856))))

(assert (=> b!79405 (= res!41476 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!79406 () Bool)

(assert (=> b!79406 (= e!51856 (bvslt (size!2136 (_keys!3932 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!79404 () Bool)

(declare-fun res!41474 () Bool)

(assert (=> b!79404 (=> (not res!41474) (not e!51856))))

(assert (=> b!79404 (= res!41474 (not (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))))))))

(declare-fun e!51857 () Bool)

(declare-fun b!79407 () Bool)

(assert (=> b!79407 (= e!51857 (= (arrayCountValidKeys!0 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!19103 () Bool)

(assert (=> d!19103 e!51857))

(declare-fun res!41475 () Bool)

(assert (=> d!19103 (=> (not res!41475) (not e!51857))))

(assert (=> d!19103 (= res!41475 (and (bvsge (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (size!2136 (_keys!3932 newMap!16)))))))

(declare-fun lt!36870 () Unit!2257)

(declare-fun choose!1 (array!3975 (_ BitVec 32) (_ BitVec 64)) Unit!2257)

(assert (=> d!19103 (= lt!36870 (choose!1 (_keys!3932 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!19103 e!51856))

(declare-fun res!41473 () Bool)

(assert (=> d!19103 (=> (not res!41473) (not e!51856))))

(assert (=> d!19103 (= res!41473 (and (bvsge (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (size!2136 (_keys!3932 newMap!16)))))))

(assert (=> d!19103 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3932 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) lt!36870)))

(assert (= (and d!19103 res!41473) b!79404))

(assert (= (and b!79404 res!41474) b!79405))

(assert (= (and b!79405 res!41476) b!79406))

(assert (= (and d!19103 res!41475) b!79407))

(assert (=> b!79405 m!77965))

(assert (=> b!79405 m!78289))

(declare-fun m!80473 () Bool)

(assert (=> b!79404 m!80473))

(assert (=> b!79404 m!80473))

(declare-fun m!80475 () Bool)

(assert (=> b!79404 m!80475))

(assert (=> b!79407 m!79189))

(assert (=> b!79407 m!79203))

(assert (=> b!79407 m!78271))

(assert (=> d!19103 m!77965))

(declare-fun m!80477 () Bool)

(assert (=> d!19103 m!80477))

(assert (=> d!18687 d!19103))

(assert (=> d!18687 d!18523))

(declare-fun d!19105 () Bool)

(declare-fun e!51860 () Bool)

(assert (=> d!19105 e!51860))

(declare-fun res!41479 () Bool)

(assert (=> d!19105 (=> (not res!41479) (not e!51860))))

(assert (=> d!19105 (= res!41479 (and (bvsge (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (size!2136 (_keys!3932 newMap!16))) (bvslt (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (size!2137 (_values!2255 newMap!16)))))))

(declare-fun lt!36873 () Unit!2257)

(declare-fun choose!466 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) (_ BitVec 64) V!2995 Int) Unit!2257)

(assert (=> d!19105 (= lt!36873 (choose!466 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 (defaultEntry!2272 newMap!16)))))

(assert (=> d!19105 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19105 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!16 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856 (defaultEntry!2272 newMap!16)) lt!36873)))

(declare-fun b!79410 () Bool)

(assert (=> b!79410 (= e!51860 (= (+!105 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (getCurrentListMap!433 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))))

(assert (= (and d!19105 res!41479) b!79410))

(assert (=> d!19105 m!77965))

(declare-fun m!80479 () Bool)

(assert (=> d!19105 m!80479))

(assert (=> d!19105 m!78411))

(assert (=> b!79410 m!78087))

(assert (=> b!79410 m!79193))

(assert (=> b!79410 m!78087))

(assert (=> b!79410 m!78985))

(assert (=> b!79410 m!79181))

(assert (=> b!79410 m!79189))

(assert (=> d!18687 d!19105))

(declare-fun d!19107 () Bool)

(declare-fun res!41480 () Bool)

(declare-fun e!51861 () Bool)

(assert (=> d!19107 (=> res!41480 e!51861)))

(assert (=> d!19107 (= res!41480 (= (select (arr!1895 lt!36506) #b00000000000000000000000000000000) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!19107 (= (arrayContainsKey!0 lt!36506 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000) e!51861)))

(declare-fun b!79411 () Bool)

(declare-fun e!51862 () Bool)

(assert (=> b!79411 (= e!51861 e!51862)))

(declare-fun res!41481 () Bool)

(assert (=> b!79411 (=> (not res!41481) (not e!51862))))

(assert (=> b!79411 (= res!41481 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 lt!36506)))))

(declare-fun b!79412 () Bool)

(assert (=> b!79412 (= e!51862 (arrayContainsKey!0 lt!36506 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!19107 (not res!41480)) b!79411))

(assert (= (and b!79411 res!41481) b!79412))

(declare-fun m!80481 () Bool)

(assert (=> d!19107 m!80481))

(assert (=> b!79412 m!77965))

(declare-fun m!80483 () Bool)

(assert (=> b!79412 m!80483))

(assert (=> d!18687 d!19107))

(declare-fun lt!36874 () (_ BitVec 32))

(declare-fun d!19109 () Bool)

(assert (=> d!19109 (and (bvsge lt!36874 #b00000000000000000000000000000000) (bvsle lt!36874 (bvsub (size!2136 lt!36500) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)))))))

(declare-fun e!51863 () (_ BitVec 32))

(assert (=> d!19109 (= lt!36874 e!51863)))

(declare-fun c!12317 () Bool)

(assert (=> d!19109 (= c!12317 (bvsge (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (bvadd (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000001)))))

(assert (=> d!19109 (and (bvsle (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (bvadd (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000001)) (bvsge (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000001) (size!2136 lt!36500)))))

(assert (=> d!19109 (= (arrayCountValidKeys!0 lt!36500 (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (bvadd (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000001)) lt!36874)))

(declare-fun b!79413 () Bool)

(declare-fun e!51864 () (_ BitVec 32))

(declare-fun call!7338 () (_ BitVec 32))

(assert (=> b!79413 (= e!51864 call!7338)))

(declare-fun b!79414 () Bool)

(assert (=> b!79414 (= e!51863 #b00000000000000000000000000000000)))

(declare-fun b!79415 () Bool)

(assert (=> b!79415 (= e!51863 e!51864)))

(declare-fun c!12316 () Bool)

(assert (=> b!79415 (= c!12316 (validKeyInArray!0 (select (arr!1895 lt!36500) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)))))))

(declare-fun b!79416 () Bool)

(assert (=> b!79416 (= e!51864 (bvadd #b00000000000000000000000000000001 call!7338))))

(declare-fun bm!7335 () Bool)

(assert (=> bm!7335 (= call!7338 (arrayCountValidKeys!0 lt!36500 (bvadd (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000001) (bvadd (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000001)))))

(assert (= (and d!19109 c!12317) b!79414))

(assert (= (and d!19109 (not c!12317)) b!79415))

(assert (= (and b!79415 c!12316) b!79416))

(assert (= (and b!79415 (not c!12316)) b!79413))

(assert (= (or b!79416 b!79413) bm!7335))

(declare-fun m!80485 () Bool)

(assert (=> b!79415 m!80485))

(assert (=> b!79415 m!80485))

(declare-fun m!80487 () Bool)

(assert (=> b!79415 m!80487))

(declare-fun m!80489 () Bool)

(assert (=> bm!7335 m!80489))

(assert (=> d!18687 d!19109))

(declare-fun d!19111 () Bool)

(declare-fun e!51865 () Bool)

(assert (=> d!19111 e!51865))

(declare-fun res!41482 () Bool)

(assert (=> d!19111 (=> (not res!41482) (not e!51865))))

(assert (=> d!19111 (= res!41482 (and (bvsge (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (size!2136 lt!36521))))))

(declare-fun lt!36875 () Unit!2257)

(assert (=> d!19111 (= lt!36875 (choose!463 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (defaultEntry!2272 newMap!16)))))

(assert (=> d!19111 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19111 (= (lemmaValidKeyInArrayIsInListMap!89 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (defaultEntry!2272 newMap!16)) lt!36875)))

(declare-fun b!79417 () Bool)

(assert (=> b!79417 (= e!51865 (contains!742 (getCurrentListMap!433 lt!36521 lt!36505 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1895 lt!36521) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)))))))

(assert (= (and d!19111 res!41482) b!79417))

(declare-fun m!80491 () Bool)

(assert (=> d!19111 m!80491))

(assert (=> d!19111 m!78411))

(assert (=> b!79417 m!79171))

(declare-fun m!80493 () Bool)

(assert (=> b!79417 m!80493))

(assert (=> b!79417 m!79171))

(assert (=> b!79417 m!80493))

(declare-fun m!80495 () Bool)

(assert (=> b!79417 m!80495))

(assert (=> d!18687 d!19111))

(declare-fun d!19113 () Bool)

(declare-fun e!51868 () Bool)

(assert (=> d!19113 e!51868))

(declare-fun res!41485 () Bool)

(assert (=> d!19113 (=> (not res!41485) (not e!51868))))

(assert (=> d!19113 (= res!41485 (and (bvsge (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (size!2136 (_keys!3932 newMap!16)))))))

(declare-fun lt!36878 () Unit!2257)

(declare-fun choose!41 (array!3975 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1508) Unit!2257)

(assert (=> d!19113 (= lt!36878 (choose!41 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) lt!36515 lt!36520))))

(assert (=> d!19113 (bvslt (size!2136 (_keys!3932 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!19113 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) lt!36515 lt!36520) lt!36878)))

(declare-fun b!79420 () Bool)

(assert (=> b!79420 (= e!51868 (arrayNoDuplicates!0 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) lt!36515 lt!36520))))

(assert (= (and d!19113 res!41485) b!79420))

(assert (=> d!19113 m!77965))

(declare-fun m!80497 () Bool)

(assert (=> d!19113 m!80497))

(assert (=> b!79420 m!79189))

(assert (=> b!79420 m!79197))

(assert (=> d!18687 d!19113))

(assert (=> d!18687 d!18643))

(declare-fun d!19115 () Bool)

(assert (=> d!19115 (= (arrayCountValidKeys!0 lt!36500 (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (bvadd (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!36881 () Unit!2257)

(declare-fun choose!2 (array!3975 (_ BitVec 32)) Unit!2257)

(assert (=> d!19115 (= lt!36881 (choose!2 lt!36500 (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))))))

(declare-fun e!51871 () Bool)

(assert (=> d!19115 e!51871))

(declare-fun res!41490 () Bool)

(assert (=> d!19115 (=> (not res!41490) (not e!51871))))

(assert (=> d!19115 (= res!41490 (and (bvsge (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (size!2136 lt!36500))))))

(assert (=> d!19115 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!36500 (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128))) lt!36881)))

(declare-fun b!79425 () Bool)

(declare-fun res!41491 () Bool)

(assert (=> b!79425 (=> (not res!41491) (not e!51871))))

(assert (=> b!79425 (= res!41491 (validKeyInArray!0 (select (arr!1895 lt!36500) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)))))))

(declare-fun b!79426 () Bool)

(assert (=> b!79426 (= e!51871 (bvslt (size!2136 lt!36500) #b01111111111111111111111111111111))))

(assert (= (and d!19115 res!41490) b!79425))

(assert (= (and b!79425 res!41491) b!79426))

(assert (=> d!19115 m!79185))

(declare-fun m!80499 () Bool)

(assert (=> d!19115 m!80499))

(assert (=> b!79425 m!80485))

(assert (=> b!79425 m!80485))

(assert (=> b!79425 m!80487))

(assert (=> d!18687 d!19115))

(assert (=> d!18687 d!18645))

(declare-fun d!19117 () Bool)

(declare-fun e!51874 () Bool)

(assert (=> d!19117 e!51874))

(declare-fun res!41494 () Bool)

(assert (=> d!19117 (=> (not res!41494) (not e!51874))))

(assert (=> d!19117 (= res!41494 (and (bvsge (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (size!2136 (_keys!3932 newMap!16)))))))

(declare-fun lt!36884 () Unit!2257)

(declare-fun choose!102 ((_ BitVec 64) array!3975 (_ BitVec 32) (_ BitVec 32)) Unit!2257)

(assert (=> d!19117 (= lt!36884 (choose!102 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (mask!6268 newMap!16)))))

(assert (=> d!19117 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19117 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (mask!6268 newMap!16)) lt!36884)))

(declare-fun b!79429 () Bool)

(assert (=> b!79429 (= e!51874 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (mask!6268 newMap!16)))))

(assert (= (and d!19117 res!41494) b!79429))

(assert (=> d!19117 m!77965))

(declare-fun m!80501 () Bool)

(assert (=> d!19117 m!80501))

(assert (=> d!19117 m!78411))

(assert (=> b!79429 m!79189))

(assert (=> b!79429 m!79191))

(assert (=> d!18687 d!19117))

(assert (=> d!18687 d!18453))

(declare-fun bm!7336 () Bool)

(declare-fun call!7339 () Bool)

(assert (=> bm!7336 (= call!7339 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (mask!6268 newMap!16)))))

(declare-fun b!79430 () Bool)

(declare-fun e!51876 () Bool)

(assert (=> b!79430 (= e!51876 call!7339)))

(declare-fun b!79431 () Bool)

(declare-fun e!51877 () Bool)

(declare-fun e!51875 () Bool)

(assert (=> b!79431 (= e!51877 e!51875)))

(declare-fun c!12318 () Bool)

(assert (=> b!79431 (= c!12318 (validKeyInArray!0 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!79432 () Bool)

(assert (=> b!79432 (= e!51875 call!7339)))

(declare-fun b!79433 () Bool)

(assert (=> b!79433 (= e!51875 e!51876)))

(declare-fun lt!36885 () (_ BitVec 64))

(assert (=> b!79433 (= lt!36885 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36887 () Unit!2257)

(assert (=> b!79433 (= lt!36887 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) lt!36885 #b00000000000000000000000000000000))))

(assert (=> b!79433 (arrayContainsKey!0 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) lt!36885 #b00000000000000000000000000000000)))

(declare-fun lt!36886 () Unit!2257)

(assert (=> b!79433 (= lt!36886 lt!36887)))

(declare-fun res!41496 () Bool)

(assert (=> b!79433 (= res!41496 (= (seekEntryOrOpen!0 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000) (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (mask!6268 newMap!16)) (Found!240 #b00000000000000000000000000000000)))))

(assert (=> b!79433 (=> (not res!41496) (not e!51876))))

(declare-fun d!19119 () Bool)

(declare-fun res!41495 () Bool)

(assert (=> d!19119 (=> res!41495 e!51877)))

(assert (=> d!19119 (= res!41495 (bvsge #b00000000000000000000000000000000 (size!2136 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))))

(assert (=> d!19119 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (mask!6268 newMap!16)) e!51877)))

(assert (= (and d!19119 (not res!41495)) b!79431))

(assert (= (and b!79431 c!12318) b!79433))

(assert (= (and b!79431 (not c!12318)) b!79432))

(assert (= (and b!79433 res!41496) b!79430))

(assert (= (or b!79430 b!79432) bm!7336))

(declare-fun m!80503 () Bool)

(assert (=> bm!7336 m!80503))

(assert (=> b!79431 m!80401))

(assert (=> b!79431 m!80401))

(assert (=> b!79431 m!80403))

(assert (=> b!79433 m!80401))

(declare-fun m!80505 () Bool)

(assert (=> b!79433 m!80505))

(declare-fun m!80507 () Bool)

(assert (=> b!79433 m!80507))

(assert (=> b!79433 m!80401))

(declare-fun m!80509 () Bool)

(assert (=> b!79433 m!80509))

(assert (=> d!18687 d!19119))

(assert (=> d!18687 d!18663))

(assert (=> d!18687 d!19081))

(declare-fun call!7346 () ListLongMap!1447)

(declare-fun call!7340 () ListLongMap!1447)

(declare-fun c!12320 () Bool)

(declare-fun call!7344 () ListLongMap!1447)

(declare-fun call!7345 () ListLongMap!1447)

(declare-fun bm!7337 () Bool)

(declare-fun c!12324 () Bool)

(assert (=> bm!7337 (= call!7346 (+!105 (ite c!12320 call!7344 (ite c!12324 call!7340 call!7345)) (ite (or c!12320 c!12324) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun b!79434 () Bool)

(declare-fun e!51886 () Bool)

(declare-fun lt!36902 () ListLongMap!1447)

(assert (=> b!79434 (= e!51886 (= (apply!79 lt!36902 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!79435 () Bool)

(declare-fun e!51889 () ListLongMap!1447)

(assert (=> b!79435 (= e!51889 call!7345)))

(declare-fun b!79436 () Bool)

(declare-fun e!51879 () ListLongMap!1447)

(declare-fun call!7343 () ListLongMap!1447)

(assert (=> b!79436 (= e!51879 call!7343)))

(declare-fun b!79437 () Bool)

(declare-fun c!12321 () Bool)

(assert (=> b!79437 (= c!12321 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79437 (= e!51879 e!51889)))

(declare-fun b!79438 () Bool)

(declare-fun e!51884 () Bool)

(declare-fun call!7341 () Bool)

(assert (=> b!79438 (= e!51884 (not call!7341))))

(declare-fun b!79439 () Bool)

(declare-fun e!51883 () Bool)

(assert (=> b!79439 (= e!51883 (validKeyInArray!0 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7339 () Bool)

(assert (=> bm!7339 (= call!7345 call!7340)))

(declare-fun b!79440 () Bool)

(declare-fun e!51882 () Bool)

(declare-fun call!7342 () Bool)

(assert (=> b!79440 (= e!51882 (not call!7342))))

(declare-fun b!79441 () Bool)

(declare-fun e!51881 () Bool)

(assert (=> b!79441 (= e!51881 e!51884)))

(declare-fun c!12322 () Bool)

(assert (=> b!79441 (= c!12322 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7340 () Bool)

(assert (=> bm!7340 (= call!7342 (contains!742 lt!36902 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7341 () Bool)

(assert (=> bm!7341 (= call!7344 (getCurrentListMapNoExtraKeys!70 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!79442 () Bool)

(assert (=> b!79442 (= e!51889 call!7343)))

(declare-fun b!79443 () Bool)

(declare-fun e!51885 () ListLongMap!1447)

(assert (=> b!79443 (= e!51885 e!51879)))

(assert (=> b!79443 (= c!12324 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7342 () Bool)

(assert (=> bm!7342 (= call!7343 call!7346)))

(declare-fun b!79444 () Bool)

(declare-fun res!41502 () Bool)

(assert (=> b!79444 (=> (not res!41502) (not e!51881))))

(assert (=> b!79444 (= res!41502 e!51882)))

(declare-fun c!12323 () Bool)

(assert (=> b!79444 (= c!12323 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79445 () Bool)

(declare-fun e!51887 () Unit!2257)

(declare-fun Unit!2308 () Unit!2257)

(assert (=> b!79445 (= e!51887 Unit!2308)))

(declare-fun b!79446 () Bool)

(declare-fun e!51880 () Bool)

(assert (=> b!79446 (= e!51882 e!51880)))

(declare-fun res!41499 () Bool)

(assert (=> b!79446 (= res!41499 call!7342)))

(assert (=> b!79446 (=> (not res!41499) (not e!51880))))

(declare-fun b!79447 () Bool)

(assert (=> b!79447 (= e!51884 e!51886)))

(declare-fun res!41501 () Bool)

(assert (=> b!79447 (= res!41501 call!7341)))

(assert (=> b!79447 (=> (not res!41501) (not e!51886))))

(declare-fun e!51890 () Bool)

(declare-fun b!79448 () Bool)

(assert (=> b!79448 (= e!51890 (= (apply!79 lt!36902 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79448 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))))))))

(assert (=> b!79448 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))))

(declare-fun d!19121 () Bool)

(assert (=> d!19121 e!51881))

(declare-fun res!41503 () Bool)

(assert (=> d!19121 (=> (not res!41503) (not e!51881))))

(assert (=> d!19121 (= res!41503 (or (bvsge #b00000000000000000000000000000000 (size!2136 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))))))

(declare-fun lt!36892 () ListLongMap!1447)

(assert (=> d!19121 (= lt!36902 lt!36892)))

(declare-fun lt!36909 () Unit!2257)

(assert (=> d!19121 (= lt!36909 e!51887)))

(declare-fun c!12319 () Bool)

(assert (=> d!19121 (= c!12319 e!51883)))

(declare-fun res!41498 () Bool)

(assert (=> d!19121 (=> (not res!41498) (not e!51883))))

(assert (=> d!19121 (= res!41498 (bvslt #b00000000000000000000000000000000 (size!2136 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))))

(assert (=> d!19121 (= lt!36892 e!51885)))

(assert (=> d!19121 (= c!12320 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19121 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19121 (= (getCurrentListMap!433 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36902)))

(declare-fun bm!7338 () Bool)

(assert (=> bm!7338 (= call!7341 (contains!742 lt!36902 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7343 () Bool)

(assert (=> bm!7343 (= call!7340 call!7344)))

(declare-fun b!79449 () Bool)

(declare-fun lt!36891 () Unit!2257)

(assert (=> b!79449 (= e!51887 lt!36891)))

(declare-fun lt!36897 () ListLongMap!1447)

(assert (=> b!79449 (= lt!36897 (getCurrentListMapNoExtraKeys!70 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36890 () (_ BitVec 64))

(assert (=> b!79449 (= lt!36890 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36899 () (_ BitVec 64))

(assert (=> b!79449 (= lt!36899 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36904 () Unit!2257)

(assert (=> b!79449 (= lt!36904 (addStillContains!55 lt!36897 lt!36890 (zeroValue!2170 newMap!16) lt!36899))))

(assert (=> b!79449 (contains!742 (+!105 lt!36897 (tuple2!2173 lt!36890 (zeroValue!2170 newMap!16))) lt!36899)))

(declare-fun lt!36898 () Unit!2257)

(assert (=> b!79449 (= lt!36898 lt!36904)))

(declare-fun lt!36889 () ListLongMap!1447)

(assert (=> b!79449 (= lt!36889 (getCurrentListMapNoExtraKeys!70 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36893 () (_ BitVec 64))

(assert (=> b!79449 (= lt!36893 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36895 () (_ BitVec 64))

(assert (=> b!79449 (= lt!36895 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36894 () Unit!2257)

(assert (=> b!79449 (= lt!36894 (addApplyDifferent!55 lt!36889 lt!36893 (minValue!2170 newMap!16) lt!36895))))

(assert (=> b!79449 (= (apply!79 (+!105 lt!36889 (tuple2!2173 lt!36893 (minValue!2170 newMap!16))) lt!36895) (apply!79 lt!36889 lt!36895))))

(declare-fun lt!36888 () Unit!2257)

(assert (=> b!79449 (= lt!36888 lt!36894)))

(declare-fun lt!36906 () ListLongMap!1447)

(assert (=> b!79449 (= lt!36906 (getCurrentListMapNoExtraKeys!70 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36905 () (_ BitVec 64))

(assert (=> b!79449 (= lt!36905 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36907 () (_ BitVec 64))

(assert (=> b!79449 (= lt!36907 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36896 () Unit!2257)

(assert (=> b!79449 (= lt!36896 (addApplyDifferent!55 lt!36906 lt!36905 (zeroValue!2170 newMap!16) lt!36907))))

(assert (=> b!79449 (= (apply!79 (+!105 lt!36906 (tuple2!2173 lt!36905 (zeroValue!2170 newMap!16))) lt!36907) (apply!79 lt!36906 lt!36907))))

(declare-fun lt!36900 () Unit!2257)

(assert (=> b!79449 (= lt!36900 lt!36896)))

(declare-fun lt!36903 () ListLongMap!1447)

(assert (=> b!79449 (= lt!36903 (getCurrentListMapNoExtraKeys!70 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))) (array!3978 (store (arr!1896 (_values!2255 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (ValueCellFull!912 lt!35856)) (size!2137 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36908 () (_ BitVec 64))

(assert (=> b!79449 (= lt!36908 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36901 () (_ BitVec 64))

(assert (=> b!79449 (= lt!36901 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!79449 (= lt!36891 (addApplyDifferent!55 lt!36903 lt!36908 (minValue!2170 newMap!16) lt!36901))))

(assert (=> b!79449 (= (apply!79 (+!105 lt!36903 (tuple2!2173 lt!36908 (minValue!2170 newMap!16))) lt!36901) (apply!79 lt!36903 lt!36901))))

(declare-fun b!79450 () Bool)

(declare-fun res!41505 () Bool)

(assert (=> b!79450 (=> (not res!41505) (not e!51881))))

(declare-fun e!51878 () Bool)

(assert (=> b!79450 (= res!41505 e!51878)))

(declare-fun res!41500 () Bool)

(assert (=> b!79450 (=> res!41500 e!51878)))

(declare-fun e!51888 () Bool)

(assert (=> b!79450 (= res!41500 (not e!51888))))

(declare-fun res!41497 () Bool)

(assert (=> b!79450 (=> (not res!41497) (not e!51888))))

(assert (=> b!79450 (= res!41497 (bvslt #b00000000000000000000000000000000 (size!2136 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))))

(declare-fun b!79451 () Bool)

(assert (=> b!79451 (= e!51878 e!51890)))

(declare-fun res!41504 () Bool)

(assert (=> b!79451 (=> (not res!41504) (not e!51890))))

(assert (=> b!79451 (= res!41504 (contains!742 lt!36902 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!79451 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16))))))))

(declare-fun b!79452 () Bool)

(assert (=> b!79452 (= e!51880 (= (apply!79 lt!36902 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(declare-fun b!79453 () Bool)

(assert (=> b!79453 (= e!51888 (validKeyInArray!0 (select (arr!1895 (array!3976 (store (arr!1895 (_keys!3932 newMap!16)) (ite c!11978 (index!3097 lt!36128) (index!3094 lt!36128)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) (size!2136 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!79454 () Bool)

(assert (=> b!79454 (= e!51885 (+!105 call!7346 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!19121 c!12320) b!79454))

(assert (= (and d!19121 (not c!12320)) b!79443))

(assert (= (and b!79443 c!12324) b!79436))

(assert (= (and b!79443 (not c!12324)) b!79437))

(assert (= (and b!79437 c!12321) b!79442))

(assert (= (and b!79437 (not c!12321)) b!79435))

(assert (= (or b!79442 b!79435) bm!7339))

(assert (= (or b!79436 bm!7339) bm!7343))

(assert (= (or b!79436 b!79442) bm!7342))

(assert (= (or b!79454 bm!7343) bm!7341))

(assert (= (or b!79454 bm!7342) bm!7337))

(assert (= (and d!19121 res!41498) b!79439))

(assert (= (and d!19121 c!12319) b!79449))

(assert (= (and d!19121 (not c!12319)) b!79445))

(assert (= (and d!19121 res!41503) b!79450))

(assert (= (and b!79450 res!41497) b!79453))

(assert (= (and b!79450 (not res!41500)) b!79451))

(assert (= (and b!79451 res!41504) b!79448))

(assert (= (and b!79450 res!41505) b!79444))

(assert (= (and b!79444 c!12323) b!79446))

(assert (= (and b!79444 (not c!12323)) b!79440))

(assert (= (and b!79446 res!41499) b!79452))

(assert (= (or b!79446 b!79440) bm!7340))

(assert (= (and b!79444 res!41502) b!79441))

(assert (= (and b!79441 c!12322) b!79447))

(assert (= (and b!79441 (not c!12322)) b!79438))

(assert (= (and b!79447 res!41501) b!79434))

(assert (= (or b!79447 b!79438) bm!7338))

(declare-fun b_lambda!3549 () Bool)

(assert (=> (not b_lambda!3549) (not b!79448)))

(assert (=> b!79448 t!5161))

(declare-fun b_and!4883 () Bool)

(assert (= b_and!4879 (and (=> t!5161 result!2825) b_and!4883)))

(assert (=> b!79448 t!5163))

(declare-fun b_and!4885 () Bool)

(assert (= b_and!4881 (and (=> t!5163 result!2827) b_and!4885)))

(declare-fun m!80511 () Bool)

(assert (=> b!79452 m!80511))

(declare-fun m!80513 () Bool)

(assert (=> bm!7340 m!80513))

(declare-fun m!80515 () Bool)

(assert (=> bm!7338 m!80515))

(declare-fun m!80517 () Bool)

(assert (=> b!79449 m!80517))

(declare-fun m!80519 () Bool)

(assert (=> b!79449 m!80519))

(declare-fun m!80521 () Bool)

(assert (=> b!79449 m!80521))

(declare-fun m!80523 () Bool)

(assert (=> b!79449 m!80523))

(declare-fun m!80525 () Bool)

(assert (=> b!79449 m!80525))

(declare-fun m!80527 () Bool)

(assert (=> b!79449 m!80527))

(declare-fun m!80529 () Bool)

(assert (=> b!79449 m!80529))

(assert (=> b!79449 m!80401))

(declare-fun m!80531 () Bool)

(assert (=> b!79449 m!80531))

(declare-fun m!80533 () Bool)

(assert (=> b!79449 m!80533))

(declare-fun m!80535 () Bool)

(assert (=> b!79449 m!80535))

(declare-fun m!80537 () Bool)

(assert (=> b!79449 m!80537))

(declare-fun m!80539 () Bool)

(assert (=> b!79449 m!80539))

(declare-fun m!80541 () Bool)

(assert (=> b!79449 m!80541))

(assert (=> b!79449 m!80535))

(assert (=> b!79449 m!80521))

(declare-fun m!80543 () Bool)

(assert (=> b!79449 m!80543))

(declare-fun m!80545 () Bool)

(assert (=> b!79449 m!80545))

(declare-fun m!80547 () Bool)

(assert (=> b!79449 m!80547))

(assert (=> b!79449 m!80517))

(assert (=> b!79449 m!80525))

(assert (=> b!79448 m!80401))

(declare-fun m!80549 () Bool)

(assert (=> b!79448 m!80549))

(assert (=> b!79448 m!80401))

(declare-fun m!80551 () Bool)

(assert (=> b!79448 m!80551))

(assert (=> b!79448 m!78533))

(declare-fun m!80553 () Bool)

(assert (=> b!79448 m!80553))

(assert (=> b!79448 m!78533))

(assert (=> b!79448 m!80551))

(assert (=> b!79439 m!80401))

(assert (=> b!79439 m!80401))

(assert (=> b!79439 m!80403))

(declare-fun m!80555 () Bool)

(assert (=> b!79434 m!80555))

(assert (=> bm!7341 m!80545))

(declare-fun m!80557 () Bool)

(assert (=> bm!7337 m!80557))

(assert (=> b!79451 m!80401))

(assert (=> b!79451 m!80401))

(declare-fun m!80559 () Bool)

(assert (=> b!79451 m!80559))

(declare-fun m!80561 () Bool)

(assert (=> b!79454 m!80561))

(assert (=> d!19121 m!78411))

(assert (=> b!79453 m!80401))

(assert (=> b!79453 m!80401))

(assert (=> b!79453 m!80403))

(assert (=> d!18687 d!19121))

(declare-fun b!79458 () Bool)

(declare-fun e!51892 () Option!143)

(assert (=> b!79458 (= e!51892 None!141)))

(declare-fun c!12325 () Bool)

(declare-fun d!19123 () Bool)

(assert (=> d!19123 (= c!12325 (and ((_ is Cons!1503) (toList!739 lt!36167)) (= (_1!1097 (h!2091 (toList!739 lt!36167))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!51891 () Option!143)

(assert (=> d!19123 (= (getValueByKey!137 (toList!739 lt!36167) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) e!51891)))

(declare-fun b!79457 () Bool)

(assert (=> b!79457 (= e!51892 (getValueByKey!137 (t!5153 (toList!739 lt!36167)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79455 () Bool)

(assert (=> b!79455 (= e!51891 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36167)))))))

(declare-fun b!79456 () Bool)

(assert (=> b!79456 (= e!51891 e!51892)))

(declare-fun c!12326 () Bool)

(assert (=> b!79456 (= c!12326 (and ((_ is Cons!1503) (toList!739 lt!36167)) (not (= (_1!1097 (h!2091 (toList!739 lt!36167))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19123 c!12325) b!79455))

(assert (= (and d!19123 (not c!12325)) b!79456))

(assert (= (and b!79456 c!12326) b!79457))

(assert (= (and b!79456 (not c!12326)) b!79458))

(declare-fun m!80563 () Bool)

(assert (=> b!79457 m!80563))

(assert (=> b!78238 d!19123))

(declare-fun d!19125 () Bool)

(declare-fun res!41506 () Bool)

(declare-fun e!51893 () Bool)

(assert (=> d!19125 (=> res!41506 e!51893)))

(assert (=> d!19125 (= res!41506 (or ((_ is Nil!1504) lt!36431) ((_ is Nil!1504) (t!5153 lt!36431))))))

(assert (=> d!19125 (= (isStrictlySorted!295 lt!36431) e!51893)))

(declare-fun b!79459 () Bool)

(declare-fun e!51894 () Bool)

(assert (=> b!79459 (= e!51893 e!51894)))

(declare-fun res!41507 () Bool)

(assert (=> b!79459 (=> (not res!41507) (not e!51894))))

(assert (=> b!79459 (= res!41507 (bvslt (_1!1097 (h!2091 lt!36431)) (_1!1097 (h!2091 (t!5153 lt!36431)))))))

(declare-fun b!79460 () Bool)

(assert (=> b!79460 (= e!51894 (isStrictlySorted!295 (t!5153 lt!36431)))))

(assert (= (and d!19125 (not res!41506)) b!79459))

(assert (= (and b!79459 res!41507) b!79460))

(declare-fun m!80565 () Bool)

(assert (=> b!79460 m!80565))

(assert (=> d!18685 d!19125))

(declare-fun d!19127 () Bool)

(declare-fun res!41508 () Bool)

(declare-fun e!51895 () Bool)

(assert (=> d!19127 (=> res!41508 e!51895)))

(assert (=> d!19127 (= res!41508 (or ((_ is Nil!1504) (toList!739 lt!35853)) ((_ is Nil!1504) (t!5153 (toList!739 lt!35853)))))))

(assert (=> d!19127 (= (isStrictlySorted!295 (toList!739 lt!35853)) e!51895)))

(declare-fun b!79461 () Bool)

(declare-fun e!51896 () Bool)

(assert (=> b!79461 (= e!51895 e!51896)))

(declare-fun res!41509 () Bool)

(assert (=> b!79461 (=> (not res!41509) (not e!51896))))

(assert (=> b!79461 (= res!41509 (bvslt (_1!1097 (h!2091 (toList!739 lt!35853))) (_1!1097 (h!2091 (t!5153 (toList!739 lt!35853))))))))

(declare-fun b!79462 () Bool)

(assert (=> b!79462 (= e!51896 (isStrictlySorted!295 (t!5153 (toList!739 lt!35853))))))

(assert (= (and d!19127 (not res!41508)) b!79461))

(assert (= (and b!79461 res!41509) b!79462))

(declare-fun m!80567 () Bool)

(assert (=> b!79462 m!80567))

(assert (=> d!18685 d!19127))

(declare-fun d!19129 () Bool)

(declare-fun res!41510 () Bool)

(declare-fun e!51897 () Bool)

(assert (=> d!19129 (=> res!41510 e!51897)))

(assert (=> d!19129 (= res!41510 (and ((_ is Cons!1503) (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (= (_1!1097 (h!2091 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(assert (=> d!19129 (= (containsKey!141 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) e!51897)))

(declare-fun b!79463 () Bool)

(declare-fun e!51898 () Bool)

(assert (=> b!79463 (= e!51897 e!51898)))

(declare-fun res!41511 () Bool)

(assert (=> b!79463 (=> (not res!41511) (not e!51898))))

(assert (=> b!79463 (= res!41511 (and (or (not ((_ is Cons!1503) (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (bvsle (_1!1097 (h!2091 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))) ((_ is Cons!1503) (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (bvslt (_1!1097 (h!2091 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(declare-fun b!79464 () Bool)

(assert (=> b!79464 (= e!51898 (containsKey!141 (t!5153 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (= (and d!19129 (not res!41510)) b!79463))

(assert (= (and b!79463 res!41511) b!79464))

(assert (=> b!79464 m!77965))

(declare-fun m!80569 () Bool)

(assert (=> b!79464 m!80569))

(assert (=> d!18643 d!19129))

(declare-fun b!79468 () Bool)

(declare-fun e!51900 () Option!143)

(assert (=> b!79468 (= e!51900 None!141)))

(declare-fun c!12327 () Bool)

(declare-fun d!19131 () Bool)

(assert (=> d!19131 (= c!12327 (and ((_ is Cons!1503) (toList!739 lt!36524)) (= (_1!1097 (h!2091 (toList!739 lt!36524))) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun e!51899 () Option!143)

(assert (=> d!19131 (= (getValueByKey!137 (toList!739 lt!36524) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) e!51899)))

(declare-fun b!79467 () Bool)

(assert (=> b!79467 (= e!51900 (getValueByKey!137 (t!5153 (toList!739 lt!36524)) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79465 () Bool)

(assert (=> b!79465 (= e!51899 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36524)))))))

(declare-fun b!79466 () Bool)

(assert (=> b!79466 (= e!51899 e!51900)))

(declare-fun c!12328 () Bool)

(assert (=> b!79466 (= c!12328 (and ((_ is Cons!1503) (toList!739 lt!36524)) (not (= (_1!1097 (h!2091 (toList!739 lt!36524))) (_1!1097 (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))))

(assert (= (and d!19131 c!12327) b!79465))

(assert (= (and d!19131 (not c!12327)) b!79466))

(assert (= (and b!79466 c!12328) b!79467))

(assert (= (and b!79466 (not c!12328)) b!79468))

(declare-fun m!80571 () Bool)

(assert (=> b!79467 m!80571))

(assert (=> b!78729 d!19131))

(declare-fun b!79472 () Bool)

(declare-fun e!51902 () Option!143)

(assert (=> b!79472 (= e!51902 None!141)))

(declare-fun d!19133 () Bool)

(declare-fun c!12329 () Bool)

(assert (=> d!19133 (= c!12329 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36033))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36033)))) (_1!1097 lt!35864))))))

(declare-fun e!51901 () Option!143)

(assert (=> d!19133 (= (getValueByKey!137 (t!5153 (toList!739 lt!36033)) (_1!1097 lt!35864)) e!51901)))

(declare-fun b!79471 () Bool)

(assert (=> b!79471 (= e!51902 (getValueByKey!137 (t!5153 (t!5153 (toList!739 lt!36033))) (_1!1097 lt!35864)))))

(declare-fun b!79469 () Bool)

(assert (=> b!79469 (= e!51901 (Some!142 (_2!1097 (h!2091 (t!5153 (toList!739 lt!36033))))))))

(declare-fun b!79470 () Bool)

(assert (=> b!79470 (= e!51901 e!51902)))

(declare-fun c!12330 () Bool)

(assert (=> b!79470 (= c!12330 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36033))) (not (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36033)))) (_1!1097 lt!35864)))))))

(assert (= (and d!19133 c!12329) b!79469))

(assert (= (and d!19133 (not c!12329)) b!79470))

(assert (= (and b!79470 c!12330) b!79471))

(assert (= (and b!79470 (not c!12330)) b!79472))

(declare-fun m!80573 () Bool)

(assert (=> b!79471 m!80573))

(assert (=> b!78542 d!19133))

(declare-fun d!19135 () Bool)

(assert (=> d!19135 (= (get!1176 (getValueByKey!137 (toList!739 lt!35987) lt!35988)) (v!2596 (getValueByKey!137 (toList!739 lt!35987) lt!35988)))))

(assert (=> d!18581 d!19135))

(declare-fun b!79476 () Bool)

(declare-fun e!51904 () Option!143)

(assert (=> b!79476 (= e!51904 None!141)))

(declare-fun d!19137 () Bool)

(declare-fun c!12331 () Bool)

(assert (=> d!19137 (= c!12331 (and ((_ is Cons!1503) (toList!739 lt!35987)) (= (_1!1097 (h!2091 (toList!739 lt!35987))) lt!35988)))))

(declare-fun e!51903 () Option!143)

(assert (=> d!19137 (= (getValueByKey!137 (toList!739 lt!35987) lt!35988) e!51903)))

(declare-fun b!79475 () Bool)

(assert (=> b!79475 (= e!51904 (getValueByKey!137 (t!5153 (toList!739 lt!35987)) lt!35988))))

(declare-fun b!79473 () Bool)

(assert (=> b!79473 (= e!51903 (Some!142 (_2!1097 (h!2091 (toList!739 lt!35987)))))))

(declare-fun b!79474 () Bool)

(assert (=> b!79474 (= e!51903 e!51904)))

(declare-fun c!12332 () Bool)

(assert (=> b!79474 (= c!12332 (and ((_ is Cons!1503) (toList!739 lt!35987)) (not (= (_1!1097 (h!2091 (toList!739 lt!35987))) lt!35988))))))

(assert (= (and d!19137 c!12331) b!79473))

(assert (= (and d!19137 (not c!12331)) b!79474))

(assert (= (and b!79474 c!12332) b!79475))

(assert (= (and b!79474 (not c!12332)) b!79476))

(declare-fun m!80575 () Bool)

(assert (=> b!79475 m!80575))

(assert (=> d!18581 d!19137))

(declare-fun c!12336 () Bool)

(declare-fun c!12335 () Bool)

(declare-fun e!51905 () List!1507)

(declare-fun b!79477 () Bool)

(assert (=> b!79477 (= e!51905 (ite c!12336 (t!5153 (t!5153 (toList!739 lt!35868))) (ite c!12335 (Cons!1503 (h!2091 (t!5153 (toList!739 lt!35868))) (t!5153 (t!5153 (toList!739 lt!35868)))) Nil!1504)))))

(declare-fun b!79478 () Bool)

(declare-fun e!51909 () List!1507)

(declare-fun call!7349 () List!1507)

(assert (=> b!79478 (= e!51909 call!7349)))

(declare-fun bm!7344 () Bool)

(declare-fun call!7347 () List!1507)

(declare-fun call!7348 () List!1507)

(assert (=> bm!7344 (= call!7347 call!7348)))

(declare-fun b!79479 () Bool)

(assert (=> b!79479 (= c!12335 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35868))) (bvsgt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35868)))) (_1!1097 lt!35864))))))

(declare-fun e!51907 () List!1507)

(declare-fun e!51906 () List!1507)

(assert (=> b!79479 (= e!51907 e!51906)))

(declare-fun b!79480 () Bool)

(assert (=> b!79480 (= e!51905 (insertStrictlySorted!57 (t!5153 (t!5153 (toList!739 lt!35868))) (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(declare-fun b!79481 () Bool)

(declare-fun res!41513 () Bool)

(declare-fun e!51908 () Bool)

(assert (=> b!79481 (=> (not res!41513) (not e!51908))))

(declare-fun lt!36910 () List!1507)

(assert (=> b!79481 (= res!41513 (containsKey!141 lt!36910 (_1!1097 lt!35864)))))

(declare-fun c!12333 () Bool)

(declare-fun bm!7345 () Bool)

(assert (=> bm!7345 (= call!7349 ($colon$colon!69 e!51905 (ite c!12333 (h!2091 (t!5153 (toList!739 lt!35868))) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864)))))))

(declare-fun c!12334 () Bool)

(assert (=> bm!7345 (= c!12334 c!12333)))

(declare-fun b!79482 () Bool)

(assert (=> b!79482 (= e!51909 e!51907)))

(assert (=> b!79482 (= c!12336 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35868))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!35868)))) (_1!1097 lt!35864))))))

(declare-fun b!79484 () Bool)

(assert (=> b!79484 (= e!51907 call!7348)))

(declare-fun b!79485 () Bool)

(assert (=> b!79485 (= e!51908 (contains!743 lt!36910 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!79483 () Bool)

(assert (=> b!79483 (= e!51906 call!7347)))

(declare-fun d!19139 () Bool)

(assert (=> d!19139 e!51908))

(declare-fun res!41512 () Bool)

(assert (=> d!19139 (=> (not res!41512) (not e!51908))))

(assert (=> d!19139 (= res!41512 (isStrictlySorted!295 lt!36910))))

(assert (=> d!19139 (= lt!36910 e!51909)))

(assert (=> d!19139 (= c!12333 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35868))) (bvslt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35868)))) (_1!1097 lt!35864))))))

(assert (=> d!19139 (isStrictlySorted!295 (t!5153 (toList!739 lt!35868)))))

(assert (=> d!19139 (= (insertStrictlySorted!57 (t!5153 (toList!739 lt!35868)) (_1!1097 lt!35864) (_2!1097 lt!35864)) lt!36910)))

(declare-fun bm!7346 () Bool)

(assert (=> bm!7346 (= call!7348 call!7349)))

(declare-fun b!79486 () Bool)

(assert (=> b!79486 (= e!51906 call!7347)))

(assert (= (and d!19139 c!12333) b!79478))

(assert (= (and d!19139 (not c!12333)) b!79482))

(assert (= (and b!79482 c!12336) b!79484))

(assert (= (and b!79482 (not c!12336)) b!79479))

(assert (= (and b!79479 c!12335) b!79483))

(assert (= (and b!79479 (not c!12335)) b!79486))

(assert (= (or b!79483 b!79486) bm!7344))

(assert (= (or b!79484 bm!7344) bm!7346))

(assert (= (or b!79478 bm!7346) bm!7345))

(assert (= (and bm!7345 c!12334) b!79480))

(assert (= (and bm!7345 (not c!12334)) b!79477))

(assert (= (and d!19139 res!41512) b!79481))

(assert (= (and b!79481 res!41513) b!79485))

(declare-fun m!80577 () Bool)

(assert (=> b!79485 m!80577))

(declare-fun m!80579 () Bool)

(assert (=> d!19139 m!80579))

(assert (=> d!19139 m!79825))

(declare-fun m!80581 () Bool)

(assert (=> b!79480 m!80581))

(declare-fun m!80583 () Bool)

(assert (=> b!79481 m!80583))

(declare-fun m!80585 () Bool)

(assert (=> bm!7345 m!80585))

(assert (=> b!78650 d!19139))

(assert (=> b!78404 d!18895))

(assert (=> b!78404 d!18625))

(declare-fun d!19141 () Bool)

(assert (=> d!19141 (contains!742 (getCurrentListMap!433 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))

(declare-fun lt!36913 () Unit!2257)

(declare-fun choose!467 (array!3975 array!3977 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) (_ BitVec 32) Int) Unit!2257)

(assert (=> d!19141 (= lt!36913 (choose!467 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(assert (=> d!19141 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19141 (= (lemmaArrayContainsKeyThenInListMap!16 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36913)))

(declare-fun bs!3367 () Bool)

(assert (= bs!3367 d!19141))

(assert (=> bs!3367 m!78087))

(assert (=> bs!3367 m!78087))

(assert (=> bs!3367 m!77965))

(assert (=> bs!3367 m!78349))

(assert (=> bs!3367 m!77965))

(declare-fun m!80587 () Bool)

(assert (=> bs!3367 m!80587))

(assert (=> bs!3367 m!78411))

(assert (=> b!78713 d!19141))

(assert (=> b!78713 d!18643))

(assert (=> b!78713 d!18645))

(declare-fun c!12339 () Bool)

(declare-fun b!79487 () Bool)

(declare-fun c!12340 () Bool)

(declare-fun e!51910 () List!1507)

(assert (=> b!79487 (= e!51910 (ite c!12340 (t!5153 (t!5153 (toList!739 lt!35869))) (ite c!12339 (Cons!1503 (h!2091 (t!5153 (toList!739 lt!35869))) (t!5153 (t!5153 (toList!739 lt!35869)))) Nil!1504)))))

(declare-fun b!79488 () Bool)

(declare-fun e!51914 () List!1507)

(declare-fun call!7352 () List!1507)

(assert (=> b!79488 (= e!51914 call!7352)))

(declare-fun bm!7347 () Bool)

(declare-fun call!7350 () List!1507)

(declare-fun call!7351 () List!1507)

(assert (=> bm!7347 (= call!7350 call!7351)))

(declare-fun b!79489 () Bool)

(assert (=> b!79489 (= c!12339 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35869))) (bvsgt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35869)))) (_1!1097 lt!35864))))))

(declare-fun e!51912 () List!1507)

(declare-fun e!51911 () List!1507)

(assert (=> b!79489 (= e!51912 e!51911)))

(declare-fun b!79490 () Bool)

(assert (=> b!79490 (= e!51910 (insertStrictlySorted!57 (t!5153 (t!5153 (toList!739 lt!35869))) (_1!1097 lt!35864) (_2!1097 lt!35864)))))

(declare-fun b!79491 () Bool)

(declare-fun res!41515 () Bool)

(declare-fun e!51913 () Bool)

(assert (=> b!79491 (=> (not res!41515) (not e!51913))))

(declare-fun lt!36914 () List!1507)

(assert (=> b!79491 (= res!41515 (containsKey!141 lt!36914 (_1!1097 lt!35864)))))

(declare-fun bm!7348 () Bool)

(declare-fun c!12337 () Bool)

(assert (=> bm!7348 (= call!7352 ($colon$colon!69 e!51910 (ite c!12337 (h!2091 (t!5153 (toList!739 lt!35869))) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864)))))))

(declare-fun c!12338 () Bool)

(assert (=> bm!7348 (= c!12338 c!12337)))

(declare-fun b!79492 () Bool)

(assert (=> b!79492 (= e!51914 e!51912)))

(assert (=> b!79492 (= c!12340 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35869))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!35869)))) (_1!1097 lt!35864))))))

(declare-fun b!79494 () Bool)

(assert (=> b!79494 (= e!51912 call!7351)))

(declare-fun b!79495 () Bool)

(assert (=> b!79495 (= e!51913 (contains!743 lt!36914 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!79493 () Bool)

(assert (=> b!79493 (= e!51911 call!7350)))

(declare-fun d!19143 () Bool)

(assert (=> d!19143 e!51913))

(declare-fun res!41514 () Bool)

(assert (=> d!19143 (=> (not res!41514) (not e!51913))))

(assert (=> d!19143 (= res!41514 (isStrictlySorted!295 lt!36914))))

(assert (=> d!19143 (= lt!36914 e!51914)))

(assert (=> d!19143 (= c!12337 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35869))) (bvslt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35869)))) (_1!1097 lt!35864))))))

(assert (=> d!19143 (isStrictlySorted!295 (t!5153 (toList!739 lt!35869)))))

(assert (=> d!19143 (= (insertStrictlySorted!57 (t!5153 (toList!739 lt!35869)) (_1!1097 lt!35864) (_2!1097 lt!35864)) lt!36914)))

(declare-fun bm!7349 () Bool)

(assert (=> bm!7349 (= call!7351 call!7352)))

(declare-fun b!79496 () Bool)

(assert (=> b!79496 (= e!51911 call!7350)))

(assert (= (and d!19143 c!12337) b!79488))

(assert (= (and d!19143 (not c!12337)) b!79492))

(assert (= (and b!79492 c!12340) b!79494))

(assert (= (and b!79492 (not c!12340)) b!79489))

(assert (= (and b!79489 c!12339) b!79493))

(assert (= (and b!79489 (not c!12339)) b!79496))

(assert (= (or b!79493 b!79496) bm!7347))

(assert (= (or b!79494 bm!7347) bm!7349))

(assert (= (or b!79488 bm!7349) bm!7348))

(assert (= (and bm!7348 c!12338) b!79490))

(assert (= (and bm!7348 (not c!12338)) b!79487))

(assert (= (and d!19143 res!41514) b!79491))

(assert (= (and b!79491 res!41515) b!79495))

(declare-fun m!80589 () Bool)

(assert (=> b!79495 m!80589))

(declare-fun m!80591 () Bool)

(assert (=> d!19143 m!80591))

(assert (=> d!19143 m!79577))

(declare-fun m!80593 () Bool)

(assert (=> b!79490 m!80593))

(declare-fun m!80595 () Bool)

(assert (=> b!79491 m!80595))

(declare-fun m!80597 () Bool)

(assert (=> bm!7348 m!80597))

(assert (=> b!78750 d!19143))

(assert (=> d!18515 d!18765))

(assert (=> d!18505 d!18765))

(assert (=> b!78291 d!18861))

(declare-fun d!19145 () Bool)

(declare-fun res!41516 () Bool)

(declare-fun e!51915 () Bool)

(assert (=> d!19145 (=> res!41516 e!51915)))

(assert (=> d!19145 (= res!41516 (and ((_ is Cons!1503) (toList!739 lt!36004)) (= (_1!1097 (h!2091 (toList!739 lt!36004))) (_1!1097 lt!35864))))))

(assert (=> d!19145 (= (containsKey!141 (toList!739 lt!36004) (_1!1097 lt!35864)) e!51915)))

(declare-fun b!79497 () Bool)

(declare-fun e!51916 () Bool)

(assert (=> b!79497 (= e!51915 e!51916)))

(declare-fun res!41517 () Bool)

(assert (=> b!79497 (=> (not res!41517) (not e!51916))))

(assert (=> b!79497 (= res!41517 (and (or (not ((_ is Cons!1503) (toList!739 lt!36004))) (bvsle (_1!1097 (h!2091 (toList!739 lt!36004))) (_1!1097 lt!35864))) ((_ is Cons!1503) (toList!739 lt!36004)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36004))) (_1!1097 lt!35864))))))

(declare-fun b!79498 () Bool)

(assert (=> b!79498 (= e!51916 (containsKey!141 (t!5153 (toList!739 lt!36004)) (_1!1097 lt!35864)))))

(assert (= (and d!19145 (not res!41516)) b!79497))

(assert (= (and b!79497 res!41517) b!79498))

(declare-fun m!80599 () Bool)

(assert (=> b!79498 m!80599))

(assert (=> d!18701 d!19145))

(declare-fun b!79502 () Bool)

(declare-fun e!51918 () Option!143)

(assert (=> b!79502 (= e!51918 None!141)))

(declare-fun d!19147 () Bool)

(declare-fun c!12341 () Bool)

(assert (=> d!19147 (= c!12341 (and ((_ is Cons!1503) (t!5153 lt!36028)) (= (_1!1097 (h!2091 (t!5153 lt!36028))) (_1!1097 lt!35861))))))

(declare-fun e!51917 () Option!143)

(assert (=> d!19147 (= (getValueByKey!137 (t!5153 lt!36028) (_1!1097 lt!35861)) e!51917)))

(declare-fun b!79501 () Bool)

(assert (=> b!79501 (= e!51918 (getValueByKey!137 (t!5153 (t!5153 lt!36028)) (_1!1097 lt!35861)))))

(declare-fun b!79499 () Bool)

(assert (=> b!79499 (= e!51917 (Some!142 (_2!1097 (h!2091 (t!5153 lt!36028)))))))

(declare-fun b!79500 () Bool)

(assert (=> b!79500 (= e!51917 e!51918)))

(declare-fun c!12342 () Bool)

(assert (=> b!79500 (= c!12342 (and ((_ is Cons!1503) (t!5153 lt!36028)) (not (= (_1!1097 (h!2091 (t!5153 lt!36028))) (_1!1097 lt!35861)))))))

(assert (= (and d!19147 c!12341) b!79499))

(assert (= (and d!19147 (not c!12341)) b!79500))

(assert (= (and b!79500 c!12342) b!79501))

(assert (= (and b!79500 (not c!12342)) b!79502))

(declare-fun m!80601 () Bool)

(assert (=> b!79501 m!80601))

(assert (=> b!78349 d!19147))

(declare-fun b!79506 () Bool)

(declare-fun e!51920 () Option!143)

(assert (=> b!79506 (= e!51920 None!141)))

(declare-fun d!19149 () Bool)

(declare-fun c!12343 () Bool)

(assert (=> d!19149 (= c!12343 (and ((_ is Cons!1503) (toList!739 lt!36155)) (= (_1!1097 (h!2091 (toList!739 lt!36155))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51919 () Option!143)

(assert (=> d!19149 (= (getValueByKey!137 (toList!739 lt!36155) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!51919)))

(declare-fun b!79505 () Bool)

(assert (=> b!79505 (= e!51920 (getValueByKey!137 (t!5153 (toList!739 lt!36155)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79503 () Bool)

(assert (=> b!79503 (= e!51919 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36155)))))))

(declare-fun b!79504 () Bool)

(assert (=> b!79504 (= e!51919 e!51920)))

(declare-fun c!12344 () Bool)

(assert (=> b!79504 (= c!12344 (and ((_ is Cons!1503) (toList!739 lt!36155)) (not (= (_1!1097 (h!2091 (toList!739 lt!36155))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19149 c!12343) b!79503))

(assert (= (and d!19149 (not c!12343)) b!79504))

(assert (= (and b!79504 c!12344) b!79505))

(assert (= (and b!79504 (not c!12344)) b!79506))

(declare-fun m!80603 () Bool)

(assert (=> b!79505 m!80603))

(assert (=> b!78232 d!19149))

(declare-fun d!19151 () Bool)

(assert (=> d!19151 (= (get!1176 (getValueByKey!137 (toList!739 lt!35984) lt!35982)) (v!2596 (getValueByKey!137 (toList!739 lt!35984) lt!35982)))))

(assert (=> d!18579 d!19151))

(declare-fun b!79510 () Bool)

(declare-fun e!51922 () Option!143)

(assert (=> b!79510 (= e!51922 None!141)))

(declare-fun d!19153 () Bool)

(declare-fun c!12345 () Bool)

(assert (=> d!19153 (= c!12345 (and ((_ is Cons!1503) (toList!739 lt!35984)) (= (_1!1097 (h!2091 (toList!739 lt!35984))) lt!35982)))))

(declare-fun e!51921 () Option!143)

(assert (=> d!19153 (= (getValueByKey!137 (toList!739 lt!35984) lt!35982) e!51921)))

(declare-fun b!79509 () Bool)

(assert (=> b!79509 (= e!51922 (getValueByKey!137 (t!5153 (toList!739 lt!35984)) lt!35982))))

(declare-fun b!79507 () Bool)

(assert (=> b!79507 (= e!51921 (Some!142 (_2!1097 (h!2091 (toList!739 lt!35984)))))))

(declare-fun b!79508 () Bool)

(assert (=> b!79508 (= e!51921 e!51922)))

(declare-fun c!12346 () Bool)

(assert (=> b!79508 (= c!12346 (and ((_ is Cons!1503) (toList!739 lt!35984)) (not (= (_1!1097 (h!2091 (toList!739 lt!35984))) lt!35982))))))

(assert (= (and d!19153 c!12345) b!79507))

(assert (= (and d!19153 (not c!12345)) b!79508))

(assert (= (and b!79508 c!12346) b!79509))

(assert (= (and b!79508 (not c!12346)) b!79510))

(declare-fun m!80605 () Bool)

(assert (=> b!79509 m!80605))

(assert (=> d!18579 d!19153))

(declare-fun d!19155 () Bool)

(declare-fun res!41518 () Bool)

(declare-fun e!51923 () Bool)

(assert (=> d!19155 (=> res!41518 e!51923)))

(assert (=> d!19155 (= res!41518 (and ((_ is Cons!1503) lt!35999) (= (_1!1097 (h!2091 lt!35999)) (_1!1097 lt!35870))))))

(assert (=> d!19155 (= (containsKey!141 lt!35999 (_1!1097 lt!35870)) e!51923)))

(declare-fun b!79511 () Bool)

(declare-fun e!51924 () Bool)

(assert (=> b!79511 (= e!51923 e!51924)))

(declare-fun res!41519 () Bool)

(assert (=> b!79511 (=> (not res!41519) (not e!51924))))

(assert (=> b!79511 (= res!41519 (and (or (not ((_ is Cons!1503) lt!35999)) (bvsle (_1!1097 (h!2091 lt!35999)) (_1!1097 lt!35870))) ((_ is Cons!1503) lt!35999) (bvslt (_1!1097 (h!2091 lt!35999)) (_1!1097 lt!35870))))))

(declare-fun b!79512 () Bool)

(assert (=> b!79512 (= e!51924 (containsKey!141 (t!5153 lt!35999) (_1!1097 lt!35870)))))

(assert (= (and d!19155 (not res!41518)) b!79511))

(assert (= (and b!79511 res!41519) b!79512))

(declare-fun m!80607 () Bool)

(assert (=> b!79512 m!80607))

(assert (=> b!78556 d!19155))

(declare-fun d!19157 () Bool)

(declare-fun res!41520 () Bool)

(declare-fun e!51925 () Bool)

(assert (=> d!19157 (=> res!41520 e!51925)))

(assert (=> d!19157 (= res!41520 (and ((_ is Cons!1503) lt!36032) (= (_1!1097 (h!2091 lt!36032)) (_1!1097 lt!35864))))))

(assert (=> d!19157 (= (containsKey!141 lt!36032 (_1!1097 lt!35864)) e!51925)))

(declare-fun b!79513 () Bool)

(declare-fun e!51926 () Bool)

(assert (=> b!79513 (= e!51925 e!51926)))

(declare-fun res!41521 () Bool)

(assert (=> b!79513 (=> (not res!41521) (not e!51926))))

(assert (=> b!79513 (= res!41521 (and (or (not ((_ is Cons!1503) lt!36032)) (bvsle (_1!1097 (h!2091 lt!36032)) (_1!1097 lt!35864))) ((_ is Cons!1503) lt!36032) (bvslt (_1!1097 (h!2091 lt!36032)) (_1!1097 lt!35864))))))

(declare-fun b!79514 () Bool)

(assert (=> b!79514 (= e!51926 (containsKey!141 (t!5153 lt!36032) (_1!1097 lt!35864)))))

(assert (= (and d!19157 (not res!41520)) b!79513))

(assert (= (and b!79513 res!41521) b!79514))

(declare-fun m!80609 () Bool)

(assert (=> b!79514 m!80609))

(assert (=> b!78409 d!19157))

(declare-fun b!79518 () Bool)

(declare-fun e!51927 () Bool)

(assert (=> b!79518 (= e!51927 (and (bvsge (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!415 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!79516 () Bool)

(declare-fun res!41523 () Bool)

(assert (=> b!79516 (=> (not res!41523) (not e!51927))))

(assert (=> b!79516 (= res!41523 (bvsge (size!2140 (v!2592 (underlying!278 thiss!992))) (_size!415 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun d!19159 () Bool)

(declare-fun res!41522 () Bool)

(assert (=> d!19159 (=> (not res!41522) (not e!51927))))

(assert (=> d!19159 (= res!41522 (validMask!0 (mask!6268 (v!2592 (underlying!278 thiss!992)))))))

(assert (=> d!19159 (= (simpleValid!55 (v!2592 (underlying!278 thiss!992))) e!51927)))

(declare-fun b!79515 () Bool)

(declare-fun res!41525 () Bool)

(assert (=> b!79515 (=> (not res!41525) (not e!51927))))

(assert (=> b!79515 (= res!41525 (and (= (size!2137 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000001)) (= (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (size!2137 (_values!2255 (v!2592 (underlying!278 thiss!992))))) (bvsge (_size!415 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!415 (v!2592 (underlying!278 thiss!992))) (bvadd (mask!6268 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!79517 () Bool)

(declare-fun res!41524 () Bool)

(assert (=> b!79517 (=> (not res!41524) (not e!51927))))

(assert (=> b!79517 (= res!41524 (= (size!2140 (v!2592 (underlying!278 thiss!992))) (bvadd (_size!415 (v!2592 (underlying!278 thiss!992))) (bvsdiv (bvadd (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!19159 res!41522) b!79515))

(assert (= (and b!79515 res!41525) b!79516))

(assert (= (and b!79516 res!41523) b!79517))

(assert (= (and b!79517 res!41524) b!79518))

(declare-fun m!80611 () Bool)

(assert (=> b!79516 m!80611))

(assert (=> d!19159 m!77987))

(assert (=> b!79517 m!80611))

(assert (=> d!18503 d!19159))

(assert (=> b!78551 d!18879))

(assert (=> b!78551 d!18541))

(declare-fun b!79522 () Bool)

(declare-fun e!51929 () Option!143)

(assert (=> b!79522 (= e!51929 None!141)))

(declare-fun c!12347 () Bool)

(declare-fun d!19161 () Bool)

(assert (=> d!19161 (= c!12347 (and ((_ is Cons!1503) (toList!739 lt!36544)) (= (_1!1097 (h!2091 (toList!739 lt!36544))) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun e!51928 () Option!143)

(assert (=> d!19161 (= (getValueByKey!137 (toList!739 lt!36544) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) e!51928)))

(declare-fun b!79521 () Bool)

(assert (=> b!79521 (= e!51929 (getValueByKey!137 (t!5153 (toList!739 lt!36544)) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79519 () Bool)

(assert (=> b!79519 (= e!51928 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36544)))))))

(declare-fun b!79520 () Bool)

(assert (=> b!79520 (= e!51928 e!51929)))

(declare-fun c!12348 () Bool)

(assert (=> b!79520 (= c!12348 (and ((_ is Cons!1503) (toList!739 lt!36544)) (not (= (_1!1097 (h!2091 (toList!739 lt!36544))) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))))

(assert (= (and d!19161 c!12347) b!79519))

(assert (= (and d!19161 (not c!12347)) b!79520))

(assert (= (and b!79520 c!12348) b!79521))

(assert (= (and b!79520 (not c!12348)) b!79522))

(declare-fun m!80613 () Bool)

(assert (=> b!79521 m!80613))

(assert (=> b!78778 d!19161))

(declare-fun d!19163 () Bool)

(assert (=> d!19163 (isDefined!90 (getValueByKey!137 (toList!739 lt!36029) (_1!1097 lt!35861)))))

(declare-fun lt!36915 () Unit!2257)

(assert (=> d!19163 (= lt!36915 (choose!465 (toList!739 lt!36029) (_1!1097 lt!35861)))))

(declare-fun e!51930 () Bool)

(assert (=> d!19163 e!51930))

(declare-fun res!41526 () Bool)

(assert (=> d!19163 (=> (not res!41526) (not e!51930))))

(assert (=> d!19163 (= res!41526 (isStrictlySorted!295 (toList!739 lt!36029)))))

(assert (=> d!19163 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36029) (_1!1097 lt!35861)) lt!36915)))

(declare-fun b!79523 () Bool)

(assert (=> b!79523 (= e!51930 (containsKey!141 (toList!739 lt!36029) (_1!1097 lt!35861)))))

(assert (= (and d!19163 res!41526) b!79523))

(assert (=> d!19163 m!78197))

(assert (=> d!19163 m!78197))

(assert (=> d!19163 m!78595))

(declare-fun m!80615 () Bool)

(assert (=> d!19163 m!80615))

(declare-fun m!80617 () Bool)

(assert (=> d!19163 m!80617))

(assert (=> b!79523 m!78591))

(assert (=> b!78344 d!19163))

(declare-fun d!19165 () Bool)

(assert (=> d!19165 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!36029) (_1!1097 lt!35861))) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!36029) (_1!1097 lt!35861)))))))

(declare-fun bs!3368 () Bool)

(assert (= bs!3368 d!19165))

(assert (=> bs!3368 m!78197))

(declare-fun m!80619 () Bool)

(assert (=> bs!3368 m!80619))

(assert (=> b!78344 d!19165))

(assert (=> b!78344 d!18517))

(declare-fun b!79524 () Bool)

(declare-fun e!51937 () ListLongMap!1447)

(assert (=> b!79524 (= e!51937 (ListLongMap!1448 Nil!1504))))

(declare-fun lt!36916 () ListLongMap!1447)

(declare-fun b!79525 () Bool)

(declare-fun e!51935 () Bool)

(assert (=> b!79525 (= e!51935 (= lt!36916 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!79526 () Bool)

(assert (=> b!79526 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> b!79526 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2137 (_values!2255 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!51932 () Bool)

(assert (=> b!79526 (= e!51932 (= (apply!79 lt!36916 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79527 () Bool)

(declare-fun e!51936 () Bool)

(assert (=> b!79527 (= e!51936 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!79527 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!79529 () Bool)

(declare-fun e!51934 () ListLongMap!1447)

(assert (=> b!79529 (= e!51937 e!51934)))

(declare-fun c!12350 () Bool)

(assert (=> b!79529 (= c!12350 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!79530 () Bool)

(declare-fun e!51931 () Bool)

(assert (=> b!79530 (= e!51931 e!51932)))

(assert (=> b!79530 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun res!41529 () Bool)

(assert (=> b!79530 (= res!41529 (contains!742 lt!36916 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!79530 (=> (not res!41529) (not e!51932))))

(declare-fun bm!7350 () Bool)

(declare-fun call!7353 () ListLongMap!1447)

(assert (=> bm!7350 (= call!7353 (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))))))

(declare-fun b!79531 () Bool)

(declare-fun e!51933 () Bool)

(assert (=> b!79531 (= e!51933 e!51931)))

(declare-fun c!12351 () Bool)

(assert (=> b!79531 (= c!12351 e!51936)))

(declare-fun res!41530 () Bool)

(assert (=> b!79531 (=> (not res!41530) (not e!51936))))

(assert (=> b!79531 (= res!41530 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun d!19167 () Bool)

(assert (=> d!19167 e!51933))

(declare-fun res!41527 () Bool)

(assert (=> d!19167 (=> (not res!41527) (not e!51933))))

(assert (=> d!19167 (= res!41527 (not (contains!742 lt!36916 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19167 (= lt!36916 e!51937)))

(declare-fun c!12349 () Bool)

(assert (=> d!19167 (= c!12349 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(assert (=> d!19167 (validMask!0 (mask!6268 (v!2592 (underlying!278 thiss!992))))))

(assert (=> d!19167 (= (getCurrentListMapNoExtraKeys!70 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (_values!2255 (v!2592 (underlying!278 thiss!992))) (mask!6268 (v!2592 (underlying!278 thiss!992))) (extraKeys!2123 (v!2592 (underlying!278 thiss!992))) (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) (minValue!2170 (v!2592 (underlying!278 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992)))) lt!36916)))

(declare-fun b!79528 () Bool)

(declare-fun lt!36919 () Unit!2257)

(declare-fun lt!36917 () Unit!2257)

(assert (=> b!79528 (= lt!36919 lt!36917)))

(declare-fun lt!36922 () (_ BitVec 64))

(declare-fun lt!36918 () (_ BitVec 64))

(declare-fun lt!36920 () ListLongMap!1447)

(declare-fun lt!36921 () V!2995)

(assert (=> b!79528 (not (contains!742 (+!105 lt!36920 (tuple2!2173 lt!36918 lt!36921)) lt!36922))))

(assert (=> b!79528 (= lt!36917 (addStillNotContains!28 lt!36920 lt!36918 lt!36921 lt!36922))))

(assert (=> b!79528 (= lt!36922 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79528 (= lt!36921 (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79528 (= lt!36918 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!79528 (= lt!36920 call!7353)))

(assert (=> b!79528 (= e!51934 (+!105 call!7353 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79532 () Bool)

(assert (=> b!79532 (= e!51931 e!51935)))

(declare-fun c!12352 () Bool)

(assert (=> b!79532 (= c!12352 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!79533 () Bool)

(assert (=> b!79533 (= e!51935 (isEmpty!326 lt!36916))))

(declare-fun b!79534 () Bool)

(declare-fun res!41528 () Bool)

(assert (=> b!79534 (=> (not res!41528) (not e!51933))))

(assert (=> b!79534 (= res!41528 (not (contains!742 lt!36916 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79535 () Bool)

(assert (=> b!79535 (= e!51934 call!7353)))

(assert (= (and d!19167 c!12349) b!79524))

(assert (= (and d!19167 (not c!12349)) b!79529))

(assert (= (and b!79529 c!12350) b!79528))

(assert (= (and b!79529 (not c!12350)) b!79535))

(assert (= (or b!79528 b!79535) bm!7350))

(assert (= (and d!19167 res!41527) b!79534))

(assert (= (and b!79534 res!41528) b!79531))

(assert (= (and b!79531 res!41530) b!79527))

(assert (= (and b!79531 c!12351) b!79530))

(assert (= (and b!79531 (not c!12351)) b!79532))

(assert (= (and b!79530 res!41529) b!79526))

(assert (= (and b!79532 c!12352) b!79525))

(assert (= (and b!79532 (not c!12352)) b!79533))

(declare-fun b_lambda!3551 () Bool)

(assert (=> (not b_lambda!3551) (not b!79526)))

(assert (=> b!79526 t!5150))

(declare-fun b_and!4887 () Bool)

(assert (= b_and!4883 (and (=> t!5150 result!2811) b_and!4887)))

(assert (=> b!79526 t!5152))

(declare-fun b_and!4889 () Bool)

(assert (= b_and!4885 (and (=> t!5152 result!2815) b_and!4889)))

(declare-fun b_lambda!3553 () Bool)

(assert (=> (not b_lambda!3553) (not b!79528)))

(assert (=> b!79528 t!5150))

(declare-fun b_and!4891 () Bool)

(assert (= b_and!4887 (and (=> t!5150 result!2811) b_and!4891)))

(assert (=> b!79528 t!5152))

(declare-fun b_and!4893 () Bool)

(assert (= b_and!4889 (and (=> t!5152 result!2815) b_and!4893)))

(declare-fun m!80621 () Bool)

(assert (=> b!79525 m!80621))

(assert (=> bm!7350 m!80621))

(declare-fun m!80623 () Bool)

(assert (=> b!79530 m!80623))

(assert (=> b!79530 m!80623))

(declare-fun m!80625 () Bool)

(assert (=> b!79530 m!80625))

(declare-fun m!80627 () Bool)

(assert (=> d!19167 m!80627))

(assert (=> d!19167 m!77987))

(assert (=> b!79527 m!80623))

(assert (=> b!79527 m!80623))

(declare-fun m!80629 () Bool)

(assert (=> b!79527 m!80629))

(assert (=> b!79529 m!80623))

(assert (=> b!79529 m!80623))

(assert (=> b!79529 m!80629))

(declare-fun m!80631 () Bool)

(assert (=> b!79534 m!80631))

(declare-fun m!80633 () Bool)

(assert (=> b!79533 m!80633))

(declare-fun m!80635 () Bool)

(assert (=> b!79526 m!80635))

(assert (=> b!79526 m!78001))

(declare-fun m!80637 () Bool)

(assert (=> b!79526 m!80637))

(assert (=> b!79526 m!80623))

(assert (=> b!79526 m!80635))

(assert (=> b!79526 m!80623))

(declare-fun m!80639 () Bool)

(assert (=> b!79526 m!80639))

(assert (=> b!79526 m!78001))

(declare-fun m!80641 () Bool)

(assert (=> b!79528 m!80641))

(assert (=> b!79528 m!80635))

(assert (=> b!79528 m!78001))

(assert (=> b!79528 m!80637))

(assert (=> b!79528 m!80623))

(declare-fun m!80643 () Bool)

(assert (=> b!79528 m!80643))

(assert (=> b!79528 m!80635))

(declare-fun m!80645 () Bool)

(assert (=> b!79528 m!80645))

(declare-fun m!80647 () Bool)

(assert (=> b!79528 m!80647))

(assert (=> b!79528 m!80645))

(assert (=> b!79528 m!78001))

(assert (=> bm!7210 d!19167))

(declare-fun bm!7351 () Bool)

(declare-fun call!7354 () Bool)

(assert (=> bm!7351 (= call!7354 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3932 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136))))))

(declare-fun b!79536 () Bool)

(declare-fun e!51939 () Bool)

(assert (=> b!79536 (= e!51939 call!7354)))

(declare-fun b!79537 () Bool)

(declare-fun e!51940 () Bool)

(declare-fun e!51938 () Bool)

(assert (=> b!79537 (= e!51940 e!51938)))

(declare-fun c!12353 () Bool)

(assert (=> b!79537 (= c!12353 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000)))))

(declare-fun b!79538 () Bool)

(assert (=> b!79538 (= e!51938 call!7354)))

(declare-fun b!79539 () Bool)

(assert (=> b!79539 (= e!51938 e!51939)))

(declare-fun lt!36923 () (_ BitVec 64))

(assert (=> b!79539 (= lt!36923 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000))))

(declare-fun lt!36925 () Unit!2257)

(assert (=> b!79539 (= lt!36925 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3932 (_2!1098 lt!36136)) lt!36923 #b00000000000000000000000000000000))))

(assert (=> b!79539 (arrayContainsKey!0 (_keys!3932 (_2!1098 lt!36136)) lt!36923 #b00000000000000000000000000000000)))

(declare-fun lt!36924 () Unit!2257)

(assert (=> b!79539 (= lt!36924 lt!36925)))

(declare-fun res!41532 () Bool)

(assert (=> b!79539 (= res!41532 (= (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000) (_keys!3932 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136))) (Found!240 #b00000000000000000000000000000000)))))

(assert (=> b!79539 (=> (not res!41532) (not e!51939))))

(declare-fun d!19169 () Bool)

(declare-fun res!41531 () Bool)

(assert (=> d!19169 (=> res!41531 e!51940)))

(assert (=> d!19169 (= res!41531 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))))))

(assert (=> d!19169 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 (_2!1098 lt!36136)) (mask!6268 (_2!1098 lt!36136))) e!51940)))

(assert (= (and d!19169 (not res!41531)) b!79537))

(assert (= (and b!79537 c!12353) b!79539))

(assert (= (and b!79537 (not c!12353)) b!79538))

(assert (= (and b!79539 res!41532) b!79536))

(assert (= (or b!79536 b!79538) bm!7351))

(declare-fun m!80649 () Bool)

(assert (=> bm!7351 m!80649))

(assert (=> b!79537 m!79525))

(assert (=> b!79537 m!79525))

(assert (=> b!79537 m!79553))

(assert (=> b!79539 m!79525))

(declare-fun m!80651 () Bool)

(assert (=> b!79539 m!80651))

(declare-fun m!80653 () Bool)

(assert (=> b!79539 m!80653))

(assert (=> b!79539 m!79525))

(declare-fun m!80655 () Bool)

(assert (=> b!79539 m!80655))

(assert (=> b!78774 d!19169))

(assert (=> b!78478 d!18947))

(assert (=> b!78478 d!18653))

(declare-fun d!19171 () Bool)

(assert (=> d!19171 (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!36926 () Unit!2257)

(assert (=> d!19171 (= lt!36926 (choose!465 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51941 () Bool)

(assert (=> d!19171 e!51941))

(declare-fun res!41533 () Bool)

(assert (=> d!19171 (=> (not res!41533) (not e!51941))))

(assert (=> d!19171 (= res!41533 (isStrictlySorted!295 (toList!739 lt!35983)))))

(assert (=> d!19171 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000) lt!36926)))

(declare-fun b!79540 () Bool)

(assert (=> b!79540 (= e!51941 (containsKey!141 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19171 res!41533) b!79540))

(assert (=> d!19171 m!78689))

(assert (=> d!19171 m!78689))

(assert (=> d!19171 m!79071))

(declare-fun m!80657 () Bool)

(assert (=> d!19171 m!80657))

(declare-fun m!80659 () Bool)

(assert (=> d!19171 m!80659))

(assert (=> b!79540 m!79067))

(assert (=> b!78607 d!19171))

(declare-fun d!19173 () Bool)

(assert (=> d!19173 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3369 () Bool)

(assert (= bs!3369 d!19173))

(assert (=> bs!3369 m!78689))

(declare-fun m!80661 () Bool)

(assert (=> bs!3369 m!80661))

(assert (=> b!78607 d!19173))

(declare-fun b!79544 () Bool)

(declare-fun e!51943 () Option!143)

(assert (=> b!79544 (= e!51943 None!141)))

(declare-fun d!19175 () Bool)

(declare-fun c!12354 () Bool)

(assert (=> d!19175 (= c!12354 (and ((_ is Cons!1503) (toList!739 lt!35983)) (= (_1!1097 (h!2091 (toList!739 lt!35983))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!51942 () Option!143)

(assert (=> d!19175 (= (getValueByKey!137 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000) e!51942)))

(declare-fun b!79543 () Bool)

(assert (=> b!79543 (= e!51943 (getValueByKey!137 (t!5153 (toList!739 lt!35983)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79541 () Bool)

(assert (=> b!79541 (= e!51942 (Some!142 (_2!1097 (h!2091 (toList!739 lt!35983)))))))

(declare-fun b!79542 () Bool)

(assert (=> b!79542 (= e!51942 e!51943)))

(declare-fun c!12355 () Bool)

(assert (=> b!79542 (= c!12355 (and ((_ is Cons!1503) (toList!739 lt!35983)) (not (= (_1!1097 (h!2091 (toList!739 lt!35983))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!19175 c!12354) b!79541))

(assert (= (and d!19175 (not c!12354)) b!79542))

(assert (= (and b!79542 c!12355) b!79543))

(assert (= (and b!79542 (not c!12355)) b!79544))

(declare-fun m!80663 () Bool)

(assert (=> b!79543 m!80663))

(assert (=> b!78607 d!19175))

(declare-fun d!19177 () Bool)

(declare-fun e!51944 () Bool)

(assert (=> d!19177 e!51944))

(declare-fun res!41534 () Bool)

(assert (=> d!19177 (=> res!41534 e!51944)))

(declare-fun lt!36930 () Bool)

(assert (=> d!19177 (= res!41534 (not lt!36930))))

(declare-fun lt!36927 () Bool)

(assert (=> d!19177 (= lt!36930 lt!36927)))

(declare-fun lt!36928 () Unit!2257)

(declare-fun e!51945 () Unit!2257)

(assert (=> d!19177 (= lt!36928 e!51945)))

(declare-fun c!12356 () Bool)

(assert (=> d!19177 (= c!12356 lt!36927)))

(assert (=> d!19177 (= lt!36927 (containsKey!141 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))))))

(assert (=> d!19177 (= (contains!742 (getCurrentListMap!433 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))) lt!36930)))

(declare-fun b!79545 () Bool)

(declare-fun lt!36929 () Unit!2257)

(assert (=> b!79545 (= e!51945 lt!36929)))

(assert (=> b!79545 (= lt!36929 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))))))

(assert (=> b!79545 (isDefined!90 (getValueByKey!137 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))))))

(declare-fun b!79546 () Bool)

(declare-fun Unit!2309 () Unit!2257)

(assert (=> b!79546 (= e!51945 Unit!2309)))

(declare-fun b!79547 () Bool)

(assert (=> b!79547 (= e!51944 (isDefined!90 (getValueByKey!137 (toList!739 (getCurrentListMap!433 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))

(assert (= (and d!19177 c!12356) b!79545))

(assert (= (and d!19177 (not c!12356)) b!79546))

(assert (= (and d!19177 (not res!41534)) b!79547))

(assert (=> d!19177 m!78321))

(declare-fun m!80665 () Bool)

(assert (=> d!19177 m!80665))

(assert (=> b!79545 m!78321))

(declare-fun m!80667 () Bool)

(assert (=> b!79545 m!80667))

(assert (=> b!79545 m!78321))

(declare-fun m!80669 () Bool)

(assert (=> b!79545 m!80669))

(assert (=> b!79545 m!80669))

(declare-fun m!80671 () Bool)

(assert (=> b!79545 m!80671))

(assert (=> b!79547 m!78321))

(assert (=> b!79547 m!80669))

(assert (=> b!79547 m!80669))

(assert (=> b!79547 m!80671))

(assert (=> b!78570 d!19177))

(declare-fun bm!7352 () Bool)

(declare-fun c!12358 () Bool)

(declare-fun call!7361 () ListLongMap!1447)

(declare-fun call!7359 () ListLongMap!1447)

(declare-fun call!7355 () ListLongMap!1447)

(declare-fun c!12362 () Bool)

(declare-fun call!7360 () ListLongMap!1447)

(assert (=> bm!7352 (= call!7361 (+!105 (ite c!12358 call!7359 (ite c!12362 call!7355 call!7360)) (ite (or c!12358 c!12362) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun b!79548 () Bool)

(declare-fun e!51954 () Bool)

(declare-fun lt!36945 () ListLongMap!1447)

(assert (=> b!79548 (= e!51954 (= (apply!79 lt!36945 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!79549 () Bool)

(declare-fun e!51957 () ListLongMap!1447)

(assert (=> b!79549 (= e!51957 call!7360)))

(declare-fun b!79550 () Bool)

(declare-fun e!51947 () ListLongMap!1447)

(declare-fun call!7358 () ListLongMap!1447)

(assert (=> b!79550 (= e!51947 call!7358)))

(declare-fun b!79551 () Bool)

(declare-fun c!12359 () Bool)

(assert (=> b!79551 (= c!12359 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79551 (= e!51947 e!51957)))

(declare-fun b!79552 () Bool)

(declare-fun e!51952 () Bool)

(declare-fun call!7356 () Bool)

(assert (=> b!79552 (= e!51952 (not call!7356))))

(declare-fun b!79553 () Bool)

(declare-fun e!51951 () Bool)

(assert (=> b!79553 (= e!51951 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7354 () Bool)

(assert (=> bm!7354 (= call!7360 call!7355)))

(declare-fun b!79554 () Bool)

(declare-fun e!51950 () Bool)

(declare-fun call!7357 () Bool)

(assert (=> b!79554 (= e!51950 (not call!7357))))

(declare-fun b!79555 () Bool)

(declare-fun e!51949 () Bool)

(assert (=> b!79555 (= e!51949 e!51952)))

(declare-fun c!12360 () Bool)

(assert (=> b!79555 (= c!12360 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7355 () Bool)

(assert (=> bm!7355 (= call!7357 (contains!742 lt!36945 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7356 () Bool)

(assert (=> bm!7356 (= call!7359 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!79556 () Bool)

(assert (=> b!79556 (= e!51957 call!7358)))

(declare-fun b!79557 () Bool)

(declare-fun e!51953 () ListLongMap!1447)

(assert (=> b!79557 (= e!51953 e!51947)))

(assert (=> b!79557 (= c!12362 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7357 () Bool)

(assert (=> bm!7357 (= call!7358 call!7361)))

(declare-fun b!79558 () Bool)

(declare-fun res!41540 () Bool)

(assert (=> b!79558 (=> (not res!41540) (not e!51949))))

(assert (=> b!79558 (= res!41540 e!51950)))

(declare-fun c!12361 () Bool)

(assert (=> b!79558 (= c!12361 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79559 () Bool)

(declare-fun e!51955 () Unit!2257)

(declare-fun Unit!2310 () Unit!2257)

(assert (=> b!79559 (= e!51955 Unit!2310)))

(declare-fun b!79560 () Bool)

(declare-fun e!51948 () Bool)

(assert (=> b!79560 (= e!51950 e!51948)))

(declare-fun res!41537 () Bool)

(assert (=> b!79560 (= res!41537 call!7357)))

(assert (=> b!79560 (=> (not res!41537) (not e!51948))))

(declare-fun b!79561 () Bool)

(assert (=> b!79561 (= e!51952 e!51954)))

(declare-fun res!41539 () Bool)

(assert (=> b!79561 (= res!41539 call!7356)))

(assert (=> b!79561 (=> (not res!41539) (not e!51954))))

(declare-fun e!51958 () Bool)

(declare-fun b!79562 () Bool)

(assert (=> b!79562 (= e!51958 (= (apply!79 lt!36945 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1173 (select (arr!1896 lt!36130) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79562 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2137 lt!36130)))))

(assert (=> b!79562 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun d!19179 () Bool)

(assert (=> d!19179 e!51949))

(declare-fun res!41541 () Bool)

(assert (=> d!19179 (=> (not res!41541) (not e!51949))))

(assert (=> d!19179 (= res!41541 (or (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))))

(declare-fun lt!36935 () ListLongMap!1447)

(assert (=> d!19179 (= lt!36945 lt!36935)))

(declare-fun lt!36952 () Unit!2257)

(assert (=> d!19179 (= lt!36952 e!51955)))

(declare-fun c!12357 () Bool)

(assert (=> d!19179 (= c!12357 e!51951)))

(declare-fun res!41536 () Bool)

(assert (=> d!19179 (=> (not res!41536) (not e!51951))))

(assert (=> d!19179 (= res!41536 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!19179 (= lt!36935 e!51953)))

(assert (=> d!19179 (= c!12358 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19179 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19179 (= (getCurrentListMap!433 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36945)))

(declare-fun bm!7353 () Bool)

(assert (=> bm!7353 (= call!7356 (contains!742 lt!36945 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7358 () Bool)

(assert (=> bm!7358 (= call!7355 call!7359)))

(declare-fun b!79563 () Bool)

(declare-fun lt!36934 () Unit!2257)

(assert (=> b!79563 (= e!51955 lt!36934)))

(declare-fun lt!36940 () ListLongMap!1447)

(assert (=> b!79563 (= lt!36940 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36933 () (_ BitVec 64))

(assert (=> b!79563 (= lt!36933 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36942 () (_ BitVec 64))

(assert (=> b!79563 (= lt!36942 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36947 () Unit!2257)

(assert (=> b!79563 (= lt!36947 (addStillContains!55 lt!36940 lt!36933 (zeroValue!2170 newMap!16) lt!36942))))

(assert (=> b!79563 (contains!742 (+!105 lt!36940 (tuple2!2173 lt!36933 (zeroValue!2170 newMap!16))) lt!36942)))

(declare-fun lt!36941 () Unit!2257)

(assert (=> b!79563 (= lt!36941 lt!36947)))

(declare-fun lt!36932 () ListLongMap!1447)

(assert (=> b!79563 (= lt!36932 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36936 () (_ BitVec 64))

(assert (=> b!79563 (= lt!36936 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36938 () (_ BitVec 64))

(assert (=> b!79563 (= lt!36938 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36937 () Unit!2257)

(assert (=> b!79563 (= lt!36937 (addApplyDifferent!55 lt!36932 lt!36936 (minValue!2170 newMap!16) lt!36938))))

(assert (=> b!79563 (= (apply!79 (+!105 lt!36932 (tuple2!2173 lt!36936 (minValue!2170 newMap!16))) lt!36938) (apply!79 lt!36932 lt!36938))))

(declare-fun lt!36931 () Unit!2257)

(assert (=> b!79563 (= lt!36931 lt!36937)))

(declare-fun lt!36949 () ListLongMap!1447)

(assert (=> b!79563 (= lt!36949 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36948 () (_ BitVec 64))

(assert (=> b!79563 (= lt!36948 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36950 () (_ BitVec 64))

(assert (=> b!79563 (= lt!36950 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36939 () Unit!2257)

(assert (=> b!79563 (= lt!36939 (addApplyDifferent!55 lt!36949 lt!36948 (zeroValue!2170 newMap!16) lt!36950))))

(assert (=> b!79563 (= (apply!79 (+!105 lt!36949 (tuple2!2173 lt!36948 (zeroValue!2170 newMap!16))) lt!36950) (apply!79 lt!36949 lt!36950))))

(declare-fun lt!36943 () Unit!2257)

(assert (=> b!79563 (= lt!36943 lt!36939)))

(declare-fun lt!36946 () ListLongMap!1447)

(assert (=> b!79563 (= lt!36946 (getCurrentListMapNoExtraKeys!70 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36951 () (_ BitVec 64))

(assert (=> b!79563 (= lt!36951 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36944 () (_ BitVec 64))

(assert (=> b!79563 (= lt!36944 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79563 (= lt!36934 (addApplyDifferent!55 lt!36946 lt!36951 (minValue!2170 newMap!16) lt!36944))))

(assert (=> b!79563 (= (apply!79 (+!105 lt!36946 (tuple2!2173 lt!36951 (minValue!2170 newMap!16))) lt!36944) (apply!79 lt!36946 lt!36944))))

(declare-fun b!79564 () Bool)

(declare-fun res!41543 () Bool)

(assert (=> b!79564 (=> (not res!41543) (not e!51949))))

(declare-fun e!51946 () Bool)

(assert (=> b!79564 (= res!41543 e!51946)))

(declare-fun res!41538 () Bool)

(assert (=> b!79564 (=> res!41538 e!51946)))

(declare-fun e!51956 () Bool)

(assert (=> b!79564 (= res!41538 (not e!51956))))

(declare-fun res!41535 () Bool)

(assert (=> b!79564 (=> (not res!41535) (not e!51956))))

(assert (=> b!79564 (= res!41535 (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!79565 () Bool)

(assert (=> b!79565 (= e!51946 e!51958)))

(declare-fun res!41542 () Bool)

(assert (=> b!79565 (=> (not res!41542) (not e!51958))))

(assert (=> b!79565 (= res!41542 (contains!742 lt!36945 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79565 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!79566 () Bool)

(assert (=> b!79566 (= e!51948 (= (apply!79 lt!36945 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(declare-fun b!79567 () Bool)

(assert (=> b!79567 (= e!51956 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79568 () Bool)

(assert (=> b!79568 (= e!51953 (+!105 call!7361 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!19179 c!12358) b!79568))

(assert (= (and d!19179 (not c!12358)) b!79557))

(assert (= (and b!79557 c!12362) b!79550))

(assert (= (and b!79557 (not c!12362)) b!79551))

(assert (= (and b!79551 c!12359) b!79556))

(assert (= (and b!79551 (not c!12359)) b!79549))

(assert (= (or b!79556 b!79549) bm!7354))

(assert (= (or b!79550 bm!7354) bm!7358))

(assert (= (or b!79550 b!79556) bm!7357))

(assert (= (or b!79568 bm!7358) bm!7356))

(assert (= (or b!79568 bm!7357) bm!7352))

(assert (= (and d!19179 res!41536) b!79553))

(assert (= (and d!19179 c!12357) b!79563))

(assert (= (and d!19179 (not c!12357)) b!79559))

(assert (= (and d!19179 res!41541) b!79564))

(assert (= (and b!79564 res!41535) b!79567))

(assert (= (and b!79564 (not res!41538)) b!79565))

(assert (= (and b!79565 res!41542) b!79562))

(assert (= (and b!79564 res!41543) b!79558))

(assert (= (and b!79558 c!12361) b!79560))

(assert (= (and b!79558 (not c!12361)) b!79554))

(assert (= (and b!79560 res!41537) b!79566))

(assert (= (or b!79560 b!79554) bm!7355))

(assert (= (and b!79558 res!41540) b!79555))

(assert (= (and b!79555 c!12360) b!79561))

(assert (= (and b!79555 (not c!12360)) b!79552))

(assert (= (and b!79561 res!41539) b!79548))

(assert (= (or b!79561 b!79552) bm!7353))

(declare-fun b_lambda!3555 () Bool)

(assert (=> (not b_lambda!3555) (not b!79562)))

(assert (=> b!79562 t!5161))

(declare-fun b_and!4895 () Bool)

(assert (= b_and!4891 (and (=> t!5161 result!2825) b_and!4895)))

(assert (=> b!79562 t!5163))

(declare-fun b_and!4897 () Bool)

(assert (= b_and!4893 (and (=> t!5163 result!2827) b_and!4897)))

(declare-fun m!80673 () Bool)

(assert (=> b!79566 m!80673))

(declare-fun m!80675 () Bool)

(assert (=> bm!7355 m!80675))

(declare-fun m!80677 () Bool)

(assert (=> bm!7353 m!80677))

(declare-fun m!80679 () Bool)

(assert (=> b!79563 m!80679))

(declare-fun m!80681 () Bool)

(assert (=> b!79563 m!80681))

(declare-fun m!80683 () Bool)

(assert (=> b!79563 m!80683))

(declare-fun m!80685 () Bool)

(assert (=> b!79563 m!80685))

(declare-fun m!80687 () Bool)

(assert (=> b!79563 m!80687))

(declare-fun m!80689 () Bool)

(assert (=> b!79563 m!80689))

(declare-fun m!80691 () Bool)

(assert (=> b!79563 m!80691))

(assert (=> b!79563 m!78509))

(declare-fun m!80693 () Bool)

(assert (=> b!79563 m!80693))

(declare-fun m!80695 () Bool)

(assert (=> b!79563 m!80695))

(declare-fun m!80697 () Bool)

(assert (=> b!79563 m!80697))

(declare-fun m!80699 () Bool)

(assert (=> b!79563 m!80699))

(declare-fun m!80701 () Bool)

(assert (=> b!79563 m!80701))

(declare-fun m!80703 () Bool)

(assert (=> b!79563 m!80703))

(assert (=> b!79563 m!80697))

(assert (=> b!79563 m!80683))

(declare-fun m!80705 () Bool)

(assert (=> b!79563 m!80705))

(declare-fun m!80707 () Bool)

(assert (=> b!79563 m!80707))

(declare-fun m!80709 () Bool)

(assert (=> b!79563 m!80709))

(assert (=> b!79563 m!80679))

(assert (=> b!79563 m!80687))

(assert (=> b!79562 m!78509))

(declare-fun m!80711 () Bool)

(assert (=> b!79562 m!80711))

(assert (=> b!79562 m!78509))

(declare-fun m!80713 () Bool)

(assert (=> b!79562 m!80713))

(assert (=> b!79562 m!78533))

(declare-fun m!80715 () Bool)

(assert (=> b!79562 m!80715))

(assert (=> b!79562 m!78533))

(assert (=> b!79562 m!80713))

(assert (=> b!79553 m!78509))

(assert (=> b!79553 m!78509))

(assert (=> b!79553 m!78537))

(declare-fun m!80717 () Bool)

(assert (=> b!79548 m!80717))

(assert (=> bm!7356 m!80707))

(declare-fun m!80719 () Bool)

(assert (=> bm!7352 m!80719))

(assert (=> b!79565 m!78509))

(assert (=> b!79565 m!78509))

(declare-fun m!80721 () Bool)

(assert (=> b!79565 m!80721))

(declare-fun m!80723 () Bool)

(assert (=> b!79568 m!80723))

(assert (=> d!19179 m!78411))

(assert (=> b!79567 m!78509))

(assert (=> b!79567 m!78509))

(assert (=> b!79567 m!78537))

(assert (=> b!78570 d!19179))

(declare-fun d!19181 () Bool)

(assert (=> d!19181 (= ($colon$colon!69 e!51258 (ite c!12028 (h!2091 (toList!739 (+!105 lt!35869 lt!35870))) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864)))) (Cons!1503 (ite c!12028 (h!2091 (toList!739 (+!105 lt!35869 lt!35870))) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))) e!51258))))

(assert (=> bm!7199 d!19181))

(declare-fun lt!36953 () Bool)

(declare-fun d!19183 () Bool)

(assert (=> d!19183 (= lt!36953 (select (content!83 (toList!739 lt!36167)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun e!51960 () Bool)

(assert (=> d!19183 (= lt!36953 e!51960)))

(declare-fun res!41544 () Bool)

(assert (=> d!19183 (=> (not res!41544) (not e!51960))))

(assert (=> d!19183 (= res!41544 ((_ is Cons!1503) (toList!739 lt!36167)))))

(assert (=> d!19183 (= (contains!743 (toList!739 lt!36167) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!36953)))

(declare-fun b!79569 () Bool)

(declare-fun e!51959 () Bool)

(assert (=> b!79569 (= e!51960 e!51959)))

(declare-fun res!41545 () Bool)

(assert (=> b!79569 (=> res!41545 e!51959)))

(assert (=> b!79569 (= res!41545 (= (h!2091 (toList!739 lt!36167)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun b!79570 () Bool)

(assert (=> b!79570 (= e!51959 (contains!743 (t!5153 (toList!739 lt!36167)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!19183 res!41544) b!79569))

(assert (= (and b!79569 (not res!41545)) b!79570))

(declare-fun m!80725 () Bool)

(assert (=> d!19183 m!80725))

(declare-fun m!80727 () Bool)

(assert (=> d!19183 m!80727))

(declare-fun m!80729 () Bool)

(assert (=> b!79570 m!80729))

(assert (=> b!78239 d!19183))

(declare-fun d!19185 () Bool)

(declare-fun lt!36954 () Bool)

(assert (=> d!19185 (= lt!36954 (select (content!83 lt!36241) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun e!51962 () Bool)

(assert (=> d!19185 (= lt!36954 e!51962)))

(declare-fun res!41546 () Bool)

(assert (=> d!19185 (=> (not res!41546) (not e!51962))))

(assert (=> d!19185 (= res!41546 ((_ is Cons!1503) lt!36241))))

(assert (=> d!19185 (= (contains!743 lt!36241 (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))) lt!36954)))

(declare-fun b!79571 () Bool)

(declare-fun e!51961 () Bool)

(assert (=> b!79571 (= e!51962 e!51961)))

(declare-fun res!41547 () Bool)

(assert (=> b!79571 (=> res!41547 e!51961)))

(assert (=> b!79571 (= res!41547 (= (h!2091 lt!36241) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun b!79572 () Bool)

(assert (=> b!79572 (= e!51961 (contains!743 (t!5153 lt!36241) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(assert (= (and d!19185 res!41546) b!79571))

(assert (= (and b!79571 (not res!41547)) b!79572))

(declare-fun m!80731 () Bool)

(assert (=> d!19185 m!80731))

(declare-fun m!80733 () Bool)

(assert (=> d!19185 m!80733))

(declare-fun m!80735 () Bool)

(assert (=> b!79572 m!80735))

(assert (=> b!78385 d!19185))

(declare-fun d!19187 () Bool)

(declare-fun lt!36955 () Bool)

(assert (=> d!19187 (= lt!36955 (select (content!83 (toList!739 lt!36524)) (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!51964 () Bool)

(assert (=> d!19187 (= lt!36955 e!51964)))

(declare-fun res!41548 () Bool)

(assert (=> d!19187 (=> (not res!41548) (not e!51964))))

(assert (=> d!19187 (= res!41548 ((_ is Cons!1503) (toList!739 lt!36524)))))

(assert (=> d!19187 (= (contains!743 (toList!739 lt!36524) (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36955)))

(declare-fun b!79573 () Bool)

(declare-fun e!51963 () Bool)

(assert (=> b!79573 (= e!51964 e!51963)))

(declare-fun res!41549 () Bool)

(assert (=> b!79573 (=> res!41549 e!51963)))

(assert (=> b!79573 (= res!41549 (= (h!2091 (toList!739 lt!36524)) (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79574 () Bool)

(assert (=> b!79574 (= e!51963 (contains!743 (t!5153 (toList!739 lt!36524)) (ite (or c!11909 c!11913) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (= (and d!19187 res!41548) b!79573))

(assert (= (and b!79573 (not res!41549)) b!79574))

(declare-fun m!80737 () Bool)

(assert (=> d!19187 m!80737))

(declare-fun m!80739 () Bool)

(assert (=> d!19187 m!80739))

(declare-fun m!80741 () Bool)

(assert (=> b!79574 m!80741))

(assert (=> b!78730 d!19187))

(declare-fun d!19189 () Bool)

(declare-fun e!51965 () Bool)

(assert (=> d!19189 e!51965))

(declare-fun res!41550 () Bool)

(assert (=> d!19189 (=> (not res!41550) (not e!51965))))

(declare-fun lt!36957 () ListLongMap!1447)

(assert (=> d!19189 (= res!41550 (contains!742 lt!36957 (_1!1097 (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(declare-fun lt!36956 () List!1507)

(assert (=> d!19189 (= lt!36957 (ListLongMap!1448 lt!36956))))

(declare-fun lt!36959 () Unit!2257)

(declare-fun lt!36958 () Unit!2257)

(assert (=> d!19189 (= lt!36959 lt!36958)))

(assert (=> d!19189 (= (getValueByKey!137 lt!36956 (_1!1097 (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))) (Some!142 (_2!1097 (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!19189 (= lt!36958 (lemmaContainsTupThenGetReturnValue!54 lt!36956 (_1!1097 (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (_2!1097 (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!19189 (= lt!36956 (insertStrictlySorted!57 (toList!739 (ite c!11991 call!7189 (ite c!11995 call!7185 call!7190))) (_1!1097 (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (_2!1097 (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!19189 (= (+!105 (ite c!11991 call!7189 (ite c!11995 call!7185 call!7190)) (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) lt!36957)))

(declare-fun b!79575 () Bool)

(declare-fun res!41551 () Bool)

(assert (=> b!79575 (=> (not res!41551) (not e!51965))))

(assert (=> b!79575 (= res!41551 (= (getValueByKey!137 (toList!739 lt!36957) (_1!1097 (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))) (Some!142 (_2!1097 (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))))

(declare-fun b!79576 () Bool)

(assert (=> b!79576 (= e!51965 (contains!743 (toList!739 lt!36957) (ite (or c!11991 c!11995) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11977) lt!35856 (zeroValue!2170 newMap!16))) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (= (and d!19189 res!41550) b!79575))

(assert (= (and b!79575 res!41551) b!79576))

(declare-fun m!80743 () Bool)

(assert (=> d!19189 m!80743))

(declare-fun m!80745 () Bool)

(assert (=> d!19189 m!80745))

(declare-fun m!80747 () Bool)

(assert (=> d!19189 m!80747))

(declare-fun m!80749 () Bool)

(assert (=> d!19189 m!80749))

(declare-fun m!80751 () Bool)

(assert (=> b!79575 m!80751))

(declare-fun m!80753 () Bool)

(assert (=> b!79576 m!80753))

(assert (=> bm!7182 d!19189))

(declare-fun b!79580 () Bool)

(declare-fun e!51967 () Option!143)

(assert (=> b!79580 (= e!51967 None!141)))

(declare-fun d!19191 () Bool)

(declare-fun c!12363 () Bool)

(assert (=> d!19191 (= c!12363 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36049))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36049)))) (_1!1097 lt!35870))))))

(declare-fun e!51966 () Option!143)

(assert (=> d!19191 (= (getValueByKey!137 (t!5153 (toList!739 lt!36049)) (_1!1097 lt!35870)) e!51966)))

(declare-fun b!79579 () Bool)

(assert (=> b!79579 (= e!51967 (getValueByKey!137 (t!5153 (t!5153 (toList!739 lt!36049))) (_1!1097 lt!35870)))))

(declare-fun b!79577 () Bool)

(assert (=> b!79577 (= e!51966 (Some!142 (_2!1097 (h!2091 (t!5153 (toList!739 lt!36049))))))))

(declare-fun b!79578 () Bool)

(assert (=> b!79578 (= e!51966 e!51967)))

(declare-fun c!12364 () Bool)

(assert (=> b!79578 (= c!12364 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36049))) (not (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36049)))) (_1!1097 lt!35870)))))))

(assert (= (and d!19191 c!12363) b!79577))

(assert (= (and d!19191 (not c!12363)) b!79578))

(assert (= (and b!79578 c!12364) b!79579))

(assert (= (and b!79578 (not c!12364)) b!79580))

(declare-fun m!80755 () Bool)

(assert (=> b!79579 m!80755))

(assert (=> b!78764 d!19191))

(declare-fun d!19193 () Bool)

(assert (=> d!19193 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027))))

(declare-fun lt!36960 () Unit!2257)

(assert (=> d!19193 (= lt!36960 (choose!465 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027))))

(declare-fun e!51968 () Bool)

(assert (=> d!19193 e!51968))

(declare-fun res!41552 () Bool)

(assert (=> d!19193 (=> (not res!41552) (not e!51968))))

(assert (=> d!19193 (= res!41552 (isStrictlySorted!295 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)))))))

(assert (=> d!19193 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027) lt!36960)))

(declare-fun b!79581 () Bool)

(assert (=> b!79581 (= e!51968 (containsKey!141 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027))))

(assert (= (and d!19193 res!41552) b!79581))

(assert (=> d!19193 m!78641))

(assert (=> d!19193 m!78641))

(assert (=> d!19193 m!78643))

(declare-fun m!80757 () Bool)

(assert (=> d!19193 m!80757))

(declare-fun m!80759 () Bool)

(assert (=> d!19193 m!80759))

(assert (=> b!79581 m!78637))

(assert (=> b!78397 d!19193))

(declare-fun d!19195 () Bool)

(assert (=> d!19195 (= (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027)) (not (isEmpty!328 (getValueByKey!137 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027))))))

(declare-fun bs!3370 () Bool)

(assert (= bs!3370 d!19195))

(assert (=> bs!3370 m!78641))

(declare-fun m!80761 () Bool)

(assert (=> bs!3370 m!80761))

(assert (=> b!78397 d!19195))

(declare-fun b!79585 () Bool)

(declare-fun e!51970 () Option!143)

(assert (=> b!79585 (= e!51970 None!141)))

(declare-fun c!12365 () Bool)

(declare-fun d!19197 () Bool)

(assert (=> d!19197 (= c!12365 (and ((_ is Cons!1503) (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))))) lt!36027)))))

(declare-fun e!51969 () Option!143)

(assert (=> d!19197 (= (getValueByKey!137 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))) lt!36027) e!51969)))

(declare-fun b!79584 () Bool)

(assert (=> b!79584 (= e!51970 (getValueByKey!137 (t!5153 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)))) lt!36027))))

(declare-fun b!79582 () Bool)

(assert (=> b!79582 (= e!51969 (Some!142 (_2!1097 (h!2091 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)))))))))

(declare-fun b!79583 () Bool)

(assert (=> b!79583 (= e!51969 e!51970)))

(declare-fun c!12366 () Bool)

(assert (=> b!79583 (= c!12366 (and ((_ is Cons!1503) (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)))) (not (= (_1!1097 (h!2091 (toList!739 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026))))) lt!36027))))))

(assert (= (and d!19197 c!12365) b!79582))

(assert (= (and d!19197 (not c!12365)) b!79583))

(assert (= (and b!79583 c!12366) b!79584))

(assert (= (and b!79583 (not c!12366)) b!79585))

(declare-fun m!80763 () Bool)

(assert (=> b!79584 m!80763))

(assert (=> b!78397 d!19197))

(declare-fun d!19199 () Bool)

(declare-fun res!41553 () Bool)

(declare-fun e!51971 () Bool)

(assert (=> d!19199 (=> res!41553 e!51971)))

(assert (=> d!19199 (= res!41553 (and ((_ is Cons!1503) lt!36425) (= (_1!1097 (h!2091 lt!36425)) (_1!1097 lt!35864))))))

(assert (=> d!19199 (= (containsKey!141 lt!36425 (_1!1097 lt!35864)) e!51971)))

(declare-fun b!79586 () Bool)

(declare-fun e!51972 () Bool)

(assert (=> b!79586 (= e!51971 e!51972)))

(declare-fun res!41554 () Bool)

(assert (=> b!79586 (=> (not res!41554) (not e!51972))))

(assert (=> b!79586 (= res!41554 (and (or (not ((_ is Cons!1503) lt!36425)) (bvsle (_1!1097 (h!2091 lt!36425)) (_1!1097 lt!35864))) ((_ is Cons!1503) lt!36425) (bvslt (_1!1097 (h!2091 lt!36425)) (_1!1097 lt!35864))))))

(declare-fun b!79587 () Bool)

(assert (=> b!79587 (= e!51972 (containsKey!141 (t!5153 lt!36425) (_1!1097 lt!35864)))))

(assert (= (and d!19199 (not res!41553)) b!79586))

(assert (= (and b!79586 res!41554) b!79587))

(declare-fun m!80765 () Bool)

(assert (=> b!79587 m!80765))

(assert (=> b!78651 d!19199))

(declare-fun d!19201 () Bool)

(declare-fun res!41555 () Bool)

(declare-fun e!51973 () Bool)

(assert (=> d!19201 (=> res!41555 e!51973)))

(assert (=> d!19201 (= res!41555 (and ((_ is Cons!1503) (toList!739 lt!36029)) (= (_1!1097 (h!2091 (toList!739 lt!36029))) (_1!1097 lt!35861))))))

(assert (=> d!19201 (= (containsKey!141 (toList!739 lt!36029) (_1!1097 lt!35861)) e!51973)))

(declare-fun b!79588 () Bool)

(declare-fun e!51974 () Bool)

(assert (=> b!79588 (= e!51973 e!51974)))

(declare-fun res!41556 () Bool)

(assert (=> b!79588 (=> (not res!41556) (not e!51974))))

(assert (=> b!79588 (= res!41556 (and (or (not ((_ is Cons!1503) (toList!739 lt!36029))) (bvsle (_1!1097 (h!2091 (toList!739 lt!36029))) (_1!1097 lt!35861))) ((_ is Cons!1503) (toList!739 lt!36029)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36029))) (_1!1097 lt!35861))))))

(declare-fun b!79589 () Bool)

(assert (=> b!79589 (= e!51974 (containsKey!141 (t!5153 (toList!739 lt!36029)) (_1!1097 lt!35861)))))

(assert (= (and d!19201 (not res!41555)) b!79588))

(assert (= (and b!79588 res!41556) b!79589))

(declare-fun m!80767 () Bool)

(assert (=> b!79589 m!80767))

(assert (=> d!18533 d!19201))

(declare-fun d!19203 () Bool)

(declare-fun e!51975 () Bool)

(assert (=> d!19203 e!51975))

(declare-fun res!41557 () Bool)

(assert (=> d!19203 (=> res!41557 e!51975)))

(declare-fun lt!36964 () Bool)

(assert (=> d!19203 (= res!41557 (not lt!36964))))

(declare-fun lt!36961 () Bool)

(assert (=> d!19203 (= lt!36964 lt!36961)))

(declare-fun lt!36962 () Unit!2257)

(declare-fun e!51976 () Unit!2257)

(assert (=> d!19203 (= lt!36962 e!51976)))

(declare-fun c!12367 () Bool)

(assert (=> d!19203 (= c!12367 lt!36961)))

(assert (=> d!19203 (= lt!36961 (containsKey!141 (toList!739 lt!36337) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19203 (= (contains!742 lt!36337 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36964)))

(declare-fun b!79590 () Bool)

(declare-fun lt!36963 () Unit!2257)

(assert (=> b!79590 (= e!51976 lt!36963)))

(assert (=> b!79590 (= lt!36963 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36337) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79590 (isDefined!90 (getValueByKey!137 (toList!739 lt!36337) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79591 () Bool)

(declare-fun Unit!2311 () Unit!2257)

(assert (=> b!79591 (= e!51976 Unit!2311)))

(declare-fun b!79592 () Bool)

(assert (=> b!79592 (= e!51975 (isDefined!90 (getValueByKey!137 (toList!739 lt!36337) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19203 c!12367) b!79590))

(assert (= (and d!19203 (not c!12367)) b!79591))

(assert (= (and d!19203 (not res!41557)) b!79592))

(declare-fun m!80769 () Bool)

(assert (=> d!19203 m!80769))

(declare-fun m!80771 () Bool)

(assert (=> b!79590 m!80771))

(assert (=> b!79590 m!79587))

(assert (=> b!79590 m!79587))

(declare-fun m!80773 () Bool)

(assert (=> b!79590 m!80773))

(assert (=> b!79592 m!79587))

(assert (=> b!79592 m!79587))

(assert (=> b!79592 m!80773))

(assert (=> bm!7212 d!19203))

(declare-fun b!79596 () Bool)

(declare-fun e!51978 () Option!143)

(assert (=> b!79596 (= e!51978 None!141)))

(declare-fun d!19205 () Bool)

(declare-fun c!12368 () Bool)

(assert (=> d!19205 (= c!12368 (and ((_ is Cons!1503) (t!5153 lt!36044)) (= (_1!1097 (h!2091 (t!5153 lt!36044))) (_1!1097 lt!35864))))))

(declare-fun e!51977 () Option!143)

(assert (=> d!19205 (= (getValueByKey!137 (t!5153 lt!36044) (_1!1097 lt!35864)) e!51977)))

(declare-fun b!79595 () Bool)

(assert (=> b!79595 (= e!51978 (getValueByKey!137 (t!5153 (t!5153 lt!36044)) (_1!1097 lt!35864)))))

(declare-fun b!79593 () Bool)

(assert (=> b!79593 (= e!51977 (Some!142 (_2!1097 (h!2091 (t!5153 lt!36044)))))))

(declare-fun b!79594 () Bool)

(assert (=> b!79594 (= e!51977 e!51978)))

(declare-fun c!12369 () Bool)

(assert (=> b!79594 (= c!12369 (and ((_ is Cons!1503) (t!5153 lt!36044)) (not (= (_1!1097 (h!2091 (t!5153 lt!36044))) (_1!1097 lt!35864)))))))

(assert (= (and d!19205 c!12368) b!79593))

(assert (= (and d!19205 (not c!12368)) b!79594))

(assert (= (and b!79594 c!12369) b!79595))

(assert (= (and b!79594 (not c!12369)) b!79596))

(declare-fun m!80775 () Bool)

(assert (=> b!79595 m!80775))

(assert (=> b!78643 d!19205))

(declare-fun d!19207 () Bool)

(declare-fun res!41558 () Bool)

(declare-fun e!51979 () Bool)

(assert (=> d!19207 (=> res!41558 e!51979)))

(assert (=> d!19207 (= res!41558 (and ((_ is Cons!1503) lt!36040) (= (_1!1097 (h!2091 lt!36040)) (_1!1097 lt!35861))))))

(assert (=> d!19207 (= (containsKey!141 lt!36040 (_1!1097 lt!35861)) e!51979)))

(declare-fun b!79597 () Bool)

(declare-fun e!51980 () Bool)

(assert (=> b!79597 (= e!51979 e!51980)))

(declare-fun res!41559 () Bool)

(assert (=> b!79597 (=> (not res!41559) (not e!51980))))

(assert (=> b!79597 (= res!41559 (and (or (not ((_ is Cons!1503) lt!36040)) (bvsle (_1!1097 (h!2091 lt!36040)) (_1!1097 lt!35861))) ((_ is Cons!1503) lt!36040) (bvslt (_1!1097 (h!2091 lt!36040)) (_1!1097 lt!35861))))))

(declare-fun b!79598 () Bool)

(assert (=> b!79598 (= e!51980 (containsKey!141 (t!5153 lt!36040) (_1!1097 lt!35861)))))

(assert (= (and d!19207 (not res!41558)) b!79597))

(assert (= (and b!79597 res!41559) b!79598))

(declare-fun m!80777 () Bool)

(assert (=> b!79598 m!80777))

(assert (=> b!78483 d!19207))

(declare-fun b!79602 () Bool)

(declare-fun e!51982 () Option!143)

(assert (=> b!79602 (= e!51982 None!141)))

(declare-fun d!19209 () Bool)

(declare-fun c!12370 () Bool)

(assert (=> d!19209 (= c!12370 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36004))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36004)))) (_1!1097 lt!35864))))))

(declare-fun e!51981 () Option!143)

(assert (=> d!19209 (= (getValueByKey!137 (t!5153 (toList!739 lt!36004)) (_1!1097 lt!35864)) e!51981)))

(declare-fun b!79601 () Bool)

(assert (=> b!79601 (= e!51982 (getValueByKey!137 (t!5153 (t!5153 (toList!739 lt!36004))) (_1!1097 lt!35864)))))

(declare-fun b!79599 () Bool)

(assert (=> b!79599 (= e!51981 (Some!142 (_2!1097 (h!2091 (t!5153 (toList!739 lt!36004))))))))

(declare-fun b!79600 () Bool)

(assert (=> b!79600 (= e!51981 e!51982)))

(declare-fun c!12371 () Bool)

(assert (=> b!79600 (= c!12371 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36004))) (not (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36004)))) (_1!1097 lt!35864)))))))

(assert (= (and d!19209 c!12370) b!79599))

(assert (= (and d!19209 (not c!12370)) b!79600))

(assert (= (and b!79600 c!12371) b!79601))

(assert (= (and b!79600 (not c!12371)) b!79602))

(declare-fun m!80779 () Bool)

(assert (=> b!79601 m!80779))

(assert (=> b!78426 d!19209))

(declare-fun d!19211 () Bool)

(declare-fun e!51983 () Bool)

(assert (=> d!19211 e!51983))

(declare-fun res!41560 () Bool)

(assert (=> d!19211 (=> (not res!41560) (not e!51983))))

(declare-fun lt!36966 () ListLongMap!1447)

(assert (=> d!19211 (= res!41560 (contains!742 lt!36966 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun lt!36965 () List!1507)

(assert (=> d!19211 (= lt!36966 (ListLongMap!1448 lt!36965))))

(declare-fun lt!36968 () Unit!2257)

(declare-fun lt!36967 () Unit!2257)

(assert (=> d!19211 (= lt!36968 lt!36967)))

(assert (=> d!19211 (= (getValueByKey!137 lt!36965 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19211 (= lt!36967 (lemmaContainsTupThenGetReturnValue!54 lt!36965 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19211 (= lt!36965 (insertStrictlySorted!57 (toList!739 call!7191) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19211 (= (+!105 call!7191 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) lt!36966)))

(declare-fun b!79603 () Bool)

(declare-fun res!41561 () Bool)

(assert (=> b!79603 (=> (not res!41561) (not e!51983))))

(assert (=> b!79603 (= res!41561 (= (getValueByKey!137 (toList!739 lt!36966) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(declare-fun b!79604 () Bool)

(assert (=> b!79604 (= e!51983 (contains!743 (toList!739 lt!36966) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!19211 res!41560) b!79603))

(assert (= (and b!79603 res!41561) b!79604))

(declare-fun m!80781 () Bool)

(assert (=> d!19211 m!80781))

(declare-fun m!80783 () Bool)

(assert (=> d!19211 m!80783))

(declare-fun m!80785 () Bool)

(assert (=> d!19211 m!80785))

(declare-fun m!80787 () Bool)

(assert (=> d!19211 m!80787))

(declare-fun m!80789 () Bool)

(assert (=> b!79603 m!80789))

(declare-fun m!80791 () Bool)

(assert (=> b!79604 m!80791))

(assert (=> b!78292 d!19211))

(assert (=> b!78640 d!18989))

(assert (=> b!78640 d!18659))

(declare-fun d!19213 () Bool)

(declare-fun e!51984 () Bool)

(assert (=> d!19213 e!51984))

(declare-fun res!41562 () Bool)

(assert (=> d!19213 (=> res!41562 e!51984)))

(declare-fun lt!36972 () Bool)

(assert (=> d!19213 (= res!41562 (not lt!36972))))

(declare-fun lt!36969 () Bool)

(assert (=> d!19213 (= lt!36972 lt!36969)))

(declare-fun lt!36970 () Unit!2257)

(declare-fun e!51985 () Unit!2257)

(assert (=> d!19213 (= lt!36970 e!51985)))

(declare-fun c!12372 () Bool)

(assert (=> d!19213 (= c!12372 lt!36969)))

(assert (=> d!19213 (= lt!36969 (containsKey!141 (toList!739 lt!36407) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!19213 (= (contains!742 lt!36407 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36972)))

(declare-fun b!79605 () Bool)

(declare-fun lt!36971 () Unit!2257)

(assert (=> b!79605 (= e!51985 lt!36971)))

(assert (=> b!79605 (= lt!36971 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36407) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> b!79605 (isDefined!90 (getValueByKey!137 (toList!739 lt!36407) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79606 () Bool)

(declare-fun Unit!2312 () Unit!2257)

(assert (=> b!79606 (= e!51985 Unit!2312)))

(declare-fun b!79607 () Bool)

(assert (=> b!79607 (= e!51984 (isDefined!90 (getValueByKey!137 (toList!739 lt!36407) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!19213 c!12372) b!79605))

(assert (= (and d!19213 (not c!12372)) b!79606))

(assert (= (and d!19213 (not res!41562)) b!79607))

(declare-fun m!80793 () Bool)

(assert (=> d!19213 m!80793))

(declare-fun m!80795 () Bool)

(assert (=> b!79605 m!80795))

(assert (=> b!79605 m!79081))

(assert (=> b!79605 m!79081))

(declare-fun m!80797 () Bool)

(assert (=> b!79605 m!80797))

(assert (=> b!79607 m!79081))

(assert (=> b!79607 m!79081))

(assert (=> b!79607 m!80797))

(assert (=> d!18657 d!19213))

(declare-fun b!79611 () Bool)

(declare-fun e!51987 () Option!143)

(assert (=> b!79611 (= e!51987 None!141)))

(declare-fun d!19215 () Bool)

(declare-fun c!12373 () Bool)

(assert (=> d!19215 (= c!12373 (and ((_ is Cons!1503) lt!36406) (= (_1!1097 (h!2091 lt!36406)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51986 () Option!143)

(assert (=> d!19215 (= (getValueByKey!137 lt!36406 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!51986)))

(declare-fun b!79610 () Bool)

(assert (=> b!79610 (= e!51987 (getValueByKey!137 (t!5153 lt!36406) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79608 () Bool)

(assert (=> b!79608 (= e!51986 (Some!142 (_2!1097 (h!2091 lt!36406))))))

(declare-fun b!79609 () Bool)

(assert (=> b!79609 (= e!51986 e!51987)))

(declare-fun c!12374 () Bool)

(assert (=> b!79609 (= c!12374 (and ((_ is Cons!1503) lt!36406) (not (= (_1!1097 (h!2091 lt!36406)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19215 c!12373) b!79608))

(assert (= (and d!19215 (not c!12373)) b!79609))

(assert (= (and b!79609 c!12374) b!79610))

(assert (= (and b!79609 (not c!12374)) b!79611))

(declare-fun m!80799 () Bool)

(assert (=> b!79610 m!80799))

(assert (=> d!18657 d!19215))

(declare-fun d!19217 () Bool)

(assert (=> d!19217 (= (getValueByKey!137 lt!36406 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!36973 () Unit!2257)

(assert (=> d!19217 (= lt!36973 (choose!456 lt!36406 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!51988 () Bool)

(assert (=> d!19217 e!51988))

(declare-fun res!41563 () Bool)

(assert (=> d!19217 (=> (not res!41563) (not e!51988))))

(assert (=> d!19217 (= res!41563 (isStrictlySorted!295 lt!36406))))

(assert (=> d!19217 (= (lemmaContainsTupThenGetReturnValue!54 lt!36406 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36973)))

(declare-fun b!79612 () Bool)

(declare-fun res!41564 () Bool)

(assert (=> b!79612 (=> (not res!41564) (not e!51988))))

(assert (=> b!79612 (= res!41564 (containsKey!141 lt!36406 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79613 () Bool)

(assert (=> b!79613 (= e!51988 (contains!743 lt!36406 (tuple2!2173 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!19217 res!41563) b!79612))

(assert (= (and b!79612 res!41564) b!79613))

(assert (=> d!19217 m!79075))

(declare-fun m!80801 () Bool)

(assert (=> d!19217 m!80801))

(declare-fun m!80803 () Bool)

(assert (=> d!19217 m!80803))

(declare-fun m!80805 () Bool)

(assert (=> b!79612 m!80805))

(declare-fun m!80807 () Bool)

(assert (=> b!79613 m!80807))

(assert (=> d!18657 d!19217))

(declare-fun c!12378 () Bool)

(declare-fun e!51989 () List!1507)

(declare-fun b!79614 () Bool)

(declare-fun c!12377 () Bool)

(assert (=> b!79614 (= e!51989 (ite c!12378 (t!5153 (toList!739 call!7106)) (ite c!12377 (Cons!1503 (h!2091 (toList!739 call!7106)) (t!5153 (toList!739 call!7106))) Nil!1504)))))

(declare-fun b!79615 () Bool)

(declare-fun e!51993 () List!1507)

(declare-fun call!7364 () List!1507)

(assert (=> b!79615 (= e!51993 call!7364)))

(declare-fun bm!7359 () Bool)

(declare-fun call!7362 () List!1507)

(declare-fun call!7363 () List!1507)

(assert (=> bm!7359 (= call!7362 call!7363)))

(declare-fun b!79616 () Bool)

(assert (=> b!79616 (= c!12377 (and ((_ is Cons!1503) (toList!739 call!7106)) (bvsgt (_1!1097 (h!2091 (toList!739 call!7106))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51991 () List!1507)

(declare-fun e!51990 () List!1507)

(assert (=> b!79616 (= e!51991 e!51990)))

(declare-fun b!79617 () Bool)

(assert (=> b!79617 (= e!51989 (insertStrictlySorted!57 (t!5153 (toList!739 call!7106)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79618 () Bool)

(declare-fun res!41566 () Bool)

(declare-fun e!51992 () Bool)

(assert (=> b!79618 (=> (not res!41566) (not e!51992))))

(declare-fun lt!36974 () List!1507)

(assert (=> b!79618 (= res!41566 (containsKey!141 lt!36974 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun c!12375 () Bool)

(declare-fun bm!7360 () Bool)

(assert (=> bm!7360 (= call!7364 ($colon$colon!69 e!51989 (ite c!12375 (h!2091 (toList!739 call!7106)) (tuple2!2173 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun c!12376 () Bool)

(assert (=> bm!7360 (= c!12376 c!12375)))

(declare-fun b!79619 () Bool)

(assert (=> b!79619 (= e!51993 e!51991)))

(assert (=> b!79619 (= c!12378 (and ((_ is Cons!1503) (toList!739 call!7106)) (= (_1!1097 (h!2091 (toList!739 call!7106))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79621 () Bool)

(assert (=> b!79621 (= e!51991 call!7363)))

(declare-fun b!79622 () Bool)

(assert (=> b!79622 (= e!51992 (contains!743 lt!36974 (tuple2!2173 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79620 () Bool)

(assert (=> b!79620 (= e!51990 call!7362)))

(declare-fun d!19219 () Bool)

(assert (=> d!19219 e!51992))

(declare-fun res!41565 () Bool)

(assert (=> d!19219 (=> (not res!41565) (not e!51992))))

(assert (=> d!19219 (= res!41565 (isStrictlySorted!295 lt!36974))))

(assert (=> d!19219 (= lt!36974 e!51993)))

(assert (=> d!19219 (= c!12375 (and ((_ is Cons!1503) (toList!739 call!7106)) (bvslt (_1!1097 (h!2091 (toList!739 call!7106))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!19219 (isStrictlySorted!295 (toList!739 call!7106))))

(assert (=> d!19219 (= (insertStrictlySorted!57 (toList!739 call!7106) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!36974)))

(declare-fun bm!7361 () Bool)

(assert (=> bm!7361 (= call!7363 call!7364)))

(declare-fun b!79623 () Bool)

(assert (=> b!79623 (= e!51990 call!7362)))

(assert (= (and d!19219 c!12375) b!79615))

(assert (= (and d!19219 (not c!12375)) b!79619))

(assert (= (and b!79619 c!12378) b!79621))

(assert (= (and b!79619 (not c!12378)) b!79616))

(assert (= (and b!79616 c!12377) b!79620))

(assert (= (and b!79616 (not c!12377)) b!79623))

(assert (= (or b!79620 b!79623) bm!7359))

(assert (= (or b!79621 bm!7359) bm!7361))

(assert (= (or b!79615 bm!7361) bm!7360))

(assert (= (and bm!7360 c!12376) b!79617))

(assert (= (and bm!7360 (not c!12376)) b!79614))

(assert (= (and d!19219 res!41565) b!79618))

(assert (= (and b!79618 res!41566) b!79622))

(declare-fun m!80809 () Bool)

(assert (=> b!79622 m!80809))

(declare-fun m!80811 () Bool)

(assert (=> d!19219 m!80811))

(declare-fun m!80813 () Bool)

(assert (=> d!19219 m!80813))

(declare-fun m!80815 () Bool)

(assert (=> b!79617 m!80815))

(declare-fun m!80817 () Bool)

(assert (=> b!79618 m!80817))

(declare-fun m!80819 () Bool)

(assert (=> bm!7360 m!80819))

(assert (=> d!18657 d!19219))

(declare-fun d!19221 () Bool)

(declare-fun lt!36975 () Bool)

(assert (=> d!19221 (= lt!36975 (select (content!83 (toList!739 lt!36155)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!51995 () Bool)

(assert (=> d!19221 (= lt!36975 e!51995)))

(declare-fun res!41567 () Bool)

(assert (=> d!19221 (=> (not res!41567) (not e!51995))))

(assert (=> d!19221 (= res!41567 ((_ is Cons!1503) (toList!739 lt!36155)))))

(assert (=> d!19221 (= (contains!743 (toList!739 lt!36155) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!36975)))

(declare-fun b!79624 () Bool)

(declare-fun e!51994 () Bool)

(assert (=> b!79624 (= e!51995 e!51994)))

(declare-fun res!41568 () Bool)

(assert (=> b!79624 (=> res!41568 e!51994)))

(assert (=> b!79624 (= res!41568 (= (h!2091 (toList!739 lt!36155)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!79625 () Bool)

(assert (=> b!79625 (= e!51994 (contains!743 (t!5153 (toList!739 lt!36155)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!19221 res!41567) b!79624))

(assert (= (and b!79624 (not res!41568)) b!79625))

(declare-fun m!80821 () Bool)

(assert (=> d!19221 m!80821))

(declare-fun m!80823 () Bool)

(assert (=> d!19221 m!80823))

(declare-fun m!80825 () Bool)

(assert (=> b!79625 m!80825))

(assert (=> b!78233 d!19221))

(declare-fun d!19223 () Bool)

(assert (=> d!19223 (= (get!1176 (getValueByKey!137 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2596 (getValueByKey!137 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18551 d!19223))

(declare-fun b!79629 () Bool)

(declare-fun e!51997 () Option!143)

(assert (=> b!79629 (= e!51997 None!141)))

(declare-fun d!19225 () Bool)

(declare-fun c!12379 () Bool)

(assert (=> d!19225 (= c!12379 (and ((_ is Cons!1503) (toList!739 lt!35983)) (= (_1!1097 (h!2091 (toList!739 lt!35983))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!51996 () Option!143)

(assert (=> d!19225 (= (getValueByKey!137 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!51996)))

(declare-fun b!79628 () Bool)

(assert (=> b!79628 (= e!51997 (getValueByKey!137 (t!5153 (toList!739 lt!35983)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!79626 () Bool)

(assert (=> b!79626 (= e!51996 (Some!142 (_2!1097 (h!2091 (toList!739 lt!35983)))))))

(declare-fun b!79627 () Bool)

(assert (=> b!79627 (= e!51996 e!51997)))

(declare-fun c!12380 () Bool)

(assert (=> b!79627 (= c!12380 (and ((_ is Cons!1503) (toList!739 lt!35983)) (not (= (_1!1097 (h!2091 (toList!739 lt!35983))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!19225 c!12379) b!79626))

(assert (= (and d!19225 (not c!12379)) b!79627))

(assert (= (and b!79627 c!12380) b!79628))

(assert (= (and b!79627 (not c!12380)) b!79629))

(assert (=> b!79628 m!78109))

(declare-fun m!80827 () Bool)

(assert (=> b!79628 m!80827))

(assert (=> d!18551 d!19225))

(declare-fun b!79633 () Bool)

(declare-fun e!51999 () Option!143)

(assert (=> b!79633 (= e!51999 None!141)))

(declare-fun d!19227 () Bool)

(declare-fun c!12381 () Bool)

(assert (=> d!19227 (= c!12381 (and ((_ is Cons!1503) (toList!739 lt!36407)) (= (_1!1097 (h!2091 (toList!739 lt!36407))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!51998 () Option!143)

(assert (=> d!19227 (= (getValueByKey!137 (toList!739 lt!36407) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!51998)))

(declare-fun b!79632 () Bool)

(assert (=> b!79632 (= e!51999 (getValueByKey!137 (t!5153 (toList!739 lt!36407)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79630 () Bool)

(assert (=> b!79630 (= e!51998 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36407)))))))

(declare-fun b!79631 () Bool)

(assert (=> b!79631 (= e!51998 e!51999)))

(declare-fun c!12382 () Bool)

(assert (=> b!79631 (= c!12382 (and ((_ is Cons!1503) (toList!739 lt!36407)) (not (= (_1!1097 (h!2091 (toList!739 lt!36407))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19227 c!12381) b!79630))

(assert (= (and d!19227 (not c!12381)) b!79631))

(assert (= (and b!79631 c!12382) b!79632))

(assert (= (and b!79631 (not c!12382)) b!79633))

(declare-fun m!80829 () Bool)

(assert (=> b!79632 m!80829))

(assert (=> b!78610 d!19227))

(declare-fun d!19229 () Bool)

(declare-fun lt!36976 () Bool)

(assert (=> d!19229 (= lt!36976 (select (content!83 lt!36032) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun e!52001 () Bool)

(assert (=> d!19229 (= lt!36976 e!52001)))

(declare-fun res!41569 () Bool)

(assert (=> d!19229 (=> (not res!41569) (not e!52001))))

(assert (=> d!19229 (= res!41569 ((_ is Cons!1503) lt!36032))))

(assert (=> d!19229 (= (contains!743 lt!36032 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))) lt!36976)))

(declare-fun b!79634 () Bool)

(declare-fun e!52000 () Bool)

(assert (=> b!79634 (= e!52001 e!52000)))

(declare-fun res!41570 () Bool)

(assert (=> b!79634 (=> res!41570 e!52000)))

(assert (=> b!79634 (= res!41570 (= (h!2091 lt!36032) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!79635 () Bool)

(assert (=> b!79635 (= e!52000 (contains!743 (t!5153 lt!36032) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(assert (= (and d!19229 res!41569) b!79634))

(assert (= (and b!79634 (not res!41570)) b!79635))

(declare-fun m!80831 () Bool)

(assert (=> d!19229 m!80831))

(declare-fun m!80833 () Bool)

(assert (=> d!19229 m!80833))

(declare-fun m!80835 () Bool)

(assert (=> b!79635 m!80835))

(assert (=> b!78410 d!19229))

(declare-fun d!19231 () Bool)

(assert (=> d!19231 (isDefined!90 (getValueByKey!137 (toList!739 lt!36004) (_1!1097 lt!35864)))))

(declare-fun lt!36977 () Unit!2257)

(assert (=> d!19231 (= lt!36977 (choose!465 (toList!739 lt!36004) (_1!1097 lt!35864)))))

(declare-fun e!52002 () Bool)

(assert (=> d!19231 e!52002))

(declare-fun res!41571 () Bool)

(assert (=> d!19231 (=> (not res!41571) (not e!52002))))

(assert (=> d!19231 (= res!41571 (isStrictlySorted!295 (toList!739 lt!36004)))))

(assert (=> d!19231 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36004) (_1!1097 lt!35864)) lt!36977)))

(declare-fun b!79636 () Bool)

(assert (=> b!79636 (= e!52002 (containsKey!141 (toList!739 lt!36004) (_1!1097 lt!35864)))))

(assert (= (and d!19231 res!41571) b!79636))

(assert (=> d!19231 m!78165))

(assert (=> d!19231 m!78165))

(assert (=> d!19231 m!79255))

(declare-fun m!80837 () Bool)

(assert (=> d!19231 m!80837))

(declare-fun m!80839 () Bool)

(assert (=> d!19231 m!80839))

(assert (=> b!79636 m!79251))

(assert (=> b!78738 d!19231))

(declare-fun d!19233 () Bool)

(assert (=> d!19233 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!36004) (_1!1097 lt!35864))) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!36004) (_1!1097 lt!35864)))))))

(declare-fun bs!3371 () Bool)

(assert (= bs!3371 d!19233))

(assert (=> bs!3371 m!78165))

(declare-fun m!80841 () Bool)

(assert (=> bs!3371 m!80841))

(assert (=> b!78738 d!19233))

(assert (=> b!78738 d!18569))

(declare-fun d!19235 () Bool)

(declare-fun e!52003 () Bool)

(assert (=> d!19235 e!52003))

(declare-fun res!41572 () Bool)

(assert (=> d!19235 (=> res!41572 e!52003)))

(declare-fun lt!36981 () Bool)

(assert (=> d!19235 (= res!41572 (not lt!36981))))

(declare-fun lt!36978 () Bool)

(assert (=> d!19235 (= lt!36981 lt!36978)))

(declare-fun lt!36979 () Unit!2257)

(declare-fun e!52004 () Unit!2257)

(assert (=> d!19235 (= lt!36979 e!52004)))

(declare-fun c!12383 () Bool)

(assert (=> d!19235 (= c!12383 lt!36978)))

(assert (=> d!19235 (= lt!36978 (containsKey!141 (toList!739 lt!36163) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19235 (= (contains!742 lt!36163 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!36981)))

(declare-fun b!79637 () Bool)

(declare-fun lt!36980 () Unit!2257)

(assert (=> b!79637 (= e!52004 lt!36980)))

(assert (=> b!79637 (= lt!36980 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36163) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> b!79637 (isDefined!90 (getValueByKey!137 (toList!739 lt!36163) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79638 () Bool)

(declare-fun Unit!2313 () Unit!2257)

(assert (=> b!79638 (= e!52004 Unit!2313)))

(declare-fun b!79639 () Bool)

(assert (=> b!79639 (= e!52003 (isDefined!90 (getValueByKey!137 (toList!739 lt!36163) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (= (and d!19235 c!12383) b!79637))

(assert (= (and d!19235 (not c!12383)) b!79638))

(assert (= (and d!19235 (not res!41572)) b!79639))

(declare-fun m!80843 () Bool)

(assert (=> d!19235 m!80843))

(declare-fun m!80845 () Bool)

(assert (=> b!79637 m!80845))

(assert (=> b!79637 m!78393))

(assert (=> b!79637 m!78393))

(declare-fun m!80847 () Bool)

(assert (=> b!79637 m!80847))

(assert (=> b!79639 m!78393))

(assert (=> b!79639 m!78393))

(assert (=> b!79639 m!80847))

(assert (=> d!18485 d!19235))

(declare-fun b!79643 () Bool)

(declare-fun e!52006 () Option!143)

(assert (=> b!79643 (= e!52006 None!141)))

(declare-fun c!12384 () Bool)

(declare-fun d!19237 () Bool)

(assert (=> d!19237 (= c!12384 (and ((_ is Cons!1503) lt!36162) (= (_1!1097 (h!2091 lt!36162)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52005 () Option!143)

(assert (=> d!19237 (= (getValueByKey!137 lt!36162 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) e!52005)))

(declare-fun b!79642 () Bool)

(assert (=> b!79642 (= e!52006 (getValueByKey!137 (t!5153 lt!36162) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79640 () Bool)

(assert (=> b!79640 (= e!52005 (Some!142 (_2!1097 (h!2091 lt!36162))))))

(declare-fun b!79641 () Bool)

(assert (=> b!79641 (= e!52005 e!52006)))

(declare-fun c!12385 () Bool)

(assert (=> b!79641 (= c!12385 (and ((_ is Cons!1503) lt!36162) (not (= (_1!1097 (h!2091 lt!36162)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19237 c!12384) b!79640))

(assert (= (and d!19237 (not c!12384)) b!79641))

(assert (= (and b!79641 c!12385) b!79642))

(assert (= (and b!79641 (not c!12385)) b!79643))

(declare-fun m!80849 () Bool)

(assert (=> b!79642 m!80849))

(assert (=> d!18485 d!19237))

(declare-fun d!19239 () Bool)

(assert (=> d!19239 (= (getValueByKey!137 lt!36162 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!36982 () Unit!2257)

(assert (=> d!19239 (= lt!36982 (choose!456 lt!36162 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun e!52007 () Bool)

(assert (=> d!19239 e!52007))

(declare-fun res!41573 () Bool)

(assert (=> d!19239 (=> (not res!41573) (not e!52007))))

(assert (=> d!19239 (= res!41573 (isStrictlySorted!295 lt!36162))))

(assert (=> d!19239 (= (lemmaContainsTupThenGetReturnValue!54 lt!36162 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!36982)))

(declare-fun b!79644 () Bool)

(declare-fun res!41574 () Bool)

(assert (=> b!79644 (=> (not res!41574) (not e!52007))))

(assert (=> b!79644 (= res!41574 (containsKey!141 lt!36162 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79645 () Bool)

(assert (=> b!79645 (= e!52007 (contains!743 lt!36162 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (= (and d!19239 res!41573) b!79644))

(assert (= (and b!79644 res!41574) b!79645))

(assert (=> d!19239 m!78387))

(declare-fun m!80851 () Bool)

(assert (=> d!19239 m!80851))

(declare-fun m!80853 () Bool)

(assert (=> d!19239 m!80853))

(declare-fun m!80855 () Bool)

(assert (=> b!79644 m!80855))

(declare-fun m!80857 () Bool)

(assert (=> b!79645 m!80857))

(assert (=> d!18485 d!19239))

(declare-fun c!12388 () Bool)

(declare-fun e!52008 () List!1507)

(declare-fun c!12389 () Bool)

(declare-fun b!79646 () Bool)

(assert (=> b!79646 (= e!52008 (ite c!12389 (t!5153 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (ite c!12388 (Cons!1503 (h!2091 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (t!5153 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))) Nil!1504)))))

(declare-fun b!79647 () Bool)

(declare-fun e!52012 () List!1507)

(declare-fun call!7367 () List!1507)

(assert (=> b!79647 (= e!52012 call!7367)))

(declare-fun bm!7362 () Bool)

(declare-fun call!7365 () List!1507)

(declare-fun call!7366 () List!1507)

(assert (=> bm!7362 (= call!7365 call!7366)))

(declare-fun b!79648 () Bool)

(assert (=> b!79648 (= c!12388 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (bvsgt (_1!1097 (h!2091 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52010 () List!1507)

(declare-fun e!52009 () List!1507)

(assert (=> b!79648 (= e!52010 e!52009)))

(declare-fun b!79649 () Bool)

(assert (=> b!79649 (= e!52008 (insertStrictlySorted!57 (t!5153 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79650 () Bool)

(declare-fun res!41576 () Bool)

(declare-fun e!52011 () Bool)

(assert (=> b!79650 (=> (not res!41576) (not e!52011))))

(declare-fun lt!36983 () List!1507)

(assert (=> b!79650 (= res!41576 (containsKey!141 lt!36983 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun c!12386 () Bool)

(declare-fun bm!7363 () Bool)

(assert (=> bm!7363 (= call!7367 ($colon$colon!69 e!52008 (ite c!12386 (h!2091 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun c!12387 () Bool)

(assert (=> bm!7363 (= c!12387 c!12386)))

(declare-fun b!79651 () Bool)

(assert (=> b!79651 (= e!52012 e!52010)))

(assert (=> b!79651 (= c!12389 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79653 () Bool)

(assert (=> b!79653 (= e!52010 call!7366)))

(declare-fun b!79654 () Bool)

(assert (=> b!79654 (= e!52011 (contains!743 lt!36983 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79652 () Bool)

(assert (=> b!79652 (= e!52009 call!7365)))

(declare-fun d!19241 () Bool)

(assert (=> d!19241 e!52011))

(declare-fun res!41575 () Bool)

(assert (=> d!19241 (=> (not res!41575) (not e!52011))))

(assert (=> d!19241 (= res!41575 (isStrictlySorted!295 lt!36983))))

(assert (=> d!19241 (= lt!36983 e!52012)))

(assert (=> d!19241 (= c!12386 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))) (bvslt (_1!1097 (h!2091 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (=> d!19241 (isStrictlySorted!295 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!19241 (= (insertStrictlySorted!57 (toList!739 (+!105 lt!35869 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!36983)))

(declare-fun bm!7364 () Bool)

(assert (=> bm!7364 (= call!7366 call!7367)))

(declare-fun b!79655 () Bool)

(assert (=> b!79655 (= e!52009 call!7365)))

(assert (= (and d!19241 c!12386) b!79647))

(assert (= (and d!19241 (not c!12386)) b!79651))

(assert (= (and b!79651 c!12389) b!79653))

(assert (= (and b!79651 (not c!12389)) b!79648))

(assert (= (and b!79648 c!12388) b!79652))

(assert (= (and b!79648 (not c!12388)) b!79655))

(assert (= (or b!79652 b!79655) bm!7362))

(assert (= (or b!79653 bm!7362) bm!7364))

(assert (= (or b!79647 bm!7364) bm!7363))

(assert (= (and bm!7363 c!12387) b!79649))

(assert (= (and bm!7363 (not c!12387)) b!79646))

(assert (= (and d!19241 res!41575) b!79650))

(assert (= (and b!79650 res!41576) b!79654))

(declare-fun m!80859 () Bool)

(assert (=> b!79654 m!80859))

(declare-fun m!80861 () Bool)

(assert (=> d!19241 m!80861))

(declare-fun m!80863 () Bool)

(assert (=> d!19241 m!80863))

(declare-fun m!80865 () Bool)

(assert (=> b!79649 m!80865))

(declare-fun m!80867 () Bool)

(assert (=> b!79650 m!80867))

(declare-fun m!80869 () Bool)

(assert (=> bm!7363 m!80869))

(assert (=> d!18485 d!19241))

(assert (=> b!78629 d!18861))

(assert (=> b!78576 d!19009))

(assert (=> b!78576 d!19011))

(declare-fun d!19243 () Bool)

(assert (=> d!19243 (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!36984 () Unit!2257)

(assert (=> d!19243 (= lt!36984 (choose!465 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!52013 () Bool)

(assert (=> d!19243 e!52013))

(declare-fun res!41577 () Bool)

(assert (=> d!19243 (=> (not res!41577) (not e!52013))))

(assert (=> d!19243 (= res!41577 (isStrictlySorted!295 (toList!739 lt!36021)))))

(assert (=> d!19243 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36984)))

(declare-fun b!79656 () Bool)

(assert (=> b!79656 (= e!52013 (containsKey!141 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19243 res!41577) b!79656))

(assert (=> d!19243 m!78109))

(assert (=> d!19243 m!78575))

(assert (=> d!19243 m!78575))

(assert (=> d!19243 m!78697))

(assert (=> d!19243 m!78109))

(declare-fun m!80871 () Bool)

(assert (=> d!19243 m!80871))

(assert (=> d!19243 m!79431))

(assert (=> b!79656 m!78109))

(assert (=> b!79656 m!78693))

(assert (=> b!78421 d!19243))

(declare-fun d!19245 () Bool)

(assert (=> d!19245 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3372 () Bool)

(assert (= bs!3372 d!19245))

(assert (=> bs!3372 m!78575))

(declare-fun m!80873 () Bool)

(assert (=> bs!3372 m!80873))

(assert (=> b!78421 d!19245))

(assert (=> b!78421 d!18821))

(declare-fun d!19247 () Bool)

(declare-fun res!41578 () Bool)

(declare-fun e!52014 () Bool)

(assert (=> d!19247 (=> res!41578 e!52014)))

(assert (=> d!19247 (= res!41578 (= (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!19247 (= (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!52014)))

(declare-fun b!79657 () Bool)

(declare-fun e!52015 () Bool)

(assert (=> b!79657 (= e!52014 e!52015)))

(declare-fun res!41579 () Bool)

(assert (=> b!79657 (=> (not res!41579) (not e!52015))))

(assert (=> b!79657 (= res!41579 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_keys!3932 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!79658 () Bool)

(assert (=> b!79658 (= e!52015 (arrayContainsKey!0 (_keys!3932 (v!2592 (underlying!278 thiss!992))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19247 (not res!41578)) b!79657))

(assert (= (and b!79657 res!41579) b!79658))

(assert (=> d!19247 m!80623))

(assert (=> b!79658 m!77965))

(declare-fun m!80875 () Bool)

(assert (=> b!79658 m!80875))

(assert (=> b!78758 d!19247))

(declare-fun d!19249 () Bool)

(declare-fun res!41580 () Bool)

(declare-fun e!52016 () Bool)

(assert (=> d!19249 (=> res!41580 e!52016)))

(assert (=> d!19249 (= res!41580 (= (select (arr!1895 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!19249 (= (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!52016)))

(declare-fun b!79659 () Bool)

(declare-fun e!52017 () Bool)

(assert (=> b!79659 (= e!52016 e!52017)))

(declare-fun res!41581 () Bool)

(assert (=> b!79659 (=> (not res!41581) (not e!52017))))

(assert (=> b!79659 (= res!41581 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))))))

(declare-fun b!79660 () Bool)

(assert (=> b!79660 (= e!52017 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19249 (not res!41580)) b!79659))

(assert (= (and b!79659 res!41581) b!79660))

(declare-fun m!80877 () Bool)

(assert (=> d!19249 m!80877))

(assert (=> b!79660 m!77965))

(declare-fun m!80879 () Bool)

(assert (=> b!79660 m!80879))

(assert (=> b!78332 d!19249))

(declare-fun d!19251 () Bool)

(declare-fun e!52018 () Bool)

(assert (=> d!19251 e!52018))

(declare-fun res!41582 () Bool)

(assert (=> d!19251 (=> res!41582 e!52018)))

(declare-fun lt!36988 () Bool)

(assert (=> d!19251 (= res!41582 (not lt!36988))))

(declare-fun lt!36985 () Bool)

(assert (=> d!19251 (= lt!36988 lt!36985)))

(declare-fun lt!36986 () Unit!2257)

(declare-fun e!52019 () Unit!2257)

(assert (=> d!19251 (= lt!36986 e!52019)))

(declare-fun c!12390 () Bool)

(assert (=> d!19251 (= c!12390 lt!36985)))

(assert (=> d!19251 (= lt!36985 (containsKey!141 (toList!739 lt!36246) (_1!1097 (tuple2!2173 lt!36023 lt!36026))))))

(assert (=> d!19251 (= (contains!742 lt!36246 (_1!1097 (tuple2!2173 lt!36023 lt!36026))) lt!36988)))

(declare-fun b!79661 () Bool)

(declare-fun lt!36987 () Unit!2257)

(assert (=> b!79661 (= e!52019 lt!36987)))

(assert (=> b!79661 (= lt!36987 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36246) (_1!1097 (tuple2!2173 lt!36023 lt!36026))))))

(assert (=> b!79661 (isDefined!90 (getValueByKey!137 (toList!739 lt!36246) (_1!1097 (tuple2!2173 lt!36023 lt!36026))))))

(declare-fun b!79662 () Bool)

(declare-fun Unit!2314 () Unit!2257)

(assert (=> b!79662 (= e!52019 Unit!2314)))

(declare-fun b!79663 () Bool)

(assert (=> b!79663 (= e!52018 (isDefined!90 (getValueByKey!137 (toList!739 lt!36246) (_1!1097 (tuple2!2173 lt!36023 lt!36026)))))))

(assert (= (and d!19251 c!12390) b!79661))

(assert (= (and d!19251 (not c!12390)) b!79662))

(assert (= (and d!19251 (not res!41582)) b!79663))

(declare-fun m!80881 () Bool)

(assert (=> d!19251 m!80881))

(declare-fun m!80883 () Bool)

(assert (=> b!79661 m!80883))

(assert (=> b!79661 m!78633))

(assert (=> b!79661 m!78633))

(declare-fun m!80885 () Bool)

(assert (=> b!79661 m!80885))

(assert (=> b!79663 m!78633))

(assert (=> b!79663 m!78633))

(assert (=> b!79663 m!80885))

(assert (=> d!18545 d!19251))

(declare-fun b!79667 () Bool)

(declare-fun e!52021 () Option!143)

(assert (=> b!79667 (= e!52021 None!141)))

(declare-fun c!12391 () Bool)

(declare-fun d!19253 () Bool)

(assert (=> d!19253 (= c!12391 (and ((_ is Cons!1503) lt!36245) (= (_1!1097 (h!2091 lt!36245)) (_1!1097 (tuple2!2173 lt!36023 lt!36026)))))))

(declare-fun e!52020 () Option!143)

(assert (=> d!19253 (= (getValueByKey!137 lt!36245 (_1!1097 (tuple2!2173 lt!36023 lt!36026))) e!52020)))

(declare-fun b!79666 () Bool)

(assert (=> b!79666 (= e!52021 (getValueByKey!137 (t!5153 lt!36245) (_1!1097 (tuple2!2173 lt!36023 lt!36026))))))

(declare-fun b!79664 () Bool)

(assert (=> b!79664 (= e!52020 (Some!142 (_2!1097 (h!2091 lt!36245))))))

(declare-fun b!79665 () Bool)

(assert (=> b!79665 (= e!52020 e!52021)))

(declare-fun c!12392 () Bool)

(assert (=> b!79665 (= c!12392 (and ((_ is Cons!1503) lt!36245) (not (= (_1!1097 (h!2091 lt!36245)) (_1!1097 (tuple2!2173 lt!36023 lt!36026))))))))

(assert (= (and d!19253 c!12391) b!79664))

(assert (= (and d!19253 (not c!12391)) b!79665))

(assert (= (and b!79665 c!12392) b!79666))

(assert (= (and b!79665 (not c!12392)) b!79667))

(declare-fun m!80887 () Bool)

(assert (=> b!79666 m!80887))

(assert (=> d!18545 d!19253))

(declare-fun d!19255 () Bool)

(assert (=> d!19255 (= (getValueByKey!137 lt!36245 (_1!1097 (tuple2!2173 lt!36023 lt!36026))) (Some!142 (_2!1097 (tuple2!2173 lt!36023 lt!36026))))))

(declare-fun lt!36989 () Unit!2257)

(assert (=> d!19255 (= lt!36989 (choose!456 lt!36245 (_1!1097 (tuple2!2173 lt!36023 lt!36026)) (_2!1097 (tuple2!2173 lt!36023 lt!36026))))))

(declare-fun e!52022 () Bool)

(assert (=> d!19255 e!52022))

(declare-fun res!41583 () Bool)

(assert (=> d!19255 (=> (not res!41583) (not e!52022))))

(assert (=> d!19255 (= res!41583 (isStrictlySorted!295 lt!36245))))

(assert (=> d!19255 (= (lemmaContainsTupThenGetReturnValue!54 lt!36245 (_1!1097 (tuple2!2173 lt!36023 lt!36026)) (_2!1097 (tuple2!2173 lt!36023 lt!36026))) lt!36989)))

(declare-fun b!79668 () Bool)

(declare-fun res!41584 () Bool)

(assert (=> b!79668 (=> (not res!41584) (not e!52022))))

(assert (=> b!79668 (= res!41584 (containsKey!141 lt!36245 (_1!1097 (tuple2!2173 lt!36023 lt!36026))))))

(declare-fun b!79669 () Bool)

(assert (=> b!79669 (= e!52022 (contains!743 lt!36245 (tuple2!2173 (_1!1097 (tuple2!2173 lt!36023 lt!36026)) (_2!1097 (tuple2!2173 lt!36023 lt!36026)))))))

(assert (= (and d!19255 res!41583) b!79668))

(assert (= (and b!79668 res!41584) b!79669))

(assert (=> d!19255 m!78627))

(declare-fun m!80889 () Bool)

(assert (=> d!19255 m!80889))

(declare-fun m!80891 () Bool)

(assert (=> d!19255 m!80891))

(declare-fun m!80893 () Bool)

(assert (=> b!79668 m!80893))

(declare-fun m!80895 () Bool)

(assert (=> b!79669 m!80895))

(assert (=> d!18545 d!19255))

(declare-fun b!79670 () Bool)

(declare-fun c!12395 () Bool)

(declare-fun e!52023 () List!1507)

(declare-fun c!12396 () Bool)

(assert (=> b!79670 (= e!52023 (ite c!12396 (t!5153 (toList!739 lt!36025)) (ite c!12395 (Cons!1503 (h!2091 (toList!739 lt!36025)) (t!5153 (toList!739 lt!36025))) Nil!1504)))))

(declare-fun b!79671 () Bool)

(declare-fun e!52027 () List!1507)

(declare-fun call!7370 () List!1507)

(assert (=> b!79671 (= e!52027 call!7370)))

(declare-fun bm!7365 () Bool)

(declare-fun call!7368 () List!1507)

(declare-fun call!7369 () List!1507)

(assert (=> bm!7365 (= call!7368 call!7369)))

(declare-fun b!79672 () Bool)

(assert (=> b!79672 (= c!12395 (and ((_ is Cons!1503) (toList!739 lt!36025)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!36025))) (_1!1097 (tuple2!2173 lt!36023 lt!36026)))))))

(declare-fun e!52025 () List!1507)

(declare-fun e!52024 () List!1507)

(assert (=> b!79672 (= e!52025 e!52024)))

(declare-fun b!79673 () Bool)

(assert (=> b!79673 (= e!52023 (insertStrictlySorted!57 (t!5153 (toList!739 lt!36025)) (_1!1097 (tuple2!2173 lt!36023 lt!36026)) (_2!1097 (tuple2!2173 lt!36023 lt!36026))))))

(declare-fun b!79674 () Bool)

(declare-fun res!41586 () Bool)

(declare-fun e!52026 () Bool)

(assert (=> b!79674 (=> (not res!41586) (not e!52026))))

(declare-fun lt!36990 () List!1507)

(assert (=> b!79674 (= res!41586 (containsKey!141 lt!36990 (_1!1097 (tuple2!2173 lt!36023 lt!36026))))))

(declare-fun bm!7366 () Bool)

(declare-fun c!12393 () Bool)

(assert (=> bm!7366 (= call!7370 ($colon$colon!69 e!52023 (ite c!12393 (h!2091 (toList!739 lt!36025)) (tuple2!2173 (_1!1097 (tuple2!2173 lt!36023 lt!36026)) (_2!1097 (tuple2!2173 lt!36023 lt!36026))))))))

(declare-fun c!12394 () Bool)

(assert (=> bm!7366 (= c!12394 c!12393)))

(declare-fun b!79675 () Bool)

(assert (=> b!79675 (= e!52027 e!52025)))

(assert (=> b!79675 (= c!12396 (and ((_ is Cons!1503) (toList!739 lt!36025)) (= (_1!1097 (h!2091 (toList!739 lt!36025))) (_1!1097 (tuple2!2173 lt!36023 lt!36026)))))))

(declare-fun b!79677 () Bool)

(assert (=> b!79677 (= e!52025 call!7369)))

(declare-fun b!79678 () Bool)

(assert (=> b!79678 (= e!52026 (contains!743 lt!36990 (tuple2!2173 (_1!1097 (tuple2!2173 lt!36023 lt!36026)) (_2!1097 (tuple2!2173 lt!36023 lt!36026)))))))

(declare-fun b!79676 () Bool)

(assert (=> b!79676 (= e!52024 call!7368)))

(declare-fun d!19257 () Bool)

(assert (=> d!19257 e!52026))

(declare-fun res!41585 () Bool)

(assert (=> d!19257 (=> (not res!41585) (not e!52026))))

(assert (=> d!19257 (= res!41585 (isStrictlySorted!295 lt!36990))))

(assert (=> d!19257 (= lt!36990 e!52027)))

(assert (=> d!19257 (= c!12393 (and ((_ is Cons!1503) (toList!739 lt!36025)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36025))) (_1!1097 (tuple2!2173 lt!36023 lt!36026)))))))

(assert (=> d!19257 (isStrictlySorted!295 (toList!739 lt!36025))))

(assert (=> d!19257 (= (insertStrictlySorted!57 (toList!739 lt!36025) (_1!1097 (tuple2!2173 lt!36023 lt!36026)) (_2!1097 (tuple2!2173 lt!36023 lt!36026))) lt!36990)))

(declare-fun bm!7367 () Bool)

(assert (=> bm!7367 (= call!7369 call!7370)))

(declare-fun b!79679 () Bool)

(assert (=> b!79679 (= e!52024 call!7368)))

(assert (= (and d!19257 c!12393) b!79671))

(assert (= (and d!19257 (not c!12393)) b!79675))

(assert (= (and b!79675 c!12396) b!79677))

(assert (= (and b!79675 (not c!12396)) b!79672))

(assert (= (and b!79672 c!12395) b!79676))

(assert (= (and b!79672 (not c!12395)) b!79679))

(assert (= (or b!79676 b!79679) bm!7365))

(assert (= (or b!79677 bm!7365) bm!7367))

(assert (= (or b!79671 bm!7367) bm!7366))

(assert (= (and bm!7366 c!12394) b!79673))

(assert (= (and bm!7366 (not c!12394)) b!79670))

(assert (= (and d!19257 res!41585) b!79674))

(assert (= (and b!79674 res!41586) b!79678))

(declare-fun m!80897 () Bool)

(assert (=> b!79678 m!80897))

(declare-fun m!80899 () Bool)

(assert (=> d!19257 m!80899))

(declare-fun m!80901 () Bool)

(assert (=> d!19257 m!80901))

(declare-fun m!80903 () Bool)

(assert (=> b!79673 m!80903))

(declare-fun m!80905 () Bool)

(assert (=> b!79674 m!80905))

(declare-fun m!80907 () Bool)

(assert (=> bm!7366 m!80907))

(assert (=> d!18545 d!19257))

(declare-fun d!19259 () Bool)

(declare-fun res!41587 () Bool)

(declare-fun e!52028 () Bool)

(assert (=> d!19259 (=> res!41587 e!52028)))

(assert (=> d!19259 (= res!41587 (and ((_ is Cons!1503) lt!36044) (= (_1!1097 (h!2091 lt!36044)) (_1!1097 lt!35864))))))

(assert (=> d!19259 (= (containsKey!141 lt!36044 (_1!1097 lt!35864)) e!52028)))

(declare-fun b!79680 () Bool)

(declare-fun e!52029 () Bool)

(assert (=> b!79680 (= e!52028 e!52029)))

(declare-fun res!41588 () Bool)

(assert (=> b!79680 (=> (not res!41588) (not e!52029))))

(assert (=> b!79680 (= res!41588 (and (or (not ((_ is Cons!1503) lt!36044)) (bvsle (_1!1097 (h!2091 lt!36044)) (_1!1097 lt!35864))) ((_ is Cons!1503) lt!36044) (bvslt (_1!1097 (h!2091 lt!36044)) (_1!1097 lt!35864))))))

(declare-fun b!79681 () Bool)

(assert (=> b!79681 (= e!52029 (containsKey!141 (t!5153 lt!36044) (_1!1097 lt!35864)))))

(assert (= (and d!19259 (not res!41587)) b!79680))

(assert (= (and b!79680 res!41588) b!79681))

(declare-fun m!80909 () Bool)

(assert (=> b!79681 m!80909))

(assert (=> b!78645 d!19259))

(declare-fun d!19261 () Bool)

(declare-fun lt!36991 () Bool)

(assert (=> d!19261 (= lt!36991 (select (content!83 (toList!739 lt!36544)) (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun e!52031 () Bool)

(assert (=> d!19261 (= lt!36991 e!52031)))

(declare-fun res!41589 () Bool)

(assert (=> d!19261 (=> (not res!41589) (not e!52031))))

(assert (=> d!19261 (= res!41589 ((_ is Cons!1503) (toList!739 lt!36544)))))

(assert (=> d!19261 (= (contains!743 (toList!739 lt!36544) (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!36991)))

(declare-fun b!79682 () Bool)

(declare-fun e!52030 () Bool)

(assert (=> b!79682 (= e!52031 e!52030)))

(declare-fun res!41590 () Bool)

(assert (=> b!79682 (=> res!41590 e!52030)))

(assert (=> b!79682 (= res!41590 (= (h!2091 (toList!739 lt!36544)) (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79683 () Bool)

(assert (=> b!79683 (= e!52030 (contains!743 (t!5153 (toList!739 lt!36544)) (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (= (and d!19261 res!41589) b!79682))

(assert (= (and b!79682 (not res!41590)) b!79683))

(declare-fun m!80911 () Bool)

(assert (=> d!19261 m!80911))

(declare-fun m!80913 () Bool)

(assert (=> d!19261 m!80913))

(declare-fun m!80915 () Bool)

(assert (=> b!79683 m!80915))

(assert (=> b!78779 d!19261))

(declare-fun d!19263 () Bool)

(assert (=> d!19263 (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!36992 () Unit!2257)

(assert (=> d!19263 (= lt!36992 (choose!465 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!52032 () Bool)

(assert (=> d!19263 e!52032))

(declare-fun res!41591 () Bool)

(assert (=> d!19263 (=> (not res!41591) (not e!52032))))

(assert (=> d!19263 (= res!41591 (isStrictlySorted!295 (toList!739 lt!35983)))))

(assert (=> d!19263 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36992)))

(declare-fun b!79684 () Bool)

(assert (=> b!79684 (= e!52032 (containsKey!141 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19263 res!41591) b!79684))

(assert (=> d!19263 m!78109))

(assert (=> d!19263 m!78429))

(assert (=> d!19263 m!78429))

(assert (=> d!19263 m!78431))

(assert (=> d!19263 m!78109))

(declare-fun m!80917 () Bool)

(assert (=> d!19263 m!80917))

(assert (=> d!19263 m!80659))

(assert (=> b!79684 m!78109))

(assert (=> b!79684 m!78425))

(assert (=> b!78258 d!19263))

(declare-fun d!19265 () Bool)

(assert (=> d!19265 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3373 () Bool)

(assert (= bs!3373 d!19265))

(assert (=> bs!3373 m!78429))

(declare-fun m!80919 () Bool)

(assert (=> bs!3373 m!80919))

(assert (=> b!78258 d!19265))

(assert (=> b!78258 d!19225))

(declare-fun d!19267 () Bool)

(declare-fun res!41592 () Bool)

(declare-fun e!52033 () Bool)

(assert (=> d!19267 (=> res!41592 e!52033)))

(assert (=> d!19267 (= res!41592 (and ((_ is Cons!1503) lt!36536) (= (_1!1097 (h!2091 lt!36536)) (_1!1097 lt!35864))))))

(assert (=> d!19267 (= (containsKey!141 lt!36536 (_1!1097 lt!35864)) e!52033)))

(declare-fun b!79685 () Bool)

(declare-fun e!52034 () Bool)

(assert (=> b!79685 (= e!52033 e!52034)))

(declare-fun res!41593 () Bool)

(assert (=> b!79685 (=> (not res!41593) (not e!52034))))

(assert (=> b!79685 (= res!41593 (and (or (not ((_ is Cons!1503) lt!36536)) (bvsle (_1!1097 (h!2091 lt!36536)) (_1!1097 lt!35864))) ((_ is Cons!1503) lt!36536) (bvslt (_1!1097 (h!2091 lt!36536)) (_1!1097 lt!35864))))))

(declare-fun b!79686 () Bool)

(assert (=> b!79686 (= e!52034 (containsKey!141 (t!5153 lt!36536) (_1!1097 lt!35864)))))

(assert (= (and d!19267 (not res!41592)) b!79685))

(assert (= (and b!79685 res!41593) b!79686))

(declare-fun m!80921 () Bool)

(assert (=> b!79686 m!80921))

(assert (=> b!78751 d!19267))

(declare-fun b!79690 () Bool)

(declare-fun e!52036 () Option!143)

(assert (=> b!79690 (= e!52036 None!141)))

(declare-fun d!19269 () Bool)

(declare-fun c!12397 () Bool)

(assert (=> d!19269 (= c!12397 (and ((_ is Cons!1503) (t!5153 lt!36003)) (= (_1!1097 (h!2091 (t!5153 lt!36003))) (_1!1097 lt!35864))))))

(declare-fun e!52035 () Option!143)

(assert (=> d!19269 (= (getValueByKey!137 (t!5153 lt!36003) (_1!1097 lt!35864)) e!52035)))

(declare-fun b!79689 () Bool)

(assert (=> b!79689 (= e!52036 (getValueByKey!137 (t!5153 (t!5153 lt!36003)) (_1!1097 lt!35864)))))

(declare-fun b!79687 () Bool)

(assert (=> b!79687 (= e!52035 (Some!142 (_2!1097 (h!2091 (t!5153 lt!36003)))))))

(declare-fun b!79688 () Bool)

(assert (=> b!79688 (= e!52035 e!52036)))

(declare-fun c!12398 () Bool)

(assert (=> b!79688 (= c!12398 (and ((_ is Cons!1503) (t!5153 lt!36003)) (not (= (_1!1097 (h!2091 (t!5153 lt!36003))) (_1!1097 lt!35864)))))))

(assert (= (and d!19269 c!12397) b!79687))

(assert (= (and d!19269 (not c!12397)) b!79688))

(assert (= (and b!79688 c!12398) b!79689))

(assert (= (and b!79688 (not c!12398)) b!79690))

(declare-fun m!80923 () Bool)

(assert (=> b!79689 m!80923))

(assert (=> b!78743 d!19269))

(assert (=> d!18587 d!18597))

(assert (=> d!18587 d!18601))

(assert (=> d!18587 d!18585))

(declare-fun d!19271 () Bool)

(declare-fun e!52037 () Bool)

(assert (=> d!19271 e!52037))

(declare-fun res!41594 () Bool)

(assert (=> d!19271 (=> res!41594 e!52037)))

(declare-fun lt!36996 () Bool)

(assert (=> d!19271 (= res!41594 (not lt!36996))))

(declare-fun lt!36993 () Bool)

(assert (=> d!19271 (= lt!36996 lt!36993)))

(declare-fun lt!36994 () Unit!2257)

(declare-fun e!52038 () Unit!2257)

(assert (=> d!19271 (= lt!36994 e!52038)))

(declare-fun c!12399 () Bool)

(assert (=> d!19271 (= c!12399 lt!36993)))

(assert (=> d!19271 (= lt!36993 (containsKey!141 (toList!739 lt!35970) lt!35976))))

(assert (=> d!19271 (= (contains!742 lt!35970 lt!35976) lt!36996)))

(declare-fun b!79691 () Bool)

(declare-fun lt!36995 () Unit!2257)

(assert (=> b!79691 (= e!52038 lt!36995)))

(assert (=> b!79691 (= lt!36995 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35970) lt!35976))))

(assert (=> b!79691 (isDefined!90 (getValueByKey!137 (toList!739 lt!35970) lt!35976))))

(declare-fun b!79692 () Bool)

(declare-fun Unit!2315 () Unit!2257)

(assert (=> b!79692 (= e!52038 Unit!2315)))

(declare-fun b!79693 () Bool)

(assert (=> b!79693 (= e!52037 (isDefined!90 (getValueByKey!137 (toList!739 lt!35970) lt!35976)))))

(assert (= (and d!19271 c!12399) b!79691))

(assert (= (and d!19271 (not c!12399)) b!79692))

(assert (= (and d!19271 (not res!41594)) b!79693))

(declare-fun m!80925 () Bool)

(assert (=> d!19271 m!80925))

(declare-fun m!80927 () Bool)

(assert (=> b!79691 m!80927))

(assert (=> b!79691 m!78799))

(assert (=> b!79691 m!78799))

(declare-fun m!80929 () Bool)

(assert (=> b!79691 m!80929))

(assert (=> b!79693 m!78799))

(assert (=> b!79693 m!78799))

(assert (=> b!79693 m!80929))

(assert (=> d!18587 d!19271))

(declare-fun d!19273 () Bool)

(assert (=> d!19273 (= (apply!79 (+!105 lt!35970 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35976) (apply!79 lt!35970 lt!35976))))

(assert (=> d!19273 true))

(declare-fun _$34!818 () Unit!2257)

(assert (=> d!19273 (= (choose!460 lt!35970 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35976) _$34!818)))

(declare-fun bs!3374 () Bool)

(assert (= bs!3374 d!19273))

(assert (=> bs!3374 m!78103))

(assert (=> bs!3374 m!78103))

(assert (=> bs!3374 m!78105))

(assert (=> bs!3374 m!78111))

(assert (=> d!18587 d!19273))

(declare-fun b!79698 () Bool)

(declare-fun e!52040 () Option!143)

(assert (=> b!79698 (= e!52040 None!141)))

(declare-fun d!19275 () Bool)

(declare-fun c!12400 () Bool)

(assert (=> d!19275 (= c!12400 (and ((_ is Cons!1503) (toList!739 lt!36246)) (= (_1!1097 (h!2091 (toList!739 lt!36246))) (_1!1097 (tuple2!2173 lt!36023 lt!36026)))))))

(declare-fun e!52039 () Option!143)

(assert (=> d!19275 (= (getValueByKey!137 (toList!739 lt!36246) (_1!1097 (tuple2!2173 lt!36023 lt!36026))) e!52039)))

(declare-fun b!79697 () Bool)

(assert (=> b!79697 (= e!52040 (getValueByKey!137 (t!5153 (toList!739 lt!36246)) (_1!1097 (tuple2!2173 lt!36023 lt!36026))))))

(declare-fun b!79695 () Bool)

(assert (=> b!79695 (= e!52039 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36246)))))))

(declare-fun b!79696 () Bool)

(assert (=> b!79696 (= e!52039 e!52040)))

(declare-fun c!12401 () Bool)

(assert (=> b!79696 (= c!12401 (and ((_ is Cons!1503) (toList!739 lt!36246)) (not (= (_1!1097 (h!2091 (toList!739 lt!36246))) (_1!1097 (tuple2!2173 lt!36023 lt!36026))))))))

(assert (= (and d!19275 c!12400) b!79695))

(assert (= (and d!19275 (not c!12400)) b!79696))

(assert (= (and b!79696 c!12401) b!79697))

(assert (= (and b!79696 (not c!12401)) b!79698))

(declare-fun m!80931 () Bool)

(assert (=> b!79697 m!80931))

(assert (=> b!78395 d!19275))

(assert (=> b!78339 d!18465))

(declare-fun d!19277 () Bool)

(declare-fun e!52041 () Bool)

(assert (=> d!19277 e!52041))

(declare-fun res!41595 () Bool)

(assert (=> d!19277 (=> res!41595 e!52041)))

(declare-fun lt!37000 () Bool)

(assert (=> d!19277 (= res!41595 (not lt!37000))))

(declare-fun lt!36997 () Bool)

(assert (=> d!19277 (= lt!37000 lt!36997)))

(declare-fun lt!36998 () Unit!2257)

(declare-fun e!52042 () Unit!2257)

(assert (=> d!19277 (= lt!36998 e!52042)))

(declare-fun c!12402 () Bool)

(assert (=> d!19277 (= c!12402 lt!36997)))

(assert (=> d!19277 (= lt!36997 (containsKey!141 (toList!739 lt!36389) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19277 (= (contains!742 lt!36389 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) lt!37000)))

(declare-fun b!79699 () Bool)

(declare-fun lt!36999 () Unit!2257)

(assert (=> b!79699 (= e!52042 lt!36999)))

(assert (=> b!79699 (= lt!36999 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36389) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79699 (isDefined!90 (getValueByKey!137 (toList!739 lt!36389) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79700 () Bool)

(declare-fun Unit!2316 () Unit!2257)

(assert (=> b!79700 (= e!52042 Unit!2316)))

(declare-fun b!79701 () Bool)

(assert (=> b!79701 (= e!52041 (isDefined!90 (getValueByKey!137 (toList!739 lt!36389) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19277 c!12402) b!79699))

(assert (= (and d!19277 (not c!12402)) b!79700))

(assert (= (and d!19277 (not res!41595)) b!79701))

(assert (=> d!19277 m!78509))

(declare-fun m!80933 () Bool)

(assert (=> d!19277 m!80933))

(assert (=> b!79699 m!78509))

(declare-fun m!80935 () Bool)

(assert (=> b!79699 m!80935))

(assert (=> b!79699 m!78509))

(assert (=> b!79699 m!79663))

(assert (=> b!79699 m!79663))

(declare-fun m!80937 () Bool)

(assert (=> b!79699 m!80937))

(assert (=> b!79701 m!78509))

(assert (=> b!79701 m!79663))

(assert (=> b!79701 m!79663))

(assert (=> b!79701 m!80937))

(assert (=> b!78594 d!19277))

(declare-fun b!79702 () Bool)

(declare-fun e!52046 () Bool)

(declare-fun call!7371 () Bool)

(assert (=> b!79702 (= e!52046 call!7371)))

(declare-fun d!19279 () Bool)

(declare-fun res!41597 () Bool)

(declare-fun e!52043 () Bool)

(assert (=> d!19279 (=> res!41597 e!52043)))

(assert (=> d!19279 (= res!41597 (bvsge #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36136)))))))

(assert (=> d!19279 (= (arrayNoDuplicates!0 (_keys!3932 (_2!1098 lt!36136)) #b00000000000000000000000000000000 Nil!1505) e!52043)))

(declare-fun b!79703 () Bool)

(assert (=> b!79703 (= e!52046 call!7371)))

(declare-fun b!79704 () Bool)

(declare-fun e!52045 () Bool)

(assert (=> b!79704 (= e!52045 e!52046)))

(declare-fun c!12403 () Bool)

(assert (=> b!79704 (= c!12403 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000)))))

(declare-fun b!79705 () Bool)

(declare-fun e!52044 () Bool)

(assert (=> b!79705 (= e!52044 (contains!744 Nil!1505 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000)))))

(declare-fun b!79706 () Bool)

(assert (=> b!79706 (= e!52043 e!52045)))

(declare-fun res!41598 () Bool)

(assert (=> b!79706 (=> (not res!41598) (not e!52045))))

(assert (=> b!79706 (= res!41598 (not e!52044))))

(declare-fun res!41596 () Bool)

(assert (=> b!79706 (=> (not res!41596) (not e!52044))))

(assert (=> b!79706 (= res!41596 (validKeyInArray!0 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000)))))

(declare-fun bm!7368 () Bool)

(assert (=> bm!7368 (= call!7371 (arrayNoDuplicates!0 (_keys!3932 (_2!1098 lt!36136)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12403 (Cons!1504 (select (arr!1895 (_keys!3932 (_2!1098 lt!36136))) #b00000000000000000000000000000000) Nil!1505) Nil!1505)))))

(assert (= (and d!19279 (not res!41597)) b!79706))

(assert (= (and b!79706 res!41596) b!79705))

(assert (= (and b!79706 res!41598) b!79704))

(assert (= (and b!79704 c!12403) b!79702))

(assert (= (and b!79704 (not c!12403)) b!79703))

(assert (= (or b!79702 b!79703) bm!7368))

(assert (=> b!79704 m!79525))

(assert (=> b!79704 m!79525))

(assert (=> b!79704 m!79553))

(assert (=> b!79705 m!79525))

(assert (=> b!79705 m!79525))

(declare-fun m!80939 () Bool)

(assert (=> b!79705 m!80939))

(assert (=> b!79706 m!79525))

(assert (=> b!79706 m!79525))

(assert (=> b!79706 m!79553))

(assert (=> bm!7368 m!79525))

(declare-fun m!80941 () Bool)

(assert (=> bm!7368 m!80941))

(assert (=> b!78775 d!19279))

(declare-fun d!19281 () Bool)

(declare-fun e!52047 () Bool)

(assert (=> d!19281 e!52047))

(declare-fun res!41599 () Bool)

(assert (=> d!19281 (=> res!41599 e!52047)))

(declare-fun lt!37004 () Bool)

(assert (=> d!19281 (= res!41599 (not lt!37004))))

(declare-fun lt!37001 () Bool)

(assert (=> d!19281 (= lt!37004 lt!37001)))

(declare-fun lt!37002 () Unit!2257)

(declare-fun e!52048 () Unit!2257)

(assert (=> d!19281 (= lt!37002 e!52048)))

(declare-fun c!12404 () Bool)

(assert (=> d!19281 (= c!12404 lt!37001)))

(assert (=> d!19281 (= lt!37001 (containsKey!141 (toList!739 lt!36155) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!19281 (= (contains!742 lt!36155 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37004)))

(declare-fun b!79707 () Bool)

(declare-fun lt!37003 () Unit!2257)

(assert (=> b!79707 (= e!52048 lt!37003)))

(assert (=> b!79707 (= lt!37003 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36155) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> b!79707 (isDefined!90 (getValueByKey!137 (toList!739 lt!36155) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79708 () Bool)

(declare-fun Unit!2317 () Unit!2257)

(assert (=> b!79708 (= e!52048 Unit!2317)))

(declare-fun b!79709 () Bool)

(assert (=> b!79709 (= e!52047 (isDefined!90 (getValueByKey!137 (toList!739 lt!36155) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!19281 c!12404) b!79707))

(assert (= (and d!19281 (not c!12404)) b!79708))

(assert (= (and d!19281 (not res!41599)) b!79709))

(declare-fun m!80943 () Bool)

(assert (=> d!19281 m!80943))

(declare-fun m!80945 () Bool)

(assert (=> b!79707 m!80945))

(assert (=> b!79707 m!78369))

(assert (=> b!79707 m!78369))

(declare-fun m!80947 () Bool)

(assert (=> b!79707 m!80947))

(assert (=> b!79709 m!78369))

(assert (=> b!79709 m!78369))

(assert (=> b!79709 m!80947))

(assert (=> d!18479 d!19281))

(declare-fun b!79713 () Bool)

(declare-fun e!52050 () Option!143)

(assert (=> b!79713 (= e!52050 None!141)))

(declare-fun d!19283 () Bool)

(declare-fun c!12405 () Bool)

(assert (=> d!19283 (= c!12405 (and ((_ is Cons!1503) lt!36154) (= (_1!1097 (h!2091 lt!36154)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52049 () Option!143)

(assert (=> d!19283 (= (getValueByKey!137 lt!36154 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!52049)))

(declare-fun b!79712 () Bool)

(assert (=> b!79712 (= e!52050 (getValueByKey!137 (t!5153 lt!36154) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79710 () Bool)

(assert (=> b!79710 (= e!52049 (Some!142 (_2!1097 (h!2091 lt!36154))))))

(declare-fun b!79711 () Bool)

(assert (=> b!79711 (= e!52049 e!52050)))

(declare-fun c!12406 () Bool)

(assert (=> b!79711 (= c!12406 (and ((_ is Cons!1503) lt!36154) (not (= (_1!1097 (h!2091 lt!36154)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19283 c!12405) b!79710))

(assert (= (and d!19283 (not c!12405)) b!79711))

(assert (= (and b!79711 c!12406) b!79712))

(assert (= (and b!79711 (not c!12406)) b!79713))

(declare-fun m!80949 () Bool)

(assert (=> b!79712 m!80949))

(assert (=> d!18479 d!19283))

(declare-fun d!19285 () Bool)

(assert (=> d!19285 (= (getValueByKey!137 lt!36154 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!37005 () Unit!2257)

(assert (=> d!19285 (= lt!37005 (choose!456 lt!36154 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!52051 () Bool)

(assert (=> d!19285 e!52051))

(declare-fun res!41600 () Bool)

(assert (=> d!19285 (=> (not res!41600) (not e!52051))))

(assert (=> d!19285 (= res!41600 (isStrictlySorted!295 lt!36154))))

(assert (=> d!19285 (= (lemmaContainsTupThenGetReturnValue!54 lt!36154 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37005)))

(declare-fun b!79714 () Bool)

(declare-fun res!41601 () Bool)

(assert (=> b!79714 (=> (not res!41601) (not e!52051))))

(assert (=> b!79714 (= res!41601 (containsKey!141 lt!36154 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79715 () Bool)

(assert (=> b!79715 (= e!52051 (contains!743 lt!36154 (tuple2!2173 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!19285 res!41600) b!79714))

(assert (= (and b!79714 res!41601) b!79715))

(assert (=> d!19285 m!78363))

(declare-fun m!80951 () Bool)

(assert (=> d!19285 m!80951))

(declare-fun m!80953 () Bool)

(assert (=> d!19285 m!80953))

(declare-fun m!80955 () Bool)

(assert (=> b!79714 m!80955))

(declare-fun m!80957 () Bool)

(assert (=> b!79715 m!80957))

(assert (=> d!18479 d!19285))

(declare-fun b!79716 () Bool)

(declare-fun c!12410 () Bool)

(declare-fun e!52052 () List!1507)

(declare-fun c!12409 () Bool)

(assert (=> b!79716 (= e!52052 (ite c!12410 (t!5153 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (ite c!12409 (Cons!1503 (h!2091 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (t!5153 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))) Nil!1504)))))

(declare-fun b!79717 () Bool)

(declare-fun e!52056 () List!1507)

(declare-fun call!7374 () List!1507)

(assert (=> b!79717 (= e!52056 call!7374)))

(declare-fun bm!7369 () Bool)

(declare-fun call!7372 () List!1507)

(declare-fun call!7373 () List!1507)

(assert (=> bm!7369 (= call!7372 call!7373)))

(declare-fun b!79718 () Bool)

(assert (=> b!79718 (= c!12409 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (bvsgt (_1!1097 (h!2091 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52054 () List!1507)

(declare-fun e!52053 () List!1507)

(assert (=> b!79718 (= e!52054 e!52053)))

(declare-fun b!79719 () Bool)

(assert (=> b!79719 (= e!52052 (insertStrictlySorted!57 (t!5153 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79720 () Bool)

(declare-fun res!41603 () Bool)

(declare-fun e!52055 () Bool)

(assert (=> b!79720 (=> (not res!41603) (not e!52055))))

(declare-fun lt!37006 () List!1507)

(assert (=> b!79720 (= res!41603 (containsKey!141 lt!37006 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun c!12407 () Bool)

(declare-fun bm!7370 () Bool)

(assert (=> bm!7370 (= call!7374 ($colon$colon!69 e!52052 (ite c!12407 (h!2091 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (tuple2!2173 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun c!12408 () Bool)

(assert (=> bm!7370 (= c!12408 c!12407)))

(declare-fun b!79721 () Bool)

(assert (=> b!79721 (= e!52056 e!52054)))

(assert (=> b!79721 (= c!12410 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79723 () Bool)

(assert (=> b!79723 (= e!52054 call!7373)))

(declare-fun b!79724 () Bool)

(assert (=> b!79724 (= e!52055 (contains!743 lt!37006 (tuple2!2173 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79722 () Bool)

(assert (=> b!79722 (= e!52053 call!7372)))

(declare-fun d!19287 () Bool)

(assert (=> d!19287 e!52055))

(declare-fun res!41602 () Bool)

(assert (=> d!19287 (=> (not res!41602) (not e!52055))))

(assert (=> d!19287 (= res!41602 (isStrictlySorted!295 lt!37006))))

(assert (=> d!19287 (= lt!37006 e!52056)))

(assert (=> d!19287 (= c!12407 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (bvslt (_1!1097 (h!2091 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!19287 (isStrictlySorted!295 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19287 (= (insertStrictlySorted!57 (toList!739 (+!105 lt!35869 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37006)))

(declare-fun bm!7371 () Bool)

(assert (=> bm!7371 (= call!7373 call!7374)))

(declare-fun b!79725 () Bool)

(assert (=> b!79725 (= e!52053 call!7372)))

(assert (= (and d!19287 c!12407) b!79717))

(assert (= (and d!19287 (not c!12407)) b!79721))

(assert (= (and b!79721 c!12410) b!79723))

(assert (= (and b!79721 (not c!12410)) b!79718))

(assert (= (and b!79718 c!12409) b!79722))

(assert (= (and b!79718 (not c!12409)) b!79725))

(assert (= (or b!79722 b!79725) bm!7369))

(assert (= (or b!79723 bm!7369) bm!7371))

(assert (= (or b!79717 bm!7371) bm!7370))

(assert (= (and bm!7370 c!12408) b!79719))

(assert (= (and bm!7370 (not c!12408)) b!79716))

(assert (= (and d!19287 res!41602) b!79720))

(assert (= (and b!79720 res!41603) b!79724))

(declare-fun m!80959 () Bool)

(assert (=> b!79724 m!80959))

(declare-fun m!80961 () Bool)

(assert (=> d!19287 m!80961))

(declare-fun m!80963 () Bool)

(assert (=> d!19287 m!80963))

(declare-fun m!80965 () Bool)

(assert (=> b!79719 m!80965))

(declare-fun m!80967 () Bool)

(assert (=> b!79720 m!80967))

(declare-fun m!80969 () Bool)

(assert (=> bm!7370 m!80969))

(assert (=> d!18479 d!19287))

(declare-fun d!19289 () Bool)

(assert (=> d!19289 (= (apply!79 lt!36341 lt!36342) (get!1176 (getValueByKey!137 (toList!739 lt!36341) lt!36342)))))

(declare-fun bs!3375 () Bool)

(assert (= bs!3375 d!19289))

(declare-fun m!80971 () Bool)

(assert (=> bs!3375 m!80971))

(assert (=> bs!3375 m!80971))

(declare-fun m!80973 () Bool)

(assert (=> bs!3375 m!80973))

(assert (=> b!78522 d!19289))

(declare-fun d!19291 () Bool)

(assert (=> d!19291 (= (apply!79 (+!105 lt!36338 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) lt!36336) (apply!79 lt!36338 lt!36336))))

(declare-fun lt!37007 () Unit!2257)

(assert (=> d!19291 (= lt!37007 (choose!460 lt!36338 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) lt!36336))))

(declare-fun e!52057 () Bool)

(assert (=> d!19291 e!52057))

(declare-fun res!41604 () Bool)

(assert (=> d!19291 (=> (not res!41604) (not e!52057))))

(assert (=> d!19291 (= res!41604 (contains!742 lt!36338 lt!36336))))

(assert (=> d!19291 (= (addApplyDifferent!55 lt!36338 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) lt!36336) lt!37007)))

(declare-fun b!79726 () Bool)

(assert (=> b!79726 (= e!52057 (not (= lt!36336 lt!36343)))))

(assert (= (and d!19291 res!41604) b!79726))

(declare-fun m!80975 () Bool)

(assert (=> d!19291 m!80975))

(assert (=> d!19291 m!78895))

(declare-fun m!80977 () Bool)

(assert (=> d!19291 m!80977))

(assert (=> d!19291 m!78883))

(assert (=> d!19291 m!78883))

(assert (=> d!19291 m!78885))

(assert (=> b!78522 d!19291))

(declare-fun d!19293 () Bool)

(declare-fun e!52058 () Bool)

(assert (=> d!19293 e!52058))

(declare-fun res!41605 () Bool)

(assert (=> d!19293 (=> (not res!41605) (not e!52058))))

(declare-fun lt!37009 () ListLongMap!1447)

(assert (=> d!19293 (= res!41605 (contains!742 lt!37009 (_1!1097 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16)))))))

(declare-fun lt!37008 () List!1507)

(assert (=> d!19293 (= lt!37009 (ListLongMap!1448 lt!37008))))

(declare-fun lt!37011 () Unit!2257)

(declare-fun lt!37010 () Unit!2257)

(assert (=> d!19293 (= lt!37011 lt!37010)))

(assert (=> d!19293 (= (getValueByKey!137 lt!37008 (_1!1097 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19293 (= lt!37010 (lemmaContainsTupThenGetReturnValue!54 lt!37008 (_1!1097 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19293 (= lt!37008 (insertStrictlySorted!57 (toList!739 lt!36332) (_1!1097 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19293 (= (+!105 lt!36332 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16))) lt!37009)))

(declare-fun b!79727 () Bool)

(declare-fun res!41606 () Bool)

(assert (=> b!79727 (=> (not res!41606) (not e!52058))))

(assert (=> b!79727 (= res!41606 (= (getValueByKey!137 (toList!739 lt!37009) (_1!1097 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16))))))))

(declare-fun b!79728 () Bool)

(assert (=> b!79728 (= e!52058 (contains!743 (toList!739 lt!37009) (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16))))))

(assert (= (and d!19293 res!41605) b!79727))

(assert (= (and b!79727 res!41606) b!79728))

(declare-fun m!80979 () Bool)

(assert (=> d!19293 m!80979))

(declare-fun m!80981 () Bool)

(assert (=> d!19293 m!80981))

(declare-fun m!80983 () Bool)

(assert (=> d!19293 m!80983))

(declare-fun m!80985 () Bool)

(assert (=> d!19293 m!80985))

(declare-fun m!80987 () Bool)

(assert (=> b!79727 m!80987))

(declare-fun m!80989 () Bool)

(assert (=> b!79728 m!80989))

(assert (=> b!78522 d!19293))

(declare-fun d!19295 () Bool)

(assert (=> d!19295 (= (apply!79 lt!36338 lt!36336) (get!1176 (getValueByKey!137 (toList!739 lt!36338) lt!36336)))))

(declare-fun bs!3376 () Bool)

(assert (= bs!3376 d!19295))

(declare-fun m!80991 () Bool)

(assert (=> bs!3376 m!80991))

(assert (=> bs!3376 m!80991))

(declare-fun m!80993 () Bool)

(assert (=> bs!3376 m!80993))

(assert (=> b!78522 d!19295))

(declare-fun d!19297 () Bool)

(assert (=> d!19297 (= (apply!79 lt!36324 lt!36330) (get!1176 (getValueByKey!137 (toList!739 lt!36324) lt!36330)))))

(declare-fun bs!3377 () Bool)

(assert (= bs!3377 d!19297))

(declare-fun m!80995 () Bool)

(assert (=> bs!3377 m!80995))

(assert (=> bs!3377 m!80995))

(declare-fun m!80997 () Bool)

(assert (=> bs!3377 m!80997))

(assert (=> b!78522 d!19297))

(declare-fun d!19299 () Bool)

(declare-fun e!52059 () Bool)

(assert (=> d!19299 e!52059))

(declare-fun res!41607 () Bool)

(assert (=> d!19299 (=> (not res!41607) (not e!52059))))

(declare-fun lt!37013 () ListLongMap!1447)

(assert (=> d!19299 (= res!41607 (contains!742 lt!37013 (_1!1097 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(declare-fun lt!37012 () List!1507)

(assert (=> d!19299 (= lt!37013 (ListLongMap!1448 lt!37012))))

(declare-fun lt!37015 () Unit!2257)

(declare-fun lt!37014 () Unit!2257)

(assert (=> d!19299 (= lt!37015 lt!37014)))

(assert (=> d!19299 (= (getValueByKey!137 lt!37012 (_1!1097 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) (Some!142 (_2!1097 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(assert (=> d!19299 (= lt!37014 (lemmaContainsTupThenGetReturnValue!54 lt!37012 (_1!1097 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) (_2!1097 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(assert (=> d!19299 (= lt!37012 (insertStrictlySorted!57 (toList!739 lt!36324) (_1!1097 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) (_2!1097 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(assert (=> d!19299 (= (+!105 lt!36324 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) lt!37013)))

(declare-fun b!79729 () Bool)

(declare-fun res!41608 () Bool)

(assert (=> b!79729 (=> (not res!41608) (not e!52059))))

(assert (=> b!79729 (= res!41608 (= (getValueByKey!137 (toList!739 lt!37013) (_1!1097 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) (Some!142 (_2!1097 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))))

(declare-fun b!79730 () Bool)

(assert (=> b!79730 (= e!52059 (contains!743 (toList!739 lt!37013) (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))

(assert (= (and d!19299 res!41607) b!79729))

(assert (= (and b!79729 res!41608) b!79730))

(declare-fun m!80999 () Bool)

(assert (=> d!19299 m!80999))

(declare-fun m!81001 () Bool)

(assert (=> d!19299 m!81001))

(declare-fun m!81003 () Bool)

(assert (=> d!19299 m!81003))

(declare-fun m!81005 () Bool)

(assert (=> d!19299 m!81005))

(declare-fun m!81007 () Bool)

(assert (=> b!79729 m!81007))

(declare-fun m!81009 () Bool)

(assert (=> b!79730 m!81009))

(assert (=> b!78522 d!19299))

(declare-fun d!19301 () Bool)

(declare-fun e!52060 () Bool)

(assert (=> d!19301 e!52060))

(declare-fun res!41609 () Bool)

(assert (=> d!19301 (=> (not res!41609) (not e!52060))))

(declare-fun lt!37017 () ListLongMap!1447)

(assert (=> d!19301 (= res!41609 (contains!742 lt!37017 (_1!1097 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16)))))))

(declare-fun lt!37016 () List!1507)

(assert (=> d!19301 (= lt!37017 (ListLongMap!1448 lt!37016))))

(declare-fun lt!37019 () Unit!2257)

(declare-fun lt!37018 () Unit!2257)

(assert (=> d!19301 (= lt!37019 lt!37018)))

(assert (=> d!19301 (= (getValueByKey!137 lt!37016 (_1!1097 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19301 (= lt!37018 (lemmaContainsTupThenGetReturnValue!54 lt!37016 (_1!1097 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19301 (= lt!37016 (insertStrictlySorted!57 (toList!739 lt!36341) (_1!1097 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16))) (_2!1097 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19301 (= (+!105 lt!36341 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16))) lt!37017)))

(declare-fun b!79731 () Bool)

(declare-fun res!41610 () Bool)

(assert (=> b!79731 (=> (not res!41610) (not e!52060))))

(assert (=> b!79731 (= res!41610 (= (getValueByKey!137 (toList!739 lt!37017) (_1!1097 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16))))))))

(declare-fun b!79732 () Bool)

(assert (=> b!79732 (= e!52060 (contains!743 (toList!739 lt!37017) (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16))))))

(assert (= (and d!19301 res!41609) b!79731))

(assert (= (and b!79731 res!41610) b!79732))

(declare-fun m!81011 () Bool)

(assert (=> d!19301 m!81011))

(declare-fun m!81013 () Bool)

(assert (=> d!19301 m!81013))

(declare-fun m!81015 () Bool)

(assert (=> d!19301 m!81015))

(declare-fun m!81017 () Bool)

(assert (=> d!19301 m!81017))

(declare-fun m!81019 () Bool)

(assert (=> b!79731 m!81019))

(declare-fun m!81021 () Bool)

(assert (=> b!79732 m!81021))

(assert (=> b!78522 d!19301))

(declare-fun d!19303 () Bool)

(assert (=> d!19303 (= (apply!79 (+!105 lt!36341 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16))) lt!36342) (apply!79 lt!36341 lt!36342))))

(declare-fun lt!37020 () Unit!2257)

(assert (=> d!19303 (= lt!37020 (choose!460 lt!36341 lt!36340 (zeroValue!2170 newMap!16) lt!36342))))

(declare-fun e!52061 () Bool)

(assert (=> d!19303 e!52061))

(declare-fun res!41611 () Bool)

(assert (=> d!19303 (=> (not res!41611) (not e!52061))))

(assert (=> d!19303 (= res!41611 (contains!742 lt!36341 lt!36342))))

(assert (=> d!19303 (= (addApplyDifferent!55 lt!36341 lt!36340 (zeroValue!2170 newMap!16) lt!36342) lt!37020)))

(declare-fun b!79733 () Bool)

(assert (=> b!79733 (= e!52061 (not (= lt!36342 lt!36340)))))

(assert (= (and d!19303 res!41611) b!79733))

(declare-fun m!81023 () Bool)

(assert (=> d!19303 m!81023))

(assert (=> d!19303 m!78909))

(declare-fun m!81025 () Bool)

(assert (=> d!19303 m!81025))

(assert (=> d!19303 m!78879))

(assert (=> d!19303 m!78879))

(assert (=> d!19303 m!78881))

(assert (=> b!78522 d!19303))

(declare-fun d!19305 () Bool)

(declare-fun e!52062 () Bool)

(assert (=> d!19305 e!52062))

(declare-fun res!41612 () Bool)

(assert (=> d!19305 (=> res!41612 e!52062)))

(declare-fun lt!37024 () Bool)

(assert (=> d!19305 (= res!41612 (not lt!37024))))

(declare-fun lt!37021 () Bool)

(assert (=> d!19305 (= lt!37024 lt!37021)))

(declare-fun lt!37022 () Unit!2257)

(declare-fun e!52063 () Unit!2257)

(assert (=> d!19305 (= lt!37022 e!52063)))

(declare-fun c!12411 () Bool)

(assert (=> d!19305 (= c!12411 lt!37021)))

(assert (=> d!19305 (= lt!37021 (containsKey!141 (toList!739 (+!105 lt!36332 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16)))) lt!36334))))

(assert (=> d!19305 (= (contains!742 (+!105 lt!36332 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16))) lt!36334) lt!37024)))

(declare-fun b!79734 () Bool)

(declare-fun lt!37023 () Unit!2257)

(assert (=> b!79734 (= e!52063 lt!37023)))

(assert (=> b!79734 (= lt!37023 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (+!105 lt!36332 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16)))) lt!36334))))

(assert (=> b!79734 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36332 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16)))) lt!36334))))

(declare-fun b!79735 () Bool)

(declare-fun Unit!2318 () Unit!2257)

(assert (=> b!79735 (= e!52063 Unit!2318)))

(declare-fun b!79736 () Bool)

(assert (=> b!79736 (= e!52062 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!36332 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16)))) lt!36334)))))

(assert (= (and d!19305 c!12411) b!79734))

(assert (= (and d!19305 (not c!12411)) b!79735))

(assert (= (and d!19305 (not res!41612)) b!79736))

(declare-fun m!81027 () Bool)

(assert (=> d!19305 m!81027))

(declare-fun m!81029 () Bool)

(assert (=> b!79734 m!81029))

(declare-fun m!81031 () Bool)

(assert (=> b!79734 m!81031))

(assert (=> b!79734 m!81031))

(declare-fun m!81033 () Bool)

(assert (=> b!79734 m!81033))

(assert (=> b!79736 m!81031))

(assert (=> b!79736 m!81031))

(assert (=> b!79736 m!81033))

(assert (=> b!78522 d!19305))

(declare-fun d!19307 () Bool)

(assert (=> d!19307 (= (apply!79 (+!105 lt!36324 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) lt!36330) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!36324 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) lt!36330)))))

(declare-fun bs!3378 () Bool)

(assert (= bs!3378 d!19307))

(declare-fun m!81035 () Bool)

(assert (=> bs!3378 m!81035))

(assert (=> bs!3378 m!81035))

(declare-fun m!81037 () Bool)

(assert (=> bs!3378 m!81037))

(assert (=> b!78522 d!19307))

(declare-fun d!19309 () Bool)

(declare-fun e!52064 () Bool)

(assert (=> d!19309 e!52064))

(declare-fun res!41613 () Bool)

(assert (=> d!19309 (=> (not res!41613) (not e!52064))))

(declare-fun lt!37026 () ListLongMap!1447)

(assert (=> d!19309 (= res!41613 (contains!742 lt!37026 (_1!1097 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(declare-fun lt!37025 () List!1507)

(assert (=> d!19309 (= lt!37026 (ListLongMap!1448 lt!37025))))

(declare-fun lt!37028 () Unit!2257)

(declare-fun lt!37027 () Unit!2257)

(assert (=> d!19309 (= lt!37028 lt!37027)))

(assert (=> d!19309 (= (getValueByKey!137 lt!37025 (_1!1097 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) (Some!142 (_2!1097 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(assert (=> d!19309 (= lt!37027 (lemmaContainsTupThenGetReturnValue!54 lt!37025 (_1!1097 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) (_2!1097 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(assert (=> d!19309 (= lt!37025 (insertStrictlySorted!57 (toList!739 lt!36338) (_1!1097 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) (_2!1097 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(assert (=> d!19309 (= (+!105 lt!36338 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) lt!37026)))

(declare-fun b!79737 () Bool)

(declare-fun res!41614 () Bool)

(assert (=> b!79737 (=> (not res!41614) (not e!52064))))

(assert (=> b!79737 (= res!41614 (= (getValueByKey!137 (toList!739 lt!37026) (_1!1097 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) (Some!142 (_2!1097 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))))

(declare-fun b!79738 () Bool)

(assert (=> b!79738 (= e!52064 (contains!743 (toList!739 lt!37026) (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))

(assert (= (and d!19309 res!41613) b!79737))

(assert (= (and b!79737 res!41614) b!79738))

(declare-fun m!81039 () Bool)

(assert (=> d!19309 m!81039))

(declare-fun m!81041 () Bool)

(assert (=> d!19309 m!81041))

(declare-fun m!81043 () Bool)

(assert (=> d!19309 m!81043))

(declare-fun m!81045 () Bool)

(assert (=> d!19309 m!81045))

(declare-fun m!81047 () Bool)

(assert (=> b!79737 m!81047))

(declare-fun m!81049 () Bool)

(assert (=> b!79738 m!81049))

(assert (=> b!78522 d!19309))

(declare-fun d!19311 () Bool)

(assert (=> d!19311 (= (apply!79 (+!105 lt!36324 (tuple2!2173 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) lt!36330) (apply!79 lt!36324 lt!36330))))

(declare-fun lt!37029 () Unit!2257)

(assert (=> d!19311 (= lt!37029 (choose!460 lt!36324 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) lt!36330))))

(declare-fun e!52065 () Bool)

(assert (=> d!19311 e!52065))

(declare-fun res!41615 () Bool)

(assert (=> d!19311 (=> (not res!41615) (not e!52065))))

(assert (=> d!19311 (= res!41615 (contains!742 lt!36324 lt!36330))))

(assert (=> d!19311 (= (addApplyDifferent!55 lt!36324 lt!36328 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)) lt!36330) lt!37029)))

(declare-fun b!79739 () Bool)

(assert (=> b!79739 (= e!52065 (not (= lt!36330 lt!36328)))))

(assert (= (and d!19311 res!41615) b!79739))

(declare-fun m!81051 () Bool)

(assert (=> d!19311 m!81051))

(assert (=> d!19311 m!78893))

(declare-fun m!81053 () Bool)

(assert (=> d!19311 m!81053))

(assert (=> d!19311 m!78887))

(assert (=> d!19311 m!78887))

(assert (=> d!19311 m!78889))

(assert (=> b!78522 d!19311))

(declare-fun d!19313 () Bool)

(assert (=> d!19313 (contains!742 (+!105 lt!36332 (tuple2!2173 lt!36325 (zeroValue!2170 newMap!16))) lt!36334)))

(declare-fun lt!37030 () Unit!2257)

(assert (=> d!19313 (= lt!37030 (choose!459 lt!36332 lt!36325 (zeroValue!2170 newMap!16) lt!36334))))

(assert (=> d!19313 (contains!742 lt!36332 lt!36334)))

(assert (=> d!19313 (= (addStillContains!55 lt!36332 lt!36325 (zeroValue!2170 newMap!16) lt!36334) lt!37030)))

(declare-fun bs!3379 () Bool)

(assert (= bs!3379 d!19313))

(assert (=> bs!3379 m!78897))

(assert (=> bs!3379 m!78897))

(assert (=> bs!3379 m!78899))

(declare-fun m!81055 () Bool)

(assert (=> bs!3379 m!81055))

(declare-fun m!81057 () Bool)

(assert (=> bs!3379 m!81057))

(assert (=> b!78522 d!19313))

(assert (=> b!78522 d!18969))

(declare-fun d!19315 () Bool)

(assert (=> d!19315 (= (apply!79 (+!105 lt!36341 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16))) lt!36342) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!36341 (tuple2!2173 lt!36340 (zeroValue!2170 newMap!16)))) lt!36342)))))

(declare-fun bs!3380 () Bool)

(assert (= bs!3380 d!19315))

(declare-fun m!81059 () Bool)

(assert (=> bs!3380 m!81059))

(assert (=> bs!3380 m!81059))

(declare-fun m!81061 () Bool)

(assert (=> bs!3380 m!81061))

(assert (=> b!78522 d!19315))

(declare-fun d!19317 () Bool)

(assert (=> d!19317 (= (apply!79 (+!105 lt!36338 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))) lt!36336) (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!36338 (tuple2!2173 lt!36343 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) lt!36336)))))

(declare-fun bs!3381 () Bool)

(assert (= bs!3381 d!19317))

(declare-fun m!81063 () Bool)

(assert (=> bs!3381 m!81063))

(assert (=> bs!3381 m!81063))

(declare-fun m!81065 () Bool)

(assert (=> bs!3381 m!81065))

(assert (=> b!78522 d!19317))

(assert (=> d!18603 d!18489))

(declare-fun d!19319 () Bool)

(declare-fun e!52068 () Bool)

(assert (=> d!19319 e!52068))

(declare-fun res!41620 () Bool)

(assert (=> d!19319 (=> (not res!41620) (not e!52068))))

(declare-fun lt!37033 () SeekEntryResult!240)

(assert (=> d!19319 (= res!41620 ((_ is Found!240) lt!37033))))

(assert (=> d!19319 (= lt!37033 (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(assert (=> d!19319 true))

(declare-fun _$33!63 () Unit!2257)

(assert (=> d!19319 (= (choose!461 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)) _$33!63)))

(declare-fun b!79744 () Bool)

(declare-fun res!41621 () Bool)

(assert (=> b!79744 (=> (not res!41621) (not e!52068))))

(assert (=> b!79744 (= res!41621 (inRange!0 (index!3095 lt!37033) (mask!6268 newMap!16)))))

(declare-fun b!79745 () Bool)

(assert (=> b!79745 (= e!52068 (= (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!37033)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (= (and d!19319 res!41620) b!79744))

(assert (= (and b!79744 res!41621) b!79745))

(assert (=> d!19319 m!77965))

(assert (=> d!19319 m!78307))

(declare-fun m!81067 () Bool)

(assert (=> b!79744 m!81067))

(declare-fun m!81069 () Bool)

(assert (=> b!79745 m!81069))

(assert (=> d!18603 d!19319))

(assert (=> d!18603 d!18765))

(declare-fun d!19321 () Bool)

(declare-fun lt!37034 () Bool)

(assert (=> d!19321 (= lt!37034 (select (content!83 lt!35999) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun e!52070 () Bool)

(assert (=> d!19321 (= lt!37034 e!52070)))

(declare-fun res!41622 () Bool)

(assert (=> d!19321 (=> (not res!41622) (not e!52070))))

(assert (=> d!19321 (= res!41622 ((_ is Cons!1503) lt!35999))))

(assert (=> d!19321 (= (contains!743 lt!35999 (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))) lt!37034)))

(declare-fun b!79746 () Bool)

(declare-fun e!52069 () Bool)

(assert (=> b!79746 (= e!52070 e!52069)))

(declare-fun res!41623 () Bool)

(assert (=> b!79746 (=> res!41623 e!52069)))

(assert (=> b!79746 (= res!41623 (= (h!2091 lt!35999) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun b!79747 () Bool)

(assert (=> b!79747 (= e!52069 (contains!743 (t!5153 lt!35999) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(assert (= (and d!19321 res!41622) b!79746))

(assert (= (and b!79746 (not res!41623)) b!79747))

(declare-fun m!81071 () Bool)

(assert (=> d!19321 m!81071))

(declare-fun m!81073 () Bool)

(assert (=> d!19321 m!81073))

(declare-fun m!81075 () Bool)

(assert (=> b!79747 m!81075))

(assert (=> b!78557 d!19321))

(declare-fun d!19323 () Bool)

(declare-fun lt!37035 () Bool)

(assert (=> d!19323 (= lt!37035 (select (content!83 (t!5153 (toList!739 lt!36033))) lt!35864))))

(declare-fun e!52072 () Bool)

(assert (=> d!19323 (= lt!37035 e!52072)))

(declare-fun res!41624 () Bool)

(assert (=> d!19323 (=> (not res!41624) (not e!52072))))

(assert (=> d!19323 (= res!41624 ((_ is Cons!1503) (t!5153 (toList!739 lt!36033))))))

(assert (=> d!19323 (= (contains!743 (t!5153 (toList!739 lt!36033)) lt!35864) lt!37035)))

(declare-fun b!79748 () Bool)

(declare-fun e!52071 () Bool)

(assert (=> b!79748 (= e!52072 e!52071)))

(declare-fun res!41625 () Bool)

(assert (=> b!79748 (=> res!41625 e!52071)))

(assert (=> b!79748 (= res!41625 (= (h!2091 (t!5153 (toList!739 lt!36033))) lt!35864))))

(declare-fun b!79749 () Bool)

(assert (=> b!79749 (= e!52071 (contains!743 (t!5153 (t!5153 (toList!739 lt!36033))) lt!35864))))

(assert (= (and d!19323 res!41624) b!79748))

(assert (= (and b!79748 (not res!41625)) b!79749))

(declare-fun m!81077 () Bool)

(assert (=> d!19323 m!81077))

(declare-fun m!81079 () Bool)

(assert (=> d!19323 m!81079))

(declare-fun m!81081 () Bool)

(assert (=> b!79749 m!81081))

(assert (=> b!78777 d!19323))

(declare-fun d!19325 () Bool)

(declare-fun res!41626 () Bool)

(declare-fun e!52073 () Bool)

(assert (=> d!19325 (=> res!41626 e!52073)))

(assert (=> d!19325 (= res!41626 (and ((_ is Cons!1503) (toList!739 lt!36021)) (= (_1!1097 (h!2091 (toList!739 lt!36021))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19325 (= (containsKey!141 (toList!739 lt!36021) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!52073)))

(declare-fun b!79750 () Bool)

(declare-fun e!52074 () Bool)

(assert (=> b!79750 (= e!52073 e!52074)))

(declare-fun res!41627 () Bool)

(assert (=> b!79750 (=> (not res!41627) (not e!52074))))

(assert (=> b!79750 (= res!41627 (and (or (not ((_ is Cons!1503) (toList!739 lt!36021))) (bvsle (_1!1097 (h!2091 (toList!739 lt!36021))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1503) (toList!739 lt!36021)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36021))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!79751 () Bool)

(assert (=> b!79751 (= e!52074 (containsKey!141 (t!5153 (toList!739 lt!36021)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19325 (not res!41626)) b!79750))

(assert (= (and b!79750 res!41627) b!79751))

(assert (=> b!79751 m!78109))

(declare-fun m!81083 () Bool)

(assert (=> b!79751 m!81083))

(assert (=> d!18567 d!19325))

(assert (=> b!78582 d!18861))

(declare-fun d!19327 () Bool)

(assert (=> d!19327 (= (apply!79 lt!36213 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1176 (getValueByKey!137 (toList!739 lt!36213) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3382 () Bool)

(assert (= bs!3382 d!19327))

(declare-fun m!81085 () Bool)

(assert (=> bs!3382 m!81085))

(assert (=> bs!3382 m!81085))

(declare-fun m!81087 () Bool)

(assert (=> bs!3382 m!81087))

(assert (=> b!78272 d!19327))

(declare-fun d!19329 () Bool)

(declare-fun res!41628 () Bool)

(declare-fun e!52075 () Bool)

(assert (=> d!19329 (=> res!41628 e!52075)))

(assert (=> d!19329 (= res!41628 (and ((_ is Cons!1503) (toList!739 lt!35983)) (= (_1!1097 (h!2091 (toList!739 lt!35983))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19329 (= (containsKey!141 (toList!739 lt!35983) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!52075)))

(declare-fun b!79752 () Bool)

(declare-fun e!52076 () Bool)

(assert (=> b!79752 (= e!52075 e!52076)))

(declare-fun res!41629 () Bool)

(assert (=> b!79752 (=> (not res!41629) (not e!52076))))

(assert (=> b!79752 (= res!41629 (and (or (not ((_ is Cons!1503) (toList!739 lt!35983))) (bvsle (_1!1097 (h!2091 (toList!739 lt!35983))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1503) (toList!739 lt!35983)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35983))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!79753 () Bool)

(assert (=> b!79753 (= e!52076 (containsKey!141 (t!5153 (toList!739 lt!35983)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19329 (not res!41628)) b!79752))

(assert (= (and b!79752 res!41629) b!79753))

(assert (=> b!79753 m!78109))

(declare-fun m!81089 () Bool)

(assert (=> b!79753 m!81089))

(assert (=> d!18491 d!19329))

(declare-fun d!19331 () Bool)

(declare-fun e!52077 () Bool)

(assert (=> d!19331 e!52077))

(declare-fun res!41630 () Bool)

(assert (=> d!19331 (=> res!41630 e!52077)))

(declare-fun lt!37039 () Bool)

(assert (=> d!19331 (= res!41630 (not lt!37039))))

(declare-fun lt!37036 () Bool)

(assert (=> d!19331 (= lt!37039 lt!37036)))

(declare-fun lt!37037 () Unit!2257)

(declare-fun e!52078 () Unit!2257)

(assert (=> d!19331 (= lt!37037 e!52078)))

(declare-fun c!12412 () Bool)

(assert (=> d!19331 (= c!12412 lt!37036)))

(assert (=> d!19331 (= lt!37036 (containsKey!141 (toList!739 lt!36544) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (=> d!19331 (= (contains!742 lt!36544 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) lt!37039)))

(declare-fun b!79754 () Bool)

(declare-fun lt!37038 () Unit!2257)

(assert (=> b!79754 (= e!52078 lt!37038)))

(assert (=> b!79754 (= lt!37038 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36544) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (=> b!79754 (isDefined!90 (getValueByKey!137 (toList!739 lt!36544) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79755 () Bool)

(declare-fun Unit!2319 () Unit!2257)

(assert (=> b!79755 (= e!52078 Unit!2319)))

(declare-fun b!79756 () Bool)

(assert (=> b!79756 (= e!52077 (isDefined!90 (getValueByKey!137 (toList!739 lt!36544) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19331 c!12412) b!79754))

(assert (= (and d!19331 (not c!12412)) b!79755))

(assert (= (and d!19331 (not res!41630)) b!79756))

(declare-fun m!81091 () Bool)

(assert (=> d!19331 m!81091))

(declare-fun m!81093 () Bool)

(assert (=> b!79754 m!81093))

(assert (=> b!79754 m!79321))

(assert (=> b!79754 m!79321))

(declare-fun m!81095 () Bool)

(assert (=> b!79754 m!81095))

(assert (=> b!79756 m!79321))

(assert (=> b!79756 m!79321))

(assert (=> b!79756 m!81095))

(assert (=> d!18725 d!19331))

(declare-fun b!79760 () Bool)

(declare-fun e!52080 () Option!143)

(assert (=> b!79760 (= e!52080 None!141)))

(declare-fun c!12413 () Bool)

(declare-fun d!19333 () Bool)

(assert (=> d!19333 (= c!12413 (and ((_ is Cons!1503) lt!36543) (= (_1!1097 (h!2091 lt!36543)) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun e!52079 () Option!143)

(assert (=> d!19333 (= (getValueByKey!137 lt!36543 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) e!52079)))

(declare-fun b!79759 () Bool)

(assert (=> b!79759 (= e!52080 (getValueByKey!137 (t!5153 lt!36543) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79757 () Bool)

(assert (=> b!79757 (= e!52079 (Some!142 (_2!1097 (h!2091 lt!36543))))))

(declare-fun b!79758 () Bool)

(assert (=> b!79758 (= e!52079 e!52080)))

(declare-fun c!12414 () Bool)

(assert (=> b!79758 (= c!12414 (and ((_ is Cons!1503) lt!36543) (not (= (_1!1097 (h!2091 lt!36543)) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))))

(assert (= (and d!19333 c!12413) b!79757))

(assert (= (and d!19333 (not c!12413)) b!79758))

(assert (= (and b!79758 c!12414) b!79759))

(assert (= (and b!79758 (not c!12414)) b!79760))

(declare-fun m!81097 () Bool)

(assert (=> b!79759 m!81097))

(assert (=> d!18725 d!19333))

(declare-fun d!19335 () Bool)

(assert (=> d!19335 (= (getValueByKey!137 lt!36543 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) (Some!142 (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun lt!37040 () Unit!2257)

(assert (=> d!19335 (= lt!37040 (choose!456 lt!36543 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52081 () Bool)

(assert (=> d!19335 e!52081))

(declare-fun res!41631 () Bool)

(assert (=> d!19335 (=> (not res!41631) (not e!52081))))

(assert (=> d!19335 (= res!41631 (isStrictlySorted!295 lt!36543))))

(assert (=> d!19335 (= (lemmaContainsTupThenGetReturnValue!54 lt!36543 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) lt!37040)))

(declare-fun b!79761 () Bool)

(declare-fun res!41632 () Bool)

(assert (=> b!79761 (=> (not res!41632) (not e!52081))))

(assert (=> b!79761 (= res!41632 (containsKey!141 lt!36543 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79762 () Bool)

(assert (=> b!79762 (= e!52081 (contains!743 lt!36543 (tuple2!2173 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19335 res!41631) b!79761))

(assert (= (and b!79761 res!41632) b!79762))

(assert (=> d!19335 m!79315))

(declare-fun m!81099 () Bool)

(assert (=> d!19335 m!81099))

(declare-fun m!81101 () Bool)

(assert (=> d!19335 m!81101))

(declare-fun m!81103 () Bool)

(assert (=> b!79761 m!81103))

(declare-fun m!81105 () Bool)

(assert (=> b!79762 m!81105))

(assert (=> d!18725 d!19335))

(declare-fun c!12417 () Bool)

(declare-fun e!52082 () List!1507)

(declare-fun b!79763 () Bool)

(declare-fun c!12418 () Bool)

(assert (=> b!79763 (= e!52082 (ite c!12418 (t!5153 (toList!739 e!51142)) (ite c!12417 (Cons!1503 (h!2091 (toList!739 e!51142)) (t!5153 (toList!739 e!51142))) Nil!1504)))))

(declare-fun b!79764 () Bool)

(declare-fun e!52086 () List!1507)

(declare-fun call!7377 () List!1507)

(assert (=> b!79764 (= e!52086 call!7377)))

(declare-fun bm!7372 () Bool)

(declare-fun call!7375 () List!1507)

(declare-fun call!7376 () List!1507)

(assert (=> bm!7372 (= call!7375 call!7376)))

(declare-fun b!79765 () Bool)

(assert (=> b!79765 (= c!12417 (and ((_ is Cons!1503) (toList!739 e!51142)) (bvsgt (_1!1097 (h!2091 (toList!739 e!51142))) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun e!52084 () List!1507)

(declare-fun e!52083 () List!1507)

(assert (=> b!79765 (= e!52084 e!52083)))

(declare-fun b!79766 () Bool)

(assert (=> b!79766 (= e!52082 (insertStrictlySorted!57 (t!5153 (toList!739 e!51142)) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79767 () Bool)

(declare-fun res!41634 () Bool)

(declare-fun e!52085 () Bool)

(assert (=> b!79767 (=> (not res!41634) (not e!52085))))

(declare-fun lt!37041 () List!1507)

(assert (=> b!79767 (= res!41634 (containsKey!141 lt!37041 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun c!12415 () Bool)

(declare-fun bm!7373 () Bool)

(assert (=> bm!7373 (= call!7377 ($colon$colon!69 e!52082 (ite c!12415 (h!2091 (toList!739 e!51142)) (tuple2!2173 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))))

(declare-fun c!12416 () Bool)

(assert (=> bm!7373 (= c!12416 c!12415)))

(declare-fun b!79768 () Bool)

(assert (=> b!79768 (= e!52086 e!52084)))

(assert (=> b!79768 (= c!12418 (and ((_ is Cons!1503) (toList!739 e!51142)) (= (_1!1097 (h!2091 (toList!739 e!51142))) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun b!79770 () Bool)

(assert (=> b!79770 (= e!52084 call!7376)))

(declare-fun b!79771 () Bool)

(assert (=> b!79771 (= e!52085 (contains!743 lt!37041 (tuple2!2173 (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun b!79769 () Bool)

(assert (=> b!79769 (= e!52083 call!7375)))

(declare-fun d!19337 () Bool)

(assert (=> d!19337 e!52085))

(declare-fun res!41633 () Bool)

(assert (=> d!19337 (=> (not res!41633) (not e!52085))))

(assert (=> d!19337 (= res!41633 (isStrictlySorted!295 lt!37041))))

(assert (=> d!19337 (= lt!37041 e!52086)))

(assert (=> d!19337 (= c!12415 (and ((_ is Cons!1503) (toList!739 e!51142)) (bvslt (_1!1097 (h!2091 (toList!739 e!51142))) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (=> d!19337 (isStrictlySorted!295 (toList!739 e!51142))))

(assert (=> d!19337 (= (insertStrictlySorted!57 (toList!739 e!51142) (_1!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (_2!1097 (ite c!11979 (ite c!11977 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35856) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35856)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))) lt!37041)))

(declare-fun bm!7374 () Bool)

(assert (=> bm!7374 (= call!7376 call!7377)))

(declare-fun b!79772 () Bool)

(assert (=> b!79772 (= e!52083 call!7375)))

(assert (= (and d!19337 c!12415) b!79764))

(assert (= (and d!19337 (not c!12415)) b!79768))

(assert (= (and b!79768 c!12418) b!79770))

(assert (= (and b!79768 (not c!12418)) b!79765))

(assert (= (and b!79765 c!12417) b!79769))

(assert (= (and b!79765 (not c!12417)) b!79772))

(assert (= (or b!79769 b!79772) bm!7372))

(assert (= (or b!79770 bm!7372) bm!7374))

(assert (= (or b!79764 bm!7374) bm!7373))

(assert (= (and bm!7373 c!12416) b!79766))

(assert (= (and bm!7373 (not c!12416)) b!79763))

(assert (= (and d!19337 res!41633) b!79767))

(assert (= (and b!79767 res!41634) b!79771))

(declare-fun m!81107 () Bool)

(assert (=> b!79771 m!81107))

(declare-fun m!81109 () Bool)

(assert (=> d!19337 m!81109))

(declare-fun m!81111 () Bool)

(assert (=> d!19337 m!81111))

(declare-fun m!81113 () Bool)

(assert (=> b!79766 m!81113))

(declare-fun m!81115 () Bool)

(assert (=> b!79767 m!81115))

(declare-fun m!81117 () Bool)

(assert (=> bm!7373 m!81117))

(assert (=> d!18725 d!19337))

(declare-fun d!19339 () Bool)

(declare-fun res!41635 () Bool)

(declare-fun e!52087 () Bool)

(assert (=> d!19339 (=> res!41635 e!52087)))

(assert (=> d!19339 (= res!41635 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35860))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!35860)))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(assert (=> d!19339 (= (containsKey!141 (t!5153 (toList!739 lt!35860)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) e!52087)))

(declare-fun b!79773 () Bool)

(declare-fun e!52088 () Bool)

(assert (=> b!79773 (= e!52087 e!52088)))

(declare-fun res!41636 () Bool)

(assert (=> b!79773 (=> (not res!41636) (not e!52088))))

(assert (=> b!79773 (= res!41636 (and (or (not ((_ is Cons!1503) (t!5153 (toList!739 lt!35860)))) (bvsle (_1!1097 (h!2091 (t!5153 (toList!739 lt!35860)))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))) ((_ is Cons!1503) (t!5153 (toList!739 lt!35860))) (bvslt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35860)))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(declare-fun b!79774 () Bool)

(assert (=> b!79774 (= e!52088 (containsKey!141 (t!5153 (t!5153 (toList!739 lt!35860))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (= (and d!19339 (not res!41635)) b!79773))

(assert (= (and b!79773 res!41636) b!79774))

(assert (=> b!79774 m!77965))

(declare-fun m!81119 () Bool)

(assert (=> b!79774 m!81119))

(assert (=> b!78298 d!19339))

(declare-fun d!19341 () Bool)

(assert (=> d!19341 (= ($colon$colon!69 e!51398 (ite c!12097 (h!2091 (toList!739 lt!35868)) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864)))) (Cons!1503 (ite c!12097 (h!2091 (toList!739 lt!35868)) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))) e!51398))))

(assert (=> bm!7235 d!19341))

(declare-fun d!19343 () Bool)

(declare-fun lt!37042 () Bool)

(assert (=> d!19343 (= lt!37042 (select (content!83 lt!36040) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun e!52090 () Bool)

(assert (=> d!19343 (= lt!37042 e!52090)))

(declare-fun res!41637 () Bool)

(assert (=> d!19343 (=> (not res!41637) (not e!52090))))

(assert (=> d!19343 (= res!41637 ((_ is Cons!1503) lt!36040))))

(assert (=> d!19343 (= (contains!743 lt!36040 (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))) lt!37042)))

(declare-fun b!79775 () Bool)

(declare-fun e!52089 () Bool)

(assert (=> b!79775 (= e!52090 e!52089)))

(declare-fun res!41638 () Bool)

(assert (=> b!79775 (=> res!41638 e!52089)))

(assert (=> b!79775 (= res!41638 (= (h!2091 lt!36040) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun b!79776 () Bool)

(assert (=> b!79776 (= e!52089 (contains!743 (t!5153 lt!36040) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(assert (= (and d!19343 res!41637) b!79775))

(assert (= (and b!79775 (not res!41638)) b!79776))

(declare-fun m!81121 () Bool)

(assert (=> d!19343 m!81121))

(declare-fun m!81123 () Bool)

(assert (=> d!19343 m!81123))

(declare-fun m!81125 () Bool)

(assert (=> b!79776 m!81125))

(assert (=> b!78484 d!19343))

(declare-fun b!79780 () Bool)

(declare-fun e!52092 () Option!143)

(assert (=> b!79780 (= e!52092 None!141)))

(declare-fun c!12419 () Bool)

(declare-fun d!19345 () Bool)

(assert (=> d!19345 (= c!12419 (and ((_ is Cons!1503) (toList!739 lt!36163)) (= (_1!1097 (h!2091 (toList!739 lt!36163))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52091 () Option!143)

(assert (=> d!19345 (= (getValueByKey!137 (toList!739 lt!36163) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) e!52091)))

(declare-fun b!79779 () Bool)

(assert (=> b!79779 (= e!52092 (getValueByKey!137 (t!5153 (toList!739 lt!36163)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79777 () Bool)

(assert (=> b!79777 (= e!52091 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36163)))))))

(declare-fun b!79778 () Bool)

(assert (=> b!79778 (= e!52091 e!52092)))

(declare-fun c!12420 () Bool)

(assert (=> b!79778 (= c!12420 (and ((_ is Cons!1503) (toList!739 lt!36163)) (not (= (_1!1097 (h!2091 (toList!739 lt!36163))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19345 c!12419) b!79777))

(assert (= (and d!19345 (not c!12419)) b!79778))

(assert (= (and b!79778 c!12420) b!79779))

(assert (= (and b!79778 (not c!12420)) b!79780))

(declare-fun m!81127 () Bool)

(assert (=> b!79779 m!81127))

(assert (=> b!78236 d!19345))

(declare-fun d!19347 () Bool)

(declare-fun c!12421 () Bool)

(assert (=> d!19347 (= c!12421 ((_ is Nil!1504) (toList!739 lt!36000)))))

(declare-fun e!52093 () (InoxSet tuple2!2172))

(assert (=> d!19347 (= (content!83 (toList!739 lt!36000)) e!52093)))

(declare-fun b!79781 () Bool)

(assert (=> b!79781 (= e!52093 ((as const (Array tuple2!2172 Bool)) false))))

(declare-fun b!79782 () Bool)

(assert (=> b!79782 (= e!52093 ((_ map or) (store ((as const (Array tuple2!2172 Bool)) false) (h!2091 (toList!739 lt!36000)) true) (content!83 (t!5153 (toList!739 lt!36000)))))))

(assert (= (and d!19347 c!12421) b!79781))

(assert (= (and d!19347 (not c!12421)) b!79782))

(declare-fun m!81129 () Bool)

(assert (=> b!79782 m!81129))

(assert (=> b!79782 m!80101))

(assert (=> d!18691 d!19347))

(assert (=> d!18543 d!18547))

(assert (=> d!18543 d!18545))

(declare-fun d!19349 () Bool)

(assert (=> d!19349 (not (contains!742 (+!105 lt!36025 (tuple2!2173 lt!36023 lt!36026)) lt!36027))))

(assert (=> d!19349 true))

(declare-fun _$36!304 () Unit!2257)

(assert (=> d!19349 (= (choose!457 lt!36025 lt!36023 lt!36026 lt!36027) _$36!304)))

(declare-fun bs!3383 () Bool)

(assert (= bs!3383 d!19349))

(assert (=> bs!3383 m!78185))

(assert (=> bs!3383 m!78185))

(assert (=> bs!3383 m!78187))

(assert (=> d!18543 d!19349))

(declare-fun d!19351 () Bool)

(declare-fun e!52094 () Bool)

(assert (=> d!19351 e!52094))

(declare-fun res!41639 () Bool)

(assert (=> d!19351 (=> res!41639 e!52094)))

(declare-fun lt!37046 () Bool)

(assert (=> d!19351 (= res!41639 (not lt!37046))))

(declare-fun lt!37043 () Bool)

(assert (=> d!19351 (= lt!37046 lt!37043)))

(declare-fun lt!37044 () Unit!2257)

(declare-fun e!52095 () Unit!2257)

(assert (=> d!19351 (= lt!37044 e!52095)))

(declare-fun c!12422 () Bool)

(assert (=> d!19351 (= c!12422 lt!37043)))

(assert (=> d!19351 (= lt!37043 (containsKey!141 (toList!739 lt!36025) lt!36027))))

(assert (=> d!19351 (= (contains!742 lt!36025 lt!36027) lt!37046)))

(declare-fun b!79784 () Bool)

(declare-fun lt!37045 () Unit!2257)

(assert (=> b!79784 (= e!52095 lt!37045)))

(assert (=> b!79784 (= lt!37045 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36025) lt!36027))))

(assert (=> b!79784 (isDefined!90 (getValueByKey!137 (toList!739 lt!36025) lt!36027))))

(declare-fun b!79785 () Bool)

(declare-fun Unit!2320 () Unit!2257)

(assert (=> b!79785 (= e!52095 Unit!2320)))

(declare-fun b!79786 () Bool)

(assert (=> b!79786 (= e!52094 (isDefined!90 (getValueByKey!137 (toList!739 lt!36025) lt!36027)))))

(assert (= (and d!19351 c!12422) b!79784))

(assert (= (and d!19351 (not c!12422)) b!79785))

(assert (= (and d!19351 (not res!41639)) b!79786))

(declare-fun m!81131 () Bool)

(assert (=> d!19351 m!81131))

(declare-fun m!81133 () Bool)

(assert (=> b!79784 m!81133))

(declare-fun m!81135 () Bool)

(assert (=> b!79784 m!81135))

(assert (=> b!79784 m!81135))

(declare-fun m!81137 () Bool)

(assert (=> b!79784 m!81137))

(assert (=> b!79786 m!81135))

(assert (=> b!79786 m!81135))

(assert (=> b!79786 m!81137))

(assert (=> d!18543 d!19351))

(declare-fun b!79790 () Bool)

(declare-fun e!52097 () Option!143)

(assert (=> b!79790 (= e!52097 None!141)))

(declare-fun c!12423 () Bool)

(declare-fun d!19353 () Bool)

(assert (=> d!19353 (= c!12423 (and ((_ is Cons!1503) (toList!739 lt!36528)) (= (_1!1097 (h!2091 (toList!739 lt!36528))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52096 () Option!143)

(assert (=> d!19353 (= (getValueByKey!137 (toList!739 lt!36528) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) e!52096)))

(declare-fun b!79789 () Bool)

(assert (=> b!79789 (= e!52097 (getValueByKey!137 (t!5153 (toList!739 lt!36528)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79787 () Bool)

(assert (=> b!79787 (= e!52096 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36528)))))))

(declare-fun b!79788 () Bool)

(assert (=> b!79788 (= e!52096 e!52097)))

(declare-fun c!12424 () Bool)

(assert (=> b!79788 (= c!12424 (and ((_ is Cons!1503) (toList!739 lt!36528)) (not (= (_1!1097 (h!2091 (toList!739 lt!36528))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19353 c!12423) b!79787))

(assert (= (and d!19353 (not c!12423)) b!79788))

(assert (= (and b!79788 c!12424) b!79789))

(assert (= (and b!79788 (not c!12424)) b!79790))

(declare-fun m!81139 () Bool)

(assert (=> b!79789 m!81139))

(assert (=> b!78731 d!19353))

(declare-fun d!19355 () Bool)

(declare-fun c!12425 () Bool)

(assert (=> d!19355 (= c!12425 ((_ is Nil!1504) (toList!739 lt!36033)))))

(declare-fun e!52098 () (InoxSet tuple2!2172))

(assert (=> d!19355 (= (content!83 (toList!739 lt!36033)) e!52098)))

(declare-fun b!79791 () Bool)

(assert (=> b!79791 (= e!52098 ((as const (Array tuple2!2172 Bool)) false))))

(declare-fun b!79792 () Bool)

(assert (=> b!79792 (= e!52098 ((_ map or) (store ((as const (Array tuple2!2172 Bool)) false) (h!2091 (toList!739 lt!36033)) true) (content!83 (t!5153 (toList!739 lt!36033)))))))

(assert (= (and d!19355 c!12425) b!79791))

(assert (= (and d!19355 (not c!12425)) b!79792))

(declare-fun m!81141 () Bool)

(assert (=> b!79792 m!81141))

(assert (=> b!79792 m!81077))

(assert (=> d!18723 d!19355))

(declare-fun d!19357 () Bool)

(assert (=> d!19357 (= (get!1174 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2591 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78333 d!19357))

(declare-fun d!19359 () Bool)

(assert (=> d!19359 (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!37047 () Unit!2257)

(assert (=> d!19359 (= lt!37047 (choose!465 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52099 () Bool)

(assert (=> d!19359 e!52099))

(declare-fun res!41640 () Bool)

(assert (=> d!19359 (=> (not res!41640) (not e!52099))))

(assert (=> d!19359 (= res!41640 (isStrictlySorted!295 (toList!739 lt!35983)))))

(assert (=> d!19359 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000) lt!37047)))

(declare-fun b!79793 () Bool)

(assert (=> b!79793 (= e!52099 (containsKey!141 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19359 res!41640) b!79793))

(assert (=> d!19359 m!78945))

(assert (=> d!19359 m!78945))

(assert (=> d!19359 m!78947))

(declare-fun m!81143 () Bool)

(assert (=> d!19359 m!81143))

(assert (=> d!19359 m!80659))

(assert (=> b!79793 m!78941))

(assert (=> b!78546 d!19359))

(declare-fun d!19361 () Bool)

(assert (=> d!19361 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3384 () Bool)

(assert (= bs!3384 d!19361))

(assert (=> bs!3384 m!78945))

(declare-fun m!81145 () Bool)

(assert (=> bs!3384 m!81145))

(assert (=> b!78546 d!19361))

(assert (=> b!78546 d!19005))

(assert (=> bm!7206 d!18523))

(declare-fun d!19363 () Bool)

(assert (=> d!19363 (isDefined!90 (getValueByKey!137 (toList!739 lt!36049) (_1!1097 lt!35870)))))

(declare-fun lt!37048 () Unit!2257)

(assert (=> d!19363 (= lt!37048 (choose!465 (toList!739 lt!36049) (_1!1097 lt!35870)))))

(declare-fun e!52100 () Bool)

(assert (=> d!19363 e!52100))

(declare-fun res!41641 () Bool)

(assert (=> d!19363 (=> (not res!41641) (not e!52100))))

(assert (=> d!19363 (= res!41641 (isStrictlySorted!295 (toList!739 lt!36049)))))

(assert (=> d!19363 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36049) (_1!1097 lt!35870)) lt!37048)))

(declare-fun b!79794 () Bool)

(assert (=> b!79794 (= e!52100 (containsKey!141 (toList!739 lt!36049) (_1!1097 lt!35870)))))

(assert (= (and d!19363 res!41641) b!79794))

(assert (=> d!19363 m!78265))

(assert (=> d!19363 m!78265))

(assert (=> d!19363 m!79135))

(declare-fun m!81147 () Bool)

(assert (=> d!19363 m!81147))

(declare-fun m!81149 () Bool)

(assert (=> d!19363 m!81149))

(assert (=> b!79794 m!79131))

(assert (=> b!78657 d!19363))

(declare-fun d!19365 () Bool)

(assert (=> d!19365 (= (isDefined!90 (getValueByKey!137 (toList!739 lt!36049) (_1!1097 lt!35870))) (not (isEmpty!328 (getValueByKey!137 (toList!739 lt!36049) (_1!1097 lt!35870)))))))

(declare-fun bs!3385 () Bool)

(assert (= bs!3385 d!19365))

(assert (=> bs!3385 m!78265))

(declare-fun m!81151 () Bool)

(assert (=> bs!3385 m!81151))

(assert (=> b!78657 d!19365))

(assert (=> b!78657 d!18713))

(declare-fun b!79798 () Bool)

(declare-fun e!52102 () Option!143)

(assert (=> b!79798 (= e!52102 None!141)))

(declare-fun d!19367 () Bool)

(declare-fun c!12426 () Bool)

(assert (=> d!19367 (= c!12426 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36029))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36029)))) (_1!1097 lt!35861))))))

(declare-fun e!52101 () Option!143)

(assert (=> d!19367 (= (getValueByKey!137 (t!5153 (toList!739 lt!36029)) (_1!1097 lt!35861)) e!52101)))

(declare-fun b!79797 () Bool)

(assert (=> b!79797 (= e!52102 (getValueByKey!137 (t!5153 (t!5153 (toList!739 lt!36029))) (_1!1097 lt!35861)))))

(declare-fun b!79795 () Bool)

(assert (=> b!79795 (= e!52101 (Some!142 (_2!1097 (h!2091 (t!5153 (toList!739 lt!36029))))))))

(declare-fun b!79796 () Bool)

(assert (=> b!79796 (= e!52101 e!52102)))

(declare-fun c!12427 () Bool)

(assert (=> b!79796 (= c!12427 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36029))) (not (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36029)))) (_1!1097 lt!35861)))))))

(assert (= (and d!19367 c!12426) b!79795))

(assert (= (and d!19367 (not c!12426)) b!79796))

(assert (= (and b!79796 c!12427) b!79797))

(assert (= (and b!79796 (not c!12427)) b!79798))

(declare-fun m!81153 () Bool)

(assert (=> b!79797 m!81153))

(assert (=> b!78327 d!19367))

(declare-fun d!19369 () Bool)

(declare-fun lt!37049 () Bool)

(assert (=> d!19369 (= lt!37049 (select (content!84 Nil!1505) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!52104 () Bool)

(assert (=> d!19369 (= lt!37049 e!52104)))

(declare-fun res!41643 () Bool)

(assert (=> d!19369 (=> (not res!41643) (not e!52104))))

(assert (=> d!19369 (= res!41643 ((_ is Cons!1504) Nil!1505))))

(assert (=> d!19369 (= (contains!744 Nil!1505 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) lt!37049)))

(declare-fun b!79799 () Bool)

(declare-fun e!52103 () Bool)

(assert (=> b!79799 (= e!52104 e!52103)))

(declare-fun res!41642 () Bool)

(assert (=> b!79799 (=> res!41642 e!52103)))

(assert (=> b!79799 (= res!41642 (= (h!2092 Nil!1505) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79800 () Bool)

(assert (=> b!79800 (= e!52103 (contains!744 (t!5154 Nil!1505) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!19369 res!41643) b!79799))

(assert (= (and b!79799 (not res!41642)) b!79800))

(assert (=> d!19369 m!79325))

(assert (=> d!19369 m!78509))

(declare-fun m!81155 () Bool)

(assert (=> d!19369 m!81155))

(assert (=> b!79800 m!78509))

(declare-fun m!81157 () Bool)

(assert (=> b!79800 m!81157))

(assert (=> b!78771 d!19369))

(assert (=> b!78496 d!19167))

(declare-fun d!19371 () Bool)

(declare-fun lt!37050 () Bool)

(assert (=> d!19371 (= lt!37050 (select (content!83 (toList!739 lt!36407)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!52106 () Bool)

(assert (=> d!19371 (= lt!37050 e!52106)))

(declare-fun res!41644 () Bool)

(assert (=> d!19371 (=> (not res!41644) (not e!52106))))

(assert (=> d!19371 (= res!41644 ((_ is Cons!1503) (toList!739 lt!36407)))))

(assert (=> d!19371 (= (contains!743 (toList!739 lt!36407) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!37050)))

(declare-fun b!79801 () Bool)

(declare-fun e!52105 () Bool)

(assert (=> b!79801 (= e!52106 e!52105)))

(declare-fun res!41645 () Bool)

(assert (=> b!79801 (=> res!41645 e!52105)))

(assert (=> b!79801 (= res!41645 (= (h!2091 (toList!739 lt!36407)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!79802 () Bool)

(assert (=> b!79802 (= e!52105 (contains!743 (t!5153 (toList!739 lt!36407)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!19371 res!41644) b!79801))

(assert (= (and b!79801 (not res!41645)) b!79802))

(declare-fun m!81159 () Bool)

(assert (=> d!19371 m!81159))

(declare-fun m!81161 () Bool)

(assert (=> d!19371 m!81161))

(declare-fun m!81163 () Bool)

(assert (=> b!79802 m!81163))

(assert (=> b!78611 d!19371))

(declare-fun d!19373 () Bool)

(declare-fun e!52107 () Bool)

(assert (=> d!19373 e!52107))

(declare-fun res!41646 () Bool)

(assert (=> d!19373 (=> res!41646 e!52107)))

(declare-fun lt!37054 () Bool)

(assert (=> d!19373 (= res!41646 (not lt!37054))))

(declare-fun lt!37051 () Bool)

(assert (=> d!19373 (= lt!37054 lt!37051)))

(declare-fun lt!37052 () Unit!2257)

(declare-fun e!52108 () Unit!2257)

(assert (=> d!19373 (= lt!37052 e!52108)))

(declare-fun c!12428 () Bool)

(assert (=> d!19373 (= c!12428 lt!37051)))

(assert (=> d!19373 (= lt!37051 (containsKey!141 (toList!739 lt!36213) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19373 (= (contains!742 lt!36213 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37054)))

(declare-fun b!79803 () Bool)

(declare-fun lt!37053 () Unit!2257)

(assert (=> b!79803 (= e!52108 lt!37053)))

(assert (=> b!79803 (= lt!37053 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36213) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79803 (isDefined!90 (getValueByKey!137 (toList!739 lt!36213) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79804 () Bool)

(declare-fun Unit!2321 () Unit!2257)

(assert (=> b!79804 (= e!52108 Unit!2321)))

(declare-fun b!79805 () Bool)

(assert (=> b!79805 (= e!52107 (isDefined!90 (getValueByKey!137 (toList!739 lt!36213) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19373 c!12428) b!79803))

(assert (= (and d!19373 (not c!12428)) b!79804))

(assert (= (and d!19373 (not res!41646)) b!79805))

(declare-fun m!81165 () Bool)

(assert (=> d!19373 m!81165))

(declare-fun m!81167 () Bool)

(assert (=> b!79803 m!81167))

(assert (=> b!79803 m!80107))

(assert (=> b!79803 m!80107))

(declare-fun m!81169 () Bool)

(assert (=> b!79803 m!81169))

(assert (=> b!79805 m!80107))

(assert (=> b!79805 m!80107))

(assert (=> b!79805 m!81169))

(assert (=> bm!7185 d!19373))

(declare-fun b!79809 () Bool)

(declare-fun e!52110 () Option!143)

(assert (=> b!79809 (= e!52110 None!141)))

(declare-fun c!12429 () Bool)

(declare-fun d!19375 () Bool)

(assert (=> d!19375 (= c!12429 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35860))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!35860)))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(declare-fun e!52109 () Option!143)

(assert (=> d!19375 (= (getValueByKey!137 (t!5153 (toList!739 lt!35860)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) e!52109)))

(declare-fun b!79808 () Bool)

(assert (=> b!79808 (= e!52110 (getValueByKey!137 (t!5153 (t!5153 (toList!739 lt!35860))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!79806 () Bool)

(assert (=> b!79806 (= e!52109 (Some!142 (_2!1097 (h!2091 (t!5153 (toList!739 lt!35860))))))))

(declare-fun b!79807 () Bool)

(assert (=> b!79807 (= e!52109 e!52110)))

(declare-fun c!12430 () Bool)

(assert (=> b!79807 (= c!12430 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35860))) (not (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!35860)))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))))

(assert (= (and d!19375 c!12429) b!79806))

(assert (= (and d!19375 (not c!12429)) b!79807))

(assert (= (and b!79807 c!12430) b!79808))

(assert (= (and b!79807 (not c!12430)) b!79809))

(assert (=> b!79808 m!77965))

(declare-fun m!81171 () Bool)

(assert (=> b!79808 m!81171))

(assert (=> b!78636 d!19375))

(declare-fun d!19377 () Bool)

(declare-fun e!52111 () Bool)

(assert (=> d!19377 e!52111))

(declare-fun res!41647 () Bool)

(assert (=> d!19377 (=> res!41647 e!52111)))

(declare-fun lt!37058 () Bool)

(assert (=> d!19377 (= res!41647 (not lt!37058))))

(declare-fun lt!37055 () Bool)

(assert (=> d!19377 (= lt!37058 lt!37055)))

(declare-fun lt!37056 () Unit!2257)

(declare-fun e!52112 () Unit!2257)

(assert (=> d!19377 (= lt!37056 e!52112)))

(declare-fun c!12431 () Bool)

(assert (=> d!19377 (= c!12431 lt!37055)))

(assert (=> d!19377 (= lt!37055 (containsKey!141 (toList!739 lt!36277) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!19377 (= (contains!742 lt!36277 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37058)))

(declare-fun b!79810 () Bool)

(declare-fun lt!37057 () Unit!2257)

(assert (=> b!79810 (= e!52112 lt!37057)))

(assert (=> b!79810 (= lt!37057 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36277) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> b!79810 (isDefined!90 (getValueByKey!137 (toList!739 lt!36277) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79811 () Bool)

(declare-fun Unit!2322 () Unit!2257)

(assert (=> b!79811 (= e!52112 Unit!2322)))

(declare-fun b!79812 () Bool)

(assert (=> b!79812 (= e!52111 (isDefined!90 (getValueByKey!137 (toList!739 lt!36277) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!19377 c!12431) b!79810))

(assert (= (and d!19377 (not c!12431)) b!79811))

(assert (= (and d!19377 (not res!41647)) b!79812))

(declare-fun m!81173 () Bool)

(assert (=> d!19377 m!81173))

(declare-fun m!81175 () Bool)

(assert (=> b!79810 m!81175))

(assert (=> b!79810 m!78723))

(assert (=> b!79810 m!78723))

(declare-fun m!81177 () Bool)

(assert (=> b!79810 m!81177))

(assert (=> b!79812 m!78723))

(assert (=> b!79812 m!78723))

(assert (=> b!79812 m!81177))

(assert (=> d!18577 d!19377))

(declare-fun b!79816 () Bool)

(declare-fun e!52114 () Option!143)

(assert (=> b!79816 (= e!52114 None!141)))

(declare-fun c!12432 () Bool)

(declare-fun d!19379 () Bool)

(assert (=> d!19379 (= c!12432 (and ((_ is Cons!1503) lt!36276) (= (_1!1097 (h!2091 lt!36276)) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52113 () Option!143)

(assert (=> d!19379 (= (getValueByKey!137 lt!36276 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!52113)))

(declare-fun b!79815 () Bool)

(assert (=> b!79815 (= e!52114 (getValueByKey!137 (t!5153 lt!36276) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79813 () Bool)

(assert (=> b!79813 (= e!52113 (Some!142 (_2!1097 (h!2091 lt!36276))))))

(declare-fun b!79814 () Bool)

(assert (=> b!79814 (= e!52113 e!52114)))

(declare-fun c!12433 () Bool)

(assert (=> b!79814 (= c!12433 (and ((_ is Cons!1503) lt!36276) (not (= (_1!1097 (h!2091 lt!36276)) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19379 c!12432) b!79813))

(assert (= (and d!19379 (not c!12432)) b!79814))

(assert (= (and b!79814 c!12433) b!79815))

(assert (= (and b!79814 (not c!12433)) b!79816))

(declare-fun m!81179 () Bool)

(assert (=> b!79815 m!81179))

(assert (=> d!18577 d!19379))

(declare-fun d!19381 () Bool)

(assert (=> d!19381 (= (getValueByKey!137 lt!36276 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!37059 () Unit!2257)

(assert (=> d!19381 (= lt!37059 (choose!456 lt!36276 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!52115 () Bool)

(assert (=> d!19381 e!52115))

(declare-fun res!41648 () Bool)

(assert (=> d!19381 (=> (not res!41648) (not e!52115))))

(assert (=> d!19381 (= res!41648 (isStrictlySorted!295 lt!36276))))

(assert (=> d!19381 (= (lemmaContainsTupThenGetReturnValue!54 lt!36276 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37059)))

(declare-fun b!79817 () Bool)

(declare-fun res!41649 () Bool)

(assert (=> b!79817 (=> (not res!41649) (not e!52115))))

(assert (=> b!79817 (= res!41649 (containsKey!141 lt!36276 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79818 () Bool)

(assert (=> b!79818 (= e!52115 (contains!743 lt!36276 (tuple2!2173 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!19381 res!41648) b!79817))

(assert (= (and b!79817 res!41649) b!79818))

(assert (=> d!19381 m!78717))

(declare-fun m!81181 () Bool)

(assert (=> d!19381 m!81181))

(declare-fun m!81183 () Bool)

(assert (=> d!19381 m!81183))

(declare-fun m!81185 () Bool)

(assert (=> b!79817 m!81185))

(declare-fun m!81187 () Bool)

(assert (=> b!79818 m!81187))

(assert (=> d!18577 d!19381))

(declare-fun c!12436 () Bool)

(declare-fun b!79819 () Bool)

(declare-fun c!12437 () Bool)

(declare-fun e!52116 () List!1507)

(assert (=> b!79819 (= e!52116 (ite c!12437 (t!5153 (toList!739 lt!35987)) (ite c!12436 (Cons!1503 (h!2091 (toList!739 lt!35987)) (t!5153 (toList!739 lt!35987))) Nil!1504)))))

(declare-fun b!79820 () Bool)

(declare-fun e!52120 () List!1507)

(declare-fun call!7380 () List!1507)

(assert (=> b!79820 (= e!52120 call!7380)))

(declare-fun bm!7375 () Bool)

(declare-fun call!7378 () List!1507)

(declare-fun call!7379 () List!1507)

(assert (=> bm!7375 (= call!7378 call!7379)))

(declare-fun b!79821 () Bool)

(assert (=> b!79821 (= c!12436 (and ((_ is Cons!1503) (toList!739 lt!35987)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35987))) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52118 () List!1507)

(declare-fun e!52117 () List!1507)

(assert (=> b!79821 (= e!52118 e!52117)))

(declare-fun b!79822 () Bool)

(assert (=> b!79822 (= e!52116 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35987)) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79823 () Bool)

(declare-fun res!41651 () Bool)

(declare-fun e!52119 () Bool)

(assert (=> b!79823 (=> (not res!41651) (not e!52119))))

(declare-fun lt!37060 () List!1507)

(assert (=> b!79823 (= res!41651 (containsKey!141 lt!37060 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun c!12434 () Bool)

(declare-fun bm!7376 () Bool)

(assert (=> bm!7376 (= call!7380 ($colon$colon!69 e!52116 (ite c!12434 (h!2091 (toList!739 lt!35987)) (tuple2!2173 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun c!12435 () Bool)

(assert (=> bm!7376 (= c!12435 c!12434)))

(declare-fun b!79824 () Bool)

(assert (=> b!79824 (= e!52120 e!52118)))

(assert (=> b!79824 (= c!12437 (and ((_ is Cons!1503) (toList!739 lt!35987)) (= (_1!1097 (h!2091 (toList!739 lt!35987))) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79826 () Bool)

(assert (=> b!79826 (= e!52118 call!7379)))

(declare-fun b!79827 () Bool)

(assert (=> b!79827 (= e!52119 (contains!743 lt!37060 (tuple2!2173 (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79825 () Bool)

(assert (=> b!79825 (= e!52117 call!7378)))

(declare-fun d!19383 () Bool)

(assert (=> d!19383 e!52119))

(declare-fun res!41650 () Bool)

(assert (=> d!19383 (=> (not res!41650) (not e!52119))))

(assert (=> d!19383 (= res!41650 (isStrictlySorted!295 lt!37060))))

(assert (=> d!19383 (= lt!37060 e!52120)))

(assert (=> d!19383 (= c!12434 (and ((_ is Cons!1503) (toList!739 lt!35987)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35987))) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!19383 (isStrictlySorted!295 (toList!739 lt!35987))))

(assert (=> d!19383 (= (insertStrictlySorted!57 (toList!739 lt!35987) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37060)))

(declare-fun bm!7377 () Bool)

(assert (=> bm!7377 (= call!7379 call!7380)))

(declare-fun b!79828 () Bool)

(assert (=> b!79828 (= e!52117 call!7378)))

(assert (= (and d!19383 c!12434) b!79820))

(assert (= (and d!19383 (not c!12434)) b!79824))

(assert (= (and b!79824 c!12437) b!79826))

(assert (= (and b!79824 (not c!12437)) b!79821))

(assert (= (and b!79821 c!12436) b!79825))

(assert (= (and b!79821 (not c!12436)) b!79828))

(assert (= (or b!79825 b!79828) bm!7375))

(assert (= (or b!79826 bm!7375) bm!7377))

(assert (= (or b!79820 bm!7377) bm!7376))

(assert (= (and bm!7376 c!12435) b!79822))

(assert (= (and bm!7376 (not c!12435)) b!79819))

(assert (= (and d!19383 res!41650) b!79823))

(assert (= (and b!79823 res!41651) b!79827))

(declare-fun m!81189 () Bool)

(assert (=> b!79827 m!81189))

(declare-fun m!81191 () Bool)

(assert (=> d!19383 m!81191))

(declare-fun m!81193 () Bool)

(assert (=> d!19383 m!81193))

(declare-fun m!81195 () Bool)

(assert (=> b!79822 m!81195))

(declare-fun m!81197 () Bool)

(assert (=> b!79823 m!81197))

(declare-fun m!81199 () Bool)

(assert (=> bm!7376 m!81199))

(assert (=> d!18577 d!19383))

(declare-fun d!19385 () Bool)

(declare-fun lt!37061 () Bool)

(assert (=> d!19385 (= lt!37061 (select (content!83 (t!5153 (toList!739 lt!36049))) lt!35870))))

(declare-fun e!52122 () Bool)

(assert (=> d!19385 (= lt!37061 e!52122)))

(declare-fun res!41652 () Bool)

(assert (=> d!19385 (=> (not res!41652) (not e!52122))))

(assert (=> d!19385 (= res!41652 ((_ is Cons!1503) (t!5153 (toList!739 lt!36049))))))

(assert (=> d!19385 (= (contains!743 (t!5153 (toList!739 lt!36049)) lt!35870) lt!37061)))

(declare-fun b!79829 () Bool)

(declare-fun e!52121 () Bool)

(assert (=> b!79829 (= e!52122 e!52121)))

(declare-fun res!41653 () Bool)

(assert (=> b!79829 (=> res!41653 e!52121)))

(assert (=> b!79829 (= res!41653 (= (h!2091 (t!5153 (toList!739 lt!36049))) lt!35870))))

(declare-fun b!79830 () Bool)

(assert (=> b!79830 (= e!52121 (contains!743 (t!5153 (t!5153 (toList!739 lt!36049))) lt!35870))))

(assert (= (and d!19385 res!41652) b!79829))

(assert (= (and b!79829 (not res!41653)) b!79830))

(declare-fun m!81201 () Bool)

(assert (=> d!19385 m!81201))

(declare-fun m!81203 () Bool)

(assert (=> d!19385 m!81203))

(declare-fun m!81205 () Bool)

(assert (=> b!79830 m!81205))

(assert (=> b!78545 d!19385))

(declare-fun b!79834 () Bool)

(declare-fun e!52123 () Bool)

(assert (=> b!79834 (= e!52123 (and (bvsge (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000000) (bvsle (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000011) (bvsge (_vacant!415 (_2!1098 lt!36136)) #b00000000000000000000000000000000)))))

(declare-fun b!79832 () Bool)

(declare-fun res!41655 () Bool)

(assert (=> b!79832 (=> (not res!41655) (not e!52123))))

(assert (=> b!79832 (= res!41655 (bvsge (size!2140 (_2!1098 lt!36136)) (_size!415 (_2!1098 lt!36136))))))

(declare-fun d!19387 () Bool)

(declare-fun res!41654 () Bool)

(assert (=> d!19387 (=> (not res!41654) (not e!52123))))

(assert (=> d!19387 (= res!41654 (validMask!0 (mask!6268 (_2!1098 lt!36136))))))

(assert (=> d!19387 (= (simpleValid!55 (_2!1098 lt!36136)) e!52123)))

(declare-fun b!79831 () Bool)

(declare-fun res!41657 () Bool)

(assert (=> b!79831 (=> (not res!41657) (not e!52123))))

(assert (=> b!79831 (= res!41657 (and (= (size!2137 (_values!2255 (_2!1098 lt!36136))) (bvadd (mask!6268 (_2!1098 lt!36136)) #b00000000000000000000000000000001)) (= (size!2136 (_keys!3932 (_2!1098 lt!36136))) (size!2137 (_values!2255 (_2!1098 lt!36136)))) (bvsge (_size!415 (_2!1098 lt!36136)) #b00000000000000000000000000000000) (bvsle (_size!415 (_2!1098 lt!36136)) (bvadd (mask!6268 (_2!1098 lt!36136)) #b00000000000000000000000000000001))))))

(declare-fun b!79833 () Bool)

(declare-fun res!41656 () Bool)

(assert (=> b!79833 (=> (not res!41656) (not e!52123))))

(assert (=> b!79833 (= res!41656 (= (size!2140 (_2!1098 lt!36136)) (bvadd (_size!415 (_2!1098 lt!36136)) (bvsdiv (bvadd (extraKeys!2123 (_2!1098 lt!36136)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!19387 res!41654) b!79831))

(assert (= (and b!79831 res!41657) b!79832))

(assert (= (and b!79832 res!41655) b!79833))

(assert (= (and b!79833 res!41656) b!79834))

(declare-fun m!81207 () Bool)

(assert (=> b!79832 m!81207))

(assert (=> d!19387 m!79563))

(assert (=> b!79833 m!81207))

(assert (=> d!18721 d!19387))

(assert (=> b!78346 d!19165))

(assert (=> b!78346 d!18517))

(declare-fun d!19389 () Bool)

(declare-fun lt!37062 () Bool)

(assert (=> d!19389 (= lt!37062 (select (content!83 lt!36044) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun e!52125 () Bool)

(assert (=> d!19389 (= lt!37062 e!52125)))

(declare-fun res!41658 () Bool)

(assert (=> d!19389 (=> (not res!41658) (not e!52125))))

(assert (=> d!19389 (= res!41658 ((_ is Cons!1503) lt!36044))))

(assert (=> d!19389 (= (contains!743 lt!36044 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))) lt!37062)))

(declare-fun b!79835 () Bool)

(declare-fun e!52124 () Bool)

(assert (=> b!79835 (= e!52125 e!52124)))

(declare-fun res!41659 () Bool)

(assert (=> b!79835 (=> res!41659 e!52124)))

(assert (=> b!79835 (= res!41659 (= (h!2091 lt!36044) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!79836 () Bool)

(assert (=> b!79836 (= e!52124 (contains!743 (t!5153 lt!36044) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(assert (= (and d!19389 res!41658) b!79835))

(assert (= (and b!79835 (not res!41659)) b!79836))

(declare-fun m!81209 () Bool)

(assert (=> d!19389 m!81209))

(declare-fun m!81211 () Bool)

(assert (=> d!19389 m!81211))

(declare-fun m!81213 () Bool)

(assert (=> b!79836 m!81213))

(assert (=> b!78646 d!19389))

(declare-fun d!19391 () Bool)

(declare-fun res!41660 () Bool)

(declare-fun e!52126 () Bool)

(assert (=> d!19391 (=> res!41660 e!52126)))

(assert (=> d!19391 (= res!41660 (and ((_ is Cons!1503) lt!36028) (= (_1!1097 (h!2091 lt!36028)) (_1!1097 lt!35861))))))

(assert (=> d!19391 (= (containsKey!141 lt!36028 (_1!1097 lt!35861)) e!52126)))

(declare-fun b!79837 () Bool)

(declare-fun e!52127 () Bool)

(assert (=> b!79837 (= e!52126 e!52127)))

(declare-fun res!41661 () Bool)

(assert (=> b!79837 (=> (not res!41661) (not e!52127))))

(assert (=> b!79837 (= res!41661 (and (or (not ((_ is Cons!1503) lt!36028)) (bvsle (_1!1097 (h!2091 lt!36028)) (_1!1097 lt!35861))) ((_ is Cons!1503) lt!36028) (bvslt (_1!1097 (h!2091 lt!36028)) (_1!1097 lt!35861))))))

(declare-fun b!79838 () Bool)

(assert (=> b!79838 (= e!52127 (containsKey!141 (t!5153 lt!36028) (_1!1097 lt!35861)))))

(assert (= (and d!19391 (not res!41660)) b!79837))

(assert (= (and b!79837 res!41661) b!79838))

(declare-fun m!81215 () Bool)

(assert (=> b!79838 m!81215))

(assert (=> b!78355 d!19391))

(declare-fun d!19393 () Bool)

(declare-fun e!52128 () Bool)

(assert (=> d!19393 e!52128))

(declare-fun res!41662 () Bool)

(assert (=> d!19393 (=> res!41662 e!52128)))

(declare-fun lt!37066 () Bool)

(assert (=> d!19393 (= res!41662 (not lt!37066))))

(declare-fun lt!37063 () Bool)

(assert (=> d!19393 (= lt!37066 lt!37063)))

(declare-fun lt!37064 () Unit!2257)

(declare-fun e!52129 () Unit!2257)

(assert (=> d!19393 (= lt!37064 e!52129)))

(declare-fun c!12438 () Bool)

(assert (=> d!19393 (= c!12438 lt!37063)))

(assert (=> d!19393 (= lt!37063 (containsKey!141 (toList!739 lt!36196) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19393 (= (contains!742 lt!36196 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!37066)))

(declare-fun b!79839 () Bool)

(declare-fun lt!37065 () Unit!2257)

(assert (=> b!79839 (= e!52129 lt!37065)))

(assert (=> b!79839 (= lt!37065 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36196) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> b!79839 (isDefined!90 (getValueByKey!137 (toList!739 lt!36196) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79840 () Bool)

(declare-fun Unit!2323 () Unit!2257)

(assert (=> b!79840 (= e!52129 Unit!2323)))

(declare-fun b!79841 () Bool)

(assert (=> b!79841 (= e!52128 (isDefined!90 (getValueByKey!137 (toList!739 lt!36196) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (= (and d!19393 c!12438) b!79839))

(assert (= (and d!19393 (not c!12438)) b!79840))

(assert (= (and d!19393 (not res!41662)) b!79841))

(declare-fun m!81217 () Bool)

(assert (=> d!19393 m!81217))

(declare-fun m!81219 () Bool)

(assert (=> b!79839 m!81219))

(assert (=> b!79839 m!78477))

(assert (=> b!79839 m!78477))

(declare-fun m!81221 () Bool)

(assert (=> b!79839 m!81221))

(assert (=> b!79841 m!78477))

(assert (=> b!79841 m!78477))

(assert (=> b!79841 m!81221))

(assert (=> d!18501 d!19393))

(declare-fun b!79845 () Bool)

(declare-fun e!52131 () Option!143)

(assert (=> b!79845 (= e!52131 None!141)))

(declare-fun c!12439 () Bool)

(declare-fun d!19395 () Bool)

(assert (=> d!19395 (= c!12439 (and ((_ is Cons!1503) lt!36195) (= (_1!1097 (h!2091 lt!36195)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52130 () Option!143)

(assert (=> d!19395 (= (getValueByKey!137 lt!36195 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) e!52130)))

(declare-fun b!79844 () Bool)

(assert (=> b!79844 (= e!52131 (getValueByKey!137 (t!5153 lt!36195) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79842 () Bool)

(assert (=> b!79842 (= e!52130 (Some!142 (_2!1097 (h!2091 lt!36195))))))

(declare-fun b!79843 () Bool)

(assert (=> b!79843 (= e!52130 e!52131)))

(declare-fun c!12440 () Bool)

(assert (=> b!79843 (= c!12440 (and ((_ is Cons!1503) lt!36195) (not (= (_1!1097 (h!2091 lt!36195)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19395 c!12439) b!79842))

(assert (= (and d!19395 (not c!12439)) b!79843))

(assert (= (and b!79843 c!12440) b!79844))

(assert (= (and b!79843 (not c!12440)) b!79845))

(declare-fun m!81223 () Bool)

(assert (=> b!79844 m!81223))

(assert (=> d!18501 d!19395))

(declare-fun d!19397 () Bool)

(assert (=> d!19397 (= (getValueByKey!137 lt!36195 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!37067 () Unit!2257)

(assert (=> d!19397 (= lt!37067 (choose!456 lt!36195 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun e!52132 () Bool)

(assert (=> d!19397 e!52132))

(declare-fun res!41663 () Bool)

(assert (=> d!19397 (=> (not res!41663) (not e!52132))))

(assert (=> d!19397 (= res!41663 (isStrictlySorted!295 lt!36195))))

(assert (=> d!19397 (= (lemmaContainsTupThenGetReturnValue!54 lt!36195 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!37067)))

(declare-fun b!79846 () Bool)

(declare-fun res!41664 () Bool)

(assert (=> b!79846 (=> (not res!41664) (not e!52132))))

(assert (=> b!79846 (= res!41664 (containsKey!141 lt!36195 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79847 () Bool)

(assert (=> b!79847 (= e!52132 (contains!743 lt!36195 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (= (and d!19397 res!41663) b!79846))

(assert (= (and b!79846 res!41664) b!79847))

(assert (=> d!19397 m!78471))

(declare-fun m!81225 () Bool)

(assert (=> d!19397 m!81225))

(declare-fun m!81227 () Bool)

(assert (=> d!19397 m!81227))

(declare-fun m!81229 () Bool)

(assert (=> b!79846 m!81229))

(declare-fun m!81231 () Bool)

(assert (=> b!79847 m!81231))

(assert (=> d!18501 d!19397))

(declare-fun c!12443 () Bool)

(declare-fun e!52133 () List!1507)

(declare-fun c!12444 () Bool)

(declare-fun b!79848 () Bool)

(assert (=> b!79848 (= e!52133 (ite c!12444 (t!5153 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (ite c!12443 (Cons!1503 (h!2091 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (t!5153 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) Nil!1504)))))

(declare-fun b!79849 () Bool)

(declare-fun e!52137 () List!1507)

(declare-fun call!7383 () List!1507)

(assert (=> b!79849 (= e!52137 call!7383)))

(declare-fun bm!7378 () Bool)

(declare-fun call!7381 () List!1507)

(declare-fun call!7382 () List!1507)

(assert (=> bm!7378 (= call!7381 call!7382)))

(declare-fun b!79850 () Bool)

(assert (=> b!79850 (= c!12443 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (bvsgt (_1!1097 (h!2091 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52135 () List!1507)

(declare-fun e!52134 () List!1507)

(assert (=> b!79850 (= e!52135 e!52134)))

(declare-fun b!79851 () Bool)

(assert (=> b!79851 (= e!52133 (insertStrictlySorted!57 (t!5153 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79852 () Bool)

(declare-fun res!41666 () Bool)

(declare-fun e!52136 () Bool)

(assert (=> b!79852 (=> (not res!41666) (not e!52136))))

(declare-fun lt!37068 () List!1507)

(assert (=> b!79852 (= res!41666 (containsKey!141 lt!37068 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun c!12441 () Bool)

(declare-fun bm!7379 () Bool)

(assert (=> bm!7379 (= call!7383 ($colon$colon!69 e!52133 (ite c!12441 (h!2091 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun c!12442 () Bool)

(assert (=> bm!7379 (= c!12442 c!12441)))

(declare-fun b!79853 () Bool)

(assert (=> b!79853 (= e!52137 e!52135)))

(assert (=> b!79853 (= c!12444 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79855 () Bool)

(assert (=> b!79855 (= e!52135 call!7382)))

(declare-fun b!79856 () Bool)

(assert (=> b!79856 (= e!52136 (contains!743 lt!37068 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79854 () Bool)

(assert (=> b!79854 (= e!52134 call!7381)))

(declare-fun d!19399 () Bool)

(assert (=> d!19399 e!52136))

(declare-fun res!41665 () Bool)

(assert (=> d!19399 (=> (not res!41665) (not e!52136))))

(assert (=> d!19399 (= res!41665 (isStrictlySorted!295 lt!37068))))

(assert (=> d!19399 (= lt!37068 e!52137)))

(assert (=> d!19399 (= c!12441 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (bvslt (_1!1097 (h!2091 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (=> d!19399 (isStrictlySorted!295 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!19399 (= (insertStrictlySorted!57 (toList!739 (+!105 lt!35868 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!37068)))

(declare-fun bm!7380 () Bool)

(assert (=> bm!7380 (= call!7382 call!7383)))

(declare-fun b!79857 () Bool)

(assert (=> b!79857 (= e!52134 call!7381)))

(assert (= (and d!19399 c!12441) b!79849))

(assert (= (and d!19399 (not c!12441)) b!79853))

(assert (= (and b!79853 c!12444) b!79855))

(assert (= (and b!79853 (not c!12444)) b!79850))

(assert (= (and b!79850 c!12443) b!79854))

(assert (= (and b!79850 (not c!12443)) b!79857))

(assert (= (or b!79854 b!79857) bm!7378))

(assert (= (or b!79855 bm!7378) bm!7380))

(assert (= (or b!79849 bm!7380) bm!7379))

(assert (= (and bm!7379 c!12442) b!79851))

(assert (= (and bm!7379 (not c!12442)) b!79848))

(assert (= (and d!19399 res!41665) b!79852))

(assert (= (and b!79852 res!41666) b!79856))

(declare-fun m!81233 () Bool)

(assert (=> b!79856 m!81233))

(declare-fun m!81235 () Bool)

(assert (=> d!19399 m!81235))

(declare-fun m!81237 () Bool)

(assert (=> d!19399 m!81237))

(declare-fun m!81239 () Bool)

(assert (=> b!79851 m!81239))

(declare-fun m!81241 () Bool)

(assert (=> b!79852 m!81241))

(declare-fun m!81243 () Bool)

(assert (=> bm!7379 m!81243))

(assert (=> d!18501 d!19399))

(declare-fun d!19401 () Bool)

(declare-fun res!41667 () Bool)

(declare-fun e!52138 () Bool)

(assert (=> d!19401 (=> res!41667 e!52138)))

(assert (=> d!19401 (= res!41667 (or ((_ is Nil!1504) lt!36315) ((_ is Nil!1504) (t!5153 lt!36315))))))

(assert (=> d!19401 (= (isStrictlySorted!295 lt!36315) e!52138)))

(declare-fun b!79858 () Bool)

(declare-fun e!52139 () Bool)

(assert (=> b!79858 (= e!52138 e!52139)))

(declare-fun res!41668 () Bool)

(assert (=> b!79858 (=> (not res!41668) (not e!52139))))

(assert (=> b!79858 (= res!41668 (bvslt (_1!1097 (h!2091 lt!36315)) (_1!1097 (h!2091 (t!5153 lt!36315)))))))

(declare-fun b!79859 () Bool)

(assert (=> b!79859 (= e!52139 (isStrictlySorted!295 (t!5153 lt!36315)))))

(assert (= (and d!19401 (not res!41667)) b!79858))

(assert (= (and b!79858 res!41668) b!79859))

(declare-fun m!81245 () Bool)

(assert (=> b!79859 m!81245))

(assert (=> d!18617 d!19401))

(declare-fun d!19403 () Bool)

(declare-fun res!41669 () Bool)

(declare-fun e!52140 () Bool)

(assert (=> d!19403 (=> res!41669 e!52140)))

(assert (=> d!19403 (= res!41669 (or ((_ is Nil!1504) (toList!739 lt!35865)) ((_ is Nil!1504) (t!5153 (toList!739 lt!35865)))))))

(assert (=> d!19403 (= (isStrictlySorted!295 (toList!739 lt!35865)) e!52140)))

(declare-fun b!79860 () Bool)

(declare-fun e!52141 () Bool)

(assert (=> b!79860 (= e!52140 e!52141)))

(declare-fun res!41670 () Bool)

(assert (=> b!79860 (=> (not res!41670) (not e!52141))))

(assert (=> b!79860 (= res!41670 (bvslt (_1!1097 (h!2091 (toList!739 lt!35865))) (_1!1097 (h!2091 (t!5153 (toList!739 lt!35865))))))))

(declare-fun b!79861 () Bool)

(assert (=> b!79861 (= e!52141 (isStrictlySorted!295 (t!5153 (toList!739 lt!35865))))))

(assert (= (and d!19403 (not res!41669)) b!79860))

(assert (= (and b!79860 res!41670) b!79861))

(assert (=> b!79861 m!79339))

(assert (=> d!18617 d!19403))

(declare-fun d!19405 () Bool)

(assert (=> d!19405 (= (get!1176 (getValueByKey!137 (toList!739 lt!35970) lt!35976)) (v!2596 (getValueByKey!137 (toList!739 lt!35970) lt!35976)))))

(assert (=> d!18601 d!19405))

(declare-fun b!79865 () Bool)

(declare-fun e!52143 () Option!143)

(assert (=> b!79865 (= e!52143 None!141)))

(declare-fun d!19407 () Bool)

(declare-fun c!12445 () Bool)

(assert (=> d!19407 (= c!12445 (and ((_ is Cons!1503) (toList!739 lt!35970)) (= (_1!1097 (h!2091 (toList!739 lt!35970))) lt!35976)))))

(declare-fun e!52142 () Option!143)

(assert (=> d!19407 (= (getValueByKey!137 (toList!739 lt!35970) lt!35976) e!52142)))

(declare-fun b!79864 () Bool)

(assert (=> b!79864 (= e!52143 (getValueByKey!137 (t!5153 (toList!739 lt!35970)) lt!35976))))

(declare-fun b!79862 () Bool)

(assert (=> b!79862 (= e!52142 (Some!142 (_2!1097 (h!2091 (toList!739 lt!35970)))))))

(declare-fun b!79863 () Bool)

(assert (=> b!79863 (= e!52142 e!52143)))

(declare-fun c!12446 () Bool)

(assert (=> b!79863 (= c!12446 (and ((_ is Cons!1503) (toList!739 lt!35970)) (not (= (_1!1097 (h!2091 (toList!739 lt!35970))) lt!35976))))))

(assert (= (and d!19407 c!12445) b!79862))

(assert (= (and d!19407 (not c!12445)) b!79863))

(assert (= (and b!79863 c!12446) b!79864))

(assert (= (and b!79863 (not c!12446)) b!79865))

(declare-fun m!81247 () Bool)

(assert (=> b!79864 m!81247))

(assert (=> d!18601 d!19407))

(declare-fun d!19409 () Bool)

(declare-fun e!52144 () Bool)

(assert (=> d!19409 e!52144))

(declare-fun res!41671 () Bool)

(assert (=> d!19409 (=> res!41671 e!52144)))

(declare-fun lt!37072 () Bool)

(assert (=> d!19409 (= res!41671 (not lt!37072))))

(declare-fun lt!37069 () Bool)

(assert (=> d!19409 (= lt!37072 lt!37069)))

(declare-fun lt!37070 () Unit!2257)

(declare-fun e!52145 () Unit!2257)

(assert (=> d!19409 (= lt!37070 e!52145)))

(declare-fun c!12447 () Bool)

(assert (=> d!19409 (= c!12447 lt!37069)))

(assert (=> d!19409 (= lt!37069 (containsKey!141 (toList!739 lt!36316) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19409 (= (contains!742 lt!36316 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37072)))

(declare-fun b!79866 () Bool)

(declare-fun lt!37071 () Unit!2257)

(assert (=> b!79866 (= e!52145 lt!37071)))

(assert (=> b!79866 (= lt!37071 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36316) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79866 (isDefined!90 (getValueByKey!137 (toList!739 lt!36316) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79867 () Bool)

(declare-fun Unit!2324 () Unit!2257)

(assert (=> b!79867 (= e!52145 Unit!2324)))

(declare-fun b!79868 () Bool)

(assert (=> b!79868 (= e!52144 (isDefined!90 (getValueByKey!137 (toList!739 lt!36316) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19409 c!12447) b!79866))

(assert (= (and d!19409 (not c!12447)) b!79867))

(assert (= (and d!19409 (not res!41671)) b!79868))

(declare-fun m!81249 () Bool)

(assert (=> d!19409 m!81249))

(declare-fun m!81251 () Bool)

(assert (=> b!79866 m!81251))

(declare-fun m!81253 () Bool)

(assert (=> b!79866 m!81253))

(assert (=> b!79866 m!81253))

(declare-fun m!81255 () Bool)

(assert (=> b!79866 m!81255))

(assert (=> b!79868 m!81253))

(assert (=> b!79868 m!81253))

(assert (=> b!79868 m!81255))

(assert (=> d!18619 d!19409))

(assert (=> d!18619 d!18451))

(declare-fun d!19411 () Bool)

(assert (=> d!19411 (= ($colon$colon!69 e!51450 (ite c!12124 (h!2091 (toList!739 lt!35869)) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864)))) (Cons!1503 (ite c!12124 (h!2091 (toList!739 lt!35869)) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))) e!51450))))

(assert (=> bm!7254 d!19411))

(declare-fun d!19413 () Bool)

(declare-fun res!41672 () Bool)

(declare-fun e!52146 () Bool)

(assert (=> d!19413 (=> res!41672 e!52146)))

(assert (=> d!19413 (= res!41672 (and ((_ is Cons!1503) (toList!739 lt!36049)) (= (_1!1097 (h!2091 (toList!739 lt!36049))) (_1!1097 lt!35870))))))

(assert (=> d!19413 (= (containsKey!141 (toList!739 lt!36049) (_1!1097 lt!35870)) e!52146)))

(declare-fun b!79869 () Bool)

(declare-fun e!52147 () Bool)

(assert (=> b!79869 (= e!52146 e!52147)))

(declare-fun res!41673 () Bool)

(assert (=> b!79869 (=> (not res!41673) (not e!52147))))

(assert (=> b!79869 (= res!41673 (and (or (not ((_ is Cons!1503) (toList!739 lt!36049))) (bvsle (_1!1097 (h!2091 (toList!739 lt!36049))) (_1!1097 lt!35870))) ((_ is Cons!1503) (toList!739 lt!36049)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36049))) (_1!1097 lt!35870))))))

(declare-fun b!79870 () Bool)

(assert (=> b!79870 (= e!52147 (containsKey!141 (t!5153 (toList!739 lt!36049)) (_1!1097 lt!35870)))))

(assert (= (and d!19413 (not res!41672)) b!79869))

(assert (= (and b!79869 res!41673) b!79870))

(declare-fun m!81257 () Bool)

(assert (=> b!79870 m!81257))

(assert (=> d!18679 d!19413))

(assert (=> b!78609 d!19173))

(assert (=> b!78609 d!19175))

(declare-fun b!79874 () Bool)

(declare-fun e!52149 () Option!143)

(assert (=> b!79874 (= e!52149 None!141)))

(declare-fun c!12448 () Bool)

(declare-fun d!19415 () Bool)

(assert (=> d!19415 (= c!12448 (and ((_ is Cons!1503) (toList!739 lt!36196)) (= (_1!1097 (h!2091 (toList!739 lt!36196))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52148 () Option!143)

(assert (=> d!19415 (= (getValueByKey!137 (toList!739 lt!36196) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) e!52148)))

(declare-fun b!79873 () Bool)

(assert (=> b!79873 (= e!52149 (getValueByKey!137 (t!5153 (toList!739 lt!36196)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!79871 () Bool)

(assert (=> b!79871 (= e!52148 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36196)))))))

(declare-fun b!79872 () Bool)

(assert (=> b!79872 (= e!52148 e!52149)))

(declare-fun c!12449 () Bool)

(assert (=> b!79872 (= c!12449 (and ((_ is Cons!1503) (toList!739 lt!36196)) (not (= (_1!1097 (h!2091 (toList!739 lt!36196))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19415 c!12448) b!79871))

(assert (= (and d!19415 (not c!12448)) b!79872))

(assert (= (and b!79872 c!12449) b!79873))

(assert (= (and b!79872 (not c!12449)) b!79874))

(declare-fun m!81259 () Bool)

(assert (=> b!79873 m!81259))

(assert (=> b!78267 d!19415))

(declare-fun c!12452 () Bool)

(declare-fun e!52150 () List!1507)

(declare-fun b!79875 () Bool)

(declare-fun c!12453 () Bool)

(assert (=> b!79875 (= e!52150 (ite c!12453 (t!5153 (t!5153 (toList!739 lt!35868))) (ite c!12452 (Cons!1503 (h!2091 (t!5153 (toList!739 lt!35868))) (t!5153 (t!5153 (toList!739 lt!35868)))) Nil!1504)))))

(declare-fun b!79876 () Bool)

(declare-fun e!52154 () List!1507)

(declare-fun call!7386 () List!1507)

(assert (=> b!79876 (= e!52154 call!7386)))

(declare-fun bm!7381 () Bool)

(declare-fun call!7384 () List!1507)

(declare-fun call!7385 () List!1507)

(assert (=> bm!7381 (= call!7384 call!7385)))

(declare-fun b!79877 () Bool)

(assert (=> b!79877 (= c!12452 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35868))) (bvsgt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35868)))) (_1!1097 lt!35861))))))

(declare-fun e!52152 () List!1507)

(declare-fun e!52151 () List!1507)

(assert (=> b!79877 (= e!52152 e!52151)))

(declare-fun b!79878 () Bool)

(assert (=> b!79878 (= e!52150 (insertStrictlySorted!57 (t!5153 (t!5153 (toList!739 lt!35868))) (_1!1097 lt!35861) (_2!1097 lt!35861)))))

(declare-fun b!79879 () Bool)

(declare-fun res!41675 () Bool)

(declare-fun e!52153 () Bool)

(assert (=> b!79879 (=> (not res!41675) (not e!52153))))

(declare-fun lt!37073 () List!1507)

(assert (=> b!79879 (= res!41675 (containsKey!141 lt!37073 (_1!1097 lt!35861)))))

(declare-fun bm!7382 () Bool)

(declare-fun c!12450 () Bool)

(assert (=> bm!7382 (= call!7386 ($colon$colon!69 e!52150 (ite c!12450 (h!2091 (t!5153 (toList!739 lt!35868))) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861)))))))

(declare-fun c!12451 () Bool)

(assert (=> bm!7382 (= c!12451 c!12450)))

(declare-fun b!79880 () Bool)

(assert (=> b!79880 (= e!52154 e!52152)))

(assert (=> b!79880 (= c!12453 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35868))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!35868)))) (_1!1097 lt!35861))))))

(declare-fun b!79882 () Bool)

(assert (=> b!79882 (= e!52152 call!7385)))

(declare-fun b!79883 () Bool)

(assert (=> b!79883 (= e!52153 (contains!743 lt!37073 (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun b!79881 () Bool)

(assert (=> b!79881 (= e!52151 call!7384)))

(declare-fun d!19417 () Bool)

(assert (=> d!19417 e!52153))

(declare-fun res!41674 () Bool)

(assert (=> d!19417 (=> (not res!41674) (not e!52153))))

(assert (=> d!19417 (= res!41674 (isStrictlySorted!295 lt!37073))))

(assert (=> d!19417 (= lt!37073 e!52154)))

(assert (=> d!19417 (= c!12450 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35868))) (bvslt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35868)))) (_1!1097 lt!35861))))))

(assert (=> d!19417 (isStrictlySorted!295 (t!5153 (toList!739 lt!35868)))))

(assert (=> d!19417 (= (insertStrictlySorted!57 (t!5153 (toList!739 lt!35868)) (_1!1097 lt!35861) (_2!1097 lt!35861)) lt!37073)))

(declare-fun bm!7383 () Bool)

(assert (=> bm!7383 (= call!7385 call!7386)))

(declare-fun b!79884 () Bool)

(assert (=> b!79884 (= e!52151 call!7384)))

(assert (= (and d!19417 c!12450) b!79876))

(assert (= (and d!19417 (not c!12450)) b!79880))

(assert (= (and b!79880 c!12453) b!79882))

(assert (= (and b!79880 (not c!12453)) b!79877))

(assert (= (and b!79877 c!12452) b!79881))

(assert (= (and b!79877 (not c!12452)) b!79884))

(assert (= (or b!79881 b!79884) bm!7381))

(assert (= (or b!79882 bm!7381) bm!7383))

(assert (= (or b!79876 bm!7383) bm!7382))

(assert (= (and bm!7382 c!12451) b!79878))

(assert (= (and bm!7382 (not c!12451)) b!79875))

(assert (= (and d!19417 res!41674) b!79879))

(assert (= (and b!79879 res!41675) b!79883))

(declare-fun m!81261 () Bool)

(assert (=> b!79883 m!81261))

(declare-fun m!81263 () Bool)

(assert (=> d!19417 m!81263))

(assert (=> d!19417 m!79825))

(declare-fun m!81265 () Bool)

(assert (=> b!79878 m!81265))

(declare-fun m!81267 () Bool)

(assert (=> b!79879 m!81267))

(declare-fun m!81269 () Bool)

(assert (=> bm!7382 m!81269))

(assert (=> b!78380 d!19417))

(declare-fun d!19419 () Bool)

(assert (=> d!19419 (= (get!1176 (getValueByKey!137 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2596 (getValueByKey!137 (toList!739 lt!35983) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18565 d!19419))

(assert (=> d!18565 d!19175))

(declare-fun d!19421 () Bool)

(assert (=> d!19421 (= (map!1174 (_2!1098 lt!36498)) (getCurrentListMap!433 (_keys!3932 (_2!1098 lt!36498)) (_values!2255 (_2!1098 lt!36498)) (mask!6268 (_2!1098 lt!36498)) (extraKeys!2123 (_2!1098 lt!36498)) (zeroValue!2170 (_2!1098 lt!36498)) (minValue!2170 (_2!1098 lt!36498)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1098 lt!36498))))))

(declare-fun bs!3386 () Bool)

(assert (= bs!3386 d!19421))

(declare-fun m!81271 () Bool)

(assert (=> bs!3386 m!81271))

(assert (=> b!78722 d!19421))

(declare-fun d!19423 () Bool)

(declare-fun e!52155 () Bool)

(assert (=> d!19423 e!52155))

(declare-fun res!41676 () Bool)

(assert (=> d!19423 (=> (not res!41676) (not e!52155))))

(declare-fun lt!37075 () ListLongMap!1447)

(assert (=> d!19423 (= res!41676 (contains!742 lt!37075 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!37074 () List!1507)

(assert (=> d!19423 (= lt!37075 (ListLongMap!1448 lt!37074))))

(declare-fun lt!37077 () Unit!2257)

(declare-fun lt!37076 () Unit!2257)

(assert (=> d!19423 (= lt!37077 lt!37076)))

(assert (=> d!19423 (= (getValueByKey!137 lt!37074 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19423 (= lt!37076 (lemmaContainsTupThenGetReturnValue!54 lt!37074 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19423 (= lt!37074 (insertStrictlySorted!57 (toList!739 (map!1174 newMap!16)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19423 (= (+!105 (map!1174 newMap!16) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!37075)))

(declare-fun b!79885 () Bool)

(declare-fun res!41677 () Bool)

(assert (=> b!79885 (=> (not res!41677) (not e!52155))))

(assert (=> b!79885 (= res!41677 (= (getValueByKey!137 (toList!739 lt!37075) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!79886 () Bool)

(assert (=> b!79886 (= e!52155 (contains!743 (toList!739 lt!37075) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!19423 res!41676) b!79885))

(assert (= (and b!79885 res!41677) b!79886))

(declare-fun m!81273 () Bool)

(assert (=> d!19423 m!81273))

(declare-fun m!81275 () Bool)

(assert (=> d!19423 m!81275))

(declare-fun m!81277 () Bool)

(assert (=> d!19423 m!81277))

(declare-fun m!81279 () Bool)

(assert (=> d!19423 m!81279))

(declare-fun m!81281 () Bool)

(assert (=> b!79885 m!81281))

(declare-fun m!81283 () Bool)

(assert (=> b!79886 m!81283))

(assert (=> b!78722 d!19423))

(assert (=> b!78722 d!18425))

(declare-fun d!19425 () Bool)

(declare-fun e!52156 () Bool)

(assert (=> d!19425 e!52156))

(declare-fun res!41678 () Bool)

(assert (=> d!19425 (=> (not res!41678) (not e!52156))))

(declare-fun lt!37079 () ListLongMap!1447)

(assert (=> d!19425 (= res!41678 (contains!742 lt!37079 (_1!1097 (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(declare-fun lt!37078 () List!1507)

(assert (=> d!19425 (= lt!37079 (ListLongMap!1448 lt!37078))))

(declare-fun lt!37081 () Unit!2257)

(declare-fun lt!37080 () Unit!2257)

(assert (=> d!19425 (= lt!37081 lt!37080)))

(assert (=> d!19425 (= (getValueByKey!137 lt!37078 (_1!1097 (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))) (Some!142 (_2!1097 (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!19425 (= lt!37080 (lemmaContainsTupThenGetReturnValue!54 lt!37078 (_1!1097 (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (_2!1097 (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!19425 (= lt!37078 (insertStrictlySorted!57 (toList!739 (ite c!12074 call!7231 (ite c!12078 call!7227 call!7232))) (_1!1097 (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (_2!1097 (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!19425 (= (+!105 (ite c!12074 call!7231 (ite c!12078 call!7227 call!7232)) (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) lt!37079)))

(declare-fun b!79887 () Bool)

(declare-fun res!41679 () Bool)

(assert (=> b!79887 (=> (not res!41679) (not e!52156))))

(assert (=> b!79887 (= res!41679 (= (getValueByKey!137 (toList!739 lt!37079) (_1!1097 (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))) (Some!142 (_2!1097 (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))))

(declare-fun b!79888 () Bool)

(assert (=> b!79888 (= e!52156 (contains!743 (toList!739 lt!37079) (ite (or c!12074 c!12078) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (= (and d!19425 res!41678) b!79887))

(assert (= (and b!79887 res!41679) b!79888))

(declare-fun m!81285 () Bool)

(assert (=> d!19425 m!81285))

(declare-fun m!81287 () Bool)

(assert (=> d!19425 m!81287))

(declare-fun m!81289 () Bool)

(assert (=> d!19425 m!81289))

(declare-fun m!81291 () Bool)

(assert (=> d!19425 m!81291))

(declare-fun m!81293 () Bool)

(assert (=> b!79887 m!81293))

(declare-fun m!81295 () Bool)

(assert (=> b!79888 m!81295))

(assert (=> bm!7224 d!19425))

(assert (=> b!78399 d!19195))

(assert (=> b!78399 d!19197))

(assert (=> b!78770 d!18861))

(declare-fun lt!37082 () Bool)

(declare-fun d!19427 () Bool)

(assert (=> d!19427 (= lt!37082 (select (content!83 (toList!739 lt!36163)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun e!52158 () Bool)

(assert (=> d!19427 (= lt!37082 e!52158)))

(declare-fun res!41680 () Bool)

(assert (=> d!19427 (=> (not res!41680) (not e!52158))))

(assert (=> d!19427 (= res!41680 ((_ is Cons!1503) (toList!739 lt!36163)))))

(assert (=> d!19427 (= (contains!743 (toList!739 lt!36163) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!37082)))

(declare-fun b!79889 () Bool)

(declare-fun e!52157 () Bool)

(assert (=> b!79889 (= e!52158 e!52157)))

(declare-fun res!41681 () Bool)

(assert (=> b!79889 (=> res!41681 e!52157)))

(assert (=> b!79889 (= res!41681 (= (h!2091 (toList!739 lt!36163)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun b!79890 () Bool)

(assert (=> b!79890 (= e!52157 (contains!743 (t!5153 (toList!739 lt!36163)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!19427 res!41680) b!79889))

(assert (= (and b!79889 (not res!41681)) b!79890))

(declare-fun m!81297 () Bool)

(assert (=> d!19427 m!81297))

(declare-fun m!81299 () Bool)

(assert (=> d!19427 m!81299))

(declare-fun m!81301 () Bool)

(assert (=> b!79890 m!81301))

(assert (=> b!78237 d!19427))

(declare-fun e!52159 () List!1507)

(declare-fun c!12456 () Bool)

(declare-fun b!79891 () Bool)

(declare-fun c!12457 () Bool)

(assert (=> b!79891 (= e!52159 (ite c!12457 (t!5153 (t!5153 (toList!739 lt!35853))) (ite c!12456 (Cons!1503 (h!2091 (t!5153 (toList!739 lt!35853))) (t!5153 (t!5153 (toList!739 lt!35853)))) Nil!1504)))))

(declare-fun b!79892 () Bool)

(declare-fun e!52163 () List!1507)

(declare-fun call!7389 () List!1507)

(assert (=> b!79892 (= e!52163 call!7389)))

(declare-fun bm!7384 () Bool)

(declare-fun call!7387 () List!1507)

(declare-fun call!7388 () List!1507)

(assert (=> bm!7384 (= call!7387 call!7388)))

(declare-fun b!79893 () Bool)

(assert (=> b!79893 (= c!12456 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35853))) (bvsgt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35853)))) (_1!1097 lt!35870))))))

(declare-fun e!52161 () List!1507)

(declare-fun e!52160 () List!1507)

(assert (=> b!79893 (= e!52161 e!52160)))

(declare-fun b!79894 () Bool)

(assert (=> b!79894 (= e!52159 (insertStrictlySorted!57 (t!5153 (t!5153 (toList!739 lt!35853))) (_1!1097 lt!35870) (_2!1097 lt!35870)))))

(declare-fun b!79895 () Bool)

(declare-fun res!41683 () Bool)

(declare-fun e!52162 () Bool)

(assert (=> b!79895 (=> (not res!41683) (not e!52162))))

(declare-fun lt!37083 () List!1507)

(assert (=> b!79895 (= res!41683 (containsKey!141 lt!37083 (_1!1097 lt!35870)))))

(declare-fun bm!7385 () Bool)

(declare-fun c!12454 () Bool)

(assert (=> bm!7385 (= call!7389 ($colon$colon!69 e!52159 (ite c!12454 (h!2091 (t!5153 (toList!739 lt!35853))) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870)))))))

(declare-fun c!12455 () Bool)

(assert (=> bm!7385 (= c!12455 c!12454)))

(declare-fun b!79896 () Bool)

(assert (=> b!79896 (= e!52163 e!52161)))

(assert (=> b!79896 (= c!12457 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35853))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!35853)))) (_1!1097 lt!35870))))))

(declare-fun b!79898 () Bool)

(assert (=> b!79898 (= e!52161 call!7388)))

(declare-fun b!79899 () Bool)

(assert (=> b!79899 (= e!52162 (contains!743 lt!37083 (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun b!79897 () Bool)

(assert (=> b!79897 (= e!52160 call!7387)))

(declare-fun d!19429 () Bool)

(assert (=> d!19429 e!52162))

(declare-fun res!41682 () Bool)

(assert (=> d!19429 (=> (not res!41682) (not e!52162))))

(assert (=> d!19429 (= res!41682 (isStrictlySorted!295 lt!37083))))

(assert (=> d!19429 (= lt!37083 e!52163)))

(assert (=> d!19429 (= c!12454 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!35853))) (bvslt (_1!1097 (h!2091 (t!5153 (toList!739 lt!35853)))) (_1!1097 lt!35870))))))

(assert (=> d!19429 (isStrictlySorted!295 (t!5153 (toList!739 lt!35853)))))

(assert (=> d!19429 (= (insertStrictlySorted!57 (t!5153 (toList!739 lt!35853)) (_1!1097 lt!35870) (_2!1097 lt!35870)) lt!37083)))

(declare-fun bm!7386 () Bool)

(assert (=> bm!7386 (= call!7388 call!7389)))

(declare-fun b!79900 () Bool)

(assert (=> b!79900 (= e!52160 call!7387)))

(assert (= (and d!19429 c!12454) b!79892))

(assert (= (and d!19429 (not c!12454)) b!79896))

(assert (= (and b!79896 c!12457) b!79898))

(assert (= (and b!79896 (not c!12457)) b!79893))

(assert (= (and b!79893 c!12456) b!79897))

(assert (= (and b!79893 (not c!12456)) b!79900))

(assert (= (or b!79897 b!79900) bm!7384))

(assert (= (or b!79898 bm!7384) bm!7386))

(assert (= (or b!79892 bm!7386) bm!7385))

(assert (= (and bm!7385 c!12455) b!79894))

(assert (= (and bm!7385 (not c!12455)) b!79891))

(assert (= (and d!19429 res!41682) b!79895))

(assert (= (and b!79895 res!41683) b!79899))

(declare-fun m!81303 () Bool)

(assert (=> b!79899 m!81303))

(declare-fun m!81305 () Bool)

(assert (=> d!19429 m!81305))

(assert (=> d!19429 m!80567))

(declare-fun m!81307 () Bool)

(assert (=> b!79894 m!81307))

(declare-fun m!81309 () Bool)

(assert (=> b!79895 m!81309))

(declare-fun m!81311 () Bool)

(assert (=> bm!7385 m!81311))

(assert (=> b!78669 d!19429))

(declare-fun b!79904 () Bool)

(declare-fun e!52165 () Option!143)

(assert (=> b!79904 (= e!52165 None!141)))

(declare-fun c!12458 () Bool)

(declare-fun d!19431 () Bool)

(assert (=> d!19431 (= c!12458 (and ((_ is Cons!1503) (toList!739 lt!36277)) (= (_1!1097 (h!2091 (toList!739 lt!36277))) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52164 () Option!143)

(assert (=> d!19431 (= (getValueByKey!137 (toList!739 lt!36277) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!52164)))

(declare-fun b!79903 () Bool)

(assert (=> b!79903 (= e!52165 (getValueByKey!137 (t!5153 (toList!739 lt!36277)) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79901 () Bool)

(assert (=> b!79901 (= e!52164 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36277)))))))

(declare-fun b!79902 () Bool)

(assert (=> b!79902 (= e!52164 e!52165)))

(declare-fun c!12459 () Bool)

(assert (=> b!79902 (= c!12459 (and ((_ is Cons!1503) (toList!739 lt!36277)) (not (= (_1!1097 (h!2091 (toList!739 lt!36277))) (_1!1097 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19431 c!12458) b!79901))

(assert (= (and d!19431 (not c!12458)) b!79902))

(assert (= (and b!79902 c!12459) b!79903))

(assert (= (and b!79902 (not c!12459)) b!79904))

(declare-fun m!81313 () Bool)

(assert (=> b!79903 m!81313))

(assert (=> b!78433 d!19431))

(declare-fun d!19433 () Bool)

(declare-fun res!41684 () Bool)

(declare-fun e!52166 () Bool)

(assert (=> d!19433 (=> res!41684 e!52166)))

(assert (=> d!19433 (= res!41684 (and ((_ is Cons!1503) (toList!739 lt!35983)) (= (_1!1097 (h!2091 (toList!739 lt!35983))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19433 (= (containsKey!141 (toList!739 lt!35983) #b0000000000000000000000000000000000000000000000000000000000000000) e!52166)))

(declare-fun b!79905 () Bool)

(declare-fun e!52167 () Bool)

(assert (=> b!79905 (= e!52166 e!52167)))

(declare-fun res!41685 () Bool)

(assert (=> b!79905 (=> (not res!41685) (not e!52167))))

(assert (=> b!79905 (= res!41685 (and (or (not ((_ is Cons!1503) (toList!739 lt!35983))) (bvsle (_1!1097 (h!2091 (toList!739 lt!35983))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1503) (toList!739 lt!35983)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35983))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79906 () Bool)

(assert (=> b!79906 (= e!52167 (containsKey!141 (t!5153 (toList!739 lt!35983)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19433 (not res!41684)) b!79905))

(assert (= (and b!79905 res!41685) b!79906))

(declare-fun m!81315 () Bool)

(assert (=> b!79906 m!81315))

(assert (=> d!18629 d!19433))

(declare-fun d!19435 () Bool)

(declare-fun lt!37084 () Bool)

(assert (=> d!19435 (= lt!37084 (select (content!83 (toList!739 lt!36246)) (tuple2!2173 lt!36023 lt!36026)))))

(declare-fun e!52169 () Bool)

(assert (=> d!19435 (= lt!37084 e!52169)))

(declare-fun res!41686 () Bool)

(assert (=> d!19435 (=> (not res!41686) (not e!52169))))

(assert (=> d!19435 (= res!41686 ((_ is Cons!1503) (toList!739 lt!36246)))))

(assert (=> d!19435 (= (contains!743 (toList!739 lt!36246) (tuple2!2173 lt!36023 lt!36026)) lt!37084)))

(declare-fun b!79907 () Bool)

(declare-fun e!52168 () Bool)

(assert (=> b!79907 (= e!52169 e!52168)))

(declare-fun res!41687 () Bool)

(assert (=> b!79907 (=> res!41687 e!52168)))

(assert (=> b!79907 (= res!41687 (= (h!2091 (toList!739 lt!36246)) (tuple2!2173 lt!36023 lt!36026)))))

(declare-fun b!79908 () Bool)

(assert (=> b!79908 (= e!52168 (contains!743 (t!5153 (toList!739 lt!36246)) (tuple2!2173 lt!36023 lt!36026)))))

(assert (= (and d!19435 res!41686) b!79907))

(assert (= (and b!79907 (not res!41687)) b!79908))

(declare-fun m!81317 () Bool)

(assert (=> d!19435 m!81317))

(declare-fun m!81319 () Bool)

(assert (=> d!19435 m!81319))

(declare-fun m!81321 () Bool)

(assert (=> b!79908 m!81321))

(assert (=> b!78396 d!19435))

(declare-fun d!19437 () Bool)

(assert (=> d!19437 (= (apply!79 lt!36389 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1176 (getValueByKey!137 (toList!739 lt!36389) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3387 () Bool)

(assert (= bs!3387 d!19437))

(declare-fun m!81323 () Bool)

(assert (=> bs!3387 m!81323))

(assert (=> bs!3387 m!81323))

(declare-fun m!81325 () Bool)

(assert (=> bs!3387 m!81325))

(assert (=> b!78595 d!19437))

(declare-fun d!19439 () Bool)

(declare-fun lt!37085 () Bool)

(assert (=> d!19439 (= lt!37085 (select (content!83 lt!36364) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun e!52171 () Bool)

(assert (=> d!19439 (= lt!37085 e!52171)))

(declare-fun res!41688 () Bool)

(assert (=> d!19439 (=> (not res!41688) (not e!52171))))

(assert (=> d!19439 (= res!41688 ((_ is Cons!1503) lt!36364))))

(assert (=> d!19439 (= (contains!743 lt!36364 (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))) lt!37085)))

(declare-fun b!79909 () Bool)

(declare-fun e!52170 () Bool)

(assert (=> b!79909 (= e!52171 e!52170)))

(declare-fun res!41689 () Bool)

(assert (=> b!79909 (=> res!41689 e!52170)))

(assert (=> b!79909 (= res!41689 (= (h!2091 lt!36364) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(declare-fun b!79910 () Bool)

(assert (=> b!79910 (= e!52170 (contains!743 (t!5153 lt!36364) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))))))

(assert (= (and d!19439 res!41688) b!79909))

(assert (= (and b!79909 (not res!41689)) b!79910))

(declare-fun m!81327 () Bool)

(assert (=> d!19439 m!81327))

(declare-fun m!81329 () Bool)

(assert (=> d!19439 m!81329))

(declare-fun m!81331 () Bool)

(assert (=> b!79910 m!81331))

(assert (=> b!78566 d!19439))

(declare-fun d!19441 () Bool)

(declare-fun e!52172 () Bool)

(assert (=> d!19441 e!52172))

(declare-fun res!41690 () Bool)

(assert (=> d!19441 (=> res!41690 e!52172)))

(declare-fun lt!37089 () Bool)

(assert (=> d!19441 (= res!41690 (not lt!37089))))

(declare-fun lt!37086 () Bool)

(assert (=> d!19441 (= lt!37089 lt!37086)))

(declare-fun lt!37087 () Unit!2257)

(declare-fun e!52173 () Unit!2257)

(assert (=> d!19441 (= lt!37087 e!52173)))

(declare-fun c!12460 () Bool)

(assert (=> d!19441 (= c!12460 lt!37086)))

(assert (=> d!19441 (= lt!37086 (containsKey!141 (toList!739 lt!36285) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!19441 (= (contains!742 lt!36285 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37089)))

(declare-fun b!79911 () Bool)

(declare-fun lt!37088 () Unit!2257)

(assert (=> b!79911 (= e!52173 lt!37088)))

(assert (=> b!79911 (= lt!37088 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36285) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> b!79911 (isDefined!90 (getValueByKey!137 (toList!739 lt!36285) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79912 () Bool)

(declare-fun Unit!2325 () Unit!2257)

(assert (=> b!79912 (= e!52173 Unit!2325)))

(declare-fun b!79913 () Bool)

(assert (=> b!79913 (= e!52172 (isDefined!90 (getValueByKey!137 (toList!739 lt!36285) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!19441 c!12460) b!79911))

(assert (= (and d!19441 (not c!12460)) b!79912))

(assert (= (and d!19441 (not res!41690)) b!79913))

(declare-fun m!81333 () Bool)

(assert (=> d!19441 m!81333))

(declare-fun m!81335 () Bool)

(assert (=> b!79911 m!81335))

(assert (=> b!79911 m!78755))

(assert (=> b!79911 m!78755))

(declare-fun m!81337 () Bool)

(assert (=> b!79911 m!81337))

(assert (=> b!79913 m!78755))

(assert (=> b!79913 m!78755))

(assert (=> b!79913 m!81337))

(assert (=> d!18585 d!19441))

(declare-fun b!79917 () Bool)

(declare-fun e!52175 () Option!143)

(assert (=> b!79917 (= e!52175 None!141)))

(declare-fun d!19443 () Bool)

(declare-fun c!12461 () Bool)

(assert (=> d!19443 (= c!12461 (and ((_ is Cons!1503) lt!36284) (= (_1!1097 (h!2091 lt!36284)) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52174 () Option!143)

(assert (=> d!19443 (= (getValueByKey!137 lt!36284 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!52174)))

(declare-fun b!79916 () Bool)

(assert (=> b!79916 (= e!52175 (getValueByKey!137 (t!5153 lt!36284) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79914 () Bool)

(assert (=> b!79914 (= e!52174 (Some!142 (_2!1097 (h!2091 lt!36284))))))

(declare-fun b!79915 () Bool)

(assert (=> b!79915 (= e!52174 e!52175)))

(declare-fun c!12462 () Bool)

(assert (=> b!79915 (= c!12462 (and ((_ is Cons!1503) lt!36284) (not (= (_1!1097 (h!2091 lt!36284)) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19443 c!12461) b!79914))

(assert (= (and d!19443 (not c!12461)) b!79915))

(assert (= (and b!79915 c!12462) b!79916))

(assert (= (and b!79915 (not c!12462)) b!79917))

(declare-fun m!81339 () Bool)

(assert (=> b!79916 m!81339))

(assert (=> d!18585 d!19443))

(declare-fun d!19445 () Bool)

(assert (=> d!19445 (= (getValueByKey!137 lt!36284 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!37090 () Unit!2257)

(assert (=> d!19445 (= lt!37090 (choose!456 lt!36284 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!52176 () Bool)

(assert (=> d!19445 e!52176))

(declare-fun res!41691 () Bool)

(assert (=> d!19445 (=> (not res!41691) (not e!52176))))

(assert (=> d!19445 (= res!41691 (isStrictlySorted!295 lt!36284))))

(assert (=> d!19445 (= (lemmaContainsTupThenGetReturnValue!54 lt!36284 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37090)))

(declare-fun b!79918 () Bool)

(declare-fun res!41692 () Bool)

(assert (=> b!79918 (=> (not res!41692) (not e!52176))))

(assert (=> b!79918 (= res!41692 (containsKey!141 lt!36284 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79919 () Bool)

(assert (=> b!79919 (= e!52176 (contains!743 lt!36284 (tuple2!2173 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!19445 res!41691) b!79918))

(assert (= (and b!79918 res!41692) b!79919))

(assert (=> d!19445 m!78749))

(declare-fun m!81341 () Bool)

(assert (=> d!19445 m!81341))

(declare-fun m!81343 () Bool)

(assert (=> d!19445 m!81343))

(declare-fun m!81345 () Bool)

(assert (=> b!79918 m!81345))

(declare-fun m!81347 () Bool)

(assert (=> b!79919 m!81347))

(assert (=> d!18585 d!19445))

(declare-fun c!12466 () Bool)

(declare-fun b!79920 () Bool)

(declare-fun e!52177 () List!1507)

(declare-fun c!12465 () Bool)

(assert (=> b!79920 (= e!52177 (ite c!12466 (t!5153 (toList!739 lt!35970)) (ite c!12465 (Cons!1503 (h!2091 (toList!739 lt!35970)) (t!5153 (toList!739 lt!35970))) Nil!1504)))))

(declare-fun b!79921 () Bool)

(declare-fun e!52181 () List!1507)

(declare-fun call!7392 () List!1507)

(assert (=> b!79921 (= e!52181 call!7392)))

(declare-fun bm!7387 () Bool)

(declare-fun call!7390 () List!1507)

(declare-fun call!7391 () List!1507)

(assert (=> bm!7387 (= call!7390 call!7391)))

(declare-fun b!79922 () Bool)

(assert (=> b!79922 (= c!12465 (and ((_ is Cons!1503) (toList!739 lt!35970)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35970))) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52179 () List!1507)

(declare-fun e!52178 () List!1507)

(assert (=> b!79922 (= e!52179 e!52178)))

(declare-fun b!79923 () Bool)

(assert (=> b!79923 (= e!52177 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35970)) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79924 () Bool)

(declare-fun res!41694 () Bool)

(declare-fun e!52180 () Bool)

(assert (=> b!79924 (=> (not res!41694) (not e!52180))))

(declare-fun lt!37091 () List!1507)

(assert (=> b!79924 (= res!41694 (containsKey!141 lt!37091 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun c!12463 () Bool)

(declare-fun bm!7388 () Bool)

(assert (=> bm!7388 (= call!7392 ($colon$colon!69 e!52177 (ite c!12463 (h!2091 (toList!739 lt!35970)) (tuple2!2173 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun c!12464 () Bool)

(assert (=> bm!7388 (= c!12464 c!12463)))

(declare-fun b!79925 () Bool)

(assert (=> b!79925 (= e!52181 e!52179)))

(assert (=> b!79925 (= c!12466 (and ((_ is Cons!1503) (toList!739 lt!35970)) (= (_1!1097 (h!2091 (toList!739 lt!35970))) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79927 () Bool)

(assert (=> b!79927 (= e!52179 call!7391)))

(declare-fun b!79928 () Bool)

(assert (=> b!79928 (= e!52180 (contains!743 lt!37091 (tuple2!2173 (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79926 () Bool)

(assert (=> b!79926 (= e!52178 call!7390)))

(declare-fun d!19447 () Bool)

(assert (=> d!19447 e!52180))

(declare-fun res!41693 () Bool)

(assert (=> d!19447 (=> (not res!41693) (not e!52180))))

(assert (=> d!19447 (= res!41693 (isStrictlySorted!295 lt!37091))))

(assert (=> d!19447 (= lt!37091 e!52181)))

(assert (=> d!19447 (= c!12463 (and ((_ is Cons!1503) (toList!739 lt!35970)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35970))) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!19447 (isStrictlySorted!295 (toList!739 lt!35970))))

(assert (=> d!19447 (= (insertStrictlySorted!57 (toList!739 lt!35970) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37091)))

(declare-fun bm!7389 () Bool)

(assert (=> bm!7389 (= call!7391 call!7392)))

(declare-fun b!79929 () Bool)

(assert (=> b!79929 (= e!52178 call!7390)))

(assert (= (and d!19447 c!12463) b!79921))

(assert (= (and d!19447 (not c!12463)) b!79925))

(assert (= (and b!79925 c!12466) b!79927))

(assert (= (and b!79925 (not c!12466)) b!79922))

(assert (= (and b!79922 c!12465) b!79926))

(assert (= (and b!79922 (not c!12465)) b!79929))

(assert (= (or b!79926 b!79929) bm!7387))

(assert (= (or b!79927 bm!7387) bm!7389))

(assert (= (or b!79921 bm!7389) bm!7388))

(assert (= (and bm!7388 c!12464) b!79923))

(assert (= (and bm!7388 (not c!12464)) b!79920))

(assert (= (and d!19447 res!41693) b!79924))

(assert (= (and b!79924 res!41694) b!79928))

(declare-fun m!81349 () Bool)

(assert (=> b!79928 m!81349))

(declare-fun m!81351 () Bool)

(assert (=> d!19447 m!81351))

(declare-fun m!81353 () Bool)

(assert (=> d!19447 m!81353))

(declare-fun m!81355 () Bool)

(assert (=> b!79923 m!81355))

(declare-fun m!81357 () Bool)

(assert (=> b!79924 m!81357))

(declare-fun m!81359 () Bool)

(assert (=> bm!7388 m!81359))

(assert (=> d!18585 d!19447))

(assert (=> d!18635 d!18633))

(declare-fun d!19449 () Bool)

(assert (=> d!19449 (= (getValueByKey!137 lt!35999 (_1!1097 lt!35870)) (Some!142 (_2!1097 lt!35870)))))

(assert (=> d!19449 true))

(declare-fun _$22!394 () Unit!2257)

(assert (=> d!19449 (= (choose!456 lt!35999 (_1!1097 lt!35870) (_2!1097 lt!35870)) _$22!394)))

(declare-fun bs!3388 () Bool)

(assert (= bs!3388 d!19449))

(assert (=> bs!3388 m!78147))

(assert (=> d!18635 d!19449))

(declare-fun d!19451 () Bool)

(declare-fun res!41695 () Bool)

(declare-fun e!52182 () Bool)

(assert (=> d!19451 (=> res!41695 e!52182)))

(assert (=> d!19451 (= res!41695 (or ((_ is Nil!1504) lt!35999) ((_ is Nil!1504) (t!5153 lt!35999))))))

(assert (=> d!19451 (= (isStrictlySorted!295 lt!35999) e!52182)))

(declare-fun b!79930 () Bool)

(declare-fun e!52183 () Bool)

(assert (=> b!79930 (= e!52182 e!52183)))

(declare-fun res!41696 () Bool)

(assert (=> b!79930 (=> (not res!41696) (not e!52183))))

(assert (=> b!79930 (= res!41696 (bvslt (_1!1097 (h!2091 lt!35999)) (_1!1097 (h!2091 (t!5153 lt!35999)))))))

(declare-fun b!79931 () Bool)

(assert (=> b!79931 (= e!52183 (isStrictlySorted!295 (t!5153 lt!35999)))))

(assert (= (and d!19451 (not res!41695)) b!79930))

(assert (= (and b!79930 res!41696) b!79931))

(declare-fun m!81361 () Bool)

(assert (=> b!79931 m!81361))

(assert (=> d!18635 d!19451))

(declare-fun lt!37092 () Bool)

(declare-fun d!19453 () Bool)

(assert (=> d!19453 (= lt!37092 (select (content!83 (toList!739 lt!36528)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun e!52185 () Bool)

(assert (=> d!19453 (= lt!37092 e!52185)))

(declare-fun res!41697 () Bool)

(assert (=> d!19453 (=> (not res!41697) (not e!52185))))

(assert (=> d!19453 (= res!41697 ((_ is Cons!1503) (toList!739 lt!36528)))))

(assert (=> d!19453 (= (contains!743 (toList!739 lt!36528) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!37092)))

(declare-fun b!79932 () Bool)

(declare-fun e!52184 () Bool)

(assert (=> b!79932 (= e!52185 e!52184)))

(declare-fun res!41698 () Bool)

(assert (=> b!79932 (=> res!41698 e!52184)))

(assert (=> b!79932 (= res!41698 (= (h!2091 (toList!739 lt!36528)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun b!79933 () Bool)

(assert (=> b!79933 (= e!52184 (contains!743 (t!5153 (toList!739 lt!36528)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!19453 res!41697) b!79932))

(assert (= (and b!79932 (not res!41698)) b!79933))

(declare-fun m!81363 () Bool)

(assert (=> d!19453 m!81363))

(declare-fun m!81365 () Bool)

(assert (=> d!19453 m!81365))

(declare-fun m!81367 () Bool)

(assert (=> b!79933 m!81367))

(assert (=> b!78732 d!19453))

(declare-fun d!19455 () Bool)

(assert (=> d!19455 (isDefined!90 (getValueByKey!137 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980))))

(declare-fun lt!37093 () Unit!2257)

(assert (=> d!19455 (= lt!37093 (choose!465 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980))))

(declare-fun e!52186 () Bool)

(assert (=> d!19455 e!52186))

(declare-fun res!41699 () Bool)

(assert (=> d!19455 (=> (not res!41699) (not e!52186))))

(assert (=> d!19455 (= res!41699 (isStrictlySorted!295 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!19455 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980) lt!37093)))

(declare-fun b!79934 () Bool)

(assert (=> b!79934 (= e!52186 (containsKey!141 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980))))

(assert (= (and d!19455 res!41699) b!79934))

(assert (=> d!19455 m!78767))

(assert (=> d!19455 m!78767))

(assert (=> d!19455 m!78769))

(declare-fun m!81369 () Bool)

(assert (=> d!19455 m!81369))

(declare-fun m!81371 () Bool)

(assert (=> d!19455 m!81371))

(assert (=> b!79934 m!78763))

(assert (=> b!78440 d!19455))

(assert (=> b!78440 d!18787))

(assert (=> b!78440 d!18789))

(assert (=> d!18557 d!18555))

(declare-fun d!19457 () Bool)

(assert (=> d!19457 (= (getValueByKey!137 lt!36032 (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864)))))

(assert (=> d!19457 true))

(declare-fun _$22!395 () Unit!2257)

(assert (=> d!19457 (= (choose!456 lt!36032 (_1!1097 lt!35864) (_2!1097 lt!35864)) _$22!395)))

(declare-fun bs!3389 () Bool)

(assert (= bs!3389 d!19457))

(assert (=> bs!3389 m!78203))

(assert (=> d!18557 d!19457))

(declare-fun d!19459 () Bool)

(declare-fun res!41700 () Bool)

(declare-fun e!52187 () Bool)

(assert (=> d!19459 (=> res!41700 e!52187)))

(assert (=> d!19459 (= res!41700 (or ((_ is Nil!1504) lt!36032) ((_ is Nil!1504) (t!5153 lt!36032))))))

(assert (=> d!19459 (= (isStrictlySorted!295 lt!36032) e!52187)))

(declare-fun b!79935 () Bool)

(declare-fun e!52188 () Bool)

(assert (=> b!79935 (= e!52187 e!52188)))

(declare-fun res!41701 () Bool)

(assert (=> b!79935 (=> (not res!41701) (not e!52188))))

(assert (=> b!79935 (= res!41701 (bvslt (_1!1097 (h!2091 lt!36032)) (_1!1097 (h!2091 (t!5153 lt!36032)))))))

(declare-fun b!79936 () Bool)

(assert (=> b!79936 (= e!52188 (isStrictlySorted!295 (t!5153 lt!36032)))))

(assert (= (and d!19459 (not res!41700)) b!79935))

(assert (= (and b!79935 res!41701) b!79936))

(declare-fun m!81373 () Bool)

(assert (=> b!79936 m!81373))

(assert (=> d!18557 d!19459))

(declare-fun d!19461 () Bool)

(assert (=> d!19461 (isDefined!90 (getValueByKey!137 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!37094 () Unit!2257)

(assert (=> d!19461 (= lt!37094 (choose!465 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52189 () Bool)

(assert (=> d!19461 e!52189))

(declare-fun res!41702 () Bool)

(assert (=> d!19461 (=> (not res!41702) (not e!52189))))

(assert (=> d!19461 (= res!41702 (isStrictlySorted!295 (toList!739 lt!36021)))))

(assert (=> d!19461 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000) lt!37094)))

(declare-fun b!79937 () Bool)

(assert (=> b!79937 (= e!52189 (containsKey!141 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19461 res!41702) b!79937))

(assert (=> d!19461 m!79091))

(assert (=> d!19461 m!79091))

(assert (=> d!19461 m!79093))

(declare-fun m!81375 () Bool)

(assert (=> d!19461 m!81375))

(assert (=> d!19461 m!79431))

(assert (=> b!79937 m!79087))

(assert (=> b!78616 d!19461))

(assert (=> b!78616 d!18731))

(assert (=> b!78616 d!18733))

(declare-fun d!19463 () Bool)

(assert (=> d!19463 (= (apply!79 (+!105 lt!35984 (tuple2!2173 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35982) (apply!79 lt!35984 lt!35982))))

(assert (=> d!19463 true))

(declare-fun _$34!819 () Unit!2257)

(assert (=> d!19463 (= (choose!460 lt!35984 lt!35989 (minValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35982) _$34!819)))

(declare-fun bs!3390 () Bool)

(assert (= bs!3390 d!19463))

(assert (=> bs!3390 m!78099))

(assert (=> bs!3390 m!78099))

(assert (=> bs!3390 m!78101))

(assert (=> bs!3390 m!78113))

(assert (=> d!18595 d!19463))

(assert (=> d!18595 d!18579))

(assert (=> d!18595 d!18591))

(assert (=> d!18595 d!18593))

(declare-fun d!19465 () Bool)

(declare-fun e!52190 () Bool)

(assert (=> d!19465 e!52190))

(declare-fun res!41703 () Bool)

(assert (=> d!19465 (=> res!41703 e!52190)))

(declare-fun lt!37098 () Bool)

(assert (=> d!19465 (= res!41703 (not lt!37098))))

(declare-fun lt!37095 () Bool)

(assert (=> d!19465 (= lt!37098 lt!37095)))

(declare-fun lt!37096 () Unit!2257)

(declare-fun e!52191 () Unit!2257)

(assert (=> d!19465 (= lt!37096 e!52191)))

(declare-fun c!12467 () Bool)

(assert (=> d!19465 (= c!12467 lt!37095)))

(assert (=> d!19465 (= lt!37095 (containsKey!141 (toList!739 lt!35984) lt!35982))))

(assert (=> d!19465 (= (contains!742 lt!35984 lt!35982) lt!37098)))

(declare-fun b!79938 () Bool)

(declare-fun lt!37097 () Unit!2257)

(assert (=> b!79938 (= e!52191 lt!37097)))

(assert (=> b!79938 (= lt!37097 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35984) lt!35982))))

(assert (=> b!79938 (isDefined!90 (getValueByKey!137 (toList!739 lt!35984) lt!35982))))

(declare-fun b!79939 () Bool)

(declare-fun Unit!2326 () Unit!2257)

(assert (=> b!79939 (= e!52191 Unit!2326)))

(declare-fun b!79940 () Bool)

(assert (=> b!79940 (= e!52190 (isDefined!90 (getValueByKey!137 (toList!739 lt!35984) lt!35982)))))

(assert (= (and d!19465 c!12467) b!79938))

(assert (= (and d!19465 (not c!12467)) b!79939))

(assert (= (and d!19465 (not res!41703)) b!79940))

(declare-fun m!81377 () Bool)

(assert (=> d!19465 m!81377))

(declare-fun m!81379 () Bool)

(assert (=> b!79938 m!81379))

(assert (=> b!79938 m!78727))

(assert (=> b!79938 m!78727))

(declare-fun m!81381 () Bool)

(assert (=> b!79938 m!81381))

(assert (=> b!79940 m!78727))

(assert (=> b!79940 m!78727))

(assert (=> b!79940 m!81381))

(assert (=> d!18595 d!19465))

(declare-fun d!19467 () Bool)

(declare-fun lt!37099 () Bool)

(assert (=> d!19467 (= lt!37099 (select (content!83 lt!36262) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun e!52193 () Bool)

(assert (=> d!19467 (= lt!37099 e!52193)))

(declare-fun res!41704 () Bool)

(assert (=> d!19467 (=> (not res!41704) (not e!52193))))

(assert (=> d!19467 (= res!41704 ((_ is Cons!1503) lt!36262))))

(assert (=> d!19467 (= (contains!743 lt!36262 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))) lt!37099)))

(declare-fun b!79941 () Bool)

(declare-fun e!52192 () Bool)

(assert (=> b!79941 (= e!52193 e!52192)))

(declare-fun res!41705 () Bool)

(assert (=> b!79941 (=> res!41705 e!52192)))

(assert (=> b!79941 (= res!41705 (= (h!2091 lt!36262) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!79942 () Bool)

(assert (=> b!79942 (= e!52192 (contains!743 (t!5153 lt!36262) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(assert (= (and d!19467 res!41704) b!79941))

(assert (= (and b!79941 (not res!41705)) b!79942))

(declare-fun m!81383 () Bool)

(assert (=> d!19467 m!81383))

(declare-fun m!81385 () Bool)

(assert (=> d!19467 m!81385))

(declare-fun m!81387 () Bool)

(assert (=> b!79942 m!81387))

(assert (=> b!78419 d!19467))

(declare-fun d!19469 () Bool)

(declare-fun e!52194 () Bool)

(assert (=> d!19469 e!52194))

(declare-fun res!41706 () Bool)

(assert (=> d!19469 (=> res!41706 e!52194)))

(declare-fun lt!37103 () Bool)

(assert (=> d!19469 (= res!41706 (not lt!37103))))

(declare-fun lt!37100 () Bool)

(assert (=> d!19469 (= lt!37103 lt!37100)))

(declare-fun lt!37101 () Unit!2257)

(declare-fun e!52195 () Unit!2257)

(assert (=> d!19469 (= lt!37101 e!52195)))

(declare-fun c!12468 () Bool)

(assert (=> d!19469 (= c!12468 lt!37100)))

(assert (=> d!19469 (= lt!37100 (containsKey!141 (toList!739 lt!36213) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19469 (= (contains!742 lt!36213 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37103)))

(declare-fun b!79943 () Bool)

(declare-fun lt!37102 () Unit!2257)

(assert (=> b!79943 (= e!52195 lt!37102)))

(assert (=> b!79943 (= lt!37102 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36213) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79943 (isDefined!90 (getValueByKey!137 (toList!739 lt!36213) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79944 () Bool)

(declare-fun Unit!2327 () Unit!2257)

(assert (=> b!79944 (= e!52195 Unit!2327)))

(declare-fun b!79945 () Bool)

(assert (=> b!79945 (= e!52194 (isDefined!90 (getValueByKey!137 (toList!739 lt!36213) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19469 c!12468) b!79943))

(assert (= (and d!19469 (not c!12468)) b!79944))

(assert (= (and d!19469 (not res!41706)) b!79945))

(declare-fun m!81389 () Bool)

(assert (=> d!19469 m!81389))

(declare-fun m!81391 () Bool)

(assert (=> b!79943 m!81391))

(assert (=> b!79943 m!81085))

(assert (=> b!79943 m!81085))

(declare-fun m!81393 () Bool)

(assert (=> b!79943 m!81393))

(assert (=> b!79945 m!81085))

(assert (=> b!79945 m!81085))

(assert (=> b!79945 m!81393))

(assert (=> bm!7183 d!19469))

(assert (=> b!78772 d!18861))

(declare-fun d!19471 () Bool)

(declare-fun c!12469 () Bool)

(assert (=> d!19471 (= c!12469 ((_ is Nil!1504) (toList!739 lt!36049)))))

(declare-fun e!52196 () (InoxSet tuple2!2172))

(assert (=> d!19471 (= (content!83 (toList!739 lt!36049)) e!52196)))

(declare-fun b!79946 () Bool)

(assert (=> b!79946 (= e!52196 ((as const (Array tuple2!2172 Bool)) false))))

(declare-fun b!79947 () Bool)

(assert (=> b!79947 (= e!52196 ((_ map or) (store ((as const (Array tuple2!2172 Bool)) false) (h!2091 (toList!739 lt!36049)) true) (content!83 (t!5153 (toList!739 lt!36049)))))))

(assert (= (and d!19471 c!12469) b!79946))

(assert (= (and d!19471 (not c!12469)) b!79947))

(declare-fun m!81395 () Bool)

(assert (=> b!79947 m!81395))

(assert (=> b!79947 m!81201))

(assert (=> d!18627 d!19471))

(declare-fun d!19473 () Bool)

(declare-fun lt!37104 () Bool)

(assert (=> d!19473 (= lt!37104 (select (content!83 (t!5153 (toList!739 lt!36004))) lt!35864))))

(declare-fun e!52198 () Bool)

(assert (=> d!19473 (= lt!37104 e!52198)))

(declare-fun res!41707 () Bool)

(assert (=> d!19473 (=> (not res!41707) (not e!52198))))

(assert (=> d!19473 (= res!41707 ((_ is Cons!1503) (t!5153 (toList!739 lt!36004))))))

(assert (=> d!19473 (= (contains!743 (t!5153 (toList!739 lt!36004)) lt!35864) lt!37104)))

(declare-fun b!79948 () Bool)

(declare-fun e!52197 () Bool)

(assert (=> b!79948 (= e!52198 e!52197)))

(declare-fun res!41708 () Bool)

(assert (=> b!79948 (=> res!41708 e!52197)))

(assert (=> b!79948 (= res!41708 (= (h!2091 (t!5153 (toList!739 lt!36004))) lt!35864))))

(declare-fun b!79949 () Bool)

(assert (=> b!79949 (= e!52197 (contains!743 (t!5153 (t!5153 (toList!739 lt!36004))) lt!35864))))

(assert (= (and d!19473 res!41707) b!79948))

(assert (= (and b!79948 (not res!41708)) b!79949))

(assert (=> d!19473 m!79585))

(declare-fun m!81397 () Bool)

(assert (=> d!19473 m!81397))

(declare-fun m!81399 () Bool)

(assert (=> b!79949 m!81399))

(assert (=> b!78599 d!19473))

(assert (=> bm!7186 d!18849))

(declare-fun d!19475 () Bool)

(assert (=> d!19475 (= (apply!79 lt!36316 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1176 (getValueByKey!137 (toList!739 lt!36316) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3391 () Bool)

(assert (= bs!3391 d!19475))

(assert (=> bs!3391 m!78847))

(assert (=> bs!3391 m!80265))

(assert (=> bs!3391 m!80265))

(declare-fun m!81401 () Bool)

(assert (=> bs!3391 m!81401))

(assert (=> b!78497 d!19475))

(assert (=> b!78497 d!18807))

(assert (=> b!78423 d!19245))

(assert (=> b!78423 d!18821))

(declare-fun d!19477 () Bool)

(declare-fun lt!37105 () (_ BitVec 32))

(assert (=> d!19477 (and (bvsge lt!37105 #b00000000000000000000000000000000) (bvsle lt!37105 (bvsub (size!2136 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!52199 () (_ BitVec 32))

(assert (=> d!19477 (= lt!37105 e!52199)))

(declare-fun c!12471 () Bool)

(assert (=> d!19477 (= c!12471 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!19477 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2136 (_keys!3932 newMap!16)) (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!19477 (= (arrayCountValidKeys!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))) lt!37105)))

(declare-fun b!79950 () Bool)

(declare-fun e!52200 () (_ BitVec 32))

(declare-fun call!7393 () (_ BitVec 32))

(assert (=> b!79950 (= e!52200 call!7393)))

(declare-fun b!79951 () Bool)

(assert (=> b!79951 (= e!52199 #b00000000000000000000000000000000)))

(declare-fun b!79952 () Bool)

(assert (=> b!79952 (= e!52199 e!52200)))

(declare-fun c!12470 () Bool)

(assert (=> b!79952 (= c!12470 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!79953 () Bool)

(assert (=> b!79953 (= e!52200 (bvadd #b00000000000000000000000000000001 call!7393))))

(declare-fun bm!7390 () Bool)

(assert (=> bm!7390 (= call!7393 (arrayCountValidKeys!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))))))

(assert (= (and d!19477 c!12471) b!79951))

(assert (= (and d!19477 (not c!12471)) b!79952))

(assert (= (and b!79952 c!12470) b!79953))

(assert (= (and b!79952 (not c!12470)) b!79950))

(assert (= (or b!79953 b!79950) bm!7390))

(assert (=> b!79952 m!80877))

(assert (=> b!79952 m!80877))

(declare-fun m!81403 () Bool)

(assert (=> b!79952 m!81403))

(declare-fun m!81405 () Bool)

(assert (=> bm!7390 m!81405))

(assert (=> bm!7233 d!19477))

(declare-fun d!19479 () Bool)

(declare-fun lt!37106 () Bool)

(assert (=> d!19479 (= lt!37106 (select (content!83 (t!5153 (toList!739 lt!36029))) lt!35861))))

(declare-fun e!52202 () Bool)

(assert (=> d!19479 (= lt!37106 e!52202)))

(declare-fun res!41709 () Bool)

(assert (=> d!19479 (=> (not res!41709) (not e!52202))))

(assert (=> d!19479 (= res!41709 ((_ is Cons!1503) (t!5153 (toList!739 lt!36029))))))

(assert (=> d!19479 (= (contains!743 (t!5153 (toList!739 lt!36029)) lt!35861) lt!37106)))

(declare-fun b!79954 () Bool)

(declare-fun e!52201 () Bool)

(assert (=> b!79954 (= e!52202 e!52201)))

(declare-fun res!41710 () Bool)

(assert (=> b!79954 (=> res!41710 e!52201)))

(assert (=> b!79954 (= res!41710 (= (h!2091 (t!5153 (toList!739 lt!36029))) lt!35861))))

(declare-fun b!79955 () Bool)

(assert (=> b!79955 (= e!52201 (contains!743 (t!5153 (t!5153 (toList!739 lt!36029))) lt!35861))))

(assert (= (and d!19479 res!41709) b!79954))

(assert (= (and b!79954 (not res!41710)) b!79955))

(declare-fun m!81407 () Bool)

(assert (=> d!19479 m!81407))

(declare-fun m!81409 () Bool)

(assert (=> d!19479 m!81409))

(declare-fun m!81411 () Bool)

(assert (=> b!79955 m!81411))

(assert (=> b!78767 d!19479))

(assert (=> b!78260 d!19265))

(assert (=> b!78260 d!19225))

(declare-fun d!19481 () Bool)

(declare-fun e!52203 () Bool)

(assert (=> d!19481 e!52203))

(declare-fun res!41711 () Bool)

(assert (=> d!19481 (=> res!41711 e!52203)))

(declare-fun lt!37110 () Bool)

(assert (=> d!19481 (= res!41711 (not lt!37110))))

(declare-fun lt!37107 () Bool)

(assert (=> d!19481 (= lt!37110 lt!37107)))

(declare-fun lt!37108 () Unit!2257)

(declare-fun e!52204 () Unit!2257)

(assert (=> d!19481 (= lt!37108 e!52204)))

(declare-fun c!12472 () Bool)

(assert (=> d!19481 (= c!12472 lt!37107)))

(assert (=> d!19481 (= lt!37107 (containsKey!141 (toList!739 lt!36254) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19481 (= (contains!742 lt!36254 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!37110)))

(declare-fun b!79956 () Bool)

(declare-fun lt!37109 () Unit!2257)

(assert (=> b!79956 (= e!52204 lt!37109)))

(assert (=> b!79956 (= lt!37109 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36254) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!79956 (isDefined!90 (getValueByKey!137 (toList!739 lt!36254) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79957 () Bool)

(declare-fun Unit!2328 () Unit!2257)

(assert (=> b!79957 (= e!52204 Unit!2328)))

(declare-fun b!79958 () Bool)

(assert (=> b!79958 (= e!52203 (isDefined!90 (getValueByKey!137 (toList!739 lt!36254) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!19481 c!12472) b!79956))

(assert (= (and d!19481 (not c!12472)) b!79957))

(assert (= (and d!19481 (not res!41711)) b!79958))

(declare-fun m!81413 () Bool)

(assert (=> d!19481 m!81413))

(declare-fun m!81415 () Bool)

(assert (=> b!79956 m!81415))

(assert (=> b!79956 m!78653))

(assert (=> b!79956 m!78653))

(declare-fun m!81417 () Bool)

(assert (=> b!79956 m!81417))

(assert (=> b!79958 m!78653))

(assert (=> b!79958 m!78653))

(assert (=> b!79958 m!81417))

(assert (=> d!18549 d!19481))

(declare-fun b!79962 () Bool)

(declare-fun e!52206 () Option!143)

(assert (=> b!79962 (= e!52206 None!141)))

(declare-fun c!12473 () Bool)

(declare-fun d!19483 () Bool)

(assert (=> d!19483 (= c!12473 (and ((_ is Cons!1503) lt!36253) (= (_1!1097 (h!2091 lt!36253)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!52205 () Option!143)

(assert (=> d!19483 (= (getValueByKey!137 lt!36253 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!52205)))

(declare-fun b!79961 () Bool)

(assert (=> b!79961 (= e!52206 (getValueByKey!137 (t!5153 lt!36253) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79959 () Bool)

(assert (=> b!79959 (= e!52205 (Some!142 (_2!1097 (h!2091 lt!36253))))))

(declare-fun b!79960 () Bool)

(assert (=> b!79960 (= e!52205 e!52206)))

(declare-fun c!12474 () Bool)

(assert (=> b!79960 (= c!12474 (and ((_ is Cons!1503) lt!36253) (not (= (_1!1097 (h!2091 lt!36253)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!19483 c!12473) b!79959))

(assert (= (and d!19483 (not c!12473)) b!79960))

(assert (= (and b!79960 c!12474) b!79961))

(assert (= (and b!79960 (not c!12474)) b!79962))

(declare-fun m!81419 () Bool)

(assert (=> b!79961 m!81419))

(assert (=> d!18549 d!19483))

(declare-fun d!19485 () Bool)

(assert (=> d!19485 (= (getValueByKey!137 lt!36253 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!37111 () Unit!2257)

(assert (=> d!19485 (= lt!37111 (choose!456 lt!36253 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!52207 () Bool)

(assert (=> d!19485 e!52207))

(declare-fun res!41712 () Bool)

(assert (=> d!19485 (=> (not res!41712) (not e!52207))))

(assert (=> d!19485 (= res!41712 (isStrictlySorted!295 lt!36253))))

(assert (=> d!19485 (= (lemmaContainsTupThenGetReturnValue!54 lt!36253 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!37111)))

(declare-fun b!79963 () Bool)

(declare-fun res!41713 () Bool)

(assert (=> b!79963 (=> (not res!41713) (not e!52207))))

(assert (=> b!79963 (= res!41713 (containsKey!141 lt!36253 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79964 () Bool)

(assert (=> b!79964 (= e!52207 (contains!743 lt!36253 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!19485 res!41712) b!79963))

(assert (= (and b!79963 res!41713) b!79964))

(assert (=> d!19485 m!78647))

(declare-fun m!81421 () Bool)

(assert (=> d!19485 m!81421))

(declare-fun m!81423 () Bool)

(assert (=> d!19485 m!81423))

(declare-fun m!81425 () Bool)

(assert (=> b!79963 m!81425))

(declare-fun m!81427 () Bool)

(assert (=> b!79964 m!81427))

(assert (=> d!18549 d!19485))

(declare-fun c!12477 () Bool)

(declare-fun c!12478 () Bool)

(declare-fun b!79965 () Bool)

(declare-fun e!52208 () List!1507)

(assert (=> b!79965 (= e!52208 (ite c!12478 (t!5153 (toList!739 call!7109)) (ite c!12477 (Cons!1503 (h!2091 (toList!739 call!7109)) (t!5153 (toList!739 call!7109))) Nil!1504)))))

(declare-fun b!79966 () Bool)

(declare-fun e!52212 () List!1507)

(declare-fun call!7396 () List!1507)

(assert (=> b!79966 (= e!52212 call!7396)))

(declare-fun bm!7391 () Bool)

(declare-fun call!7394 () List!1507)

(declare-fun call!7395 () List!1507)

(assert (=> bm!7391 (= call!7394 call!7395)))

(declare-fun b!79967 () Bool)

(assert (=> b!79967 (= c!12477 (and ((_ is Cons!1503) (toList!739 call!7109)) (bvsgt (_1!1097 (h!2091 (toList!739 call!7109))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!52210 () List!1507)

(declare-fun e!52209 () List!1507)

(assert (=> b!79967 (= e!52210 e!52209)))

(declare-fun b!79968 () Bool)

(assert (=> b!79968 (= e!52208 (insertStrictlySorted!57 (t!5153 (toList!739 call!7109)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79969 () Bool)

(declare-fun res!41715 () Bool)

(declare-fun e!52211 () Bool)

(assert (=> b!79969 (=> (not res!41715) (not e!52211))))

(declare-fun lt!37112 () List!1507)

(assert (=> b!79969 (= res!41715 (containsKey!141 lt!37112 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!7392 () Bool)

(declare-fun c!12475 () Bool)

(assert (=> bm!7392 (= call!7396 ($colon$colon!69 e!52208 (ite c!12475 (h!2091 (toList!739 call!7109)) (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!12476 () Bool)

(assert (=> bm!7392 (= c!12476 c!12475)))

(declare-fun b!79970 () Bool)

(assert (=> b!79970 (= e!52212 e!52210)))

(assert (=> b!79970 (= c!12478 (and ((_ is Cons!1503) (toList!739 call!7109)) (= (_1!1097 (h!2091 (toList!739 call!7109))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!79972 () Bool)

(assert (=> b!79972 (= e!52210 call!7395)))

(declare-fun b!79973 () Bool)

(assert (=> b!79973 (= e!52211 (contains!743 lt!37112 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!79971 () Bool)

(assert (=> b!79971 (= e!52209 call!7394)))

(declare-fun d!19487 () Bool)

(assert (=> d!19487 e!52211))

(declare-fun res!41714 () Bool)

(assert (=> d!19487 (=> (not res!41714) (not e!52211))))

(assert (=> d!19487 (= res!41714 (isStrictlySorted!295 lt!37112))))

(assert (=> d!19487 (= lt!37112 e!52212)))

(assert (=> d!19487 (= c!12475 (and ((_ is Cons!1503) (toList!739 call!7109)) (bvslt (_1!1097 (h!2091 (toList!739 call!7109))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!19487 (isStrictlySorted!295 (toList!739 call!7109))))

(assert (=> d!19487 (= (insertStrictlySorted!57 (toList!739 call!7109) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!37112)))

(declare-fun bm!7393 () Bool)

(assert (=> bm!7393 (= call!7395 call!7396)))

(declare-fun b!79974 () Bool)

(assert (=> b!79974 (= e!52209 call!7394)))

(assert (= (and d!19487 c!12475) b!79966))

(assert (= (and d!19487 (not c!12475)) b!79970))

(assert (= (and b!79970 c!12478) b!79972))

(assert (= (and b!79970 (not c!12478)) b!79967))

(assert (= (and b!79967 c!12477) b!79971))

(assert (= (and b!79967 (not c!12477)) b!79974))

(assert (= (or b!79971 b!79974) bm!7391))

(assert (= (or b!79972 bm!7391) bm!7393))

(assert (= (or b!79966 bm!7393) bm!7392))

(assert (= (and bm!7392 c!12476) b!79968))

(assert (= (and bm!7392 (not c!12476)) b!79965))

(assert (= (and d!19487 res!41714) b!79969))

(assert (= (and b!79969 res!41715) b!79973))

(declare-fun m!81429 () Bool)

(assert (=> b!79973 m!81429))

(declare-fun m!81431 () Bool)

(assert (=> d!19487 m!81431))

(declare-fun m!81433 () Bool)

(assert (=> d!19487 m!81433))

(declare-fun m!81435 () Bool)

(assert (=> b!79968 m!81435))

(declare-fun m!81437 () Bool)

(assert (=> b!79969 m!81437))

(declare-fun m!81439 () Bool)

(assert (=> bm!7392 m!81439))

(assert (=> d!18549 d!19487))

(declare-fun d!19489 () Bool)

(declare-fun res!41716 () Bool)

(declare-fun e!52213 () Bool)

(assert (=> d!19489 (=> res!41716 e!52213)))

(assert (=> d!19489 (= res!41716 (and ((_ is Cons!1503) (toList!739 call!7169)) (= (_1!1097 (h!2091 (toList!739 call!7169))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(assert (=> d!19489 (= (containsKey!141 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) e!52213)))

(declare-fun b!79975 () Bool)

(declare-fun e!52214 () Bool)

(assert (=> b!79975 (= e!52213 e!52214)))

(declare-fun res!41717 () Bool)

(assert (=> b!79975 (=> (not res!41717) (not e!52214))))

(assert (=> b!79975 (= res!41717 (and (or (not ((_ is Cons!1503) (toList!739 call!7169))) (bvsle (_1!1097 (h!2091 (toList!739 call!7169))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))) ((_ is Cons!1503) (toList!739 call!7169)) (bvslt (_1!1097 (h!2091 (toList!739 call!7169))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(declare-fun b!79976 () Bool)

(assert (=> b!79976 (= e!52214 (containsKey!141 (t!5153 (toList!739 call!7169)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (= (and d!19489 (not res!41716)) b!79975))

(assert (= (and b!79975 res!41717) b!79976))

(assert (=> b!79976 m!77965))

(declare-fun m!81441 () Bool)

(assert (=> b!79976 m!81441))

(assert (=> d!18649 d!19489))

(declare-fun d!19491 () Bool)

(declare-fun lt!37113 () Bool)

(assert (=> d!19491 (= lt!37113 (select (content!83 lt!36028) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun e!52216 () Bool)

(assert (=> d!19491 (= lt!37113 e!52216)))

(declare-fun res!41718 () Bool)

(assert (=> d!19491 (=> (not res!41718) (not e!52216))))

(assert (=> d!19491 (= res!41718 ((_ is Cons!1503) lt!36028))))

(assert (=> d!19491 (= (contains!743 lt!36028 (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))) lt!37113)))

(declare-fun b!79977 () Bool)

(declare-fun e!52215 () Bool)

(assert (=> b!79977 (= e!52216 e!52215)))

(declare-fun res!41719 () Bool)

(assert (=> b!79977 (=> res!41719 e!52215)))

(assert (=> b!79977 (= res!41719 (= (h!2091 lt!36028) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun b!79978 () Bool)

(assert (=> b!79978 (= e!52215 (contains!743 (t!5153 lt!36028) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(assert (= (and d!19491 res!41718) b!79977))

(assert (= (and b!79977 (not res!41719)) b!79978))

(declare-fun m!81443 () Bool)

(assert (=> d!19491 m!81443))

(declare-fun m!81445 () Bool)

(assert (=> d!19491 m!81445))

(declare-fun m!81447 () Bool)

(assert (=> b!79978 m!81447))

(assert (=> b!78356 d!19491))

(declare-fun d!19493 () Bool)

(declare-fun res!41720 () Bool)

(declare-fun e!52217 () Bool)

(assert (=> d!19493 (=> (not res!41720) (not e!52217))))

(assert (=> d!19493 (= res!41720 (simpleValid!55 (_2!1098 lt!36498)))))

(assert (=> d!19493 (= (valid!313 (_2!1098 lt!36498)) e!52217)))

(declare-fun b!79979 () Bool)

(declare-fun res!41721 () Bool)

(assert (=> b!79979 (=> (not res!41721) (not e!52217))))

(assert (=> b!79979 (= res!41721 (= (arrayCountValidKeys!0 (_keys!3932 (_2!1098 lt!36498)) #b00000000000000000000000000000000 (size!2136 (_keys!3932 (_2!1098 lt!36498)))) (_size!415 (_2!1098 lt!36498))))))

(declare-fun b!79980 () Bool)

(declare-fun res!41722 () Bool)

(assert (=> b!79980 (=> (not res!41722) (not e!52217))))

(assert (=> b!79980 (= res!41722 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 (_2!1098 lt!36498)) (mask!6268 (_2!1098 lt!36498))))))

(declare-fun b!79981 () Bool)

(assert (=> b!79981 (= e!52217 (arrayNoDuplicates!0 (_keys!3932 (_2!1098 lt!36498)) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!19493 res!41720) b!79979))

(assert (= (and b!79979 res!41721) b!79980))

(assert (= (and b!79980 res!41722) b!79981))

(declare-fun m!81449 () Bool)

(assert (=> d!19493 m!81449))

(declare-fun m!81451 () Bool)

(assert (=> b!79979 m!81451))

(declare-fun m!81453 () Bool)

(assert (=> b!79980 m!81453))

(declare-fun m!81455 () Bool)

(assert (=> b!79981 m!81455))

(assert (=> b!78716 d!19493))

(declare-fun d!19495 () Bool)

(declare-fun e!52218 () Bool)

(assert (=> d!19495 e!52218))

(declare-fun res!41723 () Bool)

(assert (=> d!19495 (=> res!41723 e!52218)))

(declare-fun lt!37117 () Bool)

(assert (=> d!19495 (= res!41723 (not lt!37117))))

(declare-fun lt!37114 () Bool)

(assert (=> d!19495 (= lt!37117 lt!37114)))

(declare-fun lt!37115 () Unit!2257)

(declare-fun e!52219 () Unit!2257)

(assert (=> d!19495 (= lt!37115 e!52219)))

(declare-fun c!12479 () Bool)

(assert (=> d!19495 (= c!12479 lt!37114)))

(assert (=> d!19495 (= lt!37114 (containsKey!141 (toList!739 lt!36159) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> d!19495 (= (contains!742 lt!36159 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37117)))

(declare-fun b!79982 () Bool)

(declare-fun lt!37116 () Unit!2257)

(assert (=> b!79982 (= e!52219 lt!37116)))

(assert (=> b!79982 (= lt!37116 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36159) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(assert (=> b!79982 (isDefined!90 (getValueByKey!137 (toList!739 lt!36159) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79983 () Bool)

(declare-fun Unit!2329 () Unit!2257)

(assert (=> b!79983 (= e!52219 Unit!2329)))

(declare-fun b!79984 () Bool)

(assert (=> b!79984 (= e!52218 (isDefined!90 (getValueByKey!137 (toList!739 lt!36159) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!19495 c!12479) b!79982))

(assert (= (and d!19495 (not c!12479)) b!79983))

(assert (= (and d!19495 (not res!41723)) b!79984))

(declare-fun m!81457 () Bool)

(assert (=> d!19495 m!81457))

(declare-fun m!81459 () Bool)

(assert (=> b!79982 m!81459))

(assert (=> b!79982 m!78381))

(assert (=> b!79982 m!78381))

(declare-fun m!81461 () Bool)

(assert (=> b!79982 m!81461))

(assert (=> b!79984 m!78381))

(assert (=> b!79984 m!78381))

(assert (=> b!79984 m!81461))

(assert (=> d!18483 d!19495))

(declare-fun b!79988 () Bool)

(declare-fun e!52221 () Option!143)

(assert (=> b!79988 (= e!52221 None!141)))

(declare-fun d!19497 () Bool)

(declare-fun c!12480 () Bool)

(assert (=> d!19497 (= c!12480 (and ((_ is Cons!1503) lt!36158) (= (_1!1097 (h!2091 lt!36158)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52220 () Option!143)

(assert (=> d!19497 (= (getValueByKey!137 lt!36158 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!52220)))

(declare-fun b!79987 () Bool)

(assert (=> b!79987 (= e!52221 (getValueByKey!137 (t!5153 lt!36158) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79985 () Bool)

(assert (=> b!79985 (= e!52220 (Some!142 (_2!1097 (h!2091 lt!36158))))))

(declare-fun b!79986 () Bool)

(assert (=> b!79986 (= e!52220 e!52221)))

(declare-fun c!12481 () Bool)

(assert (=> b!79986 (= c!12481 (and ((_ is Cons!1503) lt!36158) (not (= (_1!1097 (h!2091 lt!36158)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19497 c!12480) b!79985))

(assert (= (and d!19497 (not c!12480)) b!79986))

(assert (= (and b!79986 c!12481) b!79987))

(assert (= (and b!79986 (not c!12481)) b!79988))

(declare-fun m!81463 () Bool)

(assert (=> b!79987 m!81463))

(assert (=> d!18483 d!19497))

(declare-fun d!19499 () Bool)

(assert (=> d!19499 (= (getValueByKey!137 lt!36158 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun lt!37118 () Unit!2257)

(assert (=> d!19499 (= lt!37118 (choose!456 lt!36158 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun e!52222 () Bool)

(assert (=> d!19499 e!52222))

(declare-fun res!41724 () Bool)

(assert (=> d!19499 (=> (not res!41724) (not e!52222))))

(assert (=> d!19499 (= res!41724 (isStrictlySorted!295 lt!36158))))

(assert (=> d!19499 (= (lemmaContainsTupThenGetReturnValue!54 lt!36158 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37118)))

(declare-fun b!79989 () Bool)

(declare-fun res!41725 () Bool)

(assert (=> b!79989 (=> (not res!41725) (not e!52222))))

(assert (=> b!79989 (= res!41725 (containsKey!141 lt!36158 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79990 () Bool)

(assert (=> b!79990 (= e!52222 (contains!743 lt!36158 (tuple2!2173 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (= (and d!19499 res!41724) b!79989))

(assert (= (and b!79989 res!41725) b!79990))

(assert (=> d!19499 m!78375))

(declare-fun m!81465 () Bool)

(assert (=> d!19499 m!81465))

(declare-fun m!81467 () Bool)

(assert (=> d!19499 m!81467))

(declare-fun m!81469 () Bool)

(assert (=> b!79989 m!81469))

(declare-fun m!81471 () Bool)

(assert (=> b!79990 m!81471))

(assert (=> d!18483 d!19499))

(declare-fun b!79991 () Bool)

(declare-fun c!12485 () Bool)

(declare-fun c!12484 () Bool)

(declare-fun e!52223 () List!1507)

(assert (=> b!79991 (= e!52223 (ite c!12485 (t!5153 (toList!739 lt!35869)) (ite c!12484 (Cons!1503 (h!2091 (toList!739 lt!35869)) (t!5153 (toList!739 lt!35869))) Nil!1504)))))

(declare-fun b!79992 () Bool)

(declare-fun e!52227 () List!1507)

(declare-fun call!7399 () List!1507)

(assert (=> b!79992 (= e!52227 call!7399)))

(declare-fun bm!7394 () Bool)

(declare-fun call!7397 () List!1507)

(declare-fun call!7398 () List!1507)

(assert (=> bm!7394 (= call!7397 call!7398)))

(declare-fun b!79993 () Bool)

(assert (=> b!79993 (= c!12484 (and ((_ is Cons!1503) (toList!739 lt!35869)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52225 () List!1507)

(declare-fun e!52224 () List!1507)

(assert (=> b!79993 (= e!52225 e!52224)))

(declare-fun b!79994 () Bool)

(assert (=> b!79994 (= e!52223 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35869)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!79995 () Bool)

(declare-fun res!41727 () Bool)

(declare-fun e!52226 () Bool)

(assert (=> b!79995 (=> (not res!41727) (not e!52226))))

(declare-fun lt!37119 () List!1507)

(assert (=> b!79995 (= res!41727 (containsKey!141 lt!37119 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun bm!7395 () Bool)

(declare-fun c!12482 () Bool)

(assert (=> bm!7395 (= call!7399 ($colon$colon!69 e!52223 (ite c!12482 (h!2091 (toList!739 lt!35869)) (tuple2!2173 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(declare-fun c!12483 () Bool)

(assert (=> bm!7395 (= c!12483 c!12482)))

(declare-fun b!79996 () Bool)

(assert (=> b!79996 (= e!52227 e!52225)))

(assert (=> b!79996 (= c!12485 (and ((_ is Cons!1503) (toList!739 lt!35869)) (= (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79998 () Bool)

(assert (=> b!79998 (= e!52225 call!7398)))

(declare-fun b!79999 () Bool)

(assert (=> b!79999 (= e!52226 (contains!743 lt!37119 (tuple2!2173 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun b!79997 () Bool)

(assert (=> b!79997 (= e!52224 call!7397)))

(declare-fun d!19501 () Bool)

(assert (=> d!19501 e!52226))

(declare-fun res!41726 () Bool)

(assert (=> d!19501 (=> (not res!41726) (not e!52226))))

(assert (=> d!19501 (= res!41726 (isStrictlySorted!295 lt!37119))))

(assert (=> d!19501 (= lt!37119 e!52227)))

(assert (=> d!19501 (= c!12482 (and ((_ is Cons!1503) (toList!739 lt!35869)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35869))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(assert (=> d!19501 (isStrictlySorted!295 (toList!739 lt!35869))))

(assert (=> d!19501 (= (insertStrictlySorted!57 (toList!739 lt!35869) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!37119)))

(declare-fun bm!7396 () Bool)

(assert (=> bm!7396 (= call!7398 call!7399)))

(declare-fun b!80000 () Bool)

(assert (=> b!80000 (= e!52224 call!7397)))

(assert (= (and d!19501 c!12482) b!79992))

(assert (= (and d!19501 (not c!12482)) b!79996))

(assert (= (and b!79996 c!12485) b!79998))

(assert (= (and b!79996 (not c!12485)) b!79993))

(assert (= (and b!79993 c!12484) b!79997))

(assert (= (and b!79993 (not c!12484)) b!80000))

(assert (= (or b!79997 b!80000) bm!7394))

(assert (= (or b!79998 bm!7394) bm!7396))

(assert (= (or b!79992 bm!7396) bm!7395))

(assert (= (and bm!7395 c!12483) b!79994))

(assert (= (and bm!7395 (not c!12483)) b!79991))

(assert (= (and d!19501 res!41726) b!79995))

(assert (= (and b!79995 res!41727) b!79999))

(declare-fun m!81473 () Bool)

(assert (=> b!79999 m!81473))

(declare-fun m!81475 () Bool)

(assert (=> d!19501 m!81475))

(assert (=> d!19501 m!78969))

(declare-fun m!81477 () Bool)

(assert (=> b!79994 m!81477))

(declare-fun m!81479 () Bool)

(assert (=> b!79995 m!81479))

(declare-fun m!81481 () Bool)

(assert (=> bm!7395 m!81481))

(assert (=> d!18483 d!19501))

(declare-fun d!19503 () Bool)

(declare-fun e!52228 () Bool)

(assert (=> d!19503 e!52228))

(declare-fun res!41728 () Bool)

(assert (=> d!19503 (=> res!41728 e!52228)))

(declare-fun lt!37123 () Bool)

(assert (=> d!19503 (= res!41728 (not lt!37123))))

(declare-fun lt!37120 () Bool)

(assert (=> d!19503 (= lt!37123 lt!37120)))

(declare-fun lt!37121 () Unit!2257)

(declare-fun e!52229 () Unit!2257)

(assert (=> d!19503 (= lt!37121 e!52229)))

(declare-fun c!12486 () Bool)

(assert (=> d!19503 (= c!12486 lt!37120)))

(assert (=> d!19503 (= lt!37120 (containsKey!141 (toList!739 lt!35987) lt!35988))))

(assert (=> d!19503 (= (contains!742 lt!35987 lt!35988) lt!37123)))

(declare-fun b!80001 () Bool)

(declare-fun lt!37122 () Unit!2257)

(assert (=> b!80001 (= e!52229 lt!37122)))

(assert (=> b!80001 (= lt!37122 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35987) lt!35988))))

(assert (=> b!80001 (isDefined!90 (getValueByKey!137 (toList!739 lt!35987) lt!35988))))

(declare-fun b!80002 () Bool)

(declare-fun Unit!2330 () Unit!2257)

(assert (=> b!80002 (= e!52229 Unit!2330)))

(declare-fun b!80003 () Bool)

(assert (=> b!80003 (= e!52228 (isDefined!90 (getValueByKey!137 (toList!739 lt!35987) lt!35988)))))

(assert (= (and d!19503 c!12486) b!80001))

(assert (= (and d!19503 (not c!12486)) b!80002))

(assert (= (and d!19503 (not res!41728)) b!80003))

(declare-fun m!81483 () Bool)

(assert (=> d!19503 m!81483))

(declare-fun m!81485 () Bool)

(assert (=> b!80001 m!81485))

(assert (=> b!80001 m!78731))

(assert (=> b!80001 m!78731))

(declare-fun m!81487 () Bool)

(assert (=> b!80001 m!81487))

(assert (=> b!80003 m!78731))

(assert (=> b!80003 m!78731))

(assert (=> b!80003 m!81487))

(assert (=> d!18575 d!19503))

(assert (=> d!18575 d!18577))

(assert (=> d!18575 d!18599))

(assert (=> d!18575 d!18581))

(declare-fun d!19505 () Bool)

(assert (=> d!19505 (= (apply!79 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35988) (apply!79 lt!35987 lt!35988))))

(assert (=> d!19505 true))

(declare-fun _$34!820 () Unit!2257)

(assert (=> d!19505 (= (choose!460 lt!35987 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35988) _$34!820)))

(declare-fun bs!3392 () Bool)

(assert (= bs!3392 d!19505))

(assert (=> bs!3392 m!78095))

(assert (=> bs!3392 m!78095))

(assert (=> bs!3392 m!78097))

(assert (=> bs!3392 m!78125))

(assert (=> d!18575 d!19505))

(declare-fun d!19507 () Bool)

(assert (=> d!19507 (= (get!1175 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78334 d!19507))

(declare-fun lt!37124 () Bool)

(declare-fun d!19509 () Bool)

(assert (=> d!19509 (= lt!37124 (select (content!83 (toList!739 lt!36196)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun e!52231 () Bool)

(assert (=> d!19509 (= lt!37124 e!52231)))

(declare-fun res!41729 () Bool)

(assert (=> d!19509 (=> (not res!41729) (not e!52231))))

(assert (=> d!19509 (= res!41729 ((_ is Cons!1503) (toList!739 lt!36196)))))

(assert (=> d!19509 (= (contains!743 (toList!739 lt!36196) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) lt!37124)))

(declare-fun b!80004 () Bool)

(declare-fun e!52230 () Bool)

(assert (=> b!80004 (= e!52231 e!52230)))

(declare-fun res!41730 () Bool)

(assert (=> b!80004 (=> res!41730 e!52230)))

(assert (=> b!80004 (= res!41730 (= (h!2091 (toList!739 lt!36196)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(declare-fun b!80005 () Bool)

(assert (=> b!80005 (= e!52230 (contains!743 (t!5153 (toList!739 lt!36196)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))

(assert (= (and d!19509 res!41729) b!80004))

(assert (= (and b!80004 (not res!41730)) b!80005))

(declare-fun m!81489 () Bool)

(assert (=> d!19509 m!81489))

(declare-fun m!81491 () Bool)

(assert (=> d!19509 m!81491))

(declare-fun m!81493 () Bool)

(assert (=> b!80005 m!81493))

(assert (=> b!78268 d!19509))

(declare-fun d!19511 () Bool)

(declare-fun res!41731 () Bool)

(declare-fun e!52232 () Bool)

(assert (=> d!19511 (=> res!41731 e!52232)))

(assert (=> d!19511 (= res!41731 (and ((_ is Cons!1503) (toList!739 lt!36021)) (= (_1!1097 (h!2091 (toList!739 lt!36021))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19511 (= (containsKey!141 (toList!739 lt!36021) #b1000000000000000000000000000000000000000000000000000000000000000) e!52232)))

(declare-fun b!80006 () Bool)

(declare-fun e!52233 () Bool)

(assert (=> b!80006 (= e!52232 e!52233)))

(declare-fun res!41732 () Bool)

(assert (=> b!80006 (=> (not res!41732) (not e!52233))))

(assert (=> b!80006 (= res!41732 (and (or (not ((_ is Cons!1503) (toList!739 lt!36021))) (bvsle (_1!1097 (h!2091 (toList!739 lt!36021))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1503) (toList!739 lt!36021)) (bvslt (_1!1097 (h!2091 (toList!739 lt!36021))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80007 () Bool)

(assert (=> b!80007 (= e!52233 (containsKey!141 (t!5153 (toList!739 lt!36021)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19511 (not res!41731)) b!80006))

(assert (= (and b!80006 res!41732) b!80007))

(declare-fun m!81495 () Bool)

(assert (=> b!80007 m!81495))

(assert (=> d!18661 d!19511))

(declare-fun b!80011 () Bool)

(declare-fun e!52235 () Option!143)

(assert (=> b!80011 (= e!52235 None!141)))

(declare-fun d!19513 () Bool)

(declare-fun c!12487 () Bool)

(assert (=> d!19513 (= c!12487 (and ((_ is Cons!1503) (toList!739 lt!36159)) (= (_1!1097 (h!2091 (toList!739 lt!36159))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52234 () Option!143)

(assert (=> d!19513 (= (getValueByKey!137 (toList!739 lt!36159) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!52234)))

(declare-fun b!80010 () Bool)

(assert (=> b!80010 (= e!52235 (getValueByKey!137 (t!5153 (toList!739 lt!36159)) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!80008 () Bool)

(assert (=> b!80008 (= e!52234 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36159)))))))

(declare-fun b!80009 () Bool)

(assert (=> b!80009 (= e!52234 e!52235)))

(declare-fun c!12488 () Bool)

(assert (=> b!80009 (= c!12488 (and ((_ is Cons!1503) (toList!739 lt!36159)) (not (= (_1!1097 (h!2091 (toList!739 lt!36159))) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19513 c!12487) b!80008))

(assert (= (and d!19513 (not c!12487)) b!80009))

(assert (= (and b!80009 c!12488) b!80010))

(assert (= (and b!80009 (not c!12488)) b!80011))

(declare-fun m!81497 () Bool)

(assert (=> b!80010 m!81497))

(assert (=> b!78234 d!19513))

(declare-fun d!19515 () Bool)

(declare-fun res!41733 () Bool)

(declare-fun e!52236 () Bool)

(assert (=> d!19515 (=> res!41733 e!52236)))

(assert (=> d!19515 (= res!41733 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35980)))))

(assert (=> d!19515 (= (containsKey!141 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35980) e!52236)))

(declare-fun b!80012 () Bool)

(declare-fun e!52237 () Bool)

(assert (=> b!80012 (= e!52236 e!52237)))

(declare-fun res!41734 () Bool)

(assert (=> b!80012 (=> (not res!41734) (not e!52237))))

(assert (=> b!80012 (= res!41734 (and (or (not ((_ is Cons!1503) (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) (bvsle (_1!1097 (h!2091 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35980)) ((_ is Cons!1503) (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (bvslt (_1!1097 (h!2091 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35980)))))

(declare-fun b!80013 () Bool)

(assert (=> b!80013 (= e!52237 (containsKey!141 (t!5153 (toList!739 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) lt!35980))))

(assert (= (and d!19515 (not res!41733)) b!80012))

(assert (= (and b!80012 res!41734) b!80013))

(declare-fun m!81499 () Bool)

(assert (=> b!80013 m!81499))

(assert (=> d!18589 d!19515))

(declare-fun d!19517 () Bool)

(declare-fun res!41735 () Bool)

(declare-fun e!52238 () Bool)

(assert (=> d!19517 (=> res!41735 e!52238)))

(assert (=> d!19517 (= res!41735 (and ((_ is Cons!1503) lt!36241) (= (_1!1097 (h!2091 lt!36241)) (_1!1097 lt!35861))))))

(assert (=> d!19517 (= (containsKey!141 lt!36241 (_1!1097 lt!35861)) e!52238)))

(declare-fun b!80014 () Bool)

(declare-fun e!52239 () Bool)

(assert (=> b!80014 (= e!52238 e!52239)))

(declare-fun res!41736 () Bool)

(assert (=> b!80014 (=> (not res!41736) (not e!52239))))

(assert (=> b!80014 (= res!41736 (and (or (not ((_ is Cons!1503) lt!36241)) (bvsle (_1!1097 (h!2091 lt!36241)) (_1!1097 lt!35861))) ((_ is Cons!1503) lt!36241) (bvslt (_1!1097 (h!2091 lt!36241)) (_1!1097 lt!35861))))))

(declare-fun b!80015 () Bool)

(assert (=> b!80015 (= e!52239 (containsKey!141 (t!5153 lt!36241) (_1!1097 lt!35861)))))

(assert (= (and d!19517 (not res!41735)) b!80014))

(assert (= (and b!80014 res!41736) b!80015))

(declare-fun m!81501 () Bool)

(assert (=> b!80015 m!81501))

(assert (=> b!78381 d!19517))

(declare-fun d!19519 () Bool)

(assert (=> d!19519 (= (apply!79 lt!36389 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1176 (getValueByKey!137 (toList!739 lt!36389) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3393 () Bool)

(assert (= bs!3393 d!19519))

(assert (=> bs!3393 m!80065))

(assert (=> bs!3393 m!80065))

(declare-fun m!81503 () Bool)

(assert (=> bs!3393 m!81503))

(assert (=> b!78577 d!19519))

(assert (=> b!78740 d!19233))

(assert (=> b!78740 d!18569))

(declare-fun b!80019 () Bool)

(declare-fun e!52241 () Option!143)

(assert (=> b!80019 (= e!52241 None!141)))

(declare-fun d!19521 () Bool)

(declare-fun c!12489 () Bool)

(assert (=> d!19521 (= c!12489 (and ((_ is Cons!1503) (toList!739 lt!36285)) (= (_1!1097 (h!2091 (toList!739 lt!36285))) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52240 () Option!143)

(assert (=> d!19521 (= (getValueByKey!137 (toList!739 lt!36285) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!52240)))

(declare-fun b!80018 () Bool)

(assert (=> b!80018 (= e!52241 (getValueByKey!137 (t!5153 (toList!739 lt!36285)) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!80016 () Bool)

(assert (=> b!80016 (= e!52240 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36285)))))))

(declare-fun b!80017 () Bool)

(assert (=> b!80017 (= e!52240 e!52241)))

(declare-fun c!12490 () Bool)

(assert (=> b!80017 (= c!12490 (and ((_ is Cons!1503) (toList!739 lt!36285)) (not (= (_1!1097 (h!2091 (toList!739 lt!36285))) (_1!1097 (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19521 c!12489) b!80016))

(assert (= (and d!19521 (not c!12489)) b!80017))

(assert (= (and b!80017 c!12490) b!80018))

(assert (= (and b!80017 (not c!12490)) b!80019))

(declare-fun m!81505 () Bool)

(assert (=> b!80018 m!81505))

(assert (=> b!78437 d!19521))

(assert (=> d!18615 d!18613))

(declare-fun d!19523 () Bool)

(assert (=> d!19523 (= (getValueByKey!137 lt!36040 (_1!1097 lt!35861)) (Some!142 (_2!1097 lt!35861)))))

(assert (=> d!19523 true))

(declare-fun _$22!396 () Unit!2257)

(assert (=> d!19523 (= (choose!456 lt!36040 (_1!1097 lt!35861) (_2!1097 lt!35861)) _$22!396)))

(declare-fun bs!3394 () Bool)

(assert (= bs!3394 d!19523))

(assert (=> bs!3394 m!78235))

(assert (=> d!18615 d!19523))

(declare-fun d!19525 () Bool)

(declare-fun res!41737 () Bool)

(declare-fun e!52242 () Bool)

(assert (=> d!19525 (=> res!41737 e!52242)))

(assert (=> d!19525 (= res!41737 (or ((_ is Nil!1504) lt!36040) ((_ is Nil!1504) (t!5153 lt!36040))))))

(assert (=> d!19525 (= (isStrictlySorted!295 lt!36040) e!52242)))

(declare-fun b!80020 () Bool)

(declare-fun e!52243 () Bool)

(assert (=> b!80020 (= e!52242 e!52243)))

(declare-fun res!41738 () Bool)

(assert (=> b!80020 (=> (not res!41738) (not e!52243))))

(assert (=> b!80020 (= res!41738 (bvslt (_1!1097 (h!2091 lt!36040)) (_1!1097 (h!2091 (t!5153 lt!36040)))))))

(declare-fun b!80021 () Bool)

(assert (=> b!80021 (= e!52243 (isStrictlySorted!295 (t!5153 lt!36040)))))

(assert (= (and d!19525 (not res!41737)) b!80020))

(assert (= (and b!80020 res!41738) b!80021))

(declare-fun m!81507 () Bool)

(assert (=> b!80021 m!81507))

(assert (=> d!18615 d!19525))

(declare-fun d!19527 () Bool)

(assert (=> d!19527 (= (size!2140 newMap!16) (bvadd (_size!415 newMap!16) (bvsdiv (bvadd (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!78314 d!19527))

(declare-fun d!19529 () Bool)

(declare-fun lt!37125 () Bool)

(assert (=> d!19529 (= lt!37125 (select (content!83 lt!36315) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun e!52245 () Bool)

(assert (=> d!19529 (= lt!37125 e!52245)))

(declare-fun res!41739 () Bool)

(assert (=> d!19529 (=> (not res!41739) (not e!52245))))

(assert (=> d!19529 (= res!41739 ((_ is Cons!1503) lt!36315))))

(assert (=> d!19529 (= (contains!743 lt!36315 (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))) lt!37125)))

(declare-fun b!80022 () Bool)

(declare-fun e!52244 () Bool)

(assert (=> b!80022 (= e!52245 e!52244)))

(declare-fun res!41740 () Bool)

(assert (=> b!80022 (=> res!41740 e!52244)))

(assert (=> b!80022 (= res!41740 (= (h!2091 lt!36315) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(declare-fun b!80023 () Bool)

(assert (=> b!80023 (= e!52244 (contains!743 (t!5153 lt!36315) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))))))

(assert (= (and d!19529 res!41739) b!80022))

(assert (= (and b!80022 (not res!41740)) b!80023))

(declare-fun m!81509 () Bool)

(assert (=> d!19529 m!81509))

(declare-fun m!81511 () Bool)

(assert (=> d!19529 m!81511))

(declare-fun m!81513 () Bool)

(assert (=> b!80023 m!81513))

(assert (=> b!78493 d!19529))

(assert (=> b!78512 d!18861))

(declare-fun d!19531 () Bool)

(assert (=> d!19531 (contains!742 (getCurrentListMap!433 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))

(assert (=> d!19531 true))

(declare-fun _$16!99 () Unit!2257)

(assert (=> d!19531 (= (choose!463 (_keys!3932 newMap!16) lt!36130 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3095 lt!36128) (defaultEntry!2272 newMap!16)) _$16!99)))

(declare-fun bs!3395 () Bool)

(assert (= bs!3395 d!19531))

(assert (=> bs!3395 m!78979))

(assert (=> bs!3395 m!78321))

(assert (=> bs!3395 m!78979))

(assert (=> bs!3395 m!78321))

(assert (=> bs!3395 m!78981))

(assert (=> d!18639 d!19531))

(assert (=> d!18639 d!18765))

(assert (=> d!18495 d!18493))

(assert (=> d!18495 d!18499))

(assert (=> d!18495 d!18501))

(assert (=> d!18495 d!18497))

(declare-fun b!80027 () Bool)

(declare-fun e!52247 () Option!143)

(assert (=> b!80027 (= e!52247 None!141)))

(declare-fun d!19533 () Bool)

(declare-fun c!12491 () Bool)

(assert (=> d!19533 (= c!12491 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36041))) (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36041)))) (_1!1097 lt!35861))))))

(declare-fun e!52246 () Option!143)

(assert (=> d!19533 (= (getValueByKey!137 (t!5153 (toList!739 lt!36041)) (_1!1097 lt!35861)) e!52246)))

(declare-fun b!80026 () Bool)

(assert (=> b!80026 (= e!52247 (getValueByKey!137 (t!5153 (t!5153 (toList!739 lt!36041))) (_1!1097 lt!35861)))))

(declare-fun b!80024 () Bool)

(assert (=> b!80024 (= e!52246 (Some!142 (_2!1097 (h!2091 (t!5153 (toList!739 lt!36041))))))))

(declare-fun b!80025 () Bool)

(assert (=> b!80025 (= e!52246 e!52247)))

(declare-fun c!12492 () Bool)

(assert (=> b!80025 (= c!12492 (and ((_ is Cons!1503) (t!5153 (toList!739 lt!36041))) (not (= (_1!1097 (h!2091 (t!5153 (toList!739 lt!36041)))) (_1!1097 lt!35861)))))))

(assert (= (and d!19533 c!12491) b!80024))

(assert (= (and d!19533 (not c!12491)) b!80025))

(assert (= (and b!80025 c!12492) b!80026))

(assert (= (and b!80025 (not c!12492)) b!80027))

(declare-fun m!81515 () Bool)

(assert (=> b!80026 m!81515))

(assert (=> b!78605 d!19533))

(declare-fun d!19535 () Bool)

(declare-fun res!41741 () Bool)

(declare-fun e!52248 () Bool)

(assert (=> d!19535 (=> res!41741 e!52248)))

(assert (=> d!19535 (= res!41741 (or ((_ is Nil!1504) lt!36364) ((_ is Nil!1504) (t!5153 lt!36364))))))

(assert (=> d!19535 (= (isStrictlySorted!295 lt!36364) e!52248)))

(declare-fun b!80028 () Bool)

(declare-fun e!52249 () Bool)

(assert (=> b!80028 (= e!52248 e!52249)))

(declare-fun res!41742 () Bool)

(assert (=> b!80028 (=> (not res!41742) (not e!52249))))

(assert (=> b!80028 (= res!41742 (bvslt (_1!1097 (h!2091 lt!36364)) (_1!1097 (h!2091 (t!5153 lt!36364)))))))

(declare-fun b!80029 () Bool)

(assert (=> b!80029 (= e!52249 (isStrictlySorted!295 (t!5153 lt!36364)))))

(assert (= (and d!19535 (not res!41741)) b!80028))

(assert (= (and b!80028 res!41742) b!80029))

(declare-fun m!81517 () Bool)

(assert (=> b!80029 m!81517))

(assert (=> d!18637 d!19535))

(assert (=> d!18637 d!18785))

(declare-fun d!19537 () Bool)

(declare-fun res!41743 () Bool)

(declare-fun e!52250 () Bool)

(assert (=> d!19537 (=> res!41743 e!52250)))

(assert (=> d!19537 (= res!41743 (and ((_ is Cons!1503) lt!36431) (= (_1!1097 (h!2091 lt!36431)) (_1!1097 lt!35870))))))

(assert (=> d!19537 (= (containsKey!141 lt!36431 (_1!1097 lt!35870)) e!52250)))

(declare-fun b!80030 () Bool)

(declare-fun e!52251 () Bool)

(assert (=> b!80030 (= e!52250 e!52251)))

(declare-fun res!41744 () Bool)

(assert (=> b!80030 (=> (not res!41744) (not e!52251))))

(assert (=> b!80030 (= res!41744 (and (or (not ((_ is Cons!1503) lt!36431)) (bvsle (_1!1097 (h!2091 lt!36431)) (_1!1097 lt!35870))) ((_ is Cons!1503) lt!36431) (bvslt (_1!1097 (h!2091 lt!36431)) (_1!1097 lt!35870))))))

(declare-fun b!80031 () Bool)

(assert (=> b!80031 (= e!52251 (containsKey!141 (t!5153 lt!36431) (_1!1097 lt!35870)))))

(assert (= (and d!19537 (not res!41743)) b!80030))

(assert (= (and b!80030 res!41744) b!80031))

(declare-fun m!81519 () Bool)

(assert (=> b!80031 m!81519))

(assert (=> b!78670 d!19537))

(assert (=> d!18645 d!18765))

(declare-fun d!19539 () Bool)

(declare-fun res!41745 () Bool)

(declare-fun e!52252 () Bool)

(assert (=> d!19539 (=> res!41745 e!52252)))

(assert (=> d!19539 (= res!41745 (or ((_ is Nil!1504) lt!36262) ((_ is Nil!1504) (t!5153 lt!36262))))))

(assert (=> d!19539 (= (isStrictlySorted!295 lt!36262) e!52252)))

(declare-fun b!80032 () Bool)

(declare-fun e!52253 () Bool)

(assert (=> b!80032 (= e!52252 e!52253)))

(declare-fun res!41746 () Bool)

(assert (=> b!80032 (=> (not res!41746) (not e!52253))))

(assert (=> b!80032 (= res!41746 (bvslt (_1!1097 (h!2091 lt!36262)) (_1!1097 (h!2091 (t!5153 lt!36262)))))))

(declare-fun b!80033 () Bool)

(assert (=> b!80033 (= e!52253 (isStrictlySorted!295 (t!5153 lt!36262)))))

(assert (= (and d!19539 (not res!41745)) b!80032))

(assert (= (and b!80032 res!41746) b!80033))

(declare-fun m!81521 () Bool)

(assert (=> b!80033 m!81521))

(assert (=> d!18559 d!19539))

(declare-fun d!19541 () Bool)

(declare-fun res!41747 () Bool)

(declare-fun e!52254 () Bool)

(assert (=> d!19541 (=> res!41747 e!52254)))

(assert (=> d!19541 (= res!41747 (or ((_ is Nil!1504) (toList!739 (+!105 lt!35869 lt!35870))) ((_ is Nil!1504) (t!5153 (toList!739 (+!105 lt!35869 lt!35870))))))))

(assert (=> d!19541 (= (isStrictlySorted!295 (toList!739 (+!105 lt!35869 lt!35870))) e!52254)))

(declare-fun b!80034 () Bool)

(declare-fun e!52255 () Bool)

(assert (=> b!80034 (= e!52254 e!52255)))

(declare-fun res!41748 () Bool)

(assert (=> b!80034 (=> (not res!41748) (not e!52255))))

(assert (=> b!80034 (= res!41748 (bvslt (_1!1097 (h!2091 (toList!739 (+!105 lt!35869 lt!35870)))) (_1!1097 (h!2091 (t!5153 (toList!739 (+!105 lt!35869 lt!35870)))))))))

(declare-fun b!80035 () Bool)

(assert (=> b!80035 (= e!52255 (isStrictlySorted!295 (t!5153 (toList!739 (+!105 lt!35869 lt!35870)))))))

(assert (= (and d!19541 (not res!41747)) b!80034))

(assert (= (and b!80034 res!41748) b!80035))

(assert (=> b!80035 m!80053))

(assert (=> d!18559 d!19541))

(declare-fun bm!7397 () Bool)

(declare-fun call!7400 () Bool)

(assert (=> bm!7397 (= call!7400 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!80036 () Bool)

(declare-fun e!52257 () Bool)

(assert (=> b!80036 (= e!52257 call!7400)))

(declare-fun b!80037 () Bool)

(declare-fun e!52258 () Bool)

(declare-fun e!52256 () Bool)

(assert (=> b!80037 (= e!52258 e!52256)))

(declare-fun c!12493 () Bool)

(assert (=> b!80037 (= c!12493 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!80038 () Bool)

(assert (=> b!80038 (= e!52256 call!7400)))

(declare-fun b!80039 () Bool)

(assert (=> b!80039 (= e!52256 e!52257)))

(declare-fun lt!37126 () (_ BitVec 64))

(assert (=> b!80039 (= lt!37126 (select (arr!1895 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!37128 () Unit!2257)

(assert (=> b!80039 (= lt!37128 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3932 newMap!16) lt!37126 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!80039 (arrayContainsKey!0 (_keys!3932 newMap!16) lt!37126 #b00000000000000000000000000000000)))

(declare-fun lt!37127 () Unit!2257)

(assert (=> b!80039 (= lt!37127 lt!37128)))

(declare-fun res!41750 () Bool)

(assert (=> b!80039 (= res!41750 (= (seekEntryOrOpen!0 (select (arr!1895 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3932 newMap!16) (mask!6268 newMap!16)) (Found!240 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!80039 (=> (not res!41750) (not e!52257))))

(declare-fun d!19543 () Bool)

(declare-fun res!41749 () Bool)

(assert (=> d!19543 (=> res!41749 e!52258)))

(assert (=> d!19543 (= res!41749 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!19543 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3932 newMap!16) (mask!6268 newMap!16)) e!52258)))

(assert (= (and d!19543 (not res!41749)) b!80037))

(assert (= (and b!80037 c!12493) b!80039))

(assert (= (and b!80037 (not c!12493)) b!80038))

(assert (= (and b!80039 res!41750) b!80036))

(assert (= (or b!80036 b!80038) bm!7397))

(declare-fun m!81523 () Bool)

(assert (=> bm!7397 m!81523))

(assert (=> b!80037 m!80877))

(assert (=> b!80037 m!80877))

(assert (=> b!80037 m!81403))

(assert (=> b!80039 m!80877))

(declare-fun m!81525 () Bool)

(assert (=> b!80039 m!81525))

(declare-fun m!81527 () Bool)

(assert (=> b!80039 m!81527))

(assert (=> b!80039 m!80877))

(declare-fun m!81529 () Bool)

(assert (=> b!80039 m!81529))

(assert (=> bm!7220 d!19543))

(declare-fun b!80043 () Bool)

(declare-fun e!52260 () Option!143)

(assert (=> b!80043 (= e!52260 None!141)))

(declare-fun d!19545 () Bool)

(declare-fun c!12494 () Bool)

(assert (=> d!19545 (= c!12494 (and ((_ is Cons!1503) (t!5153 lt!36048)) (= (_1!1097 (h!2091 (t!5153 lt!36048))) (_1!1097 lt!35870))))))

(declare-fun e!52259 () Option!143)

(assert (=> d!19545 (= (getValueByKey!137 (t!5153 lt!36048) (_1!1097 lt!35870)) e!52259)))

(declare-fun b!80042 () Bool)

(assert (=> b!80042 (= e!52260 (getValueByKey!137 (t!5153 (t!5153 lt!36048)) (_1!1097 lt!35870)))))

(declare-fun b!80040 () Bool)

(assert (=> b!80040 (= e!52259 (Some!142 (_2!1097 (h!2091 (t!5153 lt!36048)))))))

(declare-fun b!80041 () Bool)

(assert (=> b!80041 (= e!52259 e!52260)))

(declare-fun c!12495 () Bool)

(assert (=> b!80041 (= c!12495 (and ((_ is Cons!1503) (t!5153 lt!36048)) (not (= (_1!1097 (h!2091 (t!5153 lt!36048))) (_1!1097 lt!35870)))))))

(assert (= (and d!19545 c!12494) b!80040))

(assert (= (and d!19545 (not c!12494)) b!80041))

(assert (= (and b!80041 c!12495) b!80042))

(assert (= (and b!80041 (not c!12495)) b!80043))

(declare-fun m!81531 () Bool)

(assert (=> b!80042 m!81531))

(assert (=> b!78662 d!19545))

(assert (=> d!18561 d!18469))

(declare-fun d!19547 () Bool)

(declare-fun e!52261 () Bool)

(assert (=> d!19547 e!52261))

(declare-fun res!41751 () Bool)

(assert (=> d!19547 (=> res!41751 e!52261)))

(declare-fun lt!37132 () Bool)

(assert (=> d!19547 (= res!41751 (not lt!37132))))

(declare-fun lt!37129 () Bool)

(assert (=> d!19547 (= lt!37132 lt!37129)))

(declare-fun lt!37130 () Unit!2257)

(declare-fun e!52262 () Unit!2257)

(assert (=> d!19547 (= lt!37130 e!52262)))

(declare-fun c!12496 () Bool)

(assert (=> d!19547 (= c!12496 lt!37129)))

(assert (=> d!19547 (= lt!37129 (containsKey!141 (toList!739 (map!1174 (_2!1098 lt!36498))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> d!19547 (= (contains!742 (map!1174 (_2!1098 lt!36498)) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) lt!37132)))

(declare-fun b!80044 () Bool)

(declare-fun lt!37131 () Unit!2257)

(assert (=> b!80044 (= e!52262 lt!37131)))

(assert (=> b!80044 (= lt!37131 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 (map!1174 (_2!1098 lt!36498))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (=> b!80044 (isDefined!90 (getValueByKey!137 (toList!739 (map!1174 (_2!1098 lt!36498))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun b!80045 () Bool)

(declare-fun Unit!2331 () Unit!2257)

(assert (=> b!80045 (= e!52262 Unit!2331)))

(declare-fun b!80046 () Bool)

(assert (=> b!80046 (= e!52261 (isDefined!90 (getValueByKey!137 (toList!739 (map!1174 (_2!1098 lt!36498))) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))))))

(assert (= (and d!19547 c!12496) b!80044))

(assert (= (and d!19547 (not c!12496)) b!80045))

(assert (= (and d!19547 (not res!41751)) b!80046))

(assert (=> d!19547 m!77965))

(declare-fun m!81533 () Bool)

(assert (=> d!19547 m!81533))

(assert (=> b!80044 m!77965))

(declare-fun m!81535 () Bool)

(assert (=> b!80044 m!81535))

(assert (=> b!80044 m!77965))

(declare-fun m!81537 () Bool)

(assert (=> b!80044 m!81537))

(assert (=> b!80044 m!81537))

(declare-fun m!81539 () Bool)

(assert (=> b!80044 m!81539))

(assert (=> b!80046 m!77965))

(assert (=> b!80046 m!81537))

(assert (=> b!80046 m!81537))

(assert (=> b!80046 m!81539))

(assert (=> b!78710 d!19547))

(assert (=> b!78710 d!19421))

(assert (=> b!78596 d!18861))

(declare-fun d!19549 () Bool)

(declare-fun e!52263 () Bool)

(assert (=> d!19549 e!52263))

(declare-fun res!41752 () Bool)

(assert (=> d!19549 (=> res!41752 e!52263)))

(declare-fun lt!37136 () Bool)

(assert (=> d!19549 (= res!41752 (not lt!37136))))

(declare-fun lt!37133 () Bool)

(assert (=> d!19549 (= lt!37136 lt!37133)))

(declare-fun lt!37134 () Unit!2257)

(declare-fun e!52264 () Unit!2257)

(assert (=> d!19549 (= lt!37134 e!52264)))

(declare-fun c!12497 () Bool)

(assert (=> d!19549 (= c!12497 lt!37133)))

(assert (=> d!19549 (= lt!37133 (containsKey!141 (toList!739 lt!36528) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19549 (= (contains!742 lt!36528 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!37136)))

(declare-fun b!80047 () Bool)

(declare-fun lt!37135 () Unit!2257)

(assert (=> b!80047 (= e!52264 lt!37135)))

(assert (=> b!80047 (= lt!37135 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36528) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> b!80047 (isDefined!90 (getValueByKey!137 (toList!739 lt!36528) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!80048 () Bool)

(declare-fun Unit!2332 () Unit!2257)

(assert (=> b!80048 (= e!52264 Unit!2332)))

(declare-fun b!80049 () Bool)

(assert (=> b!80049 (= e!52263 (isDefined!90 (getValueByKey!137 (toList!739 lt!36528) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (= (and d!19549 c!12497) b!80047))

(assert (= (and d!19549 (not c!12497)) b!80048))

(assert (= (and d!19549 (not res!41752)) b!80049))

(declare-fun m!81541 () Bool)

(assert (=> d!19549 m!81541))

(declare-fun m!81543 () Bool)

(assert (=> b!80047 m!81543))

(assert (=> b!80047 m!79239))

(assert (=> b!80047 m!79239))

(declare-fun m!81545 () Bool)

(assert (=> b!80047 m!81545))

(assert (=> b!80049 m!79239))

(assert (=> b!80049 m!79239))

(assert (=> b!80049 m!81545))

(assert (=> d!18697 d!19549))

(declare-fun b!80053 () Bool)

(declare-fun e!52266 () Option!143)

(assert (=> b!80053 (= e!52266 None!141)))

(declare-fun c!12498 () Bool)

(declare-fun d!19551 () Bool)

(assert (=> d!19551 (= c!12498 (and ((_ is Cons!1503) lt!36527) (= (_1!1097 (h!2091 lt!36527)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52265 () Option!143)

(assert (=> d!19551 (= (getValueByKey!137 lt!36527 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) e!52265)))

(declare-fun b!80052 () Bool)

(assert (=> b!80052 (= e!52266 (getValueByKey!137 (t!5153 lt!36527) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!80050 () Bool)

(assert (=> b!80050 (= e!52265 (Some!142 (_2!1097 (h!2091 lt!36527))))))

(declare-fun b!80051 () Bool)

(assert (=> b!80051 (= e!52265 e!52266)))

(declare-fun c!12499 () Bool)

(assert (=> b!80051 (= c!12499 (and ((_ is Cons!1503) lt!36527) (not (= (_1!1097 (h!2091 lt!36527)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19551 c!12498) b!80050))

(assert (= (and d!19551 (not c!12498)) b!80051))

(assert (= (and b!80051 c!12499) b!80052))

(assert (= (and b!80051 (not c!12499)) b!80053))

(declare-fun m!81547 () Bool)

(assert (=> b!80052 m!81547))

(assert (=> d!18697 d!19551))

(declare-fun d!19553 () Bool)

(assert (=> d!19553 (= (getValueByKey!137 lt!36527 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!37137 () Unit!2257)

(assert (=> d!19553 (= lt!37137 (choose!456 lt!36527 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun e!52267 () Bool)

(assert (=> d!19553 e!52267))

(declare-fun res!41753 () Bool)

(assert (=> d!19553 (=> (not res!41753) (not e!52267))))

(assert (=> d!19553 (= res!41753 (isStrictlySorted!295 lt!36527))))

(assert (=> d!19553 (= (lemmaContainsTupThenGetReturnValue!54 lt!36527 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!37137)))

(declare-fun b!80054 () Bool)

(declare-fun res!41754 () Bool)

(assert (=> b!80054 (=> (not res!41754) (not e!52267))))

(assert (=> b!80054 (= res!41754 (containsKey!141 lt!36527 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!80055 () Bool)

(assert (=> b!80055 (= e!52267 (contains!743 lt!36527 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (= (and d!19553 res!41753) b!80054))

(assert (= (and b!80054 res!41754) b!80055))

(assert (=> d!19553 m!79233))

(declare-fun m!81549 () Bool)

(assert (=> d!19553 m!81549))

(declare-fun m!81551 () Bool)

(assert (=> d!19553 m!81551))

(declare-fun m!81553 () Bool)

(assert (=> b!80054 m!81553))

(declare-fun m!81555 () Bool)

(assert (=> b!80055 m!81555))

(assert (=> d!18697 d!19553))

(declare-fun b!80056 () Bool)

(declare-fun c!12503 () Bool)

(declare-fun e!52268 () List!1507)

(declare-fun c!12502 () Bool)

(assert (=> b!80056 (= e!52268 (ite c!12503 (t!5153 (toList!739 call!7182)) (ite c!12502 (Cons!1503 (h!2091 (toList!739 call!7182)) (t!5153 (toList!739 call!7182))) Nil!1504)))))

(declare-fun b!80057 () Bool)

(declare-fun e!52272 () List!1507)

(declare-fun call!7403 () List!1507)

(assert (=> b!80057 (= e!52272 call!7403)))

(declare-fun bm!7398 () Bool)

(declare-fun call!7401 () List!1507)

(declare-fun call!7402 () List!1507)

(assert (=> bm!7398 (= call!7401 call!7402)))

(declare-fun b!80058 () Bool)

(assert (=> b!80058 (= c!12502 (and ((_ is Cons!1503) (toList!739 call!7182)) (bvsgt (_1!1097 (h!2091 (toList!739 call!7182))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52270 () List!1507)

(declare-fun e!52269 () List!1507)

(assert (=> b!80058 (= e!52270 e!52269)))

(declare-fun b!80059 () Bool)

(assert (=> b!80059 (= e!52268 (insertStrictlySorted!57 (t!5153 (toList!739 call!7182)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!80060 () Bool)

(declare-fun res!41756 () Bool)

(declare-fun e!52271 () Bool)

(assert (=> b!80060 (=> (not res!41756) (not e!52271))))

(declare-fun lt!37138 () List!1507)

(assert (=> b!80060 (= res!41756 (containsKey!141 lt!37138 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun c!12500 () Bool)

(declare-fun bm!7399 () Bool)

(assert (=> bm!7399 (= call!7403 ($colon$colon!69 e!52268 (ite c!12500 (h!2091 (toList!739 call!7182)) (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun c!12501 () Bool)

(assert (=> bm!7399 (= c!12501 c!12500)))

(declare-fun b!80061 () Bool)

(assert (=> b!80061 (= e!52272 e!52270)))

(assert (=> b!80061 (= c!12503 (and ((_ is Cons!1503) (toList!739 call!7182)) (= (_1!1097 (h!2091 (toList!739 call!7182))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!80063 () Bool)

(assert (=> b!80063 (= e!52270 call!7402)))

(declare-fun b!80064 () Bool)

(assert (=> b!80064 (= e!52271 (contains!743 lt!37138 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!80062 () Bool)

(assert (=> b!80062 (= e!52269 call!7401)))

(declare-fun d!19555 () Bool)

(assert (=> d!19555 e!52271))

(declare-fun res!41755 () Bool)

(assert (=> d!19555 (=> (not res!41755) (not e!52271))))

(assert (=> d!19555 (= res!41755 (isStrictlySorted!295 lt!37138))))

(assert (=> d!19555 (= lt!37138 e!52272)))

(assert (=> d!19555 (= c!12500 (and ((_ is Cons!1503) (toList!739 call!7182)) (bvslt (_1!1097 (h!2091 (toList!739 call!7182))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (=> d!19555 (isStrictlySorted!295 (toList!739 call!7182))))

(assert (=> d!19555 (= (insertStrictlySorted!57 (toList!739 call!7182) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!37138)))

(declare-fun bm!7400 () Bool)

(assert (=> bm!7400 (= call!7402 call!7403)))

(declare-fun b!80065 () Bool)

(assert (=> b!80065 (= e!52269 call!7401)))

(assert (= (and d!19555 c!12500) b!80057))

(assert (= (and d!19555 (not c!12500)) b!80061))

(assert (= (and b!80061 c!12503) b!80063))

(assert (= (and b!80061 (not c!12503)) b!80058))

(assert (= (and b!80058 c!12502) b!80062))

(assert (= (and b!80058 (not c!12502)) b!80065))

(assert (= (or b!80062 b!80065) bm!7398))

(assert (= (or b!80063 bm!7398) bm!7400))

(assert (= (or b!80057 bm!7400) bm!7399))

(assert (= (and bm!7399 c!12501) b!80059))

(assert (= (and bm!7399 (not c!12501)) b!80056))

(assert (= (and d!19555 res!41755) b!80060))

(assert (= (and b!80060 res!41756) b!80064))

(declare-fun m!81557 () Bool)

(assert (=> b!80064 m!81557))

(declare-fun m!81559 () Bool)

(assert (=> d!19555 m!81559))

(declare-fun m!81561 () Bool)

(assert (=> d!19555 m!81561))

(declare-fun m!81563 () Bool)

(assert (=> b!80059 m!81563))

(declare-fun m!81565 () Bool)

(assert (=> b!80060 m!81565))

(declare-fun m!81567 () Bool)

(assert (=> bm!7399 m!81567))

(assert (=> d!18697 d!19555))

(declare-fun d!19557 () Bool)

(assert (=> d!19557 (= (apply!79 lt!36213 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1176 (getValueByKey!137 (toList!739 lt!36213) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3396 () Bool)

(assert (= bs!3396 d!19557))

(assert (=> bs!3396 m!78509))

(assert (=> bs!3396 m!79895))

(assert (=> bs!3396 m!79895))

(declare-fun m!81569 () Bool)

(assert (=> bs!3396 m!81569))

(assert (=> b!78286 d!19557))

(declare-fun c!12504 () Bool)

(declare-fun d!19559 () Bool)

(assert (=> d!19559 (= c!12504 ((_ is ValueCellFull!912) (select (arr!1896 (ite c!11979 (_values!2255 newMap!16) lt!36130)) #b00000000000000000000000000000000)))))

(declare-fun e!52273 () V!2995)

(assert (=> d!19559 (= (get!1173 (select (arr!1896 (ite c!11979 (_values!2255 newMap!16) lt!36130)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52273)))

(declare-fun b!80066 () Bool)

(assert (=> b!80066 (= e!52273 (get!1174 (select (arr!1896 (ite c!11979 (_values!2255 newMap!16) lt!36130)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80067 () Bool)

(assert (=> b!80067 (= e!52273 (get!1175 (select (arr!1896 (ite c!11979 (_values!2255 newMap!16) lt!36130)) #b00000000000000000000000000000000) (dynLambda!336 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19559 c!12504) b!80066))

(assert (= (and d!19559 (not c!12504)) b!80067))

(assert (=> b!80066 m!78531))

(assert (=> b!80066 m!78533))

(declare-fun m!81571 () Bool)

(assert (=> b!80066 m!81571))

(assert (=> b!80067 m!78531))

(assert (=> b!80067 m!78533))

(declare-fun m!81573 () Bool)

(assert (=> b!80067 m!81573))

(assert (=> b!78286 d!19559))

(declare-fun d!19561 () Bool)

(assert (=> d!19561 (= (isEmpty!326 lt!36316) (isEmpty!327 (toList!739 lt!36316)))))

(declare-fun bs!3397 () Bool)

(assert (= bs!3397 d!19561))

(declare-fun m!81575 () Bool)

(assert (=> bs!3397 m!81575))

(assert (=> b!78504 d!19561))

(assert (=> d!18717 d!18465))

(declare-fun b!80071 () Bool)

(declare-fun e!52275 () Option!143)

(assert (=> b!80071 (= e!52275 None!141)))

(declare-fun d!19563 () Bool)

(declare-fun c!12505 () Bool)

(assert (=> d!19563 (= c!12505 (and ((_ is Cons!1503) (toList!739 lt!36254)) (= (_1!1097 (h!2091 (toList!739 lt!36254))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!52274 () Option!143)

(assert (=> d!19563 (= (getValueByKey!137 (toList!739 lt!36254) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!52274)))

(declare-fun b!80070 () Bool)

(assert (=> b!80070 (= e!52275 (getValueByKey!137 (t!5153 (toList!739 lt!36254)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!80068 () Bool)

(assert (=> b!80068 (= e!52274 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36254)))))))

(declare-fun b!80069 () Bool)

(assert (=> b!80069 (= e!52274 e!52275)))

(declare-fun c!12506 () Bool)

(assert (=> b!80069 (= c!12506 (and ((_ is Cons!1503) (toList!739 lt!36254)) (not (= (_1!1097 (h!2091 (toList!739 lt!36254))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!19563 c!12505) b!80068))

(assert (= (and d!19563 (not c!12505)) b!80069))

(assert (= (and b!80069 c!12506) b!80070))

(assert (= (and b!80069 (not c!12506)) b!80071))

(declare-fun m!81577 () Bool)

(assert (=> b!80070 m!81577))

(assert (=> b!78400 d!19563))

(declare-fun d!19565 () Bool)

(declare-fun res!41757 () Bool)

(declare-fun e!52276 () Bool)

(assert (=> d!19565 (=> res!41757 e!52276)))

(assert (=> d!19565 (= res!41757 (and ((_ is Cons!1503) lt!36003) (= (_1!1097 (h!2091 lt!36003)) (_1!1097 lt!35864))))))

(assert (=> d!19565 (= (containsKey!141 lt!36003 (_1!1097 lt!35864)) e!52276)))

(declare-fun b!80072 () Bool)

(declare-fun e!52277 () Bool)

(assert (=> b!80072 (= e!52276 e!52277)))

(declare-fun res!41758 () Bool)

(assert (=> b!80072 (=> (not res!41758) (not e!52277))))

(assert (=> b!80072 (= res!41758 (and (or (not ((_ is Cons!1503) lt!36003)) (bvsle (_1!1097 (h!2091 lt!36003)) (_1!1097 lt!35864))) ((_ is Cons!1503) lt!36003) (bvslt (_1!1097 (h!2091 lt!36003)) (_1!1097 lt!35864))))))

(declare-fun b!80073 () Bool)

(assert (=> b!80073 (= e!52277 (containsKey!141 (t!5153 lt!36003) (_1!1097 lt!35864)))))

(assert (= (and d!19565 (not res!41757)) b!80072))

(assert (= (and b!80072 res!41758) b!80073))

(declare-fun m!81579 () Bool)

(assert (=> b!80073 m!81579))

(assert (=> b!78745 d!19565))

(declare-fun d!19567 () Bool)

(declare-fun lt!37139 () Bool)

(assert (=> d!19567 (= lt!37139 (select (content!83 (toList!739 lt!36277)) (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!52279 () Bool)

(assert (=> d!19567 (= lt!37139 e!52279)))

(declare-fun res!41759 () Bool)

(assert (=> d!19567 (=> (not res!41759) (not e!52279))))

(assert (=> d!19567 (= res!41759 ((_ is Cons!1503) (toList!739 lt!36277)))))

(assert (=> d!19567 (= (contains!743 (toList!739 lt!36277) (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!37139)))

(declare-fun b!80074 () Bool)

(declare-fun e!52278 () Bool)

(assert (=> b!80074 (= e!52279 e!52278)))

(declare-fun res!41760 () Bool)

(assert (=> b!80074 (=> res!41760 e!52278)))

(assert (=> b!80074 (= res!41760 (= (h!2091 (toList!739 lt!36277)) (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!80075 () Bool)

(assert (=> b!80075 (= e!52278 (contains!743 (t!5153 (toList!739 lt!36277)) (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!19567 res!41759) b!80074))

(assert (= (and b!80074 (not res!41760)) b!80075))

(declare-fun m!81581 () Bool)

(assert (=> d!19567 m!81581))

(declare-fun m!81583 () Bool)

(assert (=> d!19567 m!81583))

(declare-fun m!81585 () Bool)

(assert (=> b!80075 m!81585))

(assert (=> b!78434 d!19567))

(declare-fun d!19569 () Bool)

(declare-fun e!52280 () Bool)

(assert (=> d!19569 e!52280))

(declare-fun res!41761 () Bool)

(assert (=> d!19569 (=> res!41761 e!52280)))

(declare-fun lt!37143 () Bool)

(assert (=> d!19569 (= res!41761 (not lt!37143))))

(declare-fun lt!37140 () Bool)

(assert (=> d!19569 (= lt!37143 lt!37140)))

(declare-fun lt!37141 () Unit!2257)

(declare-fun e!52281 () Unit!2257)

(assert (=> d!19569 (= lt!37141 e!52281)))

(declare-fun c!12507 () Bool)

(assert (=> d!19569 (= c!12507 lt!37140)))

(assert (=> d!19569 (= lt!37140 (containsKey!141 (toList!739 lt!36337) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19569 (= (contains!742 lt!36337 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) lt!37143)))

(declare-fun b!80076 () Bool)

(declare-fun lt!37142 () Unit!2257)

(assert (=> b!80076 (= e!52281 lt!37142)))

(assert (=> b!80076 (= lt!37142 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36337) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80076 (isDefined!90 (getValueByKey!137 (toList!739 lt!36337) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80077 () Bool)

(declare-fun Unit!2333 () Unit!2257)

(assert (=> b!80077 (= e!52281 Unit!2333)))

(declare-fun b!80078 () Bool)

(assert (=> b!80078 (= e!52280 (isDefined!90 (getValueByKey!137 (toList!739 lt!36337) (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19569 c!12507) b!80076))

(assert (= (and d!19569 (not c!12507)) b!80077))

(assert (= (and d!19569 (not res!41761)) b!80078))

(assert (=> d!19569 m!78509))

(declare-fun m!81587 () Bool)

(assert (=> d!19569 m!81587))

(assert (=> b!80076 m!78509))

(declare-fun m!81589 () Bool)

(assert (=> b!80076 m!81589))

(assert (=> b!80076 m!78509))

(assert (=> b!80076 m!80289))

(assert (=> b!80076 m!80289))

(declare-fun m!81591 () Bool)

(assert (=> b!80076 m!81591))

(assert (=> b!80078 m!78509))

(assert (=> b!80078 m!80289))

(assert (=> b!80078 m!80289))

(assert (=> b!80078 m!81591))

(assert (=> b!78524 d!19569))

(declare-fun d!19571 () Bool)

(declare-fun e!52282 () Bool)

(assert (=> d!19571 e!52282))

(declare-fun res!41762 () Bool)

(assert (=> d!19571 (=> res!41762 e!52282)))

(declare-fun lt!37147 () Bool)

(assert (=> d!19571 (= res!41762 (not lt!37147))))

(declare-fun lt!37144 () Bool)

(assert (=> d!19571 (= lt!37147 lt!37144)))

(declare-fun lt!37145 () Unit!2257)

(declare-fun e!52283 () Unit!2257)

(assert (=> d!19571 (= lt!37145 e!52283)))

(declare-fun c!12508 () Bool)

(assert (=> d!19571 (= c!12508 lt!37144)))

(assert (=> d!19571 (= lt!37144 (containsKey!141 (toList!739 lt!36192) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> d!19571 (= (contains!742 lt!36192 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!37147)))

(declare-fun b!80079 () Bool)

(declare-fun lt!37146 () Unit!2257)

(assert (=> b!80079 (= e!52283 lt!37146)))

(assert (=> b!80079 (= lt!37146 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36192) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(assert (=> b!80079 (isDefined!90 (getValueByKey!137 (toList!739 lt!36192) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!80080 () Bool)

(declare-fun Unit!2334 () Unit!2257)

(assert (=> b!80080 (= e!52283 Unit!2334)))

(declare-fun b!80081 () Bool)

(assert (=> b!80081 (= e!52282 (isDefined!90 (getValueByKey!137 (toList!739 lt!36192) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (= (and d!19571 c!12508) b!80079))

(assert (= (and d!19571 (not c!12508)) b!80080))

(assert (= (and d!19571 (not res!41762)) b!80081))

(declare-fun m!81593 () Bool)

(assert (=> d!19571 m!81593))

(declare-fun m!81595 () Bool)

(assert (=> b!80079 m!81595))

(assert (=> b!80079 m!78465))

(assert (=> b!80079 m!78465))

(declare-fun m!81597 () Bool)

(assert (=> b!80079 m!81597))

(assert (=> b!80081 m!78465))

(assert (=> b!80081 m!78465))

(assert (=> b!80081 m!81597))

(assert (=> d!18499 d!19571))

(declare-fun b!80085 () Bool)

(declare-fun e!52285 () Option!143)

(assert (=> b!80085 (= e!52285 None!141)))

(declare-fun d!19573 () Bool)

(declare-fun c!12509 () Bool)

(assert (=> d!19573 (= c!12509 (and ((_ is Cons!1503) lt!36191) (= (_1!1097 (h!2091 lt!36191)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52284 () Option!143)

(assert (=> d!19573 (= (getValueByKey!137 lt!36191 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) e!52284)))

(declare-fun b!80084 () Bool)

(assert (=> b!80084 (= e!52285 (getValueByKey!137 (t!5153 lt!36191) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!80082 () Bool)

(assert (=> b!80082 (= e!52284 (Some!142 (_2!1097 (h!2091 lt!36191))))))

(declare-fun b!80083 () Bool)

(assert (=> b!80083 (= e!52284 e!52285)))

(declare-fun c!12510 () Bool)

(assert (=> b!80083 (= c!12510 (and ((_ is Cons!1503) lt!36191) (not (= (_1!1097 (h!2091 lt!36191)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19573 c!12509) b!80082))

(assert (= (and d!19573 (not c!12509)) b!80083))

(assert (= (and b!80083 c!12510) b!80084))

(assert (= (and b!80083 (not c!12510)) b!80085))

(declare-fun m!81599 () Bool)

(assert (=> b!80084 m!81599))

(assert (=> d!18499 d!19573))

(declare-fun d!19575 () Bool)

(assert (=> d!19575 (= (getValueByKey!137 lt!36191 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) (Some!142 (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun lt!37148 () Unit!2257)

(assert (=> d!19575 (= lt!37148 (choose!456 lt!36191 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun e!52286 () Bool)

(assert (=> d!19575 e!52286))

(declare-fun res!41763 () Bool)

(assert (=> d!19575 (=> (not res!41763) (not e!52286))))

(assert (=> d!19575 (= res!41763 (isStrictlySorted!295 lt!36191))))

(assert (=> d!19575 (= (lemmaContainsTupThenGetReturnValue!54 lt!36191 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!37148)))

(declare-fun b!80086 () Bool)

(declare-fun res!41764 () Bool)

(assert (=> b!80086 (=> (not res!41764) (not e!52286))))

(assert (=> b!80086 (= res!41764 (containsKey!141 lt!36191 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!80087 () Bool)

(assert (=> b!80087 (= e!52286 (contains!743 lt!36191 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (= (and d!19575 res!41763) b!80086))

(assert (= (and b!80086 res!41764) b!80087))

(assert (=> d!19575 m!78459))

(declare-fun m!81601 () Bool)

(assert (=> d!19575 m!81601))

(declare-fun m!81603 () Bool)

(assert (=> d!19575 m!81603))

(declare-fun m!81605 () Bool)

(assert (=> b!80086 m!81605))

(declare-fun m!81607 () Bool)

(assert (=> b!80087 m!81607))

(assert (=> d!18499 d!19575))

(declare-fun c!12514 () Bool)

(declare-fun b!80088 () Bool)

(declare-fun c!12513 () Bool)

(declare-fun e!52287 () List!1507)

(assert (=> b!80088 (= e!52287 (ite c!12514 (t!5153 (toList!739 lt!35868)) (ite c!12513 (Cons!1503 (h!2091 (toList!739 lt!35868)) (t!5153 (toList!739 lt!35868))) Nil!1504)))))

(declare-fun b!80089 () Bool)

(declare-fun e!52291 () List!1507)

(declare-fun call!7406 () List!1507)

(assert (=> b!80089 (= e!52291 call!7406)))

(declare-fun bm!7401 () Bool)

(declare-fun call!7404 () List!1507)

(declare-fun call!7405 () List!1507)

(assert (=> bm!7401 (= call!7404 call!7405)))

(declare-fun b!80090 () Bool)

(assert (=> b!80090 (= c!12513 (and ((_ is Cons!1503) (toList!739 lt!35868)) (bvsgt (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52289 () List!1507)

(declare-fun e!52288 () List!1507)

(assert (=> b!80090 (= e!52289 e!52288)))

(declare-fun b!80091 () Bool)

(assert (=> b!80091 (= e!52287 (insertStrictlySorted!57 (t!5153 (toList!739 lt!35868)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!80092 () Bool)

(declare-fun res!41766 () Bool)

(declare-fun e!52290 () Bool)

(assert (=> b!80092 (=> (not res!41766) (not e!52290))))

(declare-fun lt!37149 () List!1507)

(assert (=> b!80092 (= res!41766 (containsKey!141 lt!37149 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun c!12511 () Bool)

(declare-fun bm!7402 () Bool)

(assert (=> bm!7402 (= call!7406 ($colon$colon!69 e!52287 (ite c!12511 (h!2091 (toList!739 lt!35868)) (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(declare-fun c!12512 () Bool)

(assert (=> bm!7402 (= c!12512 c!12511)))

(declare-fun b!80093 () Bool)

(assert (=> b!80093 (= e!52291 e!52289)))

(assert (=> b!80093 (= c!12514 (and ((_ is Cons!1503) (toList!739 lt!35868)) (= (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!80095 () Bool)

(assert (=> b!80095 (= e!52289 call!7405)))

(declare-fun b!80096 () Bool)

(assert (=> b!80096 (= e!52290 (contains!743 lt!37149 (tuple2!2173 (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun b!80094 () Bool)

(assert (=> b!80094 (= e!52288 call!7404)))

(declare-fun d!19577 () Bool)

(assert (=> d!19577 e!52290))

(declare-fun res!41765 () Bool)

(assert (=> d!19577 (=> (not res!41765) (not e!52290))))

(assert (=> d!19577 (= res!41765 (isStrictlySorted!295 lt!37149))))

(assert (=> d!19577 (= lt!37149 e!52291)))

(assert (=> d!19577 (= c!12511 (and ((_ is Cons!1503) (toList!739 lt!35868)) (bvslt (_1!1097 (h!2091 (toList!739 lt!35868))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(assert (=> d!19577 (isStrictlySorted!295 (toList!739 lt!35868))))

(assert (=> d!19577 (= (insertStrictlySorted!57 (toList!739 lt!35868) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)) (_2!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) lt!37149)))

(declare-fun bm!7403 () Bool)

(assert (=> bm!7403 (= call!7405 call!7406)))

(declare-fun b!80097 () Bool)

(assert (=> b!80097 (= e!52288 call!7404)))

(assert (= (and d!19577 c!12511) b!80089))

(assert (= (and d!19577 (not c!12511)) b!80093))

(assert (= (and b!80093 c!12514) b!80095))

(assert (= (and b!80093 (not c!12514)) b!80090))

(assert (= (and b!80090 c!12513) b!80094))

(assert (= (and b!80090 (not c!12513)) b!80097))

(assert (= (or b!80094 b!80097) bm!7401))

(assert (= (or b!80095 bm!7401) bm!7403))

(assert (= (or b!80089 bm!7403) bm!7402))

(assert (= (and bm!7402 c!12512) b!80091))

(assert (= (and bm!7402 (not c!12512)) b!80088))

(assert (= (and d!19577 res!41765) b!80092))

(assert (= (and b!80092 res!41766) b!80096))

(declare-fun m!81609 () Bool)

(assert (=> b!80096 m!81609))

(declare-fun m!81611 () Bool)

(assert (=> d!19577 m!81611))

(assert (=> d!19577 m!78611))

(declare-fun m!81613 () Bool)

(assert (=> b!80091 m!81613))

(declare-fun m!81615 () Bool)

(assert (=> b!80092 m!81615))

(declare-fun m!81617 () Bool)

(assert (=> bm!7402 m!81617))

(assert (=> d!18499 d!19577))

(assert (=> b!78659 d!19365))

(assert (=> b!78659 d!18713))

(declare-fun b!80098 () Bool)

(declare-fun e!52295 () Bool)

(declare-fun call!7407 () Bool)

(assert (=> b!80098 (= e!52295 call!7407)))

(declare-fun d!19579 () Bool)

(declare-fun res!41768 () Bool)

(declare-fun e!52292 () Bool)

(assert (=> d!19579 (=> res!41768 e!52292)))

(assert (=> d!19579 (= res!41768 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2136 (_keys!3932 newMap!16))))))

(assert (=> d!19579 (= (arrayNoDuplicates!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12131 (Cons!1504 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505)) e!52292)))

(declare-fun b!80099 () Bool)

(assert (=> b!80099 (= e!52295 call!7407)))

(declare-fun b!80100 () Bool)

(declare-fun e!52294 () Bool)

(assert (=> b!80100 (= e!52294 e!52295)))

(declare-fun c!12515 () Bool)

(assert (=> b!80100 (= c!12515 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!80101 () Bool)

(declare-fun e!52293 () Bool)

(assert (=> b!80101 (= e!52293 (contains!744 (ite c!12131 (Cons!1504 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505) (select (arr!1895 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!80102 () Bool)

(assert (=> b!80102 (= e!52292 e!52294)))

(declare-fun res!41769 () Bool)

(assert (=> b!80102 (=> (not res!41769) (not e!52294))))

(assert (=> b!80102 (= res!41769 (not e!52293))))

(declare-fun res!41767 () Bool)

(assert (=> b!80102 (=> (not res!41767) (not e!52293))))

(assert (=> b!80102 (= res!41767 (validKeyInArray!0 (select (arr!1895 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!7404 () Bool)

(assert (=> bm!7404 (= call!7407 (arrayNoDuplicates!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12515 (Cons!1504 (select (arr!1895 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!12131 (Cons!1504 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505)) (ite c!12131 (Cons!1504 (select (arr!1895 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505))))))

(assert (= (and d!19579 (not res!41768)) b!80102))

(assert (= (and b!80102 res!41767) b!80101))

(assert (= (and b!80102 res!41769) b!80100))

(assert (= (and b!80100 c!12515) b!80098))

(assert (= (and b!80100 (not c!12515)) b!80099))

(assert (= (or b!80098 b!80099) bm!7404))

(assert (=> b!80100 m!80877))

(assert (=> b!80100 m!80877))

(assert (=> b!80100 m!81403))

(assert (=> b!80101 m!80877))

(assert (=> b!80101 m!80877))

(declare-fun m!81619 () Bool)

(assert (=> b!80101 m!81619))

(assert (=> b!80102 m!80877))

(assert (=> b!80102 m!80877))

(assert (=> b!80102 m!81403))

(assert (=> bm!7404 m!80877))

(declare-fun m!81621 () Bool)

(assert (=> bm!7404 m!81621))

(assert (=> bm!7256 d!19579))

(declare-fun d!19581 () Bool)

(declare-fun e!52296 () Bool)

(assert (=> d!19581 e!52296))

(declare-fun res!41770 () Bool)

(assert (=> d!19581 (=> res!41770 e!52296)))

(declare-fun lt!37153 () Bool)

(assert (=> d!19581 (= res!41770 (not lt!37153))))

(declare-fun lt!37150 () Bool)

(assert (=> d!19581 (= lt!37153 lt!37150)))

(declare-fun lt!37151 () Unit!2257)

(declare-fun e!52297 () Unit!2257)

(assert (=> d!19581 (= lt!37151 e!52297)))

(declare-fun c!12516 () Bool)

(assert (=> d!19581 (= c!12516 lt!37150)))

(assert (=> d!19581 (= lt!37150 (containsKey!141 (toList!739 lt!36389) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19581 (= (contains!742 lt!36389 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37153)))

(declare-fun b!80103 () Bool)

(declare-fun lt!37152 () Unit!2257)

(assert (=> b!80103 (= e!52297 lt!37152)))

(assert (=> b!80103 (= lt!37152 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36389) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80103 (isDefined!90 (getValueByKey!137 (toList!739 lt!36389) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80104 () Bool)

(declare-fun Unit!2335 () Unit!2257)

(assert (=> b!80104 (= e!52297 Unit!2335)))

(declare-fun b!80105 () Bool)

(assert (=> b!80105 (= e!52296 (isDefined!90 (getValueByKey!137 (toList!739 lt!36389) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19581 c!12516) b!80103))

(assert (= (and d!19581 (not c!12516)) b!80104))

(assert (= (and d!19581 (not res!41770)) b!80105))

(declare-fun m!81623 () Bool)

(assert (=> d!19581 m!81623))

(declare-fun m!81625 () Bool)

(assert (=> b!80103 m!81625))

(assert (=> b!80103 m!81323))

(assert (=> b!80103 m!81323))

(declare-fun m!81627 () Bool)

(assert (=> b!80103 m!81627))

(assert (=> b!80105 m!81323))

(assert (=> b!80105 m!81323))

(assert (=> b!80105 m!81627))

(assert (=> bm!7227 d!19581))

(declare-fun d!19583 () Bool)

(declare-fun c!12517 () Bool)

(assert (=> d!19583 (= c!12517 ((_ is Nil!1504) (toList!739 lt!36029)))))

(declare-fun e!52298 () (InoxSet tuple2!2172))

(assert (=> d!19583 (= (content!83 (toList!739 lt!36029)) e!52298)))

(declare-fun b!80106 () Bool)

(assert (=> b!80106 (= e!52298 ((as const (Array tuple2!2172 Bool)) false))))

(declare-fun b!80107 () Bool)

(assert (=> b!80107 (= e!52298 ((_ map or) (store ((as const (Array tuple2!2172 Bool)) false) (h!2091 (toList!739 lt!36029)) true) (content!83 (t!5153 (toList!739 lt!36029)))))))

(assert (= (and d!19583 c!12517) b!80106))

(assert (= (and d!19583 (not c!12517)) b!80107))

(declare-fun m!81629 () Bool)

(assert (=> b!80107 m!81629))

(assert (=> b!80107 m!81407))

(assert (=> d!18715 d!19583))

(assert (=> d!18675 d!18673))

(declare-fun d!19585 () Bool)

(assert (=> d!19585 (= (getValueByKey!137 lt!36044 (_1!1097 lt!35864)) (Some!142 (_2!1097 lt!35864)))))

(assert (=> d!19585 true))

(declare-fun _$22!397 () Unit!2257)

(assert (=> d!19585 (= (choose!456 lt!36044 (_1!1097 lt!35864) (_2!1097 lt!35864)) _$22!397)))

(declare-fun bs!3398 () Bool)

(assert (= bs!3398 d!19585))

(assert (=> bs!3398 m!78247))

(assert (=> d!18675 d!19585))

(declare-fun d!19587 () Bool)

(declare-fun res!41771 () Bool)

(declare-fun e!52299 () Bool)

(assert (=> d!19587 (=> res!41771 e!52299)))

(assert (=> d!19587 (= res!41771 (or ((_ is Nil!1504) lt!36044) ((_ is Nil!1504) (t!5153 lt!36044))))))

(assert (=> d!19587 (= (isStrictlySorted!295 lt!36044) e!52299)))

(declare-fun b!80108 () Bool)

(declare-fun e!52300 () Bool)

(assert (=> b!80108 (= e!52299 e!52300)))

(declare-fun res!41772 () Bool)

(assert (=> b!80108 (=> (not res!41772) (not e!52300))))

(assert (=> b!80108 (= res!41772 (bvslt (_1!1097 (h!2091 lt!36044)) (_1!1097 (h!2091 (t!5153 lt!36044)))))))

(declare-fun b!80109 () Bool)

(assert (=> b!80109 (= e!52300 (isStrictlySorted!295 (t!5153 lt!36044)))))

(assert (= (and d!19587 (not res!41771)) b!80108))

(assert (= (and b!80108 res!41772) b!80109))

(declare-fun m!81631 () Bool)

(assert (=> b!80109 m!81631))

(assert (=> d!18675 d!19587))

(declare-fun d!19589 () Bool)

(assert (=> d!19589 (= (isEmpty!327 (toList!739 lt!36021)) ((_ is Nil!1504) (toList!739 lt!36021)))))

(assert (=> d!18509 d!19589))

(declare-fun d!19591 () Bool)

(declare-fun lt!37154 () Bool)

(assert (=> d!19591 (= lt!37154 (select (content!83 lt!36425) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun e!52302 () Bool)

(assert (=> d!19591 (= lt!37154 e!52302)))

(declare-fun res!41773 () Bool)

(assert (=> d!19591 (=> (not res!41773) (not e!52302))))

(assert (=> d!19591 (= res!41773 ((_ is Cons!1503) lt!36425))))

(assert (=> d!19591 (= (contains!743 lt!36425 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))) lt!37154)))

(declare-fun b!80110 () Bool)

(declare-fun e!52301 () Bool)

(assert (=> b!80110 (= e!52302 e!52301)))

(declare-fun res!41774 () Bool)

(assert (=> b!80110 (=> res!41774 e!52301)))

(assert (=> b!80110 (= res!41774 (= (h!2091 lt!36425) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!80111 () Bool)

(assert (=> b!80111 (= e!52301 (contains!743 (t!5153 lt!36425) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(assert (= (and d!19591 res!41773) b!80110))

(assert (= (and b!80110 (not res!41774)) b!80111))

(declare-fun m!81633 () Bool)

(assert (=> d!19591 m!81633))

(declare-fun m!81635 () Bool)

(assert (=> d!19591 m!81635))

(declare-fun m!81637 () Bool)

(assert (=> b!80111 m!81637))

(assert (=> b!78655 d!19591))

(assert (=> b!78735 d!18949))

(declare-fun d!19593 () Bool)

(declare-fun c!12518 () Bool)

(assert (=> d!19593 (= c!12518 ((_ is Nil!1504) (toList!739 lt!36041)))))

(declare-fun e!52303 () (InoxSet tuple2!2172))

(assert (=> d!19593 (= (content!83 (toList!739 lt!36041)) e!52303)))

(declare-fun b!80112 () Bool)

(assert (=> b!80112 (= e!52303 ((as const (Array tuple2!2172 Bool)) false))))

(declare-fun b!80113 () Bool)

(assert (=> b!80113 (= e!52303 ((_ map or) (store ((as const (Array tuple2!2172 Bool)) false) (h!2091 (toList!739 lt!36041)) true) (content!83 (t!5153 (toList!739 lt!36041)))))))

(assert (= (and d!19593 c!12518) b!80112))

(assert (= (and d!19593 (not c!12518)) b!80113))

(declare-fun m!81639 () Bool)

(assert (=> b!80113 m!81639))

(declare-fun m!81641 () Bool)

(assert (=> b!80113 m!81641))

(assert (=> d!18511 d!19593))

(declare-fun d!19595 () Bool)

(declare-fun res!41775 () Bool)

(declare-fun e!52304 () Bool)

(assert (=> d!19595 (=> res!41775 e!52304)))

(assert (=> d!19595 (= res!41775 (and ((_ is Cons!1503) lt!36048) (= (_1!1097 (h!2091 lt!36048)) (_1!1097 lt!35870))))))

(assert (=> d!19595 (= (containsKey!141 lt!36048 (_1!1097 lt!35870)) e!52304)))

(declare-fun b!80114 () Bool)

(declare-fun e!52305 () Bool)

(assert (=> b!80114 (= e!52304 e!52305)))

(declare-fun res!41776 () Bool)

(assert (=> b!80114 (=> (not res!41776) (not e!52305))))

(assert (=> b!80114 (= res!41776 (and (or (not ((_ is Cons!1503) lt!36048)) (bvsle (_1!1097 (h!2091 lt!36048)) (_1!1097 lt!35870))) ((_ is Cons!1503) lt!36048) (bvslt (_1!1097 (h!2091 lt!36048)) (_1!1097 lt!35870))))))

(declare-fun b!80115 () Bool)

(assert (=> b!80115 (= e!52305 (containsKey!141 (t!5153 lt!36048) (_1!1097 lt!35870)))))

(assert (= (and d!19595 (not res!41775)) b!80114))

(assert (= (and b!80114 res!41776) b!80115))

(declare-fun m!81643 () Bool)

(assert (=> b!80115 m!81643))

(assert (=> b!78664 d!19595))

(assert (=> b!78548 d!19361))

(assert (=> b!78548 d!19005))

(declare-fun d!19597 () Bool)

(assert (=> d!19597 (isDefined!90 (getValueByKey!137 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))

(declare-fun lt!37155 () Unit!2257)

(assert (=> d!19597 (= lt!37155 (choose!465 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))

(declare-fun e!52306 () Bool)

(assert (=> d!19597 e!52306))

(declare-fun res!41777 () Bool)

(assert (=> d!19597 (=> (not res!41777) (not e!52306))))

(assert (=> d!19597 (= res!41777 (isStrictlySorted!295 (toList!739 e!51131)))))

(assert (=> d!19597 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))) lt!37155)))

(declare-fun b!80116 () Bool)

(assert (=> b!80116 (= e!52306 (containsKey!141 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))

(assert (= (and d!19597 res!41777) b!80116))

(assert (=> d!19597 m!78587))

(assert (=> d!19597 m!78587))

(assert (=> d!19597 m!78589))

(declare-fun m!81645 () Bool)

(assert (=> d!19597 m!81645))

(declare-fun m!81647 () Bool)

(assert (=> d!19597 m!81647))

(assert (=> b!80116 m!78583))

(assert (=> b!78341 d!19597))

(assert (=> b!78341 d!18921))

(assert (=> b!78341 d!18923))

(declare-fun b!80120 () Bool)

(declare-fun e!52308 () Option!143)

(assert (=> b!80120 (= e!52308 None!141)))

(declare-fun d!19599 () Bool)

(declare-fun c!12519 () Bool)

(assert (=> d!19599 (= c!12519 (and ((_ is Cons!1503) (toList!739 lt!36184)) (= (_1!1097 (h!2091 (toList!739 lt!36184))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))

(declare-fun e!52307 () Option!143)

(assert (=> d!19599 (= (getValueByKey!137 (toList!739 lt!36184) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) e!52307)))

(declare-fun b!80119 () Bool)

(assert (=> b!80119 (= e!52308 (getValueByKey!137 (t!5153 (toList!739 lt!36184)) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))

(declare-fun b!80117 () Bool)

(assert (=> b!80117 (= e!52307 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36184)))))))

(declare-fun b!80118 () Bool)

(assert (=> b!80118 (= e!52307 e!52308)))

(declare-fun c!12520 () Bool)

(assert (=> b!80118 (= c!12520 (and ((_ is Cons!1503) (toList!739 lt!36184)) (not (= (_1!1097 (h!2091 (toList!739 lt!36184))) (_1!1097 (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))))))

(assert (= (and d!19599 c!12519) b!80117))

(assert (= (and d!19599 (not c!12519)) b!80118))

(assert (= (and b!80118 c!12520) b!80119))

(assert (= (and b!80118 (not c!12520)) b!80120))

(declare-fun m!81649 () Bool)

(assert (=> b!80119 m!81649))

(assert (=> b!78261 d!19599))

(declare-fun d!19601 () Bool)

(assert (=> d!19601 (= ($colon$colon!69 e!51239 (ite c!12018 (h!2091 (toList!739 lt!35868)) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861)))) (Cons!1503 (ite c!12018 (h!2091 (toList!739 lt!35868)) (tuple2!2173 (_1!1097 lt!35861) (_2!1097 lt!35861))) e!51239))))

(assert (=> bm!7196 d!19601))

(declare-fun d!19603 () Bool)

(assert (=> d!19603 (= (isEmpty!328 (getValueByKey!137 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355))) (not ((_ is Some!142) (getValueByKey!137 (toList!739 lt!35860) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))))

(assert (=> d!18667 d!19603))

(declare-fun d!19605 () Bool)

(declare-fun e!52309 () Bool)

(assert (=> d!19605 e!52309))

(declare-fun res!41778 () Bool)

(assert (=> d!19605 (=> (not res!41778) (not e!52309))))

(declare-fun lt!37157 () ListLongMap!1447)

(assert (=> d!19605 (= res!41778 (contains!742 lt!37157 (_1!1097 (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))))

(declare-fun lt!37156 () List!1507)

(assert (=> d!19605 (= lt!37157 (ListLongMap!1448 lt!37156))))

(declare-fun lt!37159 () Unit!2257)

(declare-fun lt!37158 () Unit!2257)

(assert (=> d!19605 (= lt!37159 lt!37158)))

(assert (=> d!19605 (= (getValueByKey!137 lt!37156 (_1!1097 (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))) (Some!142 (_2!1097 (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))))

(assert (=> d!19605 (= lt!37158 (lemmaContainsTupThenGetReturnValue!54 lt!37156 (_1!1097 (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) (_2!1097 (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))))

(assert (=> d!19605 (= lt!37156 (insertStrictlySorted!57 (toList!739 (ite c!12054 call!7218 (ite c!12058 call!7214 call!7219))) (_1!1097 (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) (_2!1097 (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))))))

(assert (=> d!19605 (= (+!105 (ite c!12054 call!7218 (ite c!12058 call!7214 call!7219)) (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))) lt!37157)))

(declare-fun b!80121 () Bool)

(declare-fun res!41779 () Bool)

(assert (=> b!80121 (=> (not res!41779) (not e!52309))))

(assert (=> b!80121 (= res!41779 (= (getValueByKey!137 (toList!739 lt!37157) (_1!1097 (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16)))))) (Some!142 (_2!1097 (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))))

(declare-fun b!80122 () Bool)

(assert (=> b!80122 (= e!52309 (contains!743 (toList!739 lt!37157) (ite (or c!12054 c!12058) (tuple2!2173 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11977 (minValue!2170 newMap!16) lt!35856) (minValue!2170 newMap!16))))))))

(assert (= (and d!19605 res!41778) b!80121))

(assert (= (and b!80121 res!41779) b!80122))

(declare-fun m!81651 () Bool)

(assert (=> d!19605 m!81651))

(declare-fun m!81653 () Bool)

(assert (=> d!19605 m!81653))

(declare-fun m!81655 () Bool)

(assert (=> d!19605 m!81655))

(declare-fun m!81657 () Bool)

(assert (=> d!19605 m!81657))

(declare-fun m!81659 () Bool)

(assert (=> b!80121 m!81659))

(declare-fun m!81661 () Bool)

(assert (=> b!80122 m!81661))

(assert (=> bm!7211 d!19605))

(declare-fun b!80126 () Bool)

(declare-fun e!52311 () Option!143)

(assert (=> b!80126 (= e!52311 None!141)))

(declare-fun c!12521 () Bool)

(declare-fun d!19607 () Bool)

(assert (=> d!19607 (= c!12521 (and ((_ is Cons!1503) (toList!739 lt!36192)) (= (_1!1097 (h!2091 (toList!739 lt!36192))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856)))))))

(declare-fun e!52310 () Option!143)

(assert (=> d!19607 (= (getValueByKey!137 (toList!739 lt!36192) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))) e!52310)))

(declare-fun b!80125 () Bool)

(assert (=> b!80125 (= e!52311 (getValueByKey!137 (t!5153 (toList!739 lt!36192)) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))

(declare-fun b!80123 () Bool)

(assert (=> b!80123 (= e!52310 (Some!142 (_2!1097 (h!2091 (toList!739 lt!36192)))))))

(declare-fun b!80124 () Bool)

(assert (=> b!80124 (= e!52310 e!52311)))

(declare-fun c!12522 () Bool)

(assert (=> b!80124 (= c!12522 (and ((_ is Cons!1503) (toList!739 lt!36192)) (not (= (_1!1097 (h!2091 (toList!739 lt!36192))) (_1!1097 (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) lt!35856))))))))

(assert (= (and d!19607 c!12521) b!80123))

(assert (= (and d!19607 (not c!12521)) b!80124))

(assert (= (and b!80124 c!12522) b!80125))

(assert (= (and b!80124 (not c!12522)) b!80126))

(declare-fun m!81663 () Bool)

(assert (=> b!80125 m!81663))

(assert (=> b!78265 d!19607))

(declare-fun d!19609 () Bool)

(declare-fun lt!37160 () Bool)

(assert (=> d!19609 (= lt!37160 (select (content!83 (t!5153 (toList!739 lt!36041))) lt!35861))))

(declare-fun e!52313 () Bool)

(assert (=> d!19609 (= lt!37160 e!52313)))

(declare-fun res!41780 () Bool)

(assert (=> d!19609 (=> (not res!41780) (not e!52313))))

(assert (=> d!19609 (= res!41780 ((_ is Cons!1503) (t!5153 (toList!739 lt!36041))))))

(assert (=> d!19609 (= (contains!743 (t!5153 (toList!739 lt!36041)) lt!35861) lt!37160)))

(declare-fun b!80127 () Bool)

(declare-fun e!52312 () Bool)

(assert (=> b!80127 (= e!52313 e!52312)))

(declare-fun res!41781 () Bool)

(assert (=> b!80127 (=> res!41781 e!52312)))

(assert (=> b!80127 (= res!41781 (= (h!2091 (t!5153 (toList!739 lt!36041))) lt!35861))))

(declare-fun b!80128 () Bool)

(assert (=> b!80128 (= e!52312 (contains!743 (t!5153 (t!5153 (toList!739 lt!36041))) lt!35861))))

(assert (= (and d!19609 res!41780) b!80127))

(assert (= (and b!80127 (not res!41781)) b!80128))

(assert (=> d!19609 m!81641))

(declare-fun m!81665 () Bool)

(assert (=> d!19609 m!81665))

(declare-fun m!81667 () Bool)

(assert (=> b!80128 m!81667))

(assert (=> b!78304 d!19609))

(declare-fun d!19611 () Bool)

(declare-fun lt!37161 () Bool)

(assert (=> d!19611 (= lt!37161 (select (content!83 (toList!739 lt!36285)) (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!52315 () Bool)

(assert (=> d!19611 (= lt!37161 e!52315)))

(declare-fun res!41782 () Bool)

(assert (=> d!19611 (=> (not res!41782) (not e!52315))))

(assert (=> d!19611 (= res!41782 ((_ is Cons!1503) (toList!739 lt!36285)))))

(assert (=> d!19611 (= (contains!743 (toList!739 lt!36285) (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!37161)))

(declare-fun b!80129 () Bool)

(declare-fun e!52314 () Bool)

(assert (=> b!80129 (= e!52315 e!52314)))

(declare-fun res!41783 () Bool)

(assert (=> b!80129 (=> res!41783 e!52314)))

(assert (=> b!80129 (= res!41783 (= (h!2091 (toList!739 lt!36285)) (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!80130 () Bool)

(assert (=> b!80130 (= e!52314 (contains!743 (t!5153 (toList!739 lt!36285)) (tuple2!2173 lt!35974 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!19611 res!41782) b!80129))

(assert (= (and b!80129 (not res!41783)) b!80130))

(declare-fun m!81669 () Bool)

(assert (=> d!19611 m!81669))

(declare-fun m!81671 () Bool)

(assert (=> d!19611 m!81671))

(declare-fun m!81673 () Bool)

(assert (=> b!80130 m!81673))

(assert (=> b!78438 d!19611))

(assert (=> b!78315 d!19527))

(assert (=> b!78498 d!18933))

(assert (=> d!18573 d!18589))

(assert (=> d!18573 d!18583))

(declare-fun d!19613 () Bool)

(assert (=> d!19613 (contains!742 (+!105 lt!35978 (tuple2!2173 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!35980)))

(assert (=> d!19613 true))

(declare-fun _$35!321 () Unit!2257)

(assert (=> d!19613 (= (choose!459 lt!35978 lt!35971 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))) lt!35980) _$35!321)))

(declare-fun bs!3399 () Bool)

(assert (= bs!3399 d!19613))

(assert (=> bs!3399 m!78115))

(assert (=> bs!3399 m!78115))

(assert (=> bs!3399 m!78117))

(assert (=> d!18573 d!19613))

(declare-fun d!19615 () Bool)

(declare-fun e!52316 () Bool)

(assert (=> d!19615 e!52316))

(declare-fun res!41784 () Bool)

(assert (=> d!19615 (=> res!41784 e!52316)))

(declare-fun lt!37165 () Bool)

(assert (=> d!19615 (= res!41784 (not lt!37165))))

(declare-fun lt!37162 () Bool)

(assert (=> d!19615 (= lt!37165 lt!37162)))

(declare-fun lt!37163 () Unit!2257)

(declare-fun e!52317 () Unit!2257)

(assert (=> d!19615 (= lt!37163 e!52317)))

(declare-fun c!12523 () Bool)

(assert (=> d!19615 (= c!12523 lt!37162)))

(assert (=> d!19615 (= lt!37162 (containsKey!141 (toList!739 lt!35978) lt!35980))))

(assert (=> d!19615 (= (contains!742 lt!35978 lt!35980) lt!37165)))

(declare-fun b!80132 () Bool)

(declare-fun lt!37164 () Unit!2257)

(assert (=> b!80132 (= e!52317 lt!37164)))

(assert (=> b!80132 (= lt!37164 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!35978) lt!35980))))

(assert (=> b!80132 (isDefined!90 (getValueByKey!137 (toList!739 lt!35978) lt!35980))))

(declare-fun b!80133 () Bool)

(declare-fun Unit!2336 () Unit!2257)

(assert (=> b!80133 (= e!52317 Unit!2336)))

(declare-fun b!80134 () Bool)

(assert (=> b!80134 (= e!52316 (isDefined!90 (getValueByKey!137 (toList!739 lt!35978) lt!35980)))))

(assert (= (and d!19615 c!12523) b!80132))

(assert (= (and d!19615 (not c!12523)) b!80133))

(assert (= (and d!19615 (not res!41784)) b!80134))

(declare-fun m!81675 () Bool)

(assert (=> d!19615 m!81675))

(declare-fun m!81677 () Bool)

(assert (=> b!80132 m!81677))

(declare-fun m!81679 () Bool)

(assert (=> b!80132 m!81679))

(assert (=> b!80132 m!81679))

(declare-fun m!81681 () Bool)

(assert (=> b!80132 m!81681))

(assert (=> b!80134 m!81679))

(assert (=> b!80134 m!81679))

(assert (=> b!80134 m!81681))

(assert (=> d!18573 d!19615))

(assert (=> bm!7248 d!18489))

(declare-fun d!19617 () Bool)

(assert (=> d!19617 (= ($colon$colon!69 e!51408 (ite c!12104 (h!2091 (toList!739 lt!35853)) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870)))) (Cons!1503 (ite c!12104 (h!2091 (toList!739 lt!35853)) (tuple2!2173 (_1!1097 lt!35870) (_2!1097 lt!35870))) e!51408))))

(assert (=> bm!7238 d!19617))

(declare-fun d!19619 () Bool)

(declare-fun e!52318 () Bool)

(assert (=> d!19619 e!52318))

(declare-fun res!41785 () Bool)

(assert (=> d!19619 (=> res!41785 e!52318)))

(declare-fun lt!37169 () Bool)

(assert (=> d!19619 (= res!41785 (not lt!37169))))

(declare-fun lt!37166 () Bool)

(assert (=> d!19619 (= lt!37169 lt!37166)))

(declare-fun lt!37167 () Unit!2257)

(declare-fun e!52319 () Unit!2257)

(assert (=> d!19619 (= lt!37167 e!52319)))

(declare-fun c!12524 () Bool)

(assert (=> d!19619 (= c!12524 lt!37166)))

(assert (=> d!19619 (= lt!37166 (containsKey!141 (toList!739 lt!36316) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19619 (= (contains!742 lt!36316 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37169)))

(declare-fun b!80135 () Bool)

(declare-fun lt!37168 () Unit!2257)

(assert (=> b!80135 (= e!52319 lt!37168)))

(assert (=> b!80135 (= lt!37168 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 lt!36316) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80135 (isDefined!90 (getValueByKey!137 (toList!739 lt!36316) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80136 () Bool)

(declare-fun Unit!2337 () Unit!2257)

(assert (=> b!80136 (= e!52319 Unit!2337)))

(declare-fun b!80137 () Bool)

(assert (=> b!80137 (= e!52318 (isDefined!90 (getValueByKey!137 (toList!739 lt!36316) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19619 c!12524) b!80135))

(assert (= (and d!19619 (not c!12524)) b!80136))

(assert (= (and d!19619 (not res!41785)) b!80137))

(declare-fun m!81683 () Bool)

(assert (=> d!19619 m!81683))

(declare-fun m!81685 () Bool)

(assert (=> b!80135 m!81685))

(declare-fun m!81687 () Bool)

(assert (=> b!80135 m!81687))

(assert (=> b!80135 m!81687))

(declare-fun m!81689 () Bool)

(assert (=> b!80135 m!81689))

(assert (=> b!80137 m!81687))

(assert (=> b!80137 m!81687))

(assert (=> b!80137 m!81689))

(assert (=> b!78505 d!19619))

(declare-fun d!19621 () Bool)

(assert (=> d!19621 (= (get!1176 (getValueByKey!137 (toList!739 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35988)) (v!2596 (getValueByKey!137 (toList!739 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35988)))))

(assert (=> d!18599 d!19621))

(declare-fun b!80141 () Bool)

(declare-fun e!52321 () Option!143)

(assert (=> b!80141 (= e!52321 None!141)))

(declare-fun d!19623 () Bool)

(declare-fun c!12525 () Bool)

(assert (=> d!19623 (= c!12525 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35988)))))

(declare-fun e!52320 () Option!143)

(assert (=> d!19623 (= (getValueByKey!137 (toList!739 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))) lt!35988) e!52320)))

(declare-fun b!80140 () Bool)

(assert (=> b!80140 (= e!52321 (getValueByKey!137 (t!5153 (toList!739 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) lt!35988))))

(declare-fun b!80138 () Bool)

(assert (=> b!80138 (= e!52320 (Some!142 (_2!1097 (h!2091 (toList!739 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))))))))

(declare-fun b!80139 () Bool)

(assert (=> b!80139 (= e!52320 e!52321)))

(declare-fun c!12526 () Bool)

(assert (=> b!80139 (= c!12526 (and ((_ is Cons!1503) (toList!739 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992))))))) (not (= (_1!1097 (h!2091 (toList!739 (+!105 lt!35987 (tuple2!2173 lt!35986 (zeroValue!2170 (v!2592 (underlying!278 thiss!992)))))))) lt!35988))))))

(assert (= (and d!19623 c!12525) b!80138))

(assert (= (and d!19623 (not c!12525)) b!80139))

(assert (= (and b!80139 c!12526) b!80140))

(assert (= (and b!80139 (not c!12526)) b!80141))

(declare-fun m!81691 () Bool)

(assert (=> b!80140 m!81691))

(assert (=> d!18599 d!19623))

(declare-fun d!19625 () Bool)

(declare-fun e!52322 () Bool)

(assert (=> d!19625 e!52322))

(declare-fun res!41786 () Bool)

(assert (=> d!19625 (=> (not res!41786) (not e!52322))))

(declare-fun lt!37171 () ListLongMap!1447)

(assert (=> d!19625 (= res!41786 (contains!742 lt!37171 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun lt!37170 () List!1507)

(assert (=> d!19625 (= lt!37171 (ListLongMap!1448 lt!37170))))

(declare-fun lt!37173 () Unit!2257)

(declare-fun lt!37172 () Unit!2257)

(assert (=> d!19625 (= lt!37173 lt!37172)))

(assert (=> d!19625 (= (getValueByKey!137 lt!37170 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19625 (= lt!37172 (lemmaContainsTupThenGetReturnValue!54 lt!37170 (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19625 (= lt!37170 (insertStrictlySorted!57 (toList!739 call!7233) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19625 (= (+!105 call!7233 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) lt!37171)))

(declare-fun b!80142 () Bool)

(declare-fun res!41787 () Bool)

(assert (=> b!80142 (=> (not res!41787) (not e!52322))))

(assert (=> b!80142 (= res!41787 (= (getValueByKey!137 (toList!739 lt!37171) (_1!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (Some!142 (_2!1097 (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(declare-fun b!80143 () Bool)

(assert (=> b!80143 (= e!52322 (contains!743 (toList!739 lt!37171) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!19625 res!41786) b!80142))

(assert (= (and b!80142 res!41787) b!80143))

(declare-fun m!81693 () Bool)

(assert (=> d!19625 m!81693))

(declare-fun m!81695 () Bool)

(assert (=> d!19625 m!81695))

(declare-fun m!81697 () Bool)

(assert (=> d!19625 m!81697))

(declare-fun m!81699 () Bool)

(assert (=> d!19625 m!81699))

(declare-fun m!81701 () Bool)

(assert (=> b!80142 m!81701))

(declare-fun m!81703 () Bool)

(assert (=> b!80143 m!81703))

(assert (=> b!78597 d!19625))

(declare-fun d!19627 () Bool)

(declare-fun res!41788 () Bool)

(declare-fun e!52323 () Bool)

(assert (=> d!19627 (=> res!41788 e!52323)))

(assert (=> d!19627 (= res!41788 (or ((_ is Nil!1504) lt!36425) ((_ is Nil!1504) (t!5153 lt!36425))))))

(assert (=> d!19627 (= (isStrictlySorted!295 lt!36425) e!52323)))

(declare-fun b!80144 () Bool)

(declare-fun e!52324 () Bool)

(assert (=> b!80144 (= e!52323 e!52324)))

(declare-fun res!41789 () Bool)

(assert (=> b!80144 (=> (not res!41789) (not e!52324))))

(assert (=> b!80144 (= res!41789 (bvslt (_1!1097 (h!2091 lt!36425)) (_1!1097 (h!2091 (t!5153 lt!36425)))))))

(declare-fun b!80145 () Bool)

(assert (=> b!80145 (= e!52324 (isStrictlySorted!295 (t!5153 lt!36425)))))

(assert (= (and d!19627 (not res!41788)) b!80144))

(assert (= (and b!80144 res!41789) b!80145))

(declare-fun m!81705 () Bool)

(assert (=> b!80145 m!81705))

(assert (=> d!18677 d!19627))

(assert (=> d!18677 d!18875))

(declare-fun d!19629 () Bool)

(declare-fun res!41790 () Bool)

(declare-fun e!52325 () Bool)

(assert (=> d!19629 (=> res!41790 e!52325)))

(assert (=> d!19629 (= res!41790 (and ((_ is Cons!1503) (toList!739 e!51131)) (= (_1!1097 (h!2091 (toList!739 e!51131))) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))))))))

(assert (=> d!19629 (= (containsKey!141 (toList!739 e!51131) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))) e!52325)))

(declare-fun b!80146 () Bool)

(declare-fun e!52326 () Bool)

(assert (=> b!80146 (= e!52325 e!52326)))

(declare-fun res!41791 () Bool)

(assert (=> b!80146 (=> (not res!41791) (not e!52326))))

(assert (=> b!80146 (= res!41791 (and (or (not ((_ is Cons!1503) (toList!739 e!51131))) (bvsle (_1!1097 (h!2091 (toList!739 e!51131))) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))))) ((_ is Cons!1503) (toList!739 e!51131)) (bvslt (_1!1097 (h!2091 (toList!739 e!51131))) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128))))))))

(declare-fun b!80147 () Bool)

(assert (=> b!80147 (= e!52326 (containsKey!141 (t!5153 (toList!739 e!51131)) (ite c!11969 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355) (select (arr!1895 (_keys!3932 newMap!16)) (index!3095 lt!36128)))))))

(assert (= (and d!19629 (not res!41790)) b!80146))

(assert (= (and b!80146 res!41791) b!80147))

(declare-fun m!81707 () Bool)

(assert (=> b!80147 m!81707))

(assert (=> d!18531 d!19629))

(declare-fun d!19631 () Bool)

(assert (=> d!19631 (isDefined!90 (getValueByKey!137 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun lt!37174 () Unit!2257)

(assert (=> d!19631 (= lt!37174 (choose!465 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(declare-fun e!52327 () Bool)

(assert (=> d!19631 e!52327))

(declare-fun res!41792 () Bool)

(assert (=> d!19631 (=> (not res!41792) (not e!52327))))

(assert (=> d!19631 (= res!41792 (isStrictlySorted!295 (toList!739 call!7169)))))

(assert (=> d!19631 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)) lt!37174)))

(declare-fun b!80148 () Bool)

(assert (=> b!80148 (= e!52327 (containsKey!141 (toList!739 call!7169) (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) from!355)))))

(assert (= (and d!19631 res!41792) b!80148))

(assert (=> d!19631 m!77965))

(assert (=> d!19631 m!79059))

(assert (=> d!19631 m!79059))

(assert (=> d!19631 m!79061))

(assert (=> d!19631 m!77965))

(declare-fun m!81709 () Bool)

(assert (=> d!19631 m!81709))

(declare-fun m!81711 () Bool)

(assert (=> d!19631 m!81711))

(assert (=> b!80148 m!77965))

(assert (=> b!80148 m!79055))

(assert (=> b!78600 d!19631))

(assert (=> b!78600 d!18959))

(assert (=> b!78600 d!18961))

(declare-fun d!19633 () Bool)

(assert (=> d!19633 (= (apply!79 lt!36337 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1176 (getValueByKey!137 (toList!739 lt!36337) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3400 () Bool)

(assert (= bs!3400 d!19633))

(assert (=> bs!3400 m!79837))

(assert (=> bs!3400 m!79837))

(declare-fun m!81713 () Bool)

(assert (=> bs!3400 m!81713))

(assert (=> b!78525 d!19633))

(declare-fun d!19635 () Bool)

(declare-fun lt!37175 () Bool)

(assert (=> d!19635 (= lt!37175 (select (content!83 (toList!739 lt!36254)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!52329 () Bool)

(assert (=> d!19635 (= lt!37175 e!52329)))

(declare-fun res!41793 () Bool)

(assert (=> d!19635 (=> (not res!41793) (not e!52329))))

(assert (=> d!19635 (= res!41793 ((_ is Cons!1503) (toList!739 lt!36254)))))

(assert (=> d!19635 (= (contains!743 (toList!739 lt!36254) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!37175)))

(declare-fun b!80149 () Bool)

(declare-fun e!52328 () Bool)

(assert (=> b!80149 (= e!52329 e!52328)))

(declare-fun res!41794 () Bool)

(assert (=> b!80149 (=> res!41794 e!52328)))

(assert (=> b!80149 (= res!41794 (= (h!2091 (toList!739 lt!36254)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!80150 () Bool)

(assert (=> b!80150 (= e!52328 (contains!743 (t!5153 (toList!739 lt!36254)) (tuple2!2173 (select (arr!1895 (_keys!3932 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1173 (select (arr!1896 (_values!2255 (v!2592 (underlying!278 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!336 (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!19635 res!41793) b!80149))

(assert (= (and b!80149 (not res!41794)) b!80150))

(declare-fun m!81715 () Bool)

(assert (=> d!19635 m!81715))

(declare-fun m!81717 () Bool)

(assert (=> d!19635 m!81717))

(declare-fun m!81719 () Bool)

(assert (=> b!80150 m!81719))

(assert (=> b!78401 d!19635))

(declare-fun d!19637 () Bool)

(declare-fun lt!37176 () Bool)

(assert (=> d!19637 (= lt!37176 (select (content!83 (toList!739 lt!36159)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun e!52331 () Bool)

(assert (=> d!19637 (= lt!37176 e!52331)))

(declare-fun res!41795 () Bool)

(assert (=> d!19637 (=> (not res!41795) (not e!52331))))

(assert (=> d!19637 (= res!41795 ((_ is Cons!1503) (toList!739 lt!36159)))))

(assert (=> d!19637 (= (contains!743 (toList!739 lt!36159) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))) lt!37176)))

(declare-fun b!80151 () Bool)

(declare-fun e!52330 () Bool)

(assert (=> b!80151 (= e!52331 e!52330)))

(declare-fun res!41796 () Bool)

(assert (=> b!80151 (=> res!41796 e!52330)))

(assert (=> b!80151 (= res!41796 (= (h!2091 (toList!739 lt!36159)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(declare-fun b!80152 () Bool)

(assert (=> b!80152 (= e!52330 (contains!743 (t!5153 (toList!739 lt!36159)) (tuple2!2173 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2592 (underlying!278 thiss!992))))))))

(assert (= (and d!19637 res!41795) b!80151))

(assert (= (and b!80151 (not res!41796)) b!80152))

(declare-fun m!81721 () Bool)

(assert (=> d!19637 m!81721))

(declare-fun m!81723 () Bool)

(assert (=> d!19637 m!81723))

(declare-fun m!81725 () Bool)

(assert (=> b!80152 m!81725))

(assert (=> b!78235 d!19637))

(declare-fun d!19639 () Bool)

(declare-fun lt!37177 () Bool)

(assert (=> d!19639 (= lt!37177 (select (content!83 lt!36003) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun e!52333 () Bool)

(assert (=> d!19639 (= lt!37177 e!52333)))

(declare-fun res!41797 () Bool)

(assert (=> d!19639 (=> (not res!41797) (not e!52333))))

(assert (=> d!19639 (= res!41797 ((_ is Cons!1503) lt!36003))))

(assert (=> d!19639 (= (contains!743 lt!36003 (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))) lt!37177)))

(declare-fun b!80153 () Bool)

(declare-fun e!52332 () Bool)

(assert (=> b!80153 (= e!52333 e!52332)))

(declare-fun res!41798 () Bool)

(assert (=> b!80153 (=> res!41798 e!52332)))

(assert (=> b!80153 (= res!41798 (= (h!2091 lt!36003) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(declare-fun b!80154 () Bool)

(assert (=> b!80154 (= e!52332 (contains!743 (t!5153 lt!36003) (tuple2!2173 (_1!1097 lt!35864) (_2!1097 lt!35864))))))

(assert (= (and d!19639 res!41797) b!80153))

(assert (= (and b!80153 (not res!41798)) b!80154))

(declare-fun m!81727 () Bool)

(assert (=> d!19639 m!81727))

(declare-fun m!81729 () Bool)

(assert (=> d!19639 m!81729))

(declare-fun m!81731 () Bool)

(assert (=> b!80154 m!81731))

(assert (=> b!78746 d!19639))

(declare-fun mapNonEmpty!3317 () Bool)

(declare-fun mapRes!3317 () Bool)

(declare-fun tp!8789 () Bool)

(declare-fun e!52334 () Bool)

(assert (=> mapNonEmpty!3317 (= mapRes!3317 (and tp!8789 e!52334))))

(declare-fun mapValue!3317 () ValueCell!912)

(declare-fun mapKey!3317 () (_ BitVec 32))

(declare-fun mapRest!3317 () (Array (_ BitVec 32) ValueCell!912))

(assert (=> mapNonEmpty!3317 (= mapRest!3315 (store mapRest!3317 mapKey!3317 mapValue!3317))))

(declare-fun b!80156 () Bool)

(declare-fun e!52335 () Bool)

(assert (=> b!80156 (= e!52335 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3317 () Bool)

(assert (=> mapIsEmpty!3317 mapRes!3317))

(declare-fun condMapEmpty!3317 () Bool)

(declare-fun mapDefault!3317 () ValueCell!912)

(assert (=> mapNonEmpty!3315 (= condMapEmpty!3317 (= mapRest!3315 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3317)))))

(assert (=> mapNonEmpty!3315 (= tp!8787 (and e!52335 mapRes!3317))))

(declare-fun b!80155 () Bool)

(assert (=> b!80155 (= e!52334 tp_is_empty!2511)))

(assert (= (and mapNonEmpty!3315 condMapEmpty!3317) mapIsEmpty!3317))

(assert (= (and mapNonEmpty!3315 (not condMapEmpty!3317)) mapNonEmpty!3317))

(assert (= (and mapNonEmpty!3317 ((_ is ValueCellFull!912) mapValue!3317)) b!80155))

(assert (= (and mapNonEmpty!3315 ((_ is ValueCellFull!912) mapDefault!3317)) b!80156))

(declare-fun m!81733 () Bool)

(assert (=> mapNonEmpty!3317 m!81733))

(declare-fun mapNonEmpty!3318 () Bool)

(declare-fun mapRes!3318 () Bool)

(declare-fun tp!8790 () Bool)

(declare-fun e!52336 () Bool)

(assert (=> mapNonEmpty!3318 (= mapRes!3318 (and tp!8790 e!52336))))

(declare-fun mapValue!3318 () ValueCell!912)

(declare-fun mapRest!3318 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapKey!3318 () (_ BitVec 32))

(assert (=> mapNonEmpty!3318 (= mapRest!3316 (store mapRest!3318 mapKey!3318 mapValue!3318))))

(declare-fun b!80158 () Bool)

(declare-fun e!52337 () Bool)

(assert (=> b!80158 (= e!52337 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3318 () Bool)

(assert (=> mapIsEmpty!3318 mapRes!3318))

(declare-fun condMapEmpty!3318 () Bool)

(declare-fun mapDefault!3318 () ValueCell!912)

(assert (=> mapNonEmpty!3316 (= condMapEmpty!3318 (= mapRest!3316 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3318)))))

(assert (=> mapNonEmpty!3316 (= tp!8788 (and e!52337 mapRes!3318))))

(declare-fun b!80157 () Bool)

(assert (=> b!80157 (= e!52336 tp_is_empty!2511)))

(assert (= (and mapNonEmpty!3316 condMapEmpty!3318) mapIsEmpty!3318))

(assert (= (and mapNonEmpty!3316 (not condMapEmpty!3318)) mapNonEmpty!3318))

(assert (= (and mapNonEmpty!3318 ((_ is ValueCellFull!912) mapValue!3318)) b!80157))

(assert (= (and mapNonEmpty!3316 ((_ is ValueCellFull!912) mapDefault!3318)) b!80158))

(declare-fun m!81735 () Bool)

(assert (=> mapNonEmpty!3318 m!81735))

(declare-fun b_lambda!3557 () Bool)

(assert (= b_lambda!3551 (or (and b!77851 b_free!2189) (and b!77848 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))) b_lambda!3557)))

(declare-fun b_lambda!3559 () Bool)

(assert (= b_lambda!3553 (or (and b!77851 b_free!2189) (and b!77848 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))))) b_lambda!3559)))

(declare-fun b_lambda!3561 () Bool)

(assert (= b_lambda!3529 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3561)))

(declare-fun b_lambda!3563 () Bool)

(assert (= b_lambda!3537 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3563)))

(declare-fun b_lambda!3565 () Bool)

(assert (= b_lambda!3547 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3565)))

(declare-fun b_lambda!3567 () Bool)

(assert (= b_lambda!3545 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3567)))

(declare-fun b_lambda!3569 () Bool)

(assert (= b_lambda!3531 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3569)))

(declare-fun b_lambda!3571 () Bool)

(assert (= b_lambda!3535 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3571)))

(declare-fun b_lambda!3573 () Bool)

(assert (= b_lambda!3549 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3573)))

(declare-fun b_lambda!3575 () Bool)

(assert (= b_lambda!3527 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3575)))

(declare-fun b_lambda!3577 () Bool)

(assert (= b_lambda!3555 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3577)))

(declare-fun b_lambda!3579 () Bool)

(assert (= b_lambda!3543 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3579)))

(declare-fun b_lambda!3581 () Bool)

(assert (= b_lambda!3541 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3581)))

(declare-fun b_lambda!3583 () Bool)

(assert (= b_lambda!3539 (or (and b!77851 b_free!2189 (= (defaultEntry!2272 (v!2592 (underlying!278 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77848 b_free!2191) b_lambda!3583)))

(check-sat (not b!80049) (not d!19037) (not b!79800) (not b!78983) (not b!78861) (not d!19105) (not b!79471) (not d!19571) (not b!79584) (not b!79636) (not b!79980) (not b!79372) (not b!78905) (not b!79512) (not bm!7351) (not b!79823) (not d!19143) (not d!19421) (not bm!7397) (not b!80023) (not b!78814) (not b!79699) (not d!18897) (not b!79818) (not b!79747) (not b!80052) (not b!79325) (not b!78929) (not d!19499) (not bm!7341) (not b!79451) (not b!79553) (not b!78820) (not b_lambda!3525) (not b!79979) (not bm!7284) (not d!18757) (not b!79232) (not b!79540) (not b!79943) (not b!79223) (not b!79724) (not b!79565) (not b!79859) (not b!79673) (not b!79686) (not d!19193) (not b!79903) (not d!18863) (not d!18743) (not d!19213) (not b!79210) (not b!79191) (not bm!7313) (not d!19141) (not bm!7376) (not b!79295) (not b!79405) (not b!80116) (not d!19465) (not b!79255) (not b!79587) (not d!19183) (not d!18745) (not d!19097) (not b!79282) (not b!79797) (not b!79290) (not b!79276) (not b!80046) (not b!80122) (not d!19203) (not b!79878) (not b!79744) (not b!79810) (not b!80066) (not b!79697) (not b!79836) (not b!79501) (not b!78909) (not b!79605) (not bm!7294) (not b!79888) (not b!80125) (not d!18937) (not b!79357) (not b!78890) (not d!19485) (not b!79354) (not b!79434) (not d!19315) (not b!79731) (not b_lambda!3501) (not b!79216) (not b_lambda!3559) (not d!19285) (not d!19179) (not b!80096) (not d!19289) (not b!78988) (not b!79002) (not d!18839) (not b!79449) (not b!79453) (not b!79238) (not d!19331) (not b!79737) (not b!79186) (not b!79604) (not b!78818) (not b_lambda!3533) (not d!19065) (not b!79425) (not d!19519) (not b!79390) (not bm!7293) (not b!80001) (not d!19033) (not d!18825) (not b!80003) (not b!79913) (not b!79989) (not b!79089) (not b!79981) (not b!78835) (not b!79134) (not d!19313) (not b!80140) (not d!18871) (not bm!7353) (not b!79157) (not b!79527) (not bm!7337) (not b!79547) (not b!79462) (not b!79598) (not d!19045) (not b!79529) (not b!79879) (not bm!7299) (not b!79805) (not d!19385) (not b!79956) (not d!19429) (not b!79429) (not d!18881) (not b!79200) (not b!78910) (not b!79730) (not bm!7320) (not d!19447) (not b!79218) (not b!79931) (not b!79650) (not b!79789) (not b!79666) (not b!79245) (not b!79098) (not bm!7282) (not bm!7258) (not b!79601) (not d!19007) (not b!79353) (not bm!7260) (not d!18795) (not b_lambda!3567) (not b!79928) (not b!79222) (not b!79514) (not b!79808) (not d!19121) (not d!18731) (not bm!7366) (not b!79949) (not d!19211) (not bm!7395) (not bm!7385) (not d!18779) (not bm!7338) (not bm!7265) (not b!79064) (not b!79964) (not b!79822) (not d!19319) (not b!79086) (not b!79104) (not d!18771) (not bm!7314) (not d!19389) (not bm!7345) (not d!19351) (not bm!7332) (not b!79320) (not b!79177) (not b!79940) (not b_lambda!3557) (not b!79001) (not d!19111) (not b!79704) (not d!19609) (not b!79491) (not b!78882) (not d!19219) (not d!19349) (not b!79705) (not b!79149) (not b!80132) (not b!79055) (not b!78806) (not d!19293) (not b!79196) (not b!79911) (not d!19235) (not d!18981) (not d!18917) (not b!80135) (not d!19327) (not b!78904) (not bm!7262) tp_is_empty!2511 (not d!18777) (not d!19115) (not b!79635) (not b!79938) (not b!79693) (not b!79205) (not d!18747) (not d!18729) (not d!19055) (not bm!7271) (not d!19475) (not bm!7287) (not d!19359) (not b!79439) (not d!19079) (not d!19633) (not b!79894) (not d!19427) (not d!18999) (not b!78991) (not b!80145) (not b!79279) (not b!79945) (not b!79528) (not d!19337) (not b!79548) (not d!19453) (not b!79934) (not b!79839) (not b!79603) (not b!80130) (not b!79077) (not b!79947) (not b!79360) (not b!80018) (not d!19009) (not b!79498) (not d!19053) (not d!19373) (not b!79258) (not b!80067) (not b!79887) (not d!19383) (not d!19435) (not b!80115) (not b!79326) (not b!79969) (not d!19575) (not b_lambda!3577) (not b!79610) (not bm!7329) (not b!79683) (not b!79995) (not b!79012) (not d!19635) (not b!79720) (not bm!7298) (not b!79065) (not b!79838) (not b!80026) (not b!80102) (not b!80044) (not b!80079) (not d!18859) (not d!19449) (not b!80076) (not b!80029) (not b!79005) (not b!80035) (not bm!7352) (not b!79101) (not d!19273) (not d!18831) (not b!79043) (not b!80143) (not d!18751) (not b!79174) (not b!79133) (not d!19605) (not bm!7360) (not b!79166) (not d!19457) (not b!79543) (not d!19029) (not b!80039) (not b!79562) (not d!19265) (not b!79567) (not bm!7277) (not b!80007) (not d!18893) (not d!19317) (not b!78844) (not d!19591) (not d!19455) (not b!79736) (not b!79625) (not d!18845) (not d!19041) (not b!79310) (not b!79771) (not b!78826) (not b!79530) (not b!78926) (not b!79365) (not bm!7382) (not d!19481) (not d!18739) (not b!79654) (not b!79313) (not d!18919) (not b!78842) (not d!18803) (not b!78895) (not b!80137) (not b!79392) (not d!19185) (not b!79576) (not b!80055) (not b!79366) (not d!19323) (not d!19077) (not b!79681) (not b!79539) (not b!79563) (not b!79297) (not bm!7399) (not b!79006) (not b!79467) (not b!80064) (not bm!7278) (not d!19255) (not d!19281) (not b!79753) (not b!79590) (not b!79330) (not bm!7323) (not d!18767) (not b!79982) (not b!79093) (not b!80042) (not b!79684) (not d!19231) (not d!19549) (not b!78831) (not b!78878) (not b!80107) (not d!19165) (not b!79315) (not d!19473) (not b!79404) (not b!79660) (not d!19241) (not b!79749) (not b!78881) (not d!19287) (not b_lambda!3571) (not b!80142) (not d!19399) (not b!79990) (not d!19613) (not b_lambda!3521) (not b!78825) (not b!79050) (not b!79161) (not d!18895) (not d!18847) (not b!78924) (not d!19245) (not d!19503) (not b!79899) (not b!79968) (not d!19051) (not b!79933) (not d!18987) (not b!79300) (not b!78977) (not b!78805) (not b!79377) (not b!79272) (not b!79250) (not d!18813) (not d!18983) (not b!79015) (not b!79792) (not b!78996) (not b_lambda!3519) (not b!79263) (not b!79004) (not d!19163) (not d!19547) (not b!79628) (not b!78916) (not b!80021) (not d!19619) (not b!79866) (not d!19297) (not b!79278) (not b!79574) (not b!80134) (not b!79485) (not d!19217) (not b!79581) (not b!80105) (not b!79389) (not b!79490) (not b!78883) (not b!79058) (not b!79289) (not b!78938) (not b!79734) (not b!79830) (not d!18753) (not d!19263) (not b!79187) (not b!79334) (not b!79013) (not mapNonEmpty!3317) (not b!79766) (not bm!7315) (not b!79908) (not d!18835) (not b!79321) (not d!18955) (not bm!7268) (not d!18787) (not b!79073) (not d!19377) (not d!19073) (not d!19043) (not d!19437) (not b!78985) (not b!78793) (not d!19531) (not b!79234) (not b!79352) (not bm!7302) (not d!18903) (not b!80100) (not b!79691) (not d!19173) (not b!79873) (not d!18977) (not b!78913) (not b!78794) (not b_lambda!3517) (not b!79738) (not b!79706) (not b!78941) (not d!18887) (not b!79756) (not d!18957) (not b!79061) (not b!79516) (not b!79078) (not b!79642) (not d!18837) (not d!18913) (not b!79284) (not b_lambda!3563) (not b!79714) (not d!18901) (not bm!7379) (not b!79153) (not d!18911) (not d!19039) (not b!78849) (not b!79817) (not bm!7335) (not d!19261) (not b!78981) (not b!79732) (not d!18877) (not b!80091) (not b!79303) (not bm!7336) (not b!79521) (not d!19611) (not b!79973) (not b!79936) (not b!79942) (not d!19049) (not bm!7304) (not d!19417) (not b!79645) (not d!19103) (not b!79154) (not b!79070) (not bm!7281) (not b!79040) (not b!79802) (not b!79251) (not d!19529) (not b!79668) (not d!19177) (not d!19569) (not d!19221) (not d!18761) (not b!79460) (not b!80152) (not d!18829) (not b!79495) (not d!19311) (not d!19195) (not b!79782) (not b!78850) (not b!78995) (not b!79246) (not b!78886) (not bm!7404) (not d!18907) (not d!18963) (not d!19371) (not b_lambda!3565) (not b!79008) (not b!79793) (not b!79349) (not bm!7322) (not b!79622) (not b!79639) (not d!19321) (not b!79457) (not b!79038) (not d!19423) (not d!19069) (not b!79592) (not b!79060) (not d!19099) (not d!18889) (not b!79269) (not b!79568) (not d!18965) (not b!79475) (not d!19335) (not d!19167) (not d!19467) (not d!18849) (not b!80005) (not b!78945) (not b!79618) (not bm!7296) (not d!19171) (not b!79351) (not b!79632) (not b!79661) (not d!18993) (not b!78922) (not b!78802) (not d!19343) (not b!79410) (not d!19461) (not b_next!2191) (not d!18809) (not b!78994) (not b_lambda!3583) (not b!79999) (not b!79339) (not d!18843) (not b!79395) (not b!79976) (not d!18989) (not b!79570) (not bm!7274) (not b!79386) (not b!79219) (not b_next!2189) (not bm!7295) (not d!18959) (not b!78845) (not b!79617) (not b!79678) (not b!79545) (not b!79534) (not b_lambda!3505) (not b!79312) (not b!79883) (not b!79107) (not b!79464) (not bm!7402) (not bm!7355) (not b!80037) (not bm!7326) (not b!80087) (not b!80073) (not b!80111) (not d!19083) (not b_lambda!3575) (not b!78972) b_and!4897 (not b!79727) (not b!79170) (not b!79318) (not bm!7373) (not b!80101) (not d!19361) (not d!18773) (not b!79715) (not b!79095) (not b!80109) (not b!79952) (not d!18865) (not d!19299) (not b!79994) (not b!79579) (not b_lambda!3493) (not b!79016) (not d!19031) (not mapNonEmpty!3318) (not b!80150) (not b!80084) (not d!19047) (not b!79774) (not b_lambda!3573) (not d!19233) (not b!79266) (not b!80086) (not d!19013) (not b!78798) (not bm!7267) (not d!19309) (not b!79214) (not b!79280) (not b!80031) (not d!18833) (not bm!7317) (not bm!7388) (not b!79919) (not b!79067) (not b!79613) (not b!80103) (not b!79803) (not b!79649) (not b!79415) (not bm!7328) (not d!18841) (not b!79958) (not d!18793) (not b!80010) (not d!19363) (not b!79243) (not d!19409) (not b!79505) (not b!79009) (not d!18823) (not b!79454) (not d!18879) (not b!79525) (not b!79288) (not b!79517) b_and!4895 (not d!19295) (not b!79308) (not b!79431) (not b!79132) (not b!79812) (not b!79589) (not d!18735) (not b!79595) (not b!80081) (not b!79961) (not b_lambda!3561) (not d!18811) (not b!79227) (not b!79420) (not d!19239) (not b!79955) (not bm!7270) (not d!19035) (not d!19585) (not b!79762) (not d!19631) (not b!78839) (not d!19441) (not b!78854) (not d!19187) (not b!79226) (not b!78817) (not b!79046) (not b!78999) (not b!78810) (not b!79180) (not d!19625) (not b!79139) (not b!79846) (not b!79305) (not b!79051) (not b!79759) (not d!19577) (not b!79937) (not b!79815) (not b!79362) (not bm!7363) (not b!78862) (not d!19303) (not b!79776) (not b!78859) (not d!19639) (not b!78992) (not b!79712) (not d!18851) (not b!79612) (not d!19257) (not b!80154) (not b!79407) (not b!79007) (not b!79509) (not b!79841) (not d!19291) (not b!79832) (not d!19081) (not b!79978) (not b!79370) (not b!80070) (not b!80054) (not b!79885) (not b!79286) (not b!79391) (not b!79537) (not b!79152) (not b!79719) (not b!79533) (not b!79433) (not b!79767) (not b!79367) (not bm!7309) (not d!19553) (not d!19369) (not d!18945) (not bm!7311) (not b!78823) (not bm!7319) (not d!18815) (not b!78807) (not b!79852) (not b!80119) (not b!79669) (not b!79221) (not b!78837) (not b_lambda!3569) (not b!79393) (not d!18755) (not b!79172) (not b!79000) (not b!80013) (not b!79794) (not b!78830) (not b!79192) (not b!79689) (not b!79784) (not b!79277) (not b!78813) (not b!79481) (not bm!7392) (not d!19495) (not b!79754) (not b!79237) (not d!19523) (not b!80059) (not d!18947) (not d!19117) (not bm!7350) (not b!78976) (not d!18921) (not b!79184) (not d!19387) (not d!19243) (not b!79984) (not b!79701) (not b!79572) (not b!78856) (not b!80015) (not b!79480) (not bm!7370) (not b!79448) (not b!79656) (not d!19561) (not d!18941) (not b!79833) (not d!19463) (not b!80121) (not b!79658) (not b!79034) (not b!79856) (not d!19189) (not d!19277) (not b!80047) (not d!19027) (not b!79890) (not b!79644) (not d!19445) (not b!79168) (not b!78936) (not b!79082) (not d!19439) (not b!79281) (not b!79045) (not b!79261) (not d!19469) (not b!79526) (not d!19505) (not b!79206) (not b!79220) (not bm!7331) (not d!18969) (not b!79728) (not b!79236) (not b!79417) (not d!19305) (not b!78889) (not b!79348) (not b!78980) (not b!79566) (not b!79707) (not b!78908) (not d!19397) (not d!19581) (not b_lambda!3579) (not bm!7340) (not d!19061) (not d!19615) (not b!79847) (not b!79311) (not d!19501) (not b!79827) (not d!19493) (not bm!7327) (not d!19509) (not b!79230) (not d!19637) (not b!79963) (not b!79663) (not b!79761) (not b!79861) (not d!18853) (not b!79148) (not b!79062) (not d!19381) (not d!19301) (not b!79729) (not b!78863) (not b!80075) (not b!79333) (not d!19557) (not b!78877) (not b!79637) (not b!79851) (not b!78974) (not d!18857) (not d!19393) (not d!19307) (not b!78809) (not b!79084) (not d!18935) (not b!79283) (not bm!7275) (not d!19271) (not b!79164) (not b!79924) (not b!78880) (not d!18763) (not b!79864) (not d!19555) (not b!79181) (not b!79072) (not b!79212) (not b!79886) (not b!79906) (not d!19365) (not b!78975) (not b_lambda!3523) (not d!19425) (not b!78907) (not b!80147) (not b!80033) (not bm!7356) (not b!79575) (not b!79709) (not b!79751) (not b!79916) (not b!79523) (not b!80092) (not b_lambda!3503) (not b!79918) (not d!19487) (not d!19251) (not b!80128) (not d!19139) (not b!79786) (not bm!7390) (not d!18869) (not d!18973) (not d!19025) (not d!19597) (not b!79293) (not b!79870) (not b!79895) (not d!19113) (not b!80078) (not b_lambda!3581) (not b!78808) (not d!18855) (not b!80113) (not d!18997) (not b!79844) (not bm!7307) (not b!80148) (not b!79309) (not bm!7368) (not b!79910) (not b!79987) (not b!79923) (not b!78993) (not b!79151) (not d!19229) (not b!79607) (not b!78998) (not b!79412) (not b!78979) (not b!79332) (not bm!7348) (not d!19101) (not b!78868) (not d!19491) (not b!79868) (not b!79387) (not b!79779) (not b!79240) (not d!19159) (not b!80060) (not d!18915) (not d!18883) (not d!19479) (not d!19567) (not b!79674) (not b!79452))
(check-sat b_and!4895 b_and!4897 (not b_next!2189) (not b_next!2191))
