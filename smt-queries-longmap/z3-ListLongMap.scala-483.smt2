; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10188 () Bool)

(assert start!10188)

(declare-fun b!77645 () Bool)

(declare-fun b_free!2185 () Bool)

(declare-fun b_next!2185 () Bool)

(assert (=> b!77645 (= b_free!2185 (not b_next!2185))))

(declare-fun tp!8755 () Bool)

(declare-fun b_and!4761 () Bool)

(assert (=> b!77645 (= tp!8755 b_and!4761)))

(declare-fun b!77630 () Bool)

(declare-fun b_free!2187 () Bool)

(declare-fun b_next!2187 () Bool)

(assert (=> b!77630 (= b_free!2187 (not b_next!2187))))

(declare-fun tp!8758 () Bool)

(declare-fun b_and!4763 () Bool)

(assert (=> b!77630 (= tp!8758 b_and!4763)))

(declare-fun b!77626 () Bool)

(declare-fun res!40723 () Bool)

(declare-fun e!50757 () Bool)

(assert (=> b!77626 (=> (not res!40723) (not e!50757))))

(declare-fun from!355 () (_ BitVec 32))

(declare-datatypes ((V!2993 0))(
  ( (V!2994 (val!1299 Int)) )
))
(declare-datatypes ((array!3951 0))(
  ( (array!3952 (arr!1882 (Array (_ BitVec 32) (_ BitVec 64))) (size!2124 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!911 0))(
  ( (ValueCellFull!911 (v!2583 V!2993)) (EmptyCell!911) )
))
(declare-datatypes ((array!3953 0))(
  ( (array!3954 (arr!1883 (Array (_ BitVec 32) ValueCell!911)) (size!2125 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!730 0))(
  ( (LongMapFixedSize!731 (defaultEntry!2271 Int) (mask!6266 (_ BitVec 32)) (extraKeys!2122 (_ BitVec 32)) (zeroValue!2169 V!2993) (minValue!2169 V!2993) (_size!414 (_ BitVec 32)) (_keys!3930 array!3951) (_values!2254 array!3953) (_vacant!414 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!524 0))(
  ( (Cell!525 (v!2584 LongMapFixedSize!730)) )
))
(declare-datatypes ((LongMap!524 0))(
  ( (LongMap!525 (underlying!273 Cell!524)) )
))
(declare-fun thiss!992 () LongMap!524)

(assert (=> b!77626 (= res!40723 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!77627 () Bool)

(declare-fun e!50769 () Bool)

(assert (=> b!77627 (= e!50769 (= (size!2125 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6266 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!77628 () Bool)

(declare-datatypes ((Unit!2242 0))(
  ( (Unit!2243) )
))
(declare-fun e!50756 () Unit!2242)

(declare-fun Unit!2244 () Unit!2242)

(assert (=> b!77628 (= e!50756 Unit!2244)))

(declare-fun b!77629 () Bool)

(declare-fun e!50764 () Bool)

(declare-fun tp_is_empty!2509 () Bool)

(assert (=> b!77629 (= e!50764 tp_is_empty!2509)))

(declare-fun e!50768 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!730)

(declare-fun e!50772 () Bool)

(declare-fun array_inv!1181 (array!3951) Bool)

(declare-fun array_inv!1182 (array!3953) Bool)

(assert (=> b!77630 (= e!50768 (and tp!8758 tp_is_empty!2509 (array_inv!1181 (_keys!3930 newMap!16)) (array_inv!1182 (_values!2254 newMap!16)) e!50772))))

(declare-fun b!77632 () Bool)

(declare-fun res!40722 () Bool)

(assert (=> b!77632 (=> (not res!40722) (not e!50757))))

(assert (=> b!77632 (= res!40722 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6266 newMap!16)) (_size!414 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun b!77633 () Bool)

(declare-fun e!50770 () Bool)

(assert (=> b!77633 (= e!50770 tp_is_empty!2509)))

(declare-fun b!77634 () Bool)

(declare-fun Unit!2245 () Unit!2242)

(assert (=> b!77634 (= e!50756 Unit!2245)))

(declare-fun lt!35669 () Unit!2242)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!59 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) (_ BitVec 32) Int) Unit!2242)

(assert (=> b!77634 (= lt!35669 (lemmaListMapContainsThenArrayContainsFrom!59 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3951 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!77634 (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!35656 () Unit!2242)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3951 (_ BitVec 32) (_ BitVec 32)) Unit!2242)

(assert (=> b!77634 (= lt!35656 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1510 0))(
  ( (Nil!1507) (Cons!1506 (h!2094 (_ BitVec 64)) (t!5147 List!1510)) )
))
(declare-fun arrayNoDuplicates!0 (array!3951 (_ BitVec 32) List!1510) Bool)

(assert (=> b!77634 (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) from!355 Nil!1507)))

(declare-fun lt!35666 () Unit!2242)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3951 (_ BitVec 32) (_ BitVec 64) List!1510) Unit!2242)

(assert (=> b!77634 (= lt!35666 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507)))))

(assert (=> b!77634 false))

(declare-fun b!77635 () Bool)

(declare-fun mapRes!3297 () Bool)

(assert (=> b!77635 (= e!50772 (and e!50770 mapRes!3297))))

(declare-fun condMapEmpty!3298 () Bool)

(declare-fun mapDefault!3297 () ValueCell!911)

(assert (=> b!77635 (= condMapEmpty!3298 (= (arr!1883 (_values!2254 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3297)))))

(declare-fun b!77636 () Bool)

(declare-fun res!40725 () Bool)

(assert (=> b!77636 (=> (not res!40725) (not e!50757))))

(declare-fun valid!321 (LongMapFixedSize!730) Bool)

(assert (=> b!77636 (= res!40725 (valid!321 newMap!16))))

(declare-fun b!77637 () Bool)

(declare-fun e!50755 () Bool)

(declare-fun e!50765 () Bool)

(assert (=> b!77637 (= e!50755 e!50765)))

(declare-fun mapIsEmpty!3297 () Bool)

(declare-fun mapRes!3298 () Bool)

(assert (=> mapIsEmpty!3297 mapRes!3298))

(declare-fun b!77631 () Bool)

(declare-fun e!50760 () Bool)

(assert (=> b!77631 (= e!50765 e!50760)))

(declare-fun res!40726 () Bool)

(assert (=> start!10188 (=> (not res!40726) (not e!50757))))

(declare-fun valid!322 (LongMap!524) Bool)

(assert (=> start!10188 (= res!40726 (valid!322 thiss!992))))

(assert (=> start!10188 e!50757))

(assert (=> start!10188 e!50755))

(assert (=> start!10188 true))

(assert (=> start!10188 e!50768))

(declare-fun b!77638 () Bool)

(declare-fun e!50758 () Bool)

(assert (=> b!77638 (= e!50758 tp_is_empty!2509)))

(declare-fun b!77639 () Bool)

(declare-fun e!50761 () Bool)

(declare-fun e!50759 () Bool)

(assert (=> b!77639 (= e!50761 e!50759)))

(declare-fun res!40727 () Bool)

(assert (=> b!77639 (=> (not res!40727) (not e!50759))))

(assert (=> b!77639 (= res!40727 (and (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!35658 () V!2993)

(declare-fun get!1177 (ValueCell!911 V!2993) V!2993)

(declare-fun dynLambda!337 (Int (_ BitVec 64)) V!2993)

(assert (=> b!77639 (= lt!35658 (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!77640 () Bool)

(declare-fun e!50762 () Bool)

(assert (=> b!77640 (= e!50759 e!50762)))

(declare-fun res!40724 () Bool)

(assert (=> b!77640 (=> (not res!40724) (not e!50762))))

(declare-datatypes ((tuple2!2174 0))(
  ( (tuple2!2175 (_1!1098 Bool) (_2!1098 LongMapFixedSize!730)) )
))
(declare-fun lt!35671 () tuple2!2174)

(assert (=> b!77640 (= res!40724 (and (_1!1098 lt!35671) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!35661 () Unit!2242)

(assert (=> b!77640 (= lt!35661 e!50756)))

(declare-datatypes ((tuple2!2176 0))(
  ( (tuple2!2177 (_1!1099 (_ BitVec 64)) (_2!1099 V!2993)) )
))
(declare-datatypes ((List!1511 0))(
  ( (Nil!1508) (Cons!1507 (h!2095 tuple2!2176) (t!5148 List!1511)) )
))
(declare-datatypes ((ListLongMap!1433 0))(
  ( (ListLongMap!1434 (toList!732 List!1511)) )
))
(declare-fun lt!35664 () ListLongMap!1433)

(declare-fun c!11849 () Bool)

(declare-fun contains!739 (ListLongMap!1433 (_ BitVec 64)) Bool)

(assert (=> b!77640 (= c!11849 (contains!739 lt!35664 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun update!115 (LongMapFixedSize!730 (_ BitVec 64) V!2993) tuple2!2174)

(assert (=> b!77640 (= lt!35671 (update!115 newMap!16 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))

(declare-fun b!77641 () Bool)

(declare-fun e!50771 () Bool)

(assert (=> b!77641 (= e!50771 tp_is_empty!2509)))

(declare-fun b!77642 () Bool)

(assert (=> b!77642 (= e!50762 (not e!50769))))

(declare-fun res!40728 () Bool)

(assert (=> b!77642 (=> res!40728 e!50769)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!77642 (= res!40728 (not (validMask!0 (mask!6266 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun lt!35663 () ListLongMap!1433)

(declare-fun lt!35659 () tuple2!2176)

(declare-fun lt!35660 () tuple2!2176)

(declare-fun lt!35662 () ListLongMap!1433)

(declare-fun +!103 (ListLongMap!1433 tuple2!2176) ListLongMap!1433)

(assert (=> b!77642 (= (+!103 lt!35663 lt!35659) (+!103 (+!103 lt!35662 lt!35659) lt!35660))))

(assert (=> b!77642 (= lt!35659 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun lt!35667 () Unit!2242)

(declare-fun addCommutativeForDiffKeys!22 (ListLongMap!1433 (_ BitVec 64) V!2993 (_ BitVec 64) V!2993) Unit!2242)

(assert (=> b!77642 (= lt!35667 (addCommutativeForDiffKeys!22 lt!35662 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun lt!35672 () ListLongMap!1433)

(assert (=> b!77642 (= lt!35672 lt!35663)))

(assert (=> b!77642 (= lt!35663 (+!103 lt!35662 lt!35660))))

(declare-fun lt!35668 () ListLongMap!1433)

(declare-fun lt!35670 () tuple2!2176)

(assert (=> b!77642 (= lt!35672 (+!103 lt!35668 lt!35670))))

(declare-fun lt!35657 () ListLongMap!1433)

(assert (=> b!77642 (= lt!35662 (+!103 lt!35657 lt!35670))))

(assert (=> b!77642 (= lt!35670 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))

(assert (=> b!77642 (= lt!35668 (+!103 lt!35657 lt!35660))))

(assert (=> b!77642 (= lt!35660 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))

(declare-fun lt!35673 () Unit!2242)

(assert (=> b!77642 (= lt!35673 (addCommutativeForDiffKeys!22 lt!35657 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!67 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) Int) ListLongMap!1433)

(assert (=> b!77642 (= lt!35657 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun mapIsEmpty!3298 () Bool)

(assert (=> mapIsEmpty!3298 mapRes!3297))

(declare-fun b!77643 () Bool)

(assert (=> b!77643 (= e!50757 e!50761)))

(declare-fun res!40721 () Bool)

(assert (=> b!77643 (=> (not res!40721) (not e!50761))))

(declare-fun lt!35665 () ListLongMap!1433)

(assert (=> b!77643 (= res!40721 (= lt!35665 lt!35664))))

(declare-fun map!1173 (LongMapFixedSize!730) ListLongMap!1433)

(assert (=> b!77643 (= lt!35664 (map!1173 newMap!16))))

(declare-fun getCurrentListMap!421 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) Int) ListLongMap!1433)

(assert (=> b!77643 (= lt!35665 (getCurrentListMap!421 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun b!77644 () Bool)

(declare-fun e!50766 () Bool)

(assert (=> b!77644 (= e!50766 (and e!50764 mapRes!3298))))

(declare-fun condMapEmpty!3297 () Bool)

(declare-fun mapDefault!3298 () ValueCell!911)

(assert (=> b!77644 (= condMapEmpty!3297 (= (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3298)))))

(declare-fun mapNonEmpty!3297 () Bool)

(declare-fun tp!8757 () Bool)

(assert (=> mapNonEmpty!3297 (= mapRes!3297 (and tp!8757 e!50758))))

(declare-fun mapKey!3297 () (_ BitVec 32))

(declare-fun mapRest!3297 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapValue!3298 () ValueCell!911)

(assert (=> mapNonEmpty!3297 (= (arr!1883 (_values!2254 newMap!16)) (store mapRest!3297 mapKey!3297 mapValue!3298))))

(declare-fun mapNonEmpty!3298 () Bool)

(declare-fun tp!8756 () Bool)

(assert (=> mapNonEmpty!3298 (= mapRes!3298 (and tp!8756 e!50771))))

(declare-fun mapKey!3298 () (_ BitVec 32))

(declare-fun mapValue!3297 () ValueCell!911)

(declare-fun mapRest!3298 () (Array (_ BitVec 32) ValueCell!911))

(assert (=> mapNonEmpty!3298 (= (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (store mapRest!3298 mapKey!3298 mapValue!3297))))

(assert (=> b!77645 (= e!50760 (and tp!8755 tp_is_empty!2509 (array_inv!1181 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (array_inv!1182 (_values!2254 (v!2584 (underlying!273 thiss!992)))) e!50766))))

(assert (= (and start!10188 res!40726) b!77626))

(assert (= (and b!77626 res!40723) b!77636))

(assert (= (and b!77636 res!40725) b!77632))

(assert (= (and b!77632 res!40722) b!77643))

(assert (= (and b!77643 res!40721) b!77639))

(assert (= (and b!77639 res!40727) b!77640))

(assert (= (and b!77640 c!11849) b!77634))

(assert (= (and b!77640 (not c!11849)) b!77628))

(assert (= (and b!77640 res!40724) b!77642))

(assert (= (and b!77642 (not res!40728)) b!77627))

(assert (= (and b!77644 condMapEmpty!3297) mapIsEmpty!3297))

(assert (= (and b!77644 (not condMapEmpty!3297)) mapNonEmpty!3298))

(get-info :version)

(assert (= (and mapNonEmpty!3298 ((_ is ValueCellFull!911) mapValue!3297)) b!77641))

(assert (= (and b!77644 ((_ is ValueCellFull!911) mapDefault!3298)) b!77629))

(assert (= b!77645 b!77644))

(assert (= b!77631 b!77645))

(assert (= b!77637 b!77631))

(assert (= start!10188 b!77637))

(assert (= (and b!77635 condMapEmpty!3298) mapIsEmpty!3298))

(assert (= (and b!77635 (not condMapEmpty!3298)) mapNonEmpty!3297))

(assert (= (and mapNonEmpty!3297 ((_ is ValueCellFull!911) mapValue!3298)) b!77638))

(assert (= (and b!77635 ((_ is ValueCellFull!911) mapDefault!3297)) b!77633))

(assert (= b!77630 b!77635))

(assert (= start!10188 b!77630))

(declare-fun b_lambda!3469 () Bool)

(assert (=> (not b_lambda!3469) (not b!77639)))

(declare-fun t!5144 () Bool)

(declare-fun tb!1609 () Bool)

(assert (=> (and b!77645 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))) t!5144) tb!1609))

(declare-fun result!2801 () Bool)

(assert (=> tb!1609 (= result!2801 tp_is_empty!2509)))

(assert (=> b!77639 t!5144))

(declare-fun b_and!4765 () Bool)

(assert (= b_and!4761 (and (=> t!5144 result!2801) b_and!4765)))

(declare-fun t!5146 () Bool)

(declare-fun tb!1611 () Bool)

(assert (=> (and b!77630 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))) t!5146) tb!1611))

(declare-fun result!2805 () Bool)

(assert (= result!2805 result!2801))

(assert (=> b!77639 t!5146))

(declare-fun b_and!4767 () Bool)

(assert (= b_and!4763 (and (=> t!5146 result!2805) b_and!4767)))

(declare-fun m!77453 () Bool)

(assert (=> b!77645 m!77453))

(declare-fun m!77455 () Bool)

(assert (=> b!77645 m!77455))

(declare-fun m!77457 () Bool)

(assert (=> mapNonEmpty!3298 m!77457))

(declare-fun m!77459 () Bool)

(assert (=> b!77642 m!77459))

(declare-fun m!77461 () Bool)

(assert (=> b!77642 m!77461))

(declare-fun m!77463 () Bool)

(assert (=> b!77642 m!77463))

(declare-fun m!77465 () Bool)

(assert (=> b!77642 m!77465))

(declare-fun m!77467 () Bool)

(assert (=> b!77642 m!77467))

(declare-fun m!77469 () Bool)

(assert (=> b!77642 m!77469))

(declare-fun m!77471 () Bool)

(assert (=> b!77642 m!77471))

(assert (=> b!77642 m!77463))

(assert (=> b!77642 m!77463))

(declare-fun m!77473 () Bool)

(assert (=> b!77642 m!77473))

(assert (=> b!77642 m!77467))

(declare-fun m!77475 () Bool)

(assert (=> b!77642 m!77475))

(declare-fun m!77477 () Bool)

(assert (=> b!77642 m!77477))

(declare-fun m!77479 () Bool)

(assert (=> b!77642 m!77479))

(declare-fun m!77481 () Bool)

(assert (=> b!77642 m!77481))

(declare-fun m!77483 () Bool)

(assert (=> b!77643 m!77483))

(declare-fun m!77485 () Bool)

(assert (=> b!77643 m!77485))

(assert (=> b!77639 m!77463))

(declare-fun m!77487 () Bool)

(assert (=> b!77639 m!77487))

(declare-fun m!77489 () Bool)

(assert (=> b!77639 m!77489))

(assert (=> b!77639 m!77487))

(assert (=> b!77639 m!77489))

(declare-fun m!77491 () Bool)

(assert (=> b!77639 m!77491))

(declare-fun m!77493 () Bool)

(assert (=> start!10188 m!77493))

(declare-fun m!77495 () Bool)

(assert (=> b!77634 m!77495))

(declare-fun m!77497 () Bool)

(assert (=> b!77634 m!77497))

(assert (=> b!77634 m!77463))

(declare-fun m!77499 () Bool)

(assert (=> b!77634 m!77499))

(assert (=> b!77634 m!77463))

(assert (=> b!77634 m!77463))

(declare-fun m!77501 () Bool)

(assert (=> b!77634 m!77501))

(assert (=> b!77634 m!77463))

(declare-fun m!77503 () Bool)

(assert (=> b!77634 m!77503))

(declare-fun m!77505 () Bool)

(assert (=> b!77630 m!77505))

(declare-fun m!77507 () Bool)

(assert (=> b!77630 m!77507))

(assert (=> b!77640 m!77463))

(assert (=> b!77640 m!77463))

(declare-fun m!77509 () Bool)

(assert (=> b!77640 m!77509))

(assert (=> b!77640 m!77463))

(declare-fun m!77511 () Bool)

(assert (=> b!77640 m!77511))

(declare-fun m!77513 () Bool)

(assert (=> mapNonEmpty!3297 m!77513))

(declare-fun m!77515 () Bool)

(assert (=> b!77636 m!77515))

(check-sat (not b!77639) (not b_next!2187) (not b!77636) tp_is_empty!2509 (not b!77640) (not mapNonEmpty!3297) (not b!77634) (not b_next!2185) (not b!77642) b_and!4765 (not b!77630) (not mapNonEmpty!3298) (not start!10188) (not b!77645) (not b_lambda!3469) b_and!4767 (not b!77643))
(check-sat b_and!4765 b_and!4767 (not b_next!2185) (not b_next!2187))
(get-model)

(declare-fun b_lambda!3475 () Bool)

(assert (= b_lambda!3469 (or (and b!77645 b_free!2185) (and b!77630 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))) b_lambda!3475)))

(check-sat (not b!77639) (not b_next!2187) (not b!77636) (not b_lambda!3475) tp_is_empty!2509 (not b!77640) (not mapNonEmpty!3297) (not b!77634) (not b_next!2185) (not b!77642) b_and!4765 (not b!77630) (not mapNonEmpty!3298) (not start!10188) (not b!77645) b_and!4767 (not b!77643))
(check-sat b_and!4765 b_and!4767 (not b_next!2185) (not b_next!2187))
(get-model)

(declare-fun d!18349 () Bool)

(declare-fun res!40783 () Bool)

(declare-fun e!50883 () Bool)

(assert (=> d!18349 (=> (not res!40783) (not e!50883))))

(declare-fun simpleValid!55 (LongMapFixedSize!730) Bool)

(assert (=> d!18349 (= res!40783 (simpleValid!55 newMap!16))))

(assert (=> d!18349 (= (valid!321 newMap!16) e!50883)))

(declare-fun b!77778 () Bool)

(declare-fun res!40784 () Bool)

(assert (=> b!77778 (=> (not res!40784) (not e!50883))))

(declare-fun arrayCountValidKeys!0 (array!3951 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!77778 (= res!40784 (= (arrayCountValidKeys!0 (_keys!3930 newMap!16) #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (_size!414 newMap!16)))))

(declare-fun b!77779 () Bool)

(declare-fun res!40785 () Bool)

(assert (=> b!77779 (=> (not res!40785) (not e!50883))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3951 (_ BitVec 32)) Bool)

(assert (=> b!77779 (= res!40785 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(declare-fun b!77780 () Bool)

(assert (=> b!77780 (= e!50883 (arrayNoDuplicates!0 (_keys!3930 newMap!16) #b00000000000000000000000000000000 Nil!1507))))

(assert (= (and d!18349 res!40783) b!77778))

(assert (= (and b!77778 res!40784) b!77779))

(assert (= (and b!77779 res!40785) b!77780))

(declare-fun m!77645 () Bool)

(assert (=> d!18349 m!77645))

(declare-fun m!77647 () Bool)

(assert (=> b!77778 m!77647))

(declare-fun m!77649 () Bool)

(assert (=> b!77779 m!77649))

(declare-fun m!77651 () Bool)

(assert (=> b!77780 m!77651))

(assert (=> b!77636 d!18349))

(declare-fun d!18351 () Bool)

(assert (=> d!18351 (= (array_inv!1181 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvsge (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!77645 d!18351))

(declare-fun d!18353 () Bool)

(assert (=> d!18353 (= (array_inv!1182 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvsge (size!2125 (_values!2254 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!77645 d!18353))

(declare-fun d!18355 () Bool)

(declare-fun e!50886 () Bool)

(assert (=> d!18355 e!50886))

(declare-fun res!40790 () Bool)

(assert (=> d!18355 (=> (not res!40790) (not e!50886))))

(declare-fun lt!35793 () ListLongMap!1433)

(assert (=> d!18355 (= res!40790 (contains!739 lt!35793 (_1!1099 lt!35660)))))

(declare-fun lt!35791 () List!1511)

(assert (=> d!18355 (= lt!35793 (ListLongMap!1434 lt!35791))))

(declare-fun lt!35790 () Unit!2242)

(declare-fun lt!35792 () Unit!2242)

(assert (=> d!18355 (= lt!35790 lt!35792)))

(declare-datatypes ((Option!141 0))(
  ( (Some!140 (v!2590 V!2993)) (None!139) )
))
(declare-fun getValueByKey!135 (List!1511 (_ BitVec 64)) Option!141)

(assert (=> d!18355 (= (getValueByKey!135 lt!35791 (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660)))))

(declare-fun lemmaContainsTupThenGetReturnValue!55 (List!1511 (_ BitVec 64) V!2993) Unit!2242)

(assert (=> d!18355 (= lt!35792 (lemmaContainsTupThenGetReturnValue!55 lt!35791 (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(declare-fun insertStrictlySorted!58 (List!1511 (_ BitVec 64) V!2993) List!1511)

(assert (=> d!18355 (= lt!35791 (insertStrictlySorted!58 (toList!732 lt!35662) (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(assert (=> d!18355 (= (+!103 lt!35662 lt!35660) lt!35793)))

(declare-fun b!77785 () Bool)

(declare-fun res!40791 () Bool)

(assert (=> b!77785 (=> (not res!40791) (not e!50886))))

(assert (=> b!77785 (= res!40791 (= (getValueByKey!135 (toList!732 lt!35793) (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660))))))

(declare-fun b!77786 () Bool)

(declare-fun contains!740 (List!1511 tuple2!2176) Bool)

(assert (=> b!77786 (= e!50886 (contains!740 (toList!732 lt!35793) lt!35660))))

(assert (= (and d!18355 res!40790) b!77785))

(assert (= (and b!77785 res!40791) b!77786))

(declare-fun m!77653 () Bool)

(assert (=> d!18355 m!77653))

(declare-fun m!77655 () Bool)

(assert (=> d!18355 m!77655))

(declare-fun m!77657 () Bool)

(assert (=> d!18355 m!77657))

(declare-fun m!77659 () Bool)

(assert (=> d!18355 m!77659))

(declare-fun m!77661 () Bool)

(assert (=> b!77785 m!77661))

(declare-fun m!77663 () Bool)

(assert (=> b!77786 m!77663))

(assert (=> b!77642 d!18355))

(declare-fun d!18357 () Bool)

(declare-fun e!50887 () Bool)

(assert (=> d!18357 e!50887))

(declare-fun res!40792 () Bool)

(assert (=> d!18357 (=> (not res!40792) (not e!50887))))

(declare-fun lt!35797 () ListLongMap!1433)

(assert (=> d!18357 (= res!40792 (contains!739 lt!35797 (_1!1099 lt!35660)))))

(declare-fun lt!35795 () List!1511)

(assert (=> d!18357 (= lt!35797 (ListLongMap!1434 lt!35795))))

(declare-fun lt!35794 () Unit!2242)

(declare-fun lt!35796 () Unit!2242)

(assert (=> d!18357 (= lt!35794 lt!35796)))

(assert (=> d!18357 (= (getValueByKey!135 lt!35795 (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660)))))

(assert (=> d!18357 (= lt!35796 (lemmaContainsTupThenGetReturnValue!55 lt!35795 (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(assert (=> d!18357 (= lt!35795 (insertStrictlySorted!58 (toList!732 (+!103 lt!35662 lt!35659)) (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(assert (=> d!18357 (= (+!103 (+!103 lt!35662 lt!35659) lt!35660) lt!35797)))

(declare-fun b!77787 () Bool)

(declare-fun res!40793 () Bool)

(assert (=> b!77787 (=> (not res!40793) (not e!50887))))

(assert (=> b!77787 (= res!40793 (= (getValueByKey!135 (toList!732 lt!35797) (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660))))))

(declare-fun b!77788 () Bool)

(assert (=> b!77788 (= e!50887 (contains!740 (toList!732 lt!35797) lt!35660))))

(assert (= (and d!18357 res!40792) b!77787))

(assert (= (and b!77787 res!40793) b!77788))

(declare-fun m!77665 () Bool)

(assert (=> d!18357 m!77665))

(declare-fun m!77667 () Bool)

(assert (=> d!18357 m!77667))

(declare-fun m!77669 () Bool)

(assert (=> d!18357 m!77669))

(declare-fun m!77671 () Bool)

(assert (=> d!18357 m!77671))

(declare-fun m!77673 () Bool)

(assert (=> b!77787 m!77673))

(declare-fun m!77675 () Bool)

(assert (=> b!77788 m!77675))

(assert (=> b!77642 d!18357))

(declare-fun d!18359 () Bool)

(declare-fun e!50888 () Bool)

(assert (=> d!18359 e!50888))

(declare-fun res!40794 () Bool)

(assert (=> d!18359 (=> (not res!40794) (not e!50888))))

(declare-fun lt!35801 () ListLongMap!1433)

(assert (=> d!18359 (= res!40794 (contains!739 lt!35801 (_1!1099 lt!35659)))))

(declare-fun lt!35799 () List!1511)

(assert (=> d!18359 (= lt!35801 (ListLongMap!1434 lt!35799))))

(declare-fun lt!35798 () Unit!2242)

(declare-fun lt!35800 () Unit!2242)

(assert (=> d!18359 (= lt!35798 lt!35800)))

(assert (=> d!18359 (= (getValueByKey!135 lt!35799 (_1!1099 lt!35659)) (Some!140 (_2!1099 lt!35659)))))

(assert (=> d!18359 (= lt!35800 (lemmaContainsTupThenGetReturnValue!55 lt!35799 (_1!1099 lt!35659) (_2!1099 lt!35659)))))

(assert (=> d!18359 (= lt!35799 (insertStrictlySorted!58 (toList!732 lt!35663) (_1!1099 lt!35659) (_2!1099 lt!35659)))))

(assert (=> d!18359 (= (+!103 lt!35663 lt!35659) lt!35801)))

(declare-fun b!77789 () Bool)

(declare-fun res!40795 () Bool)

(assert (=> b!77789 (=> (not res!40795) (not e!50888))))

(assert (=> b!77789 (= res!40795 (= (getValueByKey!135 (toList!732 lt!35801) (_1!1099 lt!35659)) (Some!140 (_2!1099 lt!35659))))))

(declare-fun b!77790 () Bool)

(assert (=> b!77790 (= e!50888 (contains!740 (toList!732 lt!35801) lt!35659))))

(assert (= (and d!18359 res!40794) b!77789))

(assert (= (and b!77789 res!40795) b!77790))

(declare-fun m!77677 () Bool)

(assert (=> d!18359 m!77677))

(declare-fun m!77679 () Bool)

(assert (=> d!18359 m!77679))

(declare-fun m!77681 () Bool)

(assert (=> d!18359 m!77681))

(declare-fun m!77683 () Bool)

(assert (=> d!18359 m!77683))

(declare-fun m!77685 () Bool)

(assert (=> b!77789 m!77685))

(declare-fun m!77687 () Bool)

(assert (=> b!77790 m!77687))

(assert (=> b!77642 d!18359))

(declare-fun d!18361 () Bool)

(declare-fun e!50889 () Bool)

(assert (=> d!18361 e!50889))

(declare-fun res!40796 () Bool)

(assert (=> d!18361 (=> (not res!40796) (not e!50889))))

(declare-fun lt!35805 () ListLongMap!1433)

(assert (=> d!18361 (= res!40796 (contains!739 lt!35805 (_1!1099 lt!35660)))))

(declare-fun lt!35803 () List!1511)

(assert (=> d!18361 (= lt!35805 (ListLongMap!1434 lt!35803))))

(declare-fun lt!35802 () Unit!2242)

(declare-fun lt!35804 () Unit!2242)

(assert (=> d!18361 (= lt!35802 lt!35804)))

(assert (=> d!18361 (= (getValueByKey!135 lt!35803 (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660)))))

(assert (=> d!18361 (= lt!35804 (lemmaContainsTupThenGetReturnValue!55 lt!35803 (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(assert (=> d!18361 (= lt!35803 (insertStrictlySorted!58 (toList!732 lt!35657) (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(assert (=> d!18361 (= (+!103 lt!35657 lt!35660) lt!35805)))

(declare-fun b!77791 () Bool)

(declare-fun res!40797 () Bool)

(assert (=> b!77791 (=> (not res!40797) (not e!50889))))

(assert (=> b!77791 (= res!40797 (= (getValueByKey!135 (toList!732 lt!35805) (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660))))))

(declare-fun b!77792 () Bool)

(assert (=> b!77792 (= e!50889 (contains!740 (toList!732 lt!35805) lt!35660))))

(assert (= (and d!18361 res!40796) b!77791))

(assert (= (and b!77791 res!40797) b!77792))

(declare-fun m!77689 () Bool)

(assert (=> d!18361 m!77689))

(declare-fun m!77691 () Bool)

(assert (=> d!18361 m!77691))

(declare-fun m!77693 () Bool)

(assert (=> d!18361 m!77693))

(declare-fun m!77695 () Bool)

(assert (=> d!18361 m!77695))

(declare-fun m!77697 () Bool)

(assert (=> b!77791 m!77697))

(declare-fun m!77699 () Bool)

(assert (=> b!77792 m!77699))

(assert (=> b!77642 d!18361))

(declare-fun d!18363 () Bool)

(assert (=> d!18363 (= (+!103 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (+!103 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun lt!35808 () Unit!2242)

(declare-fun choose!460 (ListLongMap!1433 (_ BitVec 64) V!2993 (_ BitVec 64) V!2993) Unit!2242)

(assert (=> d!18363 (= lt!35808 (choose!460 lt!35657 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))

(assert (=> d!18363 (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18363 (= (addCommutativeForDiffKeys!22 lt!35657 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) lt!35808)))

(declare-fun bs!3292 () Bool)

(assert (= bs!3292 d!18363))

(declare-fun m!77701 () Bool)

(assert (=> bs!3292 m!77701))

(assert (=> bs!3292 m!77701))

(declare-fun m!77703 () Bool)

(assert (=> bs!3292 m!77703))

(assert (=> bs!3292 m!77463))

(declare-fun m!77705 () Bool)

(assert (=> bs!3292 m!77705))

(declare-fun m!77707 () Bool)

(assert (=> bs!3292 m!77707))

(declare-fun m!77709 () Bool)

(assert (=> bs!3292 m!77709))

(assert (=> bs!3292 m!77707))

(assert (=> b!77642 d!18363))

(declare-fun d!18365 () Bool)

(declare-fun e!50890 () Bool)

(assert (=> d!18365 e!50890))

(declare-fun res!40798 () Bool)

(assert (=> d!18365 (=> (not res!40798) (not e!50890))))

(declare-fun lt!35812 () ListLongMap!1433)

(assert (=> d!18365 (= res!40798 (contains!739 lt!35812 (_1!1099 lt!35670)))))

(declare-fun lt!35810 () List!1511)

(assert (=> d!18365 (= lt!35812 (ListLongMap!1434 lt!35810))))

(declare-fun lt!35809 () Unit!2242)

(declare-fun lt!35811 () Unit!2242)

(assert (=> d!18365 (= lt!35809 lt!35811)))

(assert (=> d!18365 (= (getValueByKey!135 lt!35810 (_1!1099 lt!35670)) (Some!140 (_2!1099 lt!35670)))))

(assert (=> d!18365 (= lt!35811 (lemmaContainsTupThenGetReturnValue!55 lt!35810 (_1!1099 lt!35670) (_2!1099 lt!35670)))))

(assert (=> d!18365 (= lt!35810 (insertStrictlySorted!58 (toList!732 lt!35657) (_1!1099 lt!35670) (_2!1099 lt!35670)))))

(assert (=> d!18365 (= (+!103 lt!35657 lt!35670) lt!35812)))

(declare-fun b!77793 () Bool)

(declare-fun res!40799 () Bool)

(assert (=> b!77793 (=> (not res!40799) (not e!50890))))

(assert (=> b!77793 (= res!40799 (= (getValueByKey!135 (toList!732 lt!35812) (_1!1099 lt!35670)) (Some!140 (_2!1099 lt!35670))))))

(declare-fun b!77794 () Bool)

(assert (=> b!77794 (= e!50890 (contains!740 (toList!732 lt!35812) lt!35670))))

(assert (= (and d!18365 res!40798) b!77793))

(assert (= (and b!77793 res!40799) b!77794))

(declare-fun m!77711 () Bool)

(assert (=> d!18365 m!77711))

(declare-fun m!77713 () Bool)

(assert (=> d!18365 m!77713))

(declare-fun m!77715 () Bool)

(assert (=> d!18365 m!77715))

(declare-fun m!77717 () Bool)

(assert (=> d!18365 m!77717))

(declare-fun m!77719 () Bool)

(assert (=> b!77793 m!77719))

(declare-fun m!77721 () Bool)

(assert (=> b!77794 m!77721))

(assert (=> b!77642 d!18365))

(declare-fun d!18367 () Bool)

(assert (=> d!18367 (= (validMask!0 (mask!6266 (v!2584 (underlying!273 thiss!992)))) (and (or (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000001111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000011111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000001111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000011111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000001111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000011111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000001111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000011111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000001111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000011111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000001111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000011111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000111111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000001111111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000011111111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000111111111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000001111111111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000011111111111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000111111111111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00001111111111111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00011111111111111111111111111111) (= (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!77642 d!18367))

(declare-fun d!18369 () Bool)

(assert (=> d!18369 (= (+!103 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (+!103 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun lt!35813 () Unit!2242)

(assert (=> d!18369 (= lt!35813 (choose!460 lt!35662 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))

(assert (=> d!18369 (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18369 (= (addCommutativeForDiffKeys!22 lt!35662 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))) lt!35813)))

(declare-fun bs!3293 () Bool)

(assert (= bs!3293 d!18369))

(declare-fun m!77723 () Bool)

(assert (=> bs!3293 m!77723))

(assert (=> bs!3293 m!77723))

(declare-fun m!77725 () Bool)

(assert (=> bs!3293 m!77725))

(assert (=> bs!3293 m!77463))

(declare-fun m!77727 () Bool)

(assert (=> bs!3293 m!77727))

(declare-fun m!77729 () Bool)

(assert (=> bs!3293 m!77729))

(declare-fun m!77731 () Bool)

(assert (=> bs!3293 m!77731))

(assert (=> bs!3293 m!77729))

(assert (=> b!77642 d!18369))

(declare-fun d!18371 () Bool)

(declare-fun e!50891 () Bool)

(assert (=> d!18371 e!50891))

(declare-fun res!40800 () Bool)

(assert (=> d!18371 (=> (not res!40800) (not e!50891))))

(declare-fun lt!35817 () ListLongMap!1433)

(assert (=> d!18371 (= res!40800 (contains!739 lt!35817 (_1!1099 lt!35670)))))

(declare-fun lt!35815 () List!1511)

(assert (=> d!18371 (= lt!35817 (ListLongMap!1434 lt!35815))))

(declare-fun lt!35814 () Unit!2242)

(declare-fun lt!35816 () Unit!2242)

(assert (=> d!18371 (= lt!35814 lt!35816)))

(assert (=> d!18371 (= (getValueByKey!135 lt!35815 (_1!1099 lt!35670)) (Some!140 (_2!1099 lt!35670)))))

(assert (=> d!18371 (= lt!35816 (lemmaContainsTupThenGetReturnValue!55 lt!35815 (_1!1099 lt!35670) (_2!1099 lt!35670)))))

(assert (=> d!18371 (= lt!35815 (insertStrictlySorted!58 (toList!732 lt!35668) (_1!1099 lt!35670) (_2!1099 lt!35670)))))

(assert (=> d!18371 (= (+!103 lt!35668 lt!35670) lt!35817)))

(declare-fun b!77795 () Bool)

(declare-fun res!40801 () Bool)

(assert (=> b!77795 (=> (not res!40801) (not e!50891))))

(assert (=> b!77795 (= res!40801 (= (getValueByKey!135 (toList!732 lt!35817) (_1!1099 lt!35670)) (Some!140 (_2!1099 lt!35670))))))

(declare-fun b!77796 () Bool)

(assert (=> b!77796 (= e!50891 (contains!740 (toList!732 lt!35817) lt!35670))))

(assert (= (and d!18371 res!40800) b!77795))

(assert (= (and b!77795 res!40801) b!77796))

(declare-fun m!77733 () Bool)

(assert (=> d!18371 m!77733))

(declare-fun m!77735 () Bool)

(assert (=> d!18371 m!77735))

(declare-fun m!77737 () Bool)

(assert (=> d!18371 m!77737))

(declare-fun m!77739 () Bool)

(assert (=> d!18371 m!77739))

(declare-fun m!77741 () Bool)

(assert (=> b!77795 m!77741))

(declare-fun m!77743 () Bool)

(assert (=> b!77796 m!77743))

(assert (=> b!77642 d!18371))

(declare-fun b!77821 () Bool)

(assert (=> b!77821 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> b!77821 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2125 (_values!2254 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!50908 () Bool)

(declare-fun lt!35837 () ListLongMap!1433)

(declare-fun apply!79 (ListLongMap!1433 (_ BitVec 64)) V!2993)

(assert (=> b!77821 (= e!50908 (= (apply!79 lt!35837 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!77823 () Bool)

(declare-fun lt!35832 () Unit!2242)

(declare-fun lt!35833 () Unit!2242)

(assert (=> b!77823 (= lt!35832 lt!35833)))

(declare-fun lt!35838 () (_ BitVec 64))

(declare-fun lt!35836 () ListLongMap!1433)

(declare-fun lt!35834 () V!2993)

(declare-fun lt!35835 () (_ BitVec 64))

(assert (=> b!77823 (not (contains!739 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)) lt!35835))))

(declare-fun addStillNotContains!29 (ListLongMap!1433 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2242)

(assert (=> b!77823 (= lt!35833 (addStillNotContains!29 lt!35836 lt!35838 lt!35834 lt!35835))))

(assert (=> b!77823 (= lt!35835 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!77823 (= lt!35834 (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!77823 (= lt!35838 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!7058 () ListLongMap!1433)

(assert (=> b!77823 (= lt!35836 call!7058)))

(declare-fun e!50911 () ListLongMap!1433)

(assert (=> b!77823 (= e!50911 (+!103 call!7058 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7055 () Bool)

(assert (=> bm!7055 (= call!7058 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun b!77824 () Bool)

(declare-fun e!50912 () ListLongMap!1433)

(assert (=> b!77824 (= e!50912 e!50911)))

(declare-fun c!11867 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!77824 (= c!11867 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!50909 () Bool)

(declare-fun b!77825 () Bool)

(assert (=> b!77825 (= e!50909 (= lt!35837 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!77826 () Bool)

(declare-fun e!50906 () Bool)

(assert (=> b!77826 (= e!50906 e!50908)))

(assert (=> b!77826 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun res!40813 () Bool)

(assert (=> b!77826 (= res!40813 (contains!739 lt!35837 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!77826 (=> (not res!40813) (not e!50908))))

(declare-fun b!77827 () Bool)

(assert (=> b!77827 (= e!50912 (ListLongMap!1434 Nil!1508))))

(declare-fun b!77828 () Bool)

(assert (=> b!77828 (= e!50911 call!7058)))

(declare-fun b!77829 () Bool)

(declare-fun e!50910 () Bool)

(assert (=> b!77829 (= e!50910 e!50906)))

(declare-fun c!11865 () Bool)

(declare-fun e!50907 () Bool)

(assert (=> b!77829 (= c!11865 e!50907)))

(declare-fun res!40811 () Bool)

(assert (=> b!77829 (=> (not res!40811) (not e!50907))))

(assert (=> b!77829 (= res!40811 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!77830 () Bool)

(declare-fun res!40810 () Bool)

(assert (=> b!77830 (=> (not res!40810) (not e!50910))))

(assert (=> b!77830 (= res!40810 (not (contains!739 lt!35837 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!18373 () Bool)

(assert (=> d!18373 e!50910))

(declare-fun res!40812 () Bool)

(assert (=> d!18373 (=> (not res!40812) (not e!50910))))

(assert (=> d!18373 (= res!40812 (not (contains!739 lt!35837 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18373 (= lt!35837 e!50912)))

(declare-fun c!11866 () Bool)

(assert (=> d!18373 (= c!11866 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!18373 (validMask!0 (mask!6266 (v!2584 (underlying!273 thiss!992))))))

(assert (=> d!18373 (= (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))) lt!35837)))

(declare-fun b!77822 () Bool)

(assert (=> b!77822 (= e!50906 e!50909)))

(declare-fun c!11864 () Bool)

(assert (=> b!77822 (= c!11864 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!77831 () Bool)

(declare-fun isEmpty!330 (ListLongMap!1433) Bool)

(assert (=> b!77831 (= e!50909 (isEmpty!330 lt!35837))))

(declare-fun b!77832 () Bool)

(assert (=> b!77832 (= e!50907 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!77832 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(assert (= (and d!18373 c!11866) b!77827))

(assert (= (and d!18373 (not c!11866)) b!77824))

(assert (= (and b!77824 c!11867) b!77823))

(assert (= (and b!77824 (not c!11867)) b!77828))

(assert (= (or b!77823 b!77828) bm!7055))

(assert (= (and d!18373 res!40812) b!77830))

(assert (= (and b!77830 res!40810) b!77829))

(assert (= (and b!77829 res!40811) b!77832))

(assert (= (and b!77829 c!11865) b!77826))

(assert (= (and b!77829 (not c!11865)) b!77822))

(assert (= (and b!77826 res!40813) b!77821))

(assert (= (and b!77822 c!11864) b!77825))

(assert (= (and b!77822 (not c!11864)) b!77831))

(declare-fun b_lambda!3477 () Bool)

(assert (=> (not b_lambda!3477) (not b!77821)))

(assert (=> b!77821 t!5144))

(declare-fun b_and!4785 () Bool)

(assert (= b_and!4765 (and (=> t!5144 result!2801) b_and!4785)))

(assert (=> b!77821 t!5146))

(declare-fun b_and!4787 () Bool)

(assert (= b_and!4767 (and (=> t!5146 result!2805) b_and!4787)))

(declare-fun b_lambda!3479 () Bool)

(assert (=> (not b_lambda!3479) (not b!77823)))

(assert (=> b!77823 t!5144))

(declare-fun b_and!4789 () Bool)

(assert (= b_and!4785 (and (=> t!5144 result!2801) b_and!4789)))

(assert (=> b!77823 t!5146))

(declare-fun b_and!4791 () Bool)

(assert (= b_and!4787 (and (=> t!5146 result!2805) b_and!4791)))

(declare-fun m!77745 () Bool)

(assert (=> b!77830 m!77745))

(declare-fun m!77747 () Bool)

(assert (=> b!77824 m!77747))

(assert (=> b!77824 m!77747))

(declare-fun m!77749 () Bool)

(assert (=> b!77824 m!77749))

(assert (=> b!77821 m!77489))

(declare-fun m!77751 () Bool)

(assert (=> b!77821 m!77751))

(assert (=> b!77821 m!77747))

(assert (=> b!77821 m!77751))

(assert (=> b!77821 m!77489))

(declare-fun m!77753 () Bool)

(assert (=> b!77821 m!77753))

(assert (=> b!77821 m!77747))

(declare-fun m!77755 () Bool)

(assert (=> b!77821 m!77755))

(declare-fun m!77757 () Bool)

(assert (=> bm!7055 m!77757))

(declare-fun m!77759 () Bool)

(assert (=> d!18373 m!77759))

(assert (=> d!18373 m!77475))

(assert (=> b!77832 m!77747))

(assert (=> b!77832 m!77747))

(assert (=> b!77832 m!77749))

(assert (=> b!77823 m!77489))

(declare-fun m!77761 () Bool)

(assert (=> b!77823 m!77761))

(assert (=> b!77823 m!77761))

(declare-fun m!77763 () Bool)

(assert (=> b!77823 m!77763))

(assert (=> b!77823 m!77751))

(declare-fun m!77765 () Bool)

(assert (=> b!77823 m!77765))

(declare-fun m!77767 () Bool)

(assert (=> b!77823 m!77767))

(assert (=> b!77823 m!77751))

(assert (=> b!77823 m!77489))

(assert (=> b!77823 m!77753))

(assert (=> b!77823 m!77747))

(assert (=> b!77826 m!77747))

(assert (=> b!77826 m!77747))

(declare-fun m!77769 () Bool)

(assert (=> b!77826 m!77769))

(declare-fun m!77771 () Bool)

(assert (=> b!77831 m!77771))

(assert (=> b!77825 m!77757))

(assert (=> b!77642 d!18373))

(declare-fun d!18375 () Bool)

(declare-fun e!50913 () Bool)

(assert (=> d!18375 e!50913))

(declare-fun res!40814 () Bool)

(assert (=> d!18375 (=> (not res!40814) (not e!50913))))

(declare-fun lt!35842 () ListLongMap!1433)

(assert (=> d!18375 (= res!40814 (contains!739 lt!35842 (_1!1099 lt!35659)))))

(declare-fun lt!35840 () List!1511)

(assert (=> d!18375 (= lt!35842 (ListLongMap!1434 lt!35840))))

(declare-fun lt!35839 () Unit!2242)

(declare-fun lt!35841 () Unit!2242)

(assert (=> d!18375 (= lt!35839 lt!35841)))

(assert (=> d!18375 (= (getValueByKey!135 lt!35840 (_1!1099 lt!35659)) (Some!140 (_2!1099 lt!35659)))))

(assert (=> d!18375 (= lt!35841 (lemmaContainsTupThenGetReturnValue!55 lt!35840 (_1!1099 lt!35659) (_2!1099 lt!35659)))))

(assert (=> d!18375 (= lt!35840 (insertStrictlySorted!58 (toList!732 lt!35662) (_1!1099 lt!35659) (_2!1099 lt!35659)))))

(assert (=> d!18375 (= (+!103 lt!35662 lt!35659) lt!35842)))

(declare-fun b!77833 () Bool)

(declare-fun res!40815 () Bool)

(assert (=> b!77833 (=> (not res!40815) (not e!50913))))

(assert (=> b!77833 (= res!40815 (= (getValueByKey!135 (toList!732 lt!35842) (_1!1099 lt!35659)) (Some!140 (_2!1099 lt!35659))))))

(declare-fun b!77834 () Bool)

(assert (=> b!77834 (= e!50913 (contains!740 (toList!732 lt!35842) lt!35659))))

(assert (= (and d!18375 res!40814) b!77833))

(assert (= (and b!77833 res!40815) b!77834))

(declare-fun m!77773 () Bool)

(assert (=> d!18375 m!77773))

(declare-fun m!77775 () Bool)

(assert (=> d!18375 m!77775))

(declare-fun m!77777 () Bool)

(assert (=> d!18375 m!77777))

(declare-fun m!77779 () Bool)

(assert (=> d!18375 m!77779))

(declare-fun m!77781 () Bool)

(assert (=> b!77833 m!77781))

(declare-fun m!77783 () Bool)

(assert (=> b!77834 m!77783))

(assert (=> b!77642 d!18375))

(declare-fun d!18377 () Bool)

(assert (=> d!18377 (= (valid!322 thiss!992) (valid!321 (v!2584 (underlying!273 thiss!992))))))

(declare-fun bs!3294 () Bool)

(assert (= bs!3294 d!18377))

(declare-fun m!77785 () Bool)

(assert (=> bs!3294 m!77785))

(assert (=> start!10188 d!18377))

(declare-fun d!18379 () Bool)

(assert (=> d!18379 (= (map!1173 newMap!16) (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun bs!3295 () Bool)

(assert (= bs!3295 d!18379))

(declare-fun m!77787 () Bool)

(assert (=> bs!3295 m!77787))

(assert (=> b!77643 d!18379))

(declare-fun lt!35901 () ListLongMap!1433)

(declare-fun b!77877 () Bool)

(declare-fun e!50950 () Bool)

(assert (=> b!77877 (= e!50950 (= (apply!79 lt!35901 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!77877 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2125 (_values!2254 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> b!77877 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!77878 () Bool)

(declare-fun c!11881 () Bool)

(assert (=> b!77878 (= c!11881 (and (not (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!50949 () ListLongMap!1433)

(declare-fun e!50942 () ListLongMap!1433)

(assert (=> b!77878 (= e!50949 e!50942)))

(declare-fun b!77879 () Bool)

(declare-fun e!50948 () Bool)

(assert (=> b!77879 (= e!50948 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!77880 () Bool)

(declare-fun e!50947 () Unit!2242)

(declare-fun lt!35904 () Unit!2242)

(assert (=> b!77880 (= e!50947 lt!35904)))

(declare-fun lt!35891 () ListLongMap!1433)

(assert (=> b!77880 (= lt!35891 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun lt!35887 () (_ BitVec 64))

(assert (=> b!77880 (= lt!35887 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35898 () (_ BitVec 64))

(assert (=> b!77880 (= lt!35898 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35892 () Unit!2242)

(declare-fun addStillContains!55 (ListLongMap!1433 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2242)

(assert (=> b!77880 (= lt!35892 (addStillContains!55 lt!35891 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35898))))

(assert (=> b!77880 (contains!739 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35898)))

(declare-fun lt!35889 () Unit!2242)

(assert (=> b!77880 (= lt!35889 lt!35892)))

(declare-fun lt!35890 () ListLongMap!1433)

(assert (=> b!77880 (= lt!35890 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun lt!35899 () (_ BitVec 64))

(assert (=> b!77880 (= lt!35899 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35896 () (_ BitVec 64))

(assert (=> b!77880 (= lt!35896 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35897 () Unit!2242)

(declare-fun addApplyDifferent!55 (ListLongMap!1433 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2242)

(assert (=> b!77880 (= lt!35897 (addApplyDifferent!55 lt!35890 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35896))))

(assert (=> b!77880 (= (apply!79 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35896) (apply!79 lt!35890 lt!35896))))

(declare-fun lt!35888 () Unit!2242)

(assert (=> b!77880 (= lt!35888 lt!35897)))

(declare-fun lt!35895 () ListLongMap!1433)

(assert (=> b!77880 (= lt!35895 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun lt!35908 () (_ BitVec 64))

(assert (=> b!77880 (= lt!35908 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35906 () (_ BitVec 64))

(assert (=> b!77880 (= lt!35906 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35907 () Unit!2242)

(assert (=> b!77880 (= lt!35907 (addApplyDifferent!55 lt!35895 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35906))))

(assert (=> b!77880 (= (apply!79 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35906) (apply!79 lt!35895 lt!35906))))

(declare-fun lt!35900 () Unit!2242)

(assert (=> b!77880 (= lt!35900 lt!35907)))

(declare-fun lt!35902 () ListLongMap!1433)

(assert (=> b!77880 (= lt!35902 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun lt!35903 () (_ BitVec 64))

(assert (=> b!77880 (= lt!35903 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35905 () (_ BitVec 64))

(assert (=> b!77880 (= lt!35905 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!77880 (= lt!35904 (addApplyDifferent!55 lt!35902 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35905))))

(assert (=> b!77880 (= (apply!79 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35905) (apply!79 lt!35902 lt!35905))))

(declare-fun b!77882 () Bool)

(declare-fun e!50941 () Bool)

(declare-fun e!50943 () Bool)

(assert (=> b!77882 (= e!50941 e!50943)))

(declare-fun res!40836 () Bool)

(declare-fun call!7078 () Bool)

(assert (=> b!77882 (= res!40836 call!7078)))

(assert (=> b!77882 (=> (not res!40836) (not e!50943))))

(declare-fun bm!7070 () Bool)

(declare-fun call!7073 () ListLongMap!1433)

(declare-fun call!7077 () ListLongMap!1433)

(assert (=> bm!7070 (= call!7073 call!7077)))

(declare-fun b!77883 () Bool)

(assert (=> b!77883 (= e!50941 (not call!7078))))

(declare-fun b!77884 () Bool)

(declare-fun e!50946 () ListLongMap!1433)

(assert (=> b!77884 (= e!50946 e!50949)))

(declare-fun c!11882 () Bool)

(assert (=> b!77884 (= c!11882 (and (not (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!77885 () Bool)

(declare-fun call!7074 () ListLongMap!1433)

(assert (=> b!77885 (= e!50942 call!7074)))

(declare-fun b!77886 () Bool)

(declare-fun call!7076 () ListLongMap!1433)

(assert (=> b!77886 (= e!50942 call!7076)))

(declare-fun b!77887 () Bool)

(declare-fun res!40841 () Bool)

(declare-fun e!50952 () Bool)

(assert (=> b!77887 (=> (not res!40841) (not e!50952))))

(declare-fun e!50940 () Bool)

(assert (=> b!77887 (= res!40841 e!50940)))

(declare-fun c!11880 () Bool)

(assert (=> b!77887 (= c!11880 (not (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7071 () Bool)

(declare-fun call!7075 () Bool)

(assert (=> bm!7071 (= call!7075 (contains!739 lt!35901 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7072 () Bool)

(assert (=> bm!7072 (= call!7078 (contains!739 lt!35901 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7073 () Bool)

(assert (=> bm!7073 (= call!7077 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun b!77888 () Bool)

(declare-fun e!50951 () Bool)

(assert (=> b!77888 (= e!50951 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!7074 () Bool)

(assert (=> bm!7074 (= call!7076 call!7073)))

(declare-fun b!77889 () Bool)

(declare-fun e!50945 () Bool)

(assert (=> b!77889 (= e!50945 (= (apply!79 lt!35901 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun b!77890 () Bool)

(declare-fun res!40842 () Bool)

(assert (=> b!77890 (=> (not res!40842) (not e!50952))))

(declare-fun e!50944 () Bool)

(assert (=> b!77890 (= res!40842 e!50944)))

(declare-fun res!40839 () Bool)

(assert (=> b!77890 (=> res!40839 e!50944)))

(assert (=> b!77890 (= res!40839 (not e!50951))))

(declare-fun res!40835 () Bool)

(assert (=> b!77890 (=> (not res!40835) (not e!50951))))

(assert (=> b!77890 (= res!40835 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!77881 () Bool)

(declare-fun call!7079 () ListLongMap!1433)

(assert (=> b!77881 (= e!50946 (+!103 call!7079 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun d!18381 () Bool)

(assert (=> d!18381 e!50952))

(declare-fun res!40838 () Bool)

(assert (=> d!18381 (=> (not res!40838) (not e!50952))))

(assert (=> d!18381 (= res!40838 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun lt!35893 () ListLongMap!1433)

(assert (=> d!18381 (= lt!35901 lt!35893)))

(declare-fun lt!35894 () Unit!2242)

(assert (=> d!18381 (= lt!35894 e!50947)))

(declare-fun c!11883 () Bool)

(assert (=> d!18381 (= c!11883 e!50948)))

(declare-fun res!40840 () Bool)

(assert (=> d!18381 (=> (not res!40840) (not e!50948))))

(assert (=> d!18381 (= res!40840 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!18381 (= lt!35893 e!50946)))

(declare-fun c!11884 () Bool)

(assert (=> d!18381 (= c!11884 (and (not (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18381 (validMask!0 (mask!6266 (v!2584 (underlying!273 thiss!992))))))

(assert (=> d!18381 (= (getCurrentListMap!421 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))) lt!35901)))

(declare-fun b!77891 () Bool)

(assert (=> b!77891 (= e!50940 (not call!7075))))

(declare-fun bm!7075 () Bool)

(assert (=> bm!7075 (= call!7079 (+!103 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076)) (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!77892 () Bool)

(assert (=> b!77892 (= e!50949 call!7074)))

(declare-fun bm!7076 () Bool)

(assert (=> bm!7076 (= call!7074 call!7079)))

(declare-fun b!77893 () Bool)

(assert (=> b!77893 (= e!50944 e!50950)))

(declare-fun res!40837 () Bool)

(assert (=> b!77893 (=> (not res!40837) (not e!50950))))

(assert (=> b!77893 (= res!40837 (contains!739 lt!35901 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!77893 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!77894 () Bool)

(assert (=> b!77894 (= e!50940 e!50945)))

(declare-fun res!40834 () Bool)

(assert (=> b!77894 (= res!40834 call!7075)))

(assert (=> b!77894 (=> (not res!40834) (not e!50945))))

(declare-fun b!77895 () Bool)

(assert (=> b!77895 (= e!50952 e!50941)))

(declare-fun c!11885 () Bool)

(assert (=> b!77895 (= c!11885 (not (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!77896 () Bool)

(declare-fun Unit!2250 () Unit!2242)

(assert (=> b!77896 (= e!50947 Unit!2250)))

(declare-fun b!77897 () Bool)

(assert (=> b!77897 (= e!50943 (= (apply!79 lt!35901 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))

(assert (= (and d!18381 c!11884) b!77881))

(assert (= (and d!18381 (not c!11884)) b!77884))

(assert (= (and b!77884 c!11882) b!77892))

(assert (= (and b!77884 (not c!11882)) b!77878))

(assert (= (and b!77878 c!11881) b!77885))

(assert (= (and b!77878 (not c!11881)) b!77886))

(assert (= (or b!77885 b!77886) bm!7074))

(assert (= (or b!77892 bm!7074) bm!7070))

(assert (= (or b!77892 b!77885) bm!7076))

(assert (= (or b!77881 bm!7070) bm!7073))

(assert (= (or b!77881 bm!7076) bm!7075))

(assert (= (and d!18381 res!40840) b!77879))

(assert (= (and d!18381 c!11883) b!77880))

(assert (= (and d!18381 (not c!11883)) b!77896))

(assert (= (and d!18381 res!40838) b!77890))

(assert (= (and b!77890 res!40835) b!77888))

(assert (= (and b!77890 (not res!40839)) b!77893))

(assert (= (and b!77893 res!40837) b!77877))

(assert (= (and b!77890 res!40842) b!77887))

(assert (= (and b!77887 c!11880) b!77894))

(assert (= (and b!77887 (not c!11880)) b!77891))

(assert (= (and b!77894 res!40834) b!77889))

(assert (= (or b!77894 b!77891) bm!7071))

(assert (= (and b!77887 res!40841) b!77895))

(assert (= (and b!77895 c!11885) b!77882))

(assert (= (and b!77895 (not c!11885)) b!77883))

(assert (= (and b!77882 res!40836) b!77897))

(assert (= (or b!77882 b!77883) bm!7072))

(declare-fun b_lambda!3481 () Bool)

(assert (=> (not b_lambda!3481) (not b!77877)))

(assert (=> b!77877 t!5144))

(declare-fun b_and!4793 () Bool)

(assert (= b_and!4789 (and (=> t!5144 result!2801) b_and!4793)))

(assert (=> b!77877 t!5146))

(declare-fun b_and!4795 () Bool)

(assert (= b_and!4791 (and (=> t!5146 result!2805) b_and!4795)))

(declare-fun m!77789 () Bool)

(assert (=> b!77889 m!77789))

(declare-fun m!77791 () Bool)

(assert (=> b!77880 m!77791))

(declare-fun m!77793 () Bool)

(assert (=> b!77880 m!77793))

(declare-fun m!77795 () Bool)

(assert (=> b!77880 m!77795))

(declare-fun m!77797 () Bool)

(assert (=> b!77880 m!77797))

(declare-fun m!77799 () Bool)

(assert (=> b!77880 m!77799))

(declare-fun m!77801 () Bool)

(assert (=> b!77880 m!77801))

(declare-fun m!77803 () Bool)

(assert (=> b!77880 m!77803))

(declare-fun m!77805 () Bool)

(assert (=> b!77880 m!77805))

(assert (=> b!77880 m!77481))

(declare-fun m!77807 () Bool)

(assert (=> b!77880 m!77807))

(declare-fun m!77809 () Bool)

(assert (=> b!77880 m!77809))

(declare-fun m!77811 () Bool)

(assert (=> b!77880 m!77811))

(declare-fun m!77813 () Bool)

(assert (=> b!77880 m!77813))

(assert (=> b!77880 m!77809))

(assert (=> b!77880 m!77807))

(declare-fun m!77815 () Bool)

(assert (=> b!77880 m!77815))

(assert (=> b!77880 m!77747))

(assert (=> b!77880 m!77795))

(declare-fun m!77817 () Bool)

(assert (=> b!77880 m!77817))

(assert (=> b!77880 m!77805))

(declare-fun m!77819 () Bool)

(assert (=> b!77880 m!77819))

(declare-fun m!77821 () Bool)

(assert (=> bm!7072 m!77821))

(assert (=> bm!7073 m!77481))

(declare-fun m!77823 () Bool)

(assert (=> b!77881 m!77823))

(assert (=> b!77879 m!77747))

(assert (=> b!77879 m!77747))

(assert (=> b!77879 m!77749))

(assert (=> d!18381 m!77475))

(declare-fun m!77825 () Bool)

(assert (=> bm!7071 m!77825))

(declare-fun m!77827 () Bool)

(assert (=> bm!7075 m!77827))

(assert (=> b!77877 m!77489))

(assert (=> b!77877 m!77751))

(assert (=> b!77877 m!77489))

(assert (=> b!77877 m!77753))

(assert (=> b!77877 m!77747))

(declare-fun m!77829 () Bool)

(assert (=> b!77877 m!77829))

(assert (=> b!77877 m!77751))

(assert (=> b!77877 m!77747))

(assert (=> b!77888 m!77747))

(assert (=> b!77888 m!77747))

(assert (=> b!77888 m!77749))

(declare-fun m!77831 () Bool)

(assert (=> b!77897 m!77831))

(assert (=> b!77893 m!77747))

(assert (=> b!77893 m!77747))

(declare-fun m!77833 () Bool)

(assert (=> b!77893 m!77833))

(assert (=> b!77643 d!18381))

(declare-fun d!18383 () Bool)

(assert (=> d!18383 (not (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35911 () Unit!2242)

(declare-fun choose!68 (array!3951 (_ BitVec 32) (_ BitVec 64) List!1510) Unit!2242)

(assert (=> d!18383 (= lt!35911 (choose!68 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507)))))

(assert (=> d!18383 (bvslt (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!18383 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507)) lt!35911)))

(declare-fun bs!3296 () Bool)

(assert (= bs!3296 d!18383))

(assert (=> bs!3296 m!77463))

(assert (=> bs!3296 m!77501))

(assert (=> bs!3296 m!77463))

(declare-fun m!77835 () Bool)

(assert (=> bs!3296 m!77835))

(assert (=> b!77634 d!18383))

(declare-fun d!18385 () Bool)

(assert (=> d!18385 (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) from!355 Nil!1507)))

(declare-fun lt!35914 () Unit!2242)

(declare-fun choose!39 (array!3951 (_ BitVec 32) (_ BitVec 32)) Unit!2242)

(assert (=> d!18385 (= lt!35914 (choose!39 (_keys!3930 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!18385 (bvslt (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!18385 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000 from!355) lt!35914)))

(declare-fun bs!3297 () Bool)

(assert (= bs!3297 d!18385))

(assert (=> bs!3297 m!77497))

(declare-fun m!77837 () Bool)

(assert (=> bs!3297 m!77837))

(assert (=> b!77634 d!18385))

(declare-fun d!18387 () Bool)

(declare-fun res!40847 () Bool)

(declare-fun e!50957 () Bool)

(assert (=> d!18387 (=> res!40847 e!50957)))

(assert (=> d!18387 (= res!40847 (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!18387 (= (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!50957)))

(declare-fun b!77902 () Bool)

(declare-fun e!50958 () Bool)

(assert (=> b!77902 (= e!50957 e!50958)))

(declare-fun res!40848 () Bool)

(assert (=> b!77902 (=> (not res!40848) (not e!50958))))

(assert (=> b!77902 (= res!40848 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!77903 () Bool)

(assert (=> b!77903 (= e!50958 (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!18387 (not res!40847)) b!77902))

(assert (= (and b!77902 res!40848) b!77903))

(assert (=> d!18387 m!77747))

(assert (=> b!77903 m!77463))

(declare-fun m!77839 () Bool)

(assert (=> b!77903 m!77839))

(assert (=> b!77634 d!18387))

(declare-fun d!18389 () Bool)

(declare-fun e!50961 () Bool)

(assert (=> d!18389 e!50961))

(declare-fun c!11888 () Bool)

(assert (=> d!18389 (= c!11888 (and (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!35917 () Unit!2242)

(declare-fun choose!461 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) (_ BitVec 32) Int) Unit!2242)

(assert (=> d!18389 (= lt!35917 (choose!461 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(assert (=> d!18389 (validMask!0 (mask!6266 (v!2584 (underlying!273 thiss!992))))))

(assert (=> d!18389 (= (lemmaListMapContainsThenArrayContainsFrom!59 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))) lt!35917)))

(declare-fun b!77908 () Bool)

(assert (=> b!77908 (= e!50961 (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!77909 () Bool)

(assert (=> b!77909 (= e!50961 (ite (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!18389 c!11888) b!77908))

(assert (= (and d!18389 (not c!11888)) b!77909))

(assert (=> d!18389 m!77463))

(declare-fun m!77841 () Bool)

(assert (=> d!18389 m!77841))

(assert (=> d!18389 m!77475))

(assert (=> b!77908 m!77463))

(assert (=> b!77908 m!77501))

(assert (=> b!77634 d!18389))

(declare-fun bm!7079 () Bool)

(declare-fun call!7082 () Bool)

(declare-fun c!11891 () Bool)

(assert (=> bm!7079 (= call!7082 (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)))))

(declare-fun b!77920 () Bool)

(declare-fun e!50973 () Bool)

(declare-fun contains!741 (List!1510 (_ BitVec 64)) Bool)

(assert (=> b!77920 (= e!50973 (contains!741 Nil!1507 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun d!18391 () Bool)

(declare-fun res!40857 () Bool)

(declare-fun e!50972 () Bool)

(assert (=> d!18391 (=> res!40857 e!50972)))

(assert (=> d!18391 (= res!40857 (bvsge from!355 (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!18391 (= (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) from!355 Nil!1507) e!50972)))

(declare-fun b!77921 () Bool)

(declare-fun e!50971 () Bool)

(declare-fun e!50970 () Bool)

(assert (=> b!77921 (= e!50971 e!50970)))

(assert (=> b!77921 (= c!11891 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!77922 () Bool)

(assert (=> b!77922 (= e!50970 call!7082)))

(declare-fun b!77923 () Bool)

(assert (=> b!77923 (= e!50970 call!7082)))

(declare-fun b!77924 () Bool)

(assert (=> b!77924 (= e!50972 e!50971)))

(declare-fun res!40856 () Bool)

(assert (=> b!77924 (=> (not res!40856) (not e!50971))))

(assert (=> b!77924 (= res!40856 (not e!50973))))

(declare-fun res!40855 () Bool)

(assert (=> b!77924 (=> (not res!40855) (not e!50973))))

(assert (=> b!77924 (= res!40855 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!18391 (not res!40857)) b!77924))

(assert (= (and b!77924 res!40855) b!77920))

(assert (= (and b!77924 res!40856) b!77921))

(assert (= (and b!77921 c!11891) b!77923))

(assert (= (and b!77921 (not c!11891)) b!77922))

(assert (= (or b!77923 b!77922) bm!7079))

(assert (=> bm!7079 m!77463))

(declare-fun m!77843 () Bool)

(assert (=> bm!7079 m!77843))

(assert (=> b!77920 m!77463))

(assert (=> b!77920 m!77463))

(declare-fun m!77845 () Bool)

(assert (=> b!77920 m!77845))

(assert (=> b!77921 m!77463))

(assert (=> b!77921 m!77463))

(declare-fun m!77847 () Bool)

(assert (=> b!77921 m!77847))

(assert (=> b!77924 m!77463))

(assert (=> b!77924 m!77463))

(assert (=> b!77924 m!77847))

(assert (=> b!77634 d!18391))

(declare-fun d!18393 () Bool)

(declare-fun e!50979 () Bool)

(assert (=> d!18393 e!50979))

(declare-fun res!40860 () Bool)

(assert (=> d!18393 (=> res!40860 e!50979)))

(declare-fun lt!35928 () Bool)

(assert (=> d!18393 (= res!40860 (not lt!35928))))

(declare-fun lt!35929 () Bool)

(assert (=> d!18393 (= lt!35928 lt!35929)))

(declare-fun lt!35926 () Unit!2242)

(declare-fun e!50978 () Unit!2242)

(assert (=> d!18393 (= lt!35926 e!50978)))

(declare-fun c!11894 () Bool)

(assert (=> d!18393 (= c!11894 lt!35929)))

(declare-fun containsKey!139 (List!1511 (_ BitVec 64)) Bool)

(assert (=> d!18393 (= lt!35929 (containsKey!139 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!18393 (= (contains!739 lt!35664 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) lt!35928)))

(declare-fun b!77931 () Bool)

(declare-fun lt!35927 () Unit!2242)

(assert (=> b!77931 (= e!50978 lt!35927)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!88 (List!1511 (_ BitVec 64)) Unit!2242)

(assert (=> b!77931 (= lt!35927 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun isDefined!89 (Option!141) Bool)

(assert (=> b!77931 (isDefined!89 (getValueByKey!135 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!77932 () Bool)

(declare-fun Unit!2251 () Unit!2242)

(assert (=> b!77932 (= e!50978 Unit!2251)))

(declare-fun b!77933 () Bool)

(assert (=> b!77933 (= e!50979 (isDefined!89 (getValueByKey!135 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (= (and d!18393 c!11894) b!77931))

(assert (= (and d!18393 (not c!11894)) b!77932))

(assert (= (and d!18393 (not res!40860)) b!77933))

(assert (=> d!18393 m!77463))

(declare-fun m!77849 () Bool)

(assert (=> d!18393 m!77849))

(assert (=> b!77931 m!77463))

(declare-fun m!77851 () Bool)

(assert (=> b!77931 m!77851))

(assert (=> b!77931 m!77463))

(declare-fun m!77853 () Bool)

(assert (=> b!77931 m!77853))

(assert (=> b!77931 m!77853))

(declare-fun m!77855 () Bool)

(assert (=> b!77931 m!77855))

(assert (=> b!77933 m!77463))

(assert (=> b!77933 m!77853))

(assert (=> b!77933 m!77853))

(assert (=> b!77933 m!77855))

(assert (=> b!77640 d!18393))

(declare-fun b!78014 () Bool)

(declare-fun c!11929 () Bool)

(declare-datatypes ((SeekEntryResult!243 0))(
  ( (MissingZero!243 (index!3106 (_ BitVec 32))) (Found!243 (index!3107 (_ BitVec 32))) (Intermediate!243 (undefined!1055 Bool) (index!3108 (_ BitVec 32)) (x!11549 (_ BitVec 32))) (Undefined!243) (MissingVacant!243 (index!3109 (_ BitVec 32))) )
))
(declare-fun lt!36006 () SeekEntryResult!243)

(assert (=> b!78014 (= c!11929 ((_ is MissingVacant!243) lt!36006))))

(declare-fun e!51024 () tuple2!2174)

(declare-fun e!51039 () tuple2!2174)

(assert (=> b!78014 (= e!51024 e!51039)))

(declare-fun b!78015 () Bool)

(declare-fun e!51023 () Bool)

(declare-fun lt!36003 () SeekEntryResult!243)

(assert (=> b!78015 (= e!51023 ((_ is Undefined!243) lt!36003))))

(declare-fun d!18395 () Bool)

(declare-fun e!51025 () Bool)

(assert (=> d!18395 e!51025))

(declare-fun res!40889 () Bool)

(assert (=> d!18395 (=> (not res!40889) (not e!51025))))

(declare-fun lt!35994 () tuple2!2174)

(assert (=> d!18395 (= res!40889 (valid!321 (_2!1098 lt!35994)))))

(declare-fun e!51042 () tuple2!2174)

(assert (=> d!18395 (= lt!35994 e!51042)))

(declare-fun c!11926 () Bool)

(assert (=> d!18395 (= c!11926 (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvneg (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (=> d!18395 (valid!321 newMap!16)))

(assert (=> d!18395 (= (update!115 newMap!16 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658) lt!35994)))

(declare-fun b!78016 () Bool)

(declare-fun e!51027 () Bool)

(assert (=> b!78016 (= e!51025 e!51027)))

(declare-fun c!11930 () Bool)

(assert (=> b!78016 (= c!11930 (_1!1098 lt!35994))))

(declare-fun b!78017 () Bool)

(declare-fun lt!35991 () Unit!2242)

(declare-fun lt!35987 () Unit!2242)

(assert (=> b!78017 (= lt!35991 lt!35987)))

(declare-fun call!7139 () ListLongMap!1433)

(declare-fun call!7151 () ListLongMap!1433)

(assert (=> b!78017 (= call!7139 call!7151)))

(declare-fun lt!36000 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 V!2993 Int) Unit!2242)

(assert (=> b!78017 (= lt!35987 (lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) lt!36000 (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) lt!35658 (defaultEntry!2271 newMap!16)))))

(assert (=> b!78017 (= lt!36000 (bvor (extraKeys!2122 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!51028 () tuple2!2174)

(assert (=> b!78017 (= e!51028 (tuple2!2175 true (LongMapFixedSize!731 (defaultEntry!2271 newMap!16) (mask!6266 newMap!16) (bvor (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) (zeroValue!2169 newMap!16) lt!35658 (_size!414 newMap!16) (_keys!3930 newMap!16) (_values!2254 newMap!16) (_vacant!414 newMap!16))))))

(declare-fun b!78018 () Bool)

(declare-fun e!51041 () Bool)

(declare-fun lt!36008 () SeekEntryResult!243)

(assert (=> b!78018 (= e!51041 ((_ is Undefined!243) lt!36008))))

(declare-fun bm!7128 () Bool)

(declare-fun call!7154 () Bool)

(declare-fun call!7135 () Bool)

(assert (=> bm!7128 (= call!7154 call!7135)))

(declare-fun bm!7129 () Bool)

(declare-fun call!7134 () ListLongMap!1433)

(assert (=> bm!7129 (= call!7151 call!7134)))

(declare-fun call!7136 () Unit!2242)

(declare-fun bm!7130 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) Int) Unit!2242)

(assert (=> bm!7130 (= call!7136 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(declare-fun b!78019 () Bool)

(declare-fun e!51035 () ListLongMap!1433)

(assert (=> b!78019 (= e!51035 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78020 () Bool)

(declare-fun e!51031 () Bool)

(assert (=> b!78020 (= e!51031 (not call!7154))))

(declare-fun lt!36009 () SeekEntryResult!243)

(declare-fun b!78021 () Bool)

(declare-fun e!51030 () Bool)

(assert (=> b!78021 (= e!51030 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36009)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!78022 () Bool)

(declare-fun e!51034 () Bool)

(declare-fun call!7152 () Bool)

(assert (=> b!78022 (= e!51034 (not call!7152))))

(declare-fun b!78023 () Bool)

(declare-fun e!51033 () Bool)

(assert (=> b!78023 (= e!51033 (not call!7154))))

(declare-fun b!78024 () Bool)

(declare-fun call!7153 () ListLongMap!1433)

(declare-fun call!7141 () ListLongMap!1433)

(assert (=> b!78024 (= e!51027 (= call!7153 call!7141))))

(declare-fun b!78025 () Bool)

(assert (=> b!78025 (= e!51042 e!51024)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3951 (_ BitVec 32)) SeekEntryResult!243)

(assert (=> b!78025 (= lt!36006 (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(declare-fun c!11923 () Bool)

(assert (=> b!78025 (= c!11923 ((_ is Undefined!243) lt!36006))))

(declare-fun bm!7131 () Bool)

(declare-fun call!7150 () SeekEntryResult!243)

(declare-fun call!7147 () SeekEntryResult!243)

(assert (=> bm!7131 (= call!7150 call!7147)))

(declare-fun b!78026 () Bool)

(declare-fun lt!36005 () Unit!2242)

(declare-fun lt!36001 () Unit!2242)

(assert (=> b!78026 (= lt!36005 lt!36001)))

(assert (=> b!78026 (= call!7139 call!7151)))

(declare-fun lt!35990 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!28 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 V!2993 Int) Unit!2242)

(assert (=> b!78026 (= lt!36001 (lemmaChangeZeroKeyThenAddPairToListMap!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) lt!35990 (zeroValue!2169 newMap!16) lt!35658 (minValue!2169 newMap!16) (defaultEntry!2271 newMap!16)))))

(assert (=> b!78026 (= lt!35990 (bvor (extraKeys!2122 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!78026 (= e!51028 (tuple2!2175 true (LongMapFixedSize!731 (defaultEntry!2271 newMap!16) (mask!6266 newMap!16) (bvor (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) lt!35658 (minValue!2169 newMap!16) (_size!414 newMap!16) (_keys!3930 newMap!16) (_values!2254 newMap!16) (_vacant!414 newMap!16))))))

(declare-fun call!7131 () Unit!2242)

(declare-fun bm!7132 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) Int) Unit!2242)

(assert (=> bm!7132 (= call!7131 (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(declare-fun bm!7133 () Bool)

(assert (=> bm!7133 (= call!7141 (map!1173 newMap!16))))

(declare-fun b!78027 () Bool)

(declare-fun lt!35992 () tuple2!2174)

(assert (=> b!78027 (= e!51039 (tuple2!2175 (_1!1098 lt!35992) (_2!1098 lt!35992)))))

(declare-fun call!7143 () tuple2!2174)

(assert (=> b!78027 (= lt!35992 call!7143)))

(declare-fun bm!7134 () Bool)

(assert (=> bm!7134 (= call!7152 call!7135)))

(declare-fun b!78028 () Bool)

(declare-fun res!40900 () Bool)

(declare-fun call!7144 () Bool)

(assert (=> b!78028 (= res!40900 call!7144)))

(assert (=> b!78028 (=> (not res!40900) (not e!51030))))

(declare-fun b!78029 () Bool)

(declare-fun res!40902 () Bool)

(assert (=> b!78029 (= res!40902 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3109 lt!36008)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78029 (=> (not res!40902) (not e!51031))))

(declare-fun c!11931 () Bool)

(declare-fun c!11925 () Bool)

(declare-fun c!11924 () Bool)

(declare-fun call!7137 () Bool)

(declare-fun lt!35995 () SeekEntryResult!243)

(declare-fun c!11933 () Bool)

(declare-fun bm!7135 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7135 (= call!7137 (inRange!0 (ite c!11923 (ite c!11931 (index!3107 lt!35995) (ite c!11924 (index!3106 lt!36008) (index!3109 lt!36008))) (ite c!11925 (index!3107 lt!36009) (ite c!11933 (index!3106 lt!36003) (index!3109 lt!36003)))) (mask!6266 newMap!16)))))

(declare-fun b!78030 () Bool)

(declare-fun lt!35999 () tuple2!2174)

(assert (=> b!78030 (= lt!35999 call!7143)))

(declare-fun e!51026 () tuple2!2174)

(assert (=> b!78030 (= e!51026 (tuple2!2175 (_1!1098 lt!35999) (_2!1098 lt!35999)))))

(declare-fun b!78031 () Bool)

(declare-fun e!51022 () Unit!2242)

(declare-fun lt!35996 () Unit!2242)

(assert (=> b!78031 (= e!51022 lt!35996)))

(assert (=> b!78031 (= lt!35996 call!7131)))

(assert (=> b!78031 (= lt!36009 call!7150)))

(declare-fun res!40901 () Bool)

(assert (=> b!78031 (= res!40901 ((_ is Found!243) lt!36009))))

(assert (=> b!78031 (=> (not res!40901) (not e!51030))))

(assert (=> b!78031 e!51030))

(declare-fun b!78032 () Bool)

(declare-fun res!40895 () Bool)

(declare-fun e!51038 () Bool)

(assert (=> b!78032 (=> (not res!40895) (not e!51038))))

(assert (=> b!78032 (= res!40895 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3106 lt!36003)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7136 () Bool)

(declare-fun call!7138 () SeekEntryResult!243)

(assert (=> bm!7136 (= call!7138 call!7147)))

(declare-fun bm!7137 () Bool)

(declare-fun call!7148 () Bool)

(assert (=> bm!7137 (= call!7148 call!7137)))

(declare-fun b!78033 () Bool)

(assert (=> b!78033 (= e!51038 (not call!7152))))

(declare-fun bm!7138 () Bool)

(assert (=> bm!7138 (= call!7135 (arrayContainsKey!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!7139 () Bool)

(assert (=> bm!7139 (= call!7153 (map!1173 (_2!1098 lt!35994)))))

(declare-fun b!78034 () Bool)

(declare-fun call!7149 () ListLongMap!1433)

(assert (=> b!78034 (= e!51035 call!7149)))

(declare-fun b!78035 () Bool)

(declare-fun lt!35985 () Unit!2242)

(declare-fun e!51029 () Unit!2242)

(assert (=> b!78035 (= lt!35985 e!51029)))

(declare-fun call!7132 () Bool)

(assert (=> b!78035 (= c!11931 call!7132)))

(assert (=> b!78035 (= e!51024 (tuple2!2175 false newMap!16))))

(declare-fun b!78036 () Bool)

(declare-fun res!40891 () Bool)

(assert (=> b!78036 (= res!40891 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3109 lt!36003)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78036 (=> (not res!40891) (not e!51034))))

(declare-fun bm!7140 () Bool)

(declare-fun updateHelperNewKey!28 (LongMapFixedSize!730 (_ BitVec 64) V!2993 (_ BitVec 32)) tuple2!2174)

(assert (=> bm!7140 (= call!7143 (updateHelperNewKey!28 newMap!16 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))))))

(declare-fun b!78037 () Bool)

(assert (=> b!78037 (= e!51041 e!51031)))

(declare-fun res!40892 () Bool)

(declare-fun call!7140 () Bool)

(assert (=> b!78037 (= res!40892 call!7140)))

(assert (=> b!78037 (=> (not res!40892) (not e!51031))))

(declare-fun bm!7141 () Bool)

(declare-fun call!7145 () ListLongMap!1433)

(assert (=> bm!7141 (= call!7139 call!7145)))

(declare-fun b!78038 () Bool)

(declare-fun res!40897 () Bool)

(assert (=> b!78038 (= res!40897 call!7148)))

(declare-fun e!51036 () Bool)

(assert (=> b!78038 (=> (not res!40897) (not e!51036))))

(declare-fun c!11928 () Bool)

(declare-fun bm!7142 () Bool)

(assert (=> bm!7142 (= call!7145 (+!103 e!51035 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun c!11927 () Bool)

(assert (=> bm!7142 (= c!11927 c!11926)))

(declare-fun bm!7143 () Bool)

(declare-fun call!7142 () ListLongMap!1433)

(declare-fun lt!36002 () array!3953)

(assert (=> bm!7143 (= call!7142 (getCurrentListMap!421 (_keys!3930 newMap!16) (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78039 () Bool)

(declare-fun lt!35986 () Unit!2242)

(declare-fun lt!35998 () Unit!2242)

(assert (=> b!78039 (= lt!35986 lt!35998)))

(assert (=> b!78039 call!7132))

(declare-fun lemmaValidKeyInArrayIsInListMap!87 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) Int) Unit!2242)

(assert (=> b!78039 (= lt!35998 (lemmaValidKeyInArrayIsInListMap!87 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3107 lt!36006) (defaultEntry!2271 newMap!16)))))

(assert (=> b!78039 (= lt!36002 (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))))

(declare-fun lt!35988 () Unit!2242)

(declare-fun lt!36004 () Unit!2242)

(assert (=> b!78039 (= lt!35988 lt!36004)))

(assert (=> b!78039 (= call!7145 call!7134)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) (_ BitVec 64) V!2993 Int) Unit!2242)

(assert (=> b!78039 (= lt!36004 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3107 lt!36006) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!35984 () Unit!2242)

(assert (=> b!78039 (= lt!35984 e!51022)))

(assert (=> b!78039 (= c!11925 (contains!739 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> b!78039 (= e!51026 (tuple2!2175 true (LongMapFixedSize!731 (defaultEntry!2271 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (_size!414 newMap!16) (_keys!3930 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (_vacant!414 newMap!16))))))

(declare-fun bm!7144 () Bool)

(declare-fun call!7133 () Bool)

(assert (=> bm!7144 (= call!7133 call!7144)))

(declare-fun b!78040 () Bool)

(assert (=> b!78040 (= e!51023 e!51034)))

(declare-fun res!40894 () Bool)

(assert (=> b!78040 (= res!40894 call!7133)))

(assert (=> b!78040 (=> (not res!40894) (not e!51034))))

(declare-fun b!78041 () Bool)

(declare-fun c!11922 () Bool)

(assert (=> b!78041 (= c!11922 ((_ is MissingVacant!243) lt!36008))))

(declare-fun e!51040 () Bool)

(assert (=> b!78041 (= e!51040 e!51041)))

(declare-fun bm!7145 () Bool)

(declare-fun call!7146 () ListLongMap!1433)

(assert (=> bm!7145 (= call!7132 (contains!739 call!7146 (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))

(declare-fun e!51037 () Bool)

(declare-fun b!78042 () Bool)

(assert (=> b!78042 (= e!51037 (= call!7153 (+!103 call!7141 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun bm!7146 () Bool)

(assert (=> bm!7146 (= call!7146 call!7142)))

(declare-fun b!78043 () Bool)

(assert (=> b!78043 (= e!51042 e!51028)))

(assert (=> b!78043 (= c!11928 (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78044 () Bool)

(assert (=> b!78044 (= e!51036 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!35995)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!78045 () Bool)

(declare-fun res!40899 () Bool)

(assert (=> b!78045 (=> (not res!40899) (not e!51033))))

(assert (=> b!78045 (= res!40899 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3106 lt!36008)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7147 () Bool)

(assert (=> bm!7147 (= call!7149 call!7142)))

(declare-fun b!78046 () Bool)

(declare-fun lt!36010 () Unit!2242)

(assert (=> b!78046 (= e!51029 lt!36010)))

(assert (=> b!78046 (= lt!36010 call!7136)))

(assert (=> b!78046 (= lt!36008 call!7138)))

(assert (=> b!78046 (= c!11924 ((_ is MissingZero!243) lt!36008))))

(assert (=> b!78046 e!51040))

(declare-fun bm!7148 () Bool)

(assert (=> bm!7148 (= call!7147 (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(declare-fun bm!7149 () Bool)

(assert (=> bm!7149 (= call!7134 (getCurrentListMap!421 (_keys!3930 newMap!16) (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) (mask!6266 newMap!16) (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78047 () Bool)

(declare-fun Unit!2252 () Unit!2242)

(assert (=> b!78047 (= e!51022 Unit!2252)))

(declare-fun lt!35989 () Unit!2242)

(assert (=> b!78047 (= lt!35989 call!7136)))

(assert (=> b!78047 (= lt!36003 call!7150)))

(assert (=> b!78047 (= c!11933 ((_ is MissingZero!243) lt!36003))))

(declare-fun e!51032 () Bool)

(assert (=> b!78047 e!51032))

(declare-fun lt!36007 () Unit!2242)

(assert (=> b!78047 (= lt!36007 lt!35989)))

(assert (=> b!78047 false))

(declare-fun b!78048 () Bool)

(declare-fun res!40898 () Bool)

(assert (=> b!78048 (=> (not res!40898) (not e!51033))))

(assert (=> b!78048 (= res!40898 call!7140)))

(assert (=> b!78048 (= e!51040 e!51033)))

(declare-fun bm!7150 () Bool)

(assert (=> bm!7150 (= call!7140 call!7148)))

(declare-fun b!78049 () Bool)

(assert (=> b!78049 (= e!51039 e!51026)))

(declare-fun c!11932 () Bool)

(assert (=> b!78049 (= c!11932 ((_ is MissingZero!243) lt!36006))))

(declare-fun b!78050 () Bool)

(declare-fun Unit!2253 () Unit!2242)

(assert (=> b!78050 (= e!51029 Unit!2253)))

(declare-fun lt!35997 () Unit!2242)

(assert (=> b!78050 (= lt!35997 call!7131)))

(assert (=> b!78050 (= lt!35995 call!7138)))

(declare-fun res!40896 () Bool)

(assert (=> b!78050 (= res!40896 ((_ is Found!243) lt!35995))))

(assert (=> b!78050 (=> (not res!40896) (not e!51036))))

(assert (=> b!78050 e!51036))

(declare-fun lt!35993 () Unit!2242)

(assert (=> b!78050 (= lt!35993 lt!35997)))

(assert (=> b!78050 false))

(declare-fun b!78051 () Bool)

(declare-fun res!40890 () Bool)

(assert (=> b!78051 (=> (not res!40890) (not e!51038))))

(assert (=> b!78051 (= res!40890 call!7133)))

(assert (=> b!78051 (= e!51032 e!51038)))

(declare-fun b!78052 () Bool)

(declare-fun c!11921 () Bool)

(assert (=> b!78052 (= c!11921 ((_ is MissingVacant!243) lt!36003))))

(assert (=> b!78052 (= e!51032 e!51023)))

(declare-fun b!78053 () Bool)

(assert (=> b!78053 (= e!51027 e!51037)))

(declare-fun res!40893 () Bool)

(assert (=> b!78053 (= res!40893 (contains!739 call!7153 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> b!78053 (=> (not res!40893) (not e!51037))))

(declare-fun bm!7151 () Bool)

(assert (=> bm!7151 (= call!7144 call!7137)))

(assert (= (and d!18395 c!11926) b!78043))

(assert (= (and d!18395 (not c!11926)) b!78025))

(assert (= (and b!78043 c!11928) b!78026))

(assert (= (and b!78043 (not c!11928)) b!78017))

(assert (= (or b!78026 b!78017) bm!7129))

(assert (= (or b!78026 b!78017) bm!7147))

(assert (= (or b!78026 b!78017) bm!7141))

(assert (= (and b!78025 c!11923) b!78035))

(assert (= (and b!78025 (not c!11923)) b!78014))

(assert (= (and b!78035 c!11931) b!78050))

(assert (= (and b!78035 (not c!11931)) b!78046))

(assert (= (and b!78050 res!40896) b!78038))

(assert (= (and b!78038 res!40897) b!78044))

(assert (= (and b!78046 c!11924) b!78048))

(assert (= (and b!78046 (not c!11924)) b!78041))

(assert (= (and b!78048 res!40898) b!78045))

(assert (= (and b!78045 res!40899) b!78023))

(assert (= (and b!78041 c!11922) b!78037))

(assert (= (and b!78041 (not c!11922)) b!78018))

(assert (= (and b!78037 res!40892) b!78029))

(assert (= (and b!78029 res!40902) b!78020))

(assert (= (or b!78048 b!78037) bm!7150))

(assert (= (or b!78023 b!78020) bm!7128))

(assert (= (or b!78038 bm!7150) bm!7137))

(assert (= (or b!78050 b!78046) bm!7136))

(assert (= (and b!78014 c!11929) b!78027))

(assert (= (and b!78014 (not c!11929)) b!78049))

(assert (= (and b!78049 c!11932) b!78030))

(assert (= (and b!78049 (not c!11932)) b!78039))

(assert (= (and b!78039 c!11925) b!78031))

(assert (= (and b!78039 (not c!11925)) b!78047))

(assert (= (and b!78031 res!40901) b!78028))

(assert (= (and b!78028 res!40900) b!78021))

(assert (= (and b!78047 c!11933) b!78051))

(assert (= (and b!78047 (not c!11933)) b!78052))

(assert (= (and b!78051 res!40890) b!78032))

(assert (= (and b!78032 res!40895) b!78033))

(assert (= (and b!78052 c!11921) b!78040))

(assert (= (and b!78052 (not c!11921)) b!78015))

(assert (= (and b!78040 res!40894) b!78036))

(assert (= (and b!78036 res!40891) b!78022))

(assert (= (or b!78051 b!78040) bm!7144))

(assert (= (or b!78033 b!78022) bm!7134))

(assert (= (or b!78028 bm!7144) bm!7151))

(assert (= (or b!78031 b!78047) bm!7131))

(assert (= (or b!78027 b!78030) bm!7140))

(assert (= (or b!78050 b!78031) bm!7132))

(assert (= (or b!78046 b!78047) bm!7130))

(assert (= (or bm!7136 bm!7131) bm!7148))

(assert (= (or bm!7128 bm!7134) bm!7138))

(assert (= (or bm!7137 bm!7151) bm!7135))

(assert (= (or b!78035 b!78039) bm!7146))

(assert (= (or b!78035 b!78039) bm!7145))

(assert (= (or bm!7129 b!78039) bm!7149))

(assert (= (or bm!7147 bm!7146) bm!7143))

(assert (= (or bm!7141 b!78039) bm!7142))

(assert (= (and bm!7142 c!11927) b!78034))

(assert (= (and bm!7142 (not c!11927)) b!78019))

(assert (= (and d!18395 res!40889) b!78016))

(assert (= (and b!78016 c!11930) b!78053))

(assert (= (and b!78016 (not c!11930)) b!78024))

(assert (= (and b!78053 res!40893) b!78042))

(assert (= (or b!78042 b!78024) bm!7133))

(assert (= (or b!78053 b!78042 b!78024) bm!7139))

(assert (=> b!78053 m!77463))

(declare-fun m!77857 () Bool)

(assert (=> b!78053 m!77857))

(assert (=> bm!7138 m!77463))

(declare-fun m!77859 () Bool)

(assert (=> bm!7138 m!77859))

(assert (=> b!78025 m!77463))

(declare-fun m!77861 () Bool)

(assert (=> b!78025 m!77861))

(declare-fun m!77863 () Bool)

(assert (=> b!78032 m!77863))

(assert (=> bm!7130 m!77463))

(declare-fun m!77865 () Bool)

(assert (=> bm!7130 m!77865))

(declare-fun m!77867 () Bool)

(assert (=> bm!7143 m!77867))

(declare-fun m!77869 () Bool)

(assert (=> bm!7145 m!77869))

(declare-fun m!77871 () Bool)

(assert (=> bm!7145 m!77871))

(declare-fun m!77873 () Bool)

(assert (=> bm!7142 m!77873))

(declare-fun m!77875 () Bool)

(assert (=> b!78044 m!77875))

(assert (=> bm!7148 m!77463))

(assert (=> bm!7148 m!77861))

(declare-fun m!77877 () Bool)

(assert (=> b!78042 m!77877))

(declare-fun m!77879 () Bool)

(assert (=> bm!7139 m!77879))

(declare-fun m!77881 () Bool)

(assert (=> b!78017 m!77881))

(assert (=> b!78039 m!77787))

(declare-fun m!77883 () Bool)

(assert (=> b!78039 m!77883))

(declare-fun m!77885 () Bool)

(assert (=> b!78039 m!77885))

(assert (=> b!78039 m!77463))

(declare-fun m!77887 () Bool)

(assert (=> b!78039 m!77887))

(assert (=> b!78039 m!77787))

(assert (=> b!78039 m!77463))

(declare-fun m!77889 () Bool)

(assert (=> b!78039 m!77889))

(assert (=> bm!7149 m!77885))

(declare-fun m!77891 () Bool)

(assert (=> bm!7149 m!77891))

(assert (=> b!78019 m!77787))

(declare-fun m!77893 () Bool)

(assert (=> bm!7135 m!77893))

(declare-fun m!77895 () Bool)

(assert (=> d!18395 m!77895))

(assert (=> d!18395 m!77515))

(declare-fun m!77897 () Bool)

(assert (=> b!78036 m!77897))

(declare-fun m!77899 () Bool)

(assert (=> b!78045 m!77899))

(declare-fun m!77901 () Bool)

(assert (=> b!78029 m!77901))

(assert (=> bm!7133 m!77483))

(declare-fun m!77903 () Bool)

(assert (=> b!78026 m!77903))

(assert (=> bm!7140 m!77463))

(declare-fun m!77905 () Bool)

(assert (=> bm!7140 m!77905))

(assert (=> bm!7132 m!77463))

(declare-fun m!77907 () Bool)

(assert (=> bm!7132 m!77907))

(declare-fun m!77909 () Bool)

(assert (=> b!78021 m!77909))

(assert (=> b!77640 d!18395))

(declare-fun d!18397 () Bool)

(assert (=> d!18397 (= (array_inv!1181 (_keys!3930 newMap!16)) (bvsge (size!2124 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!77630 d!18397))

(declare-fun d!18399 () Bool)

(assert (=> d!18399 (= (array_inv!1182 (_values!2254 newMap!16)) (bvsge (size!2125 (_values!2254 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!77630 d!18399))

(declare-fun d!18401 () Bool)

(declare-fun c!11936 () Bool)

(assert (=> d!18401 (= c!11936 ((_ is ValueCellFull!911) (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun e!51045 () V!2993)

(assert (=> d!18401 (= (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51045)))

(declare-fun b!78058 () Bool)

(declare-fun get!1178 (ValueCell!911 V!2993) V!2993)

(assert (=> b!78058 (= e!51045 (get!1178 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78059 () Bool)

(declare-fun get!1179 (ValueCell!911 V!2993) V!2993)

(assert (=> b!78059 (= e!51045 (get!1179 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18401 c!11936) b!78058))

(assert (= (and d!18401 (not c!11936)) b!78059))

(assert (=> b!78058 m!77487))

(assert (=> b!78058 m!77489))

(declare-fun m!77911 () Bool)

(assert (=> b!78058 m!77911))

(assert (=> b!78059 m!77487))

(assert (=> b!78059 m!77489))

(declare-fun m!77913 () Bool)

(assert (=> b!78059 m!77913))

(assert (=> b!77639 d!18401))

(declare-fun condMapEmpty!3313 () Bool)

(declare-fun mapDefault!3313 () ValueCell!911)

(assert (=> mapNonEmpty!3297 (= condMapEmpty!3313 (= mapRest!3297 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3313)))))

(declare-fun e!51050 () Bool)

(declare-fun mapRes!3313 () Bool)

(assert (=> mapNonEmpty!3297 (= tp!8757 (and e!51050 mapRes!3313))))

(declare-fun mapNonEmpty!3313 () Bool)

(declare-fun tp!8785 () Bool)

(declare-fun e!51051 () Bool)

(assert (=> mapNonEmpty!3313 (= mapRes!3313 (and tp!8785 e!51051))))

(declare-fun mapValue!3313 () ValueCell!911)

(declare-fun mapRest!3313 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapKey!3313 () (_ BitVec 32))

(assert (=> mapNonEmpty!3313 (= mapRest!3297 (store mapRest!3313 mapKey!3313 mapValue!3313))))

(declare-fun b!78066 () Bool)

(assert (=> b!78066 (= e!51051 tp_is_empty!2509)))

(declare-fun b!78067 () Bool)

(assert (=> b!78067 (= e!51050 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3313 () Bool)

(assert (=> mapIsEmpty!3313 mapRes!3313))

(assert (= (and mapNonEmpty!3297 condMapEmpty!3313) mapIsEmpty!3313))

(assert (= (and mapNonEmpty!3297 (not condMapEmpty!3313)) mapNonEmpty!3313))

(assert (= (and mapNonEmpty!3313 ((_ is ValueCellFull!911) mapValue!3313)) b!78066))

(assert (= (and mapNonEmpty!3297 ((_ is ValueCellFull!911) mapDefault!3313)) b!78067))

(declare-fun m!77915 () Bool)

(assert (=> mapNonEmpty!3313 m!77915))

(declare-fun condMapEmpty!3314 () Bool)

(declare-fun mapDefault!3314 () ValueCell!911)

(assert (=> mapNonEmpty!3298 (= condMapEmpty!3314 (= mapRest!3298 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3314)))))

(declare-fun e!51052 () Bool)

(declare-fun mapRes!3314 () Bool)

(assert (=> mapNonEmpty!3298 (= tp!8756 (and e!51052 mapRes!3314))))

(declare-fun mapNonEmpty!3314 () Bool)

(declare-fun tp!8786 () Bool)

(declare-fun e!51053 () Bool)

(assert (=> mapNonEmpty!3314 (= mapRes!3314 (and tp!8786 e!51053))))

(declare-fun mapRest!3314 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapKey!3314 () (_ BitVec 32))

(declare-fun mapValue!3314 () ValueCell!911)

(assert (=> mapNonEmpty!3314 (= mapRest!3298 (store mapRest!3314 mapKey!3314 mapValue!3314))))

(declare-fun b!78068 () Bool)

(assert (=> b!78068 (= e!51053 tp_is_empty!2509)))

(declare-fun b!78069 () Bool)

(assert (=> b!78069 (= e!51052 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3314 () Bool)

(assert (=> mapIsEmpty!3314 mapRes!3314))

(assert (= (and mapNonEmpty!3298 condMapEmpty!3314) mapIsEmpty!3314))

(assert (= (and mapNonEmpty!3298 (not condMapEmpty!3314)) mapNonEmpty!3314))

(assert (= (and mapNonEmpty!3314 ((_ is ValueCellFull!911) mapValue!3314)) b!78068))

(assert (= (and mapNonEmpty!3298 ((_ is ValueCellFull!911) mapDefault!3314)) b!78069))

(declare-fun m!77917 () Bool)

(assert (=> mapNonEmpty!3314 m!77917))

(declare-fun b_lambda!3483 () Bool)

(assert (= b_lambda!3479 (or (and b!77645 b_free!2185) (and b!77630 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))) b_lambda!3483)))

(declare-fun b_lambda!3485 () Bool)

(assert (= b_lambda!3477 (or (and b!77645 b_free!2185) (and b!77630 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))) b_lambda!3485)))

(declare-fun b_lambda!3487 () Bool)

(assert (= b_lambda!3481 (or (and b!77645 b_free!2185) (and b!77630 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))) b_lambda!3487)))

(check-sat (not d!18371) (not bm!7133) (not b!77825) (not b!77791) (not b!77920) (not b!77832) (not d!18389) (not bm!7149) (not d!18395) (not b!78025) (not b_next!2187) (not b!77790) (not b!77794) (not b!77888) (not b!77880) (not d!18383) (not bm!7072) (not b!77933) (not b!77789) (not b!77785) (not d!18361) (not b!77834) (not b!77792) (not b!77824) (not b!78042) (not d!18363) (not b!77821) (not d!18373) (not bm!7142) (not b!77826) (not d!18379) (not b!77830) (not b!78017) (not d!18385) (not b!78058) (not b_lambda!3475) (not b!78059) tp_is_empty!2509 (not b_lambda!3487) (not bm!7138) (not b!77931) (not mapNonEmpty!3314) (not b_lambda!3483) (not b!77831) (not mapNonEmpty!3313) (not bm!7132) (not b!77779) (not b!77879) (not b!78039) (not d!18357) (not b!77903) (not b!77924) (not b!77877) (not bm!7079) (not b!78019) (not bm!7139) (not b!77786) (not b!77787) b_and!4793 (not b!77893) (not d!18365) (not b_lambda!3485) (not bm!7071) (not d!18375) (not b!77793) (not b!77881) (not b!77788) (not b_next!2185) (not bm!7075) (not bm!7135) (not b!78053) (not bm!7145) (not bm!7073) (not bm!7055) (not b!77780) (not d!18355) (not b!77778) (not bm!7130) (not b!77889) (not b!77908) (not b!77921) (not bm!7148) (not b!77897) (not d!18377) (not d!18369) (not b!77796) (not b!77833) (not d!18349) (not d!18359) (not b!77795) (not d!18393) (not b!78026) (not bm!7143) (not d!18381) b_and!4795 (not bm!7140) (not b!77823))
(check-sat b_and!4793 b_and!4795 (not b_next!2185) (not b_next!2187))
(get-model)

(declare-fun d!18403 () Bool)

(declare-fun isEmpty!331 (Option!141) Bool)

(assert (=> d!18403 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))))

(declare-fun bs!3298 () Bool)

(assert (= bs!3298 d!18403))

(assert (=> bs!3298 m!77853))

(declare-fun m!77919 () Bool)

(assert (=> bs!3298 m!77919))

(assert (=> b!77933 d!18403))

(declare-fun b!78078 () Bool)

(declare-fun e!51058 () Option!141)

(assert (=> b!78078 (= e!51058 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35664)))))))

(declare-fun b!78080 () Bool)

(declare-fun e!51059 () Option!141)

(assert (=> b!78080 (= e!51059 (getValueByKey!135 (t!5148 (toList!732 lt!35664)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun c!11941 () Bool)

(declare-fun d!18405 () Bool)

(assert (=> d!18405 (= c!11941 (and ((_ is Cons!1507) (toList!732 lt!35664)) (= (_1!1099 (h!2095 (toList!732 lt!35664))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (=> d!18405 (= (getValueByKey!135 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) e!51058)))

(declare-fun b!78081 () Bool)

(assert (=> b!78081 (= e!51059 None!139)))

(declare-fun b!78079 () Bool)

(assert (=> b!78079 (= e!51058 e!51059)))

(declare-fun c!11942 () Bool)

(assert (=> b!78079 (= c!11942 (and ((_ is Cons!1507) (toList!732 lt!35664)) (not (= (_1!1099 (h!2095 (toList!732 lt!35664))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))))

(assert (= (and d!18405 c!11941) b!78078))

(assert (= (and d!18405 (not c!11941)) b!78079))

(assert (= (and b!78079 c!11942) b!78080))

(assert (= (and b!78079 (not c!11942)) b!78081))

(assert (=> b!78080 m!77463))

(declare-fun m!77921 () Bool)

(assert (=> b!78080 m!77921))

(assert (=> b!77933 d!18405))

(declare-fun d!18407 () Bool)

(declare-fun e!51060 () Bool)

(assert (=> d!18407 e!51060))

(declare-fun res!40903 () Bool)

(assert (=> d!18407 (=> (not res!40903) (not e!51060))))

(declare-fun lt!36014 () ListLongMap!1433)

(assert (=> d!18407 (= res!40903 (contains!739 lt!36014 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36012 () List!1511)

(assert (=> d!18407 (= lt!36014 (ListLongMap!1434 lt!36012))))

(declare-fun lt!36011 () Unit!2242)

(declare-fun lt!36013 () Unit!2242)

(assert (=> d!18407 (= lt!36011 lt!36013)))

(assert (=> d!18407 (= (getValueByKey!135 lt!36012 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18407 (= lt!36013 (lemmaContainsTupThenGetReturnValue!55 lt!36012 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18407 (= lt!36012 (insertStrictlySorted!58 (toList!732 call!7079) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18407 (= (+!103 call!7079 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36014)))

(declare-fun b!78082 () Bool)

(declare-fun res!40904 () Bool)

(assert (=> b!78082 (=> (not res!40904) (not e!51060))))

(assert (=> b!78082 (= res!40904 (= (getValueByKey!135 (toList!732 lt!36014) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78083 () Bool)

(assert (=> b!78083 (= e!51060 (contains!740 (toList!732 lt!36014) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18407 res!40903) b!78082))

(assert (= (and b!78082 res!40904) b!78083))

(declare-fun m!77923 () Bool)

(assert (=> d!18407 m!77923))

(declare-fun m!77925 () Bool)

(assert (=> d!18407 m!77925))

(declare-fun m!77927 () Bool)

(assert (=> d!18407 m!77927))

(declare-fun m!77929 () Bool)

(assert (=> d!18407 m!77929))

(declare-fun m!77931 () Bool)

(assert (=> b!78082 m!77931))

(declare-fun m!77933 () Bool)

(assert (=> b!78083 m!77933))

(assert (=> b!77881 d!18407))

(declare-fun b!78084 () Bool)

(declare-fun e!51071 () Bool)

(declare-fun lt!36029 () ListLongMap!1433)

(assert (=> b!78084 (= e!51071 (= (apply!79 lt!36029 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78084 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (_values!2254 newMap!16))))))

(assert (=> b!78084 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78085 () Bool)

(declare-fun c!11944 () Bool)

(assert (=> b!78085 (= c!11944 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!51070 () ListLongMap!1433)

(declare-fun e!51063 () ListLongMap!1433)

(assert (=> b!78085 (= e!51070 e!51063)))

(declare-fun b!78086 () Bool)

(declare-fun e!51069 () Bool)

(assert (=> b!78086 (= e!51069 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78087 () Bool)

(declare-fun e!51068 () Unit!2242)

(declare-fun lt!36032 () Unit!2242)

(assert (=> b!78087 (= e!51068 lt!36032)))

(declare-fun lt!36019 () ListLongMap!1433)

(assert (=> b!78087 (= lt!36019 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36015 () (_ BitVec 64))

(assert (=> b!78087 (= lt!36015 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36026 () (_ BitVec 64))

(assert (=> b!78087 (= lt!36026 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36020 () Unit!2242)

(assert (=> b!78087 (= lt!36020 (addStillContains!55 lt!36019 lt!36015 (zeroValue!2169 newMap!16) lt!36026))))

(assert (=> b!78087 (contains!739 (+!103 lt!36019 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16))) lt!36026)))

(declare-fun lt!36017 () Unit!2242)

(assert (=> b!78087 (= lt!36017 lt!36020)))

(declare-fun lt!36018 () ListLongMap!1433)

(assert (=> b!78087 (= lt!36018 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36027 () (_ BitVec 64))

(assert (=> b!78087 (= lt!36027 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36024 () (_ BitVec 64))

(assert (=> b!78087 (= lt!36024 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36025 () Unit!2242)

(assert (=> b!78087 (= lt!36025 (addApplyDifferent!55 lt!36018 lt!36027 (minValue!2169 newMap!16) lt!36024))))

(assert (=> b!78087 (= (apply!79 (+!103 lt!36018 (tuple2!2177 lt!36027 (minValue!2169 newMap!16))) lt!36024) (apply!79 lt!36018 lt!36024))))

(declare-fun lt!36016 () Unit!2242)

(assert (=> b!78087 (= lt!36016 lt!36025)))

(declare-fun lt!36023 () ListLongMap!1433)

(assert (=> b!78087 (= lt!36023 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36036 () (_ BitVec 64))

(assert (=> b!78087 (= lt!36036 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36034 () (_ BitVec 64))

(assert (=> b!78087 (= lt!36034 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36035 () Unit!2242)

(assert (=> b!78087 (= lt!36035 (addApplyDifferent!55 lt!36023 lt!36036 (zeroValue!2169 newMap!16) lt!36034))))

(assert (=> b!78087 (= (apply!79 (+!103 lt!36023 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16))) lt!36034) (apply!79 lt!36023 lt!36034))))

(declare-fun lt!36028 () Unit!2242)

(assert (=> b!78087 (= lt!36028 lt!36035)))

(declare-fun lt!36030 () ListLongMap!1433)

(assert (=> b!78087 (= lt!36030 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36031 () (_ BitVec 64))

(assert (=> b!78087 (= lt!36031 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36033 () (_ BitVec 64))

(assert (=> b!78087 (= lt!36033 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78087 (= lt!36032 (addApplyDifferent!55 lt!36030 lt!36031 (minValue!2169 newMap!16) lt!36033))))

(assert (=> b!78087 (= (apply!79 (+!103 lt!36030 (tuple2!2177 lt!36031 (minValue!2169 newMap!16))) lt!36033) (apply!79 lt!36030 lt!36033))))

(declare-fun b!78089 () Bool)

(declare-fun e!51062 () Bool)

(declare-fun e!51064 () Bool)

(assert (=> b!78089 (= e!51062 e!51064)))

(declare-fun res!40907 () Bool)

(declare-fun call!7160 () Bool)

(assert (=> b!78089 (= res!40907 call!7160)))

(assert (=> b!78089 (=> (not res!40907) (not e!51064))))

(declare-fun bm!7152 () Bool)

(declare-fun call!7155 () ListLongMap!1433)

(declare-fun call!7159 () ListLongMap!1433)

(assert (=> bm!7152 (= call!7155 call!7159)))

(declare-fun b!78090 () Bool)

(assert (=> b!78090 (= e!51062 (not call!7160))))

(declare-fun b!78091 () Bool)

(declare-fun e!51067 () ListLongMap!1433)

(assert (=> b!78091 (= e!51067 e!51070)))

(declare-fun c!11945 () Bool)

(assert (=> b!78091 (= c!11945 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78092 () Bool)

(declare-fun call!7156 () ListLongMap!1433)

(assert (=> b!78092 (= e!51063 call!7156)))

(declare-fun b!78093 () Bool)

(declare-fun call!7158 () ListLongMap!1433)

(assert (=> b!78093 (= e!51063 call!7158)))

(declare-fun b!78094 () Bool)

(declare-fun res!40912 () Bool)

(declare-fun e!51073 () Bool)

(assert (=> b!78094 (=> (not res!40912) (not e!51073))))

(declare-fun e!51061 () Bool)

(assert (=> b!78094 (= res!40912 e!51061)))

(declare-fun c!11943 () Bool)

(assert (=> b!78094 (= c!11943 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7153 () Bool)

(declare-fun call!7157 () Bool)

(assert (=> bm!7153 (= call!7157 (contains!739 lt!36029 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7154 () Bool)

(assert (=> bm!7154 (= call!7160 (contains!739 lt!36029 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7155 () Bool)

(assert (=> bm!7155 (= call!7159 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78095 () Bool)

(declare-fun e!51072 () Bool)

(assert (=> b!78095 (= e!51072 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7156 () Bool)

(assert (=> bm!7156 (= call!7158 call!7155)))

(declare-fun b!78096 () Bool)

(declare-fun e!51066 () Bool)

(assert (=> b!78096 (= e!51066 (= (apply!79 lt!36029 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!78097 () Bool)

(declare-fun res!40913 () Bool)

(assert (=> b!78097 (=> (not res!40913) (not e!51073))))

(declare-fun e!51065 () Bool)

(assert (=> b!78097 (= res!40913 e!51065)))

(declare-fun res!40910 () Bool)

(assert (=> b!78097 (=> res!40910 e!51065)))

(assert (=> b!78097 (= res!40910 (not e!51072))))

(declare-fun res!40906 () Bool)

(assert (=> b!78097 (=> (not res!40906) (not e!51072))))

(assert (=> b!78097 (= res!40906 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78088 () Bool)

(declare-fun call!7161 () ListLongMap!1433)

(assert (=> b!78088 (= e!51067 (+!103 call!7161 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun d!18409 () Bool)

(assert (=> d!18409 e!51073))

(declare-fun res!40909 () Bool)

(assert (=> d!18409 (=> (not res!40909) (not e!51073))))

(assert (=> d!18409 (= res!40909 (or (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))))

(declare-fun lt!36021 () ListLongMap!1433)

(assert (=> d!18409 (= lt!36029 lt!36021)))

(declare-fun lt!36022 () Unit!2242)

(assert (=> d!18409 (= lt!36022 e!51068)))

(declare-fun c!11946 () Bool)

(assert (=> d!18409 (= c!11946 e!51069)))

(declare-fun res!40911 () Bool)

(assert (=> d!18409 (=> (not res!40911) (not e!51069))))

(assert (=> d!18409 (= res!40911 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!18409 (= lt!36021 e!51067)))

(declare-fun c!11947 () Bool)

(assert (=> d!18409 (= c!11947 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18409 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18409 (= (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36029)))

(declare-fun b!78098 () Bool)

(assert (=> b!78098 (= e!51061 (not call!7157))))

(declare-fun bm!7157 () Bool)

(assert (=> bm!7157 (= call!7161 (+!103 (ite c!11947 call!7159 (ite c!11945 call!7155 call!7158)) (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!78099 () Bool)

(assert (=> b!78099 (= e!51070 call!7156)))

(declare-fun bm!7158 () Bool)

(assert (=> bm!7158 (= call!7156 call!7161)))

(declare-fun b!78100 () Bool)

(assert (=> b!78100 (= e!51065 e!51071)))

(declare-fun res!40908 () Bool)

(assert (=> b!78100 (=> (not res!40908) (not e!51071))))

(assert (=> b!78100 (= res!40908 (contains!739 lt!36029 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78100 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78101 () Bool)

(assert (=> b!78101 (= e!51061 e!51066)))

(declare-fun res!40905 () Bool)

(assert (=> b!78101 (= res!40905 call!7157)))

(assert (=> b!78101 (=> (not res!40905) (not e!51066))))

(declare-fun b!78102 () Bool)

(assert (=> b!78102 (= e!51073 e!51062)))

(declare-fun c!11948 () Bool)

(assert (=> b!78102 (= c!11948 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78103 () Bool)

(declare-fun Unit!2254 () Unit!2242)

(assert (=> b!78103 (= e!51068 Unit!2254)))

(declare-fun b!78104 () Bool)

(assert (=> b!78104 (= e!51064 (= (apply!79 lt!36029 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(assert (= (and d!18409 c!11947) b!78088))

(assert (= (and d!18409 (not c!11947)) b!78091))

(assert (= (and b!78091 c!11945) b!78099))

(assert (= (and b!78091 (not c!11945)) b!78085))

(assert (= (and b!78085 c!11944) b!78092))

(assert (= (and b!78085 (not c!11944)) b!78093))

(assert (= (or b!78092 b!78093) bm!7156))

(assert (= (or b!78099 bm!7156) bm!7152))

(assert (= (or b!78099 b!78092) bm!7158))

(assert (= (or b!78088 bm!7152) bm!7155))

(assert (= (or b!78088 bm!7158) bm!7157))

(assert (= (and d!18409 res!40911) b!78086))

(assert (= (and d!18409 c!11946) b!78087))

(assert (= (and d!18409 (not c!11946)) b!78103))

(assert (= (and d!18409 res!40909) b!78097))

(assert (= (and b!78097 res!40906) b!78095))

(assert (= (and b!78097 (not res!40910)) b!78100))

(assert (= (and b!78100 res!40908) b!78084))

(assert (= (and b!78097 res!40913) b!78094))

(assert (= (and b!78094 c!11943) b!78101))

(assert (= (and b!78094 (not c!11943)) b!78098))

(assert (= (and b!78101 res!40905) b!78096))

(assert (= (or b!78101 b!78098) bm!7153))

(assert (= (and b!78094 res!40912) b!78102))

(assert (= (and b!78102 c!11948) b!78089))

(assert (= (and b!78102 (not c!11948)) b!78090))

(assert (= (and b!78089 res!40907) b!78104))

(assert (= (or b!78089 b!78090) bm!7154))

(declare-fun b_lambda!3489 () Bool)

(assert (=> (not b_lambda!3489) (not b!78084)))

(declare-fun t!5160 () Bool)

(declare-fun tb!1621 () Bool)

(assert (=> (and b!77645 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16)) t!5160) tb!1621))

(declare-fun result!2821 () Bool)

(assert (=> tb!1621 (= result!2821 tp_is_empty!2509)))

(assert (=> b!78084 t!5160))

(declare-fun b_and!4797 () Bool)

(assert (= b_and!4793 (and (=> t!5160 result!2821) b_and!4797)))

(declare-fun t!5162 () Bool)

(declare-fun tb!1623 () Bool)

(assert (=> (and b!77630 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 newMap!16)) t!5162) tb!1623))

(declare-fun result!2823 () Bool)

(assert (= result!2823 result!2821))

(assert (=> b!78084 t!5162))

(declare-fun b_and!4799 () Bool)

(assert (= b_and!4795 (and (=> t!5162 result!2823) b_and!4799)))

(declare-fun m!77935 () Bool)

(assert (=> b!78096 m!77935))

(declare-fun m!77937 () Bool)

(assert (=> b!78087 m!77937))

(declare-fun m!77939 () Bool)

(assert (=> b!78087 m!77939))

(declare-fun m!77941 () Bool)

(assert (=> b!78087 m!77941))

(declare-fun m!77943 () Bool)

(assert (=> b!78087 m!77943))

(declare-fun m!77945 () Bool)

(assert (=> b!78087 m!77945))

(declare-fun m!77947 () Bool)

(assert (=> b!78087 m!77947))

(declare-fun m!77949 () Bool)

(assert (=> b!78087 m!77949))

(declare-fun m!77951 () Bool)

(assert (=> b!78087 m!77951))

(declare-fun m!77953 () Bool)

(assert (=> b!78087 m!77953))

(declare-fun m!77955 () Bool)

(assert (=> b!78087 m!77955))

(declare-fun m!77957 () Bool)

(assert (=> b!78087 m!77957))

(declare-fun m!77959 () Bool)

(assert (=> b!78087 m!77959))

(declare-fun m!77961 () Bool)

(assert (=> b!78087 m!77961))

(assert (=> b!78087 m!77957))

(assert (=> b!78087 m!77955))

(declare-fun m!77963 () Bool)

(assert (=> b!78087 m!77963))

(declare-fun m!77965 () Bool)

(assert (=> b!78087 m!77965))

(assert (=> b!78087 m!77941))

(declare-fun m!77967 () Bool)

(assert (=> b!78087 m!77967))

(assert (=> b!78087 m!77951))

(declare-fun m!77969 () Bool)

(assert (=> b!78087 m!77969))

(declare-fun m!77971 () Bool)

(assert (=> bm!7154 m!77971))

(assert (=> bm!7155 m!77953))

(declare-fun m!77973 () Bool)

(assert (=> b!78088 m!77973))

(assert (=> b!78086 m!77965))

(assert (=> b!78086 m!77965))

(declare-fun m!77975 () Bool)

(assert (=> b!78086 m!77975))

(declare-fun m!77977 () Bool)

(assert (=> d!18409 m!77977))

(declare-fun m!77979 () Bool)

(assert (=> bm!7153 m!77979))

(declare-fun m!77981 () Bool)

(assert (=> bm!7157 m!77981))

(declare-fun m!77983 () Bool)

(assert (=> b!78084 m!77983))

(declare-fun m!77985 () Bool)

(assert (=> b!78084 m!77985))

(assert (=> b!78084 m!77983))

(declare-fun m!77987 () Bool)

(assert (=> b!78084 m!77987))

(assert (=> b!78084 m!77965))

(declare-fun m!77989 () Bool)

(assert (=> b!78084 m!77989))

(assert (=> b!78084 m!77985))

(assert (=> b!78084 m!77965))

(assert (=> b!78095 m!77965))

(assert (=> b!78095 m!77965))

(assert (=> b!78095 m!77975))

(declare-fun m!77991 () Bool)

(assert (=> b!78104 m!77991))

(assert (=> b!78100 m!77965))

(assert (=> b!78100 m!77965))

(declare-fun m!77993 () Bool)

(assert (=> b!78100 m!77993))

(assert (=> b!78019 d!18409))

(declare-fun d!18411 () Bool)

(declare-fun get!1180 (Option!141) V!2993)

(assert (=> d!18411 (= (apply!79 lt!35901 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1180 (getValueByKey!135 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3299 () Bool)

(assert (= bs!3299 d!18411))

(declare-fun m!77995 () Bool)

(assert (=> bs!3299 m!77995))

(assert (=> bs!3299 m!77995))

(declare-fun m!77997 () Bool)

(assert (=> bs!3299 m!77997))

(assert (=> b!77897 d!18411))

(declare-fun d!18413 () Bool)

(assert (=> d!18413 (= (get!1178 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2583 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> b!78058 d!18413))

(declare-fun d!18415 () Bool)

(assert (=> d!18415 (= (map!1173 (_2!1098 lt!35994)) (getCurrentListMap!421 (_keys!3930 (_2!1098 lt!35994)) (_values!2254 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994)) (extraKeys!2122 (_2!1098 lt!35994)) (zeroValue!2169 (_2!1098 lt!35994)) (minValue!2169 (_2!1098 lt!35994)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1098 lt!35994))))))

(declare-fun bs!3300 () Bool)

(assert (= bs!3300 d!18415))

(declare-fun m!77999 () Bool)

(assert (=> bs!3300 m!77999))

(assert (=> bm!7139 d!18415))

(declare-fun d!18417 () Bool)

(assert (=> d!18417 (= (inRange!0 (ite c!11923 (ite c!11931 (index!3107 lt!35995) (ite c!11924 (index!3106 lt!36008) (index!3109 lt!36008))) (ite c!11925 (index!3107 lt!36009) (ite c!11933 (index!3106 lt!36003) (index!3109 lt!36003)))) (mask!6266 newMap!16)) (and (bvsge (ite c!11923 (ite c!11931 (index!3107 lt!35995) (ite c!11924 (index!3106 lt!36008) (index!3109 lt!36008))) (ite c!11925 (index!3107 lt!36009) (ite c!11933 (index!3106 lt!36003) (index!3109 lt!36003)))) #b00000000000000000000000000000000) (bvslt (ite c!11923 (ite c!11931 (index!3107 lt!35995) (ite c!11924 (index!3106 lt!36008) (index!3109 lt!36008))) (ite c!11925 (index!3107 lt!36009) (ite c!11933 (index!3106 lt!36003) (index!3109 lt!36003)))) (bvadd (mask!6266 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7135 d!18417))

(declare-fun d!18419 () Bool)

(assert (=> d!18419 (= (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (and (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!77921 d!18419))

(declare-fun d!18421 () Bool)

(declare-fun res!40925 () Bool)

(declare-fun e!51076 () Bool)

(assert (=> d!18421 (=> (not res!40925) (not e!51076))))

(assert (=> d!18421 (= res!40925 (validMask!0 (mask!6266 newMap!16)))))

(assert (=> d!18421 (= (simpleValid!55 newMap!16) e!51076)))

(declare-fun b!78114 () Bool)

(declare-fun res!40923 () Bool)

(assert (=> b!78114 (=> (not res!40923) (not e!51076))))

(declare-fun size!2130 (LongMapFixedSize!730) (_ BitVec 32))

(assert (=> b!78114 (= res!40923 (bvsge (size!2130 newMap!16) (_size!414 newMap!16)))))

(declare-fun b!78113 () Bool)

(declare-fun res!40924 () Bool)

(assert (=> b!78113 (=> (not res!40924) (not e!51076))))

(assert (=> b!78113 (= res!40924 (and (= (size!2125 (_values!2254 newMap!16)) (bvadd (mask!6266 newMap!16) #b00000000000000000000000000000001)) (= (size!2124 (_keys!3930 newMap!16)) (size!2125 (_values!2254 newMap!16))) (bvsge (_size!414 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!414 newMap!16) (bvadd (mask!6266 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!78115 () Bool)

(declare-fun res!40922 () Bool)

(assert (=> b!78115 (=> (not res!40922) (not e!51076))))

(assert (=> b!78115 (= res!40922 (= (size!2130 newMap!16) (bvadd (_size!414 newMap!16) (bvsdiv (bvadd (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!78116 () Bool)

(assert (=> b!78116 (= e!51076 (and (bvsge (extraKeys!2122 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2122 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!414 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!18421 res!40925) b!78113))

(assert (= (and b!78113 res!40924) b!78114))

(assert (= (and b!78114 res!40923) b!78115))

(assert (= (and b!78115 res!40922) b!78116))

(assert (=> d!18421 m!77977))

(declare-fun m!78001 () Bool)

(assert (=> b!78114 m!78001))

(assert (=> b!78115 m!78001))

(assert (=> d!18349 d!18421))

(declare-fun d!18423 () Bool)

(declare-fun e!51078 () Bool)

(assert (=> d!18423 e!51078))

(declare-fun res!40926 () Bool)

(assert (=> d!18423 (=> res!40926 e!51078)))

(declare-fun lt!36039 () Bool)

(assert (=> d!18423 (= res!40926 (not lt!36039))))

(declare-fun lt!36040 () Bool)

(assert (=> d!18423 (= lt!36039 lt!36040)))

(declare-fun lt!36037 () Unit!2242)

(declare-fun e!51077 () Unit!2242)

(assert (=> d!18423 (= lt!36037 e!51077)))

(declare-fun c!11949 () Bool)

(assert (=> d!18423 (= c!11949 lt!36040)))

(assert (=> d!18423 (= lt!36040 (containsKey!139 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18423 (= (contains!739 lt!35837 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36039)))

(declare-fun b!78117 () Bool)

(declare-fun lt!36038 () Unit!2242)

(assert (=> b!78117 (= e!51077 lt!36038)))

(assert (=> b!78117 (= lt!36038 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78117 (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78118 () Bool)

(declare-fun Unit!2255 () Unit!2242)

(assert (=> b!78118 (= e!51077 Unit!2255)))

(declare-fun b!78119 () Bool)

(assert (=> b!78119 (= e!51078 (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18423 c!11949) b!78117))

(assert (= (and d!18423 (not c!11949)) b!78118))

(assert (= (and d!18423 (not res!40926)) b!78119))

(declare-fun m!78003 () Bool)

(assert (=> d!18423 m!78003))

(declare-fun m!78005 () Bool)

(assert (=> b!78117 m!78005))

(declare-fun m!78007 () Bool)

(assert (=> b!78117 m!78007))

(assert (=> b!78117 m!78007))

(declare-fun m!78009 () Bool)

(assert (=> b!78117 m!78009))

(assert (=> b!78119 m!78007))

(assert (=> b!78119 m!78007))

(assert (=> b!78119 m!78009))

(assert (=> b!77830 d!18423))

(declare-fun d!18425 () Bool)

(declare-fun e!51079 () Bool)

(assert (=> d!18425 e!51079))

(declare-fun res!40927 () Bool)

(assert (=> d!18425 (=> (not res!40927) (not e!51079))))

(declare-fun lt!36044 () ListLongMap!1433)

(assert (=> d!18425 (= res!40927 (contains!739 lt!36044 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36042 () List!1511)

(assert (=> d!18425 (= lt!36044 (ListLongMap!1434 lt!36042))))

(declare-fun lt!36041 () Unit!2242)

(declare-fun lt!36043 () Unit!2242)

(assert (=> d!18425 (= lt!36041 lt!36043)))

(assert (=> d!18425 (= (getValueByKey!135 lt!36042 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18425 (= lt!36043 (lemmaContainsTupThenGetReturnValue!55 lt!36042 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18425 (= lt!36042 (insertStrictlySorted!58 (toList!732 call!7141) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18425 (= (+!103 call!7141 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36044)))

(declare-fun b!78120 () Bool)

(declare-fun res!40928 () Bool)

(assert (=> b!78120 (=> (not res!40928) (not e!51079))))

(assert (=> b!78120 (= res!40928 (= (getValueByKey!135 (toList!732 lt!36044) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!78121 () Bool)

(assert (=> b!78121 (= e!51079 (contains!740 (toList!732 lt!36044) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!18425 res!40927) b!78120))

(assert (= (and b!78120 res!40928) b!78121))

(declare-fun m!78011 () Bool)

(assert (=> d!18425 m!78011))

(declare-fun m!78013 () Bool)

(assert (=> d!18425 m!78013))

(declare-fun m!78015 () Bool)

(assert (=> d!18425 m!78015))

(declare-fun m!78017 () Bool)

(assert (=> d!18425 m!78017))

(declare-fun m!78019 () Bool)

(assert (=> b!78120 m!78019))

(declare-fun m!78021 () Bool)

(assert (=> b!78121 m!78021))

(assert (=> b!78042 d!18425))

(declare-fun d!18427 () Bool)

(assert (=> d!18427 (= (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!77832 d!18427))

(declare-fun d!18429 () Bool)

(assert (=> d!18429 (= (apply!79 lt!35901 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1180 (getValueByKey!135 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3301 () Bool)

(assert (= bs!3301 d!18429))

(assert (=> bs!3301 m!77747))

(declare-fun m!78023 () Bool)

(assert (=> bs!3301 m!78023))

(assert (=> bs!3301 m!78023))

(declare-fun m!78025 () Bool)

(assert (=> bs!3301 m!78025))

(assert (=> b!77877 d!18429))

(declare-fun d!18431 () Bool)

(declare-fun c!11950 () Bool)

(assert (=> d!18431 (= c!11950 ((_ is ValueCellFull!911) (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!51080 () V!2993)

(assert (=> d!18431 (= (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51080)))

(declare-fun b!78122 () Bool)

(assert (=> b!78122 (= e!51080 (get!1178 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78123 () Bool)

(assert (=> b!78123 (= e!51080 (get!1179 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18431 c!11950) b!78122))

(assert (= (and d!18431 (not c!11950)) b!78123))

(assert (=> b!78122 m!77751))

(assert (=> b!78122 m!77489))

(declare-fun m!78027 () Bool)

(assert (=> b!78122 m!78027))

(assert (=> b!78123 m!77751))

(assert (=> b!78123 m!77489))

(declare-fun m!78029 () Bool)

(assert (=> b!78123 m!78029))

(assert (=> b!77877 d!18431))

(declare-fun d!18433 () Bool)

(declare-fun e!51082 () Bool)

(assert (=> d!18433 e!51082))

(declare-fun res!40929 () Bool)

(assert (=> d!18433 (=> res!40929 e!51082)))

(declare-fun lt!36047 () Bool)

(assert (=> d!18433 (= res!40929 (not lt!36047))))

(declare-fun lt!36048 () Bool)

(assert (=> d!18433 (= lt!36047 lt!36048)))

(declare-fun lt!36045 () Unit!2242)

(declare-fun e!51081 () Unit!2242)

(assert (=> d!18433 (= lt!36045 e!51081)))

(declare-fun c!11951 () Bool)

(assert (=> d!18433 (= c!11951 lt!36048)))

(assert (=> d!18433 (= lt!36048 (containsKey!139 (toList!732 lt!35793) (_1!1099 lt!35660)))))

(assert (=> d!18433 (= (contains!739 lt!35793 (_1!1099 lt!35660)) lt!36047)))

(declare-fun b!78124 () Bool)

(declare-fun lt!36046 () Unit!2242)

(assert (=> b!78124 (= e!51081 lt!36046)))

(assert (=> b!78124 (= lt!36046 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35793) (_1!1099 lt!35660)))))

(assert (=> b!78124 (isDefined!89 (getValueByKey!135 (toList!732 lt!35793) (_1!1099 lt!35660)))))

(declare-fun b!78125 () Bool)

(declare-fun Unit!2256 () Unit!2242)

(assert (=> b!78125 (= e!51081 Unit!2256)))

(declare-fun b!78126 () Bool)

(assert (=> b!78126 (= e!51082 (isDefined!89 (getValueByKey!135 (toList!732 lt!35793) (_1!1099 lt!35660))))))

(assert (= (and d!18433 c!11951) b!78124))

(assert (= (and d!18433 (not c!11951)) b!78125))

(assert (= (and d!18433 (not res!40929)) b!78126))

(declare-fun m!78031 () Bool)

(assert (=> d!18433 m!78031))

(declare-fun m!78033 () Bool)

(assert (=> b!78124 m!78033))

(assert (=> b!78124 m!77661))

(assert (=> b!78124 m!77661))

(declare-fun m!78035 () Bool)

(assert (=> b!78124 m!78035))

(assert (=> b!78126 m!77661))

(assert (=> b!78126 m!77661))

(assert (=> b!78126 m!78035))

(assert (=> d!18355 d!18433))

(declare-fun b!78127 () Bool)

(declare-fun e!51083 () Option!141)

(assert (=> b!78127 (= e!51083 (Some!140 (_2!1099 (h!2095 lt!35791))))))

(declare-fun b!78129 () Bool)

(declare-fun e!51084 () Option!141)

(assert (=> b!78129 (= e!51084 (getValueByKey!135 (t!5148 lt!35791) (_1!1099 lt!35660)))))

(declare-fun d!18435 () Bool)

(declare-fun c!11952 () Bool)

(assert (=> d!18435 (= c!11952 (and ((_ is Cons!1507) lt!35791) (= (_1!1099 (h!2095 lt!35791)) (_1!1099 lt!35660))))))

(assert (=> d!18435 (= (getValueByKey!135 lt!35791 (_1!1099 lt!35660)) e!51083)))

(declare-fun b!78130 () Bool)

(assert (=> b!78130 (= e!51084 None!139)))

(declare-fun b!78128 () Bool)

(assert (=> b!78128 (= e!51083 e!51084)))

(declare-fun c!11953 () Bool)

(assert (=> b!78128 (= c!11953 (and ((_ is Cons!1507) lt!35791) (not (= (_1!1099 (h!2095 lt!35791)) (_1!1099 lt!35660)))))))

(assert (= (and d!18435 c!11952) b!78127))

(assert (= (and d!18435 (not c!11952)) b!78128))

(assert (= (and b!78128 c!11953) b!78129))

(assert (= (and b!78128 (not c!11953)) b!78130))

(declare-fun m!78037 () Bool)

(assert (=> b!78129 m!78037))

(assert (=> d!18355 d!18435))

(declare-fun d!18437 () Bool)

(assert (=> d!18437 (= (getValueByKey!135 lt!35791 (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660)))))

(declare-fun lt!36051 () Unit!2242)

(declare-fun choose!462 (List!1511 (_ BitVec 64) V!2993) Unit!2242)

(assert (=> d!18437 (= lt!36051 (choose!462 lt!35791 (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(declare-fun e!51087 () Bool)

(assert (=> d!18437 e!51087))

(declare-fun res!40934 () Bool)

(assert (=> d!18437 (=> (not res!40934) (not e!51087))))

(declare-fun isStrictlySorted!290 (List!1511) Bool)

(assert (=> d!18437 (= res!40934 (isStrictlySorted!290 lt!35791))))

(assert (=> d!18437 (= (lemmaContainsTupThenGetReturnValue!55 lt!35791 (_1!1099 lt!35660) (_2!1099 lt!35660)) lt!36051)))

(declare-fun b!78135 () Bool)

(declare-fun res!40935 () Bool)

(assert (=> b!78135 (=> (not res!40935) (not e!51087))))

(assert (=> b!78135 (= res!40935 (containsKey!139 lt!35791 (_1!1099 lt!35660)))))

(declare-fun b!78136 () Bool)

(assert (=> b!78136 (= e!51087 (contains!740 lt!35791 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!18437 res!40934) b!78135))

(assert (= (and b!78135 res!40935) b!78136))

(assert (=> d!18437 m!77655))

(declare-fun m!78039 () Bool)

(assert (=> d!18437 m!78039))

(declare-fun m!78041 () Bool)

(assert (=> d!18437 m!78041))

(declare-fun m!78043 () Bool)

(assert (=> b!78135 m!78043))

(declare-fun m!78045 () Bool)

(assert (=> b!78136 m!78045))

(assert (=> d!18355 d!18437))

(declare-fun b!78157 () Bool)

(declare-fun e!51099 () List!1511)

(declare-fun call!7168 () List!1511)

(assert (=> b!78157 (= e!51099 call!7168)))

(declare-fun b!78158 () Bool)

(declare-fun res!40941 () Bool)

(declare-fun e!51101 () Bool)

(assert (=> b!78158 (=> (not res!40941) (not e!51101))))

(declare-fun lt!36054 () List!1511)

(assert (=> b!78158 (= res!40941 (containsKey!139 lt!36054 (_1!1099 lt!35660)))))

(declare-fun bm!7165 () Bool)

(declare-fun c!11963 () Bool)

(declare-fun call!7169 () List!1511)

(declare-fun e!51102 () List!1511)

(declare-fun $colon$colon!68 (List!1511 tuple2!2176) List!1511)

(assert (=> bm!7165 (= call!7169 ($colon$colon!68 e!51102 (ite c!11963 (h!2095 (toList!732 lt!35662)) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660)))))))

(declare-fun c!11964 () Bool)

(assert (=> bm!7165 (= c!11964 c!11963)))

(declare-fun b!78159 () Bool)

(declare-fun c!11962 () Bool)

(declare-fun c!11965 () Bool)

(assert (=> b!78159 (= e!51102 (ite c!11962 (t!5148 (toList!732 lt!35662)) (ite c!11965 (Cons!1507 (h!2095 (toList!732 lt!35662)) (t!5148 (toList!732 lt!35662))) Nil!1508)))))

(declare-fun d!18439 () Bool)

(assert (=> d!18439 e!51101))

(declare-fun res!40940 () Bool)

(assert (=> d!18439 (=> (not res!40940) (not e!51101))))

(assert (=> d!18439 (= res!40940 (isStrictlySorted!290 lt!36054))))

(declare-fun e!51098 () List!1511)

(assert (=> d!18439 (= lt!36054 e!51098)))

(assert (=> d!18439 (= c!11963 (and ((_ is Cons!1507) (toList!732 lt!35662)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 lt!35660))))))

(assert (=> d!18439 (isStrictlySorted!290 (toList!732 lt!35662))))

(assert (=> d!18439 (= (insertStrictlySorted!58 (toList!732 lt!35662) (_1!1099 lt!35660) (_2!1099 lt!35660)) lt!36054)))

(declare-fun bm!7166 () Bool)

(declare-fun call!7170 () List!1511)

(assert (=> bm!7166 (= call!7170 call!7168)))

(declare-fun b!78160 () Bool)

(assert (=> b!78160 (= c!11965 (and ((_ is Cons!1507) (toList!732 lt!35662)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 lt!35660))))))

(declare-fun e!51100 () List!1511)

(assert (=> b!78160 (= e!51099 e!51100)))

(declare-fun b!78161 () Bool)

(assert (=> b!78161 (= e!51100 call!7170)))

(declare-fun b!78162 () Bool)

(assert (=> b!78162 (= e!51098 e!51099)))

(assert (=> b!78162 (= c!11962 (and ((_ is Cons!1507) (toList!732 lt!35662)) (= (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 lt!35660))))))

(declare-fun b!78163 () Bool)

(assert (=> b!78163 (= e!51100 call!7170)))

(declare-fun bm!7167 () Bool)

(assert (=> bm!7167 (= call!7168 call!7169)))

(declare-fun b!78164 () Bool)

(assert (=> b!78164 (= e!51102 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35662)) (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(declare-fun b!78165 () Bool)

(assert (=> b!78165 (= e!51098 call!7169)))

(declare-fun b!78166 () Bool)

(assert (=> b!78166 (= e!51101 (contains!740 lt!36054 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!18439 c!11963) b!78165))

(assert (= (and d!18439 (not c!11963)) b!78162))

(assert (= (and b!78162 c!11962) b!78157))

(assert (= (and b!78162 (not c!11962)) b!78160))

(assert (= (and b!78160 c!11965) b!78163))

(assert (= (and b!78160 (not c!11965)) b!78161))

(assert (= (or b!78163 b!78161) bm!7166))

(assert (= (or b!78157 bm!7166) bm!7167))

(assert (= (or b!78165 bm!7167) bm!7165))

(assert (= (and bm!7165 c!11964) b!78164))

(assert (= (and bm!7165 (not c!11964)) b!78159))

(assert (= (and d!18439 res!40940) b!78158))

(assert (= (and b!78158 res!40941) b!78166))

(declare-fun m!78047 () Bool)

(assert (=> b!78164 m!78047))

(declare-fun m!78049 () Bool)

(assert (=> bm!7165 m!78049))

(declare-fun m!78051 () Bool)

(assert (=> b!78158 m!78051))

(declare-fun m!78053 () Bool)

(assert (=> b!78166 m!78053))

(declare-fun m!78055 () Bool)

(assert (=> d!18439 m!78055))

(declare-fun m!78057 () Bool)

(assert (=> d!18439 m!78057))

(assert (=> d!18355 d!18439))

(declare-fun d!18441 () Bool)

(declare-fun e!51104 () Bool)

(assert (=> d!18441 e!51104))

(declare-fun res!40942 () Bool)

(assert (=> d!18441 (=> res!40942 e!51104)))

(declare-fun lt!36057 () Bool)

(assert (=> d!18441 (= res!40942 (not lt!36057))))

(declare-fun lt!36058 () Bool)

(assert (=> d!18441 (= lt!36057 lt!36058)))

(declare-fun lt!36055 () Unit!2242)

(declare-fun e!51103 () Unit!2242)

(assert (=> d!18441 (= lt!36055 e!51103)))

(declare-fun c!11966 () Bool)

(assert (=> d!18441 (= c!11966 lt!36058)))

(assert (=> d!18441 (= lt!36058 (containsKey!139 (toList!732 lt!35842) (_1!1099 lt!35659)))))

(assert (=> d!18441 (= (contains!739 lt!35842 (_1!1099 lt!35659)) lt!36057)))

(declare-fun b!78167 () Bool)

(declare-fun lt!36056 () Unit!2242)

(assert (=> b!78167 (= e!51103 lt!36056)))

(assert (=> b!78167 (= lt!36056 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35842) (_1!1099 lt!35659)))))

(assert (=> b!78167 (isDefined!89 (getValueByKey!135 (toList!732 lt!35842) (_1!1099 lt!35659)))))

(declare-fun b!78168 () Bool)

(declare-fun Unit!2257 () Unit!2242)

(assert (=> b!78168 (= e!51103 Unit!2257)))

(declare-fun b!78169 () Bool)

(assert (=> b!78169 (= e!51104 (isDefined!89 (getValueByKey!135 (toList!732 lt!35842) (_1!1099 lt!35659))))))

(assert (= (and d!18441 c!11966) b!78167))

(assert (= (and d!18441 (not c!11966)) b!78168))

(assert (= (and d!18441 (not res!40942)) b!78169))

(declare-fun m!78059 () Bool)

(assert (=> d!18441 m!78059))

(declare-fun m!78061 () Bool)

(assert (=> b!78167 m!78061))

(assert (=> b!78167 m!77781))

(assert (=> b!78167 m!77781))

(declare-fun m!78063 () Bool)

(assert (=> b!78167 m!78063))

(assert (=> b!78169 m!77781))

(assert (=> b!78169 m!77781))

(assert (=> b!78169 m!78063))

(assert (=> d!18375 d!18441))

(declare-fun b!78170 () Bool)

(declare-fun e!51105 () Option!141)

(assert (=> b!78170 (= e!51105 (Some!140 (_2!1099 (h!2095 lt!35840))))))

(declare-fun b!78172 () Bool)

(declare-fun e!51106 () Option!141)

(assert (=> b!78172 (= e!51106 (getValueByKey!135 (t!5148 lt!35840) (_1!1099 lt!35659)))))

(declare-fun d!18443 () Bool)

(declare-fun c!11967 () Bool)

(assert (=> d!18443 (= c!11967 (and ((_ is Cons!1507) lt!35840) (= (_1!1099 (h!2095 lt!35840)) (_1!1099 lt!35659))))))

(assert (=> d!18443 (= (getValueByKey!135 lt!35840 (_1!1099 lt!35659)) e!51105)))

(declare-fun b!78173 () Bool)

(assert (=> b!78173 (= e!51106 None!139)))

(declare-fun b!78171 () Bool)

(assert (=> b!78171 (= e!51105 e!51106)))

(declare-fun c!11968 () Bool)

(assert (=> b!78171 (= c!11968 (and ((_ is Cons!1507) lt!35840) (not (= (_1!1099 (h!2095 lt!35840)) (_1!1099 lt!35659)))))))

(assert (= (and d!18443 c!11967) b!78170))

(assert (= (and d!18443 (not c!11967)) b!78171))

(assert (= (and b!78171 c!11968) b!78172))

(assert (= (and b!78171 (not c!11968)) b!78173))

(declare-fun m!78065 () Bool)

(assert (=> b!78172 m!78065))

(assert (=> d!18375 d!18443))

(declare-fun d!18445 () Bool)

(assert (=> d!18445 (= (getValueByKey!135 lt!35840 (_1!1099 lt!35659)) (Some!140 (_2!1099 lt!35659)))))

(declare-fun lt!36059 () Unit!2242)

(assert (=> d!18445 (= lt!36059 (choose!462 lt!35840 (_1!1099 lt!35659) (_2!1099 lt!35659)))))

(declare-fun e!51107 () Bool)

(assert (=> d!18445 e!51107))

(declare-fun res!40943 () Bool)

(assert (=> d!18445 (=> (not res!40943) (not e!51107))))

(assert (=> d!18445 (= res!40943 (isStrictlySorted!290 lt!35840))))

(assert (=> d!18445 (= (lemmaContainsTupThenGetReturnValue!55 lt!35840 (_1!1099 lt!35659) (_2!1099 lt!35659)) lt!36059)))

(declare-fun b!78174 () Bool)

(declare-fun res!40944 () Bool)

(assert (=> b!78174 (=> (not res!40944) (not e!51107))))

(assert (=> b!78174 (= res!40944 (containsKey!139 lt!35840 (_1!1099 lt!35659)))))

(declare-fun b!78175 () Bool)

(assert (=> b!78175 (= e!51107 (contains!740 lt!35840 (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(assert (= (and d!18445 res!40943) b!78174))

(assert (= (and b!78174 res!40944) b!78175))

(assert (=> d!18445 m!77775))

(declare-fun m!78067 () Bool)

(assert (=> d!18445 m!78067))

(declare-fun m!78069 () Bool)

(assert (=> d!18445 m!78069))

(declare-fun m!78071 () Bool)

(assert (=> b!78174 m!78071))

(declare-fun m!78073 () Bool)

(assert (=> b!78175 m!78073))

(assert (=> d!18375 d!18445))

(declare-fun b!78176 () Bool)

(declare-fun e!51109 () List!1511)

(declare-fun call!7171 () List!1511)

(assert (=> b!78176 (= e!51109 call!7171)))

(declare-fun b!78177 () Bool)

(declare-fun res!40946 () Bool)

(declare-fun e!51111 () Bool)

(assert (=> b!78177 (=> (not res!40946) (not e!51111))))

(declare-fun lt!36060 () List!1511)

(assert (=> b!78177 (= res!40946 (containsKey!139 lt!36060 (_1!1099 lt!35659)))))

(declare-fun call!7172 () List!1511)

(declare-fun bm!7168 () Bool)

(declare-fun e!51112 () List!1511)

(declare-fun c!11970 () Bool)

(assert (=> bm!7168 (= call!7172 ($colon$colon!68 e!51112 (ite c!11970 (h!2095 (toList!732 lt!35662)) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659)))))))

(declare-fun c!11971 () Bool)

(assert (=> bm!7168 (= c!11971 c!11970)))

(declare-fun b!78178 () Bool)

(declare-fun c!11969 () Bool)

(declare-fun c!11972 () Bool)

(assert (=> b!78178 (= e!51112 (ite c!11969 (t!5148 (toList!732 lt!35662)) (ite c!11972 (Cons!1507 (h!2095 (toList!732 lt!35662)) (t!5148 (toList!732 lt!35662))) Nil!1508)))))

(declare-fun d!18447 () Bool)

(assert (=> d!18447 e!51111))

(declare-fun res!40945 () Bool)

(assert (=> d!18447 (=> (not res!40945) (not e!51111))))

(assert (=> d!18447 (= res!40945 (isStrictlySorted!290 lt!36060))))

(declare-fun e!51108 () List!1511)

(assert (=> d!18447 (= lt!36060 e!51108)))

(assert (=> d!18447 (= c!11970 (and ((_ is Cons!1507) (toList!732 lt!35662)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 lt!35659))))))

(assert (=> d!18447 (isStrictlySorted!290 (toList!732 lt!35662))))

(assert (=> d!18447 (= (insertStrictlySorted!58 (toList!732 lt!35662) (_1!1099 lt!35659) (_2!1099 lt!35659)) lt!36060)))

(declare-fun bm!7169 () Bool)

(declare-fun call!7173 () List!1511)

(assert (=> bm!7169 (= call!7173 call!7171)))

(declare-fun b!78179 () Bool)

(assert (=> b!78179 (= c!11972 (and ((_ is Cons!1507) (toList!732 lt!35662)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 lt!35659))))))

(declare-fun e!51110 () List!1511)

(assert (=> b!78179 (= e!51109 e!51110)))

(declare-fun b!78180 () Bool)

(assert (=> b!78180 (= e!51110 call!7173)))

(declare-fun b!78181 () Bool)

(assert (=> b!78181 (= e!51108 e!51109)))

(assert (=> b!78181 (= c!11969 (and ((_ is Cons!1507) (toList!732 lt!35662)) (= (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 lt!35659))))))

(declare-fun b!78182 () Bool)

(assert (=> b!78182 (= e!51110 call!7173)))

(declare-fun bm!7170 () Bool)

(assert (=> bm!7170 (= call!7171 call!7172)))

(declare-fun b!78183 () Bool)

(assert (=> b!78183 (= e!51112 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35662)) (_1!1099 lt!35659) (_2!1099 lt!35659)))))

(declare-fun b!78184 () Bool)

(assert (=> b!78184 (= e!51108 call!7172)))

(declare-fun b!78185 () Bool)

(assert (=> b!78185 (= e!51111 (contains!740 lt!36060 (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(assert (= (and d!18447 c!11970) b!78184))

(assert (= (and d!18447 (not c!11970)) b!78181))

(assert (= (and b!78181 c!11969) b!78176))

(assert (= (and b!78181 (not c!11969)) b!78179))

(assert (= (and b!78179 c!11972) b!78182))

(assert (= (and b!78179 (not c!11972)) b!78180))

(assert (= (or b!78182 b!78180) bm!7169))

(assert (= (or b!78176 bm!7169) bm!7170))

(assert (= (or b!78184 bm!7170) bm!7168))

(assert (= (and bm!7168 c!11971) b!78183))

(assert (= (and bm!7168 (not c!11971)) b!78178))

(assert (= (and d!18447 res!40945) b!78177))

(assert (= (and b!78177 res!40946) b!78185))

(declare-fun m!78075 () Bool)

(assert (=> b!78183 m!78075))

(declare-fun m!78077 () Bool)

(assert (=> bm!7168 m!78077))

(declare-fun m!78079 () Bool)

(assert (=> b!78177 m!78079))

(declare-fun m!78081 () Bool)

(assert (=> b!78185 m!78081))

(declare-fun m!78083 () Bool)

(assert (=> d!18447 m!78083))

(assert (=> d!18447 m!78057))

(assert (=> d!18375 d!18447))

(declare-fun b!78194 () Bool)

(declare-fun e!51120 () Bool)

(declare-fun call!7176 () Bool)

(assert (=> b!78194 (= e!51120 call!7176)))

(declare-fun d!18449 () Bool)

(declare-fun res!40952 () Bool)

(declare-fun e!51121 () Bool)

(assert (=> d!18449 (=> res!40952 e!51121)))

(assert (=> d!18449 (= res!40952 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!18449 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3930 newMap!16) (mask!6266 newMap!16)) e!51121)))

(declare-fun b!78195 () Bool)

(declare-fun e!51119 () Bool)

(assert (=> b!78195 (= e!51121 e!51119)))

(declare-fun c!11975 () Bool)

(assert (=> b!78195 (= c!11975 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78196 () Bool)

(assert (=> b!78196 (= e!51119 call!7176)))

(declare-fun b!78197 () Bool)

(assert (=> b!78197 (= e!51119 e!51120)))

(declare-fun lt!36068 () (_ BitVec 64))

(assert (=> b!78197 (= lt!36068 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36069 () Unit!2242)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3951 (_ BitVec 64) (_ BitVec 32)) Unit!2242)

(assert (=> b!78197 (= lt!36069 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3930 newMap!16) lt!36068 #b00000000000000000000000000000000))))

(assert (=> b!78197 (arrayContainsKey!0 (_keys!3930 newMap!16) lt!36068 #b00000000000000000000000000000000)))

(declare-fun lt!36067 () Unit!2242)

(assert (=> b!78197 (= lt!36067 lt!36069)))

(declare-fun res!40951 () Bool)

(assert (=> b!78197 (= res!40951 (= (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) (_keys!3930 newMap!16) (mask!6266 newMap!16)) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!78197 (=> (not res!40951) (not e!51120))))

(declare-fun bm!7173 () Bool)

(assert (=> bm!7173 (= call!7176 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(assert (= (and d!18449 (not res!40952)) b!78195))

(assert (= (and b!78195 c!11975) b!78197))

(assert (= (and b!78195 (not c!11975)) b!78196))

(assert (= (and b!78197 res!40951) b!78194))

(assert (= (or b!78194 b!78196) bm!7173))

(assert (=> b!78195 m!77965))

(assert (=> b!78195 m!77965))

(assert (=> b!78195 m!77975))

(assert (=> b!78197 m!77965))

(declare-fun m!78085 () Bool)

(assert (=> b!78197 m!78085))

(declare-fun m!78087 () Bool)

(assert (=> b!78197 m!78087))

(assert (=> b!78197 m!77965))

(declare-fun m!78089 () Bool)

(assert (=> b!78197 m!78089))

(declare-fun m!78091 () Bool)

(assert (=> bm!7173 m!78091))

(assert (=> b!77779 d!18449))

(declare-fun d!18451 () Bool)

(declare-fun res!40953 () Bool)

(declare-fun e!51122 () Bool)

(assert (=> d!18451 (=> (not res!40953) (not e!51122))))

(assert (=> d!18451 (= res!40953 (simpleValid!55 (v!2584 (underlying!273 thiss!992))))))

(assert (=> d!18451 (= (valid!321 (v!2584 (underlying!273 thiss!992))) e!51122)))

(declare-fun b!78198 () Bool)

(declare-fun res!40954 () Bool)

(assert (=> b!78198 (=> (not res!40954) (not e!51122))))

(assert (=> b!78198 (= res!40954 (= (arrayCountValidKeys!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000 (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))) (_size!414 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun b!78199 () Bool)

(declare-fun res!40955 () Bool)

(assert (=> b!78199 (=> (not res!40955) (not e!51122))))

(assert (=> b!78199 (= res!40955 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun b!78200 () Bool)

(assert (=> b!78200 (= e!51122 (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000 Nil!1507))))

(assert (= (and d!18451 res!40953) b!78198))

(assert (= (and b!78198 res!40954) b!78199))

(assert (= (and b!78199 res!40955) b!78200))

(declare-fun m!78093 () Bool)

(assert (=> d!18451 m!78093))

(declare-fun m!78095 () Bool)

(assert (=> b!78198 m!78095))

(declare-fun m!78097 () Bool)

(assert (=> b!78199 m!78097))

(declare-fun m!78099 () Bool)

(assert (=> b!78200 m!78099))

(assert (=> d!18377 d!18451))

(declare-fun d!18453 () Bool)

(declare-fun e!51124 () Bool)

(assert (=> d!18453 e!51124))

(declare-fun res!40956 () Bool)

(assert (=> d!18453 (=> res!40956 e!51124)))

(declare-fun lt!36072 () Bool)

(assert (=> d!18453 (= res!40956 (not lt!36072))))

(declare-fun lt!36073 () Bool)

(assert (=> d!18453 (= lt!36072 lt!36073)))

(declare-fun lt!36070 () Unit!2242)

(declare-fun e!51123 () Unit!2242)

(assert (=> d!18453 (= lt!36070 e!51123)))

(declare-fun c!11976 () Bool)

(assert (=> d!18453 (= c!11976 lt!36073)))

(assert (=> d!18453 (= lt!36073 (containsKey!139 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!18453 (= (contains!739 lt!35901 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36072)))

(declare-fun b!78201 () Bool)

(declare-fun lt!36071 () Unit!2242)

(assert (=> b!78201 (= e!51123 lt!36071)))

(assert (=> b!78201 (= lt!36071 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78201 (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78202 () Bool)

(declare-fun Unit!2258 () Unit!2242)

(assert (=> b!78202 (= e!51123 Unit!2258)))

(declare-fun b!78203 () Bool)

(assert (=> b!78203 (= e!51124 (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!18453 c!11976) b!78201))

(assert (= (and d!18453 (not c!11976)) b!78202))

(assert (= (and d!18453 (not res!40956)) b!78203))

(assert (=> d!18453 m!77747))

(declare-fun m!78101 () Bool)

(assert (=> d!18453 m!78101))

(assert (=> b!78201 m!77747))

(declare-fun m!78103 () Bool)

(assert (=> b!78201 m!78103))

(assert (=> b!78201 m!77747))

(assert (=> b!78201 m!78023))

(assert (=> b!78201 m!78023))

(declare-fun m!78105 () Bool)

(assert (=> b!78201 m!78105))

(assert (=> b!78203 m!77747))

(assert (=> b!78203 m!78023))

(assert (=> b!78203 m!78023))

(assert (=> b!78203 m!78105))

(assert (=> b!77893 d!18453))

(declare-fun d!18455 () Bool)

(assert (=> d!18455 (isDefined!89 (getValueByKey!135 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun lt!36076 () Unit!2242)

(declare-fun choose!463 (List!1511 (_ BitVec 64)) Unit!2242)

(assert (=> d!18455 (= lt!36076 (choose!463 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun e!51127 () Bool)

(assert (=> d!18455 e!51127))

(declare-fun res!40959 () Bool)

(assert (=> d!18455 (=> (not res!40959) (not e!51127))))

(assert (=> d!18455 (= res!40959 (isStrictlySorted!290 (toList!732 lt!35664)))))

(assert (=> d!18455 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) lt!36076)))

(declare-fun b!78206 () Bool)

(assert (=> b!78206 (= e!51127 (containsKey!139 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!18455 res!40959) b!78206))

(assert (=> d!18455 m!77463))

(assert (=> d!18455 m!77853))

(assert (=> d!18455 m!77853))

(assert (=> d!18455 m!77855))

(assert (=> d!18455 m!77463))

(declare-fun m!78107 () Bool)

(assert (=> d!18455 m!78107))

(declare-fun m!78109 () Bool)

(assert (=> d!18455 m!78109))

(assert (=> b!78206 m!77463))

(assert (=> b!78206 m!77849))

(assert (=> b!77931 d!18455))

(assert (=> b!77931 d!18403))

(assert (=> b!77931 d!18405))

(assert (=> b!77879 d!18427))

(declare-fun b!78207 () Bool)

(assert (=> b!78207 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> b!78207 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2125 (_values!2254 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!51130 () Bool)

(declare-fun lt!36082 () ListLongMap!1433)

(assert (=> b!78207 (= e!51130 (= (apply!79 lt!36082 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!78209 () Bool)

(declare-fun lt!36077 () Unit!2242)

(declare-fun lt!36078 () Unit!2242)

(assert (=> b!78209 (= lt!36077 lt!36078)))

(declare-fun lt!36083 () (_ BitVec 64))

(declare-fun lt!36080 () (_ BitVec 64))

(declare-fun lt!36081 () ListLongMap!1433)

(declare-fun lt!36079 () V!2993)

(assert (=> b!78209 (not (contains!739 (+!103 lt!36081 (tuple2!2177 lt!36083 lt!36079)) lt!36080))))

(assert (=> b!78209 (= lt!36078 (addStillNotContains!29 lt!36081 lt!36083 lt!36079 lt!36080))))

(assert (=> b!78209 (= lt!36080 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!78209 (= lt!36079 (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!78209 (= lt!36083 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!7177 () ListLongMap!1433)

(assert (=> b!78209 (= lt!36081 call!7177)))

(declare-fun e!51133 () ListLongMap!1433)

(assert (=> b!78209 (= e!51133 (+!103 call!7177 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7174 () Bool)

(assert (=> bm!7174 (= call!7177 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun b!78210 () Bool)

(declare-fun e!51134 () ListLongMap!1433)

(assert (=> b!78210 (= e!51134 e!51133)))

(declare-fun c!11980 () Bool)

(assert (=> b!78210 (= c!11980 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78211 () Bool)

(declare-fun e!51131 () Bool)

(assert (=> b!78211 (= e!51131 (= lt!36082 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!78212 () Bool)

(declare-fun e!51128 () Bool)

(assert (=> b!78212 (= e!51128 e!51130)))

(assert (=> b!78212 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun res!40963 () Bool)

(assert (=> b!78212 (= res!40963 (contains!739 lt!36082 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!78212 (=> (not res!40963) (not e!51130))))

(declare-fun b!78213 () Bool)

(assert (=> b!78213 (= e!51134 (ListLongMap!1434 Nil!1508))))

(declare-fun b!78214 () Bool)

(assert (=> b!78214 (= e!51133 call!7177)))

(declare-fun b!78215 () Bool)

(declare-fun e!51132 () Bool)

(assert (=> b!78215 (= e!51132 e!51128)))

(declare-fun c!11978 () Bool)

(declare-fun e!51129 () Bool)

(assert (=> b!78215 (= c!11978 e!51129)))

(declare-fun res!40961 () Bool)

(assert (=> b!78215 (=> (not res!40961) (not e!51129))))

(assert (=> b!78215 (= res!40961 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!78216 () Bool)

(declare-fun res!40960 () Bool)

(assert (=> b!78216 (=> (not res!40960) (not e!51132))))

(assert (=> b!78216 (= res!40960 (not (contains!739 lt!36082 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!18457 () Bool)

(assert (=> d!18457 e!51132))

(declare-fun res!40962 () Bool)

(assert (=> d!18457 (=> (not res!40962) (not e!51132))))

(assert (=> d!18457 (= res!40962 (not (contains!739 lt!36082 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18457 (= lt!36082 e!51134)))

(declare-fun c!11979 () Bool)

(assert (=> d!18457 (= c!11979 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!18457 (validMask!0 (mask!6266 (v!2584 (underlying!273 thiss!992))))))

(assert (=> d!18457 (= (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))) lt!36082)))

(declare-fun b!78208 () Bool)

(assert (=> b!78208 (= e!51128 e!51131)))

(declare-fun c!11977 () Bool)

(assert (=> b!78208 (= c!11977 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!78217 () Bool)

(assert (=> b!78217 (= e!51131 (isEmpty!330 lt!36082))))

(declare-fun b!78218 () Bool)

(assert (=> b!78218 (= e!51129 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!78218 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!18457 c!11979) b!78213))

(assert (= (and d!18457 (not c!11979)) b!78210))

(assert (= (and b!78210 c!11980) b!78209))

(assert (= (and b!78210 (not c!11980)) b!78214))

(assert (= (or b!78209 b!78214) bm!7174))

(assert (= (and d!18457 res!40962) b!78216))

(assert (= (and b!78216 res!40960) b!78215))

(assert (= (and b!78215 res!40961) b!78218))

(assert (= (and b!78215 c!11978) b!78212))

(assert (= (and b!78215 (not c!11978)) b!78208))

(assert (= (and b!78212 res!40963) b!78207))

(assert (= (and b!78208 c!11977) b!78211))

(assert (= (and b!78208 (not c!11977)) b!78217))

(declare-fun b_lambda!3491 () Bool)

(assert (=> (not b_lambda!3491) (not b!78207)))

(assert (=> b!78207 t!5144))

(declare-fun b_and!4801 () Bool)

(assert (= b_and!4797 (and (=> t!5144 result!2801) b_and!4801)))

(assert (=> b!78207 t!5146))

(declare-fun b_and!4803 () Bool)

(assert (= b_and!4799 (and (=> t!5146 result!2805) b_and!4803)))

(declare-fun b_lambda!3493 () Bool)

(assert (=> (not b_lambda!3493) (not b!78209)))

(assert (=> b!78209 t!5144))

(declare-fun b_and!4805 () Bool)

(assert (= b_and!4801 (and (=> t!5144 result!2801) b_and!4805)))

(assert (=> b!78209 t!5146))

(declare-fun b_and!4807 () Bool)

(assert (= b_and!4803 (and (=> t!5146 result!2805) b_and!4807)))

(declare-fun m!78111 () Bool)

(assert (=> b!78216 m!78111))

(declare-fun m!78113 () Bool)

(assert (=> b!78210 m!78113))

(assert (=> b!78210 m!78113))

(declare-fun m!78115 () Bool)

(assert (=> b!78210 m!78115))

(assert (=> b!78207 m!77489))

(declare-fun m!78117 () Bool)

(assert (=> b!78207 m!78117))

(assert (=> b!78207 m!78113))

(assert (=> b!78207 m!78117))

(assert (=> b!78207 m!77489))

(declare-fun m!78119 () Bool)

(assert (=> b!78207 m!78119))

(assert (=> b!78207 m!78113))

(declare-fun m!78121 () Bool)

(assert (=> b!78207 m!78121))

(declare-fun m!78123 () Bool)

(assert (=> bm!7174 m!78123))

(declare-fun m!78125 () Bool)

(assert (=> d!18457 m!78125))

(assert (=> d!18457 m!77475))

(assert (=> b!78218 m!78113))

(assert (=> b!78218 m!78113))

(assert (=> b!78218 m!78115))

(assert (=> b!78209 m!77489))

(declare-fun m!78127 () Bool)

(assert (=> b!78209 m!78127))

(assert (=> b!78209 m!78127))

(declare-fun m!78129 () Bool)

(assert (=> b!78209 m!78129))

(assert (=> b!78209 m!78117))

(declare-fun m!78131 () Bool)

(assert (=> b!78209 m!78131))

(declare-fun m!78133 () Bool)

(assert (=> b!78209 m!78133))

(assert (=> b!78209 m!78117))

(assert (=> b!78209 m!77489))

(assert (=> b!78209 m!78119))

(assert (=> b!78209 m!78113))

(assert (=> b!78212 m!78113))

(assert (=> b!78212 m!78113))

(declare-fun m!78135 () Bool)

(assert (=> b!78212 m!78135))

(declare-fun m!78137 () Bool)

(assert (=> b!78217 m!78137))

(assert (=> b!78211 m!78123))

(assert (=> bm!7055 d!18457))

(declare-fun d!18459 () Bool)

(declare-fun res!40964 () Bool)

(declare-fun e!51135 () Bool)

(assert (=> d!18459 (=> (not res!40964) (not e!51135))))

(assert (=> d!18459 (= res!40964 (simpleValid!55 (_2!1098 lt!35994)))))

(assert (=> d!18459 (= (valid!321 (_2!1098 lt!35994)) e!51135)))

(declare-fun b!78219 () Bool)

(declare-fun res!40965 () Bool)

(assert (=> b!78219 (=> (not res!40965) (not e!51135))))

(assert (=> b!78219 (= res!40965 (= (arrayCountValidKeys!0 (_keys!3930 (_2!1098 lt!35994)) #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))) (_size!414 (_2!1098 lt!35994))))))

(declare-fun b!78220 () Bool)

(declare-fun res!40966 () Bool)

(assert (=> b!78220 (=> (not res!40966) (not e!51135))))

(assert (=> b!78220 (= res!40966 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3930 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994))))))

(declare-fun b!78221 () Bool)

(assert (=> b!78221 (= e!51135 (arrayNoDuplicates!0 (_keys!3930 (_2!1098 lt!35994)) #b00000000000000000000000000000000 Nil!1507))))

(assert (= (and d!18459 res!40964) b!78219))

(assert (= (and b!78219 res!40965) b!78220))

(assert (= (and b!78220 res!40966) b!78221))

(declare-fun m!78139 () Bool)

(assert (=> d!18459 m!78139))

(declare-fun m!78141 () Bool)

(assert (=> b!78219 m!78141))

(declare-fun m!78143 () Bool)

(assert (=> b!78220 m!78143))

(declare-fun m!78145 () Bool)

(assert (=> b!78221 m!78145))

(assert (=> d!18395 d!18459))

(assert (=> d!18395 d!18349))

(assert (=> bm!7073 d!18373))

(assert (=> b!77825 d!18457))

(assert (=> bm!7133 d!18379))

(declare-fun d!18461 () Bool)

(declare-fun e!51136 () Bool)

(assert (=> d!18461 e!51136))

(declare-fun res!40967 () Bool)

(assert (=> d!18461 (=> (not res!40967) (not e!51136))))

(declare-fun lt!36087 () ListLongMap!1433)

(assert (=> d!18461 (= res!40967 (contains!739 lt!36087 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36085 () List!1511)

(assert (=> d!18461 (= lt!36087 (ListLongMap!1434 lt!36085))))

(declare-fun lt!36084 () Unit!2242)

(declare-fun lt!36086 () Unit!2242)

(assert (=> d!18461 (= lt!36084 lt!36086)))

(assert (=> d!18461 (= (getValueByKey!135 lt!36085 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18461 (= lt!36086 (lemmaContainsTupThenGetReturnValue!55 lt!36085 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18461 (= lt!36085 (insertStrictlySorted!58 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18461 (= (+!103 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36087)))

(declare-fun b!78222 () Bool)

(declare-fun res!40968 () Bool)

(assert (=> b!78222 (=> (not res!40968) (not e!51136))))

(assert (=> b!78222 (= res!40968 (= (getValueByKey!135 (toList!732 lt!36087) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!78223 () Bool)

(assert (=> b!78223 (= e!51136 (contains!740 (toList!732 lt!36087) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!18461 res!40967) b!78222))

(assert (= (and b!78222 res!40968) b!78223))

(declare-fun m!78147 () Bool)

(assert (=> d!18461 m!78147))

(declare-fun m!78149 () Bool)

(assert (=> d!18461 m!78149))

(declare-fun m!78151 () Bool)

(assert (=> d!18461 m!78151))

(declare-fun m!78153 () Bool)

(assert (=> d!18461 m!78153))

(declare-fun m!78155 () Bool)

(assert (=> b!78222 m!78155))

(declare-fun m!78157 () Bool)

(assert (=> b!78223 m!78157))

(assert (=> d!18369 d!18461))

(declare-fun d!18463 () Bool)

(declare-fun e!51137 () Bool)

(assert (=> d!18463 e!51137))

(declare-fun res!40969 () Bool)

(assert (=> d!18463 (=> (not res!40969) (not e!51137))))

(declare-fun lt!36091 () ListLongMap!1433)

(assert (=> d!18463 (= res!40969 (contains!739 lt!36091 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36089 () List!1511)

(assert (=> d!18463 (= lt!36091 (ListLongMap!1434 lt!36089))))

(declare-fun lt!36088 () Unit!2242)

(declare-fun lt!36090 () Unit!2242)

(assert (=> d!18463 (= lt!36088 lt!36090)))

(assert (=> d!18463 (= (getValueByKey!135 lt!36089 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18463 (= lt!36090 (lemmaContainsTupThenGetReturnValue!55 lt!36089 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18463 (= lt!36089 (insertStrictlySorted!58 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18463 (= (+!103 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36091)))

(declare-fun b!78224 () Bool)

(declare-fun res!40970 () Bool)

(assert (=> b!78224 (=> (not res!40970) (not e!51137))))

(assert (=> b!78224 (= res!40970 (= (getValueByKey!135 (toList!732 lt!36091) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78225 () Bool)

(assert (=> b!78225 (= e!51137 (contains!740 (toList!732 lt!36091) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18463 res!40969) b!78224))

(assert (= (and b!78224 res!40970) b!78225))

(declare-fun m!78159 () Bool)

(assert (=> d!18463 m!78159))

(declare-fun m!78161 () Bool)

(assert (=> d!18463 m!78161))

(declare-fun m!78163 () Bool)

(assert (=> d!18463 m!78163))

(declare-fun m!78165 () Bool)

(assert (=> d!18463 m!78165))

(declare-fun m!78167 () Bool)

(assert (=> b!78224 m!78167))

(declare-fun m!78169 () Bool)

(assert (=> b!78225 m!78169))

(assert (=> d!18369 d!18463))

(declare-fun d!18465 () Bool)

(assert (=> d!18465 (= (+!103 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (+!103 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (=> d!18465 true))

(declare-fun _$28!130 () Unit!2242)

(assert (=> d!18465 (= (choose!460 lt!35662 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))) _$28!130)))

(declare-fun bs!3302 () Bool)

(assert (= bs!3302 d!18465))

(assert (=> bs!3302 m!77723))

(assert (=> bs!3302 m!77723))

(assert (=> bs!3302 m!77725))

(assert (=> bs!3302 m!77729))

(assert (=> bs!3302 m!77729))

(assert (=> bs!3302 m!77731))

(assert (=> d!18369 d!18465))

(declare-fun d!18467 () Bool)

(declare-fun e!51138 () Bool)

(assert (=> d!18467 e!51138))

(declare-fun res!40971 () Bool)

(assert (=> d!18467 (=> (not res!40971) (not e!51138))))

(declare-fun lt!36095 () ListLongMap!1433)

(assert (=> d!18467 (= res!40971 (contains!739 lt!36095 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36093 () List!1511)

(assert (=> d!18467 (= lt!36095 (ListLongMap!1434 lt!36093))))

(declare-fun lt!36092 () Unit!2242)

(declare-fun lt!36094 () Unit!2242)

(assert (=> d!18467 (= lt!36092 lt!36094)))

(assert (=> d!18467 (= (getValueByKey!135 lt!36093 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18467 (= lt!36094 (lemmaContainsTupThenGetReturnValue!55 lt!36093 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18467 (= lt!36093 (insertStrictlySorted!58 (toList!732 lt!35662) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18467 (= (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36095)))

(declare-fun b!78226 () Bool)

(declare-fun res!40972 () Bool)

(assert (=> b!78226 (=> (not res!40972) (not e!51138))))

(assert (=> b!78226 (= res!40972 (= (getValueByKey!135 (toList!732 lt!36095) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!78227 () Bool)

(assert (=> b!78227 (= e!51138 (contains!740 (toList!732 lt!36095) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!18467 res!40971) b!78226))

(assert (= (and b!78226 res!40972) b!78227))

(declare-fun m!78171 () Bool)

(assert (=> d!18467 m!78171))

(declare-fun m!78173 () Bool)

(assert (=> d!18467 m!78173))

(declare-fun m!78175 () Bool)

(assert (=> d!18467 m!78175))

(declare-fun m!78177 () Bool)

(assert (=> d!18467 m!78177))

(declare-fun m!78179 () Bool)

(assert (=> b!78226 m!78179))

(declare-fun m!78181 () Bool)

(assert (=> b!78227 m!78181))

(assert (=> d!18369 d!18467))

(declare-fun d!18469 () Bool)

(declare-fun e!51139 () Bool)

(assert (=> d!18469 e!51139))

(declare-fun res!40973 () Bool)

(assert (=> d!18469 (=> (not res!40973) (not e!51139))))

(declare-fun lt!36099 () ListLongMap!1433)

(assert (=> d!18469 (= res!40973 (contains!739 lt!36099 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36097 () List!1511)

(assert (=> d!18469 (= lt!36099 (ListLongMap!1434 lt!36097))))

(declare-fun lt!36096 () Unit!2242)

(declare-fun lt!36098 () Unit!2242)

(assert (=> d!18469 (= lt!36096 lt!36098)))

(assert (=> d!18469 (= (getValueByKey!135 lt!36097 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18469 (= lt!36098 (lemmaContainsTupThenGetReturnValue!55 lt!36097 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18469 (= lt!36097 (insertStrictlySorted!58 (toList!732 lt!35662) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18469 (= (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36099)))

(declare-fun b!78228 () Bool)

(declare-fun res!40974 () Bool)

(assert (=> b!78228 (=> (not res!40974) (not e!51139))))

(assert (=> b!78228 (= res!40974 (= (getValueByKey!135 (toList!732 lt!36099) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78229 () Bool)

(assert (=> b!78229 (= e!51139 (contains!740 (toList!732 lt!36099) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18469 res!40973) b!78228))

(assert (= (and b!78228 res!40974) b!78229))

(declare-fun m!78183 () Bool)

(assert (=> d!18469 m!78183))

(declare-fun m!78185 () Bool)

(assert (=> d!18469 m!78185))

(declare-fun m!78187 () Bool)

(assert (=> d!18469 m!78187))

(declare-fun m!78189 () Bool)

(assert (=> d!18469 m!78189))

(declare-fun m!78191 () Bool)

(assert (=> b!78228 m!78191))

(declare-fun m!78193 () Bool)

(assert (=> b!78229 m!78193))

(assert (=> d!18369 d!18469))

(declare-fun d!18471 () Bool)

(declare-fun e!51140 () Bool)

(assert (=> d!18471 e!51140))

(declare-fun res!40975 () Bool)

(assert (=> d!18471 (=> (not res!40975) (not e!51140))))

(declare-fun lt!36103 () ListLongMap!1433)

(assert (=> d!18471 (= res!40975 (contains!739 lt!36103 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun lt!36101 () List!1511)

(assert (=> d!18471 (= lt!36103 (ListLongMap!1434 lt!36101))))

(declare-fun lt!36100 () Unit!2242)

(declare-fun lt!36102 () Unit!2242)

(assert (=> d!18471 (= lt!36100 lt!36102)))

(assert (=> d!18471 (= (getValueByKey!135 lt!36101 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (Some!140 (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!18471 (= lt!36102 (lemmaContainsTupThenGetReturnValue!55 lt!36101 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!18471 (= lt!36101 (insertStrictlySorted!58 (toList!732 e!51035) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!18471 (= (+!103 e!51035 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36103)))

(declare-fun b!78230 () Bool)

(declare-fun res!40976 () Bool)

(assert (=> b!78230 (=> (not res!40976) (not e!51140))))

(assert (=> b!78230 (= res!40976 (= (getValueByKey!135 (toList!732 lt!36103) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (Some!140 (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(declare-fun b!78231 () Bool)

(assert (=> b!78231 (= e!51140 (contains!740 (toList!732 lt!36103) (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (= (and d!18471 res!40975) b!78230))

(assert (= (and b!78230 res!40976) b!78231))

(declare-fun m!78195 () Bool)

(assert (=> d!18471 m!78195))

(declare-fun m!78197 () Bool)

(assert (=> d!18471 m!78197))

(declare-fun m!78199 () Bool)

(assert (=> d!18471 m!78199))

(declare-fun m!78201 () Bool)

(assert (=> d!18471 m!78201))

(declare-fun m!78203 () Bool)

(assert (=> b!78230 m!78203))

(declare-fun m!78205 () Bool)

(assert (=> b!78231 m!78205))

(assert (=> bm!7142 d!18471))

(declare-fun d!18473 () Bool)

(declare-fun lt!36106 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!83 (List!1511) (InoxSet tuple2!2176))

(assert (=> d!18473 (= lt!36106 (select (content!83 (toList!732 lt!35805)) lt!35660))))

(declare-fun e!51145 () Bool)

(assert (=> d!18473 (= lt!36106 e!51145)))

(declare-fun res!40981 () Bool)

(assert (=> d!18473 (=> (not res!40981) (not e!51145))))

(assert (=> d!18473 (= res!40981 ((_ is Cons!1507) (toList!732 lt!35805)))))

(assert (=> d!18473 (= (contains!740 (toList!732 lt!35805) lt!35660) lt!36106)))

(declare-fun b!78236 () Bool)

(declare-fun e!51146 () Bool)

(assert (=> b!78236 (= e!51145 e!51146)))

(declare-fun res!40982 () Bool)

(assert (=> b!78236 (=> res!40982 e!51146)))

(assert (=> b!78236 (= res!40982 (= (h!2095 (toList!732 lt!35805)) lt!35660))))

(declare-fun b!78237 () Bool)

(assert (=> b!78237 (= e!51146 (contains!740 (t!5148 (toList!732 lt!35805)) lt!35660))))

(assert (= (and d!18473 res!40981) b!78236))

(assert (= (and b!78236 (not res!40982)) b!78237))

(declare-fun m!78207 () Bool)

(assert (=> d!18473 m!78207))

(declare-fun m!78209 () Bool)

(assert (=> d!18473 m!78209))

(declare-fun m!78211 () Bool)

(assert (=> b!78237 m!78211))

(assert (=> b!77792 d!18473))

(declare-fun d!18475 () Bool)

(declare-fun e!51148 () Bool)

(assert (=> d!18475 e!51148))

(declare-fun res!40983 () Bool)

(assert (=> d!18475 (=> res!40983 e!51148)))

(declare-fun lt!36109 () Bool)

(assert (=> d!18475 (= res!40983 (not lt!36109))))

(declare-fun lt!36110 () Bool)

(assert (=> d!18475 (= lt!36109 lt!36110)))

(declare-fun lt!36107 () Unit!2242)

(declare-fun e!51147 () Unit!2242)

(assert (=> d!18475 (= lt!36107 e!51147)))

(declare-fun c!11981 () Bool)

(assert (=> d!18475 (= c!11981 lt!36110)))

(assert (=> d!18475 (= lt!36110 (containsKey!139 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!18475 (= (contains!739 call!7153 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) lt!36109)))

(declare-fun b!78238 () Bool)

(declare-fun lt!36108 () Unit!2242)

(assert (=> b!78238 (= e!51147 lt!36108)))

(assert (=> b!78238 (= lt!36108 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> b!78238 (isDefined!89 (getValueByKey!135 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!78239 () Bool)

(declare-fun Unit!2259 () Unit!2242)

(assert (=> b!78239 (= e!51147 Unit!2259)))

(declare-fun b!78240 () Bool)

(assert (=> b!78240 (= e!51148 (isDefined!89 (getValueByKey!135 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (= (and d!18475 c!11981) b!78238))

(assert (= (and d!18475 (not c!11981)) b!78239))

(assert (= (and d!18475 (not res!40983)) b!78240))

(assert (=> d!18475 m!77463))

(declare-fun m!78213 () Bool)

(assert (=> d!18475 m!78213))

(assert (=> b!78238 m!77463))

(declare-fun m!78215 () Bool)

(assert (=> b!78238 m!78215))

(assert (=> b!78238 m!77463))

(declare-fun m!78217 () Bool)

(assert (=> b!78238 m!78217))

(assert (=> b!78238 m!78217))

(declare-fun m!78219 () Bool)

(assert (=> b!78238 m!78219))

(assert (=> b!78240 m!77463))

(assert (=> b!78240 m!78217))

(assert (=> b!78240 m!78217))

(assert (=> b!78240 m!78219))

(assert (=> b!78053 d!18475))

(assert (=> d!18383 d!18387))

(declare-fun d!18477 () Bool)

(assert (=> d!18477 (not (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!18477 true))

(declare-fun _$68!64 () Unit!2242)

(assert (=> d!18477 (= (choose!68 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507)) _$68!64)))

(declare-fun bs!3303 () Bool)

(assert (= bs!3303 d!18477))

(assert (=> bs!3303 m!77463))

(assert (=> bs!3303 m!77501))

(assert (=> d!18383 d!18477))

(declare-fun d!18479 () Bool)

(declare-fun e!51151 () Bool)

(assert (=> d!18479 e!51151))

(declare-fun res!40986 () Bool)

(assert (=> d!18479 (=> (not res!40986) (not e!51151))))

(assert (=> d!18479 (= res!40986 (and (bvsge (index!3107 lt!36006) #b00000000000000000000000000000000) (bvslt (index!3107 lt!36006) (size!2124 (_keys!3930 newMap!16)))))))

(declare-fun lt!36113 () Unit!2242)

(declare-fun choose!464 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) Int) Unit!2242)

(assert (=> d!18479 (= lt!36113 (choose!464 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3107 lt!36006) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18479 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18479 (= (lemmaValidKeyInArrayIsInListMap!87 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3107 lt!36006) (defaultEntry!2271 newMap!16)) lt!36113)))

(declare-fun b!78243 () Bool)

(assert (=> b!78243 (= e!51151 (contains!739 (getCurrentListMap!421 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))))))

(assert (= (and d!18479 res!40986) b!78243))

(declare-fun m!78221 () Bool)

(assert (=> d!18479 m!78221))

(assert (=> d!18479 m!77977))

(declare-fun m!78223 () Bool)

(assert (=> b!78243 m!78223))

(assert (=> b!78243 m!77869))

(assert (=> b!78243 m!78223))

(assert (=> b!78243 m!77869))

(declare-fun m!78225 () Bool)

(assert (=> b!78243 m!78225))

(assert (=> b!78039 d!18479))

(declare-fun d!18481 () Bool)

(declare-fun e!51154 () Bool)

(assert (=> d!18481 e!51154))

(declare-fun res!40989 () Bool)

(assert (=> d!18481 (=> (not res!40989) (not e!51154))))

(assert (=> d!18481 (= res!40989 (and (bvsge (index!3107 lt!36006) #b00000000000000000000000000000000) (bvslt (index!3107 lt!36006) (size!2125 (_values!2254 newMap!16)))))))

(declare-fun lt!36116 () Unit!2242)

(declare-fun choose!465 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) (_ BitVec 64) V!2993 Int) Unit!2242)

(assert (=> d!18481 (= lt!36116 (choose!465 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3107 lt!36006) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 (defaultEntry!2271 newMap!16)))))

(assert (=> d!18481 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18481 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3107 lt!36006) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 (defaultEntry!2271 newMap!16)) lt!36116)))

(declare-fun b!78246 () Bool)

(assert (=> b!78246 (= e!51154 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (getCurrentListMap!421 (_keys!3930 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))))))

(assert (= (and d!18481 res!40989) b!78246))

(assert (=> d!18481 m!77463))

(declare-fun m!78227 () Bool)

(assert (=> d!18481 m!78227))

(assert (=> d!18481 m!77977))

(assert (=> b!78246 m!77787))

(assert (=> b!78246 m!77787))

(declare-fun m!78229 () Bool)

(assert (=> b!78246 m!78229))

(assert (=> b!78246 m!77885))

(declare-fun m!78231 () Bool)

(assert (=> b!78246 m!78231))

(assert (=> b!78039 d!18481))

(declare-fun d!18483 () Bool)

(declare-fun e!51156 () Bool)

(assert (=> d!18483 e!51156))

(declare-fun res!40990 () Bool)

(assert (=> d!18483 (=> res!40990 e!51156)))

(declare-fun lt!36119 () Bool)

(assert (=> d!18483 (= res!40990 (not lt!36119))))

(declare-fun lt!36120 () Bool)

(assert (=> d!18483 (= lt!36119 lt!36120)))

(declare-fun lt!36117 () Unit!2242)

(declare-fun e!51155 () Unit!2242)

(assert (=> d!18483 (= lt!36117 e!51155)))

(declare-fun c!11982 () Bool)

(assert (=> d!18483 (= c!11982 lt!36120)))

(assert (=> d!18483 (= lt!36120 (containsKey!139 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!18483 (= (contains!739 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) lt!36119)))

(declare-fun b!78247 () Bool)

(declare-fun lt!36118 () Unit!2242)

(assert (=> b!78247 (= e!51155 lt!36118)))

(assert (=> b!78247 (= lt!36118 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> b!78247 (isDefined!89 (getValueByKey!135 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!78248 () Bool)

(declare-fun Unit!2260 () Unit!2242)

(assert (=> b!78248 (= e!51155 Unit!2260)))

(declare-fun b!78249 () Bool)

(assert (=> b!78249 (= e!51156 (isDefined!89 (getValueByKey!135 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (= (and d!18483 c!11982) b!78247))

(assert (= (and d!18483 (not c!11982)) b!78248))

(assert (= (and d!18483 (not res!40990)) b!78249))

(assert (=> d!18483 m!77463))

(declare-fun m!78233 () Bool)

(assert (=> d!18483 m!78233))

(assert (=> b!78247 m!77463))

(declare-fun m!78235 () Bool)

(assert (=> b!78247 m!78235))

(assert (=> b!78247 m!77463))

(declare-fun m!78237 () Bool)

(assert (=> b!78247 m!78237))

(assert (=> b!78247 m!78237))

(declare-fun m!78239 () Bool)

(assert (=> b!78247 m!78239))

(assert (=> b!78249 m!77463))

(assert (=> b!78249 m!78237))

(assert (=> b!78249 m!78237))

(assert (=> b!78249 m!78239))

(assert (=> b!78039 d!18483))

(assert (=> b!78039 d!18409))

(assert (=> d!18381 d!18367))

(declare-fun d!18485 () Bool)

(declare-fun lt!36121 () Bool)

(assert (=> d!18485 (= lt!36121 (select (content!83 (toList!732 lt!35812)) lt!35670))))

(declare-fun e!51157 () Bool)

(assert (=> d!18485 (= lt!36121 e!51157)))

(declare-fun res!40991 () Bool)

(assert (=> d!18485 (=> (not res!40991) (not e!51157))))

(assert (=> d!18485 (= res!40991 ((_ is Cons!1507) (toList!732 lt!35812)))))

(assert (=> d!18485 (= (contains!740 (toList!732 lt!35812) lt!35670) lt!36121)))

(declare-fun b!78250 () Bool)

(declare-fun e!51158 () Bool)

(assert (=> b!78250 (= e!51157 e!51158)))

(declare-fun res!40992 () Bool)

(assert (=> b!78250 (=> res!40992 e!51158)))

(assert (=> b!78250 (= res!40992 (= (h!2095 (toList!732 lt!35812)) lt!35670))))

(declare-fun b!78251 () Bool)

(assert (=> b!78251 (= e!51158 (contains!740 (t!5148 (toList!732 lt!35812)) lt!35670))))

(assert (= (and d!18485 res!40991) b!78250))

(assert (= (and b!78250 (not res!40992)) b!78251))

(declare-fun m!78241 () Bool)

(assert (=> d!18485 m!78241))

(declare-fun m!78243 () Bool)

(assert (=> d!18485 m!78243))

(declare-fun m!78245 () Bool)

(assert (=> b!78251 m!78245))

(assert (=> b!77794 d!18485))

(declare-fun d!18487 () Bool)

(declare-fun lt!36122 () Bool)

(assert (=> d!18487 (= lt!36122 (select (content!83 (toList!732 lt!35817)) lt!35670))))

(declare-fun e!51159 () Bool)

(assert (=> d!18487 (= lt!36122 e!51159)))

(declare-fun res!40993 () Bool)

(assert (=> d!18487 (=> (not res!40993) (not e!51159))))

(assert (=> d!18487 (= res!40993 ((_ is Cons!1507) (toList!732 lt!35817)))))

(assert (=> d!18487 (= (contains!740 (toList!732 lt!35817) lt!35670) lt!36122)))

(declare-fun b!78252 () Bool)

(declare-fun e!51160 () Bool)

(assert (=> b!78252 (= e!51159 e!51160)))

(declare-fun res!40994 () Bool)

(assert (=> b!78252 (=> res!40994 e!51160)))

(assert (=> b!78252 (= res!40994 (= (h!2095 (toList!732 lt!35817)) lt!35670))))

(declare-fun b!78253 () Bool)

(assert (=> b!78253 (= e!51160 (contains!740 (t!5148 (toList!732 lt!35817)) lt!35670))))

(assert (= (and d!18487 res!40993) b!78252))

(assert (= (and b!78252 (not res!40994)) b!78253))

(declare-fun m!78247 () Bool)

(assert (=> d!18487 m!78247))

(declare-fun m!78249 () Bool)

(assert (=> d!18487 m!78249))

(declare-fun m!78251 () Bool)

(assert (=> b!78253 m!78251))

(assert (=> b!77796 d!18487))

(declare-fun e!51171 () Bool)

(declare-fun b!78254 () Bool)

(declare-fun lt!36137 () ListLongMap!1433)

(assert (=> b!78254 (= e!51171 (= (apply!79 lt!36137 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78254 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))))))))

(assert (=> b!78254 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun c!11984 () Bool)

(declare-fun b!78255 () Bool)

(assert (=> b!78255 (= c!11984 (and (not (= (bvand (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!51170 () ListLongMap!1433)

(declare-fun e!51163 () ListLongMap!1433)

(assert (=> b!78255 (= e!51170 e!51163)))

(declare-fun b!78256 () Bool)

(declare-fun e!51169 () Bool)

(assert (=> b!78256 (= e!51169 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78257 () Bool)

(declare-fun e!51168 () Unit!2242)

(declare-fun lt!36140 () Unit!2242)

(assert (=> b!78257 (= e!51168 lt!36140)))

(declare-fun lt!36127 () ListLongMap!1433)

(assert (=> b!78257 (= lt!36127 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) (mask!6266 newMap!16) (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36123 () (_ BitVec 64))

(assert (=> b!78257 (= lt!36123 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36134 () (_ BitVec 64))

(assert (=> b!78257 (= lt!36134 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36128 () Unit!2242)

(assert (=> b!78257 (= lt!36128 (addStillContains!55 lt!36127 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) lt!36134))))

(assert (=> b!78257 (contains!739 (+!103 lt!36127 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) lt!36134)))

(declare-fun lt!36125 () Unit!2242)

(assert (=> b!78257 (= lt!36125 lt!36128)))

(declare-fun lt!36126 () ListLongMap!1433)

(assert (=> b!78257 (= lt!36126 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) (mask!6266 newMap!16) (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36135 () (_ BitVec 64))

(assert (=> b!78257 (= lt!36135 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36132 () (_ BitVec 64))

(assert (=> b!78257 (= lt!36132 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36133 () Unit!2242)

(assert (=> b!78257 (= lt!36133 (addApplyDifferent!55 lt!36126 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) lt!36132))))

(assert (=> b!78257 (= (apply!79 (+!103 lt!36126 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) lt!36132) (apply!79 lt!36126 lt!36132))))

(declare-fun lt!36124 () Unit!2242)

(assert (=> b!78257 (= lt!36124 lt!36133)))

(declare-fun lt!36131 () ListLongMap!1433)

(assert (=> b!78257 (= lt!36131 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) (mask!6266 newMap!16) (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36144 () (_ BitVec 64))

(assert (=> b!78257 (= lt!36144 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36142 () (_ BitVec 64))

(assert (=> b!78257 (= lt!36142 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36143 () Unit!2242)

(assert (=> b!78257 (= lt!36143 (addApplyDifferent!55 lt!36131 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) lt!36142))))

(assert (=> b!78257 (= (apply!79 (+!103 lt!36131 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) lt!36142) (apply!79 lt!36131 lt!36142))))

(declare-fun lt!36136 () Unit!2242)

(assert (=> b!78257 (= lt!36136 lt!36143)))

(declare-fun lt!36138 () ListLongMap!1433)

(assert (=> b!78257 (= lt!36138 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) (mask!6266 newMap!16) (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36139 () (_ BitVec 64))

(assert (=> b!78257 (= lt!36139 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36141 () (_ BitVec 64))

(assert (=> b!78257 (= lt!36141 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78257 (= lt!36140 (addApplyDifferent!55 lt!36138 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) lt!36141))))

(assert (=> b!78257 (= (apply!79 (+!103 lt!36138 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) lt!36141) (apply!79 lt!36138 lt!36141))))

(declare-fun b!78259 () Bool)

(declare-fun e!51162 () Bool)

(declare-fun e!51164 () Bool)

(assert (=> b!78259 (= e!51162 e!51164)))

(declare-fun res!40997 () Bool)

(declare-fun call!7183 () Bool)

(assert (=> b!78259 (= res!40997 call!7183)))

(assert (=> b!78259 (=> (not res!40997) (not e!51164))))

(declare-fun bm!7175 () Bool)

(declare-fun call!7178 () ListLongMap!1433)

(declare-fun call!7182 () ListLongMap!1433)

(assert (=> bm!7175 (= call!7178 call!7182)))

(declare-fun b!78260 () Bool)

(assert (=> b!78260 (= e!51162 (not call!7183))))

(declare-fun b!78261 () Bool)

(declare-fun e!51167 () ListLongMap!1433)

(assert (=> b!78261 (= e!51167 e!51170)))

(declare-fun c!11985 () Bool)

(assert (=> b!78261 (= c!11985 (and (not (= (bvand (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78262 () Bool)

(declare-fun call!7179 () ListLongMap!1433)

(assert (=> b!78262 (= e!51163 call!7179)))

(declare-fun b!78263 () Bool)

(declare-fun call!7181 () ListLongMap!1433)

(assert (=> b!78263 (= e!51163 call!7181)))

(declare-fun b!78264 () Bool)

(declare-fun res!41002 () Bool)

(declare-fun e!51173 () Bool)

(assert (=> b!78264 (=> (not res!41002) (not e!51173))))

(declare-fun e!51161 () Bool)

(assert (=> b!78264 (= res!41002 e!51161)))

(declare-fun c!11983 () Bool)

(assert (=> b!78264 (= c!11983 (not (= (bvand (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7176 () Bool)

(declare-fun call!7180 () Bool)

(assert (=> bm!7176 (= call!7180 (contains!739 lt!36137 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7177 () Bool)

(assert (=> bm!7177 (= call!7183 (contains!739 lt!36137 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7178 () Bool)

(assert (=> bm!7178 (= call!7182 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) (mask!6266 newMap!16) (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78265 () Bool)

(declare-fun e!51172 () Bool)

(assert (=> b!78265 (= e!51172 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7179 () Bool)

(assert (=> bm!7179 (= call!7181 call!7178)))

(declare-fun e!51166 () Bool)

(declare-fun b!78266 () Bool)

(assert (=> b!78266 (= e!51166 (= (apply!79 lt!36137 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))))

(declare-fun b!78267 () Bool)

(declare-fun res!41003 () Bool)

(assert (=> b!78267 (=> (not res!41003) (not e!51173))))

(declare-fun e!51165 () Bool)

(assert (=> b!78267 (= res!41003 e!51165)))

(declare-fun res!41000 () Bool)

(assert (=> b!78267 (=> res!41000 e!51165)))

(assert (=> b!78267 (= res!41000 (not e!51172))))

(declare-fun res!40996 () Bool)

(assert (=> b!78267 (=> (not res!40996) (not e!51172))))

(assert (=> b!78267 (= res!40996 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78258 () Bool)

(declare-fun call!7184 () ListLongMap!1433)

(assert (=> b!78258 (= e!51167 (+!103 call!7184 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))

(declare-fun d!18489 () Bool)

(assert (=> d!18489 e!51173))

(declare-fun res!40999 () Bool)

(assert (=> d!18489 (=> (not res!40999) (not e!51173))))

(assert (=> d!18489 (= res!40999 (or (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))))

(declare-fun lt!36129 () ListLongMap!1433)

(assert (=> d!18489 (= lt!36137 lt!36129)))

(declare-fun lt!36130 () Unit!2242)

(assert (=> d!18489 (= lt!36130 e!51168)))

(declare-fun c!11986 () Bool)

(assert (=> d!18489 (= c!11986 e!51169)))

(declare-fun res!41001 () Bool)

(assert (=> d!18489 (=> (not res!41001) (not e!51169))))

(assert (=> d!18489 (= res!41001 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!18489 (= lt!36129 e!51167)))

(declare-fun c!11987 () Bool)

(assert (=> d!18489 (= c!11987 (and (not (= (bvand (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18489 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18489 (= (getCurrentListMap!421 (_keys!3930 newMap!16) (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) (mask!6266 newMap!16) (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36137)))

(declare-fun b!78268 () Bool)

(assert (=> b!78268 (= e!51161 (not call!7180))))

(declare-fun bm!7180 () Bool)

(assert (=> bm!7180 (= call!7184 (+!103 (ite c!11987 call!7182 (ite c!11985 call!7178 call!7181)) (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(declare-fun b!78269 () Bool)

(assert (=> b!78269 (= e!51170 call!7179)))

(declare-fun bm!7181 () Bool)

(assert (=> bm!7181 (= call!7179 call!7184)))

(declare-fun b!78270 () Bool)

(assert (=> b!78270 (= e!51165 e!51171)))

(declare-fun res!40998 () Bool)

(assert (=> b!78270 (=> (not res!40998) (not e!51171))))

(assert (=> b!78270 (= res!40998 (contains!739 lt!36137 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78270 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78271 () Bool)

(assert (=> b!78271 (= e!51161 e!51166)))

(declare-fun res!40995 () Bool)

(assert (=> b!78271 (= res!40995 call!7180)))

(assert (=> b!78271 (=> (not res!40995) (not e!51166))))

(declare-fun b!78272 () Bool)

(assert (=> b!78272 (= e!51173 e!51162)))

(declare-fun c!11988 () Bool)

(assert (=> b!78272 (= c!11988 (not (= (bvand (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78273 () Bool)

(declare-fun Unit!2261 () Unit!2242)

(assert (=> b!78273 (= e!51168 Unit!2261)))

(declare-fun b!78274 () Bool)

(assert (=> b!78274 (= e!51164 (= (apply!79 lt!36137 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))

(assert (= (and d!18489 c!11987) b!78258))

(assert (= (and d!18489 (not c!11987)) b!78261))

(assert (= (and b!78261 c!11985) b!78269))

(assert (= (and b!78261 (not c!11985)) b!78255))

(assert (= (and b!78255 c!11984) b!78262))

(assert (= (and b!78255 (not c!11984)) b!78263))

(assert (= (or b!78262 b!78263) bm!7179))

(assert (= (or b!78269 bm!7179) bm!7175))

(assert (= (or b!78269 b!78262) bm!7181))

(assert (= (or b!78258 bm!7175) bm!7178))

(assert (= (or b!78258 bm!7181) bm!7180))

(assert (= (and d!18489 res!41001) b!78256))

(assert (= (and d!18489 c!11986) b!78257))

(assert (= (and d!18489 (not c!11986)) b!78273))

(assert (= (and d!18489 res!40999) b!78267))

(assert (= (and b!78267 res!40996) b!78265))

(assert (= (and b!78267 (not res!41000)) b!78270))

(assert (= (and b!78270 res!40998) b!78254))

(assert (= (and b!78267 res!41003) b!78264))

(assert (= (and b!78264 c!11983) b!78271))

(assert (= (and b!78264 (not c!11983)) b!78268))

(assert (= (and b!78271 res!40995) b!78266))

(assert (= (or b!78271 b!78268) bm!7176))

(assert (= (and b!78264 res!41002) b!78272))

(assert (= (and b!78272 c!11988) b!78259))

(assert (= (and b!78272 (not c!11988)) b!78260))

(assert (= (and b!78259 res!40997) b!78274))

(assert (= (or b!78259 b!78260) bm!7177))

(declare-fun b_lambda!3495 () Bool)

(assert (=> (not b_lambda!3495) (not b!78254)))

(assert (=> b!78254 t!5160))

(declare-fun b_and!4809 () Bool)

(assert (= b_and!4805 (and (=> t!5160 result!2821) b_and!4809)))

(assert (=> b!78254 t!5162))

(declare-fun b_and!4811 () Bool)

(assert (= b_and!4807 (and (=> t!5162 result!2823) b_and!4811)))

(declare-fun m!78253 () Bool)

(assert (=> b!78266 m!78253))

(declare-fun m!78255 () Bool)

(assert (=> b!78257 m!78255))

(declare-fun m!78257 () Bool)

(assert (=> b!78257 m!78257))

(declare-fun m!78259 () Bool)

(assert (=> b!78257 m!78259))

(declare-fun m!78261 () Bool)

(assert (=> b!78257 m!78261))

(declare-fun m!78263 () Bool)

(assert (=> b!78257 m!78263))

(declare-fun m!78265 () Bool)

(assert (=> b!78257 m!78265))

(declare-fun m!78267 () Bool)

(assert (=> b!78257 m!78267))

(declare-fun m!78269 () Bool)

(assert (=> b!78257 m!78269))

(declare-fun m!78271 () Bool)

(assert (=> b!78257 m!78271))

(declare-fun m!78273 () Bool)

(assert (=> b!78257 m!78273))

(declare-fun m!78275 () Bool)

(assert (=> b!78257 m!78275))

(declare-fun m!78277 () Bool)

(assert (=> b!78257 m!78277))

(declare-fun m!78279 () Bool)

(assert (=> b!78257 m!78279))

(assert (=> b!78257 m!78275))

(assert (=> b!78257 m!78273))

(declare-fun m!78281 () Bool)

(assert (=> b!78257 m!78281))

(assert (=> b!78257 m!77965))

(assert (=> b!78257 m!78259))

(declare-fun m!78283 () Bool)

(assert (=> b!78257 m!78283))

(assert (=> b!78257 m!78269))

(declare-fun m!78285 () Bool)

(assert (=> b!78257 m!78285))

(declare-fun m!78287 () Bool)

(assert (=> bm!7177 m!78287))

(assert (=> bm!7178 m!78271))

(declare-fun m!78289 () Bool)

(assert (=> b!78258 m!78289))

(assert (=> b!78256 m!77965))

(assert (=> b!78256 m!77965))

(assert (=> b!78256 m!77975))

(assert (=> d!18489 m!77977))

(declare-fun m!78291 () Bool)

(assert (=> bm!7176 m!78291))

(declare-fun m!78293 () Bool)

(assert (=> bm!7180 m!78293))

(assert (=> b!78254 m!77983))

(declare-fun m!78295 () Bool)

(assert (=> b!78254 m!78295))

(assert (=> b!78254 m!77983))

(declare-fun m!78297 () Bool)

(assert (=> b!78254 m!78297))

(assert (=> b!78254 m!77965))

(declare-fun m!78299 () Bool)

(assert (=> b!78254 m!78299))

(assert (=> b!78254 m!78295))

(assert (=> b!78254 m!77965))

(assert (=> b!78265 m!77965))

(assert (=> b!78265 m!77965))

(assert (=> b!78265 m!77975))

(declare-fun m!78301 () Bool)

(assert (=> b!78274 m!78301))

(assert (=> b!78270 m!77965))

(assert (=> b!78270 m!77965))

(declare-fun m!78303 () Bool)

(assert (=> b!78270 m!78303))

(assert (=> bm!7149 d!18489))

(declare-fun b!78275 () Bool)

(declare-fun e!51174 () Option!141)

(assert (=> b!78275 (= e!51174 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35842)))))))

(declare-fun b!78277 () Bool)

(declare-fun e!51175 () Option!141)

(assert (=> b!78277 (= e!51175 (getValueByKey!135 (t!5148 (toList!732 lt!35842)) (_1!1099 lt!35659)))))

(declare-fun d!18491 () Bool)

(declare-fun c!11989 () Bool)

(assert (=> d!18491 (= c!11989 (and ((_ is Cons!1507) (toList!732 lt!35842)) (= (_1!1099 (h!2095 (toList!732 lt!35842))) (_1!1099 lt!35659))))))

(assert (=> d!18491 (= (getValueByKey!135 (toList!732 lt!35842) (_1!1099 lt!35659)) e!51174)))

(declare-fun b!78278 () Bool)

(assert (=> b!78278 (= e!51175 None!139)))

(declare-fun b!78276 () Bool)

(assert (=> b!78276 (= e!51174 e!51175)))

(declare-fun c!11990 () Bool)

(assert (=> b!78276 (= c!11990 (and ((_ is Cons!1507) (toList!732 lt!35842)) (not (= (_1!1099 (h!2095 (toList!732 lt!35842))) (_1!1099 lt!35659)))))))

(assert (= (and d!18491 c!11989) b!78275))

(assert (= (and d!18491 (not c!11989)) b!78276))

(assert (= (and b!78276 c!11990) b!78277))

(assert (= (and b!78276 (not c!11990)) b!78278))

(declare-fun m!78305 () Bool)

(assert (=> b!78277 m!78305))

(assert (=> b!77833 d!18491))

(assert (=> d!18379 d!18409))

(declare-fun d!18493 () Bool)

(declare-fun lt!36145 () Bool)

(assert (=> d!18493 (= lt!36145 (select (content!83 (toList!732 lt!35793)) lt!35660))))

(declare-fun e!51176 () Bool)

(assert (=> d!18493 (= lt!36145 e!51176)))

(declare-fun res!41004 () Bool)

(assert (=> d!18493 (=> (not res!41004) (not e!51176))))

(assert (=> d!18493 (= res!41004 ((_ is Cons!1507) (toList!732 lt!35793)))))

(assert (=> d!18493 (= (contains!740 (toList!732 lt!35793) lt!35660) lt!36145)))

(declare-fun b!78279 () Bool)

(declare-fun e!51177 () Bool)

(assert (=> b!78279 (= e!51176 e!51177)))

(declare-fun res!41005 () Bool)

(assert (=> b!78279 (=> res!41005 e!51177)))

(assert (=> b!78279 (= res!41005 (= (h!2095 (toList!732 lt!35793)) lt!35660))))

(declare-fun b!78280 () Bool)

(assert (=> b!78280 (= e!51177 (contains!740 (t!5148 (toList!732 lt!35793)) lt!35660))))

(assert (= (and d!18493 res!41004) b!78279))

(assert (= (and b!78279 (not res!41005)) b!78280))

(declare-fun m!78307 () Bool)

(assert (=> d!18493 m!78307))

(declare-fun m!78309 () Bool)

(assert (=> d!18493 m!78309))

(declare-fun m!78311 () Bool)

(assert (=> b!78280 m!78311))

(assert (=> b!77786 d!18493))

(declare-fun d!18495 () Bool)

(declare-fun lt!36146 () Bool)

(assert (=> d!18495 (= lt!36146 (select (content!83 (toList!732 lt!35797)) lt!35660))))

(declare-fun e!51178 () Bool)

(assert (=> d!18495 (= lt!36146 e!51178)))

(declare-fun res!41006 () Bool)

(assert (=> d!18495 (=> (not res!41006) (not e!51178))))

(assert (=> d!18495 (= res!41006 ((_ is Cons!1507) (toList!732 lt!35797)))))

(assert (=> d!18495 (= (contains!740 (toList!732 lt!35797) lt!35660) lt!36146)))

(declare-fun b!78281 () Bool)

(declare-fun e!51179 () Bool)

(assert (=> b!78281 (= e!51178 e!51179)))

(declare-fun res!41007 () Bool)

(assert (=> b!78281 (=> res!41007 e!51179)))

(assert (=> b!78281 (= res!41007 (= (h!2095 (toList!732 lt!35797)) lt!35660))))

(declare-fun b!78282 () Bool)

(assert (=> b!78282 (= e!51179 (contains!740 (t!5148 (toList!732 lt!35797)) lt!35660))))

(assert (= (and d!18495 res!41006) b!78281))

(assert (= (and b!78281 (not res!41007)) b!78282))

(declare-fun m!78313 () Bool)

(assert (=> d!18495 m!78313))

(declare-fun m!78315 () Bool)

(assert (=> d!18495 m!78315))

(declare-fun m!78317 () Bool)

(assert (=> b!78282 m!78317))

(assert (=> b!77788 d!18495))

(declare-fun b!78295 () Bool)

(declare-fun e!51187 () SeekEntryResult!243)

(declare-fun lt!36154 () SeekEntryResult!243)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3951 (_ BitVec 32)) SeekEntryResult!243)

(assert (=> b!78295 (= e!51187 (seekKeyOrZeroReturnVacant!0 (x!11549 lt!36154) (index!3108 lt!36154) (index!3108 lt!36154) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(declare-fun lt!36155 () SeekEntryResult!243)

(declare-fun d!18497 () Bool)

(assert (=> d!18497 (and (or ((_ is Undefined!243) lt!36155) (not ((_ is Found!243) lt!36155)) (and (bvsge (index!3107 lt!36155) #b00000000000000000000000000000000) (bvslt (index!3107 lt!36155) (size!2124 (_keys!3930 newMap!16))))) (or ((_ is Undefined!243) lt!36155) ((_ is Found!243) lt!36155) (not ((_ is MissingZero!243) lt!36155)) (and (bvsge (index!3106 lt!36155) #b00000000000000000000000000000000) (bvslt (index!3106 lt!36155) (size!2124 (_keys!3930 newMap!16))))) (or ((_ is Undefined!243) lt!36155) ((_ is Found!243) lt!36155) ((_ is MissingZero!243) lt!36155) (not ((_ is MissingVacant!243) lt!36155)) (and (bvsge (index!3109 lt!36155) #b00000000000000000000000000000000) (bvslt (index!3109 lt!36155) (size!2124 (_keys!3930 newMap!16))))) (or ((_ is Undefined!243) lt!36155) (ite ((_ is Found!243) lt!36155) (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36155)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (ite ((_ is MissingZero!243) lt!36155) (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3106 lt!36155)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!243) lt!36155) (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3109 lt!36155)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!51188 () SeekEntryResult!243)

(assert (=> d!18497 (= lt!36155 e!51188)))

(declare-fun c!11999 () Bool)

(assert (=> d!18497 (= c!11999 (and ((_ is Intermediate!243) lt!36154) (undefined!1055 lt!36154)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3951 (_ BitVec 32)) SeekEntryResult!243)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!18497 (= lt!36154 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (mask!6266 newMap!16)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(assert (=> d!18497 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18497 (= (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)) lt!36155)))

(declare-fun b!78296 () Bool)

(declare-fun e!51186 () SeekEntryResult!243)

(assert (=> b!78296 (= e!51186 (Found!243 (index!3108 lt!36154)))))

(declare-fun b!78297 () Bool)

(assert (=> b!78297 (= e!51187 (MissingZero!243 (index!3108 lt!36154)))))

(declare-fun b!78298 () Bool)

(assert (=> b!78298 (= e!51188 Undefined!243)))

(declare-fun b!78299 () Bool)

(declare-fun c!11998 () Bool)

(declare-fun lt!36153 () (_ BitVec 64))

(assert (=> b!78299 (= c!11998 (= lt!36153 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78299 (= e!51186 e!51187)))

(declare-fun b!78300 () Bool)

(assert (=> b!78300 (= e!51188 e!51186)))

(assert (=> b!78300 (= lt!36153 (select (arr!1882 (_keys!3930 newMap!16)) (index!3108 lt!36154)))))

(declare-fun c!11997 () Bool)

(assert (=> b!78300 (= c!11997 (= lt!36153 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!18497 c!11999) b!78298))

(assert (= (and d!18497 (not c!11999)) b!78300))

(assert (= (and b!78300 c!11997) b!78296))

(assert (= (and b!78300 (not c!11997)) b!78299))

(assert (= (and b!78299 c!11998) b!78297))

(assert (= (and b!78299 (not c!11998)) b!78295))

(assert (=> b!78295 m!77463))

(declare-fun m!78319 () Bool)

(assert (=> b!78295 m!78319))

(declare-fun m!78321 () Bool)

(assert (=> d!18497 m!78321))

(assert (=> d!18497 m!77463))

(declare-fun m!78323 () Bool)

(assert (=> d!18497 m!78323))

(declare-fun m!78325 () Bool)

(assert (=> d!18497 m!78325))

(assert (=> d!18497 m!77977))

(assert (=> d!18497 m!77463))

(assert (=> d!18497 m!78321))

(declare-fun m!78327 () Bool)

(assert (=> d!18497 m!78327))

(declare-fun m!78329 () Bool)

(assert (=> d!18497 m!78329))

(declare-fun m!78331 () Bool)

(assert (=> b!78300 m!78331))

(assert (=> b!78025 d!18497))

(declare-fun b!78335 () Bool)

(declare-fun lt!36232 () SeekEntryResult!243)

(declare-fun e!51210 () Bool)

(assert (=> b!78335 (= e!51210 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36232)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!78336 () Bool)

(declare-fun res!41034 () Bool)

(declare-fun e!51209 () Bool)

(assert (=> b!78336 (=> (not res!41034) (not e!51209))))

(declare-fun lt!36218 () tuple2!2174)

(assert (=> b!78336 (= res!41034 (contains!739 (map!1173 (_2!1098 lt!36218)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun d!18499 () Bool)

(assert (=> d!18499 e!51209))

(declare-fun res!41028 () Bool)

(assert (=> d!18499 (=> (not res!41028) (not e!51209))))

(assert (=> d!18499 (= res!41028 (_1!1098 lt!36218))))

(assert (=> d!18499 (= lt!36218 (tuple2!2175 true (LongMapFixedSize!731 (defaultEntry!2271 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (bvadd (_size!414 newMap!16) #b00000000000000000000000000000001) (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (_vacant!414 newMap!16))))))

(declare-fun lt!36220 () Unit!2242)

(declare-fun lt!36228 () Unit!2242)

(assert (=> d!18499 (= lt!36220 lt!36228)))

(declare-fun lt!36239 () array!3953)

(declare-fun lt!36223 () array!3951)

(assert (=> d!18499 (contains!739 (getCurrentListMap!421 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))))))

(assert (=> d!18499 (= lt!36228 (lemmaValidKeyInArrayIsInListMap!87 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18499 (= lt!36239 (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))))

(assert (=> d!18499 (= lt!36223 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun lt!36216 () Unit!2242)

(declare-fun lt!36242 () Unit!2242)

(assert (=> d!18499 (= lt!36216 lt!36242)))

(declare-fun lt!36224 () array!3951)

(assert (=> d!18499 (= (arrayCountValidKeys!0 lt!36224 (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (bvadd (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3951 (_ BitVec 32)) Unit!2242)

(assert (=> d!18499 (= lt!36242 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!36224 (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))))))

(assert (=> d!18499 (= lt!36224 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun lt!36234 () Unit!2242)

(declare-fun lt!36244 () Unit!2242)

(assert (=> d!18499 (= lt!36234 lt!36244)))

(declare-fun lt!36230 () array!3951)

(assert (=> d!18499 (arrayContainsKey!0 lt!36230 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!18499 (= lt!36244 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!36230 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))))))

(assert (=> d!18499 (= lt!36230 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun lt!36221 () Unit!2242)

(declare-fun lt!36226 () Unit!2242)

(assert (=> d!18499 (= lt!36221 lt!36226)))

(assert (=> d!18499 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (getCurrentListMap!421 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!16 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) (_ BitVec 64) V!2993 Int) Unit!2242)

(assert (=> d!18499 (= lt!36226 (lemmaAddValidKeyToArrayThenAddPairToListMap!16 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36222 () Unit!2242)

(declare-fun lt!36236 () Unit!2242)

(assert (=> d!18499 (= lt!36222 lt!36236)))

(assert (=> d!18499 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (mask!6266 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3951 (_ BitVec 32) (_ BitVec 32)) Unit!2242)

(assert (=> d!18499 (= lt!36236 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (mask!6266 newMap!16)))))

(declare-fun lt!36231 () Unit!2242)

(declare-fun lt!36243 () Unit!2242)

(assert (=> d!18499 (= lt!36231 lt!36243)))

(assert (=> d!18499 (= (arrayCountValidKeys!0 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3930 newMap!16) #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3951 (_ BitVec 32) (_ BitVec 64)) Unit!2242)

(assert (=> d!18499 (= lt!36243 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3930 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun lt!36219 () Unit!2242)

(declare-fun lt!36227 () Unit!2242)

(assert (=> d!18499 (= lt!36219 lt!36227)))

(declare-fun lt!36240 () List!1510)

(declare-fun lt!36225 () (_ BitVec 32))

(assert (=> d!18499 (arrayNoDuplicates!0 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) lt!36225 lt!36240)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3951 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1510) Unit!2242)

(assert (=> d!18499 (= lt!36227 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) lt!36225 lt!36240))))

(assert (=> d!18499 (= lt!36240 Nil!1507)))

(assert (=> d!18499 (= lt!36225 #b00000000000000000000000000000000)))

(declare-fun lt!36237 () Unit!2242)

(declare-fun e!51206 () Unit!2242)

(assert (=> d!18499 (= lt!36237 e!51206)))

(declare-fun c!12010 () Bool)

(assert (=> d!18499 (= c!12010 (arrayContainsKey!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!36229 () Unit!2242)

(declare-fun e!51211 () Unit!2242)

(assert (=> d!18499 (= lt!36229 e!51211)))

(declare-fun c!12011 () Bool)

(assert (=> d!18499 (= c!12011 (contains!739 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!18499 (valid!321 newMap!16)))

(assert (=> d!18499 (= (updateHelperNewKey!28 newMap!16 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))) lt!36218)))

(declare-fun b!78337 () Bool)

(declare-fun e!51208 () Bool)

(declare-fun call!7195 () Bool)

(assert (=> b!78337 (= e!51208 (not call!7195))))

(declare-fun bm!7190 () Bool)

(declare-fun call!7193 () SeekEntryResult!243)

(assert (=> bm!7190 (= call!7193 (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(declare-fun c!12009 () Bool)

(declare-fun lt!36235 () SeekEntryResult!243)

(declare-fun bm!7191 () Bool)

(declare-fun call!7194 () Bool)

(assert (=> bm!7191 (= call!7194 (inRange!0 (ite c!12011 (index!3107 lt!36232) (ite c!12009 (index!3106 lt!36235) (index!3109 lt!36235))) (mask!6266 newMap!16)))))

(declare-fun b!78338 () Bool)

(declare-fun e!51205 () Bool)

(assert (=> b!78338 (= e!51205 ((_ is Undefined!243) lt!36235))))

(declare-fun b!78339 () Bool)

(declare-fun res!41032 () Bool)

(assert (=> b!78339 (=> (not res!41032) (not e!51208))))

(declare-fun call!7196 () Bool)

(assert (=> b!78339 (= res!41032 call!7196)))

(declare-fun e!51207 () Bool)

(assert (=> b!78339 (= e!51207 e!51208)))

(declare-fun b!78340 () Bool)

(declare-fun res!41033 () Bool)

(assert (=> b!78340 (=> (not res!41033) (not e!51208))))

(assert (=> b!78340 (= res!41033 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3106 lt!36235)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78341 () Bool)

(declare-fun Unit!2262 () Unit!2242)

(assert (=> b!78341 (= e!51211 Unit!2262)))

(declare-fun lt!36245 () Unit!2242)

(assert (=> b!78341 (= lt!36245 (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(assert (=> b!78341 (= lt!36232 call!7193)))

(declare-fun res!41026 () Bool)

(assert (=> b!78341 (= res!41026 ((_ is Found!243) lt!36232))))

(assert (=> b!78341 (=> (not res!41026) (not e!51210))))

(assert (=> b!78341 e!51210))

(declare-fun lt!36238 () Unit!2242)

(assert (=> b!78341 (= lt!36238 lt!36245)))

(assert (=> b!78341 false))

(declare-fun b!78342 () Bool)

(declare-fun e!51212 () Bool)

(assert (=> b!78342 (= e!51205 e!51212)))

(declare-fun res!41029 () Bool)

(assert (=> b!78342 (= res!41029 call!7196)))

(assert (=> b!78342 (=> (not res!41029) (not e!51212))))

(declare-fun b!78343 () Bool)

(assert (=> b!78343 (= e!51212 (not call!7195))))

(declare-fun b!78344 () Bool)

(declare-fun res!41031 () Bool)

(assert (=> b!78344 (=> (not res!41031) (not e!51209))))

(assert (=> b!78344 (= res!41031 (valid!321 (_2!1098 lt!36218)))))

(declare-fun bm!7192 () Bool)

(assert (=> bm!7192 (= call!7195 (arrayContainsKey!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!78345 () Bool)

(assert (=> b!78345 (= e!51209 (= (map!1173 (_2!1098 lt!36218)) (+!103 (map!1173 newMap!16) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!78346 () Bool)

(declare-fun c!12008 () Bool)

(assert (=> b!78346 (= c!12008 ((_ is MissingVacant!243) lt!36235))))

(assert (=> b!78346 (= e!51207 e!51205)))

(declare-fun b!78347 () Bool)

(declare-fun res!41030 () Bool)

(assert (=> b!78347 (= res!41030 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3109 lt!36235)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78347 (=> (not res!41030) (not e!51212))))

(declare-fun b!78348 () Bool)

(declare-fun res!41027 () Bool)

(assert (=> b!78348 (= res!41027 call!7194)))

(assert (=> b!78348 (=> (not res!41027) (not e!51210))))

(declare-fun bm!7193 () Bool)

(assert (=> bm!7193 (= call!7196 call!7194)))

(declare-fun b!78349 () Bool)

(declare-fun lt!36217 () Unit!2242)

(assert (=> b!78349 (= e!51211 lt!36217)))

(assert (=> b!78349 (= lt!36217 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(assert (=> b!78349 (= lt!36235 call!7193)))

(assert (=> b!78349 (= c!12009 ((_ is MissingZero!243) lt!36235))))

(assert (=> b!78349 e!51207))

(declare-fun b!78350 () Bool)

(declare-fun Unit!2263 () Unit!2242)

(assert (=> b!78350 (= e!51206 Unit!2263)))

(declare-fun lt!36233 () Unit!2242)

(declare-fun lemmaArrayContainsKeyThenInListMap!16 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) (_ BitVec 32) Int) Unit!2242)

(assert (=> b!78350 (= lt!36233 (lemmaArrayContainsKeyThenInListMap!16 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(assert (=> b!78350 (contains!739 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))

(declare-fun lt!36241 () Unit!2242)

(assert (=> b!78350 (= lt!36241 lt!36233)))

(assert (=> b!78350 false))

(declare-fun b!78351 () Bool)

(declare-fun Unit!2264 () Unit!2242)

(assert (=> b!78351 (= e!51206 Unit!2264)))

(assert (= (and d!18499 c!12011) b!78341))

(assert (= (and d!18499 (not c!12011)) b!78349))

(assert (= (and b!78341 res!41026) b!78348))

(assert (= (and b!78348 res!41027) b!78335))

(assert (= (and b!78349 c!12009) b!78339))

(assert (= (and b!78349 (not c!12009)) b!78346))

(assert (= (and b!78339 res!41032) b!78340))

(assert (= (and b!78340 res!41033) b!78337))

(assert (= (and b!78346 c!12008) b!78342))

(assert (= (and b!78346 (not c!12008)) b!78338))

(assert (= (and b!78342 res!41029) b!78347))

(assert (= (and b!78347 res!41030) b!78343))

(assert (= (or b!78339 b!78342) bm!7193))

(assert (= (or b!78337 b!78343) bm!7192))

(assert (= (or b!78348 bm!7193) bm!7191))

(assert (= (or b!78341 b!78349) bm!7190))

(assert (= (and d!18499 c!12010) b!78350))

(assert (= (and d!18499 (not c!12010)) b!78351))

(assert (= (and d!18499 res!41028) b!78344))

(assert (= (and b!78344 res!41031) b!78336))

(assert (= (and b!78336 res!41034) b!78345))

(assert (=> bm!7190 m!77463))

(assert (=> bm!7190 m!77861))

(assert (=> b!78350 m!77463))

(declare-fun m!78333 () Bool)

(assert (=> b!78350 m!78333))

(assert (=> b!78350 m!77787))

(assert (=> b!78350 m!77787))

(assert (=> b!78350 m!77463))

(assert (=> b!78350 m!77889))

(declare-fun m!78335 () Bool)

(assert (=> b!78336 m!78335))

(assert (=> b!78336 m!78335))

(assert (=> b!78336 m!77463))

(declare-fun m!78337 () Bool)

(assert (=> b!78336 m!78337))

(assert (=> b!78341 m!77463))

(assert (=> b!78341 m!77907))

(assert (=> b!78349 m!77463))

(assert (=> b!78349 m!77865))

(declare-fun m!78339 () Bool)

(assert (=> b!78347 m!78339))

(declare-fun m!78341 () Bool)

(assert (=> b!78344 m!78341))

(declare-fun m!78343 () Bool)

(assert (=> b!78335 m!78343))

(assert (=> b!78345 m!78335))

(assert (=> b!78345 m!77483))

(assert (=> b!78345 m!77483))

(declare-fun m!78345 () Bool)

(assert (=> b!78345 m!78345))

(declare-fun m!78347 () Bool)

(assert (=> bm!7191 m!78347))

(declare-fun m!78349 () Bool)

(assert (=> b!78340 m!78349))

(declare-fun m!78351 () Bool)

(assert (=> d!18499 m!78351))

(declare-fun m!78353 () Bool)

(assert (=> d!18499 m!78353))

(declare-fun m!78355 () Bool)

(assert (=> d!18499 m!78355))

(declare-fun m!78357 () Bool)

(assert (=> d!18499 m!78357))

(declare-fun m!78359 () Bool)

(assert (=> d!18499 m!78359))

(assert (=> d!18499 m!77787))

(declare-fun m!78361 () Bool)

(assert (=> d!18499 m!78361))

(assert (=> d!18499 m!77463))

(declare-fun m!78363 () Bool)

(assert (=> d!18499 m!78363))

(declare-fun m!78365 () Bool)

(assert (=> d!18499 m!78365))

(assert (=> d!18499 m!78353))

(declare-fun m!78367 () Bool)

(assert (=> d!18499 m!78367))

(assert (=> d!18499 m!77515))

(assert (=> d!18499 m!77463))

(assert (=> d!18499 m!77859))

(assert (=> d!18499 m!77463))

(declare-fun m!78369 () Bool)

(assert (=> d!18499 m!78369))

(declare-fun m!78371 () Bool)

(assert (=> d!18499 m!78371))

(declare-fun m!78373 () Bool)

(assert (=> d!18499 m!78373))

(assert (=> d!18499 m!77463))

(declare-fun m!78375 () Bool)

(assert (=> d!18499 m!78375))

(assert (=> d!18499 m!77463))

(declare-fun m!78377 () Bool)

(assert (=> d!18499 m!78377))

(declare-fun m!78379 () Bool)

(assert (=> d!18499 m!78379))

(assert (=> d!18499 m!77787))

(assert (=> d!18499 m!77463))

(assert (=> d!18499 m!77889))

(assert (=> d!18499 m!78355))

(assert (=> d!18499 m!77463))

(declare-fun m!78381 () Bool)

(assert (=> d!18499 m!78381))

(assert (=> d!18499 m!77647))

(declare-fun m!78383 () Bool)

(assert (=> d!18499 m!78383))

(assert (=> d!18499 m!77787))

(assert (=> d!18499 m!78229))

(assert (=> d!18499 m!77463))

(declare-fun m!78385 () Bool)

(assert (=> d!18499 m!78385))

(assert (=> bm!7192 m!77463))

(assert (=> bm!7192 m!77859))

(assert (=> bm!7140 d!18499))

(declare-fun d!18501 () Bool)

(declare-fun lt!36246 () Bool)

(assert (=> d!18501 (= lt!36246 (select (content!83 (toList!732 lt!35801)) lt!35659))))

(declare-fun e!51213 () Bool)

(assert (=> d!18501 (= lt!36246 e!51213)))

(declare-fun res!41035 () Bool)

(assert (=> d!18501 (=> (not res!41035) (not e!51213))))

(assert (=> d!18501 (= res!41035 ((_ is Cons!1507) (toList!732 lt!35801)))))

(assert (=> d!18501 (= (contains!740 (toList!732 lt!35801) lt!35659) lt!36246)))

(declare-fun b!78352 () Bool)

(declare-fun e!51214 () Bool)

(assert (=> b!78352 (= e!51213 e!51214)))

(declare-fun res!41036 () Bool)

(assert (=> b!78352 (=> res!41036 e!51214)))

(assert (=> b!78352 (= res!41036 (= (h!2095 (toList!732 lt!35801)) lt!35659))))

(declare-fun b!78353 () Bool)

(assert (=> b!78353 (= e!51214 (contains!740 (t!5148 (toList!732 lt!35801)) lt!35659))))

(assert (= (and d!18501 res!41035) b!78352))

(assert (= (and b!78352 (not res!41036)) b!78353))

(declare-fun m!78387 () Bool)

(assert (=> d!18501 m!78387))

(declare-fun m!78389 () Bool)

(assert (=> d!18501 m!78389))

(declare-fun m!78391 () Bool)

(assert (=> b!78353 m!78391))

(assert (=> b!77790 d!18501))

(declare-fun d!18503 () Bool)

(declare-fun e!51216 () Bool)

(assert (=> d!18503 e!51216))

(declare-fun res!41037 () Bool)

(assert (=> d!18503 (=> res!41037 e!51216)))

(declare-fun lt!36249 () Bool)

(assert (=> d!18503 (= res!41037 (not lt!36249))))

(declare-fun lt!36250 () Bool)

(assert (=> d!18503 (= lt!36249 lt!36250)))

(declare-fun lt!36247 () Unit!2242)

(declare-fun e!51215 () Unit!2242)

(assert (=> d!18503 (= lt!36247 e!51215)))

(declare-fun c!12012 () Bool)

(assert (=> d!18503 (= c!12012 lt!36250)))

(assert (=> d!18503 (= lt!36250 (containsKey!139 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18503 (= (contains!739 lt!35901 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36249)))

(declare-fun b!78354 () Bool)

(declare-fun lt!36248 () Unit!2242)

(assert (=> b!78354 (= e!51215 lt!36248)))

(assert (=> b!78354 (= lt!36248 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78354 (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78355 () Bool)

(declare-fun Unit!2265 () Unit!2242)

(assert (=> b!78355 (= e!51215 Unit!2265)))

(declare-fun b!78356 () Bool)

(assert (=> b!78356 (= e!51216 (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18503 c!12012) b!78354))

(assert (= (and d!18503 (not c!12012)) b!78355))

(assert (= (and d!18503 (not res!41037)) b!78356))

(declare-fun m!78393 () Bool)

(assert (=> d!18503 m!78393))

(declare-fun m!78395 () Bool)

(assert (=> b!78354 m!78395))

(declare-fun m!78397 () Bool)

(assert (=> b!78354 m!78397))

(assert (=> b!78354 m!78397))

(declare-fun m!78399 () Bool)

(assert (=> b!78354 m!78399))

(assert (=> b!78356 m!78397))

(assert (=> b!78356 m!78397))

(assert (=> b!78356 m!78399))

(assert (=> bm!7071 d!18503))

(declare-fun d!18505 () Bool)

(assert (=> d!18505 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!35990 lt!35658 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36253 () Unit!2242)

(declare-fun choose!466 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 V!2993 Int) Unit!2242)

(assert (=> d!18505 (= lt!36253 (choose!466 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) lt!35990 (zeroValue!2169 newMap!16) lt!35658 (minValue!2169 newMap!16) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18505 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18505 (= (lemmaChangeZeroKeyThenAddPairToListMap!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) lt!35990 (zeroValue!2169 newMap!16) lt!35658 (minValue!2169 newMap!16) (defaultEntry!2271 newMap!16)) lt!36253)))

(declare-fun bs!3304 () Bool)

(assert (= bs!3304 d!18505))

(declare-fun m!78401 () Bool)

(assert (=> bs!3304 m!78401))

(assert (=> bs!3304 m!77977))

(assert (=> bs!3304 m!77787))

(assert (=> bs!3304 m!77787))

(declare-fun m!78403 () Bool)

(assert (=> bs!3304 m!78403))

(declare-fun m!78405 () Bool)

(assert (=> bs!3304 m!78405))

(assert (=> b!78026 d!18505))

(declare-fun d!18507 () Bool)

(declare-fun res!41038 () Bool)

(declare-fun e!51217 () Bool)

(assert (=> d!18507 (=> res!41038 e!51217)))

(assert (=> d!18507 (= res!41038 (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!18507 (= (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!51217)))

(declare-fun b!78357 () Bool)

(declare-fun e!51218 () Bool)

(assert (=> b!78357 (= e!51217 e!51218)))

(declare-fun res!41039 () Bool)

(assert (=> b!78357 (=> (not res!41039) (not e!51218))))

(assert (=> b!78357 (= res!41039 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!78358 () Bool)

(assert (=> b!78358 (= e!51218 (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!18507 (not res!41038)) b!78357))

(assert (= (and b!78357 res!41039) b!78358))

(assert (=> d!18507 m!78113))

(assert (=> b!78358 m!77463))

(declare-fun m!78407 () Bool)

(assert (=> b!78358 m!78407))

(assert (=> b!77903 d!18507))

(declare-fun d!18509 () Bool)

(assert (=> d!18509 (= (apply!79 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35896) (apply!79 lt!35890 lt!35896))))

(declare-fun lt!36256 () Unit!2242)

(declare-fun choose!467 (ListLongMap!1433 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2242)

(assert (=> d!18509 (= lt!36256 (choose!467 lt!35890 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35896))))

(declare-fun e!51221 () Bool)

(assert (=> d!18509 e!51221))

(declare-fun res!41042 () Bool)

(assert (=> d!18509 (=> (not res!41042) (not e!51221))))

(assert (=> d!18509 (= res!41042 (contains!739 lt!35890 lt!35896))))

(assert (=> d!18509 (= (addApplyDifferent!55 lt!35890 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35896) lt!36256)))

(declare-fun b!78362 () Bool)

(assert (=> b!78362 (= e!51221 (not (= lt!35896 lt!35899)))))

(assert (= (and d!18509 res!41042) b!78362))

(declare-fun m!78409 () Bool)

(assert (=> d!18509 m!78409))

(assert (=> d!18509 m!77795))

(assert (=> d!18509 m!77795))

(assert (=> d!18509 m!77797))

(declare-fun m!78411 () Bool)

(assert (=> d!18509 m!78411))

(assert (=> d!18509 m!77817))

(assert (=> b!77880 d!18509))

(declare-fun d!18511 () Bool)

(assert (=> d!18511 (contains!739 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35898)))

(declare-fun lt!36259 () Unit!2242)

(declare-fun choose!468 (ListLongMap!1433 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2242)

(assert (=> d!18511 (= lt!36259 (choose!468 lt!35891 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35898))))

(assert (=> d!18511 (contains!739 lt!35891 lt!35898)))

(assert (=> d!18511 (= (addStillContains!55 lt!35891 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35898) lt!36259)))

(declare-fun bs!3305 () Bool)

(assert (= bs!3305 d!18511))

(assert (=> bs!3305 m!77807))

(assert (=> bs!3305 m!77807))

(assert (=> bs!3305 m!77815))

(declare-fun m!78413 () Bool)

(assert (=> bs!3305 m!78413))

(declare-fun m!78415 () Bool)

(assert (=> bs!3305 m!78415))

(assert (=> b!77880 d!18511))

(assert (=> b!77880 d!18373))

(declare-fun d!18513 () Bool)

(assert (=> d!18513 (= (apply!79 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35905) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35905)))))

(declare-fun bs!3306 () Bool)

(assert (= bs!3306 d!18513))

(declare-fun m!78417 () Bool)

(assert (=> bs!3306 m!78417))

(assert (=> bs!3306 m!78417))

(declare-fun m!78419 () Bool)

(assert (=> bs!3306 m!78419))

(assert (=> b!77880 d!18513))

(declare-fun d!18515 () Bool)

(assert (=> d!18515 (= (apply!79 lt!35902 lt!35905) (get!1180 (getValueByKey!135 (toList!732 lt!35902) lt!35905)))))

(declare-fun bs!3307 () Bool)

(assert (= bs!3307 d!18515))

(declare-fun m!78421 () Bool)

(assert (=> bs!3307 m!78421))

(assert (=> bs!3307 m!78421))

(declare-fun m!78423 () Bool)

(assert (=> bs!3307 m!78423))

(assert (=> b!77880 d!18515))

(declare-fun d!18517 () Bool)

(assert (=> d!18517 (= (apply!79 lt!35895 lt!35906) (get!1180 (getValueByKey!135 (toList!732 lt!35895) lt!35906)))))

(declare-fun bs!3308 () Bool)

(assert (= bs!3308 d!18517))

(declare-fun m!78425 () Bool)

(assert (=> bs!3308 m!78425))

(assert (=> bs!3308 m!78425))

(declare-fun m!78427 () Bool)

(assert (=> bs!3308 m!78427))

(assert (=> b!77880 d!18517))

(declare-fun d!18519 () Bool)

(declare-fun e!51222 () Bool)

(assert (=> d!18519 e!51222))

(declare-fun res!41043 () Bool)

(assert (=> d!18519 (=> (not res!41043) (not e!51222))))

(declare-fun lt!36263 () ListLongMap!1433)

(assert (=> d!18519 (= res!41043 (contains!739 lt!36263 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36261 () List!1511)

(assert (=> d!18519 (= lt!36263 (ListLongMap!1434 lt!36261))))

(declare-fun lt!36260 () Unit!2242)

(declare-fun lt!36262 () Unit!2242)

(assert (=> d!18519 (= lt!36260 lt!36262)))

(assert (=> d!18519 (= (getValueByKey!135 lt!36261 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18519 (= lt!36262 (lemmaContainsTupThenGetReturnValue!55 lt!36261 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18519 (= lt!36261 (insertStrictlySorted!58 (toList!732 lt!35902) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18519 (= (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36263)))

(declare-fun b!78364 () Bool)

(declare-fun res!41044 () Bool)

(assert (=> b!78364 (=> (not res!41044) (not e!51222))))

(assert (=> b!78364 (= res!41044 (= (getValueByKey!135 (toList!732 lt!36263) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78365 () Bool)

(assert (=> b!78365 (= e!51222 (contains!740 (toList!732 lt!36263) (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18519 res!41043) b!78364))

(assert (= (and b!78364 res!41044) b!78365))

(declare-fun m!78429 () Bool)

(assert (=> d!18519 m!78429))

(declare-fun m!78431 () Bool)

(assert (=> d!18519 m!78431))

(declare-fun m!78433 () Bool)

(assert (=> d!18519 m!78433))

(declare-fun m!78435 () Bool)

(assert (=> d!18519 m!78435))

(declare-fun m!78437 () Bool)

(assert (=> b!78364 m!78437))

(declare-fun m!78439 () Bool)

(assert (=> b!78365 m!78439))

(assert (=> b!77880 d!18519))

(declare-fun d!18521 () Bool)

(assert (=> d!18521 (= (apply!79 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35906) (apply!79 lt!35895 lt!35906))))

(declare-fun lt!36264 () Unit!2242)

(assert (=> d!18521 (= lt!36264 (choose!467 lt!35895 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35906))))

(declare-fun e!51223 () Bool)

(assert (=> d!18521 e!51223))

(declare-fun res!41045 () Bool)

(assert (=> d!18521 (=> (not res!41045) (not e!51223))))

(assert (=> d!18521 (= res!41045 (contains!739 lt!35895 lt!35906))))

(assert (=> d!18521 (= (addApplyDifferent!55 lt!35895 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35906) lt!36264)))

(declare-fun b!78366 () Bool)

(assert (=> b!78366 (= e!51223 (not (= lt!35906 lt!35908)))))

(assert (= (and d!18521 res!41045) b!78366))

(declare-fun m!78441 () Bool)

(assert (=> d!18521 m!78441))

(assert (=> d!18521 m!77809))

(assert (=> d!18521 m!77809))

(assert (=> d!18521 m!77811))

(declare-fun m!78443 () Bool)

(assert (=> d!18521 m!78443))

(assert (=> d!18521 m!77791))

(assert (=> b!77880 d!18521))

(declare-fun d!18523 () Bool)

(assert (=> d!18523 (= (apply!79 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35896) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35896)))))

(declare-fun bs!3309 () Bool)

(assert (= bs!3309 d!18523))

(declare-fun m!78445 () Bool)

(assert (=> bs!3309 m!78445))

(assert (=> bs!3309 m!78445))

(declare-fun m!78447 () Bool)

(assert (=> bs!3309 m!78447))

(assert (=> b!77880 d!18523))

(declare-fun d!18525 () Bool)

(declare-fun e!51225 () Bool)

(assert (=> d!18525 e!51225))

(declare-fun res!41046 () Bool)

(assert (=> d!18525 (=> res!41046 e!51225)))

(declare-fun lt!36267 () Bool)

(assert (=> d!18525 (= res!41046 (not lt!36267))))

(declare-fun lt!36268 () Bool)

(assert (=> d!18525 (= lt!36267 lt!36268)))

(declare-fun lt!36265 () Unit!2242)

(declare-fun e!51224 () Unit!2242)

(assert (=> d!18525 (= lt!36265 e!51224)))

(declare-fun c!12013 () Bool)

(assert (=> d!18525 (= c!12013 lt!36268)))

(assert (=> d!18525 (= lt!36268 (containsKey!139 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898))))

(assert (=> d!18525 (= (contains!739 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35898) lt!36267)))

(declare-fun b!78367 () Bool)

(declare-fun lt!36266 () Unit!2242)

(assert (=> b!78367 (= e!51224 lt!36266)))

(assert (=> b!78367 (= lt!36266 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898))))

(assert (=> b!78367 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898))))

(declare-fun b!78368 () Bool)

(declare-fun Unit!2266 () Unit!2242)

(assert (=> b!78368 (= e!51224 Unit!2266)))

(declare-fun b!78369 () Bool)

(assert (=> b!78369 (= e!51225 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898)))))

(assert (= (and d!18525 c!12013) b!78367))

(assert (= (and d!18525 (not c!12013)) b!78368))

(assert (= (and d!18525 (not res!41046)) b!78369))

(declare-fun m!78449 () Bool)

(assert (=> d!18525 m!78449))

(declare-fun m!78451 () Bool)

(assert (=> b!78367 m!78451))

(declare-fun m!78453 () Bool)

(assert (=> b!78367 m!78453))

(assert (=> b!78367 m!78453))

(declare-fun m!78455 () Bool)

(assert (=> b!78367 m!78455))

(assert (=> b!78369 m!78453))

(assert (=> b!78369 m!78453))

(assert (=> b!78369 m!78455))

(assert (=> b!77880 d!18525))

(declare-fun d!18527 () Bool)

(assert (=> d!18527 (= (apply!79 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35905) (apply!79 lt!35902 lt!35905))))

(declare-fun lt!36269 () Unit!2242)

(assert (=> d!18527 (= lt!36269 (choose!467 lt!35902 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35905))))

(declare-fun e!51226 () Bool)

(assert (=> d!18527 e!51226))

(declare-fun res!41047 () Bool)

(assert (=> d!18527 (=> (not res!41047) (not e!51226))))

(assert (=> d!18527 (= res!41047 (contains!739 lt!35902 lt!35905))))

(assert (=> d!18527 (= (addApplyDifferent!55 lt!35902 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35905) lt!36269)))

(declare-fun b!78370 () Bool)

(assert (=> b!78370 (= e!51226 (not (= lt!35905 lt!35903)))))

(assert (= (and d!18527 res!41047) b!78370))

(declare-fun m!78457 () Bool)

(assert (=> d!18527 m!78457))

(assert (=> d!18527 m!77805))

(assert (=> d!18527 m!77805))

(assert (=> d!18527 m!77819))

(declare-fun m!78459 () Bool)

(assert (=> d!18527 m!78459))

(assert (=> d!18527 m!77793))

(assert (=> b!77880 d!18527))

(declare-fun d!18529 () Bool)

(assert (=> d!18529 (= (apply!79 lt!35890 lt!35896) (get!1180 (getValueByKey!135 (toList!732 lt!35890) lt!35896)))))

(declare-fun bs!3310 () Bool)

(assert (= bs!3310 d!18529))

(declare-fun m!78461 () Bool)

(assert (=> bs!3310 m!78461))

(assert (=> bs!3310 m!78461))

(declare-fun m!78463 () Bool)

(assert (=> bs!3310 m!78463))

(assert (=> b!77880 d!18529))

(declare-fun d!18531 () Bool)

(assert (=> d!18531 (= (apply!79 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35906) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35906)))))

(declare-fun bs!3311 () Bool)

(assert (= bs!3311 d!18531))

(declare-fun m!78465 () Bool)

(assert (=> bs!3311 m!78465))

(assert (=> bs!3311 m!78465))

(declare-fun m!78467 () Bool)

(assert (=> bs!3311 m!78467))

(assert (=> b!77880 d!18531))

(declare-fun d!18533 () Bool)

(declare-fun e!51227 () Bool)

(assert (=> d!18533 e!51227))

(declare-fun res!41048 () Bool)

(assert (=> d!18533 (=> (not res!41048) (not e!51227))))

(declare-fun lt!36273 () ListLongMap!1433)

(assert (=> d!18533 (= res!41048 (contains!739 lt!36273 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36271 () List!1511)

(assert (=> d!18533 (= lt!36273 (ListLongMap!1434 lt!36271))))

(declare-fun lt!36270 () Unit!2242)

(declare-fun lt!36272 () Unit!2242)

(assert (=> d!18533 (= lt!36270 lt!36272)))

(assert (=> d!18533 (= (getValueByKey!135 lt!36271 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18533 (= lt!36272 (lemmaContainsTupThenGetReturnValue!55 lt!36271 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18533 (= lt!36271 (insertStrictlySorted!58 (toList!732 lt!35890) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18533 (= (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36273)))

(declare-fun b!78371 () Bool)

(declare-fun res!41049 () Bool)

(assert (=> b!78371 (=> (not res!41049) (not e!51227))))

(assert (=> b!78371 (= res!41049 (= (getValueByKey!135 (toList!732 lt!36273) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78372 () Bool)

(assert (=> b!78372 (= e!51227 (contains!740 (toList!732 lt!36273) (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18533 res!41048) b!78371))

(assert (= (and b!78371 res!41049) b!78372))

(declare-fun m!78469 () Bool)

(assert (=> d!18533 m!78469))

(declare-fun m!78471 () Bool)

(assert (=> d!18533 m!78471))

(declare-fun m!78473 () Bool)

(assert (=> d!18533 m!78473))

(declare-fun m!78475 () Bool)

(assert (=> d!18533 m!78475))

(declare-fun m!78477 () Bool)

(assert (=> b!78371 m!78477))

(declare-fun m!78479 () Bool)

(assert (=> b!78372 m!78479))

(assert (=> b!77880 d!18533))

(declare-fun d!18535 () Bool)

(declare-fun e!51228 () Bool)

(assert (=> d!18535 e!51228))

(declare-fun res!41050 () Bool)

(assert (=> d!18535 (=> (not res!41050) (not e!51228))))

(declare-fun lt!36277 () ListLongMap!1433)

(assert (=> d!18535 (= res!41050 (contains!739 lt!36277 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36275 () List!1511)

(assert (=> d!18535 (= lt!36277 (ListLongMap!1434 lt!36275))))

(declare-fun lt!36274 () Unit!2242)

(declare-fun lt!36276 () Unit!2242)

(assert (=> d!18535 (= lt!36274 lt!36276)))

(assert (=> d!18535 (= (getValueByKey!135 lt!36275 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18535 (= lt!36276 (lemmaContainsTupThenGetReturnValue!55 lt!36275 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18535 (= lt!36275 (insertStrictlySorted!58 (toList!732 lt!35895) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18535 (= (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36277)))

(declare-fun b!78373 () Bool)

(declare-fun res!41051 () Bool)

(assert (=> b!78373 (=> (not res!41051) (not e!51228))))

(assert (=> b!78373 (= res!41051 (= (getValueByKey!135 (toList!732 lt!36277) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78374 () Bool)

(assert (=> b!78374 (= e!51228 (contains!740 (toList!732 lt!36277) (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18535 res!41050) b!78373))

(assert (= (and b!78373 res!41051) b!78374))

(declare-fun m!78481 () Bool)

(assert (=> d!18535 m!78481))

(declare-fun m!78483 () Bool)

(assert (=> d!18535 m!78483))

(declare-fun m!78485 () Bool)

(assert (=> d!18535 m!78485))

(declare-fun m!78487 () Bool)

(assert (=> d!18535 m!78487))

(declare-fun m!78489 () Bool)

(assert (=> b!78373 m!78489))

(declare-fun m!78491 () Bool)

(assert (=> b!78374 m!78491))

(assert (=> b!77880 d!18535))

(declare-fun d!18537 () Bool)

(declare-fun e!51229 () Bool)

(assert (=> d!18537 e!51229))

(declare-fun res!41052 () Bool)

(assert (=> d!18537 (=> (not res!41052) (not e!51229))))

(declare-fun lt!36281 () ListLongMap!1433)

(assert (=> d!18537 (= res!41052 (contains!739 lt!36281 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36279 () List!1511)

(assert (=> d!18537 (= lt!36281 (ListLongMap!1434 lt!36279))))

(declare-fun lt!36278 () Unit!2242)

(declare-fun lt!36280 () Unit!2242)

(assert (=> d!18537 (= lt!36278 lt!36280)))

(assert (=> d!18537 (= (getValueByKey!135 lt!36279 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18537 (= lt!36280 (lemmaContainsTupThenGetReturnValue!55 lt!36279 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18537 (= lt!36279 (insertStrictlySorted!58 (toList!732 lt!35891) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18537 (= (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36281)))

(declare-fun b!78375 () Bool)

(declare-fun res!41053 () Bool)

(assert (=> b!78375 (=> (not res!41053) (not e!51229))))

(assert (=> b!78375 (= res!41053 (= (getValueByKey!135 (toList!732 lt!36281) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78376 () Bool)

(assert (=> b!78376 (= e!51229 (contains!740 (toList!732 lt!36281) (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18537 res!41052) b!78375))

(assert (= (and b!78375 res!41053) b!78376))

(declare-fun m!78493 () Bool)

(assert (=> d!18537 m!78493))

(declare-fun m!78495 () Bool)

(assert (=> d!18537 m!78495))

(declare-fun m!78497 () Bool)

(assert (=> d!18537 m!78497))

(declare-fun m!78499 () Bool)

(assert (=> d!18537 m!78499))

(declare-fun m!78501 () Bool)

(assert (=> b!78375 m!78501))

(declare-fun m!78503 () Bool)

(assert (=> b!78376 m!78503))

(assert (=> b!77880 d!18537))

(declare-fun b!78393 () Bool)

(declare-fun e!51240 () Bool)

(declare-fun call!7201 () Bool)

(assert (=> b!78393 (= e!51240 (not call!7201))))

(declare-fun b!78394 () Bool)

(declare-fun e!51239 () Bool)

(declare-fun e!51238 () Bool)

(assert (=> b!78394 (= e!51239 e!51238)))

(declare-fun c!12019 () Bool)

(declare-fun lt!36287 () SeekEntryResult!243)

(assert (=> b!78394 (= c!12019 ((_ is MissingVacant!243) lt!36287))))

(declare-fun b!78395 () Bool)

(declare-fun e!51241 () Bool)

(assert (=> b!78395 (= e!51241 (not call!7201))))

(declare-fun b!78396 () Bool)

(assert (=> b!78396 (= e!51238 ((_ is Undefined!243) lt!36287))))

(declare-fun bm!7198 () Bool)

(assert (=> bm!7198 (= call!7201 (arrayContainsKey!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!7199 () Bool)

(declare-fun call!7202 () Bool)

(declare-fun c!12018 () Bool)

(assert (=> bm!7199 (= call!7202 (inRange!0 (ite c!12018 (index!3106 lt!36287) (index!3109 lt!36287)) (mask!6266 newMap!16)))))

(declare-fun b!78397 () Bool)

(declare-fun res!41062 () Bool)

(assert (=> b!78397 (=> (not res!41062) (not e!51240))))

(assert (=> b!78397 (= res!41062 call!7202)))

(assert (=> b!78397 (= e!51238 e!51240)))

(declare-fun b!78398 () Bool)

(assert (=> b!78398 (= e!51239 e!51241)))

(declare-fun res!41065 () Bool)

(assert (=> b!78398 (= res!41065 call!7202)))

(assert (=> b!78398 (=> (not res!41065) (not e!51241))))

(declare-fun b!78399 () Bool)

(assert (=> b!78399 (and (bvsge (index!3106 lt!36287) #b00000000000000000000000000000000) (bvslt (index!3106 lt!36287) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun res!41063 () Bool)

(assert (=> b!78399 (= res!41063 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3106 lt!36287)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78399 (=> (not res!41063) (not e!51241))))

(declare-fun b!78400 () Bool)

(declare-fun res!41064 () Bool)

(assert (=> b!78400 (=> (not res!41064) (not e!51240))))

(assert (=> b!78400 (= res!41064 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3109 lt!36287)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78400 (and (bvsge (index!3109 lt!36287) #b00000000000000000000000000000000) (bvslt (index!3109 lt!36287) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun d!18539 () Bool)

(assert (=> d!18539 e!51239))

(assert (=> d!18539 (= c!12018 ((_ is MissingZero!243) lt!36287))))

(assert (=> d!18539 (= lt!36287 (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(declare-fun lt!36286 () Unit!2242)

(declare-fun choose!469 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) Int) Unit!2242)

(assert (=> d!18539 (= lt!36286 (choose!469 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18539 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18539 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)) lt!36286)))

(assert (= (and d!18539 c!12018) b!78398))

(assert (= (and d!18539 (not c!12018)) b!78394))

(assert (= (and b!78398 res!41065) b!78399))

(assert (= (and b!78399 res!41063) b!78395))

(assert (= (and b!78394 c!12019) b!78397))

(assert (= (and b!78394 (not c!12019)) b!78396))

(assert (= (and b!78397 res!41062) b!78400))

(assert (= (and b!78400 res!41064) b!78393))

(assert (= (or b!78398 b!78397) bm!7199))

(assert (= (or b!78395 b!78393) bm!7198))

(declare-fun m!78505 () Bool)

(assert (=> b!78400 m!78505))

(declare-fun m!78507 () Bool)

(assert (=> bm!7199 m!78507))

(declare-fun m!78509 () Bool)

(assert (=> b!78399 m!78509))

(assert (=> bm!7198 m!77463))

(assert (=> bm!7198 m!77859))

(assert (=> d!18539 m!77463))

(assert (=> d!18539 m!77861))

(assert (=> d!18539 m!77463))

(declare-fun m!78511 () Bool)

(assert (=> d!18539 m!78511))

(assert (=> d!18539 m!77977))

(assert (=> bm!7130 d!18539))

(declare-fun d!18541 () Bool)

(declare-fun e!51243 () Bool)

(assert (=> d!18541 e!51243))

(declare-fun res!41066 () Bool)

(assert (=> d!18541 (=> res!41066 e!51243)))

(declare-fun lt!36290 () Bool)

(assert (=> d!18541 (= res!41066 (not lt!36290))))

(declare-fun lt!36291 () Bool)

(assert (=> d!18541 (= lt!36290 lt!36291)))

(declare-fun lt!36288 () Unit!2242)

(declare-fun e!51242 () Unit!2242)

(assert (=> d!18541 (= lt!36288 e!51242)))

(declare-fun c!12020 () Bool)

(assert (=> d!18541 (= c!12020 lt!36291)))

(assert (=> d!18541 (= lt!36291 (containsKey!139 (toList!732 lt!35801) (_1!1099 lt!35659)))))

(assert (=> d!18541 (= (contains!739 lt!35801 (_1!1099 lt!35659)) lt!36290)))

(declare-fun b!78401 () Bool)

(declare-fun lt!36289 () Unit!2242)

(assert (=> b!78401 (= e!51242 lt!36289)))

(assert (=> b!78401 (= lt!36289 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35801) (_1!1099 lt!35659)))))

(assert (=> b!78401 (isDefined!89 (getValueByKey!135 (toList!732 lt!35801) (_1!1099 lt!35659)))))

(declare-fun b!78402 () Bool)

(declare-fun Unit!2267 () Unit!2242)

(assert (=> b!78402 (= e!51242 Unit!2267)))

(declare-fun b!78403 () Bool)

(assert (=> b!78403 (= e!51243 (isDefined!89 (getValueByKey!135 (toList!732 lt!35801) (_1!1099 lt!35659))))))

(assert (= (and d!18541 c!12020) b!78401))

(assert (= (and d!18541 (not c!12020)) b!78402))

(assert (= (and d!18541 (not res!41066)) b!78403))

(declare-fun m!78513 () Bool)

(assert (=> d!18541 m!78513))

(declare-fun m!78515 () Bool)

(assert (=> b!78401 m!78515))

(assert (=> b!78401 m!77685))

(assert (=> b!78401 m!77685))

(declare-fun m!78517 () Bool)

(assert (=> b!78401 m!78517))

(assert (=> b!78403 m!77685))

(assert (=> b!78403 m!77685))

(assert (=> b!78403 m!78517))

(assert (=> d!18359 d!18541))

(declare-fun b!78404 () Bool)

(declare-fun e!51244 () Option!141)

(assert (=> b!78404 (= e!51244 (Some!140 (_2!1099 (h!2095 lt!35799))))))

(declare-fun b!78406 () Bool)

(declare-fun e!51245 () Option!141)

(assert (=> b!78406 (= e!51245 (getValueByKey!135 (t!5148 lt!35799) (_1!1099 lt!35659)))))

(declare-fun d!18543 () Bool)

(declare-fun c!12021 () Bool)

(assert (=> d!18543 (= c!12021 (and ((_ is Cons!1507) lt!35799) (= (_1!1099 (h!2095 lt!35799)) (_1!1099 lt!35659))))))

(assert (=> d!18543 (= (getValueByKey!135 lt!35799 (_1!1099 lt!35659)) e!51244)))

(declare-fun b!78407 () Bool)

(assert (=> b!78407 (= e!51245 None!139)))

(declare-fun b!78405 () Bool)

(assert (=> b!78405 (= e!51244 e!51245)))

(declare-fun c!12022 () Bool)

(assert (=> b!78405 (= c!12022 (and ((_ is Cons!1507) lt!35799) (not (= (_1!1099 (h!2095 lt!35799)) (_1!1099 lt!35659)))))))

(assert (= (and d!18543 c!12021) b!78404))

(assert (= (and d!18543 (not c!12021)) b!78405))

(assert (= (and b!78405 c!12022) b!78406))

(assert (= (and b!78405 (not c!12022)) b!78407))

(declare-fun m!78519 () Bool)

(assert (=> b!78406 m!78519))

(assert (=> d!18359 d!18543))

(declare-fun d!18545 () Bool)

(assert (=> d!18545 (= (getValueByKey!135 lt!35799 (_1!1099 lt!35659)) (Some!140 (_2!1099 lt!35659)))))

(declare-fun lt!36292 () Unit!2242)

(assert (=> d!18545 (= lt!36292 (choose!462 lt!35799 (_1!1099 lt!35659) (_2!1099 lt!35659)))))

(declare-fun e!51246 () Bool)

(assert (=> d!18545 e!51246))

(declare-fun res!41067 () Bool)

(assert (=> d!18545 (=> (not res!41067) (not e!51246))))

(assert (=> d!18545 (= res!41067 (isStrictlySorted!290 lt!35799))))

(assert (=> d!18545 (= (lemmaContainsTupThenGetReturnValue!55 lt!35799 (_1!1099 lt!35659) (_2!1099 lt!35659)) lt!36292)))

(declare-fun b!78408 () Bool)

(declare-fun res!41068 () Bool)

(assert (=> b!78408 (=> (not res!41068) (not e!51246))))

(assert (=> b!78408 (= res!41068 (containsKey!139 lt!35799 (_1!1099 lt!35659)))))

(declare-fun b!78409 () Bool)

(assert (=> b!78409 (= e!51246 (contains!740 lt!35799 (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(assert (= (and d!18545 res!41067) b!78408))

(assert (= (and b!78408 res!41068) b!78409))

(assert (=> d!18545 m!77679))

(declare-fun m!78521 () Bool)

(assert (=> d!18545 m!78521))

(declare-fun m!78523 () Bool)

(assert (=> d!18545 m!78523))

(declare-fun m!78525 () Bool)

(assert (=> b!78408 m!78525))

(declare-fun m!78527 () Bool)

(assert (=> b!78409 m!78527))

(assert (=> d!18359 d!18545))

(declare-fun b!78410 () Bool)

(declare-fun e!51248 () List!1511)

(declare-fun call!7203 () List!1511)

(assert (=> b!78410 (= e!51248 call!7203)))

(declare-fun b!78411 () Bool)

(declare-fun res!41070 () Bool)

(declare-fun e!51250 () Bool)

(assert (=> b!78411 (=> (not res!41070) (not e!51250))))

(declare-fun lt!36293 () List!1511)

(assert (=> b!78411 (= res!41070 (containsKey!139 lt!36293 (_1!1099 lt!35659)))))

(declare-fun e!51251 () List!1511)

(declare-fun call!7204 () List!1511)

(declare-fun bm!7200 () Bool)

(declare-fun c!12024 () Bool)

(assert (=> bm!7200 (= call!7204 ($colon$colon!68 e!51251 (ite c!12024 (h!2095 (toList!732 lt!35663)) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659)))))))

(declare-fun c!12025 () Bool)

(assert (=> bm!7200 (= c!12025 c!12024)))

(declare-fun b!78412 () Bool)

(declare-fun c!12023 () Bool)

(declare-fun c!12026 () Bool)

(assert (=> b!78412 (= e!51251 (ite c!12023 (t!5148 (toList!732 lt!35663)) (ite c!12026 (Cons!1507 (h!2095 (toList!732 lt!35663)) (t!5148 (toList!732 lt!35663))) Nil!1508)))))

(declare-fun d!18547 () Bool)

(assert (=> d!18547 e!51250))

(declare-fun res!41069 () Bool)

(assert (=> d!18547 (=> (not res!41069) (not e!51250))))

(assert (=> d!18547 (= res!41069 (isStrictlySorted!290 lt!36293))))

(declare-fun e!51247 () List!1511)

(assert (=> d!18547 (= lt!36293 e!51247)))

(assert (=> d!18547 (= c!12024 (and ((_ is Cons!1507) (toList!732 lt!35663)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35663))) (_1!1099 lt!35659))))))

(assert (=> d!18547 (isStrictlySorted!290 (toList!732 lt!35663))))

(assert (=> d!18547 (= (insertStrictlySorted!58 (toList!732 lt!35663) (_1!1099 lt!35659) (_2!1099 lt!35659)) lt!36293)))

(declare-fun bm!7201 () Bool)

(declare-fun call!7205 () List!1511)

(assert (=> bm!7201 (= call!7205 call!7203)))

(declare-fun b!78413 () Bool)

(assert (=> b!78413 (= c!12026 (and ((_ is Cons!1507) (toList!732 lt!35663)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35663))) (_1!1099 lt!35659))))))

(declare-fun e!51249 () List!1511)

(assert (=> b!78413 (= e!51248 e!51249)))

(declare-fun b!78414 () Bool)

(assert (=> b!78414 (= e!51249 call!7205)))

(declare-fun b!78415 () Bool)

(assert (=> b!78415 (= e!51247 e!51248)))

(assert (=> b!78415 (= c!12023 (and ((_ is Cons!1507) (toList!732 lt!35663)) (= (_1!1099 (h!2095 (toList!732 lt!35663))) (_1!1099 lt!35659))))))

(declare-fun b!78416 () Bool)

(assert (=> b!78416 (= e!51249 call!7205)))

(declare-fun bm!7202 () Bool)

(assert (=> bm!7202 (= call!7203 call!7204)))

(declare-fun b!78417 () Bool)

(assert (=> b!78417 (= e!51251 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35663)) (_1!1099 lt!35659) (_2!1099 lt!35659)))))

(declare-fun b!78418 () Bool)

(assert (=> b!78418 (= e!51247 call!7204)))

(declare-fun b!78419 () Bool)

(assert (=> b!78419 (= e!51250 (contains!740 lt!36293 (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(assert (= (and d!18547 c!12024) b!78418))

(assert (= (and d!18547 (not c!12024)) b!78415))

(assert (= (and b!78415 c!12023) b!78410))

(assert (= (and b!78415 (not c!12023)) b!78413))

(assert (= (and b!78413 c!12026) b!78416))

(assert (= (and b!78413 (not c!12026)) b!78414))

(assert (= (or b!78416 b!78414) bm!7201))

(assert (= (or b!78410 bm!7201) bm!7202))

(assert (= (or b!78418 bm!7202) bm!7200))

(assert (= (and bm!7200 c!12025) b!78417))

(assert (= (and bm!7200 (not c!12025)) b!78412))

(assert (= (and d!18547 res!41069) b!78411))

(assert (= (and b!78411 res!41070) b!78419))

(declare-fun m!78529 () Bool)

(assert (=> b!78417 m!78529))

(declare-fun m!78531 () Bool)

(assert (=> bm!7200 m!78531))

(declare-fun m!78533 () Bool)

(assert (=> b!78411 m!78533))

(declare-fun m!78535 () Bool)

(assert (=> b!78419 m!78535))

(declare-fun m!78537 () Bool)

(assert (=> d!18547 m!78537))

(declare-fun m!78539 () Bool)

(assert (=> d!18547 m!78539))

(assert (=> d!18359 d!18547))

(declare-fun d!18549 () Bool)

(declare-fun res!41071 () Bool)

(declare-fun e!51252 () Bool)

(assert (=> d!18549 (=> res!41071 e!51252)))

(assert (=> d!18549 (= res!41071 (= (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!18549 (= (arrayContainsKey!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000) e!51252)))

(declare-fun b!78420 () Bool)

(declare-fun e!51253 () Bool)

(assert (=> b!78420 (= e!51252 e!51253)))

(declare-fun res!41072 () Bool)

(assert (=> b!78420 (=> (not res!41072) (not e!51253))))

(assert (=> b!78420 (= res!41072 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78421 () Bool)

(assert (=> b!78421 (= e!51253 (arrayContainsKey!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!18549 (not res!41071)) b!78420))

(assert (= (and b!78420 res!41072) b!78421))

(assert (=> d!18549 m!77965))

(assert (=> b!78421 m!77463))

(declare-fun m!78541 () Bool)

(assert (=> b!78421 m!78541))

(assert (=> bm!7138 d!18549))

(declare-fun d!18551 () Bool)

(declare-fun e!51255 () Bool)

(assert (=> d!18551 e!51255))

(declare-fun res!41073 () Bool)

(assert (=> d!18551 (=> res!41073 e!51255)))

(declare-fun lt!36296 () Bool)

(assert (=> d!18551 (= res!41073 (not lt!36296))))

(declare-fun lt!36297 () Bool)

(assert (=> d!18551 (= lt!36296 lt!36297)))

(declare-fun lt!36294 () Unit!2242)

(declare-fun e!51254 () Unit!2242)

(assert (=> d!18551 (= lt!36294 e!51254)))

(declare-fun c!12027 () Bool)

(assert (=> d!18551 (= c!12027 lt!36297)))

(assert (=> d!18551 (= lt!36297 (containsKey!139 (toList!732 lt!35805) (_1!1099 lt!35660)))))

(assert (=> d!18551 (= (contains!739 lt!35805 (_1!1099 lt!35660)) lt!36296)))

(declare-fun b!78422 () Bool)

(declare-fun lt!36295 () Unit!2242)

(assert (=> b!78422 (= e!51254 lt!36295)))

(assert (=> b!78422 (= lt!36295 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35805) (_1!1099 lt!35660)))))

(assert (=> b!78422 (isDefined!89 (getValueByKey!135 (toList!732 lt!35805) (_1!1099 lt!35660)))))

(declare-fun b!78423 () Bool)

(declare-fun Unit!2268 () Unit!2242)

(assert (=> b!78423 (= e!51254 Unit!2268)))

(declare-fun b!78424 () Bool)

(assert (=> b!78424 (= e!51255 (isDefined!89 (getValueByKey!135 (toList!732 lt!35805) (_1!1099 lt!35660))))))

(assert (= (and d!18551 c!12027) b!78422))

(assert (= (and d!18551 (not c!12027)) b!78423))

(assert (= (and d!18551 (not res!41073)) b!78424))

(declare-fun m!78543 () Bool)

(assert (=> d!18551 m!78543))

(declare-fun m!78545 () Bool)

(assert (=> b!78422 m!78545))

(assert (=> b!78422 m!77697))

(assert (=> b!78422 m!77697))

(declare-fun m!78547 () Bool)

(assert (=> b!78422 m!78547))

(assert (=> b!78424 m!77697))

(assert (=> b!78424 m!77697))

(assert (=> b!78424 m!78547))

(assert (=> d!18361 d!18551))

(declare-fun b!78425 () Bool)

(declare-fun e!51256 () Option!141)

(assert (=> b!78425 (= e!51256 (Some!140 (_2!1099 (h!2095 lt!35803))))))

(declare-fun b!78427 () Bool)

(declare-fun e!51257 () Option!141)

(assert (=> b!78427 (= e!51257 (getValueByKey!135 (t!5148 lt!35803) (_1!1099 lt!35660)))))

(declare-fun d!18553 () Bool)

(declare-fun c!12028 () Bool)

(assert (=> d!18553 (= c!12028 (and ((_ is Cons!1507) lt!35803) (= (_1!1099 (h!2095 lt!35803)) (_1!1099 lt!35660))))))

(assert (=> d!18553 (= (getValueByKey!135 lt!35803 (_1!1099 lt!35660)) e!51256)))

(declare-fun b!78428 () Bool)

(assert (=> b!78428 (= e!51257 None!139)))

(declare-fun b!78426 () Bool)

(assert (=> b!78426 (= e!51256 e!51257)))

(declare-fun c!12029 () Bool)

(assert (=> b!78426 (= c!12029 (and ((_ is Cons!1507) lt!35803) (not (= (_1!1099 (h!2095 lt!35803)) (_1!1099 lt!35660)))))))

(assert (= (and d!18553 c!12028) b!78425))

(assert (= (and d!18553 (not c!12028)) b!78426))

(assert (= (and b!78426 c!12029) b!78427))

(assert (= (and b!78426 (not c!12029)) b!78428))

(declare-fun m!78549 () Bool)

(assert (=> b!78427 m!78549))

(assert (=> d!18361 d!18553))

(declare-fun d!18555 () Bool)

(assert (=> d!18555 (= (getValueByKey!135 lt!35803 (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660)))))

(declare-fun lt!36298 () Unit!2242)

(assert (=> d!18555 (= lt!36298 (choose!462 lt!35803 (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(declare-fun e!51258 () Bool)

(assert (=> d!18555 e!51258))

(declare-fun res!41074 () Bool)

(assert (=> d!18555 (=> (not res!41074) (not e!51258))))

(assert (=> d!18555 (= res!41074 (isStrictlySorted!290 lt!35803))))

(assert (=> d!18555 (= (lemmaContainsTupThenGetReturnValue!55 lt!35803 (_1!1099 lt!35660) (_2!1099 lt!35660)) lt!36298)))

(declare-fun b!78429 () Bool)

(declare-fun res!41075 () Bool)

(assert (=> b!78429 (=> (not res!41075) (not e!51258))))

(assert (=> b!78429 (= res!41075 (containsKey!139 lt!35803 (_1!1099 lt!35660)))))

(declare-fun b!78430 () Bool)

(assert (=> b!78430 (= e!51258 (contains!740 lt!35803 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!18555 res!41074) b!78429))

(assert (= (and b!78429 res!41075) b!78430))

(assert (=> d!18555 m!77691))

(declare-fun m!78551 () Bool)

(assert (=> d!18555 m!78551))

(declare-fun m!78553 () Bool)

(assert (=> d!18555 m!78553))

(declare-fun m!78555 () Bool)

(assert (=> b!78429 m!78555))

(declare-fun m!78557 () Bool)

(assert (=> b!78430 m!78557))

(assert (=> d!18361 d!18555))

(declare-fun b!78431 () Bool)

(declare-fun e!51260 () List!1511)

(declare-fun call!7206 () List!1511)

(assert (=> b!78431 (= e!51260 call!7206)))

(declare-fun b!78432 () Bool)

(declare-fun res!41077 () Bool)

(declare-fun e!51262 () Bool)

(assert (=> b!78432 (=> (not res!41077) (not e!51262))))

(declare-fun lt!36299 () List!1511)

(assert (=> b!78432 (= res!41077 (containsKey!139 lt!36299 (_1!1099 lt!35660)))))

(declare-fun bm!7203 () Bool)

(declare-fun call!7207 () List!1511)

(declare-fun e!51263 () List!1511)

(declare-fun c!12031 () Bool)

(assert (=> bm!7203 (= call!7207 ($colon$colon!68 e!51263 (ite c!12031 (h!2095 (toList!732 lt!35657)) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660)))))))

(declare-fun c!12032 () Bool)

(assert (=> bm!7203 (= c!12032 c!12031)))

(declare-fun b!78433 () Bool)

(declare-fun c!12033 () Bool)

(declare-fun c!12030 () Bool)

(assert (=> b!78433 (= e!51263 (ite c!12030 (t!5148 (toList!732 lt!35657)) (ite c!12033 (Cons!1507 (h!2095 (toList!732 lt!35657)) (t!5148 (toList!732 lt!35657))) Nil!1508)))))

(declare-fun d!18557 () Bool)

(assert (=> d!18557 e!51262))

(declare-fun res!41076 () Bool)

(assert (=> d!18557 (=> (not res!41076) (not e!51262))))

(assert (=> d!18557 (= res!41076 (isStrictlySorted!290 lt!36299))))

(declare-fun e!51259 () List!1511)

(assert (=> d!18557 (= lt!36299 e!51259)))

(assert (=> d!18557 (= c!12031 (and ((_ is Cons!1507) (toList!732 lt!35657)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 lt!35660))))))

(assert (=> d!18557 (isStrictlySorted!290 (toList!732 lt!35657))))

(assert (=> d!18557 (= (insertStrictlySorted!58 (toList!732 lt!35657) (_1!1099 lt!35660) (_2!1099 lt!35660)) lt!36299)))

(declare-fun bm!7204 () Bool)

(declare-fun call!7208 () List!1511)

(assert (=> bm!7204 (= call!7208 call!7206)))

(declare-fun b!78434 () Bool)

(assert (=> b!78434 (= c!12033 (and ((_ is Cons!1507) (toList!732 lt!35657)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 lt!35660))))))

(declare-fun e!51261 () List!1511)

(assert (=> b!78434 (= e!51260 e!51261)))

(declare-fun b!78435 () Bool)

(assert (=> b!78435 (= e!51261 call!7208)))

(declare-fun b!78436 () Bool)

(assert (=> b!78436 (= e!51259 e!51260)))

(assert (=> b!78436 (= c!12030 (and ((_ is Cons!1507) (toList!732 lt!35657)) (= (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 lt!35660))))))

(declare-fun b!78437 () Bool)

(assert (=> b!78437 (= e!51261 call!7208)))

(declare-fun bm!7205 () Bool)

(assert (=> bm!7205 (= call!7206 call!7207)))

(declare-fun b!78438 () Bool)

(assert (=> b!78438 (= e!51263 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35657)) (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(declare-fun b!78439 () Bool)

(assert (=> b!78439 (= e!51259 call!7207)))

(declare-fun b!78440 () Bool)

(assert (=> b!78440 (= e!51262 (contains!740 lt!36299 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!18557 c!12031) b!78439))

(assert (= (and d!18557 (not c!12031)) b!78436))

(assert (= (and b!78436 c!12030) b!78431))

(assert (= (and b!78436 (not c!12030)) b!78434))

(assert (= (and b!78434 c!12033) b!78437))

(assert (= (and b!78434 (not c!12033)) b!78435))

(assert (= (or b!78437 b!78435) bm!7204))

(assert (= (or b!78431 bm!7204) bm!7205))

(assert (= (or b!78439 bm!7205) bm!7203))

(assert (= (and bm!7203 c!12032) b!78438))

(assert (= (and bm!7203 (not c!12032)) b!78433))

(assert (= (and d!18557 res!41076) b!78432))

(assert (= (and b!78432 res!41077) b!78440))

(declare-fun m!78559 () Bool)

(assert (=> b!78438 m!78559))

(declare-fun m!78561 () Bool)

(assert (=> bm!7203 m!78561))

(declare-fun m!78563 () Bool)

(assert (=> b!78432 m!78563))

(declare-fun m!78565 () Bool)

(assert (=> b!78440 m!78565))

(declare-fun m!78567 () Bool)

(assert (=> d!18557 m!78567))

(declare-fun m!78569 () Bool)

(assert (=> d!18557 m!78569))

(assert (=> d!18361 d!18557))

(declare-fun d!18559 () Bool)

(declare-fun e!51264 () Bool)

(assert (=> d!18559 e!51264))

(declare-fun res!41078 () Bool)

(assert (=> d!18559 (=> (not res!41078) (not e!51264))))

(declare-fun lt!36303 () ListLongMap!1433)

(assert (=> d!18559 (= res!41078 (contains!739 lt!36303 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36301 () List!1511)

(assert (=> d!18559 (= lt!36303 (ListLongMap!1434 lt!36301))))

(declare-fun lt!36300 () Unit!2242)

(declare-fun lt!36302 () Unit!2242)

(assert (=> d!18559 (= lt!36300 lt!36302)))

(assert (=> d!18559 (= (getValueByKey!135 lt!36301 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18559 (= lt!36302 (lemmaContainsTupThenGetReturnValue!55 lt!36301 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18559 (= lt!36301 (insertStrictlySorted!58 (toList!732 lt!35657) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18559 (= (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36303)))

(declare-fun b!78441 () Bool)

(declare-fun res!41079 () Bool)

(assert (=> b!78441 (=> (not res!41079) (not e!51264))))

(assert (=> b!78441 (= res!41079 (= (getValueByKey!135 (toList!732 lt!36303) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78442 () Bool)

(assert (=> b!78442 (= e!51264 (contains!740 (toList!732 lt!36303) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18559 res!41078) b!78441))

(assert (= (and b!78441 res!41079) b!78442))

(declare-fun m!78571 () Bool)

(assert (=> d!18559 m!78571))

(declare-fun m!78573 () Bool)

(assert (=> d!18559 m!78573))

(declare-fun m!78575 () Bool)

(assert (=> d!18559 m!78575))

(declare-fun m!78577 () Bool)

(assert (=> d!18559 m!78577))

(declare-fun m!78579 () Bool)

(assert (=> b!78441 m!78579))

(declare-fun m!78581 () Bool)

(assert (=> b!78442 m!78581))

(assert (=> d!18363 d!18559))

(declare-fun d!18561 () Bool)

(assert (=> d!18561 (= (+!103 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (+!103 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (=> d!18561 true))

(declare-fun _$28!131 () Unit!2242)

(assert (=> d!18561 (= (choose!460 lt!35657 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) _$28!131)))

(declare-fun bs!3312 () Bool)

(assert (= bs!3312 d!18561))

(assert (=> bs!3312 m!77701))

(assert (=> bs!3312 m!77701))

(assert (=> bs!3312 m!77703))

(assert (=> bs!3312 m!77707))

(assert (=> bs!3312 m!77707))

(assert (=> bs!3312 m!77709))

(assert (=> d!18363 d!18561))

(declare-fun d!18563 () Bool)

(declare-fun e!51265 () Bool)

(assert (=> d!18563 e!51265))

(declare-fun res!41080 () Bool)

(assert (=> d!18563 (=> (not res!41080) (not e!51265))))

(declare-fun lt!36307 () ListLongMap!1433)

(assert (=> d!18563 (= res!41080 (contains!739 lt!36307 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36305 () List!1511)

(assert (=> d!18563 (= lt!36307 (ListLongMap!1434 lt!36305))))

(declare-fun lt!36304 () Unit!2242)

(declare-fun lt!36306 () Unit!2242)

(assert (=> d!18563 (= lt!36304 lt!36306)))

(assert (=> d!18563 (= (getValueByKey!135 lt!36305 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18563 (= lt!36306 (lemmaContainsTupThenGetReturnValue!55 lt!36305 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18563 (= lt!36305 (insertStrictlySorted!58 (toList!732 lt!35657) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18563 (= (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36307)))

(declare-fun b!78443 () Bool)

(declare-fun res!41081 () Bool)

(assert (=> b!78443 (=> (not res!41081) (not e!51265))))

(assert (=> b!78443 (= res!41081 (= (getValueByKey!135 (toList!732 lt!36307) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!78444 () Bool)

(assert (=> b!78444 (= e!51265 (contains!740 (toList!732 lt!36307) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!18563 res!41080) b!78443))

(assert (= (and b!78443 res!41081) b!78444))

(declare-fun m!78583 () Bool)

(assert (=> d!18563 m!78583))

(declare-fun m!78585 () Bool)

(assert (=> d!18563 m!78585))

(declare-fun m!78587 () Bool)

(assert (=> d!18563 m!78587))

(declare-fun m!78589 () Bool)

(assert (=> d!18563 m!78589))

(declare-fun m!78591 () Bool)

(assert (=> b!78443 m!78591))

(declare-fun m!78593 () Bool)

(assert (=> b!78444 m!78593))

(assert (=> d!18363 d!18563))

(declare-fun d!18565 () Bool)

(declare-fun e!51266 () Bool)

(assert (=> d!18565 e!51266))

(declare-fun res!41082 () Bool)

(assert (=> d!18565 (=> (not res!41082) (not e!51266))))

(declare-fun lt!36311 () ListLongMap!1433)

(assert (=> d!18565 (= res!41082 (contains!739 lt!36311 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36309 () List!1511)

(assert (=> d!18565 (= lt!36311 (ListLongMap!1434 lt!36309))))

(declare-fun lt!36308 () Unit!2242)

(declare-fun lt!36310 () Unit!2242)

(assert (=> d!18565 (= lt!36308 lt!36310)))

(assert (=> d!18565 (= (getValueByKey!135 lt!36309 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18565 (= lt!36310 (lemmaContainsTupThenGetReturnValue!55 lt!36309 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18565 (= lt!36309 (insertStrictlySorted!58 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18565 (= (+!103 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36311)))

(declare-fun b!78445 () Bool)

(declare-fun res!41083 () Bool)

(assert (=> b!78445 (=> (not res!41083) (not e!51266))))

(assert (=> b!78445 (= res!41083 (= (getValueByKey!135 (toList!732 lt!36311) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78446 () Bool)

(assert (=> b!78446 (= e!51266 (contains!740 (toList!732 lt!36311) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18565 res!41082) b!78445))

(assert (= (and b!78445 res!41083) b!78446))

(declare-fun m!78595 () Bool)

(assert (=> d!18565 m!78595))

(declare-fun m!78597 () Bool)

(assert (=> d!18565 m!78597))

(declare-fun m!78599 () Bool)

(assert (=> d!18565 m!78599))

(declare-fun m!78601 () Bool)

(assert (=> d!18565 m!78601))

(declare-fun m!78603 () Bool)

(assert (=> b!78445 m!78603))

(declare-fun m!78605 () Bool)

(assert (=> b!78446 m!78605))

(assert (=> d!18363 d!18565))

(declare-fun d!18567 () Bool)

(declare-fun e!51267 () Bool)

(assert (=> d!18567 e!51267))

(declare-fun res!41084 () Bool)

(assert (=> d!18567 (=> (not res!41084) (not e!51267))))

(declare-fun lt!36315 () ListLongMap!1433)

(assert (=> d!18567 (= res!41084 (contains!739 lt!36315 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36313 () List!1511)

(assert (=> d!18567 (= lt!36315 (ListLongMap!1434 lt!36313))))

(declare-fun lt!36312 () Unit!2242)

(declare-fun lt!36314 () Unit!2242)

(assert (=> d!18567 (= lt!36312 lt!36314)))

(assert (=> d!18567 (= (getValueByKey!135 lt!36313 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18567 (= lt!36314 (lemmaContainsTupThenGetReturnValue!55 lt!36313 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18567 (= lt!36313 (insertStrictlySorted!58 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18567 (= (+!103 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36315)))

(declare-fun b!78447 () Bool)

(declare-fun res!41085 () Bool)

(assert (=> b!78447 (=> (not res!41085) (not e!51267))))

(assert (=> b!78447 (= res!41085 (= (getValueByKey!135 (toList!732 lt!36315) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!78448 () Bool)

(assert (=> b!78448 (= e!51267 (contains!740 (toList!732 lt!36315) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!18567 res!41084) b!78447))

(assert (= (and b!78447 res!41085) b!78448))

(declare-fun m!78607 () Bool)

(assert (=> d!18567 m!78607))

(declare-fun m!78609 () Bool)

(assert (=> d!18567 m!78609))

(declare-fun m!78611 () Bool)

(assert (=> d!18567 m!78611))

(declare-fun m!78613 () Bool)

(assert (=> d!18567 m!78613))

(declare-fun m!78615 () Bool)

(assert (=> b!78447 m!78615))

(declare-fun m!78617 () Bool)

(assert (=> b!78448 m!78617))

(assert (=> d!18363 d!18567))

(declare-fun d!18569 () Bool)

(declare-fun e!51270 () Bool)

(assert (=> d!18569 e!51270))

(declare-fun c!12036 () Bool)

(assert (=> d!18569 (= c!12036 (and (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!18569 true))

(declare-fun _$29!99 () Unit!2242)

(assert (=> d!18569 (= (choose!461 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))) _$29!99)))

(declare-fun b!78453 () Bool)

(assert (=> b!78453 (= e!51270 (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!78454 () Bool)

(assert (=> b!78454 (= e!51270 (ite (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!18569 c!12036) b!78453))

(assert (= (and d!18569 (not c!12036)) b!78454))

(assert (=> b!78453 m!77463))

(assert (=> b!78453 m!77501))

(assert (=> d!18389 d!18569))

(assert (=> d!18389 d!18367))

(assert (=> bm!7148 d!18497))

(declare-fun d!18571 () Bool)

(declare-fun lt!36318 () Bool)

(declare-fun content!84 (List!1510) (InoxSet (_ BitVec 64)))

(assert (=> d!18571 (= lt!36318 (select (content!84 Nil!1507) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun e!51276 () Bool)

(assert (=> d!18571 (= lt!36318 e!51276)))

(declare-fun res!41090 () Bool)

(assert (=> d!18571 (=> (not res!41090) (not e!51276))))

(assert (=> d!18571 (= res!41090 ((_ is Cons!1506) Nil!1507))))

(assert (=> d!18571 (= (contains!741 Nil!1507 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) lt!36318)))

(declare-fun b!78459 () Bool)

(declare-fun e!51275 () Bool)

(assert (=> b!78459 (= e!51276 e!51275)))

(declare-fun res!41091 () Bool)

(assert (=> b!78459 (=> res!41091 e!51275)))

(assert (=> b!78459 (= res!41091 (= (h!2094 Nil!1507) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!78460 () Bool)

(assert (=> b!78460 (= e!51275 (contains!741 (t!5147 Nil!1507) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!18571 res!41090) b!78459))

(assert (= (and b!78459 (not res!41091)) b!78460))

(declare-fun m!78619 () Bool)

(assert (=> d!18571 m!78619))

(assert (=> d!18571 m!77463))

(declare-fun m!78621 () Bool)

(assert (=> d!18571 m!78621))

(assert (=> b!78460 m!77463))

(declare-fun m!78623 () Bool)

(assert (=> b!78460 m!78623))

(assert (=> b!77920 d!18571))

(declare-fun bm!7208 () Bool)

(declare-fun call!7211 () (_ BitVec 32))

(assert (=> bm!7208 (= call!7211 (arrayCountValidKeys!0 (_keys!3930 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun d!18573 () Bool)

(declare-fun lt!36321 () (_ BitVec 32))

(assert (=> d!18573 (and (bvsge lt!36321 #b00000000000000000000000000000000) (bvsle lt!36321 (bvsub (size!2124 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!51282 () (_ BitVec 32))

(assert (=> d!18573 (= lt!36321 e!51282)))

(declare-fun c!12042 () Bool)

(assert (=> d!18573 (= c!12042 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!18573 (and (bvsle #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2124 (_keys!3930 newMap!16)) (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!18573 (= (arrayCountValidKeys!0 (_keys!3930 newMap!16) #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) lt!36321)))

(declare-fun b!78469 () Bool)

(declare-fun e!51281 () (_ BitVec 32))

(assert (=> b!78469 (= e!51281 (bvadd #b00000000000000000000000000000001 call!7211))))

(declare-fun b!78470 () Bool)

(assert (=> b!78470 (= e!51282 #b00000000000000000000000000000000)))

(declare-fun b!78471 () Bool)

(assert (=> b!78471 (= e!51282 e!51281)))

(declare-fun c!12041 () Bool)

(assert (=> b!78471 (= c!12041 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78472 () Bool)

(assert (=> b!78472 (= e!51281 call!7211)))

(assert (= (and d!18573 c!12042) b!78470))

(assert (= (and d!18573 (not c!12042)) b!78471))

(assert (= (and b!78471 c!12041) b!78469))

(assert (= (and b!78471 (not c!12041)) b!78472))

(assert (= (or b!78469 b!78472) bm!7208))

(declare-fun m!78625 () Bool)

(assert (=> bm!7208 m!78625))

(assert (=> b!78471 m!77965))

(assert (=> b!78471 m!77965))

(assert (=> b!78471 m!77975))

(assert (=> b!77778 d!18573))

(declare-fun d!18575 () Bool)

(declare-fun e!51283 () Bool)

(assert (=> d!18575 e!51283))

(declare-fun res!41092 () Bool)

(assert (=> d!18575 (=> (not res!41092) (not e!51283))))

(declare-fun lt!36325 () ListLongMap!1433)

(assert (=> d!18575 (= res!41092 (contains!739 lt!36325 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun lt!36323 () List!1511)

(assert (=> d!18575 (= lt!36325 (ListLongMap!1434 lt!36323))))

(declare-fun lt!36322 () Unit!2242)

(declare-fun lt!36324 () Unit!2242)

(assert (=> d!18575 (= lt!36322 lt!36324)))

(assert (=> d!18575 (= (getValueByKey!135 lt!36323 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (Some!140 (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18575 (= lt!36324 (lemmaContainsTupThenGetReturnValue!55 lt!36323 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18575 (= lt!36323 (insertStrictlySorted!58 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076))) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18575 (= (+!103 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076)) (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36325)))

(declare-fun b!78473 () Bool)

(declare-fun res!41093 () Bool)

(assert (=> b!78473 (=> (not res!41093) (not e!51283))))

(assert (=> b!78473 (= res!41093 (= (getValueByKey!135 (toList!732 lt!36325) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (Some!140 (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun b!78474 () Bool)

(assert (=> b!78474 (= e!51283 (contains!740 (toList!732 lt!36325) (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (= (and d!18575 res!41092) b!78473))

(assert (= (and b!78473 res!41093) b!78474))

(declare-fun m!78627 () Bool)

(assert (=> d!18575 m!78627))

(declare-fun m!78629 () Bool)

(assert (=> d!18575 m!78629))

(declare-fun m!78631 () Bool)

(assert (=> d!18575 m!78631))

(declare-fun m!78633 () Bool)

(assert (=> d!18575 m!78633))

(declare-fun m!78635 () Bool)

(assert (=> b!78473 m!78635))

(declare-fun m!78637 () Bool)

(assert (=> b!78474 m!78637))

(assert (=> bm!7075 d!18575))

(declare-fun d!18577 () Bool)

(declare-fun e!51285 () Bool)

(assert (=> d!18577 e!51285))

(declare-fun res!41094 () Bool)

(assert (=> d!18577 (=> res!41094 e!51285)))

(declare-fun lt!36328 () Bool)

(assert (=> d!18577 (= res!41094 (not lt!36328))))

(declare-fun lt!36329 () Bool)

(assert (=> d!18577 (= lt!36328 lt!36329)))

(declare-fun lt!36326 () Unit!2242)

(declare-fun e!51284 () Unit!2242)

(assert (=> d!18577 (= lt!36326 e!51284)))

(declare-fun c!12043 () Bool)

(assert (=> d!18577 (= c!12043 lt!36329)))

(assert (=> d!18577 (= lt!36329 (containsKey!139 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))

(assert (=> d!18577 (= (contains!739 call!7146 (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))) lt!36328)))

(declare-fun b!78475 () Bool)

(declare-fun lt!36327 () Unit!2242)

(assert (=> b!78475 (= e!51284 lt!36327)))

(assert (=> b!78475 (= lt!36327 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))

(assert (=> b!78475 (isDefined!89 (getValueByKey!135 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))

(declare-fun b!78476 () Bool)

(declare-fun Unit!2269 () Unit!2242)

(assert (=> b!78476 (= e!51284 Unit!2269)))

(declare-fun b!78477 () Bool)

(assert (=> b!78477 (= e!51285 (isDefined!89 (getValueByKey!135 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))))))))

(assert (= (and d!18577 c!12043) b!78475))

(assert (= (and d!18577 (not c!12043)) b!78476))

(assert (= (and d!18577 (not res!41094)) b!78477))

(declare-fun m!78639 () Bool)

(assert (=> d!18577 m!78639))

(declare-fun m!78641 () Bool)

(assert (=> b!78475 m!78641))

(declare-fun m!78643 () Bool)

(assert (=> b!78475 m!78643))

(assert (=> b!78475 m!78643))

(declare-fun m!78645 () Bool)

(assert (=> b!78475 m!78645))

(assert (=> b!78477 m!78643))

(assert (=> b!78477 m!78643))

(assert (=> b!78477 m!78645))

(assert (=> bm!7145 d!18577))

(declare-fun d!18579 () Bool)

(assert (=> d!18579 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!36000 (zeroValue!2169 newMap!16) lt!35658 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36332 () Unit!2242)

(declare-fun choose!470 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 V!2993 Int) Unit!2242)

(assert (=> d!18579 (= lt!36332 (choose!470 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) lt!36000 (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) lt!35658 (defaultEntry!2271 newMap!16)))))

(assert (=> d!18579 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18579 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) lt!36000 (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) lt!35658 (defaultEntry!2271 newMap!16)) lt!36332)))

(declare-fun bs!3313 () Bool)

(assert (= bs!3313 d!18579))

(assert (=> bs!3313 m!77787))

(declare-fun m!78647 () Bool)

(assert (=> bs!3313 m!78647))

(assert (=> bs!3313 m!77977))

(declare-fun m!78649 () Bool)

(assert (=> bs!3313 m!78649))

(declare-fun m!78651 () Bool)

(assert (=> bs!3313 m!78651))

(assert (=> bs!3313 m!77787))

(assert (=> b!78017 d!18579))

(declare-fun d!18581 () Bool)

(declare-fun isEmpty!332 (List!1511) Bool)

(assert (=> d!18581 (= (isEmpty!330 lt!35837) (isEmpty!332 (toList!732 lt!35837)))))

(declare-fun bs!3314 () Bool)

(assert (= bs!3314 d!18581))

(declare-fun m!78653 () Bool)

(assert (=> bs!3314 m!78653))

(assert (=> b!77831 d!18581))

(assert (=> b!77924 d!18419))

(declare-fun d!18583 () Bool)

(declare-fun e!51287 () Bool)

(assert (=> d!18583 e!51287))

(declare-fun res!41095 () Bool)

(assert (=> d!18583 (=> res!41095 e!51287)))

(declare-fun lt!36335 () Bool)

(assert (=> d!18583 (= res!41095 (not lt!36335))))

(declare-fun lt!36336 () Bool)

(assert (=> d!18583 (= lt!36335 lt!36336)))

(declare-fun lt!36333 () Unit!2242)

(declare-fun e!51286 () Unit!2242)

(assert (=> d!18583 (= lt!36333 e!51286)))

(declare-fun c!12044 () Bool)

(assert (=> d!18583 (= c!12044 lt!36336)))

(assert (=> d!18583 (= lt!36336 (containsKey!139 (toList!732 lt!35797) (_1!1099 lt!35660)))))

(assert (=> d!18583 (= (contains!739 lt!35797 (_1!1099 lt!35660)) lt!36335)))

(declare-fun b!78478 () Bool)

(declare-fun lt!36334 () Unit!2242)

(assert (=> b!78478 (= e!51286 lt!36334)))

(assert (=> b!78478 (= lt!36334 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35797) (_1!1099 lt!35660)))))

(assert (=> b!78478 (isDefined!89 (getValueByKey!135 (toList!732 lt!35797) (_1!1099 lt!35660)))))

(declare-fun b!78479 () Bool)

(declare-fun Unit!2270 () Unit!2242)

(assert (=> b!78479 (= e!51286 Unit!2270)))

(declare-fun b!78480 () Bool)

(assert (=> b!78480 (= e!51287 (isDefined!89 (getValueByKey!135 (toList!732 lt!35797) (_1!1099 lt!35660))))))

(assert (= (and d!18583 c!12044) b!78478))

(assert (= (and d!18583 (not c!12044)) b!78479))

(assert (= (and d!18583 (not res!41095)) b!78480))

(declare-fun m!78655 () Bool)

(assert (=> d!18583 m!78655))

(declare-fun m!78657 () Bool)

(assert (=> b!78478 m!78657))

(assert (=> b!78478 m!77673))

(assert (=> b!78478 m!77673))

(declare-fun m!78659 () Bool)

(assert (=> b!78478 m!78659))

(assert (=> b!78480 m!77673))

(assert (=> b!78480 m!77673))

(assert (=> b!78480 m!78659))

(assert (=> d!18357 d!18583))

(declare-fun b!78481 () Bool)

(declare-fun e!51288 () Option!141)

(assert (=> b!78481 (= e!51288 (Some!140 (_2!1099 (h!2095 lt!35795))))))

(declare-fun b!78483 () Bool)

(declare-fun e!51289 () Option!141)

(assert (=> b!78483 (= e!51289 (getValueByKey!135 (t!5148 lt!35795) (_1!1099 lt!35660)))))

(declare-fun d!18585 () Bool)

(declare-fun c!12045 () Bool)

(assert (=> d!18585 (= c!12045 (and ((_ is Cons!1507) lt!35795) (= (_1!1099 (h!2095 lt!35795)) (_1!1099 lt!35660))))))

(assert (=> d!18585 (= (getValueByKey!135 lt!35795 (_1!1099 lt!35660)) e!51288)))

(declare-fun b!78484 () Bool)

(assert (=> b!78484 (= e!51289 None!139)))

(declare-fun b!78482 () Bool)

(assert (=> b!78482 (= e!51288 e!51289)))

(declare-fun c!12046 () Bool)

(assert (=> b!78482 (= c!12046 (and ((_ is Cons!1507) lt!35795) (not (= (_1!1099 (h!2095 lt!35795)) (_1!1099 lt!35660)))))))

(assert (= (and d!18585 c!12045) b!78481))

(assert (= (and d!18585 (not c!12045)) b!78482))

(assert (= (and b!78482 c!12046) b!78483))

(assert (= (and b!78482 (not c!12046)) b!78484))

(declare-fun m!78661 () Bool)

(assert (=> b!78483 m!78661))

(assert (=> d!18357 d!18585))

(declare-fun d!18587 () Bool)

(assert (=> d!18587 (= (getValueByKey!135 lt!35795 (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660)))))

(declare-fun lt!36337 () Unit!2242)

(assert (=> d!18587 (= lt!36337 (choose!462 lt!35795 (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(declare-fun e!51290 () Bool)

(assert (=> d!18587 e!51290))

(declare-fun res!41096 () Bool)

(assert (=> d!18587 (=> (not res!41096) (not e!51290))))

(assert (=> d!18587 (= res!41096 (isStrictlySorted!290 lt!35795))))

(assert (=> d!18587 (= (lemmaContainsTupThenGetReturnValue!55 lt!35795 (_1!1099 lt!35660) (_2!1099 lt!35660)) lt!36337)))

(declare-fun b!78485 () Bool)

(declare-fun res!41097 () Bool)

(assert (=> b!78485 (=> (not res!41097) (not e!51290))))

(assert (=> b!78485 (= res!41097 (containsKey!139 lt!35795 (_1!1099 lt!35660)))))

(declare-fun b!78486 () Bool)

(assert (=> b!78486 (= e!51290 (contains!740 lt!35795 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!18587 res!41096) b!78485))

(assert (= (and b!78485 res!41097) b!78486))

(assert (=> d!18587 m!77667))

(declare-fun m!78663 () Bool)

(assert (=> d!18587 m!78663))

(declare-fun m!78665 () Bool)

(assert (=> d!18587 m!78665))

(declare-fun m!78667 () Bool)

(assert (=> b!78485 m!78667))

(declare-fun m!78669 () Bool)

(assert (=> b!78486 m!78669))

(assert (=> d!18357 d!18587))

(declare-fun b!78487 () Bool)

(declare-fun e!51292 () List!1511)

(declare-fun call!7212 () List!1511)

(assert (=> b!78487 (= e!51292 call!7212)))

(declare-fun b!78488 () Bool)

(declare-fun res!41099 () Bool)

(declare-fun e!51294 () Bool)

(assert (=> b!78488 (=> (not res!41099) (not e!51294))))

(declare-fun lt!36338 () List!1511)

(assert (=> b!78488 (= res!41099 (containsKey!139 lt!36338 (_1!1099 lt!35660)))))

(declare-fun call!7213 () List!1511)

(declare-fun bm!7209 () Bool)

(declare-fun c!12048 () Bool)

(declare-fun e!51295 () List!1511)

(assert (=> bm!7209 (= call!7213 ($colon$colon!68 e!51295 (ite c!12048 (h!2095 (toList!732 (+!103 lt!35662 lt!35659))) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660)))))))

(declare-fun c!12049 () Bool)

(assert (=> bm!7209 (= c!12049 c!12048)))

(declare-fun c!12050 () Bool)

(declare-fun b!78489 () Bool)

(declare-fun c!12047 () Bool)

(assert (=> b!78489 (= e!51295 (ite c!12047 (t!5148 (toList!732 (+!103 lt!35662 lt!35659))) (ite c!12050 (Cons!1507 (h!2095 (toList!732 (+!103 lt!35662 lt!35659))) (t!5148 (toList!732 (+!103 lt!35662 lt!35659)))) Nil!1508)))))

(declare-fun d!18589 () Bool)

(assert (=> d!18589 e!51294))

(declare-fun res!41098 () Bool)

(assert (=> d!18589 (=> (not res!41098) (not e!51294))))

(assert (=> d!18589 (= res!41098 (isStrictlySorted!290 lt!36338))))

(declare-fun e!51291 () List!1511)

(assert (=> d!18589 (= lt!36338 e!51291)))

(assert (=> d!18589 (= c!12048 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35662 lt!35659))) (bvslt (_1!1099 (h!2095 (toList!732 (+!103 lt!35662 lt!35659)))) (_1!1099 lt!35660))))))

(assert (=> d!18589 (isStrictlySorted!290 (toList!732 (+!103 lt!35662 lt!35659)))))

(assert (=> d!18589 (= (insertStrictlySorted!58 (toList!732 (+!103 lt!35662 lt!35659)) (_1!1099 lt!35660) (_2!1099 lt!35660)) lt!36338)))

(declare-fun bm!7210 () Bool)

(declare-fun call!7214 () List!1511)

(assert (=> bm!7210 (= call!7214 call!7212)))

(declare-fun b!78490 () Bool)

(assert (=> b!78490 (= c!12050 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35662 lt!35659))) (bvsgt (_1!1099 (h!2095 (toList!732 (+!103 lt!35662 lt!35659)))) (_1!1099 lt!35660))))))

(declare-fun e!51293 () List!1511)

(assert (=> b!78490 (= e!51292 e!51293)))

(declare-fun b!78491 () Bool)

(assert (=> b!78491 (= e!51293 call!7214)))

(declare-fun b!78492 () Bool)

(assert (=> b!78492 (= e!51291 e!51292)))

(assert (=> b!78492 (= c!12047 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35662 lt!35659))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35662 lt!35659)))) (_1!1099 lt!35660))))))

(declare-fun b!78493 () Bool)

(assert (=> b!78493 (= e!51293 call!7214)))

(declare-fun bm!7211 () Bool)

(assert (=> bm!7211 (= call!7212 call!7213)))

(declare-fun b!78494 () Bool)

(assert (=> b!78494 (= e!51295 (insertStrictlySorted!58 (t!5148 (toList!732 (+!103 lt!35662 lt!35659))) (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(declare-fun b!78495 () Bool)

(assert (=> b!78495 (= e!51291 call!7213)))

(declare-fun b!78496 () Bool)

(assert (=> b!78496 (= e!51294 (contains!740 lt!36338 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!18589 c!12048) b!78495))

(assert (= (and d!18589 (not c!12048)) b!78492))

(assert (= (and b!78492 c!12047) b!78487))

(assert (= (and b!78492 (not c!12047)) b!78490))

(assert (= (and b!78490 c!12050) b!78493))

(assert (= (and b!78490 (not c!12050)) b!78491))

(assert (= (or b!78493 b!78491) bm!7210))

(assert (= (or b!78487 bm!7210) bm!7211))

(assert (= (or b!78495 bm!7211) bm!7209))

(assert (= (and bm!7209 c!12049) b!78494))

(assert (= (and bm!7209 (not c!12049)) b!78489))

(assert (= (and d!18589 res!41098) b!78488))

(assert (= (and b!78488 res!41099) b!78496))

(declare-fun m!78671 () Bool)

(assert (=> b!78494 m!78671))

(declare-fun m!78673 () Bool)

(assert (=> bm!7209 m!78673))

(declare-fun m!78675 () Bool)

(assert (=> b!78488 m!78675))

(declare-fun m!78677 () Bool)

(assert (=> b!78496 m!78677))

(declare-fun m!78679 () Bool)

(assert (=> d!18589 m!78679))

(declare-fun m!78681 () Bool)

(assert (=> d!18589 m!78681))

(assert (=> d!18357 d!18589))

(declare-fun bm!7212 () Bool)

(declare-fun call!7215 () Bool)

(declare-fun c!12051 () Bool)

(assert (=> bm!7212 (= call!7215 (arrayNoDuplicates!0 (_keys!3930 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12051 (Cons!1506 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) Nil!1507) Nil!1507)))))

(declare-fun b!78497 () Bool)

(declare-fun e!51299 () Bool)

(assert (=> b!78497 (= e!51299 (contains!741 Nil!1507 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!18591 () Bool)

(declare-fun res!41102 () Bool)

(declare-fun e!51298 () Bool)

(assert (=> d!18591 (=> res!41102 e!51298)))

(assert (=> d!18591 (= res!41102 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!18591 (= (arrayNoDuplicates!0 (_keys!3930 newMap!16) #b00000000000000000000000000000000 Nil!1507) e!51298)))

(declare-fun b!78498 () Bool)

(declare-fun e!51297 () Bool)

(declare-fun e!51296 () Bool)

(assert (=> b!78498 (= e!51297 e!51296)))

(assert (=> b!78498 (= c!12051 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78499 () Bool)

(assert (=> b!78499 (= e!51296 call!7215)))

(declare-fun b!78500 () Bool)

(assert (=> b!78500 (= e!51296 call!7215)))

(declare-fun b!78501 () Bool)

(assert (=> b!78501 (= e!51298 e!51297)))

(declare-fun res!41101 () Bool)

(assert (=> b!78501 (=> (not res!41101) (not e!51297))))

(assert (=> b!78501 (= res!41101 (not e!51299))))

(declare-fun res!41100 () Bool)

(assert (=> b!78501 (=> (not res!41100) (not e!51299))))

(assert (=> b!78501 (= res!41100 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!18591 (not res!41102)) b!78501))

(assert (= (and b!78501 res!41100) b!78497))

(assert (= (and b!78501 res!41101) b!78498))

(assert (= (and b!78498 c!12051) b!78500))

(assert (= (and b!78498 (not c!12051)) b!78499))

(assert (= (or b!78500 b!78499) bm!7212))

(assert (=> bm!7212 m!77965))

(declare-fun m!78683 () Bool)

(assert (=> bm!7212 m!78683))

(assert (=> b!78497 m!77965))

(assert (=> b!78497 m!77965))

(declare-fun m!78685 () Bool)

(assert (=> b!78497 m!78685))

(assert (=> b!78498 m!77965))

(assert (=> b!78498 m!77965))

(assert (=> b!78498 m!77975))

(assert (=> b!78501 m!77965))

(assert (=> b!78501 m!77965))

(assert (=> b!78501 m!77975))

(assert (=> b!77780 d!18591))

(assert (=> b!77824 d!18427))

(declare-fun b!78502 () Bool)

(declare-fun e!51300 () Option!141)

(assert (=> b!78502 (= e!51300 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35805)))))))

(declare-fun b!78504 () Bool)

(declare-fun e!51301 () Option!141)

(assert (=> b!78504 (= e!51301 (getValueByKey!135 (t!5148 (toList!732 lt!35805)) (_1!1099 lt!35660)))))

(declare-fun d!18593 () Bool)

(declare-fun c!12052 () Bool)

(assert (=> d!18593 (= c!12052 (and ((_ is Cons!1507) (toList!732 lt!35805)) (= (_1!1099 (h!2095 (toList!732 lt!35805))) (_1!1099 lt!35660))))))

(assert (=> d!18593 (= (getValueByKey!135 (toList!732 lt!35805) (_1!1099 lt!35660)) e!51300)))

(declare-fun b!78505 () Bool)

(assert (=> b!78505 (= e!51301 None!139)))

(declare-fun b!78503 () Bool)

(assert (=> b!78503 (= e!51300 e!51301)))

(declare-fun c!12053 () Bool)

(assert (=> b!78503 (= c!12053 (and ((_ is Cons!1507) (toList!732 lt!35805)) (not (= (_1!1099 (h!2095 (toList!732 lt!35805))) (_1!1099 lt!35660)))))))

(assert (= (and d!18593 c!12052) b!78502))

(assert (= (and d!18593 (not c!12052)) b!78503))

(assert (= (and b!78503 c!12053) b!78504))

(assert (= (and b!78503 (not c!12053)) b!78505))

(declare-fun m!78687 () Bool)

(assert (=> b!78504 m!78687))

(assert (=> b!77791 d!18593))

(declare-fun d!18595 () Bool)

(declare-fun e!51304 () Bool)

(assert (=> d!18595 e!51304))

(declare-fun res!41107 () Bool)

(assert (=> d!18595 (=> (not res!41107) (not e!51304))))

(declare-fun lt!36344 () SeekEntryResult!243)

(assert (=> d!18595 (= res!41107 ((_ is Found!243) lt!36344))))

(assert (=> d!18595 (= lt!36344 (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(declare-fun lt!36343 () Unit!2242)

(declare-fun choose!471 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) Int) Unit!2242)

(assert (=> d!18595 (= lt!36343 (choose!471 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)))))

(assert (=> d!18595 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18595 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)) lt!36343)))

(declare-fun b!78510 () Bool)

(declare-fun res!41108 () Bool)

(assert (=> b!78510 (=> (not res!41108) (not e!51304))))

(assert (=> b!78510 (= res!41108 (inRange!0 (index!3107 lt!36344) (mask!6266 newMap!16)))))

(declare-fun b!78511 () Bool)

(assert (=> b!78511 (= e!51304 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36344)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> b!78511 (and (bvsge (index!3107 lt!36344) #b00000000000000000000000000000000) (bvslt (index!3107 lt!36344) (size!2124 (_keys!3930 newMap!16))))))

(assert (= (and d!18595 res!41107) b!78510))

(assert (= (and b!78510 res!41108) b!78511))

(assert (=> d!18595 m!77463))

(assert (=> d!18595 m!77861))

(assert (=> d!18595 m!77463))

(declare-fun m!78689 () Bool)

(assert (=> d!18595 m!78689))

(assert (=> d!18595 m!77977))

(declare-fun m!78691 () Bool)

(assert (=> b!78510 m!78691))

(declare-fun m!78693 () Bool)

(assert (=> b!78511 m!78693))

(assert (=> bm!7132 d!18595))

(assert (=> b!77888 d!18427))

(declare-fun lt!36359 () ListLongMap!1433)

(declare-fun e!51315 () Bool)

(declare-fun b!78512 () Bool)

(assert (=> b!78512 (= e!51315 (= (apply!79 lt!36359 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78512 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002))))))

(assert (=> b!78512 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78513 () Bool)

(declare-fun c!12055 () Bool)

(assert (=> b!78513 (= c!12055 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!51314 () ListLongMap!1433)

(declare-fun e!51307 () ListLongMap!1433)

(assert (=> b!78513 (= e!51314 e!51307)))

(declare-fun b!78514 () Bool)

(declare-fun e!51313 () Bool)

(assert (=> b!78514 (= e!51313 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78515 () Bool)

(declare-fun e!51312 () Unit!2242)

(declare-fun lt!36362 () Unit!2242)

(assert (=> b!78515 (= e!51312 lt!36362)))

(declare-fun lt!36349 () ListLongMap!1433)

(assert (=> b!78515 (= lt!36349 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36345 () (_ BitVec 64))

(assert (=> b!78515 (= lt!36345 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36356 () (_ BitVec 64))

(assert (=> b!78515 (= lt!36356 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36350 () Unit!2242)

(assert (=> b!78515 (= lt!36350 (addStillContains!55 lt!36349 lt!36345 (zeroValue!2169 newMap!16) lt!36356))))

(assert (=> b!78515 (contains!739 (+!103 lt!36349 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16))) lt!36356)))

(declare-fun lt!36347 () Unit!2242)

(assert (=> b!78515 (= lt!36347 lt!36350)))

(declare-fun lt!36348 () ListLongMap!1433)

(assert (=> b!78515 (= lt!36348 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36357 () (_ BitVec 64))

(assert (=> b!78515 (= lt!36357 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36354 () (_ BitVec 64))

(assert (=> b!78515 (= lt!36354 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36355 () Unit!2242)

(assert (=> b!78515 (= lt!36355 (addApplyDifferent!55 lt!36348 lt!36357 (minValue!2169 newMap!16) lt!36354))))

(assert (=> b!78515 (= (apply!79 (+!103 lt!36348 (tuple2!2177 lt!36357 (minValue!2169 newMap!16))) lt!36354) (apply!79 lt!36348 lt!36354))))

(declare-fun lt!36346 () Unit!2242)

(assert (=> b!78515 (= lt!36346 lt!36355)))

(declare-fun lt!36353 () ListLongMap!1433)

(assert (=> b!78515 (= lt!36353 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36366 () (_ BitVec 64))

(assert (=> b!78515 (= lt!36366 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36364 () (_ BitVec 64))

(assert (=> b!78515 (= lt!36364 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36365 () Unit!2242)

(assert (=> b!78515 (= lt!36365 (addApplyDifferent!55 lt!36353 lt!36366 (zeroValue!2169 newMap!16) lt!36364))))

(assert (=> b!78515 (= (apply!79 (+!103 lt!36353 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16))) lt!36364) (apply!79 lt!36353 lt!36364))))

(declare-fun lt!36358 () Unit!2242)

(assert (=> b!78515 (= lt!36358 lt!36365)))

(declare-fun lt!36360 () ListLongMap!1433)

(assert (=> b!78515 (= lt!36360 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36361 () (_ BitVec 64))

(assert (=> b!78515 (= lt!36361 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36363 () (_ BitVec 64))

(assert (=> b!78515 (= lt!36363 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78515 (= lt!36362 (addApplyDifferent!55 lt!36360 lt!36361 (minValue!2169 newMap!16) lt!36363))))

(assert (=> b!78515 (= (apply!79 (+!103 lt!36360 (tuple2!2177 lt!36361 (minValue!2169 newMap!16))) lt!36363) (apply!79 lt!36360 lt!36363))))

(declare-fun b!78517 () Bool)

(declare-fun e!51306 () Bool)

(declare-fun e!51308 () Bool)

(assert (=> b!78517 (= e!51306 e!51308)))

(declare-fun res!41111 () Bool)

(declare-fun call!7221 () Bool)

(assert (=> b!78517 (= res!41111 call!7221)))

(assert (=> b!78517 (=> (not res!41111) (not e!51308))))

(declare-fun bm!7213 () Bool)

(declare-fun call!7216 () ListLongMap!1433)

(declare-fun call!7220 () ListLongMap!1433)

(assert (=> bm!7213 (= call!7216 call!7220)))

(declare-fun b!78518 () Bool)

(assert (=> b!78518 (= e!51306 (not call!7221))))

(declare-fun b!78519 () Bool)

(declare-fun e!51311 () ListLongMap!1433)

(assert (=> b!78519 (= e!51311 e!51314)))

(declare-fun c!12056 () Bool)

(assert (=> b!78519 (= c!12056 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78520 () Bool)

(declare-fun call!7217 () ListLongMap!1433)

(assert (=> b!78520 (= e!51307 call!7217)))

(declare-fun b!78521 () Bool)

(declare-fun call!7219 () ListLongMap!1433)

(assert (=> b!78521 (= e!51307 call!7219)))

(declare-fun b!78522 () Bool)

(declare-fun res!41116 () Bool)

(declare-fun e!51317 () Bool)

(assert (=> b!78522 (=> (not res!41116) (not e!51317))))

(declare-fun e!51305 () Bool)

(assert (=> b!78522 (= res!41116 e!51305)))

(declare-fun c!12054 () Bool)

(assert (=> b!78522 (= c!12054 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7214 () Bool)

(declare-fun call!7218 () Bool)

(assert (=> bm!7214 (= call!7218 (contains!739 lt!36359 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7215 () Bool)

(assert (=> bm!7215 (= call!7221 (contains!739 lt!36359 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7216 () Bool)

(assert (=> bm!7216 (= call!7220 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!78523 () Bool)

(declare-fun e!51316 () Bool)

(assert (=> b!78523 (= e!51316 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7217 () Bool)

(assert (=> bm!7217 (= call!7219 call!7216)))

(declare-fun b!78524 () Bool)

(declare-fun e!51310 () Bool)

(assert (=> b!78524 (= e!51310 (= (apply!79 lt!36359 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!78525 () Bool)

(declare-fun res!41117 () Bool)

(assert (=> b!78525 (=> (not res!41117) (not e!51317))))

(declare-fun e!51309 () Bool)

(assert (=> b!78525 (= res!41117 e!51309)))

(declare-fun res!41114 () Bool)

(assert (=> b!78525 (=> res!41114 e!51309)))

(assert (=> b!78525 (= res!41114 (not e!51316))))

(declare-fun res!41110 () Bool)

(assert (=> b!78525 (=> (not res!41110) (not e!51316))))

(assert (=> b!78525 (= res!41110 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78516 () Bool)

(declare-fun call!7222 () ListLongMap!1433)

(assert (=> b!78516 (= e!51311 (+!103 call!7222 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun d!18597 () Bool)

(assert (=> d!18597 e!51317))

(declare-fun res!41113 () Bool)

(assert (=> d!18597 (=> (not res!41113) (not e!51317))))

(assert (=> d!18597 (= res!41113 (or (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))))

(declare-fun lt!36351 () ListLongMap!1433)

(assert (=> d!18597 (= lt!36359 lt!36351)))

(declare-fun lt!36352 () Unit!2242)

(assert (=> d!18597 (= lt!36352 e!51312)))

(declare-fun c!12057 () Bool)

(assert (=> d!18597 (= c!12057 e!51313)))

(declare-fun res!41115 () Bool)

(assert (=> d!18597 (=> (not res!41115) (not e!51313))))

(assert (=> d!18597 (= res!41115 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!18597 (= lt!36351 e!51311)))

(declare-fun c!12058 () Bool)

(assert (=> d!18597 (= c!12058 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18597 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18597 (= (getCurrentListMap!421 (_keys!3930 newMap!16) (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36359)))

(declare-fun b!78526 () Bool)

(assert (=> b!78526 (= e!51305 (not call!7218))))

(declare-fun bm!7218 () Bool)

(assert (=> bm!7218 (= call!7222 (+!103 (ite c!12058 call!7220 (ite c!12056 call!7216 call!7219)) (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!78527 () Bool)

(assert (=> b!78527 (= e!51314 call!7217)))

(declare-fun bm!7219 () Bool)

(assert (=> bm!7219 (= call!7217 call!7222)))

(declare-fun b!78528 () Bool)

(assert (=> b!78528 (= e!51309 e!51315)))

(declare-fun res!41112 () Bool)

(assert (=> b!78528 (=> (not res!41112) (not e!51315))))

(assert (=> b!78528 (= res!41112 (contains!739 lt!36359 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78528 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78529 () Bool)

(assert (=> b!78529 (= e!51305 e!51310)))

(declare-fun res!41109 () Bool)

(assert (=> b!78529 (= res!41109 call!7218)))

(assert (=> b!78529 (=> (not res!41109) (not e!51310))))

(declare-fun b!78530 () Bool)

(assert (=> b!78530 (= e!51317 e!51306)))

(declare-fun c!12059 () Bool)

(assert (=> b!78530 (= c!12059 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78531 () Bool)

(declare-fun Unit!2271 () Unit!2242)

(assert (=> b!78531 (= e!51312 Unit!2271)))

(declare-fun b!78532 () Bool)

(assert (=> b!78532 (= e!51308 (= (apply!79 lt!36359 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(assert (= (and d!18597 c!12058) b!78516))

(assert (= (and d!18597 (not c!12058)) b!78519))

(assert (= (and b!78519 c!12056) b!78527))

(assert (= (and b!78519 (not c!12056)) b!78513))

(assert (= (and b!78513 c!12055) b!78520))

(assert (= (and b!78513 (not c!12055)) b!78521))

(assert (= (or b!78520 b!78521) bm!7217))

(assert (= (or b!78527 bm!7217) bm!7213))

(assert (= (or b!78527 b!78520) bm!7219))

(assert (= (or b!78516 bm!7213) bm!7216))

(assert (= (or b!78516 bm!7219) bm!7218))

(assert (= (and d!18597 res!41115) b!78514))

(assert (= (and d!18597 c!12057) b!78515))

(assert (= (and d!18597 (not c!12057)) b!78531))

(assert (= (and d!18597 res!41113) b!78525))

(assert (= (and b!78525 res!41110) b!78523))

(assert (= (and b!78525 (not res!41114)) b!78528))

(assert (= (and b!78528 res!41112) b!78512))

(assert (= (and b!78525 res!41117) b!78522))

(assert (= (and b!78522 c!12054) b!78529))

(assert (= (and b!78522 (not c!12054)) b!78526))

(assert (= (and b!78529 res!41109) b!78524))

(assert (= (or b!78529 b!78526) bm!7214))

(assert (= (and b!78522 res!41116) b!78530))

(assert (= (and b!78530 c!12059) b!78517))

(assert (= (and b!78530 (not c!12059)) b!78518))

(assert (= (and b!78517 res!41111) b!78532))

(assert (= (or b!78517 b!78518) bm!7215))

(declare-fun b_lambda!3497 () Bool)

(assert (=> (not b_lambda!3497) (not b!78512)))

(assert (=> b!78512 t!5160))

(declare-fun b_and!4813 () Bool)

(assert (= b_and!4809 (and (=> t!5160 result!2821) b_and!4813)))

(assert (=> b!78512 t!5162))

(declare-fun b_and!4815 () Bool)

(assert (= b_and!4811 (and (=> t!5162 result!2823) b_and!4815)))

(declare-fun m!78695 () Bool)

(assert (=> b!78524 m!78695))

(declare-fun m!78697 () Bool)

(assert (=> b!78515 m!78697))

(declare-fun m!78699 () Bool)

(assert (=> b!78515 m!78699))

(declare-fun m!78701 () Bool)

(assert (=> b!78515 m!78701))

(declare-fun m!78703 () Bool)

(assert (=> b!78515 m!78703))

(declare-fun m!78705 () Bool)

(assert (=> b!78515 m!78705))

(declare-fun m!78707 () Bool)

(assert (=> b!78515 m!78707))

(declare-fun m!78709 () Bool)

(assert (=> b!78515 m!78709))

(declare-fun m!78711 () Bool)

(assert (=> b!78515 m!78711))

(declare-fun m!78713 () Bool)

(assert (=> b!78515 m!78713))

(declare-fun m!78715 () Bool)

(assert (=> b!78515 m!78715))

(declare-fun m!78717 () Bool)

(assert (=> b!78515 m!78717))

(declare-fun m!78719 () Bool)

(assert (=> b!78515 m!78719))

(declare-fun m!78721 () Bool)

(assert (=> b!78515 m!78721))

(assert (=> b!78515 m!78717))

(assert (=> b!78515 m!78715))

(declare-fun m!78723 () Bool)

(assert (=> b!78515 m!78723))

(assert (=> b!78515 m!77965))

(assert (=> b!78515 m!78701))

(declare-fun m!78725 () Bool)

(assert (=> b!78515 m!78725))

(assert (=> b!78515 m!78711))

(declare-fun m!78727 () Bool)

(assert (=> b!78515 m!78727))

(declare-fun m!78729 () Bool)

(assert (=> bm!7215 m!78729))

(assert (=> bm!7216 m!78713))

(declare-fun m!78731 () Bool)

(assert (=> b!78516 m!78731))

(assert (=> b!78514 m!77965))

(assert (=> b!78514 m!77965))

(assert (=> b!78514 m!77975))

(assert (=> d!18597 m!77977))

(declare-fun m!78733 () Bool)

(assert (=> bm!7214 m!78733))

(declare-fun m!78735 () Bool)

(assert (=> bm!7218 m!78735))

(assert (=> b!78512 m!77983))

(declare-fun m!78737 () Bool)

(assert (=> b!78512 m!78737))

(assert (=> b!78512 m!77983))

(declare-fun m!78739 () Bool)

(assert (=> b!78512 m!78739))

(assert (=> b!78512 m!77965))

(declare-fun m!78741 () Bool)

(assert (=> b!78512 m!78741))

(assert (=> b!78512 m!78737))

(assert (=> b!78512 m!77965))

(assert (=> b!78523 m!77965))

(assert (=> b!78523 m!77965))

(assert (=> b!78523 m!77975))

(declare-fun m!78743 () Bool)

(assert (=> b!78532 m!78743))

(assert (=> b!78528 m!77965))

(assert (=> b!78528 m!77965))

(declare-fun m!78745 () Bool)

(assert (=> b!78528 m!78745))

(assert (=> bm!7143 d!18597))

(declare-fun b!78533 () Bool)

(declare-fun e!51318 () Option!141)

(assert (=> b!78533 (= e!51318 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35812)))))))

(declare-fun b!78535 () Bool)

(declare-fun e!51319 () Option!141)

(assert (=> b!78535 (= e!51319 (getValueByKey!135 (t!5148 (toList!732 lt!35812)) (_1!1099 lt!35670)))))

(declare-fun d!18599 () Bool)

(declare-fun c!12060 () Bool)

(assert (=> d!18599 (= c!12060 (and ((_ is Cons!1507) (toList!732 lt!35812)) (= (_1!1099 (h!2095 (toList!732 lt!35812))) (_1!1099 lt!35670))))))

(assert (=> d!18599 (= (getValueByKey!135 (toList!732 lt!35812) (_1!1099 lt!35670)) e!51318)))

(declare-fun b!78536 () Bool)

(assert (=> b!78536 (= e!51319 None!139)))

(declare-fun b!78534 () Bool)

(assert (=> b!78534 (= e!51318 e!51319)))

(declare-fun c!12061 () Bool)

(assert (=> b!78534 (= c!12061 (and ((_ is Cons!1507) (toList!732 lt!35812)) (not (= (_1!1099 (h!2095 (toList!732 lt!35812))) (_1!1099 lt!35670)))))))

(assert (= (and d!18599 c!12060) b!78533))

(assert (= (and d!18599 (not c!12060)) b!78534))

(assert (= (and b!78534 c!12061) b!78535))

(assert (= (and b!78534 (not c!12061)) b!78536))

(declare-fun m!78747 () Bool)

(assert (=> b!78535 m!78747))

(assert (=> b!77793 d!18599))

(declare-fun d!18601 () Bool)

(assert (=> d!18601 (= (apply!79 lt!35901 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1180 (getValueByKey!135 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3315 () Bool)

(assert (= bs!3315 d!18601))

(assert (=> bs!3315 m!78397))

(assert (=> bs!3315 m!78397))

(declare-fun m!78749 () Bool)

(assert (=> bs!3315 m!78749))

(assert (=> b!77889 d!18601))

(declare-fun d!18603 () Bool)

(declare-fun e!51321 () Bool)

(assert (=> d!18603 e!51321))

(declare-fun res!41118 () Bool)

(assert (=> d!18603 (=> res!41118 e!51321)))

(declare-fun lt!36369 () Bool)

(assert (=> d!18603 (= res!41118 (not lt!36369))))

(declare-fun lt!36370 () Bool)

(assert (=> d!18603 (= lt!36369 lt!36370)))

(declare-fun lt!36367 () Unit!2242)

(declare-fun e!51320 () Unit!2242)

(assert (=> d!18603 (= lt!36367 e!51320)))

(declare-fun c!12062 () Bool)

(assert (=> d!18603 (= c!12062 lt!36370)))

(assert (=> d!18603 (= lt!36370 (containsKey!139 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!18603 (= (contains!739 lt!35837 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36369)))

(declare-fun b!78537 () Bool)

(declare-fun lt!36368 () Unit!2242)

(assert (=> b!78537 (= e!51320 lt!36368)))

(assert (=> b!78537 (= lt!36368 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78537 (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78538 () Bool)

(declare-fun Unit!2272 () Unit!2242)

(assert (=> b!78538 (= e!51320 Unit!2272)))

(declare-fun b!78539 () Bool)

(assert (=> b!78539 (= e!51321 (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!18603 c!12062) b!78537))

(assert (= (and d!18603 (not c!12062)) b!78538))

(assert (= (and d!18603 (not res!41118)) b!78539))

(assert (=> d!18603 m!77747))

(declare-fun m!78751 () Bool)

(assert (=> d!18603 m!78751))

(assert (=> b!78537 m!77747))

(declare-fun m!78753 () Bool)

(assert (=> b!78537 m!78753))

(assert (=> b!78537 m!77747))

(declare-fun m!78755 () Bool)

(assert (=> b!78537 m!78755))

(assert (=> b!78537 m!78755))

(declare-fun m!78757 () Bool)

(assert (=> b!78537 m!78757))

(assert (=> b!78539 m!77747))

(assert (=> b!78539 m!78755))

(assert (=> b!78539 m!78755))

(assert (=> b!78539 m!78757))

(assert (=> b!77826 d!18603))

(declare-fun b!78540 () Bool)

(declare-fun e!51322 () Option!141)

(assert (=> b!78540 (= e!51322 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35817)))))))

(declare-fun b!78542 () Bool)

(declare-fun e!51323 () Option!141)

(assert (=> b!78542 (= e!51323 (getValueByKey!135 (t!5148 (toList!732 lt!35817)) (_1!1099 lt!35670)))))

(declare-fun d!18605 () Bool)

(declare-fun c!12063 () Bool)

(assert (=> d!18605 (= c!12063 (and ((_ is Cons!1507) (toList!732 lt!35817)) (= (_1!1099 (h!2095 (toList!732 lt!35817))) (_1!1099 lt!35670))))))

(assert (=> d!18605 (= (getValueByKey!135 (toList!732 lt!35817) (_1!1099 lt!35670)) e!51322)))

(declare-fun b!78543 () Bool)

(assert (=> b!78543 (= e!51323 None!139)))

(declare-fun b!78541 () Bool)

(assert (=> b!78541 (= e!51322 e!51323)))

(declare-fun c!12064 () Bool)

(assert (=> b!78541 (= c!12064 (and ((_ is Cons!1507) (toList!732 lt!35817)) (not (= (_1!1099 (h!2095 (toList!732 lt!35817))) (_1!1099 lt!35670)))))))

(assert (= (and d!18605 c!12063) b!78540))

(assert (= (and d!18605 (not c!12063)) b!78541))

(assert (= (and b!78541 c!12064) b!78542))

(assert (= (and b!78541 (not c!12064)) b!78543))

(declare-fun m!78759 () Bool)

(assert (=> b!78542 m!78759))

(assert (=> b!77795 d!18605))

(declare-fun call!7223 () Bool)

(declare-fun bm!7220 () Bool)

(declare-fun c!12065 () Bool)

(assert (=> bm!7220 (= call!7223 (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12065 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507))))))

(declare-fun e!51327 () Bool)

(declare-fun b!78544 () Bool)

(assert (=> b!78544 (= e!51327 (contains!741 (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!18607 () Bool)

(declare-fun res!41121 () Bool)

(declare-fun e!51326 () Bool)

(assert (=> d!18607 (=> res!41121 e!51326)))

(assert (=> d!18607 (= res!41121 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!18607 (= (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)) e!51326)))

(declare-fun b!78545 () Bool)

(declare-fun e!51325 () Bool)

(declare-fun e!51324 () Bool)

(assert (=> b!78545 (= e!51325 e!51324)))

(assert (=> b!78545 (= c!12065 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78546 () Bool)

(assert (=> b!78546 (= e!51324 call!7223)))

(declare-fun b!78547 () Bool)

(assert (=> b!78547 (= e!51324 call!7223)))

(declare-fun b!78548 () Bool)

(assert (=> b!78548 (= e!51326 e!51325)))

(declare-fun res!41120 () Bool)

(assert (=> b!78548 (=> (not res!41120) (not e!51325))))

(assert (=> b!78548 (= res!41120 (not e!51327))))

(declare-fun res!41119 () Bool)

(assert (=> b!78548 (=> (not res!41119) (not e!51327))))

(assert (=> b!78548 (= res!41119 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!18607 (not res!41121)) b!78548))

(assert (= (and b!78548 res!41119) b!78544))

(assert (= (and b!78548 res!41120) b!78545))

(assert (= (and b!78545 c!12065) b!78547))

(assert (= (and b!78545 (not c!12065)) b!78546))

(assert (= (or b!78547 b!78546) bm!7220))

(declare-fun m!78761 () Bool)

(assert (=> bm!7220 m!78761))

(declare-fun m!78763 () Bool)

(assert (=> bm!7220 m!78763))

(assert (=> b!78544 m!78761))

(assert (=> b!78544 m!78761))

(declare-fun m!78765 () Bool)

(assert (=> b!78544 m!78765))

(assert (=> b!78545 m!78761))

(assert (=> b!78545 m!78761))

(declare-fun m!78767 () Bool)

(assert (=> b!78545 m!78767))

(assert (=> b!78548 m!78761))

(assert (=> b!78548 m!78761))

(assert (=> b!78548 m!78767))

(assert (=> bm!7079 d!18607))

(declare-fun b!78549 () Bool)

(declare-fun e!51328 () Option!141)

(assert (=> b!78549 (= e!51328 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35793)))))))

(declare-fun b!78551 () Bool)

(declare-fun e!51329 () Option!141)

(assert (=> b!78551 (= e!51329 (getValueByKey!135 (t!5148 (toList!732 lt!35793)) (_1!1099 lt!35660)))))

(declare-fun d!18609 () Bool)

(declare-fun c!12066 () Bool)

(assert (=> d!18609 (= c!12066 (and ((_ is Cons!1507) (toList!732 lt!35793)) (= (_1!1099 (h!2095 (toList!732 lt!35793))) (_1!1099 lt!35660))))))

(assert (=> d!18609 (= (getValueByKey!135 (toList!732 lt!35793) (_1!1099 lt!35660)) e!51328)))

(declare-fun b!78552 () Bool)

(assert (=> b!78552 (= e!51329 None!139)))

(declare-fun b!78550 () Bool)

(assert (=> b!78550 (= e!51328 e!51329)))

(declare-fun c!12067 () Bool)

(assert (=> b!78550 (= c!12067 (and ((_ is Cons!1507) (toList!732 lt!35793)) (not (= (_1!1099 (h!2095 (toList!732 lt!35793))) (_1!1099 lt!35660)))))))

(assert (= (and d!18609 c!12066) b!78549))

(assert (= (and d!18609 (not c!12066)) b!78550))

(assert (= (and b!78550 c!12067) b!78551))

(assert (= (and b!78550 (not c!12067)) b!78552))

(declare-fun m!78769 () Bool)

(assert (=> b!78551 m!78769))

(assert (=> b!77785 d!18609))

(declare-fun d!18611 () Bool)

(declare-fun e!51331 () Bool)

(assert (=> d!18611 e!51331))

(declare-fun res!41122 () Bool)

(assert (=> d!18611 (=> res!41122 e!51331)))

(declare-fun lt!36373 () Bool)

(assert (=> d!18611 (= res!41122 (not lt!36373))))

(declare-fun lt!36374 () Bool)

(assert (=> d!18611 (= lt!36373 lt!36374)))

(declare-fun lt!36371 () Unit!2242)

(declare-fun e!51330 () Unit!2242)

(assert (=> d!18611 (= lt!36371 e!51330)))

(declare-fun c!12068 () Bool)

(assert (=> d!18611 (= c!12068 lt!36374)))

(assert (=> d!18611 (= lt!36374 (containsKey!139 (toList!732 lt!35812) (_1!1099 lt!35670)))))

(assert (=> d!18611 (= (contains!739 lt!35812 (_1!1099 lt!35670)) lt!36373)))

(declare-fun b!78553 () Bool)

(declare-fun lt!36372 () Unit!2242)

(assert (=> b!78553 (= e!51330 lt!36372)))

(assert (=> b!78553 (= lt!36372 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35812) (_1!1099 lt!35670)))))

(assert (=> b!78553 (isDefined!89 (getValueByKey!135 (toList!732 lt!35812) (_1!1099 lt!35670)))))

(declare-fun b!78554 () Bool)

(declare-fun Unit!2273 () Unit!2242)

(assert (=> b!78554 (= e!51330 Unit!2273)))

(declare-fun b!78555 () Bool)

(assert (=> b!78555 (= e!51331 (isDefined!89 (getValueByKey!135 (toList!732 lt!35812) (_1!1099 lt!35670))))))

(assert (= (and d!18611 c!12068) b!78553))

(assert (= (and d!18611 (not c!12068)) b!78554))

(assert (= (and d!18611 (not res!41122)) b!78555))

(declare-fun m!78771 () Bool)

(assert (=> d!18611 m!78771))

(declare-fun m!78773 () Bool)

(assert (=> b!78553 m!78773))

(assert (=> b!78553 m!77719))

(assert (=> b!78553 m!77719))

(declare-fun m!78775 () Bool)

(assert (=> b!78553 m!78775))

(assert (=> b!78555 m!77719))

(assert (=> b!78555 m!77719))

(assert (=> b!78555 m!78775))

(assert (=> d!18365 d!18611))

(declare-fun b!78556 () Bool)

(declare-fun e!51332 () Option!141)

(assert (=> b!78556 (= e!51332 (Some!140 (_2!1099 (h!2095 lt!35810))))))

(declare-fun b!78558 () Bool)

(declare-fun e!51333 () Option!141)

(assert (=> b!78558 (= e!51333 (getValueByKey!135 (t!5148 lt!35810) (_1!1099 lt!35670)))))

(declare-fun d!18613 () Bool)

(declare-fun c!12069 () Bool)

(assert (=> d!18613 (= c!12069 (and ((_ is Cons!1507) lt!35810) (= (_1!1099 (h!2095 lt!35810)) (_1!1099 lt!35670))))))

(assert (=> d!18613 (= (getValueByKey!135 lt!35810 (_1!1099 lt!35670)) e!51332)))

(declare-fun b!78559 () Bool)

(assert (=> b!78559 (= e!51333 None!139)))

(declare-fun b!78557 () Bool)

(assert (=> b!78557 (= e!51332 e!51333)))

(declare-fun c!12070 () Bool)

(assert (=> b!78557 (= c!12070 (and ((_ is Cons!1507) lt!35810) (not (= (_1!1099 (h!2095 lt!35810)) (_1!1099 lt!35670)))))))

(assert (= (and d!18613 c!12069) b!78556))

(assert (= (and d!18613 (not c!12069)) b!78557))

(assert (= (and b!78557 c!12070) b!78558))

(assert (= (and b!78557 (not c!12070)) b!78559))

(declare-fun m!78777 () Bool)

(assert (=> b!78558 m!78777))

(assert (=> d!18365 d!18613))

(declare-fun d!18615 () Bool)

(assert (=> d!18615 (= (getValueByKey!135 lt!35810 (_1!1099 lt!35670)) (Some!140 (_2!1099 lt!35670)))))

(declare-fun lt!36375 () Unit!2242)

(assert (=> d!18615 (= lt!36375 (choose!462 lt!35810 (_1!1099 lt!35670) (_2!1099 lt!35670)))))

(declare-fun e!51334 () Bool)

(assert (=> d!18615 e!51334))

(declare-fun res!41123 () Bool)

(assert (=> d!18615 (=> (not res!41123) (not e!51334))))

(assert (=> d!18615 (= res!41123 (isStrictlySorted!290 lt!35810))))

(assert (=> d!18615 (= (lemmaContainsTupThenGetReturnValue!55 lt!35810 (_1!1099 lt!35670) (_2!1099 lt!35670)) lt!36375)))

(declare-fun b!78560 () Bool)

(declare-fun res!41124 () Bool)

(assert (=> b!78560 (=> (not res!41124) (not e!51334))))

(assert (=> b!78560 (= res!41124 (containsKey!139 lt!35810 (_1!1099 lt!35670)))))

(declare-fun b!78561 () Bool)

(assert (=> b!78561 (= e!51334 (contains!740 lt!35810 (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(assert (= (and d!18615 res!41123) b!78560))

(assert (= (and b!78560 res!41124) b!78561))

(assert (=> d!18615 m!77713))

(declare-fun m!78779 () Bool)

(assert (=> d!18615 m!78779))

(declare-fun m!78781 () Bool)

(assert (=> d!18615 m!78781))

(declare-fun m!78783 () Bool)

(assert (=> b!78560 m!78783))

(declare-fun m!78785 () Bool)

(assert (=> b!78561 m!78785))

(assert (=> d!18365 d!18615))

(declare-fun b!78562 () Bool)

(declare-fun e!51336 () List!1511)

(declare-fun call!7224 () List!1511)

(assert (=> b!78562 (= e!51336 call!7224)))

(declare-fun b!78563 () Bool)

(declare-fun res!41126 () Bool)

(declare-fun e!51338 () Bool)

(assert (=> b!78563 (=> (not res!41126) (not e!51338))))

(declare-fun lt!36376 () List!1511)

(assert (=> b!78563 (= res!41126 (containsKey!139 lt!36376 (_1!1099 lt!35670)))))

(declare-fun e!51339 () List!1511)

(declare-fun call!7225 () List!1511)

(declare-fun c!12072 () Bool)

(declare-fun bm!7221 () Bool)

(assert (=> bm!7221 (= call!7225 ($colon$colon!68 e!51339 (ite c!12072 (h!2095 (toList!732 lt!35657)) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670)))))))

(declare-fun c!12073 () Bool)

(assert (=> bm!7221 (= c!12073 c!12072)))

(declare-fun c!12071 () Bool)

(declare-fun c!12074 () Bool)

(declare-fun b!78564 () Bool)

(assert (=> b!78564 (= e!51339 (ite c!12071 (t!5148 (toList!732 lt!35657)) (ite c!12074 (Cons!1507 (h!2095 (toList!732 lt!35657)) (t!5148 (toList!732 lt!35657))) Nil!1508)))))

(declare-fun d!18617 () Bool)

(assert (=> d!18617 e!51338))

(declare-fun res!41125 () Bool)

(assert (=> d!18617 (=> (not res!41125) (not e!51338))))

(assert (=> d!18617 (= res!41125 (isStrictlySorted!290 lt!36376))))

(declare-fun e!51335 () List!1511)

(assert (=> d!18617 (= lt!36376 e!51335)))

(assert (=> d!18617 (= c!12072 (and ((_ is Cons!1507) (toList!732 lt!35657)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 lt!35670))))))

(assert (=> d!18617 (isStrictlySorted!290 (toList!732 lt!35657))))

(assert (=> d!18617 (= (insertStrictlySorted!58 (toList!732 lt!35657) (_1!1099 lt!35670) (_2!1099 lt!35670)) lt!36376)))

(declare-fun bm!7222 () Bool)

(declare-fun call!7226 () List!1511)

(assert (=> bm!7222 (= call!7226 call!7224)))

(declare-fun b!78565 () Bool)

(assert (=> b!78565 (= c!12074 (and ((_ is Cons!1507) (toList!732 lt!35657)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 lt!35670))))))

(declare-fun e!51337 () List!1511)

(assert (=> b!78565 (= e!51336 e!51337)))

(declare-fun b!78566 () Bool)

(assert (=> b!78566 (= e!51337 call!7226)))

(declare-fun b!78567 () Bool)

(assert (=> b!78567 (= e!51335 e!51336)))

(assert (=> b!78567 (= c!12071 (and ((_ is Cons!1507) (toList!732 lt!35657)) (= (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 lt!35670))))))

(declare-fun b!78568 () Bool)

(assert (=> b!78568 (= e!51337 call!7226)))

(declare-fun bm!7223 () Bool)

(assert (=> bm!7223 (= call!7224 call!7225)))

(declare-fun b!78569 () Bool)

(assert (=> b!78569 (= e!51339 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35657)) (_1!1099 lt!35670) (_2!1099 lt!35670)))))

(declare-fun b!78570 () Bool)

(assert (=> b!78570 (= e!51335 call!7225)))

(declare-fun b!78571 () Bool)

(assert (=> b!78571 (= e!51338 (contains!740 lt!36376 (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(assert (= (and d!18617 c!12072) b!78570))

(assert (= (and d!18617 (not c!12072)) b!78567))

(assert (= (and b!78567 c!12071) b!78562))

(assert (= (and b!78567 (not c!12071)) b!78565))

(assert (= (and b!78565 c!12074) b!78568))

(assert (= (and b!78565 (not c!12074)) b!78566))

(assert (= (or b!78568 b!78566) bm!7222))

(assert (= (or b!78562 bm!7222) bm!7223))

(assert (= (or b!78570 bm!7223) bm!7221))

(assert (= (and bm!7221 c!12073) b!78569))

(assert (= (and bm!7221 (not c!12073)) b!78564))

(assert (= (and d!18617 res!41125) b!78563))

(assert (= (and b!78563 res!41126) b!78571))

(declare-fun m!78787 () Bool)

(assert (=> b!78569 m!78787))

(declare-fun m!78789 () Bool)

(assert (=> bm!7221 m!78789))

(declare-fun m!78791 () Bool)

(assert (=> b!78563 m!78791))

(declare-fun m!78793 () Bool)

(assert (=> b!78571 m!78793))

(declare-fun m!78795 () Bool)

(assert (=> d!18617 m!78795))

(assert (=> d!18617 m!78569))

(assert (=> d!18365 d!18617))

(declare-fun d!18619 () Bool)

(assert (=> d!18619 (= (get!1179 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) from!355) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78059 d!18619))

(declare-fun d!18621 () Bool)

(declare-fun e!51341 () Bool)

(assert (=> d!18621 e!51341))

(declare-fun res!41127 () Bool)

(assert (=> d!18621 (=> res!41127 e!51341)))

(declare-fun lt!36379 () Bool)

(assert (=> d!18621 (= res!41127 (not lt!36379))))

(declare-fun lt!36380 () Bool)

(assert (=> d!18621 (= lt!36379 lt!36380)))

(declare-fun lt!36377 () Unit!2242)

(declare-fun e!51340 () Unit!2242)

(assert (=> d!18621 (= lt!36377 e!51340)))

(declare-fun c!12075 () Bool)

(assert (=> d!18621 (= c!12075 lt!36380)))

(assert (=> d!18621 (= lt!36380 (containsKey!139 (toList!732 lt!35817) (_1!1099 lt!35670)))))

(assert (=> d!18621 (= (contains!739 lt!35817 (_1!1099 lt!35670)) lt!36379)))

(declare-fun b!78572 () Bool)

(declare-fun lt!36378 () Unit!2242)

(assert (=> b!78572 (= e!51340 lt!36378)))

(assert (=> b!78572 (= lt!36378 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35817) (_1!1099 lt!35670)))))

(assert (=> b!78572 (isDefined!89 (getValueByKey!135 (toList!732 lt!35817) (_1!1099 lt!35670)))))

(declare-fun b!78573 () Bool)

(declare-fun Unit!2274 () Unit!2242)

(assert (=> b!78573 (= e!51340 Unit!2274)))

(declare-fun b!78574 () Bool)

(assert (=> b!78574 (= e!51341 (isDefined!89 (getValueByKey!135 (toList!732 lt!35817) (_1!1099 lt!35670))))))

(assert (= (and d!18621 c!12075) b!78572))

(assert (= (and d!18621 (not c!12075)) b!78573))

(assert (= (and d!18621 (not res!41127)) b!78574))

(declare-fun m!78797 () Bool)

(assert (=> d!18621 m!78797))

(declare-fun m!78799 () Bool)

(assert (=> b!78572 m!78799))

(assert (=> b!78572 m!77741))

(assert (=> b!78572 m!77741))

(declare-fun m!78801 () Bool)

(assert (=> b!78572 m!78801))

(assert (=> b!78574 m!77741))

(assert (=> b!78574 m!77741))

(assert (=> b!78574 m!78801))

(assert (=> d!18371 d!18621))

(declare-fun b!78575 () Bool)

(declare-fun e!51342 () Option!141)

(assert (=> b!78575 (= e!51342 (Some!140 (_2!1099 (h!2095 lt!35815))))))

(declare-fun b!78577 () Bool)

(declare-fun e!51343 () Option!141)

(assert (=> b!78577 (= e!51343 (getValueByKey!135 (t!5148 lt!35815) (_1!1099 lt!35670)))))

(declare-fun d!18623 () Bool)

(declare-fun c!12076 () Bool)

(assert (=> d!18623 (= c!12076 (and ((_ is Cons!1507) lt!35815) (= (_1!1099 (h!2095 lt!35815)) (_1!1099 lt!35670))))))

(assert (=> d!18623 (= (getValueByKey!135 lt!35815 (_1!1099 lt!35670)) e!51342)))

(declare-fun b!78578 () Bool)

(assert (=> b!78578 (= e!51343 None!139)))

(declare-fun b!78576 () Bool)

(assert (=> b!78576 (= e!51342 e!51343)))

(declare-fun c!12077 () Bool)

(assert (=> b!78576 (= c!12077 (and ((_ is Cons!1507) lt!35815) (not (= (_1!1099 (h!2095 lt!35815)) (_1!1099 lt!35670)))))))

(assert (= (and d!18623 c!12076) b!78575))

(assert (= (and d!18623 (not c!12076)) b!78576))

(assert (= (and b!78576 c!12077) b!78577))

(assert (= (and b!78576 (not c!12077)) b!78578))

(declare-fun m!78803 () Bool)

(assert (=> b!78577 m!78803))

(assert (=> d!18371 d!18623))

(declare-fun d!18625 () Bool)

(assert (=> d!18625 (= (getValueByKey!135 lt!35815 (_1!1099 lt!35670)) (Some!140 (_2!1099 lt!35670)))))

(declare-fun lt!36381 () Unit!2242)

(assert (=> d!18625 (= lt!36381 (choose!462 lt!35815 (_1!1099 lt!35670) (_2!1099 lt!35670)))))

(declare-fun e!51344 () Bool)

(assert (=> d!18625 e!51344))

(declare-fun res!41128 () Bool)

(assert (=> d!18625 (=> (not res!41128) (not e!51344))))

(assert (=> d!18625 (= res!41128 (isStrictlySorted!290 lt!35815))))

(assert (=> d!18625 (= (lemmaContainsTupThenGetReturnValue!55 lt!35815 (_1!1099 lt!35670) (_2!1099 lt!35670)) lt!36381)))

(declare-fun b!78579 () Bool)

(declare-fun res!41129 () Bool)

(assert (=> b!78579 (=> (not res!41129) (not e!51344))))

(assert (=> b!78579 (= res!41129 (containsKey!139 lt!35815 (_1!1099 lt!35670)))))

(declare-fun b!78580 () Bool)

(assert (=> b!78580 (= e!51344 (contains!740 lt!35815 (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(assert (= (and d!18625 res!41128) b!78579))

(assert (= (and b!78579 res!41129) b!78580))

(assert (=> d!18625 m!77735))

(declare-fun m!78805 () Bool)

(assert (=> d!18625 m!78805))

(declare-fun m!78807 () Bool)

(assert (=> d!18625 m!78807))

(declare-fun m!78809 () Bool)

(assert (=> b!78579 m!78809))

(declare-fun m!78811 () Bool)

(assert (=> b!78580 m!78811))

(assert (=> d!18371 d!18625))

(declare-fun b!78581 () Bool)

(declare-fun e!51346 () List!1511)

(declare-fun call!7227 () List!1511)

(assert (=> b!78581 (= e!51346 call!7227)))

(declare-fun b!78582 () Bool)

(declare-fun res!41131 () Bool)

(declare-fun e!51348 () Bool)

(assert (=> b!78582 (=> (not res!41131) (not e!51348))))

(declare-fun lt!36382 () List!1511)

(assert (=> b!78582 (= res!41131 (containsKey!139 lt!36382 (_1!1099 lt!35670)))))

(declare-fun bm!7224 () Bool)

(declare-fun e!51349 () List!1511)

(declare-fun c!12079 () Bool)

(declare-fun call!7228 () List!1511)

(assert (=> bm!7224 (= call!7228 ($colon$colon!68 e!51349 (ite c!12079 (h!2095 (toList!732 lt!35668)) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670)))))))

(declare-fun c!12080 () Bool)

(assert (=> bm!7224 (= c!12080 c!12079)))

(declare-fun b!78583 () Bool)

(declare-fun c!12078 () Bool)

(declare-fun c!12081 () Bool)

(assert (=> b!78583 (= e!51349 (ite c!12078 (t!5148 (toList!732 lt!35668)) (ite c!12081 (Cons!1507 (h!2095 (toList!732 lt!35668)) (t!5148 (toList!732 lt!35668))) Nil!1508)))))

(declare-fun d!18627 () Bool)

(assert (=> d!18627 e!51348))

(declare-fun res!41130 () Bool)

(assert (=> d!18627 (=> (not res!41130) (not e!51348))))

(assert (=> d!18627 (= res!41130 (isStrictlySorted!290 lt!36382))))

(declare-fun e!51345 () List!1511)

(assert (=> d!18627 (= lt!36382 e!51345)))

(assert (=> d!18627 (= c!12079 (and ((_ is Cons!1507) (toList!732 lt!35668)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35668))) (_1!1099 lt!35670))))))

(assert (=> d!18627 (isStrictlySorted!290 (toList!732 lt!35668))))

(assert (=> d!18627 (= (insertStrictlySorted!58 (toList!732 lt!35668) (_1!1099 lt!35670) (_2!1099 lt!35670)) lt!36382)))

(declare-fun bm!7225 () Bool)

(declare-fun call!7229 () List!1511)

(assert (=> bm!7225 (= call!7229 call!7227)))

(declare-fun b!78584 () Bool)

(assert (=> b!78584 (= c!12081 (and ((_ is Cons!1507) (toList!732 lt!35668)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35668))) (_1!1099 lt!35670))))))

(declare-fun e!51347 () List!1511)

(assert (=> b!78584 (= e!51346 e!51347)))

(declare-fun b!78585 () Bool)

(assert (=> b!78585 (= e!51347 call!7229)))

(declare-fun b!78586 () Bool)

(assert (=> b!78586 (= e!51345 e!51346)))

(assert (=> b!78586 (= c!12078 (and ((_ is Cons!1507) (toList!732 lt!35668)) (= (_1!1099 (h!2095 (toList!732 lt!35668))) (_1!1099 lt!35670))))))

(declare-fun b!78587 () Bool)

(assert (=> b!78587 (= e!51347 call!7229)))

(declare-fun bm!7226 () Bool)

(assert (=> bm!7226 (= call!7227 call!7228)))

(declare-fun b!78588 () Bool)

(assert (=> b!78588 (= e!51349 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35668)) (_1!1099 lt!35670) (_2!1099 lt!35670)))))

(declare-fun b!78589 () Bool)

(assert (=> b!78589 (= e!51345 call!7228)))

(declare-fun b!78590 () Bool)

(assert (=> b!78590 (= e!51348 (contains!740 lt!36382 (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(assert (= (and d!18627 c!12079) b!78589))

(assert (= (and d!18627 (not c!12079)) b!78586))

(assert (= (and b!78586 c!12078) b!78581))

(assert (= (and b!78586 (not c!12078)) b!78584))

(assert (= (and b!78584 c!12081) b!78587))

(assert (= (and b!78584 (not c!12081)) b!78585))

(assert (= (or b!78587 b!78585) bm!7225))

(assert (= (or b!78581 bm!7225) bm!7226))

(assert (= (or b!78589 bm!7226) bm!7224))

(assert (= (and bm!7224 c!12080) b!78588))

(assert (= (and bm!7224 (not c!12080)) b!78583))

(assert (= (and d!18627 res!41130) b!78582))

(assert (= (and b!78582 res!41131) b!78590))

(declare-fun m!78813 () Bool)

(assert (=> b!78588 m!78813))

(declare-fun m!78815 () Bool)

(assert (=> bm!7224 m!78815))

(declare-fun m!78817 () Bool)

(assert (=> b!78582 m!78817))

(declare-fun m!78819 () Bool)

(assert (=> b!78590 m!78819))

(declare-fun m!78821 () Bool)

(assert (=> d!18627 m!78821))

(declare-fun m!78823 () Bool)

(assert (=> d!18627 m!78823))

(assert (=> d!18371 d!18627))

(declare-fun d!18629 () Bool)

(declare-fun e!51351 () Bool)

(assert (=> d!18629 e!51351))

(declare-fun res!41132 () Bool)

(assert (=> d!18629 (=> res!41132 e!51351)))

(declare-fun lt!36385 () Bool)

(assert (=> d!18629 (= res!41132 (not lt!36385))))

(declare-fun lt!36386 () Bool)

(assert (=> d!18629 (= lt!36385 lt!36386)))

(declare-fun lt!36383 () Unit!2242)

(declare-fun e!51350 () Unit!2242)

(assert (=> d!18629 (= lt!36383 e!51350)))

(declare-fun c!12082 () Bool)

(assert (=> d!18629 (= c!12082 lt!36386)))

(assert (=> d!18629 (= lt!36386 (containsKey!139 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18629 (= (contains!739 lt!35837 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36385)))

(declare-fun b!78591 () Bool)

(declare-fun lt!36384 () Unit!2242)

(assert (=> b!78591 (= e!51350 lt!36384)))

(assert (=> b!78591 (= lt!36384 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78591 (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78592 () Bool)

(declare-fun Unit!2275 () Unit!2242)

(assert (=> b!78592 (= e!51350 Unit!2275)))

(declare-fun b!78593 () Bool)

(assert (=> b!78593 (= e!51351 (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18629 c!12082) b!78591))

(assert (= (and d!18629 (not c!12082)) b!78592))

(assert (= (and d!18629 (not res!41132)) b!78593))

(declare-fun m!78825 () Bool)

(assert (=> d!18629 m!78825))

(declare-fun m!78827 () Bool)

(assert (=> b!78591 m!78827))

(declare-fun m!78829 () Bool)

(assert (=> b!78591 m!78829))

(assert (=> b!78591 m!78829))

(declare-fun m!78831 () Bool)

(assert (=> b!78591 m!78831))

(assert (=> b!78593 m!78829))

(assert (=> b!78593 m!78829))

(assert (=> b!78593 m!78831))

(assert (=> d!18373 d!18629))

(assert (=> d!18373 d!18367))

(declare-fun d!18631 () Bool)

(declare-fun res!41137 () Bool)

(declare-fun e!51356 () Bool)

(assert (=> d!18631 (=> res!41137 e!51356)))

(assert (=> d!18631 (= res!41137 (and ((_ is Cons!1507) (toList!732 lt!35664)) (= (_1!1099 (h!2095 (toList!732 lt!35664))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (=> d!18631 (= (containsKey!139 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) e!51356)))

(declare-fun b!78598 () Bool)

(declare-fun e!51357 () Bool)

(assert (=> b!78598 (= e!51356 e!51357)))

(declare-fun res!41138 () Bool)

(assert (=> b!78598 (=> (not res!41138) (not e!51357))))

(assert (=> b!78598 (= res!41138 (and (or (not ((_ is Cons!1507) (toList!732 lt!35664))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35664))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))) ((_ is Cons!1507) (toList!732 lt!35664)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35664))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(declare-fun b!78599 () Bool)

(assert (=> b!78599 (= e!51357 (containsKey!139 (t!5148 (toList!732 lt!35664)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!18631 (not res!41137)) b!78598))

(assert (= (and b!78598 res!41138) b!78599))

(assert (=> b!78599 m!77463))

(declare-fun m!78833 () Bool)

(assert (=> b!78599 m!78833))

(assert (=> d!18393 d!18631))

(assert (=> d!18385 d!18391))

(declare-fun d!18633 () Bool)

(assert (=> d!18633 (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) from!355 Nil!1507)))

(assert (=> d!18633 true))

(declare-fun _$71!105 () Unit!2242)

(assert (=> d!18633 (= (choose!39 (_keys!3930 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!105)))

(declare-fun bs!3316 () Bool)

(assert (= bs!3316 d!18633))

(assert (=> bs!3316 m!77497))

(assert (=> d!18385 d!18633))

(declare-fun d!18635 () Bool)

(assert (=> d!18635 (= (apply!79 lt!35837 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1180 (getValueByKey!135 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3317 () Bool)

(assert (= bs!3317 d!18635))

(assert (=> bs!3317 m!77747))

(assert (=> bs!3317 m!78755))

(assert (=> bs!3317 m!78755))

(declare-fun m!78835 () Bool)

(assert (=> bs!3317 m!78835))

(assert (=> b!77821 d!18635))

(assert (=> b!77821 d!18431))

(declare-fun b!78600 () Bool)

(declare-fun e!51358 () Option!141)

(assert (=> b!78600 (= e!51358 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35797)))))))

(declare-fun b!78602 () Bool)

(declare-fun e!51359 () Option!141)

(assert (=> b!78602 (= e!51359 (getValueByKey!135 (t!5148 (toList!732 lt!35797)) (_1!1099 lt!35660)))))

(declare-fun d!18637 () Bool)

(declare-fun c!12083 () Bool)

(assert (=> d!18637 (= c!12083 (and ((_ is Cons!1507) (toList!732 lt!35797)) (= (_1!1099 (h!2095 (toList!732 lt!35797))) (_1!1099 lt!35660))))))

(assert (=> d!18637 (= (getValueByKey!135 (toList!732 lt!35797) (_1!1099 lt!35660)) e!51358)))

(declare-fun b!78603 () Bool)

(assert (=> b!78603 (= e!51359 None!139)))

(declare-fun b!78601 () Bool)

(assert (=> b!78601 (= e!51358 e!51359)))

(declare-fun c!12084 () Bool)

(assert (=> b!78601 (= c!12084 (and ((_ is Cons!1507) (toList!732 lt!35797)) (not (= (_1!1099 (h!2095 (toList!732 lt!35797))) (_1!1099 lt!35660)))))))

(assert (= (and d!18637 c!12083) b!78600))

(assert (= (and d!18637 (not c!12083)) b!78601))

(assert (= (and b!78601 c!12084) b!78602))

(assert (= (and b!78601 (not c!12084)) b!78603))

(declare-fun m!78837 () Bool)

(assert (=> b!78602 m!78837))

(assert (=> b!77787 d!18637))

(declare-fun d!18639 () Bool)

(declare-fun lt!36387 () Bool)

(assert (=> d!18639 (= lt!36387 (select (content!83 (toList!732 lt!35842)) lt!35659))))

(declare-fun e!51360 () Bool)

(assert (=> d!18639 (= lt!36387 e!51360)))

(declare-fun res!41139 () Bool)

(assert (=> d!18639 (=> (not res!41139) (not e!51360))))

(assert (=> d!18639 (= res!41139 ((_ is Cons!1507) (toList!732 lt!35842)))))

(assert (=> d!18639 (= (contains!740 (toList!732 lt!35842) lt!35659) lt!36387)))

(declare-fun b!78604 () Bool)

(declare-fun e!51361 () Bool)

(assert (=> b!78604 (= e!51360 e!51361)))

(declare-fun res!41140 () Bool)

(assert (=> b!78604 (=> res!41140 e!51361)))

(assert (=> b!78604 (= res!41140 (= (h!2095 (toList!732 lt!35842)) lt!35659))))

(declare-fun b!78605 () Bool)

(assert (=> b!78605 (= e!51361 (contains!740 (t!5148 (toList!732 lt!35842)) lt!35659))))

(assert (= (and d!18639 res!41139) b!78604))

(assert (= (and b!78604 (not res!41140)) b!78605))

(declare-fun m!78839 () Bool)

(assert (=> d!18639 m!78839))

(declare-fun m!78841 () Bool)

(assert (=> d!18639 m!78841))

(declare-fun m!78843 () Bool)

(assert (=> b!78605 m!78843))

(assert (=> b!77834 d!18639))

(assert (=> b!77908 d!18387))

(declare-fun b!78606 () Bool)

(declare-fun e!51362 () Option!141)

(assert (=> b!78606 (= e!51362 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35801)))))))

(declare-fun b!78608 () Bool)

(declare-fun e!51363 () Option!141)

(assert (=> b!78608 (= e!51363 (getValueByKey!135 (t!5148 (toList!732 lt!35801)) (_1!1099 lt!35659)))))

(declare-fun d!18641 () Bool)

(declare-fun c!12085 () Bool)

(assert (=> d!18641 (= c!12085 (and ((_ is Cons!1507) (toList!732 lt!35801)) (= (_1!1099 (h!2095 (toList!732 lt!35801))) (_1!1099 lt!35659))))))

(assert (=> d!18641 (= (getValueByKey!135 (toList!732 lt!35801) (_1!1099 lt!35659)) e!51362)))

(declare-fun b!78609 () Bool)

(assert (=> b!78609 (= e!51363 None!139)))

(declare-fun b!78607 () Bool)

(assert (=> b!78607 (= e!51362 e!51363)))

(declare-fun c!12086 () Bool)

(assert (=> b!78607 (= c!12086 (and ((_ is Cons!1507) (toList!732 lt!35801)) (not (= (_1!1099 (h!2095 (toList!732 lt!35801))) (_1!1099 lt!35659)))))))

(assert (= (and d!18641 c!12085) b!78606))

(assert (= (and d!18641 (not c!12085)) b!78607))

(assert (= (and b!78607 c!12086) b!78608))

(assert (= (and b!78607 (not c!12086)) b!78609))

(declare-fun m!78845 () Bool)

(assert (=> b!78608 m!78845))

(assert (=> b!77789 d!18641))

(declare-fun d!18643 () Bool)

(declare-fun e!51365 () Bool)

(assert (=> d!18643 e!51365))

(declare-fun res!41141 () Bool)

(assert (=> d!18643 (=> res!41141 e!51365)))

(declare-fun lt!36390 () Bool)

(assert (=> d!18643 (= res!41141 (not lt!36390))))

(declare-fun lt!36391 () Bool)

(assert (=> d!18643 (= lt!36390 lt!36391)))

(declare-fun lt!36388 () Unit!2242)

(declare-fun e!51364 () Unit!2242)

(assert (=> d!18643 (= lt!36388 e!51364)))

(declare-fun c!12087 () Bool)

(assert (=> d!18643 (= c!12087 lt!36391)))

(assert (=> d!18643 (= lt!36391 (containsKey!139 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18643 (= (contains!739 lt!35901 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36390)))

(declare-fun b!78610 () Bool)

(declare-fun lt!36389 () Unit!2242)

(assert (=> b!78610 (= e!51364 lt!36389)))

(assert (=> b!78610 (= lt!36389 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78610 (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78611 () Bool)

(declare-fun Unit!2276 () Unit!2242)

(assert (=> b!78611 (= e!51364 Unit!2276)))

(declare-fun b!78612 () Bool)

(assert (=> b!78612 (= e!51365 (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18643 c!12087) b!78610))

(assert (= (and d!18643 (not c!12087)) b!78611))

(assert (= (and d!18643 (not res!41141)) b!78612))

(declare-fun m!78847 () Bool)

(assert (=> d!18643 m!78847))

(declare-fun m!78849 () Bool)

(assert (=> b!78610 m!78849))

(assert (=> b!78610 m!77995))

(assert (=> b!78610 m!77995))

(declare-fun m!78851 () Bool)

(assert (=> b!78610 m!78851))

(assert (=> b!78612 m!77995))

(assert (=> b!78612 m!77995))

(assert (=> b!78612 m!78851))

(assert (=> bm!7072 d!18643))

(assert (=> b!77823 d!18431))

(declare-fun d!18645 () Bool)

(declare-fun e!51367 () Bool)

(assert (=> d!18645 e!51367))

(declare-fun res!41142 () Bool)

(assert (=> d!18645 (=> res!41142 e!51367)))

(declare-fun lt!36394 () Bool)

(assert (=> d!18645 (= res!41142 (not lt!36394))))

(declare-fun lt!36395 () Bool)

(assert (=> d!18645 (= lt!36394 lt!36395)))

(declare-fun lt!36392 () Unit!2242)

(declare-fun e!51366 () Unit!2242)

(assert (=> d!18645 (= lt!36392 e!51366)))

(declare-fun c!12088 () Bool)

(assert (=> d!18645 (= c!12088 lt!36395)))

(assert (=> d!18645 (= lt!36395 (containsKey!139 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835))))

(assert (=> d!18645 (= (contains!739 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)) lt!35835) lt!36394)))

(declare-fun b!78613 () Bool)

(declare-fun lt!36393 () Unit!2242)

(assert (=> b!78613 (= e!51366 lt!36393)))

(assert (=> b!78613 (= lt!36393 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835))))

(assert (=> b!78613 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835))))

(declare-fun b!78614 () Bool)

(declare-fun Unit!2277 () Unit!2242)

(assert (=> b!78614 (= e!51366 Unit!2277)))

(declare-fun b!78615 () Bool)

(assert (=> b!78615 (= e!51367 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835)))))

(assert (= (and d!18645 c!12088) b!78613))

(assert (= (and d!18645 (not c!12088)) b!78614))

(assert (= (and d!18645 (not res!41142)) b!78615))

(declare-fun m!78853 () Bool)

(assert (=> d!18645 m!78853))

(declare-fun m!78855 () Bool)

(assert (=> b!78613 m!78855))

(declare-fun m!78857 () Bool)

(assert (=> b!78613 m!78857))

(assert (=> b!78613 m!78857))

(declare-fun m!78859 () Bool)

(assert (=> b!78613 m!78859))

(assert (=> b!78615 m!78857))

(assert (=> b!78615 m!78857))

(assert (=> b!78615 m!78859))

(assert (=> b!77823 d!18645))

(declare-fun d!18647 () Bool)

(declare-fun e!51368 () Bool)

(assert (=> d!18647 e!51368))

(declare-fun res!41143 () Bool)

(assert (=> d!18647 (=> (not res!41143) (not e!51368))))

(declare-fun lt!36399 () ListLongMap!1433)

(assert (=> d!18647 (= res!41143 (contains!739 lt!36399 (_1!1099 (tuple2!2177 lt!35838 lt!35834))))))

(declare-fun lt!36397 () List!1511)

(assert (=> d!18647 (= lt!36399 (ListLongMap!1434 lt!36397))))

(declare-fun lt!36396 () Unit!2242)

(declare-fun lt!36398 () Unit!2242)

(assert (=> d!18647 (= lt!36396 lt!36398)))

(assert (=> d!18647 (= (getValueByKey!135 lt!36397 (_1!1099 (tuple2!2177 lt!35838 lt!35834))) (Some!140 (_2!1099 (tuple2!2177 lt!35838 lt!35834))))))

(assert (=> d!18647 (= lt!36398 (lemmaContainsTupThenGetReturnValue!55 lt!36397 (_1!1099 (tuple2!2177 lt!35838 lt!35834)) (_2!1099 (tuple2!2177 lt!35838 lt!35834))))))

(assert (=> d!18647 (= lt!36397 (insertStrictlySorted!58 (toList!732 lt!35836) (_1!1099 (tuple2!2177 lt!35838 lt!35834)) (_2!1099 (tuple2!2177 lt!35838 lt!35834))))))

(assert (=> d!18647 (= (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)) lt!36399)))

(declare-fun b!78616 () Bool)

(declare-fun res!41144 () Bool)

(assert (=> b!78616 (=> (not res!41144) (not e!51368))))

(assert (=> b!78616 (= res!41144 (= (getValueByKey!135 (toList!732 lt!36399) (_1!1099 (tuple2!2177 lt!35838 lt!35834))) (Some!140 (_2!1099 (tuple2!2177 lt!35838 lt!35834)))))))

(declare-fun b!78617 () Bool)

(assert (=> b!78617 (= e!51368 (contains!740 (toList!732 lt!36399) (tuple2!2177 lt!35838 lt!35834)))))

(assert (= (and d!18647 res!41143) b!78616))

(assert (= (and b!78616 res!41144) b!78617))

(declare-fun m!78861 () Bool)

(assert (=> d!18647 m!78861))

(declare-fun m!78863 () Bool)

(assert (=> d!18647 m!78863))

(declare-fun m!78865 () Bool)

(assert (=> d!18647 m!78865))

(declare-fun m!78867 () Bool)

(assert (=> d!18647 m!78867))

(declare-fun m!78869 () Bool)

(assert (=> b!78616 m!78869))

(declare-fun m!78871 () Bool)

(assert (=> b!78617 m!78871))

(assert (=> b!77823 d!18647))

(declare-fun d!18649 () Bool)

(assert (=> d!18649 (not (contains!739 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)) lt!35835))))

(declare-fun lt!36402 () Unit!2242)

(declare-fun choose!472 (ListLongMap!1433 (_ BitVec 64) V!2993 (_ BitVec 64)) Unit!2242)

(assert (=> d!18649 (= lt!36402 (choose!472 lt!35836 lt!35838 lt!35834 lt!35835))))

(declare-fun e!51371 () Bool)

(assert (=> d!18649 e!51371))

(declare-fun res!41147 () Bool)

(assert (=> d!18649 (=> (not res!41147) (not e!51371))))

(assert (=> d!18649 (= res!41147 (not (contains!739 lt!35836 lt!35835)))))

(assert (=> d!18649 (= (addStillNotContains!29 lt!35836 lt!35838 lt!35834 lt!35835) lt!36402)))

(declare-fun b!78621 () Bool)

(assert (=> b!78621 (= e!51371 (not (= lt!35838 lt!35835)))))

(assert (= (and d!18649 res!41147) b!78621))

(assert (=> d!18649 m!77761))

(assert (=> d!18649 m!77761))

(assert (=> d!18649 m!77763))

(declare-fun m!78873 () Bool)

(assert (=> d!18649 m!78873))

(declare-fun m!78875 () Bool)

(assert (=> d!18649 m!78875))

(assert (=> b!77823 d!18649))

(declare-fun d!18651 () Bool)

(declare-fun e!51372 () Bool)

(assert (=> d!18651 e!51372))

(declare-fun res!41148 () Bool)

(assert (=> d!18651 (=> (not res!41148) (not e!51372))))

(declare-fun lt!36406 () ListLongMap!1433)

(assert (=> d!18651 (= res!41148 (contains!739 lt!36406 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!36404 () List!1511)

(assert (=> d!18651 (= lt!36406 (ListLongMap!1434 lt!36404))))

(declare-fun lt!36403 () Unit!2242)

(declare-fun lt!36405 () Unit!2242)

(assert (=> d!18651 (= lt!36403 lt!36405)))

(assert (=> d!18651 (= (getValueByKey!135 lt!36404 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18651 (= lt!36405 (lemmaContainsTupThenGetReturnValue!55 lt!36404 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18651 (= lt!36404 (insertStrictlySorted!58 (toList!732 call!7058) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18651 (= (+!103 call!7058 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!36406)))

(declare-fun b!78622 () Bool)

(declare-fun res!41149 () Bool)

(assert (=> b!78622 (=> (not res!41149) (not e!51372))))

(assert (=> b!78622 (= res!41149 (= (getValueByKey!135 (toList!732 lt!36406) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!78623 () Bool)

(assert (=> b!78623 (= e!51372 (contains!740 (toList!732 lt!36406) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!18651 res!41148) b!78622))

(assert (= (and b!78622 res!41149) b!78623))

(declare-fun m!78877 () Bool)

(assert (=> d!18651 m!78877))

(declare-fun m!78879 () Bool)

(assert (=> d!18651 m!78879))

(declare-fun m!78881 () Bool)

(assert (=> d!18651 m!78881))

(declare-fun m!78883 () Bool)

(assert (=> d!18651 m!78883))

(declare-fun m!78885 () Bool)

(assert (=> b!78622 m!78885))

(declare-fun m!78887 () Bool)

(assert (=> b!78623 m!78887))

(assert (=> b!77823 d!18651))

(declare-fun condMapEmpty!3315 () Bool)

(declare-fun mapDefault!3315 () ValueCell!911)

(assert (=> mapNonEmpty!3314 (= condMapEmpty!3315 (= mapRest!3314 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3315)))))

(declare-fun e!51373 () Bool)

(declare-fun mapRes!3315 () Bool)

(assert (=> mapNonEmpty!3314 (= tp!8786 (and e!51373 mapRes!3315))))

(declare-fun mapNonEmpty!3315 () Bool)

(declare-fun tp!8787 () Bool)

(declare-fun e!51374 () Bool)

(assert (=> mapNonEmpty!3315 (= mapRes!3315 (and tp!8787 e!51374))))

(declare-fun mapRest!3315 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapValue!3315 () ValueCell!911)

(declare-fun mapKey!3315 () (_ BitVec 32))

(assert (=> mapNonEmpty!3315 (= mapRest!3314 (store mapRest!3315 mapKey!3315 mapValue!3315))))

(declare-fun b!78624 () Bool)

(assert (=> b!78624 (= e!51374 tp_is_empty!2509)))

(declare-fun b!78625 () Bool)

(assert (=> b!78625 (= e!51373 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3315 () Bool)

(assert (=> mapIsEmpty!3315 mapRes!3315))

(assert (= (and mapNonEmpty!3314 condMapEmpty!3315) mapIsEmpty!3315))

(assert (= (and mapNonEmpty!3314 (not condMapEmpty!3315)) mapNonEmpty!3315))

(assert (= (and mapNonEmpty!3315 ((_ is ValueCellFull!911) mapValue!3315)) b!78624))

(assert (= (and mapNonEmpty!3314 ((_ is ValueCellFull!911) mapDefault!3315)) b!78625))

(declare-fun m!78889 () Bool)

(assert (=> mapNonEmpty!3315 m!78889))

(declare-fun condMapEmpty!3316 () Bool)

(declare-fun mapDefault!3316 () ValueCell!911)

(assert (=> mapNonEmpty!3313 (= condMapEmpty!3316 (= mapRest!3313 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3316)))))

(declare-fun e!51375 () Bool)

(declare-fun mapRes!3316 () Bool)

(assert (=> mapNonEmpty!3313 (= tp!8785 (and e!51375 mapRes!3316))))

(declare-fun mapNonEmpty!3316 () Bool)

(declare-fun tp!8788 () Bool)

(declare-fun e!51376 () Bool)

(assert (=> mapNonEmpty!3316 (= mapRes!3316 (and tp!8788 e!51376))))

(declare-fun mapValue!3316 () ValueCell!911)

(declare-fun mapKey!3316 () (_ BitVec 32))

(declare-fun mapRest!3316 () (Array (_ BitVec 32) ValueCell!911))

(assert (=> mapNonEmpty!3316 (= mapRest!3313 (store mapRest!3316 mapKey!3316 mapValue!3316))))

(declare-fun b!78626 () Bool)

(assert (=> b!78626 (= e!51376 tp_is_empty!2509)))

(declare-fun b!78627 () Bool)

(assert (=> b!78627 (= e!51375 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3316 () Bool)

(assert (=> mapIsEmpty!3316 mapRes!3316))

(assert (= (and mapNonEmpty!3313 condMapEmpty!3316) mapIsEmpty!3316))

(assert (= (and mapNonEmpty!3313 (not condMapEmpty!3316)) mapNonEmpty!3316))

(assert (= (and mapNonEmpty!3316 ((_ is ValueCellFull!911) mapValue!3316)) b!78626))

(assert (= (and mapNonEmpty!3313 ((_ is ValueCellFull!911) mapDefault!3316)) b!78627))

(declare-fun m!78891 () Bool)

(assert (=> mapNonEmpty!3316 m!78891))

(declare-fun b_lambda!3499 () Bool)

(assert (= b_lambda!3493 (or (and b!77645 b_free!2185) (and b!77630 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))) b_lambda!3499)))

(declare-fun b_lambda!3501 () Bool)

(assert (= b_lambda!3489 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3501)))

(declare-fun b_lambda!3503 () Bool)

(assert (= b_lambda!3495 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3503)))

(declare-fun b_lambda!3505 () Bool)

(assert (= b_lambda!3497 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3505)))

(declare-fun b_lambda!3507 () Bool)

(assert (= b_lambda!3491 (or (and b!77645 b_free!2185) (and b!77630 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))) b_lambda!3507)))

(check-sat (not b!78512) (not b!78197) (not b!78539) (not d!18539) (not b!78356) (not b_next!2187) (not b!78367) (not d!18583) (not d!18625) (not bm!7220) (not d!18567) (not d!18493) (not bm!7191) (not b!78535) (not d!18601) (not b!78523) (not b!78124) (not d!18471) (not b!78422) (not b!78443) (not b!78100) (not b!78616) (not bm!7198) (not b!78447) (not b!78253) (not b!78471) (not b!78599) (not b!78349) (not b!78622) (not d!18505) (not b!78408) (not d!18497) (not b!78226) (not d!18509) (not d!18437) (not b!78246) (not b!78571) (not b!78164) (not bm!7214) (not d!18429) (not b!78088) (not d!18633) (not b!78496) (not b!78480) (not b!78374) (not b!78528) (not b!78516) (not b!78172) (not b!78254) (not b_lambda!3501) (not bm!7218) (not b!78591) (not b!78206) (not d!18465) (not b!78282) (not bm!7208) (not d!18561) (not b!78257) (not b!78104) (not bm!7190) (not b!78221) (not b!78474) (not b!78158) (not d!18531) (not b!78406) (not b!78524) (not b!78545) (not b!78341) (not b!78485) (not b!78277) (not b!78427) (not b!78504) (not b!78401) (not d!18501) (not b!78372) (not b!78218) (not d!18571) (not bm!7178) (not d!18463) (not b!78247) (not b!78588) (not b!78561) (not b!78220) (not b!78185) (not bm!7212) (not b!78376) (not b!78569) (not b!78229) (not d!18617) (not b!78430) (not d!18577) (not d!18499) (not d!18555) (not d!18483) (not bm!7174) (not b!78475) (not b_lambda!3475) (not bm!7157) (not b!78350) (not b!78432) (not b!78365) (not b!78560) (not d!18415) tp_is_empty!2509 (not b!78136) (not b!78209) (not b!78375) (not b_lambda!3487) (not b!78555) (not b!78510) (not b!78419) (not d!18563) (not mapNonEmpty!3315) (not d!18615) (not b!78121) (not b!78441) (not bm!7168) (not b!78424) (not b!78593) (not bm!7153) (not b!78199) (not d!18461) (not bm!7177) b_and!4813 (not b!78095) (not d!18529) (not b!78579) (not d!18451) (not b!78265) (not b!78409) (not d!18441) (not b!78167) (not d!18425) (not b!78473) (not d!18453) (not d!18455) (not d!18551) (not b!78212) (not mapNonEmpty!3316) (not d!18565) (not b!78129) (not d!18489) (not b!78231) (not b!78243) (not b!78203) (not b!78256) (not b!78122) (not d!18589) (not b!78605) (not b!78258) (not b!78135) (not d!18495) (not d!18403) (not bm!7155) (not b!78438) (not d!18503) (not b!78223) (not b!78460) (not b!78237) (not b!78580) (not b!78227) (not b!78225) (not b!78166) (not b!78442) (not b!78086) (not b!78590) (not b!78574) (not d!18579) (not b_lambda!3483) (not d!18627) (not b!78210) (not b!78126) (not d!18409) (not b!78238) (not b_lambda!3499) (not d!18445) (not d!18621) (not b!78249) (not b!78453) (not b!78274) (not d!18557) (not b!78344) (not b!78548) (not d!18629) (not b!78175) (not d!18459) (not d!18407) (not b!78120) (not d!18535) (not d!18649) (not b!78486) (not b!78219) (not b!78354) (not d!18575) (not b!78358) (not b!78478) (not b!78117) (not b!78429) (not d!18485) (not b!78448) (not d!18475) (not d!18559) (not b!78494) (not b!78403) (not b!78411) (not d!18467) (not b!78083) (not bm!7199) (not d!18639) (not d!18457) (not b!78169) (not b!78421) (not b!78371) (not b!78445) (not b!78084) (not d!18635) (not b!78515) (not b!78224) (not d!18545) (not b_lambda!3485) (not d!18597) (not b!78444) (not d!18595) (not b!78266) (not b_next!2185) (not b!78280) (not bm!7200) (not b!78183) (not b!78501) (not d!18525) (not d!18523) (not b!78542) (not b!78123) (not d!18547) (not d!18603) (not bm!7176) (not b!78082) (not bm!7224) (not b!78177) (not d!18479) (not b!78483) (not d!18433) (not d!18481) (not b!78096) (not b!78270) (not b!78251) (not b!78612) (not bm!7192) (not b!78615) (not b!78514) (not b!78537) (not d!18541) (not b!78115) (not bm!7215) (not b!78572) (not b!78114) (not b!78211) (not bm!7165) (not b!78417) (not b!78216) (not b_lambda!3503) (not d!18477) (not d!18469) (not d!18423) (not d!18645) (not b!78353) (not b!78551) (not b!78610) (not b!78440) (not b!78222) (not b!78369) (not bm!7216) (not d!18643) (not b!78553) (not b!78558) (not b_lambda!3505) (not b!78080) (not b!78195) (not d!18511) (not b!78373) (not b!78198) (not b!78544) (not b!78345) (not b!78228) (not b!78174) (not d!18581) (not b!78207) (not d!18651) (not d!18473) (not b!78200) (not d!18521) (not d!18421) (not b!78201) (not d!18611) b_and!4815 (not d!18513) (not d!18487) (not b!78446) (not bm!7180) (not b!78623) (not d!18647) (not b!78577) (not b!78477) (not b!78497) (not bm!7209) (not d!18517) (not b!78498) (not b!78364) (not d!18439) (not b!78295) (not b!78613) (not b!78602) (not d!18587) (not b!78617) (not d!18519) (not b!78608) (not d!18533) (not b!78336) (not b!78532) (not b!78217) (not d!18447) (not b!78240) (not d!18411) (not d!18527) (not b!78563) (not b!78087) (not b!78582) (not b!78119) (not b!78488) (not b_lambda!3507) (not bm!7221) (not d!18537) (not d!18515) (not bm!7203) (not bm!7154) (not bm!7173) (not b!78230))
(check-sat b_and!4813 b_and!4815 (not b_next!2185) (not b_next!2187))
(get-model)

(declare-fun d!18653 () Bool)

(declare-fun lt!36407 () Bool)

(assert (=> d!18653 (= lt!36407 (select (content!83 lt!35795) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun e!51377 () Bool)

(assert (=> d!18653 (= lt!36407 e!51377)))

(declare-fun res!41150 () Bool)

(assert (=> d!18653 (=> (not res!41150) (not e!51377))))

(assert (=> d!18653 (= res!41150 ((_ is Cons!1507) lt!35795))))

(assert (=> d!18653 (= (contains!740 lt!35795 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))) lt!36407)))

(declare-fun b!78628 () Bool)

(declare-fun e!51378 () Bool)

(assert (=> b!78628 (= e!51377 e!51378)))

(declare-fun res!41151 () Bool)

(assert (=> b!78628 (=> res!41151 e!51378)))

(assert (=> b!78628 (= res!41151 (= (h!2095 lt!35795) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun b!78629 () Bool)

(assert (=> b!78629 (= e!51378 (contains!740 (t!5148 lt!35795) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!18653 res!41150) b!78628))

(assert (= (and b!78628 (not res!41151)) b!78629))

(declare-fun m!78893 () Bool)

(assert (=> d!18653 m!78893))

(declare-fun m!78895 () Bool)

(assert (=> d!18653 m!78895))

(declare-fun m!78897 () Bool)

(assert (=> b!78629 m!78897))

(assert (=> b!78486 d!18653))

(declare-fun d!18655 () Bool)

(declare-fun res!41156 () Bool)

(declare-fun e!51383 () Bool)

(assert (=> d!18655 (=> res!41156 e!51383)))

(assert (=> d!18655 (= res!41156 (or ((_ is Nil!1508) lt!36054) ((_ is Nil!1508) (t!5148 lt!36054))))))

(assert (=> d!18655 (= (isStrictlySorted!290 lt!36054) e!51383)))

(declare-fun b!78634 () Bool)

(declare-fun e!51384 () Bool)

(assert (=> b!78634 (= e!51383 e!51384)))

(declare-fun res!41157 () Bool)

(assert (=> b!78634 (=> (not res!41157) (not e!51384))))

(assert (=> b!78634 (= res!41157 (bvslt (_1!1099 (h!2095 lt!36054)) (_1!1099 (h!2095 (t!5148 lt!36054)))))))

(declare-fun b!78635 () Bool)

(assert (=> b!78635 (= e!51384 (isStrictlySorted!290 (t!5148 lt!36054)))))

(assert (= (and d!18655 (not res!41156)) b!78634))

(assert (= (and b!78634 res!41157) b!78635))

(declare-fun m!78899 () Bool)

(assert (=> b!78635 m!78899))

(assert (=> d!18439 d!18655))

(declare-fun d!18657 () Bool)

(declare-fun res!41158 () Bool)

(declare-fun e!51385 () Bool)

(assert (=> d!18657 (=> res!41158 e!51385)))

(assert (=> d!18657 (= res!41158 (or ((_ is Nil!1508) (toList!732 lt!35662)) ((_ is Nil!1508) (t!5148 (toList!732 lt!35662)))))))

(assert (=> d!18657 (= (isStrictlySorted!290 (toList!732 lt!35662)) e!51385)))

(declare-fun b!78636 () Bool)

(declare-fun e!51386 () Bool)

(assert (=> b!78636 (= e!51385 e!51386)))

(declare-fun res!41159 () Bool)

(assert (=> b!78636 (=> (not res!41159) (not e!51386))))

(assert (=> b!78636 (= res!41159 (bvslt (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 (h!2095 (t!5148 (toList!732 lt!35662))))))))

(declare-fun b!78637 () Bool)

(assert (=> b!78637 (= e!51386 (isStrictlySorted!290 (t!5148 (toList!732 lt!35662))))))

(assert (= (and d!18657 (not res!41158)) b!78636))

(assert (= (and b!78636 res!41159) b!78637))

(declare-fun m!78901 () Bool)

(assert (=> b!78637 m!78901))

(assert (=> d!18439 d!18657))

(declare-fun b!78638 () Bool)

(declare-fun e!51387 () Option!141)

(assert (=> b!78638 (= e!51387 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36095)))))))

(declare-fun e!51388 () Option!141)

(declare-fun b!78640 () Bool)

(assert (=> b!78640 (= e!51388 (getValueByKey!135 (t!5148 (toList!732 lt!36095)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun d!18659 () Bool)

(declare-fun c!12089 () Bool)

(assert (=> d!18659 (= c!12089 (and ((_ is Cons!1507) (toList!732 lt!36095)) (= (_1!1099 (h!2095 (toList!732 lt!36095))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!18659 (= (getValueByKey!135 (toList!732 lt!36095) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) e!51387)))

(declare-fun b!78641 () Bool)

(assert (=> b!78641 (= e!51388 None!139)))

(declare-fun b!78639 () Bool)

(assert (=> b!78639 (= e!51387 e!51388)))

(declare-fun c!12090 () Bool)

(assert (=> b!78639 (= c!12090 (and ((_ is Cons!1507) (toList!732 lt!36095)) (not (= (_1!1099 (h!2095 (toList!732 lt!36095))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!18659 c!12089) b!78638))

(assert (= (and d!18659 (not c!12089)) b!78639))

(assert (= (and b!78639 c!12090) b!78640))

(assert (= (and b!78639 (not c!12090)) b!78641))

(declare-fun m!78903 () Bool)

(assert (=> b!78640 m!78903))

(assert (=> b!78226 d!18659))

(declare-fun d!18661 () Bool)

(declare-fun res!41160 () Bool)

(declare-fun e!51389 () Bool)

(assert (=> d!18661 (=> res!41160 e!51389)))

(assert (=> d!18661 (= res!41160 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35898)))))

(assert (=> d!18661 (= (containsKey!139 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898) e!51389)))

(declare-fun b!78642 () Bool)

(declare-fun e!51390 () Bool)

(assert (=> b!78642 (= e!51389 e!51390)))

(declare-fun res!41161 () Bool)

(assert (=> b!78642 (=> (not res!41161) (not e!51390))))

(assert (=> b!78642 (= res!41161 (and (or (not ((_ is Cons!1507) (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) (bvsle (_1!1099 (h!2095 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35898)) ((_ is Cons!1507) (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (bvslt (_1!1099 (h!2095 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35898)))))

(declare-fun b!78643 () Bool)

(assert (=> b!78643 (= e!51390 (containsKey!139 (t!5148 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) lt!35898))))

(assert (= (and d!18661 (not res!41160)) b!78642))

(assert (= (and b!78642 res!41161) b!78643))

(declare-fun m!78905 () Bool)

(assert (=> b!78643 m!78905))

(assert (=> d!18525 d!18661))

(declare-fun d!18663 () Bool)

(declare-fun res!41162 () Bool)

(declare-fun e!51391 () Bool)

(assert (=> d!18663 (=> (not res!41162) (not e!51391))))

(assert (=> d!18663 (= res!41162 (simpleValid!55 (_2!1098 lt!36218)))))

(assert (=> d!18663 (= (valid!321 (_2!1098 lt!36218)) e!51391)))

(declare-fun b!78644 () Bool)

(declare-fun res!41163 () Bool)

(assert (=> b!78644 (=> (not res!41163) (not e!51391))))

(assert (=> b!78644 (= res!41163 (= (arrayCountValidKeys!0 (_keys!3930 (_2!1098 lt!36218)) #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!36218)))) (_size!414 (_2!1098 lt!36218))))))

(declare-fun b!78645 () Bool)

(declare-fun res!41164 () Bool)

(assert (=> b!78645 (=> (not res!41164) (not e!51391))))

(assert (=> b!78645 (= res!41164 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3930 (_2!1098 lt!36218)) (mask!6266 (_2!1098 lt!36218))))))

(declare-fun b!78646 () Bool)

(assert (=> b!78646 (= e!51391 (arrayNoDuplicates!0 (_keys!3930 (_2!1098 lt!36218)) #b00000000000000000000000000000000 Nil!1507))))

(assert (= (and d!18663 res!41162) b!78644))

(assert (= (and b!78644 res!41163) b!78645))

(assert (= (and b!78645 res!41164) b!78646))

(declare-fun m!78907 () Bool)

(assert (=> d!18663 m!78907))

(declare-fun m!78909 () Bool)

(assert (=> b!78644 m!78909))

(declare-fun m!78911 () Bool)

(assert (=> b!78645 m!78911))

(declare-fun m!78913 () Bool)

(assert (=> b!78646 m!78913))

(assert (=> b!78344 d!18663))

(declare-fun d!18665 () Bool)

(assert (=> d!18665 (= (get!1180 (getValueByKey!135 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2590 (getValueByKey!135 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18635 d!18665))

(declare-fun b!78647 () Bool)

(declare-fun e!51392 () Option!141)

(assert (=> b!78647 (= e!51392 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35837)))))))

(declare-fun e!51393 () Option!141)

(declare-fun b!78649 () Bool)

(assert (=> b!78649 (= e!51393 (getValueByKey!135 (t!5148 (toList!732 lt!35837)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!12091 () Bool)

(declare-fun d!18667 () Bool)

(assert (=> d!18667 (= c!12091 (and ((_ is Cons!1507) (toList!732 lt!35837)) (= (_1!1099 (h!2095 (toList!732 lt!35837))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18667 (= (getValueByKey!135 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!51392)))

(declare-fun b!78650 () Bool)

(assert (=> b!78650 (= e!51393 None!139)))

(declare-fun b!78648 () Bool)

(assert (=> b!78648 (= e!51392 e!51393)))

(declare-fun c!12092 () Bool)

(assert (=> b!78648 (= c!12092 (and ((_ is Cons!1507) (toList!732 lt!35837)) (not (= (_1!1099 (h!2095 (toList!732 lt!35837))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!18667 c!12091) b!78647))

(assert (= (and d!18667 (not c!12091)) b!78648))

(assert (= (and b!78648 c!12092) b!78649))

(assert (= (and b!78648 (not c!12092)) b!78650))

(assert (=> b!78649 m!77747))

(declare-fun m!78915 () Bool)

(assert (=> b!78649 m!78915))

(assert (=> d!18635 d!18667))

(declare-fun d!18669 () Bool)

(declare-fun res!41168 () Bool)

(declare-fun e!51394 () Bool)

(assert (=> d!18669 (=> (not res!41168) (not e!51394))))

(assert (=> d!18669 (= res!41168 (validMask!0 (mask!6266 (_2!1098 lt!35994))))))

(assert (=> d!18669 (= (simpleValid!55 (_2!1098 lt!35994)) e!51394)))

(declare-fun b!78652 () Bool)

(declare-fun res!41166 () Bool)

(assert (=> b!78652 (=> (not res!41166) (not e!51394))))

(assert (=> b!78652 (= res!41166 (bvsge (size!2130 (_2!1098 lt!35994)) (_size!414 (_2!1098 lt!35994))))))

(declare-fun b!78651 () Bool)

(declare-fun res!41167 () Bool)

(assert (=> b!78651 (=> (not res!41167) (not e!51394))))

(assert (=> b!78651 (= res!41167 (and (= (size!2125 (_values!2254 (_2!1098 lt!35994))) (bvadd (mask!6266 (_2!1098 lt!35994)) #b00000000000000000000000000000001)) (= (size!2124 (_keys!3930 (_2!1098 lt!35994))) (size!2125 (_values!2254 (_2!1098 lt!35994)))) (bvsge (_size!414 (_2!1098 lt!35994)) #b00000000000000000000000000000000) (bvsle (_size!414 (_2!1098 lt!35994)) (bvadd (mask!6266 (_2!1098 lt!35994)) #b00000000000000000000000000000001))))))

(declare-fun b!78653 () Bool)

(declare-fun res!41165 () Bool)

(assert (=> b!78653 (=> (not res!41165) (not e!51394))))

(assert (=> b!78653 (= res!41165 (= (size!2130 (_2!1098 lt!35994)) (bvadd (_size!414 (_2!1098 lt!35994)) (bvsdiv (bvadd (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!78654 () Bool)

(assert (=> b!78654 (= e!51394 (and (bvsge (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000000) (bvsle (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000011) (bvsge (_vacant!414 (_2!1098 lt!35994)) #b00000000000000000000000000000000)))))

(assert (= (and d!18669 res!41168) b!78651))

(assert (= (and b!78651 res!41167) b!78652))

(assert (= (and b!78652 res!41166) b!78653))

(assert (= (and b!78653 res!41165) b!78654))

(declare-fun m!78917 () Bool)

(assert (=> d!18669 m!78917))

(declare-fun m!78919 () Bool)

(assert (=> b!78652 m!78919))

(assert (=> b!78653 m!78919))

(assert (=> d!18459 d!18669))

(declare-fun d!18671 () Bool)

(declare-fun res!41169 () Bool)

(declare-fun e!51395 () Bool)

(assert (=> d!18671 (=> res!41169 e!51395)))

(assert (=> d!18671 (= res!41169 (or ((_ is Nil!1508) lt!36376) ((_ is Nil!1508) (t!5148 lt!36376))))))

(assert (=> d!18671 (= (isStrictlySorted!290 lt!36376) e!51395)))

(declare-fun b!78655 () Bool)

(declare-fun e!51396 () Bool)

(assert (=> b!78655 (= e!51395 e!51396)))

(declare-fun res!41170 () Bool)

(assert (=> b!78655 (=> (not res!41170) (not e!51396))))

(assert (=> b!78655 (= res!41170 (bvslt (_1!1099 (h!2095 lt!36376)) (_1!1099 (h!2095 (t!5148 lt!36376)))))))

(declare-fun b!78656 () Bool)

(assert (=> b!78656 (= e!51396 (isStrictlySorted!290 (t!5148 lt!36376)))))

(assert (= (and d!18671 (not res!41169)) b!78655))

(assert (= (and b!78655 res!41170) b!78656))

(declare-fun m!78921 () Bool)

(assert (=> b!78656 m!78921))

(assert (=> d!18617 d!18671))

(declare-fun d!18673 () Bool)

(declare-fun res!41171 () Bool)

(declare-fun e!51397 () Bool)

(assert (=> d!18673 (=> res!41171 e!51397)))

(assert (=> d!18673 (= res!41171 (or ((_ is Nil!1508) (toList!732 lt!35657)) ((_ is Nil!1508) (t!5148 (toList!732 lt!35657)))))))

(assert (=> d!18673 (= (isStrictlySorted!290 (toList!732 lt!35657)) e!51397)))

(declare-fun b!78657 () Bool)

(declare-fun e!51398 () Bool)

(assert (=> b!78657 (= e!51397 e!51398)))

(declare-fun res!41172 () Bool)

(assert (=> b!78657 (=> (not res!41172) (not e!51398))))

(assert (=> b!78657 (= res!41172 (bvslt (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 (h!2095 (t!5148 (toList!732 lt!35657))))))))

(declare-fun b!78658 () Bool)

(assert (=> b!78658 (= e!51398 (isStrictlySorted!290 (t!5148 (toList!732 lt!35657))))))

(assert (= (and d!18673 (not res!41171)) b!78657))

(assert (= (and b!78657 res!41172) b!78658))

(declare-fun m!78923 () Bool)

(assert (=> b!78658 m!78923))

(assert (=> d!18617 d!18673))

(declare-fun d!18675 () Bool)

(assert (=> d!18675 (= (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78218 d!18675))

(declare-fun d!18677 () Bool)

(declare-fun lt!36408 () Bool)

(assert (=> d!18677 (= lt!36408 (select (content!83 (toList!732 lt!36303)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!51399 () Bool)

(assert (=> d!18677 (= lt!36408 e!51399)))

(declare-fun res!41173 () Bool)

(assert (=> d!18677 (=> (not res!41173) (not e!51399))))

(assert (=> d!18677 (= res!41173 ((_ is Cons!1507) (toList!732 lt!36303)))))

(assert (=> d!18677 (= (contains!740 (toList!732 lt!36303) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36408)))

(declare-fun b!78659 () Bool)

(declare-fun e!51400 () Bool)

(assert (=> b!78659 (= e!51399 e!51400)))

(declare-fun res!41174 () Bool)

(assert (=> b!78659 (=> res!41174 e!51400)))

(assert (=> b!78659 (= res!41174 (= (h!2095 (toList!732 lt!36303)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!78660 () Bool)

(assert (=> b!78660 (= e!51400 (contains!740 (t!5148 (toList!732 lt!36303)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18677 res!41173) b!78659))

(assert (= (and b!78659 (not res!41174)) b!78660))

(declare-fun m!78925 () Bool)

(assert (=> d!18677 m!78925))

(declare-fun m!78927 () Bool)

(assert (=> d!18677 m!78927))

(declare-fun m!78929 () Bool)

(assert (=> b!78660 m!78929))

(assert (=> b!78442 d!18677))

(declare-fun d!18679 () Bool)

(declare-fun e!51402 () Bool)

(assert (=> d!18679 e!51402))

(declare-fun res!41175 () Bool)

(assert (=> d!18679 (=> res!41175 e!51402)))

(declare-fun lt!36411 () Bool)

(assert (=> d!18679 (= res!41175 (not lt!36411))))

(declare-fun lt!36412 () Bool)

(assert (=> d!18679 (= lt!36411 lt!36412)))

(declare-fun lt!36409 () Unit!2242)

(declare-fun e!51401 () Unit!2242)

(assert (=> d!18679 (= lt!36409 e!51401)))

(declare-fun c!12093 () Bool)

(assert (=> d!18679 (= c!12093 lt!36412)))

(assert (=> d!18679 (= lt!36412 (containsKey!139 (toList!732 lt!36399) (_1!1099 (tuple2!2177 lt!35838 lt!35834))))))

(assert (=> d!18679 (= (contains!739 lt!36399 (_1!1099 (tuple2!2177 lt!35838 lt!35834))) lt!36411)))

(declare-fun b!78661 () Bool)

(declare-fun lt!36410 () Unit!2242)

(assert (=> b!78661 (= e!51401 lt!36410)))

(assert (=> b!78661 (= lt!36410 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36399) (_1!1099 (tuple2!2177 lt!35838 lt!35834))))))

(assert (=> b!78661 (isDefined!89 (getValueByKey!135 (toList!732 lt!36399) (_1!1099 (tuple2!2177 lt!35838 lt!35834))))))

(declare-fun b!78662 () Bool)

(declare-fun Unit!2278 () Unit!2242)

(assert (=> b!78662 (= e!51401 Unit!2278)))

(declare-fun b!78663 () Bool)

(assert (=> b!78663 (= e!51402 (isDefined!89 (getValueByKey!135 (toList!732 lt!36399) (_1!1099 (tuple2!2177 lt!35838 lt!35834)))))))

(assert (= (and d!18679 c!12093) b!78661))

(assert (= (and d!18679 (not c!12093)) b!78662))

(assert (= (and d!18679 (not res!41175)) b!78663))

(declare-fun m!78931 () Bool)

(assert (=> d!18679 m!78931))

(declare-fun m!78933 () Bool)

(assert (=> b!78661 m!78933))

(assert (=> b!78661 m!78869))

(assert (=> b!78661 m!78869))

(declare-fun m!78935 () Bool)

(assert (=> b!78661 m!78935))

(assert (=> b!78663 m!78869))

(assert (=> b!78663 m!78869))

(assert (=> b!78663 m!78935))

(assert (=> d!18647 d!18679))

(declare-fun b!78664 () Bool)

(declare-fun e!51403 () Option!141)

(assert (=> b!78664 (= e!51403 (Some!140 (_2!1099 (h!2095 lt!36397))))))

(declare-fun e!51404 () Option!141)

(declare-fun b!78666 () Bool)

(assert (=> b!78666 (= e!51404 (getValueByKey!135 (t!5148 lt!36397) (_1!1099 (tuple2!2177 lt!35838 lt!35834))))))

(declare-fun c!12094 () Bool)

(declare-fun d!18681 () Bool)

(assert (=> d!18681 (= c!12094 (and ((_ is Cons!1507) lt!36397) (= (_1!1099 (h!2095 lt!36397)) (_1!1099 (tuple2!2177 lt!35838 lt!35834)))))))

(assert (=> d!18681 (= (getValueByKey!135 lt!36397 (_1!1099 (tuple2!2177 lt!35838 lt!35834))) e!51403)))

(declare-fun b!78667 () Bool)

(assert (=> b!78667 (= e!51404 None!139)))

(declare-fun b!78665 () Bool)

(assert (=> b!78665 (= e!51403 e!51404)))

(declare-fun c!12095 () Bool)

(assert (=> b!78665 (= c!12095 (and ((_ is Cons!1507) lt!36397) (not (= (_1!1099 (h!2095 lt!36397)) (_1!1099 (tuple2!2177 lt!35838 lt!35834))))))))

(assert (= (and d!18681 c!12094) b!78664))

(assert (= (and d!18681 (not c!12094)) b!78665))

(assert (= (and b!78665 c!12095) b!78666))

(assert (= (and b!78665 (not c!12095)) b!78667))

(declare-fun m!78937 () Bool)

(assert (=> b!78666 m!78937))

(assert (=> d!18647 d!18681))

(declare-fun d!18683 () Bool)

(assert (=> d!18683 (= (getValueByKey!135 lt!36397 (_1!1099 (tuple2!2177 lt!35838 lt!35834))) (Some!140 (_2!1099 (tuple2!2177 lt!35838 lt!35834))))))

(declare-fun lt!36413 () Unit!2242)

(assert (=> d!18683 (= lt!36413 (choose!462 lt!36397 (_1!1099 (tuple2!2177 lt!35838 lt!35834)) (_2!1099 (tuple2!2177 lt!35838 lt!35834))))))

(declare-fun e!51405 () Bool)

(assert (=> d!18683 e!51405))

(declare-fun res!41176 () Bool)

(assert (=> d!18683 (=> (not res!41176) (not e!51405))))

(assert (=> d!18683 (= res!41176 (isStrictlySorted!290 lt!36397))))

(assert (=> d!18683 (= (lemmaContainsTupThenGetReturnValue!55 lt!36397 (_1!1099 (tuple2!2177 lt!35838 lt!35834)) (_2!1099 (tuple2!2177 lt!35838 lt!35834))) lt!36413)))

(declare-fun b!78668 () Bool)

(declare-fun res!41177 () Bool)

(assert (=> b!78668 (=> (not res!41177) (not e!51405))))

(assert (=> b!78668 (= res!41177 (containsKey!139 lt!36397 (_1!1099 (tuple2!2177 lt!35838 lt!35834))))))

(declare-fun b!78669 () Bool)

(assert (=> b!78669 (= e!51405 (contains!740 lt!36397 (tuple2!2177 (_1!1099 (tuple2!2177 lt!35838 lt!35834)) (_2!1099 (tuple2!2177 lt!35838 lt!35834)))))))

(assert (= (and d!18683 res!41176) b!78668))

(assert (= (and b!78668 res!41177) b!78669))

(assert (=> d!18683 m!78863))

(declare-fun m!78939 () Bool)

(assert (=> d!18683 m!78939))

(declare-fun m!78941 () Bool)

(assert (=> d!18683 m!78941))

(declare-fun m!78943 () Bool)

(assert (=> b!78668 m!78943))

(declare-fun m!78945 () Bool)

(assert (=> b!78669 m!78945))

(assert (=> d!18647 d!18683))

(declare-fun b!78670 () Bool)

(declare-fun e!51407 () List!1511)

(declare-fun call!7230 () List!1511)

(assert (=> b!78670 (= e!51407 call!7230)))

(declare-fun b!78671 () Bool)

(declare-fun res!41179 () Bool)

(declare-fun e!51409 () Bool)

(assert (=> b!78671 (=> (not res!41179) (not e!51409))))

(declare-fun lt!36414 () List!1511)

(assert (=> b!78671 (= res!41179 (containsKey!139 lt!36414 (_1!1099 (tuple2!2177 lt!35838 lt!35834))))))

(declare-fun call!7231 () List!1511)

(declare-fun bm!7227 () Bool)

(declare-fun e!51410 () List!1511)

(declare-fun c!12097 () Bool)

(assert (=> bm!7227 (= call!7231 ($colon$colon!68 e!51410 (ite c!12097 (h!2095 (toList!732 lt!35836)) (tuple2!2177 (_1!1099 (tuple2!2177 lt!35838 lt!35834)) (_2!1099 (tuple2!2177 lt!35838 lt!35834))))))))

(declare-fun c!12098 () Bool)

(assert (=> bm!7227 (= c!12098 c!12097)))

(declare-fun c!12099 () Bool)

(declare-fun b!78672 () Bool)

(declare-fun c!12096 () Bool)

(assert (=> b!78672 (= e!51410 (ite c!12096 (t!5148 (toList!732 lt!35836)) (ite c!12099 (Cons!1507 (h!2095 (toList!732 lt!35836)) (t!5148 (toList!732 lt!35836))) Nil!1508)))))

(declare-fun d!18685 () Bool)

(assert (=> d!18685 e!51409))

(declare-fun res!41178 () Bool)

(assert (=> d!18685 (=> (not res!41178) (not e!51409))))

(assert (=> d!18685 (= res!41178 (isStrictlySorted!290 lt!36414))))

(declare-fun e!51406 () List!1511)

(assert (=> d!18685 (= lt!36414 e!51406)))

(assert (=> d!18685 (= c!12097 (and ((_ is Cons!1507) (toList!732 lt!35836)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35836))) (_1!1099 (tuple2!2177 lt!35838 lt!35834)))))))

(assert (=> d!18685 (isStrictlySorted!290 (toList!732 lt!35836))))

(assert (=> d!18685 (= (insertStrictlySorted!58 (toList!732 lt!35836) (_1!1099 (tuple2!2177 lt!35838 lt!35834)) (_2!1099 (tuple2!2177 lt!35838 lt!35834))) lt!36414)))

(declare-fun bm!7228 () Bool)

(declare-fun call!7232 () List!1511)

(assert (=> bm!7228 (= call!7232 call!7230)))

(declare-fun b!78673 () Bool)

(assert (=> b!78673 (= c!12099 (and ((_ is Cons!1507) (toList!732 lt!35836)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35836))) (_1!1099 (tuple2!2177 lt!35838 lt!35834)))))))

(declare-fun e!51408 () List!1511)

(assert (=> b!78673 (= e!51407 e!51408)))

(declare-fun b!78674 () Bool)

(assert (=> b!78674 (= e!51408 call!7232)))

(declare-fun b!78675 () Bool)

(assert (=> b!78675 (= e!51406 e!51407)))

(assert (=> b!78675 (= c!12096 (and ((_ is Cons!1507) (toList!732 lt!35836)) (= (_1!1099 (h!2095 (toList!732 lt!35836))) (_1!1099 (tuple2!2177 lt!35838 lt!35834)))))))

(declare-fun b!78676 () Bool)

(assert (=> b!78676 (= e!51408 call!7232)))

(declare-fun bm!7229 () Bool)

(assert (=> bm!7229 (= call!7230 call!7231)))

(declare-fun b!78677 () Bool)

(assert (=> b!78677 (= e!51410 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35836)) (_1!1099 (tuple2!2177 lt!35838 lt!35834)) (_2!1099 (tuple2!2177 lt!35838 lt!35834))))))

(declare-fun b!78678 () Bool)

(assert (=> b!78678 (= e!51406 call!7231)))

(declare-fun b!78679 () Bool)

(assert (=> b!78679 (= e!51409 (contains!740 lt!36414 (tuple2!2177 (_1!1099 (tuple2!2177 lt!35838 lt!35834)) (_2!1099 (tuple2!2177 lt!35838 lt!35834)))))))

(assert (= (and d!18685 c!12097) b!78678))

(assert (= (and d!18685 (not c!12097)) b!78675))

(assert (= (and b!78675 c!12096) b!78670))

(assert (= (and b!78675 (not c!12096)) b!78673))

(assert (= (and b!78673 c!12099) b!78676))

(assert (= (and b!78673 (not c!12099)) b!78674))

(assert (= (or b!78676 b!78674) bm!7228))

(assert (= (or b!78670 bm!7228) bm!7229))

(assert (= (or b!78678 bm!7229) bm!7227))

(assert (= (and bm!7227 c!12098) b!78677))

(assert (= (and bm!7227 (not c!12098)) b!78672))

(assert (= (and d!18685 res!41178) b!78671))

(assert (= (and b!78671 res!41179) b!78679))

(declare-fun m!78947 () Bool)

(assert (=> b!78677 m!78947))

(declare-fun m!78949 () Bool)

(assert (=> bm!7227 m!78949))

(declare-fun m!78951 () Bool)

(assert (=> b!78671 m!78951))

(declare-fun m!78953 () Bool)

(assert (=> b!78679 m!78953))

(declare-fun m!78955 () Bool)

(assert (=> d!18685 m!78955))

(declare-fun m!78957 () Bool)

(assert (=> d!18685 m!78957))

(assert (=> d!18647 d!18685))

(assert (=> b!78206 d!18631))

(declare-fun d!18687 () Bool)

(declare-fun lt!36415 () Bool)

(assert (=> d!18687 (= lt!36415 (select (content!83 (t!5148 (toList!732 lt!35797))) lt!35660))))

(declare-fun e!51411 () Bool)

(assert (=> d!18687 (= lt!36415 e!51411)))

(declare-fun res!41180 () Bool)

(assert (=> d!18687 (=> (not res!41180) (not e!51411))))

(assert (=> d!18687 (= res!41180 ((_ is Cons!1507) (t!5148 (toList!732 lt!35797))))))

(assert (=> d!18687 (= (contains!740 (t!5148 (toList!732 lt!35797)) lt!35660) lt!36415)))

(declare-fun b!78680 () Bool)

(declare-fun e!51412 () Bool)

(assert (=> b!78680 (= e!51411 e!51412)))

(declare-fun res!41181 () Bool)

(assert (=> b!78680 (=> res!41181 e!51412)))

(assert (=> b!78680 (= res!41181 (= (h!2095 (t!5148 (toList!732 lt!35797))) lt!35660))))

(declare-fun b!78681 () Bool)

(assert (=> b!78681 (= e!51412 (contains!740 (t!5148 (t!5148 (toList!732 lt!35797))) lt!35660))))

(assert (= (and d!18687 res!41180) b!78680))

(assert (= (and b!78680 (not res!41181)) b!78681))

(declare-fun m!78959 () Bool)

(assert (=> d!18687 m!78959))

(declare-fun m!78961 () Bool)

(assert (=> d!18687 m!78961))

(declare-fun m!78963 () Bool)

(assert (=> b!78681 m!78963))

(assert (=> b!78282 d!18687))

(declare-fun d!18689 () Bool)

(declare-fun res!41182 () Bool)

(declare-fun e!51413 () Bool)

(assert (=> d!18689 (=> res!41182 e!51413)))

(assert (=> d!18689 (= res!41182 (and ((_ is Cons!1507) lt!36299) (= (_1!1099 (h!2095 lt!36299)) (_1!1099 lt!35660))))))

(assert (=> d!18689 (= (containsKey!139 lt!36299 (_1!1099 lt!35660)) e!51413)))

(declare-fun b!78682 () Bool)

(declare-fun e!51414 () Bool)

(assert (=> b!78682 (= e!51413 e!51414)))

(declare-fun res!41183 () Bool)

(assert (=> b!78682 (=> (not res!41183) (not e!51414))))

(assert (=> b!78682 (= res!41183 (and (or (not ((_ is Cons!1507) lt!36299)) (bvsle (_1!1099 (h!2095 lt!36299)) (_1!1099 lt!35660))) ((_ is Cons!1507) lt!36299) (bvslt (_1!1099 (h!2095 lt!36299)) (_1!1099 lt!35660))))))

(declare-fun b!78683 () Bool)

(assert (=> b!78683 (= e!51414 (containsKey!139 (t!5148 lt!36299) (_1!1099 lt!35660)))))

(assert (= (and d!18689 (not res!41182)) b!78682))

(assert (= (and b!78682 res!41183) b!78683))

(declare-fun m!78965 () Bool)

(assert (=> b!78683 m!78965))

(assert (=> b!78432 d!18689))

(declare-fun d!18691 () Bool)

(assert (=> d!18691 (= (apply!79 (+!103 lt!36126 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) lt!36132) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!36126 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) lt!36132)))))

(declare-fun bs!3318 () Bool)

(assert (= bs!3318 d!18691))

(declare-fun m!78967 () Bool)

(assert (=> bs!3318 m!78967))

(assert (=> bs!3318 m!78967))

(declare-fun m!78969 () Bool)

(assert (=> bs!3318 m!78969))

(assert (=> b!78257 d!18691))

(declare-fun d!18693 () Bool)

(declare-fun e!51416 () Bool)

(assert (=> d!18693 e!51416))

(declare-fun res!41184 () Bool)

(assert (=> d!18693 (=> res!41184 e!51416)))

(declare-fun lt!36418 () Bool)

(assert (=> d!18693 (= res!41184 (not lt!36418))))

(declare-fun lt!36419 () Bool)

(assert (=> d!18693 (= lt!36418 lt!36419)))

(declare-fun lt!36416 () Unit!2242)

(declare-fun e!51415 () Unit!2242)

(assert (=> d!18693 (= lt!36416 e!51415)))

(declare-fun c!12100 () Bool)

(assert (=> d!18693 (= c!12100 lt!36419)))

(assert (=> d!18693 (= lt!36419 (containsKey!139 (toList!732 (+!103 lt!36127 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))) lt!36134))))

(assert (=> d!18693 (= (contains!739 (+!103 lt!36127 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) lt!36134) lt!36418)))

(declare-fun b!78684 () Bool)

(declare-fun lt!36417 () Unit!2242)

(assert (=> b!78684 (= e!51415 lt!36417)))

(assert (=> b!78684 (= lt!36417 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (+!103 lt!36127 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))) lt!36134))))

(assert (=> b!78684 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!36127 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))) lt!36134))))

(declare-fun b!78685 () Bool)

(declare-fun Unit!2279 () Unit!2242)

(assert (=> b!78685 (= e!51415 Unit!2279)))

(declare-fun b!78686 () Bool)

(assert (=> b!78686 (= e!51416 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!36127 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))) lt!36134)))))

(assert (= (and d!18693 c!12100) b!78684))

(assert (= (and d!18693 (not c!12100)) b!78685))

(assert (= (and d!18693 (not res!41184)) b!78686))

(declare-fun m!78971 () Bool)

(assert (=> d!18693 m!78971))

(declare-fun m!78973 () Bool)

(assert (=> b!78684 m!78973))

(declare-fun m!78975 () Bool)

(assert (=> b!78684 m!78975))

(assert (=> b!78684 m!78975))

(declare-fun m!78977 () Bool)

(assert (=> b!78684 m!78977))

(assert (=> b!78686 m!78975))

(assert (=> b!78686 m!78975))

(assert (=> b!78686 m!78977))

(assert (=> b!78257 d!18693))

(declare-fun d!18695 () Bool)

(assert (=> d!18695 (= (apply!79 lt!36126 lt!36132) (get!1180 (getValueByKey!135 (toList!732 lt!36126) lt!36132)))))

(declare-fun bs!3319 () Bool)

(assert (= bs!3319 d!18695))

(declare-fun m!78979 () Bool)

(assert (=> bs!3319 m!78979))

(assert (=> bs!3319 m!78979))

(declare-fun m!78981 () Bool)

(assert (=> bs!3319 m!78981))

(assert (=> b!78257 d!18695))

(declare-fun d!18697 () Bool)

(declare-fun e!51417 () Bool)

(assert (=> d!18697 e!51417))

(declare-fun res!41185 () Bool)

(assert (=> d!18697 (=> (not res!41185) (not e!51417))))

(declare-fun lt!36423 () ListLongMap!1433)

(assert (=> d!18697 (= res!41185 (contains!739 lt!36423 (_1!1099 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(declare-fun lt!36421 () List!1511)

(assert (=> d!18697 (= lt!36423 (ListLongMap!1434 lt!36421))))

(declare-fun lt!36420 () Unit!2242)

(declare-fun lt!36422 () Unit!2242)

(assert (=> d!18697 (= lt!36420 lt!36422)))

(assert (=> d!18697 (= (getValueByKey!135 lt!36421 (_1!1099 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) (Some!140 (_2!1099 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(assert (=> d!18697 (= lt!36422 (lemmaContainsTupThenGetReturnValue!55 lt!36421 (_1!1099 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) (_2!1099 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(assert (=> d!18697 (= lt!36421 (insertStrictlySorted!58 (toList!732 lt!36138) (_1!1099 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) (_2!1099 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(assert (=> d!18697 (= (+!103 lt!36138 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) lt!36423)))

(declare-fun b!78687 () Bool)

(declare-fun res!41186 () Bool)

(assert (=> b!78687 (=> (not res!41186) (not e!51417))))

(assert (=> b!78687 (= res!41186 (= (getValueByKey!135 (toList!732 lt!36423) (_1!1099 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) (Some!140 (_2!1099 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))))

(declare-fun b!78688 () Bool)

(assert (=> b!78688 (= e!51417 (contains!740 (toList!732 lt!36423) (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))

(assert (= (and d!18697 res!41185) b!78687))

(assert (= (and b!78687 res!41186) b!78688))

(declare-fun m!78983 () Bool)

(assert (=> d!18697 m!78983))

(declare-fun m!78985 () Bool)

(assert (=> d!18697 m!78985))

(declare-fun m!78987 () Bool)

(assert (=> d!18697 m!78987))

(declare-fun m!78989 () Bool)

(assert (=> d!18697 m!78989))

(declare-fun m!78991 () Bool)

(assert (=> b!78687 m!78991))

(declare-fun m!78993 () Bool)

(assert (=> b!78688 m!78993))

(assert (=> b!78257 d!18697))

(declare-fun d!18699 () Bool)

(assert (=> d!18699 (= (apply!79 (+!103 lt!36138 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) lt!36141) (apply!79 lt!36138 lt!36141))))

(declare-fun lt!36424 () Unit!2242)

(assert (=> d!18699 (= lt!36424 (choose!467 lt!36138 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) lt!36141))))

(declare-fun e!51418 () Bool)

(assert (=> d!18699 e!51418))

(declare-fun res!41187 () Bool)

(assert (=> d!18699 (=> (not res!41187) (not e!51418))))

(assert (=> d!18699 (= res!41187 (contains!739 lt!36138 lt!36141))))

(assert (=> d!18699 (= (addApplyDifferent!55 lt!36138 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) lt!36141) lt!36424)))

(declare-fun b!78689 () Bool)

(assert (=> b!78689 (= e!51418 (not (= lt!36141 lt!36139)))))

(assert (= (and d!18699 res!41187) b!78689))

(declare-fun m!78995 () Bool)

(assert (=> d!18699 m!78995))

(assert (=> d!18699 m!78269))

(assert (=> d!18699 m!78269))

(assert (=> d!18699 m!78285))

(declare-fun m!78997 () Bool)

(assert (=> d!18699 m!78997))

(assert (=> d!18699 m!78257))

(assert (=> b!78257 d!18699))

(declare-fun d!18701 () Bool)

(assert (=> d!18701 (= (apply!79 (+!103 lt!36131 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) lt!36142) (apply!79 lt!36131 lt!36142))))

(declare-fun lt!36425 () Unit!2242)

(assert (=> d!18701 (= lt!36425 (choose!467 lt!36131 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) lt!36142))))

(declare-fun e!51419 () Bool)

(assert (=> d!18701 e!51419))

(declare-fun res!41188 () Bool)

(assert (=> d!18701 (=> (not res!41188) (not e!51419))))

(assert (=> d!18701 (= res!41188 (contains!739 lt!36131 lt!36142))))

(assert (=> d!18701 (= (addApplyDifferent!55 lt!36131 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) lt!36142) lt!36425)))

(declare-fun b!78690 () Bool)

(assert (=> b!78690 (= e!51419 (not (= lt!36142 lt!36144)))))

(assert (= (and d!18701 res!41188) b!78690))

(declare-fun m!78999 () Bool)

(assert (=> d!18701 m!78999))

(assert (=> d!18701 m!78275))

(assert (=> d!18701 m!78275))

(assert (=> d!18701 m!78277))

(declare-fun m!79001 () Bool)

(assert (=> d!18701 m!79001))

(assert (=> d!18701 m!78255))

(assert (=> b!78257 d!18701))

(declare-fun d!18703 () Bool)

(declare-fun e!51420 () Bool)

(assert (=> d!18703 e!51420))

(declare-fun res!41189 () Bool)

(assert (=> d!18703 (=> (not res!41189) (not e!51420))))

(declare-fun lt!36429 () ListLongMap!1433)

(assert (=> d!18703 (= res!41189 (contains!739 lt!36429 (_1!1099 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(declare-fun lt!36427 () List!1511)

(assert (=> d!18703 (= lt!36429 (ListLongMap!1434 lt!36427))))

(declare-fun lt!36426 () Unit!2242)

(declare-fun lt!36428 () Unit!2242)

(assert (=> d!18703 (= lt!36426 lt!36428)))

(assert (=> d!18703 (= (getValueByKey!135 lt!36427 (_1!1099 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) (Some!140 (_2!1099 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(assert (=> d!18703 (= lt!36428 (lemmaContainsTupThenGetReturnValue!55 lt!36427 (_1!1099 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) (_2!1099 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(assert (=> d!18703 (= lt!36427 (insertStrictlySorted!58 (toList!732 lt!36126) (_1!1099 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) (_2!1099 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(assert (=> d!18703 (= (+!103 lt!36126 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) lt!36429)))

(declare-fun b!78691 () Bool)

(declare-fun res!41190 () Bool)

(assert (=> b!78691 (=> (not res!41190) (not e!51420))))

(assert (=> b!78691 (= res!41190 (= (getValueByKey!135 (toList!732 lt!36429) (_1!1099 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) (Some!140 (_2!1099 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))))

(declare-fun b!78692 () Bool)

(assert (=> b!78692 (= e!51420 (contains!740 (toList!732 lt!36429) (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))

(assert (= (and d!18703 res!41189) b!78691))

(assert (= (and b!78691 res!41190) b!78692))

(declare-fun m!79003 () Bool)

(assert (=> d!18703 m!79003))

(declare-fun m!79005 () Bool)

(assert (=> d!18703 m!79005))

(declare-fun m!79007 () Bool)

(assert (=> d!18703 m!79007))

(declare-fun m!79009 () Bool)

(assert (=> d!18703 m!79009))

(declare-fun m!79011 () Bool)

(assert (=> b!78691 m!79011))

(declare-fun m!79013 () Bool)

(assert (=> b!78692 m!79013))

(assert (=> b!78257 d!18703))

(declare-fun d!18705 () Bool)

(assert (=> d!18705 (= (apply!79 (+!103 lt!36126 (tuple2!2177 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) lt!36132) (apply!79 lt!36126 lt!36132))))

(declare-fun lt!36430 () Unit!2242)

(assert (=> d!18705 (= lt!36430 (choose!467 lt!36126 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) lt!36132))))

(declare-fun e!51421 () Bool)

(assert (=> d!18705 e!51421))

(declare-fun res!41191 () Bool)

(assert (=> d!18705 (=> (not res!41191) (not e!51421))))

(assert (=> d!18705 (= res!41191 (contains!739 lt!36126 lt!36132))))

(assert (=> d!18705 (= (addApplyDifferent!55 lt!36126 lt!36135 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) lt!36132) lt!36430)))

(declare-fun b!78693 () Bool)

(assert (=> b!78693 (= e!51421 (not (= lt!36132 lt!36135)))))

(assert (= (and d!18705 res!41191) b!78693))

(declare-fun m!79015 () Bool)

(assert (=> d!18705 m!79015))

(assert (=> d!18705 m!78259))

(assert (=> d!18705 m!78259))

(assert (=> d!18705 m!78261))

(declare-fun m!79017 () Bool)

(assert (=> d!18705 m!79017))

(assert (=> d!18705 m!78283))

(assert (=> b!78257 d!18705))

(declare-fun d!18707 () Bool)

(assert (=> d!18707 (= (apply!79 lt!36131 lt!36142) (get!1180 (getValueByKey!135 (toList!732 lt!36131) lt!36142)))))

(declare-fun bs!3320 () Bool)

(assert (= bs!3320 d!18707))

(declare-fun m!79019 () Bool)

(assert (=> bs!3320 m!79019))

(assert (=> bs!3320 m!79019))

(declare-fun m!79021 () Bool)

(assert (=> bs!3320 m!79021))

(assert (=> b!78257 d!18707))

(declare-fun d!18709 () Bool)

(assert (=> d!18709 (contains!739 (+!103 lt!36127 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) lt!36134)))

(declare-fun lt!36431 () Unit!2242)

(assert (=> d!18709 (= lt!36431 (choose!468 lt!36127 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) lt!36134))))

(assert (=> d!18709 (contains!739 lt!36127 lt!36134)))

(assert (=> d!18709 (= (addStillContains!55 lt!36127 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) lt!36134) lt!36431)))

(declare-fun bs!3321 () Bool)

(assert (= bs!3321 d!18709))

(assert (=> bs!3321 m!78273))

(assert (=> bs!3321 m!78273))

(assert (=> bs!3321 m!78281))

(declare-fun m!79023 () Bool)

(assert (=> bs!3321 m!79023))

(declare-fun m!79025 () Bool)

(assert (=> bs!3321 m!79025))

(assert (=> b!78257 d!18709))

(declare-fun b!78694 () Bool)

(assert (=> b!78694 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> b!78694 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))))))))

(declare-fun lt!36437 () ListLongMap!1433)

(declare-fun e!51424 () Bool)

(assert (=> b!78694 (= e!51424 (= (apply!79 lt!36437 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!78696 () Bool)

(declare-fun lt!36432 () Unit!2242)

(declare-fun lt!36433 () Unit!2242)

(assert (=> b!78696 (= lt!36432 lt!36433)))

(declare-fun lt!36438 () (_ BitVec 64))

(declare-fun lt!36434 () V!2993)

(declare-fun lt!36435 () (_ BitVec 64))

(declare-fun lt!36436 () ListLongMap!1433)

(assert (=> b!78696 (not (contains!739 (+!103 lt!36436 (tuple2!2177 lt!36438 lt!36434)) lt!36435))))

(assert (=> b!78696 (= lt!36433 (addStillNotContains!29 lt!36436 lt!36438 lt!36434 lt!36435))))

(assert (=> b!78696 (= lt!36435 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!78696 (= lt!36434 (get!1177 (select (arr!1883 (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!78696 (= lt!36438 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7233 () ListLongMap!1433)

(assert (=> b!78696 (= lt!36436 call!7233)))

(declare-fun e!51427 () ListLongMap!1433)

(assert (=> b!78696 (= e!51427 (+!103 call!7233 (tuple2!2177 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) (get!1177 (select (arr!1883 (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7230 () Bool)

(assert (=> bm!7230 (= call!7233 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) (mask!6266 newMap!16) (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16)))))

(declare-fun b!78697 () Bool)

(declare-fun e!51428 () ListLongMap!1433)

(assert (=> b!78697 (= e!51428 e!51427)))

(declare-fun c!12104 () Bool)

(assert (=> b!78697 (= c!12104 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78698 () Bool)

(declare-fun e!51425 () Bool)

(assert (=> b!78698 (= e!51425 (= lt!36437 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) (mask!6266 newMap!16) (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16))))))

(declare-fun b!78699 () Bool)

(declare-fun e!51422 () Bool)

(assert (=> b!78699 (= e!51422 e!51424)))

(assert (=> b!78699 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun res!41195 () Bool)

(assert (=> b!78699 (= res!41195 (contains!739 lt!36437 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78699 (=> (not res!41195) (not e!51424))))

(declare-fun b!78700 () Bool)

(assert (=> b!78700 (= e!51428 (ListLongMap!1434 Nil!1508))))

(declare-fun b!78701 () Bool)

(assert (=> b!78701 (= e!51427 call!7233)))

(declare-fun b!78702 () Bool)

(declare-fun e!51426 () Bool)

(assert (=> b!78702 (= e!51426 e!51422)))

(declare-fun c!12102 () Bool)

(declare-fun e!51423 () Bool)

(assert (=> b!78702 (= c!12102 e!51423)))

(declare-fun res!41193 () Bool)

(assert (=> b!78702 (=> (not res!41193) (not e!51423))))

(assert (=> b!78702 (= res!41193 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78703 () Bool)

(declare-fun res!41192 () Bool)

(assert (=> b!78703 (=> (not res!41192) (not e!51426))))

(assert (=> b!78703 (= res!41192 (not (contains!739 lt!36437 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!18711 () Bool)

(assert (=> d!18711 e!51426))

(declare-fun res!41194 () Bool)

(assert (=> d!18711 (=> (not res!41194) (not e!51426))))

(assert (=> d!18711 (= res!41194 (not (contains!739 lt!36437 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18711 (= lt!36437 e!51428)))

(declare-fun c!12103 () Bool)

(assert (=> d!18711 (= c!12103 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!18711 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18711 (= (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) (mask!6266 newMap!16) (ite c!11926 (ite c!11928 lt!35990 lt!36000) (extraKeys!2122 newMap!16)) (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)) (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36437)))

(declare-fun b!78695 () Bool)

(assert (=> b!78695 (= e!51422 e!51425)))

(declare-fun c!12101 () Bool)

(assert (=> b!78695 (= c!12101 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78704 () Bool)

(assert (=> b!78704 (= e!51425 (isEmpty!330 lt!36437))))

(declare-fun b!78705 () Bool)

(assert (=> b!78705 (= e!51423 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78705 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!18711 c!12103) b!78700))

(assert (= (and d!18711 (not c!12103)) b!78697))

(assert (= (and b!78697 c!12104) b!78696))

(assert (= (and b!78697 (not c!12104)) b!78701))

(assert (= (or b!78696 b!78701) bm!7230))

(assert (= (and d!18711 res!41194) b!78703))

(assert (= (and b!78703 res!41192) b!78702))

(assert (= (and b!78702 res!41193) b!78705))

(assert (= (and b!78702 c!12102) b!78699))

(assert (= (and b!78702 (not c!12102)) b!78695))

(assert (= (and b!78699 res!41195) b!78694))

(assert (= (and b!78695 c!12101) b!78698))

(assert (= (and b!78695 (not c!12101)) b!78704))

(declare-fun b_lambda!3509 () Bool)

(assert (=> (not b_lambda!3509) (not b!78694)))

(assert (=> b!78694 t!5160))

(declare-fun b_and!4817 () Bool)

(assert (= b_and!4813 (and (=> t!5160 result!2821) b_and!4817)))

(assert (=> b!78694 t!5162))

(declare-fun b_and!4819 () Bool)

(assert (= b_and!4815 (and (=> t!5162 result!2823) b_and!4819)))

(declare-fun b_lambda!3511 () Bool)

(assert (=> (not b_lambda!3511) (not b!78696)))

(assert (=> b!78696 t!5160))

(declare-fun b_and!4821 () Bool)

(assert (= b_and!4817 (and (=> t!5160 result!2821) b_and!4821)))

(assert (=> b!78696 t!5162))

(declare-fun b_and!4823 () Bool)

(assert (= b_and!4819 (and (=> t!5162 result!2823) b_and!4823)))

(declare-fun m!79027 () Bool)

(assert (=> b!78703 m!79027))

(assert (=> b!78697 m!77965))

(assert (=> b!78697 m!77965))

(assert (=> b!78697 m!77975))

(assert (=> b!78694 m!77983))

(assert (=> b!78694 m!78295))

(assert (=> b!78694 m!77965))

(assert (=> b!78694 m!78295))

(assert (=> b!78694 m!77983))

(assert (=> b!78694 m!78297))

(assert (=> b!78694 m!77965))

(declare-fun m!79029 () Bool)

(assert (=> b!78694 m!79029))

(declare-fun m!79031 () Bool)

(assert (=> bm!7230 m!79031))

(declare-fun m!79033 () Bool)

(assert (=> d!18711 m!79033))

(assert (=> d!18711 m!77977))

(assert (=> b!78705 m!77965))

(assert (=> b!78705 m!77965))

(assert (=> b!78705 m!77975))

(assert (=> b!78696 m!77983))

(declare-fun m!79035 () Bool)

(assert (=> b!78696 m!79035))

(assert (=> b!78696 m!79035))

(declare-fun m!79037 () Bool)

(assert (=> b!78696 m!79037))

(assert (=> b!78696 m!78295))

(declare-fun m!79039 () Bool)

(assert (=> b!78696 m!79039))

(declare-fun m!79041 () Bool)

(assert (=> b!78696 m!79041))

(assert (=> b!78696 m!78295))

(assert (=> b!78696 m!77983))

(assert (=> b!78696 m!78297))

(assert (=> b!78696 m!77965))

(assert (=> b!78699 m!77965))

(assert (=> b!78699 m!77965))

(declare-fun m!79043 () Bool)

(assert (=> b!78699 m!79043))

(declare-fun m!79045 () Bool)

(assert (=> b!78704 m!79045))

(assert (=> b!78698 m!79031))

(assert (=> b!78257 d!18711))

(declare-fun d!18713 () Bool)

(assert (=> d!18713 (= (apply!79 lt!36138 lt!36141) (get!1180 (getValueByKey!135 (toList!732 lt!36138) lt!36141)))))

(declare-fun bs!3322 () Bool)

(assert (= bs!3322 d!18713))

(declare-fun m!79047 () Bool)

(assert (=> bs!3322 m!79047))

(assert (=> bs!3322 m!79047))

(declare-fun m!79049 () Bool)

(assert (=> bs!3322 m!79049))

(assert (=> b!78257 d!18713))

(declare-fun d!18715 () Bool)

(assert (=> d!18715 (= (apply!79 (+!103 lt!36131 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) lt!36142) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!36131 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))) lt!36142)))))

(declare-fun bs!3323 () Bool)

(assert (= bs!3323 d!18715))

(declare-fun m!79051 () Bool)

(assert (=> bs!3323 m!79051))

(assert (=> bs!3323 m!79051))

(declare-fun m!79053 () Bool)

(assert (=> bs!3323 m!79053))

(assert (=> b!78257 d!18715))

(declare-fun d!18717 () Bool)

(declare-fun e!51429 () Bool)

(assert (=> d!18717 e!51429))

(declare-fun res!41196 () Bool)

(assert (=> d!18717 (=> (not res!41196) (not e!51429))))

(declare-fun lt!36442 () ListLongMap!1433)

(assert (=> d!18717 (= res!41196 (contains!739 lt!36442 (_1!1099 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))))))

(declare-fun lt!36440 () List!1511)

(assert (=> d!18717 (= lt!36442 (ListLongMap!1434 lt!36440))))

(declare-fun lt!36439 () Unit!2242)

(declare-fun lt!36441 () Unit!2242)

(assert (=> d!18717 (= lt!36439 lt!36441)))

(assert (=> d!18717 (= (getValueByKey!135 lt!36440 (_1!1099 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))) (Some!140 (_2!1099 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))))))

(assert (=> d!18717 (= lt!36441 (lemmaContainsTupThenGetReturnValue!55 lt!36440 (_1!1099 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) (_2!1099 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))))))

(assert (=> d!18717 (= lt!36440 (insertStrictlySorted!58 (toList!732 lt!36127) (_1!1099 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) (_2!1099 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))))))

(assert (=> d!18717 (= (+!103 lt!36127 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) lt!36442)))

(declare-fun b!78706 () Bool)

(declare-fun res!41197 () Bool)

(assert (=> b!78706 (=> (not res!41197) (not e!51429))))

(assert (=> b!78706 (= res!41197 (= (getValueByKey!135 (toList!732 lt!36442) (_1!1099 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))) (Some!140 (_2!1099 (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))))))))

(declare-fun b!78707 () Bool)

(assert (=> b!78707 (= e!51429 (contains!740 (toList!732 lt!36442) (tuple2!2177 lt!36123 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))))))

(assert (= (and d!18717 res!41196) b!78706))

(assert (= (and b!78706 res!41197) b!78707))

(declare-fun m!79055 () Bool)

(assert (=> d!18717 m!79055))

(declare-fun m!79057 () Bool)

(assert (=> d!18717 m!79057))

(declare-fun m!79059 () Bool)

(assert (=> d!18717 m!79059))

(declare-fun m!79061 () Bool)

(assert (=> d!18717 m!79061))

(declare-fun m!79063 () Bool)

(assert (=> b!78706 m!79063))

(declare-fun m!79065 () Bool)

(assert (=> b!78707 m!79065))

(assert (=> b!78257 d!18717))

(declare-fun d!18719 () Bool)

(declare-fun e!51430 () Bool)

(assert (=> d!18719 e!51430))

(declare-fun res!41198 () Bool)

(assert (=> d!18719 (=> (not res!41198) (not e!51430))))

(declare-fun lt!36446 () ListLongMap!1433)

(assert (=> d!18719 (= res!41198 (contains!739 lt!36446 (_1!1099 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))))))

(declare-fun lt!36444 () List!1511)

(assert (=> d!18719 (= lt!36446 (ListLongMap!1434 lt!36444))))

(declare-fun lt!36443 () Unit!2242)

(declare-fun lt!36445 () Unit!2242)

(assert (=> d!18719 (= lt!36443 lt!36445)))

(assert (=> d!18719 (= (getValueByKey!135 lt!36444 (_1!1099 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))) (Some!140 (_2!1099 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))))))

(assert (=> d!18719 (= lt!36445 (lemmaContainsTupThenGetReturnValue!55 lt!36444 (_1!1099 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) (_2!1099 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))))))

(assert (=> d!18719 (= lt!36444 (insertStrictlySorted!58 (toList!732 lt!36131) (_1!1099 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) (_2!1099 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))))))

(assert (=> d!18719 (= (+!103 lt!36131 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))) lt!36446)))

(declare-fun b!78708 () Bool)

(declare-fun res!41199 () Bool)

(assert (=> b!78708 (=> (not res!41199) (not e!51430))))

(assert (=> b!78708 (= res!41199 (= (getValueByKey!135 (toList!732 lt!36446) (_1!1099 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))))) (Some!140 (_2!1099 (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))))))))

(declare-fun b!78709 () Bool)

(assert (=> b!78709 (= e!51430 (contains!740 (toList!732 lt!36446) (tuple2!2177 lt!36144 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16)))))))

(assert (= (and d!18719 res!41198) b!78708))

(assert (= (and b!78708 res!41199) b!78709))

(declare-fun m!79067 () Bool)

(assert (=> d!18719 m!79067))

(declare-fun m!79069 () Bool)

(assert (=> d!18719 m!79069))

(declare-fun m!79071 () Bool)

(assert (=> d!18719 m!79071))

(declare-fun m!79073 () Bool)

(assert (=> d!18719 m!79073))

(declare-fun m!79075 () Bool)

(assert (=> b!78708 m!79075))

(declare-fun m!79077 () Bool)

(assert (=> b!78709 m!79077))

(assert (=> b!78257 d!18719))

(declare-fun d!18721 () Bool)

(assert (=> d!18721 (= (apply!79 (+!103 lt!36138 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) lt!36141) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!36138 (tuple2!2177 lt!36139 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) lt!36141)))))

(declare-fun bs!3324 () Bool)

(assert (= bs!3324 d!18721))

(declare-fun m!79079 () Bool)

(assert (=> bs!3324 m!79079))

(assert (=> bs!3324 m!79079))

(declare-fun m!79081 () Bool)

(assert (=> bs!3324 m!79081))

(assert (=> b!78257 d!18721))

(assert (=> b!78210 d!18675))

(assert (=> d!18509 d!18533))

(declare-fun d!18723 () Bool)

(declare-fun e!51432 () Bool)

(assert (=> d!18723 e!51432))

(declare-fun res!41200 () Bool)

(assert (=> d!18723 (=> res!41200 e!51432)))

(declare-fun lt!36449 () Bool)

(assert (=> d!18723 (= res!41200 (not lt!36449))))

(declare-fun lt!36450 () Bool)

(assert (=> d!18723 (= lt!36449 lt!36450)))

(declare-fun lt!36447 () Unit!2242)

(declare-fun e!51431 () Unit!2242)

(assert (=> d!18723 (= lt!36447 e!51431)))

(declare-fun c!12105 () Bool)

(assert (=> d!18723 (= c!12105 lt!36450)))

(assert (=> d!18723 (= lt!36450 (containsKey!139 (toList!732 lt!35890) lt!35896))))

(assert (=> d!18723 (= (contains!739 lt!35890 lt!35896) lt!36449)))

(declare-fun b!78710 () Bool)

(declare-fun lt!36448 () Unit!2242)

(assert (=> b!78710 (= e!51431 lt!36448)))

(assert (=> b!78710 (= lt!36448 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35890) lt!35896))))

(assert (=> b!78710 (isDefined!89 (getValueByKey!135 (toList!732 lt!35890) lt!35896))))

(declare-fun b!78711 () Bool)

(declare-fun Unit!2280 () Unit!2242)

(assert (=> b!78711 (= e!51431 Unit!2280)))

(declare-fun b!78712 () Bool)

(assert (=> b!78712 (= e!51432 (isDefined!89 (getValueByKey!135 (toList!732 lt!35890) lt!35896)))))

(assert (= (and d!18723 c!12105) b!78710))

(assert (= (and d!18723 (not c!12105)) b!78711))

(assert (= (and d!18723 (not res!41200)) b!78712))

(declare-fun m!79083 () Bool)

(assert (=> d!18723 m!79083))

(declare-fun m!79085 () Bool)

(assert (=> b!78710 m!79085))

(assert (=> b!78710 m!78461))

(assert (=> b!78710 m!78461))

(declare-fun m!79087 () Bool)

(assert (=> b!78710 m!79087))

(assert (=> b!78712 m!78461))

(assert (=> b!78712 m!78461))

(assert (=> b!78712 m!79087))

(assert (=> d!18509 d!18723))

(declare-fun d!18725 () Bool)

(assert (=> d!18725 (= (apply!79 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35896) (apply!79 lt!35890 lt!35896))))

(assert (=> d!18725 true))

(declare-fun _$34!815 () Unit!2242)

(assert (=> d!18725 (= (choose!467 lt!35890 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35896) _$34!815)))

(declare-fun bs!3325 () Bool)

(assert (= bs!3325 d!18725))

(assert (=> bs!3325 m!77795))

(assert (=> bs!3325 m!77795))

(assert (=> bs!3325 m!77797))

(assert (=> bs!3325 m!77817))

(assert (=> d!18509 d!18725))

(assert (=> d!18509 d!18523))

(assert (=> d!18509 d!18529))

(declare-fun b!78714 () Bool)

(declare-fun e!51433 () Option!141)

(assert (=> b!78714 (= e!51433 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36399)))))))

(declare-fun e!51434 () Option!141)

(declare-fun b!78716 () Bool)

(assert (=> b!78716 (= e!51434 (getValueByKey!135 (t!5148 (toList!732 lt!36399)) (_1!1099 (tuple2!2177 lt!35838 lt!35834))))))

(declare-fun c!12106 () Bool)

(declare-fun d!18727 () Bool)

(assert (=> d!18727 (= c!12106 (and ((_ is Cons!1507) (toList!732 lt!36399)) (= (_1!1099 (h!2095 (toList!732 lt!36399))) (_1!1099 (tuple2!2177 lt!35838 lt!35834)))))))

(assert (=> d!18727 (= (getValueByKey!135 (toList!732 lt!36399) (_1!1099 (tuple2!2177 lt!35838 lt!35834))) e!51433)))

(declare-fun b!78717 () Bool)

(assert (=> b!78717 (= e!51434 None!139)))

(declare-fun b!78715 () Bool)

(assert (=> b!78715 (= e!51433 e!51434)))

(declare-fun c!12107 () Bool)

(assert (=> b!78715 (= c!12107 (and ((_ is Cons!1507) (toList!732 lt!36399)) (not (= (_1!1099 (h!2095 (toList!732 lt!36399))) (_1!1099 (tuple2!2177 lt!35838 lt!35834))))))))

(assert (= (and d!18727 c!12106) b!78714))

(assert (= (and d!18727 (not c!12106)) b!78715))

(assert (= (and b!78715 c!12107) b!78716))

(assert (= (and b!78715 (not c!12107)) b!78717))

(declare-fun m!79089 () Bool)

(assert (=> b!78716 m!79089))

(assert (=> b!78616 d!18727))

(declare-fun d!18729 () Bool)

(declare-fun lt!36451 () Bool)

(assert (=> d!18729 (= lt!36451 (select (content!83 (toList!732 lt!36311)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!51435 () Bool)

(assert (=> d!18729 (= lt!36451 e!51435)))

(declare-fun res!41201 () Bool)

(assert (=> d!18729 (=> (not res!41201) (not e!51435))))

(assert (=> d!18729 (= res!41201 ((_ is Cons!1507) (toList!732 lt!36311)))))

(assert (=> d!18729 (= (contains!740 (toList!732 lt!36311) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36451)))

(declare-fun b!78718 () Bool)

(declare-fun e!51436 () Bool)

(assert (=> b!78718 (= e!51435 e!51436)))

(declare-fun res!41202 () Bool)

(assert (=> b!78718 (=> res!41202 e!51436)))

(assert (=> b!78718 (= res!41202 (= (h!2095 (toList!732 lt!36311)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!78719 () Bool)

(assert (=> b!78719 (= e!51436 (contains!740 (t!5148 (toList!732 lt!36311)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18729 res!41201) b!78718))

(assert (= (and b!78718 (not res!41202)) b!78719))

(declare-fun m!79091 () Bool)

(assert (=> d!18729 m!79091))

(declare-fun m!79093 () Bool)

(assert (=> d!18729 m!79093))

(declare-fun m!79095 () Bool)

(assert (=> b!78719 m!79095))

(assert (=> b!78446 d!18729))

(declare-fun d!18731 () Bool)

(declare-fun e!51438 () Bool)

(assert (=> d!18731 e!51438))

(declare-fun res!41203 () Bool)

(assert (=> d!18731 (=> res!41203 e!51438)))

(declare-fun lt!36454 () Bool)

(assert (=> d!18731 (= res!41203 (not lt!36454))))

(declare-fun lt!36455 () Bool)

(assert (=> d!18731 (= lt!36454 lt!36455)))

(declare-fun lt!36452 () Unit!2242)

(declare-fun e!51437 () Unit!2242)

(assert (=> d!18731 (= lt!36452 e!51437)))

(declare-fun c!12108 () Bool)

(assert (=> d!18731 (= c!12108 lt!36455)))

(assert (=> d!18731 (= lt!36455 (containsKey!139 (toList!732 lt!35895) lt!35906))))

(assert (=> d!18731 (= (contains!739 lt!35895 lt!35906) lt!36454)))

(declare-fun b!78720 () Bool)

(declare-fun lt!36453 () Unit!2242)

(assert (=> b!78720 (= e!51437 lt!36453)))

(assert (=> b!78720 (= lt!36453 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35895) lt!35906))))

(assert (=> b!78720 (isDefined!89 (getValueByKey!135 (toList!732 lt!35895) lt!35906))))

(declare-fun b!78721 () Bool)

(declare-fun Unit!2281 () Unit!2242)

(assert (=> b!78721 (= e!51437 Unit!2281)))

(declare-fun b!78722 () Bool)

(assert (=> b!78722 (= e!51438 (isDefined!89 (getValueByKey!135 (toList!732 lt!35895) lt!35906)))))

(assert (= (and d!18731 c!12108) b!78720))

(assert (= (and d!18731 (not c!12108)) b!78721))

(assert (= (and d!18731 (not res!41203)) b!78722))

(declare-fun m!79097 () Bool)

(assert (=> d!18731 m!79097))

(declare-fun m!79099 () Bool)

(assert (=> b!78720 m!79099))

(assert (=> b!78720 m!78425))

(assert (=> b!78720 m!78425))

(declare-fun m!79101 () Bool)

(assert (=> b!78720 m!79101))

(assert (=> b!78722 m!78425))

(assert (=> b!78722 m!78425))

(assert (=> b!78722 m!79101))

(assert (=> d!18521 d!18731))

(assert (=> d!18521 d!18531))

(assert (=> d!18521 d!18517))

(declare-fun d!18733 () Bool)

(assert (=> d!18733 (= (apply!79 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35906) (apply!79 lt!35895 lt!35906))))

(assert (=> d!18733 true))

(declare-fun _$34!816 () Unit!2242)

(assert (=> d!18733 (= (choose!467 lt!35895 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35906) _$34!816)))

(declare-fun bs!3326 () Bool)

(assert (= bs!3326 d!18733))

(assert (=> bs!3326 m!77809))

(assert (=> bs!3326 m!77809))

(assert (=> bs!3326 m!77811))

(assert (=> bs!3326 m!77791))

(assert (=> d!18521 d!18733))

(assert (=> d!18521 d!18535))

(declare-fun b!78741 () Bool)

(declare-fun e!51449 () SeekEntryResult!243)

(assert (=> b!78741 (= e!51449 (Intermediate!243 true (toIndex!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (mask!6266 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!78742 () Bool)

(declare-fun lt!36460 () SeekEntryResult!243)

(assert (=> b!78742 (and (bvsge (index!3108 lt!36460) #b00000000000000000000000000000000) (bvslt (index!3108 lt!36460) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun res!41210 () Bool)

(assert (=> b!78742 (= res!41210 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3108 lt!36460)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51450 () Bool)

(assert (=> b!78742 (=> res!41210 e!51450)))

(declare-fun b!78743 () Bool)

(declare-fun e!51453 () Bool)

(assert (=> b!78743 (= e!51453 (bvsge (x!11549 lt!36460) #b01111111111111111111111111111110))))

(declare-fun b!78744 () Bool)

(assert (=> b!78744 (and (bvsge (index!3108 lt!36460) #b00000000000000000000000000000000) (bvslt (index!3108 lt!36460) (size!2124 (_keys!3930 newMap!16))))))

(assert (=> b!78744 (= e!51450 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3108 lt!36460)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!18735 () Bool)

(assert (=> d!18735 e!51453))

(declare-fun c!12115 () Bool)

(assert (=> d!18735 (= c!12115 (and ((_ is Intermediate!243) lt!36460) (undefined!1055 lt!36460)))))

(assert (=> d!18735 (= lt!36460 e!51449)))

(declare-fun c!12117 () Bool)

(assert (=> d!18735 (= c!12117 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!36461 () (_ BitVec 64))

(assert (=> d!18735 (= lt!36461 (select (arr!1882 (_keys!3930 newMap!16)) (toIndex!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (mask!6266 newMap!16))))))

(assert (=> d!18735 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18735 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (mask!6266 newMap!16)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)) lt!36460)))

(declare-fun b!78745 () Bool)

(declare-fun e!51451 () Bool)

(assert (=> b!78745 (= e!51453 e!51451)))

(declare-fun res!41211 () Bool)

(assert (=> b!78745 (= res!41211 (and ((_ is Intermediate!243) lt!36460) (not (undefined!1055 lt!36460)) (bvslt (x!11549 lt!36460) #b01111111111111111111111111111110) (bvsge (x!11549 lt!36460) #b00000000000000000000000000000000) (bvsge (x!11549 lt!36460) #b00000000000000000000000000000000)))))

(assert (=> b!78745 (=> (not res!41211) (not e!51451))))

(declare-fun b!78746 () Bool)

(assert (=> b!78746 (and (bvsge (index!3108 lt!36460) #b00000000000000000000000000000000) (bvslt (index!3108 lt!36460) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun res!41212 () Bool)

(assert (=> b!78746 (= res!41212 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3108 lt!36460)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> b!78746 (=> res!41212 e!51450)))

(assert (=> b!78746 (= e!51451 e!51450)))

(declare-fun b!78747 () Bool)

(declare-fun e!51452 () SeekEntryResult!243)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!78747 (= e!51452 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (mask!6266 newMap!16)) #b00000000000000000000000000000000 (mask!6266 newMap!16)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(declare-fun b!78748 () Bool)

(assert (=> b!78748 (= e!51449 e!51452)))

(declare-fun c!12116 () Bool)

(assert (=> b!78748 (= c!12116 (or (= lt!36461 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (= (bvadd lt!36461 lt!36461) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78749 () Bool)

(assert (=> b!78749 (= e!51452 (Intermediate!243 false (toIndex!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (mask!6266 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!18735 c!12117) b!78741))

(assert (= (and d!18735 (not c!12117)) b!78748))

(assert (= (and b!78748 c!12116) b!78749))

(assert (= (and b!78748 (not c!12116)) b!78747))

(assert (= (and d!18735 c!12115) b!78743))

(assert (= (and d!18735 (not c!12115)) b!78745))

(assert (= (and b!78745 res!41211) b!78746))

(assert (= (and b!78746 (not res!41212)) b!78742))

(assert (= (and b!78742 (not res!41210)) b!78744))

(declare-fun m!79103 () Bool)

(assert (=> b!78746 m!79103))

(assert (=> b!78742 m!79103))

(assert (=> b!78744 m!79103))

(assert (=> b!78747 m!78321))

(declare-fun m!79105 () Bool)

(assert (=> b!78747 m!79105))

(assert (=> b!78747 m!79105))

(assert (=> b!78747 m!77463))

(declare-fun m!79107 () Bool)

(assert (=> b!78747 m!79107))

(assert (=> d!18735 m!78321))

(declare-fun m!79109 () Bool)

(assert (=> d!18735 m!79109))

(assert (=> d!18735 m!77977))

(assert (=> d!18497 d!18735))

(declare-fun d!18737 () Bool)

(declare-fun lt!36467 () (_ BitVec 32))

(declare-fun lt!36466 () (_ BitVec 32))

(assert (=> d!18737 (= lt!36467 (bvmul (bvxor lt!36466 (bvlshr lt!36466 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!18737 (= lt!36466 ((_ extract 31 0) (bvand (bvxor (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvlshr (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!18737 (and (bvsge (mask!6266 newMap!16) #b00000000000000000000000000000000) (let ((res!41213 (let ((h!2098 ((_ extract 31 0) (bvand (bvxor (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvlshr (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11651 (bvmul (bvxor h!2098 (bvlshr h!2098 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11651 (bvlshr x!11651 #b00000000000000000000000000001101)) (mask!6266 newMap!16)))))) (and (bvslt res!41213 (bvadd (mask!6266 newMap!16) #b00000000000000000000000000000001)) (bvsge res!41213 #b00000000000000000000000000000000))))))

(assert (=> d!18737 (= (toIndex!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (mask!6266 newMap!16)) (bvand (bvxor lt!36467 (bvlshr lt!36467 #b00000000000000000000000000001101)) (mask!6266 newMap!16)))))

(assert (=> d!18497 d!18737))

(declare-fun d!18739 () Bool)

(assert (=> d!18739 (= (validMask!0 (mask!6266 newMap!16)) (and (or (= (mask!6266 newMap!16) #b00000000000000000000000000000111) (= (mask!6266 newMap!16) #b00000000000000000000000000001111) (= (mask!6266 newMap!16) #b00000000000000000000000000011111) (= (mask!6266 newMap!16) #b00000000000000000000000000111111) (= (mask!6266 newMap!16) #b00000000000000000000000001111111) (= (mask!6266 newMap!16) #b00000000000000000000000011111111) (= (mask!6266 newMap!16) #b00000000000000000000000111111111) (= (mask!6266 newMap!16) #b00000000000000000000001111111111) (= (mask!6266 newMap!16) #b00000000000000000000011111111111) (= (mask!6266 newMap!16) #b00000000000000000000111111111111) (= (mask!6266 newMap!16) #b00000000000000000001111111111111) (= (mask!6266 newMap!16) #b00000000000000000011111111111111) (= (mask!6266 newMap!16) #b00000000000000000111111111111111) (= (mask!6266 newMap!16) #b00000000000000001111111111111111) (= (mask!6266 newMap!16) #b00000000000000011111111111111111) (= (mask!6266 newMap!16) #b00000000000000111111111111111111) (= (mask!6266 newMap!16) #b00000000000001111111111111111111) (= (mask!6266 newMap!16) #b00000000000011111111111111111111) (= (mask!6266 newMap!16) #b00000000000111111111111111111111) (= (mask!6266 newMap!16) #b00000000001111111111111111111111) (= (mask!6266 newMap!16) #b00000000011111111111111111111111) (= (mask!6266 newMap!16) #b00000000111111111111111111111111) (= (mask!6266 newMap!16) #b00000001111111111111111111111111) (= (mask!6266 newMap!16) #b00000011111111111111111111111111) (= (mask!6266 newMap!16) #b00000111111111111111111111111111) (= (mask!6266 newMap!16) #b00001111111111111111111111111111) (= (mask!6266 newMap!16) #b00011111111111111111111111111111) (= (mask!6266 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6266 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!18497 d!18739))

(declare-fun d!18741 () Bool)

(assert (=> d!18741 (= (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78501 d!18741))

(declare-fun d!18743 () Bool)

(assert (=> d!18743 (= ($colon$colon!68 e!51112 (ite c!11970 (h!2095 (toList!732 lt!35662)) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659)))) (Cons!1507 (ite c!11970 (h!2095 (toList!732 lt!35662)) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))) e!51112))))

(assert (=> bm!7168 d!18743))

(declare-fun d!18745 () Bool)

(declare-fun e!51455 () Bool)

(assert (=> d!18745 e!51455))

(declare-fun res!41214 () Bool)

(assert (=> d!18745 (=> res!41214 e!51455)))

(declare-fun lt!36470 () Bool)

(assert (=> d!18745 (= res!41214 (not lt!36470))))

(declare-fun lt!36471 () Bool)

(assert (=> d!18745 (= lt!36470 lt!36471)))

(declare-fun lt!36468 () Unit!2242)

(declare-fun e!51454 () Unit!2242)

(assert (=> d!18745 (= lt!36468 e!51454)))

(declare-fun c!12118 () Bool)

(assert (=> d!18745 (= c!12118 lt!36471)))

(assert (=> d!18745 (= lt!36471 (containsKey!139 (toList!732 lt!36087) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18745 (= (contains!739 lt!36087 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36470)))

(declare-fun b!78750 () Bool)

(declare-fun lt!36469 () Unit!2242)

(assert (=> b!78750 (= e!51454 lt!36469)))

(assert (=> b!78750 (= lt!36469 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36087) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> b!78750 (isDefined!89 (getValueByKey!135 (toList!732 lt!36087) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!78751 () Bool)

(declare-fun Unit!2282 () Unit!2242)

(assert (=> b!78751 (= e!51454 Unit!2282)))

(declare-fun b!78752 () Bool)

(assert (=> b!78752 (= e!51455 (isDefined!89 (getValueByKey!135 (toList!732 lt!36087) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!18745 c!12118) b!78750))

(assert (= (and d!18745 (not c!12118)) b!78751))

(assert (= (and d!18745 (not res!41214)) b!78752))

(declare-fun m!79111 () Bool)

(assert (=> d!18745 m!79111))

(declare-fun m!79113 () Bool)

(assert (=> b!78750 m!79113))

(assert (=> b!78750 m!78155))

(assert (=> b!78750 m!78155))

(declare-fun m!79115 () Bool)

(assert (=> b!78750 m!79115))

(assert (=> b!78752 m!78155))

(assert (=> b!78752 m!78155))

(assert (=> b!78752 m!79115))

(assert (=> d!18461 d!18745))

(declare-fun b!78753 () Bool)

(declare-fun e!51456 () Option!141)

(assert (=> b!78753 (= e!51456 (Some!140 (_2!1099 (h!2095 lt!36085))))))

(declare-fun e!51457 () Option!141)

(declare-fun b!78755 () Bool)

(assert (=> b!78755 (= e!51457 (getValueByKey!135 (t!5148 lt!36085) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun d!18747 () Bool)

(declare-fun c!12119 () Bool)

(assert (=> d!18747 (= c!12119 (and ((_ is Cons!1507) lt!36085) (= (_1!1099 (h!2095 lt!36085)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!18747 (= (getValueByKey!135 lt!36085 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) e!51456)))

(declare-fun b!78756 () Bool)

(assert (=> b!78756 (= e!51457 None!139)))

(declare-fun b!78754 () Bool)

(assert (=> b!78754 (= e!51456 e!51457)))

(declare-fun c!12120 () Bool)

(assert (=> b!78754 (= c!12120 (and ((_ is Cons!1507) lt!36085) (not (= (_1!1099 (h!2095 lt!36085)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!18747 c!12119) b!78753))

(assert (= (and d!18747 (not c!12119)) b!78754))

(assert (= (and b!78754 c!12120) b!78755))

(assert (= (and b!78754 (not c!12120)) b!78756))

(declare-fun m!79117 () Bool)

(assert (=> b!78755 m!79117))

(assert (=> d!18461 d!18747))

(declare-fun d!18749 () Bool)

(assert (=> d!18749 (= (getValueByKey!135 lt!36085 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36472 () Unit!2242)

(assert (=> d!18749 (= lt!36472 (choose!462 lt!36085 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun e!51458 () Bool)

(assert (=> d!18749 e!51458))

(declare-fun res!41215 () Bool)

(assert (=> d!18749 (=> (not res!41215) (not e!51458))))

(assert (=> d!18749 (= res!41215 (isStrictlySorted!290 lt!36085))))

(assert (=> d!18749 (= (lemmaContainsTupThenGetReturnValue!55 lt!36085 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36472)))

(declare-fun b!78757 () Bool)

(declare-fun res!41216 () Bool)

(assert (=> b!78757 (=> (not res!41216) (not e!51458))))

(assert (=> b!78757 (= res!41216 (containsKey!139 lt!36085 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!78758 () Bool)

(assert (=> b!78758 (= e!51458 (contains!740 lt!36085 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!18749 res!41215) b!78757))

(assert (= (and b!78757 res!41216) b!78758))

(assert (=> d!18749 m!78149))

(declare-fun m!79119 () Bool)

(assert (=> d!18749 m!79119))

(declare-fun m!79121 () Bool)

(assert (=> d!18749 m!79121))

(declare-fun m!79123 () Bool)

(assert (=> b!78757 m!79123))

(declare-fun m!79125 () Bool)

(assert (=> b!78758 m!79125))

(assert (=> d!18461 d!18749))

(declare-fun b!78759 () Bool)

(declare-fun e!51460 () List!1511)

(declare-fun call!7234 () List!1511)

(assert (=> b!78759 (= e!51460 call!7234)))

(declare-fun b!78760 () Bool)

(declare-fun res!41218 () Bool)

(declare-fun e!51462 () Bool)

(assert (=> b!78760 (=> (not res!41218) (not e!51462))))

(declare-fun lt!36473 () List!1511)

(assert (=> b!78760 (= res!41218 (containsKey!139 lt!36473 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun call!7235 () List!1511)

(declare-fun e!51463 () List!1511)

(declare-fun bm!7231 () Bool)

(declare-fun c!12122 () Bool)

(assert (=> bm!7231 (= call!7235 ($colon$colon!68 e!51463 (ite c!12122 (h!2095 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(declare-fun c!12123 () Bool)

(assert (=> bm!7231 (= c!12123 c!12122)))

(declare-fun b!78761 () Bool)

(declare-fun c!12121 () Bool)

(declare-fun c!12124 () Bool)

(assert (=> b!78761 (= e!51463 (ite c!12121 (t!5148 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (ite c!12124 (Cons!1507 (h!2095 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (t!5148 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))) Nil!1508)))))

(declare-fun d!18751 () Bool)

(assert (=> d!18751 e!51462))

(declare-fun res!41217 () Bool)

(assert (=> d!18751 (=> (not res!41217) (not e!51462))))

(assert (=> d!18751 (= res!41217 (isStrictlySorted!290 lt!36473))))

(declare-fun e!51459 () List!1511)

(assert (=> d!18751 (= lt!36473 e!51459)))

(assert (=> d!18751 (= c!12122 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (bvslt (_1!1099 (h!2095 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!18751 (isStrictlySorted!290 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18751 (= (insertStrictlySorted!58 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36473)))

(declare-fun bm!7232 () Bool)

(declare-fun call!7236 () List!1511)

(assert (=> bm!7232 (= call!7236 call!7234)))

(declare-fun b!78762 () Bool)

(assert (=> b!78762 (= c!12124 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (bvsgt (_1!1099 (h!2095 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun e!51461 () List!1511)

(assert (=> b!78762 (= e!51460 e!51461)))

(declare-fun b!78763 () Bool)

(assert (=> b!78763 (= e!51461 call!7236)))

(declare-fun b!78764 () Bool)

(assert (=> b!78764 (= e!51459 e!51460)))

(assert (=> b!78764 (= c!12121 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!78765 () Bool)

(assert (=> b!78765 (= e!51461 call!7236)))

(declare-fun bm!7233 () Bool)

(assert (=> bm!7233 (= call!7234 call!7235)))

(declare-fun b!78766 () Bool)

(assert (=> b!78766 (= e!51463 (insertStrictlySorted!58 (t!5148 (toList!732 (+!103 lt!35662 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!78767 () Bool)

(assert (=> b!78767 (= e!51459 call!7235)))

(declare-fun b!78768 () Bool)

(assert (=> b!78768 (= e!51462 (contains!740 lt!36473 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!18751 c!12122) b!78767))

(assert (= (and d!18751 (not c!12122)) b!78764))

(assert (= (and b!78764 c!12121) b!78759))

(assert (= (and b!78764 (not c!12121)) b!78762))

(assert (= (and b!78762 c!12124) b!78765))

(assert (= (and b!78762 (not c!12124)) b!78763))

(assert (= (or b!78765 b!78763) bm!7232))

(assert (= (or b!78759 bm!7232) bm!7233))

(assert (= (or b!78767 bm!7233) bm!7231))

(assert (= (and bm!7231 c!12123) b!78766))

(assert (= (and bm!7231 (not c!12123)) b!78761))

(assert (= (and d!18751 res!41217) b!78760))

(assert (= (and b!78760 res!41218) b!78768))

(declare-fun m!79127 () Bool)

(assert (=> b!78766 m!79127))

(declare-fun m!79129 () Bool)

(assert (=> bm!7231 m!79129))

(declare-fun m!79131 () Bool)

(assert (=> b!78760 m!79131))

(declare-fun m!79133 () Bool)

(assert (=> b!78768 m!79133))

(declare-fun m!79135 () Bool)

(assert (=> d!18751 m!79135))

(declare-fun m!79137 () Bool)

(assert (=> d!18751 m!79137))

(assert (=> d!18461 d!18751))

(declare-fun d!18753 () Bool)

(declare-fun e!51464 () Bool)

(assert (=> d!18753 e!51464))

(declare-fun res!41219 () Bool)

(assert (=> d!18753 (=> (not res!41219) (not e!51464))))

(declare-fun lt!36477 () ListLongMap!1433)

(assert (=> d!18753 (= res!41219 (contains!739 lt!36477 (_1!1099 (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))))

(declare-fun lt!36475 () List!1511)

(assert (=> d!18753 (= lt!36477 (ListLongMap!1434 lt!36475))))

(declare-fun lt!36474 () Unit!2242)

(declare-fun lt!36476 () Unit!2242)

(assert (=> d!18753 (= lt!36474 lt!36476)))

(assert (=> d!18753 (= (getValueByKey!135 lt!36475 (_1!1099 (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))) (Some!140 (_2!1099 (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))))

(assert (=> d!18753 (= lt!36476 (lemmaContainsTupThenGetReturnValue!55 lt!36475 (_1!1099 (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) (_2!1099 (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))))

(assert (=> d!18753 (= lt!36475 (insertStrictlySorted!58 (toList!732 (ite c!11987 call!7182 (ite c!11985 call!7178 call!7181))) (_1!1099 (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) (_2!1099 (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))))

(assert (=> d!18753 (= (+!103 (ite c!11987 call!7182 (ite c!11985 call!7178 call!7181)) (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) lt!36477)))

(declare-fun b!78769 () Bool)

(declare-fun res!41220 () Bool)

(assert (=> b!78769 (=> (not res!41220) (not e!51464))))

(assert (=> b!78769 (= res!41220 (= (getValueByKey!135 (toList!732 lt!36477) (_1!1099 (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))) (Some!140 (_2!1099 (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))))

(declare-fun b!78770 () Bool)

(assert (=> b!78770 (= e!51464 (contains!740 (toList!732 lt!36477) (ite (or c!11987 c!11985) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11926 c!11928) lt!35658 (zeroValue!2169 newMap!16))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(assert (= (and d!18753 res!41219) b!78769))

(assert (= (and b!78769 res!41220) b!78770))

(declare-fun m!79139 () Bool)

(assert (=> d!18753 m!79139))

(declare-fun m!79141 () Bool)

(assert (=> d!18753 m!79141))

(declare-fun m!79143 () Bool)

(assert (=> d!18753 m!79143))

(declare-fun m!79145 () Bool)

(assert (=> d!18753 m!79145))

(declare-fun m!79147 () Bool)

(assert (=> b!78769 m!79147))

(declare-fun m!79149 () Bool)

(assert (=> b!78770 m!79149))

(assert (=> bm!7180 d!18753))

(declare-fun d!18755 () Bool)

(assert (=> d!18755 (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!36478 () Unit!2242)

(assert (=> d!18755 (= lt!36478 (choose!463 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51465 () Bool)

(assert (=> d!18755 e!51465))

(declare-fun res!41221 () Bool)

(assert (=> d!18755 (=> (not res!41221) (not e!51465))))

(assert (=> d!18755 (= res!41221 (isStrictlySorted!290 (toList!732 lt!35837)))))

(assert (=> d!18755 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000) lt!36478)))

(declare-fun b!78771 () Bool)

(assert (=> b!78771 (= e!51465 (containsKey!139 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!18755 res!41221) b!78771))

(assert (=> d!18755 m!78007))

(assert (=> d!18755 m!78007))

(assert (=> d!18755 m!78009))

(declare-fun m!79151 () Bool)

(assert (=> d!18755 m!79151))

(declare-fun m!79153 () Bool)

(assert (=> d!18755 m!79153))

(assert (=> b!78771 m!78003))

(assert (=> b!78117 d!18755))

(declare-fun d!18757 () Bool)

(assert (=> d!18757 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3327 () Bool)

(assert (= bs!3327 d!18757))

(assert (=> bs!3327 m!78007))

(declare-fun m!79155 () Bool)

(assert (=> bs!3327 m!79155))

(assert (=> b!78117 d!18757))

(declare-fun b!78772 () Bool)

(declare-fun e!51466 () Option!141)

(assert (=> b!78772 (= e!51466 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35837)))))))

(declare-fun b!78774 () Bool)

(declare-fun e!51467 () Option!141)

(assert (=> b!78774 (= e!51467 (getValueByKey!135 (t!5148 (toList!732 lt!35837)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!18759 () Bool)

(declare-fun c!12125 () Bool)

(assert (=> d!18759 (= c!12125 (and ((_ is Cons!1507) (toList!732 lt!35837)) (= (_1!1099 (h!2095 (toList!732 lt!35837))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18759 (= (getValueByKey!135 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000) e!51466)))

(declare-fun b!78775 () Bool)

(assert (=> b!78775 (= e!51467 None!139)))

(declare-fun b!78773 () Bool)

(assert (=> b!78773 (= e!51466 e!51467)))

(declare-fun c!12126 () Bool)

(assert (=> b!78773 (= c!12126 (and ((_ is Cons!1507) (toList!732 lt!35837)) (not (= (_1!1099 (h!2095 (toList!732 lt!35837))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!18759 c!12125) b!78772))

(assert (= (and d!18759 (not c!12125)) b!78773))

(assert (= (and b!78773 c!12126) b!78774))

(assert (= (and b!78773 (not c!12126)) b!78775))

(declare-fun m!79157 () Bool)

(assert (=> b!78774 m!79157))

(assert (=> b!78117 d!18759))

(declare-fun d!18761 () Bool)

(assert (=> d!18761 (= (isDefined!89 (getValueByKey!135 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))) (not (isEmpty!331 (getValueByKey!135 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))))

(declare-fun bs!3328 () Bool)

(assert (= bs!3328 d!18761))

(assert (=> bs!3328 m!78237))

(declare-fun m!79159 () Bool)

(assert (=> bs!3328 m!79159))

(assert (=> b!78249 d!18761))

(declare-fun b!78776 () Bool)

(declare-fun e!51468 () Option!141)

(assert (=> b!78776 (= e!51468 (Some!140 (_2!1099 (h!2095 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))))))

(declare-fun e!51469 () Option!141)

(declare-fun b!78778 () Bool)

(assert (=> b!78778 (= e!51469 (getValueByKey!135 (t!5148 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun d!18763 () Bool)

(declare-fun c!12127 () Bool)

(assert (=> d!18763 (= c!12127 (and ((_ is Cons!1507) (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))) (= (_1!1099 (h!2095 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (=> d!18763 (= (getValueByKey!135 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) e!51468)))

(declare-fun b!78779 () Bool)

(assert (=> b!78779 (= e!51469 None!139)))

(declare-fun b!78777 () Bool)

(assert (=> b!78777 (= e!51468 e!51469)))

(declare-fun c!12128 () Bool)

(assert (=> b!78777 (= c!12128 (and ((_ is Cons!1507) (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))) (not (= (_1!1099 (h!2095 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))))

(assert (= (and d!18763 c!12127) b!78776))

(assert (= (and d!18763 (not c!12127)) b!78777))

(assert (= (and b!78777 c!12128) b!78778))

(assert (= (and b!78777 (not c!12128)) b!78779))

(assert (=> b!78778 m!77463))

(declare-fun m!79161 () Bool)

(assert (=> b!78778 m!79161))

(assert (=> b!78249 d!18763))

(declare-fun d!18765 () Bool)

(declare-fun res!41222 () Bool)

(declare-fun e!51470 () Bool)

(assert (=> d!18765 (=> res!41222 e!51470)))

(assert (=> d!18765 (= res!41222 (or ((_ is Nil!1508) lt!36299) ((_ is Nil!1508) (t!5148 lt!36299))))))

(assert (=> d!18765 (= (isStrictlySorted!290 lt!36299) e!51470)))

(declare-fun b!78780 () Bool)

(declare-fun e!51471 () Bool)

(assert (=> b!78780 (= e!51470 e!51471)))

(declare-fun res!41223 () Bool)

(assert (=> b!78780 (=> (not res!41223) (not e!51471))))

(assert (=> b!78780 (= res!41223 (bvslt (_1!1099 (h!2095 lt!36299)) (_1!1099 (h!2095 (t!5148 lt!36299)))))))

(declare-fun b!78781 () Bool)

(assert (=> b!78781 (= e!51471 (isStrictlySorted!290 (t!5148 lt!36299)))))

(assert (= (and d!18765 (not res!41222)) b!78780))

(assert (= (and b!78780 res!41223) b!78781))

(declare-fun m!79163 () Bool)

(assert (=> b!78781 m!79163))

(assert (=> d!18557 d!18765))

(assert (=> d!18557 d!18673))

(declare-fun d!18767 () Bool)

(declare-fun e!51473 () Bool)

(assert (=> d!18767 e!51473))

(declare-fun res!41224 () Bool)

(assert (=> d!18767 (=> res!41224 e!51473)))

(declare-fun lt!36481 () Bool)

(assert (=> d!18767 (= res!41224 (not lt!36481))))

(declare-fun lt!36482 () Bool)

(assert (=> d!18767 (= lt!36481 lt!36482)))

(declare-fun lt!36479 () Unit!2242)

(declare-fun e!51472 () Unit!2242)

(assert (=> d!18767 (= lt!36479 e!51472)))

(declare-fun c!12129 () Bool)

(assert (=> d!18767 (= c!12129 lt!36482)))

(assert (=> d!18767 (= lt!36482 (containsKey!139 (toList!732 lt!36303) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18767 (= (contains!739 lt!36303 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36481)))

(declare-fun b!78782 () Bool)

(declare-fun lt!36480 () Unit!2242)

(assert (=> b!78782 (= e!51472 lt!36480)))

(assert (=> b!78782 (= lt!36480 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36303) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> b!78782 (isDefined!89 (getValueByKey!135 (toList!732 lt!36303) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!78783 () Bool)

(declare-fun Unit!2283 () Unit!2242)

(assert (=> b!78783 (= e!51472 Unit!2283)))

(declare-fun b!78784 () Bool)

(assert (=> b!78784 (= e!51473 (isDefined!89 (getValueByKey!135 (toList!732 lt!36303) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18767 c!12129) b!78782))

(assert (= (and d!18767 (not c!12129)) b!78783))

(assert (= (and d!18767 (not res!41224)) b!78784))

(declare-fun m!79165 () Bool)

(assert (=> d!18767 m!79165))

(declare-fun m!79167 () Bool)

(assert (=> b!78782 m!79167))

(assert (=> b!78782 m!78579))

(assert (=> b!78782 m!78579))

(declare-fun m!79169 () Bool)

(assert (=> b!78782 m!79169))

(assert (=> b!78784 m!78579))

(assert (=> b!78784 m!78579))

(assert (=> b!78784 m!79169))

(assert (=> d!18559 d!18767))

(declare-fun b!78785 () Bool)

(declare-fun e!51474 () Option!141)

(assert (=> b!78785 (= e!51474 (Some!140 (_2!1099 (h!2095 lt!36301))))))

(declare-fun b!78787 () Bool)

(declare-fun e!51475 () Option!141)

(assert (=> b!78787 (= e!51475 (getValueByKey!135 (t!5148 lt!36301) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!18769 () Bool)

(declare-fun c!12130 () Bool)

(assert (=> d!18769 (= c!12130 (and ((_ is Cons!1507) lt!36301) (= (_1!1099 (h!2095 lt!36301)) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18769 (= (getValueByKey!135 lt!36301 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!51474)))

(declare-fun b!78788 () Bool)

(assert (=> b!78788 (= e!51475 None!139)))

(declare-fun b!78786 () Bool)

(assert (=> b!78786 (= e!51474 e!51475)))

(declare-fun c!12131 () Bool)

(assert (=> b!78786 (= c!12131 (and ((_ is Cons!1507) lt!36301) (not (= (_1!1099 (h!2095 lt!36301)) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!18769 c!12130) b!78785))

(assert (= (and d!18769 (not c!12130)) b!78786))

(assert (= (and b!78786 c!12131) b!78787))

(assert (= (and b!78786 (not c!12131)) b!78788))

(declare-fun m!79171 () Bool)

(assert (=> b!78787 m!79171))

(assert (=> d!18559 d!18769))

(declare-fun d!18771 () Bool)

(assert (=> d!18771 (= (getValueByKey!135 lt!36301 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36483 () Unit!2242)

(assert (=> d!18771 (= lt!36483 (choose!462 lt!36301 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!51476 () Bool)

(assert (=> d!18771 e!51476))

(declare-fun res!41225 () Bool)

(assert (=> d!18771 (=> (not res!41225) (not e!51476))))

(assert (=> d!18771 (= res!41225 (isStrictlySorted!290 lt!36301))))

(assert (=> d!18771 (= (lemmaContainsTupThenGetReturnValue!55 lt!36301 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36483)))

(declare-fun b!78789 () Bool)

(declare-fun res!41226 () Bool)

(assert (=> b!78789 (=> (not res!41226) (not e!51476))))

(assert (=> b!78789 (= res!41226 (containsKey!139 lt!36301 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!78790 () Bool)

(assert (=> b!78790 (= e!51476 (contains!740 lt!36301 (tuple2!2177 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18771 res!41225) b!78789))

(assert (= (and b!78789 res!41226) b!78790))

(assert (=> d!18771 m!78573))

(declare-fun m!79173 () Bool)

(assert (=> d!18771 m!79173))

(declare-fun m!79175 () Bool)

(assert (=> d!18771 m!79175))

(declare-fun m!79177 () Bool)

(assert (=> b!78789 m!79177))

(declare-fun m!79179 () Bool)

(assert (=> b!78790 m!79179))

(assert (=> d!18559 d!18771))

(declare-fun b!78791 () Bool)

(declare-fun e!51478 () List!1511)

(declare-fun call!7237 () List!1511)

(assert (=> b!78791 (= e!51478 call!7237)))

(declare-fun b!78792 () Bool)

(declare-fun res!41228 () Bool)

(declare-fun e!51480 () Bool)

(assert (=> b!78792 (=> (not res!41228) (not e!51480))))

(declare-fun lt!36484 () List!1511)

(assert (=> b!78792 (= res!41228 (containsKey!139 lt!36484 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun c!12133 () Bool)

(declare-fun bm!7234 () Bool)

(declare-fun call!7238 () List!1511)

(declare-fun e!51481 () List!1511)

(assert (=> bm!7234 (= call!7238 ($colon$colon!68 e!51481 (ite c!12133 (h!2095 (toList!732 lt!35657)) (tuple2!2177 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun c!12134 () Bool)

(assert (=> bm!7234 (= c!12134 c!12133)))

(declare-fun b!78793 () Bool)

(declare-fun c!12135 () Bool)

(declare-fun c!12132 () Bool)

(assert (=> b!78793 (= e!51481 (ite c!12132 (t!5148 (toList!732 lt!35657)) (ite c!12135 (Cons!1507 (h!2095 (toList!732 lt!35657)) (t!5148 (toList!732 lt!35657))) Nil!1508)))))

(declare-fun d!18773 () Bool)

(assert (=> d!18773 e!51480))

(declare-fun res!41227 () Bool)

(assert (=> d!18773 (=> (not res!41227) (not e!51480))))

(assert (=> d!18773 (= res!41227 (isStrictlySorted!290 lt!36484))))

(declare-fun e!51477 () List!1511)

(assert (=> d!18773 (= lt!36484 e!51477)))

(assert (=> d!18773 (= c!12133 (and ((_ is Cons!1507) (toList!732 lt!35657)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18773 (isStrictlySorted!290 (toList!732 lt!35657))))

(assert (=> d!18773 (= (insertStrictlySorted!58 (toList!732 lt!35657) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36484)))

(declare-fun bm!7235 () Bool)

(declare-fun call!7239 () List!1511)

(assert (=> bm!7235 (= call!7239 call!7237)))

(declare-fun b!78794 () Bool)

(assert (=> b!78794 (= c!12135 (and ((_ is Cons!1507) (toList!732 lt!35657)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun e!51479 () List!1511)

(assert (=> b!78794 (= e!51478 e!51479)))

(declare-fun b!78795 () Bool)

(assert (=> b!78795 (= e!51479 call!7239)))

(declare-fun b!78796 () Bool)

(assert (=> b!78796 (= e!51477 e!51478)))

(assert (=> b!78796 (= c!12132 (and ((_ is Cons!1507) (toList!732 lt!35657)) (= (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78797 () Bool)

(assert (=> b!78797 (= e!51479 call!7239)))

(declare-fun bm!7236 () Bool)

(assert (=> bm!7236 (= call!7237 call!7238)))

(declare-fun b!78798 () Bool)

(assert (=> b!78798 (= e!51481 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35657)) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!78799 () Bool)

(assert (=> b!78799 (= e!51477 call!7238)))

(declare-fun b!78800 () Bool)

(assert (=> b!78800 (= e!51480 (contains!740 lt!36484 (tuple2!2177 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18773 c!12133) b!78799))

(assert (= (and d!18773 (not c!12133)) b!78796))

(assert (= (and b!78796 c!12132) b!78791))

(assert (= (and b!78796 (not c!12132)) b!78794))

(assert (= (and b!78794 c!12135) b!78797))

(assert (= (and b!78794 (not c!12135)) b!78795))

(assert (= (or b!78797 b!78795) bm!7235))

(assert (= (or b!78791 bm!7235) bm!7236))

(assert (= (or b!78799 bm!7236) bm!7234))

(assert (= (and bm!7234 c!12134) b!78798))

(assert (= (and bm!7234 (not c!12134)) b!78793))

(assert (= (and d!18773 res!41227) b!78792))

(assert (= (and b!78792 res!41228) b!78800))

(declare-fun m!79181 () Bool)

(assert (=> b!78798 m!79181))

(declare-fun m!79183 () Bool)

(assert (=> bm!7234 m!79183))

(declare-fun m!79185 () Bool)

(assert (=> b!78792 m!79185))

(declare-fun m!79187 () Bool)

(assert (=> b!78800 m!79187))

(declare-fun m!79189 () Bool)

(assert (=> d!18773 m!79189))

(assert (=> d!18773 m!78569))

(assert (=> d!18559 d!18773))

(assert (=> b!78095 d!18741))

(declare-fun d!18775 () Bool)

(declare-fun lt!36485 () Bool)

(assert (=> d!18775 (= lt!36485 (select (content!83 lt!35799) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(declare-fun e!51482 () Bool)

(assert (=> d!18775 (= lt!36485 e!51482)))

(declare-fun res!41229 () Bool)

(assert (=> d!18775 (=> (not res!41229) (not e!51482))))

(assert (=> d!18775 (= res!41229 ((_ is Cons!1507) lt!35799))))

(assert (=> d!18775 (= (contains!740 lt!35799 (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))) lt!36485)))

(declare-fun b!78801 () Bool)

(declare-fun e!51483 () Bool)

(assert (=> b!78801 (= e!51482 e!51483)))

(declare-fun res!41230 () Bool)

(assert (=> b!78801 (=> res!41230 e!51483)))

(assert (=> b!78801 (= res!41230 (= (h!2095 lt!35799) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(declare-fun b!78802 () Bool)

(assert (=> b!78802 (= e!51483 (contains!740 (t!5148 lt!35799) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(assert (= (and d!18775 res!41229) b!78801))

(assert (= (and b!78801 (not res!41230)) b!78802))

(declare-fun m!79191 () Bool)

(assert (=> d!18775 m!79191))

(declare-fun m!79193 () Bool)

(assert (=> d!18775 m!79193))

(declare-fun m!79195 () Bool)

(assert (=> b!78802 m!79195))

(assert (=> b!78409 d!18775))

(declare-fun d!18777 () Bool)

(assert (=> d!18777 (contains!739 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))

(declare-fun lt!36488 () Unit!2242)

(declare-fun choose!473 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 64) (_ BitVec 32) Int) Unit!2242)

(assert (=> d!18777 (= lt!36488 (choose!473 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(assert (=> d!18777 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18777 (= (lemmaArrayContainsKeyThenInListMap!16 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36488)))

(declare-fun bs!3329 () Bool)

(assert (= bs!3329 d!18777))

(assert (=> bs!3329 m!77787))

(assert (=> bs!3329 m!77787))

(assert (=> bs!3329 m!77463))

(assert (=> bs!3329 m!77889))

(assert (=> bs!3329 m!77463))

(declare-fun m!79197 () Bool)

(assert (=> bs!3329 m!79197))

(assert (=> bs!3329 m!77977))

(assert (=> b!78350 d!18777))

(assert (=> b!78350 d!18483))

(assert (=> b!78350 d!18409))

(declare-fun d!18779 () Bool)

(declare-fun lt!36489 () Bool)

(assert (=> d!18779 (= lt!36489 (select (content!83 (t!5148 (toList!732 lt!35812))) lt!35670))))

(declare-fun e!51484 () Bool)

(assert (=> d!18779 (= lt!36489 e!51484)))

(declare-fun res!41231 () Bool)

(assert (=> d!18779 (=> (not res!41231) (not e!51484))))

(assert (=> d!18779 (= res!41231 ((_ is Cons!1507) (t!5148 (toList!732 lt!35812))))))

(assert (=> d!18779 (= (contains!740 (t!5148 (toList!732 lt!35812)) lt!35670) lt!36489)))

(declare-fun b!78803 () Bool)

(declare-fun e!51485 () Bool)

(assert (=> b!78803 (= e!51484 e!51485)))

(declare-fun res!41232 () Bool)

(assert (=> b!78803 (=> res!41232 e!51485)))

(assert (=> b!78803 (= res!41232 (= (h!2095 (t!5148 (toList!732 lt!35812))) lt!35670))))

(declare-fun b!78804 () Bool)

(assert (=> b!78804 (= e!51485 (contains!740 (t!5148 (t!5148 (toList!732 lt!35812))) lt!35670))))

(assert (= (and d!18779 res!41231) b!78803))

(assert (= (and b!78803 (not res!41232)) b!78804))

(declare-fun m!79199 () Bool)

(assert (=> d!18779 m!79199))

(declare-fun m!79201 () Bool)

(assert (=> d!18779 m!79201))

(declare-fun m!79203 () Bool)

(assert (=> b!78804 m!79203))

(assert (=> b!78251 d!18779))

(declare-fun b!78805 () Bool)

(assert (=> b!78805 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> b!78805 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2125 (_values!2254 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!51488 () Bool)

(declare-fun lt!36495 () ListLongMap!1433)

(assert (=> b!78805 (= e!51488 (= (apply!79 lt!36495 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!78807 () Bool)

(declare-fun lt!36490 () Unit!2242)

(declare-fun lt!36491 () Unit!2242)

(assert (=> b!78807 (= lt!36490 lt!36491)))

(declare-fun lt!36494 () ListLongMap!1433)

(declare-fun lt!36496 () (_ BitVec 64))

(declare-fun lt!36492 () V!2993)

(declare-fun lt!36493 () (_ BitVec 64))

(assert (=> b!78807 (not (contains!739 (+!103 lt!36494 (tuple2!2177 lt!36496 lt!36492)) lt!36493))))

(assert (=> b!78807 (= lt!36491 (addStillNotContains!29 lt!36494 lt!36496 lt!36492 lt!36493))))

(assert (=> b!78807 (= lt!36493 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!78807 (= lt!36492 (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!78807 (= lt!36496 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!7240 () ListLongMap!1433)

(assert (=> b!78807 (= lt!36494 call!7240)))

(declare-fun e!51491 () ListLongMap!1433)

(assert (=> b!78807 (= e!51491 (+!103 call!7240 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7237 () Bool)

(assert (=> bm!7237 (= call!7240 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun b!78808 () Bool)

(declare-fun e!51492 () ListLongMap!1433)

(assert (=> b!78808 (= e!51492 e!51491)))

(declare-fun c!12139 () Bool)

(assert (=> b!78808 (= c!12139 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!78809 () Bool)

(declare-fun e!51489 () Bool)

(assert (=> b!78809 (= e!51489 (= lt!36495 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!78810 () Bool)

(declare-fun e!51486 () Bool)

(assert (=> b!78810 (= e!51486 e!51488)))

(assert (=> b!78810 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun res!41236 () Bool)

(assert (=> b!78810 (= res!41236 (contains!739 lt!36495 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!78810 (=> (not res!41236) (not e!51488))))

(declare-fun b!78811 () Bool)

(assert (=> b!78811 (= e!51492 (ListLongMap!1434 Nil!1508))))

(declare-fun b!78812 () Bool)

(assert (=> b!78812 (= e!51491 call!7240)))

(declare-fun b!78813 () Bool)

(declare-fun e!51490 () Bool)

(assert (=> b!78813 (= e!51490 e!51486)))

(declare-fun c!12137 () Bool)

(declare-fun e!51487 () Bool)

(assert (=> b!78813 (= c!12137 e!51487)))

(declare-fun res!41234 () Bool)

(assert (=> b!78813 (=> (not res!41234) (not e!51487))))

(assert (=> b!78813 (= res!41234 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!78814 () Bool)

(declare-fun res!41233 () Bool)

(assert (=> b!78814 (=> (not res!41233) (not e!51490))))

(assert (=> b!78814 (= res!41233 (not (contains!739 lt!36495 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!18781 () Bool)

(assert (=> d!18781 e!51490))

(declare-fun res!41235 () Bool)

(assert (=> d!18781 (=> (not res!41235) (not e!51490))))

(assert (=> d!18781 (= res!41235 (not (contains!739 lt!36495 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18781 (= lt!36495 e!51492)))

(declare-fun c!12138 () Bool)

(assert (=> d!18781 (= c!12138 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!18781 (validMask!0 (mask!6266 (v!2584 (underlying!273 thiss!992))))))

(assert (=> d!18781 (= (getCurrentListMapNoExtraKeys!67 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (_values!2254 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992))) (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) (minValue!2169 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992)))) lt!36495)))

(declare-fun b!78806 () Bool)

(assert (=> b!78806 (= e!51486 e!51489)))

(declare-fun c!12136 () Bool)

(assert (=> b!78806 (= c!12136 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!78815 () Bool)

(assert (=> b!78815 (= e!51489 (isEmpty!330 lt!36495))))

(declare-fun b!78816 () Bool)

(assert (=> b!78816 (= e!51487 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!78816 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!18781 c!12138) b!78811))

(assert (= (and d!18781 (not c!12138)) b!78808))

(assert (= (and b!78808 c!12139) b!78807))

(assert (= (and b!78808 (not c!12139)) b!78812))

(assert (= (or b!78807 b!78812) bm!7237))

(assert (= (and d!18781 res!41235) b!78814))

(assert (= (and b!78814 res!41233) b!78813))

(assert (= (and b!78813 res!41234) b!78816))

(assert (= (and b!78813 c!12137) b!78810))

(assert (= (and b!78813 (not c!12137)) b!78806))

(assert (= (and b!78810 res!41236) b!78805))

(assert (= (and b!78806 c!12136) b!78809))

(assert (= (and b!78806 (not c!12136)) b!78815))

(declare-fun b_lambda!3513 () Bool)

(assert (=> (not b_lambda!3513) (not b!78805)))

(assert (=> b!78805 t!5144))

(declare-fun b_and!4825 () Bool)

(assert (= b_and!4821 (and (=> t!5144 result!2801) b_and!4825)))

(assert (=> b!78805 t!5146))

(declare-fun b_and!4827 () Bool)

(assert (= b_and!4823 (and (=> t!5146 result!2805) b_and!4827)))

(declare-fun b_lambda!3515 () Bool)

(assert (=> (not b_lambda!3515) (not b!78807)))

(assert (=> b!78807 t!5144))

(declare-fun b_and!4829 () Bool)

(assert (= b_and!4825 (and (=> t!5144 result!2801) b_and!4829)))

(assert (=> b!78807 t!5146))

(declare-fun b_and!4831 () Bool)

(assert (= b_and!4827 (and (=> t!5146 result!2805) b_and!4831)))

(declare-fun m!79205 () Bool)

(assert (=> b!78814 m!79205))

(declare-fun m!79207 () Bool)

(assert (=> b!78808 m!79207))

(assert (=> b!78808 m!79207))

(declare-fun m!79209 () Bool)

(assert (=> b!78808 m!79209))

(assert (=> b!78805 m!77489))

(declare-fun m!79211 () Bool)

(assert (=> b!78805 m!79211))

(assert (=> b!78805 m!79207))

(assert (=> b!78805 m!79211))

(assert (=> b!78805 m!77489))

(declare-fun m!79213 () Bool)

(assert (=> b!78805 m!79213))

(assert (=> b!78805 m!79207))

(declare-fun m!79215 () Bool)

(assert (=> b!78805 m!79215))

(declare-fun m!79217 () Bool)

(assert (=> bm!7237 m!79217))

(declare-fun m!79219 () Bool)

(assert (=> d!18781 m!79219))

(assert (=> d!18781 m!77475))

(assert (=> b!78816 m!79207))

(assert (=> b!78816 m!79207))

(assert (=> b!78816 m!79209))

(assert (=> b!78807 m!77489))

(declare-fun m!79221 () Bool)

(assert (=> b!78807 m!79221))

(assert (=> b!78807 m!79221))

(declare-fun m!79223 () Bool)

(assert (=> b!78807 m!79223))

(assert (=> b!78807 m!79211))

(declare-fun m!79225 () Bool)

(assert (=> b!78807 m!79225))

(declare-fun m!79227 () Bool)

(assert (=> b!78807 m!79227))

(assert (=> b!78807 m!79211))

(assert (=> b!78807 m!77489))

(assert (=> b!78807 m!79213))

(assert (=> b!78807 m!79207))

(assert (=> b!78810 m!79207))

(assert (=> b!78810 m!79207))

(declare-fun m!79229 () Bool)

(assert (=> b!78810 m!79229))

(declare-fun m!79231 () Bool)

(assert (=> b!78815 m!79231))

(assert (=> b!78809 m!79217))

(assert (=> bm!7174 d!18781))

(declare-fun b!78817 () Bool)

(declare-fun e!51503 () Bool)

(declare-fun lt!36511 () ListLongMap!1433)

(assert (=> b!78817 (= e!51503 (= (apply!79 lt!36511 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (_values!2254 (_2!1098 lt!35994))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 (_2!1098 lt!35994)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78817 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (_values!2254 (_2!1098 lt!35994)))))))

(assert (=> b!78817 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))))))

(declare-fun b!78818 () Bool)

(declare-fun c!12141 () Bool)

(assert (=> b!78818 (= c!12141 (and (not (= (bvand (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!51502 () ListLongMap!1433)

(declare-fun e!51495 () ListLongMap!1433)

(assert (=> b!78818 (= e!51502 e!51495)))

(declare-fun b!78819 () Bool)

(declare-fun e!51501 () Bool)

(assert (=> b!78819 (= e!51501 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000)))))

(declare-fun b!78820 () Bool)

(declare-fun e!51500 () Unit!2242)

(declare-fun lt!36514 () Unit!2242)

(assert (=> b!78820 (= e!51500 lt!36514)))

(declare-fun lt!36501 () ListLongMap!1433)

(assert (=> b!78820 (= lt!36501 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (_2!1098 lt!35994)) (_values!2254 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994)) (extraKeys!2122 (_2!1098 lt!35994)) (zeroValue!2169 (_2!1098 lt!35994)) (minValue!2169 (_2!1098 lt!35994)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1098 lt!35994))))))

(declare-fun lt!36497 () (_ BitVec 64))

(assert (=> b!78820 (= lt!36497 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36508 () (_ BitVec 64))

(assert (=> b!78820 (= lt!36508 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000))))

(declare-fun lt!36502 () Unit!2242)

(assert (=> b!78820 (= lt!36502 (addStillContains!55 lt!36501 lt!36497 (zeroValue!2169 (_2!1098 lt!35994)) lt!36508))))

(assert (=> b!78820 (contains!739 (+!103 lt!36501 (tuple2!2177 lt!36497 (zeroValue!2169 (_2!1098 lt!35994)))) lt!36508)))

(declare-fun lt!36499 () Unit!2242)

(assert (=> b!78820 (= lt!36499 lt!36502)))

(declare-fun lt!36500 () ListLongMap!1433)

(assert (=> b!78820 (= lt!36500 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (_2!1098 lt!35994)) (_values!2254 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994)) (extraKeys!2122 (_2!1098 lt!35994)) (zeroValue!2169 (_2!1098 lt!35994)) (minValue!2169 (_2!1098 lt!35994)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1098 lt!35994))))))

(declare-fun lt!36509 () (_ BitVec 64))

(assert (=> b!78820 (= lt!36509 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36506 () (_ BitVec 64))

(assert (=> b!78820 (= lt!36506 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000))))

(declare-fun lt!36507 () Unit!2242)

(assert (=> b!78820 (= lt!36507 (addApplyDifferent!55 lt!36500 lt!36509 (minValue!2169 (_2!1098 lt!35994)) lt!36506))))

(assert (=> b!78820 (= (apply!79 (+!103 lt!36500 (tuple2!2177 lt!36509 (minValue!2169 (_2!1098 lt!35994)))) lt!36506) (apply!79 lt!36500 lt!36506))))

(declare-fun lt!36498 () Unit!2242)

(assert (=> b!78820 (= lt!36498 lt!36507)))

(declare-fun lt!36505 () ListLongMap!1433)

(assert (=> b!78820 (= lt!36505 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (_2!1098 lt!35994)) (_values!2254 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994)) (extraKeys!2122 (_2!1098 lt!35994)) (zeroValue!2169 (_2!1098 lt!35994)) (minValue!2169 (_2!1098 lt!35994)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1098 lt!35994))))))

(declare-fun lt!36518 () (_ BitVec 64))

(assert (=> b!78820 (= lt!36518 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36516 () (_ BitVec 64))

(assert (=> b!78820 (= lt!36516 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000))))

(declare-fun lt!36517 () Unit!2242)

(assert (=> b!78820 (= lt!36517 (addApplyDifferent!55 lt!36505 lt!36518 (zeroValue!2169 (_2!1098 lt!35994)) lt!36516))))

(assert (=> b!78820 (= (apply!79 (+!103 lt!36505 (tuple2!2177 lt!36518 (zeroValue!2169 (_2!1098 lt!35994)))) lt!36516) (apply!79 lt!36505 lt!36516))))

(declare-fun lt!36510 () Unit!2242)

(assert (=> b!78820 (= lt!36510 lt!36517)))

(declare-fun lt!36512 () ListLongMap!1433)

(assert (=> b!78820 (= lt!36512 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (_2!1098 lt!35994)) (_values!2254 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994)) (extraKeys!2122 (_2!1098 lt!35994)) (zeroValue!2169 (_2!1098 lt!35994)) (minValue!2169 (_2!1098 lt!35994)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1098 lt!35994))))))

(declare-fun lt!36513 () (_ BitVec 64))

(assert (=> b!78820 (= lt!36513 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36515 () (_ BitVec 64))

(assert (=> b!78820 (= lt!36515 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000))))

(assert (=> b!78820 (= lt!36514 (addApplyDifferent!55 lt!36512 lt!36513 (minValue!2169 (_2!1098 lt!35994)) lt!36515))))

(assert (=> b!78820 (= (apply!79 (+!103 lt!36512 (tuple2!2177 lt!36513 (minValue!2169 (_2!1098 lt!35994)))) lt!36515) (apply!79 lt!36512 lt!36515))))

(declare-fun b!78822 () Bool)

(declare-fun e!51494 () Bool)

(declare-fun e!51496 () Bool)

(assert (=> b!78822 (= e!51494 e!51496)))

(declare-fun res!41239 () Bool)

(declare-fun call!7246 () Bool)

(assert (=> b!78822 (= res!41239 call!7246)))

(assert (=> b!78822 (=> (not res!41239) (not e!51496))))

(declare-fun bm!7238 () Bool)

(declare-fun call!7241 () ListLongMap!1433)

(declare-fun call!7245 () ListLongMap!1433)

(assert (=> bm!7238 (= call!7241 call!7245)))

(declare-fun b!78823 () Bool)

(assert (=> b!78823 (= e!51494 (not call!7246))))

(declare-fun b!78824 () Bool)

(declare-fun e!51499 () ListLongMap!1433)

(assert (=> b!78824 (= e!51499 e!51502)))

(declare-fun c!12142 () Bool)

(assert (=> b!78824 (= c!12142 (and (not (= (bvand (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78825 () Bool)

(declare-fun call!7242 () ListLongMap!1433)

(assert (=> b!78825 (= e!51495 call!7242)))

(declare-fun b!78826 () Bool)

(declare-fun call!7244 () ListLongMap!1433)

(assert (=> b!78826 (= e!51495 call!7244)))

(declare-fun b!78827 () Bool)

(declare-fun res!41244 () Bool)

(declare-fun e!51505 () Bool)

(assert (=> b!78827 (=> (not res!41244) (not e!51505))))

(declare-fun e!51493 () Bool)

(assert (=> b!78827 (= res!41244 e!51493)))

(declare-fun c!12140 () Bool)

(assert (=> b!78827 (= c!12140 (not (= (bvand (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7239 () Bool)

(declare-fun call!7243 () Bool)

(assert (=> bm!7239 (= call!7243 (contains!739 lt!36511 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7240 () Bool)

(assert (=> bm!7240 (= call!7246 (contains!739 lt!36511 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7241 () Bool)

(assert (=> bm!7241 (= call!7245 (getCurrentListMapNoExtraKeys!67 (_keys!3930 (_2!1098 lt!35994)) (_values!2254 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994)) (extraKeys!2122 (_2!1098 lt!35994)) (zeroValue!2169 (_2!1098 lt!35994)) (minValue!2169 (_2!1098 lt!35994)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1098 lt!35994))))))

(declare-fun b!78828 () Bool)

(declare-fun e!51504 () Bool)

(assert (=> b!78828 (= e!51504 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000)))))

(declare-fun bm!7242 () Bool)

(assert (=> bm!7242 (= call!7244 call!7241)))

(declare-fun b!78829 () Bool)

(declare-fun e!51498 () Bool)

(assert (=> b!78829 (= e!51498 (= (apply!79 lt!36511 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 (_2!1098 lt!35994))))))

(declare-fun b!78830 () Bool)

(declare-fun res!41245 () Bool)

(assert (=> b!78830 (=> (not res!41245) (not e!51505))))

(declare-fun e!51497 () Bool)

(assert (=> b!78830 (= res!41245 e!51497)))

(declare-fun res!41242 () Bool)

(assert (=> b!78830 (=> res!41242 e!51497)))

(assert (=> b!78830 (= res!41242 (not e!51504))))

(declare-fun res!41238 () Bool)

(assert (=> b!78830 (=> (not res!41238) (not e!51504))))

(assert (=> b!78830 (= res!41238 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))))))

(declare-fun b!78821 () Bool)

(declare-fun call!7247 () ListLongMap!1433)

(assert (=> b!78821 (= e!51499 (+!103 call!7247 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (_2!1098 lt!35994)))))))

(declare-fun d!18783 () Bool)

(assert (=> d!18783 e!51505))

(declare-fun res!41241 () Bool)

(assert (=> d!18783 (=> (not res!41241) (not e!51505))))

(assert (=> d!18783 (= res!41241 (or (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))))))))

(declare-fun lt!36503 () ListLongMap!1433)

(assert (=> d!18783 (= lt!36511 lt!36503)))

(declare-fun lt!36504 () Unit!2242)

(assert (=> d!18783 (= lt!36504 e!51500)))

(declare-fun c!12143 () Bool)

(assert (=> d!18783 (= c!12143 e!51501)))

(declare-fun res!41243 () Bool)

(assert (=> d!18783 (=> (not res!41243) (not e!51501))))

(assert (=> d!18783 (= res!41243 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))))))

(assert (=> d!18783 (= lt!36503 e!51499)))

(declare-fun c!12144 () Bool)

(assert (=> d!18783 (= c!12144 (and (not (= (bvand (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18783 (validMask!0 (mask!6266 (_2!1098 lt!35994)))))

(assert (=> d!18783 (= (getCurrentListMap!421 (_keys!3930 (_2!1098 lt!35994)) (_values!2254 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994)) (extraKeys!2122 (_2!1098 lt!35994)) (zeroValue!2169 (_2!1098 lt!35994)) (minValue!2169 (_2!1098 lt!35994)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1098 lt!35994))) lt!36511)))

(declare-fun b!78831 () Bool)

(assert (=> b!78831 (= e!51493 (not call!7243))))

(declare-fun bm!7243 () Bool)

(assert (=> bm!7243 (= call!7247 (+!103 (ite c!12144 call!7245 (ite c!12142 call!7241 call!7244)) (ite (or c!12144 c!12142) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (_2!1098 lt!35994))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (_2!1098 lt!35994))))))))

(declare-fun b!78832 () Bool)

(assert (=> b!78832 (= e!51502 call!7242)))

(declare-fun bm!7244 () Bool)

(assert (=> bm!7244 (= call!7242 call!7247)))

(declare-fun b!78833 () Bool)

(assert (=> b!78833 (= e!51497 e!51503)))

(declare-fun res!41240 () Bool)

(assert (=> b!78833 (=> (not res!41240) (not e!51503))))

(assert (=> b!78833 (= res!41240 (contains!739 lt!36511 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000)))))

(assert (=> b!78833 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))))))

(declare-fun b!78834 () Bool)

(assert (=> b!78834 (= e!51493 e!51498)))

(declare-fun res!41237 () Bool)

(assert (=> b!78834 (= res!41237 call!7243)))

(assert (=> b!78834 (=> (not res!41237) (not e!51498))))

(declare-fun b!78835 () Bool)

(assert (=> b!78835 (= e!51505 e!51494)))

(declare-fun c!12145 () Bool)

(assert (=> b!78835 (= c!12145 (not (= (bvand (extraKeys!2122 (_2!1098 lt!35994)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78836 () Bool)

(declare-fun Unit!2284 () Unit!2242)

(assert (=> b!78836 (= e!51500 Unit!2284)))

(declare-fun b!78837 () Bool)

(assert (=> b!78837 (= e!51496 (= (apply!79 lt!36511 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 (_2!1098 lt!35994))))))

(assert (= (and d!18783 c!12144) b!78821))

(assert (= (and d!18783 (not c!12144)) b!78824))

(assert (= (and b!78824 c!12142) b!78832))

(assert (= (and b!78824 (not c!12142)) b!78818))

(assert (= (and b!78818 c!12141) b!78825))

(assert (= (and b!78818 (not c!12141)) b!78826))

(assert (= (or b!78825 b!78826) bm!7242))

(assert (= (or b!78832 bm!7242) bm!7238))

(assert (= (or b!78832 b!78825) bm!7244))

(assert (= (or b!78821 bm!7238) bm!7241))

(assert (= (or b!78821 bm!7244) bm!7243))

(assert (= (and d!18783 res!41243) b!78819))

(assert (= (and d!18783 c!12143) b!78820))

(assert (= (and d!18783 (not c!12143)) b!78836))

(assert (= (and d!18783 res!41241) b!78830))

(assert (= (and b!78830 res!41238) b!78828))

(assert (= (and b!78830 (not res!41242)) b!78833))

(assert (= (and b!78833 res!41240) b!78817))

(assert (= (and b!78830 res!41245) b!78827))

(assert (= (and b!78827 c!12140) b!78834))

(assert (= (and b!78827 (not c!12140)) b!78831))

(assert (= (and b!78834 res!41237) b!78829))

(assert (= (or b!78834 b!78831) bm!7239))

(assert (= (and b!78827 res!41244) b!78835))

(assert (= (and b!78835 c!12145) b!78822))

(assert (= (and b!78835 (not c!12145)) b!78823))

(assert (= (and b!78822 res!41239) b!78837))

(assert (= (or b!78822 b!78823) bm!7240))

(declare-fun b_lambda!3517 () Bool)

(assert (=> (not b_lambda!3517) (not b!78817)))

(declare-fun t!5165 () Bool)

(declare-fun tb!1625 () Bool)

(assert (=> (and b!77645 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 (_2!1098 lt!35994))) t!5165) tb!1625))

(declare-fun result!2825 () Bool)

(assert (=> tb!1625 (= result!2825 tp_is_empty!2509)))

(assert (=> b!78817 t!5165))

(declare-fun b_and!4833 () Bool)

(assert (= b_and!4829 (and (=> t!5165 result!2825) b_and!4833)))

(declare-fun t!5167 () Bool)

(declare-fun tb!1627 () Bool)

(assert (=> (and b!77630 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (_2!1098 lt!35994))) t!5167) tb!1627))

(declare-fun result!2827 () Bool)

(assert (= result!2827 result!2825))

(assert (=> b!78817 t!5167))

(declare-fun b_and!4835 () Bool)

(assert (= b_and!4831 (and (=> t!5167 result!2827) b_and!4835)))

(declare-fun m!79233 () Bool)

(assert (=> b!78829 m!79233))

(declare-fun m!79235 () Bool)

(assert (=> b!78820 m!79235))

(declare-fun m!79237 () Bool)

(assert (=> b!78820 m!79237))

(declare-fun m!79239 () Bool)

(assert (=> b!78820 m!79239))

(declare-fun m!79241 () Bool)

(assert (=> b!78820 m!79241))

(declare-fun m!79243 () Bool)

(assert (=> b!78820 m!79243))

(declare-fun m!79245 () Bool)

(assert (=> b!78820 m!79245))

(declare-fun m!79247 () Bool)

(assert (=> b!78820 m!79247))

(declare-fun m!79249 () Bool)

(assert (=> b!78820 m!79249))

(declare-fun m!79251 () Bool)

(assert (=> b!78820 m!79251))

(declare-fun m!79253 () Bool)

(assert (=> b!78820 m!79253))

(declare-fun m!79255 () Bool)

(assert (=> b!78820 m!79255))

(declare-fun m!79257 () Bool)

(assert (=> b!78820 m!79257))

(declare-fun m!79259 () Bool)

(assert (=> b!78820 m!79259))

(assert (=> b!78820 m!79255))

(assert (=> b!78820 m!79253))

(declare-fun m!79261 () Bool)

(assert (=> b!78820 m!79261))

(declare-fun m!79263 () Bool)

(assert (=> b!78820 m!79263))

(assert (=> b!78820 m!79239))

(declare-fun m!79265 () Bool)

(assert (=> b!78820 m!79265))

(assert (=> b!78820 m!79249))

(declare-fun m!79267 () Bool)

(assert (=> b!78820 m!79267))

(declare-fun m!79269 () Bool)

(assert (=> bm!7240 m!79269))

(assert (=> bm!7241 m!79251))

(declare-fun m!79271 () Bool)

(assert (=> b!78821 m!79271))

(assert (=> b!78819 m!79263))

(assert (=> b!78819 m!79263))

(declare-fun m!79273 () Bool)

(assert (=> b!78819 m!79273))

(assert (=> d!18783 m!78917))

(declare-fun m!79275 () Bool)

(assert (=> bm!7239 m!79275))

(declare-fun m!79277 () Bool)

(assert (=> bm!7243 m!79277))

(declare-fun m!79279 () Bool)

(assert (=> b!78817 m!79279))

(declare-fun m!79281 () Bool)

(assert (=> b!78817 m!79281))

(assert (=> b!78817 m!79279))

(declare-fun m!79283 () Bool)

(assert (=> b!78817 m!79283))

(assert (=> b!78817 m!79263))

(declare-fun m!79285 () Bool)

(assert (=> b!78817 m!79285))

(assert (=> b!78817 m!79281))

(assert (=> b!78817 m!79263))

(assert (=> b!78828 m!79263))

(assert (=> b!78828 m!79263))

(assert (=> b!78828 m!79273))

(declare-fun m!79287 () Bool)

(assert (=> b!78837 m!79287))

(assert (=> b!78833 m!79263))

(assert (=> b!78833 m!79263))

(declare-fun m!79289 () Bool)

(assert (=> b!78833 m!79289))

(assert (=> d!18415 d!18783))

(declare-fun d!18785 () Bool)

(declare-fun e!51507 () Bool)

(assert (=> d!18785 e!51507))

(declare-fun res!41246 () Bool)

(assert (=> d!18785 (=> res!41246 e!51507)))

(declare-fun lt!36521 () Bool)

(assert (=> d!18785 (= res!41246 (not lt!36521))))

(declare-fun lt!36522 () Bool)

(assert (=> d!18785 (= lt!36521 lt!36522)))

(declare-fun lt!36519 () Unit!2242)

(declare-fun e!51506 () Unit!2242)

(assert (=> d!18785 (= lt!36519 e!51506)))

(declare-fun c!12146 () Bool)

(assert (=> d!18785 (= c!12146 lt!36522)))

(assert (=> d!18785 (= lt!36522 (containsKey!139 (toList!732 lt!36311) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18785 (= (contains!739 lt!36311 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36521)))

(declare-fun b!78838 () Bool)

(declare-fun lt!36520 () Unit!2242)

(assert (=> b!78838 (= e!51506 lt!36520)))

(assert (=> b!78838 (= lt!36520 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36311) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> b!78838 (isDefined!89 (getValueByKey!135 (toList!732 lt!36311) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!78839 () Bool)

(declare-fun Unit!2285 () Unit!2242)

(assert (=> b!78839 (= e!51506 Unit!2285)))

(declare-fun b!78840 () Bool)

(assert (=> b!78840 (= e!51507 (isDefined!89 (getValueByKey!135 (toList!732 lt!36311) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18785 c!12146) b!78838))

(assert (= (and d!18785 (not c!12146)) b!78839))

(assert (= (and d!18785 (not res!41246)) b!78840))

(declare-fun m!79291 () Bool)

(assert (=> d!18785 m!79291))

(declare-fun m!79293 () Bool)

(assert (=> b!78838 m!79293))

(assert (=> b!78838 m!78603))

(assert (=> b!78838 m!78603))

(declare-fun m!79295 () Bool)

(assert (=> b!78838 m!79295))

(assert (=> b!78840 m!78603))

(assert (=> b!78840 m!78603))

(assert (=> b!78840 m!79295))

(assert (=> d!18565 d!18785))

(declare-fun b!78841 () Bool)

(declare-fun e!51508 () Option!141)

(assert (=> b!78841 (= e!51508 (Some!140 (_2!1099 (h!2095 lt!36309))))))

(declare-fun b!78843 () Bool)

(declare-fun e!51509 () Option!141)

(assert (=> b!78843 (= e!51509 (getValueByKey!135 (t!5148 lt!36309) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!18787 () Bool)

(declare-fun c!12147 () Bool)

(assert (=> d!18787 (= c!12147 (and ((_ is Cons!1507) lt!36309) (= (_1!1099 (h!2095 lt!36309)) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18787 (= (getValueByKey!135 lt!36309 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!51508)))

(declare-fun b!78844 () Bool)

(assert (=> b!78844 (= e!51509 None!139)))

(declare-fun b!78842 () Bool)

(assert (=> b!78842 (= e!51508 e!51509)))

(declare-fun c!12148 () Bool)

(assert (=> b!78842 (= c!12148 (and ((_ is Cons!1507) lt!36309) (not (= (_1!1099 (h!2095 lt!36309)) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!18787 c!12147) b!78841))

(assert (= (and d!18787 (not c!12147)) b!78842))

(assert (= (and b!78842 c!12148) b!78843))

(assert (= (and b!78842 (not c!12148)) b!78844))

(declare-fun m!79297 () Bool)

(assert (=> b!78843 m!79297))

(assert (=> d!18565 d!18787))

(declare-fun d!18789 () Bool)

(assert (=> d!18789 (= (getValueByKey!135 lt!36309 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36523 () Unit!2242)

(assert (=> d!18789 (= lt!36523 (choose!462 lt!36309 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!51510 () Bool)

(assert (=> d!18789 e!51510))

(declare-fun res!41247 () Bool)

(assert (=> d!18789 (=> (not res!41247) (not e!51510))))

(assert (=> d!18789 (= res!41247 (isStrictlySorted!290 lt!36309))))

(assert (=> d!18789 (= (lemmaContainsTupThenGetReturnValue!55 lt!36309 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36523)))

(declare-fun b!78845 () Bool)

(declare-fun res!41248 () Bool)

(assert (=> b!78845 (=> (not res!41248) (not e!51510))))

(assert (=> b!78845 (= res!41248 (containsKey!139 lt!36309 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!78846 () Bool)

(assert (=> b!78846 (= e!51510 (contains!740 lt!36309 (tuple2!2177 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18789 res!41247) b!78845))

(assert (= (and b!78845 res!41248) b!78846))

(assert (=> d!18789 m!78597))

(declare-fun m!79299 () Bool)

(assert (=> d!18789 m!79299))

(declare-fun m!79301 () Bool)

(assert (=> d!18789 m!79301))

(declare-fun m!79303 () Bool)

(assert (=> b!78845 m!79303))

(declare-fun m!79305 () Bool)

(assert (=> b!78846 m!79305))

(assert (=> d!18565 d!18789))

(declare-fun b!78847 () Bool)

(declare-fun e!51512 () List!1511)

(declare-fun call!7248 () List!1511)

(assert (=> b!78847 (= e!51512 call!7248)))

(declare-fun b!78848 () Bool)

(declare-fun res!41250 () Bool)

(declare-fun e!51514 () Bool)

(assert (=> b!78848 (=> (not res!41250) (not e!51514))))

(declare-fun lt!36524 () List!1511)

(assert (=> b!78848 (= res!41250 (containsKey!139 lt!36524 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!51515 () List!1511)

(declare-fun c!12150 () Bool)

(declare-fun call!7249 () List!1511)

(declare-fun bm!7245 () Bool)

(assert (=> bm!7245 (= call!7249 ($colon$colon!68 e!51515 (ite c!12150 (h!2095 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (tuple2!2177 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun c!12151 () Bool)

(assert (=> bm!7245 (= c!12151 c!12150)))

(declare-fun c!12149 () Bool)

(declare-fun c!12152 () Bool)

(declare-fun b!78849 () Bool)

(assert (=> b!78849 (= e!51515 (ite c!12149 (t!5148 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (ite c!12152 (Cons!1507 (h!2095 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (t!5148 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))) Nil!1508)))))

(declare-fun d!18791 () Bool)

(assert (=> d!18791 e!51514))

(declare-fun res!41249 () Bool)

(assert (=> d!18791 (=> (not res!41249) (not e!51514))))

(assert (=> d!18791 (= res!41249 (isStrictlySorted!290 lt!36524))))

(declare-fun e!51511 () List!1511)

(assert (=> d!18791 (= lt!36524 e!51511)))

(assert (=> d!18791 (= c!12150 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (bvslt (_1!1099 (h!2095 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18791 (isStrictlySorted!290 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18791 (= (insertStrictlySorted!58 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36524)))

(declare-fun bm!7246 () Bool)

(declare-fun call!7250 () List!1511)

(assert (=> bm!7246 (= call!7250 call!7248)))

(declare-fun b!78850 () Bool)

(assert (=> b!78850 (= c!12152 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (bvsgt (_1!1099 (h!2095 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun e!51513 () List!1511)

(assert (=> b!78850 (= e!51512 e!51513)))

(declare-fun b!78851 () Bool)

(assert (=> b!78851 (= e!51513 call!7250)))

(declare-fun b!78852 () Bool)

(assert (=> b!78852 (= e!51511 e!51512)))

(assert (=> b!78852 (= c!12149 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78853 () Bool)

(assert (=> b!78853 (= e!51513 call!7250)))

(declare-fun bm!7247 () Bool)

(assert (=> bm!7247 (= call!7248 call!7249)))

(declare-fun b!78854 () Bool)

(assert (=> b!78854 (= e!51515 (insertStrictlySorted!58 (t!5148 (toList!732 (+!103 lt!35657 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!78855 () Bool)

(assert (=> b!78855 (= e!51511 call!7249)))

(declare-fun b!78856 () Bool)

(assert (=> b!78856 (= e!51514 (contains!740 lt!36524 (tuple2!2177 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18791 c!12150) b!78855))

(assert (= (and d!18791 (not c!12150)) b!78852))

(assert (= (and b!78852 c!12149) b!78847))

(assert (= (and b!78852 (not c!12149)) b!78850))

(assert (= (and b!78850 c!12152) b!78853))

(assert (= (and b!78850 (not c!12152)) b!78851))

(assert (= (or b!78853 b!78851) bm!7246))

(assert (= (or b!78847 bm!7246) bm!7247))

(assert (= (or b!78855 bm!7247) bm!7245))

(assert (= (and bm!7245 c!12151) b!78854))

(assert (= (and bm!7245 (not c!12151)) b!78849))

(assert (= (and d!18791 res!41249) b!78848))

(assert (= (and b!78848 res!41250) b!78856))

(declare-fun m!79307 () Bool)

(assert (=> b!78854 m!79307))

(declare-fun m!79309 () Bool)

(assert (=> bm!7245 m!79309))

(declare-fun m!79311 () Bool)

(assert (=> b!78848 m!79311))

(declare-fun m!79313 () Bool)

(assert (=> b!78856 m!79313))

(declare-fun m!79315 () Bool)

(assert (=> d!18791 m!79315))

(declare-fun m!79317 () Bool)

(assert (=> d!18791 m!79317))

(assert (=> d!18565 d!18791))

(declare-fun b!78857 () Bool)

(declare-fun e!51517 () List!1511)

(declare-fun call!7251 () List!1511)

(assert (=> b!78857 (= e!51517 call!7251)))

(declare-fun b!78858 () Bool)

(declare-fun res!41252 () Bool)

(declare-fun e!51519 () Bool)

(assert (=> b!78858 (=> (not res!41252) (not e!51519))))

(declare-fun lt!36525 () List!1511)

(assert (=> b!78858 (= res!41252 (containsKey!139 lt!36525 (_1!1099 lt!35659)))))

(declare-fun call!7252 () List!1511)

(declare-fun c!12154 () Bool)

(declare-fun bm!7248 () Bool)

(declare-fun e!51520 () List!1511)

(assert (=> bm!7248 (= call!7252 ($colon$colon!68 e!51520 (ite c!12154 (h!2095 (t!5148 (toList!732 lt!35662))) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659)))))))

(declare-fun c!12155 () Bool)

(assert (=> bm!7248 (= c!12155 c!12154)))

(declare-fun b!78859 () Bool)

(declare-fun c!12153 () Bool)

(declare-fun c!12156 () Bool)

(assert (=> b!78859 (= e!51520 (ite c!12153 (t!5148 (t!5148 (toList!732 lt!35662))) (ite c!12156 (Cons!1507 (h!2095 (t!5148 (toList!732 lt!35662))) (t!5148 (t!5148 (toList!732 lt!35662)))) Nil!1508)))))

(declare-fun d!18793 () Bool)

(assert (=> d!18793 e!51519))

(declare-fun res!41251 () Bool)

(assert (=> d!18793 (=> (not res!41251) (not e!51519))))

(assert (=> d!18793 (= res!41251 (isStrictlySorted!290 lt!36525))))

(declare-fun e!51516 () List!1511)

(assert (=> d!18793 (= lt!36525 e!51516)))

(assert (=> d!18793 (= c!12154 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35662))) (bvslt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35662)))) (_1!1099 lt!35659))))))

(assert (=> d!18793 (isStrictlySorted!290 (t!5148 (toList!732 lt!35662)))))

(assert (=> d!18793 (= (insertStrictlySorted!58 (t!5148 (toList!732 lt!35662)) (_1!1099 lt!35659) (_2!1099 lt!35659)) lt!36525)))

(declare-fun bm!7249 () Bool)

(declare-fun call!7253 () List!1511)

(assert (=> bm!7249 (= call!7253 call!7251)))

(declare-fun b!78860 () Bool)

(assert (=> b!78860 (= c!12156 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35662))) (bvsgt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35662)))) (_1!1099 lt!35659))))))

(declare-fun e!51518 () List!1511)

(assert (=> b!78860 (= e!51517 e!51518)))

(declare-fun b!78861 () Bool)

(assert (=> b!78861 (= e!51518 call!7253)))

(declare-fun b!78862 () Bool)

(assert (=> b!78862 (= e!51516 e!51517)))

(assert (=> b!78862 (= c!12153 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35662))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35662)))) (_1!1099 lt!35659))))))

(declare-fun b!78863 () Bool)

(assert (=> b!78863 (= e!51518 call!7253)))

(declare-fun bm!7250 () Bool)

(assert (=> bm!7250 (= call!7251 call!7252)))

(declare-fun b!78864 () Bool)

(assert (=> b!78864 (= e!51520 (insertStrictlySorted!58 (t!5148 (t!5148 (toList!732 lt!35662))) (_1!1099 lt!35659) (_2!1099 lt!35659)))))

(declare-fun b!78865 () Bool)

(assert (=> b!78865 (= e!51516 call!7252)))

(declare-fun b!78866 () Bool)

(assert (=> b!78866 (= e!51519 (contains!740 lt!36525 (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(assert (= (and d!18793 c!12154) b!78865))

(assert (= (and d!18793 (not c!12154)) b!78862))

(assert (= (and b!78862 c!12153) b!78857))

(assert (= (and b!78862 (not c!12153)) b!78860))

(assert (= (and b!78860 c!12156) b!78863))

(assert (= (and b!78860 (not c!12156)) b!78861))

(assert (= (or b!78863 b!78861) bm!7249))

(assert (= (or b!78857 bm!7249) bm!7250))

(assert (= (or b!78865 bm!7250) bm!7248))

(assert (= (and bm!7248 c!12155) b!78864))

(assert (= (and bm!7248 (not c!12155)) b!78859))

(assert (= (and d!18793 res!41251) b!78858))

(assert (= (and b!78858 res!41252) b!78866))

(declare-fun m!79319 () Bool)

(assert (=> b!78864 m!79319))

(declare-fun m!79321 () Bool)

(assert (=> bm!7248 m!79321))

(declare-fun m!79323 () Bool)

(assert (=> b!78858 m!79323))

(declare-fun m!79325 () Bool)

(assert (=> b!78866 m!79325))

(declare-fun m!79327 () Bool)

(assert (=> d!18793 m!79327))

(assert (=> d!18793 m!78901))

(assert (=> b!78183 d!18793))

(declare-fun b!78867 () Bool)

(declare-fun e!51521 () Option!141)

(assert (=> b!78867 (= e!51521 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36087)))))))

(declare-fun e!51522 () Option!141)

(declare-fun b!78869 () Bool)

(assert (=> b!78869 (= e!51522 (getValueByKey!135 (t!5148 (toList!732 lt!36087)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun c!12157 () Bool)

(declare-fun d!18795 () Bool)

(assert (=> d!18795 (= c!12157 (and ((_ is Cons!1507) (toList!732 lt!36087)) (= (_1!1099 (h!2095 (toList!732 lt!36087))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!18795 (= (getValueByKey!135 (toList!732 lt!36087) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) e!51521)))

(declare-fun b!78870 () Bool)

(assert (=> b!78870 (= e!51522 None!139)))

(declare-fun b!78868 () Bool)

(assert (=> b!78868 (= e!51521 e!51522)))

(declare-fun c!12158 () Bool)

(assert (=> b!78868 (= c!12158 (and ((_ is Cons!1507) (toList!732 lt!36087)) (not (= (_1!1099 (h!2095 (toList!732 lt!36087))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!18795 c!12157) b!78867))

(assert (= (and d!18795 (not c!12157)) b!78868))

(assert (= (and b!78868 c!12158) b!78869))

(assert (= (and b!78868 (not c!12158)) b!78870))

(declare-fun m!79329 () Bool)

(assert (=> b!78869 m!79329))

(assert (=> b!78222 d!18795))

(assert (=> d!18445 d!18443))

(declare-fun d!18797 () Bool)

(assert (=> d!18797 (= (getValueByKey!135 lt!35840 (_1!1099 lt!35659)) (Some!140 (_2!1099 lt!35659)))))

(assert (=> d!18797 true))

(declare-fun _$22!391 () Unit!2242)

(assert (=> d!18797 (= (choose!462 lt!35840 (_1!1099 lt!35659) (_2!1099 lt!35659)) _$22!391)))

(declare-fun bs!3330 () Bool)

(assert (= bs!3330 d!18797))

(assert (=> bs!3330 m!77775))

(assert (=> d!18445 d!18797))

(declare-fun d!18799 () Bool)

(declare-fun res!41253 () Bool)

(declare-fun e!51523 () Bool)

(assert (=> d!18799 (=> res!41253 e!51523)))

(assert (=> d!18799 (= res!41253 (or ((_ is Nil!1508) lt!35840) ((_ is Nil!1508) (t!5148 lt!35840))))))

(assert (=> d!18799 (= (isStrictlySorted!290 lt!35840) e!51523)))

(declare-fun b!78871 () Bool)

(declare-fun e!51524 () Bool)

(assert (=> b!78871 (= e!51523 e!51524)))

(declare-fun res!41254 () Bool)

(assert (=> b!78871 (=> (not res!41254) (not e!51524))))

(assert (=> b!78871 (= res!41254 (bvslt (_1!1099 (h!2095 lt!35840)) (_1!1099 (h!2095 (t!5148 lt!35840)))))))

(declare-fun b!78872 () Bool)

(assert (=> b!78872 (= e!51524 (isStrictlySorted!290 (t!5148 lt!35840)))))

(assert (= (and d!18799 (not res!41253)) b!78871))

(assert (= (and b!78871 res!41254) b!78872))

(declare-fun m!79331 () Bool)

(assert (=> b!78872 m!79331))

(assert (=> d!18445 d!18799))

(declare-fun d!18801 () Bool)

(declare-fun c!12161 () Bool)

(assert (=> d!18801 (= c!12161 ((_ is Nil!1508) (toList!732 lt!35817)))))

(declare-fun e!51527 () (InoxSet tuple2!2176))

(assert (=> d!18801 (= (content!83 (toList!732 lt!35817)) e!51527)))

(declare-fun b!78877 () Bool)

(assert (=> b!78877 (= e!51527 ((as const (Array tuple2!2176 Bool)) false))))

(declare-fun b!78878 () Bool)

(assert (=> b!78878 (= e!51527 ((_ map or) (store ((as const (Array tuple2!2176 Bool)) false) (h!2095 (toList!732 lt!35817)) true) (content!83 (t!5148 (toList!732 lt!35817)))))))

(assert (= (and d!18801 c!12161) b!78877))

(assert (= (and d!18801 (not c!12161)) b!78878))

(declare-fun m!79333 () Bool)

(assert (=> b!78878 m!79333))

(declare-fun m!79335 () Bool)

(assert (=> b!78878 m!79335))

(assert (=> d!18487 d!18801))

(declare-fun lt!36526 () Bool)

(declare-fun d!18803 () Bool)

(assert (=> d!18803 (= lt!36526 (select (content!83 (toList!732 lt!36281)) (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!51528 () Bool)

(assert (=> d!18803 (= lt!36526 e!51528)))

(declare-fun res!41255 () Bool)

(assert (=> d!18803 (=> (not res!41255) (not e!51528))))

(assert (=> d!18803 (= res!41255 ((_ is Cons!1507) (toList!732 lt!36281)))))

(assert (=> d!18803 (= (contains!740 (toList!732 lt!36281) (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36526)))

(declare-fun b!78879 () Bool)

(declare-fun e!51529 () Bool)

(assert (=> b!78879 (= e!51528 e!51529)))

(declare-fun res!41256 () Bool)

(assert (=> b!78879 (=> res!41256 e!51529)))

(assert (=> b!78879 (= res!41256 (= (h!2095 (toList!732 lt!36281)) (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!78880 () Bool)

(assert (=> b!78880 (= e!51529 (contains!740 (t!5148 (toList!732 lt!36281)) (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!18803 res!41255) b!78879))

(assert (= (and b!78879 (not res!41256)) b!78880))

(declare-fun m!79337 () Bool)

(assert (=> d!18803 m!79337))

(declare-fun m!79339 () Bool)

(assert (=> d!18803 m!79339))

(declare-fun m!79341 () Bool)

(assert (=> b!78880 m!79341))

(assert (=> b!78376 d!18803))

(assert (=> b!78514 d!18741))

(assert (=> bm!7192 d!18549))

(declare-fun d!18805 () Bool)

(declare-fun c!12162 () Bool)

(assert (=> d!18805 (= c!12162 ((_ is Nil!1508) (toList!732 lt!35812)))))

(declare-fun e!51530 () (InoxSet tuple2!2176))

(assert (=> d!18805 (= (content!83 (toList!732 lt!35812)) e!51530)))

(declare-fun b!78881 () Bool)

(assert (=> b!78881 (= e!51530 ((as const (Array tuple2!2176 Bool)) false))))

(declare-fun b!78882 () Bool)

(assert (=> b!78882 (= e!51530 ((_ map or) (store ((as const (Array tuple2!2176 Bool)) false) (h!2095 (toList!732 lt!35812)) true) (content!83 (t!5148 (toList!732 lt!35812)))))))

(assert (= (and d!18805 c!12162) b!78881))

(assert (= (and d!18805 (not c!12162)) b!78882))

(declare-fun m!79343 () Bool)

(assert (=> b!78882 m!79343))

(assert (=> b!78882 m!79199))

(assert (=> d!18485 d!18805))

(assert (=> d!18595 d!18497))

(declare-fun d!18807 () Bool)

(declare-fun e!51533 () Bool)

(assert (=> d!18807 e!51533))

(declare-fun res!41261 () Bool)

(assert (=> d!18807 (=> (not res!41261) (not e!51533))))

(declare-fun lt!36529 () SeekEntryResult!243)

(assert (=> d!18807 (= res!41261 ((_ is Found!243) lt!36529))))

(assert (=> d!18807 (= lt!36529 (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(assert (=> d!18807 true))

(declare-fun _$33!63 () Unit!2242)

(assert (=> d!18807 (= (choose!471 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)) _$33!63)))

(declare-fun b!78887 () Bool)

(declare-fun res!41262 () Bool)

(assert (=> b!78887 (=> (not res!41262) (not e!51533))))

(assert (=> b!78887 (= res!41262 (inRange!0 (index!3107 lt!36529) (mask!6266 newMap!16)))))

(declare-fun b!78888 () Bool)

(assert (=> b!78888 (= e!51533 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36529)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!18807 res!41261) b!78887))

(assert (= (and b!78887 res!41262) b!78888))

(assert (=> d!18807 m!77463))

(assert (=> d!18807 m!77861))

(declare-fun m!79345 () Bool)

(assert (=> b!78887 m!79345))

(declare-fun m!79347 () Bool)

(assert (=> b!78888 m!79347))

(assert (=> d!18595 d!18807))

(assert (=> d!18595 d!18739))

(declare-fun d!18809 () Bool)

(assert (=> d!18809 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3331 () Bool)

(assert (= bs!3331 d!18809))

(assert (=> bs!3331 m!78023))

(declare-fun m!79349 () Bool)

(assert (=> bs!3331 m!79349))

(assert (=> b!78203 d!18809))

(declare-fun b!78889 () Bool)

(declare-fun e!51534 () Option!141)

(assert (=> b!78889 (= e!51534 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35901)))))))

(declare-fun b!78891 () Bool)

(declare-fun e!51535 () Option!141)

(assert (=> b!78891 (= e!51535 (getValueByKey!135 (t!5148 (toList!732 lt!35901)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!12163 () Bool)

(declare-fun d!18811 () Bool)

(assert (=> d!18811 (= c!12163 (and ((_ is Cons!1507) (toList!732 lt!35901)) (= (_1!1099 (h!2095 (toList!732 lt!35901))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18811 (= (getValueByKey!135 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!51534)))

(declare-fun b!78892 () Bool)

(assert (=> b!78892 (= e!51535 None!139)))

(declare-fun b!78890 () Bool)

(assert (=> b!78890 (= e!51534 e!51535)))

(declare-fun c!12164 () Bool)

(assert (=> b!78890 (= c!12164 (and ((_ is Cons!1507) (toList!732 lt!35901)) (not (= (_1!1099 (h!2095 (toList!732 lt!35901))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!18811 c!12163) b!78889))

(assert (= (and d!18811 (not c!12163)) b!78890))

(assert (= (and b!78890 c!12164) b!78891))

(assert (= (and b!78890 (not c!12164)) b!78892))

(assert (=> b!78891 m!77747))

(declare-fun m!79351 () Bool)

(assert (=> b!78891 m!79351))

(assert (=> b!78203 d!18811))

(declare-fun lt!36530 () Bool)

(declare-fun d!18813 () Bool)

(assert (=> d!18813 (= lt!36530 (select (content!83 (toList!732 lt!36095)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun e!51536 () Bool)

(assert (=> d!18813 (= lt!36530 e!51536)))

(declare-fun res!41263 () Bool)

(assert (=> d!18813 (=> (not res!41263) (not e!51536))))

(assert (=> d!18813 (= res!41263 ((_ is Cons!1507) (toList!732 lt!36095)))))

(assert (=> d!18813 (= (contains!740 (toList!732 lt!36095) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36530)))

(declare-fun b!78893 () Bool)

(declare-fun e!51537 () Bool)

(assert (=> b!78893 (= e!51536 e!51537)))

(declare-fun res!41264 () Bool)

(assert (=> b!78893 (=> res!41264 e!51537)))

(assert (=> b!78893 (= res!41264 (= (h!2095 (toList!732 lt!36095)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun b!78894 () Bool)

(assert (=> b!78894 (= e!51537 (contains!740 (t!5148 (toList!732 lt!36095)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!18813 res!41263) b!78893))

(assert (= (and b!78893 (not res!41264)) b!78894))

(declare-fun m!79353 () Bool)

(assert (=> d!18813 m!79353))

(declare-fun m!79355 () Bool)

(assert (=> d!18813 m!79355))

(declare-fun m!79357 () Bool)

(assert (=> b!78894 m!79357))

(assert (=> b!78227 d!18813))

(declare-fun d!18815 () Bool)

(declare-fun res!41265 () Bool)

(declare-fun e!51538 () Bool)

(assert (=> d!18815 (=> res!41265 e!51538)))

(assert (=> d!18815 (= res!41265 (or ((_ is Nil!1508) lt!36293) ((_ is Nil!1508) (t!5148 lt!36293))))))

(assert (=> d!18815 (= (isStrictlySorted!290 lt!36293) e!51538)))

(declare-fun b!78895 () Bool)

(declare-fun e!51539 () Bool)

(assert (=> b!78895 (= e!51538 e!51539)))

(declare-fun res!41266 () Bool)

(assert (=> b!78895 (=> (not res!41266) (not e!51539))))

(assert (=> b!78895 (= res!41266 (bvslt (_1!1099 (h!2095 lt!36293)) (_1!1099 (h!2095 (t!5148 lt!36293)))))))

(declare-fun b!78896 () Bool)

(assert (=> b!78896 (= e!51539 (isStrictlySorted!290 (t!5148 lt!36293)))))

(assert (= (and d!18815 (not res!41265)) b!78895))

(assert (= (and b!78895 res!41266) b!78896))

(declare-fun m!79359 () Bool)

(assert (=> b!78896 m!79359))

(assert (=> d!18547 d!18815))

(declare-fun d!18817 () Bool)

(declare-fun res!41267 () Bool)

(declare-fun e!51540 () Bool)

(assert (=> d!18817 (=> res!41267 e!51540)))

(assert (=> d!18817 (= res!41267 (or ((_ is Nil!1508) (toList!732 lt!35663)) ((_ is Nil!1508) (t!5148 (toList!732 lt!35663)))))))

(assert (=> d!18817 (= (isStrictlySorted!290 (toList!732 lt!35663)) e!51540)))

(declare-fun b!78897 () Bool)

(declare-fun e!51541 () Bool)

(assert (=> b!78897 (= e!51540 e!51541)))

(declare-fun res!41268 () Bool)

(assert (=> b!78897 (=> (not res!41268) (not e!51541))))

(assert (=> b!78897 (= res!41268 (bvslt (_1!1099 (h!2095 (toList!732 lt!35663))) (_1!1099 (h!2095 (t!5148 (toList!732 lt!35663))))))))

(declare-fun b!78898 () Bool)

(assert (=> b!78898 (= e!51541 (isStrictlySorted!290 (t!5148 (toList!732 lt!35663))))))

(assert (= (and d!18817 (not res!41267)) b!78897))

(assert (= (and b!78897 res!41268) b!78898))

(declare-fun m!79361 () Bool)

(assert (=> b!78898 m!79361))

(assert (=> d!18547 d!18817))

(declare-fun d!18819 () Bool)

(assert (=> d!18819 (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!36531 () Unit!2242)

(assert (=> d!18819 (= lt!36531 (choose!463 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!51542 () Bool)

(assert (=> d!18819 e!51542))

(declare-fun res!41269 () Bool)

(assert (=> d!18819 (=> (not res!41269) (not e!51542))))

(assert (=> d!18819 (= res!41269 (isStrictlySorted!290 (toList!732 lt!35837)))))

(assert (=> d!18819 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36531)))

(declare-fun b!78899 () Bool)

(assert (=> b!78899 (= e!51542 (containsKey!139 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!18819 res!41269) b!78899))

(assert (=> d!18819 m!77747))

(assert (=> d!18819 m!78755))

(assert (=> d!18819 m!78755))

(assert (=> d!18819 m!78757))

(assert (=> d!18819 m!77747))

(declare-fun m!79363 () Bool)

(assert (=> d!18819 m!79363))

(assert (=> d!18819 m!79153))

(assert (=> b!78899 m!77747))

(assert (=> b!78899 m!78751))

(assert (=> b!78537 d!18819))

(declare-fun d!18821 () Bool)

(assert (=> d!18821 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3332 () Bool)

(assert (= bs!3332 d!18821))

(assert (=> bs!3332 m!78755))

(declare-fun m!79365 () Bool)

(assert (=> bs!3332 m!79365))

(assert (=> b!78537 d!18821))

(assert (=> b!78537 d!18667))

(declare-fun d!18823 () Bool)

(declare-fun res!41270 () Bool)

(declare-fun e!51543 () Bool)

(assert (=> d!18823 (=> res!41270 e!51543)))

(assert (=> d!18823 (= res!41270 (or ((_ is Nil!1508) lt!36382) ((_ is Nil!1508) (t!5148 lt!36382))))))

(assert (=> d!18823 (= (isStrictlySorted!290 lt!36382) e!51543)))

(declare-fun b!78900 () Bool)

(declare-fun e!51544 () Bool)

(assert (=> b!78900 (= e!51543 e!51544)))

(declare-fun res!41271 () Bool)

(assert (=> b!78900 (=> (not res!41271) (not e!51544))))

(assert (=> b!78900 (= res!41271 (bvslt (_1!1099 (h!2095 lt!36382)) (_1!1099 (h!2095 (t!5148 lt!36382)))))))

(declare-fun b!78901 () Bool)

(assert (=> b!78901 (= e!51544 (isStrictlySorted!290 (t!5148 lt!36382)))))

(assert (= (and d!18823 (not res!41270)) b!78900))

(assert (= (and b!78900 res!41271) b!78901))

(declare-fun m!79367 () Bool)

(assert (=> b!78901 m!79367))

(assert (=> d!18627 d!18823))

(declare-fun d!18825 () Bool)

(declare-fun res!41272 () Bool)

(declare-fun e!51545 () Bool)

(assert (=> d!18825 (=> res!41272 e!51545)))

(assert (=> d!18825 (= res!41272 (or ((_ is Nil!1508) (toList!732 lt!35668)) ((_ is Nil!1508) (t!5148 (toList!732 lt!35668)))))))

(assert (=> d!18825 (= (isStrictlySorted!290 (toList!732 lt!35668)) e!51545)))

(declare-fun b!78902 () Bool)

(declare-fun e!51546 () Bool)

(assert (=> b!78902 (= e!51545 e!51546)))

(declare-fun res!41273 () Bool)

(assert (=> b!78902 (=> (not res!41273) (not e!51546))))

(assert (=> b!78902 (= res!41273 (bvslt (_1!1099 (h!2095 (toList!732 lt!35668))) (_1!1099 (h!2095 (t!5148 (toList!732 lt!35668))))))))

(declare-fun b!78903 () Bool)

(assert (=> b!78903 (= e!51546 (isStrictlySorted!290 (t!5148 (toList!732 lt!35668))))))

(assert (= (and d!18825 (not res!41272)) b!78902))

(assert (= (and b!78902 res!41273) b!78903))

(declare-fun m!79369 () Bool)

(assert (=> b!78903 m!79369))

(assert (=> d!18627 d!18825))

(declare-fun d!18827 () Bool)

(declare-fun res!41274 () Bool)

(declare-fun e!51547 () Bool)

(assert (=> d!18827 (=> res!41274 e!51547)))

(assert (=> d!18827 (= res!41274 (and ((_ is Cons!1507) (toList!732 lt!35837)) (= (_1!1099 (h!2095 (toList!732 lt!35837))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18827 (= (containsKey!139 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000) e!51547)))

(declare-fun b!78904 () Bool)

(declare-fun e!51548 () Bool)

(assert (=> b!78904 (= e!51547 e!51548)))

(declare-fun res!41275 () Bool)

(assert (=> b!78904 (=> (not res!41275) (not e!51548))))

(assert (=> b!78904 (= res!41275 (and (or (not ((_ is Cons!1507) (toList!732 lt!35837))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35837))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1507) (toList!732 lt!35837)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35837))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78905 () Bool)

(assert (=> b!78905 (= e!51548 (containsKey!139 (t!5148 (toList!732 lt!35837)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!18827 (not res!41274)) b!78904))

(assert (= (and b!78904 res!41275) b!78905))

(declare-fun m!79371 () Bool)

(assert (=> b!78905 m!79371))

(assert (=> d!18629 d!18827))

(declare-fun d!18829 () Bool)

(assert (=> d!18829 (= (size!2130 newMap!16) (bvadd (_size!414 newMap!16) (bvsdiv (bvadd (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!78114 d!18829))

(assert (=> b!78211 d!18781))

(declare-fun d!18831 () Bool)

(declare-fun e!51550 () Bool)

(assert (=> d!18831 e!51550))

(declare-fun res!41276 () Bool)

(assert (=> d!18831 (=> res!41276 e!51550)))

(declare-fun lt!36534 () Bool)

(assert (=> d!18831 (= res!41276 (not lt!36534))))

(declare-fun lt!36535 () Bool)

(assert (=> d!18831 (= lt!36534 lt!36535)))

(declare-fun lt!36532 () Unit!2242)

(declare-fun e!51549 () Unit!2242)

(assert (=> d!18831 (= lt!36532 e!51549)))

(declare-fun c!12165 () Bool)

(assert (=> d!18831 (= c!12165 lt!36535)))

(assert (=> d!18831 (= lt!36535 (containsKey!139 (toList!732 lt!36277) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18831 (= (contains!739 lt!36277 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36534)))

(declare-fun b!78906 () Bool)

(declare-fun lt!36533 () Unit!2242)

(assert (=> b!78906 (= e!51549 lt!36533)))

(assert (=> b!78906 (= lt!36533 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36277) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> b!78906 (isDefined!89 (getValueByKey!135 (toList!732 lt!36277) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!78907 () Bool)

(declare-fun Unit!2286 () Unit!2242)

(assert (=> b!78907 (= e!51549 Unit!2286)))

(declare-fun b!78908 () Bool)

(assert (=> b!78908 (= e!51550 (isDefined!89 (getValueByKey!135 (toList!732 lt!36277) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18831 c!12165) b!78906))

(assert (= (and d!18831 (not c!12165)) b!78907))

(assert (= (and d!18831 (not res!41276)) b!78908))

(declare-fun m!79373 () Bool)

(assert (=> d!18831 m!79373))

(declare-fun m!79375 () Bool)

(assert (=> b!78906 m!79375))

(assert (=> b!78906 m!78489))

(assert (=> b!78906 m!78489))

(declare-fun m!79377 () Bool)

(assert (=> b!78906 m!79377))

(assert (=> b!78908 m!78489))

(assert (=> b!78908 m!78489))

(assert (=> b!78908 m!79377))

(assert (=> d!18535 d!18831))

(declare-fun b!78909 () Bool)

(declare-fun e!51551 () Option!141)

(assert (=> b!78909 (= e!51551 (Some!140 (_2!1099 (h!2095 lt!36275))))))

(declare-fun b!78911 () Bool)

(declare-fun e!51552 () Option!141)

(assert (=> b!78911 (= e!51552 (getValueByKey!135 (t!5148 lt!36275) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun c!12166 () Bool)

(declare-fun d!18833 () Bool)

(assert (=> d!18833 (= c!12166 (and ((_ is Cons!1507) lt!36275) (= (_1!1099 (h!2095 lt!36275)) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18833 (= (getValueByKey!135 lt!36275 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!51551)))

(declare-fun b!78912 () Bool)

(assert (=> b!78912 (= e!51552 None!139)))

(declare-fun b!78910 () Bool)

(assert (=> b!78910 (= e!51551 e!51552)))

(declare-fun c!12167 () Bool)

(assert (=> b!78910 (= c!12167 (and ((_ is Cons!1507) lt!36275) (not (= (_1!1099 (h!2095 lt!36275)) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!18833 c!12166) b!78909))

(assert (= (and d!18833 (not c!12166)) b!78910))

(assert (= (and b!78910 c!12167) b!78911))

(assert (= (and b!78910 (not c!12167)) b!78912))

(declare-fun m!79379 () Bool)

(assert (=> b!78911 m!79379))

(assert (=> d!18535 d!18833))

(declare-fun d!18835 () Bool)

(assert (=> d!18835 (= (getValueByKey!135 lt!36275 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36536 () Unit!2242)

(assert (=> d!18835 (= lt!36536 (choose!462 lt!36275 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!51553 () Bool)

(assert (=> d!18835 e!51553))

(declare-fun res!41277 () Bool)

(assert (=> d!18835 (=> (not res!41277) (not e!51553))))

(assert (=> d!18835 (= res!41277 (isStrictlySorted!290 lt!36275))))

(assert (=> d!18835 (= (lemmaContainsTupThenGetReturnValue!55 lt!36275 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36536)))

(declare-fun b!78913 () Bool)

(declare-fun res!41278 () Bool)

(assert (=> b!78913 (=> (not res!41278) (not e!51553))))

(assert (=> b!78913 (= res!41278 (containsKey!139 lt!36275 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!78914 () Bool)

(assert (=> b!78914 (= e!51553 (contains!740 lt!36275 (tuple2!2177 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18835 res!41277) b!78913))

(assert (= (and b!78913 res!41278) b!78914))

(assert (=> d!18835 m!78483))

(declare-fun m!79381 () Bool)

(assert (=> d!18835 m!79381))

(declare-fun m!79383 () Bool)

(assert (=> d!18835 m!79383))

(declare-fun m!79385 () Bool)

(assert (=> b!78913 m!79385))

(declare-fun m!79387 () Bool)

(assert (=> b!78914 m!79387))

(assert (=> d!18535 d!18835))

(declare-fun b!78915 () Bool)

(declare-fun e!51555 () List!1511)

(declare-fun call!7254 () List!1511)

(assert (=> b!78915 (= e!51555 call!7254)))

(declare-fun b!78916 () Bool)

(declare-fun res!41280 () Bool)

(declare-fun e!51557 () Bool)

(assert (=> b!78916 (=> (not res!41280) (not e!51557))))

(declare-fun lt!36537 () List!1511)

(assert (=> b!78916 (= res!41280 (containsKey!139 lt!36537 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!51558 () List!1511)

(declare-fun bm!7251 () Bool)

(declare-fun c!12169 () Bool)

(declare-fun call!7255 () List!1511)

(assert (=> bm!7251 (= call!7255 ($colon$colon!68 e!51558 (ite c!12169 (h!2095 (toList!732 lt!35895)) (tuple2!2177 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun c!12170 () Bool)

(assert (=> bm!7251 (= c!12170 c!12169)))

(declare-fun c!12171 () Bool)

(declare-fun b!78917 () Bool)

(declare-fun c!12168 () Bool)

(assert (=> b!78917 (= e!51558 (ite c!12168 (t!5148 (toList!732 lt!35895)) (ite c!12171 (Cons!1507 (h!2095 (toList!732 lt!35895)) (t!5148 (toList!732 lt!35895))) Nil!1508)))))

(declare-fun d!18837 () Bool)

(assert (=> d!18837 e!51557))

(declare-fun res!41279 () Bool)

(assert (=> d!18837 (=> (not res!41279) (not e!51557))))

(assert (=> d!18837 (= res!41279 (isStrictlySorted!290 lt!36537))))

(declare-fun e!51554 () List!1511)

(assert (=> d!18837 (= lt!36537 e!51554)))

(assert (=> d!18837 (= c!12169 (and ((_ is Cons!1507) (toList!732 lt!35895)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35895))) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18837 (isStrictlySorted!290 (toList!732 lt!35895))))

(assert (=> d!18837 (= (insertStrictlySorted!58 (toList!732 lt!35895) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36537)))

(declare-fun bm!7252 () Bool)

(declare-fun call!7256 () List!1511)

(assert (=> bm!7252 (= call!7256 call!7254)))

(declare-fun b!78918 () Bool)

(assert (=> b!78918 (= c!12171 (and ((_ is Cons!1507) (toList!732 lt!35895)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35895))) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun e!51556 () List!1511)

(assert (=> b!78918 (= e!51555 e!51556)))

(declare-fun b!78919 () Bool)

(assert (=> b!78919 (= e!51556 call!7256)))

(declare-fun b!78920 () Bool)

(assert (=> b!78920 (= e!51554 e!51555)))

(assert (=> b!78920 (= c!12168 (and ((_ is Cons!1507) (toList!732 lt!35895)) (= (_1!1099 (h!2095 (toList!732 lt!35895))) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!78921 () Bool)

(assert (=> b!78921 (= e!51556 call!7256)))

(declare-fun bm!7253 () Bool)

(assert (=> bm!7253 (= call!7254 call!7255)))

(declare-fun b!78922 () Bool)

(assert (=> b!78922 (= e!51558 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35895)) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!78923 () Bool)

(assert (=> b!78923 (= e!51554 call!7255)))

(declare-fun b!78924 () Bool)

(assert (=> b!78924 (= e!51557 (contains!740 lt!36537 (tuple2!2177 (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18837 c!12169) b!78923))

(assert (= (and d!18837 (not c!12169)) b!78920))

(assert (= (and b!78920 c!12168) b!78915))

(assert (= (and b!78920 (not c!12168)) b!78918))

(assert (= (and b!78918 c!12171) b!78921))

(assert (= (and b!78918 (not c!12171)) b!78919))

(assert (= (or b!78921 b!78919) bm!7252))

(assert (= (or b!78915 bm!7252) bm!7253))

(assert (= (or b!78923 bm!7253) bm!7251))

(assert (= (and bm!7251 c!12170) b!78922))

(assert (= (and bm!7251 (not c!12170)) b!78917))

(assert (= (and d!18837 res!41279) b!78916))

(assert (= (and b!78916 res!41280) b!78924))

(declare-fun m!79389 () Bool)

(assert (=> b!78922 m!79389))

(declare-fun m!79391 () Bool)

(assert (=> bm!7251 m!79391))

(declare-fun m!79393 () Bool)

(assert (=> b!78916 m!79393))

(declare-fun m!79395 () Bool)

(assert (=> b!78924 m!79395))

(declare-fun m!79397 () Bool)

(assert (=> d!18837 m!79397))

(declare-fun m!79399 () Bool)

(assert (=> d!18837 m!79399))

(assert (=> d!18535 d!18837))

(assert (=> d!18615 d!18613))

(declare-fun d!18839 () Bool)

(assert (=> d!18839 (= (getValueByKey!135 lt!35810 (_1!1099 lt!35670)) (Some!140 (_2!1099 lt!35670)))))

(assert (=> d!18839 true))

(declare-fun _$22!392 () Unit!2242)

(assert (=> d!18839 (= (choose!462 lt!35810 (_1!1099 lt!35670) (_2!1099 lt!35670)) _$22!392)))

(declare-fun bs!3333 () Bool)

(assert (= bs!3333 d!18839))

(assert (=> bs!3333 m!77713))

(assert (=> d!18615 d!18839))

(declare-fun d!18841 () Bool)

(declare-fun res!41281 () Bool)

(declare-fun e!51559 () Bool)

(assert (=> d!18841 (=> res!41281 e!51559)))

(assert (=> d!18841 (= res!41281 (or ((_ is Nil!1508) lt!35810) ((_ is Nil!1508) (t!5148 lt!35810))))))

(assert (=> d!18841 (= (isStrictlySorted!290 lt!35810) e!51559)))

(declare-fun b!78925 () Bool)

(declare-fun e!51560 () Bool)

(assert (=> b!78925 (= e!51559 e!51560)))

(declare-fun res!41282 () Bool)

(assert (=> b!78925 (=> (not res!41282) (not e!51560))))

(assert (=> b!78925 (= res!41282 (bvslt (_1!1099 (h!2095 lt!35810)) (_1!1099 (h!2095 (t!5148 lt!35810)))))))

(declare-fun b!78926 () Bool)

(assert (=> b!78926 (= e!51560 (isStrictlySorted!290 (t!5148 lt!35810)))))

(assert (= (and d!18841 (not res!41281)) b!78925))

(assert (= (and b!78925 res!41282) b!78926))

(declare-fun m!79401 () Bool)

(assert (=> b!78926 m!79401))

(assert (=> d!18615 d!18841))

(declare-fun d!18843 () Bool)

(declare-fun e!51562 () Bool)

(assert (=> d!18843 e!51562))

(declare-fun res!41283 () Bool)

(assert (=> d!18843 (=> res!41283 e!51562)))

(declare-fun lt!36540 () Bool)

(assert (=> d!18843 (= res!41283 (not lt!36540))))

(declare-fun lt!36541 () Bool)

(assert (=> d!18843 (= lt!36540 lt!36541)))

(declare-fun lt!36538 () Unit!2242)

(declare-fun e!51561 () Unit!2242)

(assert (=> d!18843 (= lt!36538 e!51561)))

(declare-fun c!12172 () Bool)

(assert (=> d!18843 (= c!12172 lt!36541)))

(assert (=> d!18843 (= lt!36541 (containsKey!139 (toList!732 lt!36359) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18843 (= (contains!739 lt!36359 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36540)))

(declare-fun b!78927 () Bool)

(declare-fun lt!36539 () Unit!2242)

(assert (=> b!78927 (= e!51561 lt!36539)))

(assert (=> b!78927 (= lt!36539 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36359) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78927 (isDefined!89 (getValueByKey!135 (toList!732 lt!36359) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78928 () Bool)

(declare-fun Unit!2287 () Unit!2242)

(assert (=> b!78928 (= e!51561 Unit!2287)))

(declare-fun b!78929 () Bool)

(assert (=> b!78929 (= e!51562 (isDefined!89 (getValueByKey!135 (toList!732 lt!36359) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18843 c!12172) b!78927))

(assert (= (and d!18843 (not c!12172)) b!78928))

(assert (= (and d!18843 (not res!41283)) b!78929))

(declare-fun m!79403 () Bool)

(assert (=> d!18843 m!79403))

(declare-fun m!79405 () Bool)

(assert (=> b!78927 m!79405))

(declare-fun m!79407 () Bool)

(assert (=> b!78927 m!79407))

(assert (=> b!78927 m!79407))

(declare-fun m!79409 () Bool)

(assert (=> b!78927 m!79409))

(assert (=> b!78929 m!79407))

(assert (=> b!78929 m!79407))

(assert (=> b!78929 m!79409))

(assert (=> bm!7214 d!18843))

(declare-fun d!18845 () Bool)

(assert (=> d!18845 (= (apply!79 lt!36029 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1180 (getValueByKey!135 (toList!732 lt!36029) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3334 () Bool)

(assert (= bs!3334 d!18845))

(assert (=> bs!3334 m!77965))

(declare-fun m!79411 () Bool)

(assert (=> bs!3334 m!79411))

(assert (=> bs!3334 m!79411))

(declare-fun m!79413 () Bool)

(assert (=> bs!3334 m!79413))

(assert (=> b!78084 d!18845))

(declare-fun d!18847 () Bool)

(declare-fun c!12173 () Bool)

(assert (=> d!18847 (= c!12173 ((_ is ValueCellFull!911) (select (arr!1883 (_values!2254 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!51563 () V!2993)

(assert (=> d!18847 (= (get!1177 (select (arr!1883 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51563)))

(declare-fun b!78930 () Bool)

(assert (=> b!78930 (= e!51563 (get!1178 (select (arr!1883 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78931 () Bool)

(assert (=> b!78931 (= e!51563 (get!1179 (select (arr!1883 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18847 c!12173) b!78930))

(assert (= (and d!18847 (not c!12173)) b!78931))

(assert (=> b!78930 m!77985))

(assert (=> b!78930 m!77983))

(declare-fun m!79415 () Bool)

(assert (=> b!78930 m!79415))

(assert (=> b!78931 m!77985))

(assert (=> b!78931 m!77983))

(declare-fun m!79417 () Bool)

(assert (=> b!78931 m!79417))

(assert (=> b!78084 d!18847))

(declare-fun b!78932 () Bool)

(declare-fun e!51565 () List!1511)

(declare-fun call!7257 () List!1511)

(assert (=> b!78932 (= e!51565 call!7257)))

(declare-fun b!78933 () Bool)

(declare-fun res!41285 () Bool)

(declare-fun e!51567 () Bool)

(assert (=> b!78933 (=> (not res!41285) (not e!51567))))

(declare-fun lt!36542 () List!1511)

(assert (=> b!78933 (= res!41285 (containsKey!139 lt!36542 (_1!1099 lt!35670)))))

(declare-fun c!12175 () Bool)

(declare-fun e!51568 () List!1511)

(declare-fun bm!7254 () Bool)

(declare-fun call!7258 () List!1511)

(assert (=> bm!7254 (= call!7258 ($colon$colon!68 e!51568 (ite c!12175 (h!2095 (t!5148 (toList!732 lt!35657))) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670)))))))

(declare-fun c!12176 () Bool)

(assert (=> bm!7254 (= c!12176 c!12175)))

(declare-fun c!12177 () Bool)

(declare-fun c!12174 () Bool)

(declare-fun b!78934 () Bool)

(assert (=> b!78934 (= e!51568 (ite c!12174 (t!5148 (t!5148 (toList!732 lt!35657))) (ite c!12177 (Cons!1507 (h!2095 (t!5148 (toList!732 lt!35657))) (t!5148 (t!5148 (toList!732 lt!35657)))) Nil!1508)))))

(declare-fun d!18849 () Bool)

(assert (=> d!18849 e!51567))

(declare-fun res!41284 () Bool)

(assert (=> d!18849 (=> (not res!41284) (not e!51567))))

(assert (=> d!18849 (= res!41284 (isStrictlySorted!290 lt!36542))))

(declare-fun e!51564 () List!1511)

(assert (=> d!18849 (= lt!36542 e!51564)))

(assert (=> d!18849 (= c!12175 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35657))) (bvslt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35657)))) (_1!1099 lt!35670))))))

(assert (=> d!18849 (isStrictlySorted!290 (t!5148 (toList!732 lt!35657)))))

(assert (=> d!18849 (= (insertStrictlySorted!58 (t!5148 (toList!732 lt!35657)) (_1!1099 lt!35670) (_2!1099 lt!35670)) lt!36542)))

(declare-fun bm!7255 () Bool)

(declare-fun call!7259 () List!1511)

(assert (=> bm!7255 (= call!7259 call!7257)))

(declare-fun b!78935 () Bool)

(assert (=> b!78935 (= c!12177 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35657))) (bvsgt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35657)))) (_1!1099 lt!35670))))))

(declare-fun e!51566 () List!1511)

(assert (=> b!78935 (= e!51565 e!51566)))

(declare-fun b!78936 () Bool)

(assert (=> b!78936 (= e!51566 call!7259)))

(declare-fun b!78937 () Bool)

(assert (=> b!78937 (= e!51564 e!51565)))

(assert (=> b!78937 (= c!12174 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35657))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35657)))) (_1!1099 lt!35670))))))

(declare-fun b!78938 () Bool)

(assert (=> b!78938 (= e!51566 call!7259)))

(declare-fun bm!7256 () Bool)

(assert (=> bm!7256 (= call!7257 call!7258)))

(declare-fun b!78939 () Bool)

(assert (=> b!78939 (= e!51568 (insertStrictlySorted!58 (t!5148 (t!5148 (toList!732 lt!35657))) (_1!1099 lt!35670) (_2!1099 lt!35670)))))

(declare-fun b!78940 () Bool)

(assert (=> b!78940 (= e!51564 call!7258)))

(declare-fun b!78941 () Bool)

(assert (=> b!78941 (= e!51567 (contains!740 lt!36542 (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(assert (= (and d!18849 c!12175) b!78940))

(assert (= (and d!18849 (not c!12175)) b!78937))

(assert (= (and b!78937 c!12174) b!78932))

(assert (= (and b!78937 (not c!12174)) b!78935))

(assert (= (and b!78935 c!12177) b!78938))

(assert (= (and b!78935 (not c!12177)) b!78936))

(assert (= (or b!78938 b!78936) bm!7255))

(assert (= (or b!78932 bm!7255) bm!7256))

(assert (= (or b!78940 bm!7256) bm!7254))

(assert (= (and bm!7254 c!12176) b!78939))

(assert (= (and bm!7254 (not c!12176)) b!78934))

(assert (= (and d!18849 res!41284) b!78933))

(assert (= (and b!78933 res!41285) b!78941))

(declare-fun m!79419 () Bool)

(assert (=> b!78939 m!79419))

(declare-fun m!79421 () Bool)

(assert (=> bm!7254 m!79421))

(declare-fun m!79423 () Bool)

(assert (=> b!78933 m!79423))

(declare-fun m!79425 () Bool)

(assert (=> b!78941 m!79425))

(declare-fun m!79427 () Bool)

(assert (=> d!18849 m!79427))

(assert (=> d!18849 m!78923))

(assert (=> b!78569 d!18849))

(declare-fun b!78942 () Bool)

(declare-fun e!51569 () Option!141)

(assert (=> b!78942 (= e!51569 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36307)))))))

(declare-fun e!51570 () Option!141)

(declare-fun b!78944 () Bool)

(assert (=> b!78944 (= e!51570 (getValueByKey!135 (t!5148 (toList!732 lt!36307)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun d!18851 () Bool)

(declare-fun c!12178 () Bool)

(assert (=> d!18851 (= c!12178 (and ((_ is Cons!1507) (toList!732 lt!36307)) (= (_1!1099 (h!2095 (toList!732 lt!36307))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!18851 (= (getValueByKey!135 (toList!732 lt!36307) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) e!51569)))

(declare-fun b!78945 () Bool)

(assert (=> b!78945 (= e!51570 None!139)))

(declare-fun b!78943 () Bool)

(assert (=> b!78943 (= e!51569 e!51570)))

(declare-fun c!12179 () Bool)

(assert (=> b!78943 (= c!12179 (and ((_ is Cons!1507) (toList!732 lt!36307)) (not (= (_1!1099 (h!2095 (toList!732 lt!36307))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!18851 c!12178) b!78942))

(assert (= (and d!18851 (not c!12178)) b!78943))

(assert (= (and b!78943 c!12179) b!78944))

(assert (= (and b!78943 (not c!12179)) b!78945))

(declare-fun m!79429 () Bool)

(assert (=> b!78944 m!79429))

(assert (=> b!78443 d!18851))

(declare-fun d!18853 () Bool)

(assert (=> d!18853 (contains!739 (getCurrentListMap!421 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))

(assert (=> d!18853 true))

(declare-fun _$16!99 () Unit!2242)

(assert (=> d!18853 (= (choose!464 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3107 lt!36006) (defaultEntry!2271 newMap!16)) _$16!99)))

(declare-fun bs!3335 () Bool)

(assert (= bs!3335 d!18853))

(assert (=> bs!3335 m!78223))

(assert (=> bs!3335 m!77869))

(assert (=> bs!3335 m!78223))

(assert (=> bs!3335 m!77869))

(assert (=> bs!3335 m!78225))

(assert (=> d!18479 d!18853))

(assert (=> d!18479 d!18739))

(declare-fun d!18855 () Bool)

(declare-fun res!41286 () Bool)

(declare-fun e!51571 () Bool)

(assert (=> d!18855 (=> res!41286 e!51571)))

(assert (=> d!18855 (= res!41286 (and ((_ is Cons!1507) lt!36382) (= (_1!1099 (h!2095 lt!36382)) (_1!1099 lt!35670))))))

(assert (=> d!18855 (= (containsKey!139 lt!36382 (_1!1099 lt!35670)) e!51571)))

(declare-fun b!78946 () Bool)

(declare-fun e!51572 () Bool)

(assert (=> b!78946 (= e!51571 e!51572)))

(declare-fun res!41287 () Bool)

(assert (=> b!78946 (=> (not res!41287) (not e!51572))))

(assert (=> b!78946 (= res!41287 (and (or (not ((_ is Cons!1507) lt!36382)) (bvsle (_1!1099 (h!2095 lt!36382)) (_1!1099 lt!35670))) ((_ is Cons!1507) lt!36382) (bvslt (_1!1099 (h!2095 lt!36382)) (_1!1099 lt!35670))))))

(declare-fun b!78947 () Bool)

(assert (=> b!78947 (= e!51572 (containsKey!139 (t!5148 lt!36382) (_1!1099 lt!35670)))))

(assert (= (and d!18855 (not res!41286)) b!78946))

(assert (= (and b!78946 res!41287) b!78947))

(declare-fun m!79431 () Bool)

(assert (=> b!78947 m!79431))

(assert (=> b!78582 d!18855))

(declare-fun b!78948 () Bool)

(declare-fun e!51573 () Option!141)

(assert (=> b!78948 (= e!51573 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36277)))))))

(declare-fun b!78950 () Bool)

(declare-fun e!51574 () Option!141)

(assert (=> b!78950 (= e!51574 (getValueByKey!135 (t!5148 (toList!732 lt!36277)) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun c!12180 () Bool)

(declare-fun d!18857 () Bool)

(assert (=> d!18857 (= c!12180 (and ((_ is Cons!1507) (toList!732 lt!36277)) (= (_1!1099 (h!2095 (toList!732 lt!36277))) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18857 (= (getValueByKey!135 (toList!732 lt!36277) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!51573)))

(declare-fun b!78951 () Bool)

(assert (=> b!78951 (= e!51574 None!139)))

(declare-fun b!78949 () Bool)

(assert (=> b!78949 (= e!51573 e!51574)))

(declare-fun c!12181 () Bool)

(assert (=> b!78949 (= c!12181 (and ((_ is Cons!1507) (toList!732 lt!36277)) (not (= (_1!1099 (h!2095 (toList!732 lt!36277))) (_1!1099 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!18857 c!12180) b!78948))

(assert (= (and d!18857 (not c!12180)) b!78949))

(assert (= (and b!78949 c!12181) b!78950))

(assert (= (and b!78949 (not c!12181)) b!78951))

(declare-fun m!79433 () Bool)

(assert (=> b!78950 m!79433))

(assert (=> b!78373 d!18857))

(assert (=> b!78471 d!18741))

(declare-fun d!18859 () Bool)

(declare-fun e!51575 () Bool)

(assert (=> d!18859 e!51575))

(declare-fun res!41288 () Bool)

(assert (=> d!18859 (=> (not res!41288) (not e!51575))))

(declare-fun lt!36546 () ListLongMap!1433)

(assert (=> d!18859 (= res!41288 (contains!739 lt!36546 (_1!1099 (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(declare-fun lt!36544 () List!1511)

(assert (=> d!18859 (= lt!36546 (ListLongMap!1434 lt!36544))))

(declare-fun lt!36543 () Unit!2242)

(declare-fun lt!36545 () Unit!2242)

(assert (=> d!18859 (= lt!36543 lt!36545)))

(assert (=> d!18859 (= (getValueByKey!135 lt!36544 (_1!1099 (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))) (Some!140 (_2!1099 (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!18859 (= lt!36545 (lemmaContainsTupThenGetReturnValue!55 lt!36544 (_1!1099 (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (_2!1099 (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!18859 (= lt!36544 (insertStrictlySorted!58 (toList!732 (ite c!12058 call!7220 (ite c!12056 call!7216 call!7219))) (_1!1099 (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (_2!1099 (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!18859 (= (+!103 (ite c!12058 call!7220 (ite c!12056 call!7216 call!7219)) (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) lt!36546)))

(declare-fun b!78952 () Bool)

(declare-fun res!41289 () Bool)

(assert (=> b!78952 (=> (not res!41289) (not e!51575))))

(assert (=> b!78952 (= res!41289 (= (getValueByKey!135 (toList!732 lt!36546) (_1!1099 (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))) (Some!140 (_2!1099 (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))))

(declare-fun b!78953 () Bool)

(assert (=> b!78953 (= e!51575 (contains!740 (toList!732 lt!36546) (ite (or c!12058 c!12056) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (= (and d!18859 res!41288) b!78952))

(assert (= (and b!78952 res!41289) b!78953))

(declare-fun m!79435 () Bool)

(assert (=> d!18859 m!79435))

(declare-fun m!79437 () Bool)

(assert (=> d!18859 m!79437))

(declare-fun m!79439 () Bool)

(assert (=> d!18859 m!79439))

(declare-fun m!79441 () Bool)

(assert (=> d!18859 m!79441))

(declare-fun m!79443 () Bool)

(assert (=> b!78952 m!79443))

(declare-fun m!79445 () Bool)

(assert (=> b!78953 m!79445))

(assert (=> bm!7218 d!18859))

(declare-fun d!18861 () Bool)

(declare-fun res!41290 () Bool)

(declare-fun e!51576 () Bool)

(assert (=> d!18861 (=> res!41290 e!51576)))

(assert (=> d!18861 (= res!41290 (and ((_ is Cons!1507) (toList!732 lt!35837)) (= (_1!1099 (h!2095 (toList!732 lt!35837))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18861 (= (containsKey!139 (toList!732 lt!35837) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!51576)))

(declare-fun b!78954 () Bool)

(declare-fun e!51577 () Bool)

(assert (=> b!78954 (= e!51576 e!51577)))

(declare-fun res!41291 () Bool)

(assert (=> b!78954 (=> (not res!41291) (not e!51577))))

(assert (=> b!78954 (= res!41291 (and (or (not ((_ is Cons!1507) (toList!732 lt!35837))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35837))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1507) (toList!732 lt!35837)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35837))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!78955 () Bool)

(assert (=> b!78955 (= e!51577 (containsKey!139 (t!5148 (toList!732 lt!35837)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!18861 (not res!41290)) b!78954))

(assert (= (and b!78954 res!41291) b!78955))

(assert (=> b!78955 m!77747))

(declare-fun m!79447 () Bool)

(assert (=> b!78955 m!79447))

(assert (=> d!18603 d!18861))

(declare-fun d!18863 () Bool)

(assert (=> d!18863 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898))))

(declare-fun lt!36547 () Unit!2242)

(assert (=> d!18863 (= lt!36547 (choose!463 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898))))

(declare-fun e!51578 () Bool)

(assert (=> d!18863 e!51578))

(declare-fun res!41292 () Bool)

(assert (=> d!18863 (=> (not res!41292) (not e!51578))))

(assert (=> d!18863 (= res!41292 (isStrictlySorted!290 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18863 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898) lt!36547)))

(declare-fun b!78956 () Bool)

(assert (=> b!78956 (= e!51578 (containsKey!139 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898))))

(assert (= (and d!18863 res!41292) b!78956))

(assert (=> d!18863 m!78453))

(assert (=> d!18863 m!78453))

(assert (=> d!18863 m!78455))

(declare-fun m!79449 () Bool)

(assert (=> d!18863 m!79449))

(declare-fun m!79451 () Bool)

(assert (=> d!18863 m!79451))

(assert (=> b!78956 m!78449))

(assert (=> b!78367 d!18863))

(declare-fun d!18865 () Bool)

(assert (=> d!18865 (= (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898)) (not (isEmpty!331 (getValueByKey!135 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898))))))

(declare-fun bs!3336 () Bool)

(assert (= bs!3336 d!18865))

(assert (=> bs!3336 m!78453))

(declare-fun m!79453 () Bool)

(assert (=> bs!3336 m!79453))

(assert (=> b!78367 d!18865))

(declare-fun b!78957 () Bool)

(declare-fun e!51579 () Option!141)

(assert (=> b!78957 (= e!51579 (Some!140 (_2!1099 (h!2095 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))))

(declare-fun e!51580 () Option!141)

(declare-fun b!78959 () Bool)

(assert (=> b!78959 (= e!51580 (getValueByKey!135 (t!5148 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) lt!35898))))

(declare-fun d!18867 () Bool)

(declare-fun c!12182 () Bool)

(assert (=> d!18867 (= c!12182 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35898)))))

(assert (=> d!18867 (= (getValueByKey!135 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35898) e!51579)))

(declare-fun b!78960 () Bool)

(assert (=> b!78960 (= e!51580 None!139)))

(declare-fun b!78958 () Bool)

(assert (=> b!78958 (= e!51579 e!51580)))

(declare-fun c!12183 () Bool)

(assert (=> b!78958 (= c!12183 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (not (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35898))))))

(assert (= (and d!18867 c!12182) b!78957))

(assert (= (and d!18867 (not c!12182)) b!78958))

(assert (= (and b!78958 c!12183) b!78959))

(assert (= (and b!78958 (not c!12183)) b!78960))

(declare-fun m!79455 () Bool)

(assert (=> b!78959 m!79455))

(assert (=> b!78367 d!18867))

(declare-fun d!18869 () Bool)

(declare-fun e!51582 () Bool)

(assert (=> d!18869 e!51582))

(declare-fun res!41293 () Bool)

(assert (=> d!18869 (=> res!41293 e!51582)))

(declare-fun lt!36550 () Bool)

(assert (=> d!18869 (= res!41293 (not lt!36550))))

(declare-fun lt!36551 () Bool)

(assert (=> d!18869 (= lt!36550 lt!36551)))

(declare-fun lt!36548 () Unit!2242)

(declare-fun e!51581 () Unit!2242)

(assert (=> d!18869 (= lt!36548 e!51581)))

(declare-fun c!12184 () Bool)

(assert (=> d!18869 (= c!12184 lt!36551)))

(assert (=> d!18869 (= lt!36551 (containsKey!139 (toList!732 lt!36095) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18869 (= (contains!739 lt!36095 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36550)))

(declare-fun b!78961 () Bool)

(declare-fun lt!36549 () Unit!2242)

(assert (=> b!78961 (= e!51581 lt!36549)))

(assert (=> b!78961 (= lt!36549 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36095) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> b!78961 (isDefined!89 (getValueByKey!135 (toList!732 lt!36095) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!78962 () Bool)

(declare-fun Unit!2288 () Unit!2242)

(assert (=> b!78962 (= e!51581 Unit!2288)))

(declare-fun b!78963 () Bool)

(assert (=> b!78963 (= e!51582 (isDefined!89 (getValueByKey!135 (toList!732 lt!36095) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!18869 c!12184) b!78961))

(assert (= (and d!18869 (not c!12184)) b!78962))

(assert (= (and d!18869 (not res!41293)) b!78963))

(declare-fun m!79457 () Bool)

(assert (=> d!18869 m!79457))

(declare-fun m!79459 () Bool)

(assert (=> b!78961 m!79459))

(assert (=> b!78961 m!78179))

(assert (=> b!78961 m!78179))

(declare-fun m!79461 () Bool)

(assert (=> b!78961 m!79461))

(assert (=> b!78963 m!78179))

(assert (=> b!78963 m!78179))

(assert (=> b!78963 m!79461))

(assert (=> d!18467 d!18869))

(declare-fun b!78964 () Bool)

(declare-fun e!51583 () Option!141)

(assert (=> b!78964 (= e!51583 (Some!140 (_2!1099 (h!2095 lt!36093))))))

(declare-fun e!51584 () Option!141)

(declare-fun b!78966 () Bool)

(assert (=> b!78966 (= e!51584 (getValueByKey!135 (t!5148 lt!36093) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun c!12185 () Bool)

(declare-fun d!18871 () Bool)

(assert (=> d!18871 (= c!12185 (and ((_ is Cons!1507) lt!36093) (= (_1!1099 (h!2095 lt!36093)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!18871 (= (getValueByKey!135 lt!36093 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) e!51583)))

(declare-fun b!78967 () Bool)

(assert (=> b!78967 (= e!51584 None!139)))

(declare-fun b!78965 () Bool)

(assert (=> b!78965 (= e!51583 e!51584)))

(declare-fun c!12186 () Bool)

(assert (=> b!78965 (= c!12186 (and ((_ is Cons!1507) lt!36093) (not (= (_1!1099 (h!2095 lt!36093)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!18871 c!12185) b!78964))

(assert (= (and d!18871 (not c!12185)) b!78965))

(assert (= (and b!78965 c!12186) b!78966))

(assert (= (and b!78965 (not c!12186)) b!78967))

(declare-fun m!79463 () Bool)

(assert (=> b!78966 m!79463))

(assert (=> d!18467 d!18871))

(declare-fun d!18873 () Bool)

(assert (=> d!18873 (= (getValueByKey!135 lt!36093 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36552 () Unit!2242)

(assert (=> d!18873 (= lt!36552 (choose!462 lt!36093 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun e!51585 () Bool)

(assert (=> d!18873 e!51585))

(declare-fun res!41294 () Bool)

(assert (=> d!18873 (=> (not res!41294) (not e!51585))))

(assert (=> d!18873 (= res!41294 (isStrictlySorted!290 lt!36093))))

(assert (=> d!18873 (= (lemmaContainsTupThenGetReturnValue!55 lt!36093 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36552)))

(declare-fun b!78968 () Bool)

(declare-fun res!41295 () Bool)

(assert (=> b!78968 (=> (not res!41295) (not e!51585))))

(assert (=> b!78968 (= res!41295 (containsKey!139 lt!36093 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!78969 () Bool)

(assert (=> b!78969 (= e!51585 (contains!740 lt!36093 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!18873 res!41294) b!78968))

(assert (= (and b!78968 res!41295) b!78969))

(assert (=> d!18873 m!78173))

(declare-fun m!79465 () Bool)

(assert (=> d!18873 m!79465))

(declare-fun m!79467 () Bool)

(assert (=> d!18873 m!79467))

(declare-fun m!79469 () Bool)

(assert (=> b!78968 m!79469))

(declare-fun m!79471 () Bool)

(assert (=> b!78969 m!79471))

(assert (=> d!18467 d!18873))

(declare-fun b!78970 () Bool)

(declare-fun e!51587 () List!1511)

(declare-fun call!7260 () List!1511)

(assert (=> b!78970 (= e!51587 call!7260)))

(declare-fun b!78971 () Bool)

(declare-fun res!41297 () Bool)

(declare-fun e!51589 () Bool)

(assert (=> b!78971 (=> (not res!41297) (not e!51589))))

(declare-fun lt!36553 () List!1511)

(assert (=> b!78971 (= res!41297 (containsKey!139 lt!36553 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun bm!7257 () Bool)

(declare-fun e!51590 () List!1511)

(declare-fun c!12188 () Bool)

(declare-fun call!7261 () List!1511)

(assert (=> bm!7257 (= call!7261 ($colon$colon!68 e!51590 (ite c!12188 (h!2095 (toList!732 lt!35662)) (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(declare-fun c!12189 () Bool)

(assert (=> bm!7257 (= c!12189 c!12188)))

(declare-fun c!12187 () Bool)

(declare-fun c!12190 () Bool)

(declare-fun b!78972 () Bool)

(assert (=> b!78972 (= e!51590 (ite c!12187 (t!5148 (toList!732 lt!35662)) (ite c!12190 (Cons!1507 (h!2095 (toList!732 lt!35662)) (t!5148 (toList!732 lt!35662))) Nil!1508)))))

(declare-fun d!18875 () Bool)

(assert (=> d!18875 e!51589))

(declare-fun res!41296 () Bool)

(assert (=> d!18875 (=> (not res!41296) (not e!51589))))

(assert (=> d!18875 (= res!41296 (isStrictlySorted!290 lt!36553))))

(declare-fun e!51586 () List!1511)

(assert (=> d!18875 (= lt!36553 e!51586)))

(assert (=> d!18875 (= c!12188 (and ((_ is Cons!1507) (toList!732 lt!35662)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!18875 (isStrictlySorted!290 (toList!732 lt!35662))))

(assert (=> d!18875 (= (insertStrictlySorted!58 (toList!732 lt!35662) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36553)))

(declare-fun bm!7258 () Bool)

(declare-fun call!7262 () List!1511)

(assert (=> bm!7258 (= call!7262 call!7260)))

(declare-fun b!78973 () Bool)

(assert (=> b!78973 (= c!12190 (and ((_ is Cons!1507) (toList!732 lt!35662)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun e!51588 () List!1511)

(assert (=> b!78973 (= e!51587 e!51588)))

(declare-fun b!78974 () Bool)

(assert (=> b!78974 (= e!51588 call!7262)))

(declare-fun b!78975 () Bool)

(assert (=> b!78975 (= e!51586 e!51587)))

(assert (=> b!78975 (= c!12187 (and ((_ is Cons!1507) (toList!732 lt!35662)) (= (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!78976 () Bool)

(assert (=> b!78976 (= e!51588 call!7262)))

(declare-fun bm!7259 () Bool)

(assert (=> bm!7259 (= call!7260 call!7261)))

(declare-fun b!78977 () Bool)

(assert (=> b!78977 (= e!51590 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35662)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!78978 () Bool)

(assert (=> b!78978 (= e!51586 call!7261)))

(declare-fun b!78979 () Bool)

(assert (=> b!78979 (= e!51589 (contains!740 lt!36553 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!18875 c!12188) b!78978))

(assert (= (and d!18875 (not c!12188)) b!78975))

(assert (= (and b!78975 c!12187) b!78970))

(assert (= (and b!78975 (not c!12187)) b!78973))

(assert (= (and b!78973 c!12190) b!78976))

(assert (= (and b!78973 (not c!12190)) b!78974))

(assert (= (or b!78976 b!78974) bm!7258))

(assert (= (or b!78970 bm!7258) bm!7259))

(assert (= (or b!78978 bm!7259) bm!7257))

(assert (= (and bm!7257 c!12189) b!78977))

(assert (= (and bm!7257 (not c!12189)) b!78972))

(assert (= (and d!18875 res!41296) b!78971))

(assert (= (and b!78971 res!41297) b!78979))

(declare-fun m!79473 () Bool)

(assert (=> b!78977 m!79473))

(declare-fun m!79475 () Bool)

(assert (=> bm!7257 m!79475))

(declare-fun m!79477 () Bool)

(assert (=> b!78971 m!79477))

(declare-fun m!79479 () Bool)

(assert (=> b!78979 m!79479))

(declare-fun m!79481 () Bool)

(assert (=> d!18875 m!79481))

(assert (=> d!18875 m!78057))

(assert (=> d!18467 d!18875))

(declare-fun d!18877 () Bool)

(declare-fun lt!36554 () Bool)

(assert (=> d!18877 (= lt!36554 (select (content!83 (toList!732 lt!36399)) (tuple2!2177 lt!35838 lt!35834)))))

(declare-fun e!51591 () Bool)

(assert (=> d!18877 (= lt!36554 e!51591)))

(declare-fun res!41298 () Bool)

(assert (=> d!18877 (=> (not res!41298) (not e!51591))))

(assert (=> d!18877 (= res!41298 ((_ is Cons!1507) (toList!732 lt!36399)))))

(assert (=> d!18877 (= (contains!740 (toList!732 lt!36399) (tuple2!2177 lt!35838 lt!35834)) lt!36554)))

(declare-fun b!78980 () Bool)

(declare-fun e!51592 () Bool)

(assert (=> b!78980 (= e!51591 e!51592)))

(declare-fun res!41299 () Bool)

(assert (=> b!78980 (=> res!41299 e!51592)))

(assert (=> b!78980 (= res!41299 (= (h!2095 (toList!732 lt!36399)) (tuple2!2177 lt!35838 lt!35834)))))

(declare-fun b!78981 () Bool)

(assert (=> b!78981 (= e!51592 (contains!740 (t!5148 (toList!732 lt!36399)) (tuple2!2177 lt!35838 lt!35834)))))

(assert (= (and d!18877 res!41298) b!78980))

(assert (= (and b!78980 (not res!41299)) b!78981))

(declare-fun m!79483 () Bool)

(assert (=> d!18877 m!79483))

(declare-fun m!79485 () Bool)

(assert (=> d!18877 m!79485))

(declare-fun m!79487 () Bool)

(assert (=> b!78981 m!79487))

(assert (=> b!78617 d!18877))

(declare-fun d!18879 () Bool)

(declare-fun e!51593 () Bool)

(assert (=> d!18879 e!51593))

(declare-fun res!41300 () Bool)

(assert (=> d!18879 (=> (not res!41300) (not e!51593))))

(declare-fun lt!36558 () ListLongMap!1433)

(assert (=> d!18879 (= res!41300 (contains!739 lt!36558 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(declare-fun lt!36556 () List!1511)

(assert (=> d!18879 (= lt!36558 (ListLongMap!1434 lt!36556))))

(declare-fun lt!36555 () Unit!2242)

(declare-fun lt!36557 () Unit!2242)

(assert (=> d!18879 (= lt!36555 lt!36557)))

(assert (=> d!18879 (= (getValueByKey!135 lt!36556 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(assert (=> d!18879 (= lt!36557 (lemmaContainsTupThenGetReturnValue!55 lt!36556 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(assert (=> d!18879 (= lt!36556 (insertStrictlySorted!58 (toList!732 call!7184) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))))))

(assert (=> d!18879 (= (+!103 call!7184 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))) lt!36558)))

(declare-fun b!78982 () Bool)

(declare-fun res!41301 () Bool)

(assert (=> b!78982 (=> (not res!41301) (not e!51593))))

(assert (=> b!78982 (= res!41301 (= (getValueByKey!135 (toList!732 lt!36558) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))))

(declare-fun b!78983 () Bool)

(assert (=> b!78983 (= e!51593 (contains!740 (toList!732 lt!36558) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11926 (ite c!11928 (minValue!2169 newMap!16) lt!35658) (minValue!2169 newMap!16)))))))

(assert (= (and d!18879 res!41300) b!78982))

(assert (= (and b!78982 res!41301) b!78983))

(declare-fun m!79489 () Bool)

(assert (=> d!18879 m!79489))

(declare-fun m!79491 () Bool)

(assert (=> d!18879 m!79491))

(declare-fun m!79493 () Bool)

(assert (=> d!18879 m!79493))

(declare-fun m!79495 () Bool)

(assert (=> d!18879 m!79495))

(declare-fun m!79497 () Bool)

(assert (=> b!78982 m!79497))

(declare-fun m!79499 () Bool)

(assert (=> b!78983 m!79499))

(assert (=> b!78258 d!18879))

(declare-fun d!18881 () Bool)

(assert (=> d!18881 (= ($colon$colon!68 e!51263 (ite c!12031 (h!2095 (toList!732 lt!35657)) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660)))) (Cons!1507 (ite c!12031 (h!2095 (toList!732 lt!35657)) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))) e!51263))))

(assert (=> bm!7203 d!18881))

(declare-fun d!18883 () Bool)

(declare-fun c!12191 () Bool)

(assert (=> d!18883 (= c!12191 ((_ is Nil!1508) (toList!732 lt!35842)))))

(declare-fun e!51594 () (InoxSet tuple2!2176))

(assert (=> d!18883 (= (content!83 (toList!732 lt!35842)) e!51594)))

(declare-fun b!78984 () Bool)

(assert (=> b!78984 (= e!51594 ((as const (Array tuple2!2176 Bool)) false))))

(declare-fun b!78985 () Bool)

(assert (=> b!78985 (= e!51594 ((_ map or) (store ((as const (Array tuple2!2176 Bool)) false) (h!2095 (toList!732 lt!35842)) true) (content!83 (t!5148 (toList!732 lt!35842)))))))

(assert (= (and d!18883 c!12191) b!78984))

(assert (= (and d!18883 (not c!12191)) b!78985))

(declare-fun m!79501 () Bool)

(assert (=> b!78985 m!79501))

(declare-fun m!79503 () Bool)

(assert (=> b!78985 m!79503))

(assert (=> d!18639 d!18883))

(declare-fun d!18885 () Bool)

(declare-fun res!41302 () Bool)

(declare-fun e!51595 () Bool)

(assert (=> d!18885 (=> res!41302 e!51595)))

(assert (=> d!18885 (= res!41302 (and ((_ is Cons!1507) lt!36376) (= (_1!1099 (h!2095 lt!36376)) (_1!1099 lt!35670))))))

(assert (=> d!18885 (= (containsKey!139 lt!36376 (_1!1099 lt!35670)) e!51595)))

(declare-fun b!78986 () Bool)

(declare-fun e!51596 () Bool)

(assert (=> b!78986 (= e!51595 e!51596)))

(declare-fun res!41303 () Bool)

(assert (=> b!78986 (=> (not res!41303) (not e!51596))))

(assert (=> b!78986 (= res!41303 (and (or (not ((_ is Cons!1507) lt!36376)) (bvsle (_1!1099 (h!2095 lt!36376)) (_1!1099 lt!35670))) ((_ is Cons!1507) lt!36376) (bvslt (_1!1099 (h!2095 lt!36376)) (_1!1099 lt!35670))))))

(declare-fun b!78987 () Bool)

(assert (=> b!78987 (= e!51596 (containsKey!139 (t!5148 lt!36376) (_1!1099 lt!35670)))))

(assert (= (and d!18885 (not res!41302)) b!78986))

(assert (= (and b!78986 res!41303) b!78987))

(declare-fun m!79505 () Bool)

(assert (=> b!78987 m!79505))

(assert (=> b!78563 d!18885))

(assert (=> d!18555 d!18553))

(declare-fun d!18887 () Bool)

(assert (=> d!18887 (= (getValueByKey!135 lt!35803 (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660)))))

(assert (=> d!18887 true))

(declare-fun _$22!393 () Unit!2242)

(assert (=> d!18887 (= (choose!462 lt!35803 (_1!1099 lt!35660) (_2!1099 lt!35660)) _$22!393)))

(declare-fun bs!3337 () Bool)

(assert (= bs!3337 d!18887))

(assert (=> bs!3337 m!77691))

(assert (=> d!18555 d!18887))

(declare-fun d!18889 () Bool)

(declare-fun res!41304 () Bool)

(declare-fun e!51597 () Bool)

(assert (=> d!18889 (=> res!41304 e!51597)))

(assert (=> d!18889 (= res!41304 (or ((_ is Nil!1508) lt!35803) ((_ is Nil!1508) (t!5148 lt!35803))))))

(assert (=> d!18889 (= (isStrictlySorted!290 lt!35803) e!51597)))

(declare-fun b!78988 () Bool)

(declare-fun e!51598 () Bool)

(assert (=> b!78988 (= e!51597 e!51598)))

(declare-fun res!41305 () Bool)

(assert (=> b!78988 (=> (not res!41305) (not e!51598))))

(assert (=> b!78988 (= res!41305 (bvslt (_1!1099 (h!2095 lt!35803)) (_1!1099 (h!2095 (t!5148 lt!35803)))))))

(declare-fun b!78989 () Bool)

(assert (=> b!78989 (= e!51598 (isStrictlySorted!290 (t!5148 lt!35803)))))

(assert (= (and d!18889 (not res!41304)) b!78988))

(assert (= (and b!78988 res!41305) b!78989))

(declare-fun m!79507 () Bool)

(assert (=> b!78989 m!79507))

(assert (=> d!18555 d!18889))

(declare-fun d!18891 () Bool)

(declare-fun lt!36559 () Bool)

(assert (=> d!18891 (= lt!36559 (select (content!83 (toList!732 lt!36087)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun e!51599 () Bool)

(assert (=> d!18891 (= lt!36559 e!51599)))

(declare-fun res!41306 () Bool)

(assert (=> d!18891 (=> (not res!41306) (not e!51599))))

(assert (=> d!18891 (= res!41306 ((_ is Cons!1507) (toList!732 lt!36087)))))

(assert (=> d!18891 (= (contains!740 (toList!732 lt!36087) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36559)))

(declare-fun b!78990 () Bool)

(declare-fun e!51600 () Bool)

(assert (=> b!78990 (= e!51599 e!51600)))

(declare-fun res!41307 () Bool)

(assert (=> b!78990 (=> res!41307 e!51600)))

(assert (=> b!78990 (= res!41307 (= (h!2095 (toList!732 lt!36087)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun b!78991 () Bool)

(assert (=> b!78991 (= e!51600 (contains!740 (t!5148 (toList!732 lt!36087)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!18891 res!41306) b!78990))

(assert (= (and b!78990 (not res!41307)) b!78991))

(declare-fun m!79509 () Bool)

(assert (=> d!18891 m!79509))

(declare-fun m!79511 () Bool)

(assert (=> d!18891 m!79511))

(declare-fun m!79513 () Bool)

(assert (=> b!78991 m!79513))

(assert (=> b!78223 d!18891))

(assert (=> d!18505 d!18409))

(declare-fun b!78992 () Bool)

(declare-fun e!51611 () Bool)

(declare-fun lt!36574 () ListLongMap!1433)

(assert (=> b!78992 (= e!51611 (= (apply!79 lt!36574 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78992 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (_values!2254 newMap!16))))))

(assert (=> b!78992 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78993 () Bool)

(declare-fun c!12193 () Bool)

(assert (=> b!78993 (= c!12193 (and (not (= (bvand lt!35990 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!35990 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!51610 () ListLongMap!1433)

(declare-fun e!51603 () ListLongMap!1433)

(assert (=> b!78993 (= e!51610 e!51603)))

(declare-fun b!78994 () Bool)

(declare-fun e!51609 () Bool)

(assert (=> b!78994 (= e!51609 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78995 () Bool)

(declare-fun e!51608 () Unit!2242)

(declare-fun lt!36577 () Unit!2242)

(assert (=> b!78995 (= e!51608 lt!36577)))

(declare-fun lt!36564 () ListLongMap!1433)

(assert (=> b!78995 (= lt!36564 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!35990 lt!35658 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36560 () (_ BitVec 64))

(assert (=> b!78995 (= lt!36560 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36571 () (_ BitVec 64))

(assert (=> b!78995 (= lt!36571 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36565 () Unit!2242)

(assert (=> b!78995 (= lt!36565 (addStillContains!55 lt!36564 lt!36560 lt!35658 lt!36571))))

(assert (=> b!78995 (contains!739 (+!103 lt!36564 (tuple2!2177 lt!36560 lt!35658)) lt!36571)))

(declare-fun lt!36562 () Unit!2242)

(assert (=> b!78995 (= lt!36562 lt!36565)))

(declare-fun lt!36563 () ListLongMap!1433)

(assert (=> b!78995 (= lt!36563 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!35990 lt!35658 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36572 () (_ BitVec 64))

(assert (=> b!78995 (= lt!36572 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36569 () (_ BitVec 64))

(assert (=> b!78995 (= lt!36569 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36570 () Unit!2242)

(assert (=> b!78995 (= lt!36570 (addApplyDifferent!55 lt!36563 lt!36572 (minValue!2169 newMap!16) lt!36569))))

(assert (=> b!78995 (= (apply!79 (+!103 lt!36563 (tuple2!2177 lt!36572 (minValue!2169 newMap!16))) lt!36569) (apply!79 lt!36563 lt!36569))))

(declare-fun lt!36561 () Unit!2242)

(assert (=> b!78995 (= lt!36561 lt!36570)))

(declare-fun lt!36568 () ListLongMap!1433)

(assert (=> b!78995 (= lt!36568 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!35990 lt!35658 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36581 () (_ BitVec 64))

(assert (=> b!78995 (= lt!36581 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36579 () (_ BitVec 64))

(assert (=> b!78995 (= lt!36579 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36580 () Unit!2242)

(assert (=> b!78995 (= lt!36580 (addApplyDifferent!55 lt!36568 lt!36581 lt!35658 lt!36579))))

(assert (=> b!78995 (= (apply!79 (+!103 lt!36568 (tuple2!2177 lt!36581 lt!35658)) lt!36579) (apply!79 lt!36568 lt!36579))))

(declare-fun lt!36573 () Unit!2242)

(assert (=> b!78995 (= lt!36573 lt!36580)))

(declare-fun lt!36575 () ListLongMap!1433)

(assert (=> b!78995 (= lt!36575 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!35990 lt!35658 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36576 () (_ BitVec 64))

(assert (=> b!78995 (= lt!36576 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36578 () (_ BitVec 64))

(assert (=> b!78995 (= lt!36578 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78995 (= lt!36577 (addApplyDifferent!55 lt!36575 lt!36576 (minValue!2169 newMap!16) lt!36578))))

(assert (=> b!78995 (= (apply!79 (+!103 lt!36575 (tuple2!2177 lt!36576 (minValue!2169 newMap!16))) lt!36578) (apply!79 lt!36575 lt!36578))))

(declare-fun b!78997 () Bool)

(declare-fun e!51602 () Bool)

(declare-fun e!51604 () Bool)

(assert (=> b!78997 (= e!51602 e!51604)))

(declare-fun res!41310 () Bool)

(declare-fun call!7268 () Bool)

(assert (=> b!78997 (= res!41310 call!7268)))

(assert (=> b!78997 (=> (not res!41310) (not e!51604))))

(declare-fun bm!7260 () Bool)

(declare-fun call!7263 () ListLongMap!1433)

(declare-fun call!7267 () ListLongMap!1433)

(assert (=> bm!7260 (= call!7263 call!7267)))

(declare-fun b!78998 () Bool)

(assert (=> b!78998 (= e!51602 (not call!7268))))

(declare-fun b!78999 () Bool)

(declare-fun e!51607 () ListLongMap!1433)

(assert (=> b!78999 (= e!51607 e!51610)))

(declare-fun c!12194 () Bool)

(assert (=> b!78999 (= c!12194 (and (not (= (bvand lt!35990 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!35990 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79000 () Bool)

(declare-fun call!7264 () ListLongMap!1433)

(assert (=> b!79000 (= e!51603 call!7264)))

(declare-fun b!79001 () Bool)

(declare-fun call!7266 () ListLongMap!1433)

(assert (=> b!79001 (= e!51603 call!7266)))

(declare-fun b!79002 () Bool)

(declare-fun res!41315 () Bool)

(declare-fun e!51613 () Bool)

(assert (=> b!79002 (=> (not res!41315) (not e!51613))))

(declare-fun e!51601 () Bool)

(assert (=> b!79002 (= res!41315 e!51601)))

(declare-fun c!12192 () Bool)

(assert (=> b!79002 (= c!12192 (not (= (bvand lt!35990 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7261 () Bool)

(declare-fun call!7265 () Bool)

(assert (=> bm!7261 (= call!7265 (contains!739 lt!36574 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7262 () Bool)

(assert (=> bm!7262 (= call!7268 (contains!739 lt!36574 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7263 () Bool)

(assert (=> bm!7263 (= call!7267 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!35990 lt!35658 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!79003 () Bool)

(declare-fun e!51612 () Bool)

(assert (=> b!79003 (= e!51612 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7264 () Bool)

(assert (=> bm!7264 (= call!7266 call!7263)))

(declare-fun b!79004 () Bool)

(declare-fun e!51606 () Bool)

(assert (=> b!79004 (= e!51606 (= (apply!79 lt!36574 #b0000000000000000000000000000000000000000000000000000000000000000) lt!35658))))

(declare-fun b!79005 () Bool)

(declare-fun res!41316 () Bool)

(assert (=> b!79005 (=> (not res!41316) (not e!51613))))

(declare-fun e!51605 () Bool)

(assert (=> b!79005 (= res!41316 e!51605)))

(declare-fun res!41313 () Bool)

(assert (=> b!79005 (=> res!41313 e!51605)))

(assert (=> b!79005 (= res!41313 (not e!51612))))

(declare-fun res!41309 () Bool)

(assert (=> b!79005 (=> (not res!41309) (not e!51612))))

(assert (=> b!79005 (= res!41309 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!78996 () Bool)

(declare-fun call!7269 () ListLongMap!1433)

(assert (=> b!78996 (= e!51607 (+!103 call!7269 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun d!18893 () Bool)

(assert (=> d!18893 e!51613))

(declare-fun res!41312 () Bool)

(assert (=> d!18893 (=> (not res!41312) (not e!51613))))

(assert (=> d!18893 (= res!41312 (or (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))))

(declare-fun lt!36566 () ListLongMap!1433)

(assert (=> d!18893 (= lt!36574 lt!36566)))

(declare-fun lt!36567 () Unit!2242)

(assert (=> d!18893 (= lt!36567 e!51608)))

(declare-fun c!12195 () Bool)

(assert (=> d!18893 (= c!12195 e!51609)))

(declare-fun res!41314 () Bool)

(assert (=> d!18893 (=> (not res!41314) (not e!51609))))

(assert (=> d!18893 (= res!41314 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!18893 (= lt!36566 e!51607)))

(declare-fun c!12196 () Bool)

(assert (=> d!18893 (= c!12196 (and (not (= (bvand lt!35990 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!35990 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18893 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18893 (= (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!35990 lt!35658 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36574)))

(declare-fun b!79006 () Bool)

(assert (=> b!79006 (= e!51601 (not call!7265))))

(declare-fun bm!7265 () Bool)

(assert (=> bm!7265 (= call!7269 (+!103 (ite c!12196 call!7267 (ite c!12194 call!7263 call!7266)) (ite (or c!12196 c!12194) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!79007 () Bool)

(assert (=> b!79007 (= e!51610 call!7264)))

(declare-fun bm!7266 () Bool)

(assert (=> bm!7266 (= call!7264 call!7269)))

(declare-fun b!79008 () Bool)

(assert (=> b!79008 (= e!51605 e!51611)))

(declare-fun res!41311 () Bool)

(assert (=> b!79008 (=> (not res!41311) (not e!51611))))

(assert (=> b!79008 (= res!41311 (contains!739 lt!36574 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79008 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79009 () Bool)

(assert (=> b!79009 (= e!51601 e!51606)))

(declare-fun res!41308 () Bool)

(assert (=> b!79009 (= res!41308 call!7265)))

(assert (=> b!79009 (=> (not res!41308) (not e!51606))))

(declare-fun b!79010 () Bool)

(assert (=> b!79010 (= e!51613 e!51602)))

(declare-fun c!12197 () Bool)

(assert (=> b!79010 (= c!12197 (not (= (bvand lt!35990 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79011 () Bool)

(declare-fun Unit!2289 () Unit!2242)

(assert (=> b!79011 (= e!51608 Unit!2289)))

(declare-fun b!79012 () Bool)

(assert (=> b!79012 (= e!51604 (= (apply!79 lt!36574 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(assert (= (and d!18893 c!12196) b!78996))

(assert (= (and d!18893 (not c!12196)) b!78999))

(assert (= (and b!78999 c!12194) b!79007))

(assert (= (and b!78999 (not c!12194)) b!78993))

(assert (= (and b!78993 c!12193) b!79000))

(assert (= (and b!78993 (not c!12193)) b!79001))

(assert (= (or b!79000 b!79001) bm!7264))

(assert (= (or b!79007 bm!7264) bm!7260))

(assert (= (or b!79007 b!79000) bm!7266))

(assert (= (or b!78996 bm!7260) bm!7263))

(assert (= (or b!78996 bm!7266) bm!7265))

(assert (= (and d!18893 res!41314) b!78994))

(assert (= (and d!18893 c!12195) b!78995))

(assert (= (and d!18893 (not c!12195)) b!79011))

(assert (= (and d!18893 res!41312) b!79005))

(assert (= (and b!79005 res!41309) b!79003))

(assert (= (and b!79005 (not res!41313)) b!79008))

(assert (= (and b!79008 res!41311) b!78992))

(assert (= (and b!79005 res!41316) b!79002))

(assert (= (and b!79002 c!12192) b!79009))

(assert (= (and b!79002 (not c!12192)) b!79006))

(assert (= (and b!79009 res!41308) b!79004))

(assert (= (or b!79009 b!79006) bm!7261))

(assert (= (and b!79002 res!41315) b!79010))

(assert (= (and b!79010 c!12197) b!78997))

(assert (= (and b!79010 (not c!12197)) b!78998))

(assert (= (and b!78997 res!41310) b!79012))

(assert (= (or b!78997 b!78998) bm!7262))

(declare-fun b_lambda!3519 () Bool)

(assert (=> (not b_lambda!3519) (not b!78992)))

(assert (=> b!78992 t!5160))

(declare-fun b_and!4837 () Bool)

(assert (= b_and!4833 (and (=> t!5160 result!2821) b_and!4837)))

(assert (=> b!78992 t!5162))

(declare-fun b_and!4839 () Bool)

(assert (= b_and!4835 (and (=> t!5162 result!2823) b_and!4839)))

(declare-fun m!79515 () Bool)

(assert (=> b!79004 m!79515))

(declare-fun m!79517 () Bool)

(assert (=> b!78995 m!79517))

(declare-fun m!79519 () Bool)

(assert (=> b!78995 m!79519))

(declare-fun m!79521 () Bool)

(assert (=> b!78995 m!79521))

(declare-fun m!79523 () Bool)

(assert (=> b!78995 m!79523))

(declare-fun m!79525 () Bool)

(assert (=> b!78995 m!79525))

(declare-fun m!79527 () Bool)

(assert (=> b!78995 m!79527))

(declare-fun m!79529 () Bool)

(assert (=> b!78995 m!79529))

(declare-fun m!79531 () Bool)

(assert (=> b!78995 m!79531))

(declare-fun m!79533 () Bool)

(assert (=> b!78995 m!79533))

(declare-fun m!79535 () Bool)

(assert (=> b!78995 m!79535))

(declare-fun m!79537 () Bool)

(assert (=> b!78995 m!79537))

(declare-fun m!79539 () Bool)

(assert (=> b!78995 m!79539))

(declare-fun m!79541 () Bool)

(assert (=> b!78995 m!79541))

(assert (=> b!78995 m!79537))

(assert (=> b!78995 m!79535))

(declare-fun m!79543 () Bool)

(assert (=> b!78995 m!79543))

(assert (=> b!78995 m!77965))

(assert (=> b!78995 m!79521))

(declare-fun m!79545 () Bool)

(assert (=> b!78995 m!79545))

(assert (=> b!78995 m!79531))

(declare-fun m!79547 () Bool)

(assert (=> b!78995 m!79547))

(declare-fun m!79549 () Bool)

(assert (=> bm!7262 m!79549))

(assert (=> bm!7263 m!79533))

(declare-fun m!79551 () Bool)

(assert (=> b!78996 m!79551))

(assert (=> b!78994 m!77965))

(assert (=> b!78994 m!77965))

(assert (=> b!78994 m!77975))

(assert (=> d!18893 m!77977))

(declare-fun m!79553 () Bool)

(assert (=> bm!7261 m!79553))

(declare-fun m!79555 () Bool)

(assert (=> bm!7265 m!79555))

(assert (=> b!78992 m!77983))

(assert (=> b!78992 m!77985))

(assert (=> b!78992 m!77983))

(assert (=> b!78992 m!77987))

(assert (=> b!78992 m!77965))

(declare-fun m!79557 () Bool)

(assert (=> b!78992 m!79557))

(assert (=> b!78992 m!77985))

(assert (=> b!78992 m!77965))

(assert (=> b!79003 m!77965))

(assert (=> b!79003 m!77965))

(assert (=> b!79003 m!77975))

(declare-fun m!79559 () Bool)

(assert (=> b!79012 m!79559))

(assert (=> b!79008 m!77965))

(assert (=> b!79008 m!77965))

(declare-fun m!79561 () Bool)

(assert (=> b!79008 m!79561))

(assert (=> d!18505 d!18893))

(declare-fun d!18895 () Bool)

(assert (=> d!18895 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!35990 lt!35658 (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(assert (=> d!18895 true))

(declare-fun _$7!65 () Unit!2242)

(assert (=> d!18895 (= (choose!466 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) lt!35990 (zeroValue!2169 newMap!16) lt!35658 (minValue!2169 newMap!16) (defaultEntry!2271 newMap!16)) _$7!65)))

(declare-fun bs!3338 () Bool)

(assert (= bs!3338 d!18895))

(assert (=> bs!3338 m!77787))

(assert (=> bs!3338 m!77787))

(assert (=> bs!3338 m!78403))

(assert (=> bs!3338 m!78405))

(assert (=> d!18505 d!18895))

(declare-fun d!18897 () Bool)

(declare-fun e!51614 () Bool)

(assert (=> d!18897 e!51614))

(declare-fun res!41317 () Bool)

(assert (=> d!18897 (=> (not res!41317) (not e!51614))))

(declare-fun lt!36585 () ListLongMap!1433)

(assert (=> d!18897 (= res!41317 (contains!739 lt!36585 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658))))))

(declare-fun lt!36583 () List!1511)

(assert (=> d!18897 (= lt!36585 (ListLongMap!1434 lt!36583))))

(declare-fun lt!36582 () Unit!2242)

(declare-fun lt!36584 () Unit!2242)

(assert (=> d!18897 (= lt!36582 lt!36584)))

(assert (=> d!18897 (= (getValueByKey!135 lt!36583 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658))) (Some!140 (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658))))))

(assert (=> d!18897 (= lt!36584 (lemmaContainsTupThenGetReturnValue!55 lt!36583 (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658))))))

(assert (=> d!18897 (= lt!36583 (insertStrictlySorted!58 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658))))))

(assert (=> d!18897 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658)) lt!36585)))

(declare-fun b!79013 () Bool)

(declare-fun res!41318 () Bool)

(assert (=> b!79013 (=> (not res!41318) (not e!51614))))

(assert (=> b!79013 (= res!41318 (= (getValueByKey!135 (toList!732 lt!36585) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658))) (Some!140 (_2!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658)))))))

(declare-fun b!79014 () Bool)

(assert (=> b!79014 (= e!51614 (contains!740 (toList!732 lt!36585) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658)))))

(assert (= (and d!18897 res!41317) b!79013))

(assert (= (and b!79013 res!41318) b!79014))

(declare-fun m!79563 () Bool)

(assert (=> d!18897 m!79563))

(declare-fun m!79565 () Bool)

(assert (=> d!18897 m!79565))

(declare-fun m!79567 () Bool)

(assert (=> d!18897 m!79567))

(declare-fun m!79569 () Bool)

(assert (=> d!18897 m!79569))

(declare-fun m!79571 () Bool)

(assert (=> b!79013 m!79571))

(declare-fun m!79573 () Bool)

(assert (=> b!79014 m!79573))

(assert (=> d!18505 d!18897))

(assert (=> d!18505 d!18739))

(declare-fun d!18899 () Bool)

(declare-fun e!51616 () Bool)

(assert (=> d!18899 e!51616))

(declare-fun res!41319 () Bool)

(assert (=> d!18899 (=> res!41319 e!51616)))

(declare-fun lt!36588 () Bool)

(assert (=> d!18899 (= res!41319 (not lt!36588))))

(declare-fun lt!36589 () Bool)

(assert (=> d!18899 (= lt!36588 lt!36589)))

(declare-fun lt!36586 () Unit!2242)

(declare-fun e!51615 () Unit!2242)

(assert (=> d!18899 (= lt!36586 e!51615)))

(declare-fun c!12198 () Bool)

(assert (=> d!18899 (= c!12198 lt!36589)))

(assert (=> d!18899 (= lt!36589 (containsKey!139 (toList!732 lt!36137) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18899 (= (contains!739 lt!36137 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36588)))

(declare-fun b!79015 () Bool)

(declare-fun lt!36587 () Unit!2242)

(assert (=> b!79015 (= e!51615 lt!36587)))

(assert (=> b!79015 (= lt!36587 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36137) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79015 (isDefined!89 (getValueByKey!135 (toList!732 lt!36137) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79016 () Bool)

(declare-fun Unit!2290 () Unit!2242)

(assert (=> b!79016 (= e!51615 Unit!2290)))

(declare-fun b!79017 () Bool)

(assert (=> b!79017 (= e!51616 (isDefined!89 (getValueByKey!135 (toList!732 lt!36137) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18899 c!12198) b!79015))

(assert (= (and d!18899 (not c!12198)) b!79016))

(assert (= (and d!18899 (not res!41319)) b!79017))

(declare-fun m!79575 () Bool)

(assert (=> d!18899 m!79575))

(declare-fun m!79577 () Bool)

(assert (=> b!79015 m!79577))

(declare-fun m!79579 () Bool)

(assert (=> b!79015 m!79579))

(assert (=> b!79015 m!79579))

(declare-fun m!79581 () Bool)

(assert (=> b!79015 m!79581))

(assert (=> b!79017 m!79579))

(assert (=> b!79017 m!79579))

(assert (=> b!79017 m!79581))

(assert (=> bm!7176 d!18899))

(declare-fun d!18901 () Bool)

(assert (=> d!18901 (= (apply!79 lt!36348 lt!36354) (get!1180 (getValueByKey!135 (toList!732 lt!36348) lt!36354)))))

(declare-fun bs!3339 () Bool)

(assert (= bs!3339 d!18901))

(declare-fun m!79583 () Bool)

(assert (=> bs!3339 m!79583))

(assert (=> bs!3339 m!79583))

(declare-fun m!79585 () Bool)

(assert (=> bs!3339 m!79585))

(assert (=> b!78515 d!18901))

(declare-fun d!18903 () Bool)

(assert (=> d!18903 (= (apply!79 (+!103 lt!36353 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16))) lt!36364) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!36353 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16)))) lt!36364)))))

(declare-fun bs!3340 () Bool)

(assert (= bs!3340 d!18903))

(declare-fun m!79587 () Bool)

(assert (=> bs!3340 m!79587))

(assert (=> bs!3340 m!79587))

(declare-fun m!79589 () Bool)

(assert (=> bs!3340 m!79589))

(assert (=> b!78515 d!18903))

(declare-fun d!18905 () Bool)

(assert (=> d!18905 (contains!739 (+!103 lt!36349 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16))) lt!36356)))

(declare-fun lt!36590 () Unit!2242)

(assert (=> d!18905 (= lt!36590 (choose!468 lt!36349 lt!36345 (zeroValue!2169 newMap!16) lt!36356))))

(assert (=> d!18905 (contains!739 lt!36349 lt!36356)))

(assert (=> d!18905 (= (addStillContains!55 lt!36349 lt!36345 (zeroValue!2169 newMap!16) lt!36356) lt!36590)))

(declare-fun bs!3341 () Bool)

(assert (= bs!3341 d!18905))

(assert (=> bs!3341 m!78715))

(assert (=> bs!3341 m!78715))

(assert (=> bs!3341 m!78723))

(declare-fun m!79591 () Bool)

(assert (=> bs!3341 m!79591))

(declare-fun m!79593 () Bool)

(assert (=> bs!3341 m!79593))

(assert (=> b!78515 d!18905))

(declare-fun d!18907 () Bool)

(assert (=> d!18907 (= (apply!79 (+!103 lt!36348 (tuple2!2177 lt!36357 (minValue!2169 newMap!16))) lt!36354) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!36348 (tuple2!2177 lt!36357 (minValue!2169 newMap!16)))) lt!36354)))))

(declare-fun bs!3342 () Bool)

(assert (= bs!3342 d!18907))

(declare-fun m!79595 () Bool)

(assert (=> bs!3342 m!79595))

(assert (=> bs!3342 m!79595))

(declare-fun m!79597 () Bool)

(assert (=> bs!3342 m!79597))

(assert (=> b!78515 d!18907))

(declare-fun d!18909 () Bool)

(declare-fun e!51617 () Bool)

(assert (=> d!18909 e!51617))

(declare-fun res!41320 () Bool)

(assert (=> d!18909 (=> (not res!41320) (not e!51617))))

(declare-fun lt!36594 () ListLongMap!1433)

(assert (=> d!18909 (= res!41320 (contains!739 lt!36594 (_1!1099 (tuple2!2177 lt!36357 (minValue!2169 newMap!16)))))))

(declare-fun lt!36592 () List!1511)

(assert (=> d!18909 (= lt!36594 (ListLongMap!1434 lt!36592))))

(declare-fun lt!36591 () Unit!2242)

(declare-fun lt!36593 () Unit!2242)

(assert (=> d!18909 (= lt!36591 lt!36593)))

(assert (=> d!18909 (= (getValueByKey!135 lt!36592 (_1!1099 (tuple2!2177 lt!36357 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36357 (minValue!2169 newMap!16)))))))

(assert (=> d!18909 (= lt!36593 (lemmaContainsTupThenGetReturnValue!55 lt!36592 (_1!1099 (tuple2!2177 lt!36357 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36357 (minValue!2169 newMap!16)))))))

(assert (=> d!18909 (= lt!36592 (insertStrictlySorted!58 (toList!732 lt!36348) (_1!1099 (tuple2!2177 lt!36357 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36357 (minValue!2169 newMap!16)))))))

(assert (=> d!18909 (= (+!103 lt!36348 (tuple2!2177 lt!36357 (minValue!2169 newMap!16))) lt!36594)))

(declare-fun b!79018 () Bool)

(declare-fun res!41321 () Bool)

(assert (=> b!79018 (=> (not res!41321) (not e!51617))))

(assert (=> b!79018 (= res!41321 (= (getValueByKey!135 (toList!732 lt!36594) (_1!1099 (tuple2!2177 lt!36357 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36357 (minValue!2169 newMap!16))))))))

(declare-fun b!79019 () Bool)

(assert (=> b!79019 (= e!51617 (contains!740 (toList!732 lt!36594) (tuple2!2177 lt!36357 (minValue!2169 newMap!16))))))

(assert (= (and d!18909 res!41320) b!79018))

(assert (= (and b!79018 res!41321) b!79019))

(declare-fun m!79599 () Bool)

(assert (=> d!18909 m!79599))

(declare-fun m!79601 () Bool)

(assert (=> d!18909 m!79601))

(declare-fun m!79603 () Bool)

(assert (=> d!18909 m!79603))

(declare-fun m!79605 () Bool)

(assert (=> d!18909 m!79605))

(declare-fun m!79607 () Bool)

(assert (=> b!79018 m!79607))

(declare-fun m!79609 () Bool)

(assert (=> b!79019 m!79609))

(assert (=> b!78515 d!18909))

(declare-fun d!18911 () Bool)

(declare-fun e!51619 () Bool)

(assert (=> d!18911 e!51619))

(declare-fun res!41322 () Bool)

(assert (=> d!18911 (=> res!41322 e!51619)))

(declare-fun lt!36597 () Bool)

(assert (=> d!18911 (= res!41322 (not lt!36597))))

(declare-fun lt!36598 () Bool)

(assert (=> d!18911 (= lt!36597 lt!36598)))

(declare-fun lt!36595 () Unit!2242)

(declare-fun e!51618 () Unit!2242)

(assert (=> d!18911 (= lt!36595 e!51618)))

(declare-fun c!12199 () Bool)

(assert (=> d!18911 (= c!12199 lt!36598)))

(assert (=> d!18911 (= lt!36598 (containsKey!139 (toList!732 (+!103 lt!36349 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16)))) lt!36356))))

(assert (=> d!18911 (= (contains!739 (+!103 lt!36349 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16))) lt!36356) lt!36597)))

(declare-fun b!79020 () Bool)

(declare-fun lt!36596 () Unit!2242)

(assert (=> b!79020 (= e!51618 lt!36596)))

(assert (=> b!79020 (= lt!36596 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (+!103 lt!36349 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16)))) lt!36356))))

(assert (=> b!79020 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!36349 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16)))) lt!36356))))

(declare-fun b!79021 () Bool)

(declare-fun Unit!2291 () Unit!2242)

(assert (=> b!79021 (= e!51618 Unit!2291)))

(declare-fun b!79022 () Bool)

(assert (=> b!79022 (= e!51619 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!36349 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16)))) lt!36356)))))

(assert (= (and d!18911 c!12199) b!79020))

(assert (= (and d!18911 (not c!12199)) b!79021))

(assert (= (and d!18911 (not res!41322)) b!79022))

(declare-fun m!79611 () Bool)

(assert (=> d!18911 m!79611))

(declare-fun m!79613 () Bool)

(assert (=> b!79020 m!79613))

(declare-fun m!79615 () Bool)

(assert (=> b!79020 m!79615))

(assert (=> b!79020 m!79615))

(declare-fun m!79617 () Bool)

(assert (=> b!79020 m!79617))

(assert (=> b!79022 m!79615))

(assert (=> b!79022 m!79615))

(assert (=> b!79022 m!79617))

(assert (=> b!78515 d!18911))

(declare-fun b!79023 () Bool)

(assert (=> b!79023 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> b!79023 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002))))))

(declare-fun lt!36604 () ListLongMap!1433)

(declare-fun e!51622 () Bool)

(assert (=> b!79023 (= e!51622 (= (apply!79 lt!36604 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79025 () Bool)

(declare-fun lt!36599 () Unit!2242)

(declare-fun lt!36600 () Unit!2242)

(assert (=> b!79025 (= lt!36599 lt!36600)))

(declare-fun lt!36601 () V!2993)

(declare-fun lt!36605 () (_ BitVec 64))

(declare-fun lt!36602 () (_ BitVec 64))

(declare-fun lt!36603 () ListLongMap!1433)

(assert (=> b!79025 (not (contains!739 (+!103 lt!36603 (tuple2!2177 lt!36605 lt!36601)) lt!36602))))

(assert (=> b!79025 (= lt!36600 (addStillNotContains!29 lt!36603 lt!36605 lt!36601 lt!36602))))

(assert (=> b!79025 (= lt!36602 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79025 (= lt!36601 (get!1177 (select (arr!1883 (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79025 (= lt!36605 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7270 () ListLongMap!1433)

(assert (=> b!79025 (= lt!36603 call!7270)))

(declare-fun e!51625 () ListLongMap!1433)

(assert (=> b!79025 (= e!51625 (+!103 call!7270 (tuple2!2177 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) (get!1177 (select (arr!1883 (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7267 () Bool)

(assert (=> bm!7267 (= call!7270 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16)))))

(declare-fun b!79026 () Bool)

(declare-fun e!51626 () ListLongMap!1433)

(assert (=> b!79026 (= e!51626 e!51625)))

(declare-fun c!12203 () Bool)

(assert (=> b!79026 (= c!12203 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79027 () Bool)

(declare-fun e!51623 () Bool)

(assert (=> b!79027 (= e!51623 (= lt!36604 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16))))))

(declare-fun b!79028 () Bool)

(declare-fun e!51620 () Bool)

(assert (=> b!79028 (= e!51620 e!51622)))

(assert (=> b!79028 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun res!41326 () Bool)

(assert (=> b!79028 (= res!41326 (contains!739 lt!36604 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79028 (=> (not res!41326) (not e!51622))))

(declare-fun b!79029 () Bool)

(assert (=> b!79029 (= e!51626 (ListLongMap!1434 Nil!1508))))

(declare-fun b!79030 () Bool)

(assert (=> b!79030 (= e!51625 call!7270)))

(declare-fun b!79031 () Bool)

(declare-fun e!51624 () Bool)

(assert (=> b!79031 (= e!51624 e!51620)))

(declare-fun c!12201 () Bool)

(declare-fun e!51621 () Bool)

(assert (=> b!79031 (= c!12201 e!51621)))

(declare-fun res!41324 () Bool)

(assert (=> b!79031 (=> (not res!41324) (not e!51621))))

(assert (=> b!79031 (= res!41324 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79032 () Bool)

(declare-fun res!41323 () Bool)

(assert (=> b!79032 (=> (not res!41323) (not e!51624))))

(assert (=> b!79032 (= res!41323 (not (contains!739 lt!36604 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!18913 () Bool)

(assert (=> d!18913 e!51624))

(declare-fun res!41325 () Bool)

(assert (=> d!18913 (=> (not res!41325) (not e!51624))))

(assert (=> d!18913 (= res!41325 (not (contains!739 lt!36604 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18913 (= lt!36604 e!51626)))

(declare-fun c!12202 () Bool)

(assert (=> d!18913 (= c!12202 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!18913 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!18913 (= (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36604)))

(declare-fun b!79024 () Bool)

(assert (=> b!79024 (= e!51620 e!51623)))

(declare-fun c!12200 () Bool)

(assert (=> b!79024 (= c!12200 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79033 () Bool)

(assert (=> b!79033 (= e!51623 (isEmpty!330 lt!36604))))

(declare-fun b!79034 () Bool)

(assert (=> b!79034 (= e!51621 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79034 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!18913 c!12202) b!79029))

(assert (= (and d!18913 (not c!12202)) b!79026))

(assert (= (and b!79026 c!12203) b!79025))

(assert (= (and b!79026 (not c!12203)) b!79030))

(assert (= (or b!79025 b!79030) bm!7267))

(assert (= (and d!18913 res!41325) b!79032))

(assert (= (and b!79032 res!41323) b!79031))

(assert (= (and b!79031 res!41324) b!79034))

(assert (= (and b!79031 c!12201) b!79028))

(assert (= (and b!79031 (not c!12201)) b!79024))

(assert (= (and b!79028 res!41326) b!79023))

(assert (= (and b!79024 c!12200) b!79027))

(assert (= (and b!79024 (not c!12200)) b!79033))

(declare-fun b_lambda!3521 () Bool)

(assert (=> (not b_lambda!3521) (not b!79023)))

(assert (=> b!79023 t!5160))

(declare-fun b_and!4841 () Bool)

(assert (= b_and!4837 (and (=> t!5160 result!2821) b_and!4841)))

(assert (=> b!79023 t!5162))

(declare-fun b_and!4843 () Bool)

(assert (= b_and!4839 (and (=> t!5162 result!2823) b_and!4843)))

(declare-fun b_lambda!3523 () Bool)

(assert (=> (not b_lambda!3523) (not b!79025)))

(assert (=> b!79025 t!5160))

(declare-fun b_and!4845 () Bool)

(assert (= b_and!4841 (and (=> t!5160 result!2821) b_and!4845)))

(assert (=> b!79025 t!5162))

(declare-fun b_and!4847 () Bool)

(assert (= b_and!4843 (and (=> t!5162 result!2823) b_and!4847)))

(declare-fun m!79619 () Bool)

(assert (=> b!79032 m!79619))

(assert (=> b!79026 m!77965))

(assert (=> b!79026 m!77965))

(assert (=> b!79026 m!77975))

(assert (=> b!79023 m!77983))

(assert (=> b!79023 m!78737))

(assert (=> b!79023 m!77965))

(assert (=> b!79023 m!78737))

(assert (=> b!79023 m!77983))

(assert (=> b!79023 m!78739))

(assert (=> b!79023 m!77965))

(declare-fun m!79621 () Bool)

(assert (=> b!79023 m!79621))

(declare-fun m!79623 () Bool)

(assert (=> bm!7267 m!79623))

(declare-fun m!79625 () Bool)

(assert (=> d!18913 m!79625))

(assert (=> d!18913 m!77977))

(assert (=> b!79034 m!77965))

(assert (=> b!79034 m!77965))

(assert (=> b!79034 m!77975))

(assert (=> b!79025 m!77983))

(declare-fun m!79627 () Bool)

(assert (=> b!79025 m!79627))

(assert (=> b!79025 m!79627))

(declare-fun m!79629 () Bool)

(assert (=> b!79025 m!79629))

(assert (=> b!79025 m!78737))

(declare-fun m!79631 () Bool)

(assert (=> b!79025 m!79631))

(declare-fun m!79633 () Bool)

(assert (=> b!79025 m!79633))

(assert (=> b!79025 m!78737))

(assert (=> b!79025 m!77983))

(assert (=> b!79025 m!78739))

(assert (=> b!79025 m!77965))

(assert (=> b!79028 m!77965))

(assert (=> b!79028 m!77965))

(declare-fun m!79635 () Bool)

(assert (=> b!79028 m!79635))

(declare-fun m!79637 () Bool)

(assert (=> b!79033 m!79637))

(assert (=> b!79027 m!79623))

(assert (=> b!78515 d!18913))

(declare-fun d!18915 () Bool)

(assert (=> d!18915 (= (apply!79 (+!103 lt!36348 (tuple2!2177 lt!36357 (minValue!2169 newMap!16))) lt!36354) (apply!79 lt!36348 lt!36354))))

(declare-fun lt!36606 () Unit!2242)

(assert (=> d!18915 (= lt!36606 (choose!467 lt!36348 lt!36357 (minValue!2169 newMap!16) lt!36354))))

(declare-fun e!51627 () Bool)

(assert (=> d!18915 e!51627))

(declare-fun res!41327 () Bool)

(assert (=> d!18915 (=> (not res!41327) (not e!51627))))

(assert (=> d!18915 (= res!41327 (contains!739 lt!36348 lt!36354))))

(assert (=> d!18915 (= (addApplyDifferent!55 lt!36348 lt!36357 (minValue!2169 newMap!16) lt!36354) lt!36606)))

(declare-fun b!79035 () Bool)

(assert (=> b!79035 (= e!51627 (not (= lt!36354 lt!36357)))))

(assert (= (and d!18915 res!41327) b!79035))

(declare-fun m!79639 () Bool)

(assert (=> d!18915 m!79639))

(assert (=> d!18915 m!78701))

(assert (=> d!18915 m!78701))

(assert (=> d!18915 m!78703))

(declare-fun m!79641 () Bool)

(assert (=> d!18915 m!79641))

(assert (=> d!18915 m!78725))

(assert (=> b!78515 d!18915))

(declare-fun d!18917 () Bool)

(declare-fun e!51628 () Bool)

(assert (=> d!18917 e!51628))

(declare-fun res!41328 () Bool)

(assert (=> d!18917 (=> (not res!41328) (not e!51628))))

(declare-fun lt!36610 () ListLongMap!1433)

(assert (=> d!18917 (= res!41328 (contains!739 lt!36610 (_1!1099 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16)))))))

(declare-fun lt!36608 () List!1511)

(assert (=> d!18917 (= lt!36610 (ListLongMap!1434 lt!36608))))

(declare-fun lt!36607 () Unit!2242)

(declare-fun lt!36609 () Unit!2242)

(assert (=> d!18917 (= lt!36607 lt!36609)))

(assert (=> d!18917 (= (getValueByKey!135 lt!36608 (_1!1099 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18917 (= lt!36609 (lemmaContainsTupThenGetReturnValue!55 lt!36608 (_1!1099 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18917 (= lt!36608 (insertStrictlySorted!58 (toList!732 lt!36349) (_1!1099 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18917 (= (+!103 lt!36349 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16))) lt!36610)))

(declare-fun b!79036 () Bool)

(declare-fun res!41329 () Bool)

(assert (=> b!79036 (=> (not res!41329) (not e!51628))))

(assert (=> b!79036 (= res!41329 (= (getValueByKey!135 (toList!732 lt!36610) (_1!1099 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16))))))))

(declare-fun b!79037 () Bool)

(assert (=> b!79037 (= e!51628 (contains!740 (toList!732 lt!36610) (tuple2!2177 lt!36345 (zeroValue!2169 newMap!16))))))

(assert (= (and d!18917 res!41328) b!79036))

(assert (= (and b!79036 res!41329) b!79037))

(declare-fun m!79643 () Bool)

(assert (=> d!18917 m!79643))

(declare-fun m!79645 () Bool)

(assert (=> d!18917 m!79645))

(declare-fun m!79647 () Bool)

(assert (=> d!18917 m!79647))

(declare-fun m!79649 () Bool)

(assert (=> d!18917 m!79649))

(declare-fun m!79651 () Bool)

(assert (=> b!79036 m!79651))

(declare-fun m!79653 () Bool)

(assert (=> b!79037 m!79653))

(assert (=> b!78515 d!18917))

(declare-fun d!18919 () Bool)

(assert (=> d!18919 (= (apply!79 lt!36353 lt!36364) (get!1180 (getValueByKey!135 (toList!732 lt!36353) lt!36364)))))

(declare-fun bs!3343 () Bool)

(assert (= bs!3343 d!18919))

(declare-fun m!79655 () Bool)

(assert (=> bs!3343 m!79655))

(assert (=> bs!3343 m!79655))

(declare-fun m!79657 () Bool)

(assert (=> bs!3343 m!79657))

(assert (=> b!78515 d!18919))

(declare-fun d!18921 () Bool)

(assert (=> d!18921 (= (apply!79 (+!103 lt!36353 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16))) lt!36364) (apply!79 lt!36353 lt!36364))))

(declare-fun lt!36611 () Unit!2242)

(assert (=> d!18921 (= lt!36611 (choose!467 lt!36353 lt!36366 (zeroValue!2169 newMap!16) lt!36364))))

(declare-fun e!51629 () Bool)

(assert (=> d!18921 e!51629))

(declare-fun res!41330 () Bool)

(assert (=> d!18921 (=> (not res!41330) (not e!51629))))

(assert (=> d!18921 (= res!41330 (contains!739 lt!36353 lt!36364))))

(assert (=> d!18921 (= (addApplyDifferent!55 lt!36353 lt!36366 (zeroValue!2169 newMap!16) lt!36364) lt!36611)))

(declare-fun b!79038 () Bool)

(assert (=> b!79038 (= e!51629 (not (= lt!36364 lt!36366)))))

(assert (= (and d!18921 res!41330) b!79038))

(declare-fun m!79659 () Bool)

(assert (=> d!18921 m!79659))

(assert (=> d!18921 m!78717))

(assert (=> d!18921 m!78717))

(assert (=> d!18921 m!78719))

(declare-fun m!79661 () Bool)

(assert (=> d!18921 m!79661))

(assert (=> d!18921 m!78697))

(assert (=> b!78515 d!18921))

(declare-fun d!18923 () Bool)

(declare-fun e!51630 () Bool)

(assert (=> d!18923 e!51630))

(declare-fun res!41331 () Bool)

(assert (=> d!18923 (=> (not res!41331) (not e!51630))))

(declare-fun lt!36615 () ListLongMap!1433)

(assert (=> d!18923 (= res!41331 (contains!739 lt!36615 (_1!1099 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16)))))))

(declare-fun lt!36613 () List!1511)

(assert (=> d!18923 (= lt!36615 (ListLongMap!1434 lt!36613))))

(declare-fun lt!36612 () Unit!2242)

(declare-fun lt!36614 () Unit!2242)

(assert (=> d!18923 (= lt!36612 lt!36614)))

(assert (=> d!18923 (= (getValueByKey!135 lt!36613 (_1!1099 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18923 (= lt!36614 (lemmaContainsTupThenGetReturnValue!55 lt!36613 (_1!1099 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18923 (= lt!36613 (insertStrictlySorted!58 (toList!732 lt!36353) (_1!1099 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16)))))))

(assert (=> d!18923 (= (+!103 lt!36353 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16))) lt!36615)))

(declare-fun b!79039 () Bool)

(declare-fun res!41332 () Bool)

(assert (=> b!79039 (=> (not res!41332) (not e!51630))))

(assert (=> b!79039 (= res!41332 (= (getValueByKey!135 (toList!732 lt!36615) (_1!1099 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16))))))))

(declare-fun b!79040 () Bool)

(assert (=> b!79040 (= e!51630 (contains!740 (toList!732 lt!36615) (tuple2!2177 lt!36366 (zeroValue!2169 newMap!16))))))

(assert (= (and d!18923 res!41331) b!79039))

(assert (= (and b!79039 res!41332) b!79040))

(declare-fun m!79663 () Bool)

(assert (=> d!18923 m!79663))

(declare-fun m!79665 () Bool)

(assert (=> d!18923 m!79665))

(declare-fun m!79667 () Bool)

(assert (=> d!18923 m!79667))

(declare-fun m!79669 () Bool)

(assert (=> d!18923 m!79669))

(declare-fun m!79671 () Bool)

(assert (=> b!79039 m!79671))

(declare-fun m!79673 () Bool)

(assert (=> b!79040 m!79673))

(assert (=> b!78515 d!18923))

(declare-fun d!18925 () Bool)

(assert (=> d!18925 (= (apply!79 (+!103 lt!36360 (tuple2!2177 lt!36361 (minValue!2169 newMap!16))) lt!36363) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!36360 (tuple2!2177 lt!36361 (minValue!2169 newMap!16)))) lt!36363)))))

(declare-fun bs!3344 () Bool)

(assert (= bs!3344 d!18925))

(declare-fun m!79675 () Bool)

(assert (=> bs!3344 m!79675))

(assert (=> bs!3344 m!79675))

(declare-fun m!79677 () Bool)

(assert (=> bs!3344 m!79677))

(assert (=> b!78515 d!18925))

(declare-fun d!18927 () Bool)

(assert (=> d!18927 (= (apply!79 (+!103 lt!36360 (tuple2!2177 lt!36361 (minValue!2169 newMap!16))) lt!36363) (apply!79 lt!36360 lt!36363))))

(declare-fun lt!36616 () Unit!2242)

(assert (=> d!18927 (= lt!36616 (choose!467 lt!36360 lt!36361 (minValue!2169 newMap!16) lt!36363))))

(declare-fun e!51631 () Bool)

(assert (=> d!18927 e!51631))

(declare-fun res!41333 () Bool)

(assert (=> d!18927 (=> (not res!41333) (not e!51631))))

(assert (=> d!18927 (= res!41333 (contains!739 lt!36360 lt!36363))))

(assert (=> d!18927 (= (addApplyDifferent!55 lt!36360 lt!36361 (minValue!2169 newMap!16) lt!36363) lt!36616)))

(declare-fun b!79041 () Bool)

(assert (=> b!79041 (= e!51631 (not (= lt!36363 lt!36361)))))

(assert (= (and d!18927 res!41333) b!79041))

(declare-fun m!79679 () Bool)

(assert (=> d!18927 m!79679))

(assert (=> d!18927 m!78711))

(assert (=> d!18927 m!78711))

(assert (=> d!18927 m!78727))

(declare-fun m!79681 () Bool)

(assert (=> d!18927 m!79681))

(assert (=> d!18927 m!78699))

(assert (=> b!78515 d!18927))

(declare-fun d!18929 () Bool)

(declare-fun e!51632 () Bool)

(assert (=> d!18929 e!51632))

(declare-fun res!41334 () Bool)

(assert (=> d!18929 (=> (not res!41334) (not e!51632))))

(declare-fun lt!36620 () ListLongMap!1433)

(assert (=> d!18929 (= res!41334 (contains!739 lt!36620 (_1!1099 (tuple2!2177 lt!36361 (minValue!2169 newMap!16)))))))

(declare-fun lt!36618 () List!1511)

(assert (=> d!18929 (= lt!36620 (ListLongMap!1434 lt!36618))))

(declare-fun lt!36617 () Unit!2242)

(declare-fun lt!36619 () Unit!2242)

(assert (=> d!18929 (= lt!36617 lt!36619)))

(assert (=> d!18929 (= (getValueByKey!135 lt!36618 (_1!1099 (tuple2!2177 lt!36361 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36361 (minValue!2169 newMap!16)))))))

(assert (=> d!18929 (= lt!36619 (lemmaContainsTupThenGetReturnValue!55 lt!36618 (_1!1099 (tuple2!2177 lt!36361 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36361 (minValue!2169 newMap!16)))))))

(assert (=> d!18929 (= lt!36618 (insertStrictlySorted!58 (toList!732 lt!36360) (_1!1099 (tuple2!2177 lt!36361 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36361 (minValue!2169 newMap!16)))))))

(assert (=> d!18929 (= (+!103 lt!36360 (tuple2!2177 lt!36361 (minValue!2169 newMap!16))) lt!36620)))

(declare-fun b!79042 () Bool)

(declare-fun res!41335 () Bool)

(assert (=> b!79042 (=> (not res!41335) (not e!51632))))

(assert (=> b!79042 (= res!41335 (= (getValueByKey!135 (toList!732 lt!36620) (_1!1099 (tuple2!2177 lt!36361 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36361 (minValue!2169 newMap!16))))))))

(declare-fun b!79043 () Bool)

(assert (=> b!79043 (= e!51632 (contains!740 (toList!732 lt!36620) (tuple2!2177 lt!36361 (minValue!2169 newMap!16))))))

(assert (= (and d!18929 res!41334) b!79042))

(assert (= (and b!79042 res!41335) b!79043))

(declare-fun m!79683 () Bool)

(assert (=> d!18929 m!79683))

(declare-fun m!79685 () Bool)

(assert (=> d!18929 m!79685))

(declare-fun m!79687 () Bool)

(assert (=> d!18929 m!79687))

(declare-fun m!79689 () Bool)

(assert (=> d!18929 m!79689))

(declare-fun m!79691 () Bool)

(assert (=> b!79042 m!79691))

(declare-fun m!79693 () Bool)

(assert (=> b!79043 m!79693))

(assert (=> b!78515 d!18929))

(declare-fun d!18931 () Bool)

(assert (=> d!18931 (= (apply!79 lt!36360 lt!36363) (get!1180 (getValueByKey!135 (toList!732 lt!36360) lt!36363)))))

(declare-fun bs!3345 () Bool)

(assert (= bs!3345 d!18931))

(declare-fun m!79695 () Bool)

(assert (=> bs!3345 m!79695))

(assert (=> bs!3345 m!79695))

(declare-fun m!79697 () Bool)

(assert (=> bs!3345 m!79697))

(assert (=> b!78515 d!18931))

(declare-fun b!79044 () Bool)

(declare-fun e!51634 () List!1511)

(declare-fun call!7271 () List!1511)

(assert (=> b!79044 (= e!51634 call!7271)))

(declare-fun b!79045 () Bool)

(declare-fun res!41337 () Bool)

(declare-fun e!51636 () Bool)

(assert (=> b!79045 (=> (not res!41337) (not e!51636))))

(declare-fun lt!36621 () List!1511)

(assert (=> b!79045 (= res!41337 (containsKey!139 lt!36621 (_1!1099 lt!35660)))))

(declare-fun bm!7268 () Bool)

(declare-fun e!51637 () List!1511)

(declare-fun call!7272 () List!1511)

(declare-fun c!12205 () Bool)

(assert (=> bm!7268 (= call!7272 ($colon$colon!68 e!51637 (ite c!12205 (h!2095 (t!5148 (toList!732 lt!35657))) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660)))))))

(declare-fun c!12206 () Bool)

(assert (=> bm!7268 (= c!12206 c!12205)))

(declare-fun b!79046 () Bool)

(declare-fun c!12204 () Bool)

(declare-fun c!12207 () Bool)

(assert (=> b!79046 (= e!51637 (ite c!12204 (t!5148 (t!5148 (toList!732 lt!35657))) (ite c!12207 (Cons!1507 (h!2095 (t!5148 (toList!732 lt!35657))) (t!5148 (t!5148 (toList!732 lt!35657)))) Nil!1508)))))

(declare-fun d!18933 () Bool)

(assert (=> d!18933 e!51636))

(declare-fun res!41336 () Bool)

(assert (=> d!18933 (=> (not res!41336) (not e!51636))))

(assert (=> d!18933 (= res!41336 (isStrictlySorted!290 lt!36621))))

(declare-fun e!51633 () List!1511)

(assert (=> d!18933 (= lt!36621 e!51633)))

(assert (=> d!18933 (= c!12205 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35657))) (bvslt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35657)))) (_1!1099 lt!35660))))))

(assert (=> d!18933 (isStrictlySorted!290 (t!5148 (toList!732 lt!35657)))))

(assert (=> d!18933 (= (insertStrictlySorted!58 (t!5148 (toList!732 lt!35657)) (_1!1099 lt!35660) (_2!1099 lt!35660)) lt!36621)))

(declare-fun bm!7269 () Bool)

(declare-fun call!7273 () List!1511)

(assert (=> bm!7269 (= call!7273 call!7271)))

(declare-fun b!79047 () Bool)

(assert (=> b!79047 (= c!12207 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35657))) (bvsgt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35657)))) (_1!1099 lt!35660))))))

(declare-fun e!51635 () List!1511)

(assert (=> b!79047 (= e!51634 e!51635)))

(declare-fun b!79048 () Bool)

(assert (=> b!79048 (= e!51635 call!7273)))

(declare-fun b!79049 () Bool)

(assert (=> b!79049 (= e!51633 e!51634)))

(assert (=> b!79049 (= c!12204 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35657))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35657)))) (_1!1099 lt!35660))))))

(declare-fun b!79050 () Bool)

(assert (=> b!79050 (= e!51635 call!7273)))

(declare-fun bm!7270 () Bool)

(assert (=> bm!7270 (= call!7271 call!7272)))

(declare-fun b!79051 () Bool)

(assert (=> b!79051 (= e!51637 (insertStrictlySorted!58 (t!5148 (t!5148 (toList!732 lt!35657))) (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(declare-fun b!79052 () Bool)

(assert (=> b!79052 (= e!51633 call!7272)))

(declare-fun b!79053 () Bool)

(assert (=> b!79053 (= e!51636 (contains!740 lt!36621 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!18933 c!12205) b!79052))

(assert (= (and d!18933 (not c!12205)) b!79049))

(assert (= (and b!79049 c!12204) b!79044))

(assert (= (and b!79049 (not c!12204)) b!79047))

(assert (= (and b!79047 c!12207) b!79050))

(assert (= (and b!79047 (not c!12207)) b!79048))

(assert (= (or b!79050 b!79048) bm!7269))

(assert (= (or b!79044 bm!7269) bm!7270))

(assert (= (or b!79052 bm!7270) bm!7268))

(assert (= (and bm!7268 c!12206) b!79051))

(assert (= (and bm!7268 (not c!12206)) b!79046))

(assert (= (and d!18933 res!41336) b!79045))

(assert (= (and b!79045 res!41337) b!79053))

(declare-fun m!79699 () Bool)

(assert (=> b!79051 m!79699))

(declare-fun m!79701 () Bool)

(assert (=> bm!7268 m!79701))

(declare-fun m!79703 () Bool)

(assert (=> b!79045 m!79703))

(declare-fun m!79705 () Bool)

(assert (=> b!79053 m!79705))

(declare-fun m!79707 () Bool)

(assert (=> d!18933 m!79707))

(assert (=> d!18933 m!78923))

(assert (=> b!78438 d!18933))

(assert (=> d!18455 d!18403))

(assert (=> d!18455 d!18405))

(declare-fun d!18935 () Bool)

(assert (=> d!18935 (isDefined!89 (getValueByKey!135 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!18935 true))

(declare-fun _$12!326 () Unit!2242)

(assert (=> d!18935 (= (choose!463 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) _$12!326)))

(declare-fun bs!3346 () Bool)

(assert (= bs!3346 d!18935))

(assert (=> bs!3346 m!77463))

(assert (=> bs!3346 m!77853))

(assert (=> bs!3346 m!77853))

(assert (=> bs!3346 m!77855))

(assert (=> d!18455 d!18935))

(declare-fun d!18937 () Bool)

(declare-fun res!41338 () Bool)

(declare-fun e!51638 () Bool)

(assert (=> d!18937 (=> res!41338 e!51638)))

(assert (=> d!18937 (= res!41338 (or ((_ is Nil!1508) (toList!732 lt!35664)) ((_ is Nil!1508) (t!5148 (toList!732 lt!35664)))))))

(assert (=> d!18937 (= (isStrictlySorted!290 (toList!732 lt!35664)) e!51638)))

(declare-fun b!79054 () Bool)

(declare-fun e!51639 () Bool)

(assert (=> b!79054 (= e!51638 e!51639)))

(declare-fun res!41339 () Bool)

(assert (=> b!79054 (=> (not res!41339) (not e!51639))))

(assert (=> b!79054 (= res!41339 (bvslt (_1!1099 (h!2095 (toList!732 lt!35664))) (_1!1099 (h!2095 (t!5148 (toList!732 lt!35664))))))))

(declare-fun b!79055 () Bool)

(assert (=> b!79055 (= e!51639 (isStrictlySorted!290 (t!5148 (toList!732 lt!35664))))))

(assert (= (and d!18937 (not res!41338)) b!79054))

(assert (= (and b!79054 res!41339) b!79055))

(declare-fun m!79709 () Bool)

(assert (=> b!79055 m!79709))

(assert (=> d!18455 d!18937))

(assert (=> bm!7190 d!18497))

(assert (=> d!18437 d!18435))

(declare-fun d!18939 () Bool)

(assert (=> d!18939 (= (getValueByKey!135 lt!35791 (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660)))))

(assert (=> d!18939 true))

(declare-fun _$22!394 () Unit!2242)

(assert (=> d!18939 (= (choose!462 lt!35791 (_1!1099 lt!35660) (_2!1099 lt!35660)) _$22!394)))

(declare-fun bs!3347 () Bool)

(assert (= bs!3347 d!18939))

(assert (=> bs!3347 m!77655))

(assert (=> d!18437 d!18939))

(declare-fun d!18941 () Bool)

(declare-fun res!41340 () Bool)

(declare-fun e!51640 () Bool)

(assert (=> d!18941 (=> res!41340 e!51640)))

(assert (=> d!18941 (= res!41340 (or ((_ is Nil!1508) lt!35791) ((_ is Nil!1508) (t!5148 lt!35791))))))

(assert (=> d!18941 (= (isStrictlySorted!290 lt!35791) e!51640)))

(declare-fun b!79056 () Bool)

(declare-fun e!51641 () Bool)

(assert (=> b!79056 (= e!51640 e!51641)))

(declare-fun res!41341 () Bool)

(assert (=> b!79056 (=> (not res!41341) (not e!51641))))

(assert (=> b!79056 (= res!41341 (bvslt (_1!1099 (h!2095 lt!35791)) (_1!1099 (h!2095 (t!5148 lt!35791)))))))

(declare-fun b!79057 () Bool)

(assert (=> b!79057 (= e!51641 (isStrictlySorted!290 (t!5148 lt!35791)))))

(assert (= (and d!18941 (not res!41340)) b!79056))

(assert (= (and b!79056 res!41341) b!79057))

(declare-fun m!79711 () Bool)

(assert (=> b!79057 m!79711))

(assert (=> d!18437 d!18941))

(declare-fun d!18943 () Bool)

(declare-fun res!41342 () Bool)

(declare-fun e!51642 () Bool)

(assert (=> d!18943 (=> res!41342 e!51642)))

(assert (=> d!18943 (= res!41342 (and ((_ is Cons!1507) (toList!732 lt!35901)) (= (_1!1099 (h!2095 (toList!732 lt!35901))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18943 (= (containsKey!139 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000) e!51642)))

(declare-fun b!79058 () Bool)

(declare-fun e!51643 () Bool)

(assert (=> b!79058 (= e!51642 e!51643)))

(declare-fun res!41343 () Bool)

(assert (=> b!79058 (=> (not res!41343) (not e!51643))))

(assert (=> b!79058 (= res!41343 (and (or (not ((_ is Cons!1507) (toList!732 lt!35901))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35901))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1507) (toList!732 lt!35901)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35901))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79059 () Bool)

(assert (=> b!79059 (= e!51643 (containsKey!139 (t!5148 (toList!732 lt!35901)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!18943 (not res!41342)) b!79058))

(assert (= (and b!79058 res!41343) b!79059))

(declare-fun m!79713 () Bool)

(assert (=> b!79059 m!79713))

(assert (=> d!18643 d!18943))

(declare-fun d!18945 () Bool)

(declare-fun c!12208 () Bool)

(assert (=> d!18945 (= c!12208 ((_ is Nil!1508) (toList!732 lt!35805)))))

(declare-fun e!51644 () (InoxSet tuple2!2176))

(assert (=> d!18945 (= (content!83 (toList!732 lt!35805)) e!51644)))

(declare-fun b!79060 () Bool)

(assert (=> b!79060 (= e!51644 ((as const (Array tuple2!2176 Bool)) false))))

(declare-fun b!79061 () Bool)

(assert (=> b!79061 (= e!51644 ((_ map or) (store ((as const (Array tuple2!2176 Bool)) false) (h!2095 (toList!732 lt!35805)) true) (content!83 (t!5148 (toList!732 lt!35805)))))))

(assert (= (and d!18945 c!12208) b!79060))

(assert (= (and d!18945 (not c!12208)) b!79061))

(declare-fun m!79715 () Bool)

(assert (=> b!79061 m!79715))

(declare-fun m!79717 () Bool)

(assert (=> b!79061 m!79717))

(assert (=> d!18473 d!18945))

(declare-fun d!18947 () Bool)

(assert (=> d!18947 (isDefined!89 (getValueByKey!135 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun lt!36622 () Unit!2242)

(assert (=> d!18947 (= lt!36622 (choose!463 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun e!51645 () Bool)

(assert (=> d!18947 e!51645))

(declare-fun res!41344 () Bool)

(assert (=> d!18947 (=> (not res!41344) (not e!51645))))

(assert (=> d!18947 (= res!41344 (isStrictlySorted!290 (toList!732 call!7153)))))

(assert (=> d!18947 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) lt!36622)))

(declare-fun b!79062 () Bool)

(assert (=> b!79062 (= e!51645 (containsKey!139 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!18947 res!41344) b!79062))

(assert (=> d!18947 m!77463))

(assert (=> d!18947 m!78217))

(assert (=> d!18947 m!78217))

(assert (=> d!18947 m!78219))

(assert (=> d!18947 m!77463))

(declare-fun m!79719 () Bool)

(assert (=> d!18947 m!79719))

(declare-fun m!79721 () Bool)

(assert (=> d!18947 m!79721))

(assert (=> b!79062 m!77463))

(assert (=> b!79062 m!78213))

(assert (=> b!78238 d!18947))

(declare-fun d!18949 () Bool)

(assert (=> d!18949 (= (isDefined!89 (getValueByKey!135 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))) (not (isEmpty!331 (getValueByKey!135 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))))

(declare-fun bs!3348 () Bool)

(assert (= bs!3348 d!18949))

(assert (=> bs!3348 m!78217))

(declare-fun m!79723 () Bool)

(assert (=> bs!3348 m!79723))

(assert (=> b!78238 d!18949))

(declare-fun b!79063 () Bool)

(declare-fun e!51646 () Option!141)

(assert (=> b!79063 (= e!51646 (Some!140 (_2!1099 (h!2095 (toList!732 call!7153)))))))

(declare-fun e!51647 () Option!141)

(declare-fun b!79065 () Bool)

(assert (=> b!79065 (= e!51647 (getValueByKey!135 (t!5148 (toList!732 call!7153)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun c!12209 () Bool)

(declare-fun d!18951 () Bool)

(assert (=> d!18951 (= c!12209 (and ((_ is Cons!1507) (toList!732 call!7153)) (= (_1!1099 (h!2095 (toList!732 call!7153))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (=> d!18951 (= (getValueByKey!135 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) e!51646)))

(declare-fun b!79066 () Bool)

(assert (=> b!79066 (= e!51647 None!139)))

(declare-fun b!79064 () Bool)

(assert (=> b!79064 (= e!51646 e!51647)))

(declare-fun c!12210 () Bool)

(assert (=> b!79064 (= c!12210 (and ((_ is Cons!1507) (toList!732 call!7153)) (not (= (_1!1099 (h!2095 (toList!732 call!7153))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))))

(assert (= (and d!18951 c!12209) b!79063))

(assert (= (and d!18951 (not c!12209)) b!79064))

(assert (= (and b!79064 c!12210) b!79065))

(assert (= (and b!79064 (not c!12210)) b!79066))

(assert (=> b!79065 m!77463))

(declare-fun m!79725 () Bool)

(assert (=> b!79065 m!79725))

(assert (=> b!78238 d!18951))

(assert (=> b!78195 d!18741))

(assert (=> d!18409 d!18739))

(declare-fun d!18953 () Bool)

(declare-fun res!41345 () Bool)

(declare-fun e!51648 () Bool)

(assert (=> d!18953 (=> res!41345 e!51648)))

(assert (=> d!18953 (= res!41345 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35664))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35664)))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (=> d!18953 (= (containsKey!139 (t!5148 (toList!732 lt!35664)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) e!51648)))

(declare-fun b!79067 () Bool)

(declare-fun e!51649 () Bool)

(assert (=> b!79067 (= e!51648 e!51649)))

(declare-fun res!41346 () Bool)

(assert (=> b!79067 (=> (not res!41346) (not e!51649))))

(assert (=> b!79067 (= res!41346 (and (or (not ((_ is Cons!1507) (t!5148 (toList!732 lt!35664)))) (bvsle (_1!1099 (h!2095 (t!5148 (toList!732 lt!35664)))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))) ((_ is Cons!1507) (t!5148 (toList!732 lt!35664))) (bvslt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35664)))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(declare-fun b!79068 () Bool)

(assert (=> b!79068 (= e!51649 (containsKey!139 (t!5148 (t!5148 (toList!732 lt!35664))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!18953 (not res!41345)) b!79067))

(assert (= (and b!79067 res!41346) b!79068))

(assert (=> b!79068 m!77463))

(declare-fun m!79727 () Bool)

(assert (=> b!79068 m!79727))

(assert (=> b!78599 d!18953))

(declare-fun d!18955 () Bool)

(declare-fun res!41347 () Bool)

(declare-fun e!51650 () Bool)

(assert (=> d!18955 (=> res!41347 e!51650)))

(assert (=> d!18955 (= res!41347 (and ((_ is Cons!1507) lt!36338) (= (_1!1099 (h!2095 lt!36338)) (_1!1099 lt!35660))))))

(assert (=> d!18955 (= (containsKey!139 lt!36338 (_1!1099 lt!35660)) e!51650)))

(declare-fun b!79069 () Bool)

(declare-fun e!51651 () Bool)

(assert (=> b!79069 (= e!51650 e!51651)))

(declare-fun res!41348 () Bool)

(assert (=> b!79069 (=> (not res!41348) (not e!51651))))

(assert (=> b!79069 (= res!41348 (and (or (not ((_ is Cons!1507) lt!36338)) (bvsle (_1!1099 (h!2095 lt!36338)) (_1!1099 lt!35660))) ((_ is Cons!1507) lt!36338) (bvslt (_1!1099 (h!2095 lt!36338)) (_1!1099 lt!35660))))))

(declare-fun b!79070 () Bool)

(assert (=> b!79070 (= e!51651 (containsKey!139 (t!5148 lt!36338) (_1!1099 lt!35660)))))

(assert (= (and d!18955 (not res!41347)) b!79069))

(assert (= (and b!79069 res!41348) b!79070))

(declare-fun m!79729 () Bool)

(assert (=> b!79070 m!79729))

(assert (=> b!78488 d!18955))

(assert (=> b!78115 d!18829))

(declare-fun d!18957 () Bool)

(declare-fun res!41349 () Bool)

(declare-fun e!51652 () Bool)

(assert (=> d!18957 (=> res!41349 e!51652)))

(assert (=> d!18957 (= res!41349 (and ((_ is Cons!1507) (toList!732 lt!35842)) (= (_1!1099 (h!2095 (toList!732 lt!35842))) (_1!1099 lt!35659))))))

(assert (=> d!18957 (= (containsKey!139 (toList!732 lt!35842) (_1!1099 lt!35659)) e!51652)))

(declare-fun b!79071 () Bool)

(declare-fun e!51653 () Bool)

(assert (=> b!79071 (= e!51652 e!51653)))

(declare-fun res!41350 () Bool)

(assert (=> b!79071 (=> (not res!41350) (not e!51653))))

(assert (=> b!79071 (= res!41350 (and (or (not ((_ is Cons!1507) (toList!732 lt!35842))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35842))) (_1!1099 lt!35659))) ((_ is Cons!1507) (toList!732 lt!35842)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35842))) (_1!1099 lt!35659))))))

(declare-fun b!79072 () Bool)

(assert (=> b!79072 (= e!51653 (containsKey!139 (t!5148 (toList!732 lt!35842)) (_1!1099 lt!35659)))))

(assert (= (and d!18957 (not res!41349)) b!79071))

(assert (= (and b!79071 res!41350) b!79072))

(declare-fun m!79731 () Bool)

(assert (=> b!79072 m!79731))

(assert (=> d!18441 d!18957))

(declare-fun d!18959 () Bool)

(declare-fun e!51655 () Bool)

(assert (=> d!18959 e!51655))

(declare-fun res!41351 () Bool)

(assert (=> d!18959 (=> res!41351 e!51655)))

(declare-fun lt!36625 () Bool)

(assert (=> d!18959 (= res!41351 (not lt!36625))))

(declare-fun lt!36626 () Bool)

(assert (=> d!18959 (= lt!36625 lt!36626)))

(declare-fun lt!36623 () Unit!2242)

(declare-fun e!51654 () Unit!2242)

(assert (=> d!18959 (= lt!36623 e!51654)))

(declare-fun c!12211 () Bool)

(assert (=> d!18959 (= c!12211 lt!36626)))

(assert (=> d!18959 (= lt!36626 (containsKey!139 (toList!732 lt!36082) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!18959 (= (contains!739 lt!36082 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!36625)))

(declare-fun b!79073 () Bool)

(declare-fun lt!36624 () Unit!2242)

(assert (=> b!79073 (= e!51654 lt!36624)))

(assert (=> b!79073 (= lt!36624 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36082) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!79073 (isDefined!89 (getValueByKey!135 (toList!732 lt!36082) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!79074 () Bool)

(declare-fun Unit!2292 () Unit!2242)

(assert (=> b!79074 (= e!51654 Unit!2292)))

(declare-fun b!79075 () Bool)

(assert (=> b!79075 (= e!51655 (isDefined!89 (getValueByKey!135 (toList!732 lt!36082) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!18959 c!12211) b!79073))

(assert (= (and d!18959 (not c!12211)) b!79074))

(assert (= (and d!18959 (not res!41351)) b!79075))

(assert (=> d!18959 m!78113))

(declare-fun m!79733 () Bool)

(assert (=> d!18959 m!79733))

(assert (=> b!79073 m!78113))

(declare-fun m!79735 () Bool)

(assert (=> b!79073 m!79735))

(assert (=> b!79073 m!78113))

(declare-fun m!79737 () Bool)

(assert (=> b!79073 m!79737))

(assert (=> b!79073 m!79737))

(declare-fun m!79739 () Bool)

(assert (=> b!79073 m!79739))

(assert (=> b!79075 m!78113))

(assert (=> b!79075 m!79737))

(assert (=> b!79075 m!79737))

(assert (=> b!79075 m!79739))

(assert (=> b!78212 d!18959))

(declare-fun d!18961 () Bool)

(declare-fun lt!36627 () Bool)

(assert (=> d!18961 (= lt!36627 (select (content!83 (t!5148 (toList!732 lt!35805))) lt!35660))))

(declare-fun e!51656 () Bool)

(assert (=> d!18961 (= lt!36627 e!51656)))

(declare-fun res!41352 () Bool)

(assert (=> d!18961 (=> (not res!41352) (not e!51656))))

(assert (=> d!18961 (= res!41352 ((_ is Cons!1507) (t!5148 (toList!732 lt!35805))))))

(assert (=> d!18961 (= (contains!740 (t!5148 (toList!732 lt!35805)) lt!35660) lt!36627)))

(declare-fun b!79076 () Bool)

(declare-fun e!51657 () Bool)

(assert (=> b!79076 (= e!51656 e!51657)))

(declare-fun res!41353 () Bool)

(assert (=> b!79076 (=> res!41353 e!51657)))

(assert (=> b!79076 (= res!41353 (= (h!2095 (t!5148 (toList!732 lt!35805))) lt!35660))))

(declare-fun b!79077 () Bool)

(assert (=> b!79077 (= e!51657 (contains!740 (t!5148 (t!5148 (toList!732 lt!35805))) lt!35660))))

(assert (= (and d!18961 res!41352) b!79076))

(assert (= (and b!79076 (not res!41353)) b!79077))

(assert (=> d!18961 m!79717))

(declare-fun m!79741 () Bool)

(assert (=> d!18961 m!79741))

(declare-fun m!79743 () Bool)

(assert (=> b!79077 m!79743))

(assert (=> b!78237 d!18961))

(declare-fun d!18963 () Bool)

(declare-fun e!51659 () Bool)

(assert (=> d!18963 e!51659))

(declare-fun res!41354 () Bool)

(assert (=> d!18963 (=> res!41354 e!51659)))

(declare-fun lt!36630 () Bool)

(assert (=> d!18963 (= res!41354 (not lt!36630))))

(declare-fun lt!36631 () Bool)

(assert (=> d!18963 (= lt!36630 lt!36631)))

(declare-fun lt!36628 () Unit!2242)

(declare-fun e!51658 () Unit!2242)

(assert (=> d!18963 (= lt!36628 e!51658)))

(declare-fun c!12212 () Bool)

(assert (=> d!18963 (= c!12212 lt!36631)))

(assert (=> d!18963 (= lt!36631 (containsKey!139 (toList!732 lt!36359) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18963 (= (contains!739 lt!36359 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36630)))

(declare-fun b!79078 () Bool)

(declare-fun lt!36629 () Unit!2242)

(assert (=> b!79078 (= e!51658 lt!36629)))

(assert (=> b!79078 (= lt!36629 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36359) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79078 (isDefined!89 (getValueByKey!135 (toList!732 lt!36359) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79079 () Bool)

(declare-fun Unit!2293 () Unit!2242)

(assert (=> b!79079 (= e!51658 Unit!2293)))

(declare-fun b!79080 () Bool)

(assert (=> b!79080 (= e!51659 (isDefined!89 (getValueByKey!135 (toList!732 lt!36359) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18963 c!12212) b!79078))

(assert (= (and d!18963 (not c!12212)) b!79079))

(assert (= (and d!18963 (not res!41354)) b!79080))

(declare-fun m!79745 () Bool)

(assert (=> d!18963 m!79745))

(declare-fun m!79747 () Bool)

(assert (=> b!79078 m!79747))

(declare-fun m!79749 () Bool)

(assert (=> b!79078 m!79749))

(assert (=> b!79078 m!79749))

(declare-fun m!79751 () Bool)

(assert (=> b!79078 m!79751))

(assert (=> b!79080 m!79749))

(assert (=> b!79080 m!79749))

(assert (=> b!79080 m!79751))

(assert (=> bm!7215 d!18963))

(declare-fun d!18965 () Bool)

(assert (=> d!18965 (= ($colon$colon!68 e!51349 (ite c!12079 (h!2095 (toList!732 lt!35668)) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670)))) (Cons!1507 (ite c!12079 (h!2095 (toList!732 lt!35668)) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))) e!51349))))

(assert (=> bm!7224 d!18965))

(declare-fun d!18967 () Bool)

(declare-fun lt!36632 () Bool)

(assert (=> d!18967 (= lt!36632 (select (content!83 (toList!732 lt!36307)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun e!51660 () Bool)

(assert (=> d!18967 (= lt!36632 e!51660)))

(declare-fun res!41355 () Bool)

(assert (=> d!18967 (=> (not res!41355) (not e!51660))))

(assert (=> d!18967 (= res!41355 ((_ is Cons!1507) (toList!732 lt!36307)))))

(assert (=> d!18967 (= (contains!740 (toList!732 lt!36307) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36632)))

(declare-fun b!79081 () Bool)

(declare-fun e!51661 () Bool)

(assert (=> b!79081 (= e!51660 e!51661)))

(declare-fun res!41356 () Bool)

(assert (=> b!79081 (=> res!41356 e!51661)))

(assert (=> b!79081 (= res!41356 (= (h!2095 (toList!732 lt!36307)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun b!79082 () Bool)

(assert (=> b!79082 (= e!51661 (contains!740 (t!5148 (toList!732 lt!36307)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!18967 res!41355) b!79081))

(assert (= (and b!79081 (not res!41356)) b!79082))

(declare-fun m!79753 () Bool)

(assert (=> d!18967 m!79753))

(declare-fun m!79755 () Bool)

(assert (=> d!18967 m!79755))

(declare-fun m!79757 () Bool)

(assert (=> b!79082 m!79757))

(assert (=> b!78444 d!18967))

(declare-fun d!18969 () Bool)

(declare-fun e!51663 () Bool)

(assert (=> d!18969 e!51663))

(declare-fun res!41357 () Bool)

(assert (=> d!18969 (=> res!41357 e!51663)))

(declare-fun lt!36635 () Bool)

(assert (=> d!18969 (= res!41357 (not lt!36635))))

(declare-fun lt!36636 () Bool)

(assert (=> d!18969 (= lt!36635 lt!36636)))

(declare-fun lt!36633 () Unit!2242)

(declare-fun e!51662 () Unit!2242)

(assert (=> d!18969 (= lt!36633 e!51662)))

(declare-fun c!12213 () Bool)

(assert (=> d!18969 (= c!12213 lt!36636)))

(assert (=> d!18969 (= lt!36636 (containsKey!139 (toList!732 lt!36263) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!18969 (= (contains!739 lt!36263 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36635)))

(declare-fun b!79083 () Bool)

(declare-fun lt!36634 () Unit!2242)

(assert (=> b!79083 (= e!51662 lt!36634)))

(assert (=> b!79083 (= lt!36634 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36263) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> b!79083 (isDefined!89 (getValueByKey!135 (toList!732 lt!36263) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79084 () Bool)

(declare-fun Unit!2294 () Unit!2242)

(assert (=> b!79084 (= e!51662 Unit!2294)))

(declare-fun b!79085 () Bool)

(assert (=> b!79085 (= e!51663 (isDefined!89 (getValueByKey!135 (toList!732 lt!36263) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18969 c!12213) b!79083))

(assert (= (and d!18969 (not c!12213)) b!79084))

(assert (= (and d!18969 (not res!41357)) b!79085))

(declare-fun m!79759 () Bool)

(assert (=> d!18969 m!79759))

(declare-fun m!79761 () Bool)

(assert (=> b!79083 m!79761))

(assert (=> b!79083 m!78437))

(assert (=> b!79083 m!78437))

(declare-fun m!79763 () Bool)

(assert (=> b!79083 m!79763))

(assert (=> b!79085 m!78437))

(assert (=> b!79085 m!78437))

(assert (=> b!79085 m!79763))

(assert (=> d!18519 d!18969))

(declare-fun b!79086 () Bool)

(declare-fun e!51664 () Option!141)

(assert (=> b!79086 (= e!51664 (Some!140 (_2!1099 (h!2095 lt!36261))))))

(declare-fun e!51665 () Option!141)

(declare-fun b!79088 () Bool)

(assert (=> b!79088 (= e!51665 (getValueByKey!135 (t!5148 lt!36261) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun c!12214 () Bool)

(declare-fun d!18971 () Bool)

(assert (=> d!18971 (= c!12214 (and ((_ is Cons!1507) lt!36261) (= (_1!1099 (h!2095 lt!36261)) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18971 (= (getValueByKey!135 lt!36261 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!51664)))

(declare-fun b!79089 () Bool)

(assert (=> b!79089 (= e!51665 None!139)))

(declare-fun b!79087 () Bool)

(assert (=> b!79087 (= e!51664 e!51665)))

(declare-fun c!12215 () Bool)

(assert (=> b!79087 (= c!12215 (and ((_ is Cons!1507) lt!36261) (not (= (_1!1099 (h!2095 lt!36261)) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!18971 c!12214) b!79086))

(assert (= (and d!18971 (not c!12214)) b!79087))

(assert (= (and b!79087 c!12215) b!79088))

(assert (= (and b!79087 (not c!12215)) b!79089))

(declare-fun m!79765 () Bool)

(assert (=> b!79088 m!79765))

(assert (=> d!18519 d!18971))

(declare-fun d!18973 () Bool)

(assert (=> d!18973 (= (getValueByKey!135 lt!36261 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36637 () Unit!2242)

(assert (=> d!18973 (= lt!36637 (choose!462 lt!36261 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!51666 () Bool)

(assert (=> d!18973 e!51666))

(declare-fun res!41358 () Bool)

(assert (=> d!18973 (=> (not res!41358) (not e!51666))))

(assert (=> d!18973 (= res!41358 (isStrictlySorted!290 lt!36261))))

(assert (=> d!18973 (= (lemmaContainsTupThenGetReturnValue!55 lt!36261 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36637)))

(declare-fun b!79090 () Bool)

(declare-fun res!41359 () Bool)

(assert (=> b!79090 (=> (not res!41359) (not e!51666))))

(assert (=> b!79090 (= res!41359 (containsKey!139 lt!36261 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79091 () Bool)

(assert (=> b!79091 (= e!51666 (contains!740 lt!36261 (tuple2!2177 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18973 res!41358) b!79090))

(assert (= (and b!79090 res!41359) b!79091))

(assert (=> d!18973 m!78431))

(declare-fun m!79767 () Bool)

(assert (=> d!18973 m!79767))

(declare-fun m!79769 () Bool)

(assert (=> d!18973 m!79769))

(declare-fun m!79771 () Bool)

(assert (=> b!79090 m!79771))

(declare-fun m!79773 () Bool)

(assert (=> b!79091 m!79773))

(assert (=> d!18519 d!18973))

(declare-fun b!79092 () Bool)

(declare-fun e!51668 () List!1511)

(declare-fun call!7274 () List!1511)

(assert (=> b!79092 (= e!51668 call!7274)))

(declare-fun b!79093 () Bool)

(declare-fun res!41361 () Bool)

(declare-fun e!51670 () Bool)

(assert (=> b!79093 (=> (not res!41361) (not e!51670))))

(declare-fun lt!36638 () List!1511)

(assert (=> b!79093 (= res!41361 (containsKey!139 lt!36638 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun bm!7271 () Bool)

(declare-fun c!12217 () Bool)

(declare-fun call!7275 () List!1511)

(declare-fun e!51671 () List!1511)

(assert (=> bm!7271 (= call!7275 ($colon$colon!68 e!51671 (ite c!12217 (h!2095 (toList!732 lt!35902)) (tuple2!2177 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun c!12218 () Bool)

(assert (=> bm!7271 (= c!12218 c!12217)))

(declare-fun c!12219 () Bool)

(declare-fun b!79094 () Bool)

(declare-fun c!12216 () Bool)

(assert (=> b!79094 (= e!51671 (ite c!12216 (t!5148 (toList!732 lt!35902)) (ite c!12219 (Cons!1507 (h!2095 (toList!732 lt!35902)) (t!5148 (toList!732 lt!35902))) Nil!1508)))))

(declare-fun d!18975 () Bool)

(assert (=> d!18975 e!51670))

(declare-fun res!41360 () Bool)

(assert (=> d!18975 (=> (not res!41360) (not e!51670))))

(assert (=> d!18975 (= res!41360 (isStrictlySorted!290 lt!36638))))

(declare-fun e!51667 () List!1511)

(assert (=> d!18975 (= lt!36638 e!51667)))

(assert (=> d!18975 (= c!12217 (and ((_ is Cons!1507) (toList!732 lt!35902)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35902))) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!18975 (isStrictlySorted!290 (toList!732 lt!35902))))

(assert (=> d!18975 (= (insertStrictlySorted!58 (toList!732 lt!35902) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36638)))

(declare-fun bm!7272 () Bool)

(declare-fun call!7276 () List!1511)

(assert (=> bm!7272 (= call!7276 call!7274)))

(declare-fun b!79095 () Bool)

(assert (=> b!79095 (= c!12219 (and ((_ is Cons!1507) (toList!732 lt!35902)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35902))) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun e!51669 () List!1511)

(assert (=> b!79095 (= e!51668 e!51669)))

(declare-fun b!79096 () Bool)

(assert (=> b!79096 (= e!51669 call!7276)))

(declare-fun b!79097 () Bool)

(assert (=> b!79097 (= e!51667 e!51668)))

(assert (=> b!79097 (= c!12216 (and ((_ is Cons!1507) (toList!732 lt!35902)) (= (_1!1099 (h!2095 (toList!732 lt!35902))) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!79098 () Bool)

(assert (=> b!79098 (= e!51669 call!7276)))

(declare-fun bm!7273 () Bool)

(assert (=> bm!7273 (= call!7274 call!7275)))

(declare-fun b!79099 () Bool)

(assert (=> b!79099 (= e!51671 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35902)) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79100 () Bool)

(assert (=> b!79100 (= e!51667 call!7275)))

(declare-fun b!79101 () Bool)

(assert (=> b!79101 (= e!51670 (contains!740 lt!36638 (tuple2!2177 (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!18975 c!12217) b!79100))

(assert (= (and d!18975 (not c!12217)) b!79097))

(assert (= (and b!79097 c!12216) b!79092))

(assert (= (and b!79097 (not c!12216)) b!79095))

(assert (= (and b!79095 c!12219) b!79098))

(assert (= (and b!79095 (not c!12219)) b!79096))

(assert (= (or b!79098 b!79096) bm!7272))

(assert (= (or b!79092 bm!7272) bm!7273))

(assert (= (or b!79100 bm!7273) bm!7271))

(assert (= (and bm!7271 c!12218) b!79099))

(assert (= (and bm!7271 (not c!12218)) b!79094))

(assert (= (and d!18975 res!41360) b!79093))

(assert (= (and b!79093 res!41361) b!79101))

(declare-fun m!79775 () Bool)

(assert (=> b!79099 m!79775))

(declare-fun m!79777 () Bool)

(assert (=> bm!7271 m!79777))

(declare-fun m!79779 () Bool)

(assert (=> b!79093 m!79779))

(declare-fun m!79781 () Bool)

(assert (=> b!79101 m!79781))

(declare-fun m!79783 () Bool)

(assert (=> d!18975 m!79783))

(declare-fun m!79785 () Bool)

(assert (=> d!18975 m!79785))

(assert (=> d!18519 d!18975))

(declare-fun d!18977 () Bool)

(declare-fun lt!36639 () Bool)

(assert (=> d!18977 (= lt!36639 (select (content!83 (t!5148 (toList!732 lt!35793))) lt!35660))))

(declare-fun e!51672 () Bool)

(assert (=> d!18977 (= lt!36639 e!51672)))

(declare-fun res!41362 () Bool)

(assert (=> d!18977 (=> (not res!41362) (not e!51672))))

(assert (=> d!18977 (= res!41362 ((_ is Cons!1507) (t!5148 (toList!732 lt!35793))))))

(assert (=> d!18977 (= (contains!740 (t!5148 (toList!732 lt!35793)) lt!35660) lt!36639)))

(declare-fun b!79102 () Bool)

(declare-fun e!51673 () Bool)

(assert (=> b!79102 (= e!51672 e!51673)))

(declare-fun res!41363 () Bool)

(assert (=> b!79102 (=> res!41363 e!51673)))

(assert (=> b!79102 (= res!41363 (= (h!2095 (t!5148 (toList!732 lt!35793))) lt!35660))))

(declare-fun b!79103 () Bool)

(assert (=> b!79103 (= e!51673 (contains!740 (t!5148 (t!5148 (toList!732 lt!35793))) lt!35660))))

(assert (= (and d!18977 res!41362) b!79102))

(assert (= (and b!79102 (not res!41363)) b!79103))

(declare-fun m!79787 () Bool)

(assert (=> d!18977 m!79787))

(declare-fun m!79789 () Bool)

(assert (=> d!18977 m!79789))

(declare-fun m!79791 () Bool)

(assert (=> b!79103 m!79791))

(assert (=> b!78280 d!18977))

(assert (=> d!18545 d!18543))

(declare-fun d!18979 () Bool)

(assert (=> d!18979 (= (getValueByKey!135 lt!35799 (_1!1099 lt!35659)) (Some!140 (_2!1099 lt!35659)))))

(assert (=> d!18979 true))

(declare-fun _$22!395 () Unit!2242)

(assert (=> d!18979 (= (choose!462 lt!35799 (_1!1099 lt!35659) (_2!1099 lt!35659)) _$22!395)))

(declare-fun bs!3349 () Bool)

(assert (= bs!3349 d!18979))

(assert (=> bs!3349 m!77679))

(assert (=> d!18545 d!18979))

(declare-fun d!18981 () Bool)

(declare-fun res!41364 () Bool)

(declare-fun e!51674 () Bool)

(assert (=> d!18981 (=> res!41364 e!51674)))

(assert (=> d!18981 (= res!41364 (or ((_ is Nil!1508) lt!35799) ((_ is Nil!1508) (t!5148 lt!35799))))))

(assert (=> d!18981 (= (isStrictlySorted!290 lt!35799) e!51674)))

(declare-fun b!79104 () Bool)

(declare-fun e!51675 () Bool)

(assert (=> b!79104 (= e!51674 e!51675)))

(declare-fun res!41365 () Bool)

(assert (=> b!79104 (=> (not res!41365) (not e!51675))))

(assert (=> b!79104 (= res!41365 (bvslt (_1!1099 (h!2095 lt!35799)) (_1!1099 (h!2095 (t!5148 lt!35799)))))))

(declare-fun b!79105 () Bool)

(assert (=> b!79105 (= e!51675 (isStrictlySorted!290 (t!5148 lt!35799)))))

(assert (= (and d!18981 (not res!41364)) b!79104))

(assert (= (and b!79104 res!41365) b!79105))

(declare-fun m!79793 () Bool)

(assert (=> b!79105 m!79793))

(assert (=> d!18545 d!18981))

(declare-fun b!79106 () Bool)

(declare-fun e!51677 () List!1511)

(declare-fun call!7277 () List!1511)

(assert (=> b!79106 (= e!51677 call!7277)))

(declare-fun b!79107 () Bool)

(declare-fun res!41367 () Bool)

(declare-fun e!51679 () Bool)

(assert (=> b!79107 (=> (not res!41367) (not e!51679))))

(declare-fun lt!36640 () List!1511)

(assert (=> b!79107 (= res!41367 (containsKey!139 lt!36640 (_1!1099 lt!35659)))))

(declare-fun e!51680 () List!1511)

(declare-fun c!12221 () Bool)

(declare-fun call!7278 () List!1511)

(declare-fun bm!7274 () Bool)

(assert (=> bm!7274 (= call!7278 ($colon$colon!68 e!51680 (ite c!12221 (h!2095 (t!5148 (toList!732 lt!35663))) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659)))))))

(declare-fun c!12222 () Bool)

(assert (=> bm!7274 (= c!12222 c!12221)))

(declare-fun c!12223 () Bool)

(declare-fun c!12220 () Bool)

(declare-fun b!79108 () Bool)

(assert (=> b!79108 (= e!51680 (ite c!12220 (t!5148 (t!5148 (toList!732 lt!35663))) (ite c!12223 (Cons!1507 (h!2095 (t!5148 (toList!732 lt!35663))) (t!5148 (t!5148 (toList!732 lt!35663)))) Nil!1508)))))

(declare-fun d!18983 () Bool)

(assert (=> d!18983 e!51679))

(declare-fun res!41366 () Bool)

(assert (=> d!18983 (=> (not res!41366) (not e!51679))))

(assert (=> d!18983 (= res!41366 (isStrictlySorted!290 lt!36640))))

(declare-fun e!51676 () List!1511)

(assert (=> d!18983 (= lt!36640 e!51676)))

(assert (=> d!18983 (= c!12221 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35663))) (bvslt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35663)))) (_1!1099 lt!35659))))))

(assert (=> d!18983 (isStrictlySorted!290 (t!5148 (toList!732 lt!35663)))))

(assert (=> d!18983 (= (insertStrictlySorted!58 (t!5148 (toList!732 lt!35663)) (_1!1099 lt!35659) (_2!1099 lt!35659)) lt!36640)))

(declare-fun bm!7275 () Bool)

(declare-fun call!7279 () List!1511)

(assert (=> bm!7275 (= call!7279 call!7277)))

(declare-fun b!79109 () Bool)

(assert (=> b!79109 (= c!12223 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35663))) (bvsgt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35663)))) (_1!1099 lt!35659))))))

(declare-fun e!51678 () List!1511)

(assert (=> b!79109 (= e!51677 e!51678)))

(declare-fun b!79110 () Bool)

(assert (=> b!79110 (= e!51678 call!7279)))

(declare-fun b!79111 () Bool)

(assert (=> b!79111 (= e!51676 e!51677)))

(assert (=> b!79111 (= c!12220 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35663))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35663)))) (_1!1099 lt!35659))))))

(declare-fun b!79112 () Bool)

(assert (=> b!79112 (= e!51678 call!7279)))

(declare-fun bm!7276 () Bool)

(assert (=> bm!7276 (= call!7277 call!7278)))

(declare-fun b!79113 () Bool)

(assert (=> b!79113 (= e!51680 (insertStrictlySorted!58 (t!5148 (t!5148 (toList!732 lt!35663))) (_1!1099 lt!35659) (_2!1099 lt!35659)))))

(declare-fun b!79114 () Bool)

(assert (=> b!79114 (= e!51676 call!7278)))

(declare-fun b!79115 () Bool)

(assert (=> b!79115 (= e!51679 (contains!740 lt!36640 (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(assert (= (and d!18983 c!12221) b!79114))

(assert (= (and d!18983 (not c!12221)) b!79111))

(assert (= (and b!79111 c!12220) b!79106))

(assert (= (and b!79111 (not c!12220)) b!79109))

(assert (= (and b!79109 c!12223) b!79112))

(assert (= (and b!79109 (not c!12223)) b!79110))

(assert (= (or b!79112 b!79110) bm!7275))

(assert (= (or b!79106 bm!7275) bm!7276))

(assert (= (or b!79114 bm!7276) bm!7274))

(assert (= (and bm!7274 c!12222) b!79113))

(assert (= (and bm!7274 (not c!12222)) b!79108))

(assert (= (and d!18983 res!41366) b!79107))

(assert (= (and b!79107 res!41367) b!79115))

(declare-fun m!79795 () Bool)

(assert (=> b!79113 m!79795))

(declare-fun m!79797 () Bool)

(assert (=> bm!7274 m!79797))

(declare-fun m!79799 () Bool)

(assert (=> b!79107 m!79799))

(declare-fun m!79801 () Bool)

(assert (=> b!79115 m!79801))

(declare-fun m!79803 () Bool)

(assert (=> d!18983 m!79803))

(assert (=> d!18983 m!79361))

(assert (=> b!78417 d!18983))

(declare-fun d!18985 () Bool)

(assert (=> d!18985 (= (map!1173 (_2!1098 lt!36218)) (getCurrentListMap!421 (_keys!3930 (_2!1098 lt!36218)) (_values!2254 (_2!1098 lt!36218)) (mask!6266 (_2!1098 lt!36218)) (extraKeys!2122 (_2!1098 lt!36218)) (zeroValue!2169 (_2!1098 lt!36218)) (minValue!2169 (_2!1098 lt!36218)) #b00000000000000000000000000000000 (defaultEntry!2271 (_2!1098 lt!36218))))))

(declare-fun bs!3350 () Bool)

(assert (= bs!3350 d!18985))

(declare-fun m!79805 () Bool)

(assert (=> bs!3350 m!79805))

(assert (=> b!78345 d!18985))

(declare-fun d!18987 () Bool)

(declare-fun e!51681 () Bool)

(assert (=> d!18987 e!51681))

(declare-fun res!41368 () Bool)

(assert (=> d!18987 (=> (not res!41368) (not e!51681))))

(declare-fun lt!36644 () ListLongMap!1433)

(assert (=> d!18987 (= res!41368 (contains!739 lt!36644 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36642 () List!1511)

(assert (=> d!18987 (= lt!36644 (ListLongMap!1434 lt!36642))))

(declare-fun lt!36641 () Unit!2242)

(declare-fun lt!36643 () Unit!2242)

(assert (=> d!18987 (= lt!36641 lt!36643)))

(assert (=> d!18987 (= (getValueByKey!135 lt!36642 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18987 (= lt!36643 (lemmaContainsTupThenGetReturnValue!55 lt!36642 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18987 (= lt!36642 (insertStrictlySorted!58 (toList!732 (map!1173 newMap!16)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!18987 (= (+!103 (map!1173 newMap!16) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36644)))

(declare-fun b!79116 () Bool)

(declare-fun res!41369 () Bool)

(assert (=> b!79116 (=> (not res!41369) (not e!51681))))

(assert (=> b!79116 (= res!41369 (= (getValueByKey!135 (toList!732 lt!36644) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!79117 () Bool)

(assert (=> b!79117 (= e!51681 (contains!740 (toList!732 lt!36644) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!18987 res!41368) b!79116))

(assert (= (and b!79116 res!41369) b!79117))

(declare-fun m!79807 () Bool)

(assert (=> d!18987 m!79807))

(declare-fun m!79809 () Bool)

(assert (=> d!18987 m!79809))

(declare-fun m!79811 () Bool)

(assert (=> d!18987 m!79811))

(declare-fun m!79813 () Bool)

(assert (=> d!18987 m!79813))

(declare-fun m!79815 () Bool)

(assert (=> b!79116 m!79815))

(declare-fun m!79817 () Bool)

(assert (=> b!79117 m!79817))

(assert (=> b!78345 d!18987))

(assert (=> b!78345 d!18379))

(assert (=> d!18625 d!18623))

(declare-fun d!18989 () Bool)

(assert (=> d!18989 (= (getValueByKey!135 lt!35815 (_1!1099 lt!35670)) (Some!140 (_2!1099 lt!35670)))))

(assert (=> d!18989 true))

(declare-fun _$22!396 () Unit!2242)

(assert (=> d!18989 (= (choose!462 lt!35815 (_1!1099 lt!35670) (_2!1099 lt!35670)) _$22!396)))

(declare-fun bs!3351 () Bool)

(assert (= bs!3351 d!18989))

(assert (=> bs!3351 m!77735))

(assert (=> d!18625 d!18989))

(declare-fun d!18991 () Bool)

(declare-fun res!41370 () Bool)

(declare-fun e!51682 () Bool)

(assert (=> d!18991 (=> res!41370 e!51682)))

(assert (=> d!18991 (= res!41370 (or ((_ is Nil!1508) lt!35815) ((_ is Nil!1508) (t!5148 lt!35815))))))

(assert (=> d!18991 (= (isStrictlySorted!290 lt!35815) e!51682)))

(declare-fun b!79118 () Bool)

(declare-fun e!51683 () Bool)

(assert (=> b!79118 (= e!51682 e!51683)))

(declare-fun res!41371 () Bool)

(assert (=> b!79118 (=> (not res!41371) (not e!51683))))

(assert (=> b!79118 (= res!41371 (bvslt (_1!1099 (h!2095 lt!35815)) (_1!1099 (h!2095 (t!5148 lt!35815)))))))

(declare-fun b!79119 () Bool)

(assert (=> b!79119 (= e!51683 (isStrictlySorted!290 (t!5148 lt!35815)))))

(assert (= (and d!18991 (not res!41370)) b!79118))

(assert (= (and b!79118 res!41371) b!79119))

(declare-fun m!79819 () Bool)

(assert (=> b!79119 m!79819))

(assert (=> d!18625 d!18991))

(declare-fun d!18993 () Bool)

(declare-fun res!41372 () Bool)

(declare-fun e!51684 () Bool)

(assert (=> d!18993 (=> res!41372 e!51684)))

(assert (=> d!18993 (= res!41372 (and ((_ is Cons!1507) (toList!732 call!7153)) (= (_1!1099 (h!2095 (toList!732 call!7153))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (=> d!18993 (= (containsKey!139 (toList!732 call!7153) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) e!51684)))

(declare-fun b!79120 () Bool)

(declare-fun e!51685 () Bool)

(assert (=> b!79120 (= e!51684 e!51685)))

(declare-fun res!41373 () Bool)

(assert (=> b!79120 (=> (not res!41373) (not e!51685))))

(assert (=> b!79120 (= res!41373 (and (or (not ((_ is Cons!1507) (toList!732 call!7153))) (bvsle (_1!1099 (h!2095 (toList!732 call!7153))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))) ((_ is Cons!1507) (toList!732 call!7153)) (bvslt (_1!1099 (h!2095 (toList!732 call!7153))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(declare-fun b!79121 () Bool)

(assert (=> b!79121 (= e!51685 (containsKey!139 (t!5148 (toList!732 call!7153)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!18993 (not res!41372)) b!79120))

(assert (= (and b!79120 res!41373) b!79121))

(assert (=> b!79121 m!77463))

(declare-fun m!79821 () Bool)

(assert (=> b!79121 m!79821))

(assert (=> d!18475 d!18993))

(declare-fun b!79122 () Bool)

(declare-fun e!51687 () List!1511)

(declare-fun call!7280 () List!1511)

(assert (=> b!79122 (= e!51687 call!7280)))

(declare-fun b!79123 () Bool)

(declare-fun res!41375 () Bool)

(declare-fun e!51689 () Bool)

(assert (=> b!79123 (=> (not res!41375) (not e!51689))))

(declare-fun lt!36645 () List!1511)

(assert (=> b!79123 (= res!41375 (containsKey!139 lt!36645 (_1!1099 lt!35670)))))

(declare-fun c!12225 () Bool)

(declare-fun call!7281 () List!1511)

(declare-fun bm!7277 () Bool)

(declare-fun e!51690 () List!1511)

(assert (=> bm!7277 (= call!7281 ($colon$colon!68 e!51690 (ite c!12225 (h!2095 (t!5148 (toList!732 lt!35668))) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670)))))))

(declare-fun c!12226 () Bool)

(assert (=> bm!7277 (= c!12226 c!12225)))

(declare-fun c!12227 () Bool)

(declare-fun b!79124 () Bool)

(declare-fun c!12224 () Bool)

(assert (=> b!79124 (= e!51690 (ite c!12224 (t!5148 (t!5148 (toList!732 lt!35668))) (ite c!12227 (Cons!1507 (h!2095 (t!5148 (toList!732 lt!35668))) (t!5148 (t!5148 (toList!732 lt!35668)))) Nil!1508)))))

(declare-fun d!18995 () Bool)

(assert (=> d!18995 e!51689))

(declare-fun res!41374 () Bool)

(assert (=> d!18995 (=> (not res!41374) (not e!51689))))

(assert (=> d!18995 (= res!41374 (isStrictlySorted!290 lt!36645))))

(declare-fun e!51686 () List!1511)

(assert (=> d!18995 (= lt!36645 e!51686)))

(assert (=> d!18995 (= c!12225 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35668))) (bvslt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35668)))) (_1!1099 lt!35670))))))

(assert (=> d!18995 (isStrictlySorted!290 (t!5148 (toList!732 lt!35668)))))

(assert (=> d!18995 (= (insertStrictlySorted!58 (t!5148 (toList!732 lt!35668)) (_1!1099 lt!35670) (_2!1099 lt!35670)) lt!36645)))

(declare-fun bm!7278 () Bool)

(declare-fun call!7282 () List!1511)

(assert (=> bm!7278 (= call!7282 call!7280)))

(declare-fun b!79125 () Bool)

(assert (=> b!79125 (= c!12227 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35668))) (bvsgt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35668)))) (_1!1099 lt!35670))))))

(declare-fun e!51688 () List!1511)

(assert (=> b!79125 (= e!51687 e!51688)))

(declare-fun b!79126 () Bool)

(assert (=> b!79126 (= e!51688 call!7282)))

(declare-fun b!79127 () Bool)

(assert (=> b!79127 (= e!51686 e!51687)))

(assert (=> b!79127 (= c!12224 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35668))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35668)))) (_1!1099 lt!35670))))))

(declare-fun b!79128 () Bool)

(assert (=> b!79128 (= e!51688 call!7282)))

(declare-fun bm!7279 () Bool)

(assert (=> bm!7279 (= call!7280 call!7281)))

(declare-fun b!79129 () Bool)

(assert (=> b!79129 (= e!51690 (insertStrictlySorted!58 (t!5148 (t!5148 (toList!732 lt!35668))) (_1!1099 lt!35670) (_2!1099 lt!35670)))))

(declare-fun b!79130 () Bool)

(assert (=> b!79130 (= e!51686 call!7281)))

(declare-fun b!79131 () Bool)

(assert (=> b!79131 (= e!51689 (contains!740 lt!36645 (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(assert (= (and d!18995 c!12225) b!79130))

(assert (= (and d!18995 (not c!12225)) b!79127))

(assert (= (and b!79127 c!12224) b!79122))

(assert (= (and b!79127 (not c!12224)) b!79125))

(assert (= (and b!79125 c!12227) b!79128))

(assert (= (and b!79125 (not c!12227)) b!79126))

(assert (= (or b!79128 b!79126) bm!7278))

(assert (= (or b!79122 bm!7278) bm!7279))

(assert (= (or b!79130 bm!7279) bm!7277))

(assert (= (and bm!7277 c!12226) b!79129))

(assert (= (and bm!7277 (not c!12226)) b!79124))

(assert (= (and d!18995 res!41374) b!79123))

(assert (= (and b!79123 res!41375) b!79131))

(declare-fun m!79823 () Bool)

(assert (=> b!79129 m!79823))

(declare-fun m!79825 () Bool)

(assert (=> bm!7277 m!79825))

(declare-fun m!79827 () Bool)

(assert (=> b!79123 m!79827))

(declare-fun m!79829 () Bool)

(assert (=> b!79131 m!79829))

(declare-fun m!79831 () Bool)

(assert (=> d!18995 m!79831))

(assert (=> d!18995 m!79369))

(assert (=> b!78588 d!18995))

(declare-fun d!18997 () Bool)

(declare-fun res!41376 () Bool)

(declare-fun e!51691 () Bool)

(assert (=> d!18997 (=> res!41376 e!51691)))

(assert (=> d!18997 (= res!41376 (or ((_ is Nil!1508) lt!36338) ((_ is Nil!1508) (t!5148 lt!36338))))))

(assert (=> d!18997 (= (isStrictlySorted!290 lt!36338) e!51691)))

(declare-fun b!79132 () Bool)

(declare-fun e!51692 () Bool)

(assert (=> b!79132 (= e!51691 e!51692)))

(declare-fun res!41377 () Bool)

(assert (=> b!79132 (=> (not res!41377) (not e!51692))))

(assert (=> b!79132 (= res!41377 (bvslt (_1!1099 (h!2095 lt!36338)) (_1!1099 (h!2095 (t!5148 lt!36338)))))))

(declare-fun b!79133 () Bool)

(assert (=> b!79133 (= e!51692 (isStrictlySorted!290 (t!5148 lt!36338)))))

(assert (= (and d!18997 (not res!41376)) b!79132))

(assert (= (and b!79132 res!41377) b!79133))

(declare-fun m!79833 () Bool)

(assert (=> b!79133 m!79833))

(assert (=> d!18589 d!18997))

(declare-fun d!18999 () Bool)

(declare-fun res!41378 () Bool)

(declare-fun e!51693 () Bool)

(assert (=> d!18999 (=> res!41378 e!51693)))

(assert (=> d!18999 (= res!41378 (or ((_ is Nil!1508) (toList!732 (+!103 lt!35662 lt!35659))) ((_ is Nil!1508) (t!5148 (toList!732 (+!103 lt!35662 lt!35659))))))))

(assert (=> d!18999 (= (isStrictlySorted!290 (toList!732 (+!103 lt!35662 lt!35659))) e!51693)))

(declare-fun b!79134 () Bool)

(declare-fun e!51694 () Bool)

(assert (=> b!79134 (= e!51693 e!51694)))

(declare-fun res!41379 () Bool)

(assert (=> b!79134 (=> (not res!41379) (not e!51694))))

(assert (=> b!79134 (= res!41379 (bvslt (_1!1099 (h!2095 (toList!732 (+!103 lt!35662 lt!35659)))) (_1!1099 (h!2095 (t!5148 (toList!732 (+!103 lt!35662 lt!35659)))))))))

(declare-fun b!79135 () Bool)

(assert (=> b!79135 (= e!51694 (isStrictlySorted!290 (t!5148 (toList!732 (+!103 lt!35662 lt!35659)))))))

(assert (= (and d!18999 (not res!41378)) b!79134))

(assert (= (and b!79134 res!41379) b!79135))

(declare-fun m!79835 () Bool)

(assert (=> b!79135 m!79835))

(assert (=> d!18589 d!18999))

(declare-fun b!79136 () Bool)

(declare-fun e!51695 () Option!141)

(assert (=> b!79136 (= e!51695 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36263)))))))

(declare-fun b!79138 () Bool)

(declare-fun e!51696 () Option!141)

(assert (=> b!79138 (= e!51696 (getValueByKey!135 (t!5148 (toList!732 lt!36263)) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun c!12228 () Bool)

(declare-fun d!19001 () Bool)

(assert (=> d!19001 (= c!12228 (and ((_ is Cons!1507) (toList!732 lt!36263)) (= (_1!1099 (h!2095 (toList!732 lt!36263))) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19001 (= (getValueByKey!135 (toList!732 lt!36263) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!51695)))

(declare-fun b!79139 () Bool)

(assert (=> b!79139 (= e!51696 None!139)))

(declare-fun b!79137 () Bool)

(assert (=> b!79137 (= e!51695 e!51696)))

(declare-fun c!12229 () Bool)

(assert (=> b!79137 (= c!12229 (and ((_ is Cons!1507) (toList!732 lt!36263)) (not (= (_1!1099 (h!2095 (toList!732 lt!36263))) (_1!1099 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19001 c!12228) b!79136))

(assert (= (and d!19001 (not c!12228)) b!79137))

(assert (= (and b!79137 c!12229) b!79138))

(assert (= (and b!79137 (not c!12229)) b!79139))

(declare-fun m!79837 () Bool)

(assert (=> b!79138 m!79837))

(assert (=> b!78364 d!19001))

(declare-fun d!19003 () Bool)

(declare-fun c!12230 () Bool)

(assert (=> d!19003 (= c!12230 ((_ is Nil!1508) (toList!732 lt!35797)))))

(declare-fun e!51697 () (InoxSet tuple2!2176))

(assert (=> d!19003 (= (content!83 (toList!732 lt!35797)) e!51697)))

(declare-fun b!79140 () Bool)

(assert (=> b!79140 (= e!51697 ((as const (Array tuple2!2176 Bool)) false))))

(declare-fun b!79141 () Bool)

(assert (=> b!79141 (= e!51697 ((_ map or) (store ((as const (Array tuple2!2176 Bool)) false) (h!2095 (toList!732 lt!35797)) true) (content!83 (t!5148 (toList!732 lt!35797)))))))

(assert (= (and d!19003 c!12230) b!79140))

(assert (= (and d!19003 (not c!12230)) b!79141))

(declare-fun m!79839 () Bool)

(assert (=> b!79141 m!79839))

(assert (=> b!79141 m!78959))

(assert (=> d!18495 d!19003))

(assert (=> b!78119 d!18757))

(assert (=> b!78119 d!18759))

(declare-fun call!7283 () Bool)

(declare-fun c!12231 () Bool)

(declare-fun bm!7280 () Bool)

(assert (=> bm!7280 (= call!7283 (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12231 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!12065 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507))) (ite c!12065 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)))))))

(declare-fun e!51701 () Bool)

(declare-fun b!79142 () Bool)

(assert (=> b!79142 (= e!51701 (contains!741 (ite c!12065 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!19005 () Bool)

(declare-fun res!41382 () Bool)

(declare-fun e!51700 () Bool)

(assert (=> d!19005 (=> res!41382 e!51700)))

(assert (=> d!19005 (= res!41382 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!19005 (= (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12065 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507))) e!51700)))

(declare-fun b!79143 () Bool)

(declare-fun e!51699 () Bool)

(declare-fun e!51698 () Bool)

(assert (=> b!79143 (= e!51699 e!51698)))

(assert (=> b!79143 (= c!12231 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!79144 () Bool)

(assert (=> b!79144 (= e!51698 call!7283)))

(declare-fun b!79145 () Bool)

(assert (=> b!79145 (= e!51698 call!7283)))

(declare-fun b!79146 () Bool)

(assert (=> b!79146 (= e!51700 e!51699)))

(declare-fun res!41381 () Bool)

(assert (=> b!79146 (=> (not res!41381) (not e!51699))))

(assert (=> b!79146 (= res!41381 (not e!51701))))

(declare-fun res!41380 () Bool)

(assert (=> b!79146 (=> (not res!41380) (not e!51701))))

(assert (=> b!79146 (= res!41380 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!19005 (not res!41382)) b!79146))

(assert (= (and b!79146 res!41380) b!79142))

(assert (= (and b!79146 res!41381) b!79143))

(assert (= (and b!79143 c!12231) b!79145))

(assert (= (and b!79143 (not c!12231)) b!79144))

(assert (= (or b!79145 b!79144) bm!7280))

(declare-fun m!79841 () Bool)

(assert (=> bm!7280 m!79841))

(declare-fun m!79843 () Bool)

(assert (=> bm!7280 m!79843))

(assert (=> b!79142 m!79841))

(assert (=> b!79142 m!79841))

(declare-fun m!79845 () Bool)

(assert (=> b!79142 m!79845))

(assert (=> b!79143 m!79841))

(assert (=> b!79143 m!79841))

(declare-fun m!79847 () Bool)

(assert (=> b!79143 m!79847))

(assert (=> b!79146 m!79841))

(assert (=> b!79146 m!79841))

(assert (=> b!79146 m!79847))

(assert (=> bm!7220 d!19005))

(declare-fun d!19007 () Bool)

(declare-fun e!51703 () Bool)

(assert (=> d!19007 e!51703))

(declare-fun res!41383 () Bool)

(assert (=> d!19007 (=> res!41383 e!51703)))

(declare-fun lt!36648 () Bool)

(assert (=> d!19007 (= res!41383 (not lt!36648))))

(declare-fun lt!36649 () Bool)

(assert (=> d!19007 (= lt!36648 lt!36649)))

(declare-fun lt!36646 () Unit!2242)

(declare-fun e!51702 () Unit!2242)

(assert (=> d!19007 (= lt!36646 e!51702)))

(declare-fun c!12232 () Bool)

(assert (=> d!19007 (= c!12232 lt!36649)))

(assert (=> d!19007 (= lt!36649 (containsKey!139 (toList!732 (getCurrentListMap!421 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)))))))

(assert (=> d!19007 (= (contains!739 (getCurrentListMap!421 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)))) lt!36648)))

(declare-fun b!79147 () Bool)

(declare-fun lt!36647 () Unit!2242)

(assert (=> b!79147 (= e!51702 lt!36647)))

(assert (=> b!79147 (= lt!36647 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (getCurrentListMap!421 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)))))))

(assert (=> b!79147 (isDefined!89 (getValueByKey!135 (toList!732 (getCurrentListMap!421 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)))))))

(declare-fun b!79148 () Bool)

(declare-fun Unit!2295 () Unit!2242)

(assert (=> b!79148 (= e!51702 Unit!2295)))

(declare-fun b!79149 () Bool)

(assert (=> b!79149 (= e!51703 (isDefined!89 (getValueByKey!135 (toList!732 (getCurrentListMap!421 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))))))))

(assert (= (and d!19007 c!12232) b!79147))

(assert (= (and d!19007 (not c!12232)) b!79148))

(assert (= (and d!19007 (not res!41383)) b!79149))

(assert (=> d!19007 m!78355))

(declare-fun m!79849 () Bool)

(assert (=> d!19007 m!79849))

(assert (=> b!79147 m!78355))

(declare-fun m!79851 () Bool)

(assert (=> b!79147 m!79851))

(assert (=> b!79147 m!78355))

(declare-fun m!79853 () Bool)

(assert (=> b!79147 m!79853))

(assert (=> b!79147 m!79853))

(declare-fun m!79855 () Bool)

(assert (=> b!79147 m!79855))

(assert (=> b!79149 m!78355))

(assert (=> b!79149 m!79853))

(assert (=> b!79149 m!79853))

(assert (=> b!79149 m!79855))

(assert (=> d!18499 d!19007))

(declare-fun d!19009 () Bool)

(declare-fun e!51706 () Bool)

(assert (=> d!19009 e!51706))

(declare-fun res!41386 () Bool)

(assert (=> d!19009 (=> (not res!41386) (not e!51706))))

(assert (=> d!19009 (= res!41386 (and (bvsge (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000000) (bvslt (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (size!2124 (_keys!3930 newMap!16)))))))

(declare-fun lt!36652 () Unit!2242)

(declare-fun choose!102 ((_ BitVec 64) array!3951 (_ BitVec 32) (_ BitVec 32)) Unit!2242)

(assert (=> d!19009 (= lt!36652 (choose!102 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (mask!6266 newMap!16)))))

(assert (=> d!19009 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19009 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (mask!6266 newMap!16)) lt!36652)))

(declare-fun b!79152 () Bool)

(assert (=> b!79152 (= e!51706 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (mask!6266 newMap!16)))))

(assert (= (and d!19009 res!41386) b!79152))

(assert (=> d!19009 m!77463))

(declare-fun m!79857 () Bool)

(assert (=> d!19009 m!79857))

(assert (=> d!19009 m!77977))

(assert (=> b!79152 m!78371))

(assert (=> b!79152 m!78373))

(assert (=> d!18499 d!19009))

(assert (=> d!18499 d!18349))

(declare-fun d!19011 () Bool)

(declare-fun res!41387 () Bool)

(declare-fun e!51707 () Bool)

(assert (=> d!19011 (=> res!41387 e!51707)))

(assert (=> d!19011 (= res!41387 (= (select (arr!1882 lt!36230) #b00000000000000000000000000000000) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!19011 (= (arrayContainsKey!0 lt!36230 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000) e!51707)))

(declare-fun b!79153 () Bool)

(declare-fun e!51708 () Bool)

(assert (=> b!79153 (= e!51707 e!51708)))

(declare-fun res!41388 () Bool)

(assert (=> b!79153 (=> (not res!41388) (not e!51708))))

(assert (=> b!79153 (= res!41388 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 lt!36230)))))

(declare-fun b!79154 () Bool)

(assert (=> b!79154 (= e!51708 (arrayContainsKey!0 lt!36230 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!19011 (not res!41387)) b!79153))

(assert (= (and b!79153 res!41388) b!79154))

(declare-fun m!79859 () Bool)

(assert (=> d!19011 m!79859))

(assert (=> b!79154 m!77463))

(declare-fun m!79861 () Bool)

(assert (=> b!79154 m!79861))

(assert (=> d!18499 d!19011))

(assert (=> d!18499 d!18573))

(declare-fun d!19013 () Bool)

(declare-fun e!51711 () Bool)

(assert (=> d!19013 e!51711))

(declare-fun res!41391 () Bool)

(assert (=> d!19013 (=> (not res!41391) (not e!51711))))

(assert (=> d!19013 (= res!41391 (and (bvsge (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000000) (bvslt (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (size!2124 (_keys!3930 newMap!16))) (bvslt (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (size!2125 (_values!2254 newMap!16)))))))

(declare-fun lt!36655 () Unit!2242)

(declare-fun choose!474 (array!3951 array!3953 (_ BitVec 32) (_ BitVec 32) V!2993 V!2993 (_ BitVec 32) (_ BitVec 64) V!2993 Int) Unit!2242)

(assert (=> d!19013 (= lt!36655 (choose!474 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 (defaultEntry!2271 newMap!16)))))

(assert (=> d!19013 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19013 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!16 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 (defaultEntry!2271 newMap!16)) lt!36655)))

(declare-fun b!79157 () Bool)

(assert (=> b!79157 (= e!51711 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (getCurrentListMap!421 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))))))

(assert (= (and d!19013 res!41391) b!79157))

(assert (=> d!19013 m!77463))

(declare-fun m!79863 () Bool)

(assert (=> d!19013 m!79863))

(assert (=> d!19013 m!77977))

(assert (=> b!79157 m!77787))

(assert (=> b!79157 m!78229))

(assert (=> b!79157 m!78379))

(assert (=> b!79157 m!78371))

(assert (=> b!79157 m!78383))

(assert (=> b!79157 m!77787))

(assert (=> d!18499 d!19013))

(declare-fun lt!36670 () ListLongMap!1433)

(declare-fun b!79158 () Bool)

(declare-fun e!51722 () Bool)

(assert (=> b!79158 (= e!51722 (= (apply!79 lt!36670 (select (arr!1882 lt!36223) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 lt!36239) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79158 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 lt!36239)))))

(assert (=> b!79158 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 lt!36223)))))

(declare-fun b!79159 () Bool)

(declare-fun c!12234 () Bool)

(assert (=> b!79159 (= c!12234 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!51721 () ListLongMap!1433)

(declare-fun e!51714 () ListLongMap!1433)

(assert (=> b!79159 (= e!51721 e!51714)))

(declare-fun b!79160 () Bool)

(declare-fun e!51720 () Bool)

(assert (=> b!79160 (= e!51720 (validKeyInArray!0 (select (arr!1882 lt!36223) #b00000000000000000000000000000000)))))

(declare-fun b!79161 () Bool)

(declare-fun e!51719 () Unit!2242)

(declare-fun lt!36673 () Unit!2242)

(assert (=> b!79161 (= e!51719 lt!36673)))

(declare-fun lt!36660 () ListLongMap!1433)

(assert (=> b!79161 (= lt!36660 (getCurrentListMapNoExtraKeys!67 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36656 () (_ BitVec 64))

(assert (=> b!79161 (= lt!36656 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36667 () (_ BitVec 64))

(assert (=> b!79161 (= lt!36667 (select (arr!1882 lt!36223) #b00000000000000000000000000000000))))

(declare-fun lt!36661 () Unit!2242)

(assert (=> b!79161 (= lt!36661 (addStillContains!55 lt!36660 lt!36656 (zeroValue!2169 newMap!16) lt!36667))))

(assert (=> b!79161 (contains!739 (+!103 lt!36660 (tuple2!2177 lt!36656 (zeroValue!2169 newMap!16))) lt!36667)))

(declare-fun lt!36658 () Unit!2242)

(assert (=> b!79161 (= lt!36658 lt!36661)))

(declare-fun lt!36659 () ListLongMap!1433)

(assert (=> b!79161 (= lt!36659 (getCurrentListMapNoExtraKeys!67 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36668 () (_ BitVec 64))

(assert (=> b!79161 (= lt!36668 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36665 () (_ BitVec 64))

(assert (=> b!79161 (= lt!36665 (select (arr!1882 lt!36223) #b00000000000000000000000000000000))))

(declare-fun lt!36666 () Unit!2242)

(assert (=> b!79161 (= lt!36666 (addApplyDifferent!55 lt!36659 lt!36668 (minValue!2169 newMap!16) lt!36665))))

(assert (=> b!79161 (= (apply!79 (+!103 lt!36659 (tuple2!2177 lt!36668 (minValue!2169 newMap!16))) lt!36665) (apply!79 lt!36659 lt!36665))))

(declare-fun lt!36657 () Unit!2242)

(assert (=> b!79161 (= lt!36657 lt!36666)))

(declare-fun lt!36664 () ListLongMap!1433)

(assert (=> b!79161 (= lt!36664 (getCurrentListMapNoExtraKeys!67 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36677 () (_ BitVec 64))

(assert (=> b!79161 (= lt!36677 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36675 () (_ BitVec 64))

(assert (=> b!79161 (= lt!36675 (select (arr!1882 lt!36223) #b00000000000000000000000000000000))))

(declare-fun lt!36676 () Unit!2242)

(assert (=> b!79161 (= lt!36676 (addApplyDifferent!55 lt!36664 lt!36677 (zeroValue!2169 newMap!16) lt!36675))))

(assert (=> b!79161 (= (apply!79 (+!103 lt!36664 (tuple2!2177 lt!36677 (zeroValue!2169 newMap!16))) lt!36675) (apply!79 lt!36664 lt!36675))))

(declare-fun lt!36669 () Unit!2242)

(assert (=> b!79161 (= lt!36669 lt!36676)))

(declare-fun lt!36671 () ListLongMap!1433)

(assert (=> b!79161 (= lt!36671 (getCurrentListMapNoExtraKeys!67 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36672 () (_ BitVec 64))

(assert (=> b!79161 (= lt!36672 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36674 () (_ BitVec 64))

(assert (=> b!79161 (= lt!36674 (select (arr!1882 lt!36223) #b00000000000000000000000000000000))))

(assert (=> b!79161 (= lt!36673 (addApplyDifferent!55 lt!36671 lt!36672 (minValue!2169 newMap!16) lt!36674))))

(assert (=> b!79161 (= (apply!79 (+!103 lt!36671 (tuple2!2177 lt!36672 (minValue!2169 newMap!16))) lt!36674) (apply!79 lt!36671 lt!36674))))

(declare-fun b!79163 () Bool)

(declare-fun e!51713 () Bool)

(declare-fun e!51715 () Bool)

(assert (=> b!79163 (= e!51713 e!51715)))

(declare-fun res!41394 () Bool)

(declare-fun call!7289 () Bool)

(assert (=> b!79163 (= res!41394 call!7289)))

(assert (=> b!79163 (=> (not res!41394) (not e!51715))))

(declare-fun bm!7281 () Bool)

(declare-fun call!7284 () ListLongMap!1433)

(declare-fun call!7288 () ListLongMap!1433)

(assert (=> bm!7281 (= call!7284 call!7288)))

(declare-fun b!79164 () Bool)

(assert (=> b!79164 (= e!51713 (not call!7289))))

(declare-fun b!79165 () Bool)

(declare-fun e!51718 () ListLongMap!1433)

(assert (=> b!79165 (= e!51718 e!51721)))

(declare-fun c!12235 () Bool)

(assert (=> b!79165 (= c!12235 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79166 () Bool)

(declare-fun call!7285 () ListLongMap!1433)

(assert (=> b!79166 (= e!51714 call!7285)))

(declare-fun b!79167 () Bool)

(declare-fun call!7287 () ListLongMap!1433)

(assert (=> b!79167 (= e!51714 call!7287)))

(declare-fun b!79168 () Bool)

(declare-fun res!41399 () Bool)

(declare-fun e!51724 () Bool)

(assert (=> b!79168 (=> (not res!41399) (not e!51724))))

(declare-fun e!51712 () Bool)

(assert (=> b!79168 (= res!41399 e!51712)))

(declare-fun c!12233 () Bool)

(assert (=> b!79168 (= c!12233 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7282 () Bool)

(declare-fun call!7286 () Bool)

(assert (=> bm!7282 (= call!7286 (contains!739 lt!36670 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7283 () Bool)

(assert (=> bm!7283 (= call!7289 (contains!739 lt!36670 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7284 () Bool)

(assert (=> bm!7284 (= call!7288 (getCurrentListMapNoExtraKeys!67 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!79169 () Bool)

(declare-fun e!51723 () Bool)

(assert (=> b!79169 (= e!51723 (validKeyInArray!0 (select (arr!1882 lt!36223) #b00000000000000000000000000000000)))))

(declare-fun bm!7285 () Bool)

(assert (=> bm!7285 (= call!7287 call!7284)))

(declare-fun b!79170 () Bool)

(declare-fun e!51717 () Bool)

(assert (=> b!79170 (= e!51717 (= (apply!79 lt!36670 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!79171 () Bool)

(declare-fun res!41400 () Bool)

(assert (=> b!79171 (=> (not res!41400) (not e!51724))))

(declare-fun e!51716 () Bool)

(assert (=> b!79171 (= res!41400 e!51716)))

(declare-fun res!41397 () Bool)

(assert (=> b!79171 (=> res!41397 e!51716)))

(assert (=> b!79171 (= res!41397 (not e!51723))))

(declare-fun res!41393 () Bool)

(assert (=> b!79171 (=> (not res!41393) (not e!51723))))

(assert (=> b!79171 (= res!41393 (bvslt #b00000000000000000000000000000000 (size!2124 lt!36223)))))

(declare-fun b!79162 () Bool)

(declare-fun call!7290 () ListLongMap!1433)

(assert (=> b!79162 (= e!51718 (+!103 call!7290 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun d!19015 () Bool)

(assert (=> d!19015 e!51724))

(declare-fun res!41396 () Bool)

(assert (=> d!19015 (=> (not res!41396) (not e!51724))))

(assert (=> d!19015 (= res!41396 (or (bvsge #b00000000000000000000000000000000 (size!2124 lt!36223)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 lt!36223)))))))

(declare-fun lt!36662 () ListLongMap!1433)

(assert (=> d!19015 (= lt!36670 lt!36662)))

(declare-fun lt!36663 () Unit!2242)

(assert (=> d!19015 (= lt!36663 e!51719)))

(declare-fun c!12236 () Bool)

(assert (=> d!19015 (= c!12236 e!51720)))

(declare-fun res!41398 () Bool)

(assert (=> d!19015 (=> (not res!41398) (not e!51720))))

(assert (=> d!19015 (= res!41398 (bvslt #b00000000000000000000000000000000 (size!2124 lt!36223)))))

(assert (=> d!19015 (= lt!36662 e!51718)))

(declare-fun c!12237 () Bool)

(assert (=> d!19015 (= c!12237 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19015 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19015 (= (getCurrentListMap!421 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36670)))

(declare-fun b!79172 () Bool)

(assert (=> b!79172 (= e!51712 (not call!7286))))

(declare-fun bm!7286 () Bool)

(assert (=> bm!7286 (= call!7290 (+!103 (ite c!12237 call!7288 (ite c!12235 call!7284 call!7287)) (ite (or c!12237 c!12235) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!79173 () Bool)

(assert (=> b!79173 (= e!51721 call!7285)))

(declare-fun bm!7287 () Bool)

(assert (=> bm!7287 (= call!7285 call!7290)))

(declare-fun b!79174 () Bool)

(assert (=> b!79174 (= e!51716 e!51722)))

(declare-fun res!41395 () Bool)

(assert (=> b!79174 (=> (not res!41395) (not e!51722))))

(assert (=> b!79174 (= res!41395 (contains!739 lt!36670 (select (arr!1882 lt!36223) #b00000000000000000000000000000000)))))

(assert (=> b!79174 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 lt!36223)))))

(declare-fun b!79175 () Bool)

(assert (=> b!79175 (= e!51712 e!51717)))

(declare-fun res!41392 () Bool)

(assert (=> b!79175 (= res!41392 call!7286)))

(assert (=> b!79175 (=> (not res!41392) (not e!51717))))

(declare-fun b!79176 () Bool)

(assert (=> b!79176 (= e!51724 e!51713)))

(declare-fun c!12238 () Bool)

(assert (=> b!79176 (= c!12238 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79177 () Bool)

(declare-fun Unit!2296 () Unit!2242)

(assert (=> b!79177 (= e!51719 Unit!2296)))

(declare-fun b!79178 () Bool)

(assert (=> b!79178 (= e!51715 (= (apply!79 lt!36670 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(assert (= (and d!19015 c!12237) b!79162))

(assert (= (and d!19015 (not c!12237)) b!79165))

(assert (= (and b!79165 c!12235) b!79173))

(assert (= (and b!79165 (not c!12235)) b!79159))

(assert (= (and b!79159 c!12234) b!79166))

(assert (= (and b!79159 (not c!12234)) b!79167))

(assert (= (or b!79166 b!79167) bm!7285))

(assert (= (or b!79173 bm!7285) bm!7281))

(assert (= (or b!79173 b!79166) bm!7287))

(assert (= (or b!79162 bm!7281) bm!7284))

(assert (= (or b!79162 bm!7287) bm!7286))

(assert (= (and d!19015 res!41398) b!79160))

(assert (= (and d!19015 c!12236) b!79161))

(assert (= (and d!19015 (not c!12236)) b!79177))

(assert (= (and d!19015 res!41396) b!79171))

(assert (= (and b!79171 res!41393) b!79169))

(assert (= (and b!79171 (not res!41397)) b!79174))

(assert (= (and b!79174 res!41395) b!79158))

(assert (= (and b!79171 res!41400) b!79168))

(assert (= (and b!79168 c!12233) b!79175))

(assert (= (and b!79168 (not c!12233)) b!79172))

(assert (= (and b!79175 res!41392) b!79170))

(assert (= (or b!79175 b!79172) bm!7282))

(assert (= (and b!79168 res!41399) b!79176))

(assert (= (and b!79176 c!12238) b!79163))

(assert (= (and b!79176 (not c!12238)) b!79164))

(assert (= (and b!79163 res!41394) b!79178))

(assert (= (or b!79163 b!79164) bm!7283))

(declare-fun b_lambda!3525 () Bool)

(assert (=> (not b_lambda!3525) (not b!79158)))

(assert (=> b!79158 t!5160))

(declare-fun b_and!4849 () Bool)

(assert (= b_and!4845 (and (=> t!5160 result!2821) b_and!4849)))

(assert (=> b!79158 t!5162))

(declare-fun b_and!4851 () Bool)

(assert (= b_and!4847 (and (=> t!5162 result!2823) b_and!4851)))

(declare-fun m!79865 () Bool)

(assert (=> b!79170 m!79865))

(declare-fun m!79867 () Bool)

(assert (=> b!79161 m!79867))

(declare-fun m!79869 () Bool)

(assert (=> b!79161 m!79869))

(declare-fun m!79871 () Bool)

(assert (=> b!79161 m!79871))

(declare-fun m!79873 () Bool)

(assert (=> b!79161 m!79873))

(declare-fun m!79875 () Bool)

(assert (=> b!79161 m!79875))

(declare-fun m!79877 () Bool)

(assert (=> b!79161 m!79877))

(declare-fun m!79879 () Bool)

(assert (=> b!79161 m!79879))

(declare-fun m!79881 () Bool)

(assert (=> b!79161 m!79881))

(declare-fun m!79883 () Bool)

(assert (=> b!79161 m!79883))

(declare-fun m!79885 () Bool)

(assert (=> b!79161 m!79885))

(declare-fun m!79887 () Bool)

(assert (=> b!79161 m!79887))

(declare-fun m!79889 () Bool)

(assert (=> b!79161 m!79889))

(declare-fun m!79891 () Bool)

(assert (=> b!79161 m!79891))

(assert (=> b!79161 m!79887))

(assert (=> b!79161 m!79885))

(declare-fun m!79893 () Bool)

(assert (=> b!79161 m!79893))

(declare-fun m!79895 () Bool)

(assert (=> b!79161 m!79895))

(assert (=> b!79161 m!79871))

(declare-fun m!79897 () Bool)

(assert (=> b!79161 m!79897))

(assert (=> b!79161 m!79881))

(declare-fun m!79899 () Bool)

(assert (=> b!79161 m!79899))

(declare-fun m!79901 () Bool)

(assert (=> bm!7283 m!79901))

(assert (=> bm!7284 m!79883))

(declare-fun m!79903 () Bool)

(assert (=> b!79162 m!79903))

(assert (=> b!79160 m!79895))

(assert (=> b!79160 m!79895))

(declare-fun m!79905 () Bool)

(assert (=> b!79160 m!79905))

(assert (=> d!19015 m!77977))

(declare-fun m!79907 () Bool)

(assert (=> bm!7282 m!79907))

(declare-fun m!79909 () Bool)

(assert (=> bm!7286 m!79909))

(assert (=> b!79158 m!77983))

(declare-fun m!79911 () Bool)

(assert (=> b!79158 m!79911))

(assert (=> b!79158 m!77983))

(declare-fun m!79913 () Bool)

(assert (=> b!79158 m!79913))

(assert (=> b!79158 m!79895))

(declare-fun m!79915 () Bool)

(assert (=> b!79158 m!79915))

(assert (=> b!79158 m!79911))

(assert (=> b!79158 m!79895))

(assert (=> b!79169 m!79895))

(assert (=> b!79169 m!79895))

(assert (=> b!79169 m!79905))

(declare-fun m!79917 () Bool)

(assert (=> b!79178 m!79917))

(assert (=> b!79174 m!79895))

(assert (=> b!79174 m!79895))

(declare-fun m!79919 () Bool)

(assert (=> b!79174 m!79919))

(assert (=> d!18499 d!19015))

(declare-fun d!19017 () Bool)

(assert (=> d!19017 (= (arrayCountValidKeys!0 lt!36224 (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (bvadd (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!36680 () Unit!2242)

(declare-fun choose!2 (array!3951 (_ BitVec 32)) Unit!2242)

(assert (=> d!19017 (= lt!36680 (choose!2 lt!36224 (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))))))

(declare-fun e!51727 () Bool)

(assert (=> d!19017 e!51727))

(declare-fun res!41405 () Bool)

(assert (=> d!19017 (=> (not res!41405) (not e!51727))))

(assert (=> d!19017 (= res!41405 (and (bvsge (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000000) (bvslt (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (size!2124 lt!36224))))))

(assert (=> d!19017 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!36224 (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))) lt!36680)))

(declare-fun b!79183 () Bool)

(declare-fun res!41406 () Bool)

(assert (=> b!79183 (=> (not res!41406) (not e!51727))))

(assert (=> b!79183 (= res!41406 (validKeyInArray!0 (select (arr!1882 lt!36224) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)))))))

(declare-fun b!79184 () Bool)

(assert (=> b!79184 (= e!51727 (bvslt (size!2124 lt!36224) #b01111111111111111111111111111111))))

(assert (= (and d!19017 res!41405) b!79183))

(assert (= (and b!79183 res!41406) b!79184))

(assert (=> d!19017 m!78365))

(declare-fun m!79921 () Bool)

(assert (=> d!19017 m!79921))

(declare-fun m!79923 () Bool)

(assert (=> b!79183 m!79923))

(assert (=> b!79183 m!79923))

(declare-fun m!79925 () Bool)

(assert (=> b!79183 m!79925))

(assert (=> d!18499 d!19017))

(declare-fun b!79196 () Bool)

(declare-fun e!51732 () Bool)

(assert (=> b!79196 (= e!51732 (= (arrayCountValidKeys!0 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3930 newMap!16) #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!79195 () Bool)

(declare-fun e!51733 () Bool)

(assert (=> b!79195 (= e!51733 (bvslt (size!2124 (_keys!3930 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!19019 () Bool)

(assert (=> d!19019 e!51732))

(declare-fun res!41415 () Bool)

(assert (=> d!19019 (=> (not res!41415) (not e!51732))))

(assert (=> d!19019 (= res!41415 (and (bvsge (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000000) (bvslt (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (size!2124 (_keys!3930 newMap!16)))))))

(declare-fun lt!36683 () Unit!2242)

(declare-fun choose!1 (array!3951 (_ BitVec 32) (_ BitVec 64)) Unit!2242)

(assert (=> d!19019 (= lt!36683 (choose!1 (_keys!3930 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!19019 e!51733))

(declare-fun res!41418 () Bool)

(assert (=> d!19019 (=> (not res!41418) (not e!51733))))

(assert (=> d!19019 (= res!41418 (and (bvsge (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000000) (bvslt (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (size!2124 (_keys!3930 newMap!16)))))))

(assert (=> d!19019 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3930 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) lt!36683)))

(declare-fun b!79194 () Bool)

(declare-fun res!41417 () Bool)

(assert (=> b!79194 (=> (not res!41417) (not e!51733))))

(assert (=> b!79194 (= res!41417 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!79193 () Bool)

(declare-fun res!41416 () Bool)

(assert (=> b!79193 (=> (not res!41416) (not e!51733))))

(assert (=> b!79193 (= res!41416 (not (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))))))))

(assert (= (and d!19019 res!41418) b!79193))

(assert (= (and b!79193 res!41416) b!79194))

(assert (= (and b!79194 res!41417) b!79195))

(assert (= (and d!19019 res!41415) b!79196))

(assert (=> b!79196 m!78371))

(assert (=> b!79196 m!78361))

(assert (=> b!79196 m!77647))

(assert (=> d!19019 m!77463))

(declare-fun m!79927 () Bool)

(assert (=> d!19019 m!79927))

(assert (=> b!79194 m!77463))

(assert (=> b!79194 m!77847))

(declare-fun m!79929 () Bool)

(assert (=> b!79193 m!79929))

(assert (=> b!79193 m!79929))

(declare-fun m!79931 () Bool)

(assert (=> b!79193 m!79931))

(assert (=> d!18499 d!19019))

(declare-fun d!19021 () Bool)

(declare-fun e!51736 () Bool)

(assert (=> d!19021 e!51736))

(declare-fun res!41421 () Bool)

(assert (=> d!19021 (=> (not res!41421) (not e!51736))))

(assert (=> d!19021 (= res!41421 (and (bvsge (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000000) (bvslt (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (size!2124 (_keys!3930 newMap!16)))))))

(declare-fun lt!36686 () Unit!2242)

(declare-fun choose!41 (array!3951 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1510) Unit!2242)

(assert (=> d!19021 (= lt!36686 (choose!41 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) lt!36225 lt!36240))))

(assert (=> d!19021 (bvslt (size!2124 (_keys!3930 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!19021 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) lt!36225 lt!36240) lt!36686)))

(declare-fun b!79199 () Bool)

(assert (=> b!79199 (= e!51736 (arrayNoDuplicates!0 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) lt!36225 lt!36240))))

(assert (= (and d!19021 res!41421) b!79199))

(assert (=> d!19021 m!77463))

(declare-fun m!79933 () Bool)

(assert (=> d!19021 m!79933))

(assert (=> b!79199 m!78371))

(assert (=> b!79199 m!78351))

(assert (=> d!18499 d!19021))

(declare-fun call!7291 () (_ BitVec 32))

(declare-fun bm!7288 () Bool)

(assert (=> bm!7288 (= call!7291 (arrayCountValidKeys!0 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun lt!36687 () (_ BitVec 32))

(declare-fun d!19023 () Bool)

(assert (=> d!19023 (and (bvsge lt!36687 #b00000000000000000000000000000000) (bvsle lt!36687 (bvsub (size!2124 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!51738 () (_ BitVec 32))

(assert (=> d!19023 (= lt!36687 e!51738)))

(declare-fun c!12240 () Bool)

(assert (=> d!19023 (= c!12240 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!19023 (and (bvsle #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2124 (_keys!3930 newMap!16)) (size!2124 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))))

(assert (=> d!19023 (= (arrayCountValidKeys!0 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) lt!36687)))

(declare-fun b!79200 () Bool)

(declare-fun e!51737 () (_ BitVec 32))

(assert (=> b!79200 (= e!51737 (bvadd #b00000000000000000000000000000001 call!7291))))

(declare-fun b!79201 () Bool)

(assert (=> b!79201 (= e!51738 #b00000000000000000000000000000000)))

(declare-fun b!79202 () Bool)

(assert (=> b!79202 (= e!51738 e!51737)))

(declare-fun c!12239 () Bool)

(assert (=> b!79202 (= c!12239 (validKeyInArray!0 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!79203 () Bool)

(assert (=> b!79203 (= e!51737 call!7291)))

(assert (= (and d!19023 c!12240) b!79201))

(assert (= (and d!19023 (not c!12240)) b!79202))

(assert (= (and b!79202 c!12239) b!79200))

(assert (= (and b!79202 (not c!12239)) b!79203))

(assert (= (or b!79200 b!79203) bm!7288))

(declare-fun m!79935 () Bool)

(assert (=> bm!7288 m!79935))

(declare-fun m!79937 () Bool)

(assert (=> b!79202 m!79937))

(assert (=> b!79202 m!79937))

(declare-fun m!79939 () Bool)

(assert (=> b!79202 m!79939))

(assert (=> d!18499 d!19023))

(declare-fun bm!7289 () Bool)

(declare-fun call!7292 () (_ BitVec 32))

(assert (=> bm!7289 (= call!7292 (arrayCountValidKeys!0 lt!36224 (bvadd (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000001) (bvadd (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000001)))))

(declare-fun lt!36688 () (_ BitVec 32))

(declare-fun d!19025 () Bool)

(assert (=> d!19025 (and (bvsge lt!36688 #b00000000000000000000000000000000) (bvsle lt!36688 (bvsub (size!2124 lt!36224) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)))))))

(declare-fun e!51740 () (_ BitVec 32))

(assert (=> d!19025 (= lt!36688 e!51740)))

(declare-fun c!12242 () Bool)

(assert (=> d!19025 (= c!12242 (bvsge (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (bvadd (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000001)))))

(assert (=> d!19025 (and (bvsle (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (bvadd (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000001)) (bvsge (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000001) (size!2124 lt!36224)))))

(assert (=> d!19025 (= (arrayCountValidKeys!0 lt!36224 (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (bvadd (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000001)) lt!36688)))

(declare-fun b!79204 () Bool)

(declare-fun e!51739 () (_ BitVec 32))

(assert (=> b!79204 (= e!51739 (bvadd #b00000000000000000000000000000001 call!7292))))

(declare-fun b!79205 () Bool)

(assert (=> b!79205 (= e!51740 #b00000000000000000000000000000000)))

(declare-fun b!79206 () Bool)

(assert (=> b!79206 (= e!51740 e!51739)))

(declare-fun c!12241 () Bool)

(assert (=> b!79206 (= c!12241 (validKeyInArray!0 (select (arr!1882 lt!36224) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)))))))

(declare-fun b!79207 () Bool)

(assert (=> b!79207 (= e!51739 call!7292)))

(assert (= (and d!19025 c!12242) b!79205))

(assert (= (and d!19025 (not c!12242)) b!79206))

(assert (= (and b!79206 c!12241) b!79204))

(assert (= (and b!79206 (not c!12241)) b!79207))

(assert (= (or b!79204 b!79207) bm!7289))

(declare-fun m!79941 () Bool)

(assert (=> bm!7289 m!79941))

(assert (=> b!79206 m!79923))

(assert (=> b!79206 m!79923))

(assert (=> b!79206 m!79925))

(assert (=> d!18499 d!19025))

(declare-fun bm!7290 () Bool)

(declare-fun call!7293 () Bool)

(declare-fun c!12243 () Bool)

(assert (=> bm!7290 (= call!7293 (arrayNoDuplicates!0 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (bvadd lt!36225 #b00000000000000000000000000000001) (ite c!12243 (Cons!1506 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) lt!36225) lt!36240) lt!36240)))))

(declare-fun e!51744 () Bool)

(declare-fun b!79208 () Bool)

(assert (=> b!79208 (= e!51744 (contains!741 lt!36240 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) lt!36225)))))

(declare-fun d!19027 () Bool)

(declare-fun res!41424 () Bool)

(declare-fun e!51743 () Bool)

(assert (=> d!19027 (=> res!41424 e!51743)))

(assert (=> d!19027 (= res!41424 (bvsge lt!36225 (size!2124 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))))

(assert (=> d!19027 (= (arrayNoDuplicates!0 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) lt!36225 lt!36240) e!51743)))

(declare-fun b!79209 () Bool)

(declare-fun e!51742 () Bool)

(declare-fun e!51741 () Bool)

(assert (=> b!79209 (= e!51742 e!51741)))

(assert (=> b!79209 (= c!12243 (validKeyInArray!0 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) lt!36225)))))

(declare-fun b!79210 () Bool)

(assert (=> b!79210 (= e!51741 call!7293)))

(declare-fun b!79211 () Bool)

(assert (=> b!79211 (= e!51741 call!7293)))

(declare-fun b!79212 () Bool)

(assert (=> b!79212 (= e!51743 e!51742)))

(declare-fun res!41423 () Bool)

(assert (=> b!79212 (=> (not res!41423) (not e!51742))))

(assert (=> b!79212 (= res!41423 (not e!51744))))

(declare-fun res!41422 () Bool)

(assert (=> b!79212 (=> (not res!41422) (not e!51744))))

(assert (=> b!79212 (= res!41422 (validKeyInArray!0 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) lt!36225)))))

(assert (= (and d!19027 (not res!41424)) b!79212))

(assert (= (and b!79212 res!41422) b!79208))

(assert (= (and b!79212 res!41423) b!79209))

(assert (= (and b!79209 c!12243) b!79211))

(assert (= (and b!79209 (not c!12243)) b!79210))

(assert (= (or b!79211 b!79210) bm!7290))

(declare-fun m!79943 () Bool)

(assert (=> bm!7290 m!79943))

(declare-fun m!79945 () Bool)

(assert (=> bm!7290 m!79945))

(assert (=> b!79208 m!79943))

(assert (=> b!79208 m!79943))

(declare-fun m!79947 () Bool)

(assert (=> b!79208 m!79947))

(assert (=> b!79209 m!79943))

(assert (=> b!79209 m!79943))

(declare-fun m!79949 () Bool)

(assert (=> b!79209 m!79949))

(assert (=> b!79212 m!79943))

(assert (=> b!79212 m!79943))

(assert (=> b!79212 m!79949))

(assert (=> d!18499 d!19027))

(declare-fun d!19029 () Bool)

(declare-fun e!51745 () Bool)

(assert (=> d!19029 e!51745))

(declare-fun res!41425 () Bool)

(assert (=> d!19029 (=> (not res!41425) (not e!51745))))

(assert (=> d!19029 (= res!41425 (and (bvsge (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000000) (bvslt (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (size!2124 lt!36223))))))

(declare-fun lt!36689 () Unit!2242)

(assert (=> d!19029 (= lt!36689 (choose!464 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (defaultEntry!2271 newMap!16)))))

(assert (=> d!19029 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19029 (= (lemmaValidKeyInArrayIsInListMap!87 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (defaultEntry!2271 newMap!16)) lt!36689)))

(declare-fun b!79213 () Bool)

(assert (=> b!79213 (= e!51745 (contains!739 (getCurrentListMap!421 lt!36223 lt!36239 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1882 lt!36223) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)))))))

(assert (= (and d!19029 res!41425) b!79213))

(declare-fun m!79951 () Bool)

(assert (=> d!19029 m!79951))

(assert (=> d!19029 m!77977))

(assert (=> b!79213 m!78353))

(declare-fun m!79953 () Bool)

(assert (=> b!79213 m!79953))

(assert (=> b!79213 m!78353))

(assert (=> b!79213 m!79953))

(declare-fun m!79955 () Bool)

(assert (=> b!79213 m!79955))

(assert (=> d!18499 d!19029))

(assert (=> d!18499 d!18483))

(assert (=> d!18499 d!18409))

(declare-fun lt!36704 () ListLongMap!1433)

(declare-fun b!79214 () Bool)

(declare-fun e!51756 () Bool)

(assert (=> b!79214 (= e!51756 (= (apply!79 lt!36704 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79214 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))))))

(assert (=> b!79214 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))))

(declare-fun b!79215 () Bool)

(declare-fun c!12245 () Bool)

(assert (=> b!79215 (= c!12245 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!51755 () ListLongMap!1433)

(declare-fun e!51748 () ListLongMap!1433)

(assert (=> b!79215 (= e!51755 e!51748)))

(declare-fun b!79216 () Bool)

(declare-fun e!51754 () Bool)

(assert (=> b!79216 (= e!51754 (validKeyInArray!0 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!79217 () Bool)

(declare-fun e!51753 () Unit!2242)

(declare-fun lt!36707 () Unit!2242)

(assert (=> b!79217 (= e!51753 lt!36707)))

(declare-fun lt!36694 () ListLongMap!1433)

(assert (=> b!79217 (= lt!36694 (getCurrentListMapNoExtraKeys!67 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36690 () (_ BitVec 64))

(assert (=> b!79217 (= lt!36690 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36701 () (_ BitVec 64))

(assert (=> b!79217 (= lt!36701 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36695 () Unit!2242)

(assert (=> b!79217 (= lt!36695 (addStillContains!55 lt!36694 lt!36690 (zeroValue!2169 newMap!16) lt!36701))))

(assert (=> b!79217 (contains!739 (+!103 lt!36694 (tuple2!2177 lt!36690 (zeroValue!2169 newMap!16))) lt!36701)))

(declare-fun lt!36692 () Unit!2242)

(assert (=> b!79217 (= lt!36692 lt!36695)))

(declare-fun lt!36693 () ListLongMap!1433)

(assert (=> b!79217 (= lt!36693 (getCurrentListMapNoExtraKeys!67 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36702 () (_ BitVec 64))

(assert (=> b!79217 (= lt!36702 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36699 () (_ BitVec 64))

(assert (=> b!79217 (= lt!36699 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36700 () Unit!2242)

(assert (=> b!79217 (= lt!36700 (addApplyDifferent!55 lt!36693 lt!36702 (minValue!2169 newMap!16) lt!36699))))

(assert (=> b!79217 (= (apply!79 (+!103 lt!36693 (tuple2!2177 lt!36702 (minValue!2169 newMap!16))) lt!36699) (apply!79 lt!36693 lt!36699))))

(declare-fun lt!36691 () Unit!2242)

(assert (=> b!79217 (= lt!36691 lt!36700)))

(declare-fun lt!36698 () ListLongMap!1433)

(assert (=> b!79217 (= lt!36698 (getCurrentListMapNoExtraKeys!67 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36711 () (_ BitVec 64))

(assert (=> b!79217 (= lt!36711 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36709 () (_ BitVec 64))

(assert (=> b!79217 (= lt!36709 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36710 () Unit!2242)

(assert (=> b!79217 (= lt!36710 (addApplyDifferent!55 lt!36698 lt!36711 (zeroValue!2169 newMap!16) lt!36709))))

(assert (=> b!79217 (= (apply!79 (+!103 lt!36698 (tuple2!2177 lt!36711 (zeroValue!2169 newMap!16))) lt!36709) (apply!79 lt!36698 lt!36709))))

(declare-fun lt!36703 () Unit!2242)

(assert (=> b!79217 (= lt!36703 lt!36710)))

(declare-fun lt!36705 () ListLongMap!1433)

(assert (=> b!79217 (= lt!36705 (getCurrentListMapNoExtraKeys!67 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36706 () (_ BitVec 64))

(assert (=> b!79217 (= lt!36706 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36708 () (_ BitVec 64))

(assert (=> b!79217 (= lt!36708 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!79217 (= lt!36707 (addApplyDifferent!55 lt!36705 lt!36706 (minValue!2169 newMap!16) lt!36708))))

(assert (=> b!79217 (= (apply!79 (+!103 lt!36705 (tuple2!2177 lt!36706 (minValue!2169 newMap!16))) lt!36708) (apply!79 lt!36705 lt!36708))))

(declare-fun b!79219 () Bool)

(declare-fun e!51747 () Bool)

(declare-fun e!51749 () Bool)

(assert (=> b!79219 (= e!51747 e!51749)))

(declare-fun res!41428 () Bool)

(declare-fun call!7299 () Bool)

(assert (=> b!79219 (= res!41428 call!7299)))

(assert (=> b!79219 (=> (not res!41428) (not e!51749))))

(declare-fun bm!7291 () Bool)

(declare-fun call!7294 () ListLongMap!1433)

(declare-fun call!7298 () ListLongMap!1433)

(assert (=> bm!7291 (= call!7294 call!7298)))

(declare-fun b!79220 () Bool)

(assert (=> b!79220 (= e!51747 (not call!7299))))

(declare-fun b!79221 () Bool)

(declare-fun e!51752 () ListLongMap!1433)

(assert (=> b!79221 (= e!51752 e!51755)))

(declare-fun c!12246 () Bool)

(assert (=> b!79221 (= c!12246 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79222 () Bool)

(declare-fun call!7295 () ListLongMap!1433)

(assert (=> b!79222 (= e!51748 call!7295)))

(declare-fun b!79223 () Bool)

(declare-fun call!7297 () ListLongMap!1433)

(assert (=> b!79223 (= e!51748 call!7297)))

(declare-fun b!79224 () Bool)

(declare-fun res!41433 () Bool)

(declare-fun e!51758 () Bool)

(assert (=> b!79224 (=> (not res!41433) (not e!51758))))

(declare-fun e!51746 () Bool)

(assert (=> b!79224 (= res!41433 e!51746)))

(declare-fun c!12244 () Bool)

(assert (=> b!79224 (= c!12244 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7292 () Bool)

(declare-fun call!7296 () Bool)

(assert (=> bm!7292 (= call!7296 (contains!739 lt!36704 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7293 () Bool)

(assert (=> bm!7293 (= call!7299 (contains!739 lt!36704 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7294 () Bool)

(assert (=> bm!7294 (= call!7298 (getCurrentListMapNoExtraKeys!67 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!79225 () Bool)

(declare-fun e!51757 () Bool)

(assert (=> b!79225 (= e!51757 (validKeyInArray!0 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7295 () Bool)

(assert (=> bm!7295 (= call!7297 call!7294)))

(declare-fun b!79226 () Bool)

(declare-fun e!51751 () Bool)

(assert (=> b!79226 (= e!51751 (= (apply!79 lt!36704 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!79227 () Bool)

(declare-fun res!41434 () Bool)

(assert (=> b!79227 (=> (not res!41434) (not e!51758))))

(declare-fun e!51750 () Bool)

(assert (=> b!79227 (= res!41434 e!51750)))

(declare-fun res!41431 () Bool)

(assert (=> b!79227 (=> res!41431 e!51750)))

(assert (=> b!79227 (= res!41431 (not e!51757))))

(declare-fun res!41427 () Bool)

(assert (=> b!79227 (=> (not res!41427) (not e!51757))))

(assert (=> b!79227 (= res!41427 (bvslt #b00000000000000000000000000000000 (size!2124 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))))

(declare-fun b!79218 () Bool)

(declare-fun call!7300 () ListLongMap!1433)

(assert (=> b!79218 (= e!51752 (+!103 call!7300 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun d!19031 () Bool)

(assert (=> d!19031 e!51758))

(declare-fun res!41430 () Bool)

(assert (=> d!19031 (=> (not res!41430) (not e!51758))))

(assert (=> d!19031 (= res!41430 (or (bvsge #b00000000000000000000000000000000 (size!2124 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))))))

(declare-fun lt!36696 () ListLongMap!1433)

(assert (=> d!19031 (= lt!36704 lt!36696)))

(declare-fun lt!36697 () Unit!2242)

(assert (=> d!19031 (= lt!36697 e!51753)))

(declare-fun c!12247 () Bool)

(assert (=> d!19031 (= c!12247 e!51754)))

(declare-fun res!41432 () Bool)

(assert (=> d!19031 (=> (not res!41432) (not e!51754))))

(assert (=> d!19031 (= res!41432 (bvslt #b00000000000000000000000000000000 (size!2124 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))))

(assert (=> d!19031 (= lt!36696 e!51752)))

(declare-fun c!12248 () Bool)

(assert (=> d!19031 (= c!12248 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19031 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19031 (= (getCurrentListMap!421 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36704)))

(declare-fun b!79228 () Bool)

(assert (=> b!79228 (= e!51746 (not call!7296))))

(declare-fun bm!7296 () Bool)

(assert (=> bm!7296 (= call!7300 (+!103 (ite c!12248 call!7298 (ite c!12246 call!7294 call!7297)) (ite (or c!12248 c!12246) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!79229 () Bool)

(assert (=> b!79229 (= e!51755 call!7295)))

(declare-fun bm!7297 () Bool)

(assert (=> bm!7297 (= call!7295 call!7300)))

(declare-fun b!79230 () Bool)

(assert (=> b!79230 (= e!51750 e!51756)))

(declare-fun res!41429 () Bool)

(assert (=> b!79230 (=> (not res!41429) (not e!51756))))

(assert (=> b!79230 (= res!41429 (contains!739 lt!36704 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!79230 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))))

(declare-fun b!79231 () Bool)

(assert (=> b!79231 (= e!51746 e!51751)))

(declare-fun res!41426 () Bool)

(assert (=> b!79231 (= res!41426 call!7296)))

(assert (=> b!79231 (=> (not res!41426) (not e!51751))))

(declare-fun b!79232 () Bool)

(assert (=> b!79232 (= e!51758 e!51747)))

(declare-fun c!12249 () Bool)

(assert (=> b!79232 (= c!12249 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79233 () Bool)

(declare-fun Unit!2297 () Unit!2242)

(assert (=> b!79233 (= e!51753 Unit!2297)))

(declare-fun b!79234 () Bool)

(assert (=> b!79234 (= e!51749 (= (apply!79 lt!36704 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(assert (= (and d!19031 c!12248) b!79218))

(assert (= (and d!19031 (not c!12248)) b!79221))

(assert (= (and b!79221 c!12246) b!79229))

(assert (= (and b!79221 (not c!12246)) b!79215))

(assert (= (and b!79215 c!12245) b!79222))

(assert (= (and b!79215 (not c!12245)) b!79223))

(assert (= (or b!79222 b!79223) bm!7295))

(assert (= (or b!79229 bm!7295) bm!7291))

(assert (= (or b!79229 b!79222) bm!7297))

(assert (= (or b!79218 bm!7291) bm!7294))

(assert (= (or b!79218 bm!7297) bm!7296))

(assert (= (and d!19031 res!41432) b!79216))

(assert (= (and d!19031 c!12247) b!79217))

(assert (= (and d!19031 (not c!12247)) b!79233))

(assert (= (and d!19031 res!41430) b!79227))

(assert (= (and b!79227 res!41427) b!79225))

(assert (= (and b!79227 (not res!41431)) b!79230))

(assert (= (and b!79230 res!41429) b!79214))

(assert (= (and b!79227 res!41434) b!79224))

(assert (= (and b!79224 c!12244) b!79231))

(assert (= (and b!79224 (not c!12244)) b!79228))

(assert (= (and b!79231 res!41426) b!79226))

(assert (= (or b!79231 b!79228) bm!7292))

(assert (= (and b!79224 res!41433) b!79232))

(assert (= (and b!79232 c!12249) b!79219))

(assert (= (and b!79232 (not c!12249)) b!79220))

(assert (= (and b!79219 res!41428) b!79234))

(assert (= (or b!79219 b!79220) bm!7293))

(declare-fun b_lambda!3527 () Bool)

(assert (=> (not b_lambda!3527) (not b!79214)))

(assert (=> b!79214 t!5160))

(declare-fun b_and!4853 () Bool)

(assert (= b_and!4849 (and (=> t!5160 result!2821) b_and!4853)))

(assert (=> b!79214 t!5162))

(declare-fun b_and!4855 () Bool)

(assert (= b_and!4851 (and (=> t!5162 result!2823) b_and!4855)))

(declare-fun m!79957 () Bool)

(assert (=> b!79226 m!79957))

(declare-fun m!79959 () Bool)

(assert (=> b!79217 m!79959))

(declare-fun m!79961 () Bool)

(assert (=> b!79217 m!79961))

(declare-fun m!79963 () Bool)

(assert (=> b!79217 m!79963))

(declare-fun m!79965 () Bool)

(assert (=> b!79217 m!79965))

(declare-fun m!79967 () Bool)

(assert (=> b!79217 m!79967))

(declare-fun m!79969 () Bool)

(assert (=> b!79217 m!79969))

(declare-fun m!79971 () Bool)

(assert (=> b!79217 m!79971))

(declare-fun m!79973 () Bool)

(assert (=> b!79217 m!79973))

(declare-fun m!79975 () Bool)

(assert (=> b!79217 m!79975))

(declare-fun m!79977 () Bool)

(assert (=> b!79217 m!79977))

(declare-fun m!79979 () Bool)

(assert (=> b!79217 m!79979))

(declare-fun m!79981 () Bool)

(assert (=> b!79217 m!79981))

(declare-fun m!79983 () Bool)

(assert (=> b!79217 m!79983))

(assert (=> b!79217 m!79979))

(assert (=> b!79217 m!79977))

(declare-fun m!79985 () Bool)

(assert (=> b!79217 m!79985))

(assert (=> b!79217 m!79937))

(assert (=> b!79217 m!79963))

(declare-fun m!79987 () Bool)

(assert (=> b!79217 m!79987))

(assert (=> b!79217 m!79973))

(declare-fun m!79989 () Bool)

(assert (=> b!79217 m!79989))

(declare-fun m!79991 () Bool)

(assert (=> bm!7293 m!79991))

(assert (=> bm!7294 m!79975))

(declare-fun m!79993 () Bool)

(assert (=> b!79218 m!79993))

(assert (=> b!79216 m!79937))

(assert (=> b!79216 m!79937))

(assert (=> b!79216 m!79939))

(assert (=> d!19031 m!77977))

(declare-fun m!79995 () Bool)

(assert (=> bm!7292 m!79995))

(declare-fun m!79997 () Bool)

(assert (=> bm!7296 m!79997))

(assert (=> b!79214 m!77983))

(declare-fun m!79999 () Bool)

(assert (=> b!79214 m!79999))

(assert (=> b!79214 m!77983))

(declare-fun m!80001 () Bool)

(assert (=> b!79214 m!80001))

(assert (=> b!79214 m!79937))

(declare-fun m!80003 () Bool)

(assert (=> b!79214 m!80003))

(assert (=> b!79214 m!79999))

(assert (=> b!79214 m!79937))

(assert (=> b!79225 m!79937))

(assert (=> b!79225 m!79937))

(assert (=> b!79225 m!79939))

(declare-fun m!80005 () Bool)

(assert (=> b!79234 m!80005))

(assert (=> b!79230 m!79937))

(assert (=> b!79230 m!79937))

(declare-fun m!80007 () Bool)

(assert (=> b!79230 m!80007))

(assert (=> d!18499 d!19031))

(assert (=> d!18499 d!18549))

(declare-fun d!19033 () Bool)

(declare-fun e!51759 () Bool)

(assert (=> d!19033 e!51759))

(declare-fun res!41435 () Bool)

(assert (=> d!19033 (=> (not res!41435) (not e!51759))))

(declare-fun lt!36715 () ListLongMap!1433)

(assert (=> d!19033 (= res!41435 (contains!739 lt!36715 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36713 () List!1511)

(assert (=> d!19033 (= lt!36715 (ListLongMap!1434 lt!36713))))

(declare-fun lt!36712 () Unit!2242)

(declare-fun lt!36714 () Unit!2242)

(assert (=> d!19033 (= lt!36712 lt!36714)))

(assert (=> d!19033 (= (getValueByKey!135 lt!36713 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!19033 (= lt!36714 (lemmaContainsTupThenGetReturnValue!55 lt!36713 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!19033 (= lt!36713 (insertStrictlySorted!58 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!19033 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36715)))

(declare-fun b!79235 () Bool)

(declare-fun res!41436 () Bool)

(assert (=> b!79235 (=> (not res!41436) (not e!51759))))

(assert (=> b!79235 (= res!41436 (= (getValueByKey!135 (toList!732 lt!36715) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!79236 () Bool)

(assert (=> b!79236 (= e!51759 (contains!740 (toList!732 lt!36715) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!19033 res!41435) b!79235))

(assert (= (and b!79235 res!41436) b!79236))

(declare-fun m!80009 () Bool)

(assert (=> d!19033 m!80009))

(declare-fun m!80011 () Bool)

(assert (=> d!19033 m!80011))

(declare-fun m!80013 () Bool)

(assert (=> d!19033 m!80013))

(declare-fun m!80015 () Bool)

(assert (=> d!19033 m!80015))

(declare-fun m!80017 () Bool)

(assert (=> b!79235 m!80017))

(declare-fun m!80019 () Bool)

(assert (=> b!79236 m!80019))

(assert (=> d!18499 d!19033))

(declare-fun b!79237 () Bool)

(declare-fun e!51761 () Bool)

(declare-fun call!7301 () Bool)

(assert (=> b!79237 (= e!51761 call!7301)))

(declare-fun d!19035 () Bool)

(declare-fun res!41438 () Bool)

(declare-fun e!51762 () Bool)

(assert (=> d!19035 (=> res!41438 e!51762)))

(assert (=> d!19035 (= res!41438 (bvsge #b00000000000000000000000000000000 (size!2124 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))))))))

(assert (=> d!19035 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (mask!6266 newMap!16)) e!51762)))

(declare-fun b!79238 () Bool)

(declare-fun e!51760 () Bool)

(assert (=> b!79238 (= e!51762 e!51760)))

(declare-fun c!12250 () Bool)

(assert (=> b!79238 (= c!12250 (validKeyInArray!0 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!79239 () Bool)

(assert (=> b!79239 (= e!51760 call!7301)))

(declare-fun b!79240 () Bool)

(assert (=> b!79240 (= e!51760 e!51761)))

(declare-fun lt!36717 () (_ BitVec 64))

(assert (=> b!79240 (= lt!36717 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36718 () Unit!2242)

(assert (=> b!79240 (= lt!36718 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) lt!36717 #b00000000000000000000000000000000))))

(assert (=> b!79240 (arrayContainsKey!0 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) lt!36717 #b00000000000000000000000000000000)))

(declare-fun lt!36716 () Unit!2242)

(assert (=> b!79240 (= lt!36716 lt!36718)))

(declare-fun res!41437 () Bool)

(assert (=> b!79240 (= res!41437 (= (seekEntryOrOpen!0 (select (arr!1882 (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16)))) #b00000000000000000000000000000000) (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (mask!6266 newMap!16)) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!79240 (=> (not res!41437) (not e!51761))))

(declare-fun bm!7298 () Bool)

(assert (=> bm!7298 (= call!7301 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3952 (store (arr!1882 (_keys!3930 newMap!16)) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (size!2124 (_keys!3930 newMap!16))) (mask!6266 newMap!16)))))

(assert (= (and d!19035 (not res!41438)) b!79238))

(assert (= (and b!79238 c!12250) b!79240))

(assert (= (and b!79238 (not c!12250)) b!79239))

(assert (= (and b!79240 res!41437) b!79237))

(assert (= (or b!79237 b!79239) bm!7298))

(assert (=> b!79238 m!79937))

(assert (=> b!79238 m!79937))

(assert (=> b!79238 m!79939))

(assert (=> b!79240 m!79937))

(declare-fun m!80021 () Bool)

(assert (=> b!79240 m!80021))

(declare-fun m!80023 () Bool)

(assert (=> b!79240 m!80023))

(assert (=> b!79240 m!79937))

(declare-fun m!80025 () Bool)

(assert (=> b!79240 m!80025))

(declare-fun m!80027 () Bool)

(assert (=> bm!7298 m!80027))

(assert (=> d!18499 d!19035))

(declare-fun d!19037 () Bool)

(assert (=> d!19037 (arrayContainsKey!0 lt!36230 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!36721 () Unit!2242)

(declare-fun choose!13 (array!3951 (_ BitVec 64) (_ BitVec 32)) Unit!2242)

(assert (=> d!19037 (= lt!36721 (choose!13 lt!36230 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))))))

(assert (=> d!19037 (bvsge (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006)) #b00000000000000000000000000000000)))

(assert (=> d!19037 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!36230 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (ite c!11929 (index!3109 lt!36006) (index!3106 lt!36006))) lt!36721)))

(declare-fun bs!3352 () Bool)

(assert (= bs!3352 d!19037))

(assert (=> bs!3352 m!77463))

(assert (=> bs!3352 m!78369))

(assert (=> bs!3352 m!77463))

(declare-fun m!80029 () Bool)

(assert (=> bs!3352 m!80029))

(assert (=> d!18499 d!19037))

(declare-fun d!19039 () Bool)

(assert (=> d!19039 (= (apply!79 lt!36029 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1180 (getValueByKey!135 (toList!732 lt!36029) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3353 () Bool)

(assert (= bs!3353 d!19039))

(declare-fun m!80031 () Bool)

(assert (=> bs!3353 m!80031))

(assert (=> bs!3353 m!80031))

(declare-fun m!80033 () Bool)

(assert (=> bs!3353 m!80033))

(assert (=> b!78096 d!19039))

(declare-fun d!19041 () Bool)

(declare-fun e!51763 () Bool)

(assert (=> d!19041 e!51763))

(declare-fun res!41439 () Bool)

(assert (=> d!19041 (=> (not res!41439) (not e!51763))))

(declare-fun lt!36725 () ListLongMap!1433)

(assert (=> d!19041 (= res!41439 (contains!739 lt!36725 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun lt!36723 () List!1511)

(assert (=> d!19041 (= lt!36725 (ListLongMap!1434 lt!36723))))

(declare-fun lt!36722 () Unit!2242)

(declare-fun lt!36724 () Unit!2242)

(assert (=> d!19041 (= lt!36722 lt!36724)))

(assert (=> d!19041 (= (getValueByKey!135 lt!36723 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!19041 (= lt!36724 (lemmaContainsTupThenGetReturnValue!55 lt!36723 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!19041 (= lt!36723 (insertStrictlySorted!58 (toList!732 call!7222) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!19041 (= (+!103 call!7222 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) lt!36725)))

(declare-fun b!79241 () Bool)

(declare-fun res!41440 () Bool)

(assert (=> b!79241 (=> (not res!41440) (not e!51763))))

(assert (=> b!79241 (= res!41440 (= (getValueByKey!135 (toList!732 lt!36725) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(declare-fun b!79242 () Bool)

(assert (=> b!79242 (= e!51763 (contains!740 (toList!732 lt!36725) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(assert (= (and d!19041 res!41439) b!79241))

(assert (= (and b!79241 res!41440) b!79242))

(declare-fun m!80035 () Bool)

(assert (=> d!19041 m!80035))

(declare-fun m!80037 () Bool)

(assert (=> d!19041 m!80037))

(declare-fun m!80039 () Bool)

(assert (=> d!19041 m!80039))

(declare-fun m!80041 () Bool)

(assert (=> d!19041 m!80041))

(declare-fun m!80043 () Bool)

(assert (=> b!79241 m!80043))

(declare-fun m!80045 () Bool)

(assert (=> b!79242 m!80045))

(assert (=> b!78516 d!19041))

(declare-fun d!19043 () Bool)

(declare-fun e!51765 () Bool)

(assert (=> d!19043 e!51765))

(declare-fun res!41441 () Bool)

(assert (=> d!19043 (=> res!41441 e!51765)))

(declare-fun lt!36728 () Bool)

(assert (=> d!19043 (= res!41441 (not lt!36728))))

(declare-fun lt!36729 () Bool)

(assert (=> d!19043 (= lt!36728 lt!36729)))

(declare-fun lt!36726 () Unit!2242)

(declare-fun e!51764 () Unit!2242)

(assert (=> d!19043 (= lt!36726 e!51764)))

(declare-fun c!12251 () Bool)

(assert (=> d!19043 (= c!12251 lt!36729)))

(assert (=> d!19043 (= lt!36729 (containsKey!139 (toList!732 lt!36137) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19043 (= (contains!739 lt!36137 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36728)))

(declare-fun b!79243 () Bool)

(declare-fun lt!36727 () Unit!2242)

(assert (=> b!79243 (= e!51764 lt!36727)))

(assert (=> b!79243 (= lt!36727 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36137) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79243 (isDefined!89 (getValueByKey!135 (toList!732 lt!36137) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79244 () Bool)

(declare-fun Unit!2298 () Unit!2242)

(assert (=> b!79244 (= e!51764 Unit!2298)))

(declare-fun b!79245 () Bool)

(assert (=> b!79245 (= e!51765 (isDefined!89 (getValueByKey!135 (toList!732 lt!36137) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19043 c!12251) b!79243))

(assert (= (and d!19043 (not c!12251)) b!79244))

(assert (= (and d!19043 (not res!41441)) b!79245))

(declare-fun m!80047 () Bool)

(assert (=> d!19043 m!80047))

(declare-fun m!80049 () Bool)

(assert (=> b!79243 m!80049))

(declare-fun m!80051 () Bool)

(assert (=> b!79243 m!80051))

(assert (=> b!79243 m!80051))

(declare-fun m!80053 () Bool)

(assert (=> b!79243 m!80053))

(assert (=> b!79245 m!80051))

(assert (=> b!79245 m!80051))

(assert (=> b!79245 m!80053))

(assert (=> bm!7177 d!19043))

(declare-fun d!19045 () Bool)

(assert (=> d!19045 (= ($colon$colon!68 e!51339 (ite c!12072 (h!2095 (toList!732 lt!35657)) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670)))) (Cons!1507 (ite c!12072 (h!2095 (toList!732 lt!35657)) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))) e!51339))))

(assert (=> bm!7221 d!19045))

(declare-fun d!19047 () Bool)

(declare-fun e!51767 () Bool)

(assert (=> d!19047 e!51767))

(declare-fun res!41442 () Bool)

(assert (=> d!19047 (=> res!41442 e!51767)))

(declare-fun lt!36732 () Bool)

(assert (=> d!19047 (= res!41442 (not lt!36732))))

(declare-fun lt!36733 () Bool)

(assert (=> d!19047 (= lt!36732 lt!36733)))

(declare-fun lt!36730 () Unit!2242)

(declare-fun e!51766 () Unit!2242)

(assert (=> d!19047 (= lt!36730 e!51766)))

(declare-fun c!12252 () Bool)

(assert (=> d!19047 (= c!12252 lt!36733)))

(assert (=> d!19047 (= lt!36733 (containsKey!139 (toList!732 lt!36307) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!19047 (= (contains!739 lt!36307 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36732)))

(declare-fun b!79246 () Bool)

(declare-fun lt!36731 () Unit!2242)

(assert (=> b!79246 (= e!51766 lt!36731)))

(assert (=> b!79246 (= lt!36731 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36307) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> b!79246 (isDefined!89 (getValueByKey!135 (toList!732 lt!36307) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!79247 () Bool)

(declare-fun Unit!2299 () Unit!2242)

(assert (=> b!79247 (= e!51766 Unit!2299)))

(declare-fun b!79248 () Bool)

(assert (=> b!79248 (= e!51767 (isDefined!89 (getValueByKey!135 (toList!732 lt!36307) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!19047 c!12252) b!79246))

(assert (= (and d!19047 (not c!12252)) b!79247))

(assert (= (and d!19047 (not res!41442)) b!79248))

(declare-fun m!80055 () Bool)

(assert (=> d!19047 m!80055))

(declare-fun m!80057 () Bool)

(assert (=> b!79246 m!80057))

(assert (=> b!79246 m!78591))

(assert (=> b!79246 m!78591))

(declare-fun m!80059 () Bool)

(assert (=> b!79246 m!80059))

(assert (=> b!79248 m!78591))

(assert (=> b!79248 m!78591))

(assert (=> b!79248 m!80059))

(assert (=> d!18563 d!19047))

(declare-fun b!79249 () Bool)

(declare-fun e!51768 () Option!141)

(assert (=> b!79249 (= e!51768 (Some!140 (_2!1099 (h!2095 lt!36305))))))

(declare-fun e!51769 () Option!141)

(declare-fun b!79251 () Bool)

(assert (=> b!79251 (= e!51769 (getValueByKey!135 (t!5148 lt!36305) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun d!19049 () Bool)

(declare-fun c!12253 () Bool)

(assert (=> d!19049 (= c!12253 (and ((_ is Cons!1507) lt!36305) (= (_1!1099 (h!2095 lt!36305)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!19049 (= (getValueByKey!135 lt!36305 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) e!51768)))

(declare-fun b!79252 () Bool)

(assert (=> b!79252 (= e!51769 None!139)))

(declare-fun b!79250 () Bool)

(assert (=> b!79250 (= e!51768 e!51769)))

(declare-fun c!12254 () Bool)

(assert (=> b!79250 (= c!12254 (and ((_ is Cons!1507) lt!36305) (not (= (_1!1099 (h!2095 lt!36305)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!19049 c!12253) b!79249))

(assert (= (and d!19049 (not c!12253)) b!79250))

(assert (= (and b!79250 c!12254) b!79251))

(assert (= (and b!79250 (not c!12254)) b!79252))

(declare-fun m!80061 () Bool)

(assert (=> b!79251 m!80061))

(assert (=> d!18563 d!19049))

(declare-fun d!19051 () Bool)

(assert (=> d!19051 (= (getValueByKey!135 lt!36305 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36734 () Unit!2242)

(assert (=> d!19051 (= lt!36734 (choose!462 lt!36305 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun e!51770 () Bool)

(assert (=> d!19051 e!51770))

(declare-fun res!41443 () Bool)

(assert (=> d!19051 (=> (not res!41443) (not e!51770))))

(assert (=> d!19051 (= res!41443 (isStrictlySorted!290 lt!36305))))

(assert (=> d!19051 (= (lemmaContainsTupThenGetReturnValue!55 lt!36305 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36734)))

(declare-fun b!79253 () Bool)

(declare-fun res!41444 () Bool)

(assert (=> b!79253 (=> (not res!41444) (not e!51770))))

(assert (=> b!79253 (= res!41444 (containsKey!139 lt!36305 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!79254 () Bool)

(assert (=> b!79254 (= e!51770 (contains!740 lt!36305 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!19051 res!41443) b!79253))

(assert (= (and b!79253 res!41444) b!79254))

(assert (=> d!19051 m!78585))

(declare-fun m!80063 () Bool)

(assert (=> d!19051 m!80063))

(declare-fun m!80065 () Bool)

(assert (=> d!19051 m!80065))

(declare-fun m!80067 () Bool)

(assert (=> b!79253 m!80067))

(declare-fun m!80069 () Bool)

(assert (=> b!79254 m!80069))

(assert (=> d!18563 d!19051))

(declare-fun b!79255 () Bool)

(declare-fun e!51772 () List!1511)

(declare-fun call!7302 () List!1511)

(assert (=> b!79255 (= e!51772 call!7302)))

(declare-fun b!79256 () Bool)

(declare-fun res!41446 () Bool)

(declare-fun e!51774 () Bool)

(assert (=> b!79256 (=> (not res!41446) (not e!51774))))

(declare-fun lt!36735 () List!1511)

(assert (=> b!79256 (= res!41446 (containsKey!139 lt!36735 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun bm!7299 () Bool)

(declare-fun e!51775 () List!1511)

(declare-fun c!12256 () Bool)

(declare-fun call!7303 () List!1511)

(assert (=> bm!7299 (= call!7303 ($colon$colon!68 e!51775 (ite c!12256 (h!2095 (toList!732 lt!35657)) (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(declare-fun c!12257 () Bool)

(assert (=> bm!7299 (= c!12257 c!12256)))

(declare-fun c!12255 () Bool)

(declare-fun c!12258 () Bool)

(declare-fun b!79257 () Bool)

(assert (=> b!79257 (= e!51775 (ite c!12255 (t!5148 (toList!732 lt!35657)) (ite c!12258 (Cons!1507 (h!2095 (toList!732 lt!35657)) (t!5148 (toList!732 lt!35657))) Nil!1508)))))

(declare-fun d!19053 () Bool)

(assert (=> d!19053 e!51774))

(declare-fun res!41445 () Bool)

(assert (=> d!19053 (=> (not res!41445) (not e!51774))))

(assert (=> d!19053 (= res!41445 (isStrictlySorted!290 lt!36735))))

(declare-fun e!51771 () List!1511)

(assert (=> d!19053 (= lt!36735 e!51771)))

(assert (=> d!19053 (= c!12256 (and ((_ is Cons!1507) (toList!732 lt!35657)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!19053 (isStrictlySorted!290 (toList!732 lt!35657))))

(assert (=> d!19053 (= (insertStrictlySorted!58 (toList!732 lt!35657) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36735)))

(declare-fun bm!7300 () Bool)

(declare-fun call!7304 () List!1511)

(assert (=> bm!7300 (= call!7304 call!7302)))

(declare-fun b!79258 () Bool)

(assert (=> b!79258 (= c!12258 (and ((_ is Cons!1507) (toList!732 lt!35657)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun e!51773 () List!1511)

(assert (=> b!79258 (= e!51772 e!51773)))

(declare-fun b!79259 () Bool)

(assert (=> b!79259 (= e!51773 call!7304)))

(declare-fun b!79260 () Bool)

(assert (=> b!79260 (= e!51771 e!51772)))

(assert (=> b!79260 (= c!12255 (and ((_ is Cons!1507) (toList!732 lt!35657)) (= (_1!1099 (h!2095 (toList!732 lt!35657))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!79261 () Bool)

(assert (=> b!79261 (= e!51773 call!7304)))

(declare-fun bm!7301 () Bool)

(assert (=> bm!7301 (= call!7302 call!7303)))

(declare-fun b!79262 () Bool)

(assert (=> b!79262 (= e!51775 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35657)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!79263 () Bool)

(assert (=> b!79263 (= e!51771 call!7303)))

(declare-fun b!79264 () Bool)

(assert (=> b!79264 (= e!51774 (contains!740 lt!36735 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!19053 c!12256) b!79263))

(assert (= (and d!19053 (not c!12256)) b!79260))

(assert (= (and b!79260 c!12255) b!79255))

(assert (= (and b!79260 (not c!12255)) b!79258))

(assert (= (and b!79258 c!12258) b!79261))

(assert (= (and b!79258 (not c!12258)) b!79259))

(assert (= (or b!79261 b!79259) bm!7300))

(assert (= (or b!79255 bm!7300) bm!7301))

(assert (= (or b!79263 bm!7301) bm!7299))

(assert (= (and bm!7299 c!12257) b!79262))

(assert (= (and bm!7299 (not c!12257)) b!79257))

(assert (= (and d!19053 res!41445) b!79256))

(assert (= (and b!79256 res!41446) b!79264))

(declare-fun m!80071 () Bool)

(assert (=> b!79262 m!80071))

(declare-fun m!80073 () Bool)

(assert (=> bm!7299 m!80073))

(declare-fun m!80075 () Bool)

(assert (=> b!79256 m!80075))

(declare-fun m!80077 () Bool)

(assert (=> b!79264 m!80077))

(declare-fun m!80079 () Bool)

(assert (=> d!19053 m!80079))

(assert (=> d!19053 m!78569))

(assert (=> d!18563 d!19053))

(declare-fun d!19055 () Bool)

(declare-fun lt!36736 () Bool)

(assert (=> d!19055 (= lt!36736 (select (content!83 lt!36060) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(declare-fun e!51776 () Bool)

(assert (=> d!19055 (= lt!36736 e!51776)))

(declare-fun res!41447 () Bool)

(assert (=> d!19055 (=> (not res!41447) (not e!51776))))

(assert (=> d!19055 (= res!41447 ((_ is Cons!1507) lt!36060))))

(assert (=> d!19055 (= (contains!740 lt!36060 (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))) lt!36736)))

(declare-fun b!79265 () Bool)

(declare-fun e!51777 () Bool)

(assert (=> b!79265 (= e!51776 e!51777)))

(declare-fun res!41448 () Bool)

(assert (=> b!79265 (=> res!41448 e!51777)))

(assert (=> b!79265 (= res!41448 (= (h!2095 lt!36060) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(declare-fun b!79266 () Bool)

(assert (=> b!79266 (= e!51777 (contains!740 (t!5148 lt!36060) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(assert (= (and d!19055 res!41447) b!79265))

(assert (= (and b!79265 (not res!41448)) b!79266))

(declare-fun m!80081 () Bool)

(assert (=> d!19055 m!80081))

(declare-fun m!80083 () Bool)

(assert (=> d!19055 m!80083))

(declare-fun m!80085 () Bool)

(assert (=> b!79266 m!80085))

(assert (=> b!78185 d!19055))

(declare-fun d!19057 () Bool)

(assert (=> d!19057 (= (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35896)) (v!2590 (getValueByKey!135 (toList!732 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35896)))))

(assert (=> d!18523 d!19057))

(declare-fun e!51778 () Option!141)

(declare-fun b!79267 () Bool)

(assert (=> b!79267 (= e!51778 (Some!140 (_2!1099 (h!2095 (toList!732 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))))

(declare-fun e!51779 () Option!141)

(declare-fun b!79269 () Bool)

(assert (=> b!79269 (= e!51779 (getValueByKey!135 (t!5148 (toList!732 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) lt!35896))))

(declare-fun d!19059 () Bool)

(declare-fun c!12259 () Bool)

(assert (=> d!19059 (= c!12259 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35896)))))

(assert (=> d!19059 (= (getValueByKey!135 (toList!732 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35896) e!51778)))

(declare-fun b!79270 () Bool)

(assert (=> b!79270 (= e!51779 None!139)))

(declare-fun b!79268 () Bool)

(assert (=> b!79268 (= e!51778 e!51779)))

(declare-fun c!12260 () Bool)

(assert (=> b!79268 (= c!12260 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (not (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35890 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35896))))))

(assert (= (and d!19059 c!12259) b!79267))

(assert (= (and d!19059 (not c!12259)) b!79268))

(assert (= (and b!79268 c!12260) b!79269))

(assert (= (and b!79268 (not c!12260)) b!79270))

(declare-fun m!80087 () Bool)

(assert (=> b!79269 m!80087))

(assert (=> d!18523 d!19059))

(declare-fun d!19061 () Bool)

(assert (=> d!19061 (= (inRange!0 (ite c!12011 (index!3107 lt!36232) (ite c!12009 (index!3106 lt!36235) (index!3109 lt!36235))) (mask!6266 newMap!16)) (and (bvsge (ite c!12011 (index!3107 lt!36232) (ite c!12009 (index!3106 lt!36235) (index!3109 lt!36235))) #b00000000000000000000000000000000) (bvslt (ite c!12011 (index!3107 lt!36232) (ite c!12009 (index!3106 lt!36235) (index!3109 lt!36235))) (bvadd (mask!6266 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7191 d!19061))

(declare-fun d!19063 () Bool)

(assert (=> d!19063 (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!36737 () Unit!2242)

(assert (=> d!19063 (= lt!36737 (choose!463 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51780 () Bool)

(assert (=> d!19063 e!51780))

(declare-fun res!41449 () Bool)

(assert (=> d!19063 (=> (not res!41449) (not e!51780))))

(assert (=> d!19063 (= res!41449 (isStrictlySorted!290 (toList!732 lt!35837)))))

(assert (=> d!19063 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000) lt!36737)))

(declare-fun b!79271 () Bool)

(assert (=> b!79271 (= e!51780 (containsKey!139 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19063 res!41449) b!79271))

(assert (=> d!19063 m!78829))

(assert (=> d!19063 m!78829))

(assert (=> d!19063 m!78831))

(declare-fun m!80089 () Bool)

(assert (=> d!19063 m!80089))

(assert (=> d!19063 m!79153))

(assert (=> b!79271 m!78825))

(assert (=> b!78591 d!19063))

(declare-fun d!19065 () Bool)

(assert (=> d!19065 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3354 () Bool)

(assert (= bs!3354 d!19065))

(assert (=> bs!3354 m!78829))

(declare-fun m!80091 () Bool)

(assert (=> bs!3354 m!80091))

(assert (=> b!78591 d!19065))

(declare-fun b!79272 () Bool)

(declare-fun e!51781 () Option!141)

(assert (=> b!79272 (= e!51781 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35837)))))))

(declare-fun b!79274 () Bool)

(declare-fun e!51782 () Option!141)

(assert (=> b!79274 (= e!51782 (getValueByKey!135 (t!5148 (toList!732 lt!35837)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!19067 () Bool)

(declare-fun c!12261 () Bool)

(assert (=> d!19067 (= c!12261 (and ((_ is Cons!1507) (toList!732 lt!35837)) (= (_1!1099 (h!2095 (toList!732 lt!35837))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19067 (= (getValueByKey!135 (toList!732 lt!35837) #b0000000000000000000000000000000000000000000000000000000000000000) e!51781)))

(declare-fun b!79275 () Bool)

(assert (=> b!79275 (= e!51782 None!139)))

(declare-fun b!79273 () Bool)

(assert (=> b!79273 (= e!51781 e!51782)))

(declare-fun c!12262 () Bool)

(assert (=> b!79273 (= c!12262 (and ((_ is Cons!1507) (toList!732 lt!35837)) (not (= (_1!1099 (h!2095 (toList!732 lt!35837))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!19067 c!12261) b!79272))

(assert (= (and d!19067 (not c!12261)) b!79273))

(assert (= (and b!79273 c!12262) b!79274))

(assert (= (and b!79273 (not c!12262)) b!79275))

(declare-fun m!80093 () Bool)

(assert (=> b!79274 m!80093))

(assert (=> b!78591 d!19067))

(declare-fun d!19069 () Bool)

(declare-fun res!41450 () Bool)

(declare-fun e!51783 () Bool)

(assert (=> d!19069 (=> res!41450 e!51783)))

(assert (=> d!19069 (= res!41450 (and ((_ is Cons!1507) lt!36293) (= (_1!1099 (h!2095 lt!36293)) (_1!1099 lt!35659))))))

(assert (=> d!19069 (= (containsKey!139 lt!36293 (_1!1099 lt!35659)) e!51783)))

(declare-fun b!79276 () Bool)

(declare-fun e!51784 () Bool)

(assert (=> b!79276 (= e!51783 e!51784)))

(declare-fun res!41451 () Bool)

(assert (=> b!79276 (=> (not res!41451) (not e!51784))))

(assert (=> b!79276 (= res!41451 (and (or (not ((_ is Cons!1507) lt!36293)) (bvsle (_1!1099 (h!2095 lt!36293)) (_1!1099 lt!35659))) ((_ is Cons!1507) lt!36293) (bvslt (_1!1099 (h!2095 lt!36293)) (_1!1099 lt!35659))))))

(declare-fun b!79277 () Bool)

(assert (=> b!79277 (= e!51784 (containsKey!139 (t!5148 lt!36293) (_1!1099 lt!35659)))))

(assert (= (and d!19069 (not res!41450)) b!79276))

(assert (= (and b!79276 res!41451) b!79277))

(declare-fun m!80095 () Bool)

(assert (=> b!79277 m!80095))

(assert (=> b!78411 d!19069))

(declare-fun lt!36738 () Bool)

(declare-fun d!19071 () Bool)

(assert (=> d!19071 (= lt!36738 (select (content!83 (toList!732 lt!36277)) (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!51785 () Bool)

(assert (=> d!19071 (= lt!36738 e!51785)))

(declare-fun res!41452 () Bool)

(assert (=> d!19071 (=> (not res!41452) (not e!51785))))

(assert (=> d!19071 (= res!41452 ((_ is Cons!1507) (toList!732 lt!36277)))))

(assert (=> d!19071 (= (contains!740 (toList!732 lt!36277) (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36738)))

(declare-fun b!79278 () Bool)

(declare-fun e!51786 () Bool)

(assert (=> b!79278 (= e!51785 e!51786)))

(declare-fun res!41453 () Bool)

(assert (=> b!79278 (=> res!41453 e!51786)))

(assert (=> b!79278 (= res!41453 (= (h!2095 (toList!732 lt!36277)) (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!79279 () Bool)

(assert (=> b!79279 (= e!51786 (contains!740 (t!5148 (toList!732 lt!36277)) (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!19071 res!41452) b!79278))

(assert (= (and b!79278 (not res!41453)) b!79279))

(declare-fun m!80097 () Bool)

(assert (=> d!19071 m!80097))

(declare-fun m!80099 () Bool)

(assert (=> d!19071 m!80099))

(declare-fun m!80101 () Bool)

(assert (=> b!79279 m!80101))

(assert (=> b!78374 d!19071))

(assert (=> b!78086 d!18741))

(declare-fun d!19073 () Bool)

(declare-fun res!41454 () Bool)

(declare-fun e!51787 () Bool)

(assert (=> d!19073 (=> res!41454 e!51787)))

(assert (=> d!19073 (= res!41454 (and ((_ is Cons!1507) (toList!732 lt!35793)) (= (_1!1099 (h!2095 (toList!732 lt!35793))) (_1!1099 lt!35660))))))

(assert (=> d!19073 (= (containsKey!139 (toList!732 lt!35793) (_1!1099 lt!35660)) e!51787)))

(declare-fun b!79280 () Bool)

(declare-fun e!51788 () Bool)

(assert (=> b!79280 (= e!51787 e!51788)))

(declare-fun res!41455 () Bool)

(assert (=> b!79280 (=> (not res!41455) (not e!51788))))

(assert (=> b!79280 (= res!41455 (and (or (not ((_ is Cons!1507) (toList!732 lt!35793))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35793))) (_1!1099 lt!35660))) ((_ is Cons!1507) (toList!732 lt!35793)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35793))) (_1!1099 lt!35660))))))

(declare-fun b!79281 () Bool)

(assert (=> b!79281 (= e!51788 (containsKey!139 (t!5148 (toList!732 lt!35793)) (_1!1099 lt!35660)))))

(assert (= (and d!19073 (not res!41454)) b!79280))

(assert (= (and b!79280 res!41455) b!79281))

(declare-fun m!80103 () Bool)

(assert (=> b!79281 m!80103))

(assert (=> d!18433 d!19073))

(declare-fun d!19075 () Bool)

(declare-fun e!51790 () Bool)

(assert (=> d!19075 e!51790))

(declare-fun res!41456 () Bool)

(assert (=> d!19075 (=> res!41456 e!51790)))

(declare-fun lt!36741 () Bool)

(assert (=> d!19075 (= res!41456 (not lt!36741))))

(declare-fun lt!36742 () Bool)

(assert (=> d!19075 (= lt!36741 lt!36742)))

(declare-fun lt!36739 () Unit!2242)

(declare-fun e!51789 () Unit!2242)

(assert (=> d!19075 (= lt!36739 e!51789)))

(declare-fun c!12263 () Bool)

(assert (=> d!19075 (= c!12263 lt!36742)))

(assert (=> d!19075 (= lt!36742 (containsKey!139 (toList!732 lt!36044) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!19075 (= (contains!739 lt!36044 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36741)))

(declare-fun b!79282 () Bool)

(declare-fun lt!36740 () Unit!2242)

(assert (=> b!79282 (= e!51789 lt!36740)))

(assert (=> b!79282 (= lt!36740 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36044) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> b!79282 (isDefined!89 (getValueByKey!135 (toList!732 lt!36044) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!79283 () Bool)

(declare-fun Unit!2300 () Unit!2242)

(assert (=> b!79283 (= e!51789 Unit!2300)))

(declare-fun b!79284 () Bool)

(assert (=> b!79284 (= e!51790 (isDefined!89 (getValueByKey!135 (toList!732 lt!36044) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!19075 c!12263) b!79282))

(assert (= (and d!19075 (not c!12263)) b!79283))

(assert (= (and d!19075 (not res!41456)) b!79284))

(declare-fun m!80105 () Bool)

(assert (=> d!19075 m!80105))

(declare-fun m!80107 () Bool)

(assert (=> b!79282 m!80107))

(assert (=> b!79282 m!78019))

(assert (=> b!79282 m!78019))

(declare-fun m!80109 () Bool)

(assert (=> b!79282 m!80109))

(assert (=> b!79284 m!78019))

(assert (=> b!79284 m!78019))

(assert (=> b!79284 m!80109))

(assert (=> d!18425 d!19075))

(declare-fun b!79285 () Bool)

(declare-fun e!51791 () Option!141)

(assert (=> b!79285 (= e!51791 (Some!140 (_2!1099 (h!2095 lt!36042))))))

(declare-fun e!51792 () Option!141)

(declare-fun b!79287 () Bool)

(assert (=> b!79287 (= e!51792 (getValueByKey!135 (t!5148 lt!36042) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun d!19077 () Bool)

(declare-fun c!12264 () Bool)

(assert (=> d!19077 (= c!12264 (and ((_ is Cons!1507) lt!36042) (= (_1!1099 (h!2095 lt!36042)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!19077 (= (getValueByKey!135 lt!36042 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) e!51791)))

(declare-fun b!79288 () Bool)

(assert (=> b!79288 (= e!51792 None!139)))

(declare-fun b!79286 () Bool)

(assert (=> b!79286 (= e!51791 e!51792)))

(declare-fun c!12265 () Bool)

(assert (=> b!79286 (= c!12265 (and ((_ is Cons!1507) lt!36042) (not (= (_1!1099 (h!2095 lt!36042)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!19077 c!12264) b!79285))

(assert (= (and d!19077 (not c!12264)) b!79286))

(assert (= (and b!79286 c!12265) b!79287))

(assert (= (and b!79286 (not c!12265)) b!79288))

(declare-fun m!80111 () Bool)

(assert (=> b!79287 m!80111))

(assert (=> d!18425 d!19077))

(declare-fun d!19079 () Bool)

(assert (=> d!19079 (= (getValueByKey!135 lt!36042 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36743 () Unit!2242)

(assert (=> d!19079 (= lt!36743 (choose!462 lt!36042 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun e!51793 () Bool)

(assert (=> d!19079 e!51793))

(declare-fun res!41457 () Bool)

(assert (=> d!19079 (=> (not res!41457) (not e!51793))))

(assert (=> d!19079 (= res!41457 (isStrictlySorted!290 lt!36042))))

(assert (=> d!19079 (= (lemmaContainsTupThenGetReturnValue!55 lt!36042 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36743)))

(declare-fun b!79289 () Bool)

(declare-fun res!41458 () Bool)

(assert (=> b!79289 (=> (not res!41458) (not e!51793))))

(assert (=> b!79289 (= res!41458 (containsKey!139 lt!36042 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!79290 () Bool)

(assert (=> b!79290 (= e!51793 (contains!740 lt!36042 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!19079 res!41457) b!79289))

(assert (= (and b!79289 res!41458) b!79290))

(assert (=> d!19079 m!78013))

(declare-fun m!80113 () Bool)

(assert (=> d!19079 m!80113))

(declare-fun m!80115 () Bool)

(assert (=> d!19079 m!80115))

(declare-fun m!80117 () Bool)

(assert (=> b!79289 m!80117))

(declare-fun m!80119 () Bool)

(assert (=> b!79290 m!80119))

(assert (=> d!18425 d!19079))

(declare-fun b!79291 () Bool)

(declare-fun e!51795 () List!1511)

(declare-fun call!7305 () List!1511)

(assert (=> b!79291 (= e!51795 call!7305)))

(declare-fun b!79292 () Bool)

(declare-fun res!41460 () Bool)

(declare-fun e!51797 () Bool)

(assert (=> b!79292 (=> (not res!41460) (not e!51797))))

(declare-fun lt!36744 () List!1511)

(assert (=> b!79292 (= res!41460 (containsKey!139 lt!36744 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun e!51798 () List!1511)

(declare-fun call!7306 () List!1511)

(declare-fun bm!7302 () Bool)

(declare-fun c!12267 () Bool)

(assert (=> bm!7302 (= call!7306 ($colon$colon!68 e!51798 (ite c!12267 (h!2095 (toList!732 call!7141)) (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(declare-fun c!12268 () Bool)

(assert (=> bm!7302 (= c!12268 c!12267)))

(declare-fun c!12269 () Bool)

(declare-fun b!79293 () Bool)

(declare-fun c!12266 () Bool)

(assert (=> b!79293 (= e!51798 (ite c!12266 (t!5148 (toList!732 call!7141)) (ite c!12269 (Cons!1507 (h!2095 (toList!732 call!7141)) (t!5148 (toList!732 call!7141))) Nil!1508)))))

(declare-fun d!19081 () Bool)

(assert (=> d!19081 e!51797))

(declare-fun res!41459 () Bool)

(assert (=> d!19081 (=> (not res!41459) (not e!51797))))

(assert (=> d!19081 (= res!41459 (isStrictlySorted!290 lt!36744))))

(declare-fun e!51794 () List!1511)

(assert (=> d!19081 (= lt!36744 e!51794)))

(assert (=> d!19081 (= c!12267 (and ((_ is Cons!1507) (toList!732 call!7141)) (bvslt (_1!1099 (h!2095 (toList!732 call!7141))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!19081 (isStrictlySorted!290 (toList!732 call!7141))))

(assert (=> d!19081 (= (insertStrictlySorted!58 (toList!732 call!7141) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36744)))

(declare-fun bm!7303 () Bool)

(declare-fun call!7307 () List!1511)

(assert (=> bm!7303 (= call!7307 call!7305)))

(declare-fun b!79294 () Bool)

(assert (=> b!79294 (= c!12269 (and ((_ is Cons!1507) (toList!732 call!7141)) (bvsgt (_1!1099 (h!2095 (toList!732 call!7141))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun e!51796 () List!1511)

(assert (=> b!79294 (= e!51795 e!51796)))

(declare-fun b!79295 () Bool)

(assert (=> b!79295 (= e!51796 call!7307)))

(declare-fun b!79296 () Bool)

(assert (=> b!79296 (= e!51794 e!51795)))

(assert (=> b!79296 (= c!12266 (and ((_ is Cons!1507) (toList!732 call!7141)) (= (_1!1099 (h!2095 (toList!732 call!7141))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!79297 () Bool)

(assert (=> b!79297 (= e!51796 call!7307)))

(declare-fun bm!7304 () Bool)

(assert (=> bm!7304 (= call!7305 call!7306)))

(declare-fun b!79298 () Bool)

(assert (=> b!79298 (= e!51798 (insertStrictlySorted!58 (t!5148 (toList!732 call!7141)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!79299 () Bool)

(assert (=> b!79299 (= e!51794 call!7306)))

(declare-fun b!79300 () Bool)

(assert (=> b!79300 (= e!51797 (contains!740 lt!36744 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!19081 c!12267) b!79299))

(assert (= (and d!19081 (not c!12267)) b!79296))

(assert (= (and b!79296 c!12266) b!79291))

(assert (= (and b!79296 (not c!12266)) b!79294))

(assert (= (and b!79294 c!12269) b!79297))

(assert (= (and b!79294 (not c!12269)) b!79295))

(assert (= (or b!79297 b!79295) bm!7303))

(assert (= (or b!79291 bm!7303) bm!7304))

(assert (= (or b!79299 bm!7304) bm!7302))

(assert (= (and bm!7302 c!12268) b!79298))

(assert (= (and bm!7302 (not c!12268)) b!79293))

(assert (= (and d!19081 res!41459) b!79292))

(assert (= (and b!79292 res!41460) b!79300))

(declare-fun m!80121 () Bool)

(assert (=> b!79298 m!80121))

(declare-fun m!80123 () Bool)

(assert (=> bm!7302 m!80123))

(declare-fun m!80125 () Bool)

(assert (=> b!79292 m!80125))

(declare-fun m!80127 () Bool)

(assert (=> b!79300 m!80127))

(declare-fun m!80129 () Bool)

(assert (=> d!19081 m!80129))

(declare-fun m!80131 () Bool)

(assert (=> d!19081 m!80131))

(assert (=> d!18425 d!19081))

(declare-fun b!79301 () Bool)

(declare-fun e!51799 () Option!141)

(assert (=> b!79301 (= e!51799 (Some!140 (_2!1099 (h!2095 (t!5148 lt!35840)))))))

(declare-fun b!79303 () Bool)

(declare-fun e!51800 () Option!141)

(assert (=> b!79303 (= e!51800 (getValueByKey!135 (t!5148 (t!5148 lt!35840)) (_1!1099 lt!35659)))))

(declare-fun d!19083 () Bool)

(declare-fun c!12270 () Bool)

(assert (=> d!19083 (= c!12270 (and ((_ is Cons!1507) (t!5148 lt!35840)) (= (_1!1099 (h!2095 (t!5148 lt!35840))) (_1!1099 lt!35659))))))

(assert (=> d!19083 (= (getValueByKey!135 (t!5148 lt!35840) (_1!1099 lt!35659)) e!51799)))

(declare-fun b!79304 () Bool)

(assert (=> b!79304 (= e!51800 None!139)))

(declare-fun b!79302 () Bool)

(assert (=> b!79302 (= e!51799 e!51800)))

(declare-fun c!12271 () Bool)

(assert (=> b!79302 (= c!12271 (and ((_ is Cons!1507) (t!5148 lt!35840)) (not (= (_1!1099 (h!2095 (t!5148 lt!35840))) (_1!1099 lt!35659)))))))

(assert (= (and d!19083 c!12270) b!79301))

(assert (= (and d!19083 (not c!12270)) b!79302))

(assert (= (and b!79302 c!12271) b!79303))

(assert (= (and b!79302 (not c!12271)) b!79304))

(declare-fun m!80133 () Bool)

(assert (=> b!79303 m!80133))

(assert (=> b!78172 d!19083))

(declare-fun c!12272 () Bool)

(declare-fun call!7308 () Bool)

(declare-fun bm!7305 () Bool)

(assert (=> bm!7305 (= call!7308 (arrayNoDuplicates!0 (_keys!3930 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12272 (Cons!1506 (select (arr!1882 (_keys!3930 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!12051 (Cons!1506 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) Nil!1507) Nil!1507)) (ite c!12051 (Cons!1506 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) Nil!1507) Nil!1507))))))

(declare-fun b!79305 () Bool)

(declare-fun e!51804 () Bool)

(assert (=> b!79305 (= e!51804 (contains!741 (ite c!12051 (Cons!1506 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) Nil!1507) Nil!1507) (select (arr!1882 (_keys!3930 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!19085 () Bool)

(declare-fun res!41463 () Bool)

(declare-fun e!51803 () Bool)

(assert (=> d!19085 (=> res!41463 e!51803)))

(assert (=> d!19085 (= res!41463 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!19085 (= (arrayNoDuplicates!0 (_keys!3930 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12051 (Cons!1506 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) Nil!1507) Nil!1507)) e!51803)))

(declare-fun b!79306 () Bool)

(declare-fun e!51802 () Bool)

(declare-fun e!51801 () Bool)

(assert (=> b!79306 (= e!51802 e!51801)))

(assert (=> b!79306 (= c!12272 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!79307 () Bool)

(assert (=> b!79307 (= e!51801 call!7308)))

(declare-fun b!79308 () Bool)

(assert (=> b!79308 (= e!51801 call!7308)))

(declare-fun b!79309 () Bool)

(assert (=> b!79309 (= e!51803 e!51802)))

(declare-fun res!41462 () Bool)

(assert (=> b!79309 (=> (not res!41462) (not e!51802))))

(assert (=> b!79309 (= res!41462 (not e!51804))))

(declare-fun res!41461 () Bool)

(assert (=> b!79309 (=> (not res!41461) (not e!51804))))

(assert (=> b!79309 (= res!41461 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!19085 (not res!41463)) b!79309))

(assert (= (and b!79309 res!41461) b!79305))

(assert (= (and b!79309 res!41462) b!79306))

(assert (= (and b!79306 c!12272) b!79308))

(assert (= (and b!79306 (not c!12272)) b!79307))

(assert (= (or b!79308 b!79307) bm!7305))

(declare-fun m!80135 () Bool)

(assert (=> bm!7305 m!80135))

(declare-fun m!80137 () Bool)

(assert (=> bm!7305 m!80137))

(assert (=> b!79305 m!80135))

(assert (=> b!79305 m!80135))

(declare-fun m!80139 () Bool)

(assert (=> b!79305 m!80139))

(assert (=> b!79306 m!80135))

(assert (=> b!79306 m!80135))

(declare-fun m!80141 () Bool)

(assert (=> b!79306 m!80141))

(assert (=> b!79309 m!80135))

(assert (=> b!79309 m!80135))

(assert (=> b!79309 m!80141))

(assert (=> bm!7212 d!19085))

(declare-fun b!79310 () Bool)

(declare-fun e!51806 () List!1511)

(declare-fun call!7309 () List!1511)

(assert (=> b!79310 (= e!51806 call!7309)))

(declare-fun b!79311 () Bool)

(declare-fun res!41465 () Bool)

(declare-fun e!51808 () Bool)

(assert (=> b!79311 (=> (not res!41465) (not e!51808))))

(declare-fun lt!36745 () List!1511)

(assert (=> b!79311 (= res!41465 (containsKey!139 lt!36745 (_1!1099 lt!35660)))))

(declare-fun bm!7306 () Bool)

(declare-fun call!7310 () List!1511)

(declare-fun c!12274 () Bool)

(declare-fun e!51809 () List!1511)

(assert (=> bm!7306 (= call!7310 ($colon$colon!68 e!51809 (ite c!12274 (h!2095 (t!5148 (toList!732 lt!35662))) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660)))))))

(declare-fun c!12275 () Bool)

(assert (=> bm!7306 (= c!12275 c!12274)))

(declare-fun c!12273 () Bool)

(declare-fun c!12276 () Bool)

(declare-fun b!79312 () Bool)

(assert (=> b!79312 (= e!51809 (ite c!12273 (t!5148 (t!5148 (toList!732 lt!35662))) (ite c!12276 (Cons!1507 (h!2095 (t!5148 (toList!732 lt!35662))) (t!5148 (t!5148 (toList!732 lt!35662)))) Nil!1508)))))

(declare-fun d!19087 () Bool)

(assert (=> d!19087 e!51808))

(declare-fun res!41464 () Bool)

(assert (=> d!19087 (=> (not res!41464) (not e!51808))))

(assert (=> d!19087 (= res!41464 (isStrictlySorted!290 lt!36745))))

(declare-fun e!51805 () List!1511)

(assert (=> d!19087 (= lt!36745 e!51805)))

(assert (=> d!19087 (= c!12274 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35662))) (bvslt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35662)))) (_1!1099 lt!35660))))))

(assert (=> d!19087 (isStrictlySorted!290 (t!5148 (toList!732 lt!35662)))))

(assert (=> d!19087 (= (insertStrictlySorted!58 (t!5148 (toList!732 lt!35662)) (_1!1099 lt!35660) (_2!1099 lt!35660)) lt!36745)))

(declare-fun bm!7307 () Bool)

(declare-fun call!7311 () List!1511)

(assert (=> bm!7307 (= call!7311 call!7309)))

(declare-fun b!79313 () Bool)

(assert (=> b!79313 (= c!12276 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35662))) (bvsgt (_1!1099 (h!2095 (t!5148 (toList!732 lt!35662)))) (_1!1099 lt!35660))))))

(declare-fun e!51807 () List!1511)

(assert (=> b!79313 (= e!51806 e!51807)))

(declare-fun b!79314 () Bool)

(assert (=> b!79314 (= e!51807 call!7311)))

(declare-fun b!79315 () Bool)

(assert (=> b!79315 (= e!51805 e!51806)))

(assert (=> b!79315 (= c!12273 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35662))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35662)))) (_1!1099 lt!35660))))))

(declare-fun b!79316 () Bool)

(assert (=> b!79316 (= e!51807 call!7311)))

(declare-fun bm!7308 () Bool)

(assert (=> bm!7308 (= call!7309 call!7310)))

(declare-fun b!79317 () Bool)

(assert (=> b!79317 (= e!51809 (insertStrictlySorted!58 (t!5148 (t!5148 (toList!732 lt!35662))) (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(declare-fun b!79318 () Bool)

(assert (=> b!79318 (= e!51805 call!7310)))

(declare-fun b!79319 () Bool)

(assert (=> b!79319 (= e!51808 (contains!740 lt!36745 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!19087 c!12274) b!79318))

(assert (= (and d!19087 (not c!12274)) b!79315))

(assert (= (and b!79315 c!12273) b!79310))

(assert (= (and b!79315 (not c!12273)) b!79313))

(assert (= (and b!79313 c!12276) b!79316))

(assert (= (and b!79313 (not c!12276)) b!79314))

(assert (= (or b!79316 b!79314) bm!7307))

(assert (= (or b!79310 bm!7307) bm!7308))

(assert (= (or b!79318 bm!7308) bm!7306))

(assert (= (and bm!7306 c!12275) b!79317))

(assert (= (and bm!7306 (not c!12275)) b!79312))

(assert (= (and d!19087 res!41464) b!79311))

(assert (= (and b!79311 res!41465) b!79319))

(declare-fun m!80143 () Bool)

(assert (=> b!79317 m!80143))

(declare-fun m!80145 () Bool)

(assert (=> bm!7306 m!80145))

(declare-fun m!80147 () Bool)

(assert (=> b!79311 m!80147))

(declare-fun m!80149 () Bool)

(assert (=> b!79319 m!80149))

(declare-fun m!80151 () Bool)

(assert (=> d!19087 m!80151))

(assert (=> d!19087 m!78901))

(assert (=> b!78164 d!19087))

(assert (=> b!78539 d!18821))

(assert (=> b!78539 d!18667))

(declare-fun d!19089 () Bool)

(assert (=> d!19089 (= (apply!79 lt!36029 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1180 (getValueByKey!135 (toList!732 lt!36029) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3355 () Bool)

(assert (= bs!3355 d!19089))

(declare-fun m!80153 () Bool)

(assert (=> bs!3355 m!80153))

(assert (=> bs!3355 m!80153))

(declare-fun m!80155 () Bool)

(assert (=> bs!3355 m!80155))

(assert (=> b!78104 d!19089))

(assert (=> b!78265 d!18741))

(declare-fun d!19091 () Bool)

(declare-fun res!41466 () Bool)

(declare-fun e!51810 () Bool)

(assert (=> d!19091 (=> res!41466 e!51810)))

(assert (=> d!19091 (= res!41466 (and ((_ is Cons!1507) (toList!732 call!7146)) (= (_1!1099 (h!2095 (toList!732 call!7146))) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))))))))

(assert (=> d!19091 (= (containsKey!139 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))) e!51810)))

(declare-fun b!79320 () Bool)

(declare-fun e!51811 () Bool)

(assert (=> b!79320 (= e!51810 e!51811)))

(declare-fun res!41467 () Bool)

(assert (=> b!79320 (=> (not res!41467) (not e!51811))))

(assert (=> b!79320 (= res!41467 (and (or (not ((_ is Cons!1507) (toList!732 call!7146))) (bvsle (_1!1099 (h!2095 (toList!732 call!7146))) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))))) ((_ is Cons!1507) (toList!732 call!7146)) (bvslt (_1!1099 (h!2095 (toList!732 call!7146))) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))))))))

(declare-fun b!79321 () Bool)

(assert (=> b!79321 (= e!51811 (containsKey!139 (t!5148 (toList!732 call!7146)) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))

(assert (= (and d!19091 (not res!41466)) b!79320))

(assert (= (and b!79320 res!41467) b!79321))

(declare-fun m!80157 () Bool)

(assert (=> b!79321 m!80157))

(assert (=> d!18577 d!19091))

(declare-fun d!19093 () Bool)

(assert (=> d!19093 (= (get!1180 (getValueByKey!135 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2590 (getValueByKey!135 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18429 d!19093))

(assert (=> d!18429 d!18811))

(declare-fun d!19095 () Bool)

(declare-fun res!41468 () Bool)

(declare-fun e!51812 () Bool)

(assert (=> d!19095 (=> res!41468 e!51812)))

(assert (=> d!19095 (= res!41468 (and ((_ is Cons!1507) (toList!732 lt!35805)) (= (_1!1099 (h!2095 (toList!732 lt!35805))) (_1!1099 lt!35660))))))

(assert (=> d!19095 (= (containsKey!139 (toList!732 lt!35805) (_1!1099 lt!35660)) e!51812)))

(declare-fun b!79322 () Bool)

(declare-fun e!51813 () Bool)

(assert (=> b!79322 (= e!51812 e!51813)))

(declare-fun res!41469 () Bool)

(assert (=> b!79322 (=> (not res!41469) (not e!51813))))

(assert (=> b!79322 (= res!41469 (and (or (not ((_ is Cons!1507) (toList!732 lt!35805))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35805))) (_1!1099 lt!35660))) ((_ is Cons!1507) (toList!732 lt!35805)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35805))) (_1!1099 lt!35660))))))

(declare-fun b!79323 () Bool)

(assert (=> b!79323 (= e!51813 (containsKey!139 (t!5148 (toList!732 lt!35805)) (_1!1099 lt!35660)))))

(assert (= (and d!19095 (not res!41468)) b!79322))

(assert (= (and b!79322 res!41469) b!79323))

(declare-fun m!80159 () Bool)

(assert (=> b!79323 m!80159))

(assert (=> d!18551 d!19095))

(assert (=> bm!7216 d!18913))

(declare-fun d!19097 () Bool)

(declare-fun e!51815 () Bool)

(assert (=> d!19097 e!51815))

(declare-fun res!41470 () Bool)

(assert (=> d!19097 (=> res!41470 e!51815)))

(declare-fun lt!36748 () Bool)

(assert (=> d!19097 (= res!41470 (not lt!36748))))

(declare-fun lt!36749 () Bool)

(assert (=> d!19097 (= lt!36748 lt!36749)))

(declare-fun lt!36746 () Unit!2242)

(declare-fun e!51814 () Unit!2242)

(assert (=> d!19097 (= lt!36746 e!51814)))

(declare-fun c!12277 () Bool)

(assert (=> d!19097 (= c!12277 lt!36749)))

(assert (=> d!19097 (= lt!36749 (containsKey!139 (toList!732 lt!36137) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19097 (= (contains!739 lt!36137 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) lt!36748)))

(declare-fun b!79324 () Bool)

(declare-fun lt!36747 () Unit!2242)

(assert (=> b!79324 (= e!51814 lt!36747)))

(assert (=> b!79324 (= lt!36747 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36137) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79324 (isDefined!89 (getValueByKey!135 (toList!732 lt!36137) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79325 () Bool)

(declare-fun Unit!2301 () Unit!2242)

(assert (=> b!79325 (= e!51814 Unit!2301)))

(declare-fun b!79326 () Bool)

(assert (=> b!79326 (= e!51815 (isDefined!89 (getValueByKey!135 (toList!732 lt!36137) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19097 c!12277) b!79324))

(assert (= (and d!19097 (not c!12277)) b!79325))

(assert (= (and d!19097 (not res!41470)) b!79326))

(assert (=> d!19097 m!77965))

(declare-fun m!80161 () Bool)

(assert (=> d!19097 m!80161))

(assert (=> b!79324 m!77965))

(declare-fun m!80163 () Bool)

(assert (=> b!79324 m!80163))

(assert (=> b!79324 m!77965))

(declare-fun m!80165 () Bool)

(assert (=> b!79324 m!80165))

(assert (=> b!79324 m!80165))

(declare-fun m!80167 () Bool)

(assert (=> b!79324 m!80167))

(assert (=> b!79326 m!77965))

(assert (=> b!79326 m!80165))

(assert (=> b!79326 m!80165))

(assert (=> b!79326 m!80167))

(assert (=> b!78270 d!19097))

(declare-fun d!19099 () Bool)

(declare-fun lt!36750 () Bool)

(assert (=> d!19099 (= lt!36750 (select (content!83 lt!36376) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(declare-fun e!51816 () Bool)

(assert (=> d!19099 (= lt!36750 e!51816)))

(declare-fun res!41471 () Bool)

(assert (=> d!19099 (=> (not res!41471) (not e!51816))))

(assert (=> d!19099 (= res!41471 ((_ is Cons!1507) lt!36376))))

(assert (=> d!19099 (= (contains!740 lt!36376 (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))) lt!36750)))

(declare-fun b!79327 () Bool)

(declare-fun e!51817 () Bool)

(assert (=> b!79327 (= e!51816 e!51817)))

(declare-fun res!41472 () Bool)

(assert (=> b!79327 (=> res!41472 e!51817)))

(assert (=> b!79327 (= res!41472 (= (h!2095 lt!36376) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(declare-fun b!79328 () Bool)

(assert (=> b!79328 (= e!51817 (contains!740 (t!5148 lt!36376) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(assert (= (and d!19099 res!41471) b!79327))

(assert (= (and b!79327 (not res!41472)) b!79328))

(declare-fun m!80169 () Bool)

(assert (=> d!19099 m!80169))

(declare-fun m!80171 () Bool)

(assert (=> d!19099 m!80171))

(declare-fun m!80173 () Bool)

(assert (=> b!79328 m!80173))

(assert (=> b!78571 d!19099))

(assert (=> b!78453 d!18387))

(declare-fun d!19101 () Bool)

(declare-fun e!51819 () Bool)

(assert (=> d!19101 e!51819))

(declare-fun res!41473 () Bool)

(assert (=> d!19101 (=> res!41473 e!51819)))

(declare-fun lt!36753 () Bool)

(assert (=> d!19101 (= res!41473 (not lt!36753))))

(declare-fun lt!36754 () Bool)

(assert (=> d!19101 (= lt!36753 lt!36754)))

(declare-fun lt!36751 () Unit!2242)

(declare-fun e!51818 () Unit!2242)

(assert (=> d!19101 (= lt!36751 e!51818)))

(declare-fun c!12278 () Bool)

(assert (=> d!19101 (= c!12278 lt!36754)))

(assert (=> d!19101 (= lt!36754 (containsKey!139 (toList!732 lt!36273) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!19101 (= (contains!739 lt!36273 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36753)))

(declare-fun b!79329 () Bool)

(declare-fun lt!36752 () Unit!2242)

(assert (=> b!79329 (= e!51818 lt!36752)))

(assert (=> b!79329 (= lt!36752 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36273) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> b!79329 (isDefined!89 (getValueByKey!135 (toList!732 lt!36273) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79330 () Bool)

(declare-fun Unit!2302 () Unit!2242)

(assert (=> b!79330 (= e!51818 Unit!2302)))

(declare-fun b!79331 () Bool)

(assert (=> b!79331 (= e!51819 (isDefined!89 (getValueByKey!135 (toList!732 lt!36273) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19101 c!12278) b!79329))

(assert (= (and d!19101 (not c!12278)) b!79330))

(assert (= (and d!19101 (not res!41473)) b!79331))

(declare-fun m!80175 () Bool)

(assert (=> d!19101 m!80175))

(declare-fun m!80177 () Bool)

(assert (=> b!79329 m!80177))

(assert (=> b!79329 m!78477))

(assert (=> b!79329 m!78477))

(declare-fun m!80179 () Bool)

(assert (=> b!79329 m!80179))

(assert (=> b!79331 m!78477))

(assert (=> b!79331 m!78477))

(assert (=> b!79331 m!80179))

(assert (=> d!18533 d!19101))

(declare-fun b!79332 () Bool)

(declare-fun e!51820 () Option!141)

(assert (=> b!79332 (= e!51820 (Some!140 (_2!1099 (h!2095 lt!36271))))))

(declare-fun b!79334 () Bool)

(declare-fun e!51821 () Option!141)

(assert (=> b!79334 (= e!51821 (getValueByKey!135 (t!5148 lt!36271) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun c!12279 () Bool)

(declare-fun d!19103 () Bool)

(assert (=> d!19103 (= c!12279 (and ((_ is Cons!1507) lt!36271) (= (_1!1099 (h!2095 lt!36271)) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19103 (= (getValueByKey!135 lt!36271 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!51820)))

(declare-fun b!79335 () Bool)

(assert (=> b!79335 (= e!51821 None!139)))

(declare-fun b!79333 () Bool)

(assert (=> b!79333 (= e!51820 e!51821)))

(declare-fun c!12280 () Bool)

(assert (=> b!79333 (= c!12280 (and ((_ is Cons!1507) lt!36271) (not (= (_1!1099 (h!2095 lt!36271)) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19103 c!12279) b!79332))

(assert (= (and d!19103 (not c!12279)) b!79333))

(assert (= (and b!79333 c!12280) b!79334))

(assert (= (and b!79333 (not c!12280)) b!79335))

(declare-fun m!80181 () Bool)

(assert (=> b!79334 m!80181))

(assert (=> d!18533 d!19103))

(declare-fun d!19105 () Bool)

(assert (=> d!19105 (= (getValueByKey!135 lt!36271 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36755 () Unit!2242)

(assert (=> d!19105 (= lt!36755 (choose!462 lt!36271 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!51822 () Bool)

(assert (=> d!19105 e!51822))

(declare-fun res!41474 () Bool)

(assert (=> d!19105 (=> (not res!41474) (not e!51822))))

(assert (=> d!19105 (= res!41474 (isStrictlySorted!290 lt!36271))))

(assert (=> d!19105 (= (lemmaContainsTupThenGetReturnValue!55 lt!36271 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36755)))

(declare-fun b!79336 () Bool)

(declare-fun res!41475 () Bool)

(assert (=> b!79336 (=> (not res!41475) (not e!51822))))

(assert (=> b!79336 (= res!41475 (containsKey!139 lt!36271 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79337 () Bool)

(assert (=> b!79337 (= e!51822 (contains!740 lt!36271 (tuple2!2177 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19105 res!41474) b!79336))

(assert (= (and b!79336 res!41475) b!79337))

(assert (=> d!19105 m!78471))

(declare-fun m!80183 () Bool)

(assert (=> d!19105 m!80183))

(declare-fun m!80185 () Bool)

(assert (=> d!19105 m!80185))

(declare-fun m!80187 () Bool)

(assert (=> b!79336 m!80187))

(declare-fun m!80189 () Bool)

(assert (=> b!79337 m!80189))

(assert (=> d!18533 d!19105))

(declare-fun b!79338 () Bool)

(declare-fun e!51824 () List!1511)

(declare-fun call!7312 () List!1511)

(assert (=> b!79338 (= e!51824 call!7312)))

(declare-fun b!79339 () Bool)

(declare-fun res!41477 () Bool)

(declare-fun e!51826 () Bool)

(assert (=> b!79339 (=> (not res!41477) (not e!51826))))

(declare-fun lt!36756 () List!1511)

(assert (=> b!79339 (= res!41477 (containsKey!139 lt!36756 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun c!12282 () Bool)

(declare-fun call!7313 () List!1511)

(declare-fun bm!7309 () Bool)

(declare-fun e!51827 () List!1511)

(assert (=> bm!7309 (= call!7313 ($colon$colon!68 e!51827 (ite c!12282 (h!2095 (toList!732 lt!35890)) (tuple2!2177 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun c!12283 () Bool)

(assert (=> bm!7309 (= c!12283 c!12282)))

(declare-fun c!12284 () Bool)

(declare-fun c!12281 () Bool)

(declare-fun b!79340 () Bool)

(assert (=> b!79340 (= e!51827 (ite c!12281 (t!5148 (toList!732 lt!35890)) (ite c!12284 (Cons!1507 (h!2095 (toList!732 lt!35890)) (t!5148 (toList!732 lt!35890))) Nil!1508)))))

(declare-fun d!19107 () Bool)

(assert (=> d!19107 e!51826))

(declare-fun res!41476 () Bool)

(assert (=> d!19107 (=> (not res!41476) (not e!51826))))

(assert (=> d!19107 (= res!41476 (isStrictlySorted!290 lt!36756))))

(declare-fun e!51823 () List!1511)

(assert (=> d!19107 (= lt!36756 e!51823)))

(assert (=> d!19107 (= c!12282 (and ((_ is Cons!1507) (toList!732 lt!35890)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35890))) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19107 (isStrictlySorted!290 (toList!732 lt!35890))))

(assert (=> d!19107 (= (insertStrictlySorted!58 (toList!732 lt!35890) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36756)))

(declare-fun bm!7310 () Bool)

(declare-fun call!7314 () List!1511)

(assert (=> bm!7310 (= call!7314 call!7312)))

(declare-fun b!79341 () Bool)

(assert (=> b!79341 (= c!12284 (and ((_ is Cons!1507) (toList!732 lt!35890)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35890))) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun e!51825 () List!1511)

(assert (=> b!79341 (= e!51824 e!51825)))

(declare-fun b!79342 () Bool)

(assert (=> b!79342 (= e!51825 call!7314)))

(declare-fun b!79343 () Bool)

(assert (=> b!79343 (= e!51823 e!51824)))

(assert (=> b!79343 (= c!12281 (and ((_ is Cons!1507) (toList!732 lt!35890)) (= (_1!1099 (h!2095 (toList!732 lt!35890))) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!79344 () Bool)

(assert (=> b!79344 (= e!51825 call!7314)))

(declare-fun bm!7311 () Bool)

(assert (=> bm!7311 (= call!7312 call!7313)))

(declare-fun b!79345 () Bool)

(assert (=> b!79345 (= e!51827 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35890)) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79346 () Bool)

(assert (=> b!79346 (= e!51823 call!7313)))

(declare-fun b!79347 () Bool)

(assert (=> b!79347 (= e!51826 (contains!740 lt!36756 (tuple2!2177 (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19107 c!12282) b!79346))

(assert (= (and d!19107 (not c!12282)) b!79343))

(assert (= (and b!79343 c!12281) b!79338))

(assert (= (and b!79343 (not c!12281)) b!79341))

(assert (= (and b!79341 c!12284) b!79344))

(assert (= (and b!79341 (not c!12284)) b!79342))

(assert (= (or b!79344 b!79342) bm!7310))

(assert (= (or b!79338 bm!7310) bm!7311))

(assert (= (or b!79346 bm!7311) bm!7309))

(assert (= (and bm!7309 c!12283) b!79345))

(assert (= (and bm!7309 (not c!12283)) b!79340))

(assert (= (and d!19107 res!41476) b!79339))

(assert (= (and b!79339 res!41477) b!79347))

(declare-fun m!80191 () Bool)

(assert (=> b!79345 m!80191))

(declare-fun m!80193 () Bool)

(assert (=> bm!7309 m!80193))

(declare-fun m!80195 () Bool)

(assert (=> b!79339 m!80195))

(declare-fun m!80197 () Bool)

(assert (=> b!79347 m!80197))

(declare-fun m!80199 () Bool)

(assert (=> d!19107 m!80199))

(declare-fun m!80201 () Bool)

(assert (=> d!19107 m!80201))

(assert (=> d!18533 d!19107))

(declare-fun bm!7312 () Bool)

(declare-fun call!7315 () (_ BitVec 32))

(assert (=> bm!7312 (= call!7315 (arrayCountValidKeys!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun d!19109 () Bool)

(declare-fun lt!36757 () (_ BitVec 32))

(assert (=> d!19109 (and (bvsge lt!36757 #b00000000000000000000000000000000) (bvsle lt!36757 (bvsub (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!51829 () (_ BitVec 32))

(assert (=> d!19109 (= lt!36757 e!51829)))

(declare-fun c!12286 () Bool)

(assert (=> d!19109 (= c!12286 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!19109 (and (bvsle #b00000000000000000000000000000000 (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!19109 (= (arrayCountValidKeys!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000 (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))) lt!36757)))

(declare-fun b!79348 () Bool)

(declare-fun e!51828 () (_ BitVec 32))

(assert (=> b!79348 (= e!51828 (bvadd #b00000000000000000000000000000001 call!7315))))

(declare-fun b!79349 () Bool)

(assert (=> b!79349 (= e!51829 #b00000000000000000000000000000000)))

(declare-fun b!79350 () Bool)

(assert (=> b!79350 (= e!51829 e!51828)))

(declare-fun c!12285 () Bool)

(assert (=> b!79350 (= c!12285 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!79351 () Bool)

(assert (=> b!79351 (= e!51828 call!7315)))

(assert (= (and d!19109 c!12286) b!79349))

(assert (= (and d!19109 (not c!12286)) b!79350))

(assert (= (and b!79350 c!12285) b!79348))

(assert (= (and b!79350 (not c!12285)) b!79351))

(assert (= (or b!79348 b!79351) bm!7312))

(declare-fun m!80203 () Bool)

(assert (=> bm!7312 m!80203))

(declare-fun m!80205 () Bool)

(assert (=> b!79350 m!80205))

(assert (=> b!79350 m!80205))

(declare-fun m!80207 () Bool)

(assert (=> b!79350 m!80207))

(assert (=> b!78198 d!19109))

(declare-fun lt!36758 () Bool)

(declare-fun d!19111 () Bool)

(assert (=> d!19111 (= lt!36758 (select (content!83 (toList!732 lt!36263)) (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!51830 () Bool)

(assert (=> d!19111 (= lt!36758 e!51830)))

(declare-fun res!41478 () Bool)

(assert (=> d!19111 (=> (not res!41478) (not e!51830))))

(assert (=> d!19111 (= res!41478 ((_ is Cons!1507) (toList!732 lt!36263)))))

(assert (=> d!19111 (= (contains!740 (toList!732 lt!36263) (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36758)))

(declare-fun b!79352 () Bool)

(declare-fun e!51831 () Bool)

(assert (=> b!79352 (= e!51830 e!51831)))

(declare-fun res!41479 () Bool)

(assert (=> b!79352 (=> res!41479 e!51831)))

(assert (=> b!79352 (= res!41479 (= (h!2095 (toList!732 lt!36263)) (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!79353 () Bool)

(assert (=> b!79353 (= e!51831 (contains!740 (t!5148 (toList!732 lt!36263)) (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!19111 res!41478) b!79352))

(assert (= (and b!79352 (not res!41479)) b!79353))

(declare-fun m!80209 () Bool)

(assert (=> d!19111 m!80209))

(declare-fun m!80211 () Bool)

(assert (=> d!19111 m!80211))

(declare-fun m!80213 () Bool)

(assert (=> b!79353 m!80213))

(assert (=> b!78365 d!19111))

(declare-fun lt!36759 () Bool)

(declare-fun d!19113 () Bool)

(assert (=> d!19113 (= lt!36759 (select (content!84 (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!51833 () Bool)

(assert (=> d!19113 (= lt!36759 e!51833)))

(declare-fun res!41480 () Bool)

(assert (=> d!19113 (=> (not res!41480) (not e!51833))))

(assert (=> d!19113 (= res!41480 ((_ is Cons!1506) (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)))))

(assert (=> d!19113 (= (contains!741 (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!36759)))

(declare-fun b!79354 () Bool)

(declare-fun e!51832 () Bool)

(assert (=> b!79354 (= e!51833 e!51832)))

(declare-fun res!41481 () Bool)

(assert (=> b!79354 (=> res!41481 e!51832)))

(assert (=> b!79354 (= res!41481 (= (h!2094 (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!79355 () Bool)

(assert (=> b!79355 (= e!51832 (contains!741 (t!5147 (ite c!11891 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) Nil!1507) Nil!1507)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!19113 res!41480) b!79354))

(assert (= (and b!79354 (not res!41481)) b!79355))

(declare-fun m!80215 () Bool)

(assert (=> d!19113 m!80215))

(assert (=> d!19113 m!78761))

(declare-fun m!80217 () Bool)

(assert (=> d!19113 m!80217))

(assert (=> b!79355 m!78761))

(declare-fun m!80219 () Bool)

(assert (=> b!79355 m!80219))

(assert (=> b!78544 d!19113))

(assert (=> b!78369 d!18865))

(assert (=> b!78369 d!18867))

(declare-fun d!19115 () Bool)

(assert (=> d!19115 (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!36760 () Unit!2242)

(assert (=> d!19115 (= lt!36760 (choose!463 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51834 () Bool)

(assert (=> d!19115 e!51834))

(declare-fun res!41482 () Bool)

(assert (=> d!19115 (=> (not res!41482) (not e!51834))))

(assert (=> d!19115 (= res!41482 (isStrictlySorted!290 (toList!732 lt!35901)))))

(assert (=> d!19115 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000) lt!36760)))

(declare-fun b!79356 () Bool)

(assert (=> b!79356 (= e!51834 (containsKey!139 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19115 res!41482) b!79356))

(assert (=> d!19115 m!77995))

(assert (=> d!19115 m!77995))

(assert (=> d!19115 m!78851))

(declare-fun m!80221 () Bool)

(assert (=> d!19115 m!80221))

(declare-fun m!80223 () Bool)

(assert (=> d!19115 m!80223))

(assert (=> b!79356 m!78847))

(assert (=> b!78610 d!19115))

(declare-fun d!19117 () Bool)

(assert (=> d!19117 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3356 () Bool)

(assert (= bs!3356 d!19117))

(assert (=> bs!3356 m!77995))

(declare-fun m!80225 () Bool)

(assert (=> bs!3356 m!80225))

(assert (=> b!78610 d!19117))

(declare-fun b!79357 () Bool)

(declare-fun e!51835 () Option!141)

(assert (=> b!79357 (= e!51835 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35901)))))))

(declare-fun b!79359 () Bool)

(declare-fun e!51836 () Option!141)

(assert (=> b!79359 (= e!51836 (getValueByKey!135 (t!5148 (toList!732 lt!35901)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!19119 () Bool)

(declare-fun c!12287 () Bool)

(assert (=> d!19119 (= c!12287 (and ((_ is Cons!1507) (toList!732 lt!35901)) (= (_1!1099 (h!2095 (toList!732 lt!35901))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19119 (= (getValueByKey!135 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000) e!51835)))

(declare-fun b!79360 () Bool)

(assert (=> b!79360 (= e!51836 None!139)))

(declare-fun b!79358 () Bool)

(assert (=> b!79358 (= e!51835 e!51836)))

(declare-fun c!12288 () Bool)

(assert (=> b!79358 (= c!12288 (and ((_ is Cons!1507) (toList!732 lt!35901)) (not (= (_1!1099 (h!2095 (toList!732 lt!35901))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!19119 c!12287) b!79357))

(assert (= (and d!19119 (not c!12287)) b!79358))

(assert (= (and b!79358 c!12288) b!79359))

(assert (= (and b!79358 (not c!12288)) b!79360))

(declare-fun m!80227 () Bool)

(assert (=> b!79359 m!80227))

(assert (=> b!78610 d!19119))

(declare-fun b!79361 () Bool)

(declare-fun e!51837 () Option!141)

(assert (=> b!79361 (= e!51837 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36273)))))))

(declare-fun e!51838 () Option!141)

(declare-fun b!79363 () Bool)

(assert (=> b!79363 (= e!51838 (getValueByKey!135 (t!5148 (toList!732 lt!36273)) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!19121 () Bool)

(declare-fun c!12289 () Bool)

(assert (=> d!19121 (= c!12289 (and ((_ is Cons!1507) (toList!732 lt!36273)) (= (_1!1099 (h!2095 (toList!732 lt!36273))) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19121 (= (getValueByKey!135 (toList!732 lt!36273) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!51837)))

(declare-fun b!79364 () Bool)

(assert (=> b!79364 (= e!51838 None!139)))

(declare-fun b!79362 () Bool)

(assert (=> b!79362 (= e!51837 e!51838)))

(declare-fun c!12290 () Bool)

(assert (=> b!79362 (= c!12290 (and ((_ is Cons!1507) (toList!732 lt!36273)) (not (= (_1!1099 (h!2095 (toList!732 lt!36273))) (_1!1099 (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19121 c!12289) b!79361))

(assert (= (and d!19121 (not c!12289)) b!79362))

(assert (= (and b!79362 c!12290) b!79363))

(assert (= (and b!79362 (not c!12290)) b!79364))

(declare-fun m!80229 () Bool)

(assert (=> b!79363 m!80229))

(assert (=> b!78371 d!19121))

(declare-fun d!19123 () Bool)

(declare-fun res!41483 () Bool)

(declare-fun e!51839 () Bool)

(assert (=> d!19123 (=> res!41483 e!51839)))

(assert (=> d!19123 (= res!41483 (and ((_ is Cons!1507) lt!36054) (= (_1!1099 (h!2095 lt!36054)) (_1!1099 lt!35660))))))

(assert (=> d!19123 (= (containsKey!139 lt!36054 (_1!1099 lt!35660)) e!51839)))

(declare-fun b!79365 () Bool)

(declare-fun e!51840 () Bool)

(assert (=> b!79365 (= e!51839 e!51840)))

(declare-fun res!41484 () Bool)

(assert (=> b!79365 (=> (not res!41484) (not e!51840))))

(assert (=> b!79365 (= res!41484 (and (or (not ((_ is Cons!1507) lt!36054)) (bvsle (_1!1099 (h!2095 lt!36054)) (_1!1099 lt!35660))) ((_ is Cons!1507) lt!36054) (bvslt (_1!1099 (h!2095 lt!36054)) (_1!1099 lt!35660))))))

(declare-fun b!79366 () Bool)

(assert (=> b!79366 (= e!51840 (containsKey!139 (t!5148 lt!36054) (_1!1099 lt!35660)))))

(assert (= (and d!19123 (not res!41483)) b!79365))

(assert (= (and b!79365 res!41484) b!79366))

(declare-fun m!80231 () Bool)

(assert (=> b!79366 m!80231))

(assert (=> b!78158 d!19123))

(declare-fun d!19125 () Bool)

(assert (=> d!19125 (= ($colon$colon!68 e!51295 (ite c!12048 (h!2095 (toList!732 (+!103 lt!35662 lt!35659))) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660)))) (Cons!1507 (ite c!12048 (h!2095 (toList!732 (+!103 lt!35662 lt!35659))) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))) e!51295))))

(assert (=> bm!7209 d!19125))

(assert (=> bm!7178 d!18711))

(declare-fun d!19127 () Bool)

(declare-fun lt!36761 () Bool)

(assert (=> d!19127 (= lt!36761 (select (content!83 lt!36299) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun e!51841 () Bool)

(assert (=> d!19127 (= lt!36761 e!51841)))

(declare-fun res!41485 () Bool)

(assert (=> d!19127 (=> (not res!41485) (not e!51841))))

(assert (=> d!19127 (= res!41485 ((_ is Cons!1507) lt!36299))))

(assert (=> d!19127 (= (contains!740 lt!36299 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))) lt!36761)))

(declare-fun b!79367 () Bool)

(declare-fun e!51842 () Bool)

(assert (=> b!79367 (= e!51841 e!51842)))

(declare-fun res!41486 () Bool)

(assert (=> b!79367 (=> res!41486 e!51842)))

(assert (=> b!79367 (= res!41486 (= (h!2095 lt!36299) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun b!79368 () Bool)

(assert (=> b!79368 (= e!51842 (contains!740 (t!5148 lt!36299) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!19127 res!41485) b!79367))

(assert (= (and b!79367 (not res!41486)) b!79368))

(declare-fun m!80233 () Bool)

(assert (=> d!19127 m!80233))

(declare-fun m!80235 () Bool)

(assert (=> d!19127 m!80235))

(declare-fun m!80237 () Bool)

(assert (=> b!79368 m!80237))

(assert (=> b!78440 d!19127))

(declare-fun d!19129 () Bool)

(assert (=> d!19129 (isDefined!89 (getValueByKey!135 (toList!732 lt!35842) (_1!1099 lt!35659)))))

(declare-fun lt!36762 () Unit!2242)

(assert (=> d!19129 (= lt!36762 (choose!463 (toList!732 lt!35842) (_1!1099 lt!35659)))))

(declare-fun e!51843 () Bool)

(assert (=> d!19129 e!51843))

(declare-fun res!41487 () Bool)

(assert (=> d!19129 (=> (not res!41487) (not e!51843))))

(assert (=> d!19129 (= res!41487 (isStrictlySorted!290 (toList!732 lt!35842)))))

(assert (=> d!19129 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35842) (_1!1099 lt!35659)) lt!36762)))

(declare-fun b!79369 () Bool)

(assert (=> b!79369 (= e!51843 (containsKey!139 (toList!732 lt!35842) (_1!1099 lt!35659)))))

(assert (= (and d!19129 res!41487) b!79369))

(assert (=> d!19129 m!77781))

(assert (=> d!19129 m!77781))

(assert (=> d!19129 m!78063))

(declare-fun m!80239 () Bool)

(assert (=> d!19129 m!80239))

(declare-fun m!80241 () Bool)

(assert (=> d!19129 m!80241))

(assert (=> b!79369 m!78059))

(assert (=> b!78167 d!19129))

(declare-fun d!19131 () Bool)

(assert (=> d!19131 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35842) (_1!1099 lt!35659))) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35842) (_1!1099 lt!35659)))))))

(declare-fun bs!3357 () Bool)

(assert (= bs!3357 d!19131))

(assert (=> bs!3357 m!77781))

(declare-fun m!80243 () Bool)

(assert (=> bs!3357 m!80243))

(assert (=> b!78167 d!19131))

(assert (=> b!78167 d!18491))

(assert (=> d!18587 d!18585))

(declare-fun d!19133 () Bool)

(assert (=> d!19133 (= (getValueByKey!135 lt!35795 (_1!1099 lt!35660)) (Some!140 (_2!1099 lt!35660)))))

(assert (=> d!19133 true))

(declare-fun _$22!397 () Unit!2242)

(assert (=> d!19133 (= (choose!462 lt!35795 (_1!1099 lt!35660) (_2!1099 lt!35660)) _$22!397)))

(declare-fun bs!3358 () Bool)

(assert (= bs!3358 d!19133))

(assert (=> bs!3358 m!77667))

(assert (=> d!18587 d!19133))

(declare-fun d!19135 () Bool)

(declare-fun res!41488 () Bool)

(declare-fun e!51844 () Bool)

(assert (=> d!19135 (=> res!41488 e!51844)))

(assert (=> d!19135 (= res!41488 (or ((_ is Nil!1508) lt!35795) ((_ is Nil!1508) (t!5148 lt!35795))))))

(assert (=> d!19135 (= (isStrictlySorted!290 lt!35795) e!51844)))

(declare-fun b!79370 () Bool)

(declare-fun e!51845 () Bool)

(assert (=> b!79370 (= e!51844 e!51845)))

(declare-fun res!41489 () Bool)

(assert (=> b!79370 (=> (not res!41489) (not e!51845))))

(assert (=> b!79370 (= res!41489 (bvslt (_1!1099 (h!2095 lt!35795)) (_1!1099 (h!2095 (t!5148 lt!35795)))))))

(declare-fun b!79371 () Bool)

(assert (=> b!79371 (= e!51845 (isStrictlySorted!290 (t!5148 lt!35795)))))

(assert (= (and d!19135 (not res!41488)) b!79370))

(assert (= (and b!79370 res!41489) b!79371))

(declare-fun m!80245 () Bool)

(assert (=> b!79371 m!80245))

(assert (=> d!18587 d!19135))

(declare-fun b!79372 () Bool)

(declare-fun e!51847 () List!1511)

(declare-fun call!7316 () List!1511)

(assert (=> b!79372 (= e!51847 call!7316)))

(declare-fun b!79373 () Bool)

(declare-fun res!41491 () Bool)

(declare-fun e!51849 () Bool)

(assert (=> b!79373 (=> (not res!41491) (not e!51849))))

(declare-fun lt!36763 () List!1511)

(assert (=> b!79373 (= res!41491 (containsKey!139 lt!36763 (_1!1099 lt!35660)))))

(declare-fun c!12292 () Bool)

(declare-fun e!51850 () List!1511)

(declare-fun call!7317 () List!1511)

(declare-fun bm!7313 () Bool)

(assert (=> bm!7313 (= call!7317 ($colon$colon!68 e!51850 (ite c!12292 (h!2095 (t!5148 (toList!732 (+!103 lt!35662 lt!35659)))) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660)))))))

(declare-fun c!12293 () Bool)

(assert (=> bm!7313 (= c!12293 c!12292)))

(declare-fun c!12291 () Bool)

(declare-fun c!12294 () Bool)

(declare-fun b!79374 () Bool)

(assert (=> b!79374 (= e!51850 (ite c!12291 (t!5148 (t!5148 (toList!732 (+!103 lt!35662 lt!35659)))) (ite c!12294 (Cons!1507 (h!2095 (t!5148 (toList!732 (+!103 lt!35662 lt!35659)))) (t!5148 (t!5148 (toList!732 (+!103 lt!35662 lt!35659))))) Nil!1508)))))

(declare-fun d!19137 () Bool)

(assert (=> d!19137 e!51849))

(declare-fun res!41490 () Bool)

(assert (=> d!19137 (=> (not res!41490) (not e!51849))))

(assert (=> d!19137 (= res!41490 (isStrictlySorted!290 lt!36763))))

(declare-fun e!51846 () List!1511)

(assert (=> d!19137 (= lt!36763 e!51846)))

(assert (=> d!19137 (= c!12292 (and ((_ is Cons!1507) (t!5148 (toList!732 (+!103 lt!35662 lt!35659)))) (bvslt (_1!1099 (h!2095 (t!5148 (toList!732 (+!103 lt!35662 lt!35659))))) (_1!1099 lt!35660))))))

(assert (=> d!19137 (isStrictlySorted!290 (t!5148 (toList!732 (+!103 lt!35662 lt!35659))))))

(assert (=> d!19137 (= (insertStrictlySorted!58 (t!5148 (toList!732 (+!103 lt!35662 lt!35659))) (_1!1099 lt!35660) (_2!1099 lt!35660)) lt!36763)))

(declare-fun bm!7314 () Bool)

(declare-fun call!7318 () List!1511)

(assert (=> bm!7314 (= call!7318 call!7316)))

(declare-fun b!79375 () Bool)

(assert (=> b!79375 (= c!12294 (and ((_ is Cons!1507) (t!5148 (toList!732 (+!103 lt!35662 lt!35659)))) (bvsgt (_1!1099 (h!2095 (t!5148 (toList!732 (+!103 lt!35662 lt!35659))))) (_1!1099 lt!35660))))))

(declare-fun e!51848 () List!1511)

(assert (=> b!79375 (= e!51847 e!51848)))

(declare-fun b!79376 () Bool)

(assert (=> b!79376 (= e!51848 call!7318)))

(declare-fun b!79377 () Bool)

(assert (=> b!79377 (= e!51846 e!51847)))

(assert (=> b!79377 (= c!12291 (and ((_ is Cons!1507) (t!5148 (toList!732 (+!103 lt!35662 lt!35659)))) (= (_1!1099 (h!2095 (t!5148 (toList!732 (+!103 lt!35662 lt!35659))))) (_1!1099 lt!35660))))))

(declare-fun b!79378 () Bool)

(assert (=> b!79378 (= e!51848 call!7318)))

(declare-fun bm!7315 () Bool)

(assert (=> bm!7315 (= call!7316 call!7317)))

(declare-fun b!79379 () Bool)

(assert (=> b!79379 (= e!51850 (insertStrictlySorted!58 (t!5148 (t!5148 (toList!732 (+!103 lt!35662 lt!35659)))) (_1!1099 lt!35660) (_2!1099 lt!35660)))))

(declare-fun b!79380 () Bool)

(assert (=> b!79380 (= e!51846 call!7317)))

(declare-fun b!79381 () Bool)

(assert (=> b!79381 (= e!51849 (contains!740 lt!36763 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!19137 c!12292) b!79380))

(assert (= (and d!19137 (not c!12292)) b!79377))

(assert (= (and b!79377 c!12291) b!79372))

(assert (= (and b!79377 (not c!12291)) b!79375))

(assert (= (and b!79375 c!12294) b!79378))

(assert (= (and b!79375 (not c!12294)) b!79376))

(assert (= (or b!79378 b!79376) bm!7314))

(assert (= (or b!79372 bm!7314) bm!7315))

(assert (= (or b!79380 bm!7315) bm!7313))

(assert (= (and bm!7313 c!12293) b!79379))

(assert (= (and bm!7313 (not c!12293)) b!79374))

(assert (= (and d!19137 res!41490) b!79373))

(assert (= (and b!79373 res!41491) b!79381))

(declare-fun m!80247 () Bool)

(assert (=> b!79379 m!80247))

(declare-fun m!80249 () Bool)

(assert (=> bm!7313 m!80249))

(declare-fun m!80251 () Bool)

(assert (=> b!79373 m!80251))

(declare-fun m!80253 () Bool)

(assert (=> b!79381 m!80253))

(declare-fun m!80255 () Bool)

(assert (=> d!19137 m!80255))

(assert (=> d!19137 m!79835))

(assert (=> b!78494 d!19137))

(declare-fun d!19139 () Bool)

(assert (=> d!19139 (= ($colon$colon!68 e!51251 (ite c!12024 (h!2095 (toList!732 lt!35663)) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659)))) (Cons!1507 (ite c!12024 (h!2095 (toList!732 lt!35663)) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))) e!51251))))

(assert (=> bm!7200 d!19139))

(declare-fun b!79382 () Bool)

(declare-fun e!51851 () Option!141)

(assert (=> b!79382 (= e!51851 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36044)))))))

(declare-fun b!79384 () Bool)

(declare-fun e!51852 () Option!141)

(assert (=> b!79384 (= e!51852 (getValueByKey!135 (t!5148 (toList!732 lt!36044)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun c!12295 () Bool)

(declare-fun d!19141 () Bool)

(assert (=> d!19141 (= c!12295 (and ((_ is Cons!1507) (toList!732 lt!36044)) (= (_1!1099 (h!2095 (toList!732 lt!36044))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!19141 (= (getValueByKey!135 (toList!732 lt!36044) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) e!51851)))

(declare-fun b!79385 () Bool)

(assert (=> b!79385 (= e!51852 None!139)))

(declare-fun b!79383 () Bool)

(assert (=> b!79383 (= e!51851 e!51852)))

(declare-fun c!12296 () Bool)

(assert (=> b!79383 (= c!12296 (and ((_ is Cons!1507) (toList!732 lt!36044)) (not (= (_1!1099 (h!2095 (toList!732 lt!36044))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!19141 c!12295) b!79382))

(assert (= (and d!19141 (not c!12295)) b!79383))

(assert (= (and b!79383 c!12296) b!79384))

(assert (= (and b!79383 (not c!12296)) b!79385))

(declare-fun m!80257 () Bool)

(assert (=> b!79384 m!80257))

(assert (=> b!78120 d!19141))

(assert (=> b!78240 d!18949))

(assert (=> b!78240 d!18951))

(declare-fun b!79386 () Bool)

(declare-fun e!51854 () Bool)

(declare-fun call!7319 () Bool)

(assert (=> b!79386 (= e!51854 call!7319)))

(declare-fun d!19143 () Bool)

(declare-fun res!41493 () Bool)

(declare-fun e!51855 () Bool)

(assert (=> d!19143 (=> res!41493 e!51855)))

(assert (=> d!19143 (= res!41493 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!19143 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992)))) e!51855)))

(declare-fun b!79387 () Bool)

(declare-fun e!51853 () Bool)

(assert (=> b!79387 (= e!51855 e!51853)))

(declare-fun c!12297 () Bool)

(assert (=> b!79387 (= c!12297 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!79388 () Bool)

(assert (=> b!79388 (= e!51853 call!7319)))

(declare-fun b!79389 () Bool)

(assert (=> b!79389 (= e!51853 e!51854)))

(declare-fun lt!36765 () (_ BitVec 64))

(assert (=> b!79389 (= lt!36765 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!36766 () Unit!2242)

(assert (=> b!79389 (= lt!36766 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) lt!36765 #b00000000000000000000000000000000))))

(assert (=> b!79389 (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) lt!36765 #b00000000000000000000000000000000)))

(declare-fun lt!36764 () Unit!2242)

(assert (=> b!79389 (= lt!36764 lt!36766)))

(declare-fun res!41492 () Bool)

(assert (=> b!79389 (= res!41492 (= (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000) (_keys!3930 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992)))) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!79389 (=> (not res!41492) (not e!51854))))

(declare-fun bm!7316 () Bool)

(assert (=> bm!7316 (= call!7319 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3930 (v!2584 (underlying!273 thiss!992))) (mask!6266 (v!2584 (underlying!273 thiss!992)))))))

(assert (= (and d!19143 (not res!41493)) b!79387))

(assert (= (and b!79387 c!12297) b!79389))

(assert (= (and b!79387 (not c!12297)) b!79388))

(assert (= (and b!79389 res!41492) b!79386))

(assert (= (or b!79386 b!79388) bm!7316))

(assert (=> b!79387 m!80205))

(assert (=> b!79387 m!80205))

(assert (=> b!79387 m!80207))

(assert (=> b!79389 m!80205))

(declare-fun m!80259 () Bool)

(assert (=> b!79389 m!80259))

(declare-fun m!80261 () Bool)

(assert (=> b!79389 m!80261))

(assert (=> b!79389 m!80205))

(declare-fun m!80263 () Bool)

(assert (=> b!79389 m!80263))

(declare-fun m!80265 () Bool)

(assert (=> bm!7316 m!80265))

(assert (=> b!78199 d!19143))

(declare-fun d!19145 () Bool)

(assert (=> d!19145 (= (apply!79 (+!103 lt!36018 (tuple2!2177 lt!36027 (minValue!2169 newMap!16))) lt!36024) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!36018 (tuple2!2177 lt!36027 (minValue!2169 newMap!16)))) lt!36024)))))

(declare-fun bs!3359 () Bool)

(assert (= bs!3359 d!19145))

(declare-fun m!80267 () Bool)

(assert (=> bs!3359 m!80267))

(assert (=> bs!3359 m!80267))

(declare-fun m!80269 () Bool)

(assert (=> bs!3359 m!80269))

(assert (=> b!78087 d!19145))

(declare-fun d!19147 () Bool)

(assert (=> d!19147 (= (apply!79 (+!103 lt!36018 (tuple2!2177 lt!36027 (minValue!2169 newMap!16))) lt!36024) (apply!79 lt!36018 lt!36024))))

(declare-fun lt!36767 () Unit!2242)

(assert (=> d!19147 (= lt!36767 (choose!467 lt!36018 lt!36027 (minValue!2169 newMap!16) lt!36024))))

(declare-fun e!51856 () Bool)

(assert (=> d!19147 e!51856))

(declare-fun res!41494 () Bool)

(assert (=> d!19147 (=> (not res!41494) (not e!51856))))

(assert (=> d!19147 (= res!41494 (contains!739 lt!36018 lt!36024))))

(assert (=> d!19147 (= (addApplyDifferent!55 lt!36018 lt!36027 (minValue!2169 newMap!16) lt!36024) lt!36767)))

(declare-fun b!79390 () Bool)

(assert (=> b!79390 (= e!51856 (not (= lt!36024 lt!36027)))))

(assert (= (and d!19147 res!41494) b!79390))

(declare-fun m!80271 () Bool)

(assert (=> d!19147 m!80271))

(assert (=> d!19147 m!77941))

(assert (=> d!19147 m!77941))

(assert (=> d!19147 m!77943))

(declare-fun m!80273 () Bool)

(assert (=> d!19147 m!80273))

(assert (=> d!19147 m!77967))

(assert (=> b!78087 d!19147))

(declare-fun d!19149 () Bool)

(declare-fun e!51857 () Bool)

(assert (=> d!19149 e!51857))

(declare-fun res!41495 () Bool)

(assert (=> d!19149 (=> (not res!41495) (not e!51857))))

(declare-fun lt!36771 () ListLongMap!1433)

(assert (=> d!19149 (= res!41495 (contains!739 lt!36771 (_1!1099 (tuple2!2177 lt!36027 (minValue!2169 newMap!16)))))))

(declare-fun lt!36769 () List!1511)

(assert (=> d!19149 (= lt!36771 (ListLongMap!1434 lt!36769))))

(declare-fun lt!36768 () Unit!2242)

(declare-fun lt!36770 () Unit!2242)

(assert (=> d!19149 (= lt!36768 lt!36770)))

(assert (=> d!19149 (= (getValueByKey!135 lt!36769 (_1!1099 (tuple2!2177 lt!36027 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36027 (minValue!2169 newMap!16)))))))

(assert (=> d!19149 (= lt!36770 (lemmaContainsTupThenGetReturnValue!55 lt!36769 (_1!1099 (tuple2!2177 lt!36027 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36027 (minValue!2169 newMap!16)))))))

(assert (=> d!19149 (= lt!36769 (insertStrictlySorted!58 (toList!732 lt!36018) (_1!1099 (tuple2!2177 lt!36027 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36027 (minValue!2169 newMap!16)))))))

(assert (=> d!19149 (= (+!103 lt!36018 (tuple2!2177 lt!36027 (minValue!2169 newMap!16))) lt!36771)))

(declare-fun b!79391 () Bool)

(declare-fun res!41496 () Bool)

(assert (=> b!79391 (=> (not res!41496) (not e!51857))))

(assert (=> b!79391 (= res!41496 (= (getValueByKey!135 (toList!732 lt!36771) (_1!1099 (tuple2!2177 lt!36027 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36027 (minValue!2169 newMap!16))))))))

(declare-fun b!79392 () Bool)

(assert (=> b!79392 (= e!51857 (contains!740 (toList!732 lt!36771) (tuple2!2177 lt!36027 (minValue!2169 newMap!16))))))

(assert (= (and d!19149 res!41495) b!79391))

(assert (= (and b!79391 res!41496) b!79392))

(declare-fun m!80275 () Bool)

(assert (=> d!19149 m!80275))

(declare-fun m!80277 () Bool)

(assert (=> d!19149 m!80277))

(declare-fun m!80279 () Bool)

(assert (=> d!19149 m!80279))

(declare-fun m!80281 () Bool)

(assert (=> d!19149 m!80281))

(declare-fun m!80283 () Bool)

(assert (=> b!79391 m!80283))

(declare-fun m!80285 () Bool)

(assert (=> b!79392 m!80285))

(assert (=> b!78087 d!19149))

(declare-fun d!19151 () Bool)

(assert (=> d!19151 (= (apply!79 (+!103 lt!36030 (tuple2!2177 lt!36031 (minValue!2169 newMap!16))) lt!36033) (apply!79 lt!36030 lt!36033))))

(declare-fun lt!36772 () Unit!2242)

(assert (=> d!19151 (= lt!36772 (choose!467 lt!36030 lt!36031 (minValue!2169 newMap!16) lt!36033))))

(declare-fun e!51858 () Bool)

(assert (=> d!19151 e!51858))

(declare-fun res!41497 () Bool)

(assert (=> d!19151 (=> (not res!41497) (not e!51858))))

(assert (=> d!19151 (= res!41497 (contains!739 lt!36030 lt!36033))))

(assert (=> d!19151 (= (addApplyDifferent!55 lt!36030 lt!36031 (minValue!2169 newMap!16) lt!36033) lt!36772)))

(declare-fun b!79393 () Bool)

(assert (=> b!79393 (= e!51858 (not (= lt!36033 lt!36031)))))

(assert (= (and d!19151 res!41497) b!79393))

(declare-fun m!80287 () Bool)

(assert (=> d!19151 m!80287))

(assert (=> d!19151 m!77951))

(assert (=> d!19151 m!77951))

(assert (=> d!19151 m!77969))

(declare-fun m!80289 () Bool)

(assert (=> d!19151 m!80289))

(assert (=> d!19151 m!77939))

(assert (=> b!78087 d!19151))

(declare-fun d!19153 () Bool)

(declare-fun e!51859 () Bool)

(assert (=> d!19153 e!51859))

(declare-fun res!41498 () Bool)

(assert (=> d!19153 (=> (not res!41498) (not e!51859))))

(declare-fun lt!36776 () ListLongMap!1433)

(assert (=> d!19153 (= res!41498 (contains!739 lt!36776 (_1!1099 (tuple2!2177 lt!36031 (minValue!2169 newMap!16)))))))

(declare-fun lt!36774 () List!1511)

(assert (=> d!19153 (= lt!36776 (ListLongMap!1434 lt!36774))))

(declare-fun lt!36773 () Unit!2242)

(declare-fun lt!36775 () Unit!2242)

(assert (=> d!19153 (= lt!36773 lt!36775)))

(assert (=> d!19153 (= (getValueByKey!135 lt!36774 (_1!1099 (tuple2!2177 lt!36031 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36031 (minValue!2169 newMap!16)))))))

(assert (=> d!19153 (= lt!36775 (lemmaContainsTupThenGetReturnValue!55 lt!36774 (_1!1099 (tuple2!2177 lt!36031 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36031 (minValue!2169 newMap!16)))))))

(assert (=> d!19153 (= lt!36774 (insertStrictlySorted!58 (toList!732 lt!36030) (_1!1099 (tuple2!2177 lt!36031 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36031 (minValue!2169 newMap!16)))))))

(assert (=> d!19153 (= (+!103 lt!36030 (tuple2!2177 lt!36031 (minValue!2169 newMap!16))) lt!36776)))

(declare-fun b!79394 () Bool)

(declare-fun res!41499 () Bool)

(assert (=> b!79394 (=> (not res!41499) (not e!51859))))

(assert (=> b!79394 (= res!41499 (= (getValueByKey!135 (toList!732 lt!36776) (_1!1099 (tuple2!2177 lt!36031 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36031 (minValue!2169 newMap!16))))))))

(declare-fun b!79395 () Bool)

(assert (=> b!79395 (= e!51859 (contains!740 (toList!732 lt!36776) (tuple2!2177 lt!36031 (minValue!2169 newMap!16))))))

(assert (= (and d!19153 res!41498) b!79394))

(assert (= (and b!79394 res!41499) b!79395))

(declare-fun m!80291 () Bool)

(assert (=> d!19153 m!80291))

(declare-fun m!80293 () Bool)

(assert (=> d!19153 m!80293))

(declare-fun m!80295 () Bool)

(assert (=> d!19153 m!80295))

(declare-fun m!80297 () Bool)

(assert (=> d!19153 m!80297))

(declare-fun m!80299 () Bool)

(assert (=> b!79394 m!80299))

(declare-fun m!80301 () Bool)

(assert (=> b!79395 m!80301))

(assert (=> b!78087 d!19153))

(declare-fun d!19155 () Bool)

(assert (=> d!19155 (= (apply!79 (+!103 lt!36030 (tuple2!2177 lt!36031 (minValue!2169 newMap!16))) lt!36033) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!36030 (tuple2!2177 lt!36031 (minValue!2169 newMap!16)))) lt!36033)))))

(declare-fun bs!3360 () Bool)

(assert (= bs!3360 d!19155))

(declare-fun m!80303 () Bool)

(assert (=> bs!3360 m!80303))

(assert (=> bs!3360 m!80303))

(declare-fun m!80305 () Bool)

(assert (=> bs!3360 m!80305))

(assert (=> b!78087 d!19155))

(declare-fun d!19157 () Bool)

(assert (=> d!19157 (= (apply!79 lt!36018 lt!36024) (get!1180 (getValueByKey!135 (toList!732 lt!36018) lt!36024)))))

(declare-fun bs!3361 () Bool)

(assert (= bs!3361 d!19157))

(declare-fun m!80307 () Bool)

(assert (=> bs!3361 m!80307))

(assert (=> bs!3361 m!80307))

(declare-fun m!80309 () Bool)

(assert (=> bs!3361 m!80309))

(assert (=> b!78087 d!19157))

(declare-fun d!19159 () Bool)

(assert (=> d!19159 (= (apply!79 (+!103 lt!36023 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16))) lt!36034) (apply!79 lt!36023 lt!36034))))

(declare-fun lt!36777 () Unit!2242)

(assert (=> d!19159 (= lt!36777 (choose!467 lt!36023 lt!36036 (zeroValue!2169 newMap!16) lt!36034))))

(declare-fun e!51860 () Bool)

(assert (=> d!19159 e!51860))

(declare-fun res!41500 () Bool)

(assert (=> d!19159 (=> (not res!41500) (not e!51860))))

(assert (=> d!19159 (= res!41500 (contains!739 lt!36023 lt!36034))))

(assert (=> d!19159 (= (addApplyDifferent!55 lt!36023 lt!36036 (zeroValue!2169 newMap!16) lt!36034) lt!36777)))

(declare-fun b!79396 () Bool)

(assert (=> b!79396 (= e!51860 (not (= lt!36034 lt!36036)))))

(assert (= (and d!19159 res!41500) b!79396))

(declare-fun m!80311 () Bool)

(assert (=> d!19159 m!80311))

(assert (=> d!19159 m!77957))

(assert (=> d!19159 m!77957))

(assert (=> d!19159 m!77959))

(declare-fun m!80313 () Bool)

(assert (=> d!19159 m!80313))

(assert (=> d!19159 m!77937))

(assert (=> b!78087 d!19159))

(declare-fun d!19161 () Bool)

(declare-fun e!51861 () Bool)

(assert (=> d!19161 e!51861))

(declare-fun res!41501 () Bool)

(assert (=> d!19161 (=> (not res!41501) (not e!51861))))

(declare-fun lt!36781 () ListLongMap!1433)

(assert (=> d!19161 (= res!41501 (contains!739 lt!36781 (_1!1099 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16)))))))

(declare-fun lt!36779 () List!1511)

(assert (=> d!19161 (= lt!36781 (ListLongMap!1434 lt!36779))))

(declare-fun lt!36778 () Unit!2242)

(declare-fun lt!36780 () Unit!2242)

(assert (=> d!19161 (= lt!36778 lt!36780)))

(assert (=> d!19161 (= (getValueByKey!135 lt!36779 (_1!1099 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19161 (= lt!36780 (lemmaContainsTupThenGetReturnValue!55 lt!36779 (_1!1099 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19161 (= lt!36779 (insertStrictlySorted!58 (toList!732 lt!36023) (_1!1099 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19161 (= (+!103 lt!36023 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16))) lt!36781)))

(declare-fun b!79397 () Bool)

(declare-fun res!41502 () Bool)

(assert (=> b!79397 (=> (not res!41502) (not e!51861))))

(assert (=> b!79397 (= res!41502 (= (getValueByKey!135 (toList!732 lt!36781) (_1!1099 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16))))))))

(declare-fun b!79398 () Bool)

(assert (=> b!79398 (= e!51861 (contains!740 (toList!732 lt!36781) (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16))))))

(assert (= (and d!19161 res!41501) b!79397))

(assert (= (and b!79397 res!41502) b!79398))

(declare-fun m!80315 () Bool)

(assert (=> d!19161 m!80315))

(declare-fun m!80317 () Bool)

(assert (=> d!19161 m!80317))

(declare-fun m!80319 () Bool)

(assert (=> d!19161 m!80319))

(declare-fun m!80321 () Bool)

(assert (=> d!19161 m!80321))

(declare-fun m!80323 () Bool)

(assert (=> b!79397 m!80323))

(declare-fun m!80325 () Bool)

(assert (=> b!79398 m!80325))

(assert (=> b!78087 d!19161))

(declare-fun b!79399 () Bool)

(assert (=> b!79399 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> b!79399 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (_values!2254 newMap!16))))))

(declare-fun e!51864 () Bool)

(declare-fun lt!36787 () ListLongMap!1433)

(assert (=> b!79399 (= e!51864 (= (apply!79 lt!36787 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79401 () Bool)

(declare-fun lt!36782 () Unit!2242)

(declare-fun lt!36783 () Unit!2242)

(assert (=> b!79401 (= lt!36782 lt!36783)))

(declare-fun lt!36785 () (_ BitVec 64))

(declare-fun lt!36784 () V!2993)

(declare-fun lt!36788 () (_ BitVec 64))

(declare-fun lt!36786 () ListLongMap!1433)

(assert (=> b!79401 (not (contains!739 (+!103 lt!36786 (tuple2!2177 lt!36788 lt!36784)) lt!36785))))

(assert (=> b!79401 (= lt!36783 (addStillNotContains!29 lt!36786 lt!36788 lt!36784 lt!36785))))

(assert (=> b!79401 (= lt!36785 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79401 (= lt!36784 (get!1177 (select (arr!1883 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79401 (= lt!36788 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7320 () ListLongMap!1433)

(assert (=> b!79401 (= lt!36786 call!7320)))

(declare-fun e!51867 () ListLongMap!1433)

(assert (=> b!79401 (= e!51867 (+!103 call!7320 (tuple2!2177 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) (get!1177 (select (arr!1883 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7317 () Bool)

(assert (=> bm!7317 (= call!7320 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16)))))

(declare-fun b!79402 () Bool)

(declare-fun e!51868 () ListLongMap!1433)

(assert (=> b!79402 (= e!51868 e!51867)))

(declare-fun c!12301 () Bool)

(assert (=> b!79402 (= c!12301 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79403 () Bool)

(declare-fun e!51865 () Bool)

(assert (=> b!79403 (= e!51865 (= lt!36787 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2271 newMap!16))))))

(declare-fun b!79404 () Bool)

(declare-fun e!51862 () Bool)

(assert (=> b!79404 (= e!51862 e!51864)))

(assert (=> b!79404 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun res!41506 () Bool)

(assert (=> b!79404 (= res!41506 (contains!739 lt!36787 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79404 (=> (not res!41506) (not e!51864))))

(declare-fun b!79405 () Bool)

(assert (=> b!79405 (= e!51868 (ListLongMap!1434 Nil!1508))))

(declare-fun b!79406 () Bool)

(assert (=> b!79406 (= e!51867 call!7320)))

(declare-fun b!79407 () Bool)

(declare-fun e!51866 () Bool)

(assert (=> b!79407 (= e!51866 e!51862)))

(declare-fun c!12299 () Bool)

(declare-fun e!51863 () Bool)

(assert (=> b!79407 (= c!12299 e!51863)))

(declare-fun res!41504 () Bool)

(assert (=> b!79407 (=> (not res!41504) (not e!51863))))

(assert (=> b!79407 (= res!41504 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79408 () Bool)

(declare-fun res!41503 () Bool)

(assert (=> b!79408 (=> (not res!41503) (not e!51866))))

(assert (=> b!79408 (= res!41503 (not (contains!739 lt!36787 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!19163 () Bool)

(assert (=> d!19163 e!51866))

(declare-fun res!41505 () Bool)

(assert (=> d!19163 (=> (not res!41505) (not e!51866))))

(assert (=> d!19163 (= res!41505 (not (contains!739 lt!36787 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19163 (= lt!36787 e!51868)))

(declare-fun c!12300 () Bool)

(assert (=> d!19163 (= c!12300 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!19163 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19163 (= (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36787)))

(declare-fun b!79400 () Bool)

(assert (=> b!79400 (= e!51862 e!51865)))

(declare-fun c!12298 () Bool)

(assert (=> b!79400 (= c!12298 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79409 () Bool)

(assert (=> b!79409 (= e!51865 (isEmpty!330 lt!36787))))

(declare-fun b!79410 () Bool)

(assert (=> b!79410 (= e!51863 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79410 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!19163 c!12300) b!79405))

(assert (= (and d!19163 (not c!12300)) b!79402))

(assert (= (and b!79402 c!12301) b!79401))

(assert (= (and b!79402 (not c!12301)) b!79406))

(assert (= (or b!79401 b!79406) bm!7317))

(assert (= (and d!19163 res!41505) b!79408))

(assert (= (and b!79408 res!41503) b!79407))

(assert (= (and b!79407 res!41504) b!79410))

(assert (= (and b!79407 c!12299) b!79404))

(assert (= (and b!79407 (not c!12299)) b!79400))

(assert (= (and b!79404 res!41506) b!79399))

(assert (= (and b!79400 c!12298) b!79403))

(assert (= (and b!79400 (not c!12298)) b!79409))

(declare-fun b_lambda!3529 () Bool)

(assert (=> (not b_lambda!3529) (not b!79399)))

(assert (=> b!79399 t!5160))

(declare-fun b_and!4857 () Bool)

(assert (= b_and!4853 (and (=> t!5160 result!2821) b_and!4857)))

(assert (=> b!79399 t!5162))

(declare-fun b_and!4859 () Bool)

(assert (= b_and!4855 (and (=> t!5162 result!2823) b_and!4859)))

(declare-fun b_lambda!3531 () Bool)

(assert (=> (not b_lambda!3531) (not b!79401)))

(assert (=> b!79401 t!5160))

(declare-fun b_and!4861 () Bool)

(assert (= b_and!4857 (and (=> t!5160 result!2821) b_and!4861)))

(assert (=> b!79401 t!5162))

(declare-fun b_and!4863 () Bool)

(assert (= b_and!4859 (and (=> t!5162 result!2823) b_and!4863)))

(declare-fun m!80327 () Bool)

(assert (=> b!79408 m!80327))

(assert (=> b!79402 m!77965))

(assert (=> b!79402 m!77965))

(assert (=> b!79402 m!77975))

(assert (=> b!79399 m!77983))

(assert (=> b!79399 m!77985))

(assert (=> b!79399 m!77965))

(assert (=> b!79399 m!77985))

(assert (=> b!79399 m!77983))

(assert (=> b!79399 m!77987))

(assert (=> b!79399 m!77965))

(declare-fun m!80329 () Bool)

(assert (=> b!79399 m!80329))

(declare-fun m!80331 () Bool)

(assert (=> bm!7317 m!80331))

(declare-fun m!80333 () Bool)

(assert (=> d!19163 m!80333))

(assert (=> d!19163 m!77977))

(assert (=> b!79410 m!77965))

(assert (=> b!79410 m!77965))

(assert (=> b!79410 m!77975))

(assert (=> b!79401 m!77983))

(declare-fun m!80335 () Bool)

(assert (=> b!79401 m!80335))

(assert (=> b!79401 m!80335))

(declare-fun m!80337 () Bool)

(assert (=> b!79401 m!80337))

(assert (=> b!79401 m!77985))

(declare-fun m!80339 () Bool)

(assert (=> b!79401 m!80339))

(declare-fun m!80341 () Bool)

(assert (=> b!79401 m!80341))

(assert (=> b!79401 m!77985))

(assert (=> b!79401 m!77983))

(assert (=> b!79401 m!77987))

(assert (=> b!79401 m!77965))

(assert (=> b!79404 m!77965))

(assert (=> b!79404 m!77965))

(declare-fun m!80343 () Bool)

(assert (=> b!79404 m!80343))

(declare-fun m!80345 () Bool)

(assert (=> b!79409 m!80345))

(assert (=> b!79403 m!80331))

(assert (=> b!78087 d!19163))

(declare-fun d!19165 () Bool)

(assert (=> d!19165 (= (apply!79 lt!36030 lt!36033) (get!1180 (getValueByKey!135 (toList!732 lt!36030) lt!36033)))))

(declare-fun bs!3362 () Bool)

(assert (= bs!3362 d!19165))

(declare-fun m!80347 () Bool)

(assert (=> bs!3362 m!80347))

(assert (=> bs!3362 m!80347))

(declare-fun m!80349 () Bool)

(assert (=> bs!3362 m!80349))

(assert (=> b!78087 d!19165))

(declare-fun d!19167 () Bool)

(assert (=> d!19167 (= (apply!79 lt!36023 lt!36034) (get!1180 (getValueByKey!135 (toList!732 lt!36023) lt!36034)))))

(declare-fun bs!3363 () Bool)

(assert (= bs!3363 d!19167))

(declare-fun m!80351 () Bool)

(assert (=> bs!3363 m!80351))

(assert (=> bs!3363 m!80351))

(declare-fun m!80353 () Bool)

(assert (=> bs!3363 m!80353))

(assert (=> b!78087 d!19167))

(declare-fun d!19169 () Bool)

(assert (=> d!19169 (contains!739 (+!103 lt!36019 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16))) lt!36026)))

(declare-fun lt!36789 () Unit!2242)

(assert (=> d!19169 (= lt!36789 (choose!468 lt!36019 lt!36015 (zeroValue!2169 newMap!16) lt!36026))))

(assert (=> d!19169 (contains!739 lt!36019 lt!36026)))

(assert (=> d!19169 (= (addStillContains!55 lt!36019 lt!36015 (zeroValue!2169 newMap!16) lt!36026) lt!36789)))

(declare-fun bs!3364 () Bool)

(assert (= bs!3364 d!19169))

(assert (=> bs!3364 m!77955))

(assert (=> bs!3364 m!77955))

(assert (=> bs!3364 m!77963))

(declare-fun m!80355 () Bool)

(assert (=> bs!3364 m!80355))

(declare-fun m!80357 () Bool)

(assert (=> bs!3364 m!80357))

(assert (=> b!78087 d!19169))

(declare-fun d!19171 () Bool)

(declare-fun e!51870 () Bool)

(assert (=> d!19171 e!51870))

(declare-fun res!41507 () Bool)

(assert (=> d!19171 (=> res!41507 e!51870)))

(declare-fun lt!36792 () Bool)

(assert (=> d!19171 (= res!41507 (not lt!36792))))

(declare-fun lt!36793 () Bool)

(assert (=> d!19171 (= lt!36792 lt!36793)))

(declare-fun lt!36790 () Unit!2242)

(declare-fun e!51869 () Unit!2242)

(assert (=> d!19171 (= lt!36790 e!51869)))

(declare-fun c!12302 () Bool)

(assert (=> d!19171 (= c!12302 lt!36793)))

(assert (=> d!19171 (= lt!36793 (containsKey!139 (toList!732 (+!103 lt!36019 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16)))) lt!36026))))

(assert (=> d!19171 (= (contains!739 (+!103 lt!36019 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16))) lt!36026) lt!36792)))

(declare-fun b!79411 () Bool)

(declare-fun lt!36791 () Unit!2242)

(assert (=> b!79411 (= e!51869 lt!36791)))

(assert (=> b!79411 (= lt!36791 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (+!103 lt!36019 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16)))) lt!36026))))

(assert (=> b!79411 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!36019 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16)))) lt!36026))))

(declare-fun b!79412 () Bool)

(declare-fun Unit!2303 () Unit!2242)

(assert (=> b!79412 (= e!51869 Unit!2303)))

(declare-fun b!79413 () Bool)

(assert (=> b!79413 (= e!51870 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!36019 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16)))) lt!36026)))))

(assert (= (and d!19171 c!12302) b!79411))

(assert (= (and d!19171 (not c!12302)) b!79412))

(assert (= (and d!19171 (not res!41507)) b!79413))

(declare-fun m!80359 () Bool)

(assert (=> d!19171 m!80359))

(declare-fun m!80361 () Bool)

(assert (=> b!79411 m!80361))

(declare-fun m!80363 () Bool)

(assert (=> b!79411 m!80363))

(assert (=> b!79411 m!80363))

(declare-fun m!80365 () Bool)

(assert (=> b!79411 m!80365))

(assert (=> b!79413 m!80363))

(assert (=> b!79413 m!80363))

(assert (=> b!79413 m!80365))

(assert (=> b!78087 d!19171))

(declare-fun d!19173 () Bool)

(assert (=> d!19173 (= (apply!79 (+!103 lt!36023 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16))) lt!36034) (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!36023 (tuple2!2177 lt!36036 (zeroValue!2169 newMap!16)))) lt!36034)))))

(declare-fun bs!3365 () Bool)

(assert (= bs!3365 d!19173))

(declare-fun m!80367 () Bool)

(assert (=> bs!3365 m!80367))

(assert (=> bs!3365 m!80367))

(declare-fun m!80369 () Bool)

(assert (=> bs!3365 m!80369))

(assert (=> b!78087 d!19173))

(declare-fun d!19175 () Bool)

(declare-fun e!51871 () Bool)

(assert (=> d!19175 e!51871))

(declare-fun res!41508 () Bool)

(assert (=> d!19175 (=> (not res!41508) (not e!51871))))

(declare-fun lt!36797 () ListLongMap!1433)

(assert (=> d!19175 (= res!41508 (contains!739 lt!36797 (_1!1099 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16)))))))

(declare-fun lt!36795 () List!1511)

(assert (=> d!19175 (= lt!36797 (ListLongMap!1434 lt!36795))))

(declare-fun lt!36794 () Unit!2242)

(declare-fun lt!36796 () Unit!2242)

(assert (=> d!19175 (= lt!36794 lt!36796)))

(assert (=> d!19175 (= (getValueByKey!135 lt!36795 (_1!1099 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19175 (= lt!36796 (lemmaContainsTupThenGetReturnValue!55 lt!36795 (_1!1099 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19175 (= lt!36795 (insertStrictlySorted!58 (toList!732 lt!36019) (_1!1099 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16))) (_2!1099 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16)))))))

(assert (=> d!19175 (= (+!103 lt!36019 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16))) lt!36797)))

(declare-fun b!79414 () Bool)

(declare-fun res!41509 () Bool)

(assert (=> b!79414 (=> (not res!41509) (not e!51871))))

(assert (=> b!79414 (= res!41509 (= (getValueByKey!135 (toList!732 lt!36797) (_1!1099 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16))))))))

(declare-fun b!79415 () Bool)

(assert (=> b!79415 (= e!51871 (contains!740 (toList!732 lt!36797) (tuple2!2177 lt!36015 (zeroValue!2169 newMap!16))))))

(assert (= (and d!19175 res!41508) b!79414))

(assert (= (and b!79414 res!41509) b!79415))

(declare-fun m!80371 () Bool)

(assert (=> d!19175 m!80371))

(declare-fun m!80373 () Bool)

(assert (=> d!19175 m!80373))

(declare-fun m!80375 () Bool)

(assert (=> d!19175 m!80375))

(declare-fun m!80377 () Bool)

(assert (=> d!19175 m!80377))

(declare-fun m!80379 () Bool)

(assert (=> b!79414 m!80379))

(declare-fun m!80381 () Bool)

(assert (=> b!79415 m!80381))

(assert (=> b!78087 d!19175))

(assert (=> d!18465 d!18463))

(assert (=> d!18465 d!18467))

(assert (=> d!18465 d!18461))

(assert (=> d!18465 d!18469))

(assert (=> d!18527 d!18513))

(assert (=> d!18527 d!18515))

(assert (=> d!18527 d!18519))

(declare-fun d!19177 () Bool)

(assert (=> d!19177 (= (apply!79 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35905) (apply!79 lt!35902 lt!35905))))

(assert (=> d!19177 true))

(declare-fun _$34!817 () Unit!2242)

(assert (=> d!19177 (= (choose!467 lt!35902 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35905) _$34!817)))

(declare-fun bs!3366 () Bool)

(assert (= bs!3366 d!19177))

(assert (=> bs!3366 m!77805))

(assert (=> bs!3366 m!77805))

(assert (=> bs!3366 m!77819))

(assert (=> bs!3366 m!77793))

(assert (=> d!18527 d!19177))

(declare-fun d!19179 () Bool)

(declare-fun e!51873 () Bool)

(assert (=> d!19179 e!51873))

(declare-fun res!41510 () Bool)

(assert (=> d!19179 (=> res!41510 e!51873)))

(declare-fun lt!36800 () Bool)

(assert (=> d!19179 (= res!41510 (not lt!36800))))

(declare-fun lt!36801 () Bool)

(assert (=> d!19179 (= lt!36800 lt!36801)))

(declare-fun lt!36798 () Unit!2242)

(declare-fun e!51872 () Unit!2242)

(assert (=> d!19179 (= lt!36798 e!51872)))

(declare-fun c!12303 () Bool)

(assert (=> d!19179 (= c!12303 lt!36801)))

(assert (=> d!19179 (= lt!36801 (containsKey!139 (toList!732 lt!35902) lt!35905))))

(assert (=> d!19179 (= (contains!739 lt!35902 lt!35905) lt!36800)))

(declare-fun b!79416 () Bool)

(declare-fun lt!36799 () Unit!2242)

(assert (=> b!79416 (= e!51872 lt!36799)))

(assert (=> b!79416 (= lt!36799 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35902) lt!35905))))

(assert (=> b!79416 (isDefined!89 (getValueByKey!135 (toList!732 lt!35902) lt!35905))))

(declare-fun b!79417 () Bool)

(declare-fun Unit!2304 () Unit!2242)

(assert (=> b!79417 (= e!51872 Unit!2304)))

(declare-fun b!79418 () Bool)

(assert (=> b!79418 (= e!51873 (isDefined!89 (getValueByKey!135 (toList!732 lt!35902) lt!35905)))))

(assert (= (and d!19179 c!12303) b!79416))

(assert (= (and d!19179 (not c!12303)) b!79417))

(assert (= (and d!19179 (not res!41510)) b!79418))

(declare-fun m!80383 () Bool)

(assert (=> d!19179 m!80383))

(declare-fun m!80385 () Bool)

(assert (=> b!79416 m!80385))

(assert (=> b!79416 m!78421))

(assert (=> b!79416 m!78421))

(declare-fun m!80387 () Bool)

(assert (=> b!79416 m!80387))

(assert (=> b!79418 m!78421))

(assert (=> b!79418 m!78421))

(assert (=> b!79418 m!80387))

(assert (=> d!18527 d!19179))

(declare-fun d!19181 () Bool)

(declare-fun lt!36802 () Bool)

(assert (=> d!19181 (= lt!36802 (select (content!84 Nil!1507) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!51875 () Bool)

(assert (=> d!19181 (= lt!36802 e!51875)))

(declare-fun res!41511 () Bool)

(assert (=> d!19181 (=> (not res!41511) (not e!51875))))

(assert (=> d!19181 (= res!41511 ((_ is Cons!1506) Nil!1507))))

(assert (=> d!19181 (= (contains!741 Nil!1507 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) lt!36802)))

(declare-fun b!79419 () Bool)

(declare-fun e!51874 () Bool)

(assert (=> b!79419 (= e!51875 e!51874)))

(declare-fun res!41512 () Bool)

(assert (=> b!79419 (=> res!41512 e!51874)))

(assert (=> b!79419 (= res!41512 (= (h!2094 Nil!1507) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79420 () Bool)

(assert (=> b!79420 (= e!51874 (contains!741 (t!5147 Nil!1507) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!19181 res!41511) b!79419))

(assert (= (and b!79419 (not res!41512)) b!79420))

(assert (=> d!19181 m!78619))

(assert (=> d!19181 m!77965))

(declare-fun m!80389 () Bool)

(assert (=> d!19181 m!80389))

(assert (=> b!79420 m!77965))

(declare-fun m!80391 () Bool)

(assert (=> b!79420 m!80391))

(assert (=> b!78497 d!19181))

(declare-fun b!79421 () Bool)

(declare-fun e!51876 () Option!141)

(assert (=> b!79421 (= e!51876 (Some!140 (_2!1099 (h!2095 (t!5148 lt!35810)))))))

(declare-fun b!79423 () Bool)

(declare-fun e!51877 () Option!141)

(assert (=> b!79423 (= e!51877 (getValueByKey!135 (t!5148 (t!5148 lt!35810)) (_1!1099 lt!35670)))))

(declare-fun d!19183 () Bool)

(declare-fun c!12304 () Bool)

(assert (=> d!19183 (= c!12304 (and ((_ is Cons!1507) (t!5148 lt!35810)) (= (_1!1099 (h!2095 (t!5148 lt!35810))) (_1!1099 lt!35670))))))

(assert (=> d!19183 (= (getValueByKey!135 (t!5148 lt!35810) (_1!1099 lt!35670)) e!51876)))

(declare-fun b!79424 () Bool)

(assert (=> b!79424 (= e!51877 None!139)))

(declare-fun b!79422 () Bool)

(assert (=> b!79422 (= e!51876 e!51877)))

(declare-fun c!12305 () Bool)

(assert (=> b!79422 (= c!12305 (and ((_ is Cons!1507) (t!5148 lt!35810)) (not (= (_1!1099 (h!2095 (t!5148 lt!35810))) (_1!1099 lt!35670)))))))

(assert (= (and d!19183 c!12304) b!79421))

(assert (= (and d!19183 (not c!12304)) b!79422))

(assert (= (and b!79422 c!12305) b!79423))

(assert (= (and b!79422 (not c!12305)) b!79424))

(declare-fun m!80393 () Bool)

(assert (=> b!79423 m!80393))

(assert (=> b!78558 d!19183))

(declare-fun d!19185 () Bool)

(declare-fun e!51879 () Bool)

(assert (=> d!19185 e!51879))

(declare-fun res!41513 () Bool)

(assert (=> d!19185 (=> res!41513 e!51879)))

(declare-fun lt!36805 () Bool)

(assert (=> d!19185 (= res!41513 (not lt!36805))))

(declare-fun lt!36806 () Bool)

(assert (=> d!19185 (= lt!36805 lt!36806)))

(declare-fun lt!36803 () Unit!2242)

(declare-fun e!51878 () Unit!2242)

(assert (=> d!19185 (= lt!36803 e!51878)))

(declare-fun c!12306 () Bool)

(assert (=> d!19185 (= c!12306 lt!36806)))

(assert (=> d!19185 (= lt!36806 (containsKey!139 (toList!732 lt!36014) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!19185 (= (contains!739 lt!36014 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36805)))

(declare-fun b!79425 () Bool)

(declare-fun lt!36804 () Unit!2242)

(assert (=> b!79425 (= e!51878 lt!36804)))

(assert (=> b!79425 (= lt!36804 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36014) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> b!79425 (isDefined!89 (getValueByKey!135 (toList!732 lt!36014) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79426 () Bool)

(declare-fun Unit!2305 () Unit!2242)

(assert (=> b!79426 (= e!51878 Unit!2305)))

(declare-fun b!79427 () Bool)

(assert (=> b!79427 (= e!51879 (isDefined!89 (getValueByKey!135 (toList!732 lt!36014) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19185 c!12306) b!79425))

(assert (= (and d!19185 (not c!12306)) b!79426))

(assert (= (and d!19185 (not res!41513)) b!79427))

(declare-fun m!80395 () Bool)

(assert (=> d!19185 m!80395))

(declare-fun m!80397 () Bool)

(assert (=> b!79425 m!80397))

(assert (=> b!79425 m!77931))

(assert (=> b!79425 m!77931))

(declare-fun m!80399 () Bool)

(assert (=> b!79425 m!80399))

(assert (=> b!79427 m!77931))

(assert (=> b!79427 m!77931))

(assert (=> b!79427 m!80399))

(assert (=> d!18407 d!19185))

(declare-fun b!79428 () Bool)

(declare-fun e!51880 () Option!141)

(assert (=> b!79428 (= e!51880 (Some!140 (_2!1099 (h!2095 lt!36012))))))

(declare-fun b!79430 () Bool)

(declare-fun e!51881 () Option!141)

(assert (=> b!79430 (= e!51881 (getValueByKey!135 (t!5148 lt!36012) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!19187 () Bool)

(declare-fun c!12307 () Bool)

(assert (=> d!19187 (= c!12307 (and ((_ is Cons!1507) lt!36012) (= (_1!1099 (h!2095 lt!36012)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19187 (= (getValueByKey!135 lt!36012 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!51880)))

(declare-fun b!79431 () Bool)

(assert (=> b!79431 (= e!51881 None!139)))

(declare-fun b!79429 () Bool)

(assert (=> b!79429 (= e!51880 e!51881)))

(declare-fun c!12308 () Bool)

(assert (=> b!79429 (= c!12308 (and ((_ is Cons!1507) lt!36012) (not (= (_1!1099 (h!2095 lt!36012)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19187 c!12307) b!79428))

(assert (= (and d!19187 (not c!12307)) b!79429))

(assert (= (and b!79429 c!12308) b!79430))

(assert (= (and b!79429 (not c!12308)) b!79431))

(declare-fun m!80401 () Bool)

(assert (=> b!79430 m!80401))

(assert (=> d!18407 d!19187))

(declare-fun d!19189 () Bool)

(assert (=> d!19189 (= (getValueByKey!135 lt!36012 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36807 () Unit!2242)

(assert (=> d!19189 (= lt!36807 (choose!462 lt!36012 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!51882 () Bool)

(assert (=> d!19189 e!51882))

(declare-fun res!41514 () Bool)

(assert (=> d!19189 (=> (not res!41514) (not e!51882))))

(assert (=> d!19189 (= res!41514 (isStrictlySorted!290 lt!36012))))

(assert (=> d!19189 (= (lemmaContainsTupThenGetReturnValue!55 lt!36012 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36807)))

(declare-fun b!79432 () Bool)

(declare-fun res!41515 () Bool)

(assert (=> b!79432 (=> (not res!41515) (not e!51882))))

(assert (=> b!79432 (= res!41515 (containsKey!139 lt!36012 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79433 () Bool)

(assert (=> b!79433 (= e!51882 (contains!740 lt!36012 (tuple2!2177 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19189 res!41514) b!79432))

(assert (= (and b!79432 res!41515) b!79433))

(assert (=> d!19189 m!77925))

(declare-fun m!80403 () Bool)

(assert (=> d!19189 m!80403))

(declare-fun m!80405 () Bool)

(assert (=> d!19189 m!80405))

(declare-fun m!80407 () Bool)

(assert (=> b!79432 m!80407))

(declare-fun m!80409 () Bool)

(assert (=> b!79433 m!80409))

(assert (=> d!18407 d!19189))

(declare-fun b!79434 () Bool)

(declare-fun e!51884 () List!1511)

(declare-fun call!7321 () List!1511)

(assert (=> b!79434 (= e!51884 call!7321)))

(declare-fun b!79435 () Bool)

(declare-fun res!41517 () Bool)

(declare-fun e!51886 () Bool)

(assert (=> b!79435 (=> (not res!41517) (not e!51886))))

(declare-fun lt!36808 () List!1511)

(assert (=> b!79435 (= res!41517 (containsKey!139 lt!36808 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun c!12310 () Bool)

(declare-fun call!7322 () List!1511)

(declare-fun e!51887 () List!1511)

(declare-fun bm!7318 () Bool)

(assert (=> bm!7318 (= call!7322 ($colon$colon!68 e!51887 (ite c!12310 (h!2095 (toList!732 call!7079)) (tuple2!2177 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun c!12311 () Bool)

(assert (=> bm!7318 (= c!12311 c!12310)))

(declare-fun b!79436 () Bool)

(declare-fun c!12309 () Bool)

(declare-fun c!12312 () Bool)

(assert (=> b!79436 (= e!51887 (ite c!12309 (t!5148 (toList!732 call!7079)) (ite c!12312 (Cons!1507 (h!2095 (toList!732 call!7079)) (t!5148 (toList!732 call!7079))) Nil!1508)))))

(declare-fun d!19191 () Bool)

(assert (=> d!19191 e!51886))

(declare-fun res!41516 () Bool)

(assert (=> d!19191 (=> (not res!41516) (not e!51886))))

(assert (=> d!19191 (= res!41516 (isStrictlySorted!290 lt!36808))))

(declare-fun e!51883 () List!1511)

(assert (=> d!19191 (= lt!36808 e!51883)))

(assert (=> d!19191 (= c!12310 (and ((_ is Cons!1507) (toList!732 call!7079)) (bvslt (_1!1099 (h!2095 (toList!732 call!7079))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19191 (isStrictlySorted!290 (toList!732 call!7079))))

(assert (=> d!19191 (= (insertStrictlySorted!58 (toList!732 call!7079) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36808)))

(declare-fun bm!7319 () Bool)

(declare-fun call!7323 () List!1511)

(assert (=> bm!7319 (= call!7323 call!7321)))

(declare-fun b!79437 () Bool)

(assert (=> b!79437 (= c!12312 (and ((_ is Cons!1507) (toList!732 call!7079)) (bvsgt (_1!1099 (h!2095 (toList!732 call!7079))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun e!51885 () List!1511)

(assert (=> b!79437 (= e!51884 e!51885)))

(declare-fun b!79438 () Bool)

(assert (=> b!79438 (= e!51885 call!7323)))

(declare-fun b!79439 () Bool)

(assert (=> b!79439 (= e!51883 e!51884)))

(assert (=> b!79439 (= c!12309 (and ((_ is Cons!1507) (toList!732 call!7079)) (= (_1!1099 (h!2095 (toList!732 call!7079))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!79440 () Bool)

(assert (=> b!79440 (= e!51885 call!7323)))

(declare-fun bm!7320 () Bool)

(assert (=> bm!7320 (= call!7321 call!7322)))

(declare-fun b!79441 () Bool)

(assert (=> b!79441 (= e!51887 (insertStrictlySorted!58 (t!5148 (toList!732 call!7079)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79442 () Bool)

(assert (=> b!79442 (= e!51883 call!7322)))

(declare-fun b!79443 () Bool)

(assert (=> b!79443 (= e!51886 (contains!740 lt!36808 (tuple2!2177 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19191 c!12310) b!79442))

(assert (= (and d!19191 (not c!12310)) b!79439))

(assert (= (and b!79439 c!12309) b!79434))

(assert (= (and b!79439 (not c!12309)) b!79437))

(assert (= (and b!79437 c!12312) b!79440))

(assert (= (and b!79437 (not c!12312)) b!79438))

(assert (= (or b!79440 b!79438) bm!7319))

(assert (= (or b!79434 bm!7319) bm!7320))

(assert (= (or b!79442 bm!7320) bm!7318))

(assert (= (and bm!7318 c!12311) b!79441))

(assert (= (and bm!7318 (not c!12311)) b!79436))

(assert (= (and d!19191 res!41516) b!79435))

(assert (= (and b!79435 res!41517) b!79443))

(declare-fun m!80411 () Bool)

(assert (=> b!79441 m!80411))

(declare-fun m!80413 () Bool)

(assert (=> bm!7318 m!80413))

(declare-fun m!80415 () Bool)

(assert (=> b!79435 m!80415))

(declare-fun m!80417 () Bool)

(assert (=> b!79443 m!80417))

(declare-fun m!80419 () Bool)

(assert (=> d!19191 m!80419))

(declare-fun m!80421 () Bool)

(assert (=> d!19191 m!80421))

(assert (=> d!18407 d!19191))

(declare-fun d!19193 () Bool)

(declare-fun res!41518 () Bool)

(declare-fun e!51888 () Bool)

(assert (=> d!19193 (=> res!41518 e!51888)))

(assert (=> d!19193 (= res!41518 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))))) lt!35835)))))

(assert (=> d!19193 (= (containsKey!139 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835) e!51888)))

(declare-fun b!79444 () Bool)

(declare-fun e!51889 () Bool)

(assert (=> b!79444 (= e!51888 e!51889)))

(declare-fun res!41519 () Bool)

(assert (=> b!79444 (=> (not res!41519) (not e!51889))))

(assert (=> b!79444 (= res!41519 (and (or (not ((_ is Cons!1507) (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))))) (bvsle (_1!1099 (h!2095 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))))) lt!35835)) ((_ is Cons!1507) (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)))) (bvslt (_1!1099 (h!2095 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))))) lt!35835)))))

(declare-fun b!79445 () Bool)

(assert (=> b!79445 (= e!51889 (containsKey!139 (t!5148 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)))) lt!35835))))

(assert (= (and d!19193 (not res!41518)) b!79444))

(assert (= (and b!79444 res!41519) b!79445))

(declare-fun m!80423 () Bool)

(assert (=> b!79445 m!80423))

(assert (=> d!18645 d!19193))

(declare-fun d!19195 () Bool)

(declare-fun lt!36809 () Bool)

(assert (=> d!19195 (= lt!36809 (select (content!83 lt!36338) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun e!51890 () Bool)

(assert (=> d!19195 (= lt!36809 e!51890)))

(declare-fun res!41520 () Bool)

(assert (=> d!19195 (=> (not res!41520) (not e!51890))))

(assert (=> d!19195 (= res!41520 ((_ is Cons!1507) lt!36338))))

(assert (=> d!19195 (= (contains!740 lt!36338 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))) lt!36809)))

(declare-fun b!79446 () Bool)

(declare-fun e!51891 () Bool)

(assert (=> b!79446 (= e!51890 e!51891)))

(declare-fun res!41521 () Bool)

(assert (=> b!79446 (=> res!41521 e!51891)))

(assert (=> b!79446 (= res!41521 (= (h!2095 lt!36338) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun b!79447 () Bool)

(assert (=> b!79447 (= e!51891 (contains!740 (t!5148 lt!36338) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!19195 res!41520) b!79446))

(assert (= (and b!79446 (not res!41521)) b!79447))

(declare-fun m!80425 () Bool)

(assert (=> d!19195 m!80425))

(declare-fun m!80427 () Bool)

(assert (=> d!19195 m!80427))

(declare-fun m!80429 () Bool)

(assert (=> b!79447 m!80429))

(assert (=> b!78496 d!19195))

(declare-fun d!19197 () Bool)

(assert (=> d!19197 (arrayContainsKey!0 (_keys!3930 newMap!16) lt!36068 #b00000000000000000000000000000000)))

(declare-fun lt!36810 () Unit!2242)

(assert (=> d!19197 (= lt!36810 (choose!13 (_keys!3930 newMap!16) lt!36068 #b00000000000000000000000000000000))))

(assert (=> d!19197 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!19197 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3930 newMap!16) lt!36068 #b00000000000000000000000000000000) lt!36810)))

(declare-fun bs!3367 () Bool)

(assert (= bs!3367 d!19197))

(assert (=> bs!3367 m!78087))

(declare-fun m!80431 () Bool)

(assert (=> bs!3367 m!80431))

(assert (=> b!78197 d!19197))

(declare-fun d!19199 () Bool)

(declare-fun res!41522 () Bool)

(declare-fun e!51892 () Bool)

(assert (=> d!19199 (=> res!41522 e!51892)))

(assert (=> d!19199 (= res!41522 (= (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) lt!36068))))

(assert (=> d!19199 (= (arrayContainsKey!0 (_keys!3930 newMap!16) lt!36068 #b00000000000000000000000000000000) e!51892)))

(declare-fun b!79448 () Bool)

(declare-fun e!51893 () Bool)

(assert (=> b!79448 (= e!51892 e!51893)))

(declare-fun res!41523 () Bool)

(assert (=> b!79448 (=> (not res!41523) (not e!51893))))

(assert (=> b!79448 (= res!41523 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79449 () Bool)

(assert (=> b!79449 (= e!51893 (arrayContainsKey!0 (_keys!3930 newMap!16) lt!36068 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!19199 (not res!41522)) b!79448))

(assert (= (and b!79448 res!41523) b!79449))

(assert (=> d!19199 m!77965))

(declare-fun m!80433 () Bool)

(assert (=> b!79449 m!80433))

(assert (=> b!78197 d!19199))

(declare-fun b!79450 () Bool)

(declare-fun e!51895 () SeekEntryResult!243)

(declare-fun lt!36812 () SeekEntryResult!243)

(assert (=> b!79450 (= e!51895 (seekKeyOrZeroReturnVacant!0 (x!11549 lt!36812) (index!3108 lt!36812) (index!3108 lt!36812) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(declare-fun d!19201 () Bool)

(declare-fun lt!36813 () SeekEntryResult!243)

(assert (=> d!19201 (and (or ((_ is Undefined!243) lt!36813) (not ((_ is Found!243) lt!36813)) (and (bvsge (index!3107 lt!36813) #b00000000000000000000000000000000) (bvslt (index!3107 lt!36813) (size!2124 (_keys!3930 newMap!16))))) (or ((_ is Undefined!243) lt!36813) ((_ is Found!243) lt!36813) (not ((_ is MissingZero!243) lt!36813)) (and (bvsge (index!3106 lt!36813) #b00000000000000000000000000000000) (bvslt (index!3106 lt!36813) (size!2124 (_keys!3930 newMap!16))))) (or ((_ is Undefined!243) lt!36813) ((_ is Found!243) lt!36813) ((_ is MissingZero!243) lt!36813) (not ((_ is MissingVacant!243) lt!36813)) (and (bvsge (index!3109 lt!36813) #b00000000000000000000000000000000) (bvslt (index!3109 lt!36813) (size!2124 (_keys!3930 newMap!16))))) (or ((_ is Undefined!243) lt!36813) (ite ((_ is Found!243) lt!36813) (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36813)) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!243) lt!36813) (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3106 lt!36813)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!243) lt!36813) (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3109 lt!36813)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!51896 () SeekEntryResult!243)

(assert (=> d!19201 (= lt!36813 e!51896)))

(declare-fun c!12315 () Bool)

(assert (=> d!19201 (= c!12315 (and ((_ is Intermediate!243) lt!36812) (undefined!1055 lt!36812)))))

(assert (=> d!19201 (= lt!36812 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) (mask!6266 newMap!16)) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(assert (=> d!19201 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19201 (= (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000) (_keys!3930 newMap!16) (mask!6266 newMap!16)) lt!36813)))

(declare-fun b!79451 () Bool)

(declare-fun e!51894 () SeekEntryResult!243)

(assert (=> b!79451 (= e!51894 (Found!243 (index!3108 lt!36812)))))

(declare-fun b!79452 () Bool)

(assert (=> b!79452 (= e!51895 (MissingZero!243 (index!3108 lt!36812)))))

(declare-fun b!79453 () Bool)

(assert (=> b!79453 (= e!51896 Undefined!243)))

(declare-fun b!79454 () Bool)

(declare-fun c!12314 () Bool)

(declare-fun lt!36811 () (_ BitVec 64))

(assert (=> b!79454 (= c!12314 (= lt!36811 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79454 (= e!51894 e!51895)))

(declare-fun b!79455 () Bool)

(assert (=> b!79455 (= e!51896 e!51894)))

(assert (=> b!79455 (= lt!36811 (select (arr!1882 (_keys!3930 newMap!16)) (index!3108 lt!36812)))))

(declare-fun c!12313 () Bool)

(assert (=> b!79455 (= c!12313 (= lt!36811 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!19201 c!12315) b!79453))

(assert (= (and d!19201 (not c!12315)) b!79455))

(assert (= (and b!79455 c!12313) b!79451))

(assert (= (and b!79455 (not c!12313)) b!79454))

(assert (= (and b!79454 c!12314) b!79452))

(assert (= (and b!79454 (not c!12314)) b!79450))

(assert (=> b!79450 m!77965))

(declare-fun m!80435 () Bool)

(assert (=> b!79450 m!80435))

(declare-fun m!80437 () Bool)

(assert (=> d!19201 m!80437))

(assert (=> d!19201 m!77965))

(declare-fun m!80439 () Bool)

(assert (=> d!19201 m!80439))

(declare-fun m!80441 () Bool)

(assert (=> d!19201 m!80441))

(assert (=> d!19201 m!77977))

(assert (=> d!19201 m!77965))

(assert (=> d!19201 m!80437))

(declare-fun m!80443 () Bool)

(assert (=> d!19201 m!80443))

(declare-fun m!80445 () Bool)

(assert (=> d!19201 m!80445))

(declare-fun m!80447 () Bool)

(assert (=> b!79455 m!80447))

(assert (=> b!78197 d!19201))

(declare-fun d!19203 () Bool)

(assert (=> d!19203 (isDefined!89 (getValueByKey!135 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))

(declare-fun lt!36814 () Unit!2242)

(assert (=> d!19203 (= lt!36814 (choose!463 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))

(declare-fun e!51897 () Bool)

(assert (=> d!19203 e!51897))

(declare-fun res!41524 () Bool)

(assert (=> d!19203 (=> (not res!41524) (not e!51897))))

(assert (=> d!19203 (= res!41524 (isStrictlySorted!290 (toList!732 call!7146)))))

(assert (=> d!19203 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))) lt!36814)))

(declare-fun b!79456 () Bool)

(assert (=> b!79456 (= e!51897 (containsKey!139 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))

(assert (= (and d!19203 res!41524) b!79456))

(assert (=> d!19203 m!78643))

(assert (=> d!19203 m!78643))

(assert (=> d!19203 m!78645))

(declare-fun m!80449 () Bool)

(assert (=> d!19203 m!80449))

(declare-fun m!80451 () Bool)

(assert (=> d!19203 m!80451))

(assert (=> b!79456 m!78639))

(assert (=> b!78475 d!19203))

(declare-fun d!19205 () Bool)

(assert (=> d!19205 (= (isDefined!89 (getValueByKey!135 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))))) (not (isEmpty!331 (getValueByKey!135 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))))

(declare-fun bs!3368 () Bool)

(assert (= bs!3368 d!19205))

(assert (=> bs!3368 m!78643))

(declare-fun m!80453 () Bool)

(assert (=> bs!3368 m!80453))

(assert (=> b!78475 d!19205))

(declare-fun b!79457 () Bool)

(declare-fun e!51898 () Option!141)

(assert (=> b!79457 (= e!51898 (Some!140 (_2!1099 (h!2095 (toList!732 call!7146)))))))

(declare-fun b!79459 () Bool)

(declare-fun e!51899 () Option!141)

(assert (=> b!79459 (= e!51899 (getValueByKey!135 (t!5148 (toList!732 call!7146)) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))

(declare-fun d!19207 () Bool)

(declare-fun c!12316 () Bool)

(assert (=> d!19207 (= c!12316 (and ((_ is Cons!1507) (toList!732 call!7146)) (= (_1!1099 (h!2095 (toList!732 call!7146))) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))))))))

(assert (=> d!19207 (= (getValueByKey!135 (toList!732 call!7146) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))) e!51898)))

(declare-fun b!79460 () Bool)

(assert (=> b!79460 (= e!51899 None!139)))

(declare-fun b!79458 () Bool)

(assert (=> b!79458 (= e!51898 e!51899)))

(declare-fun c!12317 () Bool)

(assert (=> b!79458 (= c!12317 (and ((_ is Cons!1507) (toList!732 call!7146)) (not (= (_1!1099 (h!2095 (toList!732 call!7146))) (ite c!11923 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))))

(assert (= (and d!19207 c!12316) b!79457))

(assert (= (and d!19207 (not c!12316)) b!79458))

(assert (= (and b!79458 c!12317) b!79459))

(assert (= (and b!79458 (not c!12317)) b!79460))

(declare-fun m!80455 () Bool)

(assert (=> b!79459 m!80455))

(assert (=> b!78475 d!19207))

(declare-fun b!79461 () Bool)

(declare-fun e!51900 () Option!141)

(assert (=> b!79461 (= e!51900 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36103)))))))

(declare-fun b!79463 () Bool)

(declare-fun e!51901 () Option!141)

(assert (=> b!79463 (= e!51901 (getValueByKey!135 (t!5148 (toList!732 lt!36103)) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun c!12318 () Bool)

(declare-fun d!19209 () Bool)

(assert (=> d!19209 (= c!12318 (and ((_ is Cons!1507) (toList!732 lt!36103)) (= (_1!1099 (h!2095 (toList!732 lt!36103))) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (=> d!19209 (= (getValueByKey!135 (toList!732 lt!36103) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) e!51900)))

(declare-fun b!79464 () Bool)

(assert (=> b!79464 (= e!51901 None!139)))

(declare-fun b!79462 () Bool)

(assert (=> b!79462 (= e!51900 e!51901)))

(declare-fun c!12319 () Bool)

(assert (=> b!79462 (= c!12319 (and ((_ is Cons!1507) (toList!732 lt!36103)) (not (= (_1!1099 (h!2095 (toList!732 lt!36103))) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))))

(assert (= (and d!19209 c!12318) b!79461))

(assert (= (and d!19209 (not c!12318)) b!79462))

(assert (= (and b!79462 c!12319) b!79463))

(assert (= (and b!79462 (not c!12319)) b!79464))

(declare-fun m!80457 () Bool)

(assert (=> b!79463 m!80457))

(assert (=> b!78230 d!19209))

(assert (=> b!78523 d!18741))

(declare-fun d!19211 () Bool)

(declare-fun e!51903 () Bool)

(assert (=> d!19211 e!51903))

(declare-fun res!41525 () Bool)

(assert (=> d!19211 (=> res!41525 e!51903)))

(declare-fun lt!36817 () Bool)

(assert (=> d!19211 (= res!41525 (not lt!36817))))

(declare-fun lt!36818 () Bool)

(assert (=> d!19211 (= lt!36817 lt!36818)))

(declare-fun lt!36815 () Unit!2242)

(declare-fun e!51902 () Unit!2242)

(assert (=> d!19211 (= lt!36815 e!51902)))

(declare-fun c!12320 () Bool)

(assert (=> d!19211 (= c!12320 lt!36818)))

(assert (=> d!19211 (= lt!36818 (containsKey!139 (toList!732 lt!36103) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!19211 (= (contains!739 lt!36103 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) lt!36817)))

(declare-fun b!79465 () Bool)

(declare-fun lt!36816 () Unit!2242)

(assert (=> b!79465 (= e!51902 lt!36816)))

(assert (=> b!79465 (= lt!36816 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36103) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> b!79465 (isDefined!89 (getValueByKey!135 (toList!732 lt!36103) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!79466 () Bool)

(declare-fun Unit!2306 () Unit!2242)

(assert (=> b!79466 (= e!51902 Unit!2306)))

(declare-fun b!79467 () Bool)

(assert (=> b!79467 (= e!51903 (isDefined!89 (getValueByKey!135 (toList!732 lt!36103) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!19211 c!12320) b!79465))

(assert (= (and d!19211 (not c!12320)) b!79466))

(assert (= (and d!19211 (not res!41525)) b!79467))

(declare-fun m!80459 () Bool)

(assert (=> d!19211 m!80459))

(declare-fun m!80461 () Bool)

(assert (=> b!79465 m!80461))

(assert (=> b!79465 m!78203))

(assert (=> b!79465 m!78203))

(declare-fun m!80463 () Bool)

(assert (=> b!79465 m!80463))

(assert (=> b!79467 m!78203))

(assert (=> b!79467 m!78203))

(assert (=> b!79467 m!80463))

(assert (=> d!18471 d!19211))

(declare-fun b!79468 () Bool)

(declare-fun e!51904 () Option!141)

(assert (=> b!79468 (= e!51904 (Some!140 (_2!1099 (h!2095 lt!36101))))))

(declare-fun e!51905 () Option!141)

(declare-fun b!79470 () Bool)

(assert (=> b!79470 (= e!51905 (getValueByKey!135 (t!5148 lt!36101) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun c!12321 () Bool)

(declare-fun d!19213 () Bool)

(assert (=> d!19213 (= c!12321 (and ((_ is Cons!1507) lt!36101) (= (_1!1099 (h!2095 lt!36101)) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (=> d!19213 (= (getValueByKey!135 lt!36101 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) e!51904)))

(declare-fun b!79471 () Bool)

(assert (=> b!79471 (= e!51905 None!139)))

(declare-fun b!79469 () Bool)

(assert (=> b!79469 (= e!51904 e!51905)))

(declare-fun c!12322 () Bool)

(assert (=> b!79469 (= c!12322 (and ((_ is Cons!1507) lt!36101) (not (= (_1!1099 (h!2095 lt!36101)) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))))

(assert (= (and d!19213 c!12321) b!79468))

(assert (= (and d!19213 (not c!12321)) b!79469))

(assert (= (and b!79469 c!12322) b!79470))

(assert (= (and b!79469 (not c!12322)) b!79471))

(declare-fun m!80465 () Bool)

(assert (=> b!79470 m!80465))

(assert (=> d!18471 d!19213))

(declare-fun d!19215 () Bool)

(assert (=> d!19215 (= (getValueByKey!135 lt!36101 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (Some!140 (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun lt!36819 () Unit!2242)

(assert (=> d!19215 (= lt!36819 (choose!462 lt!36101 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun e!51906 () Bool)

(assert (=> d!19215 e!51906))

(declare-fun res!41526 () Bool)

(assert (=> d!19215 (=> (not res!41526) (not e!51906))))

(assert (=> d!19215 (= res!41526 (isStrictlySorted!290 lt!36101))))

(assert (=> d!19215 (= (lemmaContainsTupThenGetReturnValue!55 lt!36101 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) lt!36819)))

(declare-fun b!79472 () Bool)

(declare-fun res!41527 () Bool)

(assert (=> b!79472 (=> (not res!41527) (not e!51906))))

(assert (=> b!79472 (= res!41527 (containsKey!139 lt!36101 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!79473 () Bool)

(assert (=> b!79473 (= e!51906 (contains!740 lt!36101 (tuple2!2177 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!19215 res!41526) b!79472))

(assert (= (and b!79472 res!41527) b!79473))

(assert (=> d!19215 m!78197))

(declare-fun m!80467 () Bool)

(assert (=> d!19215 m!80467))

(declare-fun m!80469 () Bool)

(assert (=> d!19215 m!80469))

(declare-fun m!80471 () Bool)

(assert (=> b!79472 m!80471))

(declare-fun m!80473 () Bool)

(assert (=> b!79473 m!80473))

(assert (=> d!18471 d!19215))

(declare-fun b!79474 () Bool)

(declare-fun e!51908 () List!1511)

(declare-fun call!7324 () List!1511)

(assert (=> b!79474 (= e!51908 call!7324)))

(declare-fun b!79475 () Bool)

(declare-fun res!41529 () Bool)

(declare-fun e!51910 () Bool)

(assert (=> b!79475 (=> (not res!41529) (not e!51910))))

(declare-fun lt!36820 () List!1511)

(assert (=> b!79475 (= res!41529 (containsKey!139 lt!36820 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun c!12324 () Bool)

(declare-fun e!51911 () List!1511)

(declare-fun bm!7321 () Bool)

(declare-fun call!7325 () List!1511)

(assert (=> bm!7321 (= call!7325 ($colon$colon!68 e!51911 (ite c!12324 (h!2095 (toList!732 e!51035)) (tuple2!2177 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))))

(declare-fun c!12325 () Bool)

(assert (=> bm!7321 (= c!12325 c!12324)))

(declare-fun c!12323 () Bool)

(declare-fun c!12326 () Bool)

(declare-fun b!79476 () Bool)

(assert (=> b!79476 (= e!51911 (ite c!12323 (t!5148 (toList!732 e!51035)) (ite c!12326 (Cons!1507 (h!2095 (toList!732 e!51035)) (t!5148 (toList!732 e!51035))) Nil!1508)))))

(declare-fun d!19217 () Bool)

(assert (=> d!19217 e!51910))

(declare-fun res!41528 () Bool)

(assert (=> d!19217 (=> (not res!41528) (not e!51910))))

(assert (=> d!19217 (= res!41528 (isStrictlySorted!290 lt!36820))))

(declare-fun e!51907 () List!1511)

(assert (=> d!19217 (= lt!36820 e!51907)))

(assert (=> d!19217 (= c!12324 (and ((_ is Cons!1507) (toList!732 e!51035)) (bvslt (_1!1099 (h!2095 (toList!732 e!51035))) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (=> d!19217 (isStrictlySorted!290 (toList!732 e!51035))))

(assert (=> d!19217 (= (insertStrictlySorted!58 (toList!732 e!51035) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) lt!36820)))

(declare-fun bm!7322 () Bool)

(declare-fun call!7326 () List!1511)

(assert (=> bm!7322 (= call!7326 call!7324)))

(declare-fun b!79477 () Bool)

(assert (=> b!79477 (= c!12326 (and ((_ is Cons!1507) (toList!732 e!51035)) (bvsgt (_1!1099 (h!2095 (toList!732 e!51035))) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(declare-fun e!51909 () List!1511)

(assert (=> b!79477 (= e!51908 e!51909)))

(declare-fun b!79478 () Bool)

(assert (=> b!79478 (= e!51909 call!7326)))

(declare-fun b!79479 () Bool)

(assert (=> b!79479 (= e!51907 e!51908)))

(assert (=> b!79479 (= c!12323 (and ((_ is Cons!1507) (toList!732 e!51035)) (= (_1!1099 (h!2095 (toList!732 e!51035))) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(declare-fun b!79480 () Bool)

(assert (=> b!79480 (= e!51909 call!7326)))

(declare-fun bm!7323 () Bool)

(assert (=> bm!7323 (= call!7324 call!7325)))

(declare-fun b!79481 () Bool)

(assert (=> b!79481 (= e!51911 (insertStrictlySorted!58 (t!5148 (toList!732 e!51035)) (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!79482 () Bool)

(assert (=> b!79482 (= e!51907 call!7325)))

(declare-fun b!79483 () Bool)

(assert (=> b!79483 (= e!51910 (contains!740 lt!36820 (tuple2!2177 (_1!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_2!1099 (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!19217 c!12324) b!79482))

(assert (= (and d!19217 (not c!12324)) b!79479))

(assert (= (and b!79479 c!12323) b!79474))

(assert (= (and b!79479 (not c!12323)) b!79477))

(assert (= (and b!79477 c!12326) b!79480))

(assert (= (and b!79477 (not c!12326)) b!79478))

(assert (= (or b!79480 b!79478) bm!7322))

(assert (= (or b!79474 bm!7322) bm!7323))

(assert (= (or b!79482 bm!7323) bm!7321))

(assert (= (and bm!7321 c!12325) b!79481))

(assert (= (and bm!7321 (not c!12325)) b!79476))

(assert (= (and d!19217 res!41528) b!79475))

(assert (= (and b!79475 res!41529) b!79483))

(declare-fun m!80475 () Bool)

(assert (=> b!79481 m!80475))

(declare-fun m!80477 () Bool)

(assert (=> bm!7321 m!80477))

(declare-fun m!80479 () Bool)

(assert (=> b!79475 m!80479))

(declare-fun m!80481 () Bool)

(assert (=> b!79483 m!80481))

(declare-fun m!80483 () Bool)

(assert (=> d!19217 m!80483))

(declare-fun m!80485 () Bool)

(assert (=> d!19217 m!80485))

(assert (=> d!18471 d!19217))

(declare-fun d!19219 () Bool)

(declare-fun e!51912 () Bool)

(assert (=> d!19219 e!51912))

(declare-fun res!41530 () Bool)

(assert (=> d!19219 (=> (not res!41530) (not e!51912))))

(declare-fun lt!36824 () ListLongMap!1433)

(assert (=> d!19219 (= res!41530 (contains!739 lt!36824 (_1!1099 (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(declare-fun lt!36822 () List!1511)

(assert (=> d!19219 (= lt!36824 (ListLongMap!1434 lt!36822))))

(declare-fun lt!36821 () Unit!2242)

(declare-fun lt!36823 () Unit!2242)

(assert (=> d!19219 (= lt!36821 lt!36823)))

(assert (=> d!19219 (= (getValueByKey!135 lt!36822 (_1!1099 (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))) (Some!140 (_2!1099 (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!19219 (= lt!36823 (lemmaContainsTupThenGetReturnValue!55 lt!36822 (_1!1099 (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (_2!1099 (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!19219 (= lt!36822 (insertStrictlySorted!58 (toList!732 (ite c!11947 call!7159 (ite c!11945 call!7155 call!7158))) (_1!1099 (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (_2!1099 (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(assert (=> d!19219 (= (+!103 (ite c!11947 call!7159 (ite c!11945 call!7155 call!7158)) (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) lt!36824)))

(declare-fun b!79484 () Bool)

(declare-fun res!41531 () Bool)

(assert (=> b!79484 (=> (not res!41531) (not e!51912))))

(assert (=> b!79484 (= res!41531 (= (getValueByKey!135 (toList!732 lt!36824) (_1!1099 (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))) (Some!140 (_2!1099 (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))))

(declare-fun b!79485 () Bool)

(assert (=> b!79485 (= e!51912 (contains!740 (toList!732 lt!36824) (ite (or c!11947 c!11945) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (= (and d!19219 res!41530) b!79484))

(assert (= (and b!79484 res!41531) b!79485))

(declare-fun m!80487 () Bool)

(assert (=> d!19219 m!80487))

(declare-fun m!80489 () Bool)

(assert (=> d!19219 m!80489))

(declare-fun m!80491 () Bool)

(assert (=> d!19219 m!80491))

(declare-fun m!80493 () Bool)

(assert (=> d!19219 m!80493))

(declare-fun m!80495 () Bool)

(assert (=> b!79484 m!80495))

(declare-fun m!80497 () Bool)

(assert (=> b!79485 m!80497))

(assert (=> bm!7157 d!19219))

(declare-fun d!19221 () Bool)

(assert (=> d!19221 (= (get!1180 (getValueByKey!135 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2590 (getValueByKey!135 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18601 d!19221))

(declare-fun b!79486 () Bool)

(declare-fun e!51913 () Option!141)

(assert (=> b!79486 (= e!51913 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35901)))))))

(declare-fun b!79488 () Bool)

(declare-fun e!51914 () Option!141)

(assert (=> b!79488 (= e!51914 (getValueByKey!135 (t!5148 (toList!732 lt!35901)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!19223 () Bool)

(declare-fun c!12327 () Bool)

(assert (=> d!19223 (= c!12327 (and ((_ is Cons!1507) (toList!732 lt!35901)) (= (_1!1099 (h!2095 (toList!732 lt!35901))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19223 (= (getValueByKey!135 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000) e!51913)))

(declare-fun b!79489 () Bool)

(assert (=> b!79489 (= e!51914 None!139)))

(declare-fun b!79487 () Bool)

(assert (=> b!79487 (= e!51913 e!51914)))

(declare-fun c!12328 () Bool)

(assert (=> b!79487 (= c!12328 (and ((_ is Cons!1507) (toList!732 lt!35901)) (not (= (_1!1099 (h!2095 (toList!732 lt!35901))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!19223 c!12327) b!79486))

(assert (= (and d!19223 (not c!12327)) b!79487))

(assert (= (and b!79487 c!12328) b!79488))

(assert (= (and b!79487 (not c!12328)) b!79489))

(declare-fun m!80499 () Bool)

(assert (=> b!79488 m!80499))

(assert (=> d!18601 d!19223))

(declare-fun d!19225 () Bool)

(declare-fun lt!36825 () Bool)

(assert (=> d!19225 (= lt!36825 (select (content!83 lt!36293) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(declare-fun e!51915 () Bool)

(assert (=> d!19225 (= lt!36825 e!51915)))

(declare-fun res!41532 () Bool)

(assert (=> d!19225 (=> (not res!41532) (not e!51915))))

(assert (=> d!19225 (= res!41532 ((_ is Cons!1507) lt!36293))))

(assert (=> d!19225 (= (contains!740 lt!36293 (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))) lt!36825)))

(declare-fun b!79490 () Bool)

(declare-fun e!51916 () Bool)

(assert (=> b!79490 (= e!51915 e!51916)))

(declare-fun res!41533 () Bool)

(assert (=> b!79490 (=> res!41533 e!51916)))

(assert (=> b!79490 (= res!41533 (= (h!2095 lt!36293) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(declare-fun b!79491 () Bool)

(assert (=> b!79491 (= e!51916 (contains!740 (t!5148 lt!36293) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(assert (= (and d!19225 res!41532) b!79490))

(assert (= (and b!79490 (not res!41533)) b!79491))

(declare-fun m!80501 () Bool)

(assert (=> d!19225 m!80501))

(declare-fun m!80503 () Bool)

(assert (=> d!19225 m!80503))

(declare-fun m!80505 () Bool)

(assert (=> b!79491 m!80505))

(assert (=> b!78419 d!19225))

(declare-fun d!19227 () Bool)

(assert (=> d!19227 (isDefined!89 (getValueByKey!135 (toList!732 lt!35812) (_1!1099 lt!35670)))))

(declare-fun lt!36826 () Unit!2242)

(assert (=> d!19227 (= lt!36826 (choose!463 (toList!732 lt!35812) (_1!1099 lt!35670)))))

(declare-fun e!51917 () Bool)

(assert (=> d!19227 e!51917))

(declare-fun res!41534 () Bool)

(assert (=> d!19227 (=> (not res!41534) (not e!51917))))

(assert (=> d!19227 (= res!41534 (isStrictlySorted!290 (toList!732 lt!35812)))))

(assert (=> d!19227 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35812) (_1!1099 lt!35670)) lt!36826)))

(declare-fun b!79492 () Bool)

(assert (=> b!79492 (= e!51917 (containsKey!139 (toList!732 lt!35812) (_1!1099 lt!35670)))))

(assert (= (and d!19227 res!41534) b!79492))

(assert (=> d!19227 m!77719))

(assert (=> d!19227 m!77719))

(assert (=> d!19227 m!78775))

(declare-fun m!80507 () Bool)

(assert (=> d!19227 m!80507))

(declare-fun m!80509 () Bool)

(assert (=> d!19227 m!80509))

(assert (=> b!79492 m!78771))

(assert (=> b!78553 d!19227))

(declare-fun d!19229 () Bool)

(assert (=> d!19229 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35812) (_1!1099 lt!35670))) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35812) (_1!1099 lt!35670)))))))

(declare-fun bs!3369 () Bool)

(assert (= bs!3369 d!19229))

(assert (=> bs!3369 m!77719))

(declare-fun m!80511 () Bool)

(assert (=> bs!3369 m!80511))

(assert (=> b!78553 d!19229))

(assert (=> b!78553 d!18599))

(declare-fun d!19231 () Bool)

(declare-fun res!41535 () Bool)

(declare-fun e!51918 () Bool)

(assert (=> d!19231 (=> res!41535 e!51918)))

(assert (=> d!19231 (= res!41535 (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!19231 (= (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!51918)))

(declare-fun b!79493 () Bool)

(declare-fun e!51919 () Bool)

(assert (=> b!79493 (= e!51918 e!51919)))

(declare-fun res!41536 () Bool)

(assert (=> b!79493 (=> (not res!41536) (not e!51919))))

(assert (=> b!79493 (= res!41536 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!79494 () Bool)

(assert (=> b!79494 (= e!51919 (arrayContainsKey!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19231 (not res!41535)) b!79493))

(assert (= (and b!79493 res!41536) b!79494))

(assert (=> d!19231 m!79207))

(assert (=> b!79494 m!77463))

(declare-fun m!80513 () Bool)

(assert (=> b!79494 m!80513))

(assert (=> b!78358 d!19231))

(declare-fun d!19233 () Bool)

(declare-fun res!41537 () Bool)

(declare-fun e!51920 () Bool)

(assert (=> d!19233 (=> res!41537 e!51920)))

(assert (=> d!19233 (= res!41537 (and ((_ is Cons!1507) (toList!732 lt!35817)) (= (_1!1099 (h!2095 (toList!732 lt!35817))) (_1!1099 lt!35670))))))

(assert (=> d!19233 (= (containsKey!139 (toList!732 lt!35817) (_1!1099 lt!35670)) e!51920)))

(declare-fun b!79495 () Bool)

(declare-fun e!51921 () Bool)

(assert (=> b!79495 (= e!51920 e!51921)))

(declare-fun res!41538 () Bool)

(assert (=> b!79495 (=> (not res!41538) (not e!51921))))

(assert (=> b!79495 (= res!41538 (and (or (not ((_ is Cons!1507) (toList!732 lt!35817))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35817))) (_1!1099 lt!35670))) ((_ is Cons!1507) (toList!732 lt!35817)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35817))) (_1!1099 lt!35670))))))

(declare-fun b!79496 () Bool)

(assert (=> b!79496 (= e!51921 (containsKey!139 (t!5148 (toList!732 lt!35817)) (_1!1099 lt!35670)))))

(assert (= (and d!19233 (not res!41537)) b!79495))

(assert (= (and b!79495 res!41538) b!79496))

(declare-fun m!80515 () Bool)

(assert (=> b!79496 m!80515))

(assert (=> d!18621 d!19233))

(declare-fun b!79497 () Bool)

(declare-fun e!51922 () Option!141)

(assert (=> b!79497 (= e!51922 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36014)))))))

(declare-fun b!79499 () Bool)

(declare-fun e!51923 () Option!141)

(assert (=> b!79499 (= e!51923 (getValueByKey!135 (t!5148 (toList!732 lt!36014)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!19235 () Bool)

(declare-fun c!12329 () Bool)

(assert (=> d!19235 (= c!12329 (and ((_ is Cons!1507) (toList!732 lt!36014)) (= (_1!1099 (h!2095 (toList!732 lt!36014))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19235 (= (getValueByKey!135 (toList!732 lt!36014) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!51922)))

(declare-fun b!79500 () Bool)

(assert (=> b!79500 (= e!51923 None!139)))

(declare-fun b!79498 () Bool)

(assert (=> b!79498 (= e!51922 e!51923)))

(declare-fun c!12330 () Bool)

(assert (=> b!79498 (= c!12330 (and ((_ is Cons!1507) (toList!732 lt!36014)) (not (= (_1!1099 (h!2095 (toList!732 lt!36014))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19235 c!12329) b!79497))

(assert (= (and d!19235 (not c!12329)) b!79498))

(assert (= (and b!79498 c!12330) b!79499))

(assert (= (and b!79498 (not c!12330)) b!79500))

(declare-fun m!80517 () Bool)

(assert (=> b!79499 m!80517))

(assert (=> b!78082 d!19235))

(declare-fun d!19237 () Bool)

(assert (=> d!19237 (= (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78545 d!19237))

(declare-fun d!19239 () Bool)

(declare-fun lt!36827 () Bool)

(assert (=> d!19239 (= lt!36827 (select (content!83 (toList!732 lt!36273)) (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!51924 () Bool)

(assert (=> d!19239 (= lt!36827 e!51924)))

(declare-fun res!41539 () Bool)

(assert (=> d!19239 (=> (not res!41539) (not e!51924))))

(assert (=> d!19239 (= res!41539 ((_ is Cons!1507) (toList!732 lt!36273)))))

(assert (=> d!19239 (= (contains!740 (toList!732 lt!36273) (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36827)))

(declare-fun b!79501 () Bool)

(declare-fun e!51925 () Bool)

(assert (=> b!79501 (= e!51924 e!51925)))

(declare-fun res!41540 () Bool)

(assert (=> b!79501 (=> res!41540 e!51925)))

(assert (=> b!79501 (= res!41540 (= (h!2095 (toList!732 lt!36273)) (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!79502 () Bool)

(assert (=> b!79502 (= e!51925 (contains!740 (t!5148 (toList!732 lt!36273)) (tuple2!2177 lt!35899 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!19239 res!41539) b!79501))

(assert (= (and b!79501 (not res!41540)) b!79502))

(declare-fun m!80519 () Bool)

(assert (=> d!19239 m!80519))

(declare-fun m!80521 () Bool)

(assert (=> d!19239 m!80521))

(declare-fun m!80523 () Bool)

(assert (=> b!79502 m!80523))

(assert (=> b!78372 d!19239))

(declare-fun b!79503 () Bool)

(declare-fun e!51926 () Option!141)

(assert (=> b!79503 (= e!51926 (Some!140 (_2!1099 (h!2095 (t!5148 lt!35803)))))))

(declare-fun b!79505 () Bool)

(declare-fun e!51927 () Option!141)

(assert (=> b!79505 (= e!51927 (getValueByKey!135 (t!5148 (t!5148 lt!35803)) (_1!1099 lt!35660)))))

(declare-fun d!19241 () Bool)

(declare-fun c!12331 () Bool)

(assert (=> d!19241 (= c!12331 (and ((_ is Cons!1507) (t!5148 lt!35803)) (= (_1!1099 (h!2095 (t!5148 lt!35803))) (_1!1099 lt!35660))))))

(assert (=> d!19241 (= (getValueByKey!135 (t!5148 lt!35803) (_1!1099 lt!35660)) e!51926)))

(declare-fun b!79506 () Bool)

(assert (=> b!79506 (= e!51927 None!139)))

(declare-fun b!79504 () Bool)

(assert (=> b!79504 (= e!51926 e!51927)))

(declare-fun c!12332 () Bool)

(assert (=> b!79504 (= c!12332 (and ((_ is Cons!1507) (t!5148 lt!35803)) (not (= (_1!1099 (h!2095 (t!5148 lt!35803))) (_1!1099 lt!35660)))))))

(assert (= (and d!19241 c!12331) b!79503))

(assert (= (and d!19241 (not c!12331)) b!79504))

(assert (= (and b!79504 c!12332) b!79505))

(assert (= (and b!79504 (not c!12332)) b!79506))

(declare-fun m!80525 () Bool)

(assert (=> b!79505 m!80525))

(assert (=> b!78427 d!19241))

(declare-fun b!79507 () Bool)

(declare-fun e!51928 () Option!141)

(assert (=> b!79507 (= e!51928 (Some!140 (_2!1099 (h!2095 (t!5148 (toList!732 lt!35797))))))))

(declare-fun b!79509 () Bool)

(declare-fun e!51929 () Option!141)

(assert (=> b!79509 (= e!51929 (getValueByKey!135 (t!5148 (t!5148 (toList!732 lt!35797))) (_1!1099 lt!35660)))))

(declare-fun d!19243 () Bool)

(declare-fun c!12333 () Bool)

(assert (=> d!19243 (= c!12333 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35797))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35797)))) (_1!1099 lt!35660))))))

(assert (=> d!19243 (= (getValueByKey!135 (t!5148 (toList!732 lt!35797)) (_1!1099 lt!35660)) e!51928)))

(declare-fun b!79510 () Bool)

(assert (=> b!79510 (= e!51929 None!139)))

(declare-fun b!79508 () Bool)

(assert (=> b!79508 (= e!51928 e!51929)))

(declare-fun c!12334 () Bool)

(assert (=> b!79508 (= c!12334 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35797))) (not (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35797)))) (_1!1099 lt!35660)))))))

(assert (= (and d!19243 c!12333) b!79507))

(assert (= (and d!19243 (not c!12333)) b!79508))

(assert (= (and b!79508 c!12334) b!79509))

(assert (= (and b!79508 (not c!12334)) b!79510))

(declare-fun m!80527 () Bool)

(assert (=> b!79509 m!80527))

(assert (=> b!78602 d!19243))

(declare-fun d!19245 () Bool)

(assert (=> d!19245 (= ($colon$colon!68 e!51102 (ite c!11963 (h!2095 (toList!732 lt!35662)) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660)))) (Cons!1507 (ite c!11963 (h!2095 (toList!732 lt!35662)) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))) e!51102))))

(assert (=> bm!7165 d!19245))

(declare-fun b!79511 () Bool)

(declare-fun e!51930 () Option!141)

(assert (=> b!79511 (= e!51930 (Some!140 (_2!1099 (h!2095 (t!5148 lt!35791)))))))

(declare-fun b!79513 () Bool)

(declare-fun e!51931 () Option!141)

(assert (=> b!79513 (= e!51931 (getValueByKey!135 (t!5148 (t!5148 lt!35791)) (_1!1099 lt!35660)))))

(declare-fun d!19247 () Bool)

(declare-fun c!12335 () Bool)

(assert (=> d!19247 (= c!12335 (and ((_ is Cons!1507) (t!5148 lt!35791)) (= (_1!1099 (h!2095 (t!5148 lt!35791))) (_1!1099 lt!35660))))))

(assert (=> d!19247 (= (getValueByKey!135 (t!5148 lt!35791) (_1!1099 lt!35660)) e!51930)))

(declare-fun b!79514 () Bool)

(assert (=> b!79514 (= e!51931 None!139)))

(declare-fun b!79512 () Bool)

(assert (=> b!79512 (= e!51930 e!51931)))

(declare-fun c!12336 () Bool)

(assert (=> b!79512 (= c!12336 (and ((_ is Cons!1507) (t!5148 lt!35791)) (not (= (_1!1099 (h!2095 (t!5148 lt!35791))) (_1!1099 lt!35660)))))))

(assert (= (and d!19247 c!12335) b!79511))

(assert (= (and d!19247 (not c!12335)) b!79512))

(assert (= (and b!79512 c!12336) b!79513))

(assert (= (and b!79512 (not c!12336)) b!79514))

(declare-fun m!80529 () Bool)

(assert (=> b!79513 m!80529))

(assert (=> b!78129 d!19247))

(assert (=> b!78593 d!19065))

(assert (=> b!78593 d!19067))

(declare-fun d!19249 () Bool)

(assert (=> d!19249 (= (get!1180 (getValueByKey!135 (toList!732 lt!35895) lt!35906)) (v!2590 (getValueByKey!135 (toList!732 lt!35895) lt!35906)))))

(assert (=> d!18517 d!19249))

(declare-fun b!79515 () Bool)

(declare-fun e!51932 () Option!141)

(assert (=> b!79515 (= e!51932 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35895)))))))

(declare-fun b!79517 () Bool)

(declare-fun e!51933 () Option!141)

(assert (=> b!79517 (= e!51933 (getValueByKey!135 (t!5148 (toList!732 lt!35895)) lt!35906))))

(declare-fun d!19251 () Bool)

(declare-fun c!12337 () Bool)

(assert (=> d!19251 (= c!12337 (and ((_ is Cons!1507) (toList!732 lt!35895)) (= (_1!1099 (h!2095 (toList!732 lt!35895))) lt!35906)))))

(assert (=> d!19251 (= (getValueByKey!135 (toList!732 lt!35895) lt!35906) e!51932)))

(declare-fun b!79518 () Bool)

(assert (=> b!79518 (= e!51933 None!139)))

(declare-fun b!79516 () Bool)

(assert (=> b!79516 (= e!51932 e!51933)))

(declare-fun c!12338 () Bool)

(assert (=> b!79516 (= c!12338 (and ((_ is Cons!1507) (toList!732 lt!35895)) (not (= (_1!1099 (h!2095 (toList!732 lt!35895))) lt!35906))))))

(assert (= (and d!19251 c!12337) b!79515))

(assert (= (and d!19251 (not c!12337)) b!79516))

(assert (= (and b!79516 c!12338) b!79517))

(assert (= (and b!79516 (not c!12338)) b!79518))

(declare-fun m!80531 () Bool)

(assert (=> b!79517 m!80531))

(assert (=> d!18517 d!19251))

(declare-fun d!19253 () Bool)

(declare-fun c!12339 () Bool)

(assert (=> d!19253 (= c!12339 ((_ is Nil!1508) (toList!732 lt!35793)))))

(declare-fun e!51934 () (InoxSet tuple2!2176))

(assert (=> d!19253 (= (content!83 (toList!732 lt!35793)) e!51934)))

(declare-fun b!79519 () Bool)

(assert (=> b!79519 (= e!51934 ((as const (Array tuple2!2176 Bool)) false))))

(declare-fun b!79520 () Bool)

(assert (=> b!79520 (= e!51934 ((_ map or) (store ((as const (Array tuple2!2176 Bool)) false) (h!2095 (toList!732 lt!35793)) true) (content!83 (t!5148 (toList!732 lt!35793)))))))

(assert (= (and d!19253 c!12339) b!79519))

(assert (= (and d!19253 (not c!12339)) b!79520))

(declare-fun m!80533 () Bool)

(assert (=> b!79520 m!80533))

(assert (=> b!79520 m!79787))

(assert (=> d!18493 d!19253))

(declare-fun b!79521 () Bool)

(declare-fun e!51935 () Option!141)

(assert (=> b!79521 (= e!51935 (Some!140 (_2!1099 (h!2095 (t!5148 (toList!732 lt!35817))))))))

(declare-fun b!79523 () Bool)

(declare-fun e!51936 () Option!141)

(assert (=> b!79523 (= e!51936 (getValueByKey!135 (t!5148 (t!5148 (toList!732 lt!35817))) (_1!1099 lt!35670)))))

(declare-fun d!19255 () Bool)

(declare-fun c!12340 () Bool)

(assert (=> d!19255 (= c!12340 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35817))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35817)))) (_1!1099 lt!35670))))))

(assert (=> d!19255 (= (getValueByKey!135 (t!5148 (toList!732 lt!35817)) (_1!1099 lt!35670)) e!51935)))

(declare-fun b!79524 () Bool)

(assert (=> b!79524 (= e!51936 None!139)))

(declare-fun b!79522 () Bool)

(assert (=> b!79522 (= e!51935 e!51936)))

(declare-fun c!12341 () Bool)

(assert (=> b!79522 (= c!12341 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35817))) (not (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35817)))) (_1!1099 lt!35670)))))))

(assert (= (and d!19255 c!12340) b!79521))

(assert (= (and d!19255 (not c!12340)) b!79522))

(assert (= (and b!79522 c!12341) b!79523))

(assert (= (and b!79522 (not c!12341)) b!79524))

(declare-fun m!80535 () Bool)

(assert (=> b!79523 m!80535))

(assert (=> b!78542 d!19255))

(declare-fun d!19257 () Bool)

(declare-fun res!41541 () Bool)

(declare-fun e!51937 () Bool)

(assert (=> d!19257 (=> res!41541 e!51937)))

(assert (=> d!19257 (= res!41541 (and ((_ is Cons!1507) (toList!732 lt!35812)) (= (_1!1099 (h!2095 (toList!732 lt!35812))) (_1!1099 lt!35670))))))

(assert (=> d!19257 (= (containsKey!139 (toList!732 lt!35812) (_1!1099 lt!35670)) e!51937)))

(declare-fun b!79525 () Bool)

(declare-fun e!51938 () Bool)

(assert (=> b!79525 (= e!51937 e!51938)))

(declare-fun res!41542 () Bool)

(assert (=> b!79525 (=> (not res!41542) (not e!51938))))

(assert (=> b!79525 (= res!41542 (and (or (not ((_ is Cons!1507) (toList!732 lt!35812))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35812))) (_1!1099 lt!35670))) ((_ is Cons!1507) (toList!732 lt!35812)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35812))) (_1!1099 lt!35670))))))

(declare-fun b!79526 () Bool)

(assert (=> b!79526 (= e!51938 (containsKey!139 (t!5148 (toList!732 lt!35812)) (_1!1099 lt!35670)))))

(assert (= (and d!19257 (not res!41541)) b!79525))

(assert (= (and b!79525 res!41542) b!79526))

(declare-fun m!80537 () Bool)

(assert (=> b!79526 m!80537))

(assert (=> d!18611 d!19257))

(declare-fun d!19259 () Bool)

(assert (=> d!19259 (isDefined!89 (getValueByKey!135 (toList!732 lt!35805) (_1!1099 lt!35660)))))

(declare-fun lt!36828 () Unit!2242)

(assert (=> d!19259 (= lt!36828 (choose!463 (toList!732 lt!35805) (_1!1099 lt!35660)))))

(declare-fun e!51939 () Bool)

(assert (=> d!19259 e!51939))

(declare-fun res!41543 () Bool)

(assert (=> d!19259 (=> (not res!41543) (not e!51939))))

(assert (=> d!19259 (= res!41543 (isStrictlySorted!290 (toList!732 lt!35805)))))

(assert (=> d!19259 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35805) (_1!1099 lt!35660)) lt!36828)))

(declare-fun b!79527 () Bool)

(assert (=> b!79527 (= e!51939 (containsKey!139 (toList!732 lt!35805) (_1!1099 lt!35660)))))

(assert (= (and d!19259 res!41543) b!79527))

(assert (=> d!19259 m!77697))

(assert (=> d!19259 m!77697))

(assert (=> d!19259 m!78547))

(declare-fun m!80539 () Bool)

(assert (=> d!19259 m!80539))

(declare-fun m!80541 () Bool)

(assert (=> d!19259 m!80541))

(assert (=> b!79527 m!78543))

(assert (=> b!78422 d!19259))

(declare-fun d!19261 () Bool)

(assert (=> d!19261 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35805) (_1!1099 lt!35660))) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35805) (_1!1099 lt!35660)))))))

(declare-fun bs!3370 () Bool)

(assert (= bs!3370 d!19261))

(assert (=> bs!3370 m!77697))

(declare-fun m!80543 () Bool)

(assert (=> bs!3370 m!80543))

(assert (=> b!78422 d!19261))

(assert (=> b!78422 d!18593))

(declare-fun d!19263 () Bool)

(declare-fun e!51941 () Bool)

(assert (=> d!19263 e!51941))

(declare-fun res!41544 () Bool)

(assert (=> d!19263 (=> res!41544 e!51941)))

(declare-fun lt!36831 () Bool)

(assert (=> d!19263 (= res!41544 (not lt!36831))))

(declare-fun lt!36832 () Bool)

(assert (=> d!19263 (= lt!36831 lt!36832)))

(declare-fun lt!36829 () Unit!2242)

(declare-fun e!51940 () Unit!2242)

(assert (=> d!19263 (= lt!36829 e!51940)))

(declare-fun c!12342 () Bool)

(assert (=> d!19263 (= c!12342 lt!36832)))

(assert (=> d!19263 (= lt!36832 (containsKey!139 (toList!732 lt!36359) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19263 (= (contains!739 lt!36359 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) lt!36831)))

(declare-fun b!79528 () Bool)

(declare-fun lt!36830 () Unit!2242)

(assert (=> b!79528 (= e!51940 lt!36830)))

(assert (=> b!79528 (= lt!36830 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36359) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79528 (isDefined!89 (getValueByKey!135 (toList!732 lt!36359) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79529 () Bool)

(declare-fun Unit!2307 () Unit!2242)

(assert (=> b!79529 (= e!51940 Unit!2307)))

(declare-fun b!79530 () Bool)

(assert (=> b!79530 (= e!51941 (isDefined!89 (getValueByKey!135 (toList!732 lt!36359) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19263 c!12342) b!79528))

(assert (= (and d!19263 (not c!12342)) b!79529))

(assert (= (and d!19263 (not res!41544)) b!79530))

(assert (=> d!19263 m!77965))

(declare-fun m!80545 () Bool)

(assert (=> d!19263 m!80545))

(assert (=> b!79528 m!77965))

(declare-fun m!80547 () Bool)

(assert (=> b!79528 m!80547))

(assert (=> b!79528 m!77965))

(declare-fun m!80549 () Bool)

(assert (=> b!79528 m!80549))

(assert (=> b!79528 m!80549))

(declare-fun m!80551 () Bool)

(assert (=> b!79528 m!80551))

(assert (=> b!79530 m!77965))

(assert (=> b!79530 m!80549))

(assert (=> b!79530 m!80549))

(assert (=> b!79530 m!80551))

(assert (=> b!78528 d!19263))

(declare-fun d!19265 () Bool)

(declare-fun lt!36833 () Bool)

(assert (=> d!19265 (= lt!36833 (select (content!83 lt!36382) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(declare-fun e!51942 () Bool)

(assert (=> d!19265 (= lt!36833 e!51942)))

(declare-fun res!41545 () Bool)

(assert (=> d!19265 (=> (not res!41545) (not e!51942))))

(assert (=> d!19265 (= res!41545 ((_ is Cons!1507) lt!36382))))

(assert (=> d!19265 (= (contains!740 lt!36382 (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))) lt!36833)))

(declare-fun b!79531 () Bool)

(declare-fun e!51943 () Bool)

(assert (=> b!79531 (= e!51942 e!51943)))

(declare-fun res!41546 () Bool)

(assert (=> b!79531 (=> res!41546 e!51943)))

(assert (=> b!79531 (= res!41546 (= (h!2095 lt!36382) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(declare-fun b!79532 () Bool)

(assert (=> b!79532 (= e!51943 (contains!740 (t!5148 lt!36382) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(assert (= (and d!19265 res!41545) b!79531))

(assert (= (and b!79531 (not res!41546)) b!79532))

(declare-fun m!80553 () Bool)

(assert (=> d!19265 m!80553))

(declare-fun m!80555 () Bool)

(assert (=> d!19265 m!80555))

(declare-fun m!80557 () Bool)

(assert (=> b!79532 m!80557))

(assert (=> b!78590 d!19265))

(declare-fun d!19267 () Bool)

(assert (=> d!19267 (isDefined!89 (getValueByKey!135 (toList!732 lt!35793) (_1!1099 lt!35660)))))

(declare-fun lt!36834 () Unit!2242)

(assert (=> d!19267 (= lt!36834 (choose!463 (toList!732 lt!35793) (_1!1099 lt!35660)))))

(declare-fun e!51944 () Bool)

(assert (=> d!19267 e!51944))

(declare-fun res!41547 () Bool)

(assert (=> d!19267 (=> (not res!41547) (not e!51944))))

(assert (=> d!19267 (= res!41547 (isStrictlySorted!290 (toList!732 lt!35793)))))

(assert (=> d!19267 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35793) (_1!1099 lt!35660)) lt!36834)))

(declare-fun b!79533 () Bool)

(assert (=> b!79533 (= e!51944 (containsKey!139 (toList!732 lt!35793) (_1!1099 lt!35660)))))

(assert (= (and d!19267 res!41547) b!79533))

(assert (=> d!19267 m!77661))

(assert (=> d!19267 m!77661))

(assert (=> d!19267 m!78035))

(declare-fun m!80559 () Bool)

(assert (=> d!19267 m!80559))

(declare-fun m!80561 () Bool)

(assert (=> d!19267 m!80561))

(assert (=> b!79533 m!78031))

(assert (=> b!78124 d!19267))

(declare-fun d!19269 () Bool)

(assert (=> d!19269 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35793) (_1!1099 lt!35660))) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35793) (_1!1099 lt!35660)))))))

(declare-fun bs!3371 () Bool)

(assert (= bs!3371 d!19269))

(assert (=> bs!3371 m!77661))

(declare-fun m!80563 () Bool)

(assert (=> bs!3371 m!80563))

(assert (=> b!78124 d!19269))

(assert (=> b!78124 d!18609))

(declare-fun d!19271 () Bool)

(declare-fun lt!36835 () Bool)

(assert (=> d!19271 (= lt!36835 (select (content!83 (toList!732 lt!36044)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun e!51945 () Bool)

(assert (=> d!19271 (= lt!36835 e!51945)))

(declare-fun res!41548 () Bool)

(assert (=> d!19271 (=> (not res!41548) (not e!51945))))

(assert (=> d!19271 (= res!41548 ((_ is Cons!1507) (toList!732 lt!36044)))))

(assert (=> d!19271 (= (contains!740 (toList!732 lt!36044) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36835)))

(declare-fun b!79534 () Bool)

(declare-fun e!51946 () Bool)

(assert (=> b!79534 (= e!51945 e!51946)))

(declare-fun res!41549 () Bool)

(assert (=> b!79534 (=> res!41549 e!51946)))

(assert (=> b!79534 (= res!41549 (= (h!2095 (toList!732 lt!36044)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun b!79535 () Bool)

(assert (=> b!79535 (= e!51946 (contains!740 (t!5148 (toList!732 lt!36044)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!19271 res!41548) b!79534))

(assert (= (and b!79534 (not res!41549)) b!79535))

(declare-fun m!80565 () Bool)

(assert (=> d!19271 m!80565))

(declare-fun m!80567 () Bool)

(assert (=> d!19271 m!80567))

(declare-fun m!80569 () Bool)

(assert (=> b!79535 m!80569))

(assert (=> b!78121 d!19271))

(assert (=> b!78498 d!18741))

(declare-fun d!19273 () Bool)

(declare-fun res!41550 () Bool)

(declare-fun e!51947 () Bool)

(assert (=> d!19273 (=> res!41550 e!51947)))

(assert (=> d!19273 (= res!41550 (and ((_ is Cons!1507) (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))) (= (_1!1099 (h!2095 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (=> d!19273 (= (containsKey!139 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) e!51947)))

(declare-fun b!79536 () Bool)

(declare-fun e!51948 () Bool)

(assert (=> b!79536 (= e!51947 e!51948)))

(declare-fun res!41551 () Bool)

(assert (=> b!79536 (=> (not res!41551) (not e!51948))))

(assert (=> b!79536 (= res!41551 (and (or (not ((_ is Cons!1507) (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))))) (bvsle (_1!1099 (h!2095 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))) ((_ is Cons!1507) (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))) (bvslt (_1!1099 (h!2095 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(declare-fun b!79537 () Bool)

(assert (=> b!79537 (= e!51948 (containsKey!139 (t!5148 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!19273 (not res!41550)) b!79536))

(assert (= (and b!79536 res!41551) b!79537))

(assert (=> b!79537 m!77463))

(declare-fun m!80571 () Bool)

(assert (=> b!79537 m!80571))

(assert (=> d!18483 d!19273))

(declare-fun d!19275 () Bool)

(declare-fun res!41552 () Bool)

(declare-fun e!51949 () Bool)

(assert (=> d!19275 (=> res!41552 e!51949)))

(assert (=> d!19275 (= res!41552 (and ((_ is Cons!1507) lt!35803) (= (_1!1099 (h!2095 lt!35803)) (_1!1099 lt!35660))))))

(assert (=> d!19275 (= (containsKey!139 lt!35803 (_1!1099 lt!35660)) e!51949)))

(declare-fun b!79538 () Bool)

(declare-fun e!51950 () Bool)

(assert (=> b!79538 (= e!51949 e!51950)))

(declare-fun res!41553 () Bool)

(assert (=> b!79538 (=> (not res!41553) (not e!51950))))

(assert (=> b!79538 (= res!41553 (and (or (not ((_ is Cons!1507) lt!35803)) (bvsle (_1!1099 (h!2095 lt!35803)) (_1!1099 lt!35660))) ((_ is Cons!1507) lt!35803) (bvslt (_1!1099 (h!2095 lt!35803)) (_1!1099 lt!35660))))))

(declare-fun b!79539 () Bool)

(assert (=> b!79539 (= e!51950 (containsKey!139 (t!5148 lt!35803) (_1!1099 lt!35660)))))

(assert (= (and d!19275 (not res!41552)) b!79538))

(assert (= (and b!79538 res!41553) b!79539))

(declare-fun m!80573 () Bool)

(assert (=> b!79539 m!80573))

(assert (=> b!78429 d!19275))

(declare-fun bm!7324 () Bool)

(declare-fun call!7327 () Bool)

(declare-fun c!12343 () Bool)

(assert (=> bm!7324 (= call!7327 (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12343 (Cons!1506 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000) Nil!1507) Nil!1507)))))

(declare-fun b!79540 () Bool)

(declare-fun e!51954 () Bool)

(assert (=> b!79540 (= e!51954 (contains!741 Nil!1507 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!19277 () Bool)

(declare-fun res!41556 () Bool)

(declare-fun e!51953 () Bool)

(assert (=> d!19277 (=> res!41556 e!51953)))

(assert (=> d!19277 (= res!41556 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992))))))))

(assert (=> d!19277 (= (arrayNoDuplicates!0 (_keys!3930 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000 Nil!1507) e!51953)))

(declare-fun b!79541 () Bool)

(declare-fun e!51952 () Bool)

(declare-fun e!51951 () Bool)

(assert (=> b!79541 (= e!51952 e!51951)))

(assert (=> b!79541 (= c!12343 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!79542 () Bool)

(assert (=> b!79542 (= e!51951 call!7327)))

(declare-fun b!79543 () Bool)

(assert (=> b!79543 (= e!51951 call!7327)))

(declare-fun b!79544 () Bool)

(assert (=> b!79544 (= e!51953 e!51952)))

(declare-fun res!41555 () Bool)

(assert (=> b!79544 (=> (not res!41555) (not e!51952))))

(assert (=> b!79544 (= res!41555 (not e!51954))))

(declare-fun res!41554 () Bool)

(assert (=> b!79544 (=> (not res!41554) (not e!51954))))

(assert (=> b!79544 (= res!41554 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!19277 (not res!41556)) b!79544))

(assert (= (and b!79544 res!41554) b!79540))

(assert (= (and b!79544 res!41555) b!79541))

(assert (= (and b!79541 c!12343) b!79543))

(assert (= (and b!79541 (not c!12343)) b!79542))

(assert (= (or b!79543 b!79542) bm!7324))

(assert (=> bm!7324 m!80205))

(declare-fun m!80575 () Bool)

(assert (=> bm!7324 m!80575))

(assert (=> b!79540 m!80205))

(assert (=> b!79540 m!80205))

(declare-fun m!80577 () Bool)

(assert (=> b!79540 m!80577))

(assert (=> b!79541 m!80205))

(assert (=> b!79541 m!80205))

(assert (=> b!79541 m!80207))

(assert (=> b!79544 m!80205))

(assert (=> b!79544 m!80205))

(assert (=> b!79544 m!80207))

(assert (=> b!78200 d!19277))

(declare-fun d!19279 () Bool)

(declare-fun e!51955 () Bool)

(assert (=> d!19279 e!51955))

(declare-fun res!41557 () Bool)

(assert (=> d!19279 (=> (not res!41557) (not e!51955))))

(declare-fun lt!36839 () ListLongMap!1433)

(assert (=> d!19279 (= res!41557 (contains!739 lt!36839 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun lt!36837 () List!1511)

(assert (=> d!19279 (= lt!36839 (ListLongMap!1434 lt!36837))))

(declare-fun lt!36836 () Unit!2242)

(declare-fun lt!36838 () Unit!2242)

(assert (=> d!19279 (= lt!36836 lt!36838)))

(assert (=> d!19279 (= (getValueByKey!135 lt!36837 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!19279 (= lt!36838 (lemmaContainsTupThenGetReturnValue!55 lt!36837 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!19279 (= lt!36837 (insertStrictlySorted!58 (toList!732 call!7161) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(assert (=> d!19279 (= (+!103 call!7161 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))) lt!36839)))

(declare-fun b!79545 () Bool)

(declare-fun res!41558 () Bool)

(assert (=> b!79545 (=> (not res!41558) (not e!51955))))

(assert (=> b!79545 (= res!41558 (= (getValueByKey!135 (toList!732 lt!36839) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))))

(declare-fun b!79546 () Bool)

(assert (=> b!79546 (= e!51955 (contains!740 (toList!732 lt!36839) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(assert (= (and d!19279 res!41557) b!79545))

(assert (= (and b!79545 res!41558) b!79546))

(declare-fun m!80579 () Bool)

(assert (=> d!19279 m!80579))

(declare-fun m!80581 () Bool)

(assert (=> d!19279 m!80581))

(declare-fun m!80583 () Bool)

(assert (=> d!19279 m!80583))

(declare-fun m!80585 () Bool)

(assert (=> d!19279 m!80585))

(declare-fun m!80587 () Bool)

(assert (=> b!79545 m!80587))

(declare-fun m!80589 () Bool)

(assert (=> b!79546 m!80589))

(assert (=> b!78088 d!19279))

(declare-fun d!19281 () Bool)

(assert (=> d!19281 (= (apply!79 lt!36137 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1180 (getValueByKey!135 (toList!732 lt!36137) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3372 () Bool)

(assert (= bs!3372 d!19281))

(assert (=> bs!3372 m!79579))

(assert (=> bs!3372 m!79579))

(declare-fun m!80591 () Bool)

(assert (=> bs!3372 m!80591))

(assert (=> b!78266 d!19281))

(declare-fun d!19283 () Bool)

(assert (=> d!19283 (= (isEmpty!332 (toList!732 lt!35837)) ((_ is Nil!1508) (toList!732 lt!35837)))))

(assert (=> d!18581 d!19283))

(declare-fun d!19285 () Bool)

(declare-fun e!51957 () Bool)

(assert (=> d!19285 e!51957))

(declare-fun res!41559 () Bool)

(assert (=> d!19285 (=> res!41559 e!51957)))

(declare-fun lt!36842 () Bool)

(assert (=> d!19285 (= res!41559 (not lt!36842))))

(declare-fun lt!36843 () Bool)

(assert (=> d!19285 (= lt!36842 lt!36843)))

(declare-fun lt!36840 () Unit!2242)

(declare-fun e!51956 () Unit!2242)

(assert (=> d!19285 (= lt!36840 e!51956)))

(declare-fun c!12344 () Bool)

(assert (=> d!19285 (= c!12344 lt!36843)))

(assert (=> d!19285 (= lt!36843 (containsKey!139 (toList!732 lt!36315) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!19285 (= (contains!739 lt!36315 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36842)))

(declare-fun b!79547 () Bool)

(declare-fun lt!36841 () Unit!2242)

(assert (=> b!79547 (= e!51956 lt!36841)))

(assert (=> b!79547 (= lt!36841 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36315) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> b!79547 (isDefined!89 (getValueByKey!135 (toList!732 lt!36315) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!79548 () Bool)

(declare-fun Unit!2308 () Unit!2242)

(assert (=> b!79548 (= e!51956 Unit!2308)))

(declare-fun b!79549 () Bool)

(assert (=> b!79549 (= e!51957 (isDefined!89 (getValueByKey!135 (toList!732 lt!36315) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!19285 c!12344) b!79547))

(assert (= (and d!19285 (not c!12344)) b!79548))

(assert (= (and d!19285 (not res!41559)) b!79549))

(declare-fun m!80593 () Bool)

(assert (=> d!19285 m!80593))

(declare-fun m!80595 () Bool)

(assert (=> b!79547 m!80595))

(assert (=> b!79547 m!78615))

(assert (=> b!79547 m!78615))

(declare-fun m!80597 () Bool)

(assert (=> b!79547 m!80597))

(assert (=> b!79549 m!78615))

(assert (=> b!79549 m!78615))

(assert (=> b!79549 m!80597))

(assert (=> d!18567 d!19285))

(declare-fun b!79550 () Bool)

(declare-fun e!51958 () Option!141)

(assert (=> b!79550 (= e!51958 (Some!140 (_2!1099 (h!2095 lt!36313))))))

(declare-fun e!51959 () Option!141)

(declare-fun b!79552 () Bool)

(assert (=> b!79552 (= e!51959 (getValueByKey!135 (t!5148 lt!36313) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun d!19287 () Bool)

(declare-fun c!12345 () Bool)

(assert (=> d!19287 (= c!12345 (and ((_ is Cons!1507) lt!36313) (= (_1!1099 (h!2095 lt!36313)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!19287 (= (getValueByKey!135 lt!36313 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) e!51958)))

(declare-fun b!79553 () Bool)

(assert (=> b!79553 (= e!51959 None!139)))

(declare-fun b!79551 () Bool)

(assert (=> b!79551 (= e!51958 e!51959)))

(declare-fun c!12346 () Bool)

(assert (=> b!79551 (= c!12346 (and ((_ is Cons!1507) lt!36313) (not (= (_1!1099 (h!2095 lt!36313)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!19287 c!12345) b!79550))

(assert (= (and d!19287 (not c!12345)) b!79551))

(assert (= (and b!79551 c!12346) b!79552))

(assert (= (and b!79551 (not c!12346)) b!79553))

(declare-fun m!80599 () Bool)

(assert (=> b!79552 m!80599))

(assert (=> d!18567 d!19287))

(declare-fun d!19289 () Bool)

(assert (=> d!19289 (= (getValueByKey!135 lt!36313 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun lt!36844 () Unit!2242)

(assert (=> d!19289 (= lt!36844 (choose!462 lt!36313 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun e!51960 () Bool)

(assert (=> d!19289 e!51960))

(declare-fun res!41560 () Bool)

(assert (=> d!19289 (=> (not res!41560) (not e!51960))))

(assert (=> d!19289 (= res!41560 (isStrictlySorted!290 lt!36313))))

(assert (=> d!19289 (= (lemmaContainsTupThenGetReturnValue!55 lt!36313 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36844)))

(declare-fun b!79554 () Bool)

(declare-fun res!41561 () Bool)

(assert (=> b!79554 (=> (not res!41561) (not e!51960))))

(assert (=> b!79554 (= res!41561 (containsKey!139 lt!36313 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!79555 () Bool)

(assert (=> b!79555 (= e!51960 (contains!740 lt!36313 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!19289 res!41560) b!79554))

(assert (= (and b!79554 res!41561) b!79555))

(assert (=> d!19289 m!78609))

(declare-fun m!80601 () Bool)

(assert (=> d!19289 m!80601))

(declare-fun m!80603 () Bool)

(assert (=> d!19289 m!80603))

(declare-fun m!80605 () Bool)

(assert (=> b!79554 m!80605))

(declare-fun m!80607 () Bool)

(assert (=> b!79555 m!80607))

(assert (=> d!18567 d!19289))

(declare-fun b!79556 () Bool)

(declare-fun e!51962 () List!1511)

(declare-fun call!7328 () List!1511)

(assert (=> b!79556 (= e!51962 call!7328)))

(declare-fun b!79557 () Bool)

(declare-fun res!41563 () Bool)

(declare-fun e!51964 () Bool)

(assert (=> b!79557 (=> (not res!41563) (not e!51964))))

(declare-fun lt!36845 () List!1511)

(assert (=> b!79557 (= res!41563 (containsKey!139 lt!36845 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun c!12348 () Bool)

(declare-fun e!51965 () List!1511)

(declare-fun bm!7325 () Bool)

(declare-fun call!7329 () List!1511)

(assert (=> bm!7325 (= call!7329 ($colon$colon!68 e!51965 (ite c!12348 (h!2095 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(declare-fun c!12349 () Bool)

(assert (=> bm!7325 (= c!12349 c!12348)))

(declare-fun c!12347 () Bool)

(declare-fun c!12350 () Bool)

(declare-fun b!79558 () Bool)

(assert (=> b!79558 (= e!51965 (ite c!12347 (t!5148 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (ite c!12350 (Cons!1507 (h!2095 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (t!5148 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) Nil!1508)))))

(declare-fun d!19291 () Bool)

(assert (=> d!19291 e!51964))

(declare-fun res!41562 () Bool)

(assert (=> d!19291 (=> (not res!41562) (not e!51964))))

(assert (=> d!19291 (= res!41562 (isStrictlySorted!290 lt!36845))))

(declare-fun e!51961 () List!1511)

(assert (=> d!19291 (= lt!36845 e!51961)))

(assert (=> d!19291 (= c!12348 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (bvslt (_1!1099 (h!2095 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!19291 (isStrictlySorted!290 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!19291 (= (insertStrictlySorted!58 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36845)))

(declare-fun bm!7326 () Bool)

(declare-fun call!7330 () List!1511)

(assert (=> bm!7326 (= call!7330 call!7328)))

(declare-fun b!79559 () Bool)

(assert (=> b!79559 (= c!12350 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (bvsgt (_1!1099 (h!2095 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun e!51963 () List!1511)

(assert (=> b!79559 (= e!51962 e!51963)))

(declare-fun b!79560 () Bool)

(assert (=> b!79560 (= e!51963 call!7330)))

(declare-fun b!79561 () Bool)

(assert (=> b!79561 (= e!51961 e!51962)))

(assert (=> b!79561 (= c!12347 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(declare-fun b!79562 () Bool)

(assert (=> b!79562 (= e!51963 call!7330)))

(declare-fun bm!7327 () Bool)

(assert (=> bm!7327 (= call!7328 call!7329)))

(declare-fun b!79563 () Bool)

(assert (=> b!79563 (= e!51965 (insertStrictlySorted!58 (t!5148 (toList!732 (+!103 lt!35657 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!79564 () Bool)

(assert (=> b!79564 (= e!51961 call!7329)))

(declare-fun b!79565 () Bool)

(assert (=> b!79565 (= e!51964 (contains!740 lt!36845 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (= (and d!19291 c!12348) b!79564))

(assert (= (and d!19291 (not c!12348)) b!79561))

(assert (= (and b!79561 c!12347) b!79556))

(assert (= (and b!79561 (not c!12347)) b!79559))

(assert (= (and b!79559 c!12350) b!79562))

(assert (= (and b!79559 (not c!12350)) b!79560))

(assert (= (or b!79562 b!79560) bm!7326))

(assert (= (or b!79556 bm!7326) bm!7327))

(assert (= (or b!79564 bm!7327) bm!7325))

(assert (= (and bm!7325 c!12349) b!79563))

(assert (= (and bm!7325 (not c!12349)) b!79558))

(assert (= (and d!19291 res!41562) b!79557))

(assert (= (and b!79557 res!41563) b!79565))

(declare-fun m!80609 () Bool)

(assert (=> b!79563 m!80609))

(declare-fun m!80611 () Bool)

(assert (=> bm!7325 m!80611))

(declare-fun m!80613 () Bool)

(assert (=> b!79557 m!80613))

(declare-fun m!80615 () Bool)

(assert (=> b!79565 m!80615))

(declare-fun m!80617 () Bool)

(assert (=> d!19291 m!80617))

(declare-fun m!80619 () Bool)

(assert (=> d!19291 m!80619))

(assert (=> d!18567 d!19291))

(declare-fun d!19293 () Bool)

(declare-fun lt!36846 () Bool)

(assert (=> d!19293 (= lt!36846 (select (content!83 lt!36054) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun e!51966 () Bool)

(assert (=> d!19293 (= lt!36846 e!51966)))

(declare-fun res!41564 () Bool)

(assert (=> d!19293 (=> (not res!41564) (not e!51966))))

(assert (=> d!19293 (= res!41564 ((_ is Cons!1507) lt!36054))))

(assert (=> d!19293 (= (contains!740 lt!36054 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))) lt!36846)))

(declare-fun b!79566 () Bool)

(declare-fun e!51967 () Bool)

(assert (=> b!79566 (= e!51966 e!51967)))

(declare-fun res!41565 () Bool)

(assert (=> b!79566 (=> res!41565 e!51967)))

(assert (=> b!79566 (= res!41565 (= (h!2095 lt!36054) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun b!79567 () Bool)

(assert (=> b!79567 (= e!51967 (contains!740 (t!5148 lt!36054) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!19293 res!41564) b!79566))

(assert (= (and b!79566 (not res!41565)) b!79567))

(declare-fun m!80621 () Bool)

(assert (=> d!19293 m!80621))

(declare-fun m!80623 () Bool)

(assert (=> d!19293 m!80623))

(declare-fun m!80625 () Bool)

(assert (=> b!79567 m!80625))

(assert (=> b!78166 d!19293))

(declare-fun b!79568 () Bool)

(declare-fun e!51968 () Option!141)

(assert (=> b!79568 (= e!51968 (Some!140 (_2!1099 (h!2095 (t!5148 lt!35799)))))))

(declare-fun b!79570 () Bool)

(declare-fun e!51969 () Option!141)

(assert (=> b!79570 (= e!51969 (getValueByKey!135 (t!5148 (t!5148 lt!35799)) (_1!1099 lt!35659)))))

(declare-fun d!19295 () Bool)

(declare-fun c!12351 () Bool)

(assert (=> d!19295 (= c!12351 (and ((_ is Cons!1507) (t!5148 lt!35799)) (= (_1!1099 (h!2095 (t!5148 lt!35799))) (_1!1099 lt!35659))))))

(assert (=> d!19295 (= (getValueByKey!135 (t!5148 lt!35799) (_1!1099 lt!35659)) e!51968)))

(declare-fun b!79571 () Bool)

(assert (=> b!79571 (= e!51969 None!139)))

(declare-fun b!79569 () Bool)

(assert (=> b!79569 (= e!51968 e!51969)))

(declare-fun c!12352 () Bool)

(assert (=> b!79569 (= c!12352 (and ((_ is Cons!1507) (t!5148 lt!35799)) (not (= (_1!1099 (h!2095 (t!5148 lt!35799))) (_1!1099 lt!35659)))))))

(assert (= (and d!19295 c!12351) b!79568))

(assert (= (and d!19295 (not c!12351)) b!79569))

(assert (= (and b!79569 c!12352) b!79570))

(assert (= (and b!79569 (not c!12352)) b!79571))

(declare-fun m!80627 () Bool)

(assert (=> b!79570 m!80627))

(assert (=> b!78406 d!19295))

(assert (=> b!78341 d!18595))

(declare-fun d!19297 () Bool)

(assert (=> d!19297 (= (get!1179 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78123 d!19297))

(declare-fun b!79572 () Bool)

(declare-fun e!51970 () Option!141)

(assert (=> b!79572 (= e!51970 (Some!140 (_2!1099 (h!2095 (t!5148 lt!35815)))))))

(declare-fun b!79574 () Bool)

(declare-fun e!51971 () Option!141)

(assert (=> b!79574 (= e!51971 (getValueByKey!135 (t!5148 (t!5148 lt!35815)) (_1!1099 lt!35670)))))

(declare-fun d!19299 () Bool)

(declare-fun c!12353 () Bool)

(assert (=> d!19299 (= c!12353 (and ((_ is Cons!1507) (t!5148 lt!35815)) (= (_1!1099 (h!2095 (t!5148 lt!35815))) (_1!1099 lt!35670))))))

(assert (=> d!19299 (= (getValueByKey!135 (t!5148 lt!35815) (_1!1099 lt!35670)) e!51970)))

(declare-fun b!79575 () Bool)

(assert (=> b!79575 (= e!51971 None!139)))

(declare-fun b!79573 () Bool)

(assert (=> b!79573 (= e!51970 e!51971)))

(declare-fun c!12354 () Bool)

(assert (=> b!79573 (= c!12354 (and ((_ is Cons!1507) (t!5148 lt!35815)) (not (= (_1!1099 (h!2095 (t!5148 lt!35815))) (_1!1099 lt!35670)))))))

(assert (= (and d!19299 c!12353) b!79572))

(assert (= (and d!19299 (not c!12353)) b!79573))

(assert (= (and b!79573 c!12354) b!79574))

(assert (= (and b!79573 (not c!12354)) b!79575))

(declare-fun m!80629 () Bool)

(assert (=> b!79574 m!80629))

(assert (=> b!78577 d!19299))

(declare-fun d!19301 () Bool)

(declare-fun res!41566 () Bool)

(declare-fun e!51972 () Bool)

(assert (=> d!19301 (=> res!41566 e!51972)))

(assert (=> d!19301 (= res!41566 (and ((_ is Cons!1507) (toList!732 lt!35797)) (= (_1!1099 (h!2095 (toList!732 lt!35797))) (_1!1099 lt!35660))))))

(assert (=> d!19301 (= (containsKey!139 (toList!732 lt!35797) (_1!1099 lt!35660)) e!51972)))

(declare-fun b!79576 () Bool)

(declare-fun e!51973 () Bool)

(assert (=> b!79576 (= e!51972 e!51973)))

(declare-fun res!41567 () Bool)

(assert (=> b!79576 (=> (not res!41567) (not e!51973))))

(assert (=> b!79576 (= res!41567 (and (or (not ((_ is Cons!1507) (toList!732 lt!35797))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35797))) (_1!1099 lt!35660))) ((_ is Cons!1507) (toList!732 lt!35797)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35797))) (_1!1099 lt!35660))))))

(declare-fun b!79577 () Bool)

(assert (=> b!79577 (= e!51973 (containsKey!139 (t!5148 (toList!732 lt!35797)) (_1!1099 lt!35660)))))

(assert (= (and d!19301 (not res!41566)) b!79576))

(assert (= (and b!79576 res!41567) b!79577))

(declare-fun m!80631 () Bool)

(assert (=> b!79577 m!80631))

(assert (=> d!18583 d!19301))

(declare-fun b!79578 () Bool)

(declare-fun e!51974 () Option!141)

(assert (=> b!79578 (= e!51974 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36315)))))))

(declare-fun e!51975 () Option!141)

(declare-fun b!79580 () Bool)

(assert (=> b!79580 (= e!51975 (getValueByKey!135 (t!5148 (toList!732 lt!36315)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun d!19303 () Bool)

(declare-fun c!12355 () Bool)

(assert (=> d!19303 (= c!12355 (and ((_ is Cons!1507) (toList!732 lt!36315)) (= (_1!1099 (h!2095 (toList!732 lt!36315))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))))

(assert (=> d!19303 (= (getValueByKey!135 (toList!732 lt!36315) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) e!51974)))

(declare-fun b!79581 () Bool)

(assert (=> b!79581 (= e!51975 None!139)))

(declare-fun b!79579 () Bool)

(assert (=> b!79579 (= e!51974 e!51975)))

(declare-fun c!12356 () Bool)

(assert (=> b!79579 (= c!12356 (and ((_ is Cons!1507) (toList!732 lt!36315)) (not (= (_1!1099 (h!2095 (toList!732 lt!36315))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))))

(assert (= (and d!19303 c!12355) b!79578))

(assert (= (and d!19303 (not c!12355)) b!79579))

(assert (= (and b!79579 c!12356) b!79580))

(assert (= (and b!79579 (not c!12356)) b!79581))

(declare-fun m!80633 () Bool)

(assert (=> b!79580 m!80633))

(assert (=> b!78447 d!19303))

(declare-fun b!79582 () Bool)

(declare-fun e!51976 () Option!141)

(assert (=> b!79582 (= e!51976 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36325)))))))

(declare-fun e!51977 () Option!141)

(declare-fun b!79584 () Bool)

(assert (=> b!79584 (= e!51977 (getValueByKey!135 (t!5148 (toList!732 lt!36325)) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun c!12357 () Bool)

(declare-fun d!19305 () Bool)

(assert (=> d!19305 (= c!12357 (and ((_ is Cons!1507) (toList!732 lt!36325)) (= (_1!1099 (h!2095 (toList!732 lt!36325))) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (=> d!19305 (= (getValueByKey!135 (toList!732 lt!36325) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) e!51976)))

(declare-fun b!79585 () Bool)

(assert (=> b!79585 (= e!51977 None!139)))

(declare-fun b!79583 () Bool)

(assert (=> b!79583 (= e!51976 e!51977)))

(declare-fun c!12358 () Bool)

(assert (=> b!79583 (= c!12358 (and ((_ is Cons!1507) (toList!732 lt!36325)) (not (= (_1!1099 (h!2095 (toList!732 lt!36325))) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))))

(assert (= (and d!19305 c!12357) b!79582))

(assert (= (and d!19305 (not c!12357)) b!79583))

(assert (= (and b!79583 c!12358) b!79584))

(assert (= (and b!79583 (not c!12358)) b!79585))

(declare-fun m!80635 () Bool)

(assert (=> b!79584 m!80635))

(assert (=> b!78473 d!19305))

(declare-fun d!19307 () Bool)

(assert (=> d!19307 (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!36847 () Unit!2242)

(assert (=> d!19307 (= lt!36847 (choose!463 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51978 () Bool)

(assert (=> d!19307 e!51978))

(declare-fun res!41568 () Bool)

(assert (=> d!19307 (=> (not res!41568) (not e!51978))))

(assert (=> d!19307 (= res!41568 (isStrictlySorted!290 (toList!732 lt!35901)))))

(assert (=> d!19307 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000) lt!36847)))

(declare-fun b!79586 () Bool)

(assert (=> b!79586 (= e!51978 (containsKey!139 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19307 res!41568) b!79586))

(assert (=> d!19307 m!78397))

(assert (=> d!19307 m!78397))

(assert (=> d!19307 m!78399))

(declare-fun m!80637 () Bool)

(assert (=> d!19307 m!80637))

(assert (=> d!19307 m!80223))

(assert (=> b!79586 m!78393))

(assert (=> b!78354 d!19307))

(declare-fun d!19309 () Bool)

(assert (=> d!19309 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3373 () Bool)

(assert (= bs!3373 d!19309))

(assert (=> bs!3373 m!78397))

(declare-fun m!80639 () Bool)

(assert (=> bs!3373 m!80639))

(assert (=> b!78354 d!19309))

(assert (=> b!78354 d!19223))

(declare-fun d!19311 () Bool)

(assert (=> d!19311 (= (apply!79 lt!36137 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1180 (getValueByKey!135 (toList!732 lt!36137) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3374 () Bool)

(assert (= bs!3374 d!19311))

(assert (=> bs!3374 m!77965))

(assert (=> bs!3374 m!80165))

(assert (=> bs!3374 m!80165))

(declare-fun m!80641 () Bool)

(assert (=> bs!3374 m!80641))

(assert (=> b!78254 d!19311))

(declare-fun d!19313 () Bool)

(declare-fun c!12359 () Bool)

(assert (=> d!19313 (= c!12359 ((_ is ValueCellFull!911) (select (arr!1883 (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!51979 () V!2993)

(assert (=> d!19313 (= (get!1177 (select (arr!1883 (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51979)))

(declare-fun b!79587 () Bool)

(assert (=> b!79587 (= e!51979 (get!1178 (select (arr!1883 (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79588 () Bool)

(assert (=> b!79588 (= e!51979 (get!1179 (select (arr!1883 (ite c!11926 (_values!2254 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19313 c!12359) b!79587))

(assert (= (and d!19313 (not c!12359)) b!79588))

(assert (=> b!79587 m!78295))

(assert (=> b!79587 m!77983))

(declare-fun m!80643 () Bool)

(assert (=> b!79587 m!80643))

(assert (=> b!79588 m!78295))

(assert (=> b!79588 m!77983))

(declare-fun m!80645 () Bool)

(assert (=> b!79588 m!80645))

(assert (=> b!78254 d!19313))

(declare-fun d!19315 () Bool)

(assert (=> d!19315 (isDefined!89 (getValueByKey!135 (toList!732 lt!35801) (_1!1099 lt!35659)))))

(declare-fun lt!36848 () Unit!2242)

(assert (=> d!19315 (= lt!36848 (choose!463 (toList!732 lt!35801) (_1!1099 lt!35659)))))

(declare-fun e!51980 () Bool)

(assert (=> d!19315 e!51980))

(declare-fun res!41569 () Bool)

(assert (=> d!19315 (=> (not res!41569) (not e!51980))))

(assert (=> d!19315 (= res!41569 (isStrictlySorted!290 (toList!732 lt!35801)))))

(assert (=> d!19315 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35801) (_1!1099 lt!35659)) lt!36848)))

(declare-fun b!79589 () Bool)

(assert (=> b!79589 (= e!51980 (containsKey!139 (toList!732 lt!35801) (_1!1099 lt!35659)))))

(assert (= (and d!19315 res!41569) b!79589))

(assert (=> d!19315 m!77685))

(assert (=> d!19315 m!77685))

(assert (=> d!19315 m!78517))

(declare-fun m!80647 () Bool)

(assert (=> d!19315 m!80647))

(declare-fun m!80649 () Bool)

(assert (=> d!19315 m!80649))

(assert (=> b!79589 m!78513))

(assert (=> b!78401 d!19315))

(declare-fun d!19317 () Bool)

(assert (=> d!19317 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35801) (_1!1099 lt!35659))) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35801) (_1!1099 lt!35659)))))))

(declare-fun bs!3375 () Bool)

(assert (= bs!3375 d!19317))

(assert (=> bs!3375 m!77685))

(declare-fun m!80651 () Bool)

(assert (=> bs!3375 m!80651))

(assert (=> b!78401 d!19317))

(assert (=> b!78401 d!18641))

(declare-fun d!19319 () Bool)

(declare-fun e!51982 () Bool)

(assert (=> d!19319 e!51982))

(declare-fun res!41570 () Bool)

(assert (=> d!19319 (=> res!41570 e!51982)))

(declare-fun lt!36851 () Bool)

(assert (=> d!19319 (= res!41570 (not lt!36851))))

(declare-fun lt!36852 () Bool)

(assert (=> d!19319 (= lt!36851 lt!36852)))

(declare-fun lt!36849 () Unit!2242)

(declare-fun e!51981 () Unit!2242)

(assert (=> d!19319 (= lt!36849 e!51981)))

(declare-fun c!12360 () Bool)

(assert (=> d!19319 (= c!12360 lt!36852)))

(assert (=> d!19319 (= lt!36852 (containsKey!139 (toList!732 lt!36406) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19319 (= (contains!739 lt!36406 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!36851)))

(declare-fun b!79590 () Bool)

(declare-fun lt!36850 () Unit!2242)

(assert (=> b!79590 (= e!51981 lt!36850)))

(assert (=> b!79590 (= lt!36850 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36406) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!79590 (isDefined!89 (getValueByKey!135 (toList!732 lt!36406) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79591 () Bool)

(declare-fun Unit!2309 () Unit!2242)

(assert (=> b!79591 (= e!51981 Unit!2309)))

(declare-fun b!79592 () Bool)

(assert (=> b!79592 (= e!51982 (isDefined!89 (getValueByKey!135 (toList!732 lt!36406) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!19319 c!12360) b!79590))

(assert (= (and d!19319 (not c!12360)) b!79591))

(assert (= (and d!19319 (not res!41570)) b!79592))

(declare-fun m!80653 () Bool)

(assert (=> d!19319 m!80653))

(declare-fun m!80655 () Bool)

(assert (=> b!79590 m!80655))

(assert (=> b!79590 m!78885))

(assert (=> b!79590 m!78885))

(declare-fun m!80657 () Bool)

(assert (=> b!79590 m!80657))

(assert (=> b!79592 m!78885))

(assert (=> b!79592 m!78885))

(assert (=> b!79592 m!80657))

(assert (=> d!18651 d!19319))

(declare-fun b!79593 () Bool)

(declare-fun e!51983 () Option!141)

(assert (=> b!79593 (= e!51983 (Some!140 (_2!1099 (h!2095 lt!36404))))))

(declare-fun e!51984 () Option!141)

(declare-fun b!79595 () Bool)

(assert (=> b!79595 (= e!51984 (getValueByKey!135 (t!5148 lt!36404) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!19321 () Bool)

(declare-fun c!12361 () Bool)

(assert (=> d!19321 (= c!12361 (and ((_ is Cons!1507) lt!36404) (= (_1!1099 (h!2095 lt!36404)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!19321 (= (getValueByKey!135 lt!36404 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!51983)))

(declare-fun b!79596 () Bool)

(assert (=> b!79596 (= e!51984 None!139)))

(declare-fun b!79594 () Bool)

(assert (=> b!79594 (= e!51983 e!51984)))

(declare-fun c!12362 () Bool)

(assert (=> b!79594 (= c!12362 (and ((_ is Cons!1507) lt!36404) (not (= (_1!1099 (h!2095 lt!36404)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!19321 c!12361) b!79593))

(assert (= (and d!19321 (not c!12361)) b!79594))

(assert (= (and b!79594 c!12362) b!79595))

(assert (= (and b!79594 (not c!12362)) b!79596))

(declare-fun m!80659 () Bool)

(assert (=> b!79595 m!80659))

(assert (=> d!18651 d!19321))

(declare-fun d!19323 () Bool)

(assert (=> d!19323 (= (getValueByKey!135 lt!36404 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!36853 () Unit!2242)

(assert (=> d!19323 (= lt!36853 (choose!462 lt!36404 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!51985 () Bool)

(assert (=> d!19323 e!51985))

(declare-fun res!41571 () Bool)

(assert (=> d!19323 (=> (not res!41571) (not e!51985))))

(assert (=> d!19323 (= res!41571 (isStrictlySorted!290 lt!36404))))

(assert (=> d!19323 (= (lemmaContainsTupThenGetReturnValue!55 lt!36404 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!36853)))

(declare-fun b!79597 () Bool)

(declare-fun res!41572 () Bool)

(assert (=> b!79597 (=> (not res!41572) (not e!51985))))

(assert (=> b!79597 (= res!41572 (containsKey!139 lt!36404 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79598 () Bool)

(assert (=> b!79598 (= e!51985 (contains!740 lt!36404 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!19323 res!41571) b!79597))

(assert (= (and b!79597 res!41572) b!79598))

(assert (=> d!19323 m!78879))

(declare-fun m!80661 () Bool)

(assert (=> d!19323 m!80661))

(declare-fun m!80663 () Bool)

(assert (=> d!19323 m!80663))

(declare-fun m!80665 () Bool)

(assert (=> b!79597 m!80665))

(declare-fun m!80667 () Bool)

(assert (=> b!79598 m!80667))

(assert (=> d!18651 d!19323))

(declare-fun b!79599 () Bool)

(declare-fun e!51987 () List!1511)

(declare-fun call!7331 () List!1511)

(assert (=> b!79599 (= e!51987 call!7331)))

(declare-fun b!79600 () Bool)

(declare-fun res!41574 () Bool)

(declare-fun e!51989 () Bool)

(assert (=> b!79600 (=> (not res!41574) (not e!51989))))

(declare-fun lt!36854 () List!1511)

(assert (=> b!79600 (= res!41574 (containsKey!139 lt!36854 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun call!7332 () List!1511)

(declare-fun e!51990 () List!1511)

(declare-fun c!12364 () Bool)

(declare-fun bm!7328 () Bool)

(assert (=> bm!7328 (= call!7332 ($colon$colon!68 e!51990 (ite c!12364 (h!2095 (toList!732 call!7058)) (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!12365 () Bool)

(assert (=> bm!7328 (= c!12365 c!12364)))

(declare-fun c!12363 () Bool)

(declare-fun b!79601 () Bool)

(declare-fun c!12366 () Bool)

(assert (=> b!79601 (= e!51990 (ite c!12363 (t!5148 (toList!732 call!7058)) (ite c!12366 (Cons!1507 (h!2095 (toList!732 call!7058)) (t!5148 (toList!732 call!7058))) Nil!1508)))))

(declare-fun d!19325 () Bool)

(assert (=> d!19325 e!51989))

(declare-fun res!41573 () Bool)

(assert (=> d!19325 (=> (not res!41573) (not e!51989))))

(assert (=> d!19325 (= res!41573 (isStrictlySorted!290 lt!36854))))

(declare-fun e!51986 () List!1511)

(assert (=> d!19325 (= lt!36854 e!51986)))

(assert (=> d!19325 (= c!12364 (and ((_ is Cons!1507) (toList!732 call!7058)) (bvslt (_1!1099 (h!2095 (toList!732 call!7058))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!19325 (isStrictlySorted!290 (toList!732 call!7058))))

(assert (=> d!19325 (= (insertStrictlySorted!58 (toList!732 call!7058) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!36854)))

(declare-fun bm!7329 () Bool)

(declare-fun call!7333 () List!1511)

(assert (=> bm!7329 (= call!7333 call!7331)))

(declare-fun b!79602 () Bool)

(assert (=> b!79602 (= c!12366 (and ((_ is Cons!1507) (toList!732 call!7058)) (bvsgt (_1!1099 (h!2095 (toList!732 call!7058))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!51988 () List!1511)

(assert (=> b!79602 (= e!51987 e!51988)))

(declare-fun b!79603 () Bool)

(assert (=> b!79603 (= e!51988 call!7333)))

(declare-fun b!79604 () Bool)

(assert (=> b!79604 (= e!51986 e!51987)))

(assert (=> b!79604 (= c!12363 (and ((_ is Cons!1507) (toList!732 call!7058)) (= (_1!1099 (h!2095 (toList!732 call!7058))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!79605 () Bool)

(assert (=> b!79605 (= e!51988 call!7333)))

(declare-fun bm!7330 () Bool)

(assert (=> bm!7330 (= call!7331 call!7332)))

(declare-fun b!79606 () Bool)

(assert (=> b!79606 (= e!51990 (insertStrictlySorted!58 (t!5148 (toList!732 call!7058)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79607 () Bool)

(assert (=> b!79607 (= e!51986 call!7332)))

(declare-fun b!79608 () Bool)

(assert (=> b!79608 (= e!51989 (contains!740 lt!36854 (tuple2!2177 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!19325 c!12364) b!79607))

(assert (= (and d!19325 (not c!12364)) b!79604))

(assert (= (and b!79604 c!12363) b!79599))

(assert (= (and b!79604 (not c!12363)) b!79602))

(assert (= (and b!79602 c!12366) b!79605))

(assert (= (and b!79602 (not c!12366)) b!79603))

(assert (= (or b!79605 b!79603) bm!7329))

(assert (= (or b!79599 bm!7329) bm!7330))

(assert (= (or b!79607 bm!7330) bm!7328))

(assert (= (and bm!7328 c!12365) b!79606))

(assert (= (and bm!7328 (not c!12365)) b!79601))

(assert (= (and d!19325 res!41573) b!79600))

(assert (= (and b!79600 res!41574) b!79608))

(declare-fun m!80669 () Bool)

(assert (=> b!79606 m!80669))

(declare-fun m!80671 () Bool)

(assert (=> bm!7328 m!80671))

(declare-fun m!80673 () Bool)

(assert (=> b!79600 m!80673))

(declare-fun m!80675 () Bool)

(assert (=> b!79608 m!80675))

(declare-fun m!80677 () Bool)

(assert (=> d!19325 m!80677))

(declare-fun m!80679 () Bool)

(assert (=> d!19325 m!80679))

(assert (=> d!18651 d!19325))

(declare-fun d!19327 () Bool)

(assert (=> d!19327 (isDefined!89 (getValueByKey!135 (toList!732 lt!35817) (_1!1099 lt!35670)))))

(declare-fun lt!36855 () Unit!2242)

(assert (=> d!19327 (= lt!36855 (choose!463 (toList!732 lt!35817) (_1!1099 lt!35670)))))

(declare-fun e!51991 () Bool)

(assert (=> d!19327 e!51991))

(declare-fun res!41575 () Bool)

(assert (=> d!19327 (=> (not res!41575) (not e!51991))))

(assert (=> d!19327 (= res!41575 (isStrictlySorted!290 (toList!732 lt!35817)))))

(assert (=> d!19327 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35817) (_1!1099 lt!35670)) lt!36855)))

(declare-fun b!79609 () Bool)

(assert (=> b!79609 (= e!51991 (containsKey!139 (toList!732 lt!35817) (_1!1099 lt!35670)))))

(assert (= (and d!19327 res!41575) b!79609))

(assert (=> d!19327 m!77741))

(assert (=> d!19327 m!77741))

(assert (=> d!19327 m!78801))

(declare-fun m!80681 () Bool)

(assert (=> d!19327 m!80681))

(declare-fun m!80683 () Bool)

(assert (=> d!19327 m!80683))

(assert (=> b!79609 m!78797))

(assert (=> b!78572 d!19327))

(declare-fun d!19329 () Bool)

(assert (=> d!19329 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35817) (_1!1099 lt!35670))) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35817) (_1!1099 lt!35670)))))))

(declare-fun bs!3376 () Bool)

(assert (= bs!3376 d!19329))

(assert (=> bs!3376 m!77741))

(declare-fun m!80685 () Bool)

(assert (=> bs!3376 m!80685))

(assert (=> b!78572 d!19329))

(assert (=> b!78572 d!18605))

(assert (=> b!78612 d!19117))

(assert (=> b!78612 d!19119))

(declare-fun d!19331 () Bool)

(declare-fun res!41576 () Bool)

(declare-fun e!51992 () Bool)

(assert (=> d!19331 (=> res!41576 e!51992)))

(assert (=> d!19331 (= res!41576 (and ((_ is Cons!1507) lt!35840) (= (_1!1099 (h!2095 lt!35840)) (_1!1099 lt!35659))))))

(assert (=> d!19331 (= (containsKey!139 lt!35840 (_1!1099 lt!35659)) e!51992)))

(declare-fun b!79610 () Bool)

(declare-fun e!51993 () Bool)

(assert (=> b!79610 (= e!51992 e!51993)))

(declare-fun res!41577 () Bool)

(assert (=> b!79610 (=> (not res!41577) (not e!51993))))

(assert (=> b!79610 (= res!41577 (and (or (not ((_ is Cons!1507) lt!35840)) (bvsle (_1!1099 (h!2095 lt!35840)) (_1!1099 lt!35659))) ((_ is Cons!1507) lt!35840) (bvslt (_1!1099 (h!2095 lt!35840)) (_1!1099 lt!35659))))))

(declare-fun b!79611 () Bool)

(assert (=> b!79611 (= e!51993 (containsKey!139 (t!5148 lt!35840) (_1!1099 lt!35659)))))

(assert (= (and d!19331 (not res!41576)) b!79610))

(assert (= (and b!79610 res!41577) b!79611))

(declare-fun m!80687 () Bool)

(assert (=> b!79611 m!80687))

(assert (=> b!78174 d!19331))

(declare-fun d!19333 () Bool)

(declare-fun lt!36856 () Bool)

(assert (=> d!19333 (= lt!36856 (select (content!83 (toList!732 lt!36014)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!51994 () Bool)

(assert (=> d!19333 (= lt!36856 e!51994)))

(declare-fun res!41578 () Bool)

(assert (=> d!19333 (=> (not res!41578) (not e!51994))))

(assert (=> d!19333 (= res!41578 ((_ is Cons!1507) (toList!732 lt!36014)))))

(assert (=> d!19333 (= (contains!740 (toList!732 lt!36014) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36856)))

(declare-fun b!79612 () Bool)

(declare-fun e!51995 () Bool)

(assert (=> b!79612 (= e!51994 e!51995)))

(declare-fun res!41579 () Bool)

(assert (=> b!79612 (=> res!41579 e!51995)))

(assert (=> b!79612 (= res!41579 (= (h!2095 (toList!732 lt!36014)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!79613 () Bool)

(assert (=> b!79613 (= e!51995 (contains!740 (t!5148 (toList!732 lt!36014)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!19333 res!41578) b!79612))

(assert (= (and b!79612 (not res!41579)) b!79613))

(declare-fun m!80689 () Bool)

(assert (=> d!19333 m!80689))

(declare-fun m!80691 () Bool)

(assert (=> d!19333 m!80691))

(declare-fun m!80693 () Bool)

(assert (=> b!79613 m!80693))

(assert (=> b!78083 d!19333))

(declare-fun d!19335 () Bool)

(assert (=> d!19335 (= (apply!79 lt!36082 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1180 (getValueByKey!135 (toList!732 lt!36082) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3377 () Bool)

(assert (= bs!3377 d!19335))

(assert (=> bs!3377 m!78113))

(assert (=> bs!3377 m!79737))

(assert (=> bs!3377 m!79737))

(declare-fun m!80695 () Bool)

(assert (=> bs!3377 m!80695))

(assert (=> b!78207 d!19335))

(declare-fun d!19337 () Bool)

(declare-fun c!12367 () Bool)

(assert (=> d!19337 (= c!12367 ((_ is ValueCellFull!911) (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!51996 () V!2993)

(assert (=> d!19337 (= (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51996)))

(declare-fun b!79614 () Bool)

(assert (=> b!79614 (= e!51996 (get!1178 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79615 () Bool)

(assert (=> b!79615 (= e!51996 (get!1179 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19337 c!12367) b!79614))

(assert (= (and d!19337 (not c!12367)) b!79615))

(assert (=> b!79614 m!78117))

(assert (=> b!79614 m!77489))

(declare-fun m!80697 () Bool)

(assert (=> b!79614 m!80697))

(assert (=> b!79615 m!78117))

(assert (=> b!79615 m!77489))

(declare-fun m!80699 () Bool)

(assert (=> b!79615 m!80699))

(assert (=> b!78207 d!19337))

(declare-fun d!19339 () Bool)

(assert (=> d!19339 (= (get!1180 (getValueByKey!135 (toList!732 lt!35902) lt!35905)) (v!2590 (getValueByKey!135 (toList!732 lt!35902) lt!35905)))))

(assert (=> d!18515 d!19339))

(declare-fun b!79616 () Bool)

(declare-fun e!51997 () Option!141)

(assert (=> b!79616 (= e!51997 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35902)))))))

(declare-fun b!79618 () Bool)

(declare-fun e!51998 () Option!141)

(assert (=> b!79618 (= e!51998 (getValueByKey!135 (t!5148 (toList!732 lt!35902)) lt!35905))))

(declare-fun d!19341 () Bool)

(declare-fun c!12368 () Bool)

(assert (=> d!19341 (= c!12368 (and ((_ is Cons!1507) (toList!732 lt!35902)) (= (_1!1099 (h!2095 (toList!732 lt!35902))) lt!35905)))))

(assert (=> d!19341 (= (getValueByKey!135 (toList!732 lt!35902) lt!35905) e!51997)))

(declare-fun b!79619 () Bool)

(assert (=> b!79619 (= e!51998 None!139)))

(declare-fun b!79617 () Bool)

(assert (=> b!79617 (= e!51997 e!51998)))

(declare-fun c!12369 () Bool)

(assert (=> b!79617 (= c!12369 (and ((_ is Cons!1507) (toList!732 lt!35902)) (not (= (_1!1099 (h!2095 (toList!732 lt!35902))) lt!35905))))))

(assert (= (and d!19341 c!12368) b!79616))

(assert (= (and d!19341 (not c!12368)) b!79617))

(assert (= (and b!79617 c!12369) b!79618))

(assert (= (and b!79617 (not c!12369)) b!79619))

(declare-fun m!80701 () Bool)

(assert (=> b!79618 m!80701))

(assert (=> d!18515 d!19341))

(declare-fun b!79620 () Bool)

(declare-fun e!51999 () Option!141)

(assert (=> b!79620 (= e!51999 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36406)))))))

(declare-fun b!79622 () Bool)

(declare-fun e!52000 () Option!141)

(assert (=> b!79622 (= e!52000 (getValueByKey!135 (t!5148 (toList!732 lt!36406)) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!12370 () Bool)

(declare-fun d!19343 () Bool)

(assert (=> d!19343 (= c!12370 (and ((_ is Cons!1507) (toList!732 lt!36406)) (= (_1!1099 (h!2095 (toList!732 lt!36406))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!19343 (= (getValueByKey!135 (toList!732 lt!36406) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!51999)))

(declare-fun b!79623 () Bool)

(assert (=> b!79623 (= e!52000 None!139)))

(declare-fun b!79621 () Bool)

(assert (=> b!79621 (= e!51999 e!52000)))

(declare-fun c!12371 () Bool)

(assert (=> b!79621 (= c!12371 (and ((_ is Cons!1507) (toList!732 lt!36406)) (not (= (_1!1099 (h!2095 (toList!732 lt!36406))) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!19343 c!12370) b!79620))

(assert (= (and d!19343 (not c!12370)) b!79621))

(assert (= (and b!79621 c!12371) b!79622))

(assert (= (and b!79621 (not c!12371)) b!79623))

(declare-fun m!80703 () Bool)

(assert (=> b!79622 m!80703))

(assert (=> b!78622 d!19343))

(declare-fun d!19345 () Bool)

(assert (=> d!19345 (= (get!1178 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2583 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78122 d!19345))

(declare-fun d!19347 () Bool)

(declare-fun lt!36857 () Bool)

(assert (=> d!19347 (= lt!36857 (select (content!83 (t!5148 (toList!732 lt!35801))) lt!35659))))

(declare-fun e!52001 () Bool)

(assert (=> d!19347 (= lt!36857 e!52001)))

(declare-fun res!41580 () Bool)

(assert (=> d!19347 (=> (not res!41580) (not e!52001))))

(assert (=> d!19347 (= res!41580 ((_ is Cons!1507) (t!5148 (toList!732 lt!35801))))))

(assert (=> d!19347 (= (contains!740 (t!5148 (toList!732 lt!35801)) lt!35659) lt!36857)))

(declare-fun b!79624 () Bool)

(declare-fun e!52002 () Bool)

(assert (=> b!79624 (= e!52001 e!52002)))

(declare-fun res!41581 () Bool)

(assert (=> b!79624 (=> res!41581 e!52002)))

(assert (=> b!79624 (= res!41581 (= (h!2095 (t!5148 (toList!732 lt!35801))) lt!35659))))

(declare-fun b!79625 () Bool)

(assert (=> b!79625 (= e!52002 (contains!740 (t!5148 (t!5148 (toList!732 lt!35801))) lt!35659))))

(assert (= (and d!19347 res!41580) b!79624))

(assert (= (and b!79624 (not res!41581)) b!79625))

(declare-fun m!80705 () Bool)

(assert (=> d!19347 m!80705))

(declare-fun m!80707 () Bool)

(assert (=> d!19347 m!80707))

(declare-fun m!80709 () Bool)

(assert (=> b!79625 m!80709))

(assert (=> b!78353 d!19347))

(assert (=> d!18539 d!18497))

(declare-fun lt!36860 () SeekEntryResult!243)

(declare-fun c!12377 () Bool)

(declare-fun bm!7335 () Bool)

(declare-fun call!7339 () Bool)

(assert (=> bm!7335 (= call!7339 (inRange!0 (ite c!12377 (index!3106 lt!36860) (index!3109 lt!36860)) (mask!6266 newMap!16)))))

(declare-fun b!79642 () Bool)

(declare-fun res!41593 () Bool)

(assert (=> b!79642 (= res!41593 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3106 lt!36860)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52011 () Bool)

(assert (=> b!79642 (=> (not res!41593) (not e!52011))))

(declare-fun b!79643 () Bool)

(declare-fun e!52013 () Bool)

(assert (=> b!79643 (= e!52013 e!52011)))

(declare-fun res!41592 () Bool)

(assert (=> b!79643 (= res!41592 call!7339)))

(assert (=> b!79643 (=> (not res!41592) (not e!52011))))

(declare-fun b!79644 () Bool)

(declare-fun e!52012 () Bool)

(assert (=> b!79644 (= e!52012 ((_ is Undefined!243) lt!36860))))

(declare-fun d!19349 () Bool)

(assert (=> d!19349 e!52013))

(assert (=> d!19349 (= c!12377 ((_ is MissingZero!243) lt!36860))))

(assert (=> d!19349 (= lt!36860 (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(assert (=> d!19349 true))

(declare-fun _$34!820 () Unit!2242)

(assert (=> d!19349 (= (choose!469 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (defaultEntry!2271 newMap!16)) _$34!820)))

(declare-fun bm!7336 () Bool)

(declare-fun call!7338 () Bool)

(assert (=> bm!7336 (= call!7338 (arrayContainsKey!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!79645 () Bool)

(declare-fun e!52014 () Bool)

(assert (=> b!79645 (= e!52014 (not call!7338))))

(declare-fun b!79646 () Bool)

(assert (=> b!79646 (= e!52013 e!52012)))

(declare-fun c!12376 () Bool)

(assert (=> b!79646 (= c!12376 ((_ is MissingVacant!243) lt!36860))))

(declare-fun b!79647 () Bool)

(declare-fun res!41591 () Bool)

(assert (=> b!79647 (=> (not res!41591) (not e!52014))))

(assert (=> b!79647 (= res!41591 (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3109 lt!36860)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79648 () Bool)

(assert (=> b!79648 (= e!52011 (not call!7338))))

(declare-fun b!79649 () Bool)

(declare-fun res!41590 () Bool)

(assert (=> b!79649 (=> (not res!41590) (not e!52014))))

(assert (=> b!79649 (= res!41590 call!7339)))

(assert (=> b!79649 (= e!52012 e!52014)))

(assert (= (and d!19349 c!12377) b!79643))

(assert (= (and d!19349 (not c!12377)) b!79646))

(assert (= (and b!79643 res!41592) b!79642))

(assert (= (and b!79642 res!41593) b!79648))

(assert (= (and b!79646 c!12376) b!79649))

(assert (= (and b!79646 (not c!12376)) b!79644))

(assert (= (and b!79649 res!41590) b!79647))

(assert (= (and b!79647 res!41591) b!79645))

(assert (= (or b!79643 b!79649) bm!7335))

(assert (= (or b!79648 b!79645) bm!7336))

(declare-fun m!80711 () Bool)

(assert (=> b!79642 m!80711))

(declare-fun m!80713 () Bool)

(assert (=> bm!7335 m!80713))

(declare-fun m!80715 () Bool)

(assert (=> b!79647 m!80715))

(assert (=> d!19349 m!77463))

(assert (=> d!19349 m!77861))

(assert (=> bm!7336 m!77463))

(assert (=> bm!7336 m!77859))

(assert (=> d!18539 d!19349))

(assert (=> d!18539 d!18739))

(declare-fun lt!36861 () Bool)

(declare-fun d!19351 () Bool)

(assert (=> d!19351 (= lt!36861 (select (content!83 (toList!732 lt!36103)) (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun e!52015 () Bool)

(assert (=> d!19351 (= lt!36861 e!52015)))

(declare-fun res!41594 () Bool)

(assert (=> d!19351 (=> (not res!41594) (not e!52015))))

(assert (=> d!19351 (= res!41594 ((_ is Cons!1507) (toList!732 lt!36103)))))

(assert (=> d!19351 (= (contains!740 (toList!732 lt!36103) (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) lt!36861)))

(declare-fun b!79650 () Bool)

(declare-fun e!52016 () Bool)

(assert (=> b!79650 (= e!52015 e!52016)))

(declare-fun res!41595 () Bool)

(assert (=> b!79650 (=> res!41595 e!52016)))

(assert (=> b!79650 (= res!41595 (= (h!2095 (toList!732 lt!36103)) (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(declare-fun b!79651 () Bool)

(assert (=> b!79651 (= e!52016 (contains!740 (t!5148 (toList!732 lt!36103)) (ite c!11926 (ite c!11928 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35658) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (= (and d!19351 res!41594) b!79650))

(assert (= (and b!79650 (not res!41595)) b!79651))

(declare-fun m!80717 () Bool)

(assert (=> d!19351 m!80717))

(declare-fun m!80719 () Bool)

(assert (=> d!19351 m!80719))

(declare-fun m!80721 () Bool)

(assert (=> b!79651 m!80721))

(assert (=> b!78231 d!19351))

(declare-fun d!19353 () Bool)

(assert (=> d!19353 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835))))

(declare-fun lt!36862 () Unit!2242)

(assert (=> d!19353 (= lt!36862 (choose!463 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835))))

(declare-fun e!52017 () Bool)

(assert (=> d!19353 e!52017))

(declare-fun res!41596 () Bool)

(assert (=> d!19353 (=> (not res!41596) (not e!52017))))

(assert (=> d!19353 (= res!41596 (isStrictlySorted!290 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)))))))

(assert (=> d!19353 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835) lt!36862)))

(declare-fun b!79652 () Bool)

(assert (=> b!79652 (= e!52017 (containsKey!139 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835))))

(assert (= (and d!19353 res!41596) b!79652))

(assert (=> d!19353 m!78857))

(assert (=> d!19353 m!78857))

(assert (=> d!19353 m!78859))

(declare-fun m!80723 () Bool)

(assert (=> d!19353 m!80723))

(declare-fun m!80725 () Bool)

(assert (=> d!19353 m!80725))

(assert (=> b!79652 m!78853))

(assert (=> b!78613 d!19353))

(declare-fun d!19355 () Bool)

(assert (=> d!19355 (= (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835)) (not (isEmpty!331 (getValueByKey!135 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835))))))

(declare-fun bs!3378 () Bool)

(assert (= bs!3378 d!19355))

(assert (=> bs!3378 m!78857))

(declare-fun m!80727 () Bool)

(assert (=> bs!3378 m!80727))

(assert (=> b!78613 d!19355))

(declare-fun b!79653 () Bool)

(declare-fun e!52018 () Option!141)

(assert (=> b!79653 (= e!52018 (Some!140 (_2!1099 (h!2095 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)))))))))

(declare-fun b!79655 () Bool)

(declare-fun e!52019 () Option!141)

(assert (=> b!79655 (= e!52019 (getValueByKey!135 (t!5148 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)))) lt!35835))))

(declare-fun d!19357 () Bool)

(declare-fun c!12378 () Bool)

(assert (=> d!19357 (= c!12378 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))))) lt!35835)))))

(assert (=> d!19357 (= (getValueByKey!135 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))) lt!35835) e!52018)))

(declare-fun b!79656 () Bool)

(assert (=> b!79656 (= e!52019 None!139)))

(declare-fun b!79654 () Bool)

(assert (=> b!79654 (= e!52018 e!52019)))

(declare-fun c!12379 () Bool)

(assert (=> b!79654 (= c!12379 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)))) (not (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834))))) lt!35835))))))

(assert (= (and d!19357 c!12378) b!79653))

(assert (= (and d!19357 (not c!12378)) b!79654))

(assert (= (and b!79654 c!12379) b!79655))

(assert (= (and b!79654 (not c!12379)) b!79656))

(declare-fun m!80729 () Bool)

(assert (=> b!79655 m!80729))

(assert (=> b!78613 d!19357))

(declare-fun b!79657 () Bool)

(declare-fun e!52020 () Option!141)

(assert (=> b!79657 (= e!52020 (Some!140 (_2!1099 (h!2095 (t!5148 (toList!732 lt!35805))))))))

(declare-fun b!79659 () Bool)

(declare-fun e!52021 () Option!141)

(assert (=> b!79659 (= e!52021 (getValueByKey!135 (t!5148 (t!5148 (toList!732 lt!35805))) (_1!1099 lt!35660)))))

(declare-fun d!19359 () Bool)

(declare-fun c!12380 () Bool)

(assert (=> d!19359 (= c!12380 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35805))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35805)))) (_1!1099 lt!35660))))))

(assert (=> d!19359 (= (getValueByKey!135 (t!5148 (toList!732 lt!35805)) (_1!1099 lt!35660)) e!52020)))

(declare-fun b!79660 () Bool)

(assert (=> b!79660 (= e!52021 None!139)))

(declare-fun b!79658 () Bool)

(assert (=> b!79658 (= e!52020 e!52021)))

(declare-fun c!12381 () Bool)

(assert (=> b!79658 (= c!12381 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35805))) (not (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35805)))) (_1!1099 lt!35660)))))))

(assert (= (and d!19359 c!12380) b!79657))

(assert (= (and d!19359 (not c!12380)) b!79658))

(assert (= (and b!79658 c!12381) b!79659))

(assert (= (and b!79658 (not c!12381)) b!79660))

(declare-fun m!80731 () Bool)

(assert (=> b!79659 m!80731))

(assert (=> b!78504 d!19359))

(declare-fun b!79661 () Bool)

(declare-fun e!52023 () Bool)

(declare-fun call!7340 () Bool)

(assert (=> b!79661 (= e!52023 call!7340)))

(declare-fun d!19361 () Bool)

(declare-fun res!41598 () Bool)

(declare-fun e!52024 () Bool)

(assert (=> d!19361 (=> res!41598 e!52024)))

(assert (=> d!19361 (= res!41598 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!19361 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3930 newMap!16) (mask!6266 newMap!16)) e!52024)))

(declare-fun b!79662 () Bool)

(declare-fun e!52022 () Bool)

(assert (=> b!79662 (= e!52024 e!52022)))

(declare-fun c!12382 () Bool)

(assert (=> b!79662 (= c!12382 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!79663 () Bool)

(assert (=> b!79663 (= e!52022 call!7340)))

(declare-fun b!79664 () Bool)

(assert (=> b!79664 (= e!52022 e!52023)))

(declare-fun lt!36864 () (_ BitVec 64))

(assert (=> b!79664 (= lt!36864 (select (arr!1882 (_keys!3930 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!36865 () Unit!2242)

(assert (=> b!79664 (= lt!36865 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3930 newMap!16) lt!36864 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!79664 (arrayContainsKey!0 (_keys!3930 newMap!16) lt!36864 #b00000000000000000000000000000000)))

(declare-fun lt!36863 () Unit!2242)

(assert (=> b!79664 (= lt!36863 lt!36865)))

(declare-fun res!41597 () Bool)

(assert (=> b!79664 (= res!41597 (= (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3930 newMap!16) (mask!6266 newMap!16)) (Found!243 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!79664 (=> (not res!41597) (not e!52023))))

(declare-fun bm!7337 () Bool)

(assert (=> bm!7337 (= call!7340 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(assert (= (and d!19361 (not res!41598)) b!79662))

(assert (= (and b!79662 c!12382) b!79664))

(assert (= (and b!79662 (not c!12382)) b!79663))

(assert (= (and b!79664 res!41597) b!79661))

(assert (= (or b!79661 b!79663) bm!7337))

(assert (=> b!79662 m!80135))

(assert (=> b!79662 m!80135))

(assert (=> b!79662 m!80141))

(assert (=> b!79664 m!80135))

(declare-fun m!80733 () Bool)

(assert (=> b!79664 m!80733))

(declare-fun m!80735 () Bool)

(assert (=> b!79664 m!80735))

(assert (=> b!79664 m!80135))

(declare-fun m!80737 () Bool)

(assert (=> b!79664 m!80737))

(declare-fun m!80739 () Bool)

(assert (=> bm!7337 m!80739))

(assert (=> bm!7173 d!19361))

(declare-fun d!19363 () Bool)

(assert (=> d!19363 (= (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35906)) (v!2590 (getValueByKey!135 (toList!732 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35906)))))

(assert (=> d!18531 d!19363))

(declare-fun b!79665 () Bool)

(declare-fun e!52025 () Option!141)

(assert (=> b!79665 (= e!52025 (Some!140 (_2!1099 (h!2095 (toList!732 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))))

(declare-fun b!79667 () Bool)

(declare-fun e!52026 () Option!141)

(assert (=> b!79667 (= e!52026 (getValueByKey!135 (t!5148 (toList!732 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) lt!35906))))

(declare-fun c!12383 () Bool)

(declare-fun d!19365 () Bool)

(assert (=> d!19365 (= c!12383 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35906)))))

(assert (=> d!19365 (= (getValueByKey!135 (toList!732 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35906) e!52025)))

(declare-fun b!79668 () Bool)

(assert (=> b!79668 (= e!52026 None!139)))

(declare-fun b!79666 () Bool)

(assert (=> b!79666 (= e!52025 e!52026)))

(declare-fun c!12384 () Bool)

(assert (=> b!79666 (= c!12384 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))) (not (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35895 (tuple2!2177 lt!35908 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35906))))))

(assert (= (and d!19365 c!12383) b!79665))

(assert (= (and d!19365 (not c!12383)) b!79666))

(assert (= (and b!79666 c!12384) b!79667))

(assert (= (and b!79666 (not c!12384)) b!79668))

(declare-fun m!80741 () Bool)

(assert (=> b!79667 m!80741))

(assert (=> d!18531 d!19365))

(declare-fun d!19367 () Bool)

(declare-fun res!41599 () Bool)

(declare-fun e!52027 () Bool)

(assert (=> d!19367 (=> res!41599 e!52027)))

(assert (=> d!19367 (= res!41599 (and ((_ is Cons!1507) (toList!732 lt!35901)) (= (_1!1099 (h!2095 (toList!732 lt!35901))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19367 (= (containsKey!139 (toList!732 lt!35901) #b0000000000000000000000000000000000000000000000000000000000000000) e!52027)))

(declare-fun b!79669 () Bool)

(declare-fun e!52028 () Bool)

(assert (=> b!79669 (= e!52027 e!52028)))

(declare-fun res!41600 () Bool)

(assert (=> b!79669 (=> (not res!41600) (not e!52028))))

(assert (=> b!79669 (= res!41600 (and (or (not ((_ is Cons!1507) (toList!732 lt!35901))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35901))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1507) (toList!732 lt!35901)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35901))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79670 () Bool)

(assert (=> b!79670 (= e!52028 (containsKey!139 (t!5148 (toList!732 lt!35901)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19367 (not res!41599)) b!79669))

(assert (= (and b!79669 res!41600) b!79670))

(declare-fun m!80743 () Bool)

(assert (=> b!79670 m!80743))

(assert (=> d!18503 d!19367))

(declare-fun bm!7338 () Bool)

(declare-fun call!7341 () (_ BitVec 32))

(assert (=> bm!7338 (= call!7341 (arrayCountValidKeys!0 (_keys!3930 (_2!1098 lt!35994)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 (_2!1098 lt!35994)))))))

(declare-fun d!19369 () Bool)

(declare-fun lt!36866 () (_ BitVec 32))

(assert (=> d!19369 (and (bvsge lt!36866 #b00000000000000000000000000000000) (bvsle lt!36866 (bvsub (size!2124 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000)))))

(declare-fun e!52030 () (_ BitVec 32))

(assert (=> d!19369 (= lt!36866 e!52030)))

(declare-fun c!12386 () Bool)

(assert (=> d!19369 (= c!12386 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))))))

(assert (=> d!19369 (and (bvsle #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2124 (_keys!3930 (_2!1098 lt!35994))) (size!2124 (_keys!3930 (_2!1098 lt!35994)))))))

(assert (=> d!19369 (= (arrayCountValidKeys!0 (_keys!3930 (_2!1098 lt!35994)) #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))) lt!36866)))

(declare-fun b!79671 () Bool)

(declare-fun e!52029 () (_ BitVec 32))

(assert (=> b!79671 (= e!52029 (bvadd #b00000000000000000000000000000001 call!7341))))

(declare-fun b!79672 () Bool)

(assert (=> b!79672 (= e!52030 #b00000000000000000000000000000000)))

(declare-fun b!79673 () Bool)

(assert (=> b!79673 (= e!52030 e!52029)))

(declare-fun c!12385 () Bool)

(assert (=> b!79673 (= c!12385 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000)))))

(declare-fun b!79674 () Bool)

(assert (=> b!79674 (= e!52029 call!7341)))

(assert (= (and d!19369 c!12386) b!79672))

(assert (= (and d!19369 (not c!12386)) b!79673))

(assert (= (and b!79673 c!12385) b!79671))

(assert (= (and b!79673 (not c!12385)) b!79674))

(assert (= (or b!79671 b!79674) bm!7338))

(declare-fun m!80745 () Bool)

(assert (=> bm!7338 m!80745))

(assert (=> b!79673 m!79263))

(assert (=> b!79673 m!79263))

(assert (=> b!79673 m!79273))

(assert (=> b!78219 d!19369))

(assert (=> b!78169 d!19131))

(assert (=> b!78169 d!18491))

(declare-fun d!19371 () Bool)

(declare-fun res!41601 () Bool)

(declare-fun e!52031 () Bool)

(assert (=> d!19371 (=> res!41601 e!52031)))

(assert (=> d!19371 (= res!41601 (and ((_ is Cons!1507) (toList!732 lt!35801)) (= (_1!1099 (h!2095 (toList!732 lt!35801))) (_1!1099 lt!35659))))))

(assert (=> d!19371 (= (containsKey!139 (toList!732 lt!35801) (_1!1099 lt!35659)) e!52031)))

(declare-fun b!79675 () Bool)

(declare-fun e!52032 () Bool)

(assert (=> b!79675 (= e!52031 e!52032)))

(declare-fun res!41602 () Bool)

(assert (=> b!79675 (=> (not res!41602) (not e!52032))))

(assert (=> b!79675 (= res!41602 (and (or (not ((_ is Cons!1507) (toList!732 lt!35801))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35801))) (_1!1099 lt!35659))) ((_ is Cons!1507) (toList!732 lt!35801)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35801))) (_1!1099 lt!35659))))))

(declare-fun b!79676 () Bool)

(assert (=> b!79676 (= e!52032 (containsKey!139 (t!5148 (toList!732 lt!35801)) (_1!1099 lt!35659)))))

(assert (= (and d!19371 (not res!41601)) b!79675))

(assert (= (and b!79675 res!41602) b!79676))

(declare-fun m!80747 () Bool)

(assert (=> b!79676 m!80747))

(assert (=> d!18541 d!19371))

(declare-fun d!19373 () Bool)

(declare-fun e!52034 () Bool)

(assert (=> d!19373 e!52034))

(declare-fun res!41603 () Bool)

(assert (=> d!19373 (=> res!41603 e!52034)))

(declare-fun lt!36869 () Bool)

(assert (=> d!19373 (= res!41603 (not lt!36869))))

(declare-fun lt!36870 () Bool)

(assert (=> d!19373 (= lt!36869 lt!36870)))

(declare-fun lt!36867 () Unit!2242)

(declare-fun e!52033 () Unit!2242)

(assert (=> d!19373 (= lt!36867 e!52033)))

(declare-fun c!12387 () Bool)

(assert (=> d!19373 (= c!12387 lt!36870)))

(assert (=> d!19373 (= lt!36870 (containsKey!139 (toList!732 lt!36029) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19373 (= (contains!739 lt!36029 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36869)))

(declare-fun b!79677 () Bool)

(declare-fun lt!36868 () Unit!2242)

(assert (=> b!79677 (= e!52033 lt!36868)))

(assert (=> b!79677 (= lt!36868 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36029) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79677 (isDefined!89 (getValueByKey!135 (toList!732 lt!36029) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79678 () Bool)

(declare-fun Unit!2310 () Unit!2242)

(assert (=> b!79678 (= e!52033 Unit!2310)))

(declare-fun b!79679 () Bool)

(assert (=> b!79679 (= e!52034 (isDefined!89 (getValueByKey!135 (toList!732 lt!36029) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19373 c!12387) b!79677))

(assert (= (and d!19373 (not c!12387)) b!79678))

(assert (= (and d!19373 (not res!41603)) b!79679))

(declare-fun m!80749 () Bool)

(assert (=> d!19373 m!80749))

(declare-fun m!80751 () Bool)

(assert (=> b!79677 m!80751))

(assert (=> b!79677 m!80031))

(assert (=> b!79677 m!80031))

(declare-fun m!80753 () Bool)

(assert (=> b!79677 m!80753))

(assert (=> b!79679 m!80031))

(assert (=> b!79679 m!80031))

(assert (=> b!79679 m!80753))

(assert (=> bm!7153 d!19373))

(declare-fun d!19375 () Bool)

(declare-fun e!52036 () Bool)

(assert (=> d!19375 e!52036))

(declare-fun res!41604 () Bool)

(assert (=> d!19375 (=> res!41604 e!52036)))

(declare-fun lt!36873 () Bool)

(assert (=> d!19375 (= res!41604 (not lt!36873))))

(declare-fun lt!36874 () Bool)

(assert (=> d!19375 (= lt!36873 lt!36874)))

(declare-fun lt!36871 () Unit!2242)

(declare-fun e!52035 () Unit!2242)

(assert (=> d!19375 (= lt!36871 e!52035)))

(declare-fun c!12388 () Bool)

(assert (=> d!19375 (= c!12388 lt!36874)))

(assert (=> d!19375 (= lt!36874 (containsKey!139 (toList!732 lt!36091) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!19375 (= (contains!739 lt!36091 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36873)))

(declare-fun b!79680 () Bool)

(declare-fun lt!36872 () Unit!2242)

(assert (=> b!79680 (= e!52035 lt!36872)))

(assert (=> b!79680 (= lt!36872 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36091) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> b!79680 (isDefined!89 (getValueByKey!135 (toList!732 lt!36091) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79681 () Bool)

(declare-fun Unit!2311 () Unit!2242)

(assert (=> b!79681 (= e!52035 Unit!2311)))

(declare-fun b!79682 () Bool)

(assert (=> b!79682 (= e!52036 (isDefined!89 (getValueByKey!135 (toList!732 lt!36091) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19375 c!12388) b!79680))

(assert (= (and d!19375 (not c!12388)) b!79681))

(assert (= (and d!19375 (not res!41604)) b!79682))

(declare-fun m!80755 () Bool)

(assert (=> d!19375 m!80755))

(declare-fun m!80757 () Bool)

(assert (=> b!79680 m!80757))

(assert (=> b!79680 m!78167))

(assert (=> b!79680 m!78167))

(declare-fun m!80759 () Bool)

(assert (=> b!79680 m!80759))

(assert (=> b!79682 m!78167))

(assert (=> b!79682 m!78167))

(assert (=> b!79682 m!80759))

(assert (=> d!18463 d!19375))

(declare-fun b!79683 () Bool)

(declare-fun e!52037 () Option!141)

(assert (=> b!79683 (= e!52037 (Some!140 (_2!1099 (h!2095 lt!36089))))))

(declare-fun b!79685 () Bool)

(declare-fun e!52038 () Option!141)

(assert (=> b!79685 (= e!52038 (getValueByKey!135 (t!5148 lt!36089) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!19377 () Bool)

(declare-fun c!12389 () Bool)

(assert (=> d!19377 (= c!12389 (and ((_ is Cons!1507) lt!36089) (= (_1!1099 (h!2095 lt!36089)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19377 (= (getValueByKey!135 lt!36089 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!52037)))

(declare-fun b!79686 () Bool)

(assert (=> b!79686 (= e!52038 None!139)))

(declare-fun b!79684 () Bool)

(assert (=> b!79684 (= e!52037 e!52038)))

(declare-fun c!12390 () Bool)

(assert (=> b!79684 (= c!12390 (and ((_ is Cons!1507) lt!36089) (not (= (_1!1099 (h!2095 lt!36089)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19377 c!12389) b!79683))

(assert (= (and d!19377 (not c!12389)) b!79684))

(assert (= (and b!79684 c!12390) b!79685))

(assert (= (and b!79684 (not c!12390)) b!79686))

(declare-fun m!80761 () Bool)

(assert (=> b!79685 m!80761))

(assert (=> d!18463 d!19377))

(declare-fun d!19379 () Bool)

(assert (=> d!19379 (= (getValueByKey!135 lt!36089 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36875 () Unit!2242)

(assert (=> d!19379 (= lt!36875 (choose!462 lt!36089 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!52039 () Bool)

(assert (=> d!19379 e!52039))

(declare-fun res!41605 () Bool)

(assert (=> d!19379 (=> (not res!41605) (not e!52039))))

(assert (=> d!19379 (= res!41605 (isStrictlySorted!290 lt!36089))))

(assert (=> d!19379 (= (lemmaContainsTupThenGetReturnValue!55 lt!36089 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36875)))

(declare-fun b!79687 () Bool)

(declare-fun res!41606 () Bool)

(assert (=> b!79687 (=> (not res!41606) (not e!52039))))

(assert (=> b!79687 (= res!41606 (containsKey!139 lt!36089 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79688 () Bool)

(assert (=> b!79688 (= e!52039 (contains!740 lt!36089 (tuple2!2177 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19379 res!41605) b!79687))

(assert (= (and b!79687 res!41606) b!79688))

(assert (=> d!19379 m!78161))

(declare-fun m!80763 () Bool)

(assert (=> d!19379 m!80763))

(declare-fun m!80765 () Bool)

(assert (=> d!19379 m!80765))

(declare-fun m!80767 () Bool)

(assert (=> b!79687 m!80767))

(declare-fun m!80769 () Bool)

(assert (=> b!79688 m!80769))

(assert (=> d!18463 d!19379))

(declare-fun b!79689 () Bool)

(declare-fun e!52041 () List!1511)

(declare-fun call!7342 () List!1511)

(assert (=> b!79689 (= e!52041 call!7342)))

(declare-fun b!79690 () Bool)

(declare-fun res!41608 () Bool)

(declare-fun e!52043 () Bool)

(assert (=> b!79690 (=> (not res!41608) (not e!52043))))

(declare-fun lt!36876 () List!1511)

(assert (=> b!79690 (= res!41608 (containsKey!139 lt!36876 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!52044 () List!1511)

(declare-fun bm!7339 () Bool)

(declare-fun call!7343 () List!1511)

(declare-fun c!12392 () Bool)

(assert (=> bm!7339 (= call!7343 ($colon$colon!68 e!52044 (ite c!12392 (h!2095 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (tuple2!2177 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun c!12393 () Bool)

(assert (=> bm!7339 (= c!12393 c!12392)))

(declare-fun b!79691 () Bool)

(declare-fun c!12394 () Bool)

(declare-fun c!12391 () Bool)

(assert (=> b!79691 (= e!52044 (ite c!12391 (t!5148 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (ite c!12394 (Cons!1507 (h!2095 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (t!5148 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))) Nil!1508)))))

(declare-fun d!19381 () Bool)

(assert (=> d!19381 e!52043))

(declare-fun res!41607 () Bool)

(assert (=> d!19381 (=> (not res!41607) (not e!52043))))

(assert (=> d!19381 (= res!41607 (isStrictlySorted!290 lt!36876))))

(declare-fun e!52040 () List!1511)

(assert (=> d!19381 (= lt!36876 e!52040)))

(assert (=> d!19381 (= c!12392 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (bvslt (_1!1099 (h!2095 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19381 (isStrictlySorted!290 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))))

(assert (=> d!19381 (= (insertStrictlySorted!58 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36876)))

(declare-fun bm!7340 () Bool)

(declare-fun call!7344 () List!1511)

(assert (=> bm!7340 (= call!7344 call!7342)))

(declare-fun b!79692 () Bool)

(assert (=> b!79692 (= c!12394 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (bvsgt (_1!1099 (h!2095 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun e!52042 () List!1511)

(assert (=> b!79692 (= e!52041 e!52042)))

(declare-fun b!79693 () Bool)

(assert (=> b!79693 (= e!52042 call!7344)))

(declare-fun b!79694 () Bool)

(assert (=> b!79694 (= e!52040 e!52041)))

(assert (=> b!79694 (= c!12391 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658))))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!79695 () Bool)

(assert (=> b!79695 (= e!52042 call!7344)))

(declare-fun bm!7341 () Bool)

(assert (=> bm!7341 (= call!7342 call!7343)))

(declare-fun b!79696 () Bool)

(assert (=> b!79696 (= e!52044 (insertStrictlySorted!58 (t!5148 (toList!732 (+!103 lt!35662 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79697 () Bool)

(assert (=> b!79697 (= e!52040 call!7343)))

(declare-fun b!79698 () Bool)

(assert (=> b!79698 (= e!52043 (contains!740 lt!36876 (tuple2!2177 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19381 c!12392) b!79697))

(assert (= (and d!19381 (not c!12392)) b!79694))

(assert (= (and b!79694 c!12391) b!79689))

(assert (= (and b!79694 (not c!12391)) b!79692))

(assert (= (and b!79692 c!12394) b!79695))

(assert (= (and b!79692 (not c!12394)) b!79693))

(assert (= (or b!79695 b!79693) bm!7340))

(assert (= (or b!79689 bm!7340) bm!7341))

(assert (= (or b!79697 bm!7341) bm!7339))

(assert (= (and bm!7339 c!12393) b!79696))

(assert (= (and bm!7339 (not c!12393)) b!79691))

(assert (= (and d!19381 res!41607) b!79690))

(assert (= (and b!79690 res!41608) b!79698))

(declare-fun m!80771 () Bool)

(assert (=> b!79696 m!80771))

(declare-fun m!80773 () Bool)

(assert (=> bm!7339 m!80773))

(declare-fun m!80775 () Bool)

(assert (=> b!79690 m!80775))

(declare-fun m!80777 () Bool)

(assert (=> b!79698 m!80777))

(declare-fun m!80779 () Bool)

(assert (=> d!19381 m!80779))

(declare-fun m!80781 () Bool)

(assert (=> d!19381 m!80781))

(assert (=> d!18463 d!19381))

(declare-fun d!19383 () Bool)

(declare-fun lt!36877 () Bool)

(assert (=> d!19383 (= lt!36877 (select (content!83 (t!5148 (toList!732 lt!35817))) lt!35670))))

(declare-fun e!52045 () Bool)

(assert (=> d!19383 (= lt!36877 e!52045)))

(declare-fun res!41609 () Bool)

(assert (=> d!19383 (=> (not res!41609) (not e!52045))))

(assert (=> d!19383 (= res!41609 ((_ is Cons!1507) (t!5148 (toList!732 lt!35817))))))

(assert (=> d!19383 (= (contains!740 (t!5148 (toList!732 lt!35817)) lt!35670) lt!36877)))

(declare-fun b!79699 () Bool)

(declare-fun e!52046 () Bool)

(assert (=> b!79699 (= e!52045 e!52046)))

(declare-fun res!41610 () Bool)

(assert (=> b!79699 (=> res!41610 e!52046)))

(assert (=> b!79699 (= res!41610 (= (h!2095 (t!5148 (toList!732 lt!35817))) lt!35670))))

(declare-fun b!79700 () Bool)

(assert (=> b!79700 (= e!52046 (contains!740 (t!5148 (t!5148 (toList!732 lt!35817))) lt!35670))))

(assert (= (and d!19383 res!41609) b!79699))

(assert (= (and b!79699 (not res!41610)) b!79700))

(assert (=> d!19383 m!79335))

(declare-fun m!80783 () Bool)

(assert (=> d!19383 m!80783))

(declare-fun m!80785 () Bool)

(assert (=> b!79700 m!80785))

(assert (=> b!78253 d!19383))

(declare-fun d!19385 () Bool)

(declare-fun c!12395 () Bool)

(assert (=> d!19385 (= c!12395 ((_ is Nil!1508) (toList!732 lt!35801)))))

(declare-fun e!52047 () (InoxSet tuple2!2176))

(assert (=> d!19385 (= (content!83 (toList!732 lt!35801)) e!52047)))

(declare-fun b!79701 () Bool)

(assert (=> b!79701 (= e!52047 ((as const (Array tuple2!2176 Bool)) false))))

(declare-fun b!79702 () Bool)

(assert (=> b!79702 (= e!52047 ((_ map or) (store ((as const (Array tuple2!2176 Bool)) false) (h!2095 (toList!732 lt!35801)) true) (content!83 (t!5148 (toList!732 lt!35801)))))))

(assert (= (and d!19385 c!12395) b!79701))

(assert (= (and d!19385 (not c!12395)) b!79702))

(declare-fun m!80787 () Bool)

(assert (=> b!79702 m!80787))

(assert (=> b!79702 m!80705))

(assert (=> d!18501 d!19385))

(declare-fun d!19387 () Bool)

(declare-fun lt!36878 () Bool)

(assert (=> d!19387 (= lt!36878 (select (content!83 lt!35803) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun e!52048 () Bool)

(assert (=> d!19387 (= lt!36878 e!52048)))

(declare-fun res!41611 () Bool)

(assert (=> d!19387 (=> (not res!41611) (not e!52048))))

(assert (=> d!19387 (= res!41611 ((_ is Cons!1507) lt!35803))))

(assert (=> d!19387 (= (contains!740 lt!35803 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))) lt!36878)))

(declare-fun b!79703 () Bool)

(declare-fun e!52049 () Bool)

(assert (=> b!79703 (= e!52048 e!52049)))

(declare-fun res!41612 () Bool)

(assert (=> b!79703 (=> res!41612 e!52049)))

(assert (=> b!79703 (= res!41612 (= (h!2095 lt!35803) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun b!79704 () Bool)

(assert (=> b!79704 (= e!52049 (contains!740 (t!5148 lt!35803) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!19387 res!41611) b!79703))

(assert (= (and b!79703 (not res!41612)) b!79704))

(declare-fun m!80789 () Bool)

(assert (=> d!19387 m!80789))

(declare-fun m!80791 () Bool)

(assert (=> d!19387 m!80791))

(declare-fun m!80793 () Bool)

(assert (=> b!79704 m!80793))

(assert (=> b!78430 d!19387))

(declare-fun d!19389 () Bool)

(declare-fun e!52051 () Bool)

(assert (=> d!19389 e!52051))

(declare-fun res!41613 () Bool)

(assert (=> d!19389 (=> res!41613 e!52051)))

(declare-fun lt!36881 () Bool)

(assert (=> d!19389 (= res!41613 (not lt!36881))))

(declare-fun lt!36882 () Bool)

(assert (=> d!19389 (= lt!36881 lt!36882)))

(declare-fun lt!36879 () Unit!2242)

(declare-fun e!52050 () Unit!2242)

(assert (=> d!19389 (= lt!36879 e!52050)))

(declare-fun c!12396 () Bool)

(assert (=> d!19389 (= c!12396 lt!36882)))

(assert (=> d!19389 (= lt!36882 (containsKey!139 (toList!732 lt!36082) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19389 (= (contains!739 lt!36082 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36881)))

(declare-fun b!79705 () Bool)

(declare-fun lt!36880 () Unit!2242)

(assert (=> b!79705 (= e!52050 lt!36880)))

(assert (=> b!79705 (= lt!36880 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36082) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79705 (isDefined!89 (getValueByKey!135 (toList!732 lt!36082) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79706 () Bool)

(declare-fun Unit!2312 () Unit!2242)

(assert (=> b!79706 (= e!52050 Unit!2312)))

(declare-fun b!79707 () Bool)

(assert (=> b!79707 (= e!52051 (isDefined!89 (getValueByKey!135 (toList!732 lt!36082) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19389 c!12396) b!79705))

(assert (= (and d!19389 (not c!12396)) b!79706))

(assert (= (and d!19389 (not res!41613)) b!79707))

(declare-fun m!80795 () Bool)

(assert (=> d!19389 m!80795))

(declare-fun m!80797 () Bool)

(assert (=> b!79705 m!80797))

(declare-fun m!80799 () Bool)

(assert (=> b!79705 m!80799))

(assert (=> b!79705 m!80799))

(declare-fun m!80801 () Bool)

(assert (=> b!79705 m!80801))

(assert (=> b!79707 m!80799))

(assert (=> b!79707 m!80799))

(assert (=> b!79707 m!80801))

(assert (=> b!78216 d!19389))

(assert (=> bm!7198 d!18549))

(assert (=> d!18649 d!18645))

(assert (=> d!18649 d!18647))

(declare-fun d!19391 () Bool)

(assert (=> d!19391 (not (contains!739 (+!103 lt!35836 (tuple2!2177 lt!35838 lt!35834)) lt!35835))))

(assert (=> d!19391 true))

(declare-fun _$36!304 () Unit!2242)

(assert (=> d!19391 (= (choose!472 lt!35836 lt!35838 lt!35834 lt!35835) _$36!304)))

(declare-fun bs!3379 () Bool)

(assert (= bs!3379 d!19391))

(assert (=> bs!3379 m!77761))

(assert (=> bs!3379 m!77761))

(assert (=> bs!3379 m!77763))

(assert (=> d!18649 d!19391))

(declare-fun d!19393 () Bool)

(declare-fun e!52053 () Bool)

(assert (=> d!19393 e!52053))

(declare-fun res!41614 () Bool)

(assert (=> d!19393 (=> res!41614 e!52053)))

(declare-fun lt!36885 () Bool)

(assert (=> d!19393 (= res!41614 (not lt!36885))))

(declare-fun lt!36886 () Bool)

(assert (=> d!19393 (= lt!36885 lt!36886)))

(declare-fun lt!36883 () Unit!2242)

(declare-fun e!52052 () Unit!2242)

(assert (=> d!19393 (= lt!36883 e!52052)))

(declare-fun c!12397 () Bool)

(assert (=> d!19393 (= c!12397 lt!36886)))

(assert (=> d!19393 (= lt!36886 (containsKey!139 (toList!732 lt!35836) lt!35835))))

(assert (=> d!19393 (= (contains!739 lt!35836 lt!35835) lt!36885)))

(declare-fun b!79709 () Bool)

(declare-fun lt!36884 () Unit!2242)

(assert (=> b!79709 (= e!52052 lt!36884)))

(assert (=> b!79709 (= lt!36884 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35836) lt!35835))))

(assert (=> b!79709 (isDefined!89 (getValueByKey!135 (toList!732 lt!35836) lt!35835))))

(declare-fun b!79710 () Bool)

(declare-fun Unit!2313 () Unit!2242)

(assert (=> b!79710 (= e!52052 Unit!2313)))

(declare-fun b!79711 () Bool)

(assert (=> b!79711 (= e!52053 (isDefined!89 (getValueByKey!135 (toList!732 lt!35836) lt!35835)))))

(assert (= (and d!19393 c!12397) b!79709))

(assert (= (and d!19393 (not c!12397)) b!79710))

(assert (= (and d!19393 (not res!41614)) b!79711))

(declare-fun m!80803 () Bool)

(assert (=> d!19393 m!80803))

(declare-fun m!80805 () Bool)

(assert (=> b!79709 m!80805))

(declare-fun m!80807 () Bool)

(assert (=> b!79709 m!80807))

(assert (=> b!79709 m!80807))

(declare-fun m!80809 () Bool)

(assert (=> b!79709 m!80809))

(assert (=> b!79711 m!80807))

(assert (=> b!79711 m!80807))

(assert (=> b!79711 m!80809))

(assert (=> d!18649 d!19393))

(declare-fun b!79712 () Bool)

(declare-fun e!52054 () Option!141)

(assert (=> b!79712 (= e!52054 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36099)))))))

(declare-fun b!79714 () Bool)

(declare-fun e!52055 () Option!141)

(assert (=> b!79714 (= e!52055 (getValueByKey!135 (t!5148 (toList!732 lt!36099)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!19395 () Bool)

(declare-fun c!12398 () Bool)

(assert (=> d!19395 (= c!12398 (and ((_ is Cons!1507) (toList!732 lt!36099)) (= (_1!1099 (h!2095 (toList!732 lt!36099))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19395 (= (getValueByKey!135 (toList!732 lt!36099) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!52054)))

(declare-fun b!79715 () Bool)

(assert (=> b!79715 (= e!52055 None!139)))

(declare-fun b!79713 () Bool)

(assert (=> b!79713 (= e!52054 e!52055)))

(declare-fun c!12399 () Bool)

(assert (=> b!79713 (= c!12399 (and ((_ is Cons!1507) (toList!732 lt!36099)) (not (= (_1!1099 (h!2095 (toList!732 lt!36099))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19395 c!12398) b!79712))

(assert (= (and d!19395 (not c!12398)) b!79713))

(assert (= (and b!79713 c!12399) b!79714))

(assert (= (and b!79713 (not c!12399)) b!79715))

(declare-fun m!80811 () Bool)

(assert (=> b!79714 m!80811))

(assert (=> b!78228 d!19395))

(assert (=> d!18597 d!18739))

(declare-fun d!19397 () Bool)

(declare-fun res!41618 () Bool)

(declare-fun e!52056 () Bool)

(assert (=> d!19397 (=> (not res!41618) (not e!52056))))

(assert (=> d!19397 (= res!41618 (validMask!0 (mask!6266 (v!2584 (underlying!273 thiss!992)))))))

(assert (=> d!19397 (= (simpleValid!55 (v!2584 (underlying!273 thiss!992))) e!52056)))

(declare-fun b!79717 () Bool)

(declare-fun res!41616 () Bool)

(assert (=> b!79717 (=> (not res!41616) (not e!52056))))

(assert (=> b!79717 (= res!41616 (bvsge (size!2130 (v!2584 (underlying!273 thiss!992))) (_size!414 (v!2584 (underlying!273 thiss!992)))))))

(declare-fun b!79716 () Bool)

(declare-fun res!41617 () Bool)

(assert (=> b!79716 (=> (not res!41617) (not e!52056))))

(assert (=> b!79716 (= res!41617 (and (= (size!2125 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000001)) (= (size!2124 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (size!2125 (_values!2254 (v!2584 (underlying!273 thiss!992))))) (bvsge (_size!414 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!414 (v!2584 (underlying!273 thiss!992))) (bvadd (mask!6266 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!79718 () Bool)

(declare-fun res!41615 () Bool)

(assert (=> b!79718 (=> (not res!41615) (not e!52056))))

(assert (=> b!79718 (= res!41615 (= (size!2130 (v!2584 (underlying!273 thiss!992))) (bvadd (_size!414 (v!2584 (underlying!273 thiss!992))) (bvsdiv (bvadd (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!79719 () Bool)

(assert (=> b!79719 (= e!52056 (and (bvsge (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2122 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!414 (v!2584 (underlying!273 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!19397 res!41618) b!79716))

(assert (= (and b!79716 res!41617) b!79717))

(assert (= (and b!79717 res!41616) b!79718))

(assert (= (and b!79718 res!41615) b!79719))

(assert (=> d!19397 m!77475))

(declare-fun m!80813 () Bool)

(assert (=> b!79717 m!80813))

(assert (=> b!79718 m!80813))

(assert (=> d!18451 d!19397))

(declare-fun d!19399 () Bool)

(declare-fun e!52058 () Bool)

(assert (=> d!19399 e!52058))

(declare-fun res!41619 () Bool)

(assert (=> d!19399 (=> res!41619 e!52058)))

(declare-fun lt!36889 () Bool)

(assert (=> d!19399 (= res!41619 (not lt!36889))))

(declare-fun lt!36890 () Bool)

(assert (=> d!19399 (= lt!36889 lt!36890)))

(declare-fun lt!36887 () Unit!2242)

(declare-fun e!52057 () Unit!2242)

(assert (=> d!19399 (= lt!36887 e!52057)))

(declare-fun c!12400 () Bool)

(assert (=> d!19399 (= c!12400 lt!36890)))

(assert (=> d!19399 (= lt!36890 (containsKey!139 (toList!732 lt!36099) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!19399 (= (contains!739 lt!36099 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36889)))

(declare-fun b!79720 () Bool)

(declare-fun lt!36888 () Unit!2242)

(assert (=> b!79720 (= e!52057 lt!36888)))

(assert (=> b!79720 (= lt!36888 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36099) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> b!79720 (isDefined!89 (getValueByKey!135 (toList!732 lt!36099) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79721 () Bool)

(declare-fun Unit!2314 () Unit!2242)

(assert (=> b!79721 (= e!52057 Unit!2314)))

(declare-fun b!79722 () Bool)

(assert (=> b!79722 (= e!52058 (isDefined!89 (getValueByKey!135 (toList!732 lt!36099) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19399 c!12400) b!79720))

(assert (= (and d!19399 (not c!12400)) b!79721))

(assert (= (and d!19399 (not res!41619)) b!79722))

(declare-fun m!80815 () Bool)

(assert (=> d!19399 m!80815))

(declare-fun m!80817 () Bool)

(assert (=> b!79720 m!80817))

(assert (=> b!79720 m!78191))

(assert (=> b!79720 m!78191))

(declare-fun m!80819 () Bool)

(assert (=> b!79720 m!80819))

(assert (=> b!79722 m!78191))

(assert (=> b!79722 m!78191))

(assert (=> b!79722 m!80819))

(assert (=> d!18469 d!19399))

(declare-fun b!79723 () Bool)

(declare-fun e!52059 () Option!141)

(assert (=> b!79723 (= e!52059 (Some!140 (_2!1099 (h!2095 lt!36097))))))

(declare-fun b!79725 () Bool)

(declare-fun e!52060 () Option!141)

(assert (=> b!79725 (= e!52060 (getValueByKey!135 (t!5148 lt!36097) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!19401 () Bool)

(declare-fun c!12401 () Bool)

(assert (=> d!19401 (= c!12401 (and ((_ is Cons!1507) lt!36097) (= (_1!1099 (h!2095 lt!36097)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19401 (= (getValueByKey!135 lt!36097 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!52059)))

(declare-fun b!79726 () Bool)

(assert (=> b!79726 (= e!52060 None!139)))

(declare-fun b!79724 () Bool)

(assert (=> b!79724 (= e!52059 e!52060)))

(declare-fun c!12402 () Bool)

(assert (=> b!79724 (= c!12402 (and ((_ is Cons!1507) lt!36097) (not (= (_1!1099 (h!2095 lt!36097)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19401 c!12401) b!79723))

(assert (= (and d!19401 (not c!12401)) b!79724))

(assert (= (and b!79724 c!12402) b!79725))

(assert (= (and b!79724 (not c!12402)) b!79726))

(declare-fun m!80821 () Bool)

(assert (=> b!79725 m!80821))

(assert (=> d!18469 d!19401))

(declare-fun d!19403 () Bool)

(assert (=> d!19403 (= (getValueByKey!135 lt!36097 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!36891 () Unit!2242)

(assert (=> d!19403 (= lt!36891 (choose!462 lt!36097 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!52061 () Bool)

(assert (=> d!19403 e!52061))

(declare-fun res!41620 () Bool)

(assert (=> d!19403 (=> (not res!41620) (not e!52061))))

(assert (=> d!19403 (= res!41620 (isStrictlySorted!290 lt!36097))))

(assert (=> d!19403 (= (lemmaContainsTupThenGetReturnValue!55 lt!36097 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36891)))

(declare-fun b!79727 () Bool)

(declare-fun res!41621 () Bool)

(assert (=> b!79727 (=> (not res!41621) (not e!52061))))

(assert (=> b!79727 (= res!41621 (containsKey!139 lt!36097 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79728 () Bool)

(assert (=> b!79728 (= e!52061 (contains!740 lt!36097 (tuple2!2177 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19403 res!41620) b!79727))

(assert (= (and b!79727 res!41621) b!79728))

(assert (=> d!19403 m!78185))

(declare-fun m!80823 () Bool)

(assert (=> d!19403 m!80823))

(declare-fun m!80825 () Bool)

(assert (=> d!19403 m!80825))

(declare-fun m!80827 () Bool)

(assert (=> b!79727 m!80827))

(declare-fun m!80829 () Bool)

(assert (=> b!79728 m!80829))

(assert (=> d!18469 d!19403))

(declare-fun b!79729 () Bool)

(declare-fun e!52063 () List!1511)

(declare-fun call!7345 () List!1511)

(assert (=> b!79729 (= e!52063 call!7345)))

(declare-fun b!79730 () Bool)

(declare-fun res!41623 () Bool)

(declare-fun e!52065 () Bool)

(assert (=> b!79730 (=> (not res!41623) (not e!52065))))

(declare-fun lt!36892 () List!1511)

(assert (=> b!79730 (= res!41623 (containsKey!139 lt!36892 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun bm!7342 () Bool)

(declare-fun c!12404 () Bool)

(declare-fun e!52066 () List!1511)

(declare-fun call!7346 () List!1511)

(assert (=> bm!7342 (= call!7346 ($colon$colon!68 e!52066 (ite c!12404 (h!2095 (toList!732 lt!35662)) (tuple2!2177 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun c!12405 () Bool)

(assert (=> bm!7342 (= c!12405 c!12404)))

(declare-fun c!12403 () Bool)

(declare-fun c!12406 () Bool)

(declare-fun b!79731 () Bool)

(assert (=> b!79731 (= e!52066 (ite c!12403 (t!5148 (toList!732 lt!35662)) (ite c!12406 (Cons!1507 (h!2095 (toList!732 lt!35662)) (t!5148 (toList!732 lt!35662))) Nil!1508)))))

(declare-fun d!19405 () Bool)

(assert (=> d!19405 e!52065))

(declare-fun res!41622 () Bool)

(assert (=> d!19405 (=> (not res!41622) (not e!52065))))

(assert (=> d!19405 (= res!41622 (isStrictlySorted!290 lt!36892))))

(declare-fun e!52062 () List!1511)

(assert (=> d!19405 (= lt!36892 e!52062)))

(assert (=> d!19405 (= c!12404 (and ((_ is Cons!1507) (toList!732 lt!35662)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19405 (isStrictlySorted!290 (toList!732 lt!35662))))

(assert (=> d!19405 (= (insertStrictlySorted!58 (toList!732 lt!35662) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36892)))

(declare-fun bm!7343 () Bool)

(declare-fun call!7347 () List!1511)

(assert (=> bm!7343 (= call!7347 call!7345)))

(declare-fun b!79732 () Bool)

(assert (=> b!79732 (= c!12406 (and ((_ is Cons!1507) (toList!732 lt!35662)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun e!52064 () List!1511)

(assert (=> b!79732 (= e!52063 e!52064)))

(declare-fun b!79733 () Bool)

(assert (=> b!79733 (= e!52064 call!7347)))

(declare-fun b!79734 () Bool)

(assert (=> b!79734 (= e!52062 e!52063)))

(assert (=> b!79734 (= c!12403 (and ((_ is Cons!1507) (toList!732 lt!35662)) (= (_1!1099 (h!2095 (toList!732 lt!35662))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!79735 () Bool)

(assert (=> b!79735 (= e!52064 call!7347)))

(declare-fun bm!7344 () Bool)

(assert (=> bm!7344 (= call!7345 call!7346)))

(declare-fun b!79736 () Bool)

(assert (=> b!79736 (= e!52066 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35662)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79737 () Bool)

(assert (=> b!79737 (= e!52062 call!7346)))

(declare-fun b!79738 () Bool)

(assert (=> b!79738 (= e!52065 (contains!740 lt!36892 (tuple2!2177 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19405 c!12404) b!79737))

(assert (= (and d!19405 (not c!12404)) b!79734))

(assert (= (and b!79734 c!12403) b!79729))

(assert (= (and b!79734 (not c!12403)) b!79732))

(assert (= (and b!79732 c!12406) b!79735))

(assert (= (and b!79732 (not c!12406)) b!79733))

(assert (= (or b!79735 b!79733) bm!7343))

(assert (= (or b!79729 bm!7343) bm!7344))

(assert (= (or b!79737 bm!7344) bm!7342))

(assert (= (and bm!7342 c!12405) b!79736))

(assert (= (and bm!7342 (not c!12405)) b!79731))

(assert (= (and d!19405 res!41622) b!79730))

(assert (= (and b!79730 res!41623) b!79738))

(declare-fun m!80831 () Bool)

(assert (=> b!79736 m!80831))

(declare-fun m!80833 () Bool)

(assert (=> bm!7342 m!80833))

(declare-fun m!80835 () Bool)

(assert (=> b!79730 m!80835))

(declare-fun m!80837 () Bool)

(assert (=> b!79738 m!80837))

(declare-fun m!80839 () Bool)

(assert (=> d!19405 m!80839))

(assert (=> d!19405 m!78057))

(assert (=> d!18469 d!19405))

(declare-fun d!19407 () Bool)

(declare-fun lt!36893 () Bool)

(assert (=> d!19407 (= lt!36893 (select (content!83 (toList!732 lt!36315)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun e!52067 () Bool)

(assert (=> d!19407 (= lt!36893 e!52067)))

(declare-fun res!41624 () Bool)

(assert (=> d!19407 (=> (not res!41624) (not e!52067))))

(assert (=> d!19407 (= res!41624 ((_ is Cons!1507) (toList!732 lt!36315)))))

(assert (=> d!19407 (= (contains!740 (toList!732 lt!36315) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) lt!36893)))

(declare-fun b!79739 () Bool)

(declare-fun e!52068 () Bool)

(assert (=> b!79739 (= e!52067 e!52068)))

(declare-fun res!41625 () Bool)

(assert (=> b!79739 (=> res!41625 e!52068)))

(assert (=> b!79739 (= res!41625 (= (h!2095 (toList!732 lt!36315)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(declare-fun b!79740 () Bool)

(assert (=> b!79740 (= e!52068 (contains!740 (t!5148 (toList!732 lt!36315)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)))))

(assert (= (and d!19407 res!41624) b!79739))

(assert (= (and b!79739 (not res!41625)) b!79740))

(declare-fun m!80841 () Bool)

(assert (=> d!19407 m!80841))

(declare-fun m!80843 () Bool)

(assert (=> d!19407 m!80843))

(declare-fun m!80845 () Bool)

(assert (=> b!79740 m!80845))

(assert (=> b!78448 d!19407))

(declare-fun d!19409 () Bool)

(assert (=> d!19409 (= (content!84 Nil!1507) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!18571 d!19409))

(assert (=> b!78555 d!19229))

(assert (=> b!78555 d!18599))

(declare-fun lt!36894 () Bool)

(declare-fun d!19411 () Bool)

(assert (=> d!19411 (= lt!36894 (select (content!83 (toList!732 lt!36325)) (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!52069 () Bool)

(assert (=> d!19411 (= lt!36894 e!52069)))

(declare-fun res!41626 () Bool)

(assert (=> d!19411 (=> (not res!41626) (not e!52069))))

(assert (=> d!19411 (= res!41626 ((_ is Cons!1507) (toList!732 lt!36325)))))

(assert (=> d!19411 (= (contains!740 (toList!732 lt!36325) (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!36894)))

(declare-fun b!79741 () Bool)

(declare-fun e!52070 () Bool)

(assert (=> b!79741 (= e!52069 e!52070)))

(declare-fun res!41627 () Bool)

(assert (=> b!79741 (=> res!41627 e!52070)))

(assert (=> b!79741 (= res!41627 (= (h!2095 (toList!732 lt!36325)) (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79742 () Bool)

(assert (=> b!79742 (= e!52070 (contains!740 (t!5148 (toList!732 lt!36325)) (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (= (and d!19411 res!41626) b!79741))

(assert (= (and b!79741 (not res!41627)) b!79742))

(declare-fun m!80847 () Bool)

(assert (=> d!19411 m!80847))

(declare-fun m!80849 () Bool)

(assert (=> d!19411 m!80849))

(declare-fun m!80851 () Bool)

(assert (=> b!79742 m!80851))

(assert (=> b!78474 d!19411))

(declare-fun d!19413 () Bool)

(assert (=> d!19413 (= (get!1180 (getValueByKey!135 (toList!732 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35905)) (v!2590 (getValueByKey!135 (toList!732 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35905)))))

(assert (=> d!18513 d!19413))

(declare-fun b!79743 () Bool)

(declare-fun e!52071 () Option!141)

(assert (=> b!79743 (= e!52071 (Some!140 (_2!1099 (h!2095 (toList!732 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))))

(declare-fun b!79745 () Bool)

(declare-fun e!52072 () Option!141)

(assert (=> b!79745 (= e!52072 (getValueByKey!135 (t!5148 (toList!732 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) lt!35905))))

(declare-fun c!12407 () Bool)

(declare-fun d!19415 () Bool)

(assert (=> d!19415 (= c!12407 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35905)))))

(assert (=> d!19415 (= (getValueByKey!135 (toList!732 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!35905) e!52071)))

(declare-fun b!79746 () Bool)

(assert (=> b!79746 (= e!52072 None!139)))

(declare-fun b!79744 () Bool)

(assert (=> b!79744 (= e!52071 e!52072)))

(declare-fun c!12408 () Bool)

(assert (=> b!79744 (= c!12408 (and ((_ is Cons!1507) (toList!732 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (not (= (_1!1099 (h!2095 (toList!732 (+!103 lt!35902 (tuple2!2177 lt!35903 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))) lt!35905))))))

(assert (= (and d!19415 c!12407) b!79743))

(assert (= (and d!19415 (not c!12407)) b!79744))

(assert (= (and b!79744 c!12408) b!79745))

(assert (= (and b!79744 (not c!12408)) b!79746))

(declare-fun m!80853 () Bool)

(assert (=> b!79745 m!80853))

(assert (=> d!18513 d!19415))

(declare-fun d!19417 () Bool)

(declare-fun e!52074 () Bool)

(assert (=> d!19417 e!52074))

(declare-fun res!41628 () Bool)

(assert (=> d!19417 (=> res!41628 e!52074)))

(declare-fun lt!36897 () Bool)

(assert (=> d!19417 (= res!41628 (not lt!36897))))

(declare-fun lt!36898 () Bool)

(assert (=> d!19417 (= lt!36897 lt!36898)))

(declare-fun lt!36895 () Unit!2242)

(declare-fun e!52073 () Unit!2242)

(assert (=> d!19417 (= lt!36895 e!52073)))

(declare-fun c!12409 () Bool)

(assert (=> d!19417 (= c!12409 lt!36898)))

(assert (=> d!19417 (= lt!36898 (containsKey!139 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))))))

(assert (=> d!19417 (= (contains!739 (getCurrentListMap!421 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))) lt!36897)))

(declare-fun b!79747 () Bool)

(declare-fun lt!36896 () Unit!2242)

(assert (=> b!79747 (= e!52073 lt!36896)))

(assert (=> b!79747 (= lt!36896 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))))))

(assert (=> b!79747 (isDefined!89 (getValueByKey!135 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006))))))

(declare-fun b!79748 () Bool)

(declare-fun Unit!2315 () Unit!2242)

(assert (=> b!79748 (= e!52073 Unit!2315)))

(declare-fun b!79749 () Bool)

(assert (=> b!79749 (= e!52074 (isDefined!89 (getValueByKey!135 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36006)))))))

(assert (= (and d!19417 c!12409) b!79747))

(assert (= (and d!19417 (not c!12409)) b!79748))

(assert (= (and d!19417 (not res!41628)) b!79749))

(assert (=> d!19417 m!77869))

(declare-fun m!80855 () Bool)

(assert (=> d!19417 m!80855))

(assert (=> b!79747 m!77869))

(declare-fun m!80857 () Bool)

(assert (=> b!79747 m!80857))

(assert (=> b!79747 m!77869))

(declare-fun m!80859 () Bool)

(assert (=> b!79747 m!80859))

(assert (=> b!79747 m!80859))

(declare-fun m!80861 () Bool)

(assert (=> b!79747 m!80861))

(assert (=> b!79749 m!77869))

(assert (=> b!79749 m!80859))

(assert (=> b!79749 m!80859))

(assert (=> b!79749 m!80861))

(assert (=> b!78243 d!19417))

(declare-fun lt!36913 () ListLongMap!1433)

(declare-fun b!79750 () Bool)

(declare-fun e!52085 () Bool)

(assert (=> b!79750 (= e!52085 (= (apply!79 lt!36913 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 lt!36002) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79750 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 lt!36002)))))

(assert (=> b!79750 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79751 () Bool)

(declare-fun c!12411 () Bool)

(assert (=> b!79751 (= c!12411 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52084 () ListLongMap!1433)

(declare-fun e!52077 () ListLongMap!1433)

(assert (=> b!79751 (= e!52084 e!52077)))

(declare-fun b!79752 () Bool)

(declare-fun e!52083 () Bool)

(assert (=> b!79752 (= e!52083 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79753 () Bool)

(declare-fun e!52082 () Unit!2242)

(declare-fun lt!36916 () Unit!2242)

(assert (=> b!79753 (= e!52082 lt!36916)))

(declare-fun lt!36903 () ListLongMap!1433)

(assert (=> b!79753 (= lt!36903 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36899 () (_ BitVec 64))

(assert (=> b!79753 (= lt!36899 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36910 () (_ BitVec 64))

(assert (=> b!79753 (= lt!36910 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36904 () Unit!2242)

(assert (=> b!79753 (= lt!36904 (addStillContains!55 lt!36903 lt!36899 (zeroValue!2169 newMap!16) lt!36910))))

(assert (=> b!79753 (contains!739 (+!103 lt!36903 (tuple2!2177 lt!36899 (zeroValue!2169 newMap!16))) lt!36910)))

(declare-fun lt!36901 () Unit!2242)

(assert (=> b!79753 (= lt!36901 lt!36904)))

(declare-fun lt!36902 () ListLongMap!1433)

(assert (=> b!79753 (= lt!36902 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36911 () (_ BitVec 64))

(assert (=> b!79753 (= lt!36911 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36908 () (_ BitVec 64))

(assert (=> b!79753 (= lt!36908 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36909 () Unit!2242)

(assert (=> b!79753 (= lt!36909 (addApplyDifferent!55 lt!36902 lt!36911 (minValue!2169 newMap!16) lt!36908))))

(assert (=> b!79753 (= (apply!79 (+!103 lt!36902 (tuple2!2177 lt!36911 (minValue!2169 newMap!16))) lt!36908) (apply!79 lt!36902 lt!36908))))

(declare-fun lt!36900 () Unit!2242)

(assert (=> b!79753 (= lt!36900 lt!36909)))

(declare-fun lt!36907 () ListLongMap!1433)

(assert (=> b!79753 (= lt!36907 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36920 () (_ BitVec 64))

(assert (=> b!79753 (= lt!36920 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36918 () (_ BitVec 64))

(assert (=> b!79753 (= lt!36918 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36919 () Unit!2242)

(assert (=> b!79753 (= lt!36919 (addApplyDifferent!55 lt!36907 lt!36920 (zeroValue!2169 newMap!16) lt!36918))))

(assert (=> b!79753 (= (apply!79 (+!103 lt!36907 (tuple2!2177 lt!36920 (zeroValue!2169 newMap!16))) lt!36918) (apply!79 lt!36907 lt!36918))))

(declare-fun lt!36912 () Unit!2242)

(assert (=> b!79753 (= lt!36912 lt!36919)))

(declare-fun lt!36914 () ListLongMap!1433)

(assert (=> b!79753 (= lt!36914 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36915 () (_ BitVec 64))

(assert (=> b!79753 (= lt!36915 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36917 () (_ BitVec 64))

(assert (=> b!79753 (= lt!36917 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79753 (= lt!36916 (addApplyDifferent!55 lt!36914 lt!36915 (minValue!2169 newMap!16) lt!36917))))

(assert (=> b!79753 (= (apply!79 (+!103 lt!36914 (tuple2!2177 lt!36915 (minValue!2169 newMap!16))) lt!36917) (apply!79 lt!36914 lt!36917))))

(declare-fun b!79755 () Bool)

(declare-fun e!52076 () Bool)

(declare-fun e!52078 () Bool)

(assert (=> b!79755 (= e!52076 e!52078)))

(declare-fun res!41631 () Bool)

(declare-fun call!7353 () Bool)

(assert (=> b!79755 (= res!41631 call!7353)))

(assert (=> b!79755 (=> (not res!41631) (not e!52078))))

(declare-fun bm!7345 () Bool)

(declare-fun call!7348 () ListLongMap!1433)

(declare-fun call!7352 () ListLongMap!1433)

(assert (=> bm!7345 (= call!7348 call!7352)))

(declare-fun b!79756 () Bool)

(assert (=> b!79756 (= e!52076 (not call!7353))))

(declare-fun b!79757 () Bool)

(declare-fun e!52081 () ListLongMap!1433)

(assert (=> b!79757 (= e!52081 e!52084)))

(declare-fun c!12412 () Bool)

(assert (=> b!79757 (= c!12412 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79758 () Bool)

(declare-fun call!7349 () ListLongMap!1433)

(assert (=> b!79758 (= e!52077 call!7349)))

(declare-fun b!79759 () Bool)

(declare-fun call!7351 () ListLongMap!1433)

(assert (=> b!79759 (= e!52077 call!7351)))

(declare-fun b!79760 () Bool)

(declare-fun res!41636 () Bool)

(declare-fun e!52087 () Bool)

(assert (=> b!79760 (=> (not res!41636) (not e!52087))))

(declare-fun e!52075 () Bool)

(assert (=> b!79760 (= res!41636 e!52075)))

(declare-fun c!12410 () Bool)

(assert (=> b!79760 (= c!12410 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7346 () Bool)

(declare-fun call!7350 () Bool)

(assert (=> bm!7346 (= call!7350 (contains!739 lt!36913 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7347 () Bool)

(assert (=> bm!7347 (= call!7353 (contains!739 lt!36913 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7348 () Bool)

(assert (=> bm!7348 (= call!7352 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!79761 () Bool)

(declare-fun e!52086 () Bool)

(assert (=> b!79761 (= e!52086 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7349 () Bool)

(assert (=> bm!7349 (= call!7351 call!7348)))

(declare-fun b!79762 () Bool)

(declare-fun e!52080 () Bool)

(assert (=> b!79762 (= e!52080 (= (apply!79 lt!36913 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!79763 () Bool)

(declare-fun res!41637 () Bool)

(assert (=> b!79763 (=> (not res!41637) (not e!52087))))

(declare-fun e!52079 () Bool)

(assert (=> b!79763 (= res!41637 e!52079)))

(declare-fun res!41634 () Bool)

(assert (=> b!79763 (=> res!41634 e!52079)))

(assert (=> b!79763 (= res!41634 (not e!52086))))

(declare-fun res!41630 () Bool)

(assert (=> b!79763 (=> (not res!41630) (not e!52086))))

(assert (=> b!79763 (= res!41630 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79754 () Bool)

(declare-fun call!7354 () ListLongMap!1433)

(assert (=> b!79754 (= e!52081 (+!103 call!7354 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun d!19419 () Bool)

(assert (=> d!19419 e!52087))

(declare-fun res!41633 () Bool)

(assert (=> d!19419 (=> (not res!41633) (not e!52087))))

(assert (=> d!19419 (= res!41633 (or (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))))

(declare-fun lt!36905 () ListLongMap!1433)

(assert (=> d!19419 (= lt!36913 lt!36905)))

(declare-fun lt!36906 () Unit!2242)

(assert (=> d!19419 (= lt!36906 e!52082)))

(declare-fun c!12413 () Bool)

(assert (=> d!19419 (= c!12413 e!52083)))

(declare-fun res!41635 () Bool)

(assert (=> d!19419 (=> (not res!41635) (not e!52083))))

(assert (=> d!19419 (= res!41635 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!19419 (= lt!36905 e!52081)))

(declare-fun c!12414 () Bool)

(assert (=> d!19419 (= c!12414 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19419 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19419 (= (getCurrentListMap!421 (_keys!3930 newMap!16) lt!36002 (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36913)))

(declare-fun b!79764 () Bool)

(assert (=> b!79764 (= e!52075 (not call!7350))))

(declare-fun bm!7350 () Bool)

(assert (=> bm!7350 (= call!7354 (+!103 (ite c!12414 call!7352 (ite c!12412 call!7348 call!7351)) (ite (or c!12414 c!12412) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!79765 () Bool)

(assert (=> b!79765 (= e!52084 call!7349)))

(declare-fun bm!7351 () Bool)

(assert (=> bm!7351 (= call!7349 call!7354)))

(declare-fun b!79766 () Bool)

(assert (=> b!79766 (= e!52079 e!52085)))

(declare-fun res!41632 () Bool)

(assert (=> b!79766 (=> (not res!41632) (not e!52085))))

(assert (=> b!79766 (= res!41632 (contains!739 lt!36913 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79766 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79767 () Bool)

(assert (=> b!79767 (= e!52075 e!52080)))

(declare-fun res!41629 () Bool)

(assert (=> b!79767 (= res!41629 call!7350)))

(assert (=> b!79767 (=> (not res!41629) (not e!52080))))

(declare-fun b!79768 () Bool)

(assert (=> b!79768 (= e!52087 e!52076)))

(declare-fun c!12415 () Bool)

(assert (=> b!79768 (= c!12415 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79769 () Bool)

(declare-fun Unit!2316 () Unit!2242)

(assert (=> b!79769 (= e!52082 Unit!2316)))

(declare-fun b!79770 () Bool)

(assert (=> b!79770 (= e!52078 (= (apply!79 lt!36913 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(assert (= (and d!19419 c!12414) b!79754))

(assert (= (and d!19419 (not c!12414)) b!79757))

(assert (= (and b!79757 c!12412) b!79765))

(assert (= (and b!79757 (not c!12412)) b!79751))

(assert (= (and b!79751 c!12411) b!79758))

(assert (= (and b!79751 (not c!12411)) b!79759))

(assert (= (or b!79758 b!79759) bm!7349))

(assert (= (or b!79765 bm!7349) bm!7345))

(assert (= (or b!79765 b!79758) bm!7351))

(assert (= (or b!79754 bm!7345) bm!7348))

(assert (= (or b!79754 bm!7351) bm!7350))

(assert (= (and d!19419 res!41635) b!79752))

(assert (= (and d!19419 c!12413) b!79753))

(assert (= (and d!19419 (not c!12413)) b!79769))

(assert (= (and d!19419 res!41633) b!79763))

(assert (= (and b!79763 res!41630) b!79761))

(assert (= (and b!79763 (not res!41634)) b!79766))

(assert (= (and b!79766 res!41632) b!79750))

(assert (= (and b!79763 res!41637) b!79760))

(assert (= (and b!79760 c!12410) b!79767))

(assert (= (and b!79760 (not c!12410)) b!79764))

(assert (= (and b!79767 res!41629) b!79762))

(assert (= (or b!79767 b!79764) bm!7346))

(assert (= (and b!79760 res!41636) b!79768))

(assert (= (and b!79768 c!12415) b!79755))

(assert (= (and b!79768 (not c!12415)) b!79756))

(assert (= (and b!79755 res!41631) b!79770))

(assert (= (or b!79755 b!79756) bm!7347))

(declare-fun b_lambda!3533 () Bool)

(assert (=> (not b_lambda!3533) (not b!79750)))

(assert (=> b!79750 t!5160))

(declare-fun b_and!4865 () Bool)

(assert (= b_and!4861 (and (=> t!5160 result!2821) b_and!4865)))

(assert (=> b!79750 t!5162))

(declare-fun b_and!4867 () Bool)

(assert (= b_and!4863 (and (=> t!5162 result!2823) b_and!4867)))

(declare-fun m!80863 () Bool)

(assert (=> b!79762 m!80863))

(declare-fun m!80865 () Bool)

(assert (=> b!79753 m!80865))

(declare-fun m!80867 () Bool)

(assert (=> b!79753 m!80867))

(declare-fun m!80869 () Bool)

(assert (=> b!79753 m!80869))

(declare-fun m!80871 () Bool)

(assert (=> b!79753 m!80871))

(declare-fun m!80873 () Bool)

(assert (=> b!79753 m!80873))

(declare-fun m!80875 () Bool)

(assert (=> b!79753 m!80875))

(declare-fun m!80877 () Bool)

(assert (=> b!79753 m!80877))

(declare-fun m!80879 () Bool)

(assert (=> b!79753 m!80879))

(declare-fun m!80881 () Bool)

(assert (=> b!79753 m!80881))

(declare-fun m!80883 () Bool)

(assert (=> b!79753 m!80883))

(declare-fun m!80885 () Bool)

(assert (=> b!79753 m!80885))

(declare-fun m!80887 () Bool)

(assert (=> b!79753 m!80887))

(declare-fun m!80889 () Bool)

(assert (=> b!79753 m!80889))

(assert (=> b!79753 m!80885))

(assert (=> b!79753 m!80883))

(declare-fun m!80891 () Bool)

(assert (=> b!79753 m!80891))

(assert (=> b!79753 m!77965))

(assert (=> b!79753 m!80869))

(declare-fun m!80893 () Bool)

(assert (=> b!79753 m!80893))

(assert (=> b!79753 m!80879))

(declare-fun m!80895 () Bool)

(assert (=> b!79753 m!80895))

(declare-fun m!80897 () Bool)

(assert (=> bm!7347 m!80897))

(assert (=> bm!7348 m!80881))

(declare-fun m!80899 () Bool)

(assert (=> b!79754 m!80899))

(assert (=> b!79752 m!77965))

(assert (=> b!79752 m!77965))

(assert (=> b!79752 m!77975))

(assert (=> d!19419 m!77977))

(declare-fun m!80901 () Bool)

(assert (=> bm!7346 m!80901))

(declare-fun m!80903 () Bool)

(assert (=> bm!7350 m!80903))

(assert (=> b!79750 m!77983))

(declare-fun m!80905 () Bool)

(assert (=> b!79750 m!80905))

(assert (=> b!79750 m!77983))

(declare-fun m!80907 () Bool)

(assert (=> b!79750 m!80907))

(assert (=> b!79750 m!77965))

(declare-fun m!80909 () Bool)

(assert (=> b!79750 m!80909))

(assert (=> b!79750 m!80905))

(assert (=> b!79750 m!77965))

(assert (=> b!79761 m!77965))

(assert (=> b!79761 m!77965))

(assert (=> b!79761 m!77975))

(declare-fun m!80911 () Bool)

(assert (=> b!79770 m!80911))

(assert (=> b!79766 m!77965))

(assert (=> b!79766 m!77965))

(declare-fun m!80913 () Bool)

(assert (=> b!79766 m!80913))

(assert (=> b!78243 d!19419))

(assert (=> d!18561 d!18565))

(assert (=> d!18561 d!18563))

(assert (=> d!18561 d!18567))

(assert (=> d!18561 d!18559))

(declare-fun d!19421 () Bool)

(declare-fun res!41638 () Bool)

(declare-fun e!52088 () Bool)

(assert (=> d!19421 (=> res!41638 e!52088)))

(assert (=> d!19421 (= res!41638 (and ((_ is Cons!1507) lt!35791) (= (_1!1099 (h!2095 lt!35791)) (_1!1099 lt!35660))))))

(assert (=> d!19421 (= (containsKey!139 lt!35791 (_1!1099 lt!35660)) e!52088)))

(declare-fun b!79771 () Bool)

(declare-fun e!52089 () Bool)

(assert (=> b!79771 (= e!52088 e!52089)))

(declare-fun res!41639 () Bool)

(assert (=> b!79771 (=> (not res!41639) (not e!52089))))

(assert (=> b!79771 (= res!41639 (and (or (not ((_ is Cons!1507) lt!35791)) (bvsle (_1!1099 (h!2095 lt!35791)) (_1!1099 lt!35660))) ((_ is Cons!1507) lt!35791) (bvslt (_1!1099 (h!2095 lt!35791)) (_1!1099 lt!35660))))))

(declare-fun b!79772 () Bool)

(assert (=> b!79772 (= e!52089 (containsKey!139 (t!5148 lt!35791) (_1!1099 lt!35660)))))

(assert (= (and d!19421 (not res!41638)) b!79771))

(assert (= (and b!79771 res!41639) b!79772))

(declare-fun m!80915 () Bool)

(assert (=> b!79772 m!80915))

(assert (=> b!78135 d!19421))

(declare-fun d!19423 () Bool)

(declare-fun e!52091 () Bool)

(assert (=> d!19423 e!52091))

(declare-fun res!41640 () Bool)

(assert (=> d!19423 (=> res!41640 e!52091)))

(declare-fun lt!36923 () Bool)

(assert (=> d!19423 (= res!41640 (not lt!36923))))

(declare-fun lt!36924 () Bool)

(assert (=> d!19423 (= lt!36923 lt!36924)))

(declare-fun lt!36921 () Unit!2242)

(declare-fun e!52090 () Unit!2242)

(assert (=> d!19423 (= lt!36921 e!52090)))

(declare-fun c!12416 () Bool)

(assert (=> d!19423 (= c!12416 lt!36924)))

(assert (=> d!19423 (= lt!36924 (containsKey!139 (toList!732 lt!36029) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19423 (= (contains!739 lt!36029 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36923)))

(declare-fun b!79773 () Bool)

(declare-fun lt!36922 () Unit!2242)

(assert (=> b!79773 (= e!52090 lt!36922)))

(assert (=> b!79773 (= lt!36922 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36029) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79773 (isDefined!89 (getValueByKey!135 (toList!732 lt!36029) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79774 () Bool)

(declare-fun Unit!2317 () Unit!2242)

(assert (=> b!79774 (= e!52090 Unit!2317)))

(declare-fun b!79775 () Bool)

(assert (=> b!79775 (= e!52091 (isDefined!89 (getValueByKey!135 (toList!732 lt!36029) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19423 c!12416) b!79773))

(assert (= (and d!19423 (not c!12416)) b!79774))

(assert (= (and d!19423 (not res!41640)) b!79775))

(declare-fun m!80917 () Bool)

(assert (=> d!19423 m!80917))

(declare-fun m!80919 () Bool)

(assert (=> b!79773 m!80919))

(assert (=> b!79773 m!80153))

(assert (=> b!79773 m!80153))

(declare-fun m!80921 () Bool)

(assert (=> b!79773 m!80921))

(assert (=> b!79775 m!80153))

(assert (=> b!79775 m!80153))

(assert (=> b!79775 m!80921))

(assert (=> bm!7154 d!19423))

(assert (=> d!18477 d!18387))

(assert (=> b!78126 d!19269))

(assert (=> b!78126 d!18609))

(declare-fun b!79776 () Bool)

(declare-fun e!52092 () Option!141)

(assert (=> b!79776 (= e!52092 (Some!140 (_2!1099 (h!2095 (t!5148 lt!35795)))))))

(declare-fun b!79778 () Bool)

(declare-fun e!52093 () Option!141)

(assert (=> b!79778 (= e!52093 (getValueByKey!135 (t!5148 (t!5148 lt!35795)) (_1!1099 lt!35660)))))

(declare-fun d!19425 () Bool)

(declare-fun c!12417 () Bool)

(assert (=> d!19425 (= c!12417 (and ((_ is Cons!1507) (t!5148 lt!35795)) (= (_1!1099 (h!2095 (t!5148 lt!35795))) (_1!1099 lt!35660))))))

(assert (=> d!19425 (= (getValueByKey!135 (t!5148 lt!35795) (_1!1099 lt!35660)) e!52092)))

(declare-fun b!79779 () Bool)

(assert (=> b!79779 (= e!52093 None!139)))

(declare-fun b!79777 () Bool)

(assert (=> b!79777 (= e!52092 e!52093)))

(declare-fun c!12418 () Bool)

(assert (=> b!79777 (= c!12418 (and ((_ is Cons!1507) (t!5148 lt!35795)) (not (= (_1!1099 (h!2095 (t!5148 lt!35795))) (_1!1099 lt!35660)))))))

(assert (= (and d!19425 c!12417) b!79776))

(assert (= (and d!19425 (not c!12417)) b!79777))

(assert (= (and b!79777 c!12418) b!79778))

(assert (= (and b!79777 (not c!12418)) b!79779))

(declare-fun m!80923 () Bool)

(assert (=> b!79778 m!80923))

(assert (=> b!78483 d!19425))

(declare-fun d!19427 () Bool)

(declare-fun lt!36925 () Bool)

(assert (=> d!19427 (= lt!36925 (select (content!83 (toList!732 lt!36406)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!52094 () Bool)

(assert (=> d!19427 (= lt!36925 e!52094)))

(declare-fun res!41641 () Bool)

(assert (=> d!19427 (=> (not res!41641) (not e!52094))))

(assert (=> d!19427 (= res!41641 ((_ is Cons!1507) (toList!732 lt!36406)))))

(assert (=> d!19427 (= (contains!740 (toList!732 lt!36406) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!36925)))

(declare-fun b!79780 () Bool)

(declare-fun e!52095 () Bool)

(assert (=> b!79780 (= e!52094 e!52095)))

(declare-fun res!41642 () Bool)

(assert (=> b!79780 (=> res!41642 e!52095)))

(assert (=> b!79780 (= res!41642 (= (h!2095 (toList!732 lt!36406)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79781 () Bool)

(assert (=> b!79781 (= e!52095 (contains!740 (t!5148 (toList!732 lt!36406)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!19427 res!41641) b!79780))

(assert (= (and b!79780 (not res!41642)) b!79781))

(declare-fun m!80925 () Bool)

(assert (=> d!19427 m!80925))

(declare-fun m!80927 () Bool)

(assert (=> d!19427 m!80927))

(declare-fun m!80929 () Bool)

(assert (=> b!79781 m!80929))

(assert (=> b!78623 d!19427))

(declare-fun d!19429 () Bool)

(assert (=> d!19429 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658)) (getCurrentListMap!421 (_keys!3930 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(assert (=> d!19429 true))

(declare-fun _$5!83 () Unit!2242)

(assert (=> d!19429 (= (choose!465 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) (index!3107 lt!36006) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) lt!35658 (defaultEntry!2271 newMap!16)) _$5!83)))

(declare-fun bs!3380 () Bool)

(assert (= bs!3380 d!19429))

(assert (=> bs!3380 m!77787))

(assert (=> bs!3380 m!77787))

(assert (=> bs!3380 m!78229))

(assert (=> bs!3380 m!77885))

(assert (=> bs!3380 m!78231))

(assert (=> d!18481 d!19429))

(assert (=> d!18481 d!18739))

(assert (=> d!18633 d!18391))

(declare-fun d!19431 () Bool)

(declare-fun lt!36926 () Bool)

(assert (=> d!19431 (= lt!36926 (select (content!83 lt!35840) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(declare-fun e!52096 () Bool)

(assert (=> d!19431 (= lt!36926 e!52096)))

(declare-fun res!41643 () Bool)

(assert (=> d!19431 (=> (not res!41643) (not e!52096))))

(assert (=> d!19431 (= res!41643 ((_ is Cons!1507) lt!35840))))

(assert (=> d!19431 (= (contains!740 lt!35840 (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))) lt!36926)))

(declare-fun b!79782 () Bool)

(declare-fun e!52097 () Bool)

(assert (=> b!79782 (= e!52096 e!52097)))

(declare-fun res!41644 () Bool)

(assert (=> b!79782 (=> res!41644 e!52097)))

(assert (=> b!79782 (= res!41644 (= (h!2095 lt!35840) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(declare-fun b!79783 () Bool)

(assert (=> b!79783 (= e!52097 (contains!740 (t!5148 lt!35840) (tuple2!2177 (_1!1099 lt!35659) (_2!1099 lt!35659))))))

(assert (= (and d!19431 res!41643) b!79782))

(assert (= (and b!79782 (not res!41644)) b!79783))

(declare-fun m!80931 () Bool)

(assert (=> d!19431 m!80931))

(declare-fun m!80933 () Bool)

(assert (=> d!19431 m!80933))

(declare-fun m!80935 () Bool)

(assert (=> b!79783 m!80935))

(assert (=> b!78175 d!19431))

(declare-fun d!19433 () Bool)

(assert (=> d!19433 (isDefined!89 (getValueByKey!135 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun lt!36927 () Unit!2242)

(assert (=> d!19433 (= lt!36927 (choose!463 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun e!52098 () Bool)

(assert (=> d!19433 e!52098))

(declare-fun res!41645 () Bool)

(assert (=> d!19433 (=> (not res!41645) (not e!52098))))

(assert (=> d!19433 (= res!41645 (isStrictlySorted!290 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))))

(assert (=> d!19433 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) lt!36927)))

(declare-fun b!79784 () Bool)

(assert (=> b!79784 (= e!52098 (containsKey!139 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (= (and d!19433 res!41645) b!79784))

(assert (=> d!19433 m!77463))

(assert (=> d!19433 m!78237))

(assert (=> d!19433 m!78237))

(assert (=> d!19433 m!78239))

(assert (=> d!19433 m!77463))

(declare-fun m!80937 () Bool)

(assert (=> d!19433 m!80937))

(declare-fun m!80939 () Bool)

(assert (=> d!19433 m!80939))

(assert (=> b!79784 m!77463))

(assert (=> b!79784 m!78233))

(assert (=> b!78247 d!19433))

(assert (=> b!78247 d!18761))

(assert (=> b!78247 d!18763))

(declare-fun d!19435 () Bool)

(assert (not d!19435))

(assert (=> b!78460 d!19435))

(declare-fun d!19437 () Bool)

(assert (=> d!19437 (= (get!1180 (getValueByKey!135 (toList!732 lt!35890) lt!35896)) (v!2590 (getValueByKey!135 (toList!732 lt!35890) lt!35896)))))

(assert (=> d!18529 d!19437))

(declare-fun b!79785 () Bool)

(declare-fun e!52099 () Option!141)

(assert (=> b!79785 (= e!52099 (Some!140 (_2!1099 (h!2095 (toList!732 lt!35890)))))))

(declare-fun b!79787 () Bool)

(declare-fun e!52100 () Option!141)

(assert (=> b!79787 (= e!52100 (getValueByKey!135 (t!5148 (toList!732 lt!35890)) lt!35896))))

(declare-fun d!19439 () Bool)

(declare-fun c!12419 () Bool)

(assert (=> d!19439 (= c!12419 (and ((_ is Cons!1507) (toList!732 lt!35890)) (= (_1!1099 (h!2095 (toList!732 lt!35890))) lt!35896)))))

(assert (=> d!19439 (= (getValueByKey!135 (toList!732 lt!35890) lt!35896) e!52099)))

(declare-fun b!79788 () Bool)

(assert (=> b!79788 (= e!52100 None!139)))

(declare-fun b!79786 () Bool)

(assert (=> b!79786 (= e!52099 e!52100)))

(declare-fun c!12420 () Bool)

(assert (=> b!79786 (= c!12420 (and ((_ is Cons!1507) (toList!732 lt!35890)) (not (= (_1!1099 (h!2095 (toList!732 lt!35890))) lt!35896))))))

(assert (= (and d!19439 c!12419) b!79785))

(assert (= (and d!19439 (not c!12419)) b!79786))

(assert (= (and b!79786 c!12420) b!79787))

(assert (= (and b!79786 (not c!12420)) b!79788))

(declare-fun m!80941 () Bool)

(assert (=> b!79787 m!80941))

(assert (=> d!18529 d!19439))

(declare-fun b!79801 () Bool)

(declare-fun e!52107 () SeekEntryResult!243)

(assert (=> b!79801 (= e!52107 (MissingVacant!243 (index!3108 lt!36154)))))

(declare-fun lt!36932 () SeekEntryResult!243)

(declare-fun d!19441 () Bool)

(assert (=> d!19441 (and (or ((_ is Undefined!243) lt!36932) (not ((_ is Found!243) lt!36932)) (and (bvsge (index!3107 lt!36932) #b00000000000000000000000000000000) (bvslt (index!3107 lt!36932) (size!2124 (_keys!3930 newMap!16))))) (or ((_ is Undefined!243) lt!36932) ((_ is Found!243) lt!36932) (not ((_ is MissingVacant!243) lt!36932)) (not (= (index!3109 lt!36932) (index!3108 lt!36154))) (and (bvsge (index!3109 lt!36932) #b00000000000000000000000000000000) (bvslt (index!3109 lt!36932) (size!2124 (_keys!3930 newMap!16))))) (or ((_ is Undefined!243) lt!36932) (ite ((_ is Found!243) lt!36932) (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3107 lt!36932)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) (and ((_ is MissingVacant!243) lt!36932) (= (index!3109 lt!36932) (index!3108 lt!36154)) (= (select (arr!1882 (_keys!3930 newMap!16)) (index!3109 lt!36932)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!52108 () SeekEntryResult!243)

(assert (=> d!19441 (= lt!36932 e!52108)))

(declare-fun c!12429 () Bool)

(assert (=> d!19441 (= c!12429 (bvsge (x!11549 lt!36154) #b01111111111111111111111111111110))))

(declare-fun lt!36933 () (_ BitVec 64))

(assert (=> d!19441 (= lt!36933 (select (arr!1882 (_keys!3930 newMap!16)) (index!3108 lt!36154)))))

(assert (=> d!19441 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19441 (= (seekKeyOrZeroReturnVacant!0 (x!11549 lt!36154) (index!3108 lt!36154) (index!3108 lt!36154) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)) lt!36932)))

(declare-fun b!79802 () Bool)

(declare-fun c!12427 () Bool)

(assert (=> b!79802 (= c!12427 (= lt!36933 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52109 () SeekEntryResult!243)

(assert (=> b!79802 (= e!52109 e!52107)))

(declare-fun b!79803 () Bool)

(assert (=> b!79803 (= e!52109 (Found!243 (index!3108 lt!36154)))))

(declare-fun b!79804 () Bool)

(assert (=> b!79804 (= e!52108 e!52109)))

(declare-fun c!12428 () Bool)

(assert (=> b!79804 (= c!12428 (= lt!36933 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!79805 () Bool)

(assert (=> b!79805 (= e!52108 Undefined!243)))

(declare-fun b!79806 () Bool)

(assert (=> b!79806 (= e!52107 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11549 lt!36154) #b00000000000000000000000000000001) (nextIndex!0 (index!3108 lt!36154) (x!11549 lt!36154) (mask!6266 newMap!16)) (index!3108 lt!36154) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (_keys!3930 newMap!16) (mask!6266 newMap!16)))))

(assert (= (and d!19441 c!12429) b!79805))

(assert (= (and d!19441 (not c!12429)) b!79804))

(assert (= (and b!79804 c!12428) b!79803))

(assert (= (and b!79804 (not c!12428)) b!79802))

(assert (= (and b!79802 c!12427) b!79801))

(assert (= (and b!79802 (not c!12427)) b!79806))

(declare-fun m!80943 () Bool)

(assert (=> d!19441 m!80943))

(declare-fun m!80945 () Bool)

(assert (=> d!19441 m!80945))

(assert (=> d!19441 m!78331))

(assert (=> d!19441 m!77977))

(declare-fun m!80947 () Bool)

(assert (=> b!79806 m!80947))

(assert (=> b!79806 m!80947))

(assert (=> b!79806 m!77463))

(declare-fun m!80949 () Bool)

(assert (=> b!79806 m!80949))

(assert (=> b!78295 d!19441))

(assert (=> d!18489 d!18739))

(declare-fun d!19443 () Bool)

(declare-fun res!41646 () Bool)

(declare-fun e!52110 () Bool)

(assert (=> d!19443 (=> res!41646 e!52110)))

(assert (=> d!19443 (= res!41646 (and ((_ is Cons!1507) lt!35810) (= (_1!1099 (h!2095 lt!35810)) (_1!1099 lt!35670))))))

(assert (=> d!19443 (= (containsKey!139 lt!35810 (_1!1099 lt!35670)) e!52110)))

(declare-fun b!79807 () Bool)

(declare-fun e!52111 () Bool)

(assert (=> b!79807 (= e!52110 e!52111)))

(declare-fun res!41647 () Bool)

(assert (=> b!79807 (=> (not res!41647) (not e!52111))))

(assert (=> b!79807 (= res!41647 (and (or (not ((_ is Cons!1507) lt!35810)) (bvsle (_1!1099 (h!2095 lt!35810)) (_1!1099 lt!35670))) ((_ is Cons!1507) lt!35810) (bvslt (_1!1099 (h!2095 lt!35810)) (_1!1099 lt!35670))))))

(declare-fun b!79808 () Bool)

(assert (=> b!79808 (= e!52111 (containsKey!139 (t!5148 lt!35810) (_1!1099 lt!35670)))))

(assert (= (and d!19443 (not res!41646)) b!79807))

(assert (= (and b!79807 res!41647) b!79808))

(declare-fun m!80951 () Bool)

(assert (=> b!79808 m!80951))

(assert (=> b!78560 d!19443))

(declare-fun bm!7352 () Bool)

(declare-fun call!7355 () (_ BitVec 32))

(assert (=> bm!7352 (= call!7355 (arrayCountValidKeys!0 (_keys!3930 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun d!19445 () Bool)

(declare-fun lt!36934 () (_ BitVec 32))

(assert (=> d!19445 (and (bvsge lt!36934 #b00000000000000000000000000000000) (bvsle lt!36934 (bvsub (size!2124 (_keys!3930 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!52113 () (_ BitVec 32))

(assert (=> d!19445 (= lt!36934 e!52113)))

(declare-fun c!12431 () Bool)

(assert (=> d!19445 (= c!12431 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!19445 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2124 (_keys!3930 newMap!16)) (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!19445 (= (arrayCountValidKeys!0 (_keys!3930 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))) lt!36934)))

(declare-fun b!79809 () Bool)

(declare-fun e!52112 () (_ BitVec 32))

(assert (=> b!79809 (= e!52112 (bvadd #b00000000000000000000000000000001 call!7355))))

(declare-fun b!79810 () Bool)

(assert (=> b!79810 (= e!52113 #b00000000000000000000000000000000)))

(declare-fun b!79811 () Bool)

(assert (=> b!79811 (= e!52113 e!52112)))

(declare-fun c!12430 () Bool)

(assert (=> b!79811 (= c!12430 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!79812 () Bool)

(assert (=> b!79812 (= e!52112 call!7355)))

(assert (= (and d!19445 c!12431) b!79810))

(assert (= (and d!19445 (not c!12431)) b!79811))

(assert (= (and b!79811 c!12430) b!79809))

(assert (= (and b!79811 (not c!12430)) b!79812))

(assert (= (or b!79809 b!79812) bm!7352))

(declare-fun m!80953 () Bool)

(assert (=> bm!7352 m!80953))

(assert (=> b!79811 m!80135))

(assert (=> b!79811 m!80135))

(assert (=> b!79811 m!80141))

(assert (=> bm!7208 d!19445))

(declare-fun d!19447 () Bool)

(assert (=> d!19447 (= (inRange!0 (index!3107 lt!36344) (mask!6266 newMap!16)) (and (bvsge (index!3107 lt!36344) #b00000000000000000000000000000000) (bvslt (index!3107 lt!36344) (bvadd (mask!6266 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!78510 d!19447))

(assert (=> b!78477 d!19205))

(assert (=> b!78477 d!19207))

(declare-fun d!19449 () Bool)

(assert (=> d!19449 (= (apply!79 lt!36359 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1180 (getValueByKey!135 (toList!732 lt!36359) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3381 () Bool)

(assert (= bs!3381 d!19449))

(assert (=> bs!3381 m!79407))

(assert (=> bs!3381 m!79407))

(declare-fun m!80955 () Bool)

(assert (=> bs!3381 m!80955))

(assert (=> b!78524 d!19449))

(declare-fun d!19451 () Bool)

(assert (=> d!19451 (= (isEmpty!331 (getValueByKey!135 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))) (not ((_ is Some!140) (getValueByKey!135 (toList!732 lt!35664) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))))

(assert (=> d!18403 d!19451))

(declare-fun d!19453 () Bool)

(declare-fun e!52115 () Bool)

(assert (=> d!19453 e!52115))

(declare-fun res!41648 () Bool)

(assert (=> d!19453 (=> res!41648 e!52115)))

(declare-fun lt!36937 () Bool)

(assert (=> d!19453 (= res!41648 (not lt!36937))))

(declare-fun lt!36938 () Bool)

(assert (=> d!19453 (= lt!36937 lt!36938)))

(declare-fun lt!36935 () Unit!2242)

(declare-fun e!52114 () Unit!2242)

(assert (=> d!19453 (= lt!36935 e!52114)))

(declare-fun c!12432 () Bool)

(assert (=> d!19453 (= c!12432 lt!36938)))

(assert (=> d!19453 (= lt!36938 (containsKey!139 (toList!732 lt!36325) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19453 (= (contains!739 lt!36325 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) lt!36937)))

(declare-fun b!79813 () Bool)

(declare-fun lt!36936 () Unit!2242)

(assert (=> b!79813 (= e!52114 lt!36936)))

(assert (=> b!79813 (= lt!36936 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36325) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> b!79813 (isDefined!89 (getValueByKey!135 (toList!732 lt!36325) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!79814 () Bool)

(declare-fun Unit!2318 () Unit!2242)

(assert (=> b!79814 (= e!52114 Unit!2318)))

(declare-fun b!79815 () Bool)

(assert (=> b!79815 (= e!52115 (isDefined!89 (getValueByKey!135 (toList!732 lt!36325) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19453 c!12432) b!79813))

(assert (= (and d!19453 (not c!12432)) b!79814))

(assert (= (and d!19453 (not res!41648)) b!79815))

(declare-fun m!80957 () Bool)

(assert (=> d!19453 m!80957))

(declare-fun m!80959 () Bool)

(assert (=> b!79813 m!80959))

(assert (=> b!79813 m!78635))

(assert (=> b!79813 m!78635))

(declare-fun m!80961 () Bool)

(assert (=> b!79813 m!80961))

(assert (=> b!79815 m!78635))

(assert (=> b!79815 m!78635))

(assert (=> b!79815 m!80961))

(assert (=> d!18575 d!19453))

(declare-fun b!79816 () Bool)

(declare-fun e!52116 () Option!141)

(assert (=> b!79816 (= e!52116 (Some!140 (_2!1099 (h!2095 lt!36323))))))

(declare-fun b!79818 () Bool)

(declare-fun e!52117 () Option!141)

(assert (=> b!79818 (= e!52117 (getValueByKey!135 (t!5148 lt!36323) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun d!19455 () Bool)

(declare-fun c!12433 () Bool)

(assert (=> d!19455 (= c!12433 (and ((_ is Cons!1507) lt!36323) (= (_1!1099 (h!2095 lt!36323)) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (=> d!19455 (= (getValueByKey!135 lt!36323 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) e!52116)))

(declare-fun b!79819 () Bool)

(assert (=> b!79819 (= e!52117 None!139)))

(declare-fun b!79817 () Bool)

(assert (=> b!79817 (= e!52116 e!52117)))

(declare-fun c!12434 () Bool)

(assert (=> b!79817 (= c!12434 (and ((_ is Cons!1507) lt!36323) (not (= (_1!1099 (h!2095 lt!36323)) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))))

(assert (= (and d!19455 c!12433) b!79816))

(assert (= (and d!19455 (not c!12433)) b!79817))

(assert (= (and b!79817 c!12434) b!79818))

(assert (= (and b!79817 (not c!12434)) b!79819))

(declare-fun m!80963 () Bool)

(assert (=> b!79818 m!80963))

(assert (=> d!18575 d!19455))

(declare-fun d!19457 () Bool)

(assert (=> d!19457 (= (getValueByKey!135 lt!36323 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) (Some!140 (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun lt!36939 () Unit!2242)

(assert (=> d!19457 (= lt!36939 (choose!462 lt!36323 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun e!52118 () Bool)

(assert (=> d!19457 e!52118))

(declare-fun res!41649 () Bool)

(assert (=> d!19457 (=> (not res!41649) (not e!52118))))

(assert (=> d!19457 (= res!41649 (isStrictlySorted!290 lt!36323))))

(assert (=> d!19457 (= (lemmaContainsTupThenGetReturnValue!55 lt!36323 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) lt!36939)))

(declare-fun b!79820 () Bool)

(declare-fun res!41650 () Bool)

(assert (=> b!79820 (=> (not res!41650) (not e!52118))))

(assert (=> b!79820 (= res!41650 (containsKey!139 lt!36323 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!79821 () Bool)

(assert (=> b!79821 (= e!52118 (contains!740 lt!36323 (tuple2!2177 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19457 res!41649) b!79820))

(assert (= (and b!79820 res!41650) b!79821))

(assert (=> d!19457 m!78629))

(declare-fun m!80965 () Bool)

(assert (=> d!19457 m!80965))

(declare-fun m!80967 () Bool)

(assert (=> d!19457 m!80967))

(declare-fun m!80969 () Bool)

(assert (=> b!79820 m!80969))

(declare-fun m!80971 () Bool)

(assert (=> b!79821 m!80971))

(assert (=> d!18575 d!19457))

(declare-fun b!79822 () Bool)

(declare-fun e!52120 () List!1511)

(declare-fun call!7356 () List!1511)

(assert (=> b!79822 (= e!52120 call!7356)))

(declare-fun b!79823 () Bool)

(declare-fun res!41652 () Bool)

(declare-fun e!52122 () Bool)

(assert (=> b!79823 (=> (not res!41652) (not e!52122))))

(declare-fun lt!36940 () List!1511)

(assert (=> b!79823 (= res!41652 (containsKey!139 lt!36940 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun c!12436 () Bool)

(declare-fun bm!7353 () Bool)

(declare-fun e!52123 () List!1511)

(declare-fun call!7357 () List!1511)

(assert (=> bm!7353 (= call!7357 ($colon$colon!68 e!52123 (ite c!12436 (h!2095 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076)))) (tuple2!2177 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))))

(declare-fun c!12437 () Bool)

(assert (=> bm!7353 (= c!12437 c!12436)))

(declare-fun c!12435 () Bool)

(declare-fun b!79824 () Bool)

(declare-fun c!12438 () Bool)

(assert (=> b!79824 (= e!52123 (ite c!12435 (t!5148 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076)))) (ite c!12438 (Cons!1507 (h!2095 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076)))) (t!5148 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076))))) Nil!1508)))))

(declare-fun d!19459 () Bool)

(assert (=> d!19459 e!52122))

(declare-fun res!41651 () Bool)

(assert (=> d!19459 (=> (not res!41651) (not e!52122))))

(assert (=> d!19459 (= res!41651 (isStrictlySorted!290 lt!36940))))

(declare-fun e!52119 () List!1511)

(assert (=> d!19459 (= lt!36940 e!52119)))

(assert (=> d!19459 (= c!12436 (and ((_ is Cons!1507) (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076)))) (bvslt (_1!1099 (h!2095 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076))))) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (=> d!19459 (isStrictlySorted!290 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076))))))

(assert (=> d!19459 (= (insertStrictlySorted!58 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076))) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))) lt!36940)))

(declare-fun bm!7354 () Bool)

(declare-fun call!7358 () List!1511)

(assert (=> bm!7354 (= call!7358 call!7356)))

(declare-fun b!79825 () Bool)

(assert (=> b!79825 (= c!12438 (and ((_ is Cons!1507) (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076)))) (bvsgt (_1!1099 (h!2095 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076))))) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun e!52121 () List!1511)

(assert (=> b!79825 (= e!52120 e!52121)))

(declare-fun b!79826 () Bool)

(assert (=> b!79826 (= e!52121 call!7358)))

(declare-fun b!79827 () Bool)

(assert (=> b!79827 (= e!52119 e!52120)))

(assert (=> b!79827 (= c!12435 (and ((_ is Cons!1507) (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076)))) (= (_1!1099 (h!2095 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076))))) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun b!79828 () Bool)

(assert (=> b!79828 (= e!52121 call!7358)))

(declare-fun bm!7355 () Bool)

(assert (=> bm!7355 (= call!7356 call!7357)))

(declare-fun b!79829 () Bool)

(assert (=> b!79829 (= e!52123 (insertStrictlySorted!58 (t!5148 (toList!732 (ite c!11884 call!7077 (ite c!11882 call!7073 call!7076)))) (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!79830 () Bool)

(assert (=> b!79830 (= e!52119 call!7357)))

(declare-fun b!79831 () Bool)

(assert (=> b!79831 (= e!52122 (contains!740 lt!36940 (tuple2!2177 (_1!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) (_2!1099 (ite (or c!11884 c!11882) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19459 c!12436) b!79830))

(assert (= (and d!19459 (not c!12436)) b!79827))

(assert (= (and b!79827 c!12435) b!79822))

(assert (= (and b!79827 (not c!12435)) b!79825))

(assert (= (and b!79825 c!12438) b!79828))

(assert (= (and b!79825 (not c!12438)) b!79826))

(assert (= (or b!79828 b!79826) bm!7354))

(assert (= (or b!79822 bm!7354) bm!7355))

(assert (= (or b!79830 bm!7355) bm!7353))

(assert (= (and bm!7353 c!12437) b!79829))

(assert (= (and bm!7353 (not c!12437)) b!79824))

(assert (= (and d!19459 res!41651) b!79823))

(assert (= (and b!79823 res!41652) b!79831))

(declare-fun m!80973 () Bool)

(assert (=> b!79829 m!80973))

(declare-fun m!80975 () Bool)

(assert (=> bm!7353 m!80975))

(declare-fun m!80977 () Bool)

(assert (=> b!79823 m!80977))

(declare-fun m!80979 () Bool)

(assert (=> b!79831 m!80979))

(declare-fun m!80981 () Bool)

(assert (=> d!19459 m!80981))

(declare-fun m!80983 () Bool)

(assert (=> d!19459 m!80983))

(assert (=> d!18575 d!19459))

(assert (=> b!78424 d!19261))

(assert (=> b!78424 d!18593))

(declare-fun b!79832 () Bool)

(declare-fun e!52124 () Option!141)

(assert (=> b!79832 (= e!52124 (Some!140 (_2!1099 (h!2095 (t!5148 (toList!732 lt!35801))))))))

(declare-fun b!79834 () Bool)

(declare-fun e!52125 () Option!141)

(assert (=> b!79834 (= e!52125 (getValueByKey!135 (t!5148 (t!5148 (toList!732 lt!35801))) (_1!1099 lt!35659)))))

(declare-fun d!19461 () Bool)

(declare-fun c!12439 () Bool)

(assert (=> d!19461 (= c!12439 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35801))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35801)))) (_1!1099 lt!35659))))))

(assert (=> d!19461 (= (getValueByKey!135 (t!5148 (toList!732 lt!35801)) (_1!1099 lt!35659)) e!52124)))

(declare-fun b!79835 () Bool)

(assert (=> b!79835 (= e!52125 None!139)))

(declare-fun b!79833 () Bool)

(assert (=> b!79833 (= e!52124 e!52125)))

(declare-fun c!12440 () Bool)

(assert (=> b!79833 (= c!12440 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35801))) (not (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35801)))) (_1!1099 lt!35659)))))))

(assert (= (and d!19461 c!12439) b!79832))

(assert (= (and d!19461 (not c!12439)) b!79833))

(assert (= (and b!79833 c!12440) b!79834))

(assert (= (and b!79833 (not c!12440)) b!79835))

(declare-fun m!80985 () Bool)

(assert (=> b!79834 m!80985))

(assert (=> b!78608 d!19461))

(declare-fun d!19463 () Bool)

(assert (=> d!19463 (isDefined!89 (getValueByKey!135 (toList!732 lt!35797) (_1!1099 lt!35660)))))

(declare-fun lt!36941 () Unit!2242)

(assert (=> d!19463 (= lt!36941 (choose!463 (toList!732 lt!35797) (_1!1099 lt!35660)))))

(declare-fun e!52126 () Bool)

(assert (=> d!19463 e!52126))

(declare-fun res!41653 () Bool)

(assert (=> d!19463 (=> (not res!41653) (not e!52126))))

(assert (=> d!19463 (= res!41653 (isStrictlySorted!290 (toList!732 lt!35797)))))

(assert (=> d!19463 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35797) (_1!1099 lt!35660)) lt!36941)))

(declare-fun b!79836 () Bool)

(assert (=> b!79836 (= e!52126 (containsKey!139 (toList!732 lt!35797) (_1!1099 lt!35660)))))

(assert (= (and d!19463 res!41653) b!79836))

(assert (=> d!19463 m!77673))

(assert (=> d!19463 m!77673))

(assert (=> d!19463 m!78659))

(declare-fun m!80987 () Bool)

(assert (=> d!19463 m!80987))

(declare-fun m!80989 () Bool)

(assert (=> d!19463 m!80989))

(assert (=> b!79836 m!78655))

(assert (=> b!78478 d!19463))

(declare-fun d!19465 () Bool)

(assert (=> d!19465 (= (isDefined!89 (getValueByKey!135 (toList!732 lt!35797) (_1!1099 lt!35660))) (not (isEmpty!331 (getValueByKey!135 (toList!732 lt!35797) (_1!1099 lt!35660)))))))

(declare-fun bs!3382 () Bool)

(assert (= bs!3382 d!19465))

(assert (=> bs!3382 m!77673))

(declare-fun m!80991 () Bool)

(assert (=> bs!3382 m!80991))

(assert (=> b!78478 d!19465))

(assert (=> b!78478 d!18637))

(declare-fun b!79837 () Bool)

(declare-fun e!52127 () Option!141)

(assert (=> b!79837 (= e!52127 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36091)))))))

(declare-fun b!79839 () Bool)

(declare-fun e!52128 () Option!141)

(assert (=> b!79839 (= e!52128 (getValueByKey!135 (t!5148 (toList!732 lt!36091)) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!19467 () Bool)

(declare-fun c!12441 () Bool)

(assert (=> d!19467 (= c!12441 (and ((_ is Cons!1507) (toList!732 lt!36091)) (= (_1!1099 (h!2095 (toList!732 lt!36091))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19467 (= (getValueByKey!135 (toList!732 lt!36091) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!52127)))

(declare-fun b!79840 () Bool)

(assert (=> b!79840 (= e!52128 None!139)))

(declare-fun b!79838 () Bool)

(assert (=> b!79838 (= e!52127 e!52128)))

(declare-fun c!12442 () Bool)

(assert (=> b!79838 (= c!12442 (and ((_ is Cons!1507) (toList!732 lt!36091)) (not (= (_1!1099 (h!2095 (toList!732 lt!36091))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19467 c!12441) b!79837))

(assert (= (and d!19467 (not c!12441)) b!79838))

(assert (= (and b!79838 c!12442) b!79839))

(assert (= (and b!79838 (not c!12442)) b!79840))

(declare-fun m!80993 () Bool)

(assert (=> b!79839 m!80993))

(assert (=> b!78224 d!19467))

(assert (=> b!78246 d!19033))

(assert (=> b!78246 d!18409))

(declare-fun lt!36956 () ListLongMap!1433)

(declare-fun e!52139 () Bool)

(declare-fun b!79841 () Bool)

(assert (=> b!79841 (= e!52139 (= (apply!79 lt!36956 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79841 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))))))))

(assert (=> b!79841 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79842 () Bool)

(declare-fun c!12444 () Bool)

(assert (=> b!79842 (= c!12444 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52138 () ListLongMap!1433)

(declare-fun e!52131 () ListLongMap!1433)

(assert (=> b!79842 (= e!52138 e!52131)))

(declare-fun b!79843 () Bool)

(declare-fun e!52137 () Bool)

(assert (=> b!79843 (= e!52137 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79844 () Bool)

(declare-fun e!52136 () Unit!2242)

(declare-fun lt!36959 () Unit!2242)

(assert (=> b!79844 (= e!52136 lt!36959)))

(declare-fun lt!36946 () ListLongMap!1433)

(assert (=> b!79844 (= lt!36946 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36942 () (_ BitVec 64))

(assert (=> b!79844 (= lt!36942 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36953 () (_ BitVec 64))

(assert (=> b!79844 (= lt!36953 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36947 () Unit!2242)

(assert (=> b!79844 (= lt!36947 (addStillContains!55 lt!36946 lt!36942 (zeroValue!2169 newMap!16) lt!36953))))

(assert (=> b!79844 (contains!739 (+!103 lt!36946 (tuple2!2177 lt!36942 (zeroValue!2169 newMap!16))) lt!36953)))

(declare-fun lt!36944 () Unit!2242)

(assert (=> b!79844 (= lt!36944 lt!36947)))

(declare-fun lt!36945 () ListLongMap!1433)

(assert (=> b!79844 (= lt!36945 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36954 () (_ BitVec 64))

(assert (=> b!79844 (= lt!36954 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36951 () (_ BitVec 64))

(assert (=> b!79844 (= lt!36951 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36952 () Unit!2242)

(assert (=> b!79844 (= lt!36952 (addApplyDifferent!55 lt!36945 lt!36954 (minValue!2169 newMap!16) lt!36951))))

(assert (=> b!79844 (= (apply!79 (+!103 lt!36945 (tuple2!2177 lt!36954 (minValue!2169 newMap!16))) lt!36951) (apply!79 lt!36945 lt!36951))))

(declare-fun lt!36943 () Unit!2242)

(assert (=> b!79844 (= lt!36943 lt!36952)))

(declare-fun lt!36950 () ListLongMap!1433)

(assert (=> b!79844 (= lt!36950 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36963 () (_ BitVec 64))

(assert (=> b!79844 (= lt!36963 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36961 () (_ BitVec 64))

(assert (=> b!79844 (= lt!36961 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36962 () Unit!2242)

(assert (=> b!79844 (= lt!36962 (addApplyDifferent!55 lt!36950 lt!36963 (zeroValue!2169 newMap!16) lt!36961))))

(assert (=> b!79844 (= (apply!79 (+!103 lt!36950 (tuple2!2177 lt!36963 (zeroValue!2169 newMap!16))) lt!36961) (apply!79 lt!36950 lt!36961))))

(declare-fun lt!36955 () Unit!2242)

(assert (=> b!79844 (= lt!36955 lt!36962)))

(declare-fun lt!36957 () ListLongMap!1433)

(assert (=> b!79844 (= lt!36957 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36958 () (_ BitVec 64))

(assert (=> b!79844 (= lt!36958 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36960 () (_ BitVec 64))

(assert (=> b!79844 (= lt!36960 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79844 (= lt!36959 (addApplyDifferent!55 lt!36957 lt!36958 (minValue!2169 newMap!16) lt!36960))))

(assert (=> b!79844 (= (apply!79 (+!103 lt!36957 (tuple2!2177 lt!36958 (minValue!2169 newMap!16))) lt!36960) (apply!79 lt!36957 lt!36960))))

(declare-fun b!79846 () Bool)

(declare-fun e!52130 () Bool)

(declare-fun e!52132 () Bool)

(assert (=> b!79846 (= e!52130 e!52132)))

(declare-fun res!41656 () Bool)

(declare-fun call!7364 () Bool)

(assert (=> b!79846 (= res!41656 call!7364)))

(assert (=> b!79846 (=> (not res!41656) (not e!52132))))

(declare-fun bm!7356 () Bool)

(declare-fun call!7359 () ListLongMap!1433)

(declare-fun call!7363 () ListLongMap!1433)

(assert (=> bm!7356 (= call!7359 call!7363)))

(declare-fun b!79847 () Bool)

(assert (=> b!79847 (= e!52130 (not call!7364))))

(declare-fun b!79848 () Bool)

(declare-fun e!52135 () ListLongMap!1433)

(assert (=> b!79848 (= e!52135 e!52138)))

(declare-fun c!12445 () Bool)

(assert (=> b!79848 (= c!12445 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79849 () Bool)

(declare-fun call!7360 () ListLongMap!1433)

(assert (=> b!79849 (= e!52131 call!7360)))

(declare-fun b!79850 () Bool)

(declare-fun call!7362 () ListLongMap!1433)

(assert (=> b!79850 (= e!52131 call!7362)))

(declare-fun b!79851 () Bool)

(declare-fun res!41661 () Bool)

(declare-fun e!52141 () Bool)

(assert (=> b!79851 (=> (not res!41661) (not e!52141))))

(declare-fun e!52129 () Bool)

(assert (=> b!79851 (= res!41661 e!52129)))

(declare-fun c!12443 () Bool)

(assert (=> b!79851 (= c!12443 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7357 () Bool)

(declare-fun call!7361 () Bool)

(assert (=> bm!7357 (= call!7361 (contains!739 lt!36956 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7358 () Bool)

(assert (=> bm!7358 (= call!7364 (contains!739 lt!36956 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7359 () Bool)

(assert (=> bm!7359 (= call!7363 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!79852 () Bool)

(declare-fun e!52140 () Bool)

(assert (=> b!79852 (= e!52140 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7360 () Bool)

(assert (=> bm!7360 (= call!7362 call!7359)))

(declare-fun b!79853 () Bool)

(declare-fun e!52134 () Bool)

(assert (=> b!79853 (= e!52134 (= (apply!79 lt!36956 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!79854 () Bool)

(declare-fun res!41662 () Bool)

(assert (=> b!79854 (=> (not res!41662) (not e!52141))))

(declare-fun e!52133 () Bool)

(assert (=> b!79854 (= res!41662 e!52133)))

(declare-fun res!41659 () Bool)

(assert (=> b!79854 (=> res!41659 e!52133)))

(assert (=> b!79854 (= res!41659 (not e!52140))))

(declare-fun res!41655 () Bool)

(assert (=> b!79854 (=> (not res!41655) (not e!52140))))

(assert (=> b!79854 (= res!41655 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79845 () Bool)

(declare-fun call!7365 () ListLongMap!1433)

(assert (=> b!79845 (= e!52135 (+!103 call!7365 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16))))))

(declare-fun d!19469 () Bool)

(assert (=> d!19469 e!52141))

(declare-fun res!41658 () Bool)

(assert (=> d!19469 (=> (not res!41658) (not e!52141))))

(assert (=> d!19469 (= res!41658 (or (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))))

(declare-fun lt!36948 () ListLongMap!1433)

(assert (=> d!19469 (= lt!36956 lt!36948)))

(declare-fun lt!36949 () Unit!2242)

(assert (=> d!19469 (= lt!36949 e!52136)))

(declare-fun c!12446 () Bool)

(assert (=> d!19469 (= c!12446 e!52137)))

(declare-fun res!41660 () Bool)

(assert (=> d!19469 (=> (not res!41660) (not e!52137))))

(assert (=> d!19469 (= res!41660 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!19469 (= lt!36948 e!52135)))

(declare-fun c!12447 () Bool)

(assert (=> d!19469 (= c!12447 (and (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19469 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19469 (= (getCurrentListMap!421 (_keys!3930 newMap!16) (array!3954 (store (arr!1883 (_values!2254 newMap!16)) (index!3107 lt!36006) (ValueCellFull!911 lt!35658)) (size!2125 (_values!2254 newMap!16))) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36956)))

(declare-fun b!79855 () Bool)

(assert (=> b!79855 (= e!52129 (not call!7361))))

(declare-fun bm!7361 () Bool)

(assert (=> bm!7361 (= call!7365 (+!103 (ite c!12447 call!7363 (ite c!12445 call!7359 call!7362)) (ite (or c!12447 c!12445) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 newMap!16)))))))

(declare-fun b!79856 () Bool)

(assert (=> b!79856 (= e!52138 call!7360)))

(declare-fun bm!7362 () Bool)

(assert (=> bm!7362 (= call!7360 call!7365)))

(declare-fun b!79857 () Bool)

(assert (=> b!79857 (= e!52133 e!52139)))

(declare-fun res!41657 () Bool)

(assert (=> b!79857 (=> (not res!41657) (not e!52139))))

(assert (=> b!79857 (= res!41657 (contains!739 lt!36956 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79857 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79858 () Bool)

(assert (=> b!79858 (= e!52129 e!52134)))

(declare-fun res!41654 () Bool)

(assert (=> b!79858 (= res!41654 call!7361)))

(assert (=> b!79858 (=> (not res!41654) (not e!52134))))

(declare-fun b!79859 () Bool)

(assert (=> b!79859 (= e!52141 e!52130)))

(declare-fun c!12448 () Bool)

(assert (=> b!79859 (= c!12448 (not (= (bvand (extraKeys!2122 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79860 () Bool)

(declare-fun Unit!2319 () Unit!2242)

(assert (=> b!79860 (= e!52136 Unit!2319)))

(declare-fun b!79861 () Bool)

(assert (=> b!79861 (= e!52132 (= (apply!79 lt!36956 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2169 newMap!16)))))

(assert (= (and d!19469 c!12447) b!79845))

(assert (= (and d!19469 (not c!12447)) b!79848))

(assert (= (and b!79848 c!12445) b!79856))

(assert (= (and b!79848 (not c!12445)) b!79842))

(assert (= (and b!79842 c!12444) b!79849))

(assert (= (and b!79842 (not c!12444)) b!79850))

(assert (= (or b!79849 b!79850) bm!7360))

(assert (= (or b!79856 bm!7360) bm!7356))

(assert (= (or b!79856 b!79849) bm!7362))

(assert (= (or b!79845 bm!7356) bm!7359))

(assert (= (or b!79845 bm!7362) bm!7361))

(assert (= (and d!19469 res!41660) b!79843))

(assert (= (and d!19469 c!12446) b!79844))

(assert (= (and d!19469 (not c!12446)) b!79860))

(assert (= (and d!19469 res!41658) b!79854))

(assert (= (and b!79854 res!41655) b!79852))

(assert (= (and b!79854 (not res!41659)) b!79857))

(assert (= (and b!79857 res!41657) b!79841))

(assert (= (and b!79854 res!41662) b!79851))

(assert (= (and b!79851 c!12443) b!79858))

(assert (= (and b!79851 (not c!12443)) b!79855))

(assert (= (and b!79858 res!41654) b!79853))

(assert (= (or b!79858 b!79855) bm!7357))

(assert (= (and b!79851 res!41661) b!79859))

(assert (= (and b!79859 c!12448) b!79846))

(assert (= (and b!79859 (not c!12448)) b!79847))

(assert (= (and b!79846 res!41656) b!79861))

(assert (= (or b!79846 b!79847) bm!7358))

(declare-fun b_lambda!3535 () Bool)

(assert (=> (not b_lambda!3535) (not b!79841)))

(assert (=> b!79841 t!5160))

(declare-fun b_and!4869 () Bool)

(assert (= b_and!4865 (and (=> t!5160 result!2821) b_and!4869)))

(assert (=> b!79841 t!5162))

(declare-fun b_and!4871 () Bool)

(assert (= b_and!4867 (and (=> t!5162 result!2823) b_and!4871)))

(declare-fun m!80995 () Bool)

(assert (=> b!79853 m!80995))

(declare-fun m!80997 () Bool)

(assert (=> b!79844 m!80997))

(declare-fun m!80999 () Bool)

(assert (=> b!79844 m!80999))

(declare-fun m!81001 () Bool)

(assert (=> b!79844 m!81001))

(declare-fun m!81003 () Bool)

(assert (=> b!79844 m!81003))

(declare-fun m!81005 () Bool)

(assert (=> b!79844 m!81005))

(declare-fun m!81007 () Bool)

(assert (=> b!79844 m!81007))

(declare-fun m!81009 () Bool)

(assert (=> b!79844 m!81009))

(declare-fun m!81011 () Bool)

(assert (=> b!79844 m!81011))

(declare-fun m!81013 () Bool)

(assert (=> b!79844 m!81013))

(declare-fun m!81015 () Bool)

(assert (=> b!79844 m!81015))

(declare-fun m!81017 () Bool)

(assert (=> b!79844 m!81017))

(declare-fun m!81019 () Bool)

(assert (=> b!79844 m!81019))

(declare-fun m!81021 () Bool)

(assert (=> b!79844 m!81021))

(assert (=> b!79844 m!81017))

(assert (=> b!79844 m!81015))

(declare-fun m!81023 () Bool)

(assert (=> b!79844 m!81023))

(assert (=> b!79844 m!77965))

(assert (=> b!79844 m!81001))

(declare-fun m!81025 () Bool)

(assert (=> b!79844 m!81025))

(assert (=> b!79844 m!81011))

(declare-fun m!81027 () Bool)

(assert (=> b!79844 m!81027))

(declare-fun m!81029 () Bool)

(assert (=> bm!7358 m!81029))

(assert (=> bm!7359 m!81013))

(declare-fun m!81031 () Bool)

(assert (=> b!79845 m!81031))

(assert (=> b!79843 m!77965))

(assert (=> b!79843 m!77965))

(assert (=> b!79843 m!77975))

(assert (=> d!19469 m!77977))

(declare-fun m!81033 () Bool)

(assert (=> bm!7357 m!81033))

(declare-fun m!81035 () Bool)

(assert (=> bm!7361 m!81035))

(assert (=> b!79841 m!77983))

(declare-fun m!81037 () Bool)

(assert (=> b!79841 m!81037))

(assert (=> b!79841 m!77983))

(declare-fun m!81039 () Bool)

(assert (=> b!79841 m!81039))

(assert (=> b!79841 m!77965))

(declare-fun m!81041 () Bool)

(assert (=> b!79841 m!81041))

(assert (=> b!79841 m!81037))

(assert (=> b!79841 m!77965))

(assert (=> b!79852 m!77965))

(assert (=> b!79852 m!77965))

(assert (=> b!79852 m!77975))

(declare-fun m!81043 () Bool)

(assert (=> b!79861 m!81043))

(assert (=> b!79857 m!77965))

(assert (=> b!79857 m!77965))

(declare-fun m!81045 () Bool)

(assert (=> b!79857 m!81045))

(assert (=> b!78246 d!19469))

(declare-fun b!79862 () Bool)

(declare-fun e!52143 () Bool)

(declare-fun call!7366 () Bool)

(assert (=> b!79862 (= e!52143 call!7366)))

(declare-fun d!19471 () Bool)

(declare-fun res!41664 () Bool)

(declare-fun e!52144 () Bool)

(assert (=> d!19471 (=> res!41664 e!52144)))

(assert (=> d!19471 (= res!41664 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))))))

(assert (=> d!19471 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3930 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994))) e!52144)))

(declare-fun b!79863 () Bool)

(declare-fun e!52142 () Bool)

(assert (=> b!79863 (= e!52144 e!52142)))

(declare-fun c!12449 () Bool)

(assert (=> b!79863 (= c!12449 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000)))))

(declare-fun b!79864 () Bool)

(assert (=> b!79864 (= e!52142 call!7366)))

(declare-fun b!79865 () Bool)

(assert (=> b!79865 (= e!52142 e!52143)))

(declare-fun lt!36965 () (_ BitVec 64))

(assert (=> b!79865 (= lt!36965 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000))))

(declare-fun lt!36966 () Unit!2242)

(assert (=> b!79865 (= lt!36966 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3930 (_2!1098 lt!35994)) lt!36965 #b00000000000000000000000000000000))))

(assert (=> b!79865 (arrayContainsKey!0 (_keys!3930 (_2!1098 lt!35994)) lt!36965 #b00000000000000000000000000000000)))

(declare-fun lt!36964 () Unit!2242)

(assert (=> b!79865 (= lt!36964 lt!36966)))

(declare-fun res!41663 () Bool)

(assert (=> b!79865 (= res!41663 (= (seekEntryOrOpen!0 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000) (_keys!3930 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994))) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!79865 (=> (not res!41663) (not e!52143))))

(declare-fun bm!7363 () Bool)

(assert (=> bm!7363 (= call!7366 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3930 (_2!1098 lt!35994)) (mask!6266 (_2!1098 lt!35994))))))

(assert (= (and d!19471 (not res!41664)) b!79863))

(assert (= (and b!79863 c!12449) b!79865))

(assert (= (and b!79863 (not c!12449)) b!79864))

(assert (= (and b!79865 res!41663) b!79862))

(assert (= (or b!79862 b!79864) bm!7363))

(assert (=> b!79863 m!79263))

(assert (=> b!79863 m!79263))

(assert (=> b!79863 m!79273))

(assert (=> b!79865 m!79263))

(declare-fun m!81047 () Bool)

(assert (=> b!79865 m!81047))

(declare-fun m!81049 () Bool)

(assert (=> b!79865 m!81049))

(assert (=> b!79865 m!79263))

(declare-fun m!81051 () Bool)

(assert (=> b!79865 m!81051))

(declare-fun m!81053 () Bool)

(assert (=> bm!7363 m!81053))

(assert (=> b!78220 d!19471))

(declare-fun d!19473 () Bool)

(declare-fun e!52146 () Bool)

(assert (=> d!19473 e!52146))

(declare-fun res!41665 () Bool)

(assert (=> d!19473 (=> res!41665 e!52146)))

(declare-fun lt!36969 () Bool)

(assert (=> d!19473 (= res!41665 (not lt!36969))))

(declare-fun lt!36970 () Bool)

(assert (=> d!19473 (= lt!36969 lt!36970)))

(declare-fun lt!36967 () Unit!2242)

(declare-fun e!52145 () Unit!2242)

(assert (=> d!19473 (= lt!36967 e!52145)))

(declare-fun c!12450 () Bool)

(assert (=> d!19473 (= c!12450 lt!36970)))

(assert (=> d!19473 (= lt!36970 (containsKey!139 (toList!732 lt!36082) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19473 (= (contains!739 lt!36082 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36969)))

(declare-fun b!79866 () Bool)

(declare-fun lt!36968 () Unit!2242)

(assert (=> b!79866 (= e!52145 lt!36968)))

(assert (=> b!79866 (= lt!36968 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36082) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79866 (isDefined!89 (getValueByKey!135 (toList!732 lt!36082) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79867 () Bool)

(declare-fun Unit!2320 () Unit!2242)

(assert (=> b!79867 (= e!52145 Unit!2320)))

(declare-fun b!79868 () Bool)

(assert (=> b!79868 (= e!52146 (isDefined!89 (getValueByKey!135 (toList!732 lt!36082) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19473 c!12450) b!79866))

(assert (= (and d!19473 (not c!12450)) b!79867))

(assert (= (and d!19473 (not res!41665)) b!79868))

(declare-fun m!81055 () Bool)

(assert (=> d!19473 m!81055))

(declare-fun m!81057 () Bool)

(assert (=> b!79866 m!81057))

(declare-fun m!81059 () Bool)

(assert (=> b!79866 m!81059))

(assert (=> b!79866 m!81059))

(declare-fun m!81061 () Bool)

(assert (=> b!79866 m!81061))

(assert (=> b!79868 m!81059))

(assert (=> b!79868 m!81059))

(assert (=> b!79868 m!81061))

(assert (=> d!18457 d!19473))

(assert (=> d!18457 d!18367))

(declare-fun d!19475 () Bool)

(assert (=> d!19475 (= (apply!79 lt!36359 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1180 (getValueByKey!135 (toList!732 lt!36359) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3383 () Bool)

(assert (= bs!3383 d!19475))

(assert (=> bs!3383 m!77965))

(assert (=> bs!3383 m!80549))

(assert (=> bs!3383 m!80549))

(declare-fun m!81063 () Bool)

(assert (=> bs!3383 m!81063))

(assert (=> b!78512 d!19475))

(declare-fun d!19477 () Bool)

(declare-fun c!12451 () Bool)

(assert (=> d!19477 (= c!12451 ((_ is ValueCellFull!911) (select (arr!1883 (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002)) #b00000000000000000000000000000000)))))

(declare-fun e!52147 () V!2993)

(assert (=> d!19477 (= (get!1177 (select (arr!1883 (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52147)))

(declare-fun b!79869 () Bool)

(assert (=> b!79869 (= e!52147 (get!1178 (select (arr!1883 (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79870 () Bool)

(assert (=> b!79870 (= e!52147 (get!1179 (select (arr!1883 (ite (or c!11926 c!11923) (_values!2254 newMap!16) lt!36002)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19477 c!12451) b!79869))

(assert (= (and d!19477 (not c!12451)) b!79870))

(assert (=> b!79869 m!78737))

(assert (=> b!79869 m!77983))

(declare-fun m!81065 () Bool)

(assert (=> b!79869 m!81065))

(assert (=> b!79870 m!78737))

(assert (=> b!79870 m!77983))

(declare-fun m!81067 () Bool)

(assert (=> b!79870 m!81067))

(assert (=> b!78512 d!19477))

(declare-fun d!19479 () Bool)

(declare-fun e!52149 () Bool)

(assert (=> d!19479 e!52149))

(declare-fun res!41666 () Bool)

(assert (=> d!19479 (=> res!41666 e!52149)))

(declare-fun lt!36973 () Bool)

(assert (=> d!19479 (= res!41666 (not lt!36973))))

(declare-fun lt!36974 () Bool)

(assert (=> d!19479 (= lt!36973 lt!36974)))

(declare-fun lt!36971 () Unit!2242)

(declare-fun e!52148 () Unit!2242)

(assert (=> d!19479 (= lt!36971 e!52148)))

(declare-fun c!12452 () Bool)

(assert (=> d!19479 (= c!12452 lt!36974)))

(assert (=> d!19479 (= lt!36974 (containsKey!139 (toList!732 lt!36029) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19479 (= (contains!739 lt!36029 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) lt!36973)))

(declare-fun b!79871 () Bool)

(declare-fun lt!36972 () Unit!2242)

(assert (=> b!79871 (= e!52148 lt!36972)))

(assert (=> b!79871 (= lt!36972 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36029) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79871 (isDefined!89 (getValueByKey!135 (toList!732 lt!36029) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79872 () Bool)

(declare-fun Unit!2321 () Unit!2242)

(assert (=> b!79872 (= e!52148 Unit!2321)))

(declare-fun b!79873 () Bool)

(assert (=> b!79873 (= e!52149 (isDefined!89 (getValueByKey!135 (toList!732 lt!36029) (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19479 c!12452) b!79871))

(assert (= (and d!19479 (not c!12452)) b!79872))

(assert (= (and d!19479 (not res!41666)) b!79873))

(assert (=> d!19479 m!77965))

(declare-fun m!81069 () Bool)

(assert (=> d!19479 m!81069))

(assert (=> b!79871 m!77965))

(declare-fun m!81071 () Bool)

(assert (=> b!79871 m!81071))

(assert (=> b!79871 m!77965))

(assert (=> b!79871 m!79411))

(assert (=> b!79871 m!79411))

(declare-fun m!81073 () Bool)

(assert (=> b!79871 m!81073))

(assert (=> b!79873 m!77965))

(assert (=> b!79873 m!79411))

(assert (=> b!79873 m!79411))

(assert (=> b!79873 m!81073))

(assert (=> b!78100 d!19479))

(declare-fun d!19481 () Bool)

(declare-fun res!41667 () Bool)

(declare-fun e!52150 () Bool)

(assert (=> d!19481 (=> res!41667 e!52150)))

(assert (=> d!19481 (= res!41667 (or ((_ is Nil!1508) lt!36060) ((_ is Nil!1508) (t!5148 lt!36060))))))

(assert (=> d!19481 (= (isStrictlySorted!290 lt!36060) e!52150)))

(declare-fun b!79874 () Bool)

(declare-fun e!52151 () Bool)

(assert (=> b!79874 (= e!52150 e!52151)))

(declare-fun res!41668 () Bool)

(assert (=> b!79874 (=> (not res!41668) (not e!52151))))

(assert (=> b!79874 (= res!41668 (bvslt (_1!1099 (h!2095 lt!36060)) (_1!1099 (h!2095 (t!5148 lt!36060)))))))

(declare-fun b!79875 () Bool)

(assert (=> b!79875 (= e!52151 (isStrictlySorted!290 (t!5148 lt!36060)))))

(assert (= (and d!19481 (not res!41667)) b!79874))

(assert (= (and b!79874 res!41668) b!79875))

(declare-fun m!81075 () Bool)

(assert (=> b!79875 m!81075))

(assert (=> d!18447 d!19481))

(assert (=> d!18447 d!18657))

(declare-fun b!79876 () Bool)

(declare-fun e!52152 () Option!141)

(assert (=> b!79876 (= e!52152 (Some!140 (_2!1099 (h!2095 (t!5148 (toList!732 lt!35812))))))))

(declare-fun b!79878 () Bool)

(declare-fun e!52153 () Option!141)

(assert (=> b!79878 (= e!52153 (getValueByKey!135 (t!5148 (t!5148 (toList!732 lt!35812))) (_1!1099 lt!35670)))))

(declare-fun d!19483 () Bool)

(declare-fun c!12453 () Bool)

(assert (=> d!19483 (= c!12453 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35812))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35812)))) (_1!1099 lt!35670))))))

(assert (=> d!19483 (= (getValueByKey!135 (t!5148 (toList!732 lt!35812)) (_1!1099 lt!35670)) e!52152)))

(declare-fun b!79879 () Bool)

(assert (=> b!79879 (= e!52153 None!139)))

(declare-fun b!79877 () Bool)

(assert (=> b!79877 (= e!52152 e!52153)))

(declare-fun c!12454 () Bool)

(assert (=> b!79877 (= c!12454 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35812))) (not (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35812)))) (_1!1099 lt!35670)))))))

(assert (= (and d!19483 c!12453) b!79876))

(assert (= (and d!19483 (not c!12453)) b!79877))

(assert (= (and b!79877 c!12454) b!79878))

(assert (= (and b!79877 (not c!12454)) b!79879))

(declare-fun m!81077 () Bool)

(assert (=> b!79878 m!81077))

(assert (=> b!78535 d!19483))

(declare-fun d!19485 () Bool)

(declare-fun res!41669 () Bool)

(declare-fun e!52154 () Bool)

(assert (=> d!19485 (=> res!41669 e!52154)))

(assert (=> d!19485 (= res!41669 (and ((_ is Cons!1507) (toList!732 lt!35837)) (= (_1!1099 (h!2095 (toList!732 lt!35837))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19485 (= (containsKey!139 (toList!732 lt!35837) #b1000000000000000000000000000000000000000000000000000000000000000) e!52154)))

(declare-fun b!79880 () Bool)

(declare-fun e!52155 () Bool)

(assert (=> b!79880 (= e!52154 e!52155)))

(declare-fun res!41670 () Bool)

(assert (=> b!79880 (=> (not res!41670) (not e!52155))))

(assert (=> b!79880 (= res!41670 (and (or (not ((_ is Cons!1507) (toList!732 lt!35837))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35837))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1507) (toList!732 lt!35837)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35837))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79881 () Bool)

(assert (=> b!79881 (= e!52155 (containsKey!139 (t!5148 (toList!732 lt!35837)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19485 (not res!41669)) b!79880))

(assert (= (and b!79880 res!41670) b!79881))

(declare-fun m!81079 () Bool)

(assert (=> b!79881 m!81079))

(assert (=> d!18423 d!19485))

(declare-fun d!19487 () Bool)

(declare-fun res!41671 () Bool)

(declare-fun e!52156 () Bool)

(assert (=> d!19487 (=> res!41671 e!52156)))

(assert (=> d!19487 (= res!41671 (and ((_ is Cons!1507) lt!35795) (= (_1!1099 (h!2095 lt!35795)) (_1!1099 lt!35660))))))

(assert (=> d!19487 (= (containsKey!139 lt!35795 (_1!1099 lt!35660)) e!52156)))

(declare-fun b!79882 () Bool)

(declare-fun e!52157 () Bool)

(assert (=> b!79882 (= e!52156 e!52157)))

(declare-fun res!41672 () Bool)

(assert (=> b!79882 (=> (not res!41672) (not e!52157))))

(assert (=> b!79882 (= res!41672 (and (or (not ((_ is Cons!1507) lt!35795)) (bvsle (_1!1099 (h!2095 lt!35795)) (_1!1099 lt!35660))) ((_ is Cons!1507) lt!35795) (bvslt (_1!1099 (h!2095 lt!35795)) (_1!1099 lt!35660))))))

(declare-fun b!79883 () Bool)

(assert (=> b!79883 (= e!52157 (containsKey!139 (t!5148 lt!35795) (_1!1099 lt!35660)))))

(assert (= (and d!19487 (not res!41671)) b!79882))

(assert (= (and b!79882 res!41672) b!79883))

(declare-fun m!81081 () Bool)

(assert (=> b!79883 m!81081))

(assert (=> b!78485 d!19487))

(declare-fun d!19489 () Bool)

(assert (=> d!19489 (= (inRange!0 (ite c!12018 (index!3106 lt!36287) (index!3109 lt!36287)) (mask!6266 newMap!16)) (and (bvsge (ite c!12018 (index!3106 lt!36287) (index!3109 lt!36287)) #b00000000000000000000000000000000) (bvslt (ite c!12018 (index!3106 lt!36287) (index!3109 lt!36287)) (bvadd (mask!6266 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7199 d!19489))

(declare-fun d!19491 () Bool)

(assert (=> d!19491 (= (isEmpty!330 lt!36082) (isEmpty!332 (toList!732 lt!36082)))))

(declare-fun bs!3384 () Bool)

(assert (= bs!3384 d!19491))

(declare-fun m!81083 () Bool)

(assert (=> bs!3384 m!81083))

(assert (=> b!78217 d!19491))

(declare-fun d!19493 () Bool)

(declare-fun lt!36975 () Bool)

(assert (=> d!19493 (= lt!36975 (select (content!83 (toList!732 lt!36099)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!52158 () Bool)

(assert (=> d!19493 (= lt!36975 e!52158)))

(declare-fun res!41673 () Bool)

(assert (=> d!19493 (=> (not res!41673) (not e!52158))))

(assert (=> d!19493 (= res!41673 ((_ is Cons!1507) (toList!732 lt!36099)))))

(assert (=> d!19493 (= (contains!740 (toList!732 lt!36099) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!36975)))

(declare-fun b!79884 () Bool)

(declare-fun e!52159 () Bool)

(assert (=> b!79884 (= e!52158 e!52159)))

(declare-fun res!41674 () Bool)

(assert (=> b!79884 (=> res!41674 e!52159)))

(assert (=> b!79884 (= res!41674 (= (h!2095 (toList!732 lt!36099)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!79885 () Bool)

(assert (=> b!79885 (= e!52159 (contains!740 (t!5148 (toList!732 lt!36099)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!19493 res!41673) b!79884))

(assert (= (and b!79884 (not res!41674)) b!79885))

(declare-fun m!81085 () Bool)

(assert (=> d!19493 m!81085))

(declare-fun m!81087 () Bool)

(assert (=> d!19493 m!81087))

(declare-fun m!81089 () Bool)

(assert (=> b!79885 m!81089))

(assert (=> b!78229 d!19493))

(declare-fun d!19495 () Bool)

(declare-fun e!52160 () Bool)

(assert (=> d!19495 e!52160))

(declare-fun res!41675 () Bool)

(assert (=> d!19495 (=> (not res!41675) (not e!52160))))

(declare-fun lt!36979 () ListLongMap!1433)

(assert (=> d!19495 (= res!41675 (contains!739 lt!36979 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658))))))

(declare-fun lt!36977 () List!1511)

(assert (=> d!19495 (= lt!36979 (ListLongMap!1434 lt!36977))))

(declare-fun lt!36976 () Unit!2242)

(declare-fun lt!36978 () Unit!2242)

(assert (=> d!19495 (= lt!36976 lt!36978)))

(assert (=> d!19495 (= (getValueByKey!135 lt!36977 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658))))))

(assert (=> d!19495 (= lt!36978 (lemmaContainsTupThenGetReturnValue!55 lt!36977 (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658))))))

(assert (=> d!19495 (= lt!36977 (insertStrictlySorted!58 (toList!732 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16))) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658))))))

(assert (=> d!19495 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) lt!36979)))

(declare-fun b!79886 () Bool)

(declare-fun res!41676 () Bool)

(assert (=> b!79886 (=> (not res!41676) (not e!52160))))

(assert (=> b!79886 (= res!41676 (= (getValueByKey!135 (toList!732 lt!36979) (_1!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658))) (Some!140 (_2!1099 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)))))))

(declare-fun b!79887 () Bool)

(assert (=> b!79887 (= e!52160 (contains!740 (toList!732 lt!36979) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)))))

(assert (= (and d!19495 res!41675) b!79886))

(assert (= (and b!79886 res!41676) b!79887))

(declare-fun m!81091 () Bool)

(assert (=> d!19495 m!81091))

(declare-fun m!81093 () Bool)

(assert (=> d!19495 m!81093))

(declare-fun m!81095 () Bool)

(assert (=> d!19495 m!81095))

(declare-fun m!81097 () Bool)

(assert (=> d!19495 m!81097))

(declare-fun m!81099 () Bool)

(assert (=> b!79886 m!81099))

(declare-fun m!81101 () Bool)

(assert (=> b!79887 m!81101))

(assert (=> d!18579 d!19495))

(assert (=> d!18579 d!18409))

(declare-fun b!79888 () Bool)

(declare-fun e!52171 () Bool)

(declare-fun lt!36994 () ListLongMap!1433)

(assert (=> b!79888 (= e!52171 (= (apply!79 lt!36994 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)) (get!1177 (select (arr!1883 (_values!2254 newMap!16)) #b00000000000000000000000000000000) (dynLambda!337 (defaultEntry!2271 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2125 (_values!2254 newMap!16))))))

(assert (=> b!79888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79889 () Bool)

(declare-fun c!12456 () Bool)

(assert (=> b!79889 (= c!12456 (and (not (= (bvand lt!36000 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!36000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52170 () ListLongMap!1433)

(declare-fun e!52163 () ListLongMap!1433)

(assert (=> b!79889 (= e!52170 e!52163)))

(declare-fun b!79890 () Bool)

(declare-fun e!52169 () Bool)

(assert (=> b!79890 (= e!52169 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79891 () Bool)

(declare-fun e!52168 () Unit!2242)

(declare-fun lt!36997 () Unit!2242)

(assert (=> b!79891 (= e!52168 lt!36997)))

(declare-fun lt!36984 () ListLongMap!1433)

(assert (=> b!79891 (= lt!36984 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!36000 (zeroValue!2169 newMap!16) lt!35658 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36980 () (_ BitVec 64))

(assert (=> b!79891 (= lt!36980 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36991 () (_ BitVec 64))

(assert (=> b!79891 (= lt!36991 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36985 () Unit!2242)

(assert (=> b!79891 (= lt!36985 (addStillContains!55 lt!36984 lt!36980 (zeroValue!2169 newMap!16) lt!36991))))

(assert (=> b!79891 (contains!739 (+!103 lt!36984 (tuple2!2177 lt!36980 (zeroValue!2169 newMap!16))) lt!36991)))

(declare-fun lt!36982 () Unit!2242)

(assert (=> b!79891 (= lt!36982 lt!36985)))

(declare-fun lt!36983 () ListLongMap!1433)

(assert (=> b!79891 (= lt!36983 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!36000 (zeroValue!2169 newMap!16) lt!35658 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36992 () (_ BitVec 64))

(assert (=> b!79891 (= lt!36992 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36989 () (_ BitVec 64))

(assert (=> b!79891 (= lt!36989 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36990 () Unit!2242)

(assert (=> b!79891 (= lt!36990 (addApplyDifferent!55 lt!36983 lt!36992 lt!35658 lt!36989))))

(assert (=> b!79891 (= (apply!79 (+!103 lt!36983 (tuple2!2177 lt!36992 lt!35658)) lt!36989) (apply!79 lt!36983 lt!36989))))

(declare-fun lt!36981 () Unit!2242)

(assert (=> b!79891 (= lt!36981 lt!36990)))

(declare-fun lt!36988 () ListLongMap!1433)

(assert (=> b!79891 (= lt!36988 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!36000 (zeroValue!2169 newMap!16) lt!35658 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!37001 () (_ BitVec 64))

(assert (=> b!79891 (= lt!37001 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36999 () (_ BitVec 64))

(assert (=> b!79891 (= lt!36999 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37000 () Unit!2242)

(assert (=> b!79891 (= lt!37000 (addApplyDifferent!55 lt!36988 lt!37001 (zeroValue!2169 newMap!16) lt!36999))))

(assert (=> b!79891 (= (apply!79 (+!103 lt!36988 (tuple2!2177 lt!37001 (zeroValue!2169 newMap!16))) lt!36999) (apply!79 lt!36988 lt!36999))))

(declare-fun lt!36993 () Unit!2242)

(assert (=> b!79891 (= lt!36993 lt!37000)))

(declare-fun lt!36995 () ListLongMap!1433)

(assert (=> b!79891 (= lt!36995 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!36000 (zeroValue!2169 newMap!16) lt!35658 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun lt!36996 () (_ BitVec 64))

(assert (=> b!79891 (= lt!36996 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36998 () (_ BitVec 64))

(assert (=> b!79891 (= lt!36998 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79891 (= lt!36997 (addApplyDifferent!55 lt!36995 lt!36996 lt!35658 lt!36998))))

(assert (=> b!79891 (= (apply!79 (+!103 lt!36995 (tuple2!2177 lt!36996 lt!35658)) lt!36998) (apply!79 lt!36995 lt!36998))))

(declare-fun b!79893 () Bool)

(declare-fun e!52162 () Bool)

(declare-fun e!52164 () Bool)

(assert (=> b!79893 (= e!52162 e!52164)))

(declare-fun res!41679 () Bool)

(declare-fun call!7372 () Bool)

(assert (=> b!79893 (= res!41679 call!7372)))

(assert (=> b!79893 (=> (not res!41679) (not e!52164))))

(declare-fun bm!7364 () Bool)

(declare-fun call!7367 () ListLongMap!1433)

(declare-fun call!7371 () ListLongMap!1433)

(assert (=> bm!7364 (= call!7367 call!7371)))

(declare-fun b!79894 () Bool)

(assert (=> b!79894 (= e!52162 (not call!7372))))

(declare-fun b!79895 () Bool)

(declare-fun e!52167 () ListLongMap!1433)

(assert (=> b!79895 (= e!52167 e!52170)))

(declare-fun c!12457 () Bool)

(assert (=> b!79895 (= c!12457 (and (not (= (bvand lt!36000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!36000 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79896 () Bool)

(declare-fun call!7368 () ListLongMap!1433)

(assert (=> b!79896 (= e!52163 call!7368)))

(declare-fun b!79897 () Bool)

(declare-fun call!7370 () ListLongMap!1433)

(assert (=> b!79897 (= e!52163 call!7370)))

(declare-fun b!79898 () Bool)

(declare-fun res!41684 () Bool)

(declare-fun e!52173 () Bool)

(assert (=> b!79898 (=> (not res!41684) (not e!52173))))

(declare-fun e!52161 () Bool)

(assert (=> b!79898 (= res!41684 e!52161)))

(declare-fun c!12455 () Bool)

(assert (=> b!79898 (= c!12455 (not (= (bvand lt!36000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7365 () Bool)

(declare-fun call!7369 () Bool)

(assert (=> bm!7365 (= call!7369 (contains!739 lt!36994 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7366 () Bool)

(assert (=> bm!7366 (= call!7372 (contains!739 lt!36994 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7367 () Bool)

(assert (=> bm!7367 (= call!7371 (getCurrentListMapNoExtraKeys!67 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!36000 (zeroValue!2169 newMap!16) lt!35658 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(declare-fun b!79899 () Bool)

(declare-fun e!52172 () Bool)

(assert (=> b!79899 (= e!52172 (validKeyInArray!0 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7368 () Bool)

(assert (=> bm!7368 (= call!7370 call!7367)))

(declare-fun b!79900 () Bool)

(declare-fun e!52166 () Bool)

(assert (=> b!79900 (= e!52166 (= (apply!79 lt!36994 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2169 newMap!16)))))

(declare-fun b!79901 () Bool)

(declare-fun res!41685 () Bool)

(assert (=> b!79901 (=> (not res!41685) (not e!52173))))

(declare-fun e!52165 () Bool)

(assert (=> b!79901 (= res!41685 e!52165)))

(declare-fun res!41682 () Bool)

(assert (=> b!79901 (=> res!41682 e!52165)))

(assert (=> b!79901 (= res!41682 (not e!52172))))

(declare-fun res!41678 () Bool)

(assert (=> b!79901 (=> (not res!41678) (not e!52172))))

(assert (=> b!79901 (= res!41678 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79892 () Bool)

(declare-fun call!7373 () ListLongMap!1433)

(assert (=> b!79892 (= e!52167 (+!103 call!7373 (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)))))

(declare-fun d!19497 () Bool)

(assert (=> d!19497 e!52173))

(declare-fun res!41681 () Bool)

(assert (=> d!19497 (=> (not res!41681) (not e!52173))))

(assert (=> d!19497 (= res!41681 (or (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))))

(declare-fun lt!36986 () ListLongMap!1433)

(assert (=> d!19497 (= lt!36994 lt!36986)))

(declare-fun lt!36987 () Unit!2242)

(assert (=> d!19497 (= lt!36987 e!52168)))

(declare-fun c!12458 () Bool)

(assert (=> d!19497 (= c!12458 e!52169)))

(declare-fun res!41683 () Bool)

(assert (=> d!19497 (=> (not res!41683) (not e!52169))))

(assert (=> d!19497 (= res!41683 (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(assert (=> d!19497 (= lt!36986 e!52167)))

(declare-fun c!12459 () Bool)

(assert (=> d!19497 (= c!12459 (and (not (= (bvand lt!36000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!36000 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19497 (validMask!0 (mask!6266 newMap!16))))

(assert (=> d!19497 (= (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!36000 (zeroValue!2169 newMap!16) lt!35658 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) lt!36994)))

(declare-fun b!79902 () Bool)

(assert (=> b!79902 (= e!52161 (not call!7369))))

(declare-fun bm!7369 () Bool)

(assert (=> bm!7369 (= call!7373 (+!103 (ite c!12459 call!7371 (ite c!12457 call!7367 call!7370)) (ite (or c!12459 c!12457) (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658))))))

(declare-fun b!79903 () Bool)

(assert (=> b!79903 (= e!52170 call!7368)))

(declare-fun bm!7370 () Bool)

(assert (=> bm!7370 (= call!7368 call!7373)))

(declare-fun b!79904 () Bool)

(assert (=> b!79904 (= e!52165 e!52171)))

(declare-fun res!41680 () Bool)

(assert (=> b!79904 (=> (not res!41680) (not e!52171))))

(assert (=> b!79904 (= res!41680 (contains!739 lt!36994 (select (arr!1882 (_keys!3930 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79904 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79905 () Bool)

(assert (=> b!79905 (= e!52161 e!52166)))

(declare-fun res!41677 () Bool)

(assert (=> b!79905 (= res!41677 call!7369)))

(assert (=> b!79905 (=> (not res!41677) (not e!52166))))

(declare-fun b!79906 () Bool)

(assert (=> b!79906 (= e!52173 e!52162)))

(declare-fun c!12460 () Bool)

(assert (=> b!79906 (= c!12460 (not (= (bvand lt!36000 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79907 () Bool)

(declare-fun Unit!2322 () Unit!2242)

(assert (=> b!79907 (= e!52168 Unit!2322)))

(declare-fun b!79908 () Bool)

(assert (=> b!79908 (= e!52164 (= (apply!79 lt!36994 #b1000000000000000000000000000000000000000000000000000000000000000) lt!35658))))

(assert (= (and d!19497 c!12459) b!79892))

(assert (= (and d!19497 (not c!12459)) b!79895))

(assert (= (and b!79895 c!12457) b!79903))

(assert (= (and b!79895 (not c!12457)) b!79889))

(assert (= (and b!79889 c!12456) b!79896))

(assert (= (and b!79889 (not c!12456)) b!79897))

(assert (= (or b!79896 b!79897) bm!7368))

(assert (= (or b!79903 bm!7368) bm!7364))

(assert (= (or b!79903 b!79896) bm!7370))

(assert (= (or b!79892 bm!7364) bm!7367))

(assert (= (or b!79892 bm!7370) bm!7369))

(assert (= (and d!19497 res!41683) b!79890))

(assert (= (and d!19497 c!12458) b!79891))

(assert (= (and d!19497 (not c!12458)) b!79907))

(assert (= (and d!19497 res!41681) b!79901))

(assert (= (and b!79901 res!41678) b!79899))

(assert (= (and b!79901 (not res!41682)) b!79904))

(assert (= (and b!79904 res!41680) b!79888))

(assert (= (and b!79901 res!41685) b!79898))

(assert (= (and b!79898 c!12455) b!79905))

(assert (= (and b!79898 (not c!12455)) b!79902))

(assert (= (and b!79905 res!41677) b!79900))

(assert (= (or b!79905 b!79902) bm!7365))

(assert (= (and b!79898 res!41684) b!79906))

(assert (= (and b!79906 c!12460) b!79893))

(assert (= (and b!79906 (not c!12460)) b!79894))

(assert (= (and b!79893 res!41679) b!79908))

(assert (= (or b!79893 b!79894) bm!7366))

(declare-fun b_lambda!3537 () Bool)

(assert (=> (not b_lambda!3537) (not b!79888)))

(assert (=> b!79888 t!5160))

(declare-fun b_and!4873 () Bool)

(assert (= b_and!4869 (and (=> t!5160 result!2821) b_and!4873)))

(assert (=> b!79888 t!5162))

(declare-fun b_and!4875 () Bool)

(assert (= b_and!4871 (and (=> t!5162 result!2823) b_and!4875)))

(declare-fun m!81103 () Bool)

(assert (=> b!79900 m!81103))

(declare-fun m!81105 () Bool)

(assert (=> b!79891 m!81105))

(declare-fun m!81107 () Bool)

(assert (=> b!79891 m!81107))

(declare-fun m!81109 () Bool)

(assert (=> b!79891 m!81109))

(declare-fun m!81111 () Bool)

(assert (=> b!79891 m!81111))

(declare-fun m!81113 () Bool)

(assert (=> b!79891 m!81113))

(declare-fun m!81115 () Bool)

(assert (=> b!79891 m!81115))

(declare-fun m!81117 () Bool)

(assert (=> b!79891 m!81117))

(declare-fun m!81119 () Bool)

(assert (=> b!79891 m!81119))

(declare-fun m!81121 () Bool)

(assert (=> b!79891 m!81121))

(declare-fun m!81123 () Bool)

(assert (=> b!79891 m!81123))

(declare-fun m!81125 () Bool)

(assert (=> b!79891 m!81125))

(declare-fun m!81127 () Bool)

(assert (=> b!79891 m!81127))

(declare-fun m!81129 () Bool)

(assert (=> b!79891 m!81129))

(assert (=> b!79891 m!81125))

(assert (=> b!79891 m!81123))

(declare-fun m!81131 () Bool)

(assert (=> b!79891 m!81131))

(assert (=> b!79891 m!77965))

(assert (=> b!79891 m!81109))

(declare-fun m!81133 () Bool)

(assert (=> b!79891 m!81133))

(assert (=> b!79891 m!81119))

(declare-fun m!81135 () Bool)

(assert (=> b!79891 m!81135))

(declare-fun m!81137 () Bool)

(assert (=> bm!7366 m!81137))

(assert (=> bm!7367 m!81121))

(declare-fun m!81139 () Bool)

(assert (=> b!79892 m!81139))

(assert (=> b!79890 m!77965))

(assert (=> b!79890 m!77965))

(assert (=> b!79890 m!77975))

(assert (=> d!19497 m!77977))

(declare-fun m!81141 () Bool)

(assert (=> bm!7365 m!81141))

(declare-fun m!81143 () Bool)

(assert (=> bm!7369 m!81143))

(assert (=> b!79888 m!77983))

(assert (=> b!79888 m!77985))

(assert (=> b!79888 m!77983))

(assert (=> b!79888 m!77987))

(assert (=> b!79888 m!77965))

(declare-fun m!81145 () Bool)

(assert (=> b!79888 m!81145))

(assert (=> b!79888 m!77985))

(assert (=> b!79888 m!77965))

(assert (=> b!79899 m!77965))

(assert (=> b!79899 m!77965))

(assert (=> b!79899 m!77975))

(declare-fun m!81147 () Bool)

(assert (=> b!79908 m!81147))

(assert (=> b!79904 m!77965))

(assert (=> b!79904 m!77965))

(declare-fun m!81149 () Bool)

(assert (=> b!79904 m!81149))

(assert (=> d!18579 d!19497))

(assert (=> d!18579 d!18739))

(declare-fun d!19499 () Bool)

(assert (=> d!19499 (= (+!103 (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35658)) (getCurrentListMap!421 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) lt!36000 (zeroValue!2169 newMap!16) lt!35658 #b00000000000000000000000000000000 (defaultEntry!2271 newMap!16)))))

(assert (=> d!19499 true))

(declare-fun _$8!67 () Unit!2242)

(assert (=> d!19499 (= (choose!470 (_keys!3930 newMap!16) (_values!2254 newMap!16) (mask!6266 newMap!16) (extraKeys!2122 newMap!16) lt!36000 (zeroValue!2169 newMap!16) (minValue!2169 newMap!16) lt!35658 (defaultEntry!2271 newMap!16)) _$8!67)))

(declare-fun bs!3385 () Bool)

(assert (= bs!3385 d!19499))

(assert (=> bs!3385 m!77787))

(assert (=> bs!3385 m!77787))

(assert (=> bs!3385 m!78647))

(assert (=> bs!3385 m!78651))

(assert (=> d!18579 d!19499))

(declare-fun d!19501 () Bool)

(declare-fun lt!37002 () Bool)

(assert (=> d!19501 (= lt!37002 (select (content!83 lt!35815) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(declare-fun e!52174 () Bool)

(assert (=> d!19501 (= lt!37002 e!52174)))

(declare-fun res!41686 () Bool)

(assert (=> d!19501 (=> (not res!41686) (not e!52174))))

(assert (=> d!19501 (= res!41686 ((_ is Cons!1507) lt!35815))))

(assert (=> d!19501 (= (contains!740 lt!35815 (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))) lt!37002)))

(declare-fun b!79909 () Bool)

(declare-fun e!52175 () Bool)

(assert (=> b!79909 (= e!52174 e!52175)))

(declare-fun res!41687 () Bool)

(assert (=> b!79909 (=> res!41687 e!52175)))

(assert (=> b!79909 (= res!41687 (= (h!2095 lt!35815) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(declare-fun b!79910 () Bool)

(assert (=> b!79910 (= e!52175 (contains!740 (t!5148 lt!35815) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(assert (= (and d!19501 res!41686) b!79909))

(assert (= (and b!79909 (not res!41687)) b!79910))

(declare-fun m!81151 () Bool)

(assert (=> d!19501 m!81151))

(declare-fun m!81153 () Bool)

(assert (=> d!19501 m!81153))

(declare-fun m!81155 () Bool)

(assert (=> b!79910 m!81155))

(assert (=> b!78580 d!19501))

(assert (=> b!78480 d!19465))

(assert (=> b!78480 d!18637))

(declare-fun d!19503 () Bool)

(assert (=> d!19503 (= (apply!79 lt!36359 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1180 (getValueByKey!135 (toList!732 lt!36359) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3386 () Bool)

(assert (= bs!3386 d!19503))

(assert (=> bs!3386 m!79749))

(assert (=> bs!3386 m!79749))

(declare-fun m!81157 () Bool)

(assert (=> bs!3386 m!81157))

(assert (=> b!78532 d!19503))

(declare-fun b!79911 () Bool)

(declare-fun e!52176 () Option!141)

(assert (=> b!79911 (= e!52176 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36303)))))))

(declare-fun b!79913 () Bool)

(declare-fun e!52177 () Option!141)

(assert (=> b!79913 (= e!52177 (getValueByKey!135 (t!5148 (toList!732 lt!36303)) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!19505 () Bool)

(declare-fun c!12461 () Bool)

(assert (=> d!19505 (= c!12461 (and ((_ is Cons!1507) (toList!732 lt!36303)) (= (_1!1099 (h!2095 (toList!732 lt!36303))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19505 (= (getValueByKey!135 (toList!732 lt!36303) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!52176)))

(declare-fun b!79914 () Bool)

(assert (=> b!79914 (= e!52177 None!139)))

(declare-fun b!79912 () Bool)

(assert (=> b!79912 (= e!52176 e!52177)))

(declare-fun c!12462 () Bool)

(assert (=> b!79912 (= c!12462 (and ((_ is Cons!1507) (toList!732 lt!36303)) (not (= (_1!1099 (h!2095 (toList!732 lt!36303))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19505 c!12461) b!79911))

(assert (= (and d!19505 (not c!12461)) b!79912))

(assert (= (and b!79912 c!12462) b!79913))

(assert (= (and b!79912 (not c!12462)) b!79914))

(declare-fun m!81159 () Bool)

(assert (=> b!79913 m!81159))

(assert (=> b!78441 d!19505))

(assert (=> b!78349 d!18539))

(declare-fun d!19507 () Bool)

(declare-fun e!52179 () Bool)

(assert (=> d!19507 e!52179))

(declare-fun res!41688 () Bool)

(assert (=> d!19507 (=> res!41688 e!52179)))

(declare-fun lt!37005 () Bool)

(assert (=> d!19507 (= res!41688 (not lt!37005))))

(declare-fun lt!37006 () Bool)

(assert (=> d!19507 (= lt!37005 lt!37006)))

(declare-fun lt!37003 () Unit!2242)

(declare-fun e!52178 () Unit!2242)

(assert (=> d!19507 (= lt!37003 e!52178)))

(declare-fun c!12463 () Bool)

(assert (=> d!19507 (= c!12463 lt!37006)))

(assert (=> d!19507 (= lt!37006 (containsKey!139 (toList!732 lt!36281) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> d!19507 (= (contains!739 lt!36281 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!37005)))

(declare-fun b!79915 () Bool)

(declare-fun lt!37004 () Unit!2242)

(assert (=> b!79915 (= e!52178 lt!37004)))

(assert (=> b!79915 (= lt!37004 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!36281) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(assert (=> b!79915 (isDefined!89 (getValueByKey!135 (toList!732 lt!36281) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79916 () Bool)

(declare-fun Unit!2323 () Unit!2242)

(assert (=> b!79916 (= e!52178 Unit!2323)))

(declare-fun b!79917 () Bool)

(assert (=> b!79917 (= e!52179 (isDefined!89 (getValueByKey!135 (toList!732 lt!36281) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19507 c!12463) b!79915))

(assert (= (and d!19507 (not c!12463)) b!79916))

(assert (= (and d!19507 (not res!41688)) b!79917))

(declare-fun m!81161 () Bool)

(assert (=> d!19507 m!81161))

(declare-fun m!81163 () Bool)

(assert (=> b!79915 m!81163))

(assert (=> b!79915 m!78501))

(assert (=> b!79915 m!78501))

(declare-fun m!81165 () Bool)

(assert (=> b!79915 m!81165))

(assert (=> b!79917 m!78501))

(assert (=> b!79917 m!78501))

(assert (=> b!79917 m!81165))

(assert (=> d!18537 d!19507))

(declare-fun b!79918 () Bool)

(declare-fun e!52180 () Option!141)

(assert (=> b!79918 (= e!52180 (Some!140 (_2!1099 (h!2095 lt!36279))))))

(declare-fun e!52181 () Option!141)

(declare-fun b!79920 () Bool)

(assert (=> b!79920 (= e!52181 (getValueByKey!135 (t!5148 lt!36279) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun c!12464 () Bool)

(declare-fun d!19509 () Bool)

(assert (=> d!19509 (= c!12464 (and ((_ is Cons!1507) lt!36279) (= (_1!1099 (h!2095 lt!36279)) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19509 (= (getValueByKey!135 lt!36279 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!52180)))

(declare-fun b!79921 () Bool)

(assert (=> b!79921 (= e!52181 None!139)))

(declare-fun b!79919 () Bool)

(assert (=> b!79919 (= e!52180 e!52181)))

(declare-fun c!12465 () Bool)

(assert (=> b!79919 (= c!12465 (and ((_ is Cons!1507) lt!36279) (not (= (_1!1099 (h!2095 lt!36279)) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19509 c!12464) b!79918))

(assert (= (and d!19509 (not c!12464)) b!79919))

(assert (= (and b!79919 c!12465) b!79920))

(assert (= (and b!79919 (not c!12465)) b!79921))

(declare-fun m!81167 () Bool)

(assert (=> b!79920 m!81167))

(assert (=> d!18537 d!19509))

(declare-fun d!19511 () Bool)

(assert (=> d!19511 (= (getValueByKey!135 lt!36279 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) (Some!140 (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun lt!37007 () Unit!2242)

(assert (=> d!19511 (= lt!37007 (choose!462 lt!36279 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!52182 () Bool)

(assert (=> d!19511 e!52182))

(declare-fun res!41689 () Bool)

(assert (=> d!19511 (=> (not res!41689) (not e!52182))))

(assert (=> d!19511 (= res!41689 (isStrictlySorted!290 lt!36279))))

(assert (=> d!19511 (= (lemmaContainsTupThenGetReturnValue!55 lt!36279 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!37007)))

(declare-fun b!79922 () Bool)

(declare-fun res!41690 () Bool)

(assert (=> b!79922 (=> (not res!41690) (not e!52182))))

(assert (=> b!79922 (= res!41690 (containsKey!139 lt!36279 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79923 () Bool)

(assert (=> b!79923 (= e!52182 (contains!740 lt!36279 (tuple2!2177 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19511 res!41689) b!79922))

(assert (= (and b!79922 res!41690) b!79923))

(assert (=> d!19511 m!78495))

(declare-fun m!81169 () Bool)

(assert (=> d!19511 m!81169))

(declare-fun m!81171 () Bool)

(assert (=> d!19511 m!81171))

(declare-fun m!81173 () Bool)

(assert (=> b!79922 m!81173))

(declare-fun m!81175 () Bool)

(assert (=> b!79923 m!81175))

(assert (=> d!18537 d!19511))

(declare-fun b!79924 () Bool)

(declare-fun e!52184 () List!1511)

(declare-fun call!7374 () List!1511)

(assert (=> b!79924 (= e!52184 call!7374)))

(declare-fun b!79925 () Bool)

(declare-fun res!41692 () Bool)

(declare-fun e!52186 () Bool)

(assert (=> b!79925 (=> (not res!41692) (not e!52186))))

(declare-fun lt!37008 () List!1511)

(assert (=> b!79925 (= res!41692 (containsKey!139 lt!37008 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun e!52187 () List!1511)

(declare-fun call!7375 () List!1511)

(declare-fun bm!7371 () Bool)

(declare-fun c!12467 () Bool)

(assert (=> bm!7371 (= call!7375 ($colon$colon!68 e!52187 (ite c!12467 (h!2095 (toList!732 lt!35891)) (tuple2!2177 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(declare-fun c!12468 () Bool)

(assert (=> bm!7371 (= c!12468 c!12467)))

(declare-fun b!79926 () Bool)

(declare-fun c!12466 () Bool)

(declare-fun c!12469 () Bool)

(assert (=> b!79926 (= e!52187 (ite c!12466 (t!5148 (toList!732 lt!35891)) (ite c!12469 (Cons!1507 (h!2095 (toList!732 lt!35891)) (t!5148 (toList!732 lt!35891))) Nil!1508)))))

(declare-fun d!19513 () Bool)

(assert (=> d!19513 e!52186))

(declare-fun res!41691 () Bool)

(assert (=> d!19513 (=> (not res!41691) (not e!52186))))

(assert (=> d!19513 (= res!41691 (isStrictlySorted!290 lt!37008))))

(declare-fun e!52183 () List!1511)

(assert (=> d!19513 (= lt!37008 e!52183)))

(assert (=> d!19513 (= c!12467 (and ((_ is Cons!1507) (toList!732 lt!35891)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35891))) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19513 (isStrictlySorted!290 (toList!732 lt!35891))))

(assert (=> d!19513 (= (insertStrictlySorted!58 (toList!732 lt!35891) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) lt!37008)))

(declare-fun bm!7372 () Bool)

(declare-fun call!7376 () List!1511)

(assert (=> bm!7372 (= call!7376 call!7374)))

(declare-fun b!79927 () Bool)

(assert (=> b!79927 (= c!12469 (and ((_ is Cons!1507) (toList!732 lt!35891)) (bvsgt (_1!1099 (h!2095 (toList!732 lt!35891))) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun e!52185 () List!1511)

(assert (=> b!79927 (= e!52184 e!52185)))

(declare-fun b!79928 () Bool)

(assert (=> b!79928 (= e!52185 call!7376)))

(declare-fun b!79929 () Bool)

(assert (=> b!79929 (= e!52183 e!52184)))

(assert (=> b!79929 (= c!12466 (and ((_ is Cons!1507) (toList!732 lt!35891)) (= (_1!1099 (h!2095 (toList!732 lt!35891))) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(declare-fun b!79930 () Bool)

(assert (=> b!79930 (= e!52185 call!7376)))

(declare-fun bm!7373 () Bool)

(assert (=> bm!7373 (= call!7374 call!7375)))

(declare-fun b!79931 () Bool)

(assert (=> b!79931 (= e!52187 (insertStrictlySorted!58 (t!5148 (toList!732 lt!35891)) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun b!79932 () Bool)

(assert (=> b!79932 (= e!52183 call!7375)))

(declare-fun b!79933 () Bool)

(assert (=> b!79933 (= e!52186 (contains!740 lt!37008 (tuple2!2177 (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) (_2!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (= (and d!19513 c!12467) b!79932))

(assert (= (and d!19513 (not c!12467)) b!79929))

(assert (= (and b!79929 c!12466) b!79924))

(assert (= (and b!79929 (not c!12466)) b!79927))

(assert (= (and b!79927 c!12469) b!79930))

(assert (= (and b!79927 (not c!12469)) b!79928))

(assert (= (or b!79930 b!79928) bm!7372))

(assert (= (or b!79924 bm!7372) bm!7373))

(assert (= (or b!79932 bm!7373) bm!7371))

(assert (= (and bm!7371 c!12468) b!79931))

(assert (= (and bm!7371 (not c!12468)) b!79926))

(assert (= (and d!19513 res!41691) b!79925))

(assert (= (and b!79925 res!41692) b!79933))

(declare-fun m!81177 () Bool)

(assert (=> b!79931 m!81177))

(declare-fun m!81179 () Bool)

(assert (=> bm!7371 m!81179))

(declare-fun m!81181 () Bool)

(assert (=> b!79925 m!81181))

(declare-fun m!81183 () Bool)

(assert (=> b!79933 m!81183))

(declare-fun m!81185 () Bool)

(assert (=> d!19513 m!81185))

(declare-fun m!81187 () Bool)

(assert (=> d!19513 m!81187))

(assert (=> d!18537 d!19513))

(assert (=> b!78356 d!19309))

(assert (=> b!78356 d!19223))

(assert (=> b!78256 d!18741))

(declare-fun d!19515 () Bool)

(declare-fun res!41693 () Bool)

(declare-fun e!52188 () Bool)

(assert (=> d!19515 (=> res!41693 e!52188)))

(assert (=> d!19515 (= res!41693 (and ((_ is Cons!1507) lt!36060) (= (_1!1099 (h!2095 lt!36060)) (_1!1099 lt!35659))))))

(assert (=> d!19515 (= (containsKey!139 lt!36060 (_1!1099 lt!35659)) e!52188)))

(declare-fun b!79934 () Bool)

(declare-fun e!52189 () Bool)

(assert (=> b!79934 (= e!52188 e!52189)))

(declare-fun res!41694 () Bool)

(assert (=> b!79934 (=> (not res!41694) (not e!52189))))

(assert (=> b!79934 (= res!41694 (and (or (not ((_ is Cons!1507) lt!36060)) (bvsle (_1!1099 (h!2095 lt!36060)) (_1!1099 lt!35659))) ((_ is Cons!1507) lt!36060) (bvslt (_1!1099 (h!2095 lt!36060)) (_1!1099 lt!35659))))))

(declare-fun b!79935 () Bool)

(assert (=> b!79935 (= e!52189 (containsKey!139 (t!5148 lt!36060) (_1!1099 lt!35659)))))

(assert (= (and d!19515 (not res!41693)) b!79934))

(assert (= (and b!79934 res!41694) b!79935))

(declare-fun m!81189 () Bool)

(assert (=> b!79935 m!81189))

(assert (=> b!78177 d!19515))

(assert (=> b!78403 d!19317))

(assert (=> b!78403 d!18641))

(declare-fun b!79936 () Bool)

(declare-fun e!52190 () Option!141)

(assert (=> b!79936 (= e!52190 (Some!140 (_2!1099 (h!2095 (t!5148 (toList!732 lt!35664))))))))

(declare-fun e!52191 () Option!141)

(declare-fun b!79938 () Bool)

(assert (=> b!79938 (= e!52191 (getValueByKey!135 (t!5148 (t!5148 (toList!732 lt!35664))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun d!19517 () Bool)

(declare-fun c!12470 () Bool)

(assert (=> d!19517 (= c!12470 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35664))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35664)))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (=> d!19517 (= (getValueByKey!135 (t!5148 (toList!732 lt!35664)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) e!52190)))

(declare-fun b!79939 () Bool)

(assert (=> b!79939 (= e!52191 None!139)))

(declare-fun b!79937 () Bool)

(assert (=> b!79937 (= e!52190 e!52191)))

(declare-fun c!12471 () Bool)

(assert (=> b!79937 (= c!12471 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35664))) (not (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35664)))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))))

(assert (= (and d!19517 c!12470) b!79936))

(assert (= (and d!19517 (not c!12470)) b!79937))

(assert (= (and b!79937 c!12471) b!79938))

(assert (= (and b!79937 (not c!12471)) b!79939))

(assert (=> b!79938 m!77463))

(declare-fun m!81191 () Bool)

(assert (=> b!79938 m!81191))

(assert (=> b!78080 d!19517))

(declare-fun b!79940 () Bool)

(declare-fun e!52192 () Option!141)

(assert (=> b!79940 (= e!52192 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36311)))))))

(declare-fun b!79942 () Bool)

(declare-fun e!52193 () Option!141)

(assert (=> b!79942 (= e!52193 (getValueByKey!135 (t!5148 (toList!732 lt!36311)) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!19519 () Bool)

(declare-fun c!12472 () Bool)

(assert (=> d!19519 (= c!12472 (and ((_ is Cons!1507) (toList!732 lt!36311)) (= (_1!1099 (h!2095 (toList!732 lt!36311))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19519 (= (getValueByKey!135 (toList!732 lt!36311) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!52192)))

(declare-fun b!79943 () Bool)

(assert (=> b!79943 (= e!52193 None!139)))

(declare-fun b!79941 () Bool)

(assert (=> b!79941 (= e!52192 e!52193)))

(declare-fun c!12473 () Bool)

(assert (=> b!79941 (= c!12473 (and ((_ is Cons!1507) (toList!732 lt!36311)) (not (= (_1!1099 (h!2095 (toList!732 lt!36311))) (_1!1099 (tuple2!2177 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19519 c!12472) b!79940))

(assert (= (and d!19519 (not c!12472)) b!79941))

(assert (= (and b!79941 c!12473) b!79942))

(assert (= (and b!79941 (not c!12473)) b!79943))

(declare-fun m!81193 () Bool)

(assert (=> b!79942 m!81193))

(assert (=> b!78445 d!19519))

(declare-fun d!19521 () Bool)

(assert (=> d!19521 (= (get!1180 (getValueByKey!135 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2590 (getValueByKey!135 (toList!732 lt!35901) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18411 d!19521))

(assert (=> d!18411 d!19119))

(declare-fun d!19523 () Bool)

(declare-fun res!41695 () Bool)

(declare-fun e!52194 () Bool)

(assert (=> d!19523 (=> res!41695 e!52194)))

(assert (=> d!19523 (= res!41695 (= (select (arr!1882 (_keys!3930 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!19523 (= (arrayContainsKey!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!52194)))

(declare-fun b!79944 () Bool)

(declare-fun e!52195 () Bool)

(assert (=> b!79944 (= e!52194 e!52195)))

(declare-fun res!41696 () Bool)

(assert (=> b!79944 (=> (not res!41696) (not e!52195))))

(assert (=> b!79944 (= res!41696 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2124 (_keys!3930 newMap!16))))))

(declare-fun b!79945 () Bool)

(assert (=> b!79945 (= e!52195 (arrayContainsKey!0 (_keys!3930 newMap!16) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19523 (not res!41695)) b!79944))

(assert (= (and b!79944 res!41696) b!79945))

(assert (=> d!19523 m!80135))

(assert (=> b!79945 m!77463))

(declare-fun m!81195 () Bool)

(assert (=> b!79945 m!81195))

(assert (=> b!78421 d!19523))

(declare-fun d!19525 () Bool)

(assert (=> d!19525 (isDefined!89 (getValueByKey!135 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!37009 () Unit!2242)

(assert (=> d!19525 (= lt!37009 (choose!463 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!52196 () Bool)

(assert (=> d!19525 e!52196))

(declare-fun res!41697 () Bool)

(assert (=> d!19525 (=> (not res!41697) (not e!52196))))

(assert (=> d!19525 (= res!41697 (isStrictlySorted!290 (toList!732 lt!35901)))))

(assert (=> d!19525 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!37009)))

(declare-fun b!79946 () Bool)

(assert (=> b!79946 (= e!52196 (containsKey!139 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19525 res!41697) b!79946))

(assert (=> d!19525 m!77747))

(assert (=> d!19525 m!78023))

(assert (=> d!19525 m!78023))

(assert (=> d!19525 m!78105))

(assert (=> d!19525 m!77747))

(declare-fun m!81197 () Bool)

(assert (=> d!19525 m!81197))

(assert (=> d!19525 m!80223))

(assert (=> b!79946 m!77747))

(assert (=> b!79946 m!78101))

(assert (=> b!78201 d!19525))

(assert (=> b!78201 d!18809))

(assert (=> b!78201 d!18811))

(declare-fun d!19527 () Bool)

(declare-fun lt!37010 () Bool)

(assert (=> d!19527 (= lt!37010 (select (content!83 (t!5148 (toList!732 lt!35842))) lt!35659))))

(declare-fun e!52197 () Bool)

(assert (=> d!19527 (= lt!37010 e!52197)))

(declare-fun res!41698 () Bool)

(assert (=> d!19527 (=> (not res!41698) (not e!52197))))

(assert (=> d!19527 (= res!41698 ((_ is Cons!1507) (t!5148 (toList!732 lt!35842))))))

(assert (=> d!19527 (= (contains!740 (t!5148 (toList!732 lt!35842)) lt!35659) lt!37010)))

(declare-fun b!79947 () Bool)

(declare-fun e!52198 () Bool)

(assert (=> b!79947 (= e!52197 e!52198)))

(declare-fun res!41699 () Bool)

(assert (=> b!79947 (=> res!41699 e!52198)))

(assert (=> b!79947 (= res!41699 (= (h!2095 (t!5148 (toList!732 lt!35842))) lt!35659))))

(declare-fun b!79948 () Bool)

(assert (=> b!79948 (= e!52198 (contains!740 (t!5148 (t!5148 (toList!732 lt!35842))) lt!35659))))

(assert (= (and d!19527 res!41698) b!79947))

(assert (= (and b!79947 (not res!41699)) b!79948))

(assert (=> d!19527 m!79503))

(declare-fun m!81199 () Bool)

(assert (=> d!19527 m!81199))

(declare-fun m!81201 () Bool)

(assert (=> b!79948 m!81201))

(assert (=> b!78605 d!19527))

(declare-fun b!79949 () Bool)

(declare-fun e!52199 () Option!141)

(assert (=> b!79949 (= e!52199 (Some!140 (_2!1099 (h!2095 (t!5148 (toList!732 lt!35842))))))))

(declare-fun b!79951 () Bool)

(declare-fun e!52200 () Option!141)

(assert (=> b!79951 (= e!52200 (getValueByKey!135 (t!5148 (t!5148 (toList!732 lt!35842))) (_1!1099 lt!35659)))))

(declare-fun d!19529 () Bool)

(declare-fun c!12474 () Bool)

(assert (=> d!19529 (= c!12474 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35842))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35842)))) (_1!1099 lt!35659))))))

(assert (=> d!19529 (= (getValueByKey!135 (t!5148 (toList!732 lt!35842)) (_1!1099 lt!35659)) e!52199)))

(declare-fun b!79952 () Bool)

(assert (=> b!79952 (= e!52200 None!139)))

(declare-fun b!79950 () Bool)

(assert (=> b!79950 (= e!52199 e!52200)))

(declare-fun c!12475 () Bool)

(assert (=> b!79950 (= c!12475 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35842))) (not (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35842)))) (_1!1099 lt!35659)))))))

(assert (= (and d!19529 c!12474) b!79949))

(assert (= (and d!19529 (not c!12474)) b!79950))

(assert (= (and b!79950 c!12475) b!79951))

(assert (= (and b!79950 (not c!12475)) b!79952))

(declare-fun m!81203 () Bool)

(assert (=> b!79951 m!81203))

(assert (=> b!78277 d!19529))

(declare-fun d!19531 () Bool)

(declare-fun res!41700 () Bool)

(declare-fun e!52201 () Bool)

(assert (=> d!19531 (=> res!41700 e!52201)))

(assert (=> d!19531 (= res!41700 (and ((_ is Cons!1507) (toList!732 lt!35901)) (= (_1!1099 (h!2095 (toList!732 lt!35901))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19531 (= (containsKey!139 (toList!732 lt!35901) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!52201)))

(declare-fun b!79953 () Bool)

(declare-fun e!52202 () Bool)

(assert (=> b!79953 (= e!52201 e!52202)))

(declare-fun res!41701 () Bool)

(assert (=> b!79953 (=> (not res!41701) (not e!52202))))

(assert (=> b!79953 (= res!41701 (and (or (not ((_ is Cons!1507) (toList!732 lt!35901))) (bvsle (_1!1099 (h!2095 (toList!732 lt!35901))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1507) (toList!732 lt!35901)) (bvslt (_1!1099 (h!2095 (toList!732 lt!35901))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!79954 () Bool)

(assert (=> b!79954 (= e!52202 (containsKey!139 (t!5148 (toList!732 lt!35901)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19531 (not res!41700)) b!79953))

(assert (= (and b!79953 res!41701) b!79954))

(assert (=> b!79954 m!77747))

(declare-fun m!81205 () Bool)

(assert (=> b!79954 m!81205))

(assert (=> d!18453 d!19531))

(declare-fun d!19533 () Bool)

(declare-fun e!52204 () Bool)

(assert (=> d!19533 e!52204))

(declare-fun res!41702 () Bool)

(assert (=> d!19533 (=> res!41702 e!52204)))

(declare-fun lt!37013 () Bool)

(assert (=> d!19533 (= res!41702 (not lt!37013))))

(declare-fun lt!37014 () Bool)

(assert (=> d!19533 (= lt!37013 lt!37014)))

(declare-fun lt!37011 () Unit!2242)

(declare-fun e!52203 () Unit!2242)

(assert (=> d!19533 (= lt!37011 e!52203)))

(declare-fun c!12476 () Bool)

(assert (=> d!19533 (= c!12476 lt!37014)))

(assert (=> d!19533 (= lt!37014 (containsKey!139 (toList!732 (map!1173 (_2!1098 lt!36218))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> d!19533 (= (contains!739 (map!1173 (_2!1098 lt!36218)) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)) lt!37013)))

(declare-fun b!79955 () Bool)

(declare-fun lt!37012 () Unit!2242)

(assert (=> b!79955 (= e!52203 lt!37012)))

(assert (=> b!79955 (= lt!37012 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (map!1173 (_2!1098 lt!36218))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(assert (=> b!79955 (isDefined!89 (getValueByKey!135 (toList!732 (map!1173 (_2!1098 lt!36218))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355)))))

(declare-fun b!79956 () Bool)

(declare-fun Unit!2324 () Unit!2242)

(assert (=> b!79956 (= e!52203 Unit!2324)))

(declare-fun b!79957 () Bool)

(assert (=> b!79957 (= e!52204 (isDefined!89 (getValueByKey!135 (toList!732 (map!1173 (_2!1098 lt!36218))) (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) from!355))))))

(assert (= (and d!19533 c!12476) b!79955))

(assert (= (and d!19533 (not c!12476)) b!79956))

(assert (= (and d!19533 (not res!41702)) b!79957))

(assert (=> d!19533 m!77463))

(declare-fun m!81207 () Bool)

(assert (=> d!19533 m!81207))

(assert (=> b!79955 m!77463))

(declare-fun m!81209 () Bool)

(assert (=> b!79955 m!81209))

(assert (=> b!79955 m!77463))

(declare-fun m!81211 () Bool)

(assert (=> b!79955 m!81211))

(assert (=> b!79955 m!81211))

(declare-fun m!81213 () Bool)

(assert (=> b!79955 m!81213))

(assert (=> b!79957 m!77463))

(assert (=> b!79957 m!81211))

(assert (=> b!79957 m!81211))

(assert (=> b!79957 m!81213))

(assert (=> b!78336 d!19533))

(assert (=> b!78336 d!18985))

(declare-fun d!19535 () Bool)

(declare-fun lt!37015 () Bool)

(assert (=> d!19535 (= lt!37015 (select (content!83 lt!35791) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun e!52205 () Bool)

(assert (=> d!19535 (= lt!37015 e!52205)))

(declare-fun res!41703 () Bool)

(assert (=> d!19535 (=> (not res!41703) (not e!52205))))

(assert (=> d!19535 (= res!41703 ((_ is Cons!1507) lt!35791))))

(assert (=> d!19535 (= (contains!740 lt!35791 (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))) lt!37015)))

(declare-fun b!79958 () Bool)

(declare-fun e!52206 () Bool)

(assert (=> b!79958 (= e!52205 e!52206)))

(declare-fun res!41704 () Bool)

(assert (=> b!79958 (=> res!41704 e!52206)))

(assert (=> b!79958 (= res!41704 (= (h!2095 lt!35791) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(declare-fun b!79959 () Bool)

(assert (=> b!79959 (= e!52206 (contains!740 (t!5148 lt!35791) (tuple2!2177 (_1!1099 lt!35660) (_2!1099 lt!35660))))))

(assert (= (and d!19535 res!41703) b!79958))

(assert (= (and b!79958 (not res!41704)) b!79959))

(declare-fun m!81215 () Bool)

(assert (=> d!19535 m!81215))

(declare-fun m!81217 () Bool)

(assert (=> d!19535 m!81217))

(declare-fun m!81219 () Bool)

(assert (=> b!79959 m!81219))

(assert (=> b!78136 d!19535))

(assert (=> bm!7155 d!19163))

(declare-fun b!79960 () Bool)

(declare-fun e!52207 () Option!141)

(assert (=> b!79960 (= e!52207 (Some!140 (_2!1099 (h!2095 (t!5148 (toList!732 lt!35793))))))))

(declare-fun b!79962 () Bool)

(declare-fun e!52208 () Option!141)

(assert (=> b!79962 (= e!52208 (getValueByKey!135 (t!5148 (t!5148 (toList!732 lt!35793))) (_1!1099 lt!35660)))))

(declare-fun d!19537 () Bool)

(declare-fun c!12477 () Bool)

(assert (=> d!19537 (= c!12477 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35793))) (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35793)))) (_1!1099 lt!35660))))))

(assert (=> d!19537 (= (getValueByKey!135 (t!5148 (toList!732 lt!35793)) (_1!1099 lt!35660)) e!52207)))

(declare-fun b!79963 () Bool)

(assert (=> b!79963 (= e!52208 None!139)))

(declare-fun b!79961 () Bool)

(assert (=> b!79961 (= e!52207 e!52208)))

(declare-fun c!12478 () Bool)

(assert (=> b!79961 (= c!12478 (and ((_ is Cons!1507) (t!5148 (toList!732 lt!35793))) (not (= (_1!1099 (h!2095 (t!5148 (toList!732 lt!35793)))) (_1!1099 lt!35660)))))))

(assert (= (and d!19537 c!12477) b!79960))

(assert (= (and d!19537 (not c!12477)) b!79961))

(assert (= (and b!79961 c!12478) b!79962))

(assert (= (and b!79961 (not c!12478)) b!79963))

(declare-fun m!81221 () Bool)

(assert (=> b!79962 m!81221))

(assert (=> b!78551 d!19537))

(assert (=> b!78615 d!19355))

(assert (=> b!78615 d!19357))

(declare-fun d!19539 () Bool)

(declare-fun lt!37016 () Bool)

(assert (=> d!19539 (= lt!37016 (select (content!83 lt!35810) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(declare-fun e!52209 () Bool)

(assert (=> d!19539 (= lt!37016 e!52209)))

(declare-fun res!41705 () Bool)

(assert (=> d!19539 (=> (not res!41705) (not e!52209))))

(assert (=> d!19539 (= res!41705 ((_ is Cons!1507) lt!35810))))

(assert (=> d!19539 (= (contains!740 lt!35810 (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))) lt!37016)))

(declare-fun b!79964 () Bool)

(declare-fun e!52210 () Bool)

(assert (=> b!79964 (= e!52209 e!52210)))

(declare-fun res!41706 () Bool)

(assert (=> b!79964 (=> res!41706 e!52210)))

(assert (=> b!79964 (= res!41706 (= (h!2095 lt!35810) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(declare-fun b!79965 () Bool)

(assert (=> b!79965 (= e!52210 (contains!740 (t!5148 lt!35810) (tuple2!2177 (_1!1099 lt!35670) (_2!1099 lt!35670))))))

(assert (= (and d!19539 res!41705) b!79964))

(assert (= (and b!79964 (not res!41706)) b!79965))

(declare-fun m!81223 () Bool)

(assert (=> d!19539 m!81223))

(declare-fun m!81225 () Bool)

(assert (=> d!19539 m!81225))

(declare-fun m!81227 () Bool)

(assert (=> b!79965 m!81227))

(assert (=> b!78561 d!19539))

(declare-fun d!19541 () Bool)

(assert (=> d!19541 (= (apply!79 lt!36137 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1180 (getValueByKey!135 (toList!732 lt!36137) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3387 () Bool)

(assert (= bs!3387 d!19541))

(assert (=> bs!3387 m!80051))

(assert (=> bs!3387 m!80051))

(declare-fun m!81229 () Bool)

(assert (=> bs!3387 m!81229))

(assert (=> b!78274 d!19541))

(assert (=> d!18511 d!18525))

(assert (=> d!18511 d!18537))

(declare-fun d!19543 () Bool)

(assert (=> d!19543 (contains!739 (+!103 lt!35891 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!35898)))

(assert (=> d!19543 true))

(declare-fun _$35!321 () Unit!2242)

(assert (=> d!19543 (= (choose!468 lt!35891 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))) lt!35898) _$35!321)))

(declare-fun bs!3388 () Bool)

(assert (= bs!3388 d!19543))

(assert (=> bs!3388 m!77807))

(assert (=> bs!3388 m!77807))

(assert (=> bs!3388 m!77815))

(assert (=> d!18511 d!19543))

(declare-fun d!19545 () Bool)

(declare-fun e!52212 () Bool)

(assert (=> d!19545 e!52212))

(declare-fun res!41707 () Bool)

(assert (=> d!19545 (=> res!41707 e!52212)))

(declare-fun lt!37019 () Bool)

(assert (=> d!19545 (= res!41707 (not lt!37019))))

(declare-fun lt!37020 () Bool)

(assert (=> d!19545 (= lt!37019 lt!37020)))

(declare-fun lt!37017 () Unit!2242)

(declare-fun e!52211 () Unit!2242)

(assert (=> d!19545 (= lt!37017 e!52211)))

(declare-fun c!12479 () Bool)

(assert (=> d!19545 (= c!12479 lt!37020)))

(assert (=> d!19545 (= lt!37020 (containsKey!139 (toList!732 lt!35891) lt!35898))))

(assert (=> d!19545 (= (contains!739 lt!35891 lt!35898) lt!37019)))

(declare-fun b!79967 () Bool)

(declare-fun lt!37018 () Unit!2242)

(assert (=> b!79967 (= e!52211 lt!37018)))

(assert (=> b!79967 (= lt!37018 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 lt!35891) lt!35898))))

(assert (=> b!79967 (isDefined!89 (getValueByKey!135 (toList!732 lt!35891) lt!35898))))

(declare-fun b!79968 () Bool)

(declare-fun Unit!2325 () Unit!2242)

(assert (=> b!79968 (= e!52211 Unit!2325)))

(declare-fun b!79969 () Bool)

(assert (=> b!79969 (= e!52212 (isDefined!89 (getValueByKey!135 (toList!732 lt!35891) lt!35898)))))

(assert (= (and d!19545 c!12479) b!79967))

(assert (= (and d!19545 (not c!12479)) b!79968))

(assert (= (and d!19545 (not res!41707)) b!79969))

(declare-fun m!81231 () Bool)

(assert (=> d!19545 m!81231))

(declare-fun m!81233 () Bool)

(assert (=> b!79967 m!81233))

(declare-fun m!81235 () Bool)

(assert (=> b!79967 m!81235))

(assert (=> b!79967 m!81235))

(declare-fun m!81237 () Bool)

(assert (=> b!79967 m!81237))

(assert (=> b!79969 m!81235))

(assert (=> b!79969 m!81235))

(assert (=> b!79969 m!81237))

(assert (=> d!18511 d!19545))

(declare-fun d!19547 () Bool)

(declare-fun e!52213 () Bool)

(assert (=> d!19547 e!52213))

(declare-fun res!41708 () Bool)

(assert (=> d!19547 (=> (not res!41708) (not e!52213))))

(declare-fun lt!37024 () ListLongMap!1433)

(assert (=> d!19547 (= res!41708 (contains!739 lt!37024 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!37022 () List!1511)

(assert (=> d!19547 (= lt!37024 (ListLongMap!1434 lt!37022))))

(declare-fun lt!37021 () Unit!2242)

(declare-fun lt!37023 () Unit!2242)

(assert (=> d!19547 (= lt!37021 lt!37023)))

(assert (=> d!19547 (= (getValueByKey!135 lt!37022 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19547 (= lt!37023 (lemmaContainsTupThenGetReturnValue!55 lt!37022 (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19547 (= lt!37022 (insertStrictlySorted!58 (toList!732 call!7177) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19547 (= (+!103 call!7177 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!37024)))

(declare-fun b!79970 () Bool)

(declare-fun res!41709 () Bool)

(assert (=> b!79970 (=> (not res!41709) (not e!52213))))

(assert (=> b!79970 (= res!41709 (= (getValueByKey!135 (toList!732 lt!37024) (_1!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!140 (_2!1099 (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!79971 () Bool)

(assert (=> b!79971 (= e!52213 (contains!740 (toList!732 lt!37024) (tuple2!2177 (select (arr!1882 (_keys!3930 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1177 (select (arr!1883 (_values!2254 (v!2584 (underlying!273 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!337 (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!19547 res!41708) b!79970))

(assert (= (and b!79970 res!41709) b!79971))

(declare-fun m!81239 () Bool)

(assert (=> d!19547 m!81239))

(declare-fun m!81241 () Bool)

(assert (=> d!19547 m!81241))

(declare-fun m!81243 () Bool)

(assert (=> d!19547 m!81243))

(declare-fun m!81245 () Bool)

(assert (=> d!19547 m!81245))

(declare-fun m!81247 () Bool)

(assert (=> b!79970 m!81247))

(declare-fun m!81249 () Bool)

(assert (=> b!79971 m!81249))

(assert (=> b!78209 d!19547))

(assert (=> b!78209 d!19337))

(declare-fun d!19549 () Bool)

(declare-fun e!52214 () Bool)

(assert (=> d!19549 e!52214))

(declare-fun res!41710 () Bool)

(assert (=> d!19549 (=> (not res!41710) (not e!52214))))

(declare-fun lt!37028 () ListLongMap!1433)

(assert (=> d!19549 (= res!41710 (contains!739 lt!37028 (_1!1099 (tuple2!2177 lt!36083 lt!36079))))))

(declare-fun lt!37026 () List!1511)

(assert (=> d!19549 (= lt!37028 (ListLongMap!1434 lt!37026))))

(declare-fun lt!37025 () Unit!2242)

(declare-fun lt!37027 () Unit!2242)

(assert (=> d!19549 (= lt!37025 lt!37027)))

(assert (=> d!19549 (= (getValueByKey!135 lt!37026 (_1!1099 (tuple2!2177 lt!36083 lt!36079))) (Some!140 (_2!1099 (tuple2!2177 lt!36083 lt!36079))))))

(assert (=> d!19549 (= lt!37027 (lemmaContainsTupThenGetReturnValue!55 lt!37026 (_1!1099 (tuple2!2177 lt!36083 lt!36079)) (_2!1099 (tuple2!2177 lt!36083 lt!36079))))))

(assert (=> d!19549 (= lt!37026 (insertStrictlySorted!58 (toList!732 lt!36081) (_1!1099 (tuple2!2177 lt!36083 lt!36079)) (_2!1099 (tuple2!2177 lt!36083 lt!36079))))))

(assert (=> d!19549 (= (+!103 lt!36081 (tuple2!2177 lt!36083 lt!36079)) lt!37028)))

(declare-fun b!79972 () Bool)

(declare-fun res!41711 () Bool)

(assert (=> b!79972 (=> (not res!41711) (not e!52214))))

(assert (=> b!79972 (= res!41711 (= (getValueByKey!135 (toList!732 lt!37028) (_1!1099 (tuple2!2177 lt!36083 lt!36079))) (Some!140 (_2!1099 (tuple2!2177 lt!36083 lt!36079)))))))

(declare-fun b!79973 () Bool)

(assert (=> b!79973 (= e!52214 (contains!740 (toList!732 lt!37028) (tuple2!2177 lt!36083 lt!36079)))))

(assert (= (and d!19549 res!41710) b!79972))

(assert (= (and b!79972 res!41711) b!79973))

(declare-fun m!81251 () Bool)

(assert (=> d!19549 m!81251))

(declare-fun m!81253 () Bool)

(assert (=> d!19549 m!81253))

(declare-fun m!81255 () Bool)

(assert (=> d!19549 m!81255))

(declare-fun m!81257 () Bool)

(assert (=> d!19549 m!81257))

(declare-fun m!81259 () Bool)

(assert (=> b!79972 m!81259))

(declare-fun m!81261 () Bool)

(assert (=> b!79973 m!81261))

(assert (=> b!78209 d!19549))

(declare-fun d!19551 () Bool)

(assert (=> d!19551 (not (contains!739 (+!103 lt!36081 (tuple2!2177 lt!36083 lt!36079)) lt!36080))))

(declare-fun lt!37029 () Unit!2242)

(assert (=> d!19551 (= lt!37029 (choose!472 lt!36081 lt!36083 lt!36079 lt!36080))))

(declare-fun e!52215 () Bool)

(assert (=> d!19551 e!52215))

(declare-fun res!41712 () Bool)

(assert (=> d!19551 (=> (not res!41712) (not e!52215))))

(assert (=> d!19551 (= res!41712 (not (contains!739 lt!36081 lt!36080)))))

(assert (=> d!19551 (= (addStillNotContains!29 lt!36081 lt!36083 lt!36079 lt!36080) lt!37029)))

(declare-fun b!79974 () Bool)

(assert (=> b!79974 (= e!52215 (not (= lt!36083 lt!36080)))))

(assert (= (and d!19551 res!41712) b!79974))

(assert (=> d!19551 m!78127))

(assert (=> d!19551 m!78127))

(assert (=> d!19551 m!78129))

(declare-fun m!81263 () Bool)

(assert (=> d!19551 m!81263))

(declare-fun m!81265 () Bool)

(assert (=> d!19551 m!81265))

(assert (=> b!78209 d!19551))

(declare-fun d!19553 () Bool)

(declare-fun e!52217 () Bool)

(assert (=> d!19553 e!52217))

(declare-fun res!41713 () Bool)

(assert (=> d!19553 (=> res!41713 e!52217)))

(declare-fun lt!37032 () Bool)

(assert (=> d!19553 (= res!41713 (not lt!37032))))

(declare-fun lt!37033 () Bool)

(assert (=> d!19553 (= lt!37032 lt!37033)))

(declare-fun lt!37030 () Unit!2242)

(declare-fun e!52216 () Unit!2242)

(assert (=> d!19553 (= lt!37030 e!52216)))

(declare-fun c!12480 () Bool)

(assert (=> d!19553 (= c!12480 lt!37033)))

(assert (=> d!19553 (= lt!37033 (containsKey!139 (toList!732 (+!103 lt!36081 (tuple2!2177 lt!36083 lt!36079))) lt!36080))))

(assert (=> d!19553 (= (contains!739 (+!103 lt!36081 (tuple2!2177 lt!36083 lt!36079)) lt!36080) lt!37032)))

(declare-fun b!79975 () Bool)

(declare-fun lt!37031 () Unit!2242)

(assert (=> b!79975 (= e!52216 lt!37031)))

(assert (=> b!79975 (= lt!37031 (lemmaContainsKeyImpliesGetValueByKeyDefined!88 (toList!732 (+!103 lt!36081 (tuple2!2177 lt!36083 lt!36079))) lt!36080))))

(assert (=> b!79975 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!36081 (tuple2!2177 lt!36083 lt!36079))) lt!36080))))

(declare-fun b!79976 () Bool)

(declare-fun Unit!2326 () Unit!2242)

(assert (=> b!79976 (= e!52216 Unit!2326)))

(declare-fun b!79977 () Bool)

(assert (=> b!79977 (= e!52217 (isDefined!89 (getValueByKey!135 (toList!732 (+!103 lt!36081 (tuple2!2177 lt!36083 lt!36079))) lt!36080)))))

(assert (= (and d!19553 c!12480) b!79975))

(assert (= (and d!19553 (not c!12480)) b!79976))

(assert (= (and d!19553 (not res!41713)) b!79977))

(declare-fun m!81267 () Bool)

(assert (=> d!19553 m!81267))

(declare-fun m!81269 () Bool)

(assert (=> b!79975 m!81269))

(declare-fun m!81271 () Bool)

(assert (=> b!79975 m!81271))

(assert (=> b!79975 m!81271))

(declare-fun m!81273 () Bool)

(assert (=> b!79975 m!81273))

(assert (=> b!79977 m!81271))

(assert (=> b!79977 m!81271))

(assert (=> b!79977 m!81273))

(assert (=> b!78209 d!19553))

(declare-fun d!19555 () Bool)

(declare-fun res!41714 () Bool)

(declare-fun e!52218 () Bool)

(assert (=> d!19555 (=> res!41714 e!52218)))

(assert (=> d!19555 (= res!41714 (and ((_ is Cons!1507) lt!35799) (= (_1!1099 (h!2095 lt!35799)) (_1!1099 lt!35659))))))

(assert (=> d!19555 (= (containsKey!139 lt!35799 (_1!1099 lt!35659)) e!52218)))

(declare-fun b!79978 () Bool)

(declare-fun e!52219 () Bool)

(assert (=> b!79978 (= e!52218 e!52219)))

(declare-fun res!41715 () Bool)

(assert (=> b!79978 (=> (not res!41715) (not e!52219))))

(assert (=> b!79978 (= res!41715 (and (or (not ((_ is Cons!1507) lt!35799)) (bvsle (_1!1099 (h!2095 lt!35799)) (_1!1099 lt!35659))) ((_ is Cons!1507) lt!35799) (bvslt (_1!1099 (h!2095 lt!35799)) (_1!1099 lt!35659))))))

(declare-fun b!79979 () Bool)

(assert (=> b!79979 (= e!52219 (containsKey!139 (t!5148 lt!35799) (_1!1099 lt!35659)))))

(assert (= (and d!19555 (not res!41714)) b!79978))

(assert (= (and b!79978 res!41715) b!79979))

(declare-fun m!81275 () Bool)

(assert (=> b!79979 m!81275))

(assert (=> b!78408 d!19555))

(declare-fun d!19557 () Bool)

(declare-fun res!41716 () Bool)

(declare-fun e!52220 () Bool)

(assert (=> d!19557 (=> res!41716 e!52220)))

(assert (=> d!19557 (= res!41716 (and ((_ is Cons!1507) lt!35815) (= (_1!1099 (h!2095 lt!35815)) (_1!1099 lt!35670))))))

(assert (=> d!19557 (= (containsKey!139 lt!35815 (_1!1099 lt!35670)) e!52220)))

(declare-fun b!79980 () Bool)

(declare-fun e!52221 () Bool)

(assert (=> b!79980 (= e!52220 e!52221)))

(declare-fun res!41717 () Bool)

(assert (=> b!79980 (=> (not res!41717) (not e!52221))))

(assert (=> b!79980 (= res!41717 (and (or (not ((_ is Cons!1507) lt!35815)) (bvsle (_1!1099 (h!2095 lt!35815)) (_1!1099 lt!35670))) ((_ is Cons!1507) lt!35815) (bvslt (_1!1099 (h!2095 lt!35815)) (_1!1099 lt!35670))))))

(declare-fun b!79981 () Bool)

(assert (=> b!79981 (= e!52221 (containsKey!139 (t!5148 lt!35815) (_1!1099 lt!35670)))))

(assert (= (and d!19557 (not res!41716)) b!79980))

(assert (= (and b!79980 res!41717) b!79981))

(declare-fun m!81277 () Bool)

(assert (=> b!79981 m!81277))

(assert (=> b!78579 d!19557))

(assert (=> b!78548 d!19237))

(declare-fun d!19559 () Bool)

(declare-fun lt!37034 () Bool)

(assert (=> d!19559 (= lt!37034 (select (content!83 (toList!732 lt!36091)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun e!52222 () Bool)

(assert (=> d!19559 (= lt!37034 e!52222)))

(declare-fun res!41718 () Bool)

(assert (=> d!19559 (=> (not res!41718) (not e!52222))))

(assert (=> d!19559 (= res!41718 ((_ is Cons!1507) (toList!732 lt!36091)))))

(assert (=> d!19559 (= (contains!740 (toList!732 lt!36091) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))) lt!37034)))

(declare-fun b!79982 () Bool)

(declare-fun e!52223 () Bool)

(assert (=> b!79982 (= e!52222 e!52223)))

(declare-fun res!41719 () Bool)

(assert (=> b!79982 (=> res!41719 e!52223)))

(assert (=> b!79982 (= res!41719 (= (h!2095 (toList!732 lt!36091)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(declare-fun b!79983 () Bool)

(assert (=> b!79983 (= e!52223 (contains!740 (t!5148 (toList!732 lt!36091)) (tuple2!2177 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2169 (v!2584 (underlying!273 thiss!992))))))))

(assert (= (and d!19559 res!41718) b!79982))

(assert (= (and b!79982 (not res!41719)) b!79983))

(declare-fun m!81279 () Bool)

(assert (=> d!19559 m!81279))

(declare-fun m!81281 () Bool)

(assert (=> d!19559 m!81281))

(declare-fun m!81283 () Bool)

(assert (=> b!79983 m!81283))

(assert (=> b!78225 d!19559))

(declare-fun b!79984 () Bool)

(declare-fun e!52224 () Option!141)

(assert (=> b!79984 (= e!52224 (Some!140 (_2!1099 (h!2095 (toList!732 lt!36281)))))))

(declare-fun e!52225 () Option!141)

(declare-fun b!79986 () Bool)

(assert (=> b!79986 (= e!52225 (getValueByKey!135 (t!5148 (toList!732 lt!36281)) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))

(declare-fun d!19561 () Bool)

(declare-fun c!12481 () Bool)

(assert (=> d!19561 (= c!12481 (and ((_ is Cons!1507) (toList!732 lt!36281)) (= (_1!1099 (h!2095 (toList!732 lt!36281))) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992))))))))))

(assert (=> d!19561 (= (getValueByKey!135 (toList!732 lt!36281) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))) e!52224)))

(declare-fun b!79987 () Bool)

(assert (=> b!79987 (= e!52225 None!139)))

(declare-fun b!79985 () Bool)

(assert (=> b!79985 (= e!52224 e!52225)))

(declare-fun c!12482 () Bool)

(assert (=> b!79985 (= c!12482 (and ((_ is Cons!1507) (toList!732 lt!36281)) (not (= (_1!1099 (h!2095 (toList!732 lt!36281))) (_1!1099 (tuple2!2177 lt!35887 (zeroValue!2169 (v!2584 (underlying!273 thiss!992)))))))))))

(assert (= (and d!19561 c!12481) b!79984))

(assert (= (and d!19561 (not c!12481)) b!79985))

(assert (= (and b!79985 c!12482) b!79986))

(assert (= (and b!79985 (not c!12482)) b!79987))

(declare-fun m!81285 () Bool)

(assert (=> b!79986 m!81285))

(assert (=> b!78375 d!19561))

(assert (=> b!78574 d!19329))

(assert (=> b!78574 d!18605))

(declare-fun bm!7374 () Bool)

(declare-fun call!7377 () Bool)

(declare-fun c!12483 () Bool)

(assert (=> bm!7374 (= call!7377 (arrayNoDuplicates!0 (_keys!3930 (_2!1098 lt!35994)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12483 (Cons!1506 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000) Nil!1507) Nil!1507)))))

(declare-fun b!79988 () Bool)

(declare-fun e!52229 () Bool)

(assert (=> b!79988 (= e!52229 (contains!741 Nil!1507 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000)))))

(declare-fun d!19563 () Bool)

(declare-fun res!41722 () Bool)

(declare-fun e!52228 () Bool)

(assert (=> d!19563 (=> res!41722 e!52228)))

(assert (=> d!19563 (= res!41722 (bvsge #b00000000000000000000000000000000 (size!2124 (_keys!3930 (_2!1098 lt!35994)))))))

(assert (=> d!19563 (= (arrayNoDuplicates!0 (_keys!3930 (_2!1098 lt!35994)) #b00000000000000000000000000000000 Nil!1507) e!52228)))

(declare-fun b!79989 () Bool)

(declare-fun e!52227 () Bool)

(declare-fun e!52226 () Bool)

(assert (=> b!79989 (= e!52227 e!52226)))

(assert (=> b!79989 (= c!12483 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000)))))

(declare-fun b!79990 () Bool)

(assert (=> b!79990 (= e!52226 call!7377)))

(declare-fun b!79991 () Bool)

(assert (=> b!79991 (= e!52226 call!7377)))

(declare-fun b!79992 () Bool)

(assert (=> b!79992 (= e!52228 e!52227)))

(declare-fun res!41721 () Bool)

(assert (=> b!79992 (=> (not res!41721) (not e!52227))))

(assert (=> b!79992 (= res!41721 (not e!52229))))

(declare-fun res!41720 () Bool)

(assert (=> b!79992 (=> (not res!41720) (not e!52229))))

(assert (=> b!79992 (= res!41720 (validKeyInArray!0 (select (arr!1882 (_keys!3930 (_2!1098 lt!35994))) #b00000000000000000000000000000000)))))

(assert (= (and d!19563 (not res!41722)) b!79992))

(assert (= (and b!79992 res!41720) b!79988))

(assert (= (and b!79992 res!41721) b!79989))

(assert (= (and b!79989 c!12483) b!79991))

(assert (= (and b!79989 (not c!12483)) b!79990))

(assert (= (or b!79991 b!79990) bm!7374))

(assert (=> bm!7374 m!79263))

(declare-fun m!81287 () Bool)

(assert (=> bm!7374 m!81287))

(assert (=> b!79988 m!79263))

(assert (=> b!79988 m!79263))

(declare-fun m!81289 () Bool)

(assert (=> b!79988 m!81289))

(assert (=> b!79989 m!79263))

(assert (=> b!79989 m!79263))

(assert (=> b!79989 m!79273))

(assert (=> b!79992 m!79263))

(assert (=> b!79992 m!79263))

(assert (=> b!79992 m!79273))

(assert (=> b!78221 d!19563))

(assert (=> d!18421 d!18739))

(declare-fun condMapEmpty!3317 () Bool)

(declare-fun mapDefault!3317 () ValueCell!911)

(assert (=> mapNonEmpty!3316 (= condMapEmpty!3317 (= mapRest!3316 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3317)))))

(declare-fun e!52230 () Bool)

(declare-fun mapRes!3317 () Bool)

(assert (=> mapNonEmpty!3316 (= tp!8788 (and e!52230 mapRes!3317))))

(declare-fun mapNonEmpty!3317 () Bool)

(declare-fun tp!8789 () Bool)

(declare-fun e!52231 () Bool)

(assert (=> mapNonEmpty!3317 (= mapRes!3317 (and tp!8789 e!52231))))

(declare-fun mapValue!3317 () ValueCell!911)

(declare-fun mapKey!3317 () (_ BitVec 32))

(declare-fun mapRest!3317 () (Array (_ BitVec 32) ValueCell!911))

(assert (=> mapNonEmpty!3317 (= mapRest!3316 (store mapRest!3317 mapKey!3317 mapValue!3317))))

(declare-fun b!79993 () Bool)

(assert (=> b!79993 (= e!52231 tp_is_empty!2509)))

(declare-fun b!79994 () Bool)

(assert (=> b!79994 (= e!52230 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3317 () Bool)

(assert (=> mapIsEmpty!3317 mapRes!3317))

(assert (= (and mapNonEmpty!3316 condMapEmpty!3317) mapIsEmpty!3317))

(assert (= (and mapNonEmpty!3316 (not condMapEmpty!3317)) mapNonEmpty!3317))

(assert (= (and mapNonEmpty!3317 ((_ is ValueCellFull!911) mapValue!3317)) b!79993))

(assert (= (and mapNonEmpty!3316 ((_ is ValueCellFull!911) mapDefault!3317)) b!79994))

(declare-fun m!81291 () Bool)

(assert (=> mapNonEmpty!3317 m!81291))

(declare-fun condMapEmpty!3318 () Bool)

(declare-fun mapDefault!3318 () ValueCell!911)

(assert (=> mapNonEmpty!3315 (= condMapEmpty!3318 (= mapRest!3315 ((as const (Array (_ BitVec 32) ValueCell!911)) mapDefault!3318)))))

(declare-fun e!52232 () Bool)

(declare-fun mapRes!3318 () Bool)

(assert (=> mapNonEmpty!3315 (= tp!8787 (and e!52232 mapRes!3318))))

(declare-fun mapNonEmpty!3318 () Bool)

(declare-fun tp!8790 () Bool)

(declare-fun e!52233 () Bool)

(assert (=> mapNonEmpty!3318 (= mapRes!3318 (and tp!8790 e!52233))))

(declare-fun mapRest!3318 () (Array (_ BitVec 32) ValueCell!911))

(declare-fun mapValue!3318 () ValueCell!911)

(declare-fun mapKey!3318 () (_ BitVec 32))

(assert (=> mapNonEmpty!3318 (= mapRest!3315 (store mapRest!3318 mapKey!3318 mapValue!3318))))

(declare-fun b!79995 () Bool)

(assert (=> b!79995 (= e!52233 tp_is_empty!2509)))

(declare-fun b!79996 () Bool)

(assert (=> b!79996 (= e!52232 tp_is_empty!2509)))

(declare-fun mapIsEmpty!3318 () Bool)

(assert (=> mapIsEmpty!3318 mapRes!3318))

(assert (= (and mapNonEmpty!3315 condMapEmpty!3318) mapIsEmpty!3318))

(assert (= (and mapNonEmpty!3315 (not condMapEmpty!3318)) mapNonEmpty!3318))

(assert (= (and mapNonEmpty!3318 ((_ is ValueCellFull!911) mapValue!3318)) b!79995))

(assert (= (and mapNonEmpty!3315 ((_ is ValueCellFull!911) mapDefault!3318)) b!79996))

(declare-fun m!81293 () Bool)

(assert (=> mapNonEmpty!3318 m!81293))

(declare-fun b_lambda!3539 () Bool)

(assert (= b_lambda!3513 (or (and b!77645 b_free!2185) (and b!77630 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))) b_lambda!3539)))

(declare-fun b_lambda!3541 () Bool)

(assert (= b_lambda!3533 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3541)))

(declare-fun b_lambda!3543 () Bool)

(assert (= b_lambda!3527 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3543)))

(declare-fun b_lambda!3545 () Bool)

(assert (= b_lambda!3515 (or (and b!77645 b_free!2185) (and b!77630 b_free!2187 (= (defaultEntry!2271 newMap!16) (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))))) b_lambda!3545)))

(declare-fun b_lambda!3547 () Bool)

(assert (= b_lambda!3529 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3547)))

(declare-fun b_lambda!3549 () Bool)

(assert (= b_lambda!3525 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3549)))

(declare-fun b_lambda!3551 () Bool)

(assert (= b_lambda!3509 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3551)))

(declare-fun b_lambda!3553 () Bool)

(assert (= b_lambda!3537 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3553)))

(declare-fun b_lambda!3555 () Bool)

(assert (= b_lambda!3531 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3555)))

(declare-fun b_lambda!3557 () Bool)

(assert (= b_lambda!3521 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3557)))

(declare-fun b_lambda!3559 () Bool)

(assert (= b_lambda!3523 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3559)))

(declare-fun b_lambda!3561 () Bool)

(assert (= b_lambda!3535 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3561)))

(declare-fun b_lambda!3563 () Bool)

(assert (= b_lambda!3511 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3563)))

(declare-fun b_lambda!3565 () Bool)

(assert (= b_lambda!3519 (or (and b!77645 b_free!2185 (= (defaultEntry!2271 (v!2584 (underlying!273 thiss!992))) (defaultEntry!2271 newMap!16))) (and b!77630 b_free!2187) b_lambda!3565)))

(check-sat (not b!79017) (not d!19039) (not b!79305) (not d!19075) (not b!78971) (not d!19043) (not b!79700) (not b!78820) (not bm!7240) (not b!78683) (not b!79206) (not b!79714) (not b!79972) (not b!79154) (not b!78838) (not d!19205) (not bm!7317) (not d!19259) (not b!78896) (not b!79679) (not b!79962) (not d!18845) (not b!79115) (not b!79606) (not b!79820) (not b!79061) (not d!18793) (not d!18869) (not b_next!2187) (not b!78644) (not b!79868) (not b!79075) (not b!79595) (not d!18939) (not b!78782) (not bm!7352) (not b!79844) (not b!79496) (not d!19215) (not b!79472) (not b_lambda!3555) (not b!79415) (not b!79625) (not b!79888) (not d!19315) (not b!79475) (not b!79059) (not b!79975) (not d!18725) (not b_lambda!3543) (not b!79317) (not d!18775) (not d!19503) (not d!18777) (not d!19381) (not b!79256) (not bm!7298) (not b!79026) (not b!79133) (not b!79470) (not b!79989) (not b!79730) (not d!19185) (not b!79908) (not b!79890) (not b!79018) (not b!78833) (not d!19263) (not b!78843) (not b!79142) (not d!18973) (not b!79766) (not d!18985) (not d!19279) (not b!78637) (not d!18865) (not d!18877) (not d!19181) (not bm!7262) (not bm!7335) (not b!78840) (not bm!7239) (not b!78684) (not b!78781) (not d!19375) (not d!19099) (not b!78804) (not b!79673) (not b_lambda!3517) (not b!78864) (not b!79537) (not b!79664) (not b!78821) (not bm!7271) (not b!78858) (not b!79667) (not b!79334) (not b!78901) (not b!79284) (not d!19167) (not b!79274) (not b!79920) (not b!79821) (not b!79194) (not b!79036) (not d!19497) (not b!79093) (not d!19017) (not b!78930) (not b!79736) (not b!79875) (not d!18711) (not d!18949) (not b!79411) (not b!78699) (not bm!7374) (not b!79319) (not b!78704) (not b!78774) (not b!79287) (not b!79544) (not b!79682) (not d!19323) (not b!79986) (not b!79398) (not d!18967) (not d!19151) (not b!79264) (not b!78635) (not d!18797) (not b!79077) (not b!79369) (not d!19551) (not b!79513) (not d!19211) (not b!78994) (not b!78866) (not d!19037) (not b!79254) (not d!19391) (not bm!7254) (not b!79554) (not b_lambda!3551) (not b!79328) (not b!79704) (not b!79811) (not b!79025) (not b_lambda!3501) (not b!79435) (not b!79473) (not b!79899) (not b!79951) (not d!19007) (not d!18837) (not b!78947) (not d!19397) (not d!19053) (not b!79527) (not d!19479) (not bm!7261) (not d!18975) (not b!79705) (not b!78899) (not bm!7265) (not d!18917) (not d!18709) (not bm!7286) (not b!79959) (not b!79957) (not b!79933) (not bm!7241) (not bm!7277) (not b!79326) (not b!78706) (not d!18733) (not d!18721) (not d!18933) (not b!79528) (not b!78872) (not d!19219) (not bm!7243) (not d!18745) (not bm!7346) (not b!78908) (not d!19117) (not b!79129) b_and!4873 (not b!79499) (not b!79123) (not bm!7336) (not b!79725) (not d!18895) (not b!78922) (not bm!7302) (not b!79402) (not b!79355) (not b!79324) (not d!19433) (not d!18947) (not d!18705) (not b!79753) (not b!79618) (not b!78929) (not b!79282) (not d!19387) (not d!19153) (not b!79752) (not d!19499) (not bm!7227) (not bm!7251) (not b!79433) (not d!18963) (not b!78769) (not d!18707) (not d!18669) (not d!18909) (not b_lambda!3541) (not b!79892) (not b!78828) (not b!79484) (not b!79392) (not b!79409) (not bm!7231) (not b!79420) (not d!19553) (not b!79085) (not b_lambda!3545) (not b!79178) (not d!19071) (not bm!7288) (not d!18685) (not b!78966) (not bm!7263) (not d!19325) (not b!78837) (not b!79045) (not d!19015) (not b!79345) (not b!79717) (not b!78959) (not d!19545) (not b!79549) (not b!79588) (not b!79727) (not b!79651) (not b!79613) (not d!19051) (not b!79983) (not b!79430) (not d!18873) (not b!79611) (not b!79141) (not b_lambda!3557) (not b!79279) (not b!78646) (not b!79913) (not b!79873) (not b!79567) (not b!78707) (not b!79676) (not d!19019) (not b!78854) (not d!19133) (not bm!7296) (not b!79883) (not b!78629) (not b!79311) (not b!78939) (not d!19411) (not b!79216) (not b!78697) (not bm!7306) (not d!18813) (not b!78656) (not b!79530) (not b!79235) (not d!18927) (not b!79878) (not b!79977) (not d!18893) (not b!79557) (not b!79170) (not b!79397) (not bm!7338) (not b_lambda!3559) (not d!19189) (not b!78924) (not d!18701) (not b!79680) (not b!79309) (not b!79394) (not d!19311) (not b!79707) (not b!78987) (not b!79073) (not b!79414) (not b!78815) (not b!78982) (not d!18809) (not bm!7316) (not d!18781) (not b!78649) (not b!78816) (not b!79910) (not d!18731) (not b!79131) (not b!79925) (not d!19373) (not b!79533) (not b!79057) (not d!18761) (not b!78716) (not b!78810) (not b!79600) (not b!79491) (not b!79117) (not b_lambda!3475) (not b!78913) (not b!79070) (not b!79887) (not b!79303) (not bm!7245) (not b!78800) (not b!78926) (not b!79494) tp_is_empty!2509 (not b!79373) (not b!78802) (not b!79738) (not b!79659) (not b!79053) (not b!79592) (not b!79702) (not d!18979) (not b!79359) (not b!78882) (not d!19101) (not d!18803) (not b!79677) (not b!79336) (not d!18723) (not d!19159) (not b!79271) (not d!19547) (not d!19113) (not b!78927) (not b!79722) (not b!79449) (not b!79829) (not b_lambda!3487) (not b!79539) (not d!19191) (not d!19129) (not b!78817) (not b!79545) (not d!19281) (not b!79823) (not d!19507) (not b!78880) (not d!19349) (not b!78669) (not d!19173) (not b!78931) (not b!79577) (not d!18771) (not b!79225) (not d!19403) (not d!18925) (not d!18923) (not d!18719) (not d!18753) (not b!79008) (not d!19407) (not b!79938) (not b!79245) (not b!78891) (not b!78808) (not b!79391) (not b!78640) (not b!79040) (not bm!7366) (not d!19065) (not b!79329) (not d!19169) (not b!79492) (not d!19009) (not b_lambda!3561) (not d!19351) (not b!79441) (not b!79711) (not d!19293) (not b!79091) (not b!78869) (not b!79509) (not b!79051) (not d!19177) (not b!78887) (not b!79262) (not b!79891) (not b!79281) (not b!78666) (not d!19379) (not d!18879) (not b!79445) (not b!79404) (not b!78747) (not b!79217) (not d!18913) (not d!18859) (not d!19535) (not b!79363) (not b!79555) (not bm!7284) (not b!79532) b_and!4875 (not d!19549) (not b!79389) (not b!78787) (not b!79467) (not b!78709) (not b!79787) (not d!18821) (not b!78996) (not b!79161) (not bm!7328) (not d!19353) (not b!79214) (not b!79209) (not b!78760) (not d!18897) (not b!79248) (not bm!7309) (not b!78768) (not b!78894) (not b!79090) (not b!79078) (not b!79416) (not d!19463) (not d!19225) (not d!18807) (not b!79762) (not d!19319) (not b!79290) (not bm!7358) (not b!79158) (not d!18783) (not b!79541) (not d!19013) (not b!78692) (not b!79590) (not d!19161) (not b!79981) (not b!79212) (not d!18901) (not b_lambda!3549) (not d!19501) (not d!19031) (not b!79266) (not d!19419) (not b!78903) (not b!79082) (not bm!7292) (not b!78944) (not b!79574) (not b!79019) (not b!79230) (not b!79213) (not bm!7321) (not b!79119) (not bm!7230) (not b!79935) (not b!79033) (not d!19355) (not b!79218) (not b!79813) (not bm!7299) (not b!79408) (not d!18929) (not b!79547) (not b!79685) (not d!19175) (not b!79418) (not b!79662) (not d!19429) (not b!79754) (not b!79459) (not b!79922) (not d!18969) (not b!79866) (not d!19197) (not d!18921) (not b!79834) (not b!79923) (not b!79366) (not b!79039) (not b!78784) (not b!79745) (not d!18785) (not b!78878) (not b!79917) (not b!78789) (not b!79157) (not b!79099) (not b!78905) (not d!19513) (not b!79841) (not b!79931) (not b!79535) (not d!18735) (not d!19307) (not d!19171) (not b!78710) (not b!79269) (not d!19203) (not b_lambda!3499) (not b!79062) (not b!79609) (not d!18789) (not b!78941) (not b!78991) (not b!78933) (not d!19389) (not b!79432) (not b!78809) (not b!79043) (not b!79728) (not b!79843) (not d!19475) (not b!79622) (not d!19163) (not bm!7325) (not b!79969) (not b!79015) (not b!79196) (not b!79552) (not d!18767) (not b!79138) (not b!78979) (not b!78671) (not b_lambda!3483) (not b_lambda!3563) (not b!79199) (not d!19309) (not b!79831) (not b!79870) (not d!18907) (not d!19431) (not b!78643) (not b!79193) (not d!18791) (not b!79749) (not b!78856) (not d!18717) (not d!19453) (not bm!7293) (not b!78916) (not d!18819) (not b!79080) (not d!19081) (not bm!7312) (not b!78798) (not d!19029) (not b!78995) (not b!79806) (not b!79565) (not b!79020) (not b!79589) (not d!19111) (not d!18751) (not b!78758) (not bm!7337) (not b!79523) (not b!79427) (not d!18977) (not d!19539) (not b!79135) (not d!19097) (not b!79321) (not b!78694) (not b!79852) (not d!19055) (not d!18715) (not bm!7361) (not d!19217) (not b!78677) (not b!78752) (not d!19495) (not d!19465) (not d!19405) (not b!79238) (not b!78790) (not d!19417) (not b!79688) (not b_lambda!3547) (not b!79152) (not d!18995) (not b!79900) (not d!19195) (not bm!7367) (not mapNonEmpty!3318) (not b!79481) (not b!78969) (not b!78805) (not b!79149) (not b!78679) (not b!79208) (not d!19285) (not d!19269) (not b!78703) (not d!19427) (not d!19021) (not d!19179) (not b!78712) (not d!18699) (not b!79022) (not b!78977) (not bm!7342) (not bm!7289) (not b!79580) (not b!78750) (not b!79784) (not d!18989) (not b!79042) (not d!18891) (not d!19165) (not d!19105) (not b!79863) (not b!79815) (not bm!7290) (not b!79770) (not b!79967) (not b_lambda!3485) (not d!18691) (not b!79381) (not b!79447) (not b!78658) (not b!79387) (not b!79339) (not b!79121) (not b!79608) (not b!78681) (not b!79399) (not d!19033) (not b!79690) (not b!79443) (not b!79350) (not d!19459) (not b!79162) (not bm!7274) (not d!18653) (not b_next!2185) (not b!79243) (not b!79718) (not b!79298) (not b!78983) (not bm!7347) (not b!79113) (not b!79023) (not bm!7280) (not b!79598) (not d!19087) (not d!18887) (not bm!7365) (not b!79401) (not b!79597) (not b!78766) (not b!79353) (not mapNonEmpty!3317) (not b!79236) (not b!78653) (not b!78661) (not bm!7339) (not d!19347) (not d!19131) (not b!79384) (not b!79300) (not d!19559) (not b!79083) (not d!19329) (not b!79289) (not d!19393) (not b!79845) (not b!79740) (not b!78652) (not d!18961) (not b!78688) (not bm!7234) (not b!79652) (not b!79356) (not b!79517) (not d!19089) (not d!19145) (not d!18849) (not b!79425) (not d!19239) (not b!79246) (not b!79915) (not b!79696) (not b!78778) (not bm!7248) (not bm!7237) (not b!78955) (not d!19423) (not bm!7318) (not d!18663) (not b!79072) (not d!18983) (not b!79371) (not bm!7359) (not b!79003) (not d!18703) (not b!78848) (not b!79783) (not b!79147) (not b!78705) (not d!19079) (not bm!7283) (not d!18839) (not b!78963) (not b!79526) (not d!19493) (not d!19383) (not b!79403) (not b!78792) (not b!79839) (not d!19041) (not b_lambda!3503) (not b!79183) (not d!18863) (not b!79670) (not b!78755) (not b!79012) (not b!79395) (not d!19491) (not b!79946) (not b!79520) (not d!18683) (not b!79584) (not b!79103) (not b!79253) (not b!79034) (not b!79540) (not b!79032) (not d!19317) (not b!79861) (not bm!7357) (not b!79709) (not b!79160) (not d!18843) (not b!79174) (not d!18695) (not b!78898) (not b!79836) (not bm!7363) (not b!79292) (not b!79105) (not b!78668) (not b!79065) (not d!19147) (not b!78645) (not d!18687) (not b!78720) (not b!79101) (not b!78722) (not d!18679) (not bm!7371) (not b!79483) (not b!79772) (not d!19511) (not b!79886) (not b!78906) (not b!79615) (not b!79169) (not d!18875) (not b!79750) (not b!79775) (not b!78698) (not b!78968) (not b!79979) (not d!18729) (not d!18919) (not d!18899) (not b_lambda!3553) (not b!79028) (not b!79698) (not d!19149) (not b!79251) (not d!19441) (not b!79586) (not d!19333) (not b!78771) (not b!79502) (not b_lambda!3539) (not d!18935) (not b!79570) (not b!78719) (not b_lambda!3505) (not b!78845) (not d!19261) (not b!79954) (not d!18779) (not b!79948) (not d!19271) (not b!79563) (not b!79055) (not b!79331) (not d!18755) (not bm!7267) (not d!18911) (not b!78708) (not bm!7348) (not d!19399) (not b!78696) (not b!79546) (not b!79865) (not b!78952) (not b!78911) (not b!79587) (not b!78687) (not b!79971) (not d!19115) (not b!79234) (not b!78953) (not d!18987) (not b!78956) (not d!18853) (not b!79945) (not b!79014) (not b!79818) (not b!78663) (not b!79368) (not b!79277) (not b!79240) (not b!79465) (not b!78992) (not d!19229) (not bm!7294) (not d!19227) (not d!19543) (not b!78691) (not b!79973) (not bm!7350) (not b!79143) (not b!79871) (not b!79742) (not b!79488) (not b!79773) (not b!79027) (not d!18677) (not b!79992) (not d!19201) (not d!19267) (not d!19527) (not b!79004) (not bm!7282) (not d!19533) (not b!79037) (not b!79808) (not b!79485) (not b!79781) (not b!79885) (not d!18757) (not b!79988) (not b!79942) (not b!79463) (not d!19449) (not d!19127) (not d!18835) (not d!18903) (not d!18773) (not d!18693) (not d!19265) (not b!78950) (not d!19327) (not b!79614) (not d!18915) (not b!79881) (not b!78961) (not b!79306) (not b!78807) (not bm!7268) (not b!79505) (not b!79068) (not b!79869) (not b!79965) (not b!79456) (not bm!7369) (not b!79655) (not b!79107) (not b!79955) (not b!79323) (not b!79761) (not b!79202) (not b!78819) (not d!19457) (not b!79413) (not bm!7257) (not b!78660) (not d!18905) (not b!79410) (not b!78985) (not d!18749) (not bm!7353) (not b!79970) (not d!18959) (not b!79116) (not d!19469) (not b!79337) (not d!19047) (not b!78989) (not d!19107) (not d!19137) (not b!79687) (not d!19155) (not b!79242) (not d!18931) (not d!18713) (not b!79747) (not d!19289) (not b!79241) (not b!79450) (not d!19525) (not d!19335) (not b!78814) (not b!78846) (not d!19291) (not bm!7305) (not d!19063) (not b!79778) (not b!79146) (not b!79226) (not b!78770) (not b!79720) (not bm!7324) (not b!79013) (not b!79904) (not b!79423) (not b!78757) (not b!78829) (not d!19157) (not b!78914) (not b!79379) (not b_lambda!3507) (not b!79347) (not bm!7313) (not d!19541) (not d!18831) (not b!79853) (not b!79088) (not d!18697) (not b!79857) (not b_lambda!3565) (not b!78686) (not b!78981) (not d!19473))
(check-sat b_and!4873 b_and!4875 (not b_next!2185) (not b_next!2187))
