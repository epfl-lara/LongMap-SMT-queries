; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12354 () Bool)

(assert start!12354)

(declare-fun b!105184 () Bool)

(declare-fun b_free!2521 () Bool)

(declare-fun b_next!2521 () Bool)

(assert (=> b!105184 (= b_free!2521 (not b_next!2521))))

(declare-fun tp!9885 () Bool)

(declare-fun b_and!6489 () Bool)

(assert (=> b!105184 (= tp!9885 b_and!6489)))

(declare-fun b!105174 () Bool)

(declare-fun b_free!2523 () Bool)

(declare-fun b_next!2523 () Bool)

(assert (=> b!105174 (= b_free!2523 (not b_next!2523))))

(declare-fun tp!9888 () Bool)

(declare-fun b_and!6491 () Bool)

(assert (=> b!105174 (= tp!9888 b_and!6491)))

(declare-fun mapNonEmpty!3923 () Bool)

(declare-fun mapRes!3924 () Bool)

(declare-fun tp!9887 () Bool)

(declare-fun e!68471 () Bool)

(assert (=> mapNonEmpty!3923 (= mapRes!3924 (and tp!9887 e!68471))))

(declare-datatypes ((V!3217 0))(
  ( (V!3218 (val!1383 Int)) )
))
(declare-datatypes ((array!4331 0))(
  ( (array!4332 (arr!2054 (Array (_ BitVec 32) (_ BitVec 64))) (size!2309 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!995 0))(
  ( (ValueCellFull!995 (v!2891 V!3217)) (EmptyCell!995) )
))
(declare-datatypes ((array!4333 0))(
  ( (array!4334 (arr!2055 (Array (_ BitVec 32) ValueCell!995)) (size!2310 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!898 0))(
  ( (LongMapFixedSize!899 (defaultEntry!2581 Int) (mask!6727 (_ BitVec 32)) (extraKeys!2386 (_ BitVec 32)) (zeroValue!2456 V!3217) (minValue!2456 V!3217) (_size!498 (_ BitVec 32)) (_keys!4287 array!4331) (_values!2564 array!4333) (_vacant!498 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!898)

(declare-fun mapValue!3924 () ValueCell!995)

(declare-fun mapKey!3923 () (_ BitVec 32))

(declare-fun mapRest!3924 () (Array (_ BitVec 32) ValueCell!995))

(assert (=> mapNonEmpty!3923 (= (arr!2055 (_values!2564 newMap!16)) (store mapRest!3924 mapKey!3923 mapValue!3924))))

(declare-fun b!105168 () Bool)

(declare-fun tp_is_empty!2677 () Bool)

(assert (=> b!105168 (= e!68471 tp_is_empty!2677)))

(declare-fun b!105169 () Bool)

(declare-fun res!52384 () Bool)

(declare-fun e!68477 () Bool)

(assert (=> b!105169 (=> (not res!52384) (not e!68477))))

(declare-fun valid!421 (LongMapFixedSize!898) Bool)

(assert (=> b!105169 (= res!52384 (valid!421 newMap!16))))

(declare-fun b!105170 () Bool)

(declare-fun res!52379 () Bool)

(assert (=> b!105170 (=> (not res!52379) (not e!68477))))

(declare-fun from!355 () (_ BitVec 32))

(declare-datatypes ((Cell!700 0))(
  ( (Cell!701 (v!2892 LongMapFixedSize!898)) )
))
(declare-datatypes ((LongMap!700 0))(
  ( (LongMap!701 (underlying!361 Cell!700)) )
))
(declare-fun thiss!992 () LongMap!700)

(assert (=> b!105170 (= res!52379 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!105171 () Bool)

(declare-fun e!68462 () Bool)

(declare-fun e!68476 () Bool)

(assert (=> b!105171 (= e!68462 (not e!68476))))

(declare-fun res!52382 () Bool)

(assert (=> b!105171 (=> res!52382 e!68476)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!105171 (= res!52382 (not (validMask!0 (mask!6727 (v!2892 (underlying!361 thiss!992))))))))

(declare-datatypes ((tuple2!2360 0))(
  ( (tuple2!2361 (_1!1191 (_ BitVec 64)) (_2!1191 V!3217)) )
))
(declare-datatypes ((List!1596 0))(
  ( (Nil!1593) (Cons!1592 (h!2189 tuple2!2360) (t!5671 List!1596)) )
))
(declare-datatypes ((ListLongMap!1533 0))(
  ( (ListLongMap!1534 (toList!782 List!1596)) )
))
(declare-fun lt!53714 () ListLongMap!1533)

(declare-fun lt!53713 () tuple2!2360)

(declare-fun lt!53718 () tuple2!2360)

(declare-fun +!139 (ListLongMap!1533 tuple2!2360) ListLongMap!1533)

(assert (=> b!105171 (= (+!139 (+!139 lt!53714 lt!53713) lt!53718) (+!139 (+!139 lt!53714 lt!53718) lt!53713))))

(assert (=> b!105171 (= lt!53718 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun lt!53719 () V!3217)

(assert (=> b!105171 (= lt!53713 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))

(declare-datatypes ((Unit!3212 0))(
  ( (Unit!3213) )
))
(declare-fun lt!53711 () Unit!3212)

(declare-fun addCommutativeForDiffKeys!52 (ListLongMap!1533 (_ BitVec 64) V!3217 (_ BitVec 64) V!3217) Unit!3212)

(assert (=> b!105171 (= lt!53711 (addCommutativeForDiffKeys!52 lt!53714 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!106 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) Int) ListLongMap!1533)

(assert (=> b!105171 (= lt!53714 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105172 () Bool)

(declare-fun e!68464 () Bool)

(declare-fun e!68465 () Bool)

(assert (=> b!105172 (= e!68464 e!68465)))

(declare-fun b!105173 () Bool)

(declare-fun e!68475 () Bool)

(declare-fun e!68473 () Bool)

(assert (=> b!105173 (= e!68475 e!68473)))

(declare-fun res!52383 () Bool)

(assert (=> b!105173 (=> (not res!52383) (not e!68473))))

(assert (=> b!105173 (= res!52383 (and (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1334 (ValueCell!995 V!3217) V!3217)

(declare-fun dynLambda!383 (Int (_ BitVec 64)) V!3217)

(assert (=> b!105173 (= lt!53719 (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!68474 () Bool)

(declare-fun e!68472 () Bool)

(declare-fun array_inv!1269 (array!4331) Bool)

(declare-fun array_inv!1270 (array!4333) Bool)

(assert (=> b!105174 (= e!68472 (and tp!9888 tp_is_empty!2677 (array_inv!1269 (_keys!4287 newMap!16)) (array_inv!1270 (_values!2564 newMap!16)) e!68474))))

(declare-fun b!105175 () Bool)

(declare-fun res!52385 () Bool)

(assert (=> b!105175 (=> (not res!52385) (not e!68477))))

(assert (=> b!105175 (= res!52385 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6727 newMap!16)) (_size!498 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun mapIsEmpty!3923 () Bool)

(declare-fun mapRes!3923 () Bool)

(assert (=> mapIsEmpty!3923 mapRes!3923))

(declare-fun mapIsEmpty!3924 () Bool)

(assert (=> mapIsEmpty!3924 mapRes!3924))

(declare-fun b!105176 () Bool)

(assert (=> b!105176 (= e!68476 (or (not (= (size!2310 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6727 (v!2892 (underlying!361 thiss!992)))))) (= (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (size!2310 (_values!2564 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!105177 () Bool)

(assert (=> b!105177 (= e!68473 e!68462)))

(declare-fun res!52386 () Bool)

(assert (=> b!105177 (=> (not res!52386) (not e!68462))))

(declare-datatypes ((tuple2!2362 0))(
  ( (tuple2!2363 (_1!1192 Bool) (_2!1192 LongMapFixedSize!898)) )
))
(declare-fun lt!53717 () tuple2!2362)

(assert (=> b!105177 (= res!52386 (and (_1!1192 lt!53717) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!53715 () Unit!3212)

(declare-fun e!68469 () Unit!3212)

(assert (=> b!105177 (= lt!53715 e!68469)))

(declare-fun c!18279 () Bool)

(declare-fun lt!53721 () ListLongMap!1533)

(declare-fun contains!814 (ListLongMap!1533 (_ BitVec 64)) Bool)

(assert (=> b!105177 (= c!18279 (contains!814 lt!53721 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun update!159 (LongMapFixedSize!898 (_ BitVec 64) V!3217) tuple2!2362)

(assert (=> b!105177 (= lt!53717 (update!159 newMap!16 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))

(declare-fun b!105178 () Bool)

(assert (=> b!105178 (= e!68477 e!68475)))

(declare-fun res!52380 () Bool)

(assert (=> b!105178 (=> (not res!52380) (not e!68475))))

(declare-fun lt!53722 () ListLongMap!1533)

(assert (=> b!105178 (= res!52380 (= lt!53722 lt!53721))))

(declare-fun map!1283 (LongMapFixedSize!898) ListLongMap!1533)

(assert (=> b!105178 (= lt!53721 (map!1283 newMap!16))))

(declare-fun getCurrentListMap!469 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) Int) ListLongMap!1533)

(assert (=> b!105178 (= lt!53722 (getCurrentListMap!469 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun mapNonEmpty!3924 () Bool)

(declare-fun tp!9886 () Bool)

(declare-fun e!68463 () Bool)

(assert (=> mapNonEmpty!3924 (= mapRes!3923 (and tp!9886 e!68463))))

(declare-fun mapKey!3924 () (_ BitVec 32))

(declare-fun mapValue!3923 () ValueCell!995)

(declare-fun mapRest!3923 () (Array (_ BitVec 32) ValueCell!995))

(assert (=> mapNonEmpty!3924 (= (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (store mapRest!3923 mapKey!3924 mapValue!3923))))

(declare-fun b!105179 () Bool)

(declare-fun Unit!3214 () Unit!3212)

(assert (=> b!105179 (= e!68469 Unit!3214)))

(declare-fun lt!53716 () Unit!3212)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!99 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) (_ BitVec 32) Int) Unit!3212)

(assert (=> b!105179 (= lt!53716 (lemmaListMapContainsThenArrayContainsFrom!99 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4331 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!105179 (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!53712 () Unit!3212)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4331 (_ BitVec 32) (_ BitVec 32)) Unit!3212)

(assert (=> b!105179 (= lt!53712 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1597 0))(
  ( (Nil!1594) (Cons!1593 (h!2190 (_ BitVec 64)) (t!5672 List!1597)) )
))
(declare-fun arrayNoDuplicates!0 (array!4331 (_ BitVec 32) List!1597) Bool)

(assert (=> b!105179 (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) from!355 Nil!1594)))

(declare-fun lt!53720 () Unit!3212)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4331 (_ BitVec 32) (_ BitVec 64) List!1597) Unit!3212)

(assert (=> b!105179 (= lt!53720 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594)))))

(assert (=> b!105179 false))

(declare-fun b!105180 () Bool)

(declare-fun Unit!3215 () Unit!3212)

(assert (=> b!105180 (= e!68469 Unit!3215)))

(declare-fun res!52381 () Bool)

(assert (=> start!12354 (=> (not res!52381) (not e!68477))))

(declare-fun valid!422 (LongMap!700) Bool)

(assert (=> start!12354 (= res!52381 (valid!422 thiss!992))))

(assert (=> start!12354 e!68477))

(assert (=> start!12354 e!68464))

(assert (=> start!12354 true))

(assert (=> start!12354 e!68472))

(declare-fun b!105181 () Bool)

(assert (=> b!105181 (= e!68463 tp_is_empty!2677)))

(declare-fun b!105182 () Bool)

(declare-fun e!68478 () Bool)

(assert (=> b!105182 (= e!68474 (and e!68478 mapRes!3924))))

(declare-fun condMapEmpty!3923 () Bool)

(declare-fun mapDefault!3924 () ValueCell!995)

(assert (=> b!105182 (= condMapEmpty!3923 (= (arr!2055 (_values!2564 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3924)))))

(declare-fun b!105183 () Bool)

(assert (=> b!105183 (= e!68478 tp_is_empty!2677)))

(declare-fun e!68466 () Bool)

(declare-fun e!68470 () Bool)

(assert (=> b!105184 (= e!68470 (and tp!9885 tp_is_empty!2677 (array_inv!1269 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (array_inv!1270 (_values!2564 (v!2892 (underlying!361 thiss!992)))) e!68466))))

(declare-fun b!105185 () Bool)

(declare-fun e!68468 () Bool)

(assert (=> b!105185 (= e!68468 tp_is_empty!2677)))

(declare-fun b!105186 () Bool)

(assert (=> b!105186 (= e!68465 e!68470)))

(declare-fun b!105187 () Bool)

(assert (=> b!105187 (= e!68466 (and e!68468 mapRes!3923))))

(declare-fun condMapEmpty!3924 () Bool)

(declare-fun mapDefault!3923 () ValueCell!995)

(assert (=> b!105187 (= condMapEmpty!3924 (= (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3923)))))

(assert (= (and start!12354 res!52381) b!105170))

(assert (= (and b!105170 res!52379) b!105169))

(assert (= (and b!105169 res!52384) b!105175))

(assert (= (and b!105175 res!52385) b!105178))

(assert (= (and b!105178 res!52380) b!105173))

(assert (= (and b!105173 res!52383) b!105177))

(assert (= (and b!105177 c!18279) b!105179))

(assert (= (and b!105177 (not c!18279)) b!105180))

(assert (= (and b!105177 res!52386) b!105171))

(assert (= (and b!105171 (not res!52382)) b!105176))

(assert (= (and b!105187 condMapEmpty!3924) mapIsEmpty!3923))

(assert (= (and b!105187 (not condMapEmpty!3924)) mapNonEmpty!3924))

(get-info :version)

(assert (= (and mapNonEmpty!3924 ((_ is ValueCellFull!995) mapValue!3923)) b!105181))

(assert (= (and b!105187 ((_ is ValueCellFull!995) mapDefault!3923)) b!105185))

(assert (= b!105184 b!105187))

(assert (= b!105186 b!105184))

(assert (= b!105172 b!105186))

(assert (= start!12354 b!105172))

(assert (= (and b!105182 condMapEmpty!3923) mapIsEmpty!3924))

(assert (= (and b!105182 (not condMapEmpty!3923)) mapNonEmpty!3923))

(assert (= (and mapNonEmpty!3923 ((_ is ValueCellFull!995) mapValue!3924)) b!105168))

(assert (= (and b!105182 ((_ is ValueCellFull!995) mapDefault!3924)) b!105183))

(assert (= b!105174 b!105182))

(assert (= start!12354 b!105174))

(declare-fun b_lambda!4711 () Bool)

(assert (=> (not b_lambda!4711) (not b!105173)))

(declare-fun t!5668 () Bool)

(declare-fun tb!2041 () Bool)

(assert (=> (and b!105184 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))) t!5668) tb!2041))

(declare-fun result!3439 () Bool)

(assert (=> tb!2041 (= result!3439 tp_is_empty!2677)))

(assert (=> b!105173 t!5668))

(declare-fun b_and!6493 () Bool)

(assert (= b_and!6489 (and (=> t!5668 result!3439) b_and!6493)))

(declare-fun t!5670 () Bool)

(declare-fun tb!2043 () Bool)

(assert (=> (and b!105174 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))) t!5670) tb!2043))

(declare-fun result!3443 () Bool)

(assert (= result!3443 result!3439))

(assert (=> b!105173 t!5670))

(declare-fun b_and!6495 () Bool)

(assert (= b_and!6491 (and (=> t!5670 result!3443) b_and!6495)))

(declare-fun m!117249 () Bool)

(assert (=> start!12354 m!117249))

(declare-fun m!117251 () Bool)

(assert (=> b!105169 m!117251))

(declare-fun m!117253 () Bool)

(assert (=> b!105184 m!117253))

(declare-fun m!117255 () Bool)

(assert (=> b!105184 m!117255))

(declare-fun m!117257 () Bool)

(assert (=> b!105179 m!117257))

(declare-fun m!117259 () Bool)

(assert (=> b!105179 m!117259))

(declare-fun m!117261 () Bool)

(assert (=> b!105179 m!117261))

(declare-fun m!117263 () Bool)

(assert (=> b!105179 m!117263))

(assert (=> b!105179 m!117261))

(assert (=> b!105179 m!117261))

(declare-fun m!117265 () Bool)

(assert (=> b!105179 m!117265))

(assert (=> b!105179 m!117261))

(declare-fun m!117267 () Bool)

(assert (=> b!105179 m!117267))

(declare-fun m!117269 () Bool)

(assert (=> b!105178 m!117269))

(declare-fun m!117271 () Bool)

(assert (=> b!105178 m!117271))

(declare-fun m!117273 () Bool)

(assert (=> b!105171 m!117273))

(declare-fun m!117275 () Bool)

(assert (=> b!105171 m!117275))

(declare-fun m!117277 () Bool)

(assert (=> b!105171 m!117277))

(assert (=> b!105171 m!117273))

(declare-fun m!117279 () Bool)

(assert (=> b!105171 m!117279))

(assert (=> b!105171 m!117261))

(assert (=> b!105171 m!117261))

(declare-fun m!117281 () Bool)

(assert (=> b!105171 m!117281))

(assert (=> b!105171 m!117277))

(declare-fun m!117283 () Bool)

(assert (=> b!105171 m!117283))

(declare-fun m!117285 () Bool)

(assert (=> b!105171 m!117285))

(declare-fun m!117287 () Bool)

(assert (=> mapNonEmpty!3924 m!117287))

(declare-fun m!117289 () Bool)

(assert (=> b!105174 m!117289))

(declare-fun m!117291 () Bool)

(assert (=> b!105174 m!117291))

(declare-fun m!117293 () Bool)

(assert (=> mapNonEmpty!3923 m!117293))

(assert (=> b!105173 m!117261))

(declare-fun m!117295 () Bool)

(assert (=> b!105173 m!117295))

(declare-fun m!117297 () Bool)

(assert (=> b!105173 m!117297))

(assert (=> b!105173 m!117295))

(assert (=> b!105173 m!117297))

(declare-fun m!117299 () Bool)

(assert (=> b!105173 m!117299))

(assert (=> b!105177 m!117261))

(assert (=> b!105177 m!117261))

(declare-fun m!117301 () Bool)

(assert (=> b!105177 m!117301))

(assert (=> b!105177 m!117261))

(declare-fun m!117303 () Bool)

(assert (=> b!105177 m!117303))

(check-sat (not b!105169) (not b_lambda!4711) (not b_next!2521) b_and!6493 (not b_next!2523) (not start!12354) (not b!105179) (not b!105177) (not b!105178) (not b!105174) b_and!6495 (not b!105173) tp_is_empty!2677 (not mapNonEmpty!3924) (not b!105171) (not b!105184) (not mapNonEmpty!3923))
(check-sat b_and!6493 b_and!6495 (not b_next!2521) (not b_next!2523))
(get-model)

(declare-fun b_lambda!4717 () Bool)

(assert (= b_lambda!4711 (or (and b!105184 b_free!2521) (and b!105174 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))) b_lambda!4717)))

(check-sat (not b!105169) (not b_next!2521) b_and!6493 (not b_lambda!4717) (not b_next!2523) (not start!12354) (not b!105179) (not b!105177) (not b!105178) (not b!105174) b_and!6495 (not b!105173) tp_is_empty!2677 (not mapNonEmpty!3924) (not b!105171) (not b!105184) (not mapNonEmpty!3923))
(check-sat b_and!6493 b_and!6495 (not b_next!2521) (not b_next!2523))
(get-model)

(declare-fun d!28771 () Bool)

(declare-fun e!68592 () Bool)

(assert (=> d!28771 e!68592))

(declare-fun res!52437 () Bool)

(assert (=> d!28771 (=> res!52437 e!68592)))

(declare-fun lt!53804 () Bool)

(assert (=> d!28771 (= res!52437 (not lt!53804))))

(declare-fun lt!53805 () Bool)

(assert (=> d!28771 (= lt!53804 lt!53805)))

(declare-fun lt!53806 () Unit!3212)

(declare-fun e!68593 () Unit!3212)

(assert (=> d!28771 (= lt!53806 e!68593)))

(declare-fun c!18288 () Bool)

(assert (=> d!28771 (= c!18288 lt!53805)))

(declare-fun containsKey!160 (List!1596 (_ BitVec 64)) Bool)

(assert (=> d!28771 (= lt!53805 (containsKey!160 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!28771 (= (contains!814 lt!53721 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!53804)))

(declare-fun b!105320 () Bool)

(declare-fun lt!53803 () Unit!3212)

(assert (=> b!105320 (= e!68593 lt!53803)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!108 (List!1596 (_ BitVec 64)) Unit!3212)

(assert (=> b!105320 (= lt!53803 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-datatypes ((Option!163 0))(
  ( (Some!162 (v!2898 V!3217)) (None!161) )
))
(declare-fun isDefined!109 (Option!163) Bool)

(declare-fun getValueByKey!157 (List!1596 (_ BitVec 64)) Option!163)

(assert (=> b!105320 (isDefined!109 (getValueByKey!157 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105321 () Bool)

(declare-fun Unit!3219 () Unit!3212)

(assert (=> b!105321 (= e!68593 Unit!3219)))

(declare-fun b!105322 () Bool)

(assert (=> b!105322 (= e!68592 (isDefined!109 (getValueByKey!157 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (= (and d!28771 c!18288) b!105320))

(assert (= (and d!28771 (not c!18288)) b!105321))

(assert (= (and d!28771 (not res!52437)) b!105322))

(assert (=> d!28771 m!117261))

(declare-fun m!117417 () Bool)

(assert (=> d!28771 m!117417))

(assert (=> b!105320 m!117261))

(declare-fun m!117419 () Bool)

(assert (=> b!105320 m!117419))

(assert (=> b!105320 m!117261))

(declare-fun m!117421 () Bool)

(assert (=> b!105320 m!117421))

(assert (=> b!105320 m!117421))

(declare-fun m!117423 () Bool)

(assert (=> b!105320 m!117423))

(assert (=> b!105322 m!117261))

(assert (=> b!105322 m!117421))

(assert (=> b!105322 m!117421))

(assert (=> b!105322 m!117423))

(assert (=> b!105177 d!28771))

(declare-fun bm!11084 () Bool)

(declare-fun c!18317 () Bool)

(declare-fun c!18323 () Bool)

(assert (=> bm!11084 (= c!18317 c!18323)))

(declare-fun call!11109 () Bool)

(declare-fun e!68649 () ListLongMap!1533)

(assert (=> bm!11084 (= call!11109 (contains!814 e!68649 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105403 () Bool)

(declare-fun c!18319 () Bool)

(declare-datatypes ((SeekEntryResult!253 0))(
  ( (MissingZero!253 (index!3160 (_ BitVec 32))) (Found!253 (index!3161 (_ BitVec 32))) (Intermediate!253 (undefined!1065 Bool) (index!3162 (_ BitVec 32)) (x!13639 (_ BitVec 32))) (Undefined!253) (MissingVacant!253 (index!3163 (_ BitVec 32))) )
))
(declare-fun lt!53873 () SeekEntryResult!253)

(assert (=> b!105403 (= c!18319 ((_ is MissingVacant!253) lt!53873))))

(declare-fun e!68637 () tuple2!2362)

(declare-fun e!68642 () tuple2!2362)

(assert (=> b!105403 (= e!68637 e!68642)))

(declare-fun bm!11085 () Bool)

(declare-fun call!11104 () ListLongMap!1533)

(declare-fun call!11089 () ListLongMap!1533)

(assert (=> bm!11085 (= call!11104 call!11089)))

(declare-fun bm!11086 () Bool)

(declare-fun call!11100 () ListLongMap!1533)

(declare-fun call!11088 () ListLongMap!1533)

(assert (=> bm!11086 (= call!11100 call!11088)))

(declare-fun bm!11087 () Bool)

(declare-fun call!11103 () ListLongMap!1533)

(declare-fun call!11093 () ListLongMap!1533)

(assert (=> bm!11087 (= call!11103 call!11093)))

(declare-fun b!105404 () Bool)

(declare-fun res!52475 () Bool)

(declare-fun e!68641 () Bool)

(assert (=> b!105404 (=> (not res!52475) (not e!68641))))

(declare-fun call!11094 () Bool)

(assert (=> b!105404 (= res!52475 call!11094)))

(declare-fun e!68650 () Bool)

(assert (=> b!105404 (= e!68650 e!68641)))

(declare-fun b!105405 () Bool)

(declare-fun e!68647 () Bool)

(declare-fun e!68654 () Bool)

(assert (=> b!105405 (= e!68647 e!68654)))

(declare-fun c!18316 () Bool)

(declare-fun lt!53868 () tuple2!2362)

(assert (=> b!105405 (= c!18316 (_1!1192 lt!53868))))

(declare-fun b!105406 () Bool)

(assert (=> b!105406 (= e!68649 call!11088)))

(declare-fun b!105407 () Bool)

(declare-fun call!11107 () ListLongMap!1533)

(assert (=> b!105407 (= e!68649 call!11107)))

(declare-fun b!105408 () Bool)

(declare-fun e!68655 () Bool)

(declare-fun lt!53883 () SeekEntryResult!253)

(assert (=> b!105408 (= e!68655 ((_ is Undefined!253) lt!53883))))

(declare-fun b!105409 () Bool)

(declare-fun e!68638 () Unit!3212)

(declare-fun Unit!3220 () Unit!3212)

(assert (=> b!105409 (= e!68638 Unit!3220)))

(declare-fun lt!53862 () Unit!3212)

(declare-fun call!11087 () Unit!3212)

(assert (=> b!105409 (= lt!53862 call!11087)))

(declare-fun lt!53887 () SeekEntryResult!253)

(declare-fun call!11096 () SeekEntryResult!253)

(assert (=> b!105409 (= lt!53887 call!11096)))

(declare-fun c!18325 () Bool)

(assert (=> b!105409 (= c!18325 ((_ is MissingZero!253) lt!53887))))

(assert (=> b!105409 e!68650))

(declare-fun lt!53886 () Unit!3212)

(assert (=> b!105409 (= lt!53886 lt!53862)))

(assert (=> b!105409 false))

(declare-fun b!105410 () Bool)

(declare-fun res!52470 () Bool)

(declare-fun e!68645 () Bool)

(assert (=> b!105410 (=> (not res!52470) (not e!68645))))

(declare-fun call!11095 () Bool)

(assert (=> b!105410 (= res!52470 call!11095)))

(declare-fun e!68652 () Bool)

(assert (=> b!105410 (= e!68652 e!68645)))

(declare-fun b!105411 () Bool)

(declare-fun e!68643 () tuple2!2362)

(declare-fun e!68653 () tuple2!2362)

(assert (=> b!105411 (= e!68643 e!68653)))

(declare-fun c!18318 () Bool)

(assert (=> b!105411 (= c!18318 (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105412 () Bool)

(declare-fun e!68648 () Bool)

(assert (=> b!105412 (= e!68655 e!68648)))

(declare-fun res!52476 () Bool)

(assert (=> b!105412 (= res!52476 call!11095)))

(assert (=> b!105412 (=> (not res!52476) (not e!68648))))

(declare-fun b!105413 () Bool)

(declare-fun res!52471 () Bool)

(assert (=> b!105413 (= res!52471 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3163 lt!53887)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68640 () Bool)

(assert (=> b!105413 (=> (not res!52471) (not e!68640))))

(declare-fun bm!11088 () Bool)

(declare-fun call!11099 () SeekEntryResult!253)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4331 (_ BitVec 32)) SeekEntryResult!253)

(assert (=> bm!11088 (= call!11099 (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(declare-fun b!105414 () Bool)

(declare-fun e!68639 () tuple2!2362)

(assert (=> b!105414 (= e!68642 e!68639)))

(declare-fun c!18326 () Bool)

(assert (=> b!105414 (= c!18326 ((_ is MissingZero!253) lt!53873))))

(declare-fun bm!11089 () Bool)

(declare-fun call!11091 () ListLongMap!1533)

(assert (=> bm!11089 (= call!11091 (map!1283 newMap!16))))

(declare-fun b!105415 () Bool)

(declare-fun c!18327 () Bool)

(assert (=> b!105415 (= c!18327 ((_ is MissingVacant!253) lt!53887))))

(declare-fun e!68644 () Bool)

(assert (=> b!105415 (= e!68650 e!68644)))

(declare-fun bm!11090 () Bool)

(assert (=> bm!11090 (= call!11096 call!11099)))

(declare-fun d!28773 () Bool)

(assert (=> d!28773 e!68647))

(declare-fun res!52466 () Bool)

(assert (=> d!28773 (=> (not res!52466) (not e!68647))))

(assert (=> d!28773 (= res!52466 (valid!421 (_2!1192 lt!53868)))))

(assert (=> d!28773 (= lt!53868 e!68643)))

(declare-fun c!18322 () Bool)

(assert (=> d!28773 (= c!18322 (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvneg (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!28773 (valid!421 newMap!16)))

(assert (=> d!28773 (= (update!159 newMap!16 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719) lt!53868)))

(declare-fun b!105416 () Bool)

(declare-fun call!11101 () Bool)

(assert (=> b!105416 (= e!68648 (not call!11101))))

(declare-fun b!105417 () Bool)

(declare-fun res!52467 () Bool)

(declare-fun call!11102 () Bool)

(assert (=> b!105417 (= res!52467 call!11102)))

(declare-fun e!68636 () Bool)

(assert (=> b!105417 (=> (not res!52467) (not e!68636))))

(declare-fun b!105418 () Bool)

(assert (=> b!105418 (= e!68644 e!68640)))

(declare-fun res!52479 () Bool)

(assert (=> b!105418 (= res!52479 call!11094)))

(assert (=> b!105418 (=> (not res!52479) (not e!68640))))

(declare-fun b!105419 () Bool)

(declare-fun e!68646 () Bool)

(assert (=> b!105419 (= e!68654 e!68646)))

(declare-fun call!11106 () ListLongMap!1533)

(declare-fun res!52474 () Bool)

(assert (=> b!105419 (= res!52474 (contains!814 call!11106 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105419 (=> (not res!52474) (not e!68646))))

(declare-fun b!105420 () Bool)

(declare-fun lt!53881 () Unit!3212)

(declare-fun e!68656 () Unit!3212)

(assert (=> b!105420 (= lt!53881 e!68656)))

(declare-fun c!18315 () Bool)

(assert (=> b!105420 (= c!18315 call!11109)))

(assert (=> b!105420 (= e!68637 (tuple2!2363 false newMap!16))))

(declare-fun lt!53885 () SeekEntryResult!253)

(declare-fun b!105421 () Bool)

(declare-fun e!68651 () Bool)

(assert (=> b!105421 (= e!68651 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53885)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun bm!11091 () Bool)

(assert (=> bm!11091 (= call!11106 (map!1283 (_2!1192 lt!53868)))))

(declare-fun b!105422 () Bool)

(declare-fun res!52468 () Bool)

(assert (=> b!105422 (= res!52468 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3163 lt!53883)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105422 (=> (not res!52468) (not e!68648))))

(declare-fun bm!11092 () Bool)

(assert (=> bm!11092 (= call!11094 call!11102)))

(declare-fun bm!11093 () Bool)

(assert (=> bm!11093 (= call!11088 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105423 () Bool)

(declare-fun lt!53879 () SeekEntryResult!253)

(assert (=> b!105423 (= e!68636 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53879)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun call!11110 () Unit!3212)

(declare-fun bm!11094 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) Int) Unit!3212)

(assert (=> bm!11094 (= call!11110 (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(declare-fun bm!11095 () Bool)

(declare-fun call!11092 () Bool)

(assert (=> bm!11095 (= call!11095 call!11092)))

(declare-fun b!105424 () Bool)

(declare-fun call!11108 () Bool)

(assert (=> b!105424 (= e!68640 (not call!11108))))

(declare-fun bm!11096 () Bool)

(assert (=> bm!11096 (= call!11089 (+!139 (ite c!18322 call!11100 call!11088) (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!105425 () Bool)

(declare-fun Unit!3221 () Unit!3212)

(assert (=> b!105425 (= e!68656 Unit!3221)))

(declare-fun lt!53861 () Unit!3212)

(assert (=> b!105425 (= lt!53861 call!11110)))

(declare-fun call!11097 () SeekEntryResult!253)

(assert (=> b!105425 (= lt!53885 call!11097)))

(declare-fun res!52469 () Bool)

(assert (=> b!105425 (= res!52469 ((_ is Found!253) lt!53885))))

(assert (=> b!105425 (=> (not res!52469) (not e!68651))))

(assert (=> b!105425 e!68651))

(declare-fun lt!53876 () Unit!3212)

(assert (=> b!105425 (= lt!53876 lt!53861)))

(assert (=> b!105425 false))

(declare-fun bm!11097 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) Int) Unit!3212)

(assert (=> bm!11097 (= call!11087 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(declare-fun b!105426 () Bool)

(declare-fun lt!53870 () Unit!3212)

(declare-fun lt!53867 () Unit!3212)

(assert (=> b!105426 (= lt!53870 lt!53867)))

(assert (=> b!105426 (= call!11104 call!11103)))

(declare-fun lt!53865 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 V!3217 Int) Unit!3212)

(assert (=> b!105426 (= lt!53867 (lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) lt!53865 (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) lt!53719 (defaultEntry!2581 newMap!16)))))

(assert (=> b!105426 (= lt!53865 (bvor (extraKeys!2386 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!105426 (= e!68653 (tuple2!2363 true (LongMapFixedSize!899 (defaultEntry!2581 newMap!16) (mask!6727 newMap!16) (bvor (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) (zeroValue!2456 newMap!16) lt!53719 (_size!498 newMap!16) (_keys!4287 newMap!16) (_values!2564 newMap!16) (_vacant!498 newMap!16))))))

(declare-fun b!105427 () Bool)

(assert (=> b!105427 (= e!68654 (= call!11106 call!11091))))

(declare-fun bm!11098 () Bool)

(declare-fun call!11098 () Bool)

(assert (=> bm!11098 (= call!11108 call!11098)))

(declare-fun lt!53882 () array!4333)

(declare-fun bm!11099 () Bool)

(assert (=> bm!11099 (= call!11107 (getCurrentListMap!469 (_keys!4287 newMap!16) (ite c!18323 (_values!2564 newMap!16) lt!53882) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun bm!11100 () Bool)

(assert (=> bm!11100 (= call!11101 call!11098)))

(declare-fun b!105428 () Bool)

(assert (=> b!105428 (= e!68645 (not call!11101))))

(declare-fun b!105429 () Bool)

(declare-fun res!52473 () Bool)

(assert (=> b!105429 (= res!52473 call!11092)))

(assert (=> b!105429 (=> (not res!52473) (not e!68651))))

(declare-fun b!105430 () Bool)

(assert (=> b!105430 (= e!68644 ((_ is Undefined!253) lt!53887))))

(declare-fun b!105431 () Bool)

(declare-fun lt!53875 () tuple2!2362)

(declare-fun call!11090 () tuple2!2362)

(assert (=> b!105431 (= lt!53875 call!11090)))

(assert (=> b!105431 (= e!68639 (tuple2!2363 (_1!1192 lt!53875) (_2!1192 lt!53875)))))

(declare-fun b!105432 () Bool)

(assert (=> b!105432 (= e!68643 e!68637)))

(assert (=> b!105432 (= lt!53873 (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(assert (=> b!105432 (= c!18323 ((_ is Undefined!253) lt!53873))))

(declare-fun bm!11101 () Bool)

(assert (=> bm!11101 (= call!11098 (arrayContainsKey!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!105433 () Bool)

(declare-fun lt!53863 () Unit!3212)

(assert (=> b!105433 (= e!68656 lt!53863)))

(assert (=> b!105433 (= lt!53863 call!11087)))

(assert (=> b!105433 (= lt!53883 call!11097)))

(declare-fun c!18324 () Bool)

(assert (=> b!105433 (= c!18324 ((_ is MissingZero!253) lt!53883))))

(assert (=> b!105433 e!68652))

(declare-fun bm!11102 () Bool)

(declare-fun updateHelperNewKey!47 (LongMapFixedSize!898 (_ BitVec 64) V!3217 (_ BitVec 32)) tuple2!2362)

(assert (=> bm!11102 (= call!11090 (updateHelperNewKey!47 newMap!16 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))))))

(declare-fun b!105434 () Bool)

(declare-fun res!52478 () Bool)

(assert (=> b!105434 (=> (not res!52478) (not e!68645))))

(assert (=> b!105434 (= res!52478 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3160 lt!53883)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11103 () Bool)

(declare-fun call!11105 () Bool)

(assert (=> bm!11103 (= call!11092 call!11105)))

(declare-fun b!105435 () Bool)

(declare-fun lt!53871 () Unit!3212)

(declare-fun lt!53869 () Unit!3212)

(assert (=> b!105435 (= lt!53871 lt!53869)))

(assert (=> b!105435 (contains!814 call!11107 (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!107 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) Int) Unit!3212)

(assert (=> b!105435 (= lt!53869 (lemmaValidKeyInArrayIsInListMap!107 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3161 lt!53873) (defaultEntry!2581 newMap!16)))))

(assert (=> b!105435 (= lt!53882 (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))))

(declare-fun lt!53874 () Unit!3212)

(declare-fun lt!53877 () Unit!3212)

(assert (=> b!105435 (= lt!53874 lt!53877)))

(assert (=> b!105435 (= call!11089 call!11093)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) (_ BitVec 64) V!3217 Int) Unit!3212)

(assert (=> b!105435 (= lt!53877 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3161 lt!53873) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53884 () Unit!3212)

(assert (=> b!105435 (= lt!53884 e!68638)))

(declare-fun c!18321 () Bool)

(assert (=> b!105435 (= c!18321 call!11109)))

(assert (=> b!105435 (= e!68639 (tuple2!2363 true (LongMapFixedSize!899 (defaultEntry!2581 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (_size!498 newMap!16) (_keys!4287 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (_vacant!498 newMap!16))))))

(declare-fun b!105436 () Bool)

(declare-fun res!52477 () Bool)

(assert (=> b!105436 (=> (not res!52477) (not e!68641))))

(assert (=> b!105436 (= res!52477 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3160 lt!53887)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11104 () Bool)

(assert (=> bm!11104 (= call!11102 call!11105)))

(declare-fun b!105437 () Bool)

(assert (=> b!105437 (= e!68646 (= call!11106 (+!139 call!11091 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun bm!11105 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11105 (= call!11105 (inRange!0 (ite c!18323 (ite c!18315 (index!3161 lt!53885) (ite c!18324 (index!3160 lt!53883) (index!3163 lt!53883))) (ite c!18321 (index!3161 lt!53879) (ite c!18325 (index!3160 lt!53887) (index!3163 lt!53887)))) (mask!6727 newMap!16)))))

(declare-fun b!105438 () Bool)

(declare-fun lt!53872 () Unit!3212)

(assert (=> b!105438 (= e!68638 lt!53872)))

(assert (=> b!105438 (= lt!53872 call!11110)))

(assert (=> b!105438 (= lt!53879 call!11096)))

(declare-fun res!52472 () Bool)

(assert (=> b!105438 (= res!52472 ((_ is Found!253) lt!53879))))

(assert (=> b!105438 (=> (not res!52472) (not e!68636))))

(assert (=> b!105438 e!68636))

(declare-fun bm!11106 () Bool)

(declare-fun lt!53878 () (_ BitVec 32))

(assert (=> bm!11106 (= call!11093 (getCurrentListMap!469 (_keys!4287 newMap!16) (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) (mask!6727 newMap!16) (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105439 () Bool)

(declare-fun c!18320 () Bool)

(assert (=> b!105439 (= c!18320 ((_ is MissingVacant!253) lt!53883))))

(assert (=> b!105439 (= e!68652 e!68655)))

(declare-fun bm!11107 () Bool)

(assert (=> bm!11107 (= call!11097 call!11099)))

(declare-fun b!105440 () Bool)

(declare-fun lt!53866 () Unit!3212)

(declare-fun lt!53864 () Unit!3212)

(assert (=> b!105440 (= lt!53866 lt!53864)))

(assert (=> b!105440 (= call!11104 call!11103)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!47 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 V!3217 Int) Unit!3212)

(assert (=> b!105440 (= lt!53864 (lemmaChangeZeroKeyThenAddPairToListMap!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) lt!53878 (zeroValue!2456 newMap!16) lt!53719 (minValue!2456 newMap!16) (defaultEntry!2581 newMap!16)))))

(assert (=> b!105440 (= lt!53878 (bvor (extraKeys!2386 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!105440 (= e!68653 (tuple2!2363 true (LongMapFixedSize!899 (defaultEntry!2581 newMap!16) (mask!6727 newMap!16) (bvor (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) lt!53719 (minValue!2456 newMap!16) (_size!498 newMap!16) (_keys!4287 newMap!16) (_values!2564 newMap!16) (_vacant!498 newMap!16))))))

(declare-fun b!105441 () Bool)

(declare-fun lt!53880 () tuple2!2362)

(assert (=> b!105441 (= e!68642 (tuple2!2363 (_1!1192 lt!53880) (_2!1192 lt!53880)))))

(assert (=> b!105441 (= lt!53880 call!11090)))

(declare-fun b!105442 () Bool)

(assert (=> b!105442 (= e!68641 (not call!11108))))

(assert (= (and d!28773 c!18322) b!105411))

(assert (= (and d!28773 (not c!18322)) b!105432))

(assert (= (and b!105411 c!18318) b!105440))

(assert (= (and b!105411 (not c!18318)) b!105426))

(assert (= (or b!105440 b!105426) bm!11086))

(assert (= (or b!105440 b!105426) bm!11087))

(assert (= (or b!105440 b!105426) bm!11085))

(assert (= (and b!105432 c!18323) b!105420))

(assert (= (and b!105432 (not c!18323)) b!105403))

(assert (= (and b!105420 c!18315) b!105425))

(assert (= (and b!105420 (not c!18315)) b!105433))

(assert (= (and b!105425 res!52469) b!105429))

(assert (= (and b!105429 res!52473) b!105421))

(assert (= (and b!105433 c!18324) b!105410))

(assert (= (and b!105433 (not c!18324)) b!105439))

(assert (= (and b!105410 res!52470) b!105434))

(assert (= (and b!105434 res!52478) b!105428))

(assert (= (and b!105439 c!18320) b!105412))

(assert (= (and b!105439 (not c!18320)) b!105408))

(assert (= (and b!105412 res!52476) b!105422))

(assert (= (and b!105422 res!52468) b!105416))

(assert (= (or b!105410 b!105412) bm!11095))

(assert (= (or b!105428 b!105416) bm!11100))

(assert (= (or b!105429 bm!11095) bm!11103))

(assert (= (or b!105425 b!105433) bm!11107))

(assert (= (and b!105403 c!18319) b!105441))

(assert (= (and b!105403 (not c!18319)) b!105414))

(assert (= (and b!105414 c!18326) b!105431))

(assert (= (and b!105414 (not c!18326)) b!105435))

(assert (= (and b!105435 c!18321) b!105438))

(assert (= (and b!105435 (not c!18321)) b!105409))

(assert (= (and b!105438 res!52472) b!105417))

(assert (= (and b!105417 res!52467) b!105423))

(assert (= (and b!105409 c!18325) b!105404))

(assert (= (and b!105409 (not c!18325)) b!105415))

(assert (= (and b!105404 res!52475) b!105436))

(assert (= (and b!105436 res!52477) b!105442))

(assert (= (and b!105415 c!18327) b!105418))

(assert (= (and b!105415 (not c!18327)) b!105430))

(assert (= (and b!105418 res!52479) b!105413))

(assert (= (and b!105413 res!52471) b!105424))

(assert (= (or b!105404 b!105418) bm!11092))

(assert (= (or b!105442 b!105424) bm!11098))

(assert (= (or b!105417 bm!11092) bm!11104))

(assert (= (or b!105438 b!105409) bm!11090))

(assert (= (or b!105441 b!105431) bm!11102))

(assert (= (or bm!11100 bm!11098) bm!11101))

(assert (= (or bm!11103 bm!11104) bm!11105))

(assert (= (or b!105420 b!105435) bm!11099))

(assert (= (or b!105425 b!105438) bm!11094))

(assert (= (or bm!11107 bm!11090) bm!11088))

(assert (= (or b!105433 b!105409) bm!11097))

(assert (= (or b!105420 b!105435) bm!11084))

(assert (= (and bm!11084 c!18317) b!105407))

(assert (= (and bm!11084 (not c!18317)) b!105406))

(assert (= (or bm!11087 b!105435) bm!11106))

(assert (= (or bm!11086 b!105406 b!105435) bm!11093))

(assert (= (or bm!11085 b!105435) bm!11096))

(assert (= (and d!28773 res!52466) b!105405))

(assert (= (and b!105405 c!18316) b!105419))

(assert (= (and b!105405 (not c!18316)) b!105427))

(assert (= (and b!105419 res!52474) b!105437))

(assert (= (or b!105437 b!105427) bm!11089))

(assert (= (or b!105419 b!105437 b!105427) bm!11091))

(declare-fun m!117425 () Bool)

(assert (=> b!105436 m!117425))

(declare-fun m!117427 () Bool)

(assert (=> b!105440 m!117427))

(assert (=> bm!11089 m!117269))

(declare-fun m!117429 () Bool)

(assert (=> b!105422 m!117429))

(assert (=> bm!11101 m!117261))

(declare-fun m!117431 () Bool)

(assert (=> bm!11101 m!117431))

(assert (=> b!105432 m!117261))

(declare-fun m!117433 () Bool)

(assert (=> b!105432 m!117433))

(assert (=> bm!11097 m!117261))

(declare-fun m!117435 () Bool)

(assert (=> bm!11097 m!117435))

(declare-fun m!117437 () Bool)

(assert (=> bm!11091 m!117437))

(declare-fun m!117439 () Bool)

(assert (=> d!28773 m!117439))

(assert (=> d!28773 m!117251))

(declare-fun m!117441 () Bool)

(assert (=> bm!11099 m!117441))

(assert (=> bm!11084 m!117261))

(declare-fun m!117443 () Bool)

(assert (=> bm!11084 m!117443))

(declare-fun m!117445 () Bool)

(assert (=> bm!11106 m!117445))

(declare-fun m!117447 () Bool)

(assert (=> bm!11106 m!117447))

(declare-fun m!117449 () Bool)

(assert (=> b!105434 m!117449))

(declare-fun m!117451 () Bool)

(assert (=> bm!11093 m!117451))

(assert (=> b!105419 m!117261))

(declare-fun m!117453 () Bool)

(assert (=> b!105419 m!117453))

(declare-fun m!117455 () Bool)

(assert (=> b!105426 m!117455))

(assert (=> bm!11094 m!117261))

(declare-fun m!117457 () Bool)

(assert (=> bm!11094 m!117457))

(declare-fun m!117459 () Bool)

(assert (=> b!105437 m!117459))

(declare-fun m!117461 () Bool)

(assert (=> b!105435 m!117461))

(declare-fun m!117463 () Bool)

(assert (=> b!105435 m!117463))

(assert (=> b!105435 m!117261))

(declare-fun m!117465 () Bool)

(assert (=> b!105435 m!117465))

(assert (=> b!105435 m!117445))

(declare-fun m!117467 () Bool)

(assert (=> b!105435 m!117467))

(assert (=> b!105435 m!117461))

(declare-fun m!117469 () Bool)

(assert (=> b!105423 m!117469))

(declare-fun m!117471 () Bool)

(assert (=> b!105421 m!117471))

(declare-fun m!117473 () Bool)

(assert (=> bm!11096 m!117473))

(assert (=> bm!11102 m!117261))

(declare-fun m!117475 () Bool)

(assert (=> bm!11102 m!117475))

(declare-fun m!117477 () Bool)

(assert (=> bm!11105 m!117477))

(assert (=> bm!11088 m!117261))

(assert (=> bm!11088 m!117433))

(declare-fun m!117479 () Bool)

(assert (=> b!105413 m!117479))

(assert (=> b!105177 d!28773))

(declare-fun d!28775 () Bool)

(declare-fun c!18330 () Bool)

(assert (=> d!28775 (= c!18330 ((_ is ValueCellFull!995) (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!68659 () V!3217)

(assert (=> d!28775 (= (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68659)))

(declare-fun b!105447 () Bool)

(declare-fun get!1336 (ValueCell!995 V!3217) V!3217)

(assert (=> b!105447 (= e!68659 (get!1336 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105448 () Bool)

(declare-fun get!1337 (ValueCell!995 V!3217) V!3217)

(assert (=> b!105448 (= e!68659 (get!1337 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28775 c!18330) b!105447))

(assert (= (and d!28775 (not c!18330)) b!105448))

(assert (=> b!105447 m!117295))

(assert (=> b!105447 m!117297))

(declare-fun m!117481 () Bool)

(assert (=> b!105447 m!117481))

(assert (=> b!105448 m!117295))

(assert (=> b!105448 m!117297))

(declare-fun m!117483 () Bool)

(assert (=> b!105448 m!117483))

(assert (=> b!105173 d!28775))

(declare-fun d!28777 () Bool)

(assert (=> d!28777 (= (valid!422 thiss!992) (valid!421 (v!2892 (underlying!361 thiss!992))))))

(declare-fun bs!4335 () Bool)

(assert (= bs!4335 d!28777))

(declare-fun m!117485 () Bool)

(assert (=> bs!4335 m!117485))

(assert (=> start!12354 d!28777))

(declare-fun d!28779 () Bool)

(assert (=> d!28779 (= (map!1283 newMap!16) (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun bs!4336 () Bool)

(assert (= bs!4336 d!28779))

(assert (=> bs!4336 m!117451))

(assert (=> b!105178 d!28779))

(declare-fun b!105491 () Bool)

(declare-fun e!68689 () Bool)

(declare-fun lt!53948 () ListLongMap!1533)

(declare-fun apply!98 (ListLongMap!1533 (_ BitVec 64)) V!3217)

(assert (=> b!105491 (= e!68689 (= (apply!98 lt!53948 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105492 () Bool)

(declare-fun e!68698 () Bool)

(assert (=> b!105492 (= e!68698 e!68689)))

(declare-fun res!52498 () Bool)

(declare-fun call!11128 () Bool)

(assert (=> b!105492 (= res!52498 call!11128)))

(assert (=> b!105492 (=> (not res!52498) (not e!68689))))

(declare-fun b!105493 () Bool)

(declare-fun e!68692 () ListLongMap!1533)

(declare-fun call!11130 () ListLongMap!1533)

(assert (=> b!105493 (= e!68692 call!11130)))

(declare-fun b!105494 () Bool)

(declare-fun res!52502 () Bool)

(declare-fun e!68694 () Bool)

(assert (=> b!105494 (=> (not res!52502) (not e!68694))))

(declare-fun e!68688 () Bool)

(assert (=> b!105494 (= res!52502 e!68688)))

(declare-fun res!52505 () Bool)

(assert (=> b!105494 (=> res!52505 e!68688)))

(declare-fun e!68697 () Bool)

(assert (=> b!105494 (= res!52505 (not e!68697))))

(declare-fun res!52499 () Bool)

(assert (=> b!105494 (=> (not res!52499) (not e!68697))))

(assert (=> b!105494 (= res!52499 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105495 () Bool)

(declare-fun e!68693 () Bool)

(declare-fun e!68690 () Bool)

(assert (=> b!105495 (= e!68693 e!68690)))

(declare-fun res!52506 () Bool)

(declare-fun call!11131 () Bool)

(assert (=> b!105495 (= res!52506 call!11131)))

(assert (=> b!105495 (=> (not res!52506) (not e!68690))))

(declare-fun b!105497 () Bool)

(declare-fun res!52503 () Bool)

(assert (=> b!105497 (=> (not res!52503) (not e!68694))))

(assert (=> b!105497 (= res!52503 e!68693)))

(declare-fun c!18344 () Bool)

(assert (=> b!105497 (= c!18344 (not (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68695 () Bool)

(declare-fun b!105498 () Bool)

(assert (=> b!105498 (= e!68695 (= (apply!98 lt!53948 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105498 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_values!2564 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> b!105498 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105499 () Bool)

(declare-fun call!11126 () ListLongMap!1533)

(assert (=> b!105499 (= e!68692 call!11126)))

(declare-fun b!105500 () Bool)

(declare-fun e!68686 () Unit!3212)

(declare-fun Unit!3222 () Unit!3212)

(assert (=> b!105500 (= e!68686 Unit!3222)))

(declare-fun b!105501 () Bool)

(assert (=> b!105501 (= e!68698 (not call!11128))))

(declare-fun b!105502 () Bool)

(assert (=> b!105502 (= e!68693 (not call!11131))))

(declare-fun b!105503 () Bool)

(declare-fun e!68696 () ListLongMap!1533)

(declare-fun e!68687 () ListLongMap!1533)

(assert (=> b!105503 (= e!68696 e!68687)))

(declare-fun c!18343 () Bool)

(assert (=> b!105503 (= c!18343 (and (not (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11122 () Bool)

(declare-fun call!11129 () ListLongMap!1533)

(declare-fun call!11127 () ListLongMap!1533)

(assert (=> bm!11122 (= call!11129 call!11127)))

(declare-fun bm!11123 () Bool)

(assert (=> bm!11123 (= call!11131 (contains!814 lt!53948 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105504 () Bool)

(assert (=> b!105504 (= e!68694 e!68698)))

(declare-fun c!18348 () Bool)

(assert (=> b!105504 (= c!18348 (not (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!28781 () Bool)

(assert (=> d!28781 e!68694))

(declare-fun res!52500 () Bool)

(assert (=> d!28781 (=> (not res!52500) (not e!68694))))

(assert (=> d!28781 (= res!52500 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun lt!53938 () ListLongMap!1533)

(assert (=> d!28781 (= lt!53948 lt!53938)))

(declare-fun lt!53940 () Unit!3212)

(assert (=> d!28781 (= lt!53940 e!68686)))

(declare-fun c!18346 () Bool)

(declare-fun e!68691 () Bool)

(assert (=> d!28781 (= c!18346 e!68691)))

(declare-fun res!52504 () Bool)

(assert (=> d!28781 (=> (not res!52504) (not e!68691))))

(assert (=> d!28781 (= res!52504 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!28781 (= lt!53938 e!68696)))

(declare-fun c!18347 () Bool)

(assert (=> d!28781 (= c!18347 (and (not (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28781 (validMask!0 (mask!6727 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!28781 (= (getCurrentListMap!469 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))) lt!53948)))

(declare-fun b!105496 () Bool)

(declare-fun call!11125 () ListLongMap!1533)

(assert (=> b!105496 (= e!68696 (+!139 call!11125 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun bm!11124 () Bool)

(assert (=> bm!11124 (= call!11128 (contains!814 lt!53948 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105505 () Bool)

(assert (=> b!105505 (= e!68690 (= (apply!98 lt!53948 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105506 () Bool)

(assert (=> b!105506 (= e!68687 call!11130)))

(declare-fun b!105507 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!105507 (= e!68697 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!11125 () Bool)

(assert (=> bm!11125 (= call!11126 call!11129)))

(declare-fun bm!11126 () Bool)

(assert (=> bm!11126 (= call!11130 call!11125)))

(declare-fun b!105508 () Bool)

(declare-fun c!18345 () Bool)

(assert (=> b!105508 (= c!18345 (and (not (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!105508 (= e!68687 e!68692)))

(declare-fun bm!11127 () Bool)

(assert (=> bm!11127 (= call!11125 (+!139 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126)) (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!105509 () Bool)

(declare-fun lt!53946 () Unit!3212)

(assert (=> b!105509 (= e!68686 lt!53946)))

(declare-fun lt!53933 () ListLongMap!1533)

(assert (=> b!105509 (= lt!53933 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun lt!53947 () (_ BitVec 64))

(assert (=> b!105509 (= lt!53947 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53934 () (_ BitVec 64))

(assert (=> b!105509 (= lt!53934 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53952 () Unit!3212)

(declare-fun addStillContains!74 (ListLongMap!1533 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3212)

(assert (=> b!105509 (= lt!53952 (addStillContains!74 lt!53933 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53934))))

(assert (=> b!105509 (contains!814 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53934)))

(declare-fun lt!53945 () Unit!3212)

(assert (=> b!105509 (= lt!53945 lt!53952)))

(declare-fun lt!53941 () ListLongMap!1533)

(assert (=> b!105509 (= lt!53941 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun lt!53932 () (_ BitVec 64))

(assert (=> b!105509 (= lt!53932 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53942 () (_ BitVec 64))

(assert (=> b!105509 (= lt!53942 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53949 () Unit!3212)

(declare-fun addApplyDifferent!74 (ListLongMap!1533 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3212)

(assert (=> b!105509 (= lt!53949 (addApplyDifferent!74 lt!53941 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53942))))

(assert (=> b!105509 (= (apply!98 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53942) (apply!98 lt!53941 lt!53942))))

(declare-fun lt!53936 () Unit!3212)

(assert (=> b!105509 (= lt!53936 lt!53949)))

(declare-fun lt!53944 () ListLongMap!1533)

(assert (=> b!105509 (= lt!53944 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun lt!53953 () (_ BitVec 64))

(assert (=> b!105509 (= lt!53953 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53939 () (_ BitVec 64))

(assert (=> b!105509 (= lt!53939 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53935 () Unit!3212)

(assert (=> b!105509 (= lt!53935 (addApplyDifferent!74 lt!53944 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53939))))

(assert (=> b!105509 (= (apply!98 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53939) (apply!98 lt!53944 lt!53939))))

(declare-fun lt!53950 () Unit!3212)

(assert (=> b!105509 (= lt!53950 lt!53935)))

(declare-fun lt!53943 () ListLongMap!1533)

(assert (=> b!105509 (= lt!53943 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun lt!53937 () (_ BitVec 64))

(assert (=> b!105509 (= lt!53937 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53951 () (_ BitVec 64))

(assert (=> b!105509 (= lt!53951 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!105509 (= lt!53946 (addApplyDifferent!74 lt!53943 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53951))))

(assert (=> b!105509 (= (apply!98 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53951) (apply!98 lt!53943 lt!53951))))

(declare-fun b!105510 () Bool)

(assert (=> b!105510 (= e!68691 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!11128 () Bool)

(assert (=> bm!11128 (= call!11127 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105511 () Bool)

(assert (=> b!105511 (= e!68688 e!68695)))

(declare-fun res!52501 () Bool)

(assert (=> b!105511 (=> (not res!52501) (not e!68695))))

(assert (=> b!105511 (= res!52501 (contains!814 lt!53948 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105511 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28781 c!18347) b!105496))

(assert (= (and d!28781 (not c!18347)) b!105503))

(assert (= (and b!105503 c!18343) b!105506))

(assert (= (and b!105503 (not c!18343)) b!105508))

(assert (= (and b!105508 c!18345) b!105493))

(assert (= (and b!105508 (not c!18345)) b!105499))

(assert (= (or b!105493 b!105499) bm!11125))

(assert (= (or b!105506 bm!11125) bm!11122))

(assert (= (or b!105506 b!105493) bm!11126))

(assert (= (or b!105496 bm!11122) bm!11128))

(assert (= (or b!105496 bm!11126) bm!11127))

(assert (= (and d!28781 res!52504) b!105510))

(assert (= (and d!28781 c!18346) b!105509))

(assert (= (and d!28781 (not c!18346)) b!105500))

(assert (= (and d!28781 res!52500) b!105494))

(assert (= (and b!105494 res!52499) b!105507))

(assert (= (and b!105494 (not res!52505)) b!105511))

(assert (= (and b!105511 res!52501) b!105498))

(assert (= (and b!105494 res!52502) b!105497))

(assert (= (and b!105497 c!18344) b!105495))

(assert (= (and b!105497 (not c!18344)) b!105502))

(assert (= (and b!105495 res!52506) b!105505))

(assert (= (or b!105495 b!105502) bm!11123))

(assert (= (and b!105497 res!52503) b!105504))

(assert (= (and b!105504 c!18348) b!105492))

(assert (= (and b!105504 (not c!18348)) b!105501))

(assert (= (and b!105492 res!52498) b!105491))

(assert (= (or b!105492 b!105501) bm!11124))

(declare-fun b_lambda!4719 () Bool)

(assert (=> (not b_lambda!4719) (not b!105498)))

(assert (=> b!105498 t!5668))

(declare-fun b_and!6513 () Bool)

(assert (= b_and!6493 (and (=> t!5668 result!3439) b_and!6513)))

(assert (=> b!105498 t!5670))

(declare-fun b_and!6515 () Bool)

(assert (= b_and!6495 (and (=> t!5670 result!3443) b_and!6515)))

(declare-fun m!117487 () Bool)

(assert (=> b!105498 m!117487))

(assert (=> b!105498 m!117297))

(declare-fun m!117489 () Bool)

(assert (=> b!105498 m!117489))

(assert (=> b!105498 m!117487))

(assert (=> b!105498 m!117297))

(declare-fun m!117491 () Bool)

(assert (=> b!105498 m!117491))

(declare-fun m!117493 () Bool)

(assert (=> b!105498 m!117493))

(assert (=> b!105498 m!117491))

(assert (=> d!28781 m!117279))

(assert (=> b!105507 m!117491))

(assert (=> b!105507 m!117491))

(declare-fun m!117495 () Bool)

(assert (=> b!105507 m!117495))

(declare-fun m!117497 () Bool)

(assert (=> bm!11127 m!117497))

(assert (=> bm!11128 m!117285))

(assert (=> b!105510 m!117491))

(assert (=> b!105510 m!117491))

(assert (=> b!105510 m!117495))

(declare-fun m!117499 () Bool)

(assert (=> b!105505 m!117499))

(declare-fun m!117501 () Bool)

(assert (=> bm!11123 m!117501))

(declare-fun m!117503 () Bool)

(assert (=> b!105509 m!117503))

(declare-fun m!117505 () Bool)

(assert (=> b!105509 m!117505))

(declare-fun m!117507 () Bool)

(assert (=> b!105509 m!117507))

(declare-fun m!117509 () Bool)

(assert (=> b!105509 m!117509))

(assert (=> b!105509 m!117285))

(declare-fun m!117511 () Bool)

(assert (=> b!105509 m!117511))

(declare-fun m!117513 () Bool)

(assert (=> b!105509 m!117513))

(declare-fun m!117515 () Bool)

(assert (=> b!105509 m!117515))

(declare-fun m!117517 () Bool)

(assert (=> b!105509 m!117517))

(assert (=> b!105509 m!117513))

(assert (=> b!105509 m!117517))

(declare-fun m!117519 () Bool)

(assert (=> b!105509 m!117519))

(declare-fun m!117521 () Bool)

(assert (=> b!105509 m!117521))

(declare-fun m!117523 () Bool)

(assert (=> b!105509 m!117523))

(assert (=> b!105509 m!117491))

(declare-fun m!117525 () Bool)

(assert (=> b!105509 m!117525))

(declare-fun m!117527 () Bool)

(assert (=> b!105509 m!117527))

(assert (=> b!105509 m!117511))

(declare-fun m!117529 () Bool)

(assert (=> b!105509 m!117529))

(assert (=> b!105509 m!117505))

(declare-fun m!117531 () Bool)

(assert (=> b!105509 m!117531))

(assert (=> b!105511 m!117491))

(assert (=> b!105511 m!117491))

(declare-fun m!117533 () Bool)

(assert (=> b!105511 m!117533))

(declare-fun m!117535 () Bool)

(assert (=> b!105496 m!117535))

(declare-fun m!117537 () Bool)

(assert (=> b!105491 m!117537))

(declare-fun m!117539 () Bool)

(assert (=> bm!11124 m!117539))

(assert (=> b!105178 d!28781))

(declare-fun d!28783 () Bool)

(declare-fun res!52513 () Bool)

(declare-fun e!68701 () Bool)

(assert (=> d!28783 (=> (not res!52513) (not e!68701))))

(declare-fun simpleValid!74 (LongMapFixedSize!898) Bool)

(assert (=> d!28783 (= res!52513 (simpleValid!74 newMap!16))))

(assert (=> d!28783 (= (valid!421 newMap!16) e!68701)))

(declare-fun b!105518 () Bool)

(declare-fun res!52514 () Bool)

(assert (=> b!105518 (=> (not res!52514) (not e!68701))))

(declare-fun arrayCountValidKeys!0 (array!4331 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!105518 (= res!52514 (= (arrayCountValidKeys!0 (_keys!4287 newMap!16) #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (_size!498 newMap!16)))))

(declare-fun b!105519 () Bool)

(declare-fun res!52515 () Bool)

(assert (=> b!105519 (=> (not res!52515) (not e!68701))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4331 (_ BitVec 32)) Bool)

(assert (=> b!105519 (= res!52515 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(declare-fun b!105520 () Bool)

(assert (=> b!105520 (= e!68701 (arrayNoDuplicates!0 (_keys!4287 newMap!16) #b00000000000000000000000000000000 Nil!1594))))

(assert (= (and d!28783 res!52513) b!105518))

(assert (= (and b!105518 res!52514) b!105519))

(assert (= (and b!105519 res!52515) b!105520))

(declare-fun m!117541 () Bool)

(assert (=> d!28783 m!117541))

(declare-fun m!117543 () Bool)

(assert (=> b!105518 m!117543))

(declare-fun m!117545 () Bool)

(assert (=> b!105519 m!117545))

(declare-fun m!117547 () Bool)

(assert (=> b!105520 m!117547))

(assert (=> b!105169 d!28783))

(declare-fun d!28785 () Bool)

(assert (=> d!28785 (= (array_inv!1269 (_keys!4287 newMap!16)) (bvsge (size!2309 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105174 d!28785))

(declare-fun d!28787 () Bool)

(assert (=> d!28787 (= (array_inv!1270 (_values!2564 newMap!16)) (bvsge (size!2310 (_values!2564 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105174 d!28787))

(declare-fun d!28789 () Bool)

(assert (=> d!28789 (= (+!139 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (+!139 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(declare-fun lt!53956 () Unit!3212)

(declare-fun choose!659 (ListLongMap!1533 (_ BitVec 64) V!3217 (_ BitVec 64) V!3217) Unit!3212)

(assert (=> d!28789 (= lt!53956 (choose!659 lt!53714 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))

(assert (=> d!28789 (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28789 (= (addCommutativeForDiffKeys!52 lt!53714 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) lt!53956)))

(declare-fun bs!4337 () Bool)

(assert (= bs!4337 d!28789))

(declare-fun m!117549 () Bool)

(assert (=> bs!4337 m!117549))

(declare-fun m!117551 () Bool)

(assert (=> bs!4337 m!117551))

(assert (=> bs!4337 m!117261))

(declare-fun m!117553 () Bool)

(assert (=> bs!4337 m!117553))

(assert (=> bs!4337 m!117549))

(declare-fun m!117555 () Bool)

(assert (=> bs!4337 m!117555))

(assert (=> bs!4337 m!117555))

(declare-fun m!117557 () Bool)

(assert (=> bs!4337 m!117557))

(assert (=> b!105171 d!28789))

(declare-fun d!28791 () Bool)

(declare-fun e!68704 () Bool)

(assert (=> d!28791 e!68704))

(declare-fun res!52520 () Bool)

(assert (=> d!28791 (=> (not res!52520) (not e!68704))))

(declare-fun lt!53966 () ListLongMap!1533)

(assert (=> d!28791 (= res!52520 (contains!814 lt!53966 (_1!1191 lt!53713)))))

(declare-fun lt!53965 () List!1596)

(assert (=> d!28791 (= lt!53966 (ListLongMap!1534 lt!53965))))

(declare-fun lt!53968 () Unit!3212)

(declare-fun lt!53967 () Unit!3212)

(assert (=> d!28791 (= lt!53968 lt!53967)))

(assert (=> d!28791 (= (getValueByKey!157 lt!53965 (_1!1191 lt!53713)) (Some!162 (_2!1191 lt!53713)))))

(declare-fun lemmaContainsTupThenGetReturnValue!73 (List!1596 (_ BitVec 64) V!3217) Unit!3212)

(assert (=> d!28791 (= lt!53967 (lemmaContainsTupThenGetReturnValue!73 lt!53965 (_1!1191 lt!53713) (_2!1191 lt!53713)))))

(declare-fun insertStrictlySorted!76 (List!1596 (_ BitVec 64) V!3217) List!1596)

(assert (=> d!28791 (= lt!53965 (insertStrictlySorted!76 (toList!782 (+!139 lt!53714 lt!53718)) (_1!1191 lt!53713) (_2!1191 lt!53713)))))

(assert (=> d!28791 (= (+!139 (+!139 lt!53714 lt!53718) lt!53713) lt!53966)))

(declare-fun b!105525 () Bool)

(declare-fun res!52521 () Bool)

(assert (=> b!105525 (=> (not res!52521) (not e!68704))))

(assert (=> b!105525 (= res!52521 (= (getValueByKey!157 (toList!782 lt!53966) (_1!1191 lt!53713)) (Some!162 (_2!1191 lt!53713))))))

(declare-fun b!105526 () Bool)

(declare-fun contains!816 (List!1596 tuple2!2360) Bool)

(assert (=> b!105526 (= e!68704 (contains!816 (toList!782 lt!53966) lt!53713))))

(assert (= (and d!28791 res!52520) b!105525))

(assert (= (and b!105525 res!52521) b!105526))

(declare-fun m!117559 () Bool)

(assert (=> d!28791 m!117559))

(declare-fun m!117561 () Bool)

(assert (=> d!28791 m!117561))

(declare-fun m!117563 () Bool)

(assert (=> d!28791 m!117563))

(declare-fun m!117565 () Bool)

(assert (=> d!28791 m!117565))

(declare-fun m!117567 () Bool)

(assert (=> b!105525 m!117567))

(declare-fun m!117569 () Bool)

(assert (=> b!105526 m!117569))

(assert (=> b!105171 d!28791))

(declare-fun d!28793 () Bool)

(declare-fun e!68705 () Bool)

(assert (=> d!28793 e!68705))

(declare-fun res!52522 () Bool)

(assert (=> d!28793 (=> (not res!52522) (not e!68705))))

(declare-fun lt!53970 () ListLongMap!1533)

(assert (=> d!28793 (= res!52522 (contains!814 lt!53970 (_1!1191 lt!53718)))))

(declare-fun lt!53969 () List!1596)

(assert (=> d!28793 (= lt!53970 (ListLongMap!1534 lt!53969))))

(declare-fun lt!53972 () Unit!3212)

(declare-fun lt!53971 () Unit!3212)

(assert (=> d!28793 (= lt!53972 lt!53971)))

(assert (=> d!28793 (= (getValueByKey!157 lt!53969 (_1!1191 lt!53718)) (Some!162 (_2!1191 lt!53718)))))

(assert (=> d!28793 (= lt!53971 (lemmaContainsTupThenGetReturnValue!73 lt!53969 (_1!1191 lt!53718) (_2!1191 lt!53718)))))

(assert (=> d!28793 (= lt!53969 (insertStrictlySorted!76 (toList!782 (+!139 lt!53714 lt!53713)) (_1!1191 lt!53718) (_2!1191 lt!53718)))))

(assert (=> d!28793 (= (+!139 (+!139 lt!53714 lt!53713) lt!53718) lt!53970)))

(declare-fun b!105527 () Bool)

(declare-fun res!52523 () Bool)

(assert (=> b!105527 (=> (not res!52523) (not e!68705))))

(assert (=> b!105527 (= res!52523 (= (getValueByKey!157 (toList!782 lt!53970) (_1!1191 lt!53718)) (Some!162 (_2!1191 lt!53718))))))

(declare-fun b!105528 () Bool)

(assert (=> b!105528 (= e!68705 (contains!816 (toList!782 lt!53970) lt!53718))))

(assert (= (and d!28793 res!52522) b!105527))

(assert (= (and b!105527 res!52523) b!105528))

(declare-fun m!117571 () Bool)

(assert (=> d!28793 m!117571))

(declare-fun m!117573 () Bool)

(assert (=> d!28793 m!117573))

(declare-fun m!117575 () Bool)

(assert (=> d!28793 m!117575))

(declare-fun m!117577 () Bool)

(assert (=> d!28793 m!117577))

(declare-fun m!117579 () Bool)

(assert (=> b!105527 m!117579))

(declare-fun m!117581 () Bool)

(assert (=> b!105528 m!117581))

(assert (=> b!105171 d!28793))

(declare-fun d!28795 () Bool)

(declare-fun e!68706 () Bool)

(assert (=> d!28795 e!68706))

(declare-fun res!52524 () Bool)

(assert (=> d!28795 (=> (not res!52524) (not e!68706))))

(declare-fun lt!53974 () ListLongMap!1533)

(assert (=> d!28795 (= res!52524 (contains!814 lt!53974 (_1!1191 lt!53713)))))

(declare-fun lt!53973 () List!1596)

(assert (=> d!28795 (= lt!53974 (ListLongMap!1534 lt!53973))))

(declare-fun lt!53976 () Unit!3212)

(declare-fun lt!53975 () Unit!3212)

(assert (=> d!28795 (= lt!53976 lt!53975)))

(assert (=> d!28795 (= (getValueByKey!157 lt!53973 (_1!1191 lt!53713)) (Some!162 (_2!1191 lt!53713)))))

(assert (=> d!28795 (= lt!53975 (lemmaContainsTupThenGetReturnValue!73 lt!53973 (_1!1191 lt!53713) (_2!1191 lt!53713)))))

(assert (=> d!28795 (= lt!53973 (insertStrictlySorted!76 (toList!782 lt!53714) (_1!1191 lt!53713) (_2!1191 lt!53713)))))

(assert (=> d!28795 (= (+!139 lt!53714 lt!53713) lt!53974)))

(declare-fun b!105529 () Bool)

(declare-fun res!52525 () Bool)

(assert (=> b!105529 (=> (not res!52525) (not e!68706))))

(assert (=> b!105529 (= res!52525 (= (getValueByKey!157 (toList!782 lt!53974) (_1!1191 lt!53713)) (Some!162 (_2!1191 lt!53713))))))

(declare-fun b!105530 () Bool)

(assert (=> b!105530 (= e!68706 (contains!816 (toList!782 lt!53974) lt!53713))))

(assert (= (and d!28795 res!52524) b!105529))

(assert (= (and b!105529 res!52525) b!105530))

(declare-fun m!117583 () Bool)

(assert (=> d!28795 m!117583))

(declare-fun m!117585 () Bool)

(assert (=> d!28795 m!117585))

(declare-fun m!117587 () Bool)

(assert (=> d!28795 m!117587))

(declare-fun m!117589 () Bool)

(assert (=> d!28795 m!117589))

(declare-fun m!117591 () Bool)

(assert (=> b!105529 m!117591))

(declare-fun m!117593 () Bool)

(assert (=> b!105530 m!117593))

(assert (=> b!105171 d!28795))

(declare-fun b!105556 () Bool)

(declare-fun e!68724 () Bool)

(assert (=> b!105556 (= e!68724 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105556 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!105557 () Bool)

(declare-fun e!68726 () ListLongMap!1533)

(declare-fun e!68722 () ListLongMap!1533)

(assert (=> b!105557 (= e!68726 e!68722)))

(declare-fun c!18357 () Bool)

(assert (=> b!105557 (= c!18357 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!68725 () Bool)

(declare-fun lt!53992 () ListLongMap!1533)

(declare-fun b!105558 () Bool)

(assert (=> b!105558 (= e!68725 (= lt!53992 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105559 () Bool)

(assert (=> b!105559 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> b!105559 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_values!2564 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!68721 () Bool)

(assert (=> b!105559 (= e!68721 (= (apply!98 lt!53992 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!105560 () Bool)

(declare-fun e!68723 () Bool)

(assert (=> b!105560 (= e!68723 e!68721)))

(assert (=> b!105560 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun res!52537 () Bool)

(assert (=> b!105560 (= res!52537 (contains!814 lt!53992 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105560 (=> (not res!52537) (not e!68721))))

(declare-fun b!105561 () Bool)

(declare-fun e!68727 () Bool)

(assert (=> b!105561 (= e!68727 e!68723)))

(declare-fun c!18360 () Bool)

(assert (=> b!105561 (= c!18360 e!68724)))

(declare-fun res!52535 () Bool)

(assert (=> b!105561 (=> (not res!52535) (not e!68724))))

(assert (=> b!105561 (= res!52535 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105562 () Bool)

(declare-fun isEmpty!376 (ListLongMap!1533) Bool)

(assert (=> b!105562 (= e!68725 (isEmpty!376 lt!53992))))

(declare-fun d!28797 () Bool)

(assert (=> d!28797 e!68727))

(declare-fun res!52536 () Bool)

(assert (=> d!28797 (=> (not res!52536) (not e!68727))))

(assert (=> d!28797 (= res!52536 (not (contains!814 lt!53992 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28797 (= lt!53992 e!68726)))

(declare-fun c!18359 () Bool)

(assert (=> d!28797 (= c!18359 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!28797 (validMask!0 (mask!6727 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!28797 (= (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))) lt!53992)))

(declare-fun b!105555 () Bool)

(assert (=> b!105555 (= e!68726 (ListLongMap!1534 Nil!1593))))

(declare-fun b!105563 () Bool)

(assert (=> b!105563 (= e!68723 e!68725)))

(declare-fun c!18358 () Bool)

(assert (=> b!105563 (= c!18358 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105564 () Bool)

(declare-fun call!11134 () ListLongMap!1533)

(assert (=> b!105564 (= e!68722 call!11134)))

(declare-fun bm!11131 () Bool)

(assert (=> bm!11131 (= call!11134 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105565 () Bool)

(declare-fun res!52534 () Bool)

(assert (=> b!105565 (=> (not res!52534) (not e!68727))))

(assert (=> b!105565 (= res!52534 (not (contains!814 lt!53992 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105566 () Bool)

(declare-fun lt!53997 () Unit!3212)

(declare-fun lt!53993 () Unit!3212)

(assert (=> b!105566 (= lt!53997 lt!53993)))

(declare-fun lt!53994 () ListLongMap!1533)

(declare-fun lt!53995 () V!3217)

(declare-fun lt!53991 () (_ BitVec 64))

(declare-fun lt!53996 () (_ BitVec 64))

(assert (=> b!105566 (not (contains!814 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)) lt!53991))))

(declare-fun addStillNotContains!48 (ListLongMap!1533 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3212)

(assert (=> b!105566 (= lt!53993 (addStillNotContains!48 lt!53994 lt!53996 lt!53995 lt!53991))))

(assert (=> b!105566 (= lt!53991 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!105566 (= lt!53995 (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!105566 (= lt!53996 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!105566 (= lt!53994 call!11134)))

(assert (=> b!105566 (= e!68722 (+!139 call!11134 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28797 c!18359) b!105555))

(assert (= (and d!28797 (not c!18359)) b!105557))

(assert (= (and b!105557 c!18357) b!105566))

(assert (= (and b!105557 (not c!18357)) b!105564))

(assert (= (or b!105566 b!105564) bm!11131))

(assert (= (and d!28797 res!52536) b!105565))

(assert (= (and b!105565 res!52534) b!105561))

(assert (= (and b!105561 res!52535) b!105556))

(assert (= (and b!105561 c!18360) b!105560))

(assert (= (and b!105561 (not c!18360)) b!105563))

(assert (= (and b!105560 res!52537) b!105559))

(assert (= (and b!105563 c!18358) b!105558))

(assert (= (and b!105563 (not c!18358)) b!105562))

(declare-fun b_lambda!4721 () Bool)

(assert (=> (not b_lambda!4721) (not b!105559)))

(assert (=> b!105559 t!5668))

(declare-fun b_and!6517 () Bool)

(assert (= b_and!6513 (and (=> t!5668 result!3439) b_and!6517)))

(assert (=> b!105559 t!5670))

(declare-fun b_and!6519 () Bool)

(assert (= b_and!6515 (and (=> t!5670 result!3443) b_and!6519)))

(declare-fun b_lambda!4723 () Bool)

(assert (=> (not b_lambda!4723) (not b!105566)))

(assert (=> b!105566 t!5668))

(declare-fun b_and!6521 () Bool)

(assert (= b_and!6517 (and (=> t!5668 result!3439) b_and!6521)))

(assert (=> b!105566 t!5670))

(declare-fun b_and!6523 () Bool)

(assert (= b_and!6519 (and (=> t!5670 result!3443) b_and!6523)))

(declare-fun m!117595 () Bool)

(assert (=> d!28797 m!117595))

(assert (=> d!28797 m!117279))

(assert (=> b!105556 m!117491))

(assert (=> b!105556 m!117491))

(assert (=> b!105556 m!117495))

(declare-fun m!117597 () Bool)

(assert (=> b!105562 m!117597))

(declare-fun m!117599 () Bool)

(assert (=> b!105558 m!117599))

(assert (=> b!105559 m!117487))

(assert (=> b!105559 m!117297))

(assert (=> b!105559 m!117489))

(assert (=> b!105559 m!117491))

(declare-fun m!117601 () Bool)

(assert (=> b!105559 m!117601))

(assert (=> b!105559 m!117491))

(assert (=> b!105559 m!117297))

(assert (=> b!105559 m!117487))

(assert (=> bm!11131 m!117599))

(declare-fun m!117603 () Bool)

(assert (=> b!105565 m!117603))

(assert (=> b!105557 m!117491))

(assert (=> b!105557 m!117491))

(assert (=> b!105557 m!117495))

(assert (=> b!105560 m!117491))

(assert (=> b!105560 m!117491))

(declare-fun m!117605 () Bool)

(assert (=> b!105560 m!117605))

(assert (=> b!105566 m!117487))

(assert (=> b!105566 m!117297))

(assert (=> b!105566 m!117489))

(declare-fun m!117607 () Bool)

(assert (=> b!105566 m!117607))

(declare-fun m!117609 () Bool)

(assert (=> b!105566 m!117609))

(assert (=> b!105566 m!117491))

(declare-fun m!117611 () Bool)

(assert (=> b!105566 m!117611))

(assert (=> b!105566 m!117487))

(declare-fun m!117613 () Bool)

(assert (=> b!105566 m!117613))

(assert (=> b!105566 m!117607))

(assert (=> b!105566 m!117297))

(assert (=> b!105171 d!28797))

(declare-fun d!28799 () Bool)

(declare-fun e!68728 () Bool)

(assert (=> d!28799 e!68728))

(declare-fun res!52538 () Bool)

(assert (=> d!28799 (=> (not res!52538) (not e!68728))))

(declare-fun lt!53999 () ListLongMap!1533)

(assert (=> d!28799 (= res!52538 (contains!814 lt!53999 (_1!1191 lt!53718)))))

(declare-fun lt!53998 () List!1596)

(assert (=> d!28799 (= lt!53999 (ListLongMap!1534 lt!53998))))

(declare-fun lt!54001 () Unit!3212)

(declare-fun lt!54000 () Unit!3212)

(assert (=> d!28799 (= lt!54001 lt!54000)))

(assert (=> d!28799 (= (getValueByKey!157 lt!53998 (_1!1191 lt!53718)) (Some!162 (_2!1191 lt!53718)))))

(assert (=> d!28799 (= lt!54000 (lemmaContainsTupThenGetReturnValue!73 lt!53998 (_1!1191 lt!53718) (_2!1191 lt!53718)))))

(assert (=> d!28799 (= lt!53998 (insertStrictlySorted!76 (toList!782 lt!53714) (_1!1191 lt!53718) (_2!1191 lt!53718)))))

(assert (=> d!28799 (= (+!139 lt!53714 lt!53718) lt!53999)))

(declare-fun b!105567 () Bool)

(declare-fun res!52539 () Bool)

(assert (=> b!105567 (=> (not res!52539) (not e!68728))))

(assert (=> b!105567 (= res!52539 (= (getValueByKey!157 (toList!782 lt!53999) (_1!1191 lt!53718)) (Some!162 (_2!1191 lt!53718))))))

(declare-fun b!105568 () Bool)

(assert (=> b!105568 (= e!68728 (contains!816 (toList!782 lt!53999) lt!53718))))

(assert (= (and d!28799 res!52538) b!105567))

(assert (= (and b!105567 res!52539) b!105568))

(declare-fun m!117615 () Bool)

(assert (=> d!28799 m!117615))

(declare-fun m!117617 () Bool)

(assert (=> d!28799 m!117617))

(declare-fun m!117619 () Bool)

(assert (=> d!28799 m!117619))

(declare-fun m!117621 () Bool)

(assert (=> d!28799 m!117621))

(declare-fun m!117623 () Bool)

(assert (=> b!105567 m!117623))

(declare-fun m!117625 () Bool)

(assert (=> b!105568 m!117625))

(assert (=> b!105171 d!28799))

(declare-fun d!28801 () Bool)

(assert (=> d!28801 (= (validMask!0 (mask!6727 (v!2892 (underlying!361 thiss!992)))) (and (or (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000001111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000011111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000001111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000011111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000001111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000011111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000001111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000011111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000001111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000011111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000001111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000011111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000111111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000001111111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000011111111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000111111111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000001111111111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000011111111111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000111111111111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00001111111111111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00011111111111111111111111111111) (= (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!105171 d!28801))

(declare-fun d!28803 () Bool)

(assert (=> d!28803 (= (array_inv!1269 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvsge (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!105184 d!28803))

(declare-fun d!28805 () Bool)

(assert (=> d!28805 (= (array_inv!1270 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvsge (size!2310 (_values!2564 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!105184 d!28805))

(declare-fun d!28807 () Bool)

(assert (=> d!28807 (not (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!54004 () Unit!3212)

(declare-fun choose!68 (array!4331 (_ BitVec 32) (_ BitVec 64) List!1597) Unit!3212)

(assert (=> d!28807 (= lt!54004 (choose!68 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594)))))

(assert (=> d!28807 (bvslt (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!28807 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594)) lt!54004)))

(declare-fun bs!4338 () Bool)

(assert (= bs!4338 d!28807))

(assert (=> bs!4338 m!117261))

(assert (=> bs!4338 m!117265))

(assert (=> bs!4338 m!117261))

(declare-fun m!117627 () Bool)

(assert (=> bs!4338 m!117627))

(assert (=> b!105179 d!28807))

(declare-fun d!28809 () Bool)

(assert (=> d!28809 (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) from!355 Nil!1594)))

(declare-fun lt!54007 () Unit!3212)

(declare-fun choose!39 (array!4331 (_ BitVec 32) (_ BitVec 32)) Unit!3212)

(assert (=> d!28809 (= lt!54007 (choose!39 (_keys!4287 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!28809 (bvslt (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!28809 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 from!355) lt!54007)))

(declare-fun bs!4339 () Bool)

(assert (= bs!4339 d!28809))

(assert (=> bs!4339 m!117259))

(declare-fun m!117629 () Bool)

(assert (=> bs!4339 m!117629))

(assert (=> b!105179 d!28809))

(declare-fun d!28811 () Bool)

(declare-fun res!52544 () Bool)

(declare-fun e!68733 () Bool)

(assert (=> d!28811 (=> res!52544 e!68733)))

(assert (=> d!28811 (= res!52544 (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!28811 (= (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!68733)))

(declare-fun b!105573 () Bool)

(declare-fun e!68734 () Bool)

(assert (=> b!105573 (= e!68733 e!68734)))

(declare-fun res!52545 () Bool)

(assert (=> b!105573 (=> (not res!52545) (not e!68734))))

(assert (=> b!105573 (= res!52545 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105574 () Bool)

(assert (=> b!105574 (= e!68734 (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!28811 (not res!52544)) b!105573))

(assert (= (and b!105573 res!52545) b!105574))

(assert (=> d!28811 m!117491))

(assert (=> b!105574 m!117261))

(declare-fun m!117631 () Bool)

(assert (=> b!105574 m!117631))

(assert (=> b!105179 d!28811))

(declare-fun d!28813 () Bool)

(declare-fun e!68737 () Bool)

(assert (=> d!28813 e!68737))

(declare-fun c!18363 () Bool)

(assert (=> d!28813 (= c!18363 (and (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!54010 () Unit!3212)

(declare-fun choose!660 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) (_ BitVec 32) Int) Unit!3212)

(assert (=> d!28813 (= lt!54010 (choose!660 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(assert (=> d!28813 (validMask!0 (mask!6727 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!28813 (= (lemmaListMapContainsThenArrayContainsFrom!99 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))) lt!54010)))

(declare-fun b!105579 () Bool)

(assert (=> b!105579 (= e!68737 (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!105580 () Bool)

(assert (=> b!105580 (= e!68737 (ite (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!28813 c!18363) b!105579))

(assert (= (and d!28813 (not c!18363)) b!105580))

(assert (=> d!28813 m!117261))

(declare-fun m!117633 () Bool)

(assert (=> d!28813 m!117633))

(assert (=> d!28813 m!117279))

(assert (=> b!105579 m!117261))

(assert (=> b!105579 m!117265))

(assert (=> b!105179 d!28813))

(declare-fun call!11137 () Bool)

(declare-fun c!18366 () Bool)

(declare-fun bm!11134 () Bool)

(assert (=> bm!11134 (= call!11137 (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)))))

(declare-fun b!105592 () Bool)

(declare-fun e!68749 () Bool)

(declare-fun e!68748 () Bool)

(assert (=> b!105592 (= e!68749 e!68748)))

(assert (=> b!105592 (= c!18366 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105593 () Bool)

(assert (=> b!105593 (= e!68748 call!11137)))

(declare-fun b!105594 () Bool)

(declare-fun e!68747 () Bool)

(declare-fun contains!817 (List!1597 (_ BitVec 64)) Bool)

(assert (=> b!105594 (= e!68747 (contains!817 Nil!1594 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105595 () Bool)

(assert (=> b!105595 (= e!68748 call!11137)))

(declare-fun b!105591 () Bool)

(declare-fun e!68746 () Bool)

(assert (=> b!105591 (= e!68746 e!68749)))

(declare-fun res!52553 () Bool)

(assert (=> b!105591 (=> (not res!52553) (not e!68749))))

(assert (=> b!105591 (= res!52553 (not e!68747))))

(declare-fun res!52552 () Bool)

(assert (=> b!105591 (=> (not res!52552) (not e!68747))))

(assert (=> b!105591 (= res!52552 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun d!28815 () Bool)

(declare-fun res!52554 () Bool)

(assert (=> d!28815 (=> res!52554 e!68746)))

(assert (=> d!28815 (= res!52554 (bvsge from!355 (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!28815 (= (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) from!355 Nil!1594) e!68746)))

(assert (= (and d!28815 (not res!52554)) b!105591))

(assert (= (and b!105591 res!52552) b!105594))

(assert (= (and b!105591 res!52553) b!105592))

(assert (= (and b!105592 c!18366) b!105593))

(assert (= (and b!105592 (not c!18366)) b!105595))

(assert (= (or b!105593 b!105595) bm!11134))

(assert (=> bm!11134 m!117261))

(declare-fun m!117635 () Bool)

(assert (=> bm!11134 m!117635))

(assert (=> b!105592 m!117261))

(assert (=> b!105592 m!117261))

(declare-fun m!117637 () Bool)

(assert (=> b!105592 m!117637))

(assert (=> b!105594 m!117261))

(assert (=> b!105594 m!117261))

(declare-fun m!117639 () Bool)

(assert (=> b!105594 m!117639))

(assert (=> b!105591 m!117261))

(assert (=> b!105591 m!117261))

(assert (=> b!105591 m!117637))

(assert (=> b!105179 d!28815))

(declare-fun mapNonEmpty!3939 () Bool)

(declare-fun mapRes!3939 () Bool)

(declare-fun tp!9915 () Bool)

(declare-fun e!68754 () Bool)

(assert (=> mapNonEmpty!3939 (= mapRes!3939 (and tp!9915 e!68754))))

(declare-fun mapValue!3939 () ValueCell!995)

(declare-fun mapKey!3939 () (_ BitVec 32))

(declare-fun mapRest!3939 () (Array (_ BitVec 32) ValueCell!995))

(assert (=> mapNonEmpty!3939 (= mapRest!3923 (store mapRest!3939 mapKey!3939 mapValue!3939))))

(declare-fun b!105603 () Bool)

(declare-fun e!68755 () Bool)

(assert (=> b!105603 (= e!68755 tp_is_empty!2677)))

(declare-fun mapIsEmpty!3939 () Bool)

(assert (=> mapIsEmpty!3939 mapRes!3939))

(declare-fun condMapEmpty!3939 () Bool)

(declare-fun mapDefault!3939 () ValueCell!995)

(assert (=> mapNonEmpty!3924 (= condMapEmpty!3939 (= mapRest!3923 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3939)))))

(assert (=> mapNonEmpty!3924 (= tp!9886 (and e!68755 mapRes!3939))))

(declare-fun b!105602 () Bool)

(assert (=> b!105602 (= e!68754 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3924 condMapEmpty!3939) mapIsEmpty!3939))

(assert (= (and mapNonEmpty!3924 (not condMapEmpty!3939)) mapNonEmpty!3939))

(assert (= (and mapNonEmpty!3939 ((_ is ValueCellFull!995) mapValue!3939)) b!105602))

(assert (= (and mapNonEmpty!3924 ((_ is ValueCellFull!995) mapDefault!3939)) b!105603))

(declare-fun m!117641 () Bool)

(assert (=> mapNonEmpty!3939 m!117641))

(declare-fun mapNonEmpty!3940 () Bool)

(declare-fun mapRes!3940 () Bool)

(declare-fun tp!9916 () Bool)

(declare-fun e!68756 () Bool)

(assert (=> mapNonEmpty!3940 (= mapRes!3940 (and tp!9916 e!68756))))

(declare-fun mapKey!3940 () (_ BitVec 32))

(declare-fun mapValue!3940 () ValueCell!995)

(declare-fun mapRest!3940 () (Array (_ BitVec 32) ValueCell!995))

(assert (=> mapNonEmpty!3940 (= mapRest!3924 (store mapRest!3940 mapKey!3940 mapValue!3940))))

(declare-fun b!105605 () Bool)

(declare-fun e!68757 () Bool)

(assert (=> b!105605 (= e!68757 tp_is_empty!2677)))

(declare-fun mapIsEmpty!3940 () Bool)

(assert (=> mapIsEmpty!3940 mapRes!3940))

(declare-fun condMapEmpty!3940 () Bool)

(declare-fun mapDefault!3940 () ValueCell!995)

(assert (=> mapNonEmpty!3923 (= condMapEmpty!3940 (= mapRest!3924 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3940)))))

(assert (=> mapNonEmpty!3923 (= tp!9887 (and e!68757 mapRes!3940))))

(declare-fun b!105604 () Bool)

(assert (=> b!105604 (= e!68756 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3923 condMapEmpty!3940) mapIsEmpty!3940))

(assert (= (and mapNonEmpty!3923 (not condMapEmpty!3940)) mapNonEmpty!3940))

(assert (= (and mapNonEmpty!3940 ((_ is ValueCellFull!995) mapValue!3940)) b!105604))

(assert (= (and mapNonEmpty!3923 ((_ is ValueCellFull!995) mapDefault!3940)) b!105605))

(declare-fun m!117643 () Bool)

(assert (=> mapNonEmpty!3940 m!117643))

(declare-fun b_lambda!4725 () Bool)

(assert (= b_lambda!4721 (or (and b!105184 b_free!2521) (and b!105174 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))) b_lambda!4725)))

(declare-fun b_lambda!4727 () Bool)

(assert (= b_lambda!4723 (or (and b!105184 b_free!2521) (and b!105174 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))) b_lambda!4727)))

(declare-fun b_lambda!4729 () Bool)

(assert (= b_lambda!4719 (or (and b!105184 b_free!2521) (and b!105174 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))) b_lambda!4729)))

(check-sat (not d!28781) (not b!105566) (not bm!11097) (not b!105526) (not b!105498) b_and!6523 (not mapNonEmpty!3939) (not b!105528) (not bm!11096) (not bm!11105) (not b!105558) (not b!105511) (not b!105510) (not d!28777) (not bm!11101) (not b!105579) (not d!28773) (not b!105440) (not bm!11106) (not bm!11094) (not b!105556) (not b!105591) (not d!28797) (not b!105437) (not d!28813) (not b!105562) (not bm!11128) (not d!28809) (not b!105507) (not d!28807) (not b!105519) (not b!105419) (not b!105525) (not b!105509) (not bm!11123) (not b!105559) (not b!105529) (not bm!11093) (not bm!11102) tp_is_empty!2677 (not d!28771) (not b!105322) (not b!105432) (not bm!11091) (not d!28799) (not b!105565) (not b!105527) (not b!105574) (not b!105491) (not b_lambda!4725) (not b_lambda!4727) (not b_next!2521) (not d!28779) (not b!105435) (not b!105557) (not b_lambda!4729) (not b!105426) (not b!105518) (not bm!11089) (not b!105448) (not d!28791) (not b!105520) (not bm!11127) (not b!105505) (not bm!11131) (not b!105320) b_and!6521 (not b!105594) (not d!28793) (not bm!11124) (not bm!11099) (not b!105560) (not bm!11134) (not b!105447) (not b!105567) (not b!105568) (not b_lambda!4717) (not bm!11088) (not d!28795) (not b!105530) (not b_next!2523) (not bm!11084) (not b!105496) (not d!28783) (not d!28789) (not b!105592) (not mapNonEmpty!3940))
(check-sat b_and!6521 b_and!6523 (not b_next!2521) (not b_next!2523))
(get-model)

(declare-fun d!28817 () Bool)

(declare-fun lt!54013 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!110 (List!1597) (InoxSet (_ BitVec 64)))

(assert (=> d!28817 (= lt!54013 (select (content!110 Nil!1594) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!68762 () Bool)

(assert (=> d!28817 (= lt!54013 e!68762)))

(declare-fun res!52559 () Bool)

(assert (=> d!28817 (=> (not res!52559) (not e!68762))))

(assert (=> d!28817 (= res!52559 ((_ is Cons!1593) Nil!1594))))

(assert (=> d!28817 (= (contains!817 Nil!1594 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54013)))

(declare-fun b!105610 () Bool)

(declare-fun e!68763 () Bool)

(assert (=> b!105610 (= e!68762 e!68763)))

(declare-fun res!52560 () Bool)

(assert (=> b!105610 (=> res!52560 e!68763)))

(assert (=> b!105610 (= res!52560 (= (h!2190 Nil!1594) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105611 () Bool)

(assert (=> b!105611 (= e!68763 (contains!817 (t!5672 Nil!1594) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!28817 res!52559) b!105610))

(assert (= (and b!105610 (not res!52560)) b!105611))

(declare-fun m!117645 () Bool)

(assert (=> d!28817 m!117645))

(assert (=> d!28817 m!117261))

(declare-fun m!117647 () Bool)

(assert (=> d!28817 m!117647))

(assert (=> b!105611 m!117261))

(declare-fun m!117649 () Bool)

(assert (=> b!105611 m!117649))

(assert (=> b!105594 d!28817))

(declare-fun d!28819 () Bool)

(assert (=> d!28819 (= (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105556 d!28819))

(declare-fun b!105612 () Bool)

(declare-fun e!68767 () Bool)

(declare-fun lt!54030 () ListLongMap!1533)

(assert (=> b!105612 (= e!68767 (= (apply!98 lt!54030 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))

(declare-fun b!105613 () Bool)

(declare-fun e!68776 () Bool)

(assert (=> b!105613 (= e!68776 e!68767)))

(declare-fun res!52561 () Bool)

(declare-fun call!11141 () Bool)

(assert (=> b!105613 (= res!52561 call!11141)))

(assert (=> b!105613 (=> (not res!52561) (not e!68767))))

(declare-fun b!105614 () Bool)

(declare-fun e!68770 () ListLongMap!1533)

(declare-fun call!11143 () ListLongMap!1533)

(assert (=> b!105614 (= e!68770 call!11143)))

(declare-fun b!105615 () Bool)

(declare-fun res!52565 () Bool)

(declare-fun e!68772 () Bool)

(assert (=> b!105615 (=> (not res!52565) (not e!68772))))

(declare-fun e!68766 () Bool)

(assert (=> b!105615 (= res!52565 e!68766)))

(declare-fun res!52568 () Bool)

(assert (=> b!105615 (=> res!52568 e!68766)))

(declare-fun e!68775 () Bool)

(assert (=> b!105615 (= res!52568 (not e!68775))))

(declare-fun res!52562 () Bool)

(assert (=> b!105615 (=> (not res!52562) (not e!68775))))

(assert (=> b!105615 (= res!52562 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!105616 () Bool)

(declare-fun e!68771 () Bool)

(declare-fun e!68768 () Bool)

(assert (=> b!105616 (= e!68771 e!68768)))

(declare-fun res!52569 () Bool)

(declare-fun call!11144 () Bool)

(assert (=> b!105616 (= res!52569 call!11144)))

(assert (=> b!105616 (=> (not res!52569) (not e!68768))))

(declare-fun b!105618 () Bool)

(declare-fun res!52566 () Bool)

(assert (=> b!105618 (=> (not res!52566) (not e!68772))))

(assert (=> b!105618 (= res!52566 e!68771)))

(declare-fun c!18368 () Bool)

(assert (=> b!105618 (= c!18368 (not (= (bvand (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68773 () Bool)

(declare-fun b!105619 () Bool)

(assert (=> b!105619 (= e!68773 (= (apply!98 lt!54030 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105619 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))))))))

(assert (=> b!105619 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!105620 () Bool)

(declare-fun call!11139 () ListLongMap!1533)

(assert (=> b!105620 (= e!68770 call!11139)))

(declare-fun b!105621 () Bool)

(declare-fun e!68764 () Unit!3212)

(declare-fun Unit!3223 () Unit!3212)

(assert (=> b!105621 (= e!68764 Unit!3223)))

(declare-fun b!105622 () Bool)

(assert (=> b!105622 (= e!68776 (not call!11141))))

(declare-fun b!105623 () Bool)

(assert (=> b!105623 (= e!68771 (not call!11144))))

(declare-fun b!105624 () Bool)

(declare-fun e!68774 () ListLongMap!1533)

(declare-fun e!68765 () ListLongMap!1533)

(assert (=> b!105624 (= e!68774 e!68765)))

(declare-fun c!18367 () Bool)

(assert (=> b!105624 (= c!18367 (and (not (= (bvand (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11135 () Bool)

(declare-fun call!11142 () ListLongMap!1533)

(declare-fun call!11140 () ListLongMap!1533)

(assert (=> bm!11135 (= call!11142 call!11140)))

(declare-fun bm!11136 () Bool)

(assert (=> bm!11136 (= call!11144 (contains!814 lt!54030 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105625 () Bool)

(assert (=> b!105625 (= e!68772 e!68776)))

(declare-fun c!18372 () Bool)

(assert (=> b!105625 (= c!18372 (not (= (bvand (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!28821 () Bool)

(assert (=> d!28821 e!68772))

(declare-fun res!52563 () Bool)

(assert (=> d!28821 (=> (not res!52563) (not e!68772))))

(assert (=> d!28821 (= res!52563 (or (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))))

(declare-fun lt!54020 () ListLongMap!1533)

(assert (=> d!28821 (= lt!54030 lt!54020)))

(declare-fun lt!54022 () Unit!3212)

(assert (=> d!28821 (= lt!54022 e!68764)))

(declare-fun c!18370 () Bool)

(declare-fun e!68769 () Bool)

(assert (=> d!28821 (= c!18370 e!68769)))

(declare-fun res!52567 () Bool)

(assert (=> d!28821 (=> (not res!52567) (not e!68769))))

(assert (=> d!28821 (= res!52567 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!28821 (= lt!54020 e!68774)))

(declare-fun c!18371 () Bool)

(assert (=> d!28821 (= c!18371 (and (not (= (bvand (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28821 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!28821 (= (getCurrentListMap!469 (_keys!4287 newMap!16) (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) (mask!6727 newMap!16) (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54030)))

(declare-fun call!11138 () ListLongMap!1533)

(declare-fun b!105617 () Bool)

(assert (=> b!105617 (= e!68774 (+!139 call!11138 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))

(declare-fun bm!11137 () Bool)

(assert (=> bm!11137 (= call!11141 (contains!814 lt!54030 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105626 () Bool)

(assert (=> b!105626 (= e!68768 (= (apply!98 lt!54030 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))))

(declare-fun b!105627 () Bool)

(assert (=> b!105627 (= e!68765 call!11143)))

(declare-fun b!105628 () Bool)

(assert (=> b!105628 (= e!68775 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11138 () Bool)

(assert (=> bm!11138 (= call!11139 call!11142)))

(declare-fun bm!11139 () Bool)

(assert (=> bm!11139 (= call!11143 call!11138)))

(declare-fun c!18369 () Bool)

(declare-fun b!105629 () Bool)

(assert (=> b!105629 (= c!18369 (and (not (= (bvand (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!105629 (= e!68765 e!68770)))

(declare-fun bm!11140 () Bool)

(assert (=> bm!11140 (= call!11138 (+!139 (ite c!18371 call!11140 (ite c!18367 call!11142 call!11139)) (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(declare-fun b!105630 () Bool)

(declare-fun lt!54028 () Unit!3212)

(assert (=> b!105630 (= e!68764 lt!54028)))

(declare-fun lt!54015 () ListLongMap!1533)

(assert (=> b!105630 (= lt!54015 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) (mask!6727 newMap!16) (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54029 () (_ BitVec 64))

(assert (=> b!105630 (= lt!54029 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54016 () (_ BitVec 64))

(assert (=> b!105630 (= lt!54016 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54034 () Unit!3212)

(assert (=> b!105630 (= lt!54034 (addStillContains!74 lt!54015 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) lt!54016))))

(assert (=> b!105630 (contains!814 (+!139 lt!54015 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) lt!54016)))

(declare-fun lt!54027 () Unit!3212)

(assert (=> b!105630 (= lt!54027 lt!54034)))

(declare-fun lt!54023 () ListLongMap!1533)

(assert (=> b!105630 (= lt!54023 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) (mask!6727 newMap!16) (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54014 () (_ BitVec 64))

(assert (=> b!105630 (= lt!54014 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54024 () (_ BitVec 64))

(assert (=> b!105630 (= lt!54024 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54031 () Unit!3212)

(assert (=> b!105630 (= lt!54031 (addApplyDifferent!74 lt!54023 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) lt!54024))))

(assert (=> b!105630 (= (apply!98 (+!139 lt!54023 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) lt!54024) (apply!98 lt!54023 lt!54024))))

(declare-fun lt!54018 () Unit!3212)

(assert (=> b!105630 (= lt!54018 lt!54031)))

(declare-fun lt!54026 () ListLongMap!1533)

(assert (=> b!105630 (= lt!54026 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) (mask!6727 newMap!16) (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54035 () (_ BitVec 64))

(assert (=> b!105630 (= lt!54035 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54021 () (_ BitVec 64))

(assert (=> b!105630 (= lt!54021 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54017 () Unit!3212)

(assert (=> b!105630 (= lt!54017 (addApplyDifferent!74 lt!54026 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) lt!54021))))

(assert (=> b!105630 (= (apply!98 (+!139 lt!54026 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) lt!54021) (apply!98 lt!54026 lt!54021))))

(declare-fun lt!54032 () Unit!3212)

(assert (=> b!105630 (= lt!54032 lt!54017)))

(declare-fun lt!54025 () ListLongMap!1533)

(assert (=> b!105630 (= lt!54025 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) (mask!6727 newMap!16) (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54019 () (_ BitVec 64))

(assert (=> b!105630 (= lt!54019 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54033 () (_ BitVec 64))

(assert (=> b!105630 (= lt!54033 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105630 (= lt!54028 (addApplyDifferent!74 lt!54025 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) lt!54033))))

(assert (=> b!105630 (= (apply!98 (+!139 lt!54025 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) lt!54033) (apply!98 lt!54025 lt!54033))))

(declare-fun b!105631 () Bool)

(assert (=> b!105631 (= e!68769 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11141 () Bool)

(assert (=> bm!11141 (= call!11140 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) (mask!6727 newMap!16) (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105632 () Bool)

(assert (=> b!105632 (= e!68766 e!68773)))

(declare-fun res!52564 () Bool)

(assert (=> b!105632 (=> (not res!52564) (not e!68773))))

(assert (=> b!105632 (= res!52564 (contains!814 lt!54030 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105632 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!28821 c!18371) b!105617))

(assert (= (and d!28821 (not c!18371)) b!105624))

(assert (= (and b!105624 c!18367) b!105627))

(assert (= (and b!105624 (not c!18367)) b!105629))

(assert (= (and b!105629 c!18369) b!105614))

(assert (= (and b!105629 (not c!18369)) b!105620))

(assert (= (or b!105614 b!105620) bm!11138))

(assert (= (or b!105627 bm!11138) bm!11135))

(assert (= (or b!105627 b!105614) bm!11139))

(assert (= (or b!105617 bm!11135) bm!11141))

(assert (= (or b!105617 bm!11139) bm!11140))

(assert (= (and d!28821 res!52567) b!105631))

(assert (= (and d!28821 c!18370) b!105630))

(assert (= (and d!28821 (not c!18370)) b!105621))

(assert (= (and d!28821 res!52563) b!105615))

(assert (= (and b!105615 res!52562) b!105628))

(assert (= (and b!105615 (not res!52568)) b!105632))

(assert (= (and b!105632 res!52564) b!105619))

(assert (= (and b!105615 res!52565) b!105618))

(assert (= (and b!105618 c!18368) b!105616))

(assert (= (and b!105618 (not c!18368)) b!105623))

(assert (= (and b!105616 res!52569) b!105626))

(assert (= (or b!105616 b!105623) bm!11136))

(assert (= (and b!105618 res!52566) b!105625))

(assert (= (and b!105625 c!18372) b!105613))

(assert (= (and b!105625 (not c!18372)) b!105622))

(assert (= (and b!105613 res!52561) b!105612))

(assert (= (or b!105613 b!105622) bm!11137))

(declare-fun b_lambda!4731 () Bool)

(assert (=> (not b_lambda!4731) (not b!105619)))

(declare-fun tb!2053 () Bool)

(declare-fun t!5683 () Bool)

(assert (=> (and b!105184 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16)) t!5683) tb!2053))

(declare-fun result!3459 () Bool)

(assert (=> tb!2053 (= result!3459 tp_is_empty!2677)))

(assert (=> b!105619 t!5683))

(declare-fun b_and!6525 () Bool)

(assert (= b_and!6521 (and (=> t!5683 result!3459) b_and!6525)))

(declare-fun t!5685 () Bool)

(declare-fun tb!2055 () Bool)

(assert (=> (and b!105174 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 newMap!16)) t!5685) tb!2055))

(declare-fun result!3461 () Bool)

(assert (= result!3461 result!3459))

(assert (=> b!105619 t!5685))

(declare-fun b_and!6527 () Bool)

(assert (= b_and!6523 (and (=> t!5685 result!3461) b_and!6527)))

(declare-fun m!117651 () Bool)

(assert (=> b!105619 m!117651))

(declare-fun m!117653 () Bool)

(assert (=> b!105619 m!117653))

(declare-fun m!117655 () Bool)

(assert (=> b!105619 m!117655))

(assert (=> b!105619 m!117651))

(assert (=> b!105619 m!117653))

(declare-fun m!117657 () Bool)

(assert (=> b!105619 m!117657))

(declare-fun m!117659 () Bool)

(assert (=> b!105619 m!117659))

(assert (=> b!105619 m!117657))

(declare-fun m!117661 () Bool)

(assert (=> d!28821 m!117661))

(assert (=> b!105628 m!117657))

(assert (=> b!105628 m!117657))

(declare-fun m!117663 () Bool)

(assert (=> b!105628 m!117663))

(declare-fun m!117665 () Bool)

(assert (=> bm!11140 m!117665))

(declare-fun m!117667 () Bool)

(assert (=> bm!11141 m!117667))

(assert (=> b!105631 m!117657))

(assert (=> b!105631 m!117657))

(assert (=> b!105631 m!117663))

(declare-fun m!117669 () Bool)

(assert (=> b!105626 m!117669))

(declare-fun m!117671 () Bool)

(assert (=> bm!11136 m!117671))

(declare-fun m!117673 () Bool)

(assert (=> b!105630 m!117673))

(declare-fun m!117675 () Bool)

(assert (=> b!105630 m!117675))

(declare-fun m!117677 () Bool)

(assert (=> b!105630 m!117677))

(declare-fun m!117679 () Bool)

(assert (=> b!105630 m!117679))

(assert (=> b!105630 m!117667))

(declare-fun m!117681 () Bool)

(assert (=> b!105630 m!117681))

(declare-fun m!117683 () Bool)

(assert (=> b!105630 m!117683))

(declare-fun m!117685 () Bool)

(assert (=> b!105630 m!117685))

(declare-fun m!117687 () Bool)

(assert (=> b!105630 m!117687))

(assert (=> b!105630 m!117683))

(assert (=> b!105630 m!117687))

(declare-fun m!117689 () Bool)

(assert (=> b!105630 m!117689))

(declare-fun m!117691 () Bool)

(assert (=> b!105630 m!117691))

(declare-fun m!117693 () Bool)

(assert (=> b!105630 m!117693))

(assert (=> b!105630 m!117657))

(declare-fun m!117695 () Bool)

(assert (=> b!105630 m!117695))

(declare-fun m!117697 () Bool)

(assert (=> b!105630 m!117697))

(assert (=> b!105630 m!117681))

(declare-fun m!117699 () Bool)

(assert (=> b!105630 m!117699))

(assert (=> b!105630 m!117675))

(declare-fun m!117701 () Bool)

(assert (=> b!105630 m!117701))

(assert (=> b!105632 m!117657))

(assert (=> b!105632 m!117657))

(declare-fun m!117703 () Bool)

(assert (=> b!105632 m!117703))

(declare-fun m!117705 () Bool)

(assert (=> b!105617 m!117705))

(declare-fun m!117707 () Bool)

(assert (=> b!105612 m!117707))

(declare-fun m!117709 () Bool)

(assert (=> bm!11137 m!117709))

(assert (=> bm!11106 d!28821))

(declare-fun d!28823 () Bool)

(assert (=> d!28823 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53865 (zeroValue!2456 newMap!16) lt!53719 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54038 () Unit!3212)

(declare-fun choose!661 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 V!3217 Int) Unit!3212)

(assert (=> d!28823 (= lt!54038 (choose!661 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) lt!53865 (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) lt!53719 (defaultEntry!2581 newMap!16)))))

(assert (=> d!28823 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!28823 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) lt!53865 (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) lt!53719 (defaultEntry!2581 newMap!16)) lt!54038)))

(declare-fun bs!4340 () Bool)

(assert (= bs!4340 d!28823))

(declare-fun m!117711 () Bool)

(assert (=> bs!4340 m!117711))

(assert (=> bs!4340 m!117661))

(assert (=> bs!4340 m!117451))

(assert (=> bs!4340 m!117451))

(declare-fun m!117713 () Bool)

(assert (=> bs!4340 m!117713))

(declare-fun m!117715 () Bool)

(assert (=> bs!4340 m!117715))

(assert (=> b!105426 d!28823))

(declare-fun d!28825 () Bool)

(declare-fun res!52580 () Bool)

(declare-fun e!68779 () Bool)

(assert (=> d!28825 (=> (not res!52580) (not e!68779))))

(assert (=> d!28825 (= res!52580 (validMask!0 (mask!6727 newMap!16)))))

(assert (=> d!28825 (= (simpleValid!74 newMap!16) e!68779)))

(declare-fun b!105641 () Bool)

(declare-fun res!52581 () Bool)

(assert (=> b!105641 (=> (not res!52581) (not e!68779))))

(assert (=> b!105641 (= res!52581 (and (= (size!2310 (_values!2564 newMap!16)) (bvadd (mask!6727 newMap!16) #b00000000000000000000000000000001)) (= (size!2309 (_keys!4287 newMap!16)) (size!2310 (_values!2564 newMap!16))) (bvsge (_size!498 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!498 newMap!16) (bvadd (mask!6727 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!105644 () Bool)

(assert (=> b!105644 (= e!68779 (and (bvsge (extraKeys!2386 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2386 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!498 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!105642 () Bool)

(declare-fun res!52579 () Bool)

(assert (=> b!105642 (=> (not res!52579) (not e!68779))))

(declare-fun size!2315 (LongMapFixedSize!898) (_ BitVec 32))

(assert (=> b!105642 (= res!52579 (bvsge (size!2315 newMap!16) (_size!498 newMap!16)))))

(declare-fun b!105643 () Bool)

(declare-fun res!52578 () Bool)

(assert (=> b!105643 (=> (not res!52578) (not e!68779))))

(assert (=> b!105643 (= res!52578 (= (size!2315 newMap!16) (bvadd (_size!498 newMap!16) (bvsdiv (bvadd (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!28825 res!52580) b!105641))

(assert (= (and b!105641 res!52581) b!105642))

(assert (= (and b!105642 res!52579) b!105643))

(assert (= (and b!105643 res!52578) b!105644))

(assert (=> d!28825 m!117661))

(declare-fun m!117717 () Bool)

(assert (=> b!105642 m!117717))

(assert (=> b!105643 m!117717))

(assert (=> d!28783 d!28825))

(assert (=> bm!11128 d!28797))

(declare-fun b!105653 () Bool)

(declare-fun e!68787 () Bool)

(declare-fun call!11147 () Bool)

(assert (=> b!105653 (= e!68787 call!11147)))

(declare-fun d!28827 () Bool)

(declare-fun res!52586 () Bool)

(declare-fun e!68788 () Bool)

(assert (=> d!28827 (=> res!52586 e!68788)))

(assert (=> d!28827 (= res!52586 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!28827 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4287 newMap!16) (mask!6727 newMap!16)) e!68788)))

(declare-fun bm!11144 () Bool)

(assert (=> bm!11144 (= call!11147 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(declare-fun b!105654 () Bool)

(assert (=> b!105654 (= e!68788 e!68787)))

(declare-fun c!18375 () Bool)

(assert (=> b!105654 (= c!18375 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105655 () Bool)

(declare-fun e!68786 () Bool)

(assert (=> b!105655 (= e!68786 call!11147)))

(declare-fun b!105656 () Bool)

(assert (=> b!105656 (= e!68787 e!68786)))

(declare-fun lt!54045 () (_ BitVec 64))

(assert (=> b!105656 (= lt!54045 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54047 () Unit!3212)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4331 (_ BitVec 64) (_ BitVec 32)) Unit!3212)

(assert (=> b!105656 (= lt!54047 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4287 newMap!16) lt!54045 #b00000000000000000000000000000000))))

(assert (=> b!105656 (arrayContainsKey!0 (_keys!4287 newMap!16) lt!54045 #b00000000000000000000000000000000)))

(declare-fun lt!54046 () Unit!3212)

(assert (=> b!105656 (= lt!54046 lt!54047)))

(declare-fun res!52587 () Bool)

(assert (=> b!105656 (= res!52587 (= (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) (_keys!4287 newMap!16) (mask!6727 newMap!16)) (Found!253 #b00000000000000000000000000000000)))))

(assert (=> b!105656 (=> (not res!52587) (not e!68786))))

(assert (= (and d!28827 (not res!52586)) b!105654))

(assert (= (and b!105654 c!18375) b!105656))

(assert (= (and b!105654 (not c!18375)) b!105653))

(assert (= (and b!105656 res!52587) b!105655))

(assert (= (or b!105655 b!105653) bm!11144))

(declare-fun m!117719 () Bool)

(assert (=> bm!11144 m!117719))

(assert (=> b!105654 m!117657))

(assert (=> b!105654 m!117657))

(assert (=> b!105654 m!117663))

(assert (=> b!105656 m!117657))

(declare-fun m!117721 () Bool)

(assert (=> b!105656 m!117721))

(declare-fun m!117723 () Bool)

(assert (=> b!105656 m!117723))

(assert (=> b!105656 m!117657))

(declare-fun m!117725 () Bool)

(assert (=> b!105656 m!117725))

(assert (=> b!105519 d!28827))

(declare-fun d!28829 () Bool)

(declare-fun res!52588 () Bool)

(declare-fun e!68789 () Bool)

(assert (=> d!28829 (=> (not res!52588) (not e!68789))))

(assert (=> d!28829 (= res!52588 (simpleValid!74 (_2!1192 lt!53868)))))

(assert (=> d!28829 (= (valid!421 (_2!1192 lt!53868)) e!68789)))

(declare-fun b!105657 () Bool)

(declare-fun res!52589 () Bool)

(assert (=> b!105657 (=> (not res!52589) (not e!68789))))

(assert (=> b!105657 (= res!52589 (= (arrayCountValidKeys!0 (_keys!4287 (_2!1192 lt!53868)) #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))) (_size!498 (_2!1192 lt!53868))))))

(declare-fun b!105658 () Bool)

(declare-fun res!52590 () Bool)

(assert (=> b!105658 (=> (not res!52590) (not e!68789))))

(assert (=> b!105658 (= res!52590 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4287 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868))))))

(declare-fun b!105659 () Bool)

(assert (=> b!105659 (= e!68789 (arrayNoDuplicates!0 (_keys!4287 (_2!1192 lt!53868)) #b00000000000000000000000000000000 Nil!1594))))

(assert (= (and d!28829 res!52588) b!105657))

(assert (= (and b!105657 res!52589) b!105658))

(assert (= (and b!105658 res!52590) b!105659))

(declare-fun m!117727 () Bool)

(assert (=> d!28829 m!117727))

(declare-fun m!117729 () Bool)

(assert (=> b!105657 m!117729))

(declare-fun m!117731 () Bool)

(assert (=> b!105658 m!117731))

(declare-fun m!117733 () Bool)

(assert (=> b!105659 m!117733))

(assert (=> d!28773 d!28829))

(assert (=> d!28773 d!28783))

(declare-fun d!28831 () Bool)

(declare-fun e!68790 () Bool)

(assert (=> d!28831 e!68790))

(declare-fun res!52591 () Bool)

(assert (=> d!28831 (=> (not res!52591) (not e!68790))))

(declare-fun lt!54049 () ListLongMap!1533)

(assert (=> d!28831 (= res!52591 (contains!814 lt!54049 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun lt!54048 () List!1596)

(assert (=> d!28831 (= lt!54049 (ListLongMap!1534 lt!54048))))

(declare-fun lt!54051 () Unit!3212)

(declare-fun lt!54050 () Unit!3212)

(assert (=> d!28831 (= lt!54051 lt!54050)))

(assert (=> d!28831 (= (getValueByKey!157 lt!54048 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!28831 (= lt!54050 (lemmaContainsTupThenGetReturnValue!73 lt!54048 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!28831 (= lt!54048 (insertStrictlySorted!76 (toList!782 lt!53714) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!28831 (= (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) lt!54049)))

(declare-fun b!105660 () Bool)

(declare-fun res!52592 () Bool)

(assert (=> b!105660 (=> (not res!52592) (not e!68790))))

(assert (=> b!105660 (= res!52592 (= (getValueByKey!157 (toList!782 lt!54049) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!105661 () Bool)

(assert (=> b!105661 (= e!68790 (contains!816 (toList!782 lt!54049) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(assert (= (and d!28831 res!52591) b!105660))

(assert (= (and b!105660 res!52592) b!105661))

(declare-fun m!117735 () Bool)

(assert (=> d!28831 m!117735))

(declare-fun m!117737 () Bool)

(assert (=> d!28831 m!117737))

(declare-fun m!117739 () Bool)

(assert (=> d!28831 m!117739))

(declare-fun m!117741 () Bool)

(assert (=> d!28831 m!117741))

(declare-fun m!117743 () Bool)

(assert (=> b!105660 m!117743))

(declare-fun m!117745 () Bool)

(assert (=> b!105661 m!117745))

(assert (=> d!28789 d!28831))

(declare-fun d!28833 () Bool)

(declare-fun e!68791 () Bool)

(assert (=> d!28833 e!68791))

(declare-fun res!52593 () Bool)

(assert (=> d!28833 (=> (not res!52593) (not e!68791))))

(declare-fun lt!54053 () ListLongMap!1533)

(assert (=> d!28833 (= res!52593 (contains!814 lt!54053 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun lt!54052 () List!1596)

(assert (=> d!28833 (= lt!54053 (ListLongMap!1534 lt!54052))))

(declare-fun lt!54055 () Unit!3212)

(declare-fun lt!54054 () Unit!3212)

(assert (=> d!28833 (= lt!54055 lt!54054)))

(assert (=> d!28833 (= (getValueByKey!157 lt!54052 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!28833 (= lt!54054 (lemmaContainsTupThenGetReturnValue!73 lt!54052 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!28833 (= lt!54052 (insertStrictlySorted!76 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!28833 (= (+!139 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) lt!54053)))

(declare-fun b!105662 () Bool)

(declare-fun res!52594 () Bool)

(assert (=> b!105662 (=> (not res!52594) (not e!68791))))

(assert (=> b!105662 (= res!52594 (= (getValueByKey!157 (toList!782 lt!54053) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!105663 () Bool)

(assert (=> b!105663 (= e!68791 (contains!816 (toList!782 lt!54053) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(assert (= (and d!28833 res!52593) b!105662))

(assert (= (and b!105662 res!52594) b!105663))

(declare-fun m!117747 () Bool)

(assert (=> d!28833 m!117747))

(declare-fun m!117749 () Bool)

(assert (=> d!28833 m!117749))

(declare-fun m!117751 () Bool)

(assert (=> d!28833 m!117751))

(declare-fun m!117753 () Bool)

(assert (=> d!28833 m!117753))

(declare-fun m!117755 () Bool)

(assert (=> b!105662 m!117755))

(declare-fun m!117757 () Bool)

(assert (=> b!105663 m!117757))

(assert (=> d!28789 d!28833))

(declare-fun d!28835 () Bool)

(assert (=> d!28835 (= (+!139 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (+!139 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(assert (=> d!28835 true))

(declare-fun _$28!161 () Unit!3212)

(assert (=> d!28835 (= (choose!659 lt!53714 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) _$28!161)))

(declare-fun bs!4341 () Bool)

(assert (= bs!4341 d!28835))

(assert (=> bs!4341 m!117549))

(assert (=> bs!4341 m!117549))

(assert (=> bs!4341 m!117551))

(assert (=> bs!4341 m!117555))

(assert (=> bs!4341 m!117555))

(assert (=> bs!4341 m!117557))

(assert (=> d!28789 d!28835))

(declare-fun d!28837 () Bool)

(declare-fun e!68792 () Bool)

(assert (=> d!28837 e!68792))

(declare-fun res!52595 () Bool)

(assert (=> d!28837 (=> (not res!52595) (not e!68792))))

(declare-fun lt!54057 () ListLongMap!1533)

(assert (=> d!28837 (= res!52595 (contains!814 lt!54057 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54056 () List!1596)

(assert (=> d!28837 (= lt!54057 (ListLongMap!1534 lt!54056))))

(declare-fun lt!54059 () Unit!3212)

(declare-fun lt!54058 () Unit!3212)

(assert (=> d!28837 (= lt!54059 lt!54058)))

(assert (=> d!28837 (= (getValueByKey!157 lt!54056 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28837 (= lt!54058 (lemmaContainsTupThenGetReturnValue!73 lt!54056 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28837 (= lt!54056 (insertStrictlySorted!76 (toList!782 lt!53714) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28837 (= (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54057)))

(declare-fun b!105664 () Bool)

(declare-fun res!52596 () Bool)

(assert (=> b!105664 (=> (not res!52596) (not e!68792))))

(assert (=> b!105664 (= res!52596 (= (getValueByKey!157 (toList!782 lt!54057) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105665 () Bool)

(assert (=> b!105665 (= e!68792 (contains!816 (toList!782 lt!54057) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28837 res!52595) b!105664))

(assert (= (and b!105664 res!52596) b!105665))

(declare-fun m!117759 () Bool)

(assert (=> d!28837 m!117759))

(declare-fun m!117761 () Bool)

(assert (=> d!28837 m!117761))

(declare-fun m!117763 () Bool)

(assert (=> d!28837 m!117763))

(declare-fun m!117765 () Bool)

(assert (=> d!28837 m!117765))

(declare-fun m!117767 () Bool)

(assert (=> b!105664 m!117767))

(declare-fun m!117769 () Bool)

(assert (=> b!105665 m!117769))

(assert (=> d!28789 d!28837))

(declare-fun d!28839 () Bool)

(declare-fun e!68793 () Bool)

(assert (=> d!28839 e!68793))

(declare-fun res!52597 () Bool)

(assert (=> d!28839 (=> (not res!52597) (not e!68793))))

(declare-fun lt!54061 () ListLongMap!1533)

(assert (=> d!28839 (= res!52597 (contains!814 lt!54061 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54060 () List!1596)

(assert (=> d!28839 (= lt!54061 (ListLongMap!1534 lt!54060))))

(declare-fun lt!54063 () Unit!3212)

(declare-fun lt!54062 () Unit!3212)

(assert (=> d!28839 (= lt!54063 lt!54062)))

(assert (=> d!28839 (= (getValueByKey!157 lt!54060 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28839 (= lt!54062 (lemmaContainsTupThenGetReturnValue!73 lt!54060 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28839 (= lt!54060 (insertStrictlySorted!76 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28839 (= (+!139 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54061)))

(declare-fun b!105666 () Bool)

(declare-fun res!52598 () Bool)

(assert (=> b!105666 (=> (not res!52598) (not e!68793))))

(assert (=> b!105666 (= res!52598 (= (getValueByKey!157 (toList!782 lt!54061) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105667 () Bool)

(assert (=> b!105667 (= e!68793 (contains!816 (toList!782 lt!54061) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28839 res!52597) b!105666))

(assert (= (and b!105666 res!52598) b!105667))

(declare-fun m!117771 () Bool)

(assert (=> d!28839 m!117771))

(declare-fun m!117773 () Bool)

(assert (=> d!28839 m!117773))

(declare-fun m!117775 () Bool)

(assert (=> d!28839 m!117775))

(declare-fun m!117777 () Bool)

(assert (=> d!28839 m!117777))

(declare-fun m!117779 () Bool)

(assert (=> b!105666 m!117779))

(declare-fun m!117781 () Bool)

(assert (=> b!105667 m!117781))

(assert (=> d!28789 d!28839))

(declare-fun d!28841 () Bool)

(declare-fun e!68794 () Bool)

(assert (=> d!28841 e!68794))

(declare-fun res!52599 () Bool)

(assert (=> d!28841 (=> (not res!52599) (not e!68794))))

(declare-fun lt!54065 () ListLongMap!1533)

(assert (=> d!28841 (= res!52599 (contains!814 lt!54065 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54064 () List!1596)

(assert (=> d!28841 (= lt!54065 (ListLongMap!1534 lt!54064))))

(declare-fun lt!54067 () Unit!3212)

(declare-fun lt!54066 () Unit!3212)

(assert (=> d!28841 (= lt!54067 lt!54066)))

(assert (=> d!28841 (= (getValueByKey!157 lt!54064 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28841 (= lt!54066 (lemmaContainsTupThenGetReturnValue!73 lt!54064 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28841 (= lt!54064 (insertStrictlySorted!76 (toList!782 call!11125) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28841 (= (+!139 call!11125 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54065)))

(declare-fun b!105668 () Bool)

(declare-fun res!52600 () Bool)

(assert (=> b!105668 (=> (not res!52600) (not e!68794))))

(assert (=> b!105668 (= res!52600 (= (getValueByKey!157 (toList!782 lt!54065) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105669 () Bool)

(assert (=> b!105669 (= e!68794 (contains!816 (toList!782 lt!54065) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28841 res!52599) b!105668))

(assert (= (and b!105668 res!52600) b!105669))

(declare-fun m!117783 () Bool)

(assert (=> d!28841 m!117783))

(declare-fun m!117785 () Bool)

(assert (=> d!28841 m!117785))

(declare-fun m!117787 () Bool)

(assert (=> d!28841 m!117787))

(declare-fun m!117789 () Bool)

(assert (=> d!28841 m!117789))

(declare-fun m!117791 () Bool)

(assert (=> b!105668 m!117791))

(declare-fun m!117793 () Bool)

(assert (=> b!105669 m!117793))

(assert (=> b!105496 d!28841))

(declare-fun d!28843 () Bool)

(declare-fun e!68795 () Bool)

(assert (=> d!28843 e!68795))

(declare-fun res!52601 () Bool)

(assert (=> d!28843 (=> res!52601 e!68795)))

(declare-fun lt!54069 () Bool)

(assert (=> d!28843 (= res!52601 (not lt!54069))))

(declare-fun lt!54070 () Bool)

(assert (=> d!28843 (= lt!54069 lt!54070)))

(declare-fun lt!54071 () Unit!3212)

(declare-fun e!68796 () Unit!3212)

(assert (=> d!28843 (= lt!54071 e!68796)))

(declare-fun c!18376 () Bool)

(assert (=> d!28843 (= c!18376 lt!54070)))

(assert (=> d!28843 (= lt!54070 (containsKey!160 (toList!782 lt!53966) (_1!1191 lt!53713)))))

(assert (=> d!28843 (= (contains!814 lt!53966 (_1!1191 lt!53713)) lt!54069)))

(declare-fun b!105670 () Bool)

(declare-fun lt!54068 () Unit!3212)

(assert (=> b!105670 (= e!68796 lt!54068)))

(assert (=> b!105670 (= lt!54068 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53966) (_1!1191 lt!53713)))))

(assert (=> b!105670 (isDefined!109 (getValueByKey!157 (toList!782 lt!53966) (_1!1191 lt!53713)))))

(declare-fun b!105671 () Bool)

(declare-fun Unit!3224 () Unit!3212)

(assert (=> b!105671 (= e!68796 Unit!3224)))

(declare-fun b!105672 () Bool)

(assert (=> b!105672 (= e!68795 (isDefined!109 (getValueByKey!157 (toList!782 lt!53966) (_1!1191 lt!53713))))))

(assert (= (and d!28843 c!18376) b!105670))

(assert (= (and d!28843 (not c!18376)) b!105671))

(assert (= (and d!28843 (not res!52601)) b!105672))

(declare-fun m!117795 () Bool)

(assert (=> d!28843 m!117795))

(declare-fun m!117797 () Bool)

(assert (=> b!105670 m!117797))

(assert (=> b!105670 m!117567))

(assert (=> b!105670 m!117567))

(declare-fun m!117799 () Bool)

(assert (=> b!105670 m!117799))

(assert (=> b!105672 m!117567))

(assert (=> b!105672 m!117567))

(assert (=> b!105672 m!117799))

(assert (=> d!28791 d!28843))

(declare-fun b!105681 () Bool)

(declare-fun e!68801 () Option!163)

(assert (=> b!105681 (= e!68801 (Some!162 (_2!1191 (h!2189 lt!53965))))))

(declare-fun d!28845 () Bool)

(declare-fun c!18381 () Bool)

(assert (=> d!28845 (= c!18381 (and ((_ is Cons!1592) lt!53965) (= (_1!1191 (h!2189 lt!53965)) (_1!1191 lt!53713))))))

(assert (=> d!28845 (= (getValueByKey!157 lt!53965 (_1!1191 lt!53713)) e!68801)))

(declare-fun b!105683 () Bool)

(declare-fun e!68802 () Option!163)

(assert (=> b!105683 (= e!68802 (getValueByKey!157 (t!5671 lt!53965) (_1!1191 lt!53713)))))

(declare-fun b!105682 () Bool)

(assert (=> b!105682 (= e!68801 e!68802)))

(declare-fun c!18382 () Bool)

(assert (=> b!105682 (= c!18382 (and ((_ is Cons!1592) lt!53965) (not (= (_1!1191 (h!2189 lt!53965)) (_1!1191 lt!53713)))))))

(declare-fun b!105684 () Bool)

(assert (=> b!105684 (= e!68802 None!161)))

(assert (= (and d!28845 c!18381) b!105681))

(assert (= (and d!28845 (not c!18381)) b!105682))

(assert (= (and b!105682 c!18382) b!105683))

(assert (= (and b!105682 (not c!18382)) b!105684))

(declare-fun m!117801 () Bool)

(assert (=> b!105683 m!117801))

(assert (=> d!28791 d!28845))

(declare-fun d!28847 () Bool)

(assert (=> d!28847 (= (getValueByKey!157 lt!53965 (_1!1191 lt!53713)) (Some!162 (_2!1191 lt!53713)))))

(declare-fun lt!54074 () Unit!3212)

(declare-fun choose!662 (List!1596 (_ BitVec 64) V!3217) Unit!3212)

(assert (=> d!28847 (= lt!54074 (choose!662 lt!53965 (_1!1191 lt!53713) (_2!1191 lt!53713)))))

(declare-fun e!68805 () Bool)

(assert (=> d!28847 e!68805))

(declare-fun res!52606 () Bool)

(assert (=> d!28847 (=> (not res!52606) (not e!68805))))

(declare-fun isStrictlySorted!296 (List!1596) Bool)

(assert (=> d!28847 (= res!52606 (isStrictlySorted!296 lt!53965))))

(assert (=> d!28847 (= (lemmaContainsTupThenGetReturnValue!73 lt!53965 (_1!1191 lt!53713) (_2!1191 lt!53713)) lt!54074)))

(declare-fun b!105689 () Bool)

(declare-fun res!52607 () Bool)

(assert (=> b!105689 (=> (not res!52607) (not e!68805))))

(assert (=> b!105689 (= res!52607 (containsKey!160 lt!53965 (_1!1191 lt!53713)))))

(declare-fun b!105690 () Bool)

(assert (=> b!105690 (= e!68805 (contains!816 lt!53965 (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(assert (= (and d!28847 res!52606) b!105689))

(assert (= (and b!105689 res!52607) b!105690))

(assert (=> d!28847 m!117561))

(declare-fun m!117803 () Bool)

(assert (=> d!28847 m!117803))

(declare-fun m!117805 () Bool)

(assert (=> d!28847 m!117805))

(declare-fun m!117807 () Bool)

(assert (=> b!105689 m!117807))

(declare-fun m!117809 () Bool)

(assert (=> b!105690 m!117809))

(assert (=> d!28791 d!28847))

(declare-fun bm!11151 () Bool)

(declare-fun call!11156 () List!1596)

(declare-fun call!11155 () List!1596)

(assert (=> bm!11151 (= call!11156 call!11155)))

(declare-fun b!105711 () Bool)

(declare-fun c!18391 () Bool)

(declare-fun e!68816 () List!1596)

(declare-fun c!18393 () Bool)

(assert (=> b!105711 (= e!68816 (ite c!18393 (t!5671 (toList!782 (+!139 lt!53714 lt!53718))) (ite c!18391 (Cons!1592 (h!2189 (toList!782 (+!139 lt!53714 lt!53718))) (t!5671 (toList!782 (+!139 lt!53714 lt!53718)))) Nil!1593)))))

(declare-fun b!105712 () Bool)

(declare-fun e!68819 () List!1596)

(assert (=> b!105712 (= e!68819 call!11155)))

(declare-fun b!105714 () Bool)

(assert (=> b!105714 (= c!18391 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 lt!53718))) (bvsgt (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 lt!53718)))) (_1!1191 lt!53713))))))

(declare-fun e!68818 () List!1596)

(assert (=> b!105714 (= e!68819 e!68818)))

(declare-fun c!18392 () Bool)

(declare-fun bm!11152 () Bool)

(declare-fun call!11154 () List!1596)

(declare-fun $colon$colon!80 (List!1596 tuple2!2360) List!1596)

(assert (=> bm!11152 (= call!11154 ($colon$colon!80 e!68816 (ite c!18392 (h!2189 (toList!782 (+!139 lt!53714 lt!53718))) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713)))))))

(declare-fun c!18394 () Bool)

(assert (=> bm!11152 (= c!18394 c!18392)))

(declare-fun b!105715 () Bool)

(assert (=> b!105715 (= e!68818 call!11156)))

(declare-fun b!105716 () Bool)

(assert (=> b!105716 (= e!68818 call!11156)))

(declare-fun b!105717 () Bool)

(declare-fun res!52613 () Bool)

(declare-fun e!68817 () Bool)

(assert (=> b!105717 (=> (not res!52613) (not e!68817))))

(declare-fun lt!54077 () List!1596)

(assert (=> b!105717 (= res!52613 (containsKey!160 lt!54077 (_1!1191 lt!53713)))))

(declare-fun b!105718 () Bool)

(assert (=> b!105718 (= e!68817 (contains!816 lt!54077 (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun b!105719 () Bool)

(declare-fun e!68820 () List!1596)

(assert (=> b!105719 (= e!68820 e!68819)))

(assert (=> b!105719 (= c!18393 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 lt!53718))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 lt!53718)))) (_1!1191 lt!53713))))))

(declare-fun d!28849 () Bool)

(assert (=> d!28849 e!68817))

(declare-fun res!52612 () Bool)

(assert (=> d!28849 (=> (not res!52612) (not e!68817))))

(assert (=> d!28849 (= res!52612 (isStrictlySorted!296 lt!54077))))

(assert (=> d!28849 (= lt!54077 e!68820)))

(assert (=> d!28849 (= c!18392 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 lt!53718))) (bvslt (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 lt!53718)))) (_1!1191 lt!53713))))))

(assert (=> d!28849 (isStrictlySorted!296 (toList!782 (+!139 lt!53714 lt!53718)))))

(assert (=> d!28849 (= (insertStrictlySorted!76 (toList!782 (+!139 lt!53714 lt!53718)) (_1!1191 lt!53713) (_2!1191 lt!53713)) lt!54077)))

(declare-fun b!105713 () Bool)

(assert (=> b!105713 (= e!68816 (insertStrictlySorted!76 (t!5671 (toList!782 (+!139 lt!53714 lt!53718))) (_1!1191 lt!53713) (_2!1191 lt!53713)))))

(declare-fun bm!11153 () Bool)

(assert (=> bm!11153 (= call!11155 call!11154)))

(declare-fun b!105720 () Bool)

(assert (=> b!105720 (= e!68820 call!11154)))

(assert (= (and d!28849 c!18392) b!105720))

(assert (= (and d!28849 (not c!18392)) b!105719))

(assert (= (and b!105719 c!18393) b!105712))

(assert (= (and b!105719 (not c!18393)) b!105714))

(assert (= (and b!105714 c!18391) b!105716))

(assert (= (and b!105714 (not c!18391)) b!105715))

(assert (= (or b!105716 b!105715) bm!11151))

(assert (= (or b!105712 bm!11151) bm!11153))

(assert (= (or b!105720 bm!11153) bm!11152))

(assert (= (and bm!11152 c!18394) b!105713))

(assert (= (and bm!11152 (not c!18394)) b!105711))

(assert (= (and d!28849 res!52612) b!105717))

(assert (= (and b!105717 res!52613) b!105718))

(declare-fun m!117811 () Bool)

(assert (=> bm!11152 m!117811))

(declare-fun m!117813 () Bool)

(assert (=> d!28849 m!117813))

(declare-fun m!117815 () Bool)

(assert (=> d!28849 m!117815))

(declare-fun m!117817 () Bool)

(assert (=> b!105718 m!117817))

(declare-fun m!117819 () Bool)

(assert (=> b!105717 m!117819))

(declare-fun m!117821 () Bool)

(assert (=> b!105713 m!117821))

(assert (=> d!28791 d!28849))

(declare-fun c!18395 () Bool)

(declare-fun call!11157 () Bool)

(declare-fun bm!11154 () Bool)

(assert (=> bm!11154 (= call!11157 (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18395 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594))))))

(declare-fun b!105722 () Bool)

(declare-fun e!68824 () Bool)

(declare-fun e!68823 () Bool)

(assert (=> b!105722 (= e!68824 e!68823)))

(assert (=> b!105722 (= c!18395 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!105723 () Bool)

(assert (=> b!105723 (= e!68823 call!11157)))

(declare-fun e!68822 () Bool)

(declare-fun b!105724 () Bool)

(assert (=> b!105724 (= e!68822 (contains!817 (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!105725 () Bool)

(assert (=> b!105725 (= e!68823 call!11157)))

(declare-fun b!105721 () Bool)

(declare-fun e!68821 () Bool)

(assert (=> b!105721 (= e!68821 e!68824)))

(declare-fun res!52615 () Bool)

(assert (=> b!105721 (=> (not res!52615) (not e!68824))))

(assert (=> b!105721 (= res!52615 (not e!68822))))

(declare-fun res!52614 () Bool)

(assert (=> b!105721 (=> (not res!52614) (not e!68822))))

(assert (=> b!105721 (= res!52614 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!28851 () Bool)

(declare-fun res!52616 () Bool)

(assert (=> d!28851 (=> res!52616 e!68821)))

(assert (=> d!28851 (= res!52616 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!28851 (= (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)) e!68821)))

(assert (= (and d!28851 (not res!52616)) b!105721))

(assert (= (and b!105721 res!52614) b!105724))

(assert (= (and b!105721 res!52615) b!105722))

(assert (= (and b!105722 c!18395) b!105723))

(assert (= (and b!105722 (not c!18395)) b!105725))

(assert (= (or b!105723 b!105725) bm!11154))

(declare-fun m!117823 () Bool)

(assert (=> bm!11154 m!117823))

(declare-fun m!117825 () Bool)

(assert (=> bm!11154 m!117825))

(assert (=> b!105722 m!117823))

(assert (=> b!105722 m!117823))

(declare-fun m!117827 () Bool)

(assert (=> b!105722 m!117827))

(assert (=> b!105724 m!117823))

(assert (=> b!105724 m!117823))

(declare-fun m!117829 () Bool)

(assert (=> b!105724 m!117829))

(assert (=> b!105721 m!117823))

(assert (=> b!105721 m!117823))

(assert (=> b!105721 m!117827))

(assert (=> bm!11134 d!28851))

(declare-fun d!28853 () Bool)

(declare-fun get!1338 (Option!163) V!3217)

(assert (=> d!28853 (= (apply!98 lt!53948 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1338 (getValueByKey!157 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4342 () Bool)

(assert (= bs!4342 d!28853))

(assert (=> bs!4342 m!117491))

(declare-fun m!117831 () Bool)

(assert (=> bs!4342 m!117831))

(assert (=> bs!4342 m!117831))

(declare-fun m!117833 () Bool)

(assert (=> bs!4342 m!117833))

(assert (=> b!105498 d!28853))

(declare-fun d!28855 () Bool)

(declare-fun c!18396 () Bool)

(assert (=> d!28855 (= c!18396 ((_ is ValueCellFull!995) (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!68825 () V!3217)

(assert (=> d!28855 (= (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68825)))

(declare-fun b!105726 () Bool)

(assert (=> b!105726 (= e!68825 (get!1336 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105727 () Bool)

(assert (=> b!105727 (= e!68825 (get!1337 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28855 c!18396) b!105726))

(assert (= (and d!28855 (not c!18396)) b!105727))

(assert (=> b!105726 m!117487))

(assert (=> b!105726 m!117297))

(declare-fun m!117835 () Bool)

(assert (=> b!105726 m!117835))

(assert (=> b!105727 m!117487))

(assert (=> b!105727 m!117297))

(declare-fun m!117837 () Bool)

(assert (=> b!105727 m!117837))

(assert (=> b!105498 d!28855))

(declare-fun d!28857 () Bool)

(assert (=> d!28857 (= (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (and (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105592 d!28857))

(declare-fun d!28859 () Bool)

(declare-fun e!68826 () Bool)

(assert (=> d!28859 e!68826))

(declare-fun res!52617 () Bool)

(assert (=> d!28859 (=> res!52617 e!68826)))

(declare-fun lt!54079 () Bool)

(assert (=> d!28859 (= res!52617 (not lt!54079))))

(declare-fun lt!54080 () Bool)

(assert (=> d!28859 (= lt!54079 lt!54080)))

(declare-fun lt!54081 () Unit!3212)

(declare-fun e!68827 () Unit!3212)

(assert (=> d!28859 (= lt!54081 e!68827)))

(declare-fun c!18397 () Bool)

(assert (=> d!28859 (= c!18397 lt!54080)))

(assert (=> d!28859 (= lt!54080 (containsKey!160 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(assert (=> d!28859 (= (contains!814 call!11107 (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))) lt!54079)))

(declare-fun b!105728 () Bool)

(declare-fun lt!54078 () Unit!3212)

(assert (=> b!105728 (= e!68827 lt!54078)))

(assert (=> b!105728 (= lt!54078 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(assert (=> b!105728 (isDefined!109 (getValueByKey!157 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(declare-fun b!105729 () Bool)

(declare-fun Unit!3225 () Unit!3212)

(assert (=> b!105729 (= e!68827 Unit!3225)))

(declare-fun b!105730 () Bool)

(assert (=> b!105730 (= e!68826 (isDefined!109 (getValueByKey!157 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873)))))))

(assert (= (and d!28859 c!18397) b!105728))

(assert (= (and d!28859 (not c!18397)) b!105729))

(assert (= (and d!28859 (not res!52617)) b!105730))

(assert (=> d!28859 m!117461))

(declare-fun m!117839 () Bool)

(assert (=> d!28859 m!117839))

(assert (=> b!105728 m!117461))

(declare-fun m!117841 () Bool)

(assert (=> b!105728 m!117841))

(assert (=> b!105728 m!117461))

(declare-fun m!117843 () Bool)

(assert (=> b!105728 m!117843))

(assert (=> b!105728 m!117843))

(declare-fun m!117845 () Bool)

(assert (=> b!105728 m!117845))

(assert (=> b!105730 m!117461))

(assert (=> b!105730 m!117843))

(assert (=> b!105730 m!117843))

(assert (=> b!105730 m!117845))

(assert (=> b!105435 d!28859))

(declare-fun d!28861 () Bool)

(declare-fun e!68830 () Bool)

(assert (=> d!28861 e!68830))

(declare-fun res!52620 () Bool)

(assert (=> d!28861 (=> (not res!52620) (not e!68830))))

(assert (=> d!28861 (= res!52620 (and (bvsge (index!3161 lt!53873) #b00000000000000000000000000000000) (bvslt (index!3161 lt!53873) (size!2309 (_keys!4287 newMap!16)))))))

(declare-fun lt!54084 () Unit!3212)

(declare-fun choose!663 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) Int) Unit!3212)

(assert (=> d!28861 (= lt!54084 (choose!663 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3161 lt!53873) (defaultEntry!2581 newMap!16)))))

(assert (=> d!28861 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!28861 (= (lemmaValidKeyInArrayIsInListMap!107 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3161 lt!53873) (defaultEntry!2581 newMap!16)) lt!54084)))

(declare-fun b!105733 () Bool)

(assert (=> b!105733 (= e!68830 (contains!814 (getCurrentListMap!469 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(assert (= (and d!28861 res!52620) b!105733))

(declare-fun m!117847 () Bool)

(assert (=> d!28861 m!117847))

(assert (=> d!28861 m!117661))

(declare-fun m!117849 () Bool)

(assert (=> b!105733 m!117849))

(assert (=> b!105733 m!117461))

(assert (=> b!105733 m!117849))

(assert (=> b!105733 m!117461))

(declare-fun m!117851 () Bool)

(assert (=> b!105733 m!117851))

(assert (=> b!105435 d!28861))

(declare-fun d!28863 () Bool)

(declare-fun e!68833 () Bool)

(assert (=> d!28863 e!68833))

(declare-fun res!52623 () Bool)

(assert (=> d!28863 (=> (not res!52623) (not e!68833))))

(assert (=> d!28863 (= res!52623 (and (bvsge (index!3161 lt!53873) #b00000000000000000000000000000000) (bvslt (index!3161 lt!53873) (size!2310 (_values!2564 newMap!16)))))))

(declare-fun lt!54087 () Unit!3212)

(declare-fun choose!664 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) (_ BitVec 64) V!3217 Int) Unit!3212)

(assert (=> d!28863 (= lt!54087 (choose!664 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3161 lt!53873) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 (defaultEntry!2581 newMap!16)))))

(assert (=> d!28863 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!28863 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3161 lt!53873) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 (defaultEntry!2581 newMap!16)) lt!54087)))

(declare-fun b!105736 () Bool)

(assert (=> b!105736 (= e!68833 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (getCurrentListMap!469 (_keys!4287 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))))))

(assert (= (and d!28863 res!52623) b!105736))

(assert (=> d!28863 m!117261))

(declare-fun m!117853 () Bool)

(assert (=> d!28863 m!117853))

(assert (=> d!28863 m!117661))

(assert (=> b!105736 m!117451))

(assert (=> b!105736 m!117451))

(declare-fun m!117855 () Bool)

(assert (=> b!105736 m!117855))

(assert (=> b!105736 m!117445))

(declare-fun m!117857 () Bool)

(assert (=> b!105736 m!117857))

(assert (=> b!105435 d!28863))

(declare-fun d!28865 () Bool)

(declare-fun e!68836 () Bool)

(assert (=> d!28865 e!68836))

(declare-fun res!52629 () Bool)

(assert (=> d!28865 (=> (not res!52629) (not e!68836))))

(declare-fun lt!54093 () SeekEntryResult!253)

(assert (=> d!28865 (= res!52629 ((_ is Found!253) lt!54093))))

(assert (=> d!28865 (= lt!54093 (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(declare-fun lt!54092 () Unit!3212)

(declare-fun choose!665 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) Int) Unit!3212)

(assert (=> d!28865 (= lt!54092 (choose!665 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(assert (=> d!28865 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!28865 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)) lt!54092)))

(declare-fun b!105741 () Bool)

(declare-fun res!52628 () Bool)

(assert (=> b!105741 (=> (not res!52628) (not e!68836))))

(assert (=> b!105741 (= res!52628 (inRange!0 (index!3161 lt!54093) (mask!6727 newMap!16)))))

(declare-fun b!105742 () Bool)

(assert (=> b!105742 (= e!68836 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!54093)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105742 (and (bvsge (index!3161 lt!54093) #b00000000000000000000000000000000) (bvslt (index!3161 lt!54093) (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!28865 res!52629) b!105741))

(assert (= (and b!105741 res!52628) b!105742))

(assert (=> d!28865 m!117261))

(assert (=> d!28865 m!117433))

(assert (=> d!28865 m!117261))

(declare-fun m!117859 () Bool)

(assert (=> d!28865 m!117859))

(assert (=> d!28865 m!117661))

(declare-fun m!117861 () Bool)

(assert (=> b!105741 m!117861))

(declare-fun m!117863 () Bool)

(assert (=> b!105742 m!117863))

(assert (=> bm!11094 d!28865))

(assert (=> b!105579 d!28811))

(declare-fun b!105744 () Bool)

(declare-fun e!68840 () Bool)

(assert (=> b!105744 (= e!68840 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!105744 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!105745 () Bool)

(declare-fun e!68842 () ListLongMap!1533)

(declare-fun e!68838 () ListLongMap!1533)

(assert (=> b!105745 (= e!68842 e!68838)))

(declare-fun c!18398 () Bool)

(assert (=> b!105745 (= c!18398 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!68841 () Bool)

(declare-fun b!105746 () Bool)

(declare-fun lt!54095 () ListLongMap!1533)

(assert (=> b!105746 (= e!68841 (= lt!54095 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105747 () Bool)

(assert (=> b!105747 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> b!105747 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2310 (_values!2564 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!68837 () Bool)

(assert (=> b!105747 (= e!68837 (= (apply!98 lt!54095 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!105748 () Bool)

(declare-fun e!68839 () Bool)

(assert (=> b!105748 (= e!68839 e!68837)))

(assert (=> b!105748 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun res!52633 () Bool)

(assert (=> b!105748 (= res!52633 (contains!814 lt!54095 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!105748 (=> (not res!52633) (not e!68837))))

(declare-fun b!105749 () Bool)

(declare-fun e!68843 () Bool)

(assert (=> b!105749 (= e!68843 e!68839)))

(declare-fun c!18401 () Bool)

(assert (=> b!105749 (= c!18401 e!68840)))

(declare-fun res!52631 () Bool)

(assert (=> b!105749 (=> (not res!52631) (not e!68840))))

(assert (=> b!105749 (= res!52631 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105750 () Bool)

(assert (=> b!105750 (= e!68841 (isEmpty!376 lt!54095))))

(declare-fun d!28867 () Bool)

(assert (=> d!28867 e!68843))

(declare-fun res!52632 () Bool)

(assert (=> d!28867 (=> (not res!52632) (not e!68843))))

(assert (=> d!28867 (= res!52632 (not (contains!814 lt!54095 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28867 (= lt!54095 e!68842)))

(declare-fun c!18400 () Bool)

(assert (=> d!28867 (= c!18400 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!28867 (validMask!0 (mask!6727 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!28867 (= (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))) lt!54095)))

(declare-fun b!105743 () Bool)

(assert (=> b!105743 (= e!68842 (ListLongMap!1534 Nil!1593))))

(declare-fun b!105751 () Bool)

(assert (=> b!105751 (= e!68839 e!68841)))

(declare-fun c!18399 () Bool)

(assert (=> b!105751 (= c!18399 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105752 () Bool)

(declare-fun call!11158 () ListLongMap!1533)

(assert (=> b!105752 (= e!68838 call!11158)))

(declare-fun bm!11155 () Bool)

(assert (=> bm!11155 (= call!11158 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105753 () Bool)

(declare-fun res!52630 () Bool)

(assert (=> b!105753 (=> (not res!52630) (not e!68843))))

(assert (=> b!105753 (= res!52630 (not (contains!814 lt!54095 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105754 () Bool)

(declare-fun lt!54100 () Unit!3212)

(declare-fun lt!54096 () Unit!3212)

(assert (=> b!105754 (= lt!54100 lt!54096)))

(declare-fun lt!54097 () ListLongMap!1533)

(declare-fun lt!54094 () (_ BitVec 64))

(declare-fun lt!54099 () (_ BitVec 64))

(declare-fun lt!54098 () V!3217)

(assert (=> b!105754 (not (contains!814 (+!139 lt!54097 (tuple2!2361 lt!54099 lt!54098)) lt!54094))))

(assert (=> b!105754 (= lt!54096 (addStillNotContains!48 lt!54097 lt!54099 lt!54098 lt!54094))))

(assert (=> b!105754 (= lt!54094 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!105754 (= lt!54098 (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!105754 (= lt!54099 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!105754 (= lt!54097 call!11158)))

(assert (=> b!105754 (= e!68838 (+!139 call!11158 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28867 c!18400) b!105743))

(assert (= (and d!28867 (not c!18400)) b!105745))

(assert (= (and b!105745 c!18398) b!105754))

(assert (= (and b!105745 (not c!18398)) b!105752))

(assert (= (or b!105754 b!105752) bm!11155))

(assert (= (and d!28867 res!52632) b!105753))

(assert (= (and b!105753 res!52630) b!105749))

(assert (= (and b!105749 res!52631) b!105744))

(assert (= (and b!105749 c!18401) b!105748))

(assert (= (and b!105749 (not c!18401)) b!105751))

(assert (= (and b!105748 res!52633) b!105747))

(assert (= (and b!105751 c!18399) b!105746))

(assert (= (and b!105751 (not c!18399)) b!105750))

(declare-fun b_lambda!4733 () Bool)

(assert (=> (not b_lambda!4733) (not b!105747)))

(assert (=> b!105747 t!5668))

(declare-fun b_and!6529 () Bool)

(assert (= b_and!6525 (and (=> t!5668 result!3439) b_and!6529)))

(assert (=> b!105747 t!5670))

(declare-fun b_and!6531 () Bool)

(assert (= b_and!6527 (and (=> t!5670 result!3443) b_and!6531)))

(declare-fun b_lambda!4735 () Bool)

(assert (=> (not b_lambda!4735) (not b!105754)))

(assert (=> b!105754 t!5668))

(declare-fun b_and!6533 () Bool)

(assert (= b_and!6529 (and (=> t!5668 result!3439) b_and!6533)))

(assert (=> b!105754 t!5670))

(declare-fun b_and!6535 () Bool)

(assert (= b_and!6531 (and (=> t!5670 result!3443) b_and!6535)))

(declare-fun m!117865 () Bool)

(assert (=> d!28867 m!117865))

(assert (=> d!28867 m!117279))

(declare-fun m!117867 () Bool)

(assert (=> b!105744 m!117867))

(assert (=> b!105744 m!117867))

(declare-fun m!117869 () Bool)

(assert (=> b!105744 m!117869))

(declare-fun m!117871 () Bool)

(assert (=> b!105750 m!117871))

(declare-fun m!117873 () Bool)

(assert (=> b!105746 m!117873))

(declare-fun m!117875 () Bool)

(assert (=> b!105747 m!117875))

(assert (=> b!105747 m!117297))

(declare-fun m!117877 () Bool)

(assert (=> b!105747 m!117877))

(assert (=> b!105747 m!117867))

(declare-fun m!117879 () Bool)

(assert (=> b!105747 m!117879))

(assert (=> b!105747 m!117867))

(assert (=> b!105747 m!117297))

(assert (=> b!105747 m!117875))

(assert (=> bm!11155 m!117873))

(declare-fun m!117881 () Bool)

(assert (=> b!105753 m!117881))

(assert (=> b!105745 m!117867))

(assert (=> b!105745 m!117867))

(assert (=> b!105745 m!117869))

(assert (=> b!105748 m!117867))

(assert (=> b!105748 m!117867))

(declare-fun m!117883 () Bool)

(assert (=> b!105748 m!117883))

(assert (=> b!105754 m!117875))

(assert (=> b!105754 m!117297))

(assert (=> b!105754 m!117877))

(declare-fun m!117885 () Bool)

(assert (=> b!105754 m!117885))

(declare-fun m!117887 () Bool)

(assert (=> b!105754 m!117887))

(assert (=> b!105754 m!117867))

(declare-fun m!117889 () Bool)

(assert (=> b!105754 m!117889))

(assert (=> b!105754 m!117875))

(declare-fun m!117891 () Bool)

(assert (=> b!105754 m!117891))

(assert (=> b!105754 m!117885))

(assert (=> b!105754 m!117297))

(assert (=> bm!11131 d!28867))

(declare-fun b!105755 () Bool)

(declare-fun e!68844 () Option!163)

(assert (=> b!105755 (= e!68844 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53999)))))))

(declare-fun d!28869 () Bool)

(declare-fun c!18402 () Bool)

(assert (=> d!28869 (= c!18402 (and ((_ is Cons!1592) (toList!782 lt!53999)) (= (_1!1191 (h!2189 (toList!782 lt!53999))) (_1!1191 lt!53718))))))

(assert (=> d!28869 (= (getValueByKey!157 (toList!782 lt!53999) (_1!1191 lt!53718)) e!68844)))

(declare-fun b!105757 () Bool)

(declare-fun e!68845 () Option!163)

(assert (=> b!105757 (= e!68845 (getValueByKey!157 (t!5671 (toList!782 lt!53999)) (_1!1191 lt!53718)))))

(declare-fun b!105756 () Bool)

(assert (=> b!105756 (= e!68844 e!68845)))

(declare-fun c!18403 () Bool)

(assert (=> b!105756 (= c!18403 (and ((_ is Cons!1592) (toList!782 lt!53999)) (not (= (_1!1191 (h!2189 (toList!782 lt!53999))) (_1!1191 lt!53718)))))))

(declare-fun b!105758 () Bool)

(assert (=> b!105758 (= e!68845 None!161)))

(assert (= (and d!28869 c!18402) b!105755))

(assert (= (and d!28869 (not c!18402)) b!105756))

(assert (= (and b!105756 c!18403) b!105757))

(assert (= (and b!105756 (not c!18403)) b!105758))

(declare-fun m!117893 () Bool)

(assert (=> b!105757 m!117893))

(assert (=> b!105567 d!28869))

(declare-fun d!28871 () Bool)

(assert (=> d!28871 (= (apply!98 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53939) (apply!98 lt!53944 lt!53939))))

(declare-fun lt!54103 () Unit!3212)

(declare-fun choose!666 (ListLongMap!1533 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3212)

(assert (=> d!28871 (= lt!54103 (choose!666 lt!53944 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53939))))

(declare-fun e!68848 () Bool)

(assert (=> d!28871 e!68848))

(declare-fun res!52636 () Bool)

(assert (=> d!28871 (=> (not res!52636) (not e!68848))))

(assert (=> d!28871 (= res!52636 (contains!814 lt!53944 lt!53939))))

(assert (=> d!28871 (= (addApplyDifferent!74 lt!53944 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53939) lt!54103)))

(declare-fun b!105762 () Bool)

(assert (=> b!105762 (= e!68848 (not (= lt!53939 lt!53953)))))

(assert (= (and d!28871 res!52636) b!105762))

(assert (=> d!28871 m!117517))

(assert (=> d!28871 m!117517))

(assert (=> d!28871 m!117519))

(declare-fun m!117895 () Bool)

(assert (=> d!28871 m!117895))

(assert (=> d!28871 m!117507))

(declare-fun m!117897 () Bool)

(assert (=> d!28871 m!117897))

(assert (=> b!105509 d!28871))

(declare-fun d!28873 () Bool)

(declare-fun e!68849 () Bool)

(assert (=> d!28873 e!68849))

(declare-fun res!52637 () Bool)

(assert (=> d!28873 (=> (not res!52637) (not e!68849))))

(declare-fun lt!54105 () ListLongMap!1533)

(assert (=> d!28873 (= res!52637 (contains!814 lt!54105 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54104 () List!1596)

(assert (=> d!28873 (= lt!54105 (ListLongMap!1534 lt!54104))))

(declare-fun lt!54107 () Unit!3212)

(declare-fun lt!54106 () Unit!3212)

(assert (=> d!28873 (= lt!54107 lt!54106)))

(assert (=> d!28873 (= (getValueByKey!157 lt!54104 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28873 (= lt!54106 (lemmaContainsTupThenGetReturnValue!73 lt!54104 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28873 (= lt!54104 (insertStrictlySorted!76 (toList!782 lt!53941) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28873 (= (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54105)))

(declare-fun b!105763 () Bool)

(declare-fun res!52638 () Bool)

(assert (=> b!105763 (=> (not res!52638) (not e!68849))))

(assert (=> b!105763 (= res!52638 (= (getValueByKey!157 (toList!782 lt!54105) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105764 () Bool)

(assert (=> b!105764 (= e!68849 (contains!816 (toList!782 lt!54105) (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28873 res!52637) b!105763))

(assert (= (and b!105763 res!52638) b!105764))

(declare-fun m!117899 () Bool)

(assert (=> d!28873 m!117899))

(declare-fun m!117901 () Bool)

(assert (=> d!28873 m!117901))

(declare-fun m!117903 () Bool)

(assert (=> d!28873 m!117903))

(declare-fun m!117905 () Bool)

(assert (=> d!28873 m!117905))

(declare-fun m!117907 () Bool)

(assert (=> b!105763 m!117907))

(declare-fun m!117909 () Bool)

(assert (=> b!105764 m!117909))

(assert (=> b!105509 d!28873))

(declare-fun d!28875 () Bool)

(assert (=> d!28875 (= (apply!98 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53951) (apply!98 lt!53943 lt!53951))))

(declare-fun lt!54108 () Unit!3212)

(assert (=> d!28875 (= lt!54108 (choose!666 lt!53943 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53951))))

(declare-fun e!68850 () Bool)

(assert (=> d!28875 e!68850))

(declare-fun res!52639 () Bool)

(assert (=> d!28875 (=> (not res!52639) (not e!68850))))

(assert (=> d!28875 (= res!52639 (contains!814 lt!53943 lt!53951))))

(assert (=> d!28875 (= (addApplyDifferent!74 lt!53943 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53951) lt!54108)))

(declare-fun b!105765 () Bool)

(assert (=> b!105765 (= e!68850 (not (= lt!53951 lt!53937)))))

(assert (= (and d!28875 res!52639) b!105765))

(assert (=> d!28875 m!117511))

(assert (=> d!28875 m!117511))

(assert (=> d!28875 m!117529))

(declare-fun m!117911 () Bool)

(assert (=> d!28875 m!117911))

(assert (=> d!28875 m!117525))

(declare-fun m!117913 () Bool)

(assert (=> d!28875 m!117913))

(assert (=> b!105509 d!28875))

(declare-fun d!28877 () Bool)

(declare-fun e!68851 () Bool)

(assert (=> d!28877 e!68851))

(declare-fun res!52640 () Bool)

(assert (=> d!28877 (=> (not res!52640) (not e!68851))))

(declare-fun lt!54110 () ListLongMap!1533)

(assert (=> d!28877 (= res!52640 (contains!814 lt!54110 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54109 () List!1596)

(assert (=> d!28877 (= lt!54110 (ListLongMap!1534 lt!54109))))

(declare-fun lt!54112 () Unit!3212)

(declare-fun lt!54111 () Unit!3212)

(assert (=> d!28877 (= lt!54112 lt!54111)))

(assert (=> d!28877 (= (getValueByKey!157 lt!54109 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28877 (= lt!54111 (lemmaContainsTupThenGetReturnValue!73 lt!54109 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28877 (= lt!54109 (insertStrictlySorted!76 (toList!782 lt!53933) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28877 (= (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54110)))

(declare-fun b!105766 () Bool)

(declare-fun res!52641 () Bool)

(assert (=> b!105766 (=> (not res!52641) (not e!68851))))

(assert (=> b!105766 (= res!52641 (= (getValueByKey!157 (toList!782 lt!54110) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105767 () Bool)

(assert (=> b!105767 (= e!68851 (contains!816 (toList!782 lt!54110) (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28877 res!52640) b!105766))

(assert (= (and b!105766 res!52641) b!105767))

(declare-fun m!117915 () Bool)

(assert (=> d!28877 m!117915))

(declare-fun m!117917 () Bool)

(assert (=> d!28877 m!117917))

(declare-fun m!117919 () Bool)

(assert (=> d!28877 m!117919))

(declare-fun m!117921 () Bool)

(assert (=> d!28877 m!117921))

(declare-fun m!117923 () Bool)

(assert (=> b!105766 m!117923))

(declare-fun m!117925 () Bool)

(assert (=> b!105767 m!117925))

(assert (=> b!105509 d!28877))

(declare-fun d!28879 () Bool)

(declare-fun e!68852 () Bool)

(assert (=> d!28879 e!68852))

(declare-fun res!52642 () Bool)

(assert (=> d!28879 (=> (not res!52642) (not e!68852))))

(declare-fun lt!54114 () ListLongMap!1533)

(assert (=> d!28879 (= res!52642 (contains!814 lt!54114 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54113 () List!1596)

(assert (=> d!28879 (= lt!54114 (ListLongMap!1534 lt!54113))))

(declare-fun lt!54116 () Unit!3212)

(declare-fun lt!54115 () Unit!3212)

(assert (=> d!28879 (= lt!54116 lt!54115)))

(assert (=> d!28879 (= (getValueByKey!157 lt!54113 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28879 (= lt!54115 (lemmaContainsTupThenGetReturnValue!73 lt!54113 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28879 (= lt!54113 (insertStrictlySorted!76 (toList!782 lt!53944) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28879 (= (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54114)))

(declare-fun b!105768 () Bool)

(declare-fun res!52643 () Bool)

(assert (=> b!105768 (=> (not res!52643) (not e!68852))))

(assert (=> b!105768 (= res!52643 (= (getValueByKey!157 (toList!782 lt!54114) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105769 () Bool)

(assert (=> b!105769 (= e!68852 (contains!816 (toList!782 lt!54114) (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28879 res!52642) b!105768))

(assert (= (and b!105768 res!52643) b!105769))

(declare-fun m!117927 () Bool)

(assert (=> d!28879 m!117927))

(declare-fun m!117929 () Bool)

(assert (=> d!28879 m!117929))

(declare-fun m!117931 () Bool)

(assert (=> d!28879 m!117931))

(declare-fun m!117933 () Bool)

(assert (=> d!28879 m!117933))

(declare-fun m!117935 () Bool)

(assert (=> b!105768 m!117935))

(declare-fun m!117937 () Bool)

(assert (=> b!105769 m!117937))

(assert (=> b!105509 d!28879))

(declare-fun d!28881 () Bool)

(assert (=> d!28881 (= (apply!98 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53942) (apply!98 lt!53941 lt!53942))))

(declare-fun lt!54117 () Unit!3212)

(assert (=> d!28881 (= lt!54117 (choose!666 lt!53941 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53942))))

(declare-fun e!68853 () Bool)

(assert (=> d!28881 e!68853))

(declare-fun res!52644 () Bool)

(assert (=> d!28881 (=> (not res!52644) (not e!68853))))

(assert (=> d!28881 (= res!52644 (contains!814 lt!53941 lt!53942))))

(assert (=> d!28881 (= (addApplyDifferent!74 lt!53941 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53942) lt!54117)))

(declare-fun b!105770 () Bool)

(assert (=> b!105770 (= e!68853 (not (= lt!53942 lt!53932)))))

(assert (= (and d!28881 res!52644) b!105770))

(assert (=> d!28881 m!117513))

(assert (=> d!28881 m!117513))

(assert (=> d!28881 m!117515))

(declare-fun m!117939 () Bool)

(assert (=> d!28881 m!117939))

(assert (=> d!28881 m!117523))

(declare-fun m!117941 () Bool)

(assert (=> d!28881 m!117941))

(assert (=> b!105509 d!28881))

(declare-fun d!28883 () Bool)

(assert (=> d!28883 (contains!814 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53934)))

(declare-fun lt!54120 () Unit!3212)

(declare-fun choose!667 (ListLongMap!1533 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3212)

(assert (=> d!28883 (= lt!54120 (choose!667 lt!53933 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53934))))

(assert (=> d!28883 (contains!814 lt!53933 lt!53934)))

(assert (=> d!28883 (= (addStillContains!74 lt!53933 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53934) lt!54120)))

(declare-fun bs!4343 () Bool)

(assert (= bs!4343 d!28883))

(assert (=> bs!4343 m!117505))

(assert (=> bs!4343 m!117505))

(assert (=> bs!4343 m!117531))

(declare-fun m!117943 () Bool)

(assert (=> bs!4343 m!117943))

(declare-fun m!117945 () Bool)

(assert (=> bs!4343 m!117945))

(assert (=> b!105509 d!28883))

(declare-fun d!28885 () Bool)

(assert (=> d!28885 (= (apply!98 lt!53941 lt!53942) (get!1338 (getValueByKey!157 (toList!782 lt!53941) lt!53942)))))

(declare-fun bs!4344 () Bool)

(assert (= bs!4344 d!28885))

(declare-fun m!117947 () Bool)

(assert (=> bs!4344 m!117947))

(assert (=> bs!4344 m!117947))

(declare-fun m!117949 () Bool)

(assert (=> bs!4344 m!117949))

(assert (=> b!105509 d!28885))

(declare-fun d!28887 () Bool)

(assert (=> d!28887 (= (apply!98 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53942) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53942)))))

(declare-fun bs!4345 () Bool)

(assert (= bs!4345 d!28887))

(declare-fun m!117951 () Bool)

(assert (=> bs!4345 m!117951))

(assert (=> bs!4345 m!117951))

(declare-fun m!117953 () Bool)

(assert (=> bs!4345 m!117953))

(assert (=> b!105509 d!28887))

(assert (=> b!105509 d!28797))

(declare-fun d!28889 () Bool)

(assert (=> d!28889 (= (apply!98 lt!53943 lt!53951) (get!1338 (getValueByKey!157 (toList!782 lt!53943) lt!53951)))))

(declare-fun bs!4346 () Bool)

(assert (= bs!4346 d!28889))

(declare-fun m!117955 () Bool)

(assert (=> bs!4346 m!117955))

(assert (=> bs!4346 m!117955))

(declare-fun m!117957 () Bool)

(assert (=> bs!4346 m!117957))

(assert (=> b!105509 d!28889))

(declare-fun d!28891 () Bool)

(assert (=> d!28891 (= (apply!98 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53951) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53951)))))

(declare-fun bs!4347 () Bool)

(assert (= bs!4347 d!28891))

(declare-fun m!117959 () Bool)

(assert (=> bs!4347 m!117959))

(assert (=> bs!4347 m!117959))

(declare-fun m!117961 () Bool)

(assert (=> bs!4347 m!117961))

(assert (=> b!105509 d!28891))

(declare-fun d!28893 () Bool)

(declare-fun e!68854 () Bool)

(assert (=> d!28893 e!68854))

(declare-fun res!52645 () Bool)

(assert (=> d!28893 (=> (not res!52645) (not e!68854))))

(declare-fun lt!54122 () ListLongMap!1533)

(assert (=> d!28893 (= res!52645 (contains!814 lt!54122 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54121 () List!1596)

(assert (=> d!28893 (= lt!54122 (ListLongMap!1534 lt!54121))))

(declare-fun lt!54124 () Unit!3212)

(declare-fun lt!54123 () Unit!3212)

(assert (=> d!28893 (= lt!54124 lt!54123)))

(assert (=> d!28893 (= (getValueByKey!157 lt!54121 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28893 (= lt!54123 (lemmaContainsTupThenGetReturnValue!73 lt!54121 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28893 (= lt!54121 (insertStrictlySorted!76 (toList!782 lt!53943) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28893 (= (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54122)))

(declare-fun b!105772 () Bool)

(declare-fun res!52646 () Bool)

(assert (=> b!105772 (=> (not res!52646) (not e!68854))))

(assert (=> b!105772 (= res!52646 (= (getValueByKey!157 (toList!782 lt!54122) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105773 () Bool)

(assert (=> b!105773 (= e!68854 (contains!816 (toList!782 lt!54122) (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28893 res!52645) b!105772))

(assert (= (and b!105772 res!52646) b!105773))

(declare-fun m!117963 () Bool)

(assert (=> d!28893 m!117963))

(declare-fun m!117965 () Bool)

(assert (=> d!28893 m!117965))

(declare-fun m!117967 () Bool)

(assert (=> d!28893 m!117967))

(declare-fun m!117969 () Bool)

(assert (=> d!28893 m!117969))

(declare-fun m!117971 () Bool)

(assert (=> b!105772 m!117971))

(declare-fun m!117973 () Bool)

(assert (=> b!105773 m!117973))

(assert (=> b!105509 d!28893))

(declare-fun d!28895 () Bool)

(assert (=> d!28895 (= (apply!98 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53939) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53939)))))

(declare-fun bs!4348 () Bool)

(assert (= bs!4348 d!28895))

(declare-fun m!117975 () Bool)

(assert (=> bs!4348 m!117975))

(assert (=> bs!4348 m!117975))

(declare-fun m!117977 () Bool)

(assert (=> bs!4348 m!117977))

(assert (=> b!105509 d!28895))

(declare-fun d!28897 () Bool)

(assert (=> d!28897 (= (apply!98 lt!53944 lt!53939) (get!1338 (getValueByKey!157 (toList!782 lt!53944) lt!53939)))))

(declare-fun bs!4349 () Bool)

(assert (= bs!4349 d!28897))

(declare-fun m!117979 () Bool)

(assert (=> bs!4349 m!117979))

(assert (=> bs!4349 m!117979))

(declare-fun m!117981 () Bool)

(assert (=> bs!4349 m!117981))

(assert (=> b!105509 d!28897))

(declare-fun d!28899 () Bool)

(declare-fun e!68855 () Bool)

(assert (=> d!28899 e!68855))

(declare-fun res!52647 () Bool)

(assert (=> d!28899 (=> res!52647 e!68855)))

(declare-fun lt!54126 () Bool)

(assert (=> d!28899 (= res!52647 (not lt!54126))))

(declare-fun lt!54127 () Bool)

(assert (=> d!28899 (= lt!54126 lt!54127)))

(declare-fun lt!54128 () Unit!3212)

(declare-fun e!68856 () Unit!3212)

(assert (=> d!28899 (= lt!54128 e!68856)))

(declare-fun c!18404 () Bool)

(assert (=> d!28899 (= c!18404 lt!54127)))

(assert (=> d!28899 (= lt!54127 (containsKey!160 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934))))

(assert (=> d!28899 (= (contains!814 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53934) lt!54126)))

(declare-fun b!105774 () Bool)

(declare-fun lt!54125 () Unit!3212)

(assert (=> b!105774 (= e!68856 lt!54125)))

(assert (=> b!105774 (= lt!54125 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934))))

(assert (=> b!105774 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934))))

(declare-fun b!105775 () Bool)

(declare-fun Unit!3226 () Unit!3212)

(assert (=> b!105775 (= e!68856 Unit!3226)))

(declare-fun b!105776 () Bool)

(assert (=> b!105776 (= e!68855 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934)))))

(assert (= (and d!28899 c!18404) b!105774))

(assert (= (and d!28899 (not c!18404)) b!105775))

(assert (= (and d!28899 (not res!52647)) b!105776))

(declare-fun m!117983 () Bool)

(assert (=> d!28899 m!117983))

(declare-fun m!117985 () Bool)

(assert (=> b!105774 m!117985))

(declare-fun m!117987 () Bool)

(assert (=> b!105774 m!117987))

(assert (=> b!105774 m!117987))

(declare-fun m!117989 () Bool)

(assert (=> b!105774 m!117989))

(assert (=> b!105776 m!117987))

(assert (=> b!105776 m!117987))

(assert (=> b!105776 m!117989))

(assert (=> b!105509 d!28899))

(declare-fun d!28901 () Bool)

(assert (=> d!28901 (= (inRange!0 (ite c!18323 (ite c!18315 (index!3161 lt!53885) (ite c!18324 (index!3160 lt!53883) (index!3163 lt!53883))) (ite c!18321 (index!3161 lt!53879) (ite c!18325 (index!3160 lt!53887) (index!3163 lt!53887)))) (mask!6727 newMap!16)) (and (bvsge (ite c!18323 (ite c!18315 (index!3161 lt!53885) (ite c!18324 (index!3160 lt!53883) (index!3163 lt!53883))) (ite c!18321 (index!3161 lt!53879) (ite c!18325 (index!3160 lt!53887) (index!3163 lt!53887)))) #b00000000000000000000000000000000) (bvslt (ite c!18323 (ite c!18315 (index!3161 lt!53885) (ite c!18324 (index!3160 lt!53883) (index!3163 lt!53883))) (ite c!18321 (index!3161 lt!53879) (ite c!18325 (index!3160 lt!53887) (index!3163 lt!53887)))) (bvadd (mask!6727 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11105 d!28901))

(assert (=> b!105566 d!28855))

(declare-fun d!28903 () Bool)

(declare-fun e!68857 () Bool)

(assert (=> d!28903 e!68857))

(declare-fun res!52648 () Bool)

(assert (=> d!28903 (=> res!52648 e!68857)))

(declare-fun lt!54130 () Bool)

(assert (=> d!28903 (= res!52648 (not lt!54130))))

(declare-fun lt!54131 () Bool)

(assert (=> d!28903 (= lt!54130 lt!54131)))

(declare-fun lt!54132 () Unit!3212)

(declare-fun e!68858 () Unit!3212)

(assert (=> d!28903 (= lt!54132 e!68858)))

(declare-fun c!18405 () Bool)

(assert (=> d!28903 (= c!18405 lt!54131)))

(assert (=> d!28903 (= lt!54131 (containsKey!160 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991))))

(assert (=> d!28903 (= (contains!814 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)) lt!53991) lt!54130)))

(declare-fun b!105777 () Bool)

(declare-fun lt!54129 () Unit!3212)

(assert (=> b!105777 (= e!68858 lt!54129)))

(assert (=> b!105777 (= lt!54129 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991))))

(assert (=> b!105777 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991))))

(declare-fun b!105778 () Bool)

(declare-fun Unit!3227 () Unit!3212)

(assert (=> b!105778 (= e!68858 Unit!3227)))

(declare-fun b!105779 () Bool)

(assert (=> b!105779 (= e!68857 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991)))))

(assert (= (and d!28903 c!18405) b!105777))

(assert (= (and d!28903 (not c!18405)) b!105778))

(assert (= (and d!28903 (not res!52648)) b!105779))

(declare-fun m!117991 () Bool)

(assert (=> d!28903 m!117991))

(declare-fun m!117993 () Bool)

(assert (=> b!105777 m!117993))

(declare-fun m!117995 () Bool)

(assert (=> b!105777 m!117995))

(assert (=> b!105777 m!117995))

(declare-fun m!117997 () Bool)

(assert (=> b!105777 m!117997))

(assert (=> b!105779 m!117995))

(assert (=> b!105779 m!117995))

(assert (=> b!105779 m!117997))

(assert (=> b!105566 d!28903))

(declare-fun d!28905 () Bool)

(assert (=> d!28905 (not (contains!814 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)) lt!53991))))

(declare-fun lt!54135 () Unit!3212)

(declare-fun choose!668 (ListLongMap!1533 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3212)

(assert (=> d!28905 (= lt!54135 (choose!668 lt!53994 lt!53996 lt!53995 lt!53991))))

(declare-fun e!68861 () Bool)

(assert (=> d!28905 e!68861))

(declare-fun res!52651 () Bool)

(assert (=> d!28905 (=> (not res!52651) (not e!68861))))

(assert (=> d!28905 (= res!52651 (not (contains!814 lt!53994 lt!53991)))))

(assert (=> d!28905 (= (addStillNotContains!48 lt!53994 lt!53996 lt!53995 lt!53991) lt!54135)))

(declare-fun b!105783 () Bool)

(assert (=> b!105783 (= e!68861 (not (= lt!53996 lt!53991)))))

(assert (= (and d!28905 res!52651) b!105783))

(assert (=> d!28905 m!117607))

(assert (=> d!28905 m!117607))

(assert (=> d!28905 m!117609))

(declare-fun m!117999 () Bool)

(assert (=> d!28905 m!117999))

(declare-fun m!118001 () Bool)

(assert (=> d!28905 m!118001))

(assert (=> b!105566 d!28905))

(declare-fun d!28907 () Bool)

(declare-fun e!68862 () Bool)

(assert (=> d!28907 e!68862))

(declare-fun res!52652 () Bool)

(assert (=> d!28907 (=> (not res!52652) (not e!68862))))

(declare-fun lt!54137 () ListLongMap!1533)

(assert (=> d!28907 (= res!52652 (contains!814 lt!54137 (_1!1191 (tuple2!2361 lt!53996 lt!53995))))))

(declare-fun lt!54136 () List!1596)

(assert (=> d!28907 (= lt!54137 (ListLongMap!1534 lt!54136))))

(declare-fun lt!54139 () Unit!3212)

(declare-fun lt!54138 () Unit!3212)

(assert (=> d!28907 (= lt!54139 lt!54138)))

(assert (=> d!28907 (= (getValueByKey!157 lt!54136 (_1!1191 (tuple2!2361 lt!53996 lt!53995))) (Some!162 (_2!1191 (tuple2!2361 lt!53996 lt!53995))))))

(assert (=> d!28907 (= lt!54138 (lemmaContainsTupThenGetReturnValue!73 lt!54136 (_1!1191 (tuple2!2361 lt!53996 lt!53995)) (_2!1191 (tuple2!2361 lt!53996 lt!53995))))))

(assert (=> d!28907 (= lt!54136 (insertStrictlySorted!76 (toList!782 lt!53994) (_1!1191 (tuple2!2361 lt!53996 lt!53995)) (_2!1191 (tuple2!2361 lt!53996 lt!53995))))))

(assert (=> d!28907 (= (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)) lt!54137)))

(declare-fun b!105784 () Bool)

(declare-fun res!52653 () Bool)

(assert (=> b!105784 (=> (not res!52653) (not e!68862))))

(assert (=> b!105784 (= res!52653 (= (getValueByKey!157 (toList!782 lt!54137) (_1!1191 (tuple2!2361 lt!53996 lt!53995))) (Some!162 (_2!1191 (tuple2!2361 lt!53996 lt!53995)))))))

(declare-fun b!105785 () Bool)

(assert (=> b!105785 (= e!68862 (contains!816 (toList!782 lt!54137) (tuple2!2361 lt!53996 lt!53995)))))

(assert (= (and d!28907 res!52652) b!105784))

(assert (= (and b!105784 res!52653) b!105785))

(declare-fun m!118003 () Bool)

(assert (=> d!28907 m!118003))

(declare-fun m!118005 () Bool)

(assert (=> d!28907 m!118005))

(declare-fun m!118007 () Bool)

(assert (=> d!28907 m!118007))

(declare-fun m!118009 () Bool)

(assert (=> d!28907 m!118009))

(declare-fun m!118011 () Bool)

(assert (=> b!105784 m!118011))

(declare-fun m!118013 () Bool)

(assert (=> b!105785 m!118013))

(assert (=> b!105566 d!28907))

(declare-fun d!28909 () Bool)

(declare-fun e!68863 () Bool)

(assert (=> d!28909 e!68863))

(declare-fun res!52654 () Bool)

(assert (=> d!28909 (=> (not res!52654) (not e!68863))))

(declare-fun lt!54141 () ListLongMap!1533)

(assert (=> d!28909 (= res!52654 (contains!814 lt!54141 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!54140 () List!1596)

(assert (=> d!28909 (= lt!54141 (ListLongMap!1534 lt!54140))))

(declare-fun lt!54143 () Unit!3212)

(declare-fun lt!54142 () Unit!3212)

(assert (=> d!28909 (= lt!54143 lt!54142)))

(assert (=> d!28909 (= (getValueByKey!157 lt!54140 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28909 (= lt!54142 (lemmaContainsTupThenGetReturnValue!73 lt!54140 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28909 (= lt!54140 (insertStrictlySorted!76 (toList!782 call!11134) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28909 (= (+!139 call!11134 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!54141)))

(declare-fun b!105786 () Bool)

(declare-fun res!52655 () Bool)

(assert (=> b!105786 (=> (not res!52655) (not e!68863))))

(assert (=> b!105786 (= res!52655 (= (getValueByKey!157 (toList!782 lt!54141) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!105787 () Bool)

(assert (=> b!105787 (= e!68863 (contains!816 (toList!782 lt!54141) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28909 res!52654) b!105786))

(assert (= (and b!105786 res!52655) b!105787))

(declare-fun m!118015 () Bool)

(assert (=> d!28909 m!118015))

(declare-fun m!118017 () Bool)

(assert (=> d!28909 m!118017))

(declare-fun m!118019 () Bool)

(assert (=> d!28909 m!118019))

(declare-fun m!118021 () Bool)

(assert (=> d!28909 m!118021))

(declare-fun m!118023 () Bool)

(assert (=> b!105786 m!118023))

(declare-fun m!118025 () Bool)

(assert (=> b!105787 m!118025))

(assert (=> b!105566 d!28909))

(assert (=> b!105557 d!28819))

(declare-fun d!28911 () Bool)

(assert (=> d!28911 (isDefined!109 (getValueByKey!157 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun lt!54146 () Unit!3212)

(declare-fun choose!669 (List!1596 (_ BitVec 64)) Unit!3212)

(assert (=> d!28911 (= lt!54146 (choose!669 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!68866 () Bool)

(assert (=> d!28911 e!68866))

(declare-fun res!52658 () Bool)

(assert (=> d!28911 (=> (not res!52658) (not e!68866))))

(assert (=> d!28911 (= res!52658 (isStrictlySorted!296 (toList!782 lt!53721)))))

(assert (=> d!28911 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54146)))

(declare-fun b!105790 () Bool)

(assert (=> b!105790 (= e!68866 (containsKey!160 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!28911 res!52658) b!105790))

(assert (=> d!28911 m!117261))

(assert (=> d!28911 m!117421))

(assert (=> d!28911 m!117421))

(assert (=> d!28911 m!117423))

(assert (=> d!28911 m!117261))

(declare-fun m!118027 () Bool)

(assert (=> d!28911 m!118027))

(declare-fun m!118029 () Bool)

(assert (=> d!28911 m!118029))

(assert (=> b!105790 m!117261))

(assert (=> b!105790 m!117417))

(assert (=> b!105320 d!28911))

(declare-fun d!28913 () Bool)

(declare-fun isEmpty!377 (Option!163) Bool)

(assert (=> d!28913 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(declare-fun bs!4350 () Bool)

(assert (= bs!4350 d!28913))

(assert (=> bs!4350 m!117421))

(declare-fun m!118031 () Bool)

(assert (=> bs!4350 m!118031))

(assert (=> b!105320 d!28913))

(declare-fun b!105791 () Bool)

(declare-fun e!68867 () Option!163)

(assert (=> b!105791 (= e!68867 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53721)))))))

(declare-fun c!18406 () Bool)

(declare-fun d!28915 () Bool)

(assert (=> d!28915 (= c!18406 (and ((_ is Cons!1592) (toList!782 lt!53721)) (= (_1!1191 (h!2189 (toList!782 lt!53721))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!28915 (= (getValueByKey!157 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) e!68867)))

(declare-fun e!68868 () Option!163)

(declare-fun b!105793 () Bool)

(assert (=> b!105793 (= e!68868 (getValueByKey!157 (t!5671 (toList!782 lt!53721)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105792 () Bool)

(assert (=> b!105792 (= e!68867 e!68868)))

(declare-fun c!18407 () Bool)

(assert (=> b!105792 (= c!18407 (and ((_ is Cons!1592) (toList!782 lt!53721)) (not (= (_1!1191 (h!2189 (toList!782 lt!53721))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(declare-fun b!105794 () Bool)

(assert (=> b!105794 (= e!68868 None!161)))

(assert (= (and d!28915 c!18406) b!105791))

(assert (= (and d!28915 (not c!18406)) b!105792))

(assert (= (and b!105792 c!18407) b!105793))

(assert (= (and b!105792 (not c!18407)) b!105794))

(assert (=> b!105793 m!117261))

(declare-fun m!118033 () Bool)

(assert (=> b!105793 m!118033))

(assert (=> b!105320 d!28915))

(declare-fun b!105795 () Bool)

(declare-fun e!68869 () Option!163)

(assert (=> b!105795 (= e!68869 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53966)))))))

(declare-fun d!28917 () Bool)

(declare-fun c!18408 () Bool)

(assert (=> d!28917 (= c!18408 (and ((_ is Cons!1592) (toList!782 lt!53966)) (= (_1!1191 (h!2189 (toList!782 lt!53966))) (_1!1191 lt!53713))))))

(assert (=> d!28917 (= (getValueByKey!157 (toList!782 lt!53966) (_1!1191 lt!53713)) e!68869)))

(declare-fun b!105797 () Bool)

(declare-fun e!68870 () Option!163)

(assert (=> b!105797 (= e!68870 (getValueByKey!157 (t!5671 (toList!782 lt!53966)) (_1!1191 lt!53713)))))

(declare-fun b!105796 () Bool)

(assert (=> b!105796 (= e!68869 e!68870)))

(declare-fun c!18409 () Bool)

(assert (=> b!105796 (= c!18409 (and ((_ is Cons!1592) (toList!782 lt!53966)) (not (= (_1!1191 (h!2189 (toList!782 lt!53966))) (_1!1191 lt!53713)))))))

(declare-fun b!105798 () Bool)

(assert (=> b!105798 (= e!68870 None!161)))

(assert (= (and d!28917 c!18408) b!105795))

(assert (= (and d!28917 (not c!18408)) b!105796))

(assert (= (and b!105796 c!18409) b!105797))

(assert (= (and b!105796 (not c!18409)) b!105798))

(declare-fun m!118035 () Bool)

(assert (=> b!105797 m!118035))

(assert (=> b!105525 d!28917))

(declare-fun d!28919 () Bool)

(declare-fun e!68871 () Bool)

(assert (=> d!28919 e!68871))

(declare-fun res!52659 () Bool)

(assert (=> d!28919 (=> res!52659 e!68871)))

(declare-fun lt!54148 () Bool)

(assert (=> d!28919 (= res!52659 (not lt!54148))))

(declare-fun lt!54149 () Bool)

(assert (=> d!28919 (= lt!54148 lt!54149)))

(declare-fun lt!54150 () Unit!3212)

(declare-fun e!68872 () Unit!3212)

(assert (=> d!28919 (= lt!54150 e!68872)))

(declare-fun c!18410 () Bool)

(assert (=> d!28919 (= c!18410 lt!54149)))

(assert (=> d!28919 (= lt!54149 (containsKey!160 (toList!782 lt!53999) (_1!1191 lt!53718)))))

(assert (=> d!28919 (= (contains!814 lt!53999 (_1!1191 lt!53718)) lt!54148)))

(declare-fun b!105799 () Bool)

(declare-fun lt!54147 () Unit!3212)

(assert (=> b!105799 (= e!68872 lt!54147)))

(assert (=> b!105799 (= lt!54147 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53999) (_1!1191 lt!53718)))))

(assert (=> b!105799 (isDefined!109 (getValueByKey!157 (toList!782 lt!53999) (_1!1191 lt!53718)))))

(declare-fun b!105800 () Bool)

(declare-fun Unit!3228 () Unit!3212)

(assert (=> b!105800 (= e!68872 Unit!3228)))

(declare-fun b!105801 () Bool)

(assert (=> b!105801 (= e!68871 (isDefined!109 (getValueByKey!157 (toList!782 lt!53999) (_1!1191 lt!53718))))))

(assert (= (and d!28919 c!18410) b!105799))

(assert (= (and d!28919 (not c!18410)) b!105800))

(assert (= (and d!28919 (not res!52659)) b!105801))

(declare-fun m!118037 () Bool)

(assert (=> d!28919 m!118037))

(declare-fun m!118039 () Bool)

(assert (=> b!105799 m!118039))

(assert (=> b!105799 m!117623))

(assert (=> b!105799 m!117623))

(declare-fun m!118041 () Bool)

(assert (=> b!105799 m!118041))

(assert (=> b!105801 m!117623))

(assert (=> b!105801 m!117623))

(assert (=> b!105801 m!118041))

(assert (=> d!28799 d!28919))

(declare-fun b!105802 () Bool)

(declare-fun e!68873 () Option!163)

(assert (=> b!105802 (= e!68873 (Some!162 (_2!1191 (h!2189 lt!53998))))))

(declare-fun d!28921 () Bool)

(declare-fun c!18411 () Bool)

(assert (=> d!28921 (= c!18411 (and ((_ is Cons!1592) lt!53998) (= (_1!1191 (h!2189 lt!53998)) (_1!1191 lt!53718))))))

(assert (=> d!28921 (= (getValueByKey!157 lt!53998 (_1!1191 lt!53718)) e!68873)))

(declare-fun b!105804 () Bool)

(declare-fun e!68874 () Option!163)

(assert (=> b!105804 (= e!68874 (getValueByKey!157 (t!5671 lt!53998) (_1!1191 lt!53718)))))

(declare-fun b!105803 () Bool)

(assert (=> b!105803 (= e!68873 e!68874)))

(declare-fun c!18412 () Bool)

(assert (=> b!105803 (= c!18412 (and ((_ is Cons!1592) lt!53998) (not (= (_1!1191 (h!2189 lt!53998)) (_1!1191 lt!53718)))))))

(declare-fun b!105805 () Bool)

(assert (=> b!105805 (= e!68874 None!161)))

(assert (= (and d!28921 c!18411) b!105802))

(assert (= (and d!28921 (not c!18411)) b!105803))

(assert (= (and b!105803 c!18412) b!105804))

(assert (= (and b!105803 (not c!18412)) b!105805))

(declare-fun m!118043 () Bool)

(assert (=> b!105804 m!118043))

(assert (=> d!28799 d!28921))

(declare-fun d!28923 () Bool)

(assert (=> d!28923 (= (getValueByKey!157 lt!53998 (_1!1191 lt!53718)) (Some!162 (_2!1191 lt!53718)))))

(declare-fun lt!54151 () Unit!3212)

(assert (=> d!28923 (= lt!54151 (choose!662 lt!53998 (_1!1191 lt!53718) (_2!1191 lt!53718)))))

(declare-fun e!68875 () Bool)

(assert (=> d!28923 e!68875))

(declare-fun res!52660 () Bool)

(assert (=> d!28923 (=> (not res!52660) (not e!68875))))

(assert (=> d!28923 (= res!52660 (isStrictlySorted!296 lt!53998))))

(assert (=> d!28923 (= (lemmaContainsTupThenGetReturnValue!73 lt!53998 (_1!1191 lt!53718) (_2!1191 lt!53718)) lt!54151)))

(declare-fun b!105806 () Bool)

(declare-fun res!52661 () Bool)

(assert (=> b!105806 (=> (not res!52661) (not e!68875))))

(assert (=> b!105806 (= res!52661 (containsKey!160 lt!53998 (_1!1191 lt!53718)))))

(declare-fun b!105807 () Bool)

(assert (=> b!105807 (= e!68875 (contains!816 lt!53998 (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(assert (= (and d!28923 res!52660) b!105806))

(assert (= (and b!105806 res!52661) b!105807))

(assert (=> d!28923 m!117617))

(declare-fun m!118045 () Bool)

(assert (=> d!28923 m!118045))

(declare-fun m!118047 () Bool)

(assert (=> d!28923 m!118047))

(declare-fun m!118049 () Bool)

(assert (=> b!105806 m!118049))

(declare-fun m!118051 () Bool)

(assert (=> b!105807 m!118051))

(assert (=> d!28799 d!28923))

(declare-fun bm!11156 () Bool)

(declare-fun call!11161 () List!1596)

(declare-fun call!11160 () List!1596)

(assert (=> bm!11156 (= call!11161 call!11160)))

(declare-fun c!18413 () Bool)

(declare-fun c!18415 () Bool)

(declare-fun b!105808 () Bool)

(declare-fun e!68876 () List!1596)

(assert (=> b!105808 (= e!68876 (ite c!18415 (t!5671 (toList!782 lt!53714)) (ite c!18413 (Cons!1592 (h!2189 (toList!782 lt!53714)) (t!5671 (toList!782 lt!53714))) Nil!1593)))))

(declare-fun b!105809 () Bool)

(declare-fun e!68879 () List!1596)

(assert (=> b!105809 (= e!68879 call!11160)))

(declare-fun b!105811 () Bool)

(assert (=> b!105811 (= c!18413 (and ((_ is Cons!1592) (toList!782 lt!53714)) (bvsgt (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 lt!53718))))))

(declare-fun e!68878 () List!1596)

(assert (=> b!105811 (= e!68879 e!68878)))

(declare-fun c!18414 () Bool)

(declare-fun call!11159 () List!1596)

(declare-fun bm!11157 () Bool)

(assert (=> bm!11157 (= call!11159 ($colon$colon!80 e!68876 (ite c!18414 (h!2189 (toList!782 lt!53714)) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718)))))))

(declare-fun c!18416 () Bool)

(assert (=> bm!11157 (= c!18416 c!18414)))

(declare-fun b!105812 () Bool)

(assert (=> b!105812 (= e!68878 call!11161)))

(declare-fun b!105813 () Bool)

(assert (=> b!105813 (= e!68878 call!11161)))

(declare-fun b!105814 () Bool)

(declare-fun res!52663 () Bool)

(declare-fun e!68877 () Bool)

(assert (=> b!105814 (=> (not res!52663) (not e!68877))))

(declare-fun lt!54152 () List!1596)

(assert (=> b!105814 (= res!52663 (containsKey!160 lt!54152 (_1!1191 lt!53718)))))

(declare-fun b!105815 () Bool)

(assert (=> b!105815 (= e!68877 (contains!816 lt!54152 (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun b!105816 () Bool)

(declare-fun e!68880 () List!1596)

(assert (=> b!105816 (= e!68880 e!68879)))

(assert (=> b!105816 (= c!18415 (and ((_ is Cons!1592) (toList!782 lt!53714)) (= (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 lt!53718))))))

(declare-fun d!28925 () Bool)

(assert (=> d!28925 e!68877))

(declare-fun res!52662 () Bool)

(assert (=> d!28925 (=> (not res!52662) (not e!68877))))

(assert (=> d!28925 (= res!52662 (isStrictlySorted!296 lt!54152))))

(assert (=> d!28925 (= lt!54152 e!68880)))

(assert (=> d!28925 (= c!18414 (and ((_ is Cons!1592) (toList!782 lt!53714)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 lt!53718))))))

(assert (=> d!28925 (isStrictlySorted!296 (toList!782 lt!53714))))

(assert (=> d!28925 (= (insertStrictlySorted!76 (toList!782 lt!53714) (_1!1191 lt!53718) (_2!1191 lt!53718)) lt!54152)))

(declare-fun b!105810 () Bool)

(assert (=> b!105810 (= e!68876 (insertStrictlySorted!76 (t!5671 (toList!782 lt!53714)) (_1!1191 lt!53718) (_2!1191 lt!53718)))))

(declare-fun bm!11158 () Bool)

(assert (=> bm!11158 (= call!11160 call!11159)))

(declare-fun b!105817 () Bool)

(assert (=> b!105817 (= e!68880 call!11159)))

(assert (= (and d!28925 c!18414) b!105817))

(assert (= (and d!28925 (not c!18414)) b!105816))

(assert (= (and b!105816 c!18415) b!105809))

(assert (= (and b!105816 (not c!18415)) b!105811))

(assert (= (and b!105811 c!18413) b!105813))

(assert (= (and b!105811 (not c!18413)) b!105812))

(assert (= (or b!105813 b!105812) bm!11156))

(assert (= (or b!105809 bm!11156) bm!11158))

(assert (= (or b!105817 bm!11158) bm!11157))

(assert (= (and bm!11157 c!18416) b!105810))

(assert (= (and bm!11157 (not c!18416)) b!105808))

(assert (= (and d!28925 res!52662) b!105814))

(assert (= (and b!105814 res!52663) b!105815))

(declare-fun m!118053 () Bool)

(assert (=> bm!11157 m!118053))

(declare-fun m!118055 () Bool)

(assert (=> d!28925 m!118055))

(declare-fun m!118057 () Bool)

(assert (=> d!28925 m!118057))

(declare-fun m!118059 () Bool)

(assert (=> b!105815 m!118059))

(declare-fun m!118061 () Bool)

(assert (=> b!105814 m!118061))

(declare-fun m!118063 () Bool)

(assert (=> b!105810 m!118063))

(assert (=> d!28799 d!28925))

(declare-fun d!28927 () Bool)

(declare-fun e!68881 () Bool)

(assert (=> d!28927 e!68881))

(declare-fun res!52664 () Bool)

(assert (=> d!28927 (=> res!52664 e!68881)))

(declare-fun lt!54154 () Bool)

(assert (=> d!28927 (= res!52664 (not lt!54154))))

(declare-fun lt!54155 () Bool)

(assert (=> d!28927 (= lt!54154 lt!54155)))

(declare-fun lt!54156 () Unit!3212)

(declare-fun e!68882 () Unit!3212)

(assert (=> d!28927 (= lt!54156 e!68882)))

(declare-fun c!18417 () Bool)

(assert (=> d!28927 (= c!18417 lt!54155)))

(assert (=> d!28927 (= lt!54155 (containsKey!160 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28927 (= (contains!814 lt!53948 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54154)))

(declare-fun b!105818 () Bool)

(declare-fun lt!54153 () Unit!3212)

(assert (=> b!105818 (= e!68882 lt!54153)))

(assert (=> b!105818 (= lt!54153 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105818 (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105819 () Bool)

(declare-fun Unit!3229 () Unit!3212)

(assert (=> b!105819 (= e!68882 Unit!3229)))

(declare-fun b!105820 () Bool)

(assert (=> b!105820 (= e!68881 (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28927 c!18417) b!105818))

(assert (= (and d!28927 (not c!18417)) b!105819))

(assert (= (and d!28927 (not res!52664)) b!105820))

(declare-fun m!118065 () Bool)

(assert (=> d!28927 m!118065))

(declare-fun m!118067 () Bool)

(assert (=> b!105818 m!118067))

(declare-fun m!118069 () Bool)

(assert (=> b!105818 m!118069))

(assert (=> b!105818 m!118069))

(declare-fun m!118071 () Bool)

(assert (=> b!105818 m!118071))

(assert (=> b!105820 m!118069))

(assert (=> b!105820 m!118069))

(assert (=> b!105820 m!118071))

(assert (=> bm!11124 d!28927))

(declare-fun d!28929 () Bool)

(declare-fun e!68885 () Bool)

(assert (=> d!28929 e!68885))

(declare-fun c!18420 () Bool)

(assert (=> d!28929 (= c!18420 (and (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!28929 true))

(declare-fun _$29!141 () Unit!3212)

(assert (=> d!28929 (= (choose!660 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))) _$29!141)))

(declare-fun b!105825 () Bool)

(assert (=> b!105825 (= e!68885 (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!105826 () Bool)

(assert (=> b!105826 (= e!68885 (ite (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!28929 c!18420) b!105825))

(assert (= (and d!28929 (not c!18420)) b!105826))

(assert (=> b!105825 m!117261))

(assert (=> b!105825 m!117265))

(assert (=> d!28813 d!28929))

(assert (=> d!28813 d!28801))

(declare-fun d!28931 () Bool)

(assert (=> d!28931 (= (apply!98 lt!53992 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1338 (getValueByKey!157 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4351 () Bool)

(assert (= bs!4351 d!28931))

(assert (=> bs!4351 m!117491))

(declare-fun m!118073 () Bool)

(assert (=> bs!4351 m!118073))

(assert (=> bs!4351 m!118073))

(declare-fun m!118075 () Bool)

(assert (=> bs!4351 m!118075))

(assert (=> b!105559 d!28931))

(assert (=> b!105559 d!28855))

(declare-fun b!105827 () Bool)

(declare-fun e!68889 () Bool)

(declare-fun lt!54173 () ListLongMap!1533)

(assert (=> b!105827 (= e!68889 (= (apply!98 lt!54173 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!105828 () Bool)

(declare-fun e!68898 () Bool)

(assert (=> b!105828 (= e!68898 e!68889)))

(declare-fun res!52665 () Bool)

(declare-fun call!11165 () Bool)

(assert (=> b!105828 (= res!52665 call!11165)))

(assert (=> b!105828 (=> (not res!52665) (not e!68889))))

(declare-fun b!105829 () Bool)

(declare-fun e!68892 () ListLongMap!1533)

(declare-fun call!11167 () ListLongMap!1533)

(assert (=> b!105829 (= e!68892 call!11167)))

(declare-fun b!105830 () Bool)

(declare-fun res!52669 () Bool)

(declare-fun e!68894 () Bool)

(assert (=> b!105830 (=> (not res!52669) (not e!68894))))

(declare-fun e!68888 () Bool)

(assert (=> b!105830 (= res!52669 e!68888)))

(declare-fun res!52672 () Bool)

(assert (=> b!105830 (=> res!52672 e!68888)))

(declare-fun e!68897 () Bool)

(assert (=> b!105830 (= res!52672 (not e!68897))))

(declare-fun res!52666 () Bool)

(assert (=> b!105830 (=> (not res!52666) (not e!68897))))

(assert (=> b!105830 (= res!52666 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!105831 () Bool)

(declare-fun e!68893 () Bool)

(declare-fun e!68890 () Bool)

(assert (=> b!105831 (= e!68893 e!68890)))

(declare-fun res!52673 () Bool)

(declare-fun call!11168 () Bool)

(assert (=> b!105831 (= res!52673 call!11168)))

(assert (=> b!105831 (=> (not res!52673) (not e!68890))))

(declare-fun b!105833 () Bool)

(declare-fun res!52670 () Bool)

(assert (=> b!105833 (=> (not res!52670) (not e!68894))))

(assert (=> b!105833 (= res!52670 e!68893)))

(declare-fun c!18422 () Bool)

(assert (=> b!105833 (= c!18422 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105834 () Bool)

(declare-fun e!68895 () Bool)

(assert (=> b!105834 (= e!68895 (= (apply!98 lt!54173 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105834 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_values!2564 newMap!16))))))

(assert (=> b!105834 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!105835 () Bool)

(declare-fun call!11163 () ListLongMap!1533)

(assert (=> b!105835 (= e!68892 call!11163)))

(declare-fun b!105836 () Bool)

(declare-fun e!68886 () Unit!3212)

(declare-fun Unit!3230 () Unit!3212)

(assert (=> b!105836 (= e!68886 Unit!3230)))

(declare-fun b!105837 () Bool)

(assert (=> b!105837 (= e!68898 (not call!11165))))

(declare-fun b!105838 () Bool)

(assert (=> b!105838 (= e!68893 (not call!11168))))

(declare-fun b!105839 () Bool)

(declare-fun e!68896 () ListLongMap!1533)

(declare-fun e!68887 () ListLongMap!1533)

(assert (=> b!105839 (= e!68896 e!68887)))

(declare-fun c!18421 () Bool)

(assert (=> b!105839 (= c!18421 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11159 () Bool)

(declare-fun call!11166 () ListLongMap!1533)

(declare-fun call!11164 () ListLongMap!1533)

(assert (=> bm!11159 (= call!11166 call!11164)))

(declare-fun bm!11160 () Bool)

(assert (=> bm!11160 (= call!11168 (contains!814 lt!54173 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105840 () Bool)

(assert (=> b!105840 (= e!68894 e!68898)))

(declare-fun c!18426 () Bool)

(assert (=> b!105840 (= c!18426 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!28933 () Bool)

(assert (=> d!28933 e!68894))

(declare-fun res!52667 () Bool)

(assert (=> d!28933 (=> (not res!52667) (not e!68894))))

(assert (=> d!28933 (= res!52667 (or (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))))

(declare-fun lt!54163 () ListLongMap!1533)

(assert (=> d!28933 (= lt!54173 lt!54163)))

(declare-fun lt!54165 () Unit!3212)

(assert (=> d!28933 (= lt!54165 e!68886)))

(declare-fun c!18424 () Bool)

(declare-fun e!68891 () Bool)

(assert (=> d!28933 (= c!18424 e!68891)))

(declare-fun res!52671 () Bool)

(assert (=> d!28933 (=> (not res!52671) (not e!68891))))

(assert (=> d!28933 (= res!52671 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!28933 (= lt!54163 e!68896)))

(declare-fun c!18425 () Bool)

(assert (=> d!28933 (= c!18425 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28933 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!28933 (= (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54173)))

(declare-fun b!105832 () Bool)

(declare-fun call!11162 () ListLongMap!1533)

(assert (=> b!105832 (= e!68896 (+!139 call!11162 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun bm!11161 () Bool)

(assert (=> bm!11161 (= call!11165 (contains!814 lt!54173 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105841 () Bool)

(assert (=> b!105841 (= e!68890 (= (apply!98 lt!54173 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!105842 () Bool)

(assert (=> b!105842 (= e!68887 call!11167)))

(declare-fun b!105843 () Bool)

(assert (=> b!105843 (= e!68897 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11162 () Bool)

(assert (=> bm!11162 (= call!11163 call!11166)))

(declare-fun bm!11163 () Bool)

(assert (=> bm!11163 (= call!11167 call!11162)))

(declare-fun b!105844 () Bool)

(declare-fun c!18423 () Bool)

(assert (=> b!105844 (= c!18423 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!105844 (= e!68887 e!68892)))

(declare-fun bm!11164 () Bool)

(assert (=> bm!11164 (= call!11162 (+!139 (ite c!18425 call!11164 (ite c!18421 call!11166 call!11163)) (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun b!105845 () Bool)

(declare-fun lt!54171 () Unit!3212)

(assert (=> b!105845 (= e!68886 lt!54171)))

(declare-fun lt!54158 () ListLongMap!1533)

(assert (=> b!105845 (= lt!54158 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54172 () (_ BitVec 64))

(assert (=> b!105845 (= lt!54172 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54159 () (_ BitVec 64))

(assert (=> b!105845 (= lt!54159 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54177 () Unit!3212)

(assert (=> b!105845 (= lt!54177 (addStillContains!74 lt!54158 lt!54172 (zeroValue!2456 newMap!16) lt!54159))))

(assert (=> b!105845 (contains!814 (+!139 lt!54158 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16))) lt!54159)))

(declare-fun lt!54170 () Unit!3212)

(assert (=> b!105845 (= lt!54170 lt!54177)))

(declare-fun lt!54166 () ListLongMap!1533)

(assert (=> b!105845 (= lt!54166 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54157 () (_ BitVec 64))

(assert (=> b!105845 (= lt!54157 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54167 () (_ BitVec 64))

(assert (=> b!105845 (= lt!54167 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54174 () Unit!3212)

(assert (=> b!105845 (= lt!54174 (addApplyDifferent!74 lt!54166 lt!54157 (minValue!2456 newMap!16) lt!54167))))

(assert (=> b!105845 (= (apply!98 (+!139 lt!54166 (tuple2!2361 lt!54157 (minValue!2456 newMap!16))) lt!54167) (apply!98 lt!54166 lt!54167))))

(declare-fun lt!54161 () Unit!3212)

(assert (=> b!105845 (= lt!54161 lt!54174)))

(declare-fun lt!54169 () ListLongMap!1533)

(assert (=> b!105845 (= lt!54169 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54178 () (_ BitVec 64))

(assert (=> b!105845 (= lt!54178 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54164 () (_ BitVec 64))

(assert (=> b!105845 (= lt!54164 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54160 () Unit!3212)

(assert (=> b!105845 (= lt!54160 (addApplyDifferent!74 lt!54169 lt!54178 (zeroValue!2456 newMap!16) lt!54164))))

(assert (=> b!105845 (= (apply!98 (+!139 lt!54169 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16))) lt!54164) (apply!98 lt!54169 lt!54164))))

(declare-fun lt!54175 () Unit!3212)

(assert (=> b!105845 (= lt!54175 lt!54160)))

(declare-fun lt!54168 () ListLongMap!1533)

(assert (=> b!105845 (= lt!54168 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54162 () (_ BitVec 64))

(assert (=> b!105845 (= lt!54162 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54176 () (_ BitVec 64))

(assert (=> b!105845 (= lt!54176 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105845 (= lt!54171 (addApplyDifferent!74 lt!54168 lt!54162 (minValue!2456 newMap!16) lt!54176))))

(assert (=> b!105845 (= (apply!98 (+!139 lt!54168 (tuple2!2361 lt!54162 (minValue!2456 newMap!16))) lt!54176) (apply!98 lt!54168 lt!54176))))

(declare-fun b!105846 () Bool)

(assert (=> b!105846 (= e!68891 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11165 () Bool)

(assert (=> bm!11165 (= call!11164 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105847 () Bool)

(assert (=> b!105847 (= e!68888 e!68895)))

(declare-fun res!52668 () Bool)

(assert (=> b!105847 (=> (not res!52668) (not e!68895))))

(assert (=> b!105847 (= res!52668 (contains!814 lt!54173 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105847 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!28933 c!18425) b!105832))

(assert (= (and d!28933 (not c!18425)) b!105839))

(assert (= (and b!105839 c!18421) b!105842))

(assert (= (and b!105839 (not c!18421)) b!105844))

(assert (= (and b!105844 c!18423) b!105829))

(assert (= (and b!105844 (not c!18423)) b!105835))

(assert (= (or b!105829 b!105835) bm!11162))

(assert (= (or b!105842 bm!11162) bm!11159))

(assert (= (or b!105842 b!105829) bm!11163))

(assert (= (or b!105832 bm!11159) bm!11165))

(assert (= (or b!105832 bm!11163) bm!11164))

(assert (= (and d!28933 res!52671) b!105846))

(assert (= (and d!28933 c!18424) b!105845))

(assert (= (and d!28933 (not c!18424)) b!105836))

(assert (= (and d!28933 res!52667) b!105830))

(assert (= (and b!105830 res!52666) b!105843))

(assert (= (and b!105830 (not res!52672)) b!105847))

(assert (= (and b!105847 res!52668) b!105834))

(assert (= (and b!105830 res!52669) b!105833))

(assert (= (and b!105833 c!18422) b!105831))

(assert (= (and b!105833 (not c!18422)) b!105838))

(assert (= (and b!105831 res!52673) b!105841))

(assert (= (or b!105831 b!105838) bm!11160))

(assert (= (and b!105833 res!52670) b!105840))

(assert (= (and b!105840 c!18426) b!105828))

(assert (= (and b!105840 (not c!18426)) b!105837))

(assert (= (and b!105828 res!52665) b!105827))

(assert (= (or b!105828 b!105837) bm!11161))

(declare-fun b_lambda!4737 () Bool)

(assert (=> (not b_lambda!4737) (not b!105834)))

(assert (=> b!105834 t!5683))

(declare-fun b_and!6537 () Bool)

(assert (= b_and!6533 (and (=> t!5683 result!3459) b_and!6537)))

(assert (=> b!105834 t!5685))

(declare-fun b_and!6539 () Bool)

(assert (= b_and!6535 (and (=> t!5685 result!3461) b_and!6539)))

(declare-fun m!118077 () Bool)

(assert (=> b!105834 m!118077))

(assert (=> b!105834 m!117653))

(declare-fun m!118079 () Bool)

(assert (=> b!105834 m!118079))

(assert (=> b!105834 m!118077))

(assert (=> b!105834 m!117653))

(assert (=> b!105834 m!117657))

(declare-fun m!118081 () Bool)

(assert (=> b!105834 m!118081))

(assert (=> b!105834 m!117657))

(assert (=> d!28933 m!117661))

(assert (=> b!105843 m!117657))

(assert (=> b!105843 m!117657))

(assert (=> b!105843 m!117663))

(declare-fun m!118083 () Bool)

(assert (=> bm!11164 m!118083))

(declare-fun m!118085 () Bool)

(assert (=> bm!11165 m!118085))

(assert (=> b!105846 m!117657))

(assert (=> b!105846 m!117657))

(assert (=> b!105846 m!117663))

(declare-fun m!118087 () Bool)

(assert (=> b!105841 m!118087))

(declare-fun m!118089 () Bool)

(assert (=> bm!11160 m!118089))

(declare-fun m!118091 () Bool)

(assert (=> b!105845 m!118091))

(declare-fun m!118093 () Bool)

(assert (=> b!105845 m!118093))

(declare-fun m!118095 () Bool)

(assert (=> b!105845 m!118095))

(declare-fun m!118097 () Bool)

(assert (=> b!105845 m!118097))

(assert (=> b!105845 m!118085))

(declare-fun m!118099 () Bool)

(assert (=> b!105845 m!118099))

(declare-fun m!118101 () Bool)

(assert (=> b!105845 m!118101))

(declare-fun m!118103 () Bool)

(assert (=> b!105845 m!118103))

(declare-fun m!118105 () Bool)

(assert (=> b!105845 m!118105))

(assert (=> b!105845 m!118101))

(assert (=> b!105845 m!118105))

(declare-fun m!118107 () Bool)

(assert (=> b!105845 m!118107))

(declare-fun m!118109 () Bool)

(assert (=> b!105845 m!118109))

(declare-fun m!118111 () Bool)

(assert (=> b!105845 m!118111))

(assert (=> b!105845 m!117657))

(declare-fun m!118113 () Bool)

(assert (=> b!105845 m!118113))

(declare-fun m!118115 () Bool)

(assert (=> b!105845 m!118115))

(assert (=> b!105845 m!118099))

(declare-fun m!118117 () Bool)

(assert (=> b!105845 m!118117))

(assert (=> b!105845 m!118093))

(declare-fun m!118119 () Bool)

(assert (=> b!105845 m!118119))

(assert (=> b!105847 m!117657))

(assert (=> b!105847 m!117657))

(declare-fun m!118121 () Bool)

(assert (=> b!105847 m!118121))

(declare-fun m!118123 () Bool)

(assert (=> b!105832 m!118123))

(declare-fun m!118125 () Bool)

(assert (=> b!105827 m!118125))

(declare-fun m!118127 () Bool)

(assert (=> bm!11161 m!118127))

(assert (=> bm!11093 d!28933))

(declare-fun b!105848 () Bool)

(declare-fun e!68899 () Option!163)

(assert (=> b!105848 (= e!68899 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53970)))))))

(declare-fun d!28935 () Bool)

(declare-fun c!18427 () Bool)

(assert (=> d!28935 (= c!18427 (and ((_ is Cons!1592) (toList!782 lt!53970)) (= (_1!1191 (h!2189 (toList!782 lt!53970))) (_1!1191 lt!53718))))))

(assert (=> d!28935 (= (getValueByKey!157 (toList!782 lt!53970) (_1!1191 lt!53718)) e!68899)))

(declare-fun b!105850 () Bool)

(declare-fun e!68900 () Option!163)

(assert (=> b!105850 (= e!68900 (getValueByKey!157 (t!5671 (toList!782 lt!53970)) (_1!1191 lt!53718)))))

(declare-fun b!105849 () Bool)

(assert (=> b!105849 (= e!68899 e!68900)))

(declare-fun c!18428 () Bool)

(assert (=> b!105849 (= c!18428 (and ((_ is Cons!1592) (toList!782 lt!53970)) (not (= (_1!1191 (h!2189 (toList!782 lt!53970))) (_1!1191 lt!53718)))))))

(declare-fun b!105851 () Bool)

(assert (=> b!105851 (= e!68900 None!161)))

(assert (= (and d!28935 c!18427) b!105848))

(assert (= (and d!28935 (not c!18427)) b!105849))

(assert (= (and b!105849 c!18428) b!105850))

(assert (= (and b!105849 (not c!18428)) b!105851))

(declare-fun m!118129 () Bool)

(assert (=> b!105850 m!118129))

(assert (=> b!105527 d!28935))

(assert (=> d!28781 d!28801))

(assert (=> b!105322 d!28913))

(assert (=> b!105322 d!28915))

(declare-fun b!105852 () Bool)

(declare-fun e!68901 () Option!163)

(assert (=> b!105852 (= e!68901 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53974)))))))

(declare-fun d!28937 () Bool)

(declare-fun c!18429 () Bool)

(assert (=> d!28937 (= c!18429 (and ((_ is Cons!1592) (toList!782 lt!53974)) (= (_1!1191 (h!2189 (toList!782 lt!53974))) (_1!1191 lt!53713))))))

(assert (=> d!28937 (= (getValueByKey!157 (toList!782 lt!53974) (_1!1191 lt!53713)) e!68901)))

(declare-fun b!105854 () Bool)

(declare-fun e!68902 () Option!163)

(assert (=> b!105854 (= e!68902 (getValueByKey!157 (t!5671 (toList!782 lt!53974)) (_1!1191 lt!53713)))))

(declare-fun b!105853 () Bool)

(assert (=> b!105853 (= e!68901 e!68902)))

(declare-fun c!18430 () Bool)

(assert (=> b!105853 (= c!18430 (and ((_ is Cons!1592) (toList!782 lt!53974)) (not (= (_1!1191 (h!2189 (toList!782 lt!53974))) (_1!1191 lt!53713)))))))

(declare-fun b!105855 () Bool)

(assert (=> b!105855 (= e!68902 None!161)))

(assert (= (and d!28937 c!18429) b!105852))

(assert (= (and d!28937 (not c!18429)) b!105853))

(assert (= (and b!105853 c!18430) b!105854))

(assert (= (and b!105853 (not c!18430)) b!105855))

(declare-fun m!118131 () Bool)

(assert (=> b!105854 m!118131))

(assert (=> b!105529 d!28937))

(declare-fun d!28939 () Bool)

(assert (=> d!28939 (= (get!1336 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2891 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105447 d!28939))

(assert (=> d!28809 d!28815))

(declare-fun d!28941 () Bool)

(assert (=> d!28941 (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) from!355 Nil!1594)))

(assert (=> d!28941 true))

(declare-fun _$71!147 () Unit!3212)

(assert (=> d!28941 (= (choose!39 (_keys!4287 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!147)))

(declare-fun bs!4352 () Bool)

(assert (= bs!4352 d!28941))

(assert (=> bs!4352 m!117259))

(assert (=> d!28809 d!28941))

(declare-fun d!28943 () Bool)

(declare-fun e!68903 () Bool)

(assert (=> d!28943 e!68903))

(declare-fun res!52674 () Bool)

(assert (=> d!28943 (=> res!52674 e!68903)))

(declare-fun lt!54180 () Bool)

(assert (=> d!28943 (= res!52674 (not lt!54180))))

(declare-fun lt!54181 () Bool)

(assert (=> d!28943 (= lt!54180 lt!54181)))

(declare-fun lt!54182 () Unit!3212)

(declare-fun e!68904 () Unit!3212)

(assert (=> d!28943 (= lt!54182 e!68904)))

(declare-fun c!18431 () Bool)

(assert (=> d!28943 (= c!18431 lt!54181)))

(assert (=> d!28943 (= lt!54181 (containsKey!160 (toList!782 lt!53970) (_1!1191 lt!53718)))))

(assert (=> d!28943 (= (contains!814 lt!53970 (_1!1191 lt!53718)) lt!54180)))

(declare-fun b!105856 () Bool)

(declare-fun lt!54179 () Unit!3212)

(assert (=> b!105856 (= e!68904 lt!54179)))

(assert (=> b!105856 (= lt!54179 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53970) (_1!1191 lt!53718)))))

(assert (=> b!105856 (isDefined!109 (getValueByKey!157 (toList!782 lt!53970) (_1!1191 lt!53718)))))

(declare-fun b!105857 () Bool)

(declare-fun Unit!3231 () Unit!3212)

(assert (=> b!105857 (= e!68904 Unit!3231)))

(declare-fun b!105858 () Bool)

(assert (=> b!105858 (= e!68903 (isDefined!109 (getValueByKey!157 (toList!782 lt!53970) (_1!1191 lt!53718))))))

(assert (= (and d!28943 c!18431) b!105856))

(assert (= (and d!28943 (not c!18431)) b!105857))

(assert (= (and d!28943 (not res!52674)) b!105858))

(declare-fun m!118133 () Bool)

(assert (=> d!28943 m!118133))

(declare-fun m!118135 () Bool)

(assert (=> b!105856 m!118135))

(assert (=> b!105856 m!117579))

(assert (=> b!105856 m!117579))

(declare-fun m!118137 () Bool)

(assert (=> b!105856 m!118137))

(assert (=> b!105858 m!117579))

(assert (=> b!105858 m!117579))

(assert (=> b!105858 m!118137))

(assert (=> d!28793 d!28943))

(declare-fun b!105859 () Bool)

(declare-fun e!68905 () Option!163)

(assert (=> b!105859 (= e!68905 (Some!162 (_2!1191 (h!2189 lt!53969))))))

(declare-fun d!28945 () Bool)

(declare-fun c!18432 () Bool)

(assert (=> d!28945 (= c!18432 (and ((_ is Cons!1592) lt!53969) (= (_1!1191 (h!2189 lt!53969)) (_1!1191 lt!53718))))))

(assert (=> d!28945 (= (getValueByKey!157 lt!53969 (_1!1191 lt!53718)) e!68905)))

(declare-fun b!105861 () Bool)

(declare-fun e!68906 () Option!163)

(assert (=> b!105861 (= e!68906 (getValueByKey!157 (t!5671 lt!53969) (_1!1191 lt!53718)))))

(declare-fun b!105860 () Bool)

(assert (=> b!105860 (= e!68905 e!68906)))

(declare-fun c!18433 () Bool)

(assert (=> b!105860 (= c!18433 (and ((_ is Cons!1592) lt!53969) (not (= (_1!1191 (h!2189 lt!53969)) (_1!1191 lt!53718)))))))

(declare-fun b!105862 () Bool)

(assert (=> b!105862 (= e!68906 None!161)))

(assert (= (and d!28945 c!18432) b!105859))

(assert (= (and d!28945 (not c!18432)) b!105860))

(assert (= (and b!105860 c!18433) b!105861))

(assert (= (and b!105860 (not c!18433)) b!105862))

(declare-fun m!118139 () Bool)

(assert (=> b!105861 m!118139))

(assert (=> d!28793 d!28945))

(declare-fun d!28947 () Bool)

(assert (=> d!28947 (= (getValueByKey!157 lt!53969 (_1!1191 lt!53718)) (Some!162 (_2!1191 lt!53718)))))

(declare-fun lt!54183 () Unit!3212)

(assert (=> d!28947 (= lt!54183 (choose!662 lt!53969 (_1!1191 lt!53718) (_2!1191 lt!53718)))))

(declare-fun e!68907 () Bool)

(assert (=> d!28947 e!68907))

(declare-fun res!52675 () Bool)

(assert (=> d!28947 (=> (not res!52675) (not e!68907))))

(assert (=> d!28947 (= res!52675 (isStrictlySorted!296 lt!53969))))

(assert (=> d!28947 (= (lemmaContainsTupThenGetReturnValue!73 lt!53969 (_1!1191 lt!53718) (_2!1191 lt!53718)) lt!54183)))

(declare-fun b!105863 () Bool)

(declare-fun res!52676 () Bool)

(assert (=> b!105863 (=> (not res!52676) (not e!68907))))

(assert (=> b!105863 (= res!52676 (containsKey!160 lt!53969 (_1!1191 lt!53718)))))

(declare-fun b!105864 () Bool)

(assert (=> b!105864 (= e!68907 (contains!816 lt!53969 (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(assert (= (and d!28947 res!52675) b!105863))

(assert (= (and b!105863 res!52676) b!105864))

(assert (=> d!28947 m!117573))

(declare-fun m!118141 () Bool)

(assert (=> d!28947 m!118141))

(declare-fun m!118143 () Bool)

(assert (=> d!28947 m!118143))

(declare-fun m!118145 () Bool)

(assert (=> b!105863 m!118145))

(declare-fun m!118147 () Bool)

(assert (=> b!105864 m!118147))

(assert (=> d!28793 d!28947))

(declare-fun bm!11166 () Bool)

(declare-fun call!11171 () List!1596)

(declare-fun call!11170 () List!1596)

(assert (=> bm!11166 (= call!11171 call!11170)))

(declare-fun c!18436 () Bool)

(declare-fun e!68908 () List!1596)

(declare-fun b!105865 () Bool)

(declare-fun c!18434 () Bool)

(assert (=> b!105865 (= e!68908 (ite c!18436 (t!5671 (toList!782 (+!139 lt!53714 lt!53713))) (ite c!18434 (Cons!1592 (h!2189 (toList!782 (+!139 lt!53714 lt!53713))) (t!5671 (toList!782 (+!139 lt!53714 lt!53713)))) Nil!1593)))))

(declare-fun b!105866 () Bool)

(declare-fun e!68911 () List!1596)

(assert (=> b!105866 (= e!68911 call!11170)))

(declare-fun b!105868 () Bool)

(assert (=> b!105868 (= c!18434 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 lt!53713))) (bvsgt (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 lt!53713)))) (_1!1191 lt!53718))))))

(declare-fun e!68910 () List!1596)

(assert (=> b!105868 (= e!68911 e!68910)))

(declare-fun bm!11167 () Bool)

(declare-fun c!18435 () Bool)

(declare-fun call!11169 () List!1596)

(assert (=> bm!11167 (= call!11169 ($colon$colon!80 e!68908 (ite c!18435 (h!2189 (toList!782 (+!139 lt!53714 lt!53713))) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718)))))))

(declare-fun c!18437 () Bool)

(assert (=> bm!11167 (= c!18437 c!18435)))

(declare-fun b!105869 () Bool)

(assert (=> b!105869 (= e!68910 call!11171)))

(declare-fun b!105870 () Bool)

(assert (=> b!105870 (= e!68910 call!11171)))

(declare-fun b!105871 () Bool)

(declare-fun res!52678 () Bool)

(declare-fun e!68909 () Bool)

(assert (=> b!105871 (=> (not res!52678) (not e!68909))))

(declare-fun lt!54184 () List!1596)

(assert (=> b!105871 (= res!52678 (containsKey!160 lt!54184 (_1!1191 lt!53718)))))

(declare-fun b!105872 () Bool)

(assert (=> b!105872 (= e!68909 (contains!816 lt!54184 (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun b!105873 () Bool)

(declare-fun e!68912 () List!1596)

(assert (=> b!105873 (= e!68912 e!68911)))

(assert (=> b!105873 (= c!18436 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 lt!53713))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 lt!53713)))) (_1!1191 lt!53718))))))

(declare-fun d!28949 () Bool)

(assert (=> d!28949 e!68909))

(declare-fun res!52677 () Bool)

(assert (=> d!28949 (=> (not res!52677) (not e!68909))))

(assert (=> d!28949 (= res!52677 (isStrictlySorted!296 lt!54184))))

(assert (=> d!28949 (= lt!54184 e!68912)))

(assert (=> d!28949 (= c!18435 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 lt!53713))) (bvslt (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 lt!53713)))) (_1!1191 lt!53718))))))

(assert (=> d!28949 (isStrictlySorted!296 (toList!782 (+!139 lt!53714 lt!53713)))))

(assert (=> d!28949 (= (insertStrictlySorted!76 (toList!782 (+!139 lt!53714 lt!53713)) (_1!1191 lt!53718) (_2!1191 lt!53718)) lt!54184)))

(declare-fun b!105867 () Bool)

(assert (=> b!105867 (= e!68908 (insertStrictlySorted!76 (t!5671 (toList!782 (+!139 lt!53714 lt!53713))) (_1!1191 lt!53718) (_2!1191 lt!53718)))))

(declare-fun bm!11168 () Bool)

(assert (=> bm!11168 (= call!11170 call!11169)))

(declare-fun b!105874 () Bool)

(assert (=> b!105874 (= e!68912 call!11169)))

(assert (= (and d!28949 c!18435) b!105874))

(assert (= (and d!28949 (not c!18435)) b!105873))

(assert (= (and b!105873 c!18436) b!105866))

(assert (= (and b!105873 (not c!18436)) b!105868))

(assert (= (and b!105868 c!18434) b!105870))

(assert (= (and b!105868 (not c!18434)) b!105869))

(assert (= (or b!105870 b!105869) bm!11166))

(assert (= (or b!105866 bm!11166) bm!11168))

(assert (= (or b!105874 bm!11168) bm!11167))

(assert (= (and bm!11167 c!18437) b!105867))

(assert (= (and bm!11167 (not c!18437)) b!105865))

(assert (= (and d!28949 res!52677) b!105871))

(assert (= (and b!105871 res!52678) b!105872))

(declare-fun m!118149 () Bool)

(assert (=> bm!11167 m!118149))

(declare-fun m!118151 () Bool)

(assert (=> d!28949 m!118151))

(declare-fun m!118153 () Bool)

(assert (=> d!28949 m!118153))

(declare-fun m!118155 () Bool)

(assert (=> b!105872 m!118155))

(declare-fun m!118157 () Bool)

(assert (=> b!105871 m!118157))

(declare-fun m!118159 () Bool)

(assert (=> b!105867 m!118159))

(assert (=> d!28793 d!28949))

(declare-fun d!28951 () Bool)

(declare-fun e!68913 () Bool)

(assert (=> d!28951 e!68913))

(declare-fun res!52679 () Bool)

(assert (=> d!28951 (=> res!52679 e!68913)))

(declare-fun lt!54186 () Bool)

(assert (=> d!28951 (= res!52679 (not lt!54186))))

(declare-fun lt!54187 () Bool)

(assert (=> d!28951 (= lt!54186 lt!54187)))

(declare-fun lt!54188 () Unit!3212)

(declare-fun e!68914 () Unit!3212)

(assert (=> d!28951 (= lt!54188 e!68914)))

(declare-fun c!18438 () Bool)

(assert (=> d!28951 (= c!18438 lt!54187)))

(assert (=> d!28951 (= lt!54187 (containsKey!160 (toList!782 lt!53974) (_1!1191 lt!53713)))))

(assert (=> d!28951 (= (contains!814 lt!53974 (_1!1191 lt!53713)) lt!54186)))

(declare-fun b!105875 () Bool)

(declare-fun lt!54185 () Unit!3212)

(assert (=> b!105875 (= e!68914 lt!54185)))

(assert (=> b!105875 (= lt!54185 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53974) (_1!1191 lt!53713)))))

(assert (=> b!105875 (isDefined!109 (getValueByKey!157 (toList!782 lt!53974) (_1!1191 lt!53713)))))

(declare-fun b!105876 () Bool)

(declare-fun Unit!3232 () Unit!3212)

(assert (=> b!105876 (= e!68914 Unit!3232)))

(declare-fun b!105877 () Bool)

(assert (=> b!105877 (= e!68913 (isDefined!109 (getValueByKey!157 (toList!782 lt!53974) (_1!1191 lt!53713))))))

(assert (= (and d!28951 c!18438) b!105875))

(assert (= (and d!28951 (not c!18438)) b!105876))

(assert (= (and d!28951 (not res!52679)) b!105877))

(declare-fun m!118161 () Bool)

(assert (=> d!28951 m!118161))

(declare-fun m!118163 () Bool)

(assert (=> b!105875 m!118163))

(assert (=> b!105875 m!117591))

(assert (=> b!105875 m!117591))

(declare-fun m!118165 () Bool)

(assert (=> b!105875 m!118165))

(assert (=> b!105877 m!117591))

(assert (=> b!105877 m!117591))

(assert (=> b!105877 m!118165))

(assert (=> d!28795 d!28951))

(declare-fun b!105878 () Bool)

(declare-fun e!68915 () Option!163)

(assert (=> b!105878 (= e!68915 (Some!162 (_2!1191 (h!2189 lt!53973))))))

(declare-fun d!28953 () Bool)

(declare-fun c!18439 () Bool)

(assert (=> d!28953 (= c!18439 (and ((_ is Cons!1592) lt!53973) (= (_1!1191 (h!2189 lt!53973)) (_1!1191 lt!53713))))))

(assert (=> d!28953 (= (getValueByKey!157 lt!53973 (_1!1191 lt!53713)) e!68915)))

(declare-fun b!105880 () Bool)

(declare-fun e!68916 () Option!163)

(assert (=> b!105880 (= e!68916 (getValueByKey!157 (t!5671 lt!53973) (_1!1191 lt!53713)))))

(declare-fun b!105879 () Bool)

(assert (=> b!105879 (= e!68915 e!68916)))

(declare-fun c!18440 () Bool)

(assert (=> b!105879 (= c!18440 (and ((_ is Cons!1592) lt!53973) (not (= (_1!1191 (h!2189 lt!53973)) (_1!1191 lt!53713)))))))

(declare-fun b!105881 () Bool)

(assert (=> b!105881 (= e!68916 None!161)))

(assert (= (and d!28953 c!18439) b!105878))

(assert (= (and d!28953 (not c!18439)) b!105879))

(assert (= (and b!105879 c!18440) b!105880))

(assert (= (and b!105879 (not c!18440)) b!105881))

(declare-fun m!118167 () Bool)

(assert (=> b!105880 m!118167))

(assert (=> d!28795 d!28953))

(declare-fun d!28955 () Bool)

(assert (=> d!28955 (= (getValueByKey!157 lt!53973 (_1!1191 lt!53713)) (Some!162 (_2!1191 lt!53713)))))

(declare-fun lt!54189 () Unit!3212)

(assert (=> d!28955 (= lt!54189 (choose!662 lt!53973 (_1!1191 lt!53713) (_2!1191 lt!53713)))))

(declare-fun e!68917 () Bool)

(assert (=> d!28955 e!68917))

(declare-fun res!52680 () Bool)

(assert (=> d!28955 (=> (not res!52680) (not e!68917))))

(assert (=> d!28955 (= res!52680 (isStrictlySorted!296 lt!53973))))

(assert (=> d!28955 (= (lemmaContainsTupThenGetReturnValue!73 lt!53973 (_1!1191 lt!53713) (_2!1191 lt!53713)) lt!54189)))

(declare-fun b!105882 () Bool)

(declare-fun res!52681 () Bool)

(assert (=> b!105882 (=> (not res!52681) (not e!68917))))

(assert (=> b!105882 (= res!52681 (containsKey!160 lt!53973 (_1!1191 lt!53713)))))

(declare-fun b!105883 () Bool)

(assert (=> b!105883 (= e!68917 (contains!816 lt!53973 (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(assert (= (and d!28955 res!52680) b!105882))

(assert (= (and b!105882 res!52681) b!105883))

(assert (=> d!28955 m!117585))

(declare-fun m!118169 () Bool)

(assert (=> d!28955 m!118169))

(declare-fun m!118171 () Bool)

(assert (=> d!28955 m!118171))

(declare-fun m!118173 () Bool)

(assert (=> b!105882 m!118173))

(declare-fun m!118175 () Bool)

(assert (=> b!105883 m!118175))

(assert (=> d!28795 d!28955))

(declare-fun bm!11169 () Bool)

(declare-fun call!11174 () List!1596)

(declare-fun call!11173 () List!1596)

(assert (=> bm!11169 (= call!11174 call!11173)))

(declare-fun c!18443 () Bool)

(declare-fun b!105884 () Bool)

(declare-fun e!68918 () List!1596)

(declare-fun c!18441 () Bool)

(assert (=> b!105884 (= e!68918 (ite c!18443 (t!5671 (toList!782 lt!53714)) (ite c!18441 (Cons!1592 (h!2189 (toList!782 lt!53714)) (t!5671 (toList!782 lt!53714))) Nil!1593)))))

(declare-fun b!105885 () Bool)

(declare-fun e!68921 () List!1596)

(assert (=> b!105885 (= e!68921 call!11173)))

(declare-fun b!105887 () Bool)

(assert (=> b!105887 (= c!18441 (and ((_ is Cons!1592) (toList!782 lt!53714)) (bvsgt (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 lt!53713))))))

(declare-fun e!68920 () List!1596)

(assert (=> b!105887 (= e!68921 e!68920)))

(declare-fun bm!11170 () Bool)

(declare-fun c!18442 () Bool)

(declare-fun call!11172 () List!1596)

(assert (=> bm!11170 (= call!11172 ($colon$colon!80 e!68918 (ite c!18442 (h!2189 (toList!782 lt!53714)) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713)))))))

(declare-fun c!18444 () Bool)

(assert (=> bm!11170 (= c!18444 c!18442)))

(declare-fun b!105888 () Bool)

(assert (=> b!105888 (= e!68920 call!11174)))

(declare-fun b!105889 () Bool)

(assert (=> b!105889 (= e!68920 call!11174)))

(declare-fun b!105890 () Bool)

(declare-fun res!52683 () Bool)

(declare-fun e!68919 () Bool)

(assert (=> b!105890 (=> (not res!52683) (not e!68919))))

(declare-fun lt!54190 () List!1596)

(assert (=> b!105890 (= res!52683 (containsKey!160 lt!54190 (_1!1191 lt!53713)))))

(declare-fun b!105891 () Bool)

(assert (=> b!105891 (= e!68919 (contains!816 lt!54190 (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun b!105892 () Bool)

(declare-fun e!68922 () List!1596)

(assert (=> b!105892 (= e!68922 e!68921)))

(assert (=> b!105892 (= c!18443 (and ((_ is Cons!1592) (toList!782 lt!53714)) (= (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 lt!53713))))))

(declare-fun d!28957 () Bool)

(assert (=> d!28957 e!68919))

(declare-fun res!52682 () Bool)

(assert (=> d!28957 (=> (not res!52682) (not e!68919))))

(assert (=> d!28957 (= res!52682 (isStrictlySorted!296 lt!54190))))

(assert (=> d!28957 (= lt!54190 e!68922)))

(assert (=> d!28957 (= c!18442 (and ((_ is Cons!1592) (toList!782 lt!53714)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 lt!53713))))))

(assert (=> d!28957 (isStrictlySorted!296 (toList!782 lt!53714))))

(assert (=> d!28957 (= (insertStrictlySorted!76 (toList!782 lt!53714) (_1!1191 lt!53713) (_2!1191 lt!53713)) lt!54190)))

(declare-fun b!105886 () Bool)

(assert (=> b!105886 (= e!68918 (insertStrictlySorted!76 (t!5671 (toList!782 lt!53714)) (_1!1191 lt!53713) (_2!1191 lt!53713)))))

(declare-fun bm!11171 () Bool)

(assert (=> bm!11171 (= call!11173 call!11172)))

(declare-fun b!105893 () Bool)

(assert (=> b!105893 (= e!68922 call!11172)))

(assert (= (and d!28957 c!18442) b!105893))

(assert (= (and d!28957 (not c!18442)) b!105892))

(assert (= (and b!105892 c!18443) b!105885))

(assert (= (and b!105892 (not c!18443)) b!105887))

(assert (= (and b!105887 c!18441) b!105889))

(assert (= (and b!105887 (not c!18441)) b!105888))

(assert (= (or b!105889 b!105888) bm!11169))

(assert (= (or b!105885 bm!11169) bm!11171))

(assert (= (or b!105893 bm!11171) bm!11170))

(assert (= (and bm!11170 c!18444) b!105886))

(assert (= (and bm!11170 (not c!18444)) b!105884))

(assert (= (and d!28957 res!52682) b!105890))

(assert (= (and b!105890 res!52683) b!105891))

(declare-fun m!118177 () Bool)

(assert (=> bm!11170 m!118177))

(declare-fun m!118179 () Bool)

(assert (=> d!28957 m!118179))

(assert (=> d!28957 m!118057))

(declare-fun m!118181 () Bool)

(assert (=> b!105891 m!118181))

(declare-fun m!118183 () Bool)

(assert (=> b!105890 m!118183))

(declare-fun m!118185 () Bool)

(assert (=> b!105886 m!118185))

(assert (=> d!28795 d!28957))

(declare-fun d!28959 () Bool)

(declare-fun e!68923 () Bool)

(assert (=> d!28959 e!68923))

(declare-fun res!52684 () Bool)

(assert (=> d!28959 (=> res!52684 e!68923)))

(declare-fun lt!54192 () Bool)

(assert (=> d!28959 (= res!52684 (not lt!54192))))

(declare-fun lt!54193 () Bool)

(assert (=> d!28959 (= lt!54192 lt!54193)))

(declare-fun lt!54194 () Unit!3212)

(declare-fun e!68924 () Unit!3212)

(assert (=> d!28959 (= lt!54194 e!68924)))

(declare-fun c!18445 () Bool)

(assert (=> d!28959 (= c!18445 lt!54193)))

(assert (=> d!28959 (= lt!54193 (containsKey!160 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!28959 (= (contains!814 e!68649 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54192)))

(declare-fun b!105894 () Bool)

(declare-fun lt!54191 () Unit!3212)

(assert (=> b!105894 (= e!68924 lt!54191)))

(assert (=> b!105894 (= lt!54191 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105894 (isDefined!109 (getValueByKey!157 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105895 () Bool)

(declare-fun Unit!3233 () Unit!3212)

(assert (=> b!105895 (= e!68924 Unit!3233)))

(declare-fun b!105896 () Bool)

(assert (=> b!105896 (= e!68923 (isDefined!109 (getValueByKey!157 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (= (and d!28959 c!18445) b!105894))

(assert (= (and d!28959 (not c!18445)) b!105895))

(assert (= (and d!28959 (not res!52684)) b!105896))

(assert (=> d!28959 m!117261))

(declare-fun m!118187 () Bool)

(assert (=> d!28959 m!118187))

(assert (=> b!105894 m!117261))

(declare-fun m!118189 () Bool)

(assert (=> b!105894 m!118189))

(assert (=> b!105894 m!117261))

(declare-fun m!118191 () Bool)

(assert (=> b!105894 m!118191))

(assert (=> b!105894 m!118191))

(declare-fun m!118193 () Bool)

(assert (=> b!105894 m!118193))

(assert (=> b!105896 m!117261))

(assert (=> b!105896 m!118191))

(assert (=> b!105896 m!118191))

(assert (=> b!105896 m!118193))

(assert (=> bm!11084 d!28959))

(assert (=> d!28779 d!28933))

(declare-fun d!28961 () Bool)

(declare-fun res!52685 () Bool)

(declare-fun e!68925 () Bool)

(assert (=> d!28961 (=> res!52685 e!68925)))

(assert (=> d!28961 (= res!52685 (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!28961 (= (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!68925)))

(declare-fun b!105897 () Bool)

(declare-fun e!68926 () Bool)

(assert (=> b!105897 (= e!68925 e!68926)))

(declare-fun res!52686 () Bool)

(assert (=> b!105897 (=> (not res!52686) (not e!68926))))

(assert (=> b!105897 (= res!52686 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105898 () Bool)

(assert (=> b!105898 (= e!68926 (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!28961 (not res!52685)) b!105897))

(assert (= (and b!105897 res!52686) b!105898))

(assert (=> d!28961 m!117867))

(assert (=> b!105898 m!117261))

(declare-fun m!118195 () Bool)

(assert (=> b!105898 m!118195))

(assert (=> b!105574 d!28961))

(declare-fun d!28963 () Bool)

(declare-fun e!68927 () Bool)

(assert (=> d!28963 e!68927))

(declare-fun res!52687 () Bool)

(assert (=> d!28963 (=> res!52687 e!68927)))

(declare-fun lt!54196 () Bool)

(assert (=> d!28963 (= res!52687 (not lt!54196))))

(declare-fun lt!54197 () Bool)

(assert (=> d!28963 (= lt!54196 lt!54197)))

(declare-fun lt!54198 () Unit!3212)

(declare-fun e!68928 () Unit!3212)

(assert (=> d!28963 (= lt!54198 e!68928)))

(declare-fun c!18446 () Bool)

(assert (=> d!28963 (= c!18446 lt!54197)))

(assert (=> d!28963 (= lt!54197 (containsKey!160 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!28963 (= (contains!814 call!11106 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54196)))

(declare-fun b!105899 () Bool)

(declare-fun lt!54195 () Unit!3212)

(assert (=> b!105899 (= e!68928 lt!54195)))

(assert (=> b!105899 (= lt!54195 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105899 (isDefined!109 (getValueByKey!157 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105900 () Bool)

(declare-fun Unit!3234 () Unit!3212)

(assert (=> b!105900 (= e!68928 Unit!3234)))

(declare-fun b!105901 () Bool)

(assert (=> b!105901 (= e!68927 (isDefined!109 (getValueByKey!157 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (= (and d!28963 c!18446) b!105899))

(assert (= (and d!28963 (not c!18446)) b!105900))

(assert (= (and d!28963 (not res!52687)) b!105901))

(assert (=> d!28963 m!117261))

(declare-fun m!118197 () Bool)

(assert (=> d!28963 m!118197))

(assert (=> b!105899 m!117261))

(declare-fun m!118199 () Bool)

(assert (=> b!105899 m!118199))

(assert (=> b!105899 m!117261))

(declare-fun m!118201 () Bool)

(assert (=> b!105899 m!118201))

(assert (=> b!105899 m!118201))

(declare-fun m!118203 () Bool)

(assert (=> b!105899 m!118203))

(assert (=> b!105901 m!117261))

(assert (=> b!105901 m!118201))

(assert (=> b!105901 m!118201))

(assert (=> b!105901 m!118203))

(assert (=> b!105419 d!28963))

(declare-fun d!28965 () Bool)

(declare-fun e!68929 () Bool)

(assert (=> d!28965 e!68929))

(declare-fun res!52688 () Bool)

(assert (=> d!28965 (=> res!52688 e!68929)))

(declare-fun lt!54200 () Bool)

(assert (=> d!28965 (= res!52688 (not lt!54200))))

(declare-fun lt!54201 () Bool)

(assert (=> d!28965 (= lt!54200 lt!54201)))

(declare-fun lt!54202 () Unit!3212)

(declare-fun e!68930 () Unit!3212)

(assert (=> d!28965 (= lt!54202 e!68930)))

(declare-fun c!18447 () Bool)

(assert (=> d!28965 (= c!18447 lt!54201)))

(assert (=> d!28965 (= lt!54201 (containsKey!160 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28965 (= (contains!814 lt!53992 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54200)))

(declare-fun b!105902 () Bool)

(declare-fun lt!54199 () Unit!3212)

(assert (=> b!105902 (= e!68930 lt!54199)))

(assert (=> b!105902 (= lt!54199 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105902 (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105903 () Bool)

(declare-fun Unit!3235 () Unit!3212)

(assert (=> b!105903 (= e!68930 Unit!3235)))

(declare-fun b!105904 () Bool)

(assert (=> b!105904 (= e!68929 (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28965 c!18447) b!105902))

(assert (= (and d!28965 (not c!18447)) b!105903))

(assert (= (and d!28965 (not res!52688)) b!105904))

(declare-fun m!118205 () Bool)

(assert (=> d!28965 m!118205))

(declare-fun m!118207 () Bool)

(assert (=> b!105902 m!118207))

(declare-fun m!118209 () Bool)

(assert (=> b!105902 m!118209))

(assert (=> b!105902 m!118209))

(declare-fun m!118211 () Bool)

(assert (=> b!105902 m!118211))

(assert (=> b!105904 m!118209))

(assert (=> b!105904 m!118209))

(assert (=> b!105904 m!118211))

(assert (=> d!28797 d!28965))

(assert (=> d!28797 d!28801))

(declare-fun b!105917 () Bool)

(declare-fun e!68937 () SeekEntryResult!253)

(declare-fun e!68938 () SeekEntryResult!253)

(assert (=> b!105917 (= e!68937 e!68938)))

(declare-fun lt!54211 () (_ BitVec 64))

(declare-fun lt!54210 () SeekEntryResult!253)

(assert (=> b!105917 (= lt!54211 (select (arr!2054 (_keys!4287 newMap!16)) (index!3162 lt!54210)))))

(declare-fun c!18454 () Bool)

(assert (=> b!105917 (= c!18454 (= lt!54211 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105919 () Bool)

(declare-fun e!68939 () SeekEntryResult!253)

(assert (=> b!105919 (= e!68939 (MissingZero!253 (index!3162 lt!54210)))))

(declare-fun b!105920 () Bool)

(assert (=> b!105920 (= e!68937 Undefined!253)))

(declare-fun b!105921 () Bool)

(assert (=> b!105921 (= e!68938 (Found!253 (index!3162 lt!54210)))))

(declare-fun b!105922 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4331 (_ BitVec 32)) SeekEntryResult!253)

(assert (=> b!105922 (= e!68939 (seekKeyOrZeroReturnVacant!0 (x!13639 lt!54210) (index!3162 lt!54210) (index!3162 lt!54210) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(declare-fun lt!54209 () SeekEntryResult!253)

(declare-fun d!28967 () Bool)

(assert (=> d!28967 (and (or ((_ is Undefined!253) lt!54209) (not ((_ is Found!253) lt!54209)) (and (bvsge (index!3161 lt!54209) #b00000000000000000000000000000000) (bvslt (index!3161 lt!54209) (size!2309 (_keys!4287 newMap!16))))) (or ((_ is Undefined!253) lt!54209) ((_ is Found!253) lt!54209) (not ((_ is MissingZero!253) lt!54209)) (and (bvsge (index!3160 lt!54209) #b00000000000000000000000000000000) (bvslt (index!3160 lt!54209) (size!2309 (_keys!4287 newMap!16))))) (or ((_ is Undefined!253) lt!54209) ((_ is Found!253) lt!54209) ((_ is MissingZero!253) lt!54209) (not ((_ is MissingVacant!253) lt!54209)) (and (bvsge (index!3163 lt!54209) #b00000000000000000000000000000000) (bvslt (index!3163 lt!54209) (size!2309 (_keys!4287 newMap!16))))) (or ((_ is Undefined!253) lt!54209) (ite ((_ is Found!253) lt!54209) (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!54209)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite ((_ is MissingZero!253) lt!54209) (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3160 lt!54209)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!253) lt!54209) (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3163 lt!54209)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28967 (= lt!54209 e!68937)))

(declare-fun c!18456 () Bool)

(assert (=> d!28967 (= c!18456 (and ((_ is Intermediate!253) lt!54210) (undefined!1065 lt!54210)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4331 (_ BitVec 32)) SeekEntryResult!253)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!28967 (= lt!54210 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6727 newMap!16)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(assert (=> d!28967 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!28967 (= (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)) lt!54209)))

(declare-fun b!105918 () Bool)

(declare-fun c!18455 () Bool)

(assert (=> b!105918 (= c!18455 (= lt!54211 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105918 (= e!68938 e!68939)))

(assert (= (and d!28967 c!18456) b!105920))

(assert (= (and d!28967 (not c!18456)) b!105917))

(assert (= (and b!105917 c!18454) b!105921))

(assert (= (and b!105917 (not c!18454)) b!105918))

(assert (= (and b!105918 c!18455) b!105919))

(assert (= (and b!105918 (not c!18455)) b!105922))

(declare-fun m!118213 () Bool)

(assert (=> b!105917 m!118213))

(assert (=> b!105922 m!117261))

(declare-fun m!118215 () Bool)

(assert (=> b!105922 m!118215))

(assert (=> d!28967 m!117661))

(assert (=> d!28967 m!117261))

(declare-fun m!118217 () Bool)

(assert (=> d!28967 m!118217))

(declare-fun m!118219 () Bool)

(assert (=> d!28967 m!118219))

(declare-fun m!118221 () Bool)

(assert (=> d!28967 m!118221))

(declare-fun m!118223 () Bool)

(assert (=> d!28967 m!118223))

(assert (=> d!28967 m!118217))

(assert (=> d!28967 m!117261))

(declare-fun m!118225 () Bool)

(assert (=> d!28967 m!118225))

(assert (=> b!105432 d!28967))

(declare-fun d!28969 () Bool)

(declare-fun e!68940 () Bool)

(assert (=> d!28969 e!68940))

(declare-fun res!52689 () Bool)

(assert (=> d!28969 (=> res!52689 e!68940)))

(declare-fun lt!54213 () Bool)

(assert (=> d!28969 (= res!52689 (not lt!54213))))

(declare-fun lt!54214 () Bool)

(assert (=> d!28969 (= lt!54213 lt!54214)))

(declare-fun lt!54215 () Unit!3212)

(declare-fun e!68941 () Unit!3212)

(assert (=> d!28969 (= lt!54215 e!68941)))

(declare-fun c!18457 () Bool)

(assert (=> d!28969 (= c!18457 lt!54214)))

(assert (=> d!28969 (= lt!54214 (containsKey!160 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28969 (= (contains!814 lt!53948 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54213)))

(declare-fun b!105923 () Bool)

(declare-fun lt!54212 () Unit!3212)

(assert (=> b!105923 (= e!68941 lt!54212)))

(assert (=> b!105923 (= lt!54212 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105923 (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105924 () Bool)

(declare-fun Unit!3236 () Unit!3212)

(assert (=> b!105924 (= e!68941 Unit!3236)))

(declare-fun b!105925 () Bool)

(assert (=> b!105925 (= e!68940 (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28969 c!18457) b!105923))

(assert (= (and d!28969 (not c!18457)) b!105924))

(assert (= (and d!28969 (not res!52689)) b!105925))

(declare-fun m!118227 () Bool)

(assert (=> d!28969 m!118227))

(declare-fun m!118229 () Bool)

(assert (=> b!105923 m!118229))

(declare-fun m!118231 () Bool)

(assert (=> b!105923 m!118231))

(assert (=> b!105923 m!118231))

(declare-fun m!118233 () Bool)

(assert (=> b!105923 m!118233))

(assert (=> b!105925 m!118231))

(assert (=> b!105925 m!118231))

(assert (=> b!105925 m!118233))

(assert (=> bm!11123 d!28969))

(declare-fun d!28971 () Bool)

(declare-fun res!52690 () Bool)

(declare-fun e!68942 () Bool)

(assert (=> d!28971 (=> (not res!52690) (not e!68942))))

(assert (=> d!28971 (= res!52690 (simpleValid!74 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!28971 (= (valid!421 (v!2892 (underlying!361 thiss!992))) e!68942)))

(declare-fun b!105926 () Bool)

(declare-fun res!52691 () Bool)

(assert (=> b!105926 (=> (not res!52691) (not e!68942))))

(assert (=> b!105926 (= res!52691 (= (arrayCountValidKeys!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))) (_size!498 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105927 () Bool)

(declare-fun res!52692 () Bool)

(assert (=> b!105927 (=> (not res!52692) (not e!68942))))

(assert (=> b!105927 (= res!52692 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105928 () Bool)

(assert (=> b!105928 (= e!68942 (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 Nil!1594))))

(assert (= (and d!28971 res!52690) b!105926))

(assert (= (and b!105926 res!52691) b!105927))

(assert (= (and b!105927 res!52692) b!105928))

(declare-fun m!118235 () Bool)

(assert (=> d!28971 m!118235))

(declare-fun m!118237 () Bool)

(assert (=> b!105926 m!118237))

(declare-fun m!118239 () Bool)

(assert (=> b!105927 m!118239))

(declare-fun m!118241 () Bool)

(assert (=> b!105928 m!118241))

(assert (=> d!28777 d!28971))

(declare-fun d!28973 () Bool)

(declare-fun lt!54218 () Bool)

(declare-fun content!111 (List!1596) (InoxSet tuple2!2360))

(assert (=> d!28973 (= lt!54218 (select (content!111 (toList!782 lt!53999)) lt!53718))))

(declare-fun e!68947 () Bool)

(assert (=> d!28973 (= lt!54218 e!68947)))

(declare-fun res!52697 () Bool)

(assert (=> d!28973 (=> (not res!52697) (not e!68947))))

(assert (=> d!28973 (= res!52697 ((_ is Cons!1592) (toList!782 lt!53999)))))

(assert (=> d!28973 (= (contains!816 (toList!782 lt!53999) lt!53718) lt!54218)))

(declare-fun b!105933 () Bool)

(declare-fun e!68948 () Bool)

(assert (=> b!105933 (= e!68947 e!68948)))

(declare-fun res!52698 () Bool)

(assert (=> b!105933 (=> res!52698 e!68948)))

(assert (=> b!105933 (= res!52698 (= (h!2189 (toList!782 lt!53999)) lt!53718))))

(declare-fun b!105934 () Bool)

(assert (=> b!105934 (= e!68948 (contains!816 (t!5671 (toList!782 lt!53999)) lt!53718))))

(assert (= (and d!28973 res!52697) b!105933))

(assert (= (and b!105933 (not res!52698)) b!105934))

(declare-fun m!118243 () Bool)

(assert (=> d!28973 m!118243))

(declare-fun m!118245 () Bool)

(assert (=> d!28973 m!118245))

(declare-fun m!118247 () Bool)

(assert (=> b!105934 m!118247))

(assert (=> b!105568 d!28973))

(assert (=> b!105510 d!28819))

(declare-fun b!105951 () Bool)

(declare-fun res!52708 () Bool)

(declare-fun e!68959 () Bool)

(assert (=> b!105951 (=> (not res!52708) (not e!68959))))

(declare-fun lt!54224 () SeekEntryResult!253)

(assert (=> b!105951 (= res!52708 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3163 lt!54224)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105951 (and (bvsge (index!3163 lt!54224) #b00000000000000000000000000000000) (bvslt (index!3163 lt!54224) (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!105952 () Bool)

(declare-fun e!68960 () Bool)

(declare-fun e!68957 () Bool)

(assert (=> b!105952 (= e!68960 e!68957)))

(declare-fun res!52707 () Bool)

(declare-fun call!11179 () Bool)

(assert (=> b!105952 (= res!52707 call!11179)))

(assert (=> b!105952 (=> (not res!52707) (not e!68957))))

(declare-fun b!105953 () Bool)

(assert (=> b!105953 (and (bvsge (index!3160 lt!54224) #b00000000000000000000000000000000) (bvslt (index!3160 lt!54224) (size!2309 (_keys!4287 newMap!16))))))

(declare-fun res!52709 () Bool)

(assert (=> b!105953 (= res!52709 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3160 lt!54224)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105953 (=> (not res!52709) (not e!68957))))

(declare-fun bm!11176 () Bool)

(declare-fun c!18463 () Bool)

(assert (=> bm!11176 (= call!11179 (inRange!0 (ite c!18463 (index!3160 lt!54224) (index!3163 lt!54224)) (mask!6727 newMap!16)))))

(declare-fun b!105954 () Bool)

(declare-fun call!11180 () Bool)

(assert (=> b!105954 (= e!68957 (not call!11180))))

(declare-fun b!105955 () Bool)

(declare-fun e!68958 () Bool)

(assert (=> b!105955 (= e!68960 e!68958)))

(declare-fun c!18462 () Bool)

(assert (=> b!105955 (= c!18462 ((_ is MissingVacant!253) lt!54224))))

(declare-fun d!28975 () Bool)

(assert (=> d!28975 e!68960))

(assert (=> d!28975 (= c!18463 ((_ is MissingZero!253) lt!54224))))

(assert (=> d!28975 (= lt!54224 (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(declare-fun lt!54223 () Unit!3212)

(declare-fun choose!670 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) Int) Unit!3212)

(assert (=> d!28975 (= lt!54223 (choose!670 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(assert (=> d!28975 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!28975 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)) lt!54223)))

(declare-fun b!105956 () Bool)

(assert (=> b!105956 (= e!68958 ((_ is Undefined!253) lt!54224))))

(declare-fun b!105957 () Bool)

(declare-fun res!52710 () Bool)

(assert (=> b!105957 (=> (not res!52710) (not e!68959))))

(assert (=> b!105957 (= res!52710 call!11179)))

(assert (=> b!105957 (= e!68958 e!68959)))

(declare-fun b!105958 () Bool)

(assert (=> b!105958 (= e!68959 (not call!11180))))

(declare-fun bm!11177 () Bool)

(assert (=> bm!11177 (= call!11180 (arrayContainsKey!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!28975 c!18463) b!105952))

(assert (= (and d!28975 (not c!18463)) b!105955))

(assert (= (and b!105952 res!52707) b!105953))

(assert (= (and b!105953 res!52709) b!105954))

(assert (= (and b!105955 c!18462) b!105957))

(assert (= (and b!105955 (not c!18462)) b!105956))

(assert (= (and b!105957 res!52710) b!105951))

(assert (= (and b!105951 res!52708) b!105958))

(assert (= (or b!105952 b!105957) bm!11176))

(assert (= (or b!105954 b!105958) bm!11177))

(declare-fun m!118249 () Bool)

(assert (=> bm!11176 m!118249))

(declare-fun m!118251 () Bool)

(assert (=> b!105953 m!118251))

(declare-fun m!118253 () Bool)

(assert (=> b!105951 m!118253))

(assert (=> d!28975 m!117261))

(assert (=> d!28975 m!117433))

(assert (=> d!28975 m!117261))

(declare-fun m!118255 () Bool)

(assert (=> d!28975 m!118255))

(assert (=> d!28975 m!117661))

(assert (=> bm!11177 m!117261))

(assert (=> bm!11177 m!117431))

(assert (=> bm!11097 d!28975))

(assert (=> bm!11088 d!28967))

(declare-fun b!105967 () Bool)

(declare-fun e!68966 () (_ BitVec 32))

(declare-fun call!11183 () (_ BitVec 32))

(assert (=> b!105967 (= e!68966 (bvadd #b00000000000000000000000000000001 call!11183))))

(declare-fun b!105968 () Bool)

(assert (=> b!105968 (= e!68966 call!11183)))

(declare-fun d!28977 () Bool)

(declare-fun lt!54227 () (_ BitVec 32))

(assert (=> d!28977 (and (bvsge lt!54227 #b00000000000000000000000000000000) (bvsle lt!54227 (bvsub (size!2309 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!68965 () (_ BitVec 32))

(assert (=> d!28977 (= lt!54227 e!68965)))

(declare-fun c!18469 () Bool)

(assert (=> d!28977 (= c!18469 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!28977 (and (bvsle #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2309 (_keys!4287 newMap!16)) (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!28977 (= (arrayCountValidKeys!0 (_keys!4287 newMap!16) #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) lt!54227)))

(declare-fun b!105969 () Bool)

(assert (=> b!105969 (= e!68965 #b00000000000000000000000000000000)))

(declare-fun b!105970 () Bool)

(assert (=> b!105970 (= e!68965 e!68966)))

(declare-fun c!18468 () Bool)

(assert (=> b!105970 (= c!18468 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11180 () Bool)

(assert (=> bm!11180 (= call!11183 (arrayCountValidKeys!0 (_keys!4287 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!28977 c!18469) b!105969))

(assert (= (and d!28977 (not c!18469)) b!105970))

(assert (= (and b!105970 c!18468) b!105967))

(assert (= (and b!105970 (not c!18468)) b!105968))

(assert (= (or b!105967 b!105968) bm!11180))

(assert (=> b!105970 m!117657))

(assert (=> b!105970 m!117657))

(assert (=> b!105970 m!117663))

(declare-fun m!118257 () Bool)

(assert (=> bm!11180 m!118257))

(assert (=> b!105518 d!28977))

(assert (=> d!28807 d!28811))

(declare-fun d!28979 () Bool)

(assert (=> d!28979 (not (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!28979 true))

(declare-fun _$68!106 () Unit!3212)

(assert (=> d!28979 (= (choose!68 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594)) _$68!106)))

(declare-fun bs!4353 () Bool)

(assert (= bs!4353 d!28979))

(assert (=> bs!4353 m!117261))

(assert (=> bs!4353 m!117265))

(assert (=> d!28807 d!28979))

(assert (=> bm!11089 d!28779))

(declare-fun d!28981 () Bool)

(declare-fun e!68967 () Bool)

(assert (=> d!28981 e!68967))

(declare-fun res!52711 () Bool)

(assert (=> d!28981 (=> res!52711 e!68967)))

(declare-fun lt!54229 () Bool)

(assert (=> d!28981 (= res!52711 (not lt!54229))))

(declare-fun lt!54230 () Bool)

(assert (=> d!28981 (= lt!54229 lt!54230)))

(declare-fun lt!54231 () Unit!3212)

(declare-fun e!68968 () Unit!3212)

(assert (=> d!28981 (= lt!54231 e!68968)))

(declare-fun c!18470 () Bool)

(assert (=> d!28981 (= c!18470 lt!54230)))

(assert (=> d!28981 (= lt!54230 (containsKey!160 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!28981 (= (contains!814 lt!53948 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54229)))

(declare-fun b!105971 () Bool)

(declare-fun lt!54228 () Unit!3212)

(assert (=> b!105971 (= e!68968 lt!54228)))

(assert (=> b!105971 (= lt!54228 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105971 (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105972 () Bool)

(declare-fun Unit!3237 () Unit!3212)

(assert (=> b!105972 (= e!68968 Unit!3237)))

(declare-fun b!105973 () Bool)

(assert (=> b!105973 (= e!68967 (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!28981 c!18470) b!105971))

(assert (= (and d!28981 (not c!18470)) b!105972))

(assert (= (and d!28981 (not res!52711)) b!105973))

(assert (=> d!28981 m!117491))

(declare-fun m!118259 () Bool)

(assert (=> d!28981 m!118259))

(assert (=> b!105971 m!117491))

(declare-fun m!118261 () Bool)

(assert (=> b!105971 m!118261))

(assert (=> b!105971 m!117491))

(assert (=> b!105971 m!117831))

(assert (=> b!105971 m!117831))

(declare-fun m!118263 () Bool)

(assert (=> b!105971 m!118263))

(assert (=> b!105973 m!117491))

(assert (=> b!105973 m!117831))

(assert (=> b!105973 m!117831))

(assert (=> b!105973 m!118263))

(assert (=> b!105511 d!28981))

(declare-fun d!28983 () Bool)

(assert (=> d!28983 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53878 lt!53719 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54234 () Unit!3212)

(declare-fun choose!671 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 V!3217 Int) Unit!3212)

(assert (=> d!28983 (= lt!54234 (choose!671 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) lt!53878 (zeroValue!2456 newMap!16) lt!53719 (minValue!2456 newMap!16) (defaultEntry!2581 newMap!16)))))

(assert (=> d!28983 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!28983 (= (lemmaChangeZeroKeyThenAddPairToListMap!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) lt!53878 (zeroValue!2456 newMap!16) lt!53719 (minValue!2456 newMap!16) (defaultEntry!2581 newMap!16)) lt!54234)))

(declare-fun bs!4354 () Bool)

(assert (= bs!4354 d!28983))

(declare-fun m!118265 () Bool)

(assert (=> bs!4354 m!118265))

(assert (=> bs!4354 m!117661))

(declare-fun m!118267 () Bool)

(assert (=> bs!4354 m!118267))

(assert (=> bs!4354 m!117451))

(assert (=> bs!4354 m!117451))

(declare-fun m!118269 () Bool)

(assert (=> bs!4354 m!118269))

(assert (=> b!105440 d!28983))

(declare-fun bm!11181 () Bool)

(declare-fun call!11184 () Bool)

(declare-fun c!18471 () Bool)

(assert (=> bm!11181 (= call!11184 (arrayNoDuplicates!0 (_keys!4287 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18471 (Cons!1593 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) Nil!1594) Nil!1594)))))

(declare-fun b!105975 () Bool)

(declare-fun e!68972 () Bool)

(declare-fun e!68971 () Bool)

(assert (=> b!105975 (= e!68972 e!68971)))

(assert (=> b!105975 (= c!18471 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105976 () Bool)

(assert (=> b!105976 (= e!68971 call!11184)))

(declare-fun b!105977 () Bool)

(declare-fun e!68970 () Bool)

(assert (=> b!105977 (= e!68970 (contains!817 Nil!1594 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105978 () Bool)

(assert (=> b!105978 (= e!68971 call!11184)))

(declare-fun b!105974 () Bool)

(declare-fun e!68969 () Bool)

(assert (=> b!105974 (= e!68969 e!68972)))

(declare-fun res!52713 () Bool)

(assert (=> b!105974 (=> (not res!52713) (not e!68972))))

(assert (=> b!105974 (= res!52713 (not e!68970))))

(declare-fun res!52712 () Bool)

(assert (=> b!105974 (=> (not res!52712) (not e!68970))))

(assert (=> b!105974 (= res!52712 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!28985 () Bool)

(declare-fun res!52714 () Bool)

(assert (=> d!28985 (=> res!52714 e!68969)))

(assert (=> d!28985 (= res!52714 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!28985 (= (arrayNoDuplicates!0 (_keys!4287 newMap!16) #b00000000000000000000000000000000 Nil!1594) e!68969)))

(assert (= (and d!28985 (not res!52714)) b!105974))

(assert (= (and b!105974 res!52712) b!105977))

(assert (= (and b!105974 res!52713) b!105975))

(assert (= (and b!105975 c!18471) b!105976))

(assert (= (and b!105975 (not c!18471)) b!105978))

(assert (= (or b!105976 b!105978) bm!11181))

(assert (=> bm!11181 m!117657))

(declare-fun m!118271 () Bool)

(assert (=> bm!11181 m!118271))

(assert (=> b!105975 m!117657))

(assert (=> b!105975 m!117657))

(assert (=> b!105975 m!117663))

(assert (=> b!105977 m!117657))

(assert (=> b!105977 m!117657))

(declare-fun m!118273 () Bool)

(assert (=> b!105977 m!118273))

(assert (=> b!105974 m!117657))

(assert (=> b!105974 m!117657))

(assert (=> b!105974 m!117663))

(assert (=> b!105520 d!28985))

(assert (=> b!105591 d!28857))

(declare-fun b!105979 () Bool)

(declare-fun e!68976 () Bool)

(declare-fun lt!54251 () ListLongMap!1533)

(assert (=> b!105979 (= e!68976 (= (apply!98 lt!54251 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!105980 () Bool)

(declare-fun e!68985 () Bool)

(assert (=> b!105980 (= e!68985 e!68976)))

(declare-fun res!52715 () Bool)

(declare-fun call!11188 () Bool)

(assert (=> b!105980 (= res!52715 call!11188)))

(assert (=> b!105980 (=> (not res!52715) (not e!68976))))

(declare-fun b!105981 () Bool)

(declare-fun e!68979 () ListLongMap!1533)

(declare-fun call!11190 () ListLongMap!1533)

(assert (=> b!105981 (= e!68979 call!11190)))

(declare-fun b!105982 () Bool)

(declare-fun res!52719 () Bool)

(declare-fun e!68981 () Bool)

(assert (=> b!105982 (=> (not res!52719) (not e!68981))))

(declare-fun e!68975 () Bool)

(assert (=> b!105982 (= res!52719 e!68975)))

(declare-fun res!52722 () Bool)

(assert (=> b!105982 (=> res!52722 e!68975)))

(declare-fun e!68984 () Bool)

(assert (=> b!105982 (= res!52722 (not e!68984))))

(declare-fun res!52716 () Bool)

(assert (=> b!105982 (=> (not res!52716) (not e!68984))))

(assert (=> b!105982 (= res!52716 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!105983 () Bool)

(declare-fun e!68980 () Bool)

(declare-fun e!68977 () Bool)

(assert (=> b!105983 (= e!68980 e!68977)))

(declare-fun res!52723 () Bool)

(declare-fun call!11191 () Bool)

(assert (=> b!105983 (= res!52723 call!11191)))

(assert (=> b!105983 (=> (not res!52723) (not e!68977))))

(declare-fun b!105985 () Bool)

(declare-fun res!52720 () Bool)

(assert (=> b!105985 (=> (not res!52720) (not e!68981))))

(assert (=> b!105985 (= res!52720 e!68980)))

(declare-fun c!18473 () Bool)

(assert (=> b!105985 (= c!18473 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105986 () Bool)

(declare-fun e!68982 () Bool)

(assert (=> b!105986 (= e!68982 (= (apply!98 lt!54251 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (ite c!18323 (_values!2564 newMap!16) lt!53882)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105986 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (ite c!18323 (_values!2564 newMap!16) lt!53882))))))

(assert (=> b!105986 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!105987 () Bool)

(declare-fun call!11186 () ListLongMap!1533)

(assert (=> b!105987 (= e!68979 call!11186)))

(declare-fun b!105988 () Bool)

(declare-fun e!68973 () Unit!3212)

(declare-fun Unit!3238 () Unit!3212)

(assert (=> b!105988 (= e!68973 Unit!3238)))

(declare-fun b!105989 () Bool)

(assert (=> b!105989 (= e!68985 (not call!11188))))

(declare-fun b!105990 () Bool)

(assert (=> b!105990 (= e!68980 (not call!11191))))

(declare-fun b!105991 () Bool)

(declare-fun e!68983 () ListLongMap!1533)

(declare-fun e!68974 () ListLongMap!1533)

(assert (=> b!105991 (= e!68983 e!68974)))

(declare-fun c!18472 () Bool)

(assert (=> b!105991 (= c!18472 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11182 () Bool)

(declare-fun call!11189 () ListLongMap!1533)

(declare-fun call!11187 () ListLongMap!1533)

(assert (=> bm!11182 (= call!11189 call!11187)))

(declare-fun bm!11183 () Bool)

(assert (=> bm!11183 (= call!11191 (contains!814 lt!54251 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105992 () Bool)

(assert (=> b!105992 (= e!68981 e!68985)))

(declare-fun c!18477 () Bool)

(assert (=> b!105992 (= c!18477 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!28987 () Bool)

(assert (=> d!28987 e!68981))

(declare-fun res!52717 () Bool)

(assert (=> d!28987 (=> (not res!52717) (not e!68981))))

(assert (=> d!28987 (= res!52717 (or (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))))

(declare-fun lt!54241 () ListLongMap!1533)

(assert (=> d!28987 (= lt!54251 lt!54241)))

(declare-fun lt!54243 () Unit!3212)

(assert (=> d!28987 (= lt!54243 e!68973)))

(declare-fun c!18475 () Bool)

(declare-fun e!68978 () Bool)

(assert (=> d!28987 (= c!18475 e!68978)))

(declare-fun res!52721 () Bool)

(assert (=> d!28987 (=> (not res!52721) (not e!68978))))

(assert (=> d!28987 (= res!52721 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!28987 (= lt!54241 e!68983)))

(declare-fun c!18476 () Bool)

(assert (=> d!28987 (= c!18476 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28987 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!28987 (= (getCurrentListMap!469 (_keys!4287 newMap!16) (ite c!18323 (_values!2564 newMap!16) lt!53882) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54251)))

(declare-fun b!105984 () Bool)

(declare-fun call!11185 () ListLongMap!1533)

(assert (=> b!105984 (= e!68983 (+!139 call!11185 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun bm!11184 () Bool)

(assert (=> bm!11184 (= call!11188 (contains!814 lt!54251 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105993 () Bool)

(assert (=> b!105993 (= e!68977 (= (apply!98 lt!54251 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!105994 () Bool)

(assert (=> b!105994 (= e!68974 call!11190)))

(declare-fun b!105995 () Bool)

(assert (=> b!105995 (= e!68984 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11185 () Bool)

(assert (=> bm!11185 (= call!11186 call!11189)))

(declare-fun bm!11186 () Bool)

(assert (=> bm!11186 (= call!11190 call!11185)))

(declare-fun b!105996 () Bool)

(declare-fun c!18474 () Bool)

(assert (=> b!105996 (= c!18474 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!105996 (= e!68974 e!68979)))

(declare-fun bm!11187 () Bool)

(assert (=> bm!11187 (= call!11185 (+!139 (ite c!18476 call!11187 (ite c!18472 call!11189 call!11186)) (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun b!105997 () Bool)

(declare-fun lt!54249 () Unit!3212)

(assert (=> b!105997 (= e!68973 lt!54249)))

(declare-fun lt!54236 () ListLongMap!1533)

(assert (=> b!105997 (= lt!54236 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18323 (_values!2564 newMap!16) lt!53882) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54250 () (_ BitVec 64))

(assert (=> b!105997 (= lt!54250 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54237 () (_ BitVec 64))

(assert (=> b!105997 (= lt!54237 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54255 () Unit!3212)

(assert (=> b!105997 (= lt!54255 (addStillContains!74 lt!54236 lt!54250 (zeroValue!2456 newMap!16) lt!54237))))

(assert (=> b!105997 (contains!814 (+!139 lt!54236 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16))) lt!54237)))

(declare-fun lt!54248 () Unit!3212)

(assert (=> b!105997 (= lt!54248 lt!54255)))

(declare-fun lt!54244 () ListLongMap!1533)

(assert (=> b!105997 (= lt!54244 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18323 (_values!2564 newMap!16) lt!53882) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54235 () (_ BitVec 64))

(assert (=> b!105997 (= lt!54235 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54245 () (_ BitVec 64))

(assert (=> b!105997 (= lt!54245 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54252 () Unit!3212)

(assert (=> b!105997 (= lt!54252 (addApplyDifferent!74 lt!54244 lt!54235 (minValue!2456 newMap!16) lt!54245))))

(assert (=> b!105997 (= (apply!98 (+!139 lt!54244 (tuple2!2361 lt!54235 (minValue!2456 newMap!16))) lt!54245) (apply!98 lt!54244 lt!54245))))

(declare-fun lt!54239 () Unit!3212)

(assert (=> b!105997 (= lt!54239 lt!54252)))

(declare-fun lt!54247 () ListLongMap!1533)

(assert (=> b!105997 (= lt!54247 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18323 (_values!2564 newMap!16) lt!53882) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54256 () (_ BitVec 64))

(assert (=> b!105997 (= lt!54256 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54242 () (_ BitVec 64))

(assert (=> b!105997 (= lt!54242 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54238 () Unit!3212)

(assert (=> b!105997 (= lt!54238 (addApplyDifferent!74 lt!54247 lt!54256 (zeroValue!2456 newMap!16) lt!54242))))

(assert (=> b!105997 (= (apply!98 (+!139 lt!54247 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16))) lt!54242) (apply!98 lt!54247 lt!54242))))

(declare-fun lt!54253 () Unit!3212)

(assert (=> b!105997 (= lt!54253 lt!54238)))

(declare-fun lt!54246 () ListLongMap!1533)

(assert (=> b!105997 (= lt!54246 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18323 (_values!2564 newMap!16) lt!53882) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54240 () (_ BitVec 64))

(assert (=> b!105997 (= lt!54240 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54254 () (_ BitVec 64))

(assert (=> b!105997 (= lt!54254 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105997 (= lt!54249 (addApplyDifferent!74 lt!54246 lt!54240 (minValue!2456 newMap!16) lt!54254))))

(assert (=> b!105997 (= (apply!98 (+!139 lt!54246 (tuple2!2361 lt!54240 (minValue!2456 newMap!16))) lt!54254) (apply!98 lt!54246 lt!54254))))

(declare-fun b!105998 () Bool)

(assert (=> b!105998 (= e!68978 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11188 () Bool)

(assert (=> bm!11188 (= call!11187 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18323 (_values!2564 newMap!16) lt!53882) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105999 () Bool)

(assert (=> b!105999 (= e!68975 e!68982)))

(declare-fun res!52718 () Bool)

(assert (=> b!105999 (=> (not res!52718) (not e!68982))))

(assert (=> b!105999 (= res!52718 (contains!814 lt!54251 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105999 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!28987 c!18476) b!105984))

(assert (= (and d!28987 (not c!18476)) b!105991))

(assert (= (and b!105991 c!18472) b!105994))

(assert (= (and b!105991 (not c!18472)) b!105996))

(assert (= (and b!105996 c!18474) b!105981))

(assert (= (and b!105996 (not c!18474)) b!105987))

(assert (= (or b!105981 b!105987) bm!11185))

(assert (= (or b!105994 bm!11185) bm!11182))

(assert (= (or b!105994 b!105981) bm!11186))

(assert (= (or b!105984 bm!11182) bm!11188))

(assert (= (or b!105984 bm!11186) bm!11187))

(assert (= (and d!28987 res!52721) b!105998))

(assert (= (and d!28987 c!18475) b!105997))

(assert (= (and d!28987 (not c!18475)) b!105988))

(assert (= (and d!28987 res!52717) b!105982))

(assert (= (and b!105982 res!52716) b!105995))

(assert (= (and b!105982 (not res!52722)) b!105999))

(assert (= (and b!105999 res!52718) b!105986))

(assert (= (and b!105982 res!52719) b!105985))

(assert (= (and b!105985 c!18473) b!105983))

(assert (= (and b!105985 (not c!18473)) b!105990))

(assert (= (and b!105983 res!52723) b!105993))

(assert (= (or b!105983 b!105990) bm!11183))

(assert (= (and b!105985 res!52720) b!105992))

(assert (= (and b!105992 c!18477) b!105980))

(assert (= (and b!105992 (not c!18477)) b!105989))

(assert (= (and b!105980 res!52715) b!105979))

(assert (= (or b!105980 b!105989) bm!11184))

(declare-fun b_lambda!4739 () Bool)

(assert (=> (not b_lambda!4739) (not b!105986)))

(assert (=> b!105986 t!5683))

(declare-fun b_and!6541 () Bool)

(assert (= b_and!6537 (and (=> t!5683 result!3459) b_and!6541)))

(assert (=> b!105986 t!5685))

(declare-fun b_and!6543 () Bool)

(assert (= b_and!6539 (and (=> t!5685 result!3461) b_and!6543)))

(declare-fun m!118275 () Bool)

(assert (=> b!105986 m!118275))

(assert (=> b!105986 m!117653))

(declare-fun m!118277 () Bool)

(assert (=> b!105986 m!118277))

(assert (=> b!105986 m!118275))

(assert (=> b!105986 m!117653))

(assert (=> b!105986 m!117657))

(declare-fun m!118279 () Bool)

(assert (=> b!105986 m!118279))

(assert (=> b!105986 m!117657))

(assert (=> d!28987 m!117661))

(assert (=> b!105995 m!117657))

(assert (=> b!105995 m!117657))

(assert (=> b!105995 m!117663))

(declare-fun m!118281 () Bool)

(assert (=> bm!11187 m!118281))

(declare-fun m!118283 () Bool)

(assert (=> bm!11188 m!118283))

(assert (=> b!105998 m!117657))

(assert (=> b!105998 m!117657))

(assert (=> b!105998 m!117663))

(declare-fun m!118285 () Bool)

(assert (=> b!105993 m!118285))

(declare-fun m!118287 () Bool)

(assert (=> bm!11183 m!118287))

(declare-fun m!118289 () Bool)

(assert (=> b!105997 m!118289))

(declare-fun m!118291 () Bool)

(assert (=> b!105997 m!118291))

(declare-fun m!118293 () Bool)

(assert (=> b!105997 m!118293))

(declare-fun m!118295 () Bool)

(assert (=> b!105997 m!118295))

(assert (=> b!105997 m!118283))

(declare-fun m!118297 () Bool)

(assert (=> b!105997 m!118297))

(declare-fun m!118299 () Bool)

(assert (=> b!105997 m!118299))

(declare-fun m!118301 () Bool)

(assert (=> b!105997 m!118301))

(declare-fun m!118303 () Bool)

(assert (=> b!105997 m!118303))

(assert (=> b!105997 m!118299))

(assert (=> b!105997 m!118303))

(declare-fun m!118305 () Bool)

(assert (=> b!105997 m!118305))

(declare-fun m!118307 () Bool)

(assert (=> b!105997 m!118307))

(declare-fun m!118309 () Bool)

(assert (=> b!105997 m!118309))

(assert (=> b!105997 m!117657))

(declare-fun m!118311 () Bool)

(assert (=> b!105997 m!118311))

(declare-fun m!118313 () Bool)

(assert (=> b!105997 m!118313))

(assert (=> b!105997 m!118297))

(declare-fun m!118315 () Bool)

(assert (=> b!105997 m!118315))

(assert (=> b!105997 m!118291))

(declare-fun m!118317 () Bool)

(assert (=> b!105997 m!118317))

(assert (=> b!105999 m!117657))

(assert (=> b!105999 m!117657))

(declare-fun m!118319 () Bool)

(assert (=> b!105999 m!118319))

(declare-fun m!118321 () Bool)

(assert (=> b!105984 m!118321))

(declare-fun m!118323 () Bool)

(assert (=> b!105979 m!118323))

(declare-fun m!118325 () Bool)

(assert (=> bm!11184 m!118325))

(assert (=> bm!11099 d!28987))

(declare-fun d!28989 () Bool)

(declare-fun isEmpty!378 (List!1596) Bool)

(assert (=> d!28989 (= (isEmpty!376 lt!53992) (isEmpty!378 (toList!782 lt!53992)))))

(declare-fun bs!4355 () Bool)

(assert (= bs!4355 d!28989))

(declare-fun m!118327 () Bool)

(assert (=> bs!4355 m!118327))

(assert (=> b!105562 d!28989))

(declare-fun d!28991 () Bool)

(declare-fun lt!54257 () Bool)

(assert (=> d!28991 (= lt!54257 (select (content!111 (toList!782 lt!53974)) lt!53713))))

(declare-fun e!68986 () Bool)

(assert (=> d!28991 (= lt!54257 e!68986)))

(declare-fun res!52724 () Bool)

(assert (=> d!28991 (=> (not res!52724) (not e!68986))))

(assert (=> d!28991 (= res!52724 ((_ is Cons!1592) (toList!782 lt!53974)))))

(assert (=> d!28991 (= (contains!816 (toList!782 lt!53974) lt!53713) lt!54257)))

(declare-fun b!106000 () Bool)

(declare-fun e!68987 () Bool)

(assert (=> b!106000 (= e!68986 e!68987)))

(declare-fun res!52725 () Bool)

(assert (=> b!106000 (=> res!52725 e!68987)))

(assert (=> b!106000 (= res!52725 (= (h!2189 (toList!782 lt!53974)) lt!53713))))

(declare-fun b!106001 () Bool)

(assert (=> b!106001 (= e!68987 (contains!816 (t!5671 (toList!782 lt!53974)) lt!53713))))

(assert (= (and d!28991 res!52724) b!106000))

(assert (= (and b!106000 (not res!52725)) b!106001))

(declare-fun m!118329 () Bool)

(assert (=> d!28991 m!118329))

(declare-fun m!118331 () Bool)

(assert (=> d!28991 m!118331))

(declare-fun m!118333 () Bool)

(assert (=> b!106001 m!118333))

(assert (=> b!105530 d!28991))

(declare-fun d!28993 () Bool)

(assert (=> d!28993 (= (apply!98 lt!53948 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1338 (getValueByKey!157 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4356 () Bool)

(assert (= bs!4356 d!28993))

(assert (=> bs!4356 m!118069))

(assert (=> bs!4356 m!118069))

(declare-fun m!118335 () Bool)

(assert (=> bs!4356 m!118335))

(assert (=> b!105491 d!28993))

(declare-fun d!28995 () Bool)

(declare-fun e!68988 () Bool)

(assert (=> d!28995 e!68988))

(declare-fun res!52726 () Bool)

(assert (=> d!28995 (=> (not res!52726) (not e!68988))))

(declare-fun lt!54259 () ListLongMap!1533)

(assert (=> d!28995 (= res!52726 (contains!814 lt!54259 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun lt!54258 () List!1596)

(assert (=> d!28995 (= lt!54259 (ListLongMap!1534 lt!54258))))

(declare-fun lt!54261 () Unit!3212)

(declare-fun lt!54260 () Unit!3212)

(assert (=> d!28995 (= lt!54261 lt!54260)))

(assert (=> d!28995 (= (getValueByKey!157 lt!54258 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) (Some!162 (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!28995 (= lt!54260 (lemmaContainsTupThenGetReturnValue!73 lt!54258 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!28995 (= lt!54258 (insertStrictlySorted!76 (toList!782 (ite c!18322 call!11100 call!11088)) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!28995 (= (+!139 (ite c!18322 call!11100 call!11088) (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54259)))

(declare-fun b!106002 () Bool)

(declare-fun res!52727 () Bool)

(assert (=> b!106002 (=> (not res!52727) (not e!68988))))

(assert (=> b!106002 (= res!52727 (= (getValueByKey!157 (toList!782 lt!54259) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) (Some!162 (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun b!106003 () Bool)

(assert (=> b!106003 (= e!68988 (contains!816 (toList!782 lt!54259) (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (= (and d!28995 res!52726) b!106002))

(assert (= (and b!106002 res!52727) b!106003))

(declare-fun m!118337 () Bool)

(assert (=> d!28995 m!118337))

(declare-fun m!118339 () Bool)

(assert (=> d!28995 m!118339))

(declare-fun m!118341 () Bool)

(assert (=> d!28995 m!118341))

(declare-fun m!118343 () Bool)

(assert (=> d!28995 m!118343))

(declare-fun m!118345 () Bool)

(assert (=> b!106002 m!118345))

(declare-fun m!118347 () Bool)

(assert (=> b!106003 m!118347))

(assert (=> bm!11096 d!28995))

(declare-fun d!28997 () Bool)

(declare-fun res!52732 () Bool)

(declare-fun e!68993 () Bool)

(assert (=> d!28997 (=> res!52732 e!68993)))

(assert (=> d!28997 (= res!52732 (and ((_ is Cons!1592) (toList!782 lt!53721)) (= (_1!1191 (h!2189 (toList!782 lt!53721))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!28997 (= (containsKey!160 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) e!68993)))

(declare-fun b!106008 () Bool)

(declare-fun e!68994 () Bool)

(assert (=> b!106008 (= e!68993 e!68994)))

(declare-fun res!52733 () Bool)

(assert (=> b!106008 (=> (not res!52733) (not e!68994))))

(assert (=> b!106008 (= res!52733 (and (or (not ((_ is Cons!1592) (toList!782 lt!53721))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53721))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))) ((_ is Cons!1592) (toList!782 lt!53721)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53721))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(declare-fun b!106009 () Bool)

(assert (=> b!106009 (= e!68994 (containsKey!160 (t!5671 (toList!782 lt!53721)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!28997 (not res!52732)) b!106008))

(assert (= (and b!106008 res!52733) b!106009))

(assert (=> b!106009 m!117261))

(declare-fun m!118349 () Bool)

(assert (=> b!106009 m!118349))

(assert (=> d!28771 d!28997))

(declare-fun d!28999 () Bool)

(declare-fun e!68995 () Bool)

(assert (=> d!28999 e!68995))

(declare-fun res!52734 () Bool)

(assert (=> d!28999 (=> (not res!52734) (not e!68995))))

(declare-fun lt!54263 () ListLongMap!1533)

(assert (=> d!28999 (= res!52734 (contains!814 lt!54263 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun lt!54262 () List!1596)

(assert (=> d!28999 (= lt!54263 (ListLongMap!1534 lt!54262))))

(declare-fun lt!54265 () Unit!3212)

(declare-fun lt!54264 () Unit!3212)

(assert (=> d!28999 (= lt!54265 lt!54264)))

(assert (=> d!28999 (= (getValueByKey!157 lt!54262 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!28999 (= lt!54264 (lemmaContainsTupThenGetReturnValue!73 lt!54262 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!28999 (= lt!54262 (insertStrictlySorted!76 (toList!782 call!11091) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!28999 (= (+!139 call!11091 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) lt!54263)))

(declare-fun b!106010 () Bool)

(declare-fun res!52735 () Bool)

(assert (=> b!106010 (=> (not res!52735) (not e!68995))))

(assert (=> b!106010 (= res!52735 (= (getValueByKey!157 (toList!782 lt!54263) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!106011 () Bool)

(assert (=> b!106011 (= e!68995 (contains!816 (toList!782 lt!54263) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(assert (= (and d!28999 res!52734) b!106010))

(assert (= (and b!106010 res!52735) b!106011))

(declare-fun m!118351 () Bool)

(assert (=> d!28999 m!118351))

(declare-fun m!118353 () Bool)

(assert (=> d!28999 m!118353))

(declare-fun m!118355 () Bool)

(assert (=> d!28999 m!118355))

(declare-fun m!118357 () Bool)

(assert (=> d!28999 m!118357))

(declare-fun m!118359 () Bool)

(assert (=> b!106010 m!118359))

(declare-fun m!118361 () Bool)

(assert (=> b!106011 m!118361))

(assert (=> b!105437 d!28999))

(declare-fun d!29001 () Bool)

(declare-fun e!68996 () Bool)

(assert (=> d!29001 e!68996))

(declare-fun res!52736 () Bool)

(assert (=> d!29001 (=> (not res!52736) (not e!68996))))

(declare-fun lt!54267 () ListLongMap!1533)

(assert (=> d!29001 (= res!52736 (contains!814 lt!54267 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun lt!54266 () List!1596)

(assert (=> d!29001 (= lt!54267 (ListLongMap!1534 lt!54266))))

(declare-fun lt!54269 () Unit!3212)

(declare-fun lt!54268 () Unit!3212)

(assert (=> d!29001 (= lt!54269 lt!54268)))

(assert (=> d!29001 (= (getValueByKey!157 lt!54266 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) (Some!162 (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29001 (= lt!54268 (lemmaContainsTupThenGetReturnValue!73 lt!54266 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29001 (= lt!54266 (insertStrictlySorted!76 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126))) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29001 (= (+!139 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126)) (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54267)))

(declare-fun b!106012 () Bool)

(declare-fun res!52737 () Bool)

(assert (=> b!106012 (=> (not res!52737) (not e!68996))))

(assert (=> b!106012 (= res!52737 (= (getValueByKey!157 (toList!782 lt!54267) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) (Some!162 (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106013 () Bool)

(assert (=> b!106013 (= e!68996 (contains!816 (toList!782 lt!54267) (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (= (and d!29001 res!52736) b!106012))

(assert (= (and b!106012 res!52737) b!106013))

(declare-fun m!118363 () Bool)

(assert (=> d!29001 m!118363))

(declare-fun m!118365 () Bool)

(assert (=> d!29001 m!118365))

(declare-fun m!118367 () Bool)

(assert (=> d!29001 m!118367))

(declare-fun m!118369 () Bool)

(assert (=> d!29001 m!118369))

(declare-fun m!118371 () Bool)

(assert (=> b!106012 m!118371))

(declare-fun m!118373 () Bool)

(assert (=> b!106013 m!118373))

(assert (=> bm!11127 d!29001))

(declare-fun d!29003 () Bool)

(declare-fun e!68997 () Bool)

(assert (=> d!29003 e!68997))

(declare-fun res!52738 () Bool)

(assert (=> d!29003 (=> res!52738 e!68997)))

(declare-fun lt!54271 () Bool)

(assert (=> d!29003 (= res!52738 (not lt!54271))))

(declare-fun lt!54272 () Bool)

(assert (=> d!29003 (= lt!54271 lt!54272)))

(declare-fun lt!54273 () Unit!3212)

(declare-fun e!68998 () Unit!3212)

(assert (=> d!29003 (= lt!54273 e!68998)))

(declare-fun c!18478 () Bool)

(assert (=> d!29003 (= c!18478 lt!54272)))

(assert (=> d!29003 (= lt!54272 (containsKey!160 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29003 (= (contains!814 lt!53992 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54271)))

(declare-fun b!106014 () Bool)

(declare-fun lt!54270 () Unit!3212)

(assert (=> b!106014 (= e!68998 lt!54270)))

(assert (=> b!106014 (= lt!54270 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106014 (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106015 () Bool)

(declare-fun Unit!3239 () Unit!3212)

(assert (=> b!106015 (= e!68998 Unit!3239)))

(declare-fun b!106016 () Bool)

(assert (=> b!106016 (= e!68997 (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29003 c!18478) b!106014))

(assert (= (and d!29003 (not c!18478)) b!106015))

(assert (= (and d!29003 (not res!52738)) b!106016))

(declare-fun m!118375 () Bool)

(assert (=> d!29003 m!118375))

(declare-fun m!118377 () Bool)

(assert (=> b!106014 m!118377))

(declare-fun m!118379 () Bool)

(assert (=> b!106014 m!118379))

(assert (=> b!106014 m!118379))

(declare-fun m!118381 () Bool)

(assert (=> b!106014 m!118381))

(assert (=> b!106016 m!118379))

(assert (=> b!106016 m!118379))

(assert (=> b!106016 m!118381))

(assert (=> b!105565 d!29003))

(declare-fun d!29005 () Bool)

(assert (=> d!29005 (= (map!1283 (_2!1192 lt!53868)) (getCurrentListMap!469 (_keys!4287 (_2!1192 lt!53868)) (_values!2564 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868)) (extraKeys!2386 (_2!1192 lt!53868)) (zeroValue!2456 (_2!1192 lt!53868)) (minValue!2456 (_2!1192 lt!53868)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1192 lt!53868))))))

(declare-fun bs!4357 () Bool)

(assert (= bs!4357 d!29005))

(declare-fun m!118383 () Bool)

(assert (=> bs!4357 m!118383))

(assert (=> bm!11091 d!29005))

(declare-fun d!29007 () Bool)

(declare-fun res!52739 () Bool)

(declare-fun e!68999 () Bool)

(assert (=> d!29007 (=> res!52739 e!68999)))

(assert (=> d!29007 (= res!52739 (= (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29007 (= (arrayContainsKey!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000) e!68999)))

(declare-fun b!106017 () Bool)

(declare-fun e!69000 () Bool)

(assert (=> b!106017 (= e!68999 e!69000)))

(declare-fun res!52740 () Bool)

(assert (=> b!106017 (=> (not res!52740) (not e!69000))))

(assert (=> b!106017 (= res!52740 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106018 () Bool)

(assert (=> b!106018 (= e!69000 (arrayContainsKey!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!29007 (not res!52739)) b!106017))

(assert (= (and b!106017 res!52740) b!106018))

(assert (=> d!29007 m!117657))

(assert (=> b!106018 m!117261))

(declare-fun m!118385 () Bool)

(assert (=> b!106018 m!118385))

(assert (=> bm!11101 d!29007))

(declare-fun b!106053 () Bool)

(declare-fun e!69022 () Bool)

(declare-fun e!69024 () Bool)

(assert (=> b!106053 (= e!69022 e!69024)))

(declare-fun res!52765 () Bool)

(declare-fun call!11203 () Bool)

(assert (=> b!106053 (= res!52765 call!11203)))

(assert (=> b!106053 (=> (not res!52765) (not e!69024))))

(declare-fun b!106054 () Bool)

(declare-fun res!52760 () Bool)

(declare-fun lt!54356 () SeekEntryResult!253)

(assert (=> b!106054 (= res!52760 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3163 lt!54356)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106054 (=> (not res!52760) (not e!69024))))

(declare-fun e!69017 () Bool)

(declare-fun lt!54342 () tuple2!2362)

(declare-fun b!106055 () Bool)

(assert (=> b!106055 (= e!69017 (= (map!1283 (_2!1192 lt!54342)) (+!139 (map!1283 newMap!16) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106056 () Bool)

(declare-fun res!52764 () Bool)

(assert (=> b!106056 (=> (not res!52764) (not e!69017))))

(assert (=> b!106056 (= res!52764 (contains!814 (map!1283 (_2!1192 lt!54342)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun bm!11197 () Bool)

(declare-fun call!11202 () Bool)

(assert (=> bm!11197 (= call!11202 (arrayContainsKey!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!106057 () Bool)

(declare-fun e!69018 () Bool)

(assert (=> b!106057 (= e!69018 (not call!11202))))

(declare-fun b!106058 () Bool)

(declare-fun res!52759 () Bool)

(assert (=> b!106058 (=> (not res!52759) (not e!69018))))

(assert (=> b!106058 (= res!52759 call!11203)))

(declare-fun e!69020 () Bool)

(assert (=> b!106058 (= e!69020 e!69018)))

(declare-fun b!106059 () Bool)

(declare-fun e!69023 () Unit!3212)

(declare-fun Unit!3240 () Unit!3212)

(assert (=> b!106059 (= e!69023 Unit!3240)))

(declare-fun b!106060 () Bool)

(declare-fun c!18489 () Bool)

(assert (=> b!106060 (= c!18489 ((_ is MissingVacant!253) lt!54356))))

(assert (=> b!106060 (= e!69020 e!69022)))

(declare-fun lt!54352 () SeekEntryResult!253)

(declare-fun c!18488 () Bool)

(declare-fun c!18487 () Bool)

(declare-fun bm!11198 () Bool)

(declare-fun call!11201 () Bool)

(assert (=> bm!11198 (= call!11201 (inRange!0 (ite c!18488 (index!3161 lt!54352) (ite c!18487 (index!3160 lt!54356) (index!3163 lt!54356))) (mask!6727 newMap!16)))))

(declare-fun b!106061 () Bool)

(declare-fun e!69021 () Unit!3212)

(declare-fun Unit!3241 () Unit!3212)

(assert (=> b!106061 (= e!69021 Unit!3241)))

(declare-fun lt!54361 () Unit!3212)

(assert (=> b!106061 (= lt!54361 (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(declare-fun call!11200 () SeekEntryResult!253)

(assert (=> b!106061 (= lt!54352 call!11200)))

(declare-fun res!52761 () Bool)

(assert (=> b!106061 (= res!52761 ((_ is Found!253) lt!54352))))

(declare-fun e!69019 () Bool)

(assert (=> b!106061 (=> (not res!52761) (not e!69019))))

(assert (=> b!106061 e!69019))

(declare-fun lt!54359 () Unit!3212)

(assert (=> b!106061 (= lt!54359 lt!54361)))

(assert (=> b!106061 false))

(declare-fun bm!11199 () Bool)

(assert (=> bm!11199 (= call!11203 call!11201)))

(declare-fun b!106062 () Bool)

(assert (=> b!106062 (= e!69019 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!54352)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!106063 () Bool)

(declare-fun res!52762 () Bool)

(assert (=> b!106063 (= res!52762 call!11201)))

(assert (=> b!106063 (=> (not res!52762) (not e!69019))))

(declare-fun b!106064 () Bool)

(declare-fun res!52763 () Bool)

(assert (=> b!106064 (=> (not res!52763) (not e!69017))))

(assert (=> b!106064 (= res!52763 (valid!421 (_2!1192 lt!54342)))))

(declare-fun b!106065 () Bool)

(assert (=> b!106065 (= e!69022 ((_ is Undefined!253) lt!54356))))

(declare-fun b!106066 () Bool)

(declare-fun Unit!3242 () Unit!3212)

(assert (=> b!106066 (= e!69023 Unit!3242)))

(declare-fun lt!54345 () Unit!3212)

(declare-fun lemmaArrayContainsKeyThenInListMap!30 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) (_ BitVec 32) Int) Unit!3212)

(assert (=> b!106066 (= lt!54345 (lemmaArrayContainsKeyThenInListMap!30 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(assert (=> b!106066 (contains!814 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))

(declare-fun lt!54357 () Unit!3212)

(assert (=> b!106066 (= lt!54357 lt!54345)))

(assert (=> b!106066 false))

(declare-fun b!106067 () Bool)

(assert (=> b!106067 (= e!69024 (not call!11202))))

(declare-fun b!106068 () Bool)

(declare-fun res!52766 () Bool)

(assert (=> b!106068 (=> (not res!52766) (not e!69018))))

(assert (=> b!106068 (= res!52766 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3160 lt!54356)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!29009 () Bool)

(assert (=> d!29009 e!69017))

(declare-fun res!52767 () Bool)

(assert (=> d!29009 (=> (not res!52767) (not e!69017))))

(assert (=> d!29009 (= res!52767 (_1!1192 lt!54342))))

(assert (=> d!29009 (= lt!54342 (tuple2!2363 true (LongMapFixedSize!899 (defaultEntry!2581 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (bvadd (_size!498 newMap!16) #b00000000000000000000000000000001) (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (_vacant!498 newMap!16))))))

(declare-fun lt!54336 () Unit!3212)

(declare-fun lt!54337 () Unit!3212)

(assert (=> d!29009 (= lt!54336 lt!54337)))

(declare-fun lt!54360 () array!4331)

(declare-fun lt!54335 () array!4333)

(assert (=> d!29009 (contains!814 (getCurrentListMap!469 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))))))

(assert (=> d!29009 (= lt!54337 (lemmaValidKeyInArrayIsInListMap!107 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (defaultEntry!2581 newMap!16)))))

(assert (=> d!29009 (= lt!54335 (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))))

(assert (=> d!29009 (= lt!54360 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))

(declare-fun lt!54346 () Unit!3212)

(declare-fun lt!54362 () Unit!3212)

(assert (=> d!29009 (= lt!54346 lt!54362)))

(declare-fun lt!54354 () array!4331)

(assert (=> d!29009 (= (arrayCountValidKeys!0 lt!54354 (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (bvadd (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4331 (_ BitVec 32)) Unit!3212)

(assert (=> d!29009 (= lt!54362 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!54354 (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))))))

(assert (=> d!29009 (= lt!54354 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))

(declare-fun lt!54341 () Unit!3212)

(declare-fun lt!54353 () Unit!3212)

(assert (=> d!29009 (= lt!54341 lt!54353)))

(declare-fun lt!54358 () array!4331)

(assert (=> d!29009 (arrayContainsKey!0 lt!54358 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!29009 (= lt!54353 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!54358 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))))))

(assert (=> d!29009 (= lt!54358 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))

(declare-fun lt!54351 () Unit!3212)

(declare-fun lt!54339 () Unit!3212)

(assert (=> d!29009 (= lt!54351 lt!54339)))

(assert (=> d!29009 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (getCurrentListMap!469 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!30 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) (_ BitVec 64) V!3217 Int) Unit!3212)

(assert (=> d!29009 (= lt!54339 (lemmaAddValidKeyToArrayThenAddPairToListMap!30 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54348 () Unit!3212)

(declare-fun lt!54349 () Unit!3212)

(assert (=> d!29009 (= lt!54348 lt!54349)))

(assert (=> d!29009 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (mask!6727 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4331 (_ BitVec 32) (_ BitVec 32)) Unit!3212)

(assert (=> d!29009 (= lt!54349 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (mask!6727 newMap!16)))))

(declare-fun lt!54363 () Unit!3212)

(declare-fun lt!54350 () Unit!3212)

(assert (=> d!29009 (= lt!54363 lt!54350)))

(assert (=> d!29009 (= (arrayCountValidKeys!0 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4287 newMap!16) #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4331 (_ BitVec 32) (_ BitVec 64)) Unit!3212)

(assert (=> d!29009 (= lt!54350 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4287 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun lt!54340 () Unit!3212)

(declare-fun lt!54338 () Unit!3212)

(assert (=> d!29009 (= lt!54340 lt!54338)))

(declare-fun lt!54347 () List!1597)

(declare-fun lt!54355 () (_ BitVec 32))

(assert (=> d!29009 (arrayNoDuplicates!0 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) lt!54355 lt!54347)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4331 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1597) Unit!3212)

(assert (=> d!29009 (= lt!54338 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) lt!54355 lt!54347))))

(assert (=> d!29009 (= lt!54347 Nil!1594)))

(assert (=> d!29009 (= lt!54355 #b00000000000000000000000000000000)))

(declare-fun lt!54334 () Unit!3212)

(assert (=> d!29009 (= lt!54334 e!69023)))

(declare-fun c!18490 () Bool)

(assert (=> d!29009 (= c!18490 (arrayContainsKey!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!54343 () Unit!3212)

(assert (=> d!29009 (= lt!54343 e!69021)))

(assert (=> d!29009 (= c!18488 (contains!814 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29009 (valid!421 newMap!16)))

(assert (=> d!29009 (= (updateHelperNewKey!47 newMap!16 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))) lt!54342)))

(declare-fun bm!11200 () Bool)

(assert (=> bm!11200 (= call!11200 (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(declare-fun b!106069 () Bool)

(declare-fun lt!54344 () Unit!3212)

(assert (=> b!106069 (= e!69021 lt!54344)))

(assert (=> b!106069 (= lt!54344 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(assert (=> b!106069 (= lt!54356 call!11200)))

(assert (=> b!106069 (= c!18487 ((_ is MissingZero!253) lt!54356))))

(assert (=> b!106069 e!69020))

(assert (= (and d!29009 c!18488) b!106061))

(assert (= (and d!29009 (not c!18488)) b!106069))

(assert (= (and b!106061 res!52761) b!106063))

(assert (= (and b!106063 res!52762) b!106062))

(assert (= (and b!106069 c!18487) b!106058))

(assert (= (and b!106069 (not c!18487)) b!106060))

(assert (= (and b!106058 res!52759) b!106068))

(assert (= (and b!106068 res!52766) b!106057))

(assert (= (and b!106060 c!18489) b!106053))

(assert (= (and b!106060 (not c!18489)) b!106065))

(assert (= (and b!106053 res!52765) b!106054))

(assert (= (and b!106054 res!52760) b!106067))

(assert (= (or b!106058 b!106053) bm!11199))

(assert (= (or b!106057 b!106067) bm!11197))

(assert (= (or b!106063 bm!11199) bm!11198))

(assert (= (or b!106061 b!106069) bm!11200))

(assert (= (and d!29009 c!18490) b!106066))

(assert (= (and d!29009 (not c!18490)) b!106059))

(assert (= (and d!29009 res!52767) b!106064))

(assert (= (and b!106064 res!52763) b!106056))

(assert (= (and b!106056 res!52764) b!106055))

(declare-fun m!118387 () Bool)

(assert (=> bm!11198 m!118387))

(declare-fun m!118389 () Bool)

(assert (=> b!106054 m!118389))

(assert (=> bm!11197 m!117261))

(assert (=> bm!11197 m!117431))

(declare-fun m!118391 () Bool)

(assert (=> b!106056 m!118391))

(assert (=> b!106056 m!118391))

(assert (=> b!106056 m!117261))

(declare-fun m!118393 () Bool)

(assert (=> b!106056 m!118393))

(assert (=> b!106061 m!117261))

(assert (=> b!106061 m!117457))

(declare-fun m!118395 () Bool)

(assert (=> b!106068 m!118395))

(declare-fun m!118397 () Bool)

(assert (=> d!29009 m!118397))

(declare-fun m!118399 () Bool)

(assert (=> d!29009 m!118399))

(declare-fun m!118401 () Bool)

(assert (=> d!29009 m!118401))

(assert (=> d!29009 m!117451))

(assert (=> d!29009 m!117261))

(declare-fun m!118403 () Bool)

(assert (=> d!29009 m!118403))

(assert (=> d!29009 m!117451))

(assert (=> d!29009 m!117855))

(assert (=> d!29009 m!117451))

(assert (=> d!29009 m!117261))

(declare-fun m!118405 () Bool)

(assert (=> d!29009 m!118405))

(declare-fun m!118407 () Bool)

(assert (=> d!29009 m!118407))

(assert (=> d!29009 m!118397))

(declare-fun m!118409 () Bool)

(assert (=> d!29009 m!118409))

(assert (=> d!29009 m!117261))

(declare-fun m!118411 () Bool)

(assert (=> d!29009 m!118411))

(declare-fun m!118413 () Bool)

(assert (=> d!29009 m!118413))

(assert (=> d!29009 m!117251))

(declare-fun m!118415 () Bool)

(assert (=> d!29009 m!118415))

(declare-fun m!118417 () Bool)

(assert (=> d!29009 m!118417))

(assert (=> d!29009 m!117261))

(declare-fun m!118419 () Bool)

(assert (=> d!29009 m!118419))

(declare-fun m!118421 () Bool)

(assert (=> d!29009 m!118421))

(declare-fun m!118423 () Bool)

(assert (=> d!29009 m!118423))

(declare-fun m!118425 () Bool)

(assert (=> d!29009 m!118425))

(assert (=> d!29009 m!117261))

(declare-fun m!118427 () Bool)

(assert (=> d!29009 m!118427))

(assert (=> d!29009 m!117543))

(declare-fun m!118429 () Bool)

(assert (=> d!29009 m!118429))

(assert (=> d!29009 m!117261))

(assert (=> d!29009 m!117431))

(assert (=> d!29009 m!118407))

(assert (=> d!29009 m!117261))

(declare-fun m!118431 () Bool)

(assert (=> d!29009 m!118431))

(assert (=> d!29009 m!117261))

(declare-fun m!118433 () Bool)

(assert (=> d!29009 m!118433))

(assert (=> b!106055 m!118391))

(assert (=> b!106055 m!117269))

(assert (=> b!106055 m!117269))

(declare-fun m!118435 () Bool)

(assert (=> b!106055 m!118435))

(declare-fun m!118437 () Bool)

(assert (=> b!106064 m!118437))

(declare-fun m!118439 () Bool)

(assert (=> b!106062 m!118439))

(assert (=> b!106069 m!117261))

(assert (=> b!106069 m!117435))

(assert (=> bm!11200 m!117261))

(assert (=> bm!11200 m!117433))

(assert (=> b!106066 m!117261))

(declare-fun m!118441 () Bool)

(assert (=> b!106066 m!118441))

(assert (=> b!106066 m!117451))

(assert (=> b!106066 m!117451))

(assert (=> b!106066 m!117261))

(assert (=> b!106066 m!118403))

(assert (=> bm!11102 d!29009))

(assert (=> b!105558 d!28867))

(declare-fun d!29011 () Bool)

(declare-fun lt!54364 () Bool)

(assert (=> d!29011 (= lt!54364 (select (content!111 (toList!782 lt!53966)) lt!53713))))

(declare-fun e!69025 () Bool)

(assert (=> d!29011 (= lt!54364 e!69025)))

(declare-fun res!52768 () Bool)

(assert (=> d!29011 (=> (not res!52768) (not e!69025))))

(assert (=> d!29011 (= res!52768 ((_ is Cons!1592) (toList!782 lt!53966)))))

(assert (=> d!29011 (= (contains!816 (toList!782 lt!53966) lt!53713) lt!54364)))

(declare-fun b!106070 () Bool)

(declare-fun e!69026 () Bool)

(assert (=> b!106070 (= e!69025 e!69026)))

(declare-fun res!52769 () Bool)

(assert (=> b!106070 (=> res!52769 e!69026)))

(assert (=> b!106070 (= res!52769 (= (h!2189 (toList!782 lt!53966)) lt!53713))))

(declare-fun b!106071 () Bool)

(assert (=> b!106071 (= e!69026 (contains!816 (t!5671 (toList!782 lt!53966)) lt!53713))))

(assert (= (and d!29011 res!52768) b!106070))

(assert (= (and b!106070 (not res!52769)) b!106071))

(declare-fun m!118443 () Bool)

(assert (=> d!29011 m!118443))

(declare-fun m!118445 () Bool)

(assert (=> d!29011 m!118445))

(declare-fun m!118447 () Bool)

(assert (=> b!106071 m!118447))

(assert (=> b!105526 d!29011))

(declare-fun d!29013 () Bool)

(assert (=> d!29013 (= (apply!98 lt!53948 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1338 (getValueByKey!157 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4358 () Bool)

(assert (= bs!4358 d!29013))

(assert (=> bs!4358 m!118231))

(assert (=> bs!4358 m!118231))

(declare-fun m!118449 () Bool)

(assert (=> bs!4358 m!118449))

(assert (=> b!105505 d!29013))

(declare-fun d!29015 () Bool)

(declare-fun lt!54365 () Bool)

(assert (=> d!29015 (= lt!54365 (select (content!111 (toList!782 lt!53970)) lt!53718))))

(declare-fun e!69027 () Bool)

(assert (=> d!29015 (= lt!54365 e!69027)))

(declare-fun res!52770 () Bool)

(assert (=> d!29015 (=> (not res!52770) (not e!69027))))

(assert (=> d!29015 (= res!52770 ((_ is Cons!1592) (toList!782 lt!53970)))))

(assert (=> d!29015 (= (contains!816 (toList!782 lt!53970) lt!53718) lt!54365)))

(declare-fun b!106072 () Bool)

(declare-fun e!69028 () Bool)

(assert (=> b!106072 (= e!69027 e!69028)))

(declare-fun res!52771 () Bool)

(assert (=> b!106072 (=> res!52771 e!69028)))

(assert (=> b!106072 (= res!52771 (= (h!2189 (toList!782 lt!53970)) lt!53718))))

(declare-fun b!106073 () Bool)

(assert (=> b!106073 (= e!69028 (contains!816 (t!5671 (toList!782 lt!53970)) lt!53718))))

(assert (= (and d!29015 res!52770) b!106072))

(assert (= (and b!106072 (not res!52771)) b!106073))

(declare-fun m!118451 () Bool)

(assert (=> d!29015 m!118451))

(declare-fun m!118453 () Bool)

(assert (=> d!29015 m!118453))

(declare-fun m!118455 () Bool)

(assert (=> b!106073 m!118455))

(assert (=> b!105528 d!29015))

(declare-fun d!29017 () Bool)

(declare-fun e!69029 () Bool)

(assert (=> d!29017 e!69029))

(declare-fun res!52772 () Bool)

(assert (=> d!29017 (=> res!52772 e!69029)))

(declare-fun lt!54367 () Bool)

(assert (=> d!29017 (= res!52772 (not lt!54367))))

(declare-fun lt!54368 () Bool)

(assert (=> d!29017 (= lt!54367 lt!54368)))

(declare-fun lt!54369 () Unit!3212)

(declare-fun e!69030 () Unit!3212)

(assert (=> d!29017 (= lt!54369 e!69030)))

(declare-fun c!18491 () Bool)

(assert (=> d!29017 (= c!18491 lt!54368)))

(assert (=> d!29017 (= lt!54368 (containsKey!160 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!29017 (= (contains!814 lt!53992 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54367)))

(declare-fun b!106074 () Bool)

(declare-fun lt!54366 () Unit!3212)

(assert (=> b!106074 (= e!69030 lt!54366)))

(assert (=> b!106074 (= lt!54366 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!106074 (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!106075 () Bool)

(declare-fun Unit!3243 () Unit!3212)

(assert (=> b!106075 (= e!69030 Unit!3243)))

(declare-fun b!106076 () Bool)

(assert (=> b!106076 (= e!69029 (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!29017 c!18491) b!106074))

(assert (= (and d!29017 (not c!18491)) b!106075))

(assert (= (and d!29017 (not res!52772)) b!106076))

(assert (=> d!29017 m!117491))

(declare-fun m!118457 () Bool)

(assert (=> d!29017 m!118457))

(assert (=> b!106074 m!117491))

(declare-fun m!118459 () Bool)

(assert (=> b!106074 m!118459))

(assert (=> b!106074 m!117491))

(assert (=> b!106074 m!118073))

(assert (=> b!106074 m!118073))

(declare-fun m!118461 () Bool)

(assert (=> b!106074 m!118461))

(assert (=> b!106076 m!117491))

(assert (=> b!106076 m!118073))

(assert (=> b!106076 m!118073))

(assert (=> b!106076 m!118461))

(assert (=> b!105560 d!29017))

(declare-fun d!29019 () Bool)

(assert (=> d!29019 (= (get!1337 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105448 d!29019))

(assert (=> b!105507 d!28819))

(declare-fun mapNonEmpty!3941 () Bool)

(declare-fun mapRes!3941 () Bool)

(declare-fun tp!9917 () Bool)

(declare-fun e!69031 () Bool)

(assert (=> mapNonEmpty!3941 (= mapRes!3941 (and tp!9917 e!69031))))

(declare-fun mapKey!3941 () (_ BitVec 32))

(declare-fun mapValue!3941 () ValueCell!995)

(declare-fun mapRest!3941 () (Array (_ BitVec 32) ValueCell!995))

(assert (=> mapNonEmpty!3941 (= mapRest!3940 (store mapRest!3941 mapKey!3941 mapValue!3941))))

(declare-fun b!106078 () Bool)

(declare-fun e!69032 () Bool)

(assert (=> b!106078 (= e!69032 tp_is_empty!2677)))

(declare-fun mapIsEmpty!3941 () Bool)

(assert (=> mapIsEmpty!3941 mapRes!3941))

(declare-fun condMapEmpty!3941 () Bool)

(declare-fun mapDefault!3941 () ValueCell!995)

(assert (=> mapNonEmpty!3940 (= condMapEmpty!3941 (= mapRest!3940 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3941)))))

(assert (=> mapNonEmpty!3940 (= tp!9916 (and e!69032 mapRes!3941))))

(declare-fun b!106077 () Bool)

(assert (=> b!106077 (= e!69031 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3940 condMapEmpty!3941) mapIsEmpty!3941))

(assert (= (and mapNonEmpty!3940 (not condMapEmpty!3941)) mapNonEmpty!3941))

(assert (= (and mapNonEmpty!3941 ((_ is ValueCellFull!995) mapValue!3941)) b!106077))

(assert (= (and mapNonEmpty!3940 ((_ is ValueCellFull!995) mapDefault!3941)) b!106078))

(declare-fun m!118463 () Bool)

(assert (=> mapNonEmpty!3941 m!118463))

(declare-fun mapNonEmpty!3942 () Bool)

(declare-fun mapRes!3942 () Bool)

(declare-fun tp!9918 () Bool)

(declare-fun e!69033 () Bool)

(assert (=> mapNonEmpty!3942 (= mapRes!3942 (and tp!9918 e!69033))))

(declare-fun mapValue!3942 () ValueCell!995)

(declare-fun mapRest!3942 () (Array (_ BitVec 32) ValueCell!995))

(declare-fun mapKey!3942 () (_ BitVec 32))

(assert (=> mapNonEmpty!3942 (= mapRest!3939 (store mapRest!3942 mapKey!3942 mapValue!3942))))

(declare-fun b!106080 () Bool)

(declare-fun e!69034 () Bool)

(assert (=> b!106080 (= e!69034 tp_is_empty!2677)))

(declare-fun mapIsEmpty!3942 () Bool)

(assert (=> mapIsEmpty!3942 mapRes!3942))

(declare-fun condMapEmpty!3942 () Bool)

(declare-fun mapDefault!3942 () ValueCell!995)

(assert (=> mapNonEmpty!3939 (= condMapEmpty!3942 (= mapRest!3939 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3942)))))

(assert (=> mapNonEmpty!3939 (= tp!9915 (and e!69034 mapRes!3942))))

(declare-fun b!106079 () Bool)

(assert (=> b!106079 (= e!69033 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3939 condMapEmpty!3942) mapIsEmpty!3942))

(assert (= (and mapNonEmpty!3939 (not condMapEmpty!3942)) mapNonEmpty!3942))

(assert (= (and mapNonEmpty!3942 ((_ is ValueCellFull!995) mapValue!3942)) b!106079))

(assert (= (and mapNonEmpty!3939 ((_ is ValueCellFull!995) mapDefault!3942)) b!106080))

(declare-fun m!118465 () Bool)

(assert (=> mapNonEmpty!3942 m!118465))

(declare-fun b_lambda!4741 () Bool)

(assert (= b_lambda!4733 (or (and b!105184 b_free!2521) (and b!105174 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))) b_lambda!4741)))

(declare-fun b_lambda!4743 () Bool)

(assert (= b_lambda!4737 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4743)))

(declare-fun b_lambda!4745 () Bool)

(assert (= b_lambda!4739 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4745)))

(declare-fun b_lambda!4747 () Bool)

(assert (= b_lambda!4735 (or (and b!105184 b_free!2521) (and b!105174 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))) b_lambda!4747)))

(declare-fun b_lambda!4749 () Bool)

(assert (= b_lambda!4731 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4749)))

(check-sat (not d!28925) (not b!105642) (not bm!11183) (not b!105899) (not d!28903) (not bm!11137) (not d!28975) (not b!105854) (not b!105886) (not d!28829) (not d!28843) (not b!106013) (not b!105898) (not d!28847) (not d!28955) (not d!28927) (not b!106009) (not d!28853) (not b_lambda!4747) (not b!105845) (not b!105772) (not bm!11180) (not bm!11200) (not b!105820) (not b!105713) (not b!105971) (not d!29013) (not bm!11167) (not d!29009) (not d!28993) (not b!105797) (not b!105659) (not b!105728) (not bm!11152) (not b!106066) (not d!28817) (not d!28947) (not bm!11176) (not b!105799) (not bm!11177) (not d!28963) (not mapNonEmpty!3941) (not d!28833) (not b!105663) (not d!28825) (not d!28923) (not b!105984) (not d!28891) (not b!105974) (not b!105858) (not bm!11197) (not d!28841) (not b!105690) (not d!28835) (not d!28889) (not b!105810) (not b!105767) (not b!106010) (not d!28837) (not b!105846) (not b!105979) (not d!28983) (not b!105867) (not d!28899) (not b!105975) (not b!105619) (not b_lambda!4741) (not b!105883) (not d!28987) (not b!106076) (not b!105654) (not b!105747) (not b!105926) (not b!105774) (not b!105661) (not b!105668) (not b!105934) (not b!105847) (not d!28989) (not bm!11157) (not b!105717) (not d!28979) (not b!105871) (not b!106003) (not b!105777) (not bm!11160) (not b!105763) (not b!105977) (not b!105665) (not b!106061) (not b!105721) (not b!105628) (not d!28823) (not d!28933) (not b!105801) (not b!105901) (not mapNonEmpty!3942) (not b!105745) (not b!105790) (not d!28887) (not d!28849) (not b!106012) (not b!106071) (not b!105843) (not bm!11170) (not b!105787) (not b!105786) (not b!105730) (not b!105806) (not d!28877) (not d!29005) (not d!28821) (not b!106011) (not d!28859) (not b!105970) (not b!106014) (not d!28991) (not b!105611) (not b!105643) (not b!105718) tp_is_empty!2677 (not d!28999) (not b!105664) (not b!105882) (not d!28905) (not b!105927) (not b!105722) (not b!105904) (not b!105993) (not b!105793) (not d!28895) (not b!105784) (not d!28913) (not bm!11161) b_and!6541 (not d!28861) (not d!28973) (not b!105986) (not d!28981) (not b!105827) (not b_lambda!4743) (not b!105727) (not b!105660) (not b!106002) (not b!105672) (not d!29001) (not b!105875) (not b!105834) (not b_lambda!4725) (not d!28967) (not b!105832) (not d!28893) (not b!105894) (not b!105657) (not b!106018) (not d!28931) (not b!105973) (not bm!11154) (not b!105779) (not b!105632) (not b_lambda!4749) (not b!105769) (not d!28943) (not b!106055) (not b_lambda!4727) (not d!28941) (not bm!11144) (not b_next!2521) (not b!105630) (not b!105733) (not d!28897) (not d!28907) (not b!105880) (not bm!11181) (not b_lambda!4745) (not b!105891) (not d!28865) (not b!105662) (not bm!11140) (not d!28883) (not b!106074) (not b!105861) (not b!105683) (not d!28995) (not b_lambda!4729) (not d!28965) (not b!105736) (not b!106001) b_and!6543 (not b!105746) (not d!28839) (not bm!11164) (not b!106064) (not bm!11141) (not b!105872) (not d!28867) (not b!105997) (not b!106016) (not d!28949) (not d!28863) (not d!28885) (not b!105896) (not b!105617) (not b!105764) (not d!28969) (not d!28875) (not b!105612) (not b!105877) (not d!28911) (not bm!11165) (not d!28919) (not b!105724) (not b!105773) (not b!106056) (not b!105850) (not d!28959) (not b!105902) (not d!29015) (not b!105766) (not b!105825) (not d!28879) (not b!105750) (not bm!11188) (not b!105890) (not b!105667) (not b!105748) (not b!105841) (not b!105815) (not d!28951) (not d!29011) (not b!105726) (not d!28881) (not d!29003) (not b!105631) (not b!105818) (not b!105804) (not b!105689) (not b!105670) (not b!105656) (not b!105923) (not d!28971) (not b!105807) (not b!105666) (not b!105669) (not b!105928) (not d!29017) (not bm!11184) (not bm!11136) (not b_lambda!4717) (not b!105864) (not b_next!2523) (not b!105658) (not bm!11187) (not b!106073) (not b!105922) (not b!105757) (not b!105856) (not d!28909) (not b!105741) (not b!105744) (not b!105626) (not b!106069) (not b!105925) (not b!105998) (not b!105863) (not d!28957) (not b!105768) (not bm!11155) (not b!105754) (not b!105753) (not b!105814) (not d!28831) (not d!28871) (not b!105776) (not bm!11198) (not b!105999) (not d!28873) (not b!105785) (not b!105995))
(check-sat b_and!6541 b_and!6543 (not b_next!2521) (not b_next!2523))
(get-model)

(declare-fun d!29021 () Bool)

(declare-fun res!52773 () Bool)

(declare-fun e!69035 () Bool)

(assert (=> d!29021 (=> res!52773 e!69035)))

(assert (=> d!29021 (= res!52773 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53721))) (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53721)))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29021 (= (containsKey!160 (t!5671 (toList!782 lt!53721)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69035)))

(declare-fun b!106081 () Bool)

(declare-fun e!69036 () Bool)

(assert (=> b!106081 (= e!69035 e!69036)))

(declare-fun res!52774 () Bool)

(assert (=> b!106081 (=> (not res!52774) (not e!69036))))

(assert (=> b!106081 (= res!52774 (and (or (not ((_ is Cons!1592) (t!5671 (toList!782 lt!53721)))) (bvsle (_1!1191 (h!2189 (t!5671 (toList!782 lt!53721)))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))) ((_ is Cons!1592) (t!5671 (toList!782 lt!53721))) (bvslt (_1!1191 (h!2189 (t!5671 (toList!782 lt!53721)))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(declare-fun b!106082 () Bool)

(assert (=> b!106082 (= e!69036 (containsKey!160 (t!5671 (t!5671 (toList!782 lt!53721))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29021 (not res!52773)) b!106081))

(assert (= (and b!106081 res!52774) b!106082))

(assert (=> b!106082 m!117261))

(declare-fun m!118467 () Bool)

(assert (=> b!106082 m!118467))

(assert (=> b!106009 d!29021))

(declare-fun bm!11201 () Bool)

(declare-fun call!11204 () Bool)

(declare-fun c!18492 () Bool)

(assert (=> bm!11201 (= call!11204 (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18492 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000) Nil!1594) Nil!1594)))))

(declare-fun b!106084 () Bool)

(declare-fun e!69040 () Bool)

(declare-fun e!69039 () Bool)

(assert (=> b!106084 (= e!69040 e!69039)))

(assert (=> b!106084 (= c!18492 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!106085 () Bool)

(assert (=> b!106085 (= e!69039 call!11204)))

(declare-fun b!106086 () Bool)

(declare-fun e!69038 () Bool)

(assert (=> b!106086 (= e!69038 (contains!817 Nil!1594 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!106087 () Bool)

(assert (=> b!106087 (= e!69039 call!11204)))

(declare-fun b!106083 () Bool)

(declare-fun e!69037 () Bool)

(assert (=> b!106083 (= e!69037 e!69040)))

(declare-fun res!52776 () Bool)

(assert (=> b!106083 (=> (not res!52776) (not e!69040))))

(assert (=> b!106083 (= res!52776 (not e!69038))))

(declare-fun res!52775 () Bool)

(assert (=> b!106083 (=> (not res!52775) (not e!69038))))

(assert (=> b!106083 (= res!52775 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!29023 () Bool)

(declare-fun res!52777 () Bool)

(assert (=> d!29023 (=> res!52777 e!69037)))

(assert (=> d!29023 (= res!52777 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29023 (= (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 Nil!1594) e!69037)))

(assert (= (and d!29023 (not res!52777)) b!106083))

(assert (= (and b!106083 res!52775) b!106086))

(assert (= (and b!106083 res!52776) b!106084))

(assert (= (and b!106084 c!18492) b!106085))

(assert (= (and b!106084 (not c!18492)) b!106087))

(assert (= (or b!106085 b!106087) bm!11201))

(declare-fun m!118469 () Bool)

(assert (=> bm!11201 m!118469))

(declare-fun m!118471 () Bool)

(assert (=> bm!11201 m!118471))

(assert (=> b!106084 m!118469))

(assert (=> b!106084 m!118469))

(declare-fun m!118473 () Bool)

(assert (=> b!106084 m!118473))

(assert (=> b!106086 m!118469))

(assert (=> b!106086 m!118469))

(declare-fun m!118475 () Bool)

(assert (=> b!106086 m!118475))

(assert (=> b!106083 m!118469))

(assert (=> b!106083 m!118469))

(assert (=> b!106083 m!118473))

(assert (=> b!105928 d!29023))

(assert (=> bm!11200 d!28967))

(declare-fun d!29025 () Bool)

(assert (=> d!29025 (= (content!110 Nil!1594) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!28817 d!29025))

(declare-fun d!29027 () Bool)

(assert (=> d!29027 (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54370 () Unit!3212)

(assert (=> d!29027 (= lt!54370 (choose!669 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69041 () Bool)

(assert (=> d!29027 e!69041))

(declare-fun res!52778 () Bool)

(assert (=> d!29027 (=> (not res!52778) (not e!69041))))

(assert (=> d!29027 (= res!52778 (isStrictlySorted!296 (toList!782 lt!53992)))))

(assert (=> d!29027 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000) lt!54370)))

(declare-fun b!106088 () Bool)

(assert (=> b!106088 (= e!69041 (containsKey!160 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29027 res!52778) b!106088))

(assert (=> d!29027 m!118209))

(assert (=> d!29027 m!118209))

(assert (=> d!29027 m!118211))

(declare-fun m!118477 () Bool)

(assert (=> d!29027 m!118477))

(declare-fun m!118479 () Bool)

(assert (=> d!29027 m!118479))

(assert (=> b!106088 m!118205))

(assert (=> b!105902 d!29027))

(declare-fun d!29029 () Bool)

(assert (=> d!29029 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4359 () Bool)

(assert (= bs!4359 d!29029))

(assert (=> bs!4359 m!118209))

(declare-fun m!118481 () Bool)

(assert (=> bs!4359 m!118481))

(assert (=> b!105902 d!29029))

(declare-fun b!106089 () Bool)

(declare-fun e!69042 () Option!163)

(assert (=> b!106089 (= e!69042 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53992)))))))

(declare-fun d!29031 () Bool)

(declare-fun c!18493 () Bool)

(assert (=> d!29031 (= c!18493 (and ((_ is Cons!1592) (toList!782 lt!53992)) (= (_1!1191 (h!2189 (toList!782 lt!53992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29031 (= (getValueByKey!157 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000) e!69042)))

(declare-fun b!106091 () Bool)

(declare-fun e!69043 () Option!163)

(assert (=> b!106091 (= e!69043 (getValueByKey!157 (t!5671 (toList!782 lt!53992)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106090 () Bool)

(assert (=> b!106090 (= e!69042 e!69043)))

(declare-fun c!18494 () Bool)

(assert (=> b!106090 (= c!18494 (and ((_ is Cons!1592) (toList!782 lt!53992)) (not (= (_1!1191 (h!2189 (toList!782 lt!53992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106092 () Bool)

(assert (=> b!106092 (= e!69043 None!161)))

(assert (= (and d!29031 c!18493) b!106089))

(assert (= (and d!29031 (not c!18493)) b!106090))

(assert (= (and b!106090 c!18494) b!106091))

(assert (= (and b!106090 (not c!18494)) b!106092))

(declare-fun m!118483 () Bool)

(assert (=> b!106091 m!118483))

(assert (=> b!105902 d!29031))

(declare-fun d!29033 () Bool)

(assert (=> d!29033 (= (get!1338 (getValueByKey!157 (toList!782 lt!53944) lt!53939)) (v!2898 (getValueByKey!157 (toList!782 lt!53944) lt!53939)))))

(assert (=> d!28897 d!29033))

(declare-fun b!106093 () Bool)

(declare-fun e!69044 () Option!163)

(assert (=> b!106093 (= e!69044 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53944)))))))

(declare-fun d!29035 () Bool)

(declare-fun c!18495 () Bool)

(assert (=> d!29035 (= c!18495 (and ((_ is Cons!1592) (toList!782 lt!53944)) (= (_1!1191 (h!2189 (toList!782 lt!53944))) lt!53939)))))

(assert (=> d!29035 (= (getValueByKey!157 (toList!782 lt!53944) lt!53939) e!69044)))

(declare-fun b!106095 () Bool)

(declare-fun e!69045 () Option!163)

(assert (=> b!106095 (= e!69045 (getValueByKey!157 (t!5671 (toList!782 lt!53944)) lt!53939))))

(declare-fun b!106094 () Bool)

(assert (=> b!106094 (= e!69044 e!69045)))

(declare-fun c!18496 () Bool)

(assert (=> b!106094 (= c!18496 (and ((_ is Cons!1592) (toList!782 lt!53944)) (not (= (_1!1191 (h!2189 (toList!782 lt!53944))) lt!53939))))))

(declare-fun b!106096 () Bool)

(assert (=> b!106096 (= e!69045 None!161)))

(assert (= (and d!29035 c!18495) b!106093))

(assert (= (and d!29035 (not c!18495)) b!106094))

(assert (= (and b!106094 c!18496) b!106095))

(assert (= (and b!106094 (not c!18496)) b!106096))

(declare-fun m!118485 () Bool)

(assert (=> b!106095 m!118485))

(assert (=> d!28897 d!29035))

(declare-fun d!29037 () Bool)

(assert (=> d!29037 (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54371 () Unit!3212)

(assert (=> d!29037 (= lt!54371 (choose!669 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69046 () Bool)

(assert (=> d!29037 e!69046))

(declare-fun res!52779 () Bool)

(assert (=> d!29037 (=> (not res!52779) (not e!69046))))

(assert (=> d!29037 (= res!52779 (isStrictlySorted!296 (toList!782 lt!53948)))))

(assert (=> d!29037 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000) lt!54371)))

(declare-fun b!106097 () Bool)

(assert (=> b!106097 (= e!69046 (containsKey!160 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29037 res!52779) b!106097))

(assert (=> d!29037 m!118069))

(assert (=> d!29037 m!118069))

(assert (=> d!29037 m!118071))

(declare-fun m!118487 () Bool)

(assert (=> d!29037 m!118487))

(declare-fun m!118489 () Bool)

(assert (=> d!29037 m!118489))

(assert (=> b!106097 m!118065))

(assert (=> b!105818 d!29037))

(declare-fun d!29039 () Bool)

(assert (=> d!29039 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4360 () Bool)

(assert (= bs!4360 d!29039))

(assert (=> bs!4360 m!118069))

(declare-fun m!118491 () Bool)

(assert (=> bs!4360 m!118491))

(assert (=> b!105818 d!29039))

(declare-fun b!106098 () Bool)

(declare-fun e!69047 () Option!163)

(assert (=> b!106098 (= e!69047 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53948)))))))

(declare-fun d!29041 () Bool)

(declare-fun c!18497 () Bool)

(assert (=> d!29041 (= c!18497 (and ((_ is Cons!1592) (toList!782 lt!53948)) (= (_1!1191 (h!2189 (toList!782 lt!53948))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29041 (= (getValueByKey!157 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000) e!69047)))

(declare-fun b!106100 () Bool)

(declare-fun e!69048 () Option!163)

(assert (=> b!106100 (= e!69048 (getValueByKey!157 (t!5671 (toList!782 lt!53948)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106099 () Bool)

(assert (=> b!106099 (= e!69047 e!69048)))

(declare-fun c!18498 () Bool)

(assert (=> b!106099 (= c!18498 (and ((_ is Cons!1592) (toList!782 lt!53948)) (not (= (_1!1191 (h!2189 (toList!782 lt!53948))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106101 () Bool)

(assert (=> b!106101 (= e!69048 None!161)))

(assert (= (and d!29041 c!18497) b!106098))

(assert (= (and d!29041 (not c!18497)) b!106099))

(assert (= (and b!106099 c!18498) b!106100))

(assert (= (and b!106099 (not c!18498)) b!106101))

(declare-fun m!118493 () Bool)

(assert (=> b!106100 m!118493))

(assert (=> b!105818 d!29041))

(declare-fun d!29043 () Bool)

(assert (=> d!29043 (= (apply!98 lt!54251 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1338 (getValueByKey!157 (toList!782 lt!54251) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4361 () Bool)

(assert (= bs!4361 d!29043))

(declare-fun m!118495 () Bool)

(assert (=> bs!4361 m!118495))

(assert (=> bs!4361 m!118495))

(declare-fun m!118497 () Bool)

(assert (=> bs!4361 m!118497))

(assert (=> b!105993 d!29043))

(declare-fun d!29045 () Bool)

(declare-fun lt!54372 () Bool)

(assert (=> d!29045 (= lt!54372 (select (content!111 lt!54190) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun e!69049 () Bool)

(assert (=> d!29045 (= lt!54372 e!69049)))

(declare-fun res!52780 () Bool)

(assert (=> d!29045 (=> (not res!52780) (not e!69049))))

(assert (=> d!29045 (= res!52780 ((_ is Cons!1592) lt!54190))))

(assert (=> d!29045 (= (contains!816 lt!54190 (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))) lt!54372)))

(declare-fun b!106102 () Bool)

(declare-fun e!69050 () Bool)

(assert (=> b!106102 (= e!69049 e!69050)))

(declare-fun res!52781 () Bool)

(assert (=> b!106102 (=> res!52781 e!69050)))

(assert (=> b!106102 (= res!52781 (= (h!2189 lt!54190) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun b!106103 () Bool)

(assert (=> b!106103 (= e!69050 (contains!816 (t!5671 lt!54190) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(assert (= (and d!29045 res!52780) b!106102))

(assert (= (and b!106102 (not res!52781)) b!106103))

(declare-fun m!118499 () Bool)

(assert (=> d!29045 m!118499))

(declare-fun m!118501 () Bool)

(assert (=> d!29045 m!118501))

(declare-fun m!118503 () Bool)

(assert (=> b!106103 m!118503))

(assert (=> b!105891 d!29045))

(declare-fun d!29047 () Bool)

(declare-fun e!69051 () Bool)

(assert (=> d!29047 e!69051))

(declare-fun res!52782 () Bool)

(assert (=> d!29047 (=> res!52782 e!69051)))

(declare-fun lt!54374 () Bool)

(assert (=> d!29047 (= res!52782 (not lt!54374))))

(declare-fun lt!54375 () Bool)

(assert (=> d!29047 (= lt!54374 lt!54375)))

(declare-fun lt!54376 () Unit!3212)

(declare-fun e!69052 () Unit!3212)

(assert (=> d!29047 (= lt!54376 e!69052)))

(declare-fun c!18499 () Bool)

(assert (=> d!29047 (= c!18499 lt!54375)))

(assert (=> d!29047 (= lt!54375 (containsKey!160 (toList!782 lt!54095) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29047 (= (contains!814 lt!54095 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54374)))

(declare-fun b!106104 () Bool)

(declare-fun lt!54373 () Unit!3212)

(assert (=> b!106104 (= e!69052 lt!54373)))

(assert (=> b!106104 (= lt!54373 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54095) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106104 (isDefined!109 (getValueByKey!157 (toList!782 lt!54095) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106105 () Bool)

(declare-fun Unit!3244 () Unit!3212)

(assert (=> b!106105 (= e!69052 Unit!3244)))

(declare-fun b!106106 () Bool)

(assert (=> b!106106 (= e!69051 (isDefined!109 (getValueByKey!157 (toList!782 lt!54095) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29047 c!18499) b!106104))

(assert (= (and d!29047 (not c!18499)) b!106105))

(assert (= (and d!29047 (not res!52782)) b!106106))

(declare-fun m!118505 () Bool)

(assert (=> d!29047 m!118505))

(declare-fun m!118507 () Bool)

(assert (=> b!106104 m!118507))

(declare-fun m!118509 () Bool)

(assert (=> b!106104 m!118509))

(assert (=> b!106104 m!118509))

(declare-fun m!118511 () Bool)

(assert (=> b!106104 m!118511))

(assert (=> b!106106 m!118509))

(assert (=> b!106106 m!118509))

(assert (=> b!106106 m!118511))

(assert (=> d!28867 d!29047))

(assert (=> d!28867 d!28801))

(declare-fun d!29049 () Bool)

(declare-fun res!52783 () Bool)

(declare-fun e!69053 () Bool)

(assert (=> d!29049 (=> res!52783 e!69053)))

(assert (=> d!29049 (= res!52783 (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29049 (= (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!69053)))

(declare-fun b!106107 () Bool)

(declare-fun e!69054 () Bool)

(assert (=> b!106107 (= e!69053 e!69054)))

(declare-fun res!52784 () Bool)

(assert (=> b!106107 (=> (not res!52784) (not e!69054))))

(assert (=> b!106107 (= res!52784 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106108 () Bool)

(assert (=> b!106108 (= e!69054 (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29049 (not res!52783)) b!106107))

(assert (= (and b!106107 res!52784) b!106108))

(declare-fun m!118513 () Bool)

(assert (=> d!29049 m!118513))

(assert (=> b!106108 m!117261))

(declare-fun m!118515 () Bool)

(assert (=> b!106108 m!118515))

(assert (=> b!105898 d!29049))

(assert (=> d!28881 d!28885))

(declare-fun d!29051 () Bool)

(assert (=> d!29051 (= (apply!98 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53942) (apply!98 lt!53941 lt!53942))))

(assert (=> d!29051 true))

(declare-fun _$34!887 () Unit!3212)

(assert (=> d!29051 (= (choose!666 lt!53941 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53942) _$34!887)))

(declare-fun bs!4362 () Bool)

(assert (= bs!4362 d!29051))

(assert (=> bs!4362 m!117513))

(assert (=> bs!4362 m!117513))

(assert (=> bs!4362 m!117515))

(assert (=> bs!4362 m!117523))

(assert (=> d!28881 d!29051))

(assert (=> d!28881 d!28873))

(assert (=> d!28881 d!28887))

(declare-fun d!29053 () Bool)

(declare-fun e!69055 () Bool)

(assert (=> d!29053 e!69055))

(declare-fun res!52785 () Bool)

(assert (=> d!29053 (=> res!52785 e!69055)))

(declare-fun lt!54378 () Bool)

(assert (=> d!29053 (= res!52785 (not lt!54378))))

(declare-fun lt!54379 () Bool)

(assert (=> d!29053 (= lt!54378 lt!54379)))

(declare-fun lt!54380 () Unit!3212)

(declare-fun e!69056 () Unit!3212)

(assert (=> d!29053 (= lt!54380 e!69056)))

(declare-fun c!18500 () Bool)

(assert (=> d!29053 (= c!18500 lt!54379)))

(assert (=> d!29053 (= lt!54379 (containsKey!160 (toList!782 lt!53941) lt!53942))))

(assert (=> d!29053 (= (contains!814 lt!53941 lt!53942) lt!54378)))

(declare-fun b!106110 () Bool)

(declare-fun lt!54377 () Unit!3212)

(assert (=> b!106110 (= e!69056 lt!54377)))

(assert (=> b!106110 (= lt!54377 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53941) lt!53942))))

(assert (=> b!106110 (isDefined!109 (getValueByKey!157 (toList!782 lt!53941) lt!53942))))

(declare-fun b!106111 () Bool)

(declare-fun Unit!3245 () Unit!3212)

(assert (=> b!106111 (= e!69056 Unit!3245)))

(declare-fun b!106112 () Bool)

(assert (=> b!106112 (= e!69055 (isDefined!109 (getValueByKey!157 (toList!782 lt!53941) lt!53942)))))

(assert (= (and d!29053 c!18500) b!106110))

(assert (= (and d!29053 (not c!18500)) b!106111))

(assert (= (and d!29053 (not res!52785)) b!106112))

(declare-fun m!118517 () Bool)

(assert (=> d!29053 m!118517))

(declare-fun m!118519 () Bool)

(assert (=> b!106110 m!118519))

(assert (=> b!106110 m!117947))

(assert (=> b!106110 m!117947))

(declare-fun m!118521 () Bool)

(assert (=> b!106110 m!118521))

(assert (=> b!106112 m!117947))

(assert (=> b!106112 m!117947))

(assert (=> b!106112 m!118521))

(assert (=> d!28881 d!29053))

(declare-fun d!29055 () Bool)

(assert (=> d!29055 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4363 () Bool)

(assert (= bs!4363 d!29055))

(assert (=> bs!4363 m!118231))

(declare-fun m!118523 () Bool)

(assert (=> bs!4363 m!118523))

(assert (=> b!105925 d!29055))

(declare-fun b!106113 () Bool)

(declare-fun e!69057 () Option!163)

(assert (=> b!106113 (= e!69057 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53948)))))))

(declare-fun d!29057 () Bool)

(declare-fun c!18501 () Bool)

(assert (=> d!29057 (= c!18501 (and ((_ is Cons!1592) (toList!782 lt!53948)) (= (_1!1191 (h!2189 (toList!782 lt!53948))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29057 (= (getValueByKey!157 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000) e!69057)))

(declare-fun b!106115 () Bool)

(declare-fun e!69058 () Option!163)

(assert (=> b!106115 (= e!69058 (getValueByKey!157 (t!5671 (toList!782 lt!53948)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106114 () Bool)

(assert (=> b!106114 (= e!69057 e!69058)))

(declare-fun c!18502 () Bool)

(assert (=> b!106114 (= c!18502 (and ((_ is Cons!1592) (toList!782 lt!53948)) (not (= (_1!1191 (h!2189 (toList!782 lt!53948))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106116 () Bool)

(assert (=> b!106116 (= e!69058 None!161)))

(assert (= (and d!29057 c!18501) b!106113))

(assert (= (and d!29057 (not c!18501)) b!106114))

(assert (= (and b!106114 c!18502) b!106115))

(assert (= (and b!106114 (not c!18502)) b!106116))

(declare-fun m!118525 () Bool)

(assert (=> b!106115 m!118525))

(assert (=> b!105925 d!29057))

(declare-fun d!29059 () Bool)

(assert (=> d!29059 (= (map!1283 (_2!1192 lt!54342)) (getCurrentListMap!469 (_keys!4287 (_2!1192 lt!54342)) (_values!2564 (_2!1192 lt!54342)) (mask!6727 (_2!1192 lt!54342)) (extraKeys!2386 (_2!1192 lt!54342)) (zeroValue!2456 (_2!1192 lt!54342)) (minValue!2456 (_2!1192 lt!54342)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1192 lt!54342))))))

(declare-fun bs!4364 () Bool)

(assert (= bs!4364 d!29059))

(declare-fun m!118527 () Bool)

(assert (=> bs!4364 m!118527))

(assert (=> b!106055 d!29059))

(declare-fun d!29061 () Bool)

(declare-fun e!69059 () Bool)

(assert (=> d!29061 e!69059))

(declare-fun res!52786 () Bool)

(assert (=> d!29061 (=> (not res!52786) (not e!69059))))

(declare-fun lt!54382 () ListLongMap!1533)

(assert (=> d!29061 (= res!52786 (contains!814 lt!54382 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun lt!54381 () List!1596)

(assert (=> d!29061 (= lt!54382 (ListLongMap!1534 lt!54381))))

(declare-fun lt!54384 () Unit!3212)

(declare-fun lt!54383 () Unit!3212)

(assert (=> d!29061 (= lt!54384 lt!54383)))

(assert (=> d!29061 (= (getValueByKey!157 lt!54381 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!29061 (= lt!54383 (lemmaContainsTupThenGetReturnValue!73 lt!54381 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!29061 (= lt!54381 (insertStrictlySorted!76 (toList!782 (map!1283 newMap!16)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!29061 (= (+!139 (map!1283 newMap!16) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) lt!54382)))

(declare-fun b!106117 () Bool)

(declare-fun res!52787 () Bool)

(assert (=> b!106117 (=> (not res!52787) (not e!69059))))

(assert (=> b!106117 (= res!52787 (= (getValueByKey!157 (toList!782 lt!54382) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!106118 () Bool)

(assert (=> b!106118 (= e!69059 (contains!816 (toList!782 lt!54382) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(assert (= (and d!29061 res!52786) b!106117))

(assert (= (and b!106117 res!52787) b!106118))

(declare-fun m!118529 () Bool)

(assert (=> d!29061 m!118529))

(declare-fun m!118531 () Bool)

(assert (=> d!29061 m!118531))

(declare-fun m!118533 () Bool)

(assert (=> d!29061 m!118533))

(declare-fun m!118535 () Bool)

(assert (=> d!29061 m!118535))

(declare-fun m!118537 () Bool)

(assert (=> b!106117 m!118537))

(declare-fun m!118539 () Bool)

(assert (=> b!106118 m!118539))

(assert (=> b!106055 d!29061))

(assert (=> b!106055 d!28779))

(declare-fun d!29063 () Bool)

(declare-fun e!69060 () Bool)

(assert (=> d!29063 e!69060))

(declare-fun res!52788 () Bool)

(assert (=> d!29063 (=> (not res!52788) (not e!69060))))

(declare-fun lt!54386 () ListLongMap!1533)

(assert (=> d!29063 (= res!52788 (contains!814 lt!54386 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(declare-fun lt!54385 () List!1596)

(assert (=> d!29063 (= lt!54386 (ListLongMap!1534 lt!54385))))

(declare-fun lt!54388 () Unit!3212)

(declare-fun lt!54387 () Unit!3212)

(assert (=> d!29063 (= lt!54388 lt!54387)))

(assert (=> d!29063 (= (getValueByKey!157 lt!54385 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(assert (=> d!29063 (= lt!54387 (lemmaContainsTupThenGetReturnValue!73 lt!54385 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(assert (=> d!29063 (= lt!54385 (insertStrictlySorted!76 (toList!782 call!11138) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(assert (=> d!29063 (= (+!139 call!11138 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) lt!54386)))

(declare-fun b!106119 () Bool)

(declare-fun res!52789 () Bool)

(assert (=> b!106119 (=> (not res!52789) (not e!69060))))

(assert (=> b!106119 (= res!52789 (= (getValueByKey!157 (toList!782 lt!54386) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))))

(declare-fun b!106120 () Bool)

(assert (=> b!106120 (= e!69060 (contains!816 (toList!782 lt!54386) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))

(assert (= (and d!29063 res!52788) b!106119))

(assert (= (and b!106119 res!52789) b!106120))

(declare-fun m!118541 () Bool)

(assert (=> d!29063 m!118541))

(declare-fun m!118543 () Bool)

(assert (=> d!29063 m!118543))

(declare-fun m!118545 () Bool)

(assert (=> d!29063 m!118545))

(declare-fun m!118547 () Bool)

(assert (=> d!29063 m!118547))

(declare-fun m!118549 () Bool)

(assert (=> b!106119 m!118549))

(declare-fun m!118551 () Bool)

(assert (=> b!106120 m!118551))

(assert (=> b!105617 d!29063))

(declare-fun d!29065 () Bool)

(declare-fun res!52794 () Bool)

(declare-fun e!69065 () Bool)

(assert (=> d!29065 (=> res!52794 e!69065)))

(assert (=> d!29065 (= res!52794 (or ((_ is Nil!1593) lt!54190) ((_ is Nil!1593) (t!5671 lt!54190))))))

(assert (=> d!29065 (= (isStrictlySorted!296 lt!54190) e!69065)))

(declare-fun b!106125 () Bool)

(declare-fun e!69066 () Bool)

(assert (=> b!106125 (= e!69065 e!69066)))

(declare-fun res!52795 () Bool)

(assert (=> b!106125 (=> (not res!52795) (not e!69066))))

(assert (=> b!106125 (= res!52795 (bvslt (_1!1191 (h!2189 lt!54190)) (_1!1191 (h!2189 (t!5671 lt!54190)))))))

(declare-fun b!106126 () Bool)

(assert (=> b!106126 (= e!69066 (isStrictlySorted!296 (t!5671 lt!54190)))))

(assert (= (and d!29065 (not res!52794)) b!106125))

(assert (= (and b!106125 res!52795) b!106126))

(declare-fun m!118553 () Bool)

(assert (=> b!106126 m!118553))

(assert (=> d!28957 d!29065))

(declare-fun d!29067 () Bool)

(declare-fun res!52796 () Bool)

(declare-fun e!69067 () Bool)

(assert (=> d!29067 (=> res!52796 e!69067)))

(assert (=> d!29067 (= res!52796 (or ((_ is Nil!1593) (toList!782 lt!53714)) ((_ is Nil!1593) (t!5671 (toList!782 lt!53714)))))))

(assert (=> d!29067 (= (isStrictlySorted!296 (toList!782 lt!53714)) e!69067)))

(declare-fun b!106127 () Bool)

(declare-fun e!69068 () Bool)

(assert (=> b!106127 (= e!69067 e!69068)))

(declare-fun res!52797 () Bool)

(assert (=> b!106127 (=> (not res!52797) (not e!69068))))

(assert (=> b!106127 (= res!52797 (bvslt (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 (h!2189 (t!5671 (toList!782 lt!53714))))))))

(declare-fun b!106128 () Bool)

(assert (=> b!106128 (= e!69068 (isStrictlySorted!296 (t!5671 (toList!782 lt!53714))))))

(assert (= (and d!29067 (not res!52796)) b!106127))

(assert (= (and b!106127 res!52797) b!106128))

(declare-fun m!118555 () Bool)

(assert (=> b!106128 m!118555))

(assert (=> d!28957 d!29067))

(declare-fun d!29069 () Bool)

(assert (=> d!29069 (= (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105744 d!29069))

(declare-fun d!29071 () Bool)

(assert (=> d!29071 (= (isDefined!109 (getValueByKey!157 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))) (not (isEmpty!377 (getValueByKey!157 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(declare-fun bs!4365 () Bool)

(assert (= bs!4365 d!29071))

(assert (=> bs!4365 m!118191))

(declare-fun m!118557 () Bool)

(assert (=> bs!4365 m!118557))

(assert (=> b!105896 d!29071))

(declare-fun b!106129 () Bool)

(declare-fun e!69069 () Option!163)

(assert (=> b!106129 (= e!69069 (Some!162 (_2!1191 (h!2189 (toList!782 e!68649)))))))

(declare-fun c!18503 () Bool)

(declare-fun d!29073 () Bool)

(assert (=> d!29073 (= c!18503 (and ((_ is Cons!1592) (toList!782 e!68649)) (= (_1!1191 (h!2189 (toList!782 e!68649))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29073 (= (getValueByKey!157 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69069)))

(declare-fun b!106131 () Bool)

(declare-fun e!69070 () Option!163)

(assert (=> b!106131 (= e!69070 (getValueByKey!157 (t!5671 (toList!782 e!68649)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!106130 () Bool)

(assert (=> b!106130 (= e!69069 e!69070)))

(declare-fun c!18504 () Bool)

(assert (=> b!106130 (= c!18504 (and ((_ is Cons!1592) (toList!782 e!68649)) (not (= (_1!1191 (h!2189 (toList!782 e!68649))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(declare-fun b!106132 () Bool)

(assert (=> b!106132 (= e!69070 None!161)))

(assert (= (and d!29073 c!18503) b!106129))

(assert (= (and d!29073 (not c!18503)) b!106130))

(assert (= (and b!106130 c!18504) b!106131))

(assert (= (and b!106130 (not c!18504)) b!106132))

(assert (=> b!106131 m!117261))

(declare-fun m!118559 () Bool)

(assert (=> b!106131 m!118559))

(assert (=> b!105896 d!29073))

(declare-fun d!29075 () Bool)

(declare-fun res!52798 () Bool)

(declare-fun e!69071 () Bool)

(assert (=> d!29075 (=> res!52798 e!69071)))

(assert (=> d!29075 (= res!52798 (and ((_ is Cons!1592) lt!53969) (= (_1!1191 (h!2189 lt!53969)) (_1!1191 lt!53718))))))

(assert (=> d!29075 (= (containsKey!160 lt!53969 (_1!1191 lt!53718)) e!69071)))

(declare-fun b!106133 () Bool)

(declare-fun e!69072 () Bool)

(assert (=> b!106133 (= e!69071 e!69072)))

(declare-fun res!52799 () Bool)

(assert (=> b!106133 (=> (not res!52799) (not e!69072))))

(assert (=> b!106133 (= res!52799 (and (or (not ((_ is Cons!1592) lt!53969)) (bvsle (_1!1191 (h!2189 lt!53969)) (_1!1191 lt!53718))) ((_ is Cons!1592) lt!53969) (bvslt (_1!1191 (h!2189 lt!53969)) (_1!1191 lt!53718))))))

(declare-fun b!106134 () Bool)

(assert (=> b!106134 (= e!69072 (containsKey!160 (t!5671 lt!53969) (_1!1191 lt!53718)))))

(assert (= (and d!29075 (not res!52798)) b!106133))

(assert (= (and b!106133 res!52799) b!106134))

(declare-fun m!118561 () Bool)

(assert (=> b!106134 m!118561))

(assert (=> b!105863 d!29075))

(declare-fun d!29077 () Bool)

(declare-fun res!52800 () Bool)

(declare-fun e!69073 () Bool)

(assert (=> d!29077 (=> res!52800 e!69073)))

(assert (=> d!29077 (= res!52800 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))))) lt!53991)))))

(assert (=> d!29077 (= (containsKey!160 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991) e!69073)))

(declare-fun b!106135 () Bool)

(declare-fun e!69074 () Bool)

(assert (=> b!106135 (= e!69073 e!69074)))

(declare-fun res!52801 () Bool)

(assert (=> b!106135 (=> (not res!52801) (not e!69074))))

(assert (=> b!106135 (= res!52801 (and (or (not ((_ is Cons!1592) (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))))) (bvsle (_1!1191 (h!2189 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))))) lt!53991)) ((_ is Cons!1592) (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)))) (bvslt (_1!1191 (h!2189 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))))) lt!53991)))))

(declare-fun b!106136 () Bool)

(assert (=> b!106136 (= e!69074 (containsKey!160 (t!5671 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)))) lt!53991))))

(assert (= (and d!29077 (not res!52800)) b!106135))

(assert (= (and b!106135 res!52801) b!106136))

(declare-fun m!118563 () Bool)

(assert (=> b!106136 m!118563))

(assert (=> d!28903 d!29077))

(assert (=> d!28955 d!28953))

(declare-fun d!29079 () Bool)

(assert (=> d!29079 (= (getValueByKey!157 lt!53973 (_1!1191 lt!53713)) (Some!162 (_2!1191 lt!53713)))))

(assert (=> d!29079 true))

(declare-fun _$22!433 () Unit!3212)

(assert (=> d!29079 (= (choose!662 lt!53973 (_1!1191 lt!53713) (_2!1191 lt!53713)) _$22!433)))

(declare-fun bs!4366 () Bool)

(assert (= bs!4366 d!29079))

(assert (=> bs!4366 m!117585))

(assert (=> d!28955 d!29079))

(declare-fun d!29081 () Bool)

(declare-fun res!52802 () Bool)

(declare-fun e!69075 () Bool)

(assert (=> d!29081 (=> res!52802 e!69075)))

(assert (=> d!29081 (= res!52802 (or ((_ is Nil!1593) lt!53973) ((_ is Nil!1593) (t!5671 lt!53973))))))

(assert (=> d!29081 (= (isStrictlySorted!296 lt!53973) e!69075)))

(declare-fun b!106137 () Bool)

(declare-fun e!69076 () Bool)

(assert (=> b!106137 (= e!69075 e!69076)))

(declare-fun res!52803 () Bool)

(assert (=> b!106137 (=> (not res!52803) (not e!69076))))

(assert (=> b!106137 (= res!52803 (bvslt (_1!1191 (h!2189 lt!53973)) (_1!1191 (h!2189 (t!5671 lt!53973)))))))

(declare-fun b!106138 () Bool)

(assert (=> b!106138 (= e!69076 (isStrictlySorted!296 (t!5671 lt!53973)))))

(assert (= (and d!29081 (not res!52802)) b!106137))

(assert (= (and b!106137 res!52803) b!106138))

(declare-fun m!118565 () Bool)

(assert (=> b!106138 m!118565))

(assert (=> d!28955 d!29081))

(declare-fun d!29083 () Bool)

(assert (=> d!29083 (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54389 () Unit!3212)

(assert (=> d!29083 (= lt!54389 (choose!669 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69077 () Bool)

(assert (=> d!29083 e!69077))

(declare-fun res!52804 () Bool)

(assert (=> d!29083 (=> (not res!52804) (not e!69077))))

(assert (=> d!29083 (= res!52804 (isStrictlySorted!296 (toList!782 lt!53992)))))

(assert (=> d!29083 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000) lt!54389)))

(declare-fun b!106139 () Bool)

(assert (=> b!106139 (= e!69077 (containsKey!160 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29083 res!52804) b!106139))

(assert (=> d!29083 m!118379))

(assert (=> d!29083 m!118379))

(assert (=> d!29083 m!118381))

(declare-fun m!118567 () Bool)

(assert (=> d!29083 m!118567))

(assert (=> d!29083 m!118479))

(assert (=> b!106139 m!118375))

(assert (=> b!106014 d!29083))

(declare-fun d!29085 () Bool)

(assert (=> d!29085 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4367 () Bool)

(assert (= bs!4367 d!29085))

(assert (=> bs!4367 m!118379))

(declare-fun m!118569 () Bool)

(assert (=> bs!4367 m!118569))

(assert (=> b!106014 d!29085))

(declare-fun b!106140 () Bool)

(declare-fun e!69078 () Option!163)

(assert (=> b!106140 (= e!69078 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53992)))))))

(declare-fun d!29087 () Bool)

(declare-fun c!18505 () Bool)

(assert (=> d!29087 (= c!18505 (and ((_ is Cons!1592) (toList!782 lt!53992)) (= (_1!1191 (h!2189 (toList!782 lt!53992))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29087 (= (getValueByKey!157 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000) e!69078)))

(declare-fun b!106142 () Bool)

(declare-fun e!69079 () Option!163)

(assert (=> b!106142 (= e!69079 (getValueByKey!157 (t!5671 (toList!782 lt!53992)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106141 () Bool)

(assert (=> b!106141 (= e!69078 e!69079)))

(declare-fun c!18506 () Bool)

(assert (=> b!106141 (= c!18506 (and ((_ is Cons!1592) (toList!782 lt!53992)) (not (= (_1!1191 (h!2189 (toList!782 lt!53992))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106143 () Bool)

(assert (=> b!106143 (= e!69079 None!161)))

(assert (= (and d!29087 c!18505) b!106140))

(assert (= (and d!29087 (not c!18505)) b!106141))

(assert (= (and b!106141 c!18506) b!106142))

(assert (= (and b!106141 (not c!18506)) b!106143))

(declare-fun m!118571 () Bool)

(assert (=> b!106142 m!118571))

(assert (=> b!106014 d!29087))

(declare-fun d!29089 () Bool)

(assert (=> d!29089 (= (validMask!0 (mask!6727 newMap!16)) (and (or (= (mask!6727 newMap!16) #b00000000000000000000000000000111) (= (mask!6727 newMap!16) #b00000000000000000000000000001111) (= (mask!6727 newMap!16) #b00000000000000000000000000011111) (= (mask!6727 newMap!16) #b00000000000000000000000000111111) (= (mask!6727 newMap!16) #b00000000000000000000000001111111) (= (mask!6727 newMap!16) #b00000000000000000000000011111111) (= (mask!6727 newMap!16) #b00000000000000000000000111111111) (= (mask!6727 newMap!16) #b00000000000000000000001111111111) (= (mask!6727 newMap!16) #b00000000000000000000011111111111) (= (mask!6727 newMap!16) #b00000000000000000000111111111111) (= (mask!6727 newMap!16) #b00000000000000000001111111111111) (= (mask!6727 newMap!16) #b00000000000000000011111111111111) (= (mask!6727 newMap!16) #b00000000000000000111111111111111) (= (mask!6727 newMap!16) #b00000000000000001111111111111111) (= (mask!6727 newMap!16) #b00000000000000011111111111111111) (= (mask!6727 newMap!16) #b00000000000000111111111111111111) (= (mask!6727 newMap!16) #b00000000000001111111111111111111) (= (mask!6727 newMap!16) #b00000000000011111111111111111111) (= (mask!6727 newMap!16) #b00000000000111111111111111111111) (= (mask!6727 newMap!16) #b00000000001111111111111111111111) (= (mask!6727 newMap!16) #b00000000011111111111111111111111) (= (mask!6727 newMap!16) #b00000000111111111111111111111111) (= (mask!6727 newMap!16) #b00000001111111111111111111111111) (= (mask!6727 newMap!16) #b00000011111111111111111111111111) (= (mask!6727 newMap!16) #b00000111111111111111111111111111) (= (mask!6727 newMap!16) #b00001111111111111111111111111111) (= (mask!6727 newMap!16) #b00011111111111111111111111111111) (= (mask!6727 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6727 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!28987 d!29089))

(declare-fun d!29091 () Bool)

(assert (=> d!29091 (= (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105722 d!29091))

(declare-fun d!29093 () Bool)

(declare-fun e!69080 () Bool)

(assert (=> d!29093 e!69080))

(declare-fun res!52805 () Bool)

(assert (=> d!29093 (=> res!52805 e!69080)))

(declare-fun lt!54391 () Bool)

(assert (=> d!29093 (= res!52805 (not lt!54391))))

(declare-fun lt!54392 () Bool)

(assert (=> d!29093 (= lt!54391 lt!54392)))

(declare-fun lt!54393 () Unit!3212)

(declare-fun e!69081 () Unit!3212)

(assert (=> d!29093 (= lt!54393 e!69081)))

(declare-fun c!18507 () Bool)

(assert (=> d!29093 (= c!18507 lt!54392)))

(assert (=> d!29093 (= lt!54392 (containsKey!160 (toList!782 lt!54030) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29093 (= (contains!814 lt!54030 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54391)))

(declare-fun b!106144 () Bool)

(declare-fun lt!54390 () Unit!3212)

(assert (=> b!106144 (= e!69081 lt!54390)))

(assert (=> b!106144 (= lt!54390 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54030) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106144 (isDefined!109 (getValueByKey!157 (toList!782 lt!54030) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106145 () Bool)

(declare-fun Unit!3246 () Unit!3212)

(assert (=> b!106145 (= e!69081 Unit!3246)))

(declare-fun b!106146 () Bool)

(assert (=> b!106146 (= e!69080 (isDefined!109 (getValueByKey!157 (toList!782 lt!54030) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29093 c!18507) b!106144))

(assert (= (and d!29093 (not c!18507)) b!106145))

(assert (= (and d!29093 (not res!52805)) b!106146))

(declare-fun m!118573 () Bool)

(assert (=> d!29093 m!118573))

(declare-fun m!118575 () Bool)

(assert (=> b!106144 m!118575))

(declare-fun m!118577 () Bool)

(assert (=> b!106144 m!118577))

(assert (=> b!106144 m!118577))

(declare-fun m!118579 () Bool)

(assert (=> b!106144 m!118579))

(assert (=> b!106146 m!118577))

(assert (=> b!106146 m!118577))

(assert (=> b!106146 m!118579))

(assert (=> bm!11136 d!29093))

(declare-fun d!29095 () Bool)

(declare-fun c!18510 () Bool)

(assert (=> d!29095 (= c!18510 ((_ is Nil!1593) (toList!782 lt!53966)))))

(declare-fun e!69084 () (InoxSet tuple2!2360))

(assert (=> d!29095 (= (content!111 (toList!782 lt!53966)) e!69084)))

(declare-fun b!106151 () Bool)

(assert (=> b!106151 (= e!69084 ((as const (Array tuple2!2360 Bool)) false))))

(declare-fun b!106152 () Bool)

(assert (=> b!106152 (= e!69084 ((_ map or) (store ((as const (Array tuple2!2360 Bool)) false) (h!2189 (toList!782 lt!53966)) true) (content!111 (t!5671 (toList!782 lt!53966)))))))

(assert (= (and d!29095 c!18510) b!106151))

(assert (= (and d!29095 (not c!18510)) b!106152))

(declare-fun m!118581 () Bool)

(assert (=> b!106152 m!118581))

(declare-fun m!118583 () Bool)

(assert (=> b!106152 m!118583))

(assert (=> d!29011 d!29095))

(declare-fun b!106154 () Bool)

(declare-fun e!69088 () Bool)

(assert (=> b!106154 (= e!69088 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106154 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!106155 () Bool)

(declare-fun e!69090 () ListLongMap!1533)

(declare-fun e!69086 () ListLongMap!1533)

(assert (=> b!106155 (= e!69090 e!69086)))

(declare-fun c!18511 () Bool)

(assert (=> b!106155 (= c!18511 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106156 () Bool)

(declare-fun e!69089 () Bool)

(declare-fun lt!54395 () ListLongMap!1533)

(assert (=> b!106156 (= e!69089 (= lt!54395 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18323 (_values!2564 newMap!16) lt!53882) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16))))))

(declare-fun b!106157 () Bool)

(assert (=> b!106157 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> b!106157 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (ite c!18323 (_values!2564 newMap!16) lt!53882))))))

(declare-fun e!69085 () Bool)

(assert (=> b!106157 (= e!69085 (= (apply!98 lt!54395 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (ite c!18323 (_values!2564 newMap!16) lt!53882)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106158 () Bool)

(declare-fun e!69087 () Bool)

(assert (=> b!106158 (= e!69087 e!69085)))

(assert (=> b!106158 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun res!52809 () Bool)

(assert (=> b!106158 (= res!52809 (contains!814 lt!54395 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106158 (=> (not res!52809) (not e!69085))))

(declare-fun b!106159 () Bool)

(declare-fun e!69091 () Bool)

(assert (=> b!106159 (= e!69091 e!69087)))

(declare-fun c!18514 () Bool)

(assert (=> b!106159 (= c!18514 e!69088)))

(declare-fun res!52807 () Bool)

(assert (=> b!106159 (=> (not res!52807) (not e!69088))))

(assert (=> b!106159 (= res!52807 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106160 () Bool)

(assert (=> b!106160 (= e!69089 (isEmpty!376 lt!54395))))

(declare-fun d!29097 () Bool)

(assert (=> d!29097 e!69091))

(declare-fun res!52808 () Bool)

(assert (=> d!29097 (=> (not res!52808) (not e!69091))))

(assert (=> d!29097 (= res!52808 (not (contains!814 lt!54395 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29097 (= lt!54395 e!69090)))

(declare-fun c!18513 () Bool)

(assert (=> d!29097 (= c!18513 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29097 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29097 (= (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18323 (_values!2564 newMap!16) lt!53882) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54395)))

(declare-fun b!106153 () Bool)

(assert (=> b!106153 (= e!69090 (ListLongMap!1534 Nil!1593))))

(declare-fun b!106161 () Bool)

(assert (=> b!106161 (= e!69087 e!69089)))

(declare-fun c!18512 () Bool)

(assert (=> b!106161 (= c!18512 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106162 () Bool)

(declare-fun call!11205 () ListLongMap!1533)

(assert (=> b!106162 (= e!69086 call!11205)))

(declare-fun bm!11202 () Bool)

(assert (=> bm!11202 (= call!11205 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18323 (_values!2564 newMap!16) lt!53882) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16)))))

(declare-fun b!106163 () Bool)

(declare-fun res!52806 () Bool)

(assert (=> b!106163 (=> (not res!52806) (not e!69091))))

(assert (=> b!106163 (= res!52806 (not (contains!814 lt!54395 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106164 () Bool)

(declare-fun lt!54400 () Unit!3212)

(declare-fun lt!54396 () Unit!3212)

(assert (=> b!106164 (= lt!54400 lt!54396)))

(declare-fun lt!54397 () ListLongMap!1533)

(declare-fun lt!54399 () (_ BitVec 64))

(declare-fun lt!54394 () (_ BitVec 64))

(declare-fun lt!54398 () V!3217)

(assert (=> b!106164 (not (contains!814 (+!139 lt!54397 (tuple2!2361 lt!54399 lt!54398)) lt!54394))))

(assert (=> b!106164 (= lt!54396 (addStillNotContains!48 lt!54397 lt!54399 lt!54398 lt!54394))))

(assert (=> b!106164 (= lt!54394 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106164 (= lt!54398 (get!1334 (select (arr!2055 (ite c!18323 (_values!2564 newMap!16) lt!53882)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106164 (= lt!54399 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106164 (= lt!54397 call!11205)))

(assert (=> b!106164 (= e!69086 (+!139 call!11205 (tuple2!2361 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) (get!1334 (select (arr!2055 (ite c!18323 (_values!2564 newMap!16) lt!53882)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29097 c!18513) b!106153))

(assert (= (and d!29097 (not c!18513)) b!106155))

(assert (= (and b!106155 c!18511) b!106164))

(assert (= (and b!106155 (not c!18511)) b!106162))

(assert (= (or b!106164 b!106162) bm!11202))

(assert (= (and d!29097 res!52808) b!106163))

(assert (= (and b!106163 res!52806) b!106159))

(assert (= (and b!106159 res!52807) b!106154))

(assert (= (and b!106159 c!18514) b!106158))

(assert (= (and b!106159 (not c!18514)) b!106161))

(assert (= (and b!106158 res!52809) b!106157))

(assert (= (and b!106161 c!18512) b!106156))

(assert (= (and b!106161 (not c!18512)) b!106160))

(declare-fun b_lambda!4751 () Bool)

(assert (=> (not b_lambda!4751) (not b!106157)))

(assert (=> b!106157 t!5683))

(declare-fun b_and!6545 () Bool)

(assert (= b_and!6541 (and (=> t!5683 result!3459) b_and!6545)))

(assert (=> b!106157 t!5685))

(declare-fun b_and!6547 () Bool)

(assert (= b_and!6543 (and (=> t!5685 result!3461) b_and!6547)))

(declare-fun b_lambda!4753 () Bool)

(assert (=> (not b_lambda!4753) (not b!106164)))

(assert (=> b!106164 t!5683))

(declare-fun b_and!6549 () Bool)

(assert (= b_and!6545 (and (=> t!5683 result!3459) b_and!6549)))

(assert (=> b!106164 t!5685))

(declare-fun b_and!6551 () Bool)

(assert (= b_and!6547 (and (=> t!5685 result!3461) b_and!6551)))

(declare-fun m!118585 () Bool)

(assert (=> d!29097 m!118585))

(assert (=> d!29097 m!117661))

(assert (=> b!106154 m!117657))

(assert (=> b!106154 m!117657))

(assert (=> b!106154 m!117663))

(declare-fun m!118587 () Bool)

(assert (=> b!106160 m!118587))

(declare-fun m!118589 () Bool)

(assert (=> b!106156 m!118589))

(assert (=> b!106157 m!118275))

(assert (=> b!106157 m!117653))

(assert (=> b!106157 m!118277))

(assert (=> b!106157 m!117657))

(declare-fun m!118591 () Bool)

(assert (=> b!106157 m!118591))

(assert (=> b!106157 m!117657))

(assert (=> b!106157 m!117653))

(assert (=> b!106157 m!118275))

(assert (=> bm!11202 m!118589))

(declare-fun m!118593 () Bool)

(assert (=> b!106163 m!118593))

(assert (=> b!106155 m!117657))

(assert (=> b!106155 m!117657))

(assert (=> b!106155 m!117663))

(assert (=> b!106158 m!117657))

(assert (=> b!106158 m!117657))

(declare-fun m!118595 () Bool)

(assert (=> b!106158 m!118595))

(assert (=> b!106164 m!118275))

(assert (=> b!106164 m!117653))

(assert (=> b!106164 m!118277))

(declare-fun m!118597 () Bool)

(assert (=> b!106164 m!118597))

(declare-fun m!118599 () Bool)

(assert (=> b!106164 m!118599))

(assert (=> b!106164 m!117657))

(declare-fun m!118601 () Bool)

(assert (=> b!106164 m!118601))

(assert (=> b!106164 m!118275))

(declare-fun m!118603 () Bool)

(assert (=> b!106164 m!118603))

(assert (=> b!106164 m!118597))

(assert (=> b!106164 m!117653))

(assert (=> bm!11188 d!29097))

(declare-fun b!106166 () Bool)

(declare-fun e!69095 () Bool)

(assert (=> b!106166 (= e!69095 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!106166 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!106167 () Bool)

(declare-fun e!69097 () ListLongMap!1533)

(declare-fun e!69093 () ListLongMap!1533)

(assert (=> b!106167 (= e!69097 e!69093)))

(declare-fun c!18515 () Bool)

(assert (=> b!106167 (= c!18515 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun lt!54402 () ListLongMap!1533)

(declare-fun b!106168 () Bool)

(declare-fun e!69096 () Bool)

(assert (=> b!106168 (= e!69096 (= lt!54402 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106169 () Bool)

(assert (=> b!106169 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> b!106169 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_values!2564 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69092 () Bool)

(assert (=> b!106169 (= e!69092 (= (apply!98 lt!54402 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106170 () Bool)

(declare-fun e!69094 () Bool)

(assert (=> b!106170 (= e!69094 e!69092)))

(assert (=> b!106170 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun res!52813 () Bool)

(assert (=> b!106170 (= res!52813 (contains!814 lt!54402 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!106170 (=> (not res!52813) (not e!69092))))

(declare-fun b!106171 () Bool)

(declare-fun e!69098 () Bool)

(assert (=> b!106171 (= e!69098 e!69094)))

(declare-fun c!18518 () Bool)

(assert (=> b!106171 (= c!18518 e!69095)))

(declare-fun res!52811 () Bool)

(assert (=> b!106171 (=> (not res!52811) (not e!69095))))

(assert (=> b!106171 (= res!52811 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106172 () Bool)

(assert (=> b!106172 (= e!69096 (isEmpty!376 lt!54402))))

(declare-fun d!29099 () Bool)

(assert (=> d!29099 e!69098))

(declare-fun res!52812 () Bool)

(assert (=> d!29099 (=> (not res!52812) (not e!69098))))

(assert (=> d!29099 (= res!52812 (not (contains!814 lt!54402 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29099 (= lt!54402 e!69097)))

(declare-fun c!18517 () Bool)

(assert (=> d!29099 (= c!18517 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29099 (validMask!0 (mask!6727 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!29099 (= (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))) lt!54402)))

(declare-fun b!106165 () Bool)

(assert (=> b!106165 (= e!69097 (ListLongMap!1534 Nil!1593))))

(declare-fun b!106173 () Bool)

(assert (=> b!106173 (= e!69094 e!69096)))

(declare-fun c!18516 () Bool)

(assert (=> b!106173 (= c!18516 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106174 () Bool)

(declare-fun call!11206 () ListLongMap!1533)

(assert (=> b!106174 (= e!69093 call!11206)))

(declare-fun bm!11203 () Bool)

(assert (=> bm!11203 (= call!11206 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (_values!2564 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992))) (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) (minValue!2456 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!106175 () Bool)

(declare-fun res!52810 () Bool)

(assert (=> b!106175 (=> (not res!52810) (not e!69098))))

(assert (=> b!106175 (= res!52810 (not (contains!814 lt!54402 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106176 () Bool)

(declare-fun lt!54407 () Unit!3212)

(declare-fun lt!54403 () Unit!3212)

(assert (=> b!106176 (= lt!54407 lt!54403)))

(declare-fun lt!54404 () ListLongMap!1533)

(declare-fun lt!54405 () V!3217)

(declare-fun lt!54401 () (_ BitVec 64))

(declare-fun lt!54406 () (_ BitVec 64))

(assert (=> b!106176 (not (contains!814 (+!139 lt!54404 (tuple2!2361 lt!54406 lt!54405)) lt!54401))))

(assert (=> b!106176 (= lt!54403 (addStillNotContains!48 lt!54404 lt!54406 lt!54405 lt!54401))))

(assert (=> b!106176 (= lt!54401 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106176 (= lt!54405 (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106176 (= lt!54406 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!106176 (= lt!54404 call!11206)))

(assert (=> b!106176 (= e!69093 (+!139 call!11206 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29099 c!18517) b!106165))

(assert (= (and d!29099 (not c!18517)) b!106167))

(assert (= (and b!106167 c!18515) b!106176))

(assert (= (and b!106167 (not c!18515)) b!106174))

(assert (= (or b!106176 b!106174) bm!11203))

(assert (= (and d!29099 res!52812) b!106175))

(assert (= (and b!106175 res!52810) b!106171))

(assert (= (and b!106171 res!52811) b!106166))

(assert (= (and b!106171 c!18518) b!106170))

(assert (= (and b!106171 (not c!18518)) b!106173))

(assert (= (and b!106170 res!52813) b!106169))

(assert (= (and b!106173 c!18516) b!106168))

(assert (= (and b!106173 (not c!18516)) b!106172))

(declare-fun b_lambda!4755 () Bool)

(assert (=> (not b_lambda!4755) (not b!106169)))

(assert (=> b!106169 t!5668))

(declare-fun b_and!6553 () Bool)

(assert (= b_and!6549 (and (=> t!5668 result!3439) b_and!6553)))

(assert (=> b!106169 t!5670))

(declare-fun b_and!6555 () Bool)

(assert (= b_and!6551 (and (=> t!5670 result!3443) b_and!6555)))

(declare-fun b_lambda!4757 () Bool)

(assert (=> (not b_lambda!4757) (not b!106176)))

(assert (=> b!106176 t!5668))

(declare-fun b_and!6557 () Bool)

(assert (= b_and!6553 (and (=> t!5668 result!3439) b_and!6557)))

(assert (=> b!106176 t!5670))

(declare-fun b_and!6559 () Bool)

(assert (= b_and!6555 (and (=> t!5670 result!3443) b_and!6559)))

(declare-fun m!118605 () Bool)

(assert (=> d!29099 m!118605))

(assert (=> d!29099 m!117279))

(assert (=> b!106166 m!118513))

(assert (=> b!106166 m!118513))

(declare-fun m!118607 () Bool)

(assert (=> b!106166 m!118607))

(declare-fun m!118609 () Bool)

(assert (=> b!106172 m!118609))

(declare-fun m!118611 () Bool)

(assert (=> b!106168 m!118611))

(declare-fun m!118613 () Bool)

(assert (=> b!106169 m!118613))

(assert (=> b!106169 m!117297))

(declare-fun m!118615 () Bool)

(assert (=> b!106169 m!118615))

(assert (=> b!106169 m!118513))

(declare-fun m!118617 () Bool)

(assert (=> b!106169 m!118617))

(assert (=> b!106169 m!118513))

(assert (=> b!106169 m!117297))

(assert (=> b!106169 m!118613))

(assert (=> bm!11203 m!118611))

(declare-fun m!118619 () Bool)

(assert (=> b!106175 m!118619))

(assert (=> b!106167 m!118513))

(assert (=> b!106167 m!118513))

(assert (=> b!106167 m!118607))

(assert (=> b!106170 m!118513))

(assert (=> b!106170 m!118513))

(declare-fun m!118621 () Bool)

(assert (=> b!106170 m!118621))

(assert (=> b!106176 m!118613))

(assert (=> b!106176 m!117297))

(assert (=> b!106176 m!118615))

(declare-fun m!118623 () Bool)

(assert (=> b!106176 m!118623))

(declare-fun m!118625 () Bool)

(assert (=> b!106176 m!118625))

(assert (=> b!106176 m!118513))

(declare-fun m!118627 () Bool)

(assert (=> b!106176 m!118627))

(assert (=> b!106176 m!118613))

(declare-fun m!118629 () Bool)

(assert (=> b!106176 m!118629))

(assert (=> b!106176 m!118623))

(assert (=> b!106176 m!117297))

(assert (=> bm!11155 d!29099))

(declare-fun b!106177 () Bool)

(declare-fun e!69099 () Option!163)

(assert (=> b!106177 (= e!69099 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54049)))))))

(declare-fun c!18519 () Bool)

(declare-fun d!29101 () Bool)

(assert (=> d!29101 (= c!18519 (and ((_ is Cons!1592) (toList!782 lt!54049)) (= (_1!1191 (h!2189 (toList!782 lt!54049))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!29101 (= (getValueByKey!157 (toList!782 lt!54049) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) e!69099)))

(declare-fun b!106179 () Bool)

(declare-fun e!69100 () Option!163)

(assert (=> b!106179 (= e!69100 (getValueByKey!157 (t!5671 (toList!782 lt!54049)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106178 () Bool)

(assert (=> b!106178 (= e!69099 e!69100)))

(declare-fun c!18520 () Bool)

(assert (=> b!106178 (= c!18520 (and ((_ is Cons!1592) (toList!782 lt!54049)) (not (= (_1!1191 (h!2189 (toList!782 lt!54049))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun b!106180 () Bool)

(assert (=> b!106180 (= e!69100 None!161)))

(assert (= (and d!29101 c!18519) b!106177))

(assert (= (and d!29101 (not c!18519)) b!106178))

(assert (= (and b!106178 c!18520) b!106179))

(assert (= (and b!106178 (not c!18520)) b!106180))

(declare-fun m!118631 () Bool)

(assert (=> b!106179 m!118631))

(assert (=> b!105660 d!29101))

(assert (=> d!28923 d!28921))

(declare-fun d!29103 () Bool)

(assert (=> d!29103 (= (getValueByKey!157 lt!53998 (_1!1191 lt!53718)) (Some!162 (_2!1191 lt!53718)))))

(assert (=> d!29103 true))

(declare-fun _$22!434 () Unit!3212)

(assert (=> d!29103 (= (choose!662 lt!53998 (_1!1191 lt!53718) (_2!1191 lt!53718)) _$22!434)))

(declare-fun bs!4368 () Bool)

(assert (= bs!4368 d!29103))

(assert (=> bs!4368 m!117617))

(assert (=> d!28923 d!29103))

(declare-fun d!29105 () Bool)

(declare-fun res!52814 () Bool)

(declare-fun e!69101 () Bool)

(assert (=> d!29105 (=> res!52814 e!69101)))

(assert (=> d!29105 (= res!52814 (or ((_ is Nil!1593) lt!53998) ((_ is Nil!1593) (t!5671 lt!53998))))))

(assert (=> d!29105 (= (isStrictlySorted!296 lt!53998) e!69101)))

(declare-fun b!106181 () Bool)

(declare-fun e!69102 () Bool)

(assert (=> b!106181 (= e!69101 e!69102)))

(declare-fun res!52815 () Bool)

(assert (=> b!106181 (=> (not res!52815) (not e!69102))))

(assert (=> b!106181 (= res!52815 (bvslt (_1!1191 (h!2189 lt!53998)) (_1!1191 (h!2189 (t!5671 lt!53998)))))))

(declare-fun b!106182 () Bool)

(assert (=> b!106182 (= e!69102 (isStrictlySorted!296 (t!5671 lt!53998)))))

(assert (= (and d!29105 (not res!52814)) b!106181))

(assert (= (and b!106181 res!52815) b!106182))

(declare-fun m!118633 () Bool)

(assert (=> b!106182 m!118633))

(assert (=> d!28923 d!29105))

(declare-fun d!29107 () Bool)

(declare-fun res!52816 () Bool)

(declare-fun e!69103 () Bool)

(assert (=> d!29107 (=> res!52816 e!69103)))

(assert (=> d!29107 (= res!52816 (and ((_ is Cons!1592) lt!53965) (= (_1!1191 (h!2189 lt!53965)) (_1!1191 lt!53713))))))

(assert (=> d!29107 (= (containsKey!160 lt!53965 (_1!1191 lt!53713)) e!69103)))

(declare-fun b!106183 () Bool)

(declare-fun e!69104 () Bool)

(assert (=> b!106183 (= e!69103 e!69104)))

(declare-fun res!52817 () Bool)

(assert (=> b!106183 (=> (not res!52817) (not e!69104))))

(assert (=> b!106183 (= res!52817 (and (or (not ((_ is Cons!1592) lt!53965)) (bvsle (_1!1191 (h!2189 lt!53965)) (_1!1191 lt!53713))) ((_ is Cons!1592) lt!53965) (bvslt (_1!1191 (h!2189 lt!53965)) (_1!1191 lt!53713))))))

(declare-fun b!106184 () Bool)

(assert (=> b!106184 (= e!69104 (containsKey!160 (t!5671 lt!53965) (_1!1191 lt!53713)))))

(assert (= (and d!29107 (not res!52816)) b!106183))

(assert (= (and b!106183 res!52817) b!106184))

(declare-fun m!118635 () Bool)

(assert (=> b!106184 m!118635))

(assert (=> b!105689 d!29107))

(declare-fun d!29109 () Bool)

(assert (=> d!29109 (= (get!1338 (getValueByKey!157 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2898 (getValueByKey!157 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28993 d!29109))

(assert (=> d!28993 d!29041))

(declare-fun d!29111 () Bool)

(assert (=> d!29111 (contains!814 (getCurrentListMap!469 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873)))))

(assert (=> d!29111 true))

(declare-fun _$16!126 () Unit!3212)

(assert (=> d!29111 (= (choose!663 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3161 lt!53873) (defaultEntry!2581 newMap!16)) _$16!126)))

(declare-fun bs!4369 () Bool)

(assert (= bs!4369 d!29111))

(assert (=> bs!4369 m!117849))

(assert (=> bs!4369 m!117461))

(assert (=> bs!4369 m!117849))

(assert (=> bs!4369 m!117461))

(assert (=> bs!4369 m!117851))

(assert (=> d!28861 d!29111))

(assert (=> d!28861 d!29089))

(declare-fun d!29113 () Bool)

(declare-fun lt!54408 () Bool)

(assert (=> d!29113 (= lt!54408 (select (content!111 (t!5671 (toList!782 lt!53966))) lt!53713))))

(declare-fun e!69105 () Bool)

(assert (=> d!29113 (= lt!54408 e!69105)))

(declare-fun res!52818 () Bool)

(assert (=> d!29113 (=> (not res!52818) (not e!69105))))

(assert (=> d!29113 (= res!52818 ((_ is Cons!1592) (t!5671 (toList!782 lt!53966))))))

(assert (=> d!29113 (= (contains!816 (t!5671 (toList!782 lt!53966)) lt!53713) lt!54408)))

(declare-fun b!106185 () Bool)

(declare-fun e!69106 () Bool)

(assert (=> b!106185 (= e!69105 e!69106)))

(declare-fun res!52819 () Bool)

(assert (=> b!106185 (=> res!52819 e!69106)))

(assert (=> b!106185 (= res!52819 (= (h!2189 (t!5671 (toList!782 lt!53966))) lt!53713))))

(declare-fun b!106186 () Bool)

(assert (=> b!106186 (= e!69106 (contains!816 (t!5671 (t!5671 (toList!782 lt!53966))) lt!53713))))

(assert (= (and d!29113 res!52818) b!106185))

(assert (= (and b!106185 (not res!52819)) b!106186))

(assert (=> d!29113 m!118583))

(declare-fun m!118637 () Bool)

(assert (=> d!29113 m!118637))

(declare-fun m!118639 () Bool)

(assert (=> b!106186 m!118639))

(assert (=> b!106071 d!29113))

(declare-fun d!29115 () Bool)

(declare-fun e!69107 () Bool)

(assert (=> d!29115 e!69107))

(declare-fun res!52820 () Bool)

(assert (=> d!29115 (=> res!52820 e!69107)))

(declare-fun lt!54410 () Bool)

(assert (=> d!29115 (= res!52820 (not lt!54410))))

(declare-fun lt!54411 () Bool)

(assert (=> d!29115 (= lt!54410 lt!54411)))

(declare-fun lt!54412 () Unit!3212)

(declare-fun e!69108 () Unit!3212)

(assert (=> d!29115 (= lt!54412 e!69108)))

(declare-fun c!18521 () Bool)

(assert (=> d!29115 (= c!18521 lt!54411)))

(assert (=> d!29115 (= lt!54411 (containsKey!160 (toList!782 lt!54053) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!29115 (= (contains!814 lt!54053 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54410)))

(declare-fun b!106187 () Bool)

(declare-fun lt!54409 () Unit!3212)

(assert (=> b!106187 (= e!69108 lt!54409)))

(assert (=> b!106187 (= lt!54409 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54053) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> b!106187 (isDefined!109 (getValueByKey!157 (toList!782 lt!54053) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106188 () Bool)

(declare-fun Unit!3247 () Unit!3212)

(assert (=> b!106188 (= e!69108 Unit!3247)))

(declare-fun b!106189 () Bool)

(assert (=> b!106189 (= e!69107 (isDefined!109 (getValueByKey!157 (toList!782 lt!54053) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (= (and d!29115 c!18521) b!106187))

(assert (= (and d!29115 (not c!18521)) b!106188))

(assert (= (and d!29115 (not res!52820)) b!106189))

(declare-fun m!118641 () Bool)

(assert (=> d!29115 m!118641))

(declare-fun m!118643 () Bool)

(assert (=> b!106187 m!118643))

(assert (=> b!106187 m!117755))

(assert (=> b!106187 m!117755))

(declare-fun m!118645 () Bool)

(assert (=> b!106187 m!118645))

(assert (=> b!106189 m!117755))

(assert (=> b!106189 m!117755))

(assert (=> b!106189 m!118645))

(assert (=> d!28833 d!29115))

(declare-fun b!106190 () Bool)

(declare-fun e!69109 () Option!163)

(assert (=> b!106190 (= e!69109 (Some!162 (_2!1191 (h!2189 lt!54052))))))

(declare-fun c!18522 () Bool)

(declare-fun d!29117 () Bool)

(assert (=> d!29117 (= c!18522 (and ((_ is Cons!1592) lt!54052) (= (_1!1191 (h!2189 lt!54052)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!29117 (= (getValueByKey!157 lt!54052 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) e!69109)))

(declare-fun b!106192 () Bool)

(declare-fun e!69110 () Option!163)

(assert (=> b!106192 (= e!69110 (getValueByKey!157 (t!5671 lt!54052) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106191 () Bool)

(assert (=> b!106191 (= e!69109 e!69110)))

(declare-fun c!18523 () Bool)

(assert (=> b!106191 (= c!18523 (and ((_ is Cons!1592) lt!54052) (not (= (_1!1191 (h!2189 lt!54052)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun b!106193 () Bool)

(assert (=> b!106193 (= e!69110 None!161)))

(assert (= (and d!29117 c!18522) b!106190))

(assert (= (and d!29117 (not c!18522)) b!106191))

(assert (= (and b!106191 c!18523) b!106192))

(assert (= (and b!106191 (not c!18523)) b!106193))

(declare-fun m!118647 () Bool)

(assert (=> b!106192 m!118647))

(assert (=> d!28833 d!29117))

(declare-fun d!29119 () Bool)

(assert (=> d!29119 (= (getValueByKey!157 lt!54052 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun lt!54413 () Unit!3212)

(assert (=> d!29119 (= lt!54413 (choose!662 lt!54052 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun e!69111 () Bool)

(assert (=> d!29119 e!69111))

(declare-fun res!52821 () Bool)

(assert (=> d!29119 (=> (not res!52821) (not e!69111))))

(assert (=> d!29119 (= res!52821 (isStrictlySorted!296 lt!54052))))

(assert (=> d!29119 (= (lemmaContainsTupThenGetReturnValue!73 lt!54052 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54413)))

(declare-fun b!106194 () Bool)

(declare-fun res!52822 () Bool)

(assert (=> b!106194 (=> (not res!52822) (not e!69111))))

(assert (=> b!106194 (= res!52822 (containsKey!160 lt!54052 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106195 () Bool)

(assert (=> b!106195 (= e!69111 (contains!816 lt!54052 (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (= (and d!29119 res!52821) b!106194))

(assert (= (and b!106194 res!52822) b!106195))

(assert (=> d!29119 m!117749))

(declare-fun m!118649 () Bool)

(assert (=> d!29119 m!118649))

(declare-fun m!118651 () Bool)

(assert (=> d!29119 m!118651))

(declare-fun m!118653 () Bool)

(assert (=> b!106194 m!118653))

(declare-fun m!118655 () Bool)

(assert (=> b!106195 m!118655))

(assert (=> d!28833 d!29119))

(declare-fun bm!11204 () Bool)

(declare-fun call!11209 () List!1596)

(declare-fun call!11208 () List!1596)

(assert (=> bm!11204 (= call!11209 call!11208)))

(declare-fun e!69112 () List!1596)

(declare-fun b!106196 () Bool)

(declare-fun c!18524 () Bool)

(declare-fun c!18526 () Bool)

(assert (=> b!106196 (= e!69112 (ite c!18526 (t!5671 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (ite c!18524 (Cons!1592 (h!2189 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (t!5671 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) Nil!1593)))))

(declare-fun b!106197 () Bool)

(declare-fun e!69115 () List!1596)

(assert (=> b!106197 (= e!69115 call!11208)))

(declare-fun b!106199 () Bool)

(assert (=> b!106199 (= c!18524 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (bvsgt (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun e!69114 () List!1596)

(assert (=> b!106199 (= e!69115 e!69114)))

(declare-fun c!18525 () Bool)

(declare-fun call!11207 () List!1596)

(declare-fun bm!11205 () Bool)

(assert (=> bm!11205 (= call!11207 ($colon$colon!80 e!69112 (ite c!18525 (h!2189 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun c!18527 () Bool)

(assert (=> bm!11205 (= c!18527 c!18525)))

(declare-fun b!106200 () Bool)

(assert (=> b!106200 (= e!69114 call!11209)))

(declare-fun b!106201 () Bool)

(assert (=> b!106201 (= e!69114 call!11209)))

(declare-fun b!106202 () Bool)

(declare-fun res!52824 () Bool)

(declare-fun e!69113 () Bool)

(assert (=> b!106202 (=> (not res!52824) (not e!69113))))

(declare-fun lt!54414 () List!1596)

(assert (=> b!106202 (= res!52824 (containsKey!160 lt!54414 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106203 () Bool)

(assert (=> b!106203 (= e!69113 (contains!816 lt!54414 (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!106204 () Bool)

(declare-fun e!69116 () List!1596)

(assert (=> b!106204 (= e!69116 e!69115)))

(assert (=> b!106204 (= c!18526 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun d!29121 () Bool)

(assert (=> d!29121 e!69113))

(declare-fun res!52823 () Bool)

(assert (=> d!29121 (=> (not res!52823) (not e!69113))))

(assert (=> d!29121 (= res!52823 (isStrictlySorted!296 lt!54414))))

(assert (=> d!29121 (= lt!54414 e!69116)))

(assert (=> d!29121 (= c!18525 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (bvslt (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!29121 (isStrictlySorted!296 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29121 (= (insertStrictlySorted!76 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54414)))

(declare-fun b!106198 () Bool)

(assert (=> b!106198 (= e!69112 (insertStrictlySorted!76 (t!5671 (toList!782 (+!139 lt!53714 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun bm!11206 () Bool)

(assert (=> bm!11206 (= call!11208 call!11207)))

(declare-fun b!106205 () Bool)

(assert (=> b!106205 (= e!69116 call!11207)))

(assert (= (and d!29121 c!18525) b!106205))

(assert (= (and d!29121 (not c!18525)) b!106204))

(assert (= (and b!106204 c!18526) b!106197))

(assert (= (and b!106204 (not c!18526)) b!106199))

(assert (= (and b!106199 c!18524) b!106201))

(assert (= (and b!106199 (not c!18524)) b!106200))

(assert (= (or b!106201 b!106200) bm!11204))

(assert (= (or b!106197 bm!11204) bm!11206))

(assert (= (or b!106205 bm!11206) bm!11205))

(assert (= (and bm!11205 c!18527) b!106198))

(assert (= (and bm!11205 (not c!18527)) b!106196))

(assert (= (and d!29121 res!52823) b!106202))

(assert (= (and b!106202 res!52824) b!106203))

(declare-fun m!118657 () Bool)

(assert (=> bm!11205 m!118657))

(declare-fun m!118659 () Bool)

(assert (=> d!29121 m!118659))

(declare-fun m!118661 () Bool)

(assert (=> d!29121 m!118661))

(declare-fun m!118663 () Bool)

(assert (=> b!106203 m!118663))

(declare-fun m!118665 () Bool)

(assert (=> b!106202 m!118665))

(declare-fun m!118667 () Bool)

(assert (=> b!106198 m!118667))

(assert (=> d!28833 d!29121))

(declare-fun b!106206 () Bool)

(declare-fun e!69117 () Option!163)

(assert (=> b!106206 (= e!69117 (Some!162 (_2!1191 (h!2189 (t!5671 lt!53969)))))))

(declare-fun d!29123 () Bool)

(declare-fun c!18528 () Bool)

(assert (=> d!29123 (= c!18528 (and ((_ is Cons!1592) (t!5671 lt!53969)) (= (_1!1191 (h!2189 (t!5671 lt!53969))) (_1!1191 lt!53718))))))

(assert (=> d!29123 (= (getValueByKey!157 (t!5671 lt!53969) (_1!1191 lt!53718)) e!69117)))

(declare-fun b!106208 () Bool)

(declare-fun e!69118 () Option!163)

(assert (=> b!106208 (= e!69118 (getValueByKey!157 (t!5671 (t!5671 lt!53969)) (_1!1191 lt!53718)))))

(declare-fun b!106207 () Bool)

(assert (=> b!106207 (= e!69117 e!69118)))

(declare-fun c!18529 () Bool)

(assert (=> b!106207 (= c!18529 (and ((_ is Cons!1592) (t!5671 lt!53969)) (not (= (_1!1191 (h!2189 (t!5671 lt!53969))) (_1!1191 lt!53718)))))))

(declare-fun b!106209 () Bool)

(assert (=> b!106209 (= e!69118 None!161)))

(assert (= (and d!29123 c!18528) b!106206))

(assert (= (and d!29123 (not c!18528)) b!106207))

(assert (= (and b!106207 c!18529) b!106208))

(assert (= (and b!106207 (not c!18529)) b!106209))

(declare-fun m!118669 () Bool)

(assert (=> b!106208 m!118669))

(assert (=> b!105861 d!29123))

(declare-fun d!29125 () Bool)

(assert (=> d!29125 (= ($colon$colon!80 e!68908 (ite c!18435 (h!2189 (toList!782 (+!139 lt!53714 lt!53713))) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718)))) (Cons!1592 (ite c!18435 (h!2189 (toList!782 (+!139 lt!53714 lt!53713))) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))) e!68908))))

(assert (=> bm!11167 d!29125))

(declare-fun b!106210 () Bool)

(declare-fun e!69120 () Bool)

(declare-fun call!11210 () Bool)

(assert (=> b!106210 (= e!69120 call!11210)))

(declare-fun d!29127 () Bool)

(declare-fun res!52825 () Bool)

(declare-fun e!69121 () Bool)

(assert (=> d!29127 (=> res!52825 e!69121)))

(assert (=> d!29127 (= res!52825 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29127 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992)))) e!69121)))

(declare-fun bm!11207 () Bool)

(assert (=> bm!11207 (= call!11210 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4287 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!106211 () Bool)

(assert (=> b!106211 (= e!69121 e!69120)))

(declare-fun c!18530 () Bool)

(assert (=> b!106211 (= c!18530 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!106212 () Bool)

(declare-fun e!69119 () Bool)

(assert (=> b!106212 (= e!69119 call!11210)))

(declare-fun b!106213 () Bool)

(assert (=> b!106213 (= e!69120 e!69119)))

(declare-fun lt!54415 () (_ BitVec 64))

(assert (=> b!106213 (= lt!54415 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!54417 () Unit!3212)

(assert (=> b!106213 (= lt!54417 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) lt!54415 #b00000000000000000000000000000000))))

(assert (=> b!106213 (arrayContainsKey!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) lt!54415 #b00000000000000000000000000000000)))

(declare-fun lt!54416 () Unit!3212)

(assert (=> b!106213 (= lt!54416 lt!54417)))

(declare-fun res!52826 () Bool)

(assert (=> b!106213 (= res!52826 (= (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000) (_keys!4287 (v!2892 (underlying!361 thiss!992))) (mask!6727 (v!2892 (underlying!361 thiss!992)))) (Found!253 #b00000000000000000000000000000000)))))

(assert (=> b!106213 (=> (not res!52826) (not e!69119))))

(assert (= (and d!29127 (not res!52825)) b!106211))

(assert (= (and b!106211 c!18530) b!106213))

(assert (= (and b!106211 (not c!18530)) b!106210))

(assert (= (and b!106213 res!52826) b!106212))

(assert (= (or b!106212 b!106210) bm!11207))

(declare-fun m!118671 () Bool)

(assert (=> bm!11207 m!118671))

(assert (=> b!106211 m!118469))

(assert (=> b!106211 m!118469))

(assert (=> b!106211 m!118473))

(assert (=> b!106213 m!118469))

(declare-fun m!118673 () Bool)

(assert (=> b!106213 m!118673))

(declare-fun m!118675 () Bool)

(assert (=> b!106213 m!118675))

(assert (=> b!106213 m!118469))

(declare-fun m!118677 () Bool)

(assert (=> b!106213 m!118677))

(assert (=> b!105927 d!29127))

(declare-fun b!106214 () Bool)

(declare-fun e!69122 () Option!163)

(assert (=> b!106214 (= e!69122 (Some!162 (_2!1191 (h!2189 (t!5671 lt!53965)))))))

(declare-fun d!29129 () Bool)

(declare-fun c!18531 () Bool)

(assert (=> d!29129 (= c!18531 (and ((_ is Cons!1592) (t!5671 lt!53965)) (= (_1!1191 (h!2189 (t!5671 lt!53965))) (_1!1191 lt!53713))))))

(assert (=> d!29129 (= (getValueByKey!157 (t!5671 lt!53965) (_1!1191 lt!53713)) e!69122)))

(declare-fun b!106216 () Bool)

(declare-fun e!69123 () Option!163)

(assert (=> b!106216 (= e!69123 (getValueByKey!157 (t!5671 (t!5671 lt!53965)) (_1!1191 lt!53713)))))

(declare-fun b!106215 () Bool)

(assert (=> b!106215 (= e!69122 e!69123)))

(declare-fun c!18532 () Bool)

(assert (=> b!106215 (= c!18532 (and ((_ is Cons!1592) (t!5671 lt!53965)) (not (= (_1!1191 (h!2189 (t!5671 lt!53965))) (_1!1191 lt!53713)))))))

(declare-fun b!106217 () Bool)

(assert (=> b!106217 (= e!69123 None!161)))

(assert (= (and d!29129 c!18531) b!106214))

(assert (= (and d!29129 (not c!18531)) b!106215))

(assert (= (and b!106215 c!18532) b!106216))

(assert (= (and b!106215 (not c!18532)) b!106217))

(declare-fun m!118679 () Bool)

(assert (=> b!106216 m!118679))

(assert (=> b!105683 d!29129))

(declare-fun b!106218 () Bool)

(declare-fun e!69124 () Option!163)

(assert (=> b!106218 (= e!69124 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54061)))))))

(declare-fun d!29131 () Bool)

(declare-fun c!18533 () Bool)

(assert (=> d!29131 (= c!18533 (and ((_ is Cons!1592) (toList!782 lt!54061)) (= (_1!1191 (h!2189 (toList!782 lt!54061))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29131 (= (getValueByKey!157 (toList!782 lt!54061) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69124)))

(declare-fun b!106220 () Bool)

(declare-fun e!69125 () Option!163)

(assert (=> b!106220 (= e!69125 (getValueByKey!157 (t!5671 (toList!782 lt!54061)) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106219 () Bool)

(assert (=> b!106219 (= e!69124 e!69125)))

(declare-fun c!18534 () Bool)

(assert (=> b!106219 (= c!18534 (and ((_ is Cons!1592) (toList!782 lt!54061)) (not (= (_1!1191 (h!2189 (toList!782 lt!54061))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106221 () Bool)

(assert (=> b!106221 (= e!69125 None!161)))

(assert (= (and d!29131 c!18533) b!106218))

(assert (= (and d!29131 (not c!18533)) b!106219))

(assert (= (and b!106219 c!18534) b!106220))

(assert (= (and b!106219 (not c!18534)) b!106221))

(declare-fun m!118681 () Bool)

(assert (=> b!106220 m!118681))

(assert (=> b!105666 d!29131))

(declare-fun bm!11208 () Bool)

(declare-fun call!11211 () Bool)

(declare-fun c!18535 () Bool)

(assert (=> bm!11208 (= call!11211 (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18535 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!18395 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594))) (ite c!18395 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)))))))

(declare-fun b!106223 () Bool)

(declare-fun e!69129 () Bool)

(declare-fun e!69128 () Bool)

(assert (=> b!106223 (= e!69129 e!69128)))

(assert (=> b!106223 (= c!18535 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!106224 () Bool)

(assert (=> b!106224 (= e!69128 call!11211)))

(declare-fun e!69127 () Bool)

(declare-fun b!106225 () Bool)

(assert (=> b!106225 (= e!69127 (contains!817 (ite c!18395 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!106226 () Bool)

(assert (=> b!106226 (= e!69128 call!11211)))

(declare-fun b!106222 () Bool)

(declare-fun e!69126 () Bool)

(assert (=> b!106222 (= e!69126 e!69129)))

(declare-fun res!52828 () Bool)

(assert (=> b!106222 (=> (not res!52828) (not e!69129))))

(assert (=> b!106222 (= res!52828 (not e!69127))))

(declare-fun res!52827 () Bool)

(assert (=> b!106222 (=> (not res!52827) (not e!69127))))

(assert (=> b!106222 (= res!52827 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!29133 () Bool)

(declare-fun res!52829 () Bool)

(assert (=> d!29133 (=> res!52829 e!69126)))

(assert (=> d!29133 (= res!52829 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29133 (= (arrayNoDuplicates!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18395 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594))) e!69126)))

(assert (= (and d!29133 (not res!52829)) b!106222))

(assert (= (and b!106222 res!52827) b!106225))

(assert (= (and b!106222 res!52828) b!106223))

(assert (= (and b!106223 c!18535) b!106224))

(assert (= (and b!106223 (not c!18535)) b!106226))

(assert (= (or b!106224 b!106226) bm!11208))

(declare-fun m!118683 () Bool)

(assert (=> bm!11208 m!118683))

(declare-fun m!118685 () Bool)

(assert (=> bm!11208 m!118685))

(assert (=> b!106223 m!118683))

(assert (=> b!106223 m!118683))

(declare-fun m!118687 () Bool)

(assert (=> b!106223 m!118687))

(assert (=> b!106225 m!118683))

(assert (=> b!106225 m!118683))

(declare-fun m!118689 () Bool)

(assert (=> b!106225 m!118689))

(assert (=> b!106222 m!118683))

(assert (=> b!106222 m!118683))

(assert (=> b!106222 m!118687))

(assert (=> bm!11154 d!29133))

(assert (=> bm!11177 d!29007))

(declare-fun d!29135 () Bool)

(assert (=> d!29135 (= (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105974 d!29135))

(assert (=> d!28825 d!29089))

(declare-fun d!29137 () Bool)

(declare-fun res!52830 () Bool)

(declare-fun e!69130 () Bool)

(assert (=> d!29137 (=> res!52830 e!69130)))

(assert (=> d!29137 (= res!52830 (and ((_ is Cons!1592) lt!54190) (= (_1!1191 (h!2189 lt!54190)) (_1!1191 lt!53713))))))

(assert (=> d!29137 (= (containsKey!160 lt!54190 (_1!1191 lt!53713)) e!69130)))

(declare-fun b!106227 () Bool)

(declare-fun e!69131 () Bool)

(assert (=> b!106227 (= e!69130 e!69131)))

(declare-fun res!52831 () Bool)

(assert (=> b!106227 (=> (not res!52831) (not e!69131))))

(assert (=> b!106227 (= res!52831 (and (or (not ((_ is Cons!1592) lt!54190)) (bvsle (_1!1191 (h!2189 lt!54190)) (_1!1191 lt!53713))) ((_ is Cons!1592) lt!54190) (bvslt (_1!1191 (h!2189 lt!54190)) (_1!1191 lt!53713))))))

(declare-fun b!106228 () Bool)

(assert (=> b!106228 (= e!69131 (containsKey!160 (t!5671 lt!54190) (_1!1191 lt!53713)))))

(assert (= (and d!29137 (not res!52830)) b!106227))

(assert (= (and b!106227 res!52831) b!106228))

(declare-fun m!118691 () Bool)

(assert (=> b!106228 m!118691))

(assert (=> b!105890 d!29137))

(declare-fun d!29139 () Bool)

(declare-fun e!69132 () Bool)

(assert (=> d!29139 e!69132))

(declare-fun res!52832 () Bool)

(assert (=> d!29139 (=> res!52832 e!69132)))

(declare-fun lt!54419 () Bool)

(assert (=> d!29139 (= res!52832 (not lt!54419))))

(declare-fun lt!54420 () Bool)

(assert (=> d!29139 (= lt!54419 lt!54420)))

(declare-fun lt!54421 () Unit!3212)

(declare-fun e!69133 () Unit!3212)

(assert (=> d!29139 (= lt!54421 e!69133)))

(declare-fun c!18536 () Bool)

(assert (=> d!29139 (= c!18536 lt!54420)))

(assert (=> d!29139 (= lt!54420 (containsKey!160 (toList!782 lt!54251) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29139 (= (contains!814 lt!54251 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54419)))

(declare-fun b!106229 () Bool)

(declare-fun lt!54418 () Unit!3212)

(assert (=> b!106229 (= e!69133 lt!54418)))

(assert (=> b!106229 (= lt!54418 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54251) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106229 (isDefined!109 (getValueByKey!157 (toList!782 lt!54251) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106230 () Bool)

(declare-fun Unit!3248 () Unit!3212)

(assert (=> b!106230 (= e!69133 Unit!3248)))

(declare-fun b!106231 () Bool)

(assert (=> b!106231 (= e!69132 (isDefined!109 (getValueByKey!157 (toList!782 lt!54251) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29139 c!18536) b!106229))

(assert (= (and d!29139 (not c!18536)) b!106230))

(assert (= (and d!29139 (not res!52832)) b!106231))

(declare-fun m!118693 () Bool)

(assert (=> d!29139 m!118693))

(declare-fun m!118695 () Bool)

(assert (=> b!106229 m!118695))

(declare-fun m!118697 () Bool)

(assert (=> b!106229 m!118697))

(assert (=> b!106229 m!118697))

(declare-fun m!118699 () Bool)

(assert (=> b!106229 m!118699))

(assert (=> b!106231 m!118697))

(assert (=> b!106231 m!118697))

(assert (=> b!106231 m!118699))

(assert (=> bm!11184 d!29139))

(declare-fun d!29141 () Bool)

(declare-fun e!69134 () Bool)

(assert (=> d!29141 e!69134))

(declare-fun res!52833 () Bool)

(assert (=> d!29141 (=> res!52833 e!69134)))

(declare-fun lt!54423 () Bool)

(assert (=> d!29141 (= res!52833 (not lt!54423))))

(declare-fun lt!54424 () Bool)

(assert (=> d!29141 (= lt!54423 lt!54424)))

(declare-fun lt!54425 () Unit!3212)

(declare-fun e!69135 () Unit!3212)

(assert (=> d!29141 (= lt!54425 e!69135)))

(declare-fun c!18537 () Bool)

(assert (=> d!29141 (= c!18537 lt!54424)))

(assert (=> d!29141 (= lt!54424 (containsKey!160 (toList!782 lt!54061) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29141 (= (contains!814 lt!54061 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54423)))

(declare-fun b!106232 () Bool)

(declare-fun lt!54422 () Unit!3212)

(assert (=> b!106232 (= e!69135 lt!54422)))

(assert (=> b!106232 (= lt!54422 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54061) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106232 (isDefined!109 (getValueByKey!157 (toList!782 lt!54061) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106233 () Bool)

(declare-fun Unit!3249 () Unit!3212)

(assert (=> b!106233 (= e!69135 Unit!3249)))

(declare-fun b!106234 () Bool)

(assert (=> b!106234 (= e!69134 (isDefined!109 (getValueByKey!157 (toList!782 lt!54061) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29141 c!18537) b!106232))

(assert (= (and d!29141 (not c!18537)) b!106233))

(assert (= (and d!29141 (not res!52833)) b!106234))

(declare-fun m!118701 () Bool)

(assert (=> d!29141 m!118701))

(declare-fun m!118703 () Bool)

(assert (=> b!106232 m!118703))

(assert (=> b!106232 m!117779))

(assert (=> b!106232 m!117779))

(declare-fun m!118705 () Bool)

(assert (=> b!106232 m!118705))

(assert (=> b!106234 m!117779))

(assert (=> b!106234 m!117779))

(assert (=> b!106234 m!118705))

(assert (=> d!28839 d!29141))

(declare-fun b!106235 () Bool)

(declare-fun e!69136 () Option!163)

(assert (=> b!106235 (= e!69136 (Some!162 (_2!1191 (h!2189 lt!54060))))))

(declare-fun d!29143 () Bool)

(declare-fun c!18538 () Bool)

(assert (=> d!29143 (= c!18538 (and ((_ is Cons!1592) lt!54060) (= (_1!1191 (h!2189 lt!54060)) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29143 (= (getValueByKey!157 lt!54060 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69136)))

(declare-fun b!106237 () Bool)

(declare-fun e!69137 () Option!163)

(assert (=> b!106237 (= e!69137 (getValueByKey!157 (t!5671 lt!54060) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106236 () Bool)

(assert (=> b!106236 (= e!69136 e!69137)))

(declare-fun c!18539 () Bool)

(assert (=> b!106236 (= c!18539 (and ((_ is Cons!1592) lt!54060) (not (= (_1!1191 (h!2189 lt!54060)) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106238 () Bool)

(assert (=> b!106238 (= e!69137 None!161)))

(assert (= (and d!29143 c!18538) b!106235))

(assert (= (and d!29143 (not c!18538)) b!106236))

(assert (= (and b!106236 c!18539) b!106237))

(assert (= (and b!106236 (not c!18539)) b!106238))

(declare-fun m!118707 () Bool)

(assert (=> b!106237 m!118707))

(assert (=> d!28839 d!29143))

(declare-fun d!29145 () Bool)

(assert (=> d!29145 (= (getValueByKey!157 lt!54060 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54426 () Unit!3212)

(assert (=> d!29145 (= lt!54426 (choose!662 lt!54060 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69138 () Bool)

(assert (=> d!29145 e!69138))

(declare-fun res!52834 () Bool)

(assert (=> d!29145 (=> (not res!52834) (not e!69138))))

(assert (=> d!29145 (= res!52834 (isStrictlySorted!296 lt!54060))))

(assert (=> d!29145 (= (lemmaContainsTupThenGetReturnValue!73 lt!54060 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54426)))

(declare-fun b!106239 () Bool)

(declare-fun res!52835 () Bool)

(assert (=> b!106239 (=> (not res!52835) (not e!69138))))

(assert (=> b!106239 (= res!52835 (containsKey!160 lt!54060 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106240 () Bool)

(assert (=> b!106240 (= e!69138 (contains!816 lt!54060 (tuple2!2361 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29145 res!52834) b!106239))

(assert (= (and b!106239 res!52835) b!106240))

(assert (=> d!29145 m!117773))

(declare-fun m!118709 () Bool)

(assert (=> d!29145 m!118709))

(declare-fun m!118711 () Bool)

(assert (=> d!29145 m!118711))

(declare-fun m!118713 () Bool)

(assert (=> b!106239 m!118713))

(declare-fun m!118715 () Bool)

(assert (=> b!106240 m!118715))

(assert (=> d!28839 d!29145))

(declare-fun bm!11209 () Bool)

(declare-fun call!11214 () List!1596)

(declare-fun call!11213 () List!1596)

(assert (=> bm!11209 (= call!11214 call!11213)))

(declare-fun c!18542 () Bool)

(declare-fun b!106241 () Bool)

(declare-fun e!69139 () List!1596)

(declare-fun c!18540 () Bool)

(assert (=> b!106241 (= e!69139 (ite c!18542 (t!5671 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) (ite c!18540 (Cons!1592 (h!2189 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) (t!5671 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))) Nil!1593)))))

(declare-fun b!106242 () Bool)

(declare-fun e!69142 () List!1596)

(assert (=> b!106242 (= e!69142 call!11213)))

(declare-fun b!106244 () Bool)

(assert (=> b!106244 (= c!18540 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) (bvsgt (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun e!69141 () List!1596)

(assert (=> b!106244 (= e!69142 e!69141)))

(declare-fun bm!11210 () Bool)

(declare-fun call!11212 () List!1596)

(declare-fun c!18541 () Bool)

(assert (=> bm!11210 (= call!11212 ($colon$colon!80 e!69139 (ite c!18541 (h!2189 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) (tuple2!2361 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18543 () Bool)

(assert (=> bm!11210 (= c!18543 c!18541)))

(declare-fun b!106245 () Bool)

(assert (=> b!106245 (= e!69141 call!11214)))

(declare-fun b!106246 () Bool)

(assert (=> b!106246 (= e!69141 call!11214)))

(declare-fun b!106247 () Bool)

(declare-fun res!52837 () Bool)

(declare-fun e!69140 () Bool)

(assert (=> b!106247 (=> (not res!52837) (not e!69140))))

(declare-fun lt!54427 () List!1596)

(assert (=> b!106247 (= res!52837 (containsKey!160 lt!54427 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106248 () Bool)

(assert (=> b!106248 (= e!69140 (contains!816 lt!54427 (tuple2!2361 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106249 () Bool)

(declare-fun e!69143 () List!1596)

(assert (=> b!106249 (= e!69143 e!69142)))

(assert (=> b!106249 (= c!18542 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun d!29147 () Bool)

(assert (=> d!29147 e!69140))

(declare-fun res!52836 () Bool)

(assert (=> d!29147 (=> (not res!52836) (not e!69140))))

(assert (=> d!29147 (= res!52836 (isStrictlySorted!296 lt!54427))))

(assert (=> d!29147 (= lt!54427 e!69143)))

(assert (=> d!29147 (= c!18541 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) (bvslt (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29147 (isStrictlySorted!296 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!29147 (= (insertStrictlySorted!76 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54427)))

(declare-fun b!106243 () Bool)

(assert (=> b!106243 (= e!69139 (insertStrictlySorted!76 (t!5671 (toList!782 (+!139 lt!53714 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun bm!11211 () Bool)

(assert (=> bm!11211 (= call!11213 call!11212)))

(declare-fun b!106250 () Bool)

(assert (=> b!106250 (= e!69143 call!11212)))

(assert (= (and d!29147 c!18541) b!106250))

(assert (= (and d!29147 (not c!18541)) b!106249))

(assert (= (and b!106249 c!18542) b!106242))

(assert (= (and b!106249 (not c!18542)) b!106244))

(assert (= (and b!106244 c!18540) b!106246))

(assert (= (and b!106244 (not c!18540)) b!106245))

(assert (= (or b!106246 b!106245) bm!11209))

(assert (= (or b!106242 bm!11209) bm!11211))

(assert (= (or b!106250 bm!11211) bm!11210))

(assert (= (and bm!11210 c!18543) b!106243))

(assert (= (and bm!11210 (not c!18543)) b!106241))

(assert (= (and d!29147 res!52836) b!106247))

(assert (= (and b!106247 res!52837) b!106248))

(declare-fun m!118717 () Bool)

(assert (=> bm!11210 m!118717))

(declare-fun m!118719 () Bool)

(assert (=> d!29147 m!118719))

(declare-fun m!118721 () Bool)

(assert (=> d!29147 m!118721))

(declare-fun m!118723 () Bool)

(assert (=> b!106248 m!118723))

(declare-fun m!118725 () Bool)

(assert (=> b!106247 m!118725))

(declare-fun m!118727 () Bool)

(assert (=> b!106243 m!118727))

(assert (=> d!28839 d!29147))

(declare-fun d!29149 () Bool)

(assert (=> d!29149 (isDefined!109 (getValueByKey!157 (toList!782 lt!53970) (_1!1191 lt!53718)))))

(declare-fun lt!54428 () Unit!3212)

(assert (=> d!29149 (= lt!54428 (choose!669 (toList!782 lt!53970) (_1!1191 lt!53718)))))

(declare-fun e!69144 () Bool)

(assert (=> d!29149 e!69144))

(declare-fun res!52838 () Bool)

(assert (=> d!29149 (=> (not res!52838) (not e!69144))))

(assert (=> d!29149 (= res!52838 (isStrictlySorted!296 (toList!782 lt!53970)))))

(assert (=> d!29149 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53970) (_1!1191 lt!53718)) lt!54428)))

(declare-fun b!106251 () Bool)

(assert (=> b!106251 (= e!69144 (containsKey!160 (toList!782 lt!53970) (_1!1191 lt!53718)))))

(assert (= (and d!29149 res!52838) b!106251))

(assert (=> d!29149 m!117579))

(assert (=> d!29149 m!117579))

(assert (=> d!29149 m!118137))

(declare-fun m!118729 () Bool)

(assert (=> d!29149 m!118729))

(declare-fun m!118731 () Bool)

(assert (=> d!29149 m!118731))

(assert (=> b!106251 m!118133))

(assert (=> b!105856 d!29149))

(declare-fun d!29151 () Bool)

(assert (=> d!29151 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53970) (_1!1191 lt!53718))) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53970) (_1!1191 lt!53718)))))))

(declare-fun bs!4370 () Bool)

(assert (= bs!4370 d!29151))

(assert (=> bs!4370 m!117579))

(declare-fun m!118733 () Bool)

(assert (=> bs!4370 m!118733))

(assert (=> b!105856 d!29151))

(assert (=> b!105856 d!28935))

(declare-fun d!29153 () Bool)

(declare-fun res!52839 () Bool)

(declare-fun e!69145 () Bool)

(assert (=> d!29153 (=> res!52839 e!69145)))

(assert (=> d!29153 (= res!52839 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53934)))))

(assert (=> d!29153 (= (containsKey!160 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934) e!69145)))

(declare-fun b!106252 () Bool)

(declare-fun e!69146 () Bool)

(assert (=> b!106252 (= e!69145 e!69146)))

(declare-fun res!52840 () Bool)

(assert (=> b!106252 (=> (not res!52840) (not e!69146))))

(assert (=> b!106252 (= res!52840 (and (or (not ((_ is Cons!1592) (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) (bvsle (_1!1191 (h!2189 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53934)) ((_ is Cons!1592) (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (bvslt (_1!1191 (h!2189 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53934)))))

(declare-fun b!106253 () Bool)

(assert (=> b!106253 (= e!69146 (containsKey!160 (t!5671 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) lt!53934))))

(assert (= (and d!29153 (not res!52839)) b!106252))

(assert (= (and b!106252 res!52840) b!106253))

(declare-fun m!118735 () Bool)

(assert (=> b!106253 m!118735))

(assert (=> d!28899 d!29153))

(declare-fun lt!54429 () Bool)

(declare-fun d!29155 () Bool)

(assert (=> d!29155 (= lt!54429 (select (content!111 (toList!782 lt!54053)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(declare-fun e!69147 () Bool)

(assert (=> d!29155 (= lt!54429 e!69147)))

(declare-fun res!52841 () Bool)

(assert (=> d!29155 (=> (not res!52841) (not e!69147))))

(assert (=> d!29155 (= res!52841 ((_ is Cons!1592) (toList!782 lt!54053)))))

(assert (=> d!29155 (= (contains!816 (toList!782 lt!54053) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) lt!54429)))

(declare-fun b!106254 () Bool)

(declare-fun e!69148 () Bool)

(assert (=> b!106254 (= e!69147 e!69148)))

(declare-fun res!52842 () Bool)

(assert (=> b!106254 (=> res!52842 e!69148)))

(assert (=> b!106254 (= res!52842 (= (h!2189 (toList!782 lt!54053)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(declare-fun b!106255 () Bool)

(assert (=> b!106255 (= e!69148 (contains!816 (t!5671 (toList!782 lt!54053)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(assert (= (and d!29155 res!52841) b!106254))

(assert (= (and b!106254 (not res!52842)) b!106255))

(declare-fun m!118737 () Bool)

(assert (=> d!29155 m!118737))

(declare-fun m!118739 () Bool)

(assert (=> d!29155 m!118739))

(declare-fun m!118741 () Bool)

(assert (=> b!106255 m!118741))

(assert (=> b!105663 d!29155))

(declare-fun bm!11212 () Bool)

(declare-fun call!11215 () Bool)

(declare-fun c!18544 () Bool)

(assert (=> bm!11212 (= call!11215 (arrayNoDuplicates!0 (_keys!4287 (_2!1192 lt!53868)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18544 (Cons!1593 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000) Nil!1594) Nil!1594)))))

(declare-fun b!106257 () Bool)

(declare-fun e!69152 () Bool)

(declare-fun e!69151 () Bool)

(assert (=> b!106257 (= e!69152 e!69151)))

(assert (=> b!106257 (= c!18544 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000)))))

(declare-fun b!106258 () Bool)

(assert (=> b!106258 (= e!69151 call!11215)))

(declare-fun b!106259 () Bool)

(declare-fun e!69150 () Bool)

(assert (=> b!106259 (= e!69150 (contains!817 Nil!1594 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000)))))

(declare-fun b!106260 () Bool)

(assert (=> b!106260 (= e!69151 call!11215)))

(declare-fun b!106256 () Bool)

(declare-fun e!69149 () Bool)

(assert (=> b!106256 (= e!69149 e!69152)))

(declare-fun res!52844 () Bool)

(assert (=> b!106256 (=> (not res!52844) (not e!69152))))

(assert (=> b!106256 (= res!52844 (not e!69150))))

(declare-fun res!52843 () Bool)

(assert (=> b!106256 (=> (not res!52843) (not e!69150))))

(assert (=> b!106256 (= res!52843 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000)))))

(declare-fun d!29157 () Bool)

(declare-fun res!52845 () Bool)

(assert (=> d!29157 (=> res!52845 e!69149)))

(assert (=> d!29157 (= res!52845 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))))))

(assert (=> d!29157 (= (arrayNoDuplicates!0 (_keys!4287 (_2!1192 lt!53868)) #b00000000000000000000000000000000 Nil!1594) e!69149)))

(assert (= (and d!29157 (not res!52845)) b!106256))

(assert (= (and b!106256 res!52843) b!106259))

(assert (= (and b!106256 res!52844) b!106257))

(assert (= (and b!106257 c!18544) b!106258))

(assert (= (and b!106257 (not c!18544)) b!106260))

(assert (= (or b!106258 b!106260) bm!11212))

(declare-fun m!118743 () Bool)

(assert (=> bm!11212 m!118743))

(declare-fun m!118745 () Bool)

(assert (=> bm!11212 m!118745))

(assert (=> b!106257 m!118743))

(assert (=> b!106257 m!118743))

(declare-fun m!118747 () Bool)

(assert (=> b!106257 m!118747))

(assert (=> b!106259 m!118743))

(assert (=> b!106259 m!118743))

(declare-fun m!118749 () Bool)

(assert (=> b!106259 m!118749))

(assert (=> b!106256 m!118743))

(assert (=> b!106256 m!118743))

(assert (=> b!106256 m!118747))

(assert (=> b!105659 d!29157))

(assert (=> b!106061 d!28865))

(declare-fun d!29159 () Bool)

(assert (=> d!29159 (= (apply!98 lt!54251 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1338 (getValueByKey!157 (toList!782 lt!54251) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4371 () Bool)

(assert (= bs!4371 d!29159))

(assert (=> bs!4371 m!118697))

(assert (=> bs!4371 m!118697))

(declare-fun m!118751 () Bool)

(assert (=> bs!4371 m!118751))

(assert (=> b!105979 d!29159))

(declare-fun d!29161 () Bool)

(declare-fun res!52846 () Bool)

(declare-fun e!69153 () Bool)

(assert (=> d!29161 (=> res!52846 e!69153)))

(assert (=> d!29161 (= res!52846 (and ((_ is Cons!1592) (toList!782 lt!53992)) (= (_1!1191 (h!2189 (toList!782 lt!53992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29161 (= (containsKey!160 (toList!782 lt!53992) #b0000000000000000000000000000000000000000000000000000000000000000) e!69153)))

(declare-fun b!106261 () Bool)

(declare-fun e!69154 () Bool)

(assert (=> b!106261 (= e!69153 e!69154)))

(declare-fun res!52847 () Bool)

(assert (=> b!106261 (=> (not res!52847) (not e!69154))))

(assert (=> b!106261 (= res!52847 (and (or (not ((_ is Cons!1592) (toList!782 lt!53992))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53992))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1592) (toList!782 lt!53992)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106262 () Bool)

(assert (=> b!106262 (= e!69154 (containsKey!160 (t!5671 (toList!782 lt!53992)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29161 (not res!52846)) b!106261))

(assert (= (and b!106261 res!52847) b!106262))

(declare-fun m!118753 () Bool)

(assert (=> b!106262 m!118753))

(assert (=> d!28965 d!29161))

(declare-fun d!29163 () Bool)

(declare-fun res!52848 () Bool)

(declare-fun e!69155 () Bool)

(assert (=> d!29163 (=> res!52848 e!69155)))

(assert (=> d!29163 (= res!52848 (or ((_ is Nil!1593) lt!54152) ((_ is Nil!1593) (t!5671 lt!54152))))))

(assert (=> d!29163 (= (isStrictlySorted!296 lt!54152) e!69155)))

(declare-fun b!106263 () Bool)

(declare-fun e!69156 () Bool)

(assert (=> b!106263 (= e!69155 e!69156)))

(declare-fun res!52849 () Bool)

(assert (=> b!106263 (=> (not res!52849) (not e!69156))))

(assert (=> b!106263 (= res!52849 (bvslt (_1!1191 (h!2189 lt!54152)) (_1!1191 (h!2189 (t!5671 lt!54152)))))))

(declare-fun b!106264 () Bool)

(assert (=> b!106264 (= e!69156 (isStrictlySorted!296 (t!5671 lt!54152)))))

(assert (= (and d!29163 (not res!52848)) b!106263))

(assert (= (and b!106263 res!52849) b!106264))

(declare-fun m!118755 () Bool)

(assert (=> b!106264 m!118755))

(assert (=> d!28925 d!29163))

(assert (=> d!28925 d!29067))

(declare-fun d!29165 () Bool)

(declare-fun res!52850 () Bool)

(declare-fun e!69157 () Bool)

(assert (=> d!29165 (=> res!52850 e!69157)))

(assert (=> d!29165 (= res!52850 (and ((_ is Cons!1592) (toList!782 lt!53948)) (= (_1!1191 (h!2189 (toList!782 lt!53948))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29165 (= (containsKey!160 (toList!782 lt!53948) #b1000000000000000000000000000000000000000000000000000000000000000) e!69157)))

(declare-fun b!106265 () Bool)

(declare-fun e!69158 () Bool)

(assert (=> b!106265 (= e!69157 e!69158)))

(declare-fun res!52851 () Bool)

(assert (=> b!106265 (=> (not res!52851) (not e!69158))))

(assert (=> b!106265 (= res!52851 (and (or (not ((_ is Cons!1592) (toList!782 lt!53948))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53948))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1592) (toList!782 lt!53948)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53948))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106266 () Bool)

(assert (=> b!106266 (= e!69158 (containsKey!160 (t!5671 (toList!782 lt!53948)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29165 (not res!52850)) b!106265))

(assert (= (and b!106265 res!52851) b!106266))

(declare-fun m!118757 () Bool)

(assert (=> b!106266 m!118757))

(assert (=> d!28927 d!29165))

(declare-fun bm!11213 () Bool)

(declare-fun call!11218 () List!1596)

(declare-fun call!11217 () List!1596)

(assert (=> bm!11213 (= call!11218 call!11217)))

(declare-fun c!18545 () Bool)

(declare-fun b!106267 () Bool)

(declare-fun e!69159 () List!1596)

(declare-fun c!18547 () Bool)

(assert (=> b!106267 (= e!69159 (ite c!18547 (t!5671 (t!5671 (toList!782 (+!139 lt!53714 lt!53718)))) (ite c!18545 (Cons!1592 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53718)))) (t!5671 (t!5671 (toList!782 (+!139 lt!53714 lt!53718))))) Nil!1593)))))

(declare-fun b!106268 () Bool)

(declare-fun e!69162 () List!1596)

(assert (=> b!106268 (= e!69162 call!11217)))

(declare-fun b!106270 () Bool)

(assert (=> b!106270 (= c!18545 (and ((_ is Cons!1592) (t!5671 (toList!782 (+!139 lt!53714 lt!53718)))) (bvsgt (_1!1191 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53718))))) (_1!1191 lt!53713))))))

(declare-fun e!69161 () List!1596)

(assert (=> b!106270 (= e!69162 e!69161)))

(declare-fun bm!11214 () Bool)

(declare-fun call!11216 () List!1596)

(declare-fun c!18546 () Bool)

(assert (=> bm!11214 (= call!11216 ($colon$colon!80 e!69159 (ite c!18546 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53718)))) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713)))))))

(declare-fun c!18548 () Bool)

(assert (=> bm!11214 (= c!18548 c!18546)))

(declare-fun b!106271 () Bool)

(assert (=> b!106271 (= e!69161 call!11218)))

(declare-fun b!106272 () Bool)

(assert (=> b!106272 (= e!69161 call!11218)))

(declare-fun b!106273 () Bool)

(declare-fun res!52853 () Bool)

(declare-fun e!69160 () Bool)

(assert (=> b!106273 (=> (not res!52853) (not e!69160))))

(declare-fun lt!54430 () List!1596)

(assert (=> b!106273 (= res!52853 (containsKey!160 lt!54430 (_1!1191 lt!53713)))))

(declare-fun b!106274 () Bool)

(assert (=> b!106274 (= e!69160 (contains!816 lt!54430 (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun b!106275 () Bool)

(declare-fun e!69163 () List!1596)

(assert (=> b!106275 (= e!69163 e!69162)))

(assert (=> b!106275 (= c!18547 (and ((_ is Cons!1592) (t!5671 (toList!782 (+!139 lt!53714 lt!53718)))) (= (_1!1191 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53718))))) (_1!1191 lt!53713))))))

(declare-fun d!29167 () Bool)

(assert (=> d!29167 e!69160))

(declare-fun res!52852 () Bool)

(assert (=> d!29167 (=> (not res!52852) (not e!69160))))

(assert (=> d!29167 (= res!52852 (isStrictlySorted!296 lt!54430))))

(assert (=> d!29167 (= lt!54430 e!69163)))

(assert (=> d!29167 (= c!18546 (and ((_ is Cons!1592) (t!5671 (toList!782 (+!139 lt!53714 lt!53718)))) (bvslt (_1!1191 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53718))))) (_1!1191 lt!53713))))))

(assert (=> d!29167 (isStrictlySorted!296 (t!5671 (toList!782 (+!139 lt!53714 lt!53718))))))

(assert (=> d!29167 (= (insertStrictlySorted!76 (t!5671 (toList!782 (+!139 lt!53714 lt!53718))) (_1!1191 lt!53713) (_2!1191 lt!53713)) lt!54430)))

(declare-fun b!106269 () Bool)

(assert (=> b!106269 (= e!69159 (insertStrictlySorted!76 (t!5671 (t!5671 (toList!782 (+!139 lt!53714 lt!53718)))) (_1!1191 lt!53713) (_2!1191 lt!53713)))))

(declare-fun bm!11215 () Bool)

(assert (=> bm!11215 (= call!11217 call!11216)))

(declare-fun b!106276 () Bool)

(assert (=> b!106276 (= e!69163 call!11216)))

(assert (= (and d!29167 c!18546) b!106276))

(assert (= (and d!29167 (not c!18546)) b!106275))

(assert (= (and b!106275 c!18547) b!106268))

(assert (= (and b!106275 (not c!18547)) b!106270))

(assert (= (and b!106270 c!18545) b!106272))

(assert (= (and b!106270 (not c!18545)) b!106271))

(assert (= (or b!106272 b!106271) bm!11213))

(assert (= (or b!106268 bm!11213) bm!11215))

(assert (= (or b!106276 bm!11215) bm!11214))

(assert (= (and bm!11214 c!18548) b!106269))

(assert (= (and bm!11214 (not c!18548)) b!106267))

(assert (= (and d!29167 res!52852) b!106273))

(assert (= (and b!106273 res!52853) b!106274))

(declare-fun m!118759 () Bool)

(assert (=> bm!11214 m!118759))

(declare-fun m!118761 () Bool)

(assert (=> d!29167 m!118761))

(declare-fun m!118763 () Bool)

(assert (=> d!29167 m!118763))

(declare-fun m!118765 () Bool)

(assert (=> b!106274 m!118765))

(declare-fun m!118767 () Bool)

(assert (=> b!106273 m!118767))

(declare-fun m!118769 () Bool)

(assert (=> b!106269 m!118769))

(assert (=> b!105713 d!29167))

(assert (=> b!105975 d!29135))

(declare-fun d!29169 () Bool)

(assert (=> d!29169 (arrayContainsKey!0 (_keys!4287 newMap!16) lt!54045 #b00000000000000000000000000000000)))

(declare-fun lt!54433 () Unit!3212)

(declare-fun choose!13 (array!4331 (_ BitVec 64) (_ BitVec 32)) Unit!3212)

(assert (=> d!29169 (= lt!54433 (choose!13 (_keys!4287 newMap!16) lt!54045 #b00000000000000000000000000000000))))

(assert (=> d!29169 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!29169 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4287 newMap!16) lt!54045 #b00000000000000000000000000000000) lt!54433)))

(declare-fun bs!4372 () Bool)

(assert (= bs!4372 d!29169))

(assert (=> bs!4372 m!117723))

(declare-fun m!118771 () Bool)

(assert (=> bs!4372 m!118771))

(assert (=> b!105656 d!29169))

(declare-fun d!29171 () Bool)

(declare-fun res!52854 () Bool)

(declare-fun e!69164 () Bool)

(assert (=> d!29171 (=> res!52854 e!69164)))

(assert (=> d!29171 (= res!52854 (= (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) lt!54045))))

(assert (=> d!29171 (= (arrayContainsKey!0 (_keys!4287 newMap!16) lt!54045 #b00000000000000000000000000000000) e!69164)))

(declare-fun b!106277 () Bool)

(declare-fun e!69165 () Bool)

(assert (=> b!106277 (= e!69164 e!69165)))

(declare-fun res!52855 () Bool)

(assert (=> b!106277 (=> (not res!52855) (not e!69165))))

(assert (=> b!106277 (= res!52855 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106278 () Bool)

(assert (=> b!106278 (= e!69165 (arrayContainsKey!0 (_keys!4287 newMap!16) lt!54045 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!29171 (not res!52854)) b!106277))

(assert (= (and b!106277 res!52855) b!106278))

(assert (=> d!29171 m!117657))

(declare-fun m!118773 () Bool)

(assert (=> b!106278 m!118773))

(assert (=> b!105656 d!29171))

(declare-fun b!106279 () Bool)

(declare-fun e!69166 () SeekEntryResult!253)

(declare-fun e!69167 () SeekEntryResult!253)

(assert (=> b!106279 (= e!69166 e!69167)))

(declare-fun lt!54436 () (_ BitVec 64))

(declare-fun lt!54435 () SeekEntryResult!253)

(assert (=> b!106279 (= lt!54436 (select (arr!2054 (_keys!4287 newMap!16)) (index!3162 lt!54435)))))

(declare-fun c!18549 () Bool)

(assert (=> b!106279 (= c!18549 (= lt!54436 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106281 () Bool)

(declare-fun e!69168 () SeekEntryResult!253)

(assert (=> b!106281 (= e!69168 (MissingZero!253 (index!3162 lt!54435)))))

(declare-fun b!106282 () Bool)

(assert (=> b!106282 (= e!69166 Undefined!253)))

(declare-fun b!106283 () Bool)

(assert (=> b!106283 (= e!69167 (Found!253 (index!3162 lt!54435)))))

(declare-fun b!106284 () Bool)

(assert (=> b!106284 (= e!69168 (seekKeyOrZeroReturnVacant!0 (x!13639 lt!54435) (index!3162 lt!54435) (index!3162 lt!54435) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(declare-fun d!29173 () Bool)

(declare-fun lt!54434 () SeekEntryResult!253)

(assert (=> d!29173 (and (or ((_ is Undefined!253) lt!54434) (not ((_ is Found!253) lt!54434)) (and (bvsge (index!3161 lt!54434) #b00000000000000000000000000000000) (bvslt (index!3161 lt!54434) (size!2309 (_keys!4287 newMap!16))))) (or ((_ is Undefined!253) lt!54434) ((_ is Found!253) lt!54434) (not ((_ is MissingZero!253) lt!54434)) (and (bvsge (index!3160 lt!54434) #b00000000000000000000000000000000) (bvslt (index!3160 lt!54434) (size!2309 (_keys!4287 newMap!16))))) (or ((_ is Undefined!253) lt!54434) ((_ is Found!253) lt!54434) ((_ is MissingZero!253) lt!54434) (not ((_ is MissingVacant!253) lt!54434)) (and (bvsge (index!3163 lt!54434) #b00000000000000000000000000000000) (bvslt (index!3163 lt!54434) (size!2309 (_keys!4287 newMap!16))))) (or ((_ is Undefined!253) lt!54434) (ite ((_ is Found!253) lt!54434) (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!54434)) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!253) lt!54434) (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3160 lt!54434)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!253) lt!54434) (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3163 lt!54434)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29173 (= lt!54434 e!69166)))

(declare-fun c!18551 () Bool)

(assert (=> d!29173 (= c!18551 (and ((_ is Intermediate!253) lt!54435) (undefined!1065 lt!54435)))))

(assert (=> d!29173 (= lt!54435 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) (mask!6727 newMap!16)) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(assert (=> d!29173 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29173 (= (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) (_keys!4287 newMap!16) (mask!6727 newMap!16)) lt!54434)))

(declare-fun b!106280 () Bool)

(declare-fun c!18550 () Bool)

(assert (=> b!106280 (= c!18550 (= lt!54436 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106280 (= e!69167 e!69168)))

(assert (= (and d!29173 c!18551) b!106282))

(assert (= (and d!29173 (not c!18551)) b!106279))

(assert (= (and b!106279 c!18549) b!106283))

(assert (= (and b!106279 (not c!18549)) b!106280))

(assert (= (and b!106280 c!18550) b!106281))

(assert (= (and b!106280 (not c!18550)) b!106284))

(declare-fun m!118775 () Bool)

(assert (=> b!106279 m!118775))

(assert (=> b!106284 m!117657))

(declare-fun m!118777 () Bool)

(assert (=> b!106284 m!118777))

(assert (=> d!29173 m!117661))

(assert (=> d!29173 m!117657))

(declare-fun m!118779 () Bool)

(assert (=> d!29173 m!118779))

(declare-fun m!118781 () Bool)

(assert (=> d!29173 m!118781))

(declare-fun m!118783 () Bool)

(assert (=> d!29173 m!118783))

(declare-fun m!118785 () Bool)

(assert (=> d!29173 m!118785))

(assert (=> d!29173 m!118779))

(assert (=> d!29173 m!117657))

(declare-fun m!118787 () Bool)

(assert (=> d!29173 m!118787))

(assert (=> b!105656 d!29173))

(declare-fun d!29175 () Bool)

(declare-fun res!52856 () Bool)

(declare-fun e!69169 () Bool)

(assert (=> d!29175 (=> res!52856 e!69169)))

(assert (=> d!29175 (= res!52856 (and ((_ is Cons!1592) (toList!782 lt!53992)) (= (_1!1191 (h!2189 (toList!782 lt!53992))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29175 (= (containsKey!160 (toList!782 lt!53992) #b1000000000000000000000000000000000000000000000000000000000000000) e!69169)))

(declare-fun b!106285 () Bool)

(declare-fun e!69170 () Bool)

(assert (=> b!106285 (= e!69169 e!69170)))

(declare-fun res!52857 () Bool)

(assert (=> b!106285 (=> (not res!52857) (not e!69170))))

(assert (=> b!106285 (= res!52857 (and (or (not ((_ is Cons!1592) (toList!782 lt!53992))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53992))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1592) (toList!782 lt!53992)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53992))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106286 () Bool)

(assert (=> b!106286 (= e!69170 (containsKey!160 (t!5671 (toList!782 lt!53992)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29175 (not res!52856)) b!106285))

(assert (= (and b!106285 res!52857) b!106286))

(declare-fun m!118789 () Bool)

(assert (=> b!106286 m!118789))

(assert (=> d!29003 d!29175))

(declare-fun d!29177 () Bool)

(declare-fun lt!54437 () Bool)

(assert (=> d!29177 (= lt!54437 (select (content!111 (toList!782 lt!54061)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69171 () Bool)

(assert (=> d!29177 (= lt!54437 e!69171)))

(declare-fun res!52858 () Bool)

(assert (=> d!29177 (=> (not res!52858) (not e!69171))))

(assert (=> d!29177 (= res!52858 ((_ is Cons!1592) (toList!782 lt!54061)))))

(assert (=> d!29177 (= (contains!816 (toList!782 lt!54061) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54437)))

(declare-fun b!106287 () Bool)

(declare-fun e!69172 () Bool)

(assert (=> b!106287 (= e!69171 e!69172)))

(declare-fun res!52859 () Bool)

(assert (=> b!106287 (=> res!52859 e!69172)))

(assert (=> b!106287 (= res!52859 (= (h!2189 (toList!782 lt!54061)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106288 () Bool)

(assert (=> b!106288 (= e!69172 (contains!816 (t!5671 (toList!782 lt!54061)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29177 res!52858) b!106287))

(assert (= (and b!106287 (not res!52859)) b!106288))

(declare-fun m!118791 () Bool)

(assert (=> d!29177 m!118791))

(declare-fun m!118793 () Bool)

(assert (=> d!29177 m!118793))

(declare-fun m!118795 () Bool)

(assert (=> b!106288 m!118795))

(assert (=> b!105667 d!29177))

(assert (=> b!105721 d!29091))

(declare-fun d!29179 () Bool)

(assert (=> d!29179 (= (inRange!0 (index!3161 lt!54093) (mask!6727 newMap!16)) (and (bvsge (index!3161 lt!54093) #b00000000000000000000000000000000) (bvslt (index!3161 lt!54093) (bvadd (mask!6727 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!105741 d!29179))

(assert (=> d!28911 d!28913))

(assert (=> d!28911 d!28915))

(declare-fun d!29181 () Bool)

(assert (=> d!29181 (isDefined!109 (getValueByKey!157 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29181 true))

(declare-fun _$12!353 () Unit!3212)

(assert (=> d!29181 (= (choose!669 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) _$12!353)))

(declare-fun bs!4373 () Bool)

(assert (= bs!4373 d!29181))

(assert (=> bs!4373 m!117261))

(assert (=> bs!4373 m!117421))

(assert (=> bs!4373 m!117421))

(assert (=> bs!4373 m!117423))

(assert (=> d!28911 d!29181))

(declare-fun d!29183 () Bool)

(declare-fun res!52860 () Bool)

(declare-fun e!69173 () Bool)

(assert (=> d!29183 (=> res!52860 e!69173)))

(assert (=> d!29183 (= res!52860 (or ((_ is Nil!1593) (toList!782 lt!53721)) ((_ is Nil!1593) (t!5671 (toList!782 lt!53721)))))))

(assert (=> d!29183 (= (isStrictlySorted!296 (toList!782 lt!53721)) e!69173)))

(declare-fun b!106289 () Bool)

(declare-fun e!69174 () Bool)

(assert (=> b!106289 (= e!69173 e!69174)))

(declare-fun res!52861 () Bool)

(assert (=> b!106289 (=> (not res!52861) (not e!69174))))

(assert (=> b!106289 (= res!52861 (bvslt (_1!1191 (h!2189 (toList!782 lt!53721))) (_1!1191 (h!2189 (t!5671 (toList!782 lt!53721))))))))

(declare-fun b!106290 () Bool)

(assert (=> b!106290 (= e!69174 (isStrictlySorted!296 (t!5671 (toList!782 lt!53721))))))

(assert (= (and d!29183 (not res!52860)) b!106289))

(assert (= (and b!106289 res!52861) b!106290))

(declare-fun m!118797 () Bool)

(assert (=> b!106290 m!118797))

(assert (=> d!28911 d!29183))

(declare-fun d!29185 () Bool)

(assert (=> d!29185 (= (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53942)) (v!2898 (getValueByKey!157 (toList!782 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53942)))))

(assert (=> d!28887 d!29185))

(declare-fun e!69175 () Option!163)

(declare-fun b!106291 () Bool)

(assert (=> b!106291 (= e!69175 (Some!162 (_2!1191 (h!2189 (toList!782 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun c!18552 () Bool)

(declare-fun d!29187 () Bool)

(assert (=> d!29187 (= c!18552 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53942)))))

(assert (=> d!29187 (= (getValueByKey!157 (toList!782 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53942) e!69175)))

(declare-fun e!69176 () Option!163)

(declare-fun b!106293 () Bool)

(assert (=> b!106293 (= e!69176 (getValueByKey!157 (t!5671 (toList!782 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) lt!53942))))

(declare-fun b!106292 () Bool)

(assert (=> b!106292 (= e!69175 e!69176)))

(declare-fun c!18553 () Bool)

(assert (=> b!106292 (= c!18553 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) (not (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53941 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53942))))))

(declare-fun b!106294 () Bool)

(assert (=> b!106294 (= e!69176 None!161)))

(assert (= (and d!29187 c!18552) b!106291))

(assert (= (and d!29187 (not c!18552)) b!106292))

(assert (= (and b!106292 c!18553) b!106293))

(assert (= (and b!106292 (not c!18553)) b!106294))

(declare-fun m!118799 () Bool)

(assert (=> b!106293 m!118799))

(assert (=> d!28887 d!29187))

(declare-fun d!29189 () Bool)

(assert (not d!29189))

(assert (=> b!105611 d!29189))

(assert (=> b!105998 d!29135))

(declare-fun d!29191 () Bool)

(declare-fun lt!54438 () Bool)

(assert (=> d!29191 (= lt!54438 (select (content!111 lt!54152) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun e!69177 () Bool)

(assert (=> d!29191 (= lt!54438 e!69177)))

(declare-fun res!52862 () Bool)

(assert (=> d!29191 (=> (not res!52862) (not e!69177))))

(assert (=> d!29191 (= res!52862 ((_ is Cons!1592) lt!54152))))

(assert (=> d!29191 (= (contains!816 lt!54152 (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))) lt!54438)))

(declare-fun b!106295 () Bool)

(declare-fun e!69178 () Bool)

(assert (=> b!106295 (= e!69177 e!69178)))

(declare-fun res!52863 () Bool)

(assert (=> b!106295 (=> res!52863 e!69178)))

(assert (=> b!106295 (= res!52863 (= (h!2189 lt!54152) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun b!106296 () Bool)

(assert (=> b!106296 (= e!69178 (contains!816 (t!5671 lt!54152) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(assert (= (and d!29191 res!52862) b!106295))

(assert (= (and b!106295 (not res!52863)) b!106296))

(declare-fun m!118801 () Bool)

(assert (=> d!29191 m!118801))

(declare-fun m!118803 () Bool)

(assert (=> d!29191 m!118803))

(declare-fun m!118805 () Bool)

(assert (=> b!106296 m!118805))

(assert (=> b!105815 d!29191))

(declare-fun d!29193 () Bool)

(assert (=> d!29193 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934))))

(declare-fun lt!54439 () Unit!3212)

(assert (=> d!29193 (= lt!54439 (choose!669 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934))))

(declare-fun e!69179 () Bool)

(assert (=> d!29193 e!69179))

(declare-fun res!52864 () Bool)

(assert (=> d!29193 (=> (not res!52864) (not e!69179))))

(assert (=> d!29193 (= res!52864 (isStrictlySorted!296 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29193 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934) lt!54439)))

(declare-fun b!106297 () Bool)

(assert (=> b!106297 (= e!69179 (containsKey!160 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934))))

(assert (= (and d!29193 res!52864) b!106297))

(assert (=> d!29193 m!117987))

(assert (=> d!29193 m!117987))

(assert (=> d!29193 m!117989))

(declare-fun m!118807 () Bool)

(assert (=> d!29193 m!118807))

(declare-fun m!118809 () Bool)

(assert (=> d!29193 m!118809))

(assert (=> b!106297 m!117983))

(assert (=> b!105774 d!29193))

(declare-fun d!29195 () Bool)

(assert (=> d!29195 (= (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934)) (not (isEmpty!377 (getValueByKey!157 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934))))))

(declare-fun bs!4374 () Bool)

(assert (= bs!4374 d!29195))

(assert (=> bs!4374 m!117987))

(declare-fun m!118811 () Bool)

(assert (=> bs!4374 m!118811))

(assert (=> b!105774 d!29195))

(declare-fun b!106298 () Bool)

(declare-fun e!69180 () Option!163)

(assert (=> b!106298 (= e!69180 (Some!162 (_2!1191 (h!2189 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun c!18554 () Bool)

(declare-fun d!29197 () Bool)

(assert (=> d!29197 (= c!18554 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53934)))))

(assert (=> d!29197 (= (getValueByKey!157 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53934) e!69180)))

(declare-fun e!69181 () Option!163)

(declare-fun b!106300 () Bool)

(assert (=> b!106300 (= e!69181 (getValueByKey!157 (t!5671 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) lt!53934))))

(declare-fun b!106299 () Bool)

(assert (=> b!106299 (= e!69180 e!69181)))

(declare-fun c!18555 () Bool)

(assert (=> b!106299 (= c!18555 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (not (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53934))))))

(declare-fun b!106301 () Bool)

(assert (=> b!106301 (= e!69181 None!161)))

(assert (= (and d!29197 c!18554) b!106298))

(assert (= (and d!29197 (not c!18554)) b!106299))

(assert (= (and b!106299 c!18555) b!106300))

(assert (= (and b!106299 (not c!18555)) b!106301))

(declare-fun m!118813 () Bool)

(assert (=> b!106300 m!118813))

(assert (=> b!105774 d!29197))

(assert (=> d!28871 d!28879))

(assert (=> d!28871 d!28895))

(declare-fun d!29199 () Bool)

(assert (=> d!29199 (= (apply!98 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53939) (apply!98 lt!53944 lt!53939))))

(assert (=> d!29199 true))

(declare-fun _$34!888 () Unit!3212)

(assert (=> d!29199 (= (choose!666 lt!53944 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53939) _$34!888)))

(declare-fun bs!4375 () Bool)

(assert (= bs!4375 d!29199))

(assert (=> bs!4375 m!117517))

(assert (=> bs!4375 m!117517))

(assert (=> bs!4375 m!117519))

(assert (=> bs!4375 m!117507))

(assert (=> d!28871 d!29199))

(declare-fun d!29201 () Bool)

(declare-fun e!69182 () Bool)

(assert (=> d!29201 e!69182))

(declare-fun res!52865 () Bool)

(assert (=> d!29201 (=> res!52865 e!69182)))

(declare-fun lt!54441 () Bool)

(assert (=> d!29201 (= res!52865 (not lt!54441))))

(declare-fun lt!54442 () Bool)

(assert (=> d!29201 (= lt!54441 lt!54442)))

(declare-fun lt!54443 () Unit!3212)

(declare-fun e!69183 () Unit!3212)

(assert (=> d!29201 (= lt!54443 e!69183)))

(declare-fun c!18556 () Bool)

(assert (=> d!29201 (= c!18556 lt!54442)))

(assert (=> d!29201 (= lt!54442 (containsKey!160 (toList!782 lt!53944) lt!53939))))

(assert (=> d!29201 (= (contains!814 lt!53944 lt!53939) lt!54441)))

(declare-fun b!106302 () Bool)

(declare-fun lt!54440 () Unit!3212)

(assert (=> b!106302 (= e!69183 lt!54440)))

(assert (=> b!106302 (= lt!54440 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53944) lt!53939))))

(assert (=> b!106302 (isDefined!109 (getValueByKey!157 (toList!782 lt!53944) lt!53939))))

(declare-fun b!106303 () Bool)

(declare-fun Unit!3250 () Unit!3212)

(assert (=> b!106303 (= e!69183 Unit!3250)))

(declare-fun b!106304 () Bool)

(assert (=> b!106304 (= e!69182 (isDefined!109 (getValueByKey!157 (toList!782 lt!53944) lt!53939)))))

(assert (= (and d!29201 c!18556) b!106302))

(assert (= (and d!29201 (not c!18556)) b!106303))

(assert (= (and d!29201 (not res!52865)) b!106304))

(declare-fun m!118815 () Bool)

(assert (=> d!29201 m!118815))

(declare-fun m!118817 () Bool)

(assert (=> b!106302 m!118817))

(assert (=> b!106302 m!117979))

(assert (=> b!106302 m!117979))

(declare-fun m!118819 () Bool)

(assert (=> b!106302 m!118819))

(assert (=> b!106304 m!117979))

(assert (=> b!106304 m!117979))

(assert (=> b!106304 m!118819))

(assert (=> d!28871 d!29201))

(assert (=> d!28871 d!28897))

(declare-fun d!29203 () Bool)

(declare-fun e!69184 () Bool)

(assert (=> d!29203 e!69184))

(declare-fun res!52866 () Bool)

(assert (=> d!29203 (=> res!52866 e!69184)))

(declare-fun lt!54445 () Bool)

(assert (=> d!29203 (= res!52866 (not lt!54445))))

(declare-fun lt!54446 () Bool)

(assert (=> d!29203 (= lt!54445 lt!54446)))

(declare-fun lt!54447 () Unit!3212)

(declare-fun e!69185 () Unit!3212)

(assert (=> d!29203 (= lt!54447 e!69185)))

(declare-fun c!18557 () Bool)

(assert (=> d!29203 (= c!18557 lt!54446)))

(assert (=> d!29203 (= lt!54446 (containsKey!160 (toList!782 lt!54173) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29203 (= (contains!814 lt!54173 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) lt!54445)))

(declare-fun b!106305 () Bool)

(declare-fun lt!54444 () Unit!3212)

(assert (=> b!106305 (= e!69185 lt!54444)))

(assert (=> b!106305 (= lt!54444 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54173) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106305 (isDefined!109 (getValueByKey!157 (toList!782 lt!54173) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106306 () Bool)

(declare-fun Unit!3251 () Unit!3212)

(assert (=> b!106306 (= e!69185 Unit!3251)))

(declare-fun b!106307 () Bool)

(assert (=> b!106307 (= e!69184 (isDefined!109 (getValueByKey!157 (toList!782 lt!54173) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29203 c!18557) b!106305))

(assert (= (and d!29203 (not c!18557)) b!106306))

(assert (= (and d!29203 (not res!52866)) b!106307))

(assert (=> d!29203 m!117657))

(declare-fun m!118821 () Bool)

(assert (=> d!29203 m!118821))

(assert (=> b!106305 m!117657))

(declare-fun m!118823 () Bool)

(assert (=> b!106305 m!118823))

(assert (=> b!106305 m!117657))

(declare-fun m!118825 () Bool)

(assert (=> b!106305 m!118825))

(assert (=> b!106305 m!118825))

(declare-fun m!118827 () Bool)

(assert (=> b!106305 m!118827))

(assert (=> b!106307 m!117657))

(assert (=> b!106307 m!118825))

(assert (=> b!106307 m!118825))

(assert (=> b!106307 m!118827))

(assert (=> b!105847 d!29203))

(declare-fun d!29205 () Bool)

(declare-fun res!52867 () Bool)

(declare-fun e!69186 () Bool)

(assert (=> d!29205 (=> res!52867 e!69186)))

(assert (=> d!29205 (= res!52867 (and ((_ is Cons!1592) (toList!782 e!68649)) (= (_1!1191 (h!2189 (toList!782 e!68649))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29205 (= (containsKey!160 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69186)))

(declare-fun b!106308 () Bool)

(declare-fun e!69187 () Bool)

(assert (=> b!106308 (= e!69186 e!69187)))

(declare-fun res!52868 () Bool)

(assert (=> b!106308 (=> (not res!52868) (not e!69187))))

(assert (=> b!106308 (= res!52868 (and (or (not ((_ is Cons!1592) (toList!782 e!68649))) (bvsle (_1!1191 (h!2189 (toList!782 e!68649))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))) ((_ is Cons!1592) (toList!782 e!68649)) (bvslt (_1!1191 (h!2189 (toList!782 e!68649))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(declare-fun b!106309 () Bool)

(assert (=> b!106309 (= e!69187 (containsKey!160 (t!5671 (toList!782 e!68649)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29205 (not res!52867)) b!106308))

(assert (= (and b!106308 res!52868) b!106309))

(assert (=> b!106309 m!117261))

(declare-fun m!118829 () Bool)

(assert (=> b!106309 m!118829))

(assert (=> d!28959 d!29205))

(declare-fun b!106310 () Bool)

(declare-fun e!69188 () Option!163)

(assert (=> b!106310 (= e!69188 (Some!162 (_2!1191 (h!2189 (t!5671 (toList!782 lt!53966))))))))

(declare-fun d!29207 () Bool)

(declare-fun c!18558 () Bool)

(assert (=> d!29207 (= c!18558 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53966))) (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53966)))) (_1!1191 lt!53713))))))

(assert (=> d!29207 (= (getValueByKey!157 (t!5671 (toList!782 lt!53966)) (_1!1191 lt!53713)) e!69188)))

(declare-fun b!106312 () Bool)

(declare-fun e!69189 () Option!163)

(assert (=> b!106312 (= e!69189 (getValueByKey!157 (t!5671 (t!5671 (toList!782 lt!53966))) (_1!1191 lt!53713)))))

(declare-fun b!106311 () Bool)

(assert (=> b!106311 (= e!69188 e!69189)))

(declare-fun c!18559 () Bool)

(assert (=> b!106311 (= c!18559 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53966))) (not (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53966)))) (_1!1191 lt!53713)))))))

(declare-fun b!106313 () Bool)

(assert (=> b!106313 (= e!69189 None!161)))

(assert (= (and d!29207 c!18558) b!106310))

(assert (= (and d!29207 (not c!18558)) b!106311))

(assert (= (and b!106311 c!18559) b!106312))

(assert (= (and b!106311 (not c!18559)) b!106313))

(declare-fun m!118831 () Bool)

(assert (=> b!106312 m!118831))

(assert (=> b!105797 d!29207))

(declare-fun d!29209 () Bool)

(assert (=> d!29209 (= (isDefined!109 (getValueByKey!157 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))) (not (isEmpty!377 (getValueByKey!157 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(declare-fun bs!4376 () Bool)

(assert (= bs!4376 d!29209))

(assert (=> bs!4376 m!118201))

(declare-fun m!118833 () Bool)

(assert (=> bs!4376 m!118833))

(assert (=> b!105901 d!29209))

(declare-fun b!106314 () Bool)

(declare-fun e!69190 () Option!163)

(assert (=> b!106314 (= e!69190 (Some!162 (_2!1191 (h!2189 (toList!782 call!11106)))))))

(declare-fun d!29211 () Bool)

(declare-fun c!18560 () Bool)

(assert (=> d!29211 (= c!18560 (and ((_ is Cons!1592) (toList!782 call!11106)) (= (_1!1191 (h!2189 (toList!782 call!11106))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29211 (= (getValueByKey!157 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69190)))

(declare-fun b!106316 () Bool)

(declare-fun e!69191 () Option!163)

(assert (=> b!106316 (= e!69191 (getValueByKey!157 (t!5671 (toList!782 call!11106)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!106315 () Bool)

(assert (=> b!106315 (= e!69190 e!69191)))

(declare-fun c!18561 () Bool)

(assert (=> b!106315 (= c!18561 (and ((_ is Cons!1592) (toList!782 call!11106)) (not (= (_1!1191 (h!2189 (toList!782 call!11106))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(declare-fun b!106317 () Bool)

(assert (=> b!106317 (= e!69191 None!161)))

(assert (= (and d!29211 c!18560) b!106314))

(assert (= (and d!29211 (not c!18560)) b!106315))

(assert (= (and b!106315 c!18561) b!106316))

(assert (= (and b!106315 (not c!18561)) b!106317))

(assert (=> b!106316 m!117261))

(declare-fun m!118835 () Bool)

(assert (=> b!106316 m!118835))

(assert (=> b!105901 d!29211))

(declare-fun d!29213 () Bool)

(declare-fun lt!54448 () Bool)

(assert (=> d!29213 (= lt!54448 (select (content!111 lt!53998) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun e!69192 () Bool)

(assert (=> d!29213 (= lt!54448 e!69192)))

(declare-fun res!52869 () Bool)

(assert (=> d!29213 (=> (not res!52869) (not e!69192))))

(assert (=> d!29213 (= res!52869 ((_ is Cons!1592) lt!53998))))

(assert (=> d!29213 (= (contains!816 lt!53998 (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))) lt!54448)))

(declare-fun b!106318 () Bool)

(declare-fun e!69193 () Bool)

(assert (=> b!106318 (= e!69192 e!69193)))

(declare-fun res!52870 () Bool)

(assert (=> b!106318 (=> res!52870 e!69193)))

(assert (=> b!106318 (= res!52870 (= (h!2189 lt!53998) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun b!106319 () Bool)

(assert (=> b!106319 (= e!69193 (contains!816 (t!5671 lt!53998) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(assert (= (and d!29213 res!52869) b!106318))

(assert (= (and b!106318 (not res!52870)) b!106319))

(declare-fun m!118837 () Bool)

(assert (=> d!29213 m!118837))

(declare-fun m!118839 () Bool)

(assert (=> d!29213 m!118839))

(declare-fun m!118841 () Bool)

(assert (=> b!106319 m!118841))

(assert (=> b!105807 d!29213))

(declare-fun b!106332 () Bool)

(declare-fun e!69200 () SeekEntryResult!253)

(assert (=> b!106332 (= e!69200 Undefined!253)))

(declare-fun b!106333 () Bool)

(declare-fun e!69201 () SeekEntryResult!253)

(assert (=> b!106333 (= e!69201 (Found!253 (index!3162 lt!54210)))))

(declare-fun b!106334 () Bool)

(declare-fun c!18570 () Bool)

(declare-fun lt!54454 () (_ BitVec 64))

(assert (=> b!106334 (= c!18570 (= lt!54454 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69202 () SeekEntryResult!253)

(assert (=> b!106334 (= e!69201 e!69202)))

(declare-fun b!106336 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!106336 (= e!69202 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13639 lt!54210) #b00000000000000000000000000000001) (nextIndex!0 (index!3162 lt!54210) (bvadd (x!13639 lt!54210) #b00000000000000000000000000000001) (mask!6727 newMap!16)) (index!3162 lt!54210) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(declare-fun b!106337 () Bool)

(assert (=> b!106337 (= e!69202 (MissingVacant!253 (index!3162 lt!54210)))))

(declare-fun b!106335 () Bool)

(assert (=> b!106335 (= e!69200 e!69201)))

(declare-fun c!18569 () Bool)

(assert (=> b!106335 (= c!18569 (= lt!54454 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun lt!54453 () SeekEntryResult!253)

(declare-fun d!29215 () Bool)

(assert (=> d!29215 (and (or ((_ is Undefined!253) lt!54453) (not ((_ is Found!253) lt!54453)) (and (bvsge (index!3161 lt!54453) #b00000000000000000000000000000000) (bvslt (index!3161 lt!54453) (size!2309 (_keys!4287 newMap!16))))) (or ((_ is Undefined!253) lt!54453) ((_ is Found!253) lt!54453) (not ((_ is MissingVacant!253) lt!54453)) (not (= (index!3163 lt!54453) (index!3162 lt!54210))) (and (bvsge (index!3163 lt!54453) #b00000000000000000000000000000000) (bvslt (index!3163 lt!54453) (size!2309 (_keys!4287 newMap!16))))) (or ((_ is Undefined!253) lt!54453) (ite ((_ is Found!253) lt!54453) (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!54453)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (and ((_ is MissingVacant!253) lt!54453) (= (index!3163 lt!54453) (index!3162 lt!54210)) (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3163 lt!54453)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!29215 (= lt!54453 e!69200)))

(declare-fun c!18568 () Bool)

(assert (=> d!29215 (= c!18568 (bvsge (x!13639 lt!54210) #b01111111111111111111111111111110))))

(assert (=> d!29215 (= lt!54454 (select (arr!2054 (_keys!4287 newMap!16)) (index!3162 lt!54210)))))

(assert (=> d!29215 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29215 (= (seekKeyOrZeroReturnVacant!0 (x!13639 lt!54210) (index!3162 lt!54210) (index!3162 lt!54210) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)) lt!54453)))

(assert (= (and d!29215 c!18568) b!106332))

(assert (= (and d!29215 (not c!18568)) b!106335))

(assert (= (and b!106335 c!18569) b!106333))

(assert (= (and b!106335 (not c!18569)) b!106334))

(assert (= (and b!106334 c!18570) b!106337))

(assert (= (and b!106334 (not c!18570)) b!106336))

(declare-fun m!118843 () Bool)

(assert (=> b!106336 m!118843))

(assert (=> b!106336 m!118843))

(assert (=> b!106336 m!117261))

(declare-fun m!118845 () Bool)

(assert (=> b!106336 m!118845))

(declare-fun m!118847 () Bool)

(assert (=> d!29215 m!118847))

(declare-fun m!118849 () Bool)

(assert (=> d!29215 m!118849))

(assert (=> d!29215 m!118213))

(assert (=> d!29215 m!117661))

(assert (=> b!105922 d!29215))

(declare-fun b!106338 () Bool)

(declare-fun e!69204 () (_ BitVec 32))

(declare-fun call!11219 () (_ BitVec 32))

(assert (=> b!106338 (= e!69204 (bvadd #b00000000000000000000000000000001 call!11219))))

(declare-fun b!106339 () Bool)

(assert (=> b!106339 (= e!69204 call!11219)))

(declare-fun d!29217 () Bool)

(declare-fun lt!54455 () (_ BitVec 32))

(assert (=> d!29217 (and (bvsge lt!54455 #b00000000000000000000000000000000) (bvsle lt!54455 (bvsub (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!69203 () (_ BitVec 32))

(assert (=> d!29217 (= lt!54455 e!69203)))

(declare-fun c!18572 () Bool)

(assert (=> d!29217 (= c!18572 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29217 (and (bvsle #b00000000000000000000000000000000 (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29217 (= (arrayCountValidKeys!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))) lt!54455)))

(declare-fun b!106340 () Bool)

(assert (=> b!106340 (= e!69203 #b00000000000000000000000000000000)))

(declare-fun b!106341 () Bool)

(assert (=> b!106341 (= e!69203 e!69204)))

(declare-fun c!18571 () Bool)

(assert (=> b!106341 (= c!18571 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11216 () Bool)

(assert (=> bm!11216 (= call!11219 (arrayCountValidKeys!0 (_keys!4287 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29217 c!18572) b!106340))

(assert (= (and d!29217 (not c!18572)) b!106341))

(assert (= (and b!106341 c!18571) b!106338))

(assert (= (and b!106341 (not c!18571)) b!106339))

(assert (= (or b!106338 b!106339) bm!11216))

(assert (=> b!106341 m!118469))

(assert (=> b!106341 m!118469))

(assert (=> b!106341 m!118473))

(declare-fun m!118851 () Bool)

(assert (=> bm!11216 m!118851))

(assert (=> b!105926 d!29217))

(declare-fun d!29219 () Bool)

(assert (=> d!29219 (= (apply!98 lt!54251 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1338 (getValueByKey!157 (toList!782 lt!54251) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4377 () Bool)

(assert (= bs!4377 d!29219))

(assert (=> bs!4377 m!117657))

(declare-fun m!118853 () Bool)

(assert (=> bs!4377 m!118853))

(assert (=> bs!4377 m!118853))

(declare-fun m!118855 () Bool)

(assert (=> bs!4377 m!118855))

(assert (=> b!105986 d!29219))

(declare-fun c!18573 () Bool)

(declare-fun d!29221 () Bool)

(assert (=> d!29221 (= c!18573 ((_ is ValueCellFull!995) (select (arr!2055 (ite c!18323 (_values!2564 newMap!16) lt!53882)) #b00000000000000000000000000000000)))))

(declare-fun e!69205 () V!3217)

(assert (=> d!29221 (= (get!1334 (select (arr!2055 (ite c!18323 (_values!2564 newMap!16) lt!53882)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69205)))

(declare-fun b!106342 () Bool)

(assert (=> b!106342 (= e!69205 (get!1336 (select (arr!2055 (ite c!18323 (_values!2564 newMap!16) lt!53882)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106343 () Bool)

(assert (=> b!106343 (= e!69205 (get!1337 (select (arr!2055 (ite c!18323 (_values!2564 newMap!16) lt!53882)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29221 c!18573) b!106342))

(assert (= (and d!29221 (not c!18573)) b!106343))

(assert (=> b!106342 m!118275))

(assert (=> b!106342 m!117653))

(declare-fun m!118857 () Bool)

(assert (=> b!106342 m!118857))

(assert (=> b!106343 m!118275))

(assert (=> b!106343 m!117653))

(declare-fun m!118859 () Bool)

(assert (=> b!106343 m!118859))

(assert (=> b!105986 d!29221))

(declare-fun d!29223 () Bool)

(assert (=> d!29223 (= (isEmpty!376 lt!54095) (isEmpty!378 (toList!782 lt!54095)))))

(declare-fun bs!4378 () Bool)

(assert (= bs!4378 d!29223))

(declare-fun m!118861 () Bool)

(assert (=> bs!4378 m!118861))

(assert (=> b!105750 d!29223))

(declare-fun d!29225 () Bool)

(declare-fun res!52871 () Bool)

(declare-fun e!69206 () Bool)

(assert (=> d!29225 (=> res!52871 e!69206)))

(assert (=> d!29225 (= res!52871 (= (select (arr!2054 (_keys!4287 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29225 (= (arrayContainsKey!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!69206)))

(declare-fun b!106344 () Bool)

(declare-fun e!69207 () Bool)

(assert (=> b!106344 (= e!69206 e!69207)))

(declare-fun res!52872 () Bool)

(assert (=> b!106344 (=> (not res!52872) (not e!69207))))

(assert (=> b!106344 (= res!52872 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106345 () Bool)

(assert (=> b!106345 (= e!69207 (arrayContainsKey!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29225 (not res!52871)) b!106344))

(assert (= (and b!106344 res!52872) b!106345))

(declare-fun m!118863 () Bool)

(assert (=> d!29225 m!118863))

(assert (=> b!106345 m!117261))

(declare-fun m!118865 () Bool)

(assert (=> b!106345 m!118865))

(assert (=> b!106018 d!29225))

(declare-fun lt!54456 () Bool)

(declare-fun d!29227 () Bool)

(assert (=> d!29227 (= lt!54456 (select (content!111 (toList!782 lt!54259)) (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun e!69208 () Bool)

(assert (=> d!29227 (= lt!54456 e!69208)))

(declare-fun res!52873 () Bool)

(assert (=> d!29227 (=> (not res!52873) (not e!69208))))

(assert (=> d!29227 (= res!52873 ((_ is Cons!1592) (toList!782 lt!54259)))))

(assert (=> d!29227 (= (contains!816 (toList!782 lt!54259) (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54456)))

(declare-fun b!106346 () Bool)

(declare-fun e!69209 () Bool)

(assert (=> b!106346 (= e!69208 e!69209)))

(declare-fun res!52874 () Bool)

(assert (=> b!106346 (=> res!52874 e!69209)))

(assert (=> b!106346 (= res!52874 (= (h!2189 (toList!782 lt!54259)) (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106347 () Bool)

(assert (=> b!106347 (= e!69209 (contains!816 (t!5671 (toList!782 lt!54259)) (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (= (and d!29227 res!52873) b!106346))

(assert (= (and b!106346 (not res!52874)) b!106347))

(declare-fun m!118867 () Bool)

(assert (=> d!29227 m!118867))

(declare-fun m!118869 () Bool)

(assert (=> d!29227 m!118869))

(declare-fun m!118871 () Bool)

(assert (=> b!106347 m!118871))

(assert (=> b!106003 d!29227))

(declare-fun bm!11217 () Bool)

(declare-fun c!18574 () Bool)

(declare-fun call!11220 () Bool)

(assert (=> bm!11217 (= call!11220 (arrayNoDuplicates!0 (_keys!4287 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18574 (Cons!1593 (select (arr!2054 (_keys!4287 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!18471 (Cons!1593 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) Nil!1594) Nil!1594)) (ite c!18471 (Cons!1593 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) Nil!1594) Nil!1594))))))

(declare-fun b!106349 () Bool)

(declare-fun e!69213 () Bool)

(declare-fun e!69212 () Bool)

(assert (=> b!106349 (= e!69213 e!69212)))

(assert (=> b!106349 (= c!18574 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!106350 () Bool)

(assert (=> b!106350 (= e!69212 call!11220)))

(declare-fun b!106351 () Bool)

(declare-fun e!69211 () Bool)

(assert (=> b!106351 (= e!69211 (contains!817 (ite c!18471 (Cons!1593 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) Nil!1594) Nil!1594) (select (arr!2054 (_keys!4287 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!106352 () Bool)

(assert (=> b!106352 (= e!69212 call!11220)))

(declare-fun b!106348 () Bool)

(declare-fun e!69210 () Bool)

(assert (=> b!106348 (= e!69210 e!69213)))

(declare-fun res!52876 () Bool)

(assert (=> b!106348 (=> (not res!52876) (not e!69213))))

(assert (=> b!106348 (= res!52876 (not e!69211))))

(declare-fun res!52875 () Bool)

(assert (=> b!106348 (=> (not res!52875) (not e!69211))))

(assert (=> b!106348 (= res!52875 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!29229 () Bool)

(declare-fun res!52877 () Bool)

(assert (=> d!29229 (=> res!52877 e!69210)))

(assert (=> d!29229 (= res!52877 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29229 (= (arrayNoDuplicates!0 (_keys!4287 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18471 (Cons!1593 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) Nil!1594) Nil!1594)) e!69210)))

(assert (= (and d!29229 (not res!52877)) b!106348))

(assert (= (and b!106348 res!52875) b!106351))

(assert (= (and b!106348 res!52876) b!106349))

(assert (= (and b!106349 c!18574) b!106350))

(assert (= (and b!106349 (not c!18574)) b!106352))

(assert (= (or b!106350 b!106352) bm!11217))

(assert (=> bm!11217 m!118863))

(declare-fun m!118873 () Bool)

(assert (=> bm!11217 m!118873))

(assert (=> b!106349 m!118863))

(assert (=> b!106349 m!118863))

(declare-fun m!118875 () Bool)

(assert (=> b!106349 m!118875))

(assert (=> b!106351 m!118863))

(assert (=> b!106351 m!118863))

(declare-fun m!118877 () Bool)

(assert (=> b!106351 m!118877))

(assert (=> b!106348 m!118863))

(assert (=> b!106348 m!118863))

(assert (=> b!106348 m!118875))

(assert (=> bm!11181 d!29229))

(declare-fun b!106353 () Bool)

(declare-fun e!69214 () Option!163)

(assert (=> b!106353 (= e!69214 (Some!162 (_2!1191 (h!2189 (t!5671 (toList!782 lt!53970))))))))

(declare-fun d!29231 () Bool)

(declare-fun c!18575 () Bool)

(assert (=> d!29231 (= c!18575 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53970))) (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53970)))) (_1!1191 lt!53718))))))

(assert (=> d!29231 (= (getValueByKey!157 (t!5671 (toList!782 lt!53970)) (_1!1191 lt!53718)) e!69214)))

(declare-fun b!106355 () Bool)

(declare-fun e!69215 () Option!163)

(assert (=> b!106355 (= e!69215 (getValueByKey!157 (t!5671 (t!5671 (toList!782 lt!53970))) (_1!1191 lt!53718)))))

(declare-fun b!106354 () Bool)

(assert (=> b!106354 (= e!69214 e!69215)))

(declare-fun c!18576 () Bool)

(assert (=> b!106354 (= c!18576 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53970))) (not (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53970)))) (_1!1191 lt!53718)))))))

(declare-fun b!106356 () Bool)

(assert (=> b!106356 (= e!69215 None!161)))

(assert (= (and d!29231 c!18575) b!106353))

(assert (= (and d!29231 (not c!18575)) b!106354))

(assert (= (and b!106354 c!18576) b!106355))

(assert (= (and b!106354 (not c!18576)) b!106356))

(declare-fun m!118879 () Bool)

(assert (=> b!106355 m!118879))

(assert (=> b!105850 d!29231))

(declare-fun d!29233 () Bool)

(assert (=> d!29233 (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54457 () Unit!3212)

(assert (=> d!29233 (= lt!54457 (choose!669 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69216 () Bool)

(assert (=> d!29233 e!69216))

(declare-fun res!52878 () Bool)

(assert (=> d!29233 (=> (not res!52878) (not e!69216))))

(assert (=> d!29233 (= res!52878 (isStrictlySorted!296 (toList!782 lt!53948)))))

(assert (=> d!29233 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000) lt!54457)))

(declare-fun b!106357 () Bool)

(assert (=> b!106357 (= e!69216 (containsKey!160 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29233 res!52878) b!106357))

(assert (=> d!29233 m!118231))

(assert (=> d!29233 m!118231))

(assert (=> d!29233 m!118233))

(declare-fun m!118881 () Bool)

(assert (=> d!29233 m!118881))

(assert (=> d!29233 m!118489))

(assert (=> b!106357 m!118227))

(assert (=> b!105923 d!29233))

(assert (=> b!105923 d!29055))

(assert (=> b!105923 d!29057))

(declare-fun d!29235 () Bool)

(declare-fun res!52879 () Bool)

(declare-fun e!69217 () Bool)

(assert (=> d!29235 (=> res!52879 e!69217)))

(assert (=> d!29235 (= res!52879 (and ((_ is Cons!1592) lt!54152) (= (_1!1191 (h!2189 lt!54152)) (_1!1191 lt!53718))))))

(assert (=> d!29235 (= (containsKey!160 lt!54152 (_1!1191 lt!53718)) e!69217)))

(declare-fun b!106358 () Bool)

(declare-fun e!69218 () Bool)

(assert (=> b!106358 (= e!69217 e!69218)))

(declare-fun res!52880 () Bool)

(assert (=> b!106358 (=> (not res!52880) (not e!69218))))

(assert (=> b!106358 (= res!52880 (and (or (not ((_ is Cons!1592) lt!54152)) (bvsle (_1!1191 (h!2189 lt!54152)) (_1!1191 lt!53718))) ((_ is Cons!1592) lt!54152) (bvslt (_1!1191 (h!2189 lt!54152)) (_1!1191 lt!53718))))))

(declare-fun b!106359 () Bool)

(assert (=> b!106359 (= e!69218 (containsKey!160 (t!5671 lt!54152) (_1!1191 lt!53718)))))

(assert (= (and d!29235 (not res!52879)) b!106358))

(assert (= (and b!106358 res!52880) b!106359))

(declare-fun m!118883 () Bool)

(assert (=> b!106359 m!118883))

(assert (=> b!105814 d!29235))

(declare-fun d!29237 () Bool)

(assert (=> d!29237 (= (inRange!0 (ite c!18488 (index!3161 lt!54352) (ite c!18487 (index!3160 lt!54356) (index!3163 lt!54356))) (mask!6727 newMap!16)) (and (bvsge (ite c!18488 (index!3161 lt!54352) (ite c!18487 (index!3160 lt!54356) (index!3163 lt!54356))) #b00000000000000000000000000000000) (bvslt (ite c!18488 (index!3161 lt!54352) (ite c!18487 (index!3160 lt!54356) (index!3163 lt!54356))) (bvadd (mask!6727 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11198 d!29237))

(assert (=> b!105790 d!28997))

(declare-fun d!29239 () Bool)

(assert (=> d!29239 (= (get!1338 (getValueByKey!157 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2898 (getValueByKey!157 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29013 d!29239))

(assert (=> d!29013 d!29057))

(declare-fun d!29241 () Bool)

(assert (=> d!29241 (isDefined!109 (getValueByKey!157 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun lt!54458 () Unit!3212)

(assert (=> d!29241 (= lt!54458 (choose!669 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!69219 () Bool)

(assert (=> d!29241 e!69219))

(declare-fun res!52881 () Bool)

(assert (=> d!29241 (=> (not res!52881) (not e!69219))))

(assert (=> d!29241 (= res!52881 (isStrictlySorted!296 (toList!782 e!68649)))))

(assert (=> d!29241 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54458)))

(declare-fun b!106360 () Bool)

(assert (=> b!106360 (= e!69219 (containsKey!160 (toList!782 e!68649) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29241 res!52881) b!106360))

(assert (=> d!29241 m!117261))

(assert (=> d!29241 m!118191))

(assert (=> d!29241 m!118191))

(assert (=> d!29241 m!118193))

(assert (=> d!29241 m!117261))

(declare-fun m!118885 () Bool)

(assert (=> d!29241 m!118885))

(declare-fun m!118887 () Bool)

(assert (=> d!29241 m!118887))

(assert (=> b!106360 m!117261))

(assert (=> b!106360 m!118187))

(assert (=> b!105894 d!29241))

(assert (=> b!105894 d!29071))

(assert (=> b!105894 d!29073))

(declare-fun d!29243 () Bool)

(assert (=> d!29243 (= (get!1338 (getValueByKey!157 (toList!782 lt!53943) lt!53951)) (v!2898 (getValueByKey!157 (toList!782 lt!53943) lt!53951)))))

(assert (=> d!28889 d!29243))

(declare-fun b!106361 () Bool)

(declare-fun e!69220 () Option!163)

(assert (=> b!106361 (= e!69220 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53943)))))))

(declare-fun d!29245 () Bool)

(declare-fun c!18577 () Bool)

(assert (=> d!29245 (= c!18577 (and ((_ is Cons!1592) (toList!782 lt!53943)) (= (_1!1191 (h!2189 (toList!782 lt!53943))) lt!53951)))))

(assert (=> d!29245 (= (getValueByKey!157 (toList!782 lt!53943) lt!53951) e!69220)))

(declare-fun b!106363 () Bool)

(declare-fun e!69221 () Option!163)

(assert (=> b!106363 (= e!69221 (getValueByKey!157 (t!5671 (toList!782 lt!53943)) lt!53951))))

(declare-fun b!106362 () Bool)

(assert (=> b!106362 (= e!69220 e!69221)))

(declare-fun c!18578 () Bool)

(assert (=> b!106362 (= c!18578 (and ((_ is Cons!1592) (toList!782 lt!53943)) (not (= (_1!1191 (h!2189 (toList!782 lt!53943))) lt!53951))))))

(declare-fun b!106364 () Bool)

(assert (=> b!106364 (= e!69221 None!161)))

(assert (= (and d!29245 c!18577) b!106361))

(assert (= (and d!29245 (not c!18577)) b!106362))

(assert (= (and b!106362 c!18578) b!106363))

(assert (= (and b!106362 (not c!18578)) b!106364))

(declare-fun m!118889 () Bool)

(assert (=> b!106363 m!118889))

(assert (=> d!28889 d!29245))

(declare-fun d!29247 () Bool)

(assert (=> d!29247 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4379 () Bool)

(assert (= bs!4379 d!29247))

(assert (=> bs!4379 m!117831))

(declare-fun m!118891 () Bool)

(assert (=> bs!4379 m!118891))

(assert (=> b!105973 d!29247))

(declare-fun b!106365 () Bool)

(declare-fun e!69222 () Option!163)

(assert (=> b!106365 (= e!69222 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53948)))))))

(declare-fun d!29249 () Bool)

(declare-fun c!18579 () Bool)

(assert (=> d!29249 (= c!18579 (and ((_ is Cons!1592) (toList!782 lt!53948)) (= (_1!1191 (h!2189 (toList!782 lt!53948))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29249 (= (getValueByKey!157 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69222)))

(declare-fun e!69223 () Option!163)

(declare-fun b!106367 () Bool)

(assert (=> b!106367 (= e!69223 (getValueByKey!157 (t!5671 (toList!782 lt!53948)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!106366 () Bool)

(assert (=> b!106366 (= e!69222 e!69223)))

(declare-fun c!18580 () Bool)

(assert (=> b!106366 (= c!18580 (and ((_ is Cons!1592) (toList!782 lt!53948)) (not (= (_1!1191 (h!2189 (toList!782 lt!53948))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!106368 () Bool)

(assert (=> b!106368 (= e!69223 None!161)))

(assert (= (and d!29249 c!18579) b!106365))

(assert (= (and d!29249 (not c!18579)) b!106366))

(assert (= (and b!106366 c!18580) b!106367))

(assert (= (and b!106366 (not c!18580)) b!106368))

(assert (=> b!106367 m!117491))

(declare-fun m!118893 () Bool)

(assert (=> b!106367 m!118893))

(assert (=> b!105973 d!29249))

(declare-fun d!29251 () Bool)

(declare-fun res!52882 () Bool)

(declare-fun e!69224 () Bool)

(assert (=> d!29251 (=> res!52882 e!69224)))

(assert (=> d!29251 (= res!52882 (and ((_ is Cons!1592) (toList!782 lt!53970)) (= (_1!1191 (h!2189 (toList!782 lt!53970))) (_1!1191 lt!53718))))))

(assert (=> d!29251 (= (containsKey!160 (toList!782 lt!53970) (_1!1191 lt!53718)) e!69224)))

(declare-fun b!106369 () Bool)

(declare-fun e!69225 () Bool)

(assert (=> b!106369 (= e!69224 e!69225)))

(declare-fun res!52883 () Bool)

(assert (=> b!106369 (=> (not res!52883) (not e!69225))))

(assert (=> b!106369 (= res!52883 (and (or (not ((_ is Cons!1592) (toList!782 lt!53970))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53970))) (_1!1191 lt!53718))) ((_ is Cons!1592) (toList!782 lt!53970)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53970))) (_1!1191 lt!53718))))))

(declare-fun b!106370 () Bool)

(assert (=> b!106370 (= e!69225 (containsKey!160 (t!5671 (toList!782 lt!53970)) (_1!1191 lt!53718)))))

(assert (= (and d!29251 (not res!52882)) b!106369))

(assert (= (and b!106369 res!52883) b!106370))

(declare-fun m!118895 () Bool)

(assert (=> b!106370 m!118895))

(assert (=> d!28943 d!29251))

(declare-fun d!29253 () Bool)

(assert (=> d!29253 (= (get!1338 (getValueByKey!157 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2898 (getValueByKey!157 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28931 d!29253))

(declare-fun b!106371 () Bool)

(declare-fun e!69226 () Option!163)

(assert (=> b!106371 (= e!69226 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53992)))))))

(declare-fun c!18581 () Bool)

(declare-fun d!29255 () Bool)

(assert (=> d!29255 (= c!18581 (and ((_ is Cons!1592) (toList!782 lt!53992)) (= (_1!1191 (h!2189 (toList!782 lt!53992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29255 (= (getValueByKey!157 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69226)))

(declare-fun e!69227 () Option!163)

(declare-fun b!106373 () Bool)

(assert (=> b!106373 (= e!69227 (getValueByKey!157 (t!5671 (toList!782 lt!53992)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!106372 () Bool)

(assert (=> b!106372 (= e!69226 e!69227)))

(declare-fun c!18582 () Bool)

(assert (=> b!106372 (= c!18582 (and ((_ is Cons!1592) (toList!782 lt!53992)) (not (= (_1!1191 (h!2189 (toList!782 lt!53992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!106374 () Bool)

(assert (=> b!106374 (= e!69227 None!161)))

(assert (= (and d!29255 c!18581) b!106371))

(assert (= (and d!29255 (not c!18581)) b!106372))

(assert (= (and b!106372 c!18582) b!106373))

(assert (= (and b!106372 (not c!18582)) b!106374))

(assert (=> b!106373 m!117491))

(declare-fun m!118897 () Bool)

(assert (=> b!106373 m!118897))

(assert (=> d!28931 d!29255))

(declare-fun b!106375 () Bool)

(declare-fun e!69231 () Bool)

(declare-fun lt!54475 () ListLongMap!1533)

(assert (=> b!106375 (= e!69231 (= (apply!98 lt!54475 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!106376 () Bool)

(declare-fun e!69240 () Bool)

(assert (=> b!106376 (= e!69240 e!69231)))

(declare-fun res!52884 () Bool)

(declare-fun call!11224 () Bool)

(assert (=> b!106376 (= res!52884 call!11224)))

(assert (=> b!106376 (=> (not res!52884) (not e!69231))))

(declare-fun b!106377 () Bool)

(declare-fun e!69234 () ListLongMap!1533)

(declare-fun call!11226 () ListLongMap!1533)

(assert (=> b!106377 (= e!69234 call!11226)))

(declare-fun b!106378 () Bool)

(declare-fun res!52888 () Bool)

(declare-fun e!69236 () Bool)

(assert (=> b!106378 (=> (not res!52888) (not e!69236))))

(declare-fun e!69230 () Bool)

(assert (=> b!106378 (= res!52888 e!69230)))

(declare-fun res!52891 () Bool)

(assert (=> b!106378 (=> res!52891 e!69230)))

(declare-fun e!69239 () Bool)

(assert (=> b!106378 (= res!52891 (not e!69239))))

(declare-fun res!52885 () Bool)

(assert (=> b!106378 (=> (not res!52885) (not e!69239))))

(assert (=> b!106378 (= res!52885 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106379 () Bool)

(declare-fun e!69235 () Bool)

(declare-fun e!69232 () Bool)

(assert (=> b!106379 (= e!69235 e!69232)))

(declare-fun res!52892 () Bool)

(declare-fun call!11227 () Bool)

(assert (=> b!106379 (= res!52892 call!11227)))

(assert (=> b!106379 (=> (not res!52892) (not e!69232))))

(declare-fun b!106381 () Bool)

(declare-fun res!52889 () Bool)

(assert (=> b!106381 (=> (not res!52889) (not e!69236))))

(assert (=> b!106381 (= res!52889 e!69235)))

(declare-fun c!18584 () Bool)

(assert (=> b!106381 (= c!18584 (not (= (bvand lt!53878 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106382 () Bool)

(declare-fun e!69237 () Bool)

(assert (=> b!106382 (= e!69237 (= (apply!98 lt!54475 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106382 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_values!2564 newMap!16))))))

(assert (=> b!106382 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106383 () Bool)

(declare-fun call!11222 () ListLongMap!1533)

(assert (=> b!106383 (= e!69234 call!11222)))

(declare-fun b!106384 () Bool)

(declare-fun e!69228 () Unit!3212)

(declare-fun Unit!3252 () Unit!3212)

(assert (=> b!106384 (= e!69228 Unit!3252)))

(declare-fun b!106385 () Bool)

(assert (=> b!106385 (= e!69240 (not call!11224))))

(declare-fun b!106386 () Bool)

(assert (=> b!106386 (= e!69235 (not call!11227))))

(declare-fun b!106387 () Bool)

(declare-fun e!69238 () ListLongMap!1533)

(declare-fun e!69229 () ListLongMap!1533)

(assert (=> b!106387 (= e!69238 e!69229)))

(declare-fun c!18583 () Bool)

(assert (=> b!106387 (= c!18583 (and (not (= (bvand lt!53878 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!53878 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11218 () Bool)

(declare-fun call!11225 () ListLongMap!1533)

(declare-fun call!11223 () ListLongMap!1533)

(assert (=> bm!11218 (= call!11225 call!11223)))

(declare-fun bm!11219 () Bool)

(assert (=> bm!11219 (= call!11227 (contains!814 lt!54475 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106388 () Bool)

(assert (=> b!106388 (= e!69236 e!69240)))

(declare-fun c!18588 () Bool)

(assert (=> b!106388 (= c!18588 (not (= (bvand lt!53878 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!29257 () Bool)

(assert (=> d!29257 e!69236))

(declare-fun res!52886 () Bool)

(assert (=> d!29257 (=> (not res!52886) (not e!69236))))

(assert (=> d!29257 (= res!52886 (or (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))))

(declare-fun lt!54465 () ListLongMap!1533)

(assert (=> d!29257 (= lt!54475 lt!54465)))

(declare-fun lt!54467 () Unit!3212)

(assert (=> d!29257 (= lt!54467 e!69228)))

(declare-fun c!18586 () Bool)

(declare-fun e!69233 () Bool)

(assert (=> d!29257 (= c!18586 e!69233)))

(declare-fun res!52890 () Bool)

(assert (=> d!29257 (=> (not res!52890) (not e!69233))))

(assert (=> d!29257 (= res!52890 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29257 (= lt!54465 e!69238)))

(declare-fun c!18587 () Bool)

(assert (=> d!29257 (= c!18587 (and (not (= (bvand lt!53878 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!53878 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29257 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29257 (= (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53878 lt!53719 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54475)))

(declare-fun b!106380 () Bool)

(declare-fun call!11221 () ListLongMap!1533)

(assert (=> b!106380 (= e!69238 (+!139 call!11221 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun bm!11220 () Bool)

(assert (=> bm!11220 (= call!11224 (contains!814 lt!54475 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106389 () Bool)

(assert (=> b!106389 (= e!69232 (= (apply!98 lt!54475 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53719))))

(declare-fun b!106390 () Bool)

(assert (=> b!106390 (= e!69229 call!11226)))

(declare-fun b!106391 () Bool)

(assert (=> b!106391 (= e!69239 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11221 () Bool)

(assert (=> bm!11221 (= call!11222 call!11225)))

(declare-fun bm!11222 () Bool)

(assert (=> bm!11222 (= call!11226 call!11221)))

(declare-fun b!106392 () Bool)

(declare-fun c!18585 () Bool)

(assert (=> b!106392 (= c!18585 (and (not (= (bvand lt!53878 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!53878 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106392 (= e!69229 e!69234)))

(declare-fun bm!11223 () Bool)

(assert (=> bm!11223 (= call!11221 (+!139 (ite c!18587 call!11223 (ite c!18583 call!11225 call!11222)) (ite (or c!18587 c!18583) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun b!106393 () Bool)

(declare-fun lt!54473 () Unit!3212)

(assert (=> b!106393 (= e!69228 lt!54473)))

(declare-fun lt!54460 () ListLongMap!1533)

(assert (=> b!106393 (= lt!54460 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53878 lt!53719 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54474 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54474 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54461 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54461 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54479 () Unit!3212)

(assert (=> b!106393 (= lt!54479 (addStillContains!74 lt!54460 lt!54474 lt!53719 lt!54461))))

(assert (=> b!106393 (contains!814 (+!139 lt!54460 (tuple2!2361 lt!54474 lt!53719)) lt!54461)))

(declare-fun lt!54472 () Unit!3212)

(assert (=> b!106393 (= lt!54472 lt!54479)))

(declare-fun lt!54468 () ListLongMap!1533)

(assert (=> b!106393 (= lt!54468 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53878 lt!53719 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54459 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54459 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54469 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54469 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54476 () Unit!3212)

(assert (=> b!106393 (= lt!54476 (addApplyDifferent!74 lt!54468 lt!54459 (minValue!2456 newMap!16) lt!54469))))

(assert (=> b!106393 (= (apply!98 (+!139 lt!54468 (tuple2!2361 lt!54459 (minValue!2456 newMap!16))) lt!54469) (apply!98 lt!54468 lt!54469))))

(declare-fun lt!54463 () Unit!3212)

(assert (=> b!106393 (= lt!54463 lt!54476)))

(declare-fun lt!54471 () ListLongMap!1533)

(assert (=> b!106393 (= lt!54471 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53878 lt!53719 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54480 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54480 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54466 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54466 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54462 () Unit!3212)

(assert (=> b!106393 (= lt!54462 (addApplyDifferent!74 lt!54471 lt!54480 lt!53719 lt!54466))))

(assert (=> b!106393 (= (apply!98 (+!139 lt!54471 (tuple2!2361 lt!54480 lt!53719)) lt!54466) (apply!98 lt!54471 lt!54466))))

(declare-fun lt!54477 () Unit!3212)

(assert (=> b!106393 (= lt!54477 lt!54462)))

(declare-fun lt!54470 () ListLongMap!1533)

(assert (=> b!106393 (= lt!54470 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53878 lt!53719 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54464 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54464 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54478 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54478 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106393 (= lt!54473 (addApplyDifferent!74 lt!54470 lt!54464 (minValue!2456 newMap!16) lt!54478))))

(assert (=> b!106393 (= (apply!98 (+!139 lt!54470 (tuple2!2361 lt!54464 (minValue!2456 newMap!16))) lt!54478) (apply!98 lt!54470 lt!54478))))

(declare-fun b!106394 () Bool)

(assert (=> b!106394 (= e!69233 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11224 () Bool)

(assert (=> bm!11224 (= call!11223 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53878 lt!53719 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!106395 () Bool)

(assert (=> b!106395 (= e!69230 e!69237)))

(declare-fun res!52887 () Bool)

(assert (=> b!106395 (=> (not res!52887) (not e!69237))))

(assert (=> b!106395 (= res!52887 (contains!814 lt!54475 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106395 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!29257 c!18587) b!106380))

(assert (= (and d!29257 (not c!18587)) b!106387))

(assert (= (and b!106387 c!18583) b!106390))

(assert (= (and b!106387 (not c!18583)) b!106392))

(assert (= (and b!106392 c!18585) b!106377))

(assert (= (and b!106392 (not c!18585)) b!106383))

(assert (= (or b!106377 b!106383) bm!11221))

(assert (= (or b!106390 bm!11221) bm!11218))

(assert (= (or b!106390 b!106377) bm!11222))

(assert (= (or b!106380 bm!11218) bm!11224))

(assert (= (or b!106380 bm!11222) bm!11223))

(assert (= (and d!29257 res!52890) b!106394))

(assert (= (and d!29257 c!18586) b!106393))

(assert (= (and d!29257 (not c!18586)) b!106384))

(assert (= (and d!29257 res!52886) b!106378))

(assert (= (and b!106378 res!52885) b!106391))

(assert (= (and b!106378 (not res!52891)) b!106395))

(assert (= (and b!106395 res!52887) b!106382))

(assert (= (and b!106378 res!52888) b!106381))

(assert (= (and b!106381 c!18584) b!106379))

(assert (= (and b!106381 (not c!18584)) b!106386))

(assert (= (and b!106379 res!52892) b!106389))

(assert (= (or b!106379 b!106386) bm!11219))

(assert (= (and b!106381 res!52889) b!106388))

(assert (= (and b!106388 c!18588) b!106376))

(assert (= (and b!106388 (not c!18588)) b!106385))

(assert (= (and b!106376 res!52884) b!106375))

(assert (= (or b!106376 b!106385) bm!11220))

(declare-fun b_lambda!4759 () Bool)

(assert (=> (not b_lambda!4759) (not b!106382)))

(assert (=> b!106382 t!5683))

(declare-fun b_and!6561 () Bool)

(assert (= b_and!6557 (and (=> t!5683 result!3459) b_and!6561)))

(assert (=> b!106382 t!5685))

(declare-fun b_and!6563 () Bool)

(assert (= b_and!6559 (and (=> t!5685 result!3461) b_and!6563)))

(assert (=> b!106382 m!118077))

(assert (=> b!106382 m!117653))

(assert (=> b!106382 m!118079))

(assert (=> b!106382 m!118077))

(assert (=> b!106382 m!117653))

(assert (=> b!106382 m!117657))

(declare-fun m!118899 () Bool)

(assert (=> b!106382 m!118899))

(assert (=> b!106382 m!117657))

(assert (=> d!29257 m!117661))

(assert (=> b!106391 m!117657))

(assert (=> b!106391 m!117657))

(assert (=> b!106391 m!117663))

(declare-fun m!118901 () Bool)

(assert (=> bm!11223 m!118901))

(declare-fun m!118903 () Bool)

(assert (=> bm!11224 m!118903))

(assert (=> b!106394 m!117657))

(assert (=> b!106394 m!117657))

(assert (=> b!106394 m!117663))

(declare-fun m!118905 () Bool)

(assert (=> b!106389 m!118905))

(declare-fun m!118907 () Bool)

(assert (=> bm!11219 m!118907))

(declare-fun m!118909 () Bool)

(assert (=> b!106393 m!118909))

(declare-fun m!118911 () Bool)

(assert (=> b!106393 m!118911))

(declare-fun m!118913 () Bool)

(assert (=> b!106393 m!118913))

(declare-fun m!118915 () Bool)

(assert (=> b!106393 m!118915))

(assert (=> b!106393 m!118903))

(declare-fun m!118917 () Bool)

(assert (=> b!106393 m!118917))

(declare-fun m!118919 () Bool)

(assert (=> b!106393 m!118919))

(declare-fun m!118921 () Bool)

(assert (=> b!106393 m!118921))

(declare-fun m!118923 () Bool)

(assert (=> b!106393 m!118923))

(assert (=> b!106393 m!118919))

(assert (=> b!106393 m!118923))

(declare-fun m!118925 () Bool)

(assert (=> b!106393 m!118925))

(declare-fun m!118927 () Bool)

(assert (=> b!106393 m!118927))

(declare-fun m!118929 () Bool)

(assert (=> b!106393 m!118929))

(assert (=> b!106393 m!117657))

(declare-fun m!118931 () Bool)

(assert (=> b!106393 m!118931))

(declare-fun m!118933 () Bool)

(assert (=> b!106393 m!118933))

(assert (=> b!106393 m!118917))

(declare-fun m!118935 () Bool)

(assert (=> b!106393 m!118935))

(assert (=> b!106393 m!118911))

(declare-fun m!118937 () Bool)

(assert (=> b!106393 m!118937))

(assert (=> b!106395 m!117657))

(assert (=> b!106395 m!117657))

(declare-fun m!118939 () Bool)

(assert (=> b!106395 m!118939))

(declare-fun m!118941 () Bool)

(assert (=> b!106380 m!118941))

(declare-fun m!118943 () Bool)

(assert (=> b!106375 m!118943))

(declare-fun m!118945 () Bool)

(assert (=> bm!11220 m!118945))

(assert (=> d!28983 d!29257))

(assert (=> d!28983 d!28933))

(assert (=> d!28983 d!29089))

(declare-fun d!29259 () Bool)

(declare-fun e!69241 () Bool)

(assert (=> d!29259 e!69241))

(declare-fun res!52893 () Bool)

(assert (=> d!29259 (=> (not res!52893) (not e!69241))))

(declare-fun lt!54482 () ListLongMap!1533)

(assert (=> d!29259 (= res!52893 (contains!814 lt!54482 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719))))))

(declare-fun lt!54481 () List!1596)

(assert (=> d!29259 (= lt!54482 (ListLongMap!1534 lt!54481))))

(declare-fun lt!54484 () Unit!3212)

(declare-fun lt!54483 () Unit!3212)

(assert (=> d!29259 (= lt!54484 lt!54483)))

(assert (=> d!29259 (= (getValueByKey!157 lt!54481 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719))) (Some!162 (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719))))))

(assert (=> d!29259 (= lt!54483 (lemmaContainsTupThenGetReturnValue!73 lt!54481 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719))))))

(assert (=> d!29259 (= lt!54481 (insertStrictlySorted!76 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719))))))

(assert (=> d!29259 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719)) lt!54482)))

(declare-fun b!106396 () Bool)

(declare-fun res!52894 () Bool)

(assert (=> b!106396 (=> (not res!52894) (not e!69241))))

(assert (=> b!106396 (= res!52894 (= (getValueByKey!157 (toList!782 lt!54482) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719))) (Some!162 (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719)))))))

(declare-fun b!106397 () Bool)

(assert (=> b!106397 (= e!69241 (contains!816 (toList!782 lt!54482) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719)))))

(assert (= (and d!29259 res!52893) b!106396))

(assert (= (and b!106396 res!52894) b!106397))

(declare-fun m!118947 () Bool)

(assert (=> d!29259 m!118947))

(declare-fun m!118949 () Bool)

(assert (=> d!29259 m!118949))

(declare-fun m!118951 () Bool)

(assert (=> d!29259 m!118951))

(declare-fun m!118953 () Bool)

(assert (=> d!29259 m!118953))

(declare-fun m!118955 () Bool)

(assert (=> b!106396 m!118955))

(declare-fun m!118957 () Bool)

(assert (=> b!106397 m!118957))

(assert (=> d!28983 d!29259))

(declare-fun d!29261 () Bool)

(assert (=> d!29261 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53878 lt!53719 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(assert (=> d!29261 true))

(declare-fun _$7!92 () Unit!3212)

(assert (=> d!29261 (= (choose!671 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) lt!53878 (zeroValue!2456 newMap!16) lt!53719 (minValue!2456 newMap!16) (defaultEntry!2581 newMap!16)) _$7!92)))

(declare-fun bs!4380 () Bool)

(assert (= bs!4380 d!29261))

(assert (=> bs!4380 m!117451))

(assert (=> bs!4380 m!117451))

(assert (=> bs!4380 m!118269))

(assert (=> bs!4380 m!118267))

(assert (=> d!28983 d!29261))

(declare-fun d!29263 () Bool)

(declare-fun lt!54485 () Bool)

(assert (=> d!29263 (= lt!54485 (select (content!111 lt!53973) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun e!69242 () Bool)

(assert (=> d!29263 (= lt!54485 e!69242)))

(declare-fun res!52895 () Bool)

(assert (=> d!29263 (=> (not res!52895) (not e!69242))))

(assert (=> d!29263 (= res!52895 ((_ is Cons!1592) lt!53973))))

(assert (=> d!29263 (= (contains!816 lt!53973 (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))) lt!54485)))

(declare-fun b!106398 () Bool)

(declare-fun e!69243 () Bool)

(assert (=> b!106398 (= e!69242 e!69243)))

(declare-fun res!52896 () Bool)

(assert (=> b!106398 (=> res!52896 e!69243)))

(assert (=> b!106398 (= res!52896 (= (h!2189 lt!53973) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun b!106399 () Bool)

(assert (=> b!106399 (= e!69243 (contains!816 (t!5671 lt!53973) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(assert (= (and d!29263 res!52895) b!106398))

(assert (= (and b!106398 (not res!52896)) b!106399))

(declare-fun m!118959 () Bool)

(assert (=> d!29263 m!118959))

(declare-fun m!118961 () Bool)

(assert (=> d!29263 m!118961))

(declare-fun m!118963 () Bool)

(assert (=> b!106399 m!118963))

(assert (=> b!105883 d!29263))

(assert (=> b!105843 d!29135))

(declare-fun b!106400 () Bool)

(declare-fun e!69244 () Option!163)

(assert (=> b!106400 (= e!69244 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54053)))))))

(declare-fun c!18589 () Bool)

(declare-fun d!29265 () Bool)

(assert (=> d!29265 (= c!18589 (and ((_ is Cons!1592) (toList!782 lt!54053)) (= (_1!1191 (h!2189 (toList!782 lt!54053))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!29265 (= (getValueByKey!157 (toList!782 lt!54053) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) e!69244)))

(declare-fun e!69245 () Option!163)

(declare-fun b!106402 () Bool)

(assert (=> b!106402 (= e!69245 (getValueByKey!157 (t!5671 (toList!782 lt!54053)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106401 () Bool)

(assert (=> b!106401 (= e!69244 e!69245)))

(declare-fun c!18590 () Bool)

(assert (=> b!106401 (= c!18590 (and ((_ is Cons!1592) (toList!782 lt!54053)) (not (= (_1!1191 (h!2189 (toList!782 lt!54053))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun b!106403 () Bool)

(assert (=> b!106403 (= e!69245 None!161)))

(assert (= (and d!29265 c!18589) b!106400))

(assert (= (and d!29265 (not c!18589)) b!106401))

(assert (= (and b!106401 c!18590) b!106402))

(assert (= (and b!106401 (not c!18590)) b!106403))

(declare-fun m!118965 () Bool)

(assert (=> b!106402 m!118965))

(assert (=> b!105662 d!29265))

(declare-fun d!29267 () Bool)

(declare-fun e!69246 () Bool)

(assert (=> d!29267 e!69246))

(declare-fun res!52897 () Bool)

(assert (=> d!29267 (=> (not res!52897) (not e!69246))))

(declare-fun lt!54487 () ListLongMap!1533)

(assert (=> d!29267 (= res!52897 (contains!814 lt!54487 (_1!1191 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16)))))))

(declare-fun lt!54486 () List!1596)

(assert (=> d!29267 (= lt!54487 (ListLongMap!1534 lt!54486))))

(declare-fun lt!54489 () Unit!3212)

(declare-fun lt!54488 () Unit!3212)

(assert (=> d!29267 (= lt!54489 lt!54488)))

(assert (=> d!29267 (= (getValueByKey!157 lt!54486 (_1!1191 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29267 (= lt!54488 (lemmaContainsTupThenGetReturnValue!73 lt!54486 (_1!1191 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29267 (= lt!54486 (insertStrictlySorted!76 (toList!782 lt!54247) (_1!1191 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29267 (= (+!139 lt!54247 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16))) lt!54487)))

(declare-fun b!106404 () Bool)

(declare-fun res!52898 () Bool)

(assert (=> b!106404 (=> (not res!52898) (not e!69246))))

(assert (=> b!106404 (= res!52898 (= (getValueByKey!157 (toList!782 lt!54487) (_1!1191 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16))))))))

(declare-fun b!106405 () Bool)

(assert (=> b!106405 (= e!69246 (contains!816 (toList!782 lt!54487) (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16))))))

(assert (= (and d!29267 res!52897) b!106404))

(assert (= (and b!106404 res!52898) b!106405))

(declare-fun m!118967 () Bool)

(assert (=> d!29267 m!118967))

(declare-fun m!118969 () Bool)

(assert (=> d!29267 m!118969))

(declare-fun m!118971 () Bool)

(assert (=> d!29267 m!118971))

(declare-fun m!118973 () Bool)

(assert (=> d!29267 m!118973))

(declare-fun m!118975 () Bool)

(assert (=> b!106404 m!118975))

(declare-fun m!118977 () Bool)

(assert (=> b!106405 m!118977))

(assert (=> b!105997 d!29267))

(declare-fun d!29269 () Bool)

(assert (=> d!29269 (= (apply!98 (+!139 lt!54244 (tuple2!2361 lt!54235 (minValue!2456 newMap!16))) lt!54245) (apply!98 lt!54244 lt!54245))))

(declare-fun lt!54490 () Unit!3212)

(assert (=> d!29269 (= lt!54490 (choose!666 lt!54244 lt!54235 (minValue!2456 newMap!16) lt!54245))))

(declare-fun e!69247 () Bool)

(assert (=> d!29269 e!69247))

(declare-fun res!52899 () Bool)

(assert (=> d!29269 (=> (not res!52899) (not e!69247))))

(assert (=> d!29269 (= res!52899 (contains!814 lt!54244 lt!54245))))

(assert (=> d!29269 (= (addApplyDifferent!74 lt!54244 lt!54235 (minValue!2456 newMap!16) lt!54245) lt!54490)))

(declare-fun b!106406 () Bool)

(assert (=> b!106406 (= e!69247 (not (= lt!54245 lt!54235)))))

(assert (= (and d!29269 res!52899) b!106406))

(assert (=> d!29269 m!118299))

(assert (=> d!29269 m!118299))

(assert (=> d!29269 m!118301))

(declare-fun m!118979 () Bool)

(assert (=> d!29269 m!118979))

(assert (=> d!29269 m!118309))

(declare-fun m!118981 () Bool)

(assert (=> d!29269 m!118981))

(assert (=> b!105997 d!29269))

(declare-fun d!29271 () Bool)

(assert (=> d!29271 (= (apply!98 (+!139 lt!54244 (tuple2!2361 lt!54235 (minValue!2456 newMap!16))) lt!54245) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!54244 (tuple2!2361 lt!54235 (minValue!2456 newMap!16)))) lt!54245)))))

(declare-fun bs!4381 () Bool)

(assert (= bs!4381 d!29271))

(declare-fun m!118983 () Bool)

(assert (=> bs!4381 m!118983))

(assert (=> bs!4381 m!118983))

(declare-fun m!118985 () Bool)

(assert (=> bs!4381 m!118985))

(assert (=> b!105997 d!29271))

(assert (=> b!105997 d!29097))

(declare-fun d!29273 () Bool)

(assert (=> d!29273 (= (apply!98 lt!54247 lt!54242) (get!1338 (getValueByKey!157 (toList!782 lt!54247) lt!54242)))))

(declare-fun bs!4382 () Bool)

(assert (= bs!4382 d!29273))

(declare-fun m!118987 () Bool)

(assert (=> bs!4382 m!118987))

(assert (=> bs!4382 m!118987))

(declare-fun m!118989 () Bool)

(assert (=> bs!4382 m!118989))

(assert (=> b!105997 d!29273))

(declare-fun d!29275 () Bool)

(assert (=> d!29275 (= (apply!98 lt!54244 lt!54245) (get!1338 (getValueByKey!157 (toList!782 lt!54244) lt!54245)))))

(declare-fun bs!4383 () Bool)

(assert (= bs!4383 d!29275))

(declare-fun m!118991 () Bool)

(assert (=> bs!4383 m!118991))

(assert (=> bs!4383 m!118991))

(declare-fun m!118993 () Bool)

(assert (=> bs!4383 m!118993))

(assert (=> b!105997 d!29275))

(declare-fun d!29277 () Bool)

(assert (=> d!29277 (= (apply!98 (+!139 lt!54246 (tuple2!2361 lt!54240 (minValue!2456 newMap!16))) lt!54254) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!54246 (tuple2!2361 lt!54240 (minValue!2456 newMap!16)))) lt!54254)))))

(declare-fun bs!4384 () Bool)

(assert (= bs!4384 d!29277))

(declare-fun m!118995 () Bool)

(assert (=> bs!4384 m!118995))

(assert (=> bs!4384 m!118995))

(declare-fun m!118997 () Bool)

(assert (=> bs!4384 m!118997))

(assert (=> b!105997 d!29277))

(declare-fun d!29279 () Bool)

(assert (=> d!29279 (= (apply!98 (+!139 lt!54246 (tuple2!2361 lt!54240 (minValue!2456 newMap!16))) lt!54254) (apply!98 lt!54246 lt!54254))))

(declare-fun lt!54491 () Unit!3212)

(assert (=> d!29279 (= lt!54491 (choose!666 lt!54246 lt!54240 (minValue!2456 newMap!16) lt!54254))))

(declare-fun e!69248 () Bool)

(assert (=> d!29279 e!69248))

(declare-fun res!52900 () Bool)

(assert (=> d!29279 (=> (not res!52900) (not e!69248))))

(assert (=> d!29279 (= res!52900 (contains!814 lt!54246 lt!54254))))

(assert (=> d!29279 (= (addApplyDifferent!74 lt!54246 lt!54240 (minValue!2456 newMap!16) lt!54254) lt!54491)))

(declare-fun b!106407 () Bool)

(assert (=> b!106407 (= e!69248 (not (= lt!54254 lt!54240)))))

(assert (= (and d!29279 res!52900) b!106407))

(assert (=> d!29279 m!118297))

(assert (=> d!29279 m!118297))

(assert (=> d!29279 m!118315))

(declare-fun m!118999 () Bool)

(assert (=> d!29279 m!118999))

(assert (=> d!29279 m!118311))

(declare-fun m!119001 () Bool)

(assert (=> d!29279 m!119001))

(assert (=> b!105997 d!29279))

(declare-fun d!29281 () Bool)

(assert (=> d!29281 (= (apply!98 (+!139 lt!54247 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16))) lt!54242) (apply!98 lt!54247 lt!54242))))

(declare-fun lt!54492 () Unit!3212)

(assert (=> d!29281 (= lt!54492 (choose!666 lt!54247 lt!54256 (zeroValue!2456 newMap!16) lt!54242))))

(declare-fun e!69249 () Bool)

(assert (=> d!29281 e!69249))

(declare-fun res!52901 () Bool)

(assert (=> d!29281 (=> (not res!52901) (not e!69249))))

(assert (=> d!29281 (= res!52901 (contains!814 lt!54247 lt!54242))))

(assert (=> d!29281 (= (addApplyDifferent!74 lt!54247 lt!54256 (zeroValue!2456 newMap!16) lt!54242) lt!54492)))

(declare-fun b!106408 () Bool)

(assert (=> b!106408 (= e!69249 (not (= lt!54242 lt!54256)))))

(assert (= (and d!29281 res!52901) b!106408))

(assert (=> d!29281 m!118303))

(assert (=> d!29281 m!118303))

(assert (=> d!29281 m!118305))

(declare-fun m!119003 () Bool)

(assert (=> d!29281 m!119003))

(assert (=> d!29281 m!118293))

(declare-fun m!119005 () Bool)

(assert (=> d!29281 m!119005))

(assert (=> b!105997 d!29281))

(declare-fun d!29283 () Bool)

(declare-fun e!69250 () Bool)

(assert (=> d!29283 e!69250))

(declare-fun res!52902 () Bool)

(assert (=> d!29283 (=> (not res!52902) (not e!69250))))

(declare-fun lt!54494 () ListLongMap!1533)

(assert (=> d!29283 (= res!52902 (contains!814 lt!54494 (_1!1191 (tuple2!2361 lt!54240 (minValue!2456 newMap!16)))))))

(declare-fun lt!54493 () List!1596)

(assert (=> d!29283 (= lt!54494 (ListLongMap!1534 lt!54493))))

(declare-fun lt!54496 () Unit!3212)

(declare-fun lt!54495 () Unit!3212)

(assert (=> d!29283 (= lt!54496 lt!54495)))

(assert (=> d!29283 (= (getValueByKey!157 lt!54493 (_1!1191 (tuple2!2361 lt!54240 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54240 (minValue!2456 newMap!16)))))))

(assert (=> d!29283 (= lt!54495 (lemmaContainsTupThenGetReturnValue!73 lt!54493 (_1!1191 (tuple2!2361 lt!54240 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54240 (minValue!2456 newMap!16)))))))

(assert (=> d!29283 (= lt!54493 (insertStrictlySorted!76 (toList!782 lt!54246) (_1!1191 (tuple2!2361 lt!54240 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54240 (minValue!2456 newMap!16)))))))

(assert (=> d!29283 (= (+!139 lt!54246 (tuple2!2361 lt!54240 (minValue!2456 newMap!16))) lt!54494)))

(declare-fun b!106409 () Bool)

(declare-fun res!52903 () Bool)

(assert (=> b!106409 (=> (not res!52903) (not e!69250))))

(assert (=> b!106409 (= res!52903 (= (getValueByKey!157 (toList!782 lt!54494) (_1!1191 (tuple2!2361 lt!54240 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54240 (minValue!2456 newMap!16))))))))

(declare-fun b!106410 () Bool)

(assert (=> b!106410 (= e!69250 (contains!816 (toList!782 lt!54494) (tuple2!2361 lt!54240 (minValue!2456 newMap!16))))))

(assert (= (and d!29283 res!52902) b!106409))

(assert (= (and b!106409 res!52903) b!106410))

(declare-fun m!119007 () Bool)

(assert (=> d!29283 m!119007))

(declare-fun m!119009 () Bool)

(assert (=> d!29283 m!119009))

(declare-fun m!119011 () Bool)

(assert (=> d!29283 m!119011))

(declare-fun m!119013 () Bool)

(assert (=> d!29283 m!119013))

(declare-fun m!119015 () Bool)

(assert (=> b!106409 m!119015))

(declare-fun m!119017 () Bool)

(assert (=> b!106410 m!119017))

(assert (=> b!105997 d!29283))

(declare-fun d!29285 () Bool)

(assert (=> d!29285 (contains!814 (+!139 lt!54236 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16))) lt!54237)))

(declare-fun lt!54497 () Unit!3212)

(assert (=> d!29285 (= lt!54497 (choose!667 lt!54236 lt!54250 (zeroValue!2456 newMap!16) lt!54237))))

(assert (=> d!29285 (contains!814 lt!54236 lt!54237)))

(assert (=> d!29285 (= (addStillContains!74 lt!54236 lt!54250 (zeroValue!2456 newMap!16) lt!54237) lt!54497)))

(declare-fun bs!4385 () Bool)

(assert (= bs!4385 d!29285))

(assert (=> bs!4385 m!118291))

(assert (=> bs!4385 m!118291))

(assert (=> bs!4385 m!118317))

(declare-fun m!119019 () Bool)

(assert (=> bs!4385 m!119019))

(declare-fun m!119021 () Bool)

(assert (=> bs!4385 m!119021))

(assert (=> b!105997 d!29285))

(declare-fun d!29287 () Bool)

(declare-fun e!69251 () Bool)

(assert (=> d!29287 e!69251))

(declare-fun res!52904 () Bool)

(assert (=> d!29287 (=> (not res!52904) (not e!69251))))

(declare-fun lt!54499 () ListLongMap!1533)

(assert (=> d!29287 (= res!52904 (contains!814 lt!54499 (_1!1191 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16)))))))

(declare-fun lt!54498 () List!1596)

(assert (=> d!29287 (= lt!54499 (ListLongMap!1534 lt!54498))))

(declare-fun lt!54501 () Unit!3212)

(declare-fun lt!54500 () Unit!3212)

(assert (=> d!29287 (= lt!54501 lt!54500)))

(assert (=> d!29287 (= (getValueByKey!157 lt!54498 (_1!1191 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29287 (= lt!54500 (lemmaContainsTupThenGetReturnValue!73 lt!54498 (_1!1191 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29287 (= lt!54498 (insertStrictlySorted!76 (toList!782 lt!54236) (_1!1191 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29287 (= (+!139 lt!54236 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16))) lt!54499)))

(declare-fun b!106411 () Bool)

(declare-fun res!52905 () Bool)

(assert (=> b!106411 (=> (not res!52905) (not e!69251))))

(assert (=> b!106411 (= res!52905 (= (getValueByKey!157 (toList!782 lt!54499) (_1!1191 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16))))))))

(declare-fun b!106412 () Bool)

(assert (=> b!106412 (= e!69251 (contains!816 (toList!782 lt!54499) (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16))))))

(assert (= (and d!29287 res!52904) b!106411))

(assert (= (and b!106411 res!52905) b!106412))

(declare-fun m!119023 () Bool)

(assert (=> d!29287 m!119023))

(declare-fun m!119025 () Bool)

(assert (=> d!29287 m!119025))

(declare-fun m!119027 () Bool)

(assert (=> d!29287 m!119027))

(declare-fun m!119029 () Bool)

(assert (=> d!29287 m!119029))

(declare-fun m!119031 () Bool)

(assert (=> b!106411 m!119031))

(declare-fun m!119033 () Bool)

(assert (=> b!106412 m!119033))

(assert (=> b!105997 d!29287))

(declare-fun d!29289 () Bool)

(declare-fun e!69252 () Bool)

(assert (=> d!29289 e!69252))

(declare-fun res!52906 () Bool)

(assert (=> d!29289 (=> (not res!52906) (not e!69252))))

(declare-fun lt!54503 () ListLongMap!1533)

(assert (=> d!29289 (= res!52906 (contains!814 lt!54503 (_1!1191 (tuple2!2361 lt!54235 (minValue!2456 newMap!16)))))))

(declare-fun lt!54502 () List!1596)

(assert (=> d!29289 (= lt!54503 (ListLongMap!1534 lt!54502))))

(declare-fun lt!54505 () Unit!3212)

(declare-fun lt!54504 () Unit!3212)

(assert (=> d!29289 (= lt!54505 lt!54504)))

(assert (=> d!29289 (= (getValueByKey!157 lt!54502 (_1!1191 (tuple2!2361 lt!54235 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54235 (minValue!2456 newMap!16)))))))

(assert (=> d!29289 (= lt!54504 (lemmaContainsTupThenGetReturnValue!73 lt!54502 (_1!1191 (tuple2!2361 lt!54235 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54235 (minValue!2456 newMap!16)))))))

(assert (=> d!29289 (= lt!54502 (insertStrictlySorted!76 (toList!782 lt!54244) (_1!1191 (tuple2!2361 lt!54235 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54235 (minValue!2456 newMap!16)))))))

(assert (=> d!29289 (= (+!139 lt!54244 (tuple2!2361 lt!54235 (minValue!2456 newMap!16))) lt!54503)))

(declare-fun b!106413 () Bool)

(declare-fun res!52907 () Bool)

(assert (=> b!106413 (=> (not res!52907) (not e!69252))))

(assert (=> b!106413 (= res!52907 (= (getValueByKey!157 (toList!782 lt!54503) (_1!1191 (tuple2!2361 lt!54235 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54235 (minValue!2456 newMap!16))))))))

(declare-fun b!106414 () Bool)

(assert (=> b!106414 (= e!69252 (contains!816 (toList!782 lt!54503) (tuple2!2361 lt!54235 (minValue!2456 newMap!16))))))

(assert (= (and d!29289 res!52906) b!106413))

(assert (= (and b!106413 res!52907) b!106414))

(declare-fun m!119035 () Bool)

(assert (=> d!29289 m!119035))

(declare-fun m!119037 () Bool)

(assert (=> d!29289 m!119037))

(declare-fun m!119039 () Bool)

(assert (=> d!29289 m!119039))

(declare-fun m!119041 () Bool)

(assert (=> d!29289 m!119041))

(declare-fun m!119043 () Bool)

(assert (=> b!106413 m!119043))

(declare-fun m!119045 () Bool)

(assert (=> b!106414 m!119045))

(assert (=> b!105997 d!29289))

(declare-fun d!29291 () Bool)

(assert (=> d!29291 (= (apply!98 lt!54246 lt!54254) (get!1338 (getValueByKey!157 (toList!782 lt!54246) lt!54254)))))

(declare-fun bs!4386 () Bool)

(assert (= bs!4386 d!29291))

(declare-fun m!119047 () Bool)

(assert (=> bs!4386 m!119047))

(assert (=> bs!4386 m!119047))

(declare-fun m!119049 () Bool)

(assert (=> bs!4386 m!119049))

(assert (=> b!105997 d!29291))

(declare-fun d!29293 () Bool)

(assert (=> d!29293 (= (apply!98 (+!139 lt!54247 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16))) lt!54242) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!54247 (tuple2!2361 lt!54256 (zeroValue!2456 newMap!16)))) lt!54242)))))

(declare-fun bs!4387 () Bool)

(assert (= bs!4387 d!29293))

(declare-fun m!119051 () Bool)

(assert (=> bs!4387 m!119051))

(assert (=> bs!4387 m!119051))

(declare-fun m!119053 () Bool)

(assert (=> bs!4387 m!119053))

(assert (=> b!105997 d!29293))

(declare-fun d!29295 () Bool)

(declare-fun e!69253 () Bool)

(assert (=> d!29295 e!69253))

(declare-fun res!52908 () Bool)

(assert (=> d!29295 (=> res!52908 e!69253)))

(declare-fun lt!54507 () Bool)

(assert (=> d!29295 (= res!52908 (not lt!54507))))

(declare-fun lt!54508 () Bool)

(assert (=> d!29295 (= lt!54507 lt!54508)))

(declare-fun lt!54509 () Unit!3212)

(declare-fun e!69254 () Unit!3212)

(assert (=> d!29295 (= lt!54509 e!69254)))

(declare-fun c!18591 () Bool)

(assert (=> d!29295 (= c!18591 lt!54508)))

(assert (=> d!29295 (= lt!54508 (containsKey!160 (toList!782 (+!139 lt!54236 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16)))) lt!54237))))

(assert (=> d!29295 (= (contains!814 (+!139 lt!54236 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16))) lt!54237) lt!54507)))

(declare-fun b!106415 () Bool)

(declare-fun lt!54506 () Unit!3212)

(assert (=> b!106415 (= e!69254 lt!54506)))

(assert (=> b!106415 (= lt!54506 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (+!139 lt!54236 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16)))) lt!54237))))

(assert (=> b!106415 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!54236 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16)))) lt!54237))))

(declare-fun b!106416 () Bool)

(declare-fun Unit!3253 () Unit!3212)

(assert (=> b!106416 (= e!69254 Unit!3253)))

(declare-fun b!106417 () Bool)

(assert (=> b!106417 (= e!69253 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!54236 (tuple2!2361 lt!54250 (zeroValue!2456 newMap!16)))) lt!54237)))))

(assert (= (and d!29295 c!18591) b!106415))

(assert (= (and d!29295 (not c!18591)) b!106416))

(assert (= (and d!29295 (not res!52908)) b!106417))

(declare-fun m!119055 () Bool)

(assert (=> d!29295 m!119055))

(declare-fun m!119057 () Bool)

(assert (=> b!106415 m!119057))

(declare-fun m!119059 () Bool)

(assert (=> b!106415 m!119059))

(assert (=> b!106415 m!119059))

(declare-fun m!119061 () Bool)

(assert (=> b!106415 m!119061))

(assert (=> b!106417 m!119059))

(assert (=> b!106417 m!119059))

(assert (=> b!106417 m!119061))

(assert (=> b!105997 d!29295))

(declare-fun b!106418 () Bool)

(declare-fun e!69256 () Bool)

(declare-fun call!11228 () Bool)

(assert (=> b!106418 (= e!69256 call!11228)))

(declare-fun d!29297 () Bool)

(declare-fun res!52909 () Bool)

(declare-fun e!69257 () Bool)

(assert (=> d!29297 (=> res!52909 e!69257)))

(assert (=> d!29297 (= res!52909 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))))))

(assert (=> d!29297 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4287 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868))) e!69257)))

(declare-fun bm!11225 () Bool)

(assert (=> bm!11225 (= call!11228 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4287 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868))))))

(declare-fun b!106419 () Bool)

(assert (=> b!106419 (= e!69257 e!69256)))

(declare-fun c!18592 () Bool)

(assert (=> b!106419 (= c!18592 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000)))))

(declare-fun b!106420 () Bool)

(declare-fun e!69255 () Bool)

(assert (=> b!106420 (= e!69255 call!11228)))

(declare-fun b!106421 () Bool)

(assert (=> b!106421 (= e!69256 e!69255)))

(declare-fun lt!54510 () (_ BitVec 64))

(assert (=> b!106421 (= lt!54510 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000))))

(declare-fun lt!54512 () Unit!3212)

(assert (=> b!106421 (= lt!54512 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4287 (_2!1192 lt!53868)) lt!54510 #b00000000000000000000000000000000))))

(assert (=> b!106421 (arrayContainsKey!0 (_keys!4287 (_2!1192 lt!53868)) lt!54510 #b00000000000000000000000000000000)))

(declare-fun lt!54511 () Unit!3212)

(assert (=> b!106421 (= lt!54511 lt!54512)))

(declare-fun res!52910 () Bool)

(assert (=> b!106421 (= res!52910 (= (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000) (_keys!4287 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868))) (Found!253 #b00000000000000000000000000000000)))))

(assert (=> b!106421 (=> (not res!52910) (not e!69255))))

(assert (= (and d!29297 (not res!52909)) b!106419))

(assert (= (and b!106419 c!18592) b!106421))

(assert (= (and b!106419 (not c!18592)) b!106418))

(assert (= (and b!106421 res!52910) b!106420))

(assert (= (or b!106420 b!106418) bm!11225))

(declare-fun m!119063 () Bool)

(assert (=> bm!11225 m!119063))

(assert (=> b!106419 m!118743))

(assert (=> b!106419 m!118743))

(assert (=> b!106419 m!118747))

(assert (=> b!106421 m!118743))

(declare-fun m!119065 () Bool)

(assert (=> b!106421 m!119065))

(declare-fun m!119067 () Bool)

(assert (=> b!106421 m!119067))

(assert (=> b!106421 m!118743))

(declare-fun m!119069 () Bool)

(assert (=> b!106421 m!119069))

(assert (=> b!105658 d!29297))

(declare-fun d!29299 () Bool)

(assert (=> d!29299 (= (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53951)) (v!2898 (getValueByKey!157 (toList!782 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53951)))))

(assert (=> d!28891 d!29299))

(declare-fun e!69258 () Option!163)

(declare-fun b!106422 () Bool)

(assert (=> b!106422 (= e!69258 (Some!162 (_2!1191 (h!2189 (toList!782 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun d!29301 () Bool)

(declare-fun c!18593 () Bool)

(assert (=> d!29301 (= c!18593 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53951)))))

(assert (=> d!29301 (= (getValueByKey!157 (toList!782 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53951) e!69258)))

(declare-fun b!106424 () Bool)

(declare-fun e!69259 () Option!163)

(assert (=> b!106424 (= e!69259 (getValueByKey!157 (t!5671 (toList!782 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) lt!53951))))

(declare-fun b!106423 () Bool)

(assert (=> b!106423 (= e!69258 e!69259)))

(declare-fun c!18594 () Bool)

(assert (=> b!106423 (= c!18594 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) (not (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53951))))))

(declare-fun b!106425 () Bool)

(assert (=> b!106425 (= e!69259 None!161)))

(assert (= (and d!29301 c!18593) b!106422))

(assert (= (and d!29301 (not c!18593)) b!106423))

(assert (= (and b!106423 c!18594) b!106424))

(assert (= (and b!106423 (not c!18594)) b!106425))

(declare-fun m!119071 () Bool)

(assert (=> b!106424 m!119071))

(assert (=> d!28891 d!29301))

(assert (=> d!28933 d!29089))

(declare-fun lt!54513 () Bool)

(declare-fun d!29303 () Bool)

(assert (=> d!29303 (= lt!54513 (select (content!111 (toList!782 lt!54110)) (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69260 () Bool)

(assert (=> d!29303 (= lt!54513 e!69260)))

(declare-fun res!52911 () Bool)

(assert (=> d!29303 (=> (not res!52911) (not e!69260))))

(assert (=> d!29303 (= res!52911 ((_ is Cons!1592) (toList!782 lt!54110)))))

(assert (=> d!29303 (= (contains!816 (toList!782 lt!54110) (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54513)))

(declare-fun b!106426 () Bool)

(declare-fun e!69261 () Bool)

(assert (=> b!106426 (= e!69260 e!69261)))

(declare-fun res!52912 () Bool)

(assert (=> b!106426 (=> res!52912 e!69261)))

(assert (=> b!106426 (= res!52912 (= (h!2189 (toList!782 lt!54110)) (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106427 () Bool)

(assert (=> b!106427 (= e!69261 (contains!816 (t!5671 (toList!782 lt!54110)) (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29303 res!52911) b!106426))

(assert (= (and b!106426 (not res!52912)) b!106427))

(declare-fun m!119073 () Bool)

(assert (=> d!29303 m!119073))

(declare-fun m!119075 () Bool)

(assert (=> d!29303 m!119075))

(declare-fun m!119077 () Bool)

(assert (=> b!106427 m!119077))

(assert (=> b!105767 d!29303))

(declare-fun b!106429 () Bool)

(declare-fun e!69265 () Bool)

(assert (=> b!106429 (= e!69265 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106429 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!106430 () Bool)

(declare-fun e!69267 () ListLongMap!1533)

(declare-fun e!69263 () ListLongMap!1533)

(assert (=> b!106430 (= e!69267 e!69263)))

(declare-fun c!18595 () Bool)

(assert (=> b!106430 (= c!18595 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106431 () Bool)

(declare-fun e!69266 () Bool)

(declare-fun lt!54515 () ListLongMap!1533)

(assert (=> b!106431 (= e!69266 (= lt!54515 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16))))))

(declare-fun b!106432 () Bool)

(assert (=> b!106432 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> b!106432 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_values!2564 newMap!16))))))

(declare-fun e!69262 () Bool)

(assert (=> b!106432 (= e!69262 (= (apply!98 lt!54515 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106433 () Bool)

(declare-fun e!69264 () Bool)

(assert (=> b!106433 (= e!69264 e!69262)))

(assert (=> b!106433 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun res!52916 () Bool)

(assert (=> b!106433 (= res!52916 (contains!814 lt!54515 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106433 (=> (not res!52916) (not e!69262))))

(declare-fun b!106434 () Bool)

(declare-fun e!69268 () Bool)

(assert (=> b!106434 (= e!69268 e!69264)))

(declare-fun c!18598 () Bool)

(assert (=> b!106434 (= c!18598 e!69265)))

(declare-fun res!52914 () Bool)

(assert (=> b!106434 (=> (not res!52914) (not e!69265))))

(assert (=> b!106434 (= res!52914 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106435 () Bool)

(assert (=> b!106435 (= e!69266 (isEmpty!376 lt!54515))))

(declare-fun d!29305 () Bool)

(assert (=> d!29305 e!69268))

(declare-fun res!52915 () Bool)

(assert (=> d!29305 (=> (not res!52915) (not e!69268))))

(assert (=> d!29305 (= res!52915 (not (contains!814 lt!54515 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29305 (= lt!54515 e!69267)))

(declare-fun c!18597 () Bool)

(assert (=> d!29305 (= c!18597 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29305 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29305 (= (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54515)))

(declare-fun b!106428 () Bool)

(assert (=> b!106428 (= e!69267 (ListLongMap!1534 Nil!1593))))

(declare-fun b!106436 () Bool)

(assert (=> b!106436 (= e!69264 e!69266)))

(declare-fun c!18596 () Bool)

(assert (=> b!106436 (= c!18596 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106437 () Bool)

(declare-fun call!11229 () ListLongMap!1533)

(assert (=> b!106437 (= e!69263 call!11229)))

(declare-fun bm!11226 () Bool)

(assert (=> bm!11226 (= call!11229 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16)))))

(declare-fun b!106438 () Bool)

(declare-fun res!52913 () Bool)

(assert (=> b!106438 (=> (not res!52913) (not e!69268))))

(assert (=> b!106438 (= res!52913 (not (contains!814 lt!54515 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106439 () Bool)

(declare-fun lt!54520 () Unit!3212)

(declare-fun lt!54516 () Unit!3212)

(assert (=> b!106439 (= lt!54520 lt!54516)))

(declare-fun lt!54518 () V!3217)

(declare-fun lt!54519 () (_ BitVec 64))

(declare-fun lt!54517 () ListLongMap!1533)

(declare-fun lt!54514 () (_ BitVec 64))

(assert (=> b!106439 (not (contains!814 (+!139 lt!54517 (tuple2!2361 lt!54519 lt!54518)) lt!54514))))

(assert (=> b!106439 (= lt!54516 (addStillNotContains!48 lt!54517 lt!54519 lt!54518 lt!54514))))

(assert (=> b!106439 (= lt!54514 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106439 (= lt!54518 (get!1334 (select (arr!2055 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106439 (= lt!54519 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106439 (= lt!54517 call!11229)))

(assert (=> b!106439 (= e!69263 (+!139 call!11229 (tuple2!2361 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) (get!1334 (select (arr!2055 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29305 c!18597) b!106428))

(assert (= (and d!29305 (not c!18597)) b!106430))

(assert (= (and b!106430 c!18595) b!106439))

(assert (= (and b!106430 (not c!18595)) b!106437))

(assert (= (or b!106439 b!106437) bm!11226))

(assert (= (and d!29305 res!52915) b!106438))

(assert (= (and b!106438 res!52913) b!106434))

(assert (= (and b!106434 res!52914) b!106429))

(assert (= (and b!106434 c!18598) b!106433))

(assert (= (and b!106434 (not c!18598)) b!106436))

(assert (= (and b!106433 res!52916) b!106432))

(assert (= (and b!106436 c!18596) b!106431))

(assert (= (and b!106436 (not c!18596)) b!106435))

(declare-fun b_lambda!4761 () Bool)

(assert (=> (not b_lambda!4761) (not b!106432)))

(assert (=> b!106432 t!5683))

(declare-fun b_and!6565 () Bool)

(assert (= b_and!6561 (and (=> t!5683 result!3459) b_and!6565)))

(assert (=> b!106432 t!5685))

(declare-fun b_and!6567 () Bool)

(assert (= b_and!6563 (and (=> t!5685 result!3461) b_and!6567)))

(declare-fun b_lambda!4763 () Bool)

(assert (=> (not b_lambda!4763) (not b!106439)))

(assert (=> b!106439 t!5683))

(declare-fun b_and!6569 () Bool)

(assert (= b_and!6565 (and (=> t!5683 result!3459) b_and!6569)))

(assert (=> b!106439 t!5685))

(declare-fun b_and!6571 () Bool)

(assert (= b_and!6567 (and (=> t!5685 result!3461) b_and!6571)))

(declare-fun m!119079 () Bool)

(assert (=> d!29305 m!119079))

(assert (=> d!29305 m!117661))

(assert (=> b!106429 m!117657))

(assert (=> b!106429 m!117657))

(assert (=> b!106429 m!117663))

(declare-fun m!119081 () Bool)

(assert (=> b!106435 m!119081))

(declare-fun m!119083 () Bool)

(assert (=> b!106431 m!119083))

(assert (=> b!106432 m!118077))

(assert (=> b!106432 m!117653))

(assert (=> b!106432 m!118079))

(assert (=> b!106432 m!117657))

(declare-fun m!119085 () Bool)

(assert (=> b!106432 m!119085))

(assert (=> b!106432 m!117657))

(assert (=> b!106432 m!117653))

(assert (=> b!106432 m!118077))

(assert (=> bm!11226 m!119083))

(declare-fun m!119087 () Bool)

(assert (=> b!106438 m!119087))

(assert (=> b!106430 m!117657))

(assert (=> b!106430 m!117657))

(assert (=> b!106430 m!117663))

(assert (=> b!106433 m!117657))

(assert (=> b!106433 m!117657))

(declare-fun m!119089 () Bool)

(assert (=> b!106433 m!119089))

(assert (=> b!106439 m!118077))

(assert (=> b!106439 m!117653))

(assert (=> b!106439 m!118079))

(declare-fun m!119091 () Bool)

(assert (=> b!106439 m!119091))

(declare-fun m!119093 () Bool)

(assert (=> b!106439 m!119093))

(assert (=> b!106439 m!117657))

(declare-fun m!119095 () Bool)

(assert (=> b!106439 m!119095))

(assert (=> b!106439 m!118077))

(declare-fun m!119097 () Bool)

(assert (=> b!106439 m!119097))

(assert (=> b!106439 m!119091))

(assert (=> b!106439 m!117653))

(assert (=> bm!11165 d!29305))

(declare-fun d!29307 () Bool)

(declare-fun e!69269 () Bool)

(assert (=> d!29307 e!69269))

(declare-fun res!52917 () Bool)

(assert (=> d!29307 (=> res!52917 e!69269)))

(declare-fun lt!54522 () Bool)

(assert (=> d!29307 (= res!52917 (not lt!54522))))

(declare-fun lt!54523 () Bool)

(assert (=> d!29307 (= lt!54522 lt!54523)))

(declare-fun lt!54524 () Unit!3212)

(declare-fun e!69270 () Unit!3212)

(assert (=> d!29307 (= lt!54524 e!69270)))

(declare-fun c!18599 () Bool)

(assert (=> d!29307 (= c!18599 lt!54523)))

(assert (=> d!29307 (= lt!54523 (containsKey!160 (toList!782 lt!54105) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29307 (= (contains!814 lt!54105 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54522)))

(declare-fun b!106440 () Bool)

(declare-fun lt!54521 () Unit!3212)

(assert (=> b!106440 (= e!69270 lt!54521)))

(assert (=> b!106440 (= lt!54521 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54105) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106440 (isDefined!109 (getValueByKey!157 (toList!782 lt!54105) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106441 () Bool)

(declare-fun Unit!3254 () Unit!3212)

(assert (=> b!106441 (= e!69270 Unit!3254)))

(declare-fun b!106442 () Bool)

(assert (=> b!106442 (= e!69269 (isDefined!109 (getValueByKey!157 (toList!782 lt!54105) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29307 c!18599) b!106440))

(assert (= (and d!29307 (not c!18599)) b!106441))

(assert (= (and d!29307 (not res!52917)) b!106442))

(declare-fun m!119099 () Bool)

(assert (=> d!29307 m!119099))

(declare-fun m!119101 () Bool)

(assert (=> b!106440 m!119101))

(assert (=> b!106440 m!117907))

(assert (=> b!106440 m!117907))

(declare-fun m!119103 () Bool)

(assert (=> b!106440 m!119103))

(assert (=> b!106442 m!117907))

(assert (=> b!106442 m!117907))

(assert (=> b!106442 m!119103))

(assert (=> d!28873 d!29307))

(declare-fun b!106443 () Bool)

(declare-fun e!69271 () Option!163)

(assert (=> b!106443 (= e!69271 (Some!162 (_2!1191 (h!2189 lt!54104))))))

(declare-fun d!29309 () Bool)

(declare-fun c!18600 () Bool)

(assert (=> d!29309 (= c!18600 (and ((_ is Cons!1592) lt!54104) (= (_1!1191 (h!2189 lt!54104)) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29309 (= (getValueByKey!157 lt!54104 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69271)))

(declare-fun e!69272 () Option!163)

(declare-fun b!106445 () Bool)

(assert (=> b!106445 (= e!69272 (getValueByKey!157 (t!5671 lt!54104) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106444 () Bool)

(assert (=> b!106444 (= e!69271 e!69272)))

(declare-fun c!18601 () Bool)

(assert (=> b!106444 (= c!18601 (and ((_ is Cons!1592) lt!54104) (not (= (_1!1191 (h!2189 lt!54104)) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106446 () Bool)

(assert (=> b!106446 (= e!69272 None!161)))

(assert (= (and d!29309 c!18600) b!106443))

(assert (= (and d!29309 (not c!18600)) b!106444))

(assert (= (and b!106444 c!18601) b!106445))

(assert (= (and b!106444 (not c!18601)) b!106446))

(declare-fun m!119105 () Bool)

(assert (=> b!106445 m!119105))

(assert (=> d!28873 d!29309))

(declare-fun d!29311 () Bool)

(assert (=> d!29311 (= (getValueByKey!157 lt!54104 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54525 () Unit!3212)

(assert (=> d!29311 (= lt!54525 (choose!662 lt!54104 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69273 () Bool)

(assert (=> d!29311 e!69273))

(declare-fun res!52918 () Bool)

(assert (=> d!29311 (=> (not res!52918) (not e!69273))))

(assert (=> d!29311 (= res!52918 (isStrictlySorted!296 lt!54104))))

(assert (=> d!29311 (= (lemmaContainsTupThenGetReturnValue!73 lt!54104 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54525)))

(declare-fun b!106447 () Bool)

(declare-fun res!52919 () Bool)

(assert (=> b!106447 (=> (not res!52919) (not e!69273))))

(assert (=> b!106447 (= res!52919 (containsKey!160 lt!54104 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106448 () Bool)

(assert (=> b!106448 (= e!69273 (contains!816 lt!54104 (tuple2!2361 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29311 res!52918) b!106447))

(assert (= (and b!106447 res!52919) b!106448))

(assert (=> d!29311 m!117901))

(declare-fun m!119107 () Bool)

(assert (=> d!29311 m!119107))

(declare-fun m!119109 () Bool)

(assert (=> d!29311 m!119109))

(declare-fun m!119111 () Bool)

(assert (=> b!106447 m!119111))

(declare-fun m!119113 () Bool)

(assert (=> b!106448 m!119113))

(assert (=> d!28873 d!29311))

(declare-fun bm!11227 () Bool)

(declare-fun call!11232 () List!1596)

(declare-fun call!11231 () List!1596)

(assert (=> bm!11227 (= call!11232 call!11231)))

(declare-fun e!69274 () List!1596)

(declare-fun c!18602 () Bool)

(declare-fun b!106449 () Bool)

(declare-fun c!18604 () Bool)

(assert (=> b!106449 (= e!69274 (ite c!18604 (t!5671 (toList!782 lt!53941)) (ite c!18602 (Cons!1592 (h!2189 (toList!782 lt!53941)) (t!5671 (toList!782 lt!53941))) Nil!1593)))))

(declare-fun b!106450 () Bool)

(declare-fun e!69277 () List!1596)

(assert (=> b!106450 (= e!69277 call!11231)))

(declare-fun b!106452 () Bool)

(assert (=> b!106452 (= c!18602 (and ((_ is Cons!1592) (toList!782 lt!53941)) (bvsgt (_1!1191 (h!2189 (toList!782 lt!53941))) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun e!69276 () List!1596)

(assert (=> b!106452 (= e!69277 e!69276)))

(declare-fun call!11230 () List!1596)

(declare-fun c!18603 () Bool)

(declare-fun bm!11228 () Bool)

(assert (=> bm!11228 (= call!11230 ($colon$colon!80 e!69274 (ite c!18603 (h!2189 (toList!782 lt!53941)) (tuple2!2361 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18605 () Bool)

(assert (=> bm!11228 (= c!18605 c!18603)))

(declare-fun b!106453 () Bool)

(assert (=> b!106453 (= e!69276 call!11232)))

(declare-fun b!106454 () Bool)

(assert (=> b!106454 (= e!69276 call!11232)))

(declare-fun b!106455 () Bool)

(declare-fun res!52921 () Bool)

(declare-fun e!69275 () Bool)

(assert (=> b!106455 (=> (not res!52921) (not e!69275))))

(declare-fun lt!54526 () List!1596)

(assert (=> b!106455 (= res!52921 (containsKey!160 lt!54526 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106456 () Bool)

(assert (=> b!106456 (= e!69275 (contains!816 lt!54526 (tuple2!2361 (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106457 () Bool)

(declare-fun e!69278 () List!1596)

(assert (=> b!106457 (= e!69278 e!69277)))

(assert (=> b!106457 (= c!18604 (and ((_ is Cons!1592) (toList!782 lt!53941)) (= (_1!1191 (h!2189 (toList!782 lt!53941))) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun d!29313 () Bool)

(assert (=> d!29313 e!69275))

(declare-fun res!52920 () Bool)

(assert (=> d!29313 (=> (not res!52920) (not e!69275))))

(assert (=> d!29313 (= res!52920 (isStrictlySorted!296 lt!54526))))

(assert (=> d!29313 (= lt!54526 e!69278)))

(assert (=> d!29313 (= c!18603 (and ((_ is Cons!1592) (toList!782 lt!53941)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53941))) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29313 (isStrictlySorted!296 (toList!782 lt!53941))))

(assert (=> d!29313 (= (insertStrictlySorted!76 (toList!782 lt!53941) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54526)))

(declare-fun b!106451 () Bool)

(assert (=> b!106451 (= e!69274 (insertStrictlySorted!76 (t!5671 (toList!782 lt!53941)) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun bm!11229 () Bool)

(assert (=> bm!11229 (= call!11231 call!11230)))

(declare-fun b!106458 () Bool)

(assert (=> b!106458 (= e!69278 call!11230)))

(assert (= (and d!29313 c!18603) b!106458))

(assert (= (and d!29313 (not c!18603)) b!106457))

(assert (= (and b!106457 c!18604) b!106450))

(assert (= (and b!106457 (not c!18604)) b!106452))

(assert (= (and b!106452 c!18602) b!106454))

(assert (= (and b!106452 (not c!18602)) b!106453))

(assert (= (or b!106454 b!106453) bm!11227))

(assert (= (or b!106450 bm!11227) bm!11229))

(assert (= (or b!106458 bm!11229) bm!11228))

(assert (= (and bm!11228 c!18605) b!106451))

(assert (= (and bm!11228 (not c!18605)) b!106449))

(assert (= (and d!29313 res!52920) b!106455))

(assert (= (and b!106455 res!52921) b!106456))

(declare-fun m!119115 () Bool)

(assert (=> bm!11228 m!119115))

(declare-fun m!119117 () Bool)

(assert (=> d!29313 m!119117))

(declare-fun m!119119 () Bool)

(assert (=> d!29313 m!119119))

(declare-fun m!119121 () Bool)

(assert (=> b!106456 m!119121))

(declare-fun m!119123 () Bool)

(assert (=> b!106455 m!119123))

(declare-fun m!119125 () Bool)

(assert (=> b!106451 m!119125))

(assert (=> d!28873 d!29313))

(declare-fun d!29315 () Bool)

(declare-fun res!52922 () Bool)

(declare-fun e!69279 () Bool)

(assert (=> d!29315 (=> res!52922 e!69279)))

(assert (=> d!29315 (= res!52922 (and ((_ is Cons!1592) lt!53998) (= (_1!1191 (h!2189 lt!53998)) (_1!1191 lt!53718))))))

(assert (=> d!29315 (= (containsKey!160 lt!53998 (_1!1191 lt!53718)) e!69279)))

(declare-fun b!106459 () Bool)

(declare-fun e!69280 () Bool)

(assert (=> b!106459 (= e!69279 e!69280)))

(declare-fun res!52923 () Bool)

(assert (=> b!106459 (=> (not res!52923) (not e!69280))))

(assert (=> b!106459 (= res!52923 (and (or (not ((_ is Cons!1592) lt!53998)) (bvsle (_1!1191 (h!2189 lt!53998)) (_1!1191 lt!53718))) ((_ is Cons!1592) lt!53998) (bvslt (_1!1191 (h!2189 lt!53998)) (_1!1191 lt!53718))))))

(declare-fun b!106460 () Bool)

(assert (=> b!106460 (= e!69280 (containsKey!160 (t!5671 lt!53998) (_1!1191 lt!53718)))))

(assert (= (and d!29315 (not res!52922)) b!106459))

(assert (= (and b!106459 res!52923) b!106460))

(declare-fun m!119127 () Bool)

(assert (=> b!106460 m!119127))

(assert (=> b!105806 d!29315))

(assert (=> d!28835 d!28839))

(assert (=> d!28835 d!28831))

(assert (=> d!28835 d!28833))

(assert (=> d!28835 d!28837))

(declare-fun d!29317 () Bool)

(declare-fun e!69281 () Bool)

(assert (=> d!29317 e!69281))

(declare-fun res!52924 () Bool)

(assert (=> d!29317 (=> res!52924 e!69281)))

(declare-fun lt!54528 () Bool)

(assert (=> d!29317 (= res!52924 (not lt!54528))))

(declare-fun lt!54529 () Bool)

(assert (=> d!29317 (= lt!54528 lt!54529)))

(declare-fun lt!54530 () Unit!3212)

(declare-fun e!69282 () Unit!3212)

(assert (=> d!29317 (= lt!54530 e!69282)))

(declare-fun c!18606 () Bool)

(assert (=> d!29317 (= c!18606 lt!54529)))

(assert (=> d!29317 (= lt!54529 (containsKey!160 (toList!782 lt!54259) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!29317 (= (contains!814 lt!54259 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) lt!54528)))

(declare-fun b!106461 () Bool)

(declare-fun lt!54527 () Unit!3212)

(assert (=> b!106461 (= e!69282 lt!54527)))

(assert (=> b!106461 (= lt!54527 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54259) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> b!106461 (isDefined!109 (getValueByKey!157 (toList!782 lt!54259) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!106462 () Bool)

(declare-fun Unit!3255 () Unit!3212)

(assert (=> b!106462 (= e!69282 Unit!3255)))

(declare-fun b!106463 () Bool)

(assert (=> b!106463 (= e!69281 (isDefined!109 (getValueByKey!157 (toList!782 lt!54259) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(assert (= (and d!29317 c!18606) b!106461))

(assert (= (and d!29317 (not c!18606)) b!106462))

(assert (= (and d!29317 (not res!52924)) b!106463))

(declare-fun m!119129 () Bool)

(assert (=> d!29317 m!119129))

(declare-fun m!119131 () Bool)

(assert (=> b!106461 m!119131))

(assert (=> b!106461 m!118345))

(assert (=> b!106461 m!118345))

(declare-fun m!119133 () Bool)

(assert (=> b!106461 m!119133))

(assert (=> b!106463 m!118345))

(assert (=> b!106463 m!118345))

(assert (=> b!106463 m!119133))

(assert (=> d!28995 d!29317))

(declare-fun b!106464 () Bool)

(declare-fun e!69283 () Option!163)

(assert (=> b!106464 (= e!69283 (Some!162 (_2!1191 (h!2189 lt!54258))))))

(declare-fun c!18607 () Bool)

(declare-fun d!29319 () Bool)

(assert (=> d!29319 (= c!18607 (and ((_ is Cons!1592) lt!54258) (= (_1!1191 (h!2189 lt!54258)) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(assert (=> d!29319 (= (getValueByKey!157 lt!54258 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) e!69283)))

(declare-fun b!106466 () Bool)

(declare-fun e!69284 () Option!163)

(assert (=> b!106466 (= e!69284 (getValueByKey!157 (t!5671 lt!54258) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!106465 () Bool)

(assert (=> b!106465 (= e!69283 e!69284)))

(declare-fun c!18608 () Bool)

(assert (=> b!106465 (= c!18608 (and ((_ is Cons!1592) lt!54258) (not (= (_1!1191 (h!2189 lt!54258)) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))))

(declare-fun b!106467 () Bool)

(assert (=> b!106467 (= e!69284 None!161)))

(assert (= (and d!29319 c!18607) b!106464))

(assert (= (and d!29319 (not c!18607)) b!106465))

(assert (= (and b!106465 c!18608) b!106466))

(assert (= (and b!106465 (not c!18608)) b!106467))

(declare-fun m!119135 () Bool)

(assert (=> b!106466 m!119135))

(assert (=> d!28995 d!29319))

(declare-fun d!29321 () Bool)

(assert (=> d!29321 (= (getValueByKey!157 lt!54258 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) (Some!162 (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun lt!54531 () Unit!3212)

(assert (=> d!29321 (= lt!54531 (choose!662 lt!54258 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun e!69285 () Bool)

(assert (=> d!29321 e!69285))

(declare-fun res!52925 () Bool)

(assert (=> d!29321 (=> (not res!52925) (not e!69285))))

(assert (=> d!29321 (= res!52925 (isStrictlySorted!296 lt!54258))))

(assert (=> d!29321 (= (lemmaContainsTupThenGetReturnValue!73 lt!54258 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) lt!54531)))

(declare-fun b!106468 () Bool)

(declare-fun res!52926 () Bool)

(assert (=> b!106468 (=> (not res!52926) (not e!69285))))

(assert (=> b!106468 (= res!52926 (containsKey!160 lt!54258 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!106469 () Bool)

(assert (=> b!106469 (= e!69285 (contains!816 lt!54258 (tuple2!2361 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(assert (= (and d!29321 res!52925) b!106468))

(assert (= (and b!106468 res!52926) b!106469))

(assert (=> d!29321 m!118339))

(declare-fun m!119137 () Bool)

(assert (=> d!29321 m!119137))

(declare-fun m!119139 () Bool)

(assert (=> d!29321 m!119139))

(declare-fun m!119141 () Bool)

(assert (=> b!106468 m!119141))

(declare-fun m!119143 () Bool)

(assert (=> b!106469 m!119143))

(assert (=> d!28995 d!29321))

(declare-fun bm!11230 () Bool)

(declare-fun call!11235 () List!1596)

(declare-fun call!11234 () List!1596)

(assert (=> bm!11230 (= call!11235 call!11234)))

(declare-fun c!18611 () Bool)

(declare-fun b!106470 () Bool)

(declare-fun c!18609 () Bool)

(declare-fun e!69286 () List!1596)

(assert (=> b!106470 (= e!69286 (ite c!18611 (t!5671 (toList!782 (ite c!18322 call!11100 call!11088))) (ite c!18609 (Cons!1592 (h!2189 (toList!782 (ite c!18322 call!11100 call!11088))) (t!5671 (toList!782 (ite c!18322 call!11100 call!11088)))) Nil!1593)))))

(declare-fun b!106471 () Bool)

(declare-fun e!69289 () List!1596)

(assert (=> b!106471 (= e!69289 call!11234)))

(declare-fun b!106473 () Bool)

(assert (=> b!106473 (= c!18609 (and ((_ is Cons!1592) (toList!782 (ite c!18322 call!11100 call!11088))) (bvsgt (_1!1191 (h!2189 (toList!782 (ite c!18322 call!11100 call!11088)))) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun e!69288 () List!1596)

(assert (=> b!106473 (= e!69289 e!69288)))

(declare-fun call!11233 () List!1596)

(declare-fun bm!11231 () Bool)

(declare-fun c!18610 () Bool)

(assert (=> bm!11231 (= call!11233 ($colon$colon!80 e!69286 (ite c!18610 (h!2189 (toList!782 (ite c!18322 call!11100 call!11088))) (tuple2!2361 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))))

(declare-fun c!18612 () Bool)

(assert (=> bm!11231 (= c!18612 c!18610)))

(declare-fun b!106474 () Bool)

(assert (=> b!106474 (= e!69288 call!11235)))

(declare-fun b!106475 () Bool)

(assert (=> b!106475 (= e!69288 call!11235)))

(declare-fun b!106476 () Bool)

(declare-fun res!52928 () Bool)

(declare-fun e!69287 () Bool)

(assert (=> b!106476 (=> (not res!52928) (not e!69287))))

(declare-fun lt!54532 () List!1596)

(assert (=> b!106476 (= res!52928 (containsKey!160 lt!54532 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!106477 () Bool)

(assert (=> b!106477 (= e!69287 (contains!816 lt!54532 (tuple2!2361 (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun b!106478 () Bool)

(declare-fun e!69290 () List!1596)

(assert (=> b!106478 (= e!69290 e!69289)))

(assert (=> b!106478 (= c!18611 (and ((_ is Cons!1592) (toList!782 (ite c!18322 call!11100 call!11088))) (= (_1!1191 (h!2189 (toList!782 (ite c!18322 call!11100 call!11088)))) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun d!29323 () Bool)

(assert (=> d!29323 e!69287))

(declare-fun res!52927 () Bool)

(assert (=> d!29323 (=> (not res!52927) (not e!69287))))

(assert (=> d!29323 (= res!52927 (isStrictlySorted!296 lt!54532))))

(assert (=> d!29323 (= lt!54532 e!69290)))

(assert (=> d!29323 (= c!18610 (and ((_ is Cons!1592) (toList!782 (ite c!18322 call!11100 call!11088))) (bvslt (_1!1191 (h!2189 (toList!782 (ite c!18322 call!11100 call!11088)))) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(assert (=> d!29323 (isStrictlySorted!296 (toList!782 (ite c!18322 call!11100 call!11088)))))

(assert (=> d!29323 (= (insertStrictlySorted!76 (toList!782 (ite c!18322 call!11100 call!11088)) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) lt!54532)))

(declare-fun b!106472 () Bool)

(assert (=> b!106472 (= e!69286 (insertStrictlySorted!76 (t!5671 (toList!782 (ite c!18322 call!11100 call!11088))) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (_2!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun bm!11232 () Bool)

(assert (=> bm!11232 (= call!11234 call!11233)))

(declare-fun b!106479 () Bool)

(assert (=> b!106479 (= e!69290 call!11233)))

(assert (= (and d!29323 c!18610) b!106479))

(assert (= (and d!29323 (not c!18610)) b!106478))

(assert (= (and b!106478 c!18611) b!106471))

(assert (= (and b!106478 (not c!18611)) b!106473))

(assert (= (and b!106473 c!18609) b!106475))

(assert (= (and b!106473 (not c!18609)) b!106474))

(assert (= (or b!106475 b!106474) bm!11230))

(assert (= (or b!106471 bm!11230) bm!11232))

(assert (= (or b!106479 bm!11232) bm!11231))

(assert (= (and bm!11231 c!18612) b!106472))

(assert (= (and bm!11231 (not c!18612)) b!106470))

(assert (= (and d!29323 res!52927) b!106476))

(assert (= (and b!106476 res!52928) b!106477))

(declare-fun m!119145 () Bool)

(assert (=> bm!11231 m!119145))

(declare-fun m!119147 () Bool)

(assert (=> d!29323 m!119147))

(declare-fun m!119149 () Bool)

(assert (=> d!29323 m!119149))

(declare-fun m!119151 () Bool)

(assert (=> b!106477 m!119151))

(declare-fun m!119153 () Bool)

(assert (=> b!106476 m!119153))

(declare-fun m!119155 () Bool)

(assert (=> b!106472 m!119155))

(assert (=> d!28995 d!29323))

(declare-fun bm!11233 () Bool)

(declare-fun call!11238 () List!1596)

(declare-fun call!11237 () List!1596)

(assert (=> bm!11233 (= call!11238 call!11237)))

(declare-fun e!69291 () List!1596)

(declare-fun c!18615 () Bool)

(declare-fun b!106480 () Bool)

(declare-fun c!18613 () Bool)

(assert (=> b!106480 (= e!69291 (ite c!18615 (t!5671 (t!5671 (toList!782 (+!139 lt!53714 lt!53713)))) (ite c!18613 (Cons!1592 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53713)))) (t!5671 (t!5671 (toList!782 (+!139 lt!53714 lt!53713))))) Nil!1593)))))

(declare-fun b!106481 () Bool)

(declare-fun e!69294 () List!1596)

(assert (=> b!106481 (= e!69294 call!11237)))

(declare-fun b!106483 () Bool)

(assert (=> b!106483 (= c!18613 (and ((_ is Cons!1592) (t!5671 (toList!782 (+!139 lt!53714 lt!53713)))) (bvsgt (_1!1191 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53713))))) (_1!1191 lt!53718))))))

(declare-fun e!69293 () List!1596)

(assert (=> b!106483 (= e!69294 e!69293)))

(declare-fun call!11236 () List!1596)

(declare-fun c!18614 () Bool)

(declare-fun bm!11234 () Bool)

(assert (=> bm!11234 (= call!11236 ($colon$colon!80 e!69291 (ite c!18614 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53713)))) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718)))))))

(declare-fun c!18616 () Bool)

(assert (=> bm!11234 (= c!18616 c!18614)))

(declare-fun b!106484 () Bool)

(assert (=> b!106484 (= e!69293 call!11238)))

(declare-fun b!106485 () Bool)

(assert (=> b!106485 (= e!69293 call!11238)))

(declare-fun b!106486 () Bool)

(declare-fun res!52930 () Bool)

(declare-fun e!69292 () Bool)

(assert (=> b!106486 (=> (not res!52930) (not e!69292))))

(declare-fun lt!54533 () List!1596)

(assert (=> b!106486 (= res!52930 (containsKey!160 lt!54533 (_1!1191 lt!53718)))))

(declare-fun b!106487 () Bool)

(assert (=> b!106487 (= e!69292 (contains!816 lt!54533 (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun b!106488 () Bool)

(declare-fun e!69295 () List!1596)

(assert (=> b!106488 (= e!69295 e!69294)))

(assert (=> b!106488 (= c!18615 (and ((_ is Cons!1592) (t!5671 (toList!782 (+!139 lt!53714 lt!53713)))) (= (_1!1191 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53713))))) (_1!1191 lt!53718))))))

(declare-fun d!29325 () Bool)

(assert (=> d!29325 e!69292))

(declare-fun res!52929 () Bool)

(assert (=> d!29325 (=> (not res!52929) (not e!69292))))

(assert (=> d!29325 (= res!52929 (isStrictlySorted!296 lt!54533))))

(assert (=> d!29325 (= lt!54533 e!69295)))

(assert (=> d!29325 (= c!18614 (and ((_ is Cons!1592) (t!5671 (toList!782 (+!139 lt!53714 lt!53713)))) (bvslt (_1!1191 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53713))))) (_1!1191 lt!53718))))))

(assert (=> d!29325 (isStrictlySorted!296 (t!5671 (toList!782 (+!139 lt!53714 lt!53713))))))

(assert (=> d!29325 (= (insertStrictlySorted!76 (t!5671 (toList!782 (+!139 lt!53714 lt!53713))) (_1!1191 lt!53718) (_2!1191 lt!53718)) lt!54533)))

(declare-fun b!106482 () Bool)

(assert (=> b!106482 (= e!69291 (insertStrictlySorted!76 (t!5671 (t!5671 (toList!782 (+!139 lt!53714 lt!53713)))) (_1!1191 lt!53718) (_2!1191 lt!53718)))))

(declare-fun bm!11235 () Bool)

(assert (=> bm!11235 (= call!11237 call!11236)))

(declare-fun b!106489 () Bool)

(assert (=> b!106489 (= e!69295 call!11236)))

(assert (= (and d!29325 c!18614) b!106489))

(assert (= (and d!29325 (not c!18614)) b!106488))

(assert (= (and b!106488 c!18615) b!106481))

(assert (= (and b!106488 (not c!18615)) b!106483))

(assert (= (and b!106483 c!18613) b!106485))

(assert (= (and b!106483 (not c!18613)) b!106484))

(assert (= (or b!106485 b!106484) bm!11233))

(assert (= (or b!106481 bm!11233) bm!11235))

(assert (= (or b!106489 bm!11235) bm!11234))

(assert (= (and bm!11234 c!18616) b!106482))

(assert (= (and bm!11234 (not c!18616)) b!106480))

(assert (= (and d!29325 res!52929) b!106486))

(assert (= (and b!106486 res!52930) b!106487))

(declare-fun m!119157 () Bool)

(assert (=> bm!11234 m!119157))

(declare-fun m!119159 () Bool)

(assert (=> d!29325 m!119159))

(declare-fun m!119161 () Bool)

(assert (=> d!29325 m!119161))

(declare-fun m!119163 () Bool)

(assert (=> b!106487 m!119163))

(declare-fun m!119165 () Bool)

(assert (=> b!106486 m!119165))

(declare-fun m!119167 () Bool)

(assert (=> b!106482 m!119167))

(assert (=> b!105867 d!29325))

(declare-fun b!106490 () Bool)

(declare-fun e!69296 () Option!163)

(assert (=> b!106490 (= e!69296 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54259)))))))

(declare-fun c!18617 () Bool)

(declare-fun d!29327 () Bool)

(assert (=> d!29327 (= c!18617 (and ((_ is Cons!1592) (toList!782 lt!54259)) (= (_1!1191 (h!2189 (toList!782 lt!54259))) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(assert (=> d!29327 (= (getValueByKey!157 (toList!782 lt!54259) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))) e!69296)))

(declare-fun b!106492 () Bool)

(declare-fun e!69297 () Option!163)

(assert (=> b!106492 (= e!69297 (getValueByKey!157 (t!5671 (toList!782 lt!54259)) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!106491 () Bool)

(assert (=> b!106491 (= e!69296 e!69297)))

(declare-fun c!18618 () Bool)

(assert (=> b!106491 (= c!18618 (and ((_ is Cons!1592) (toList!782 lt!54259)) (not (= (_1!1191 (h!2189 (toList!782 lt!54259))) (_1!1191 (ite c!18322 (ite c!18318 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53719) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))))

(declare-fun b!106493 () Bool)

(assert (=> b!106493 (= e!69297 None!161)))

(assert (= (and d!29327 c!18617) b!106490))

(assert (= (and d!29327 (not c!18617)) b!106491))

(assert (= (and b!106491 c!18618) b!106492))

(assert (= (and b!106491 (not c!18618)) b!106493))

(declare-fun m!119169 () Bool)

(assert (=> b!106492 m!119169))

(assert (=> b!106002 d!29327))

(declare-fun d!29329 () Bool)

(assert (=> d!29329 (isDefined!109 (getValueByKey!157 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!54534 () Unit!3212)

(assert (=> d!29329 (= lt!54534 (choose!669 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!69298 () Bool)

(assert (=> d!29329 e!69298))

(declare-fun res!52931 () Bool)

(assert (=> d!29329 (=> (not res!52931) (not e!69298))))

(assert (=> d!29329 (= res!52931 (isStrictlySorted!296 (toList!782 lt!53948)))))

(assert (=> d!29329 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54534)))

(declare-fun b!106494 () Bool)

(assert (=> b!106494 (= e!69298 (containsKey!160 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29329 res!52931) b!106494))

(assert (=> d!29329 m!117491))

(assert (=> d!29329 m!117831))

(assert (=> d!29329 m!117831))

(assert (=> d!29329 m!118263))

(assert (=> d!29329 m!117491))

(declare-fun m!119171 () Bool)

(assert (=> d!29329 m!119171))

(assert (=> d!29329 m!118489))

(assert (=> b!106494 m!117491))

(assert (=> b!106494 m!118259))

(assert (=> b!105971 d!29329))

(assert (=> b!105971 d!29247))

(assert (=> b!105971 d!29249))

(declare-fun d!29331 () Bool)

(declare-fun e!69299 () Bool)

(assert (=> d!29331 e!69299))

(declare-fun res!52932 () Bool)

(assert (=> d!29331 (=> res!52932 e!69299)))

(declare-fun lt!54536 () Bool)

(assert (=> d!29331 (= res!52932 (not lt!54536))))

(declare-fun lt!54537 () Bool)

(assert (=> d!29331 (= lt!54536 lt!54537)))

(declare-fun lt!54538 () Unit!3212)

(declare-fun e!69300 () Unit!3212)

(assert (=> d!29331 (= lt!54538 e!69300)))

(declare-fun c!18619 () Bool)

(assert (=> d!29331 (= c!18619 lt!54537)))

(assert (=> d!29331 (= lt!54537 (containsKey!160 (toList!782 lt!54065) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29331 (= (contains!814 lt!54065 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54536)))

(declare-fun b!106495 () Bool)

(declare-fun lt!54535 () Unit!3212)

(assert (=> b!106495 (= e!69300 lt!54535)))

(assert (=> b!106495 (= lt!54535 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54065) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106495 (isDefined!109 (getValueByKey!157 (toList!782 lt!54065) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106496 () Bool)

(declare-fun Unit!3256 () Unit!3212)

(assert (=> b!106496 (= e!69300 Unit!3256)))

(declare-fun b!106497 () Bool)

(assert (=> b!106497 (= e!69299 (isDefined!109 (getValueByKey!157 (toList!782 lt!54065) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29331 c!18619) b!106495))

(assert (= (and d!29331 (not c!18619)) b!106496))

(assert (= (and d!29331 (not res!52932)) b!106497))

(declare-fun m!119173 () Bool)

(assert (=> d!29331 m!119173))

(declare-fun m!119175 () Bool)

(assert (=> b!106495 m!119175))

(assert (=> b!106495 m!117791))

(assert (=> b!106495 m!117791))

(declare-fun m!119177 () Bool)

(assert (=> b!106495 m!119177))

(assert (=> b!106497 m!117791))

(assert (=> b!106497 m!117791))

(assert (=> b!106497 m!119177))

(assert (=> d!28841 d!29331))

(declare-fun b!106498 () Bool)

(declare-fun e!69301 () Option!163)

(assert (=> b!106498 (= e!69301 (Some!162 (_2!1191 (h!2189 lt!54064))))))

(declare-fun d!29333 () Bool)

(declare-fun c!18620 () Bool)

(assert (=> d!29333 (= c!18620 (and ((_ is Cons!1592) lt!54064) (= (_1!1191 (h!2189 lt!54064)) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29333 (= (getValueByKey!157 lt!54064 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69301)))

(declare-fun b!106500 () Bool)

(declare-fun e!69302 () Option!163)

(assert (=> b!106500 (= e!69302 (getValueByKey!157 (t!5671 lt!54064) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106499 () Bool)

(assert (=> b!106499 (= e!69301 e!69302)))

(declare-fun c!18621 () Bool)

(assert (=> b!106499 (= c!18621 (and ((_ is Cons!1592) lt!54064) (not (= (_1!1191 (h!2189 lt!54064)) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106501 () Bool)

(assert (=> b!106501 (= e!69302 None!161)))

(assert (= (and d!29333 c!18620) b!106498))

(assert (= (and d!29333 (not c!18620)) b!106499))

(assert (= (and b!106499 c!18621) b!106500))

(assert (= (and b!106499 (not c!18621)) b!106501))

(declare-fun m!119179 () Bool)

(assert (=> b!106500 m!119179))

(assert (=> d!28841 d!29333))

(declare-fun d!29335 () Bool)

(assert (=> d!29335 (= (getValueByKey!157 lt!54064 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54539 () Unit!3212)

(assert (=> d!29335 (= lt!54539 (choose!662 lt!54064 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69303 () Bool)

(assert (=> d!29335 e!69303))

(declare-fun res!52933 () Bool)

(assert (=> d!29335 (=> (not res!52933) (not e!69303))))

(assert (=> d!29335 (= res!52933 (isStrictlySorted!296 lt!54064))))

(assert (=> d!29335 (= (lemmaContainsTupThenGetReturnValue!73 lt!54064 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54539)))

(declare-fun b!106502 () Bool)

(declare-fun res!52934 () Bool)

(assert (=> b!106502 (=> (not res!52934) (not e!69303))))

(assert (=> b!106502 (= res!52934 (containsKey!160 lt!54064 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106503 () Bool)

(assert (=> b!106503 (= e!69303 (contains!816 lt!54064 (tuple2!2361 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29335 res!52933) b!106502))

(assert (= (and b!106502 res!52934) b!106503))

(assert (=> d!29335 m!117785))

(declare-fun m!119181 () Bool)

(assert (=> d!29335 m!119181))

(declare-fun m!119183 () Bool)

(assert (=> d!29335 m!119183))

(declare-fun m!119185 () Bool)

(assert (=> b!106502 m!119185))

(declare-fun m!119187 () Bool)

(assert (=> b!106503 m!119187))

(assert (=> d!28841 d!29335))

(declare-fun bm!11236 () Bool)

(declare-fun call!11241 () List!1596)

(declare-fun call!11240 () List!1596)

(assert (=> bm!11236 (= call!11241 call!11240)))

(declare-fun b!106504 () Bool)

(declare-fun c!18622 () Bool)

(declare-fun c!18624 () Bool)

(declare-fun e!69304 () List!1596)

(assert (=> b!106504 (= e!69304 (ite c!18624 (t!5671 (toList!782 call!11125)) (ite c!18622 (Cons!1592 (h!2189 (toList!782 call!11125)) (t!5671 (toList!782 call!11125))) Nil!1593)))))

(declare-fun b!106505 () Bool)

(declare-fun e!69307 () List!1596)

(assert (=> b!106505 (= e!69307 call!11240)))

(declare-fun b!106507 () Bool)

(assert (=> b!106507 (= c!18622 (and ((_ is Cons!1592) (toList!782 call!11125)) (bvsgt (_1!1191 (h!2189 (toList!782 call!11125))) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun e!69306 () List!1596)

(assert (=> b!106507 (= e!69307 e!69306)))

(declare-fun c!18623 () Bool)

(declare-fun bm!11237 () Bool)

(declare-fun call!11239 () List!1596)

(assert (=> bm!11237 (= call!11239 ($colon$colon!80 e!69304 (ite c!18623 (h!2189 (toList!782 call!11125)) (tuple2!2361 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18625 () Bool)

(assert (=> bm!11237 (= c!18625 c!18623)))

(declare-fun b!106508 () Bool)

(assert (=> b!106508 (= e!69306 call!11241)))

(declare-fun b!106509 () Bool)

(assert (=> b!106509 (= e!69306 call!11241)))

(declare-fun b!106510 () Bool)

(declare-fun res!52936 () Bool)

(declare-fun e!69305 () Bool)

(assert (=> b!106510 (=> (not res!52936) (not e!69305))))

(declare-fun lt!54540 () List!1596)

(assert (=> b!106510 (= res!52936 (containsKey!160 lt!54540 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106511 () Bool)

(assert (=> b!106511 (= e!69305 (contains!816 lt!54540 (tuple2!2361 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106512 () Bool)

(declare-fun e!69308 () List!1596)

(assert (=> b!106512 (= e!69308 e!69307)))

(assert (=> b!106512 (= c!18624 (and ((_ is Cons!1592) (toList!782 call!11125)) (= (_1!1191 (h!2189 (toList!782 call!11125))) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun d!29337 () Bool)

(assert (=> d!29337 e!69305))

(declare-fun res!52935 () Bool)

(assert (=> d!29337 (=> (not res!52935) (not e!69305))))

(assert (=> d!29337 (= res!52935 (isStrictlySorted!296 lt!54540))))

(assert (=> d!29337 (= lt!54540 e!69308)))

(assert (=> d!29337 (= c!18623 (and ((_ is Cons!1592) (toList!782 call!11125)) (bvslt (_1!1191 (h!2189 (toList!782 call!11125))) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29337 (isStrictlySorted!296 (toList!782 call!11125))))

(assert (=> d!29337 (= (insertStrictlySorted!76 (toList!782 call!11125) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54540)))

(declare-fun b!106506 () Bool)

(assert (=> b!106506 (= e!69304 (insertStrictlySorted!76 (t!5671 (toList!782 call!11125)) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun bm!11238 () Bool)

(assert (=> bm!11238 (= call!11240 call!11239)))

(declare-fun b!106513 () Bool)

(assert (=> b!106513 (= e!69308 call!11239)))

(assert (= (and d!29337 c!18623) b!106513))

(assert (= (and d!29337 (not c!18623)) b!106512))

(assert (= (and b!106512 c!18624) b!106505))

(assert (= (and b!106512 (not c!18624)) b!106507))

(assert (= (and b!106507 c!18622) b!106509))

(assert (= (and b!106507 (not c!18622)) b!106508))

(assert (= (or b!106509 b!106508) bm!11236))

(assert (= (or b!106505 bm!11236) bm!11238))

(assert (= (or b!106513 bm!11238) bm!11237))

(assert (= (and bm!11237 c!18625) b!106506))

(assert (= (and bm!11237 (not c!18625)) b!106504))

(assert (= (and d!29337 res!52935) b!106510))

(assert (= (and b!106510 res!52936) b!106511))

(declare-fun m!119189 () Bool)

(assert (=> bm!11237 m!119189))

(declare-fun m!119191 () Bool)

(assert (=> d!29337 m!119191))

(declare-fun m!119193 () Bool)

(assert (=> d!29337 m!119193))

(declare-fun m!119195 () Bool)

(assert (=> b!106511 m!119195))

(declare-fun m!119197 () Bool)

(assert (=> b!106510 m!119197))

(declare-fun m!119199 () Bool)

(assert (=> b!106506 m!119199))

(assert (=> d!28841 d!29337))

(declare-fun d!29339 () Bool)

(declare-fun e!69309 () Bool)

(assert (=> d!29339 e!69309))

(declare-fun res!52937 () Bool)

(assert (=> d!29339 (=> res!52937 e!69309)))

(declare-fun lt!54542 () Bool)

(assert (=> d!29339 (= res!52937 (not lt!54542))))

(declare-fun lt!54543 () Bool)

(assert (=> d!29339 (= lt!54542 lt!54543)))

(declare-fun lt!54544 () Unit!3212)

(declare-fun e!69310 () Unit!3212)

(assert (=> d!29339 (= lt!54544 e!69310)))

(declare-fun c!18626 () Bool)

(assert (=> d!29339 (= c!18626 lt!54543)))

(assert (=> d!29339 (= lt!54543 (containsKey!160 (toList!782 lt!54251) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29339 (= (contains!814 lt!54251 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54542)))

(declare-fun b!106514 () Bool)

(declare-fun lt!54541 () Unit!3212)

(assert (=> b!106514 (= e!69310 lt!54541)))

(assert (=> b!106514 (= lt!54541 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54251) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106514 (isDefined!109 (getValueByKey!157 (toList!782 lt!54251) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106515 () Bool)

(declare-fun Unit!3257 () Unit!3212)

(assert (=> b!106515 (= e!69310 Unit!3257)))

(declare-fun b!106516 () Bool)

(assert (=> b!106516 (= e!69309 (isDefined!109 (getValueByKey!157 (toList!782 lt!54251) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29339 c!18626) b!106514))

(assert (= (and d!29339 (not c!18626)) b!106515))

(assert (= (and d!29339 (not res!52937)) b!106516))

(declare-fun m!119201 () Bool)

(assert (=> d!29339 m!119201))

(declare-fun m!119203 () Bool)

(assert (=> b!106514 m!119203))

(assert (=> b!106514 m!118495))

(assert (=> b!106514 m!118495))

(declare-fun m!119205 () Bool)

(assert (=> b!106514 m!119205))

(assert (=> b!106516 m!118495))

(assert (=> b!106516 m!118495))

(assert (=> b!106516 m!119205))

(assert (=> bm!11183 d!29339))

(declare-fun d!29341 () Bool)

(assert (=> d!29341 (= (get!1338 (getValueByKey!157 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2898 (getValueByKey!157 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28853 d!29341))

(assert (=> d!28853 d!29249))

(declare-fun d!29343 () Bool)

(declare-fun lt!54545 () Bool)

(assert (=> d!29343 (= lt!54545 (select (content!111 lt!54077) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun e!69311 () Bool)

(assert (=> d!29343 (= lt!54545 e!69311)))

(declare-fun res!52938 () Bool)

(assert (=> d!29343 (=> (not res!52938) (not e!69311))))

(assert (=> d!29343 (= res!52938 ((_ is Cons!1592) lt!54077))))

(assert (=> d!29343 (= (contains!816 lt!54077 (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))) lt!54545)))

(declare-fun b!106517 () Bool)

(declare-fun e!69312 () Bool)

(assert (=> b!106517 (= e!69311 e!69312)))

(declare-fun res!52939 () Bool)

(assert (=> b!106517 (=> res!52939 e!69312)))

(assert (=> b!106517 (= res!52939 (= (h!2189 lt!54077) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun b!106518 () Bool)

(assert (=> b!106518 (= e!69312 (contains!816 (t!5671 lt!54077) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(assert (= (and d!29343 res!52938) b!106517))

(assert (= (and b!106517 (not res!52939)) b!106518))

(declare-fun m!119207 () Bool)

(assert (=> d!29343 m!119207))

(declare-fun m!119209 () Bool)

(assert (=> d!29343 m!119209))

(declare-fun m!119211 () Bool)

(assert (=> b!106518 m!119211))

(assert (=> b!105718 d!29343))

(declare-fun d!29345 () Bool)

(declare-fun e!69313 () Bool)

(assert (=> d!29345 e!69313))

(declare-fun res!52940 () Bool)

(assert (=> d!29345 (=> res!52940 e!69313)))

(declare-fun lt!54547 () Bool)

(assert (=> d!29345 (= res!52940 (not lt!54547))))

(declare-fun lt!54548 () Bool)

(assert (=> d!29345 (= lt!54547 lt!54548)))

(declare-fun lt!54549 () Unit!3212)

(declare-fun e!69314 () Unit!3212)

(assert (=> d!29345 (= lt!54549 e!69314)))

(declare-fun c!18627 () Bool)

(assert (=> d!29345 (= c!18627 lt!54548)))

(assert (=> d!29345 (= lt!54548 (containsKey!160 (toList!782 lt!54030) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29345 (= (contains!814 lt!54030 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) lt!54547)))

(declare-fun b!106519 () Bool)

(declare-fun lt!54546 () Unit!3212)

(assert (=> b!106519 (= e!69314 lt!54546)))

(assert (=> b!106519 (= lt!54546 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54030) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106519 (isDefined!109 (getValueByKey!157 (toList!782 lt!54030) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106520 () Bool)

(declare-fun Unit!3258 () Unit!3212)

(assert (=> b!106520 (= e!69314 Unit!3258)))

(declare-fun b!106521 () Bool)

(assert (=> b!106521 (= e!69313 (isDefined!109 (getValueByKey!157 (toList!782 lt!54030) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29345 c!18627) b!106519))

(assert (= (and d!29345 (not c!18627)) b!106520))

(assert (= (and d!29345 (not res!52940)) b!106521))

(assert (=> d!29345 m!117657))

(declare-fun m!119213 () Bool)

(assert (=> d!29345 m!119213))

(assert (=> b!106519 m!117657))

(declare-fun m!119215 () Bool)

(assert (=> b!106519 m!119215))

(assert (=> b!106519 m!117657))

(declare-fun m!119217 () Bool)

(assert (=> b!106519 m!119217))

(assert (=> b!106519 m!119217))

(declare-fun m!119219 () Bool)

(assert (=> b!106519 m!119219))

(assert (=> b!106521 m!117657))

(assert (=> b!106521 m!119217))

(assert (=> b!106521 m!119217))

(assert (=> b!106521 m!119219))

(assert (=> b!105632 d!29345))

(declare-fun b!106522 () Bool)

(declare-fun e!69316 () (_ BitVec 32))

(declare-fun call!11242 () (_ BitVec 32))

(assert (=> b!106522 (= e!69316 (bvadd #b00000000000000000000000000000001 call!11242))))

(declare-fun b!106523 () Bool)

(assert (=> b!106523 (= e!69316 call!11242)))

(declare-fun d!29347 () Bool)

(declare-fun lt!54550 () (_ BitVec 32))

(assert (=> d!29347 (and (bvsge lt!54550 #b00000000000000000000000000000000) (bvsle lt!54550 (bvsub (size!2309 (_keys!4287 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!69315 () (_ BitVec 32))

(assert (=> d!29347 (= lt!54550 e!69315)))

(declare-fun c!18629 () Bool)

(assert (=> d!29347 (= c!18629 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29347 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2309 (_keys!4287 newMap!16)) (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29347 (= (arrayCountValidKeys!0 (_keys!4287 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))) lt!54550)))

(declare-fun b!106524 () Bool)

(assert (=> b!106524 (= e!69315 #b00000000000000000000000000000000)))

(declare-fun b!106525 () Bool)

(assert (=> b!106525 (= e!69315 e!69316)))

(declare-fun c!18628 () Bool)

(assert (=> b!106525 (= c!18628 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11239 () Bool)

(assert (=> bm!11239 (= call!11242 (arrayCountValidKeys!0 (_keys!4287 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!29347 c!18629) b!106524))

(assert (= (and d!29347 (not c!18629)) b!106525))

(assert (= (and b!106525 c!18628) b!106522))

(assert (= (and b!106525 (not c!18628)) b!106523))

(assert (= (or b!106522 b!106523) bm!11239))

(assert (=> b!106525 m!118863))

(assert (=> b!106525 m!118863))

(assert (=> b!106525 m!118875))

(declare-fun m!119221 () Bool)

(assert (=> bm!11239 m!119221))

(assert (=> bm!11180 d!29347))

(declare-fun d!29349 () Bool)

(assert (=> d!29349 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53966) (_1!1191 lt!53713))) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53966) (_1!1191 lt!53713)))))))

(declare-fun bs!4388 () Bool)

(assert (= bs!4388 d!29349))

(assert (=> bs!4388 m!117567))

(declare-fun m!119223 () Bool)

(assert (=> bs!4388 m!119223))

(assert (=> b!105672 d!29349))

(assert (=> b!105672 d!28917))

(declare-fun d!29351 () Bool)

(assert (=> d!29351 (= (isDefined!109 (getValueByKey!157 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873)))) (not (isEmpty!377 (getValueByKey!157 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))))

(declare-fun bs!4389 () Bool)

(assert (= bs!4389 d!29351))

(assert (=> bs!4389 m!117843))

(declare-fun m!119225 () Bool)

(assert (=> bs!4389 m!119225))

(assert (=> b!105730 d!29351))

(declare-fun b!106526 () Bool)

(declare-fun e!69317 () Option!163)

(assert (=> b!106526 (= e!69317 (Some!162 (_2!1191 (h!2189 (toList!782 call!11107)))))))

(declare-fun c!18630 () Bool)

(declare-fun d!29353 () Bool)

(assert (=> d!29353 (= c!18630 (and ((_ is Cons!1592) (toList!782 call!11107)) (= (_1!1191 (h!2189 (toList!782 call!11107))) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873)))))))

(assert (=> d!29353 (= (getValueByKey!157 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))) e!69317)))

(declare-fun b!106528 () Bool)

(declare-fun e!69318 () Option!163)

(assert (=> b!106528 (= e!69318 (getValueByKey!157 (t!5671 (toList!782 call!11107)) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(declare-fun b!106527 () Bool)

(assert (=> b!106527 (= e!69317 e!69318)))

(declare-fun c!18631 () Bool)

(assert (=> b!106527 (= c!18631 (and ((_ is Cons!1592) (toList!782 call!11107)) (not (= (_1!1191 (h!2189 (toList!782 call!11107))) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))))

(declare-fun b!106529 () Bool)

(assert (=> b!106529 (= e!69318 None!161)))

(assert (= (and d!29353 c!18630) b!106526))

(assert (= (and d!29353 (not c!18630)) b!106527))

(assert (= (and b!106527 c!18631) b!106528))

(assert (= (and b!106527 (not c!18631)) b!106529))

(assert (=> b!106528 m!117461))

(declare-fun m!119227 () Bool)

(assert (=> b!106528 m!119227))

(assert (=> b!105730 d!29353))

(declare-fun d!29355 () Bool)

(declare-fun lt!54551 () Bool)

(assert (=> d!29355 (= lt!54551 (select (content!111 (toList!782 lt!54105)) (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69319 () Bool)

(assert (=> d!29355 (= lt!54551 e!69319)))

(declare-fun res!52941 () Bool)

(assert (=> d!29355 (=> (not res!52941) (not e!69319))))

(assert (=> d!29355 (= res!52941 ((_ is Cons!1592) (toList!782 lt!54105)))))

(assert (=> d!29355 (= (contains!816 (toList!782 lt!54105) (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54551)))

(declare-fun b!106530 () Bool)

(declare-fun e!69320 () Bool)

(assert (=> b!106530 (= e!69319 e!69320)))

(declare-fun res!52942 () Bool)

(assert (=> b!106530 (=> res!52942 e!69320)))

(assert (=> b!106530 (= res!52942 (= (h!2189 (toList!782 lt!54105)) (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106531 () Bool)

(assert (=> b!106531 (= e!69320 (contains!816 (t!5671 (toList!782 lt!54105)) (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29355 res!52941) b!106530))

(assert (= (and b!106530 (not res!52942)) b!106531))

(declare-fun m!119229 () Bool)

(assert (=> d!29355 m!119229))

(declare-fun m!119231 () Bool)

(assert (=> d!29355 m!119231))

(declare-fun m!119233 () Bool)

(assert (=> b!106531 m!119233))

(assert (=> b!105764 d!29355))

(assert (=> b!105628 d!29135))

(declare-fun d!29357 () Bool)

(assert (=> d!29357 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53974) (_1!1191 lt!53713))) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53974) (_1!1191 lt!53713)))))))

(declare-fun bs!4390 () Bool)

(assert (= bs!4390 d!29357))

(assert (=> bs!4390 m!117591))

(declare-fun m!119235 () Bool)

(assert (=> bs!4390 m!119235))

(assert (=> b!105877 d!29357))

(assert (=> b!105877 d!28937))

(assert (=> b!105654 d!29135))

(declare-fun d!29359 () Bool)

(assert (=> d!29359 (contains!814 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))

(declare-fun lt!54554 () Unit!3212)

(declare-fun choose!672 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) (_ BitVec 32) Int) Unit!3212)

(assert (=> d!29359 (= lt!54554 (choose!672 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(assert (=> d!29359 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29359 (= (lemmaArrayContainsKeyThenInListMap!30 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54554)))

(declare-fun bs!4391 () Bool)

(assert (= bs!4391 d!29359))

(assert (=> bs!4391 m!117451))

(assert (=> bs!4391 m!117451))

(assert (=> bs!4391 m!117261))

(assert (=> bs!4391 m!118403))

(assert (=> bs!4391 m!117261))

(declare-fun m!119237 () Bool)

(assert (=> bs!4391 m!119237))

(assert (=> bs!4391 m!117661))

(assert (=> b!106066 d!29359))

(declare-fun d!29361 () Bool)

(declare-fun e!69321 () Bool)

(assert (=> d!29361 e!69321))

(declare-fun res!52943 () Bool)

(assert (=> d!29361 (=> res!52943 e!69321)))

(declare-fun lt!54556 () Bool)

(assert (=> d!29361 (= res!52943 (not lt!54556))))

(declare-fun lt!54557 () Bool)

(assert (=> d!29361 (= lt!54556 lt!54557)))

(declare-fun lt!54558 () Unit!3212)

(declare-fun e!69322 () Unit!3212)

(assert (=> d!29361 (= lt!54558 e!69322)))

(declare-fun c!18632 () Bool)

(assert (=> d!29361 (= c!18632 lt!54557)))

(assert (=> d!29361 (= lt!54557 (containsKey!160 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29361 (= (contains!814 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54556)))

(declare-fun b!106532 () Bool)

(declare-fun lt!54555 () Unit!3212)

(assert (=> b!106532 (= e!69322 lt!54555)))

(assert (=> b!106532 (= lt!54555 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!106532 (isDefined!109 (getValueByKey!157 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!106533 () Bool)

(declare-fun Unit!3259 () Unit!3212)

(assert (=> b!106533 (= e!69322 Unit!3259)))

(declare-fun b!106534 () Bool)

(assert (=> b!106534 (= e!69321 (isDefined!109 (getValueByKey!157 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (= (and d!29361 c!18632) b!106532))

(assert (= (and d!29361 (not c!18632)) b!106533))

(assert (= (and d!29361 (not res!52943)) b!106534))

(assert (=> d!29361 m!117261))

(declare-fun m!119239 () Bool)

(assert (=> d!29361 m!119239))

(assert (=> b!106532 m!117261))

(declare-fun m!119241 () Bool)

(assert (=> b!106532 m!119241))

(assert (=> b!106532 m!117261))

(declare-fun m!119243 () Bool)

(assert (=> b!106532 m!119243))

(assert (=> b!106532 m!119243))

(declare-fun m!119245 () Bool)

(assert (=> b!106532 m!119245))

(assert (=> b!106534 m!117261))

(assert (=> b!106534 m!119243))

(assert (=> b!106534 m!119243))

(assert (=> b!106534 m!119245))

(assert (=> b!106066 d!29361))

(assert (=> b!106066 d!28933))

(declare-fun d!29363 () Bool)

(assert (=> d!29363 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53999) (_1!1191 lt!53718))) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53999) (_1!1191 lt!53718)))))))

(declare-fun bs!4392 () Bool)

(assert (= bs!4392 d!29363))

(assert (=> bs!4392 m!117623))

(declare-fun m!119247 () Bool)

(assert (=> bs!4392 m!119247))

(assert (=> b!105801 d!29363))

(assert (=> b!105801 d!28869))

(declare-fun d!29365 () Bool)

(declare-fun lt!54559 () Bool)

(assert (=> d!29365 (= lt!54559 (select (content!111 (toList!782 lt!54065)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69323 () Bool)

(assert (=> d!29365 (= lt!54559 e!69323)))

(declare-fun res!52944 () Bool)

(assert (=> d!29365 (=> (not res!52944) (not e!69323))))

(assert (=> d!29365 (= res!52944 ((_ is Cons!1592) (toList!782 lt!54065)))))

(assert (=> d!29365 (= (contains!816 (toList!782 lt!54065) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54559)))

(declare-fun b!106535 () Bool)

(declare-fun e!69324 () Bool)

(assert (=> b!106535 (= e!69323 e!69324)))

(declare-fun res!52945 () Bool)

(assert (=> b!106535 (=> res!52945 e!69324)))

(assert (=> b!106535 (= res!52945 (= (h!2189 (toList!782 lt!54065)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106536 () Bool)

(assert (=> b!106536 (= e!69324 (contains!816 (t!5671 (toList!782 lt!54065)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29365 res!52944) b!106535))

(assert (= (and b!106535 (not res!52945)) b!106536))

(declare-fun m!119249 () Bool)

(assert (=> d!29365 m!119249))

(declare-fun m!119251 () Bool)

(assert (=> d!29365 m!119251))

(declare-fun m!119253 () Bool)

(assert (=> b!106536 m!119253))

(assert (=> b!105669 d!29365))

(declare-fun d!29367 () Bool)

(declare-fun res!52946 () Bool)

(declare-fun e!69325 () Bool)

(assert (=> d!29367 (=> res!52946 e!69325)))

(assert (=> d!29367 (= res!52946 (and ((_ is Cons!1592) (toList!782 lt!53948)) (= (_1!1191 (h!2189 (toList!782 lt!53948))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29367 (= (containsKey!160 (toList!782 lt!53948) #b0000000000000000000000000000000000000000000000000000000000000000) e!69325)))

(declare-fun b!106537 () Bool)

(declare-fun e!69326 () Bool)

(assert (=> b!106537 (= e!69325 e!69326)))

(declare-fun res!52947 () Bool)

(assert (=> b!106537 (=> (not res!52947) (not e!69326))))

(assert (=> b!106537 (= res!52947 (and (or (not ((_ is Cons!1592) (toList!782 lt!53948))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53948))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1592) (toList!782 lt!53948)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53948))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106538 () Bool)

(assert (=> b!106538 (= e!69326 (containsKey!160 (t!5671 (toList!782 lt!53948)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29367 (not res!52946)) b!106537))

(assert (= (and b!106537 res!52947) b!106538))

(declare-fun m!119255 () Bool)

(assert (=> b!106538 m!119255))

(assert (=> d!28969 d!29367))

(declare-fun b!106539 () Bool)

(declare-fun e!69328 () (_ BitVec 32))

(declare-fun call!11243 () (_ BitVec 32))

(assert (=> b!106539 (= e!69328 (bvadd #b00000000000000000000000000000001 call!11243))))

(declare-fun b!106540 () Bool)

(assert (=> b!106540 (= e!69328 call!11243)))

(declare-fun d!29369 () Bool)

(declare-fun lt!54560 () (_ BitVec 32))

(assert (=> d!29369 (and (bvsge lt!54560 #b00000000000000000000000000000000) (bvsle lt!54560 (bvsub (size!2309 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000)))))

(declare-fun e!69327 () (_ BitVec 32))

(assert (=> d!29369 (= lt!54560 e!69327)))

(declare-fun c!18634 () Bool)

(assert (=> d!29369 (= c!18634 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))))))

(assert (=> d!29369 (and (bvsle #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2309 (_keys!4287 (_2!1192 lt!53868))) (size!2309 (_keys!4287 (_2!1192 lt!53868)))))))

(assert (=> d!29369 (= (arrayCountValidKeys!0 (_keys!4287 (_2!1192 lt!53868)) #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))) lt!54560)))

(declare-fun b!106541 () Bool)

(assert (=> b!106541 (= e!69327 #b00000000000000000000000000000000)))

(declare-fun b!106542 () Bool)

(assert (=> b!106542 (= e!69327 e!69328)))

(declare-fun c!18633 () Bool)

(assert (=> b!106542 (= c!18633 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000)))))

(declare-fun bm!11240 () Bool)

(assert (=> bm!11240 (= call!11243 (arrayCountValidKeys!0 (_keys!4287 (_2!1192 lt!53868)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 (_2!1192 lt!53868)))))))

(assert (= (and d!29369 c!18634) b!106541))

(assert (= (and d!29369 (not c!18634)) b!106542))

(assert (= (and b!106542 c!18633) b!106539))

(assert (= (and b!106542 (not c!18633)) b!106540))

(assert (= (or b!106539 b!106540) bm!11240))

(assert (=> b!106542 m!118743))

(assert (=> b!106542 m!118743))

(assert (=> b!106542 m!118747))

(declare-fun m!119257 () Bool)

(assert (=> bm!11240 m!119257))

(assert (=> b!105657 d!29369))

(declare-fun d!29371 () Bool)

(declare-fun res!52948 () Bool)

(declare-fun e!69329 () Bool)

(assert (=> d!29371 (=> res!52948 e!69329)))

(assert (=> d!29371 (= res!52948 (and ((_ is Cons!1592) lt!53973) (= (_1!1191 (h!2189 lt!53973)) (_1!1191 lt!53713))))))

(assert (=> d!29371 (= (containsKey!160 lt!53973 (_1!1191 lt!53713)) e!69329)))

(declare-fun b!106543 () Bool)

(declare-fun e!69330 () Bool)

(assert (=> b!106543 (= e!69329 e!69330)))

(declare-fun res!52949 () Bool)

(assert (=> b!106543 (=> (not res!52949) (not e!69330))))

(assert (=> b!106543 (= res!52949 (and (or (not ((_ is Cons!1592) lt!53973)) (bvsle (_1!1191 (h!2189 lt!53973)) (_1!1191 lt!53713))) ((_ is Cons!1592) lt!53973) (bvslt (_1!1191 (h!2189 lt!53973)) (_1!1191 lt!53713))))))

(declare-fun b!106544 () Bool)

(assert (=> b!106544 (= e!69330 (containsKey!160 (t!5671 lt!53973) (_1!1191 lt!53713)))))

(assert (= (and d!29371 (not res!52948)) b!106543))

(assert (= (and b!106543 res!52949) b!106544))

(declare-fun m!119259 () Bool)

(assert (=> b!106544 m!119259))

(assert (=> b!105882 d!29371))

(declare-fun d!29373 () Bool)

(declare-fun e!69331 () Bool)

(assert (=> d!29373 e!69331))

(declare-fun res!52950 () Bool)

(assert (=> d!29373 (=> (not res!52950) (not e!69331))))

(declare-fun lt!54562 () ListLongMap!1533)

(assert (=> d!29373 (= res!52950 (contains!814 lt!54562 (_1!1191 (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(declare-fun lt!54561 () List!1596)

(assert (=> d!29373 (= lt!54562 (ListLongMap!1534 lt!54561))))

(declare-fun lt!54564 () Unit!3212)

(declare-fun lt!54563 () Unit!3212)

(assert (=> d!29373 (= lt!54564 lt!54563)))

(assert (=> d!29373 (= (getValueByKey!157 lt!54561 (_1!1191 (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))) (Some!162 (_2!1191 (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29373 (= lt!54563 (lemmaContainsTupThenGetReturnValue!73 lt!54561 (_1!1191 (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (_2!1191 (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29373 (= lt!54561 (insertStrictlySorted!76 (toList!782 (ite c!18476 call!11187 (ite c!18472 call!11189 call!11186))) (_1!1191 (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (_2!1191 (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29373 (= (+!139 (ite c!18476 call!11187 (ite c!18472 call!11189 call!11186)) (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) lt!54562)))

(declare-fun b!106545 () Bool)

(declare-fun res!52951 () Bool)

(assert (=> b!106545 (=> (not res!52951) (not e!69331))))

(assert (=> b!106545 (= res!52951 (= (getValueByKey!157 (toList!782 lt!54562) (_1!1191 (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))) (Some!162 (_2!1191 (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))))

(declare-fun b!106546 () Bool)

(assert (=> b!106546 (= e!69331 (contains!816 (toList!782 lt!54562) (ite (or c!18476 c!18472) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (= (and d!29373 res!52950) b!106545))

(assert (= (and b!106545 res!52951) b!106546))

(declare-fun m!119261 () Bool)

(assert (=> d!29373 m!119261))

(declare-fun m!119263 () Bool)

(assert (=> d!29373 m!119263))

(declare-fun m!119265 () Bool)

(assert (=> d!29373 m!119265))

(declare-fun m!119267 () Bool)

(assert (=> d!29373 m!119267))

(declare-fun m!119269 () Bool)

(assert (=> b!106545 m!119269))

(declare-fun m!119271 () Bool)

(assert (=> b!106546 m!119271))

(assert (=> bm!11187 d!29373))

(declare-fun d!29375 () Bool)

(declare-fun e!69332 () Bool)

(assert (=> d!29375 e!69332))

(declare-fun res!52952 () Bool)

(assert (=> d!29375 (=> res!52952 e!69332)))

(declare-fun lt!54566 () Bool)

(assert (=> d!29375 (= res!52952 (not lt!54566))))

(declare-fun lt!54567 () Bool)

(assert (=> d!29375 (= lt!54566 lt!54567)))

(declare-fun lt!54568 () Unit!3212)

(declare-fun e!69333 () Unit!3212)

(assert (=> d!29375 (= lt!54568 e!69333)))

(declare-fun c!18635 () Bool)

(assert (=> d!29375 (= c!18635 lt!54567)))

(assert (=> d!29375 (= lt!54567 (containsKey!160 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(assert (=> d!29375 (= (contains!814 (getCurrentListMap!469 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))) lt!54566)))

(declare-fun b!106547 () Bool)

(declare-fun lt!54565 () Unit!3212)

(assert (=> b!106547 (= e!69333 lt!54565)))

(assert (=> b!106547 (= lt!54565 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(assert (=> b!106547 (isDefined!109 (getValueByKey!157 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(declare-fun b!106548 () Bool)

(declare-fun Unit!3260 () Unit!3212)

(assert (=> b!106548 (= e!69333 Unit!3260)))

(declare-fun b!106549 () Bool)

(assert (=> b!106549 (= e!69332 (isDefined!109 (getValueByKey!157 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873)))))))

(assert (= (and d!29375 c!18635) b!106547))

(assert (= (and d!29375 (not c!18635)) b!106548))

(assert (= (and d!29375 (not res!52952)) b!106549))

(assert (=> d!29375 m!117461))

(declare-fun m!119273 () Bool)

(assert (=> d!29375 m!119273))

(assert (=> b!106547 m!117461))

(declare-fun m!119275 () Bool)

(assert (=> b!106547 m!119275))

(assert (=> b!106547 m!117461))

(declare-fun m!119277 () Bool)

(assert (=> b!106547 m!119277))

(assert (=> b!106547 m!119277))

(declare-fun m!119279 () Bool)

(assert (=> b!106547 m!119279))

(assert (=> b!106549 m!117461))

(assert (=> b!106549 m!119277))

(assert (=> b!106549 m!119277))

(assert (=> b!106549 m!119279))

(assert (=> b!105733 d!29375))

(declare-fun b!106550 () Bool)

(declare-fun e!69337 () Bool)

(declare-fun lt!54585 () ListLongMap!1533)

(assert (=> b!106550 (= e!69337 (= (apply!98 lt!54585 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!106551 () Bool)

(declare-fun e!69346 () Bool)

(assert (=> b!106551 (= e!69346 e!69337)))

(declare-fun res!52953 () Bool)

(declare-fun call!11247 () Bool)

(assert (=> b!106551 (= res!52953 call!11247)))

(assert (=> b!106551 (=> (not res!52953) (not e!69337))))

(declare-fun b!106552 () Bool)

(declare-fun e!69340 () ListLongMap!1533)

(declare-fun call!11249 () ListLongMap!1533)

(assert (=> b!106552 (= e!69340 call!11249)))

(declare-fun b!106553 () Bool)

(declare-fun res!52957 () Bool)

(declare-fun e!69342 () Bool)

(assert (=> b!106553 (=> (not res!52957) (not e!69342))))

(declare-fun e!69336 () Bool)

(assert (=> b!106553 (= res!52957 e!69336)))

(declare-fun res!52960 () Bool)

(assert (=> b!106553 (=> res!52960 e!69336)))

(declare-fun e!69345 () Bool)

(assert (=> b!106553 (= res!52960 (not e!69345))))

(declare-fun res!52954 () Bool)

(assert (=> b!106553 (=> (not res!52954) (not e!69345))))

(assert (=> b!106553 (= res!52954 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106554 () Bool)

(declare-fun e!69341 () Bool)

(declare-fun e!69338 () Bool)

(assert (=> b!106554 (= e!69341 e!69338)))

(declare-fun res!52961 () Bool)

(declare-fun call!11250 () Bool)

(assert (=> b!106554 (= res!52961 call!11250)))

(assert (=> b!106554 (=> (not res!52961) (not e!69338))))

(declare-fun b!106556 () Bool)

(declare-fun res!52958 () Bool)

(assert (=> b!106556 (=> (not res!52958) (not e!69342))))

(assert (=> b!106556 (= res!52958 e!69341)))

(declare-fun c!18637 () Bool)

(assert (=> b!106556 (= c!18637 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69343 () Bool)

(declare-fun b!106557 () Bool)

(assert (=> b!106557 (= e!69343 (= (apply!98 lt!54585 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 lt!53882) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106557 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 lt!53882)))))

(assert (=> b!106557 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106558 () Bool)

(declare-fun call!11245 () ListLongMap!1533)

(assert (=> b!106558 (= e!69340 call!11245)))

(declare-fun b!106559 () Bool)

(declare-fun e!69334 () Unit!3212)

(declare-fun Unit!3261 () Unit!3212)

(assert (=> b!106559 (= e!69334 Unit!3261)))

(declare-fun b!106560 () Bool)

(assert (=> b!106560 (= e!69346 (not call!11247))))

(declare-fun b!106561 () Bool)

(assert (=> b!106561 (= e!69341 (not call!11250))))

(declare-fun b!106562 () Bool)

(declare-fun e!69344 () ListLongMap!1533)

(declare-fun e!69335 () ListLongMap!1533)

(assert (=> b!106562 (= e!69344 e!69335)))

(declare-fun c!18636 () Bool)

(assert (=> b!106562 (= c!18636 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11241 () Bool)

(declare-fun call!11248 () ListLongMap!1533)

(declare-fun call!11246 () ListLongMap!1533)

(assert (=> bm!11241 (= call!11248 call!11246)))

(declare-fun bm!11242 () Bool)

(assert (=> bm!11242 (= call!11250 (contains!814 lt!54585 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106563 () Bool)

(assert (=> b!106563 (= e!69342 e!69346)))

(declare-fun c!18641 () Bool)

(assert (=> b!106563 (= c!18641 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!29377 () Bool)

(assert (=> d!29377 e!69342))

(declare-fun res!52955 () Bool)

(assert (=> d!29377 (=> (not res!52955) (not e!69342))))

(assert (=> d!29377 (= res!52955 (or (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))))

(declare-fun lt!54575 () ListLongMap!1533)

(assert (=> d!29377 (= lt!54585 lt!54575)))

(declare-fun lt!54577 () Unit!3212)

(assert (=> d!29377 (= lt!54577 e!69334)))

(declare-fun c!18639 () Bool)

(declare-fun e!69339 () Bool)

(assert (=> d!29377 (= c!18639 e!69339)))

(declare-fun res!52959 () Bool)

(assert (=> d!29377 (=> (not res!52959) (not e!69339))))

(assert (=> d!29377 (= res!52959 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29377 (= lt!54575 e!69344)))

(declare-fun c!18640 () Bool)

(assert (=> d!29377 (= c!18640 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29377 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29377 (= (getCurrentListMap!469 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54585)))

(declare-fun b!106555 () Bool)

(declare-fun call!11244 () ListLongMap!1533)

(assert (=> b!106555 (= e!69344 (+!139 call!11244 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun bm!11243 () Bool)

(assert (=> bm!11243 (= call!11247 (contains!814 lt!54585 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106564 () Bool)

(assert (=> b!106564 (= e!69338 (= (apply!98 lt!54585 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!106565 () Bool)

(assert (=> b!106565 (= e!69335 call!11249)))

(declare-fun b!106566 () Bool)

(assert (=> b!106566 (= e!69345 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11244 () Bool)

(assert (=> bm!11244 (= call!11245 call!11248)))

(declare-fun bm!11245 () Bool)

(assert (=> bm!11245 (= call!11249 call!11244)))

(declare-fun b!106567 () Bool)

(declare-fun c!18638 () Bool)

(assert (=> b!106567 (= c!18638 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106567 (= e!69335 e!69340)))

(declare-fun bm!11246 () Bool)

(assert (=> bm!11246 (= call!11244 (+!139 (ite c!18640 call!11246 (ite c!18636 call!11248 call!11245)) (ite (or c!18640 c!18636) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun b!106568 () Bool)

(declare-fun lt!54583 () Unit!3212)

(assert (=> b!106568 (= e!69334 lt!54583)))

(declare-fun lt!54570 () ListLongMap!1533)

(assert (=> b!106568 (= lt!54570 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54584 () (_ BitVec 64))

(assert (=> b!106568 (= lt!54584 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54571 () (_ BitVec 64))

(assert (=> b!106568 (= lt!54571 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54589 () Unit!3212)

(assert (=> b!106568 (= lt!54589 (addStillContains!74 lt!54570 lt!54584 (zeroValue!2456 newMap!16) lt!54571))))

(assert (=> b!106568 (contains!814 (+!139 lt!54570 (tuple2!2361 lt!54584 (zeroValue!2456 newMap!16))) lt!54571)))

(declare-fun lt!54582 () Unit!3212)

(assert (=> b!106568 (= lt!54582 lt!54589)))

(declare-fun lt!54578 () ListLongMap!1533)

(assert (=> b!106568 (= lt!54578 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54569 () (_ BitVec 64))

(assert (=> b!106568 (= lt!54569 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54579 () (_ BitVec 64))

(assert (=> b!106568 (= lt!54579 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54586 () Unit!3212)

(assert (=> b!106568 (= lt!54586 (addApplyDifferent!74 lt!54578 lt!54569 (minValue!2456 newMap!16) lt!54579))))

(assert (=> b!106568 (= (apply!98 (+!139 lt!54578 (tuple2!2361 lt!54569 (minValue!2456 newMap!16))) lt!54579) (apply!98 lt!54578 lt!54579))))

(declare-fun lt!54573 () Unit!3212)

(assert (=> b!106568 (= lt!54573 lt!54586)))

(declare-fun lt!54581 () ListLongMap!1533)

(assert (=> b!106568 (= lt!54581 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54590 () (_ BitVec 64))

(assert (=> b!106568 (= lt!54590 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54576 () (_ BitVec 64))

(assert (=> b!106568 (= lt!54576 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54572 () Unit!3212)

(assert (=> b!106568 (= lt!54572 (addApplyDifferent!74 lt!54581 lt!54590 (zeroValue!2456 newMap!16) lt!54576))))

(assert (=> b!106568 (= (apply!98 (+!139 lt!54581 (tuple2!2361 lt!54590 (zeroValue!2456 newMap!16))) lt!54576) (apply!98 lt!54581 lt!54576))))

(declare-fun lt!54587 () Unit!3212)

(assert (=> b!106568 (= lt!54587 lt!54572)))

(declare-fun lt!54580 () ListLongMap!1533)

(assert (=> b!106568 (= lt!54580 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54574 () (_ BitVec 64))

(assert (=> b!106568 (= lt!54574 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54588 () (_ BitVec 64))

(assert (=> b!106568 (= lt!54588 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106568 (= lt!54583 (addApplyDifferent!74 lt!54580 lt!54574 (minValue!2456 newMap!16) lt!54588))))

(assert (=> b!106568 (= (apply!98 (+!139 lt!54580 (tuple2!2361 lt!54574 (minValue!2456 newMap!16))) lt!54588) (apply!98 lt!54580 lt!54588))))

(declare-fun b!106569 () Bool)

(assert (=> b!106569 (= e!69339 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11247 () Bool)

(assert (=> bm!11247 (= call!11246 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) lt!53882 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!106570 () Bool)

(assert (=> b!106570 (= e!69336 e!69343)))

(declare-fun res!52956 () Bool)

(assert (=> b!106570 (=> (not res!52956) (not e!69343))))

(assert (=> b!106570 (= res!52956 (contains!814 lt!54585 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106570 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!29377 c!18640) b!106555))

(assert (= (and d!29377 (not c!18640)) b!106562))

(assert (= (and b!106562 c!18636) b!106565))

(assert (= (and b!106562 (not c!18636)) b!106567))

(assert (= (and b!106567 c!18638) b!106552))

(assert (= (and b!106567 (not c!18638)) b!106558))

(assert (= (or b!106552 b!106558) bm!11244))

(assert (= (or b!106565 bm!11244) bm!11241))

(assert (= (or b!106565 b!106552) bm!11245))

(assert (= (or b!106555 bm!11241) bm!11247))

(assert (= (or b!106555 bm!11245) bm!11246))

(assert (= (and d!29377 res!52959) b!106569))

(assert (= (and d!29377 c!18639) b!106568))

(assert (= (and d!29377 (not c!18639)) b!106559))

(assert (= (and d!29377 res!52955) b!106553))

(assert (= (and b!106553 res!52954) b!106566))

(assert (= (and b!106553 (not res!52960)) b!106570))

(assert (= (and b!106570 res!52956) b!106557))

(assert (= (and b!106553 res!52957) b!106556))

(assert (= (and b!106556 c!18637) b!106554))

(assert (= (and b!106556 (not c!18637)) b!106561))

(assert (= (and b!106554 res!52961) b!106564))

(assert (= (or b!106554 b!106561) bm!11242))

(assert (= (and b!106556 res!52958) b!106563))

(assert (= (and b!106563 c!18641) b!106551))

(assert (= (and b!106563 (not c!18641)) b!106560))

(assert (= (and b!106551 res!52953) b!106550))

(assert (= (or b!106551 b!106560) bm!11243))

(declare-fun b_lambda!4765 () Bool)

(assert (=> (not b_lambda!4765) (not b!106557)))

(assert (=> b!106557 t!5683))

(declare-fun b_and!6573 () Bool)

(assert (= b_and!6569 (and (=> t!5683 result!3459) b_and!6573)))

(assert (=> b!106557 t!5685))

(declare-fun b_and!6575 () Bool)

(assert (= b_and!6571 (and (=> t!5685 result!3461) b_and!6575)))

(declare-fun m!119281 () Bool)

(assert (=> b!106557 m!119281))

(assert (=> b!106557 m!117653))

(declare-fun m!119283 () Bool)

(assert (=> b!106557 m!119283))

(assert (=> b!106557 m!119281))

(assert (=> b!106557 m!117653))

(assert (=> b!106557 m!117657))

(declare-fun m!119285 () Bool)

(assert (=> b!106557 m!119285))

(assert (=> b!106557 m!117657))

(assert (=> d!29377 m!117661))

(assert (=> b!106566 m!117657))

(assert (=> b!106566 m!117657))

(assert (=> b!106566 m!117663))

(declare-fun m!119287 () Bool)

(assert (=> bm!11246 m!119287))

(declare-fun m!119289 () Bool)

(assert (=> bm!11247 m!119289))

(assert (=> b!106569 m!117657))

(assert (=> b!106569 m!117657))

(assert (=> b!106569 m!117663))

(declare-fun m!119291 () Bool)

(assert (=> b!106564 m!119291))

(declare-fun m!119293 () Bool)

(assert (=> bm!11242 m!119293))

(declare-fun m!119295 () Bool)

(assert (=> b!106568 m!119295))

(declare-fun m!119297 () Bool)

(assert (=> b!106568 m!119297))

(declare-fun m!119299 () Bool)

(assert (=> b!106568 m!119299))

(declare-fun m!119301 () Bool)

(assert (=> b!106568 m!119301))

(assert (=> b!106568 m!119289))

(declare-fun m!119303 () Bool)

(assert (=> b!106568 m!119303))

(declare-fun m!119305 () Bool)

(assert (=> b!106568 m!119305))

(declare-fun m!119307 () Bool)

(assert (=> b!106568 m!119307))

(declare-fun m!119309 () Bool)

(assert (=> b!106568 m!119309))

(assert (=> b!106568 m!119305))

(assert (=> b!106568 m!119309))

(declare-fun m!119311 () Bool)

(assert (=> b!106568 m!119311))

(declare-fun m!119313 () Bool)

(assert (=> b!106568 m!119313))

(declare-fun m!119315 () Bool)

(assert (=> b!106568 m!119315))

(assert (=> b!106568 m!117657))

(declare-fun m!119317 () Bool)

(assert (=> b!106568 m!119317))

(declare-fun m!119319 () Bool)

(assert (=> b!106568 m!119319))

(assert (=> b!106568 m!119303))

(declare-fun m!119321 () Bool)

(assert (=> b!106568 m!119321))

(assert (=> b!106568 m!119297))

(declare-fun m!119323 () Bool)

(assert (=> b!106568 m!119323))

(assert (=> b!106570 m!117657))

(assert (=> b!106570 m!117657))

(declare-fun m!119325 () Bool)

(assert (=> b!106570 m!119325))

(declare-fun m!119327 () Bool)

(assert (=> b!106555 m!119327))

(declare-fun m!119329 () Bool)

(assert (=> b!106550 m!119329))

(declare-fun m!119331 () Bool)

(assert (=> bm!11243 m!119331))

(assert (=> b!105733 d!29377))

(assert (=> b!105970 d!29135))

(declare-fun b!106571 () Bool)

(declare-fun e!69347 () Option!163)

(assert (=> b!106571 (= e!69347 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54110)))))))

(declare-fun d!29379 () Bool)

(declare-fun c!18642 () Bool)

(assert (=> d!29379 (= c!18642 (and ((_ is Cons!1592) (toList!782 lt!54110)) (= (_1!1191 (h!2189 (toList!782 lt!54110))) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29379 (= (getValueByKey!157 (toList!782 lt!54110) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69347)))

(declare-fun b!106573 () Bool)

(declare-fun e!69348 () Option!163)

(assert (=> b!106573 (= e!69348 (getValueByKey!157 (t!5671 (toList!782 lt!54110)) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106572 () Bool)

(assert (=> b!106572 (= e!69347 e!69348)))

(declare-fun c!18643 () Bool)

(assert (=> b!106572 (= c!18643 (and ((_ is Cons!1592) (toList!782 lt!54110)) (not (= (_1!1191 (h!2189 (toList!782 lt!54110))) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106574 () Bool)

(assert (=> b!106574 (= e!69348 None!161)))

(assert (= (and d!29379 c!18642) b!106571))

(assert (= (and d!29379 (not c!18642)) b!106572))

(assert (= (and b!106572 c!18643) b!106573))

(assert (= (and b!106572 (not c!18643)) b!106574))

(declare-fun m!119333 () Bool)

(assert (=> b!106573 m!119333))

(assert (=> b!105766 d!29379))

(declare-fun d!29381 () Bool)

(declare-fun lt!54591 () Bool)

(assert (=> d!29381 (= lt!54591 (select (content!111 (toList!782 lt!54137)) (tuple2!2361 lt!53996 lt!53995)))))

(declare-fun e!69349 () Bool)

(assert (=> d!29381 (= lt!54591 e!69349)))

(declare-fun res!52962 () Bool)

(assert (=> d!29381 (=> (not res!52962) (not e!69349))))

(assert (=> d!29381 (= res!52962 ((_ is Cons!1592) (toList!782 lt!54137)))))

(assert (=> d!29381 (= (contains!816 (toList!782 lt!54137) (tuple2!2361 lt!53996 lt!53995)) lt!54591)))

(declare-fun b!106575 () Bool)

(declare-fun e!69350 () Bool)

(assert (=> b!106575 (= e!69349 e!69350)))

(declare-fun res!52963 () Bool)

(assert (=> b!106575 (=> res!52963 e!69350)))

(assert (=> b!106575 (= res!52963 (= (h!2189 (toList!782 lt!54137)) (tuple2!2361 lt!53996 lt!53995)))))

(declare-fun b!106576 () Bool)

(assert (=> b!106576 (= e!69350 (contains!816 (t!5671 (toList!782 lt!54137)) (tuple2!2361 lt!53996 lt!53995)))))

(assert (= (and d!29381 res!52962) b!106575))

(assert (= (and b!106575 (not res!52963)) b!106576))

(declare-fun m!119335 () Bool)

(assert (=> d!29381 m!119335))

(declare-fun m!119337 () Bool)

(assert (=> d!29381 m!119337))

(declare-fun m!119339 () Bool)

(assert (=> b!106576 m!119339))

(assert (=> b!105785 d!29381))

(declare-fun d!29383 () Bool)

(declare-fun e!69351 () Bool)

(assert (=> d!29383 e!69351))

(declare-fun res!52964 () Bool)

(assert (=> d!29383 (=> res!52964 e!69351)))

(declare-fun lt!54593 () Bool)

(assert (=> d!29383 (= res!52964 (not lt!54593))))

(declare-fun lt!54594 () Bool)

(assert (=> d!29383 (= lt!54593 lt!54594)))

(declare-fun lt!54595 () Unit!3212)

(declare-fun e!69352 () Unit!3212)

(assert (=> d!29383 (= lt!54595 e!69352)))

(declare-fun c!18644 () Bool)

(assert (=> d!29383 (= c!18644 lt!54594)))

(assert (=> d!29383 (= lt!54594 (containsKey!160 (toList!782 lt!54095) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!29383 (= (contains!814 lt!54095 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!54593)))

(declare-fun b!106577 () Bool)

(declare-fun lt!54592 () Unit!3212)

(assert (=> b!106577 (= e!69352 lt!54592)))

(assert (=> b!106577 (= lt!54592 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54095) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!106577 (isDefined!109 (getValueByKey!157 (toList!782 lt!54095) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!106578 () Bool)

(declare-fun Unit!3262 () Unit!3212)

(assert (=> b!106578 (= e!69352 Unit!3262)))

(declare-fun b!106579 () Bool)

(assert (=> b!106579 (= e!69351 (isDefined!109 (getValueByKey!157 (toList!782 lt!54095) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!29383 c!18644) b!106577))

(assert (= (and d!29383 (not c!18644)) b!106578))

(assert (= (and d!29383 (not res!52964)) b!106579))

(assert (=> d!29383 m!117867))

(declare-fun m!119341 () Bool)

(assert (=> d!29383 m!119341))

(assert (=> b!106577 m!117867))

(declare-fun m!119343 () Bool)

(assert (=> b!106577 m!119343))

(assert (=> b!106577 m!117867))

(declare-fun m!119345 () Bool)

(assert (=> b!106577 m!119345))

(assert (=> b!106577 m!119345))

(declare-fun m!119347 () Bool)

(assert (=> b!106577 m!119347))

(assert (=> b!106579 m!117867))

(assert (=> b!106579 m!119345))

(assert (=> b!106579 m!119345))

(assert (=> b!106579 m!119347))

(assert (=> b!105748 d!29383))

(assert (=> b!105846 d!29135))

(declare-fun d!29385 () Bool)

(assert (=> d!29385 (isDefined!109 (getValueByKey!157 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun lt!54596 () Unit!3212)

(assert (=> d!29385 (= lt!54596 (choose!669 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!69353 () Bool)

(assert (=> d!29385 e!69353))

(declare-fun res!52965 () Bool)

(assert (=> d!29385 (=> (not res!52965) (not e!69353))))

(assert (=> d!29385 (= res!52965 (isStrictlySorted!296 (toList!782 call!11106)))))

(assert (=> d!29385 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54596)))

(declare-fun b!106580 () Bool)

(assert (=> b!106580 (= e!69353 (containsKey!160 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29385 res!52965) b!106580))

(assert (=> d!29385 m!117261))

(assert (=> d!29385 m!118201))

(assert (=> d!29385 m!118201))

(assert (=> d!29385 m!118203))

(assert (=> d!29385 m!117261))

(declare-fun m!119349 () Bool)

(assert (=> d!29385 m!119349))

(declare-fun m!119351 () Bool)

(assert (=> d!29385 m!119351))

(assert (=> b!106580 m!117261))

(assert (=> b!106580 m!118197))

(assert (=> b!105899 d!29385))

(assert (=> b!105899 d!29209))

(assert (=> b!105899 d!29211))

(declare-fun d!29387 () Bool)

(assert (=> d!29387 (= (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!377 (getValueByKey!157 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4393 () Bool)

(assert (= bs!4393 d!29387))

(assert (=> bs!4393 m!118073))

(declare-fun m!119353 () Bool)

(assert (=> bs!4393 m!119353))

(assert (=> b!106076 d!29387))

(assert (=> b!106076 d!29255))

(declare-fun d!29389 () Bool)

(declare-fun res!52966 () Bool)

(declare-fun e!69354 () Bool)

(assert (=> d!29389 (=> res!52966 e!69354)))

(assert (=> d!29389 (= res!52966 (and ((_ is Cons!1592) (toList!782 lt!53948)) (= (_1!1191 (h!2189 (toList!782 lt!53948))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29389 (= (containsKey!160 (toList!782 lt!53948) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69354)))

(declare-fun b!106581 () Bool)

(declare-fun e!69355 () Bool)

(assert (=> b!106581 (= e!69354 e!69355)))

(declare-fun res!52967 () Bool)

(assert (=> b!106581 (=> (not res!52967) (not e!69355))))

(assert (=> b!106581 (= res!52967 (and (or (not ((_ is Cons!1592) (toList!782 lt!53948))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53948))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1592) (toList!782 lt!53948)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53948))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!106582 () Bool)

(assert (=> b!106582 (= e!69355 (containsKey!160 (t!5671 (toList!782 lt!53948)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29389 (not res!52966)) b!106581))

(assert (= (and b!106581 res!52967) b!106582))

(assert (=> b!106582 m!117491))

(declare-fun m!119355 () Bool)

(assert (=> b!106582 m!119355))

(assert (=> d!28981 d!29389))

(declare-fun lt!54597 () Bool)

(declare-fun d!29391 () Bool)

(assert (=> d!29391 (= lt!54597 (select (content!111 (toList!782 lt!54122)) (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69356 () Bool)

(assert (=> d!29391 (= lt!54597 e!69356)))

(declare-fun res!52968 () Bool)

(assert (=> d!29391 (=> (not res!52968) (not e!69356))))

(assert (=> d!29391 (= res!52968 ((_ is Cons!1592) (toList!782 lt!54122)))))

(assert (=> d!29391 (= (contains!816 (toList!782 lt!54122) (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54597)))

(declare-fun b!106583 () Bool)

(declare-fun e!69357 () Bool)

(assert (=> b!106583 (= e!69356 e!69357)))

(declare-fun res!52969 () Bool)

(assert (=> b!106583 (=> res!52969 e!69357)))

(assert (=> b!106583 (= res!52969 (= (h!2189 (toList!782 lt!54122)) (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106584 () Bool)

(assert (=> b!106584 (= e!69357 (contains!816 (t!5671 (toList!782 lt!54122)) (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29391 res!52968) b!106583))

(assert (= (and b!106583 (not res!52969)) b!106584))

(declare-fun m!119357 () Bool)

(assert (=> d!29391 m!119357))

(declare-fun m!119359 () Bool)

(assert (=> d!29391 m!119359))

(declare-fun m!119361 () Bool)

(assert (=> b!106584 m!119361))

(assert (=> b!105773 d!29391))

(assert (=> d!28941 d!28815))

(assert (=> d!28947 d!28945))

(declare-fun d!29393 () Bool)

(assert (=> d!29393 (= (getValueByKey!157 lt!53969 (_1!1191 lt!53718)) (Some!162 (_2!1191 lt!53718)))))

(assert (=> d!29393 true))

(declare-fun _$22!435 () Unit!3212)

(assert (=> d!29393 (= (choose!662 lt!53969 (_1!1191 lt!53718) (_2!1191 lt!53718)) _$22!435)))

(declare-fun bs!4394 () Bool)

(assert (= bs!4394 d!29393))

(assert (=> bs!4394 m!117573))

(assert (=> d!28947 d!29393))

(declare-fun d!29395 () Bool)

(declare-fun res!52970 () Bool)

(declare-fun e!69358 () Bool)

(assert (=> d!29395 (=> res!52970 e!69358)))

(assert (=> d!29395 (= res!52970 (or ((_ is Nil!1593) lt!53969) ((_ is Nil!1593) (t!5671 lt!53969))))))

(assert (=> d!29395 (= (isStrictlySorted!296 lt!53969) e!69358)))

(declare-fun b!106585 () Bool)

(declare-fun e!69359 () Bool)

(assert (=> b!106585 (= e!69358 e!69359)))

(declare-fun res!52971 () Bool)

(assert (=> b!106585 (=> (not res!52971) (not e!69359))))

(assert (=> b!106585 (= res!52971 (bvslt (_1!1191 (h!2189 lt!53969)) (_1!1191 (h!2189 (t!5671 lt!53969)))))))

(declare-fun b!106586 () Bool)

(assert (=> b!106586 (= e!69359 (isStrictlySorted!296 (t!5671 lt!53969)))))

(assert (= (and d!29395 (not res!52970)) b!106585))

(assert (= (and b!106585 res!52971) b!106586))

(declare-fun m!119363 () Bool)

(assert (=> b!106586 m!119363))

(assert (=> d!28947 d!29395))

(declare-fun d!29397 () Bool)

(declare-fun e!69360 () Bool)

(assert (=> d!29397 e!69360))

(declare-fun res!52972 () Bool)

(assert (=> d!29397 (=> res!52972 e!69360)))

(declare-fun lt!54599 () Bool)

(assert (=> d!29397 (= res!52972 (not lt!54599))))

(declare-fun lt!54600 () Bool)

(assert (=> d!29397 (= lt!54599 lt!54600)))

(declare-fun lt!54601 () Unit!3212)

(declare-fun e!69361 () Unit!3212)

(assert (=> d!29397 (= lt!54601 e!69361)))

(declare-fun c!18645 () Bool)

(assert (=> d!29397 (= c!18645 lt!54600)))

(assert (=> d!29397 (= lt!54600 (containsKey!160 (toList!782 lt!54263) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!29397 (= (contains!814 lt!54263 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54599)))

(declare-fun b!106587 () Bool)

(declare-fun lt!54598 () Unit!3212)

(assert (=> b!106587 (= e!69361 lt!54598)))

(assert (=> b!106587 (= lt!54598 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54263) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> b!106587 (isDefined!109 (getValueByKey!157 (toList!782 lt!54263) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106588 () Bool)

(declare-fun Unit!3263 () Unit!3212)

(assert (=> b!106588 (= e!69361 Unit!3263)))

(declare-fun b!106589 () Bool)

(assert (=> b!106589 (= e!69360 (isDefined!109 (getValueByKey!157 (toList!782 lt!54263) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (= (and d!29397 c!18645) b!106587))

(assert (= (and d!29397 (not c!18645)) b!106588))

(assert (= (and d!29397 (not res!52972)) b!106589))

(declare-fun m!119365 () Bool)

(assert (=> d!29397 m!119365))

(declare-fun m!119367 () Bool)

(assert (=> b!106587 m!119367))

(assert (=> b!106587 m!118359))

(assert (=> b!106587 m!118359))

(declare-fun m!119369 () Bool)

(assert (=> b!106587 m!119369))

(assert (=> b!106589 m!118359))

(assert (=> b!106589 m!118359))

(assert (=> b!106589 m!119369))

(assert (=> d!28999 d!29397))

(declare-fun b!106590 () Bool)

(declare-fun e!69362 () Option!163)

(assert (=> b!106590 (= e!69362 (Some!162 (_2!1191 (h!2189 lt!54262))))))

(declare-fun c!18646 () Bool)

(declare-fun d!29399 () Bool)

(assert (=> d!29399 (= c!18646 (and ((_ is Cons!1592) lt!54262) (= (_1!1191 (h!2189 lt!54262)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!29399 (= (getValueByKey!157 lt!54262 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) e!69362)))

(declare-fun e!69363 () Option!163)

(declare-fun b!106592 () Bool)

(assert (=> b!106592 (= e!69363 (getValueByKey!157 (t!5671 lt!54262) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106591 () Bool)

(assert (=> b!106591 (= e!69362 e!69363)))

(declare-fun c!18647 () Bool)

(assert (=> b!106591 (= c!18647 (and ((_ is Cons!1592) lt!54262) (not (= (_1!1191 (h!2189 lt!54262)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun b!106593 () Bool)

(assert (=> b!106593 (= e!69363 None!161)))

(assert (= (and d!29399 c!18646) b!106590))

(assert (= (and d!29399 (not c!18646)) b!106591))

(assert (= (and b!106591 c!18647) b!106592))

(assert (= (and b!106591 (not c!18647)) b!106593))

(declare-fun m!119371 () Bool)

(assert (=> b!106592 m!119371))

(assert (=> d!28999 d!29399))

(declare-fun d!29401 () Bool)

(assert (=> d!29401 (= (getValueByKey!157 lt!54262 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun lt!54602 () Unit!3212)

(assert (=> d!29401 (= lt!54602 (choose!662 lt!54262 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun e!69364 () Bool)

(assert (=> d!29401 e!69364))

(declare-fun res!52973 () Bool)

(assert (=> d!29401 (=> (not res!52973) (not e!69364))))

(assert (=> d!29401 (= res!52973 (isStrictlySorted!296 lt!54262))))

(assert (=> d!29401 (= (lemmaContainsTupThenGetReturnValue!73 lt!54262 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54602)))

(declare-fun b!106594 () Bool)

(declare-fun res!52974 () Bool)

(assert (=> b!106594 (=> (not res!52974) (not e!69364))))

(assert (=> b!106594 (= res!52974 (containsKey!160 lt!54262 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106595 () Bool)

(assert (=> b!106595 (= e!69364 (contains!816 lt!54262 (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (= (and d!29401 res!52973) b!106594))

(assert (= (and b!106594 res!52974) b!106595))

(assert (=> d!29401 m!118353))

(declare-fun m!119373 () Bool)

(assert (=> d!29401 m!119373))

(declare-fun m!119375 () Bool)

(assert (=> d!29401 m!119375))

(declare-fun m!119377 () Bool)

(assert (=> b!106594 m!119377))

(declare-fun m!119379 () Bool)

(assert (=> b!106595 m!119379))

(assert (=> d!28999 d!29401))

(declare-fun bm!11248 () Bool)

(declare-fun call!11253 () List!1596)

(declare-fun call!11252 () List!1596)

(assert (=> bm!11248 (= call!11253 call!11252)))

(declare-fun b!106596 () Bool)

(declare-fun c!18650 () Bool)

(declare-fun e!69365 () List!1596)

(declare-fun c!18648 () Bool)

(assert (=> b!106596 (= e!69365 (ite c!18650 (t!5671 (toList!782 call!11091)) (ite c!18648 (Cons!1592 (h!2189 (toList!782 call!11091)) (t!5671 (toList!782 call!11091))) Nil!1593)))))

(declare-fun b!106597 () Bool)

(declare-fun e!69368 () List!1596)

(assert (=> b!106597 (= e!69368 call!11252)))

(declare-fun b!106599 () Bool)

(assert (=> b!106599 (= c!18648 (and ((_ is Cons!1592) (toList!782 call!11091)) (bvsgt (_1!1191 (h!2189 (toList!782 call!11091))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun e!69367 () List!1596)

(assert (=> b!106599 (= e!69368 e!69367)))

(declare-fun c!18649 () Bool)

(declare-fun call!11251 () List!1596)

(declare-fun bm!11249 () Bool)

(assert (=> bm!11249 (= call!11251 ($colon$colon!80 e!69365 (ite c!18649 (h!2189 (toList!782 call!11091)) (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun c!18651 () Bool)

(assert (=> bm!11249 (= c!18651 c!18649)))

(declare-fun b!106600 () Bool)

(assert (=> b!106600 (= e!69367 call!11253)))

(declare-fun b!106601 () Bool)

(assert (=> b!106601 (= e!69367 call!11253)))

(declare-fun b!106602 () Bool)

(declare-fun res!52976 () Bool)

(declare-fun e!69366 () Bool)

(assert (=> b!106602 (=> (not res!52976) (not e!69366))))

(declare-fun lt!54603 () List!1596)

(assert (=> b!106602 (= res!52976 (containsKey!160 lt!54603 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106603 () Bool)

(assert (=> b!106603 (= e!69366 (contains!816 lt!54603 (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!106604 () Bool)

(declare-fun e!69369 () List!1596)

(assert (=> b!106604 (= e!69369 e!69368)))

(assert (=> b!106604 (= c!18650 (and ((_ is Cons!1592) (toList!782 call!11091)) (= (_1!1191 (h!2189 (toList!782 call!11091))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun d!29403 () Bool)

(assert (=> d!29403 e!69366))

(declare-fun res!52975 () Bool)

(assert (=> d!29403 (=> (not res!52975) (not e!69366))))

(assert (=> d!29403 (= res!52975 (isStrictlySorted!296 lt!54603))))

(assert (=> d!29403 (= lt!54603 e!69369)))

(assert (=> d!29403 (= c!18649 (and ((_ is Cons!1592) (toList!782 call!11091)) (bvslt (_1!1191 (h!2189 (toList!782 call!11091))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!29403 (isStrictlySorted!296 (toList!782 call!11091))))

(assert (=> d!29403 (= (insertStrictlySorted!76 (toList!782 call!11091) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54603)))

(declare-fun b!106598 () Bool)

(assert (=> b!106598 (= e!69365 (insertStrictlySorted!76 (t!5671 (toList!782 call!11091)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun bm!11250 () Bool)

(assert (=> bm!11250 (= call!11252 call!11251)))

(declare-fun b!106605 () Bool)

(assert (=> b!106605 (= e!69369 call!11251)))

(assert (= (and d!29403 c!18649) b!106605))

(assert (= (and d!29403 (not c!18649)) b!106604))

(assert (= (and b!106604 c!18650) b!106597))

(assert (= (and b!106604 (not c!18650)) b!106599))

(assert (= (and b!106599 c!18648) b!106601))

(assert (= (and b!106599 (not c!18648)) b!106600))

(assert (= (or b!106601 b!106600) bm!11248))

(assert (= (or b!106597 bm!11248) bm!11250))

(assert (= (or b!106605 bm!11250) bm!11249))

(assert (= (and bm!11249 c!18651) b!106598))

(assert (= (and bm!11249 (not c!18651)) b!106596))

(assert (= (and d!29403 res!52975) b!106602))

(assert (= (and b!106602 res!52976) b!106603))

(declare-fun m!119381 () Bool)

(assert (=> bm!11249 m!119381))

(declare-fun m!119383 () Bool)

(assert (=> d!29403 m!119383))

(declare-fun m!119385 () Bool)

(assert (=> d!29403 m!119385))

(declare-fun m!119387 () Bool)

(assert (=> b!106603 m!119387))

(declare-fun m!119389 () Bool)

(assert (=> b!106602 m!119389))

(declare-fun m!119391 () Bool)

(assert (=> b!106598 m!119391))

(assert (=> d!28999 d!29403))

(declare-fun d!29405 () Bool)

(declare-fun res!52977 () Bool)

(declare-fun e!69370 () Bool)

(assert (=> d!29405 (=> res!52977 e!69370)))

(assert (=> d!29405 (= res!52977 (and ((_ is Cons!1592) lt!54077) (= (_1!1191 (h!2189 lt!54077)) (_1!1191 lt!53713))))))

(assert (=> d!29405 (= (containsKey!160 lt!54077 (_1!1191 lt!53713)) e!69370)))

(declare-fun b!106606 () Bool)

(declare-fun e!69371 () Bool)

(assert (=> b!106606 (= e!69370 e!69371)))

(declare-fun res!52978 () Bool)

(assert (=> b!106606 (=> (not res!52978) (not e!69371))))

(assert (=> b!106606 (= res!52978 (and (or (not ((_ is Cons!1592) lt!54077)) (bvsle (_1!1191 (h!2189 lt!54077)) (_1!1191 lt!53713))) ((_ is Cons!1592) lt!54077) (bvslt (_1!1191 (h!2189 lt!54077)) (_1!1191 lt!53713))))))

(declare-fun b!106607 () Bool)

(assert (=> b!106607 (= e!69371 (containsKey!160 (t!5671 lt!54077) (_1!1191 lt!53713)))))

(assert (= (and d!29405 (not res!52977)) b!106606))

(assert (= (and b!106606 res!52978) b!106607))

(declare-fun m!119393 () Bool)

(assert (=> b!106607 m!119393))

(assert (=> b!105717 d!29405))

(declare-fun b!106609 () Bool)

(declare-fun e!69375 () Bool)

(assert (=> b!106609 (= e!69375 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106609 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!106610 () Bool)

(declare-fun e!69377 () ListLongMap!1533)

(declare-fun e!69373 () ListLongMap!1533)

(assert (=> b!106610 (= e!69377 e!69373)))

(declare-fun c!18652 () Bool)

(assert (=> b!106610 (= c!18652 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!54605 () ListLongMap!1533)

(declare-fun e!69376 () Bool)

(declare-fun b!106611 () Bool)

(assert (=> b!106611 (= e!69376 (= lt!54605 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) (mask!6727 newMap!16) (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16))))))

(declare-fun b!106612 () Bool)

(assert (=> b!106612 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> b!106612 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))))))))

(declare-fun e!69372 () Bool)

(assert (=> b!106612 (= e!69372 (= (apply!98 lt!54605 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106613 () Bool)

(declare-fun e!69374 () Bool)

(assert (=> b!106613 (= e!69374 e!69372)))

(assert (=> b!106613 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun res!52982 () Bool)

(assert (=> b!106613 (= res!52982 (contains!814 lt!54605 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106613 (=> (not res!52982) (not e!69372))))

(declare-fun b!106614 () Bool)

(declare-fun e!69378 () Bool)

(assert (=> b!106614 (= e!69378 e!69374)))

(declare-fun c!18655 () Bool)

(assert (=> b!106614 (= c!18655 e!69375)))

(declare-fun res!52980 () Bool)

(assert (=> b!106614 (=> (not res!52980) (not e!69375))))

(assert (=> b!106614 (= res!52980 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106615 () Bool)

(assert (=> b!106615 (= e!69376 (isEmpty!376 lt!54605))))

(declare-fun d!29407 () Bool)

(assert (=> d!29407 e!69378))

(declare-fun res!52981 () Bool)

(assert (=> d!29407 (=> (not res!52981) (not e!69378))))

(assert (=> d!29407 (= res!52981 (not (contains!814 lt!54605 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29407 (= lt!54605 e!69377)))

(declare-fun c!18654 () Bool)

(assert (=> d!29407 (= c!18654 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29407 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29407 (= (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) (mask!6727 newMap!16) (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54605)))

(declare-fun b!106608 () Bool)

(assert (=> b!106608 (= e!69377 (ListLongMap!1534 Nil!1593))))

(declare-fun b!106616 () Bool)

(assert (=> b!106616 (= e!69374 e!69376)))

(declare-fun c!18653 () Bool)

(assert (=> b!106616 (= c!18653 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106617 () Bool)

(declare-fun call!11254 () ListLongMap!1533)

(assert (=> b!106617 (= e!69373 call!11254)))

(declare-fun bm!11251 () Bool)

(assert (=> bm!11251 (= call!11254 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) (mask!6727 newMap!16) (ite c!18322 (ite c!18318 lt!53878 lt!53865) (extraKeys!2386 newMap!16)) (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16)))))

(declare-fun b!106618 () Bool)

(declare-fun res!52979 () Bool)

(assert (=> b!106618 (=> (not res!52979) (not e!69378))))

(assert (=> b!106618 (= res!52979 (not (contains!814 lt!54605 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106619 () Bool)

(declare-fun lt!54610 () Unit!3212)

(declare-fun lt!54606 () Unit!3212)

(assert (=> b!106619 (= lt!54610 lt!54606)))

(declare-fun lt!54607 () ListLongMap!1533)

(declare-fun lt!54609 () (_ BitVec 64))

(declare-fun lt!54604 () (_ BitVec 64))

(declare-fun lt!54608 () V!3217)

(assert (=> b!106619 (not (contains!814 (+!139 lt!54607 (tuple2!2361 lt!54609 lt!54608)) lt!54604))))

(assert (=> b!106619 (= lt!54606 (addStillNotContains!48 lt!54607 lt!54609 lt!54608 lt!54604))))

(assert (=> b!106619 (= lt!54604 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106619 (= lt!54608 (get!1334 (select (arr!2055 (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106619 (= lt!54609 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106619 (= lt!54607 call!11254)))

(assert (=> b!106619 (= e!69373 (+!139 call!11254 (tuple2!2361 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000) (get!1334 (select (arr!2055 (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29407 c!18654) b!106608))

(assert (= (and d!29407 (not c!18654)) b!106610))

(assert (= (and b!106610 c!18652) b!106619))

(assert (= (and b!106610 (not c!18652)) b!106617))

(assert (= (or b!106619 b!106617) bm!11251))

(assert (= (and d!29407 res!52981) b!106618))

(assert (= (and b!106618 res!52979) b!106614))

(assert (= (and b!106614 res!52980) b!106609))

(assert (= (and b!106614 c!18655) b!106613))

(assert (= (and b!106614 (not c!18655)) b!106616))

(assert (= (and b!106613 res!52982) b!106612))

(assert (= (and b!106616 c!18653) b!106611))

(assert (= (and b!106616 (not c!18653)) b!106615))

(declare-fun b_lambda!4767 () Bool)

(assert (=> (not b_lambda!4767) (not b!106612)))

(assert (=> b!106612 t!5683))

(declare-fun b_and!6577 () Bool)

(assert (= b_and!6573 (and (=> t!5683 result!3459) b_and!6577)))

(assert (=> b!106612 t!5685))

(declare-fun b_and!6579 () Bool)

(assert (= b_and!6575 (and (=> t!5685 result!3461) b_and!6579)))

(declare-fun b_lambda!4769 () Bool)

(assert (=> (not b_lambda!4769) (not b!106619)))

(assert (=> b!106619 t!5683))

(declare-fun b_and!6581 () Bool)

(assert (= b_and!6577 (and (=> t!5683 result!3459) b_and!6581)))

(assert (=> b!106619 t!5685))

(declare-fun b_and!6583 () Bool)

(assert (= b_and!6579 (and (=> t!5685 result!3461) b_and!6583)))

(declare-fun m!119395 () Bool)

(assert (=> d!29407 m!119395))

(assert (=> d!29407 m!117661))

(assert (=> b!106609 m!117657))

(assert (=> b!106609 m!117657))

(assert (=> b!106609 m!117663))

(declare-fun m!119397 () Bool)

(assert (=> b!106615 m!119397))

(declare-fun m!119399 () Bool)

(assert (=> b!106611 m!119399))

(assert (=> b!106612 m!117651))

(assert (=> b!106612 m!117653))

(assert (=> b!106612 m!117655))

(assert (=> b!106612 m!117657))

(declare-fun m!119401 () Bool)

(assert (=> b!106612 m!119401))

(assert (=> b!106612 m!117657))

(assert (=> b!106612 m!117653))

(assert (=> b!106612 m!117651))

(assert (=> bm!11251 m!119399))

(declare-fun m!119403 () Bool)

(assert (=> b!106618 m!119403))

(assert (=> b!106610 m!117657))

(assert (=> b!106610 m!117657))

(assert (=> b!106610 m!117663))

(assert (=> b!106613 m!117657))

(assert (=> b!106613 m!117657))

(declare-fun m!119405 () Bool)

(assert (=> b!106613 m!119405))

(assert (=> b!106619 m!117651))

(assert (=> b!106619 m!117653))

(assert (=> b!106619 m!117655))

(declare-fun m!119407 () Bool)

(assert (=> b!106619 m!119407))

(declare-fun m!119409 () Bool)

(assert (=> b!106619 m!119409))

(assert (=> b!106619 m!117657))

(declare-fun m!119411 () Bool)

(assert (=> b!106619 m!119411))

(assert (=> b!106619 m!117651))

(declare-fun m!119413 () Bool)

(assert (=> b!106619 m!119413))

(assert (=> b!106619 m!119407))

(assert (=> b!106619 m!117653))

(assert (=> bm!11141 d!29407))

(declare-fun b!106620 () Bool)

(declare-fun e!69379 () Option!163)

(assert (=> b!106620 (= e!69379 (Some!162 (_2!1191 (h!2189 (t!5671 lt!53973)))))))

(declare-fun d!29409 () Bool)

(declare-fun c!18656 () Bool)

(assert (=> d!29409 (= c!18656 (and ((_ is Cons!1592) (t!5671 lt!53973)) (= (_1!1191 (h!2189 (t!5671 lt!53973))) (_1!1191 lt!53713))))))

(assert (=> d!29409 (= (getValueByKey!157 (t!5671 lt!53973) (_1!1191 lt!53713)) e!69379)))

(declare-fun b!106622 () Bool)

(declare-fun e!69380 () Option!163)

(assert (=> b!106622 (= e!69380 (getValueByKey!157 (t!5671 (t!5671 lt!53973)) (_1!1191 lt!53713)))))

(declare-fun b!106621 () Bool)

(assert (=> b!106621 (= e!69379 e!69380)))

(declare-fun c!18657 () Bool)

(assert (=> b!106621 (= c!18657 (and ((_ is Cons!1592) (t!5671 lt!53973)) (not (= (_1!1191 (h!2189 (t!5671 lt!53973))) (_1!1191 lt!53713)))))))

(declare-fun b!106623 () Bool)

(assert (=> b!106623 (= e!69380 None!161)))

(assert (= (and d!29409 c!18656) b!106620))

(assert (= (and d!29409 (not c!18656)) b!106621))

(assert (= (and b!106621 c!18657) b!106622))

(assert (= (and b!106621 (not c!18657)) b!106623))

(declare-fun m!119415 () Bool)

(assert (=> b!106622 m!119415))

(assert (=> b!105880 d!29409))

(declare-fun d!29411 () Bool)

(assert (=> d!29411 (= ($colon$colon!80 e!68918 (ite c!18442 (h!2189 (toList!782 lt!53714)) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713)))) (Cons!1592 (ite c!18442 (h!2189 (toList!782 lt!53714)) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))) e!68918))))

(assert (=> bm!11170 d!29411))

(assert (=> d!28821 d!29089))

(declare-fun b!106624 () Bool)

(declare-fun e!69381 () Option!163)

(assert (=> b!106624 (= e!69381 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54105)))))))

(declare-fun c!18658 () Bool)

(declare-fun d!29413 () Bool)

(assert (=> d!29413 (= c!18658 (and ((_ is Cons!1592) (toList!782 lt!54105)) (= (_1!1191 (h!2189 (toList!782 lt!54105))) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29413 (= (getValueByKey!157 (toList!782 lt!54105) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69381)))

(declare-fun b!106626 () Bool)

(declare-fun e!69382 () Option!163)

(assert (=> b!106626 (= e!69382 (getValueByKey!157 (t!5671 (toList!782 lt!54105)) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106625 () Bool)

(assert (=> b!106625 (= e!69381 e!69382)))

(declare-fun c!18659 () Bool)

(assert (=> b!106625 (= c!18659 (and ((_ is Cons!1592) (toList!782 lt!54105)) (not (= (_1!1191 (h!2189 (toList!782 lt!54105))) (_1!1191 (tuple2!2361 lt!53932 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106627 () Bool)

(assert (=> b!106627 (= e!69382 None!161)))

(assert (= (and d!29413 c!18658) b!106624))

(assert (= (and d!29413 (not c!18658)) b!106625))

(assert (= (and b!106625 c!18659) b!106626))

(assert (= (and b!106625 (not c!18659)) b!106627))

(declare-fun m!119417 () Bool)

(assert (=> b!106626 m!119417))

(assert (=> b!105763 d!29413))

(declare-fun d!29415 () Bool)

(assert (=> d!29415 (= (apply!98 lt!54173 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1338 (getValueByKey!157 (toList!782 lt!54173) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4395 () Bool)

(assert (= bs!4395 d!29415))

(declare-fun m!119419 () Bool)

(assert (=> bs!4395 m!119419))

(assert (=> bs!4395 m!119419))

(declare-fun m!119421 () Bool)

(assert (=> bs!4395 m!119421))

(assert (=> b!105841 d!29415))

(declare-fun b!106628 () Bool)

(declare-fun e!69384 () Bool)

(declare-fun call!11255 () Bool)

(assert (=> b!106628 (= e!69384 call!11255)))

(declare-fun d!29417 () Bool)

(declare-fun res!52983 () Bool)

(declare-fun e!69385 () Bool)

(assert (=> d!29417 (=> res!52983 e!69385)))

(assert (=> d!29417 (= res!52983 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29417 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4287 newMap!16) (mask!6727 newMap!16)) e!69385)))

(declare-fun bm!11252 () Bool)

(assert (=> bm!11252 (= call!11255 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(declare-fun b!106629 () Bool)

(assert (=> b!106629 (= e!69385 e!69384)))

(declare-fun c!18660 () Bool)

(assert (=> b!106629 (= c!18660 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!106630 () Bool)

(declare-fun e!69383 () Bool)

(assert (=> b!106630 (= e!69383 call!11255)))

(declare-fun b!106631 () Bool)

(assert (=> b!106631 (= e!69384 e!69383)))

(declare-fun lt!54611 () (_ BitVec 64))

(assert (=> b!106631 (= lt!54611 (select (arr!2054 (_keys!4287 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!54613 () Unit!3212)

(assert (=> b!106631 (= lt!54613 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4287 newMap!16) lt!54611 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!106631 (arrayContainsKey!0 (_keys!4287 newMap!16) lt!54611 #b00000000000000000000000000000000)))

(declare-fun lt!54612 () Unit!3212)

(assert (=> b!106631 (= lt!54612 lt!54613)))

(declare-fun res!52984 () Bool)

(assert (=> b!106631 (= res!52984 (= (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4287 newMap!16) (mask!6727 newMap!16)) (Found!253 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!106631 (=> (not res!52984) (not e!69383))))

(assert (= (and d!29417 (not res!52983)) b!106629))

(assert (= (and b!106629 c!18660) b!106631))

(assert (= (and b!106629 (not c!18660)) b!106628))

(assert (= (and b!106631 res!52984) b!106630))

(assert (= (or b!106630 b!106628) bm!11252))

(declare-fun m!119423 () Bool)

(assert (=> bm!11252 m!119423))

(assert (=> b!106629 m!118863))

(assert (=> b!106629 m!118863))

(assert (=> b!106629 m!118875))

(assert (=> b!106631 m!118863))

(declare-fun m!119425 () Bool)

(assert (=> b!106631 m!119425))

(declare-fun m!119427 () Bool)

(assert (=> b!106631 m!119427))

(assert (=> b!106631 m!118863))

(declare-fun m!119429 () Bool)

(assert (=> b!106631 m!119429))

(assert (=> bm!11144 d!29417))

(assert (=> d!28905 d!28903))

(assert (=> d!28905 d!28907))

(declare-fun d!29419 () Bool)

(assert (=> d!29419 (not (contains!814 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)) lt!53991))))

(assert (=> d!29419 true))

(declare-fun _$36!319 () Unit!3212)

(assert (=> d!29419 (= (choose!668 lt!53994 lt!53996 lt!53995 lt!53991) _$36!319)))

(declare-fun bs!4396 () Bool)

(assert (= bs!4396 d!29419))

(assert (=> bs!4396 m!117607))

(assert (=> bs!4396 m!117607))

(assert (=> bs!4396 m!117609))

(assert (=> d!28905 d!29419))

(declare-fun d!29421 () Bool)

(declare-fun e!69386 () Bool)

(assert (=> d!29421 e!69386))

(declare-fun res!52985 () Bool)

(assert (=> d!29421 (=> res!52985 e!69386)))

(declare-fun lt!54615 () Bool)

(assert (=> d!29421 (= res!52985 (not lt!54615))))

(declare-fun lt!54616 () Bool)

(assert (=> d!29421 (= lt!54615 lt!54616)))

(declare-fun lt!54617 () Unit!3212)

(declare-fun e!69387 () Unit!3212)

(assert (=> d!29421 (= lt!54617 e!69387)))

(declare-fun c!18661 () Bool)

(assert (=> d!29421 (= c!18661 lt!54616)))

(assert (=> d!29421 (= lt!54616 (containsKey!160 (toList!782 lt!53994) lt!53991))))

(assert (=> d!29421 (= (contains!814 lt!53994 lt!53991) lt!54615)))

(declare-fun b!106633 () Bool)

(declare-fun lt!54614 () Unit!3212)

(assert (=> b!106633 (= e!69387 lt!54614)))

(assert (=> b!106633 (= lt!54614 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53994) lt!53991))))

(assert (=> b!106633 (isDefined!109 (getValueByKey!157 (toList!782 lt!53994) lt!53991))))

(declare-fun b!106634 () Bool)

(declare-fun Unit!3264 () Unit!3212)

(assert (=> b!106634 (= e!69387 Unit!3264)))

(declare-fun b!106635 () Bool)

(assert (=> b!106635 (= e!69386 (isDefined!109 (getValueByKey!157 (toList!782 lt!53994) lt!53991)))))

(assert (= (and d!29421 c!18661) b!106633))

(assert (= (and d!29421 (not c!18661)) b!106634))

(assert (= (and d!29421 (not res!52985)) b!106635))

(declare-fun m!119431 () Bool)

(assert (=> d!29421 m!119431))

(declare-fun m!119433 () Bool)

(assert (=> b!106633 m!119433))

(declare-fun m!119435 () Bool)

(assert (=> b!106633 m!119435))

(assert (=> b!106633 m!119435))

(declare-fun m!119437 () Bool)

(assert (=> b!106633 m!119437))

(assert (=> b!106635 m!119435))

(assert (=> b!106635 m!119435))

(assert (=> b!106635 m!119437))

(assert (=> d!28905 d!29421))

(declare-fun d!29423 () Bool)

(declare-fun e!69388 () Bool)

(assert (=> d!29423 e!69388))

(declare-fun res!52986 () Bool)

(assert (=> d!29423 (=> res!52986 e!69388)))

(declare-fun lt!54619 () Bool)

(assert (=> d!29423 (= res!52986 (not lt!54619))))

(declare-fun lt!54620 () Bool)

(assert (=> d!29423 (= lt!54619 lt!54620)))

(declare-fun lt!54621 () Unit!3212)

(declare-fun e!69389 () Unit!3212)

(assert (=> d!29423 (= lt!54621 e!69389)))

(declare-fun c!18662 () Bool)

(assert (=> d!29423 (= c!18662 lt!54620)))

(assert (=> d!29423 (= lt!54620 (containsKey!160 (toList!782 lt!54110) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29423 (= (contains!814 lt!54110 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54619)))

(declare-fun b!106636 () Bool)

(declare-fun lt!54618 () Unit!3212)

(assert (=> b!106636 (= e!69389 lt!54618)))

(assert (=> b!106636 (= lt!54618 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54110) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106636 (isDefined!109 (getValueByKey!157 (toList!782 lt!54110) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106637 () Bool)

(declare-fun Unit!3265 () Unit!3212)

(assert (=> b!106637 (= e!69389 Unit!3265)))

(declare-fun b!106638 () Bool)

(assert (=> b!106638 (= e!69388 (isDefined!109 (getValueByKey!157 (toList!782 lt!54110) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29423 c!18662) b!106636))

(assert (= (and d!29423 (not c!18662)) b!106637))

(assert (= (and d!29423 (not res!52986)) b!106638))

(declare-fun m!119439 () Bool)

(assert (=> d!29423 m!119439))

(declare-fun m!119441 () Bool)

(assert (=> b!106636 m!119441))

(assert (=> b!106636 m!117923))

(assert (=> b!106636 m!117923))

(declare-fun m!119443 () Bool)

(assert (=> b!106636 m!119443))

(assert (=> b!106638 m!117923))

(assert (=> b!106638 m!117923))

(assert (=> b!106638 m!119443))

(assert (=> d!28877 d!29423))

(declare-fun b!106639 () Bool)

(declare-fun e!69390 () Option!163)

(assert (=> b!106639 (= e!69390 (Some!162 (_2!1191 (h!2189 lt!54109))))))

(declare-fun c!18663 () Bool)

(declare-fun d!29425 () Bool)

(assert (=> d!29425 (= c!18663 (and ((_ is Cons!1592) lt!54109) (= (_1!1191 (h!2189 lt!54109)) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29425 (= (getValueByKey!157 lt!54109 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69390)))

(declare-fun b!106641 () Bool)

(declare-fun e!69391 () Option!163)

(assert (=> b!106641 (= e!69391 (getValueByKey!157 (t!5671 lt!54109) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106640 () Bool)

(assert (=> b!106640 (= e!69390 e!69391)))

(declare-fun c!18664 () Bool)

(assert (=> b!106640 (= c!18664 (and ((_ is Cons!1592) lt!54109) (not (= (_1!1191 (h!2189 lt!54109)) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106642 () Bool)

(assert (=> b!106642 (= e!69391 None!161)))

(assert (= (and d!29425 c!18663) b!106639))

(assert (= (and d!29425 (not c!18663)) b!106640))

(assert (= (and b!106640 c!18664) b!106641))

(assert (= (and b!106640 (not c!18664)) b!106642))

(declare-fun m!119445 () Bool)

(assert (=> b!106641 m!119445))

(assert (=> d!28877 d!29425))

(declare-fun d!29427 () Bool)

(assert (=> d!29427 (= (getValueByKey!157 lt!54109 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54622 () Unit!3212)

(assert (=> d!29427 (= lt!54622 (choose!662 lt!54109 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69392 () Bool)

(assert (=> d!29427 e!69392))

(declare-fun res!52987 () Bool)

(assert (=> d!29427 (=> (not res!52987) (not e!69392))))

(assert (=> d!29427 (= res!52987 (isStrictlySorted!296 lt!54109))))

(assert (=> d!29427 (= (lemmaContainsTupThenGetReturnValue!73 lt!54109 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54622)))

(declare-fun b!106643 () Bool)

(declare-fun res!52988 () Bool)

(assert (=> b!106643 (=> (not res!52988) (not e!69392))))

(assert (=> b!106643 (= res!52988 (containsKey!160 lt!54109 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106644 () Bool)

(assert (=> b!106644 (= e!69392 (contains!816 lt!54109 (tuple2!2361 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29427 res!52987) b!106643))

(assert (= (and b!106643 res!52988) b!106644))

(assert (=> d!29427 m!117917))

(declare-fun m!119447 () Bool)

(assert (=> d!29427 m!119447))

(declare-fun m!119449 () Bool)

(assert (=> d!29427 m!119449))

(declare-fun m!119451 () Bool)

(assert (=> b!106643 m!119451))

(declare-fun m!119453 () Bool)

(assert (=> b!106644 m!119453))

(assert (=> d!28877 d!29427))

(declare-fun bm!11253 () Bool)

(declare-fun call!11258 () List!1596)

(declare-fun call!11257 () List!1596)

(assert (=> bm!11253 (= call!11258 call!11257)))

(declare-fun b!106645 () Bool)

(declare-fun c!18667 () Bool)

(declare-fun c!18665 () Bool)

(declare-fun e!69393 () List!1596)

(assert (=> b!106645 (= e!69393 (ite c!18667 (t!5671 (toList!782 lt!53933)) (ite c!18665 (Cons!1592 (h!2189 (toList!782 lt!53933)) (t!5671 (toList!782 lt!53933))) Nil!1593)))))

(declare-fun b!106646 () Bool)

(declare-fun e!69396 () List!1596)

(assert (=> b!106646 (= e!69396 call!11257)))

(declare-fun b!106648 () Bool)

(assert (=> b!106648 (= c!18665 (and ((_ is Cons!1592) (toList!782 lt!53933)) (bvsgt (_1!1191 (h!2189 (toList!782 lt!53933))) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun e!69395 () List!1596)

(assert (=> b!106648 (= e!69396 e!69395)))

(declare-fun call!11256 () List!1596)

(declare-fun bm!11254 () Bool)

(declare-fun c!18666 () Bool)

(assert (=> bm!11254 (= call!11256 ($colon$colon!80 e!69393 (ite c!18666 (h!2189 (toList!782 lt!53933)) (tuple2!2361 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18668 () Bool)

(assert (=> bm!11254 (= c!18668 c!18666)))

(declare-fun b!106649 () Bool)

(assert (=> b!106649 (= e!69395 call!11258)))

(declare-fun b!106650 () Bool)

(assert (=> b!106650 (= e!69395 call!11258)))

(declare-fun b!106651 () Bool)

(declare-fun res!52990 () Bool)

(declare-fun e!69394 () Bool)

(assert (=> b!106651 (=> (not res!52990) (not e!69394))))

(declare-fun lt!54623 () List!1596)

(assert (=> b!106651 (= res!52990 (containsKey!160 lt!54623 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106652 () Bool)

(assert (=> b!106652 (= e!69394 (contains!816 lt!54623 (tuple2!2361 (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106653 () Bool)

(declare-fun e!69397 () List!1596)

(assert (=> b!106653 (= e!69397 e!69396)))

(assert (=> b!106653 (= c!18667 (and ((_ is Cons!1592) (toList!782 lt!53933)) (= (_1!1191 (h!2189 (toList!782 lt!53933))) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun d!29429 () Bool)

(assert (=> d!29429 e!69394))

(declare-fun res!52989 () Bool)

(assert (=> d!29429 (=> (not res!52989) (not e!69394))))

(assert (=> d!29429 (= res!52989 (isStrictlySorted!296 lt!54623))))

(assert (=> d!29429 (= lt!54623 e!69397)))

(assert (=> d!29429 (= c!18666 (and ((_ is Cons!1592) (toList!782 lt!53933)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53933))) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29429 (isStrictlySorted!296 (toList!782 lt!53933))))

(assert (=> d!29429 (= (insertStrictlySorted!76 (toList!782 lt!53933) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54623)))

(declare-fun b!106647 () Bool)

(assert (=> b!106647 (= e!69393 (insertStrictlySorted!76 (t!5671 (toList!782 lt!53933)) (_1!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun bm!11255 () Bool)

(assert (=> bm!11255 (= call!11257 call!11256)))

(declare-fun b!106654 () Bool)

(assert (=> b!106654 (= e!69397 call!11256)))

(assert (= (and d!29429 c!18666) b!106654))

(assert (= (and d!29429 (not c!18666)) b!106653))

(assert (= (and b!106653 c!18667) b!106646))

(assert (= (and b!106653 (not c!18667)) b!106648))

(assert (= (and b!106648 c!18665) b!106650))

(assert (= (and b!106648 (not c!18665)) b!106649))

(assert (= (or b!106650 b!106649) bm!11253))

(assert (= (or b!106646 bm!11253) bm!11255))

(assert (= (or b!106654 bm!11255) bm!11254))

(assert (= (and bm!11254 c!18668) b!106647))

(assert (= (and bm!11254 (not c!18668)) b!106645))

(assert (= (and d!29429 res!52989) b!106651))

(assert (= (and b!106651 res!52990) b!106652))

(declare-fun m!119455 () Bool)

(assert (=> bm!11254 m!119455))

(declare-fun m!119457 () Bool)

(assert (=> d!29429 m!119457))

(declare-fun m!119459 () Bool)

(assert (=> d!29429 m!119459))

(declare-fun m!119461 () Bool)

(assert (=> b!106652 m!119461))

(declare-fun m!119463 () Bool)

(assert (=> b!106651 m!119463))

(declare-fun m!119465 () Bool)

(assert (=> b!106647 m!119465))

(assert (=> d!28877 d!29429))

(declare-fun b!106655 () Bool)

(declare-fun e!69398 () Option!163)

(assert (=> b!106655 (= e!69398 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54065)))))))

(declare-fun d!29431 () Bool)

(declare-fun c!18669 () Bool)

(assert (=> d!29431 (= c!18669 (and ((_ is Cons!1592) (toList!782 lt!54065)) (= (_1!1191 (h!2189 (toList!782 lt!54065))) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29431 (= (getValueByKey!157 (toList!782 lt!54065) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69398)))

(declare-fun b!106657 () Bool)

(declare-fun e!69399 () Option!163)

(assert (=> b!106657 (= e!69399 (getValueByKey!157 (t!5671 (toList!782 lt!54065)) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106656 () Bool)

(assert (=> b!106656 (= e!69398 e!69399)))

(declare-fun c!18670 () Bool)

(assert (=> b!106656 (= c!18670 (and ((_ is Cons!1592) (toList!782 lt!54065)) (not (= (_1!1191 (h!2189 (toList!782 lt!54065))) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106658 () Bool)

(assert (=> b!106658 (= e!69399 None!161)))

(assert (= (and d!29431 c!18669) b!106655))

(assert (= (and d!29431 (not c!18669)) b!106656))

(assert (= (and b!106656 c!18670) b!106657))

(assert (= (and b!106656 (not c!18670)) b!106658))

(declare-fun m!119467 () Bool)

(assert (=> b!106657 m!119467))

(assert (=> b!105668 d!29431))

(declare-fun d!29433 () Bool)

(assert (=> d!29433 (= (apply!98 lt!54173 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1338 (getValueByKey!157 (toList!782 lt!54173) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4397 () Bool)

(assert (= bs!4397 d!29433))

(declare-fun m!119469 () Bool)

(assert (=> bs!4397 m!119469))

(assert (=> bs!4397 m!119469))

(declare-fun m!119471 () Bool)

(assert (=> bs!4397 m!119471))

(assert (=> b!105827 d!29433))

(declare-fun d!29435 () Bool)

(declare-fun e!69400 () Bool)

(assert (=> d!29435 e!69400))

(declare-fun res!52991 () Bool)

(assert (=> d!29435 (=> (not res!52991) (not e!69400))))

(declare-fun lt!54625 () ListLongMap!1533)

(assert (=> d!29435 (= res!52991 (contains!814 lt!54625 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun lt!54624 () List!1596)

(assert (=> d!29435 (= lt!54625 (ListLongMap!1534 lt!54624))))

(declare-fun lt!54627 () Unit!3212)

(declare-fun lt!54626 () Unit!3212)

(assert (=> d!29435 (= lt!54627 lt!54626)))

(assert (=> d!29435 (= (getValueByKey!157 lt!54624 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29435 (= lt!54626 (lemmaContainsTupThenGetReturnValue!73 lt!54624 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29435 (= lt!54624 (insertStrictlySorted!76 (toList!782 call!11185) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29435 (= (+!139 call!11185 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) lt!54625)))

(declare-fun b!106659 () Bool)

(declare-fun res!52992 () Bool)

(assert (=> b!106659 (=> (not res!52992) (not e!69400))))

(assert (=> b!106659 (= res!52992 (= (getValueByKey!157 (toList!782 lt!54625) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(declare-fun b!106660 () Bool)

(assert (=> b!106660 (= e!69400 (contains!816 (toList!782 lt!54625) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(assert (= (and d!29435 res!52991) b!106659))

(assert (= (and b!106659 res!52992) b!106660))

(declare-fun m!119473 () Bool)

(assert (=> d!29435 m!119473))

(declare-fun m!119475 () Bool)

(assert (=> d!29435 m!119475))

(declare-fun m!119477 () Bool)

(assert (=> d!29435 m!119477))

(declare-fun m!119479 () Bool)

(assert (=> d!29435 m!119479))

(declare-fun m!119481 () Bool)

(assert (=> b!106659 m!119481))

(declare-fun m!119483 () Bool)

(assert (=> b!106660 m!119483))

(assert (=> b!105984 d!29435))

(declare-fun d!29437 () Bool)

(assert (=> d!29437 (= (isEmpty!377 (getValueByKey!157 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))) (not ((_ is Some!162) (getValueByKey!157 (toList!782 lt!53721) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(assert (=> d!28913 d!29437))

(declare-fun lt!54628 () Bool)

(declare-fun d!29439 () Bool)

(assert (=> d!29439 (= lt!54628 (select (content!111 (toList!782 lt!54263)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(declare-fun e!69401 () Bool)

(assert (=> d!29439 (= lt!54628 e!69401)))

(declare-fun res!52993 () Bool)

(assert (=> d!29439 (=> (not res!52993) (not e!69401))))

(assert (=> d!29439 (= res!52993 ((_ is Cons!1592) (toList!782 lt!54263)))))

(assert (=> d!29439 (= (contains!816 (toList!782 lt!54263) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) lt!54628)))

(declare-fun b!106661 () Bool)

(declare-fun e!69402 () Bool)

(assert (=> b!106661 (= e!69401 e!69402)))

(declare-fun res!52994 () Bool)

(assert (=> b!106661 (=> res!52994 e!69402)))

(assert (=> b!106661 (= res!52994 (= (h!2189 (toList!782 lt!54263)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(declare-fun b!106662 () Bool)

(assert (=> b!106662 (= e!69402 (contains!816 (t!5671 (toList!782 lt!54263)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(assert (= (and d!29439 res!52993) b!106661))

(assert (= (and b!106661 (not res!52994)) b!106662))

(declare-fun m!119485 () Bool)

(assert (=> d!29439 m!119485))

(declare-fun m!119487 () Bool)

(assert (=> d!29439 m!119487))

(declare-fun m!119489 () Bool)

(assert (=> b!106662 m!119489))

(assert (=> b!106011 d!29439))

(declare-fun d!29441 () Bool)

(declare-fun res!52995 () Bool)

(declare-fun e!69403 () Bool)

(assert (=> d!29441 (=> res!52995 e!69403)))

(assert (=> d!29441 (= res!52995 (and ((_ is Cons!1592) (toList!782 lt!53966)) (= (_1!1191 (h!2189 (toList!782 lt!53966))) (_1!1191 lt!53713))))))

(assert (=> d!29441 (= (containsKey!160 (toList!782 lt!53966) (_1!1191 lt!53713)) e!69403)))

(declare-fun b!106663 () Bool)

(declare-fun e!69404 () Bool)

(assert (=> b!106663 (= e!69403 e!69404)))

(declare-fun res!52996 () Bool)

(assert (=> b!106663 (=> (not res!52996) (not e!69404))))

(assert (=> b!106663 (= res!52996 (and (or (not ((_ is Cons!1592) (toList!782 lt!53966))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53966))) (_1!1191 lt!53713))) ((_ is Cons!1592) (toList!782 lt!53966)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53966))) (_1!1191 lt!53713))))))

(declare-fun b!106664 () Bool)

(assert (=> b!106664 (= e!69404 (containsKey!160 (t!5671 (toList!782 lt!53966)) (_1!1191 lt!53713)))))

(assert (= (and d!29441 (not res!52995)) b!106663))

(assert (= (and b!106663 res!52996) b!106664))

(declare-fun m!119491 () Bool)

(assert (=> b!106664 m!119491))

(assert (=> d!28843 d!29441))

(declare-fun d!29443 () Bool)

(declare-fun res!52997 () Bool)

(declare-fun e!69405 () Bool)

(assert (=> d!29443 (=> res!52997 e!69405)))

(assert (=> d!29443 (= res!52997 (and ((_ is Cons!1592) (toList!782 call!11107)) (= (_1!1191 (h!2189 (toList!782 call!11107))) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873)))))))

(assert (=> d!29443 (= (containsKey!160 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))) e!69405)))

(declare-fun b!106665 () Bool)

(declare-fun e!69406 () Bool)

(assert (=> b!106665 (= e!69405 e!69406)))

(declare-fun res!52998 () Bool)

(assert (=> b!106665 (=> (not res!52998) (not e!69406))))

(assert (=> b!106665 (= res!52998 (and (or (not ((_ is Cons!1592) (toList!782 call!11107))) (bvsle (_1!1191 (h!2189 (toList!782 call!11107))) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873)))) ((_ is Cons!1592) (toList!782 call!11107)) (bvslt (_1!1191 (h!2189 (toList!782 call!11107))) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873)))))))

(declare-fun b!106666 () Bool)

(assert (=> b!106666 (= e!69406 (containsKey!160 (t!5671 (toList!782 call!11107)) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(assert (= (and d!29443 (not res!52997)) b!106665))

(assert (= (and b!106665 res!52998) b!106666))

(assert (=> b!106666 m!117461))

(declare-fun m!119493 () Bool)

(assert (=> b!106666 m!119493))

(assert (=> d!28859 d!29443))

(declare-fun d!29445 () Bool)

(assert (=> d!29445 (= (apply!98 lt!54095 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1338 (getValueByKey!157 (toList!782 lt!54095) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4398 () Bool)

(assert (= bs!4398 d!29445))

(assert (=> bs!4398 m!117867))

(assert (=> bs!4398 m!119345))

(assert (=> bs!4398 m!119345))

(declare-fun m!119495 () Bool)

(assert (=> bs!4398 m!119495))

(assert (=> b!105747 d!29445))

(declare-fun d!29447 () Bool)

(declare-fun c!18671 () Bool)

(assert (=> d!29447 (= c!18671 ((_ is ValueCellFull!995) (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!69407 () V!3217)

(assert (=> d!29447 (= (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69407)))

(declare-fun b!106667 () Bool)

(assert (=> b!106667 (= e!69407 (get!1336 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106668 () Bool)

(assert (=> b!106668 (= e!69407 (get!1337 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29447 c!18671) b!106667))

(assert (= (and d!29447 (not c!18671)) b!106668))

(assert (=> b!106667 m!117875))

(assert (=> b!106667 m!117297))

(declare-fun m!119497 () Bool)

(assert (=> b!106667 m!119497))

(assert (=> b!106668 m!117875))

(assert (=> b!106668 m!117297))

(declare-fun m!119499 () Bool)

(assert (=> b!106668 m!119499))

(assert (=> b!105747 d!29447))

(declare-fun d!29449 () Bool)

(declare-fun res!52999 () Bool)

(declare-fun e!69408 () Bool)

(assert (=> d!29449 (=> res!52999 e!69408)))

(assert (=> d!29449 (= res!52999 (or ((_ is Nil!1593) lt!54184) ((_ is Nil!1593) (t!5671 lt!54184))))))

(assert (=> d!29449 (= (isStrictlySorted!296 lt!54184) e!69408)))

(declare-fun b!106669 () Bool)

(declare-fun e!69409 () Bool)

(assert (=> b!106669 (= e!69408 e!69409)))

(declare-fun res!53000 () Bool)

(assert (=> b!106669 (=> (not res!53000) (not e!69409))))

(assert (=> b!106669 (= res!53000 (bvslt (_1!1191 (h!2189 lt!54184)) (_1!1191 (h!2189 (t!5671 lt!54184)))))))

(declare-fun b!106670 () Bool)

(assert (=> b!106670 (= e!69409 (isStrictlySorted!296 (t!5671 lt!54184)))))

(assert (= (and d!29449 (not res!52999)) b!106669))

(assert (= (and b!106669 res!53000) b!106670))

(declare-fun m!119501 () Bool)

(assert (=> b!106670 m!119501))

(assert (=> d!28949 d!29449))

(declare-fun d!29451 () Bool)

(declare-fun res!53001 () Bool)

(declare-fun e!69410 () Bool)

(assert (=> d!29451 (=> res!53001 e!69410)))

(assert (=> d!29451 (= res!53001 (or ((_ is Nil!1593) (toList!782 (+!139 lt!53714 lt!53713))) ((_ is Nil!1593) (t!5671 (toList!782 (+!139 lt!53714 lt!53713))))))))

(assert (=> d!29451 (= (isStrictlySorted!296 (toList!782 (+!139 lt!53714 lt!53713))) e!69410)))

(declare-fun b!106671 () Bool)

(declare-fun e!69411 () Bool)

(assert (=> b!106671 (= e!69410 e!69411)))

(declare-fun res!53002 () Bool)

(assert (=> b!106671 (=> (not res!53002) (not e!69411))))

(assert (=> b!106671 (= res!53002 (bvslt (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 lt!53713)))) (_1!1191 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53713)))))))))

(declare-fun b!106672 () Bool)

(assert (=> b!106672 (= e!69411 (isStrictlySorted!296 (t!5671 (toList!782 (+!139 lt!53714 lt!53713)))))))

(assert (= (and d!29451 (not res!53001)) b!106671))

(assert (= (and b!106671 res!53002) b!106672))

(assert (=> b!106672 m!119161))

(assert (=> d!28949 d!29451))

(declare-fun d!29453 () Bool)

(assert (=> d!29453 (= (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991)) (not (isEmpty!377 (getValueByKey!157 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991))))))

(declare-fun bs!4399 () Bool)

(assert (= bs!4399 d!29453))

(assert (=> bs!4399 m!117995))

(declare-fun m!119503 () Bool)

(assert (=> bs!4399 m!119503))

(assert (=> b!105779 d!29453))

(declare-fun e!69412 () Option!163)

(declare-fun b!106673 () Bool)

(assert (=> b!106673 (= e!69412 (Some!162 (_2!1191 (h!2189 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)))))))))

(declare-fun c!18672 () Bool)

(declare-fun d!29455 () Bool)

(assert (=> d!29455 (= c!18672 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))))) lt!53991)))))

(assert (=> d!29455 (= (getValueByKey!157 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991) e!69412)))

(declare-fun e!69413 () Option!163)

(declare-fun b!106675 () Bool)

(assert (=> b!106675 (= e!69413 (getValueByKey!157 (t!5671 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)))) lt!53991))))

(declare-fun b!106674 () Bool)

(assert (=> b!106674 (= e!69412 e!69413)))

(declare-fun c!18673 () Bool)

(assert (=> b!106674 (= c!18673 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)))) (not (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))))) lt!53991))))))

(declare-fun b!106676 () Bool)

(assert (=> b!106676 (= e!69413 None!161)))

(assert (= (and d!29455 c!18672) b!106673))

(assert (= (and d!29455 (not c!18672)) b!106674))

(assert (= (and b!106674 c!18673) b!106675))

(assert (= (and b!106674 (not c!18673)) b!106676))

(declare-fun m!119505 () Bool)

(assert (=> b!106675 m!119505))

(assert (=> b!105779 d!29455))

(declare-fun d!29457 () Bool)

(declare-fun res!53003 () Bool)

(declare-fun e!69414 () Bool)

(assert (=> d!29457 (=> res!53003 e!69414)))

(assert (=> d!29457 (= res!53003 (and ((_ is Cons!1592) (toList!782 lt!53974)) (= (_1!1191 (h!2189 (toList!782 lt!53974))) (_1!1191 lt!53713))))))

(assert (=> d!29457 (= (containsKey!160 (toList!782 lt!53974) (_1!1191 lt!53713)) e!69414)))

(declare-fun b!106677 () Bool)

(declare-fun e!69415 () Bool)

(assert (=> b!106677 (= e!69414 e!69415)))

(declare-fun res!53004 () Bool)

(assert (=> b!106677 (=> (not res!53004) (not e!69415))))

(assert (=> b!106677 (= res!53004 (and (or (not ((_ is Cons!1592) (toList!782 lt!53974))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53974))) (_1!1191 lt!53713))) ((_ is Cons!1592) (toList!782 lt!53974)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53974))) (_1!1191 lt!53713))))))

(declare-fun b!106678 () Bool)

(assert (=> b!106678 (= e!69415 (containsKey!160 (t!5671 (toList!782 lt!53974)) (_1!1191 lt!53713)))))

(assert (= (and d!29457 (not res!53003)) b!106677))

(assert (= (and b!106677 res!53004) b!106678))

(declare-fun m!119507 () Bool)

(assert (=> b!106678 m!119507))

(assert (=> d!28951 d!29457))

(declare-fun b!106679 () Bool)

(declare-fun e!69416 () Option!163)

(assert (=> b!106679 (= e!69416 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54137)))))))

(declare-fun c!18674 () Bool)

(declare-fun d!29459 () Bool)

(assert (=> d!29459 (= c!18674 (and ((_ is Cons!1592) (toList!782 lt!54137)) (= (_1!1191 (h!2189 (toList!782 lt!54137))) (_1!1191 (tuple2!2361 lt!53996 lt!53995)))))))

(assert (=> d!29459 (= (getValueByKey!157 (toList!782 lt!54137) (_1!1191 (tuple2!2361 lt!53996 lt!53995))) e!69416)))

(declare-fun b!106681 () Bool)

(declare-fun e!69417 () Option!163)

(assert (=> b!106681 (= e!69417 (getValueByKey!157 (t!5671 (toList!782 lt!54137)) (_1!1191 (tuple2!2361 lt!53996 lt!53995))))))

(declare-fun b!106680 () Bool)

(assert (=> b!106680 (= e!69416 e!69417)))

(declare-fun c!18675 () Bool)

(assert (=> b!106680 (= c!18675 (and ((_ is Cons!1592) (toList!782 lt!54137)) (not (= (_1!1191 (h!2189 (toList!782 lt!54137))) (_1!1191 (tuple2!2361 lt!53996 lt!53995))))))))

(declare-fun b!106682 () Bool)

(assert (=> b!106682 (= e!69417 None!161)))

(assert (= (and d!29459 c!18674) b!106679))

(assert (= (and d!29459 (not c!18674)) b!106680))

(assert (= (and b!106680 c!18675) b!106681))

(assert (= (and b!106680 (not c!18675)) b!106682))

(declare-fun m!119509 () Bool)

(assert (=> b!106681 m!119509))

(assert (=> b!105784 d!29459))

(declare-fun d!29461 () Bool)

(assert (=> d!29461 (= (size!2315 newMap!16) (bvadd (_size!498 newMap!16) (bvsdiv (bvadd (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!105643 d!29461))

(declare-fun lt!54629 () Bool)

(declare-fun d!29463 () Bool)

(assert (=> d!29463 (= lt!54629 (select (content!111 (toList!782 lt!54114)) (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69418 () Bool)

(assert (=> d!29463 (= lt!54629 e!69418)))

(declare-fun res!53005 () Bool)

(assert (=> d!29463 (=> (not res!53005) (not e!69418))))

(assert (=> d!29463 (= res!53005 ((_ is Cons!1592) (toList!782 lt!54114)))))

(assert (=> d!29463 (= (contains!816 (toList!782 lt!54114) (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54629)))

(declare-fun b!106683 () Bool)

(declare-fun e!69419 () Bool)

(assert (=> b!106683 (= e!69418 e!69419)))

(declare-fun res!53006 () Bool)

(assert (=> b!106683 (=> res!53006 e!69419)))

(assert (=> b!106683 (= res!53006 (= (h!2189 (toList!782 lt!54114)) (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106684 () Bool)

(assert (=> b!106684 (= e!69419 (contains!816 (t!5671 (toList!782 lt!54114)) (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29463 res!53005) b!106683))

(assert (= (and b!106683 (not res!53006)) b!106684))

(declare-fun m!119511 () Bool)

(assert (=> d!29463 m!119511))

(declare-fun m!119513 () Bool)

(assert (=> d!29463 m!119513))

(declare-fun m!119515 () Bool)

(assert (=> b!106684 m!119515))

(assert (=> b!105769 d!29463))

(declare-fun d!29465 () Bool)

(assert (=> d!29465 (= (apply!98 (+!139 lt!54166 (tuple2!2361 lt!54157 (minValue!2456 newMap!16))) lt!54167) (apply!98 lt!54166 lt!54167))))

(declare-fun lt!54630 () Unit!3212)

(assert (=> d!29465 (= lt!54630 (choose!666 lt!54166 lt!54157 (minValue!2456 newMap!16) lt!54167))))

(declare-fun e!69420 () Bool)

(assert (=> d!29465 e!69420))

(declare-fun res!53007 () Bool)

(assert (=> d!29465 (=> (not res!53007) (not e!69420))))

(assert (=> d!29465 (= res!53007 (contains!814 lt!54166 lt!54167))))

(assert (=> d!29465 (= (addApplyDifferent!74 lt!54166 lt!54157 (minValue!2456 newMap!16) lt!54167) lt!54630)))

(declare-fun b!106685 () Bool)

(assert (=> b!106685 (= e!69420 (not (= lt!54167 lt!54157)))))

(assert (= (and d!29465 res!53007) b!106685))

(assert (=> d!29465 m!118101))

(assert (=> d!29465 m!118101))

(assert (=> d!29465 m!118103))

(declare-fun m!119517 () Bool)

(assert (=> d!29465 m!119517))

(assert (=> d!29465 m!118111))

(declare-fun m!119519 () Bool)

(assert (=> d!29465 m!119519))

(assert (=> b!105845 d!29465))

(declare-fun d!29467 () Bool)

(assert (=> d!29467 (= (apply!98 lt!54168 lt!54176) (get!1338 (getValueByKey!157 (toList!782 lt!54168) lt!54176)))))

(declare-fun bs!4400 () Bool)

(assert (= bs!4400 d!29467))

(declare-fun m!119521 () Bool)

(assert (=> bs!4400 m!119521))

(assert (=> bs!4400 m!119521))

(declare-fun m!119523 () Bool)

(assert (=> bs!4400 m!119523))

(assert (=> b!105845 d!29467))

(declare-fun d!29469 () Bool)

(declare-fun e!69421 () Bool)

(assert (=> d!29469 e!69421))

(declare-fun res!53008 () Bool)

(assert (=> d!29469 (=> (not res!53008) (not e!69421))))

(declare-fun lt!54632 () ListLongMap!1533)

(assert (=> d!29469 (= res!53008 (contains!814 lt!54632 (_1!1191 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16)))))))

(declare-fun lt!54631 () List!1596)

(assert (=> d!29469 (= lt!54632 (ListLongMap!1534 lt!54631))))

(declare-fun lt!54634 () Unit!3212)

(declare-fun lt!54633 () Unit!3212)

(assert (=> d!29469 (= lt!54634 lt!54633)))

(assert (=> d!29469 (= (getValueByKey!157 lt!54631 (_1!1191 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29469 (= lt!54633 (lemmaContainsTupThenGetReturnValue!73 lt!54631 (_1!1191 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29469 (= lt!54631 (insertStrictlySorted!76 (toList!782 lt!54169) (_1!1191 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29469 (= (+!139 lt!54169 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16))) lt!54632)))

(declare-fun b!106686 () Bool)

(declare-fun res!53009 () Bool)

(assert (=> b!106686 (=> (not res!53009) (not e!69421))))

(assert (=> b!106686 (= res!53009 (= (getValueByKey!157 (toList!782 lt!54632) (_1!1191 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16))))))))

(declare-fun b!106687 () Bool)

(assert (=> b!106687 (= e!69421 (contains!816 (toList!782 lt!54632) (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16))))))

(assert (= (and d!29469 res!53008) b!106686))

(assert (= (and b!106686 res!53009) b!106687))

(declare-fun m!119525 () Bool)

(assert (=> d!29469 m!119525))

(declare-fun m!119527 () Bool)

(assert (=> d!29469 m!119527))

(declare-fun m!119529 () Bool)

(assert (=> d!29469 m!119529))

(declare-fun m!119531 () Bool)

(assert (=> d!29469 m!119531))

(declare-fun m!119533 () Bool)

(assert (=> b!106686 m!119533))

(declare-fun m!119535 () Bool)

(assert (=> b!106687 m!119535))

(assert (=> b!105845 d!29469))

(declare-fun d!29471 () Bool)

(assert (=> d!29471 (= (apply!98 (+!139 lt!54168 (tuple2!2361 lt!54162 (minValue!2456 newMap!16))) lt!54176) (apply!98 lt!54168 lt!54176))))

(declare-fun lt!54635 () Unit!3212)

(assert (=> d!29471 (= lt!54635 (choose!666 lt!54168 lt!54162 (minValue!2456 newMap!16) lt!54176))))

(declare-fun e!69422 () Bool)

(assert (=> d!29471 e!69422))

(declare-fun res!53010 () Bool)

(assert (=> d!29471 (=> (not res!53010) (not e!69422))))

(assert (=> d!29471 (= res!53010 (contains!814 lt!54168 lt!54176))))

(assert (=> d!29471 (= (addApplyDifferent!74 lt!54168 lt!54162 (minValue!2456 newMap!16) lt!54176) lt!54635)))

(declare-fun b!106688 () Bool)

(assert (=> b!106688 (= e!69422 (not (= lt!54176 lt!54162)))))

(assert (= (and d!29471 res!53010) b!106688))

(assert (=> d!29471 m!118099))

(assert (=> d!29471 m!118099))

(assert (=> d!29471 m!118117))

(declare-fun m!119537 () Bool)

(assert (=> d!29471 m!119537))

(assert (=> d!29471 m!118113))

(declare-fun m!119539 () Bool)

(assert (=> d!29471 m!119539))

(assert (=> b!105845 d!29471))

(declare-fun d!29473 () Bool)

(assert (=> d!29473 (= (apply!98 (+!139 lt!54169 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16))) lt!54164) (apply!98 lt!54169 lt!54164))))

(declare-fun lt!54636 () Unit!3212)

(assert (=> d!29473 (= lt!54636 (choose!666 lt!54169 lt!54178 (zeroValue!2456 newMap!16) lt!54164))))

(declare-fun e!69423 () Bool)

(assert (=> d!29473 e!69423))

(declare-fun res!53011 () Bool)

(assert (=> d!29473 (=> (not res!53011) (not e!69423))))

(assert (=> d!29473 (= res!53011 (contains!814 lt!54169 lt!54164))))

(assert (=> d!29473 (= (addApplyDifferent!74 lt!54169 lt!54178 (zeroValue!2456 newMap!16) lt!54164) lt!54636)))

(declare-fun b!106689 () Bool)

(assert (=> b!106689 (= e!69423 (not (= lt!54164 lt!54178)))))

(assert (= (and d!29473 res!53011) b!106689))

(assert (=> d!29473 m!118105))

(assert (=> d!29473 m!118105))

(assert (=> d!29473 m!118107))

(declare-fun m!119541 () Bool)

(assert (=> d!29473 m!119541))

(assert (=> d!29473 m!118095))

(declare-fun m!119543 () Bool)

(assert (=> d!29473 m!119543))

(assert (=> b!105845 d!29473))

(assert (=> b!105845 d!29305))

(declare-fun d!29475 () Bool)

(assert (=> d!29475 (= (apply!98 (+!139 lt!54168 (tuple2!2361 lt!54162 (minValue!2456 newMap!16))) lt!54176) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!54168 (tuple2!2361 lt!54162 (minValue!2456 newMap!16)))) lt!54176)))))

(declare-fun bs!4401 () Bool)

(assert (= bs!4401 d!29475))

(declare-fun m!119545 () Bool)

(assert (=> bs!4401 m!119545))

(assert (=> bs!4401 m!119545))

(declare-fun m!119547 () Bool)

(assert (=> bs!4401 m!119547))

(assert (=> b!105845 d!29475))

(declare-fun d!29477 () Bool)

(assert (=> d!29477 (= (apply!98 (+!139 lt!54166 (tuple2!2361 lt!54157 (minValue!2456 newMap!16))) lt!54167) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!54166 (tuple2!2361 lt!54157 (minValue!2456 newMap!16)))) lt!54167)))))

(declare-fun bs!4402 () Bool)

(assert (= bs!4402 d!29477))

(declare-fun m!119549 () Bool)

(assert (=> bs!4402 m!119549))

(assert (=> bs!4402 m!119549))

(declare-fun m!119551 () Bool)

(assert (=> bs!4402 m!119551))

(assert (=> b!105845 d!29477))

(declare-fun d!29479 () Bool)

(declare-fun e!69424 () Bool)

(assert (=> d!29479 e!69424))

(declare-fun res!53012 () Bool)

(assert (=> d!29479 (=> (not res!53012) (not e!69424))))

(declare-fun lt!54638 () ListLongMap!1533)

(assert (=> d!29479 (= res!53012 (contains!814 lt!54638 (_1!1191 (tuple2!2361 lt!54157 (minValue!2456 newMap!16)))))))

(declare-fun lt!54637 () List!1596)

(assert (=> d!29479 (= lt!54638 (ListLongMap!1534 lt!54637))))

(declare-fun lt!54640 () Unit!3212)

(declare-fun lt!54639 () Unit!3212)

(assert (=> d!29479 (= lt!54640 lt!54639)))

(assert (=> d!29479 (= (getValueByKey!157 lt!54637 (_1!1191 (tuple2!2361 lt!54157 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54157 (minValue!2456 newMap!16)))))))

(assert (=> d!29479 (= lt!54639 (lemmaContainsTupThenGetReturnValue!73 lt!54637 (_1!1191 (tuple2!2361 lt!54157 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54157 (minValue!2456 newMap!16)))))))

(assert (=> d!29479 (= lt!54637 (insertStrictlySorted!76 (toList!782 lt!54166) (_1!1191 (tuple2!2361 lt!54157 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54157 (minValue!2456 newMap!16)))))))

(assert (=> d!29479 (= (+!139 lt!54166 (tuple2!2361 lt!54157 (minValue!2456 newMap!16))) lt!54638)))

(declare-fun b!106690 () Bool)

(declare-fun res!53013 () Bool)

(assert (=> b!106690 (=> (not res!53013) (not e!69424))))

(assert (=> b!106690 (= res!53013 (= (getValueByKey!157 (toList!782 lt!54638) (_1!1191 (tuple2!2361 lt!54157 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54157 (minValue!2456 newMap!16))))))))

(declare-fun b!106691 () Bool)

(assert (=> b!106691 (= e!69424 (contains!816 (toList!782 lt!54638) (tuple2!2361 lt!54157 (minValue!2456 newMap!16))))))

(assert (= (and d!29479 res!53012) b!106690))

(assert (= (and b!106690 res!53013) b!106691))

(declare-fun m!119553 () Bool)

(assert (=> d!29479 m!119553))

(declare-fun m!119555 () Bool)

(assert (=> d!29479 m!119555))

(declare-fun m!119557 () Bool)

(assert (=> d!29479 m!119557))

(declare-fun m!119559 () Bool)

(assert (=> d!29479 m!119559))

(declare-fun m!119561 () Bool)

(assert (=> b!106690 m!119561))

(declare-fun m!119563 () Bool)

(assert (=> b!106691 m!119563))

(assert (=> b!105845 d!29479))

(declare-fun d!29481 () Bool)

(declare-fun e!69425 () Bool)

(assert (=> d!29481 e!69425))

(declare-fun res!53014 () Bool)

(assert (=> d!29481 (=> res!53014 e!69425)))

(declare-fun lt!54642 () Bool)

(assert (=> d!29481 (= res!53014 (not lt!54642))))

(declare-fun lt!54643 () Bool)

(assert (=> d!29481 (= lt!54642 lt!54643)))

(declare-fun lt!54644 () Unit!3212)

(declare-fun e!69426 () Unit!3212)

(assert (=> d!29481 (= lt!54644 e!69426)))

(declare-fun c!18676 () Bool)

(assert (=> d!29481 (= c!18676 lt!54643)))

(assert (=> d!29481 (= lt!54643 (containsKey!160 (toList!782 (+!139 lt!54158 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16)))) lt!54159))))

(assert (=> d!29481 (= (contains!814 (+!139 lt!54158 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16))) lt!54159) lt!54642)))

(declare-fun b!106692 () Bool)

(declare-fun lt!54641 () Unit!3212)

(assert (=> b!106692 (= e!69426 lt!54641)))

(assert (=> b!106692 (= lt!54641 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (+!139 lt!54158 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16)))) lt!54159))))

(assert (=> b!106692 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!54158 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16)))) lt!54159))))

(declare-fun b!106693 () Bool)

(declare-fun Unit!3266 () Unit!3212)

(assert (=> b!106693 (= e!69426 Unit!3266)))

(declare-fun b!106694 () Bool)

(assert (=> b!106694 (= e!69425 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!54158 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16)))) lt!54159)))))

(assert (= (and d!29481 c!18676) b!106692))

(assert (= (and d!29481 (not c!18676)) b!106693))

(assert (= (and d!29481 (not res!53014)) b!106694))

(declare-fun m!119565 () Bool)

(assert (=> d!29481 m!119565))

(declare-fun m!119567 () Bool)

(assert (=> b!106692 m!119567))

(declare-fun m!119569 () Bool)

(assert (=> b!106692 m!119569))

(assert (=> b!106692 m!119569))

(declare-fun m!119571 () Bool)

(assert (=> b!106692 m!119571))

(assert (=> b!106694 m!119569))

(assert (=> b!106694 m!119569))

(assert (=> b!106694 m!119571))

(assert (=> b!105845 d!29481))

(declare-fun d!29483 () Bool)

(assert (=> d!29483 (contains!814 (+!139 lt!54158 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16))) lt!54159)))

(declare-fun lt!54645 () Unit!3212)

(assert (=> d!29483 (= lt!54645 (choose!667 lt!54158 lt!54172 (zeroValue!2456 newMap!16) lt!54159))))

(assert (=> d!29483 (contains!814 lt!54158 lt!54159)))

(assert (=> d!29483 (= (addStillContains!74 lt!54158 lt!54172 (zeroValue!2456 newMap!16) lt!54159) lt!54645)))

(declare-fun bs!4403 () Bool)

(assert (= bs!4403 d!29483))

(assert (=> bs!4403 m!118093))

(assert (=> bs!4403 m!118093))

(assert (=> bs!4403 m!118119))

(declare-fun m!119573 () Bool)

(assert (=> bs!4403 m!119573))

(declare-fun m!119575 () Bool)

(assert (=> bs!4403 m!119575))

(assert (=> b!105845 d!29483))

(declare-fun d!29485 () Bool)

(declare-fun e!69427 () Bool)

(assert (=> d!29485 e!69427))

(declare-fun res!53015 () Bool)

(assert (=> d!29485 (=> (not res!53015) (not e!69427))))

(declare-fun lt!54647 () ListLongMap!1533)

(assert (=> d!29485 (= res!53015 (contains!814 lt!54647 (_1!1191 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16)))))))

(declare-fun lt!54646 () List!1596)

(assert (=> d!29485 (= lt!54647 (ListLongMap!1534 lt!54646))))

(declare-fun lt!54649 () Unit!3212)

(declare-fun lt!54648 () Unit!3212)

(assert (=> d!29485 (= lt!54649 lt!54648)))

(assert (=> d!29485 (= (getValueByKey!157 lt!54646 (_1!1191 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29485 (= lt!54648 (lemmaContainsTupThenGetReturnValue!73 lt!54646 (_1!1191 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29485 (= lt!54646 (insertStrictlySorted!76 (toList!782 lt!54158) (_1!1191 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29485 (= (+!139 lt!54158 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16))) lt!54647)))

(declare-fun b!106695 () Bool)

(declare-fun res!53016 () Bool)

(assert (=> b!106695 (=> (not res!53016) (not e!69427))))

(assert (=> b!106695 (= res!53016 (= (getValueByKey!157 (toList!782 lt!54647) (_1!1191 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16))))))))

(declare-fun b!106696 () Bool)

(assert (=> b!106696 (= e!69427 (contains!816 (toList!782 lt!54647) (tuple2!2361 lt!54172 (zeroValue!2456 newMap!16))))))

(assert (= (and d!29485 res!53015) b!106695))

(assert (= (and b!106695 res!53016) b!106696))

(declare-fun m!119577 () Bool)

(assert (=> d!29485 m!119577))

(declare-fun m!119579 () Bool)

(assert (=> d!29485 m!119579))

(declare-fun m!119581 () Bool)

(assert (=> d!29485 m!119581))

(declare-fun m!119583 () Bool)

(assert (=> d!29485 m!119583))

(declare-fun m!119585 () Bool)

(assert (=> b!106695 m!119585))

(declare-fun m!119587 () Bool)

(assert (=> b!106696 m!119587))

(assert (=> b!105845 d!29485))

(declare-fun d!29487 () Bool)

(assert (=> d!29487 (= (apply!98 lt!54166 lt!54167) (get!1338 (getValueByKey!157 (toList!782 lt!54166) lt!54167)))))

(declare-fun bs!4404 () Bool)

(assert (= bs!4404 d!29487))

(declare-fun m!119589 () Bool)

(assert (=> bs!4404 m!119589))

(assert (=> bs!4404 m!119589))

(declare-fun m!119591 () Bool)

(assert (=> bs!4404 m!119591))

(assert (=> b!105845 d!29487))

(declare-fun d!29489 () Bool)

(declare-fun e!69428 () Bool)

(assert (=> d!29489 e!69428))

(declare-fun res!53017 () Bool)

(assert (=> d!29489 (=> (not res!53017) (not e!69428))))

(declare-fun lt!54651 () ListLongMap!1533)

(assert (=> d!29489 (= res!53017 (contains!814 lt!54651 (_1!1191 (tuple2!2361 lt!54162 (minValue!2456 newMap!16)))))))

(declare-fun lt!54650 () List!1596)

(assert (=> d!29489 (= lt!54651 (ListLongMap!1534 lt!54650))))

(declare-fun lt!54653 () Unit!3212)

(declare-fun lt!54652 () Unit!3212)

(assert (=> d!29489 (= lt!54653 lt!54652)))

(assert (=> d!29489 (= (getValueByKey!157 lt!54650 (_1!1191 (tuple2!2361 lt!54162 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54162 (minValue!2456 newMap!16)))))))

(assert (=> d!29489 (= lt!54652 (lemmaContainsTupThenGetReturnValue!73 lt!54650 (_1!1191 (tuple2!2361 lt!54162 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54162 (minValue!2456 newMap!16)))))))

(assert (=> d!29489 (= lt!54650 (insertStrictlySorted!76 (toList!782 lt!54168) (_1!1191 (tuple2!2361 lt!54162 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 lt!54162 (minValue!2456 newMap!16)))))))

(assert (=> d!29489 (= (+!139 lt!54168 (tuple2!2361 lt!54162 (minValue!2456 newMap!16))) lt!54651)))

(declare-fun b!106697 () Bool)

(declare-fun res!53018 () Bool)

(assert (=> b!106697 (=> (not res!53018) (not e!69428))))

(assert (=> b!106697 (= res!53018 (= (getValueByKey!157 (toList!782 lt!54651) (_1!1191 (tuple2!2361 lt!54162 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 lt!54162 (minValue!2456 newMap!16))))))))

(declare-fun b!106698 () Bool)

(assert (=> b!106698 (= e!69428 (contains!816 (toList!782 lt!54651) (tuple2!2361 lt!54162 (minValue!2456 newMap!16))))))

(assert (= (and d!29489 res!53017) b!106697))

(assert (= (and b!106697 res!53018) b!106698))

(declare-fun m!119593 () Bool)

(assert (=> d!29489 m!119593))

(declare-fun m!119595 () Bool)

(assert (=> d!29489 m!119595))

(declare-fun m!119597 () Bool)

(assert (=> d!29489 m!119597))

(declare-fun m!119599 () Bool)

(assert (=> d!29489 m!119599))

(declare-fun m!119601 () Bool)

(assert (=> b!106697 m!119601))

(declare-fun m!119603 () Bool)

(assert (=> b!106698 m!119603))

(assert (=> b!105845 d!29489))

(declare-fun d!29491 () Bool)

(assert (=> d!29491 (= (apply!98 (+!139 lt!54169 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16))) lt!54164) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!54169 (tuple2!2361 lt!54178 (zeroValue!2456 newMap!16)))) lt!54164)))))

(declare-fun bs!4405 () Bool)

(assert (= bs!4405 d!29491))

(declare-fun m!119605 () Bool)

(assert (=> bs!4405 m!119605))

(assert (=> bs!4405 m!119605))

(declare-fun m!119607 () Bool)

(assert (=> bs!4405 m!119607))

(assert (=> b!105845 d!29491))

(declare-fun d!29493 () Bool)

(assert (=> d!29493 (= (apply!98 lt!54169 lt!54164) (get!1338 (getValueByKey!157 (toList!782 lt!54169) lt!54164)))))

(declare-fun bs!4406 () Bool)

(assert (= bs!4406 d!29493))

(declare-fun m!119609 () Bool)

(assert (=> bs!4406 m!119609))

(assert (=> bs!4406 m!119609))

(declare-fun m!119611 () Bool)

(assert (=> bs!4406 m!119611))

(assert (=> b!105845 d!29493))

(declare-fun d!29495 () Bool)

(assert (=> d!29495 (= (apply!98 (+!139 lt!53943 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53951) (apply!98 lt!53943 lt!53951))))

(assert (=> d!29495 true))

(declare-fun _$34!889 () Unit!3212)

(assert (=> d!29495 (= (choose!666 lt!53943 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53951) _$34!889)))

(declare-fun bs!4407 () Bool)

(assert (= bs!4407 d!29495))

(assert (=> bs!4407 m!117511))

(assert (=> bs!4407 m!117511))

(assert (=> bs!4407 m!117529))

(assert (=> bs!4407 m!117525))

(assert (=> d!28875 d!29495))

(assert (=> d!28875 d!28893))

(declare-fun d!29497 () Bool)

(declare-fun e!69429 () Bool)

(assert (=> d!29497 e!69429))

(declare-fun res!53019 () Bool)

(assert (=> d!29497 (=> res!53019 e!69429)))

(declare-fun lt!54655 () Bool)

(assert (=> d!29497 (= res!53019 (not lt!54655))))

(declare-fun lt!54656 () Bool)

(assert (=> d!29497 (= lt!54655 lt!54656)))

(declare-fun lt!54657 () Unit!3212)

(declare-fun e!69430 () Unit!3212)

(assert (=> d!29497 (= lt!54657 e!69430)))

(declare-fun c!18677 () Bool)

(assert (=> d!29497 (= c!18677 lt!54656)))

(assert (=> d!29497 (= lt!54656 (containsKey!160 (toList!782 lt!53943) lt!53951))))

(assert (=> d!29497 (= (contains!814 lt!53943 lt!53951) lt!54655)))

(declare-fun b!106699 () Bool)

(declare-fun lt!54654 () Unit!3212)

(assert (=> b!106699 (= e!69430 lt!54654)))

(assert (=> b!106699 (= lt!54654 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53943) lt!53951))))

(assert (=> b!106699 (isDefined!109 (getValueByKey!157 (toList!782 lt!53943) lt!53951))))

(declare-fun b!106700 () Bool)

(declare-fun Unit!3267 () Unit!3212)

(assert (=> b!106700 (= e!69430 Unit!3267)))

(declare-fun b!106701 () Bool)

(assert (=> b!106701 (= e!69429 (isDefined!109 (getValueByKey!157 (toList!782 lt!53943) lt!53951)))))

(assert (= (and d!29497 c!18677) b!106699))

(assert (= (and d!29497 (not c!18677)) b!106700))

(assert (= (and d!29497 (not res!53019)) b!106701))

(declare-fun m!119613 () Bool)

(assert (=> d!29497 m!119613))

(declare-fun m!119615 () Bool)

(assert (=> b!106699 m!119615))

(assert (=> b!106699 m!117955))

(assert (=> b!106699 m!117955))

(declare-fun m!119617 () Bool)

(assert (=> b!106699 m!119617))

(assert (=> b!106701 m!117955))

(assert (=> b!106701 m!117955))

(assert (=> b!106701 m!119617))

(assert (=> d!28875 d!29497))

(assert (=> d!28875 d!28889))

(assert (=> d!28875 d!28891))

(declare-fun d!29499 () Bool)

(declare-fun res!53020 () Bool)

(declare-fun e!69431 () Bool)

(assert (=> d!29499 (=> res!53020 e!69431)))

(assert (=> d!29499 (= res!53020 (and ((_ is Cons!1592) (toList!782 lt!53999)) (= (_1!1191 (h!2189 (toList!782 lt!53999))) (_1!1191 lt!53718))))))

(assert (=> d!29499 (= (containsKey!160 (toList!782 lt!53999) (_1!1191 lt!53718)) e!69431)))

(declare-fun b!106702 () Bool)

(declare-fun e!69432 () Bool)

(assert (=> b!106702 (= e!69431 e!69432)))

(declare-fun res!53021 () Bool)

(assert (=> b!106702 (=> (not res!53021) (not e!69432))))

(assert (=> b!106702 (= res!53021 (and (or (not ((_ is Cons!1592) (toList!782 lt!53999))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53999))) (_1!1191 lt!53718))) ((_ is Cons!1592) (toList!782 lt!53999)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53999))) (_1!1191 lt!53718))))))

(declare-fun b!106703 () Bool)

(assert (=> b!106703 (= e!69432 (containsKey!160 (t!5671 (toList!782 lt!53999)) (_1!1191 lt!53718)))))

(assert (= (and d!29499 (not res!53020)) b!106702))

(assert (= (and b!106702 res!53021) b!106703))

(declare-fun m!119619 () Bool)

(assert (=> b!106703 m!119619))

(assert (=> d!28919 d!29499))

(assert (=> b!105631 d!29135))

(declare-fun d!29501 () Bool)

(declare-fun res!53022 () Bool)

(declare-fun e!69433 () Bool)

(assert (=> d!29501 (=> res!53022 e!69433)))

(assert (=> d!29501 (= res!53022 (or ((_ is Nil!1593) lt!54077) ((_ is Nil!1593) (t!5671 lt!54077))))))

(assert (=> d!29501 (= (isStrictlySorted!296 lt!54077) e!69433)))

(declare-fun b!106704 () Bool)

(declare-fun e!69434 () Bool)

(assert (=> b!106704 (= e!69433 e!69434)))

(declare-fun res!53023 () Bool)

(assert (=> b!106704 (=> (not res!53023) (not e!69434))))

(assert (=> b!106704 (= res!53023 (bvslt (_1!1191 (h!2189 lt!54077)) (_1!1191 (h!2189 (t!5671 lt!54077)))))))

(declare-fun b!106705 () Bool)

(assert (=> b!106705 (= e!69434 (isStrictlySorted!296 (t!5671 lt!54077)))))

(assert (= (and d!29501 (not res!53022)) b!106704))

(assert (= (and b!106704 res!53023) b!106705))

(declare-fun m!119621 () Bool)

(assert (=> b!106705 m!119621))

(assert (=> d!28849 d!29501))

(declare-fun d!29503 () Bool)

(declare-fun res!53024 () Bool)

(declare-fun e!69435 () Bool)

(assert (=> d!29503 (=> res!53024 e!69435)))

(assert (=> d!29503 (= res!53024 (or ((_ is Nil!1593) (toList!782 (+!139 lt!53714 lt!53718))) ((_ is Nil!1593) (t!5671 (toList!782 (+!139 lt!53714 lt!53718))))))))

(assert (=> d!29503 (= (isStrictlySorted!296 (toList!782 (+!139 lt!53714 lt!53718))) e!69435)))

(declare-fun b!106706 () Bool)

(declare-fun e!69436 () Bool)

(assert (=> b!106706 (= e!69435 e!69436)))

(declare-fun res!53025 () Bool)

(assert (=> b!106706 (=> (not res!53025) (not e!69436))))

(assert (=> b!106706 (= res!53025 (bvslt (_1!1191 (h!2189 (toList!782 (+!139 lt!53714 lt!53718)))) (_1!1191 (h!2189 (t!5671 (toList!782 (+!139 lt!53714 lt!53718)))))))))

(declare-fun b!106707 () Bool)

(assert (=> b!106707 (= e!69436 (isStrictlySorted!296 (t!5671 (toList!782 (+!139 lt!53714 lt!53718)))))))

(assert (= (and d!29503 (not res!53024)) b!106706))

(assert (= (and b!106706 res!53025) b!106707))

(assert (=> b!106707 m!118763))

(assert (=> d!28849 d!29503))

(declare-fun d!29505 () Bool)

(declare-fun lt!54658 () Bool)

(assert (=> d!29505 (= lt!54658 (select (content!111 lt!54184) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun e!69437 () Bool)

(assert (=> d!29505 (= lt!54658 e!69437)))

(declare-fun res!53026 () Bool)

(assert (=> d!29505 (=> (not res!53026) (not e!69437))))

(assert (=> d!29505 (= res!53026 ((_ is Cons!1592) lt!54184))))

(assert (=> d!29505 (= (contains!816 lt!54184 (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))) lt!54658)))

(declare-fun b!106708 () Bool)

(declare-fun e!69438 () Bool)

(assert (=> b!106708 (= e!69437 e!69438)))

(declare-fun res!53027 () Bool)

(assert (=> b!106708 (=> res!53027 e!69438)))

(assert (=> b!106708 (= res!53027 (= (h!2189 lt!54184) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun b!106709 () Bool)

(assert (=> b!106709 (= e!69438 (contains!816 (t!5671 lt!54184) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(assert (= (and d!29505 res!53026) b!106708))

(assert (= (and b!106708 (not res!53027)) b!106709))

(declare-fun m!119623 () Bool)

(assert (=> d!29505 m!119623))

(declare-fun m!119625 () Bool)

(assert (=> d!29505 m!119625))

(declare-fun m!119627 () Bool)

(assert (=> b!106709 m!119627))

(assert (=> b!105872 d!29505))

(assert (=> d!28865 d!28967))

(declare-fun d!29507 () Bool)

(declare-fun e!69441 () Bool)

(assert (=> d!29507 e!69441))

(declare-fun res!53033 () Bool)

(assert (=> d!29507 (=> (not res!53033) (not e!69441))))

(declare-fun lt!54661 () SeekEntryResult!253)

(assert (=> d!29507 (= res!53033 ((_ is Found!253) lt!54661))))

(assert (=> d!29507 (= lt!54661 (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(assert (=> d!29507 true))

(declare-fun _$33!90 () Unit!3212)

(assert (=> d!29507 (= (choose!665 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)) _$33!90)))

(declare-fun b!106714 () Bool)

(declare-fun res!53032 () Bool)

(assert (=> b!106714 (=> (not res!53032) (not e!69441))))

(assert (=> b!106714 (= res!53032 (inRange!0 (index!3161 lt!54661) (mask!6727 newMap!16)))))

(declare-fun b!106715 () Bool)

(assert (=> b!106715 (= e!69441 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!54661)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29507 res!53033) b!106714))

(assert (= (and b!106714 res!53032) b!106715))

(assert (=> d!29507 m!117261))

(assert (=> d!29507 m!117433))

(declare-fun m!119629 () Bool)

(assert (=> b!106714 m!119629))

(declare-fun m!119631 () Bool)

(assert (=> b!106715 m!119631))

(assert (=> d!28865 d!29507))

(assert (=> d!28865 d!29089))

(declare-fun d!29509 () Bool)

(assert (=> d!29509 (= (apply!98 lt!54173 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1338 (getValueByKey!157 (toList!782 lt!54173) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4408 () Bool)

(assert (= bs!4408 d!29509))

(assert (=> bs!4408 m!117657))

(assert (=> bs!4408 m!118825))

(assert (=> bs!4408 m!118825))

(declare-fun m!119633 () Bool)

(assert (=> bs!4408 m!119633))

(assert (=> b!105834 d!29509))

(declare-fun d!29511 () Bool)

(declare-fun c!18678 () Bool)

(assert (=> d!29511 (= c!18678 ((_ is ValueCellFull!995) (select (arr!2055 (_values!2564 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!69442 () V!3217)

(assert (=> d!29511 (= (get!1334 (select (arr!2055 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69442)))

(declare-fun b!106716 () Bool)

(assert (=> b!106716 (= e!69442 (get!1336 (select (arr!2055 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106717 () Bool)

(assert (=> b!106717 (= e!69442 (get!1337 (select (arr!2055 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29511 c!18678) b!106716))

(assert (= (and d!29511 (not c!18678)) b!106717))

(assert (=> b!106716 m!118077))

(assert (=> b!106716 m!117653))

(declare-fun m!119635 () Bool)

(assert (=> b!106716 m!119635))

(assert (=> b!106717 m!118077))

(assert (=> b!106717 m!117653))

(declare-fun m!119637 () Bool)

(assert (=> b!106717 m!119637))

(assert (=> b!105834 d!29511))

(declare-fun d!29513 () Bool)

(assert (=> d!29513 (= (apply!98 lt!54030 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1338 (getValueByKey!157 (toList!782 lt!54030) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4409 () Bool)

(assert (= bs!4409 d!29513))

(assert (=> bs!4409 m!118577))

(assert (=> bs!4409 m!118577))

(declare-fun m!119639 () Bool)

(assert (=> bs!4409 m!119639))

(assert (=> b!105626 d!29513))

(assert (=> b!105825 d!28811))

(declare-fun d!29515 () Bool)

(declare-fun e!69443 () Bool)

(assert (=> d!29515 e!69443))

(declare-fun res!53034 () Bool)

(assert (=> d!29515 (=> res!53034 e!69443)))

(declare-fun lt!54663 () Bool)

(assert (=> d!29515 (= res!53034 (not lt!54663))))

(declare-fun lt!54664 () Bool)

(assert (=> d!29515 (= lt!54663 lt!54664)))

(declare-fun lt!54665 () Unit!3212)

(declare-fun e!69444 () Unit!3212)

(assert (=> d!29515 (= lt!54665 e!69444)))

(declare-fun c!18679 () Bool)

(assert (=> d!29515 (= c!18679 lt!54664)))

(assert (=> d!29515 (= lt!54664 (containsKey!160 (toList!782 lt!54137) (_1!1191 (tuple2!2361 lt!53996 lt!53995))))))

(assert (=> d!29515 (= (contains!814 lt!54137 (_1!1191 (tuple2!2361 lt!53996 lt!53995))) lt!54663)))

(declare-fun b!106718 () Bool)

(declare-fun lt!54662 () Unit!3212)

(assert (=> b!106718 (= e!69444 lt!54662)))

(assert (=> b!106718 (= lt!54662 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54137) (_1!1191 (tuple2!2361 lt!53996 lt!53995))))))

(assert (=> b!106718 (isDefined!109 (getValueByKey!157 (toList!782 lt!54137) (_1!1191 (tuple2!2361 lt!53996 lt!53995))))))

(declare-fun b!106719 () Bool)

(declare-fun Unit!3268 () Unit!3212)

(assert (=> b!106719 (= e!69444 Unit!3268)))

(declare-fun b!106720 () Bool)

(assert (=> b!106720 (= e!69443 (isDefined!109 (getValueByKey!157 (toList!782 lt!54137) (_1!1191 (tuple2!2361 lt!53996 lt!53995)))))))

(assert (= (and d!29515 c!18679) b!106718))

(assert (= (and d!29515 (not c!18679)) b!106719))

(assert (= (and d!29515 (not res!53034)) b!106720))

(declare-fun m!119641 () Bool)

(assert (=> d!29515 m!119641))

(declare-fun m!119643 () Bool)

(assert (=> b!106718 m!119643))

(assert (=> b!106718 m!118011))

(assert (=> b!106718 m!118011))

(declare-fun m!119645 () Bool)

(assert (=> b!106718 m!119645))

(assert (=> b!106720 m!118011))

(assert (=> b!106720 m!118011))

(assert (=> b!106720 m!119645))

(assert (=> d!28907 d!29515))

(declare-fun b!106721 () Bool)

(declare-fun e!69445 () Option!163)

(assert (=> b!106721 (= e!69445 (Some!162 (_2!1191 (h!2189 lt!54136))))))

(declare-fun c!18680 () Bool)

(declare-fun d!29517 () Bool)

(assert (=> d!29517 (= c!18680 (and ((_ is Cons!1592) lt!54136) (= (_1!1191 (h!2189 lt!54136)) (_1!1191 (tuple2!2361 lt!53996 lt!53995)))))))

(assert (=> d!29517 (= (getValueByKey!157 lt!54136 (_1!1191 (tuple2!2361 lt!53996 lt!53995))) e!69445)))

(declare-fun e!69446 () Option!163)

(declare-fun b!106723 () Bool)

(assert (=> b!106723 (= e!69446 (getValueByKey!157 (t!5671 lt!54136) (_1!1191 (tuple2!2361 lt!53996 lt!53995))))))

(declare-fun b!106722 () Bool)

(assert (=> b!106722 (= e!69445 e!69446)))

(declare-fun c!18681 () Bool)

(assert (=> b!106722 (= c!18681 (and ((_ is Cons!1592) lt!54136) (not (= (_1!1191 (h!2189 lt!54136)) (_1!1191 (tuple2!2361 lt!53996 lt!53995))))))))

(declare-fun b!106724 () Bool)

(assert (=> b!106724 (= e!69446 None!161)))

(assert (= (and d!29517 c!18680) b!106721))

(assert (= (and d!29517 (not c!18680)) b!106722))

(assert (= (and b!106722 c!18681) b!106723))

(assert (= (and b!106722 (not c!18681)) b!106724))

(declare-fun m!119647 () Bool)

(assert (=> b!106723 m!119647))

(assert (=> d!28907 d!29517))

(declare-fun d!29519 () Bool)

(assert (=> d!29519 (= (getValueByKey!157 lt!54136 (_1!1191 (tuple2!2361 lt!53996 lt!53995))) (Some!162 (_2!1191 (tuple2!2361 lt!53996 lt!53995))))))

(declare-fun lt!54666 () Unit!3212)

(assert (=> d!29519 (= lt!54666 (choose!662 lt!54136 (_1!1191 (tuple2!2361 lt!53996 lt!53995)) (_2!1191 (tuple2!2361 lt!53996 lt!53995))))))

(declare-fun e!69447 () Bool)

(assert (=> d!29519 e!69447))

(declare-fun res!53035 () Bool)

(assert (=> d!29519 (=> (not res!53035) (not e!69447))))

(assert (=> d!29519 (= res!53035 (isStrictlySorted!296 lt!54136))))

(assert (=> d!29519 (= (lemmaContainsTupThenGetReturnValue!73 lt!54136 (_1!1191 (tuple2!2361 lt!53996 lt!53995)) (_2!1191 (tuple2!2361 lt!53996 lt!53995))) lt!54666)))

(declare-fun b!106725 () Bool)

(declare-fun res!53036 () Bool)

(assert (=> b!106725 (=> (not res!53036) (not e!69447))))

(assert (=> b!106725 (= res!53036 (containsKey!160 lt!54136 (_1!1191 (tuple2!2361 lt!53996 lt!53995))))))

(declare-fun b!106726 () Bool)

(assert (=> b!106726 (= e!69447 (contains!816 lt!54136 (tuple2!2361 (_1!1191 (tuple2!2361 lt!53996 lt!53995)) (_2!1191 (tuple2!2361 lt!53996 lt!53995)))))))

(assert (= (and d!29519 res!53035) b!106725))

(assert (= (and b!106725 res!53036) b!106726))

(assert (=> d!29519 m!118005))

(declare-fun m!119649 () Bool)

(assert (=> d!29519 m!119649))

(declare-fun m!119651 () Bool)

(assert (=> d!29519 m!119651))

(declare-fun m!119653 () Bool)

(assert (=> b!106725 m!119653))

(declare-fun m!119655 () Bool)

(assert (=> b!106726 m!119655))

(assert (=> d!28907 d!29519))

(declare-fun bm!11256 () Bool)

(declare-fun call!11261 () List!1596)

(declare-fun call!11260 () List!1596)

(assert (=> bm!11256 (= call!11261 call!11260)))

(declare-fun b!106727 () Bool)

(declare-fun e!69448 () List!1596)

(declare-fun c!18684 () Bool)

(declare-fun c!18682 () Bool)

(assert (=> b!106727 (= e!69448 (ite c!18684 (t!5671 (toList!782 lt!53994)) (ite c!18682 (Cons!1592 (h!2189 (toList!782 lt!53994)) (t!5671 (toList!782 lt!53994))) Nil!1593)))))

(declare-fun b!106728 () Bool)

(declare-fun e!69451 () List!1596)

(assert (=> b!106728 (= e!69451 call!11260)))

(declare-fun b!106730 () Bool)

(assert (=> b!106730 (= c!18682 (and ((_ is Cons!1592) (toList!782 lt!53994)) (bvsgt (_1!1191 (h!2189 (toList!782 lt!53994))) (_1!1191 (tuple2!2361 lt!53996 lt!53995)))))))

(declare-fun e!69450 () List!1596)

(assert (=> b!106730 (= e!69451 e!69450)))

(declare-fun bm!11257 () Bool)

(declare-fun call!11259 () List!1596)

(declare-fun c!18683 () Bool)

(assert (=> bm!11257 (= call!11259 ($colon$colon!80 e!69448 (ite c!18683 (h!2189 (toList!782 lt!53994)) (tuple2!2361 (_1!1191 (tuple2!2361 lt!53996 lt!53995)) (_2!1191 (tuple2!2361 lt!53996 lt!53995))))))))

(declare-fun c!18685 () Bool)

(assert (=> bm!11257 (= c!18685 c!18683)))

(declare-fun b!106731 () Bool)

(assert (=> b!106731 (= e!69450 call!11261)))

(declare-fun b!106732 () Bool)

(assert (=> b!106732 (= e!69450 call!11261)))

(declare-fun b!106733 () Bool)

(declare-fun res!53038 () Bool)

(declare-fun e!69449 () Bool)

(assert (=> b!106733 (=> (not res!53038) (not e!69449))))

(declare-fun lt!54667 () List!1596)

(assert (=> b!106733 (= res!53038 (containsKey!160 lt!54667 (_1!1191 (tuple2!2361 lt!53996 lt!53995))))))

(declare-fun b!106734 () Bool)

(assert (=> b!106734 (= e!69449 (contains!816 lt!54667 (tuple2!2361 (_1!1191 (tuple2!2361 lt!53996 lt!53995)) (_2!1191 (tuple2!2361 lt!53996 lt!53995)))))))

(declare-fun b!106735 () Bool)

(declare-fun e!69452 () List!1596)

(assert (=> b!106735 (= e!69452 e!69451)))

(assert (=> b!106735 (= c!18684 (and ((_ is Cons!1592) (toList!782 lt!53994)) (= (_1!1191 (h!2189 (toList!782 lt!53994))) (_1!1191 (tuple2!2361 lt!53996 lt!53995)))))))

(declare-fun d!29521 () Bool)

(assert (=> d!29521 e!69449))

(declare-fun res!53037 () Bool)

(assert (=> d!29521 (=> (not res!53037) (not e!69449))))

(assert (=> d!29521 (= res!53037 (isStrictlySorted!296 lt!54667))))

(assert (=> d!29521 (= lt!54667 e!69452)))

(assert (=> d!29521 (= c!18683 (and ((_ is Cons!1592) (toList!782 lt!53994)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53994))) (_1!1191 (tuple2!2361 lt!53996 lt!53995)))))))

(assert (=> d!29521 (isStrictlySorted!296 (toList!782 lt!53994))))

(assert (=> d!29521 (= (insertStrictlySorted!76 (toList!782 lt!53994) (_1!1191 (tuple2!2361 lt!53996 lt!53995)) (_2!1191 (tuple2!2361 lt!53996 lt!53995))) lt!54667)))

(declare-fun b!106729 () Bool)

(assert (=> b!106729 (= e!69448 (insertStrictlySorted!76 (t!5671 (toList!782 lt!53994)) (_1!1191 (tuple2!2361 lt!53996 lt!53995)) (_2!1191 (tuple2!2361 lt!53996 lt!53995))))))

(declare-fun bm!11258 () Bool)

(assert (=> bm!11258 (= call!11260 call!11259)))

(declare-fun b!106736 () Bool)

(assert (=> b!106736 (= e!69452 call!11259)))

(assert (= (and d!29521 c!18683) b!106736))

(assert (= (and d!29521 (not c!18683)) b!106735))

(assert (= (and b!106735 c!18684) b!106728))

(assert (= (and b!106735 (not c!18684)) b!106730))

(assert (= (and b!106730 c!18682) b!106732))

(assert (= (and b!106730 (not c!18682)) b!106731))

(assert (= (or b!106732 b!106731) bm!11256))

(assert (= (or b!106728 bm!11256) bm!11258))

(assert (= (or b!106736 bm!11258) bm!11257))

(assert (= (and bm!11257 c!18685) b!106729))

(assert (= (and bm!11257 (not c!18685)) b!106727))

(assert (= (and d!29521 res!53037) b!106733))

(assert (= (and b!106733 res!53038) b!106734))

(declare-fun m!119657 () Bool)

(assert (=> bm!11257 m!119657))

(declare-fun m!119659 () Bool)

(assert (=> d!29521 m!119659))

(declare-fun m!119661 () Bool)

(assert (=> d!29521 m!119661))

(declare-fun m!119663 () Bool)

(assert (=> b!106734 m!119663))

(declare-fun m!119665 () Bool)

(assert (=> b!106733 m!119665))

(declare-fun m!119667 () Bool)

(assert (=> b!106729 m!119667))

(assert (=> d!28907 d!29521))

(declare-fun b!106737 () Bool)

(declare-fun e!69453 () Option!163)

(assert (=> b!106737 (= e!69453 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54263)))))))

(declare-fun d!29523 () Bool)

(declare-fun c!18686 () Bool)

(assert (=> d!29523 (= c!18686 (and ((_ is Cons!1592) (toList!782 lt!54263)) (= (_1!1191 (h!2189 (toList!782 lt!54263))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!29523 (= (getValueByKey!157 (toList!782 lt!54263) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) e!69453)))

(declare-fun b!106739 () Bool)

(declare-fun e!69454 () Option!163)

(assert (=> b!106739 (= e!69454 (getValueByKey!157 (t!5671 (toList!782 lt!54263)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!106738 () Bool)

(assert (=> b!106738 (= e!69453 e!69454)))

(declare-fun c!18687 () Bool)

(assert (=> b!106738 (= c!18687 (and ((_ is Cons!1592) (toList!782 lt!54263)) (not (= (_1!1191 (h!2189 (toList!782 lt!54263))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun b!106740 () Bool)

(assert (=> b!106740 (= e!69454 None!161)))

(assert (= (and d!29523 c!18686) b!106737))

(assert (= (and d!29523 (not c!18686)) b!106738))

(assert (= (and b!106738 c!18687) b!106739))

(assert (= (and b!106738 (not c!18687)) b!106740))

(declare-fun m!119669 () Bool)

(assert (=> b!106739 m!119669))

(assert (=> b!106010 d!29523))

(declare-fun d!29525 () Bool)

(declare-fun e!69455 () Bool)

(assert (=> d!29525 e!69455))

(declare-fun res!53039 () Bool)

(assert (=> d!29525 (=> res!53039 e!69455)))

(declare-fun lt!54669 () Bool)

(assert (=> d!29525 (= res!53039 (not lt!54669))))

(declare-fun lt!54670 () Bool)

(assert (=> d!29525 (= lt!54669 lt!54670)))

(declare-fun lt!54671 () Unit!3212)

(declare-fun e!69456 () Unit!3212)

(assert (=> d!29525 (= lt!54671 e!69456)))

(declare-fun c!18688 () Bool)

(assert (=> d!29525 (= c!18688 lt!54670)))

(assert (=> d!29525 (= lt!54670 (containsKey!160 (toList!782 lt!54173) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29525 (= (contains!814 lt!54173 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54669)))

(declare-fun b!106741 () Bool)

(declare-fun lt!54668 () Unit!3212)

(assert (=> b!106741 (= e!69456 lt!54668)))

(assert (=> b!106741 (= lt!54668 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54173) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106741 (isDefined!109 (getValueByKey!157 (toList!782 lt!54173) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106742 () Bool)

(declare-fun Unit!3269 () Unit!3212)

(assert (=> b!106742 (= e!69456 Unit!3269)))

(declare-fun b!106743 () Bool)

(assert (=> b!106743 (= e!69455 (isDefined!109 (getValueByKey!157 (toList!782 lt!54173) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29525 c!18688) b!106741))

(assert (= (and d!29525 (not c!18688)) b!106742))

(assert (= (and d!29525 (not res!53039)) b!106743))

(declare-fun m!119671 () Bool)

(assert (=> d!29525 m!119671))

(declare-fun m!119673 () Bool)

(assert (=> b!106741 m!119673))

(assert (=> b!106741 m!119469))

(assert (=> b!106741 m!119469))

(declare-fun m!119675 () Bool)

(assert (=> b!106741 m!119675))

(assert (=> b!106743 m!119469))

(assert (=> b!106743 m!119469))

(assert (=> b!106743 m!119675))

(assert (=> bm!11161 d!29525))

(declare-fun d!29527 () Bool)

(declare-fun e!69457 () Bool)

(assert (=> d!29527 e!69457))

(declare-fun res!53040 () Bool)

(assert (=> d!29527 (=> (not res!53040) (not e!69457))))

(declare-fun lt!54673 () ListLongMap!1533)

(assert (=> d!29527 (= res!53040 (contains!814 lt!54673 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun lt!54672 () List!1596)

(assert (=> d!29527 (= lt!54673 (ListLongMap!1534 lt!54672))))

(declare-fun lt!54675 () Unit!3212)

(declare-fun lt!54674 () Unit!3212)

(assert (=> d!29527 (= lt!54675 lt!54674)))

(assert (=> d!29527 (= (getValueByKey!157 lt!54672 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!29527 (= lt!54674 (lemmaContainsTupThenGetReturnValue!73 lt!54672 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!29527 (= lt!54672 (insertStrictlySorted!76 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!29527 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) lt!54673)))

(declare-fun b!106744 () Bool)

(declare-fun res!53041 () Bool)

(assert (=> b!106744 (=> (not res!53041) (not e!69457))))

(assert (=> b!106744 (= res!53041 (= (getValueByKey!157 (toList!782 lt!54673) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!106745 () Bool)

(assert (=> b!106745 (= e!69457 (contains!816 (toList!782 lt!54673) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(assert (= (and d!29527 res!53040) b!106744))

(assert (= (and b!106744 res!53041) b!106745))

(declare-fun m!119677 () Bool)

(assert (=> d!29527 m!119677))

(declare-fun m!119679 () Bool)

(assert (=> d!29527 m!119679))

(declare-fun m!119681 () Bool)

(assert (=> d!29527 m!119681))

(declare-fun m!119683 () Bool)

(assert (=> d!29527 m!119683))

(declare-fun m!119685 () Bool)

(assert (=> b!106744 m!119685))

(declare-fun m!119687 () Bool)

(assert (=> b!106745 m!119687))

(assert (=> b!105736 d!29527))

(assert (=> b!105736 d!28933))

(declare-fun b!106746 () Bool)

(declare-fun e!69461 () Bool)

(declare-fun lt!54692 () ListLongMap!1533)

(assert (=> b!106746 (= e!69461 (= (apply!98 lt!54692 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!106747 () Bool)

(declare-fun e!69470 () Bool)

(assert (=> b!106747 (= e!69470 e!69461)))

(declare-fun res!53042 () Bool)

(declare-fun call!11265 () Bool)

(assert (=> b!106747 (= res!53042 call!11265)))

(assert (=> b!106747 (=> (not res!53042) (not e!69461))))

(declare-fun b!106748 () Bool)

(declare-fun e!69464 () ListLongMap!1533)

(declare-fun call!11267 () ListLongMap!1533)

(assert (=> b!106748 (= e!69464 call!11267)))

(declare-fun b!106749 () Bool)

(declare-fun res!53046 () Bool)

(declare-fun e!69466 () Bool)

(assert (=> b!106749 (=> (not res!53046) (not e!69466))))

(declare-fun e!69460 () Bool)

(assert (=> b!106749 (= res!53046 e!69460)))

(declare-fun res!53049 () Bool)

(assert (=> b!106749 (=> res!53049 e!69460)))

(declare-fun e!69469 () Bool)

(assert (=> b!106749 (= res!53049 (not e!69469))))

(declare-fun res!53043 () Bool)

(assert (=> b!106749 (=> (not res!53043) (not e!69469))))

(assert (=> b!106749 (= res!53043 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106750 () Bool)

(declare-fun e!69465 () Bool)

(declare-fun e!69462 () Bool)

(assert (=> b!106750 (= e!69465 e!69462)))

(declare-fun res!53050 () Bool)

(declare-fun call!11268 () Bool)

(assert (=> b!106750 (= res!53050 call!11268)))

(assert (=> b!106750 (=> (not res!53050) (not e!69462))))

(declare-fun b!106752 () Bool)

(declare-fun res!53047 () Bool)

(assert (=> b!106752 (=> (not res!53047) (not e!69466))))

(assert (=> b!106752 (= res!53047 e!69465)))

(declare-fun c!18690 () Bool)

(assert (=> b!106752 (= c!18690 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106753 () Bool)

(declare-fun e!69467 () Bool)

(assert (=> b!106753 (= e!69467 (= (apply!98 lt!54692 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106753 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))))))

(assert (=> b!106753 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!106754 () Bool)

(declare-fun call!11263 () ListLongMap!1533)

(assert (=> b!106754 (= e!69464 call!11263)))

(declare-fun b!106755 () Bool)

(declare-fun e!69458 () Unit!3212)

(declare-fun Unit!3270 () Unit!3212)

(assert (=> b!106755 (= e!69458 Unit!3270)))

(declare-fun b!106756 () Bool)

(assert (=> b!106756 (= e!69470 (not call!11265))))

(declare-fun b!106757 () Bool)

(assert (=> b!106757 (= e!69465 (not call!11268))))

(declare-fun b!106758 () Bool)

(declare-fun e!69468 () ListLongMap!1533)

(declare-fun e!69459 () ListLongMap!1533)

(assert (=> b!106758 (= e!69468 e!69459)))

(declare-fun c!18689 () Bool)

(assert (=> b!106758 (= c!18689 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11259 () Bool)

(declare-fun call!11266 () ListLongMap!1533)

(declare-fun call!11264 () ListLongMap!1533)

(assert (=> bm!11259 (= call!11266 call!11264)))

(declare-fun bm!11260 () Bool)

(assert (=> bm!11260 (= call!11268 (contains!814 lt!54692 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106759 () Bool)

(assert (=> b!106759 (= e!69466 e!69470)))

(declare-fun c!18694 () Bool)

(assert (=> b!106759 (= c!18694 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!29529 () Bool)

(assert (=> d!29529 e!69466))

(declare-fun res!53044 () Bool)

(assert (=> d!29529 (=> (not res!53044) (not e!69466))))

(assert (=> d!29529 (= res!53044 (or (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))))

(declare-fun lt!54682 () ListLongMap!1533)

(assert (=> d!29529 (= lt!54692 lt!54682)))

(declare-fun lt!54684 () Unit!3212)

(assert (=> d!29529 (= lt!54684 e!69458)))

(declare-fun c!18692 () Bool)

(declare-fun e!69463 () Bool)

(assert (=> d!29529 (= c!18692 e!69463)))

(declare-fun res!53048 () Bool)

(assert (=> d!29529 (=> (not res!53048) (not e!69463))))

(assert (=> d!29529 (= res!53048 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29529 (= lt!54682 e!69468)))

(declare-fun c!18693 () Bool)

(assert (=> d!29529 (= c!18693 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29529 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29529 (= (getCurrentListMap!469 (_keys!4287 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54692)))

(declare-fun b!106751 () Bool)

(declare-fun call!11262 () ListLongMap!1533)

(assert (=> b!106751 (= e!69468 (+!139 call!11262 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun bm!11261 () Bool)

(assert (=> bm!11261 (= call!11265 (contains!814 lt!54692 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106760 () Bool)

(assert (=> b!106760 (= e!69462 (= (apply!98 lt!54692 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!106761 () Bool)

(assert (=> b!106761 (= e!69459 call!11267)))

(declare-fun b!106762 () Bool)

(assert (=> b!106762 (= e!69469 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11262 () Bool)

(assert (=> bm!11262 (= call!11263 call!11266)))

(declare-fun bm!11263 () Bool)

(assert (=> bm!11263 (= call!11267 call!11262)))

(declare-fun b!106763 () Bool)

(declare-fun c!18691 () Bool)

(assert (=> b!106763 (= c!18691 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106763 (= e!69459 e!69464)))

(declare-fun bm!11264 () Bool)

(assert (=> bm!11264 (= call!11262 (+!139 (ite c!18693 call!11264 (ite c!18689 call!11266 call!11263)) (ite (or c!18693 c!18689) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun b!106764 () Bool)

(declare-fun lt!54690 () Unit!3212)

(assert (=> b!106764 (= e!69458 lt!54690)))

(declare-fun lt!54677 () ListLongMap!1533)

(assert (=> b!106764 (= lt!54677 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54691 () (_ BitVec 64))

(assert (=> b!106764 (= lt!54691 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54678 () (_ BitVec 64))

(assert (=> b!106764 (= lt!54678 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54696 () Unit!3212)

(assert (=> b!106764 (= lt!54696 (addStillContains!74 lt!54677 lt!54691 (zeroValue!2456 newMap!16) lt!54678))))

(assert (=> b!106764 (contains!814 (+!139 lt!54677 (tuple2!2361 lt!54691 (zeroValue!2456 newMap!16))) lt!54678)))

(declare-fun lt!54689 () Unit!3212)

(assert (=> b!106764 (= lt!54689 lt!54696)))

(declare-fun lt!54685 () ListLongMap!1533)

(assert (=> b!106764 (= lt!54685 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54676 () (_ BitVec 64))

(assert (=> b!106764 (= lt!54676 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54686 () (_ BitVec 64))

(assert (=> b!106764 (= lt!54686 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54693 () Unit!3212)

(assert (=> b!106764 (= lt!54693 (addApplyDifferent!74 lt!54685 lt!54676 (minValue!2456 newMap!16) lt!54686))))

(assert (=> b!106764 (= (apply!98 (+!139 lt!54685 (tuple2!2361 lt!54676 (minValue!2456 newMap!16))) lt!54686) (apply!98 lt!54685 lt!54686))))

(declare-fun lt!54680 () Unit!3212)

(assert (=> b!106764 (= lt!54680 lt!54693)))

(declare-fun lt!54688 () ListLongMap!1533)

(assert (=> b!106764 (= lt!54688 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54697 () (_ BitVec 64))

(assert (=> b!106764 (= lt!54697 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54683 () (_ BitVec 64))

(assert (=> b!106764 (= lt!54683 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54679 () Unit!3212)

(assert (=> b!106764 (= lt!54679 (addApplyDifferent!74 lt!54688 lt!54697 (zeroValue!2456 newMap!16) lt!54683))))

(assert (=> b!106764 (= (apply!98 (+!139 lt!54688 (tuple2!2361 lt!54697 (zeroValue!2456 newMap!16))) lt!54683) (apply!98 lt!54688 lt!54683))))

(declare-fun lt!54694 () Unit!3212)

(assert (=> b!106764 (= lt!54694 lt!54679)))

(declare-fun lt!54687 () ListLongMap!1533)

(assert (=> b!106764 (= lt!54687 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54681 () (_ BitVec 64))

(assert (=> b!106764 (= lt!54681 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54695 () (_ BitVec 64))

(assert (=> b!106764 (= lt!54695 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106764 (= lt!54690 (addApplyDifferent!74 lt!54687 lt!54681 (minValue!2456 newMap!16) lt!54695))))

(assert (=> b!106764 (= (apply!98 (+!139 lt!54687 (tuple2!2361 lt!54681 (minValue!2456 newMap!16))) lt!54695) (apply!98 lt!54687 lt!54695))))

(declare-fun b!106765 () Bool)

(assert (=> b!106765 (= e!69463 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11265 () Bool)

(assert (=> bm!11265 (= call!11264 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!106766 () Bool)

(assert (=> b!106766 (= e!69460 e!69467)))

(declare-fun res!53045 () Bool)

(assert (=> b!106766 (=> (not res!53045) (not e!69467))))

(assert (=> b!106766 (= res!53045 (contains!814 lt!54692 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106766 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!29529 c!18693) b!106751))

(assert (= (and d!29529 (not c!18693)) b!106758))

(assert (= (and b!106758 c!18689) b!106761))

(assert (= (and b!106758 (not c!18689)) b!106763))

(assert (= (and b!106763 c!18691) b!106748))

(assert (= (and b!106763 (not c!18691)) b!106754))

(assert (= (or b!106748 b!106754) bm!11262))

(assert (= (or b!106761 bm!11262) bm!11259))

(assert (= (or b!106761 b!106748) bm!11263))

(assert (= (or b!106751 bm!11259) bm!11265))

(assert (= (or b!106751 bm!11263) bm!11264))

(assert (= (and d!29529 res!53048) b!106765))

(assert (= (and d!29529 c!18692) b!106764))

(assert (= (and d!29529 (not c!18692)) b!106755))

(assert (= (and d!29529 res!53044) b!106749))

(assert (= (and b!106749 res!53043) b!106762))

(assert (= (and b!106749 (not res!53049)) b!106766))

(assert (= (and b!106766 res!53045) b!106753))

(assert (= (and b!106749 res!53046) b!106752))

(assert (= (and b!106752 c!18690) b!106750))

(assert (= (and b!106752 (not c!18690)) b!106757))

(assert (= (and b!106750 res!53050) b!106760))

(assert (= (or b!106750 b!106757) bm!11260))

(assert (= (and b!106752 res!53047) b!106759))

(assert (= (and b!106759 c!18694) b!106747))

(assert (= (and b!106759 (not c!18694)) b!106756))

(assert (= (and b!106747 res!53042) b!106746))

(assert (= (or b!106747 b!106756) bm!11261))

(declare-fun b_lambda!4771 () Bool)

(assert (=> (not b_lambda!4771) (not b!106753)))

(assert (=> b!106753 t!5683))

(declare-fun b_and!6585 () Bool)

(assert (= b_and!6581 (and (=> t!5683 result!3459) b_and!6585)))

(assert (=> b!106753 t!5685))

(declare-fun b_and!6587 () Bool)

(assert (= b_and!6583 (and (=> t!5685 result!3461) b_and!6587)))

(declare-fun m!119689 () Bool)

(assert (=> b!106753 m!119689))

(assert (=> b!106753 m!117653))

(declare-fun m!119691 () Bool)

(assert (=> b!106753 m!119691))

(assert (=> b!106753 m!119689))

(assert (=> b!106753 m!117653))

(assert (=> b!106753 m!117657))

(declare-fun m!119693 () Bool)

(assert (=> b!106753 m!119693))

(assert (=> b!106753 m!117657))

(assert (=> d!29529 m!117661))

(assert (=> b!106762 m!117657))

(assert (=> b!106762 m!117657))

(assert (=> b!106762 m!117663))

(declare-fun m!119695 () Bool)

(assert (=> bm!11264 m!119695))

(declare-fun m!119697 () Bool)

(assert (=> bm!11265 m!119697))

(assert (=> b!106765 m!117657))

(assert (=> b!106765 m!117657))

(assert (=> b!106765 m!117663))

(declare-fun m!119699 () Bool)

(assert (=> b!106760 m!119699))

(declare-fun m!119701 () Bool)

(assert (=> bm!11260 m!119701))

(declare-fun m!119703 () Bool)

(assert (=> b!106764 m!119703))

(declare-fun m!119705 () Bool)

(assert (=> b!106764 m!119705))

(declare-fun m!119707 () Bool)

(assert (=> b!106764 m!119707))

(declare-fun m!119709 () Bool)

(assert (=> b!106764 m!119709))

(assert (=> b!106764 m!119697))

(declare-fun m!119711 () Bool)

(assert (=> b!106764 m!119711))

(declare-fun m!119713 () Bool)

(assert (=> b!106764 m!119713))

(declare-fun m!119715 () Bool)

(assert (=> b!106764 m!119715))

(declare-fun m!119717 () Bool)

(assert (=> b!106764 m!119717))

(assert (=> b!106764 m!119713))

(assert (=> b!106764 m!119717))

(declare-fun m!119719 () Bool)

(assert (=> b!106764 m!119719))

(declare-fun m!119721 () Bool)

(assert (=> b!106764 m!119721))

(declare-fun m!119723 () Bool)

(assert (=> b!106764 m!119723))

(assert (=> b!106764 m!117657))

(declare-fun m!119725 () Bool)

(assert (=> b!106764 m!119725))

(declare-fun m!119727 () Bool)

(assert (=> b!106764 m!119727))

(assert (=> b!106764 m!119711))

(declare-fun m!119729 () Bool)

(assert (=> b!106764 m!119729))

(assert (=> b!106764 m!119705))

(declare-fun m!119731 () Bool)

(assert (=> b!106764 m!119731))

(assert (=> b!106766 m!117657))

(assert (=> b!106766 m!117657))

(declare-fun m!119733 () Bool)

(assert (=> b!106766 m!119733))

(declare-fun m!119735 () Bool)

(assert (=> b!106751 m!119735))

(declare-fun m!119737 () Bool)

(assert (=> b!106746 m!119737))

(declare-fun m!119739 () Bool)

(assert (=> bm!11261 m!119739))

(assert (=> b!105736 d!29529))

(declare-fun d!29531 () Bool)

(declare-fun res!53051 () Bool)

(declare-fun e!69471 () Bool)

(assert (=> d!29531 (=> res!53051 e!69471)))

(assert (=> d!29531 (= res!53051 (and ((_ is Cons!1592) (toList!782 call!11106)) (= (_1!1191 (h!2189 (toList!782 call!11106))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29531 (= (containsKey!160 (toList!782 call!11106) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69471)))

(declare-fun b!106767 () Bool)

(declare-fun e!69472 () Bool)

(assert (=> b!106767 (= e!69471 e!69472)))

(declare-fun res!53052 () Bool)

(assert (=> b!106767 (=> (not res!53052) (not e!69472))))

(assert (=> b!106767 (= res!53052 (and (or (not ((_ is Cons!1592) (toList!782 call!11106))) (bvsle (_1!1191 (h!2189 (toList!782 call!11106))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))) ((_ is Cons!1592) (toList!782 call!11106)) (bvslt (_1!1191 (h!2189 (toList!782 call!11106))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(declare-fun b!106768 () Bool)

(assert (=> b!106768 (= e!69472 (containsKey!160 (t!5671 (toList!782 call!11106)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29531 (not res!53051)) b!106767))

(assert (= (and b!106767 res!53052) b!106768))

(assert (=> b!106768 m!117261))

(declare-fun m!119741 () Bool)

(assert (=> b!106768 m!119741))

(assert (=> d!28963 d!29531))

(declare-fun b!106769 () Bool)

(declare-fun e!69473 () Option!163)

(assert (=> b!106769 (= e!69473 (Some!162 (_2!1191 (h!2189 (t!5671 lt!53998)))))))

(declare-fun d!29533 () Bool)

(declare-fun c!18695 () Bool)

(assert (=> d!29533 (= c!18695 (and ((_ is Cons!1592) (t!5671 lt!53998)) (= (_1!1191 (h!2189 (t!5671 lt!53998))) (_1!1191 lt!53718))))))

(assert (=> d!29533 (= (getValueByKey!157 (t!5671 lt!53998) (_1!1191 lt!53718)) e!69473)))

(declare-fun b!106771 () Bool)

(declare-fun e!69474 () Option!163)

(assert (=> b!106771 (= e!69474 (getValueByKey!157 (t!5671 (t!5671 lt!53998)) (_1!1191 lt!53718)))))

(declare-fun b!106770 () Bool)

(assert (=> b!106770 (= e!69473 e!69474)))

(declare-fun c!18696 () Bool)

(assert (=> b!106770 (= c!18696 (and ((_ is Cons!1592) (t!5671 lt!53998)) (not (= (_1!1191 (h!2189 (t!5671 lt!53998))) (_1!1191 lt!53718)))))))

(declare-fun b!106772 () Bool)

(assert (=> b!106772 (= e!69474 None!161)))

(assert (= (and d!29533 c!18695) b!106769))

(assert (= (and d!29533 (not c!18695)) b!106770))

(assert (= (and b!106770 c!18696) b!106771))

(assert (= (and b!106770 (not c!18696)) b!106772))

(declare-fun m!119743 () Bool)

(assert (=> b!106771 m!119743))

(assert (=> b!105804 d!29533))

(declare-fun d!29535 () Bool)

(assert (=> d!29535 (= (get!1337 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105727 d!29535))

(declare-fun b!106791 () Bool)

(declare-fun e!69487 () Bool)

(declare-fun lt!54703 () SeekEntryResult!253)

(assert (=> b!106791 (= e!69487 (bvsge (x!13639 lt!54703) #b01111111111111111111111111111110))))

(declare-fun b!106792 () Bool)

(assert (=> b!106792 (and (bvsge (index!3162 lt!54703) #b00000000000000000000000000000000) (bvslt (index!3162 lt!54703) (size!2309 (_keys!4287 newMap!16))))))

(declare-fun res!53059 () Bool)

(assert (=> b!106792 (= res!53059 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3162 lt!54703)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69486 () Bool)

(assert (=> b!106792 (=> res!53059 e!69486)))

(declare-fun e!69485 () SeekEntryResult!253)

(declare-fun b!106793 () Bool)

(assert (=> b!106793 (= e!69485 (Intermediate!253 false (toIndex!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6727 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!29537 () Bool)

(assert (=> d!29537 e!69487))

(declare-fun c!18703 () Bool)

(assert (=> d!29537 (= c!18703 (and ((_ is Intermediate!253) lt!54703) (undefined!1065 lt!54703)))))

(declare-fun e!69488 () SeekEntryResult!253)

(assert (=> d!29537 (= lt!54703 e!69488)))

(declare-fun c!18704 () Bool)

(assert (=> d!29537 (= c!18704 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!54702 () (_ BitVec 64))

(assert (=> d!29537 (= lt!54702 (select (arr!2054 (_keys!4287 newMap!16)) (toIndex!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6727 newMap!16))))))

(assert (=> d!29537 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29537 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6727 newMap!16)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)) lt!54703)))

(declare-fun b!106794 () Bool)

(assert (=> b!106794 (and (bvsge (index!3162 lt!54703) #b00000000000000000000000000000000) (bvslt (index!3162 lt!54703) (size!2309 (_keys!4287 newMap!16))))))

(assert (=> b!106794 (= e!69486 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3162 lt!54703)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106795 () Bool)

(assert (=> b!106795 (= e!69488 (Intermediate!253 true (toIndex!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6727 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!106796 () Bool)

(assert (=> b!106796 (and (bvsge (index!3162 lt!54703) #b00000000000000000000000000000000) (bvslt (index!3162 lt!54703) (size!2309 (_keys!4287 newMap!16))))))

(declare-fun res!53061 () Bool)

(assert (=> b!106796 (= res!53061 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3162 lt!54703)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!106796 (=> res!53061 e!69486)))

(declare-fun e!69489 () Bool)

(assert (=> b!106796 (= e!69489 e!69486)))

(declare-fun b!106797 () Bool)

(assert (=> b!106797 (= e!69488 e!69485)))

(declare-fun c!18705 () Bool)

(assert (=> b!106797 (= c!18705 (or (= lt!54702 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (= (bvadd lt!54702 lt!54702) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106798 () Bool)

(assert (=> b!106798 (= e!69487 e!69489)))

(declare-fun res!53060 () Bool)

(assert (=> b!106798 (= res!53060 (and ((_ is Intermediate!253) lt!54703) (not (undefined!1065 lt!54703)) (bvslt (x!13639 lt!54703) #b01111111111111111111111111111110) (bvsge (x!13639 lt!54703) #b00000000000000000000000000000000) (bvsge (x!13639 lt!54703) #b00000000000000000000000000000000)))))

(assert (=> b!106798 (=> (not res!53060) (not e!69489))))

(declare-fun b!106799 () Bool)

(assert (=> b!106799 (= e!69485 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6727 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6727 newMap!16)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(assert (= (and d!29537 c!18704) b!106795))

(assert (= (and d!29537 (not c!18704)) b!106797))

(assert (= (and b!106797 c!18705) b!106793))

(assert (= (and b!106797 (not c!18705)) b!106799))

(assert (= (and d!29537 c!18703) b!106791))

(assert (= (and d!29537 (not c!18703)) b!106798))

(assert (= (and b!106798 res!53060) b!106796))

(assert (= (and b!106796 (not res!53061)) b!106792))

(assert (= (and b!106792 (not res!53059)) b!106794))

(declare-fun m!119745 () Bool)

(assert (=> b!106796 m!119745))

(assert (=> b!106799 m!118217))

(declare-fun m!119747 () Bool)

(assert (=> b!106799 m!119747))

(assert (=> b!106799 m!119747))

(assert (=> b!106799 m!117261))

(declare-fun m!119749 () Bool)

(assert (=> b!106799 m!119749))

(assert (=> d!29537 m!118217))

(declare-fun m!119751 () Bool)

(assert (=> d!29537 m!119751))

(assert (=> d!29537 m!117661))

(assert (=> b!106794 m!119745))

(assert (=> b!106792 m!119745))

(assert (=> d!28967 d!29537))

(declare-fun d!29539 () Bool)

(declare-fun lt!54709 () (_ BitVec 32))

(declare-fun lt!54708 () (_ BitVec 32))

(assert (=> d!29539 (= lt!54709 (bvmul (bvxor lt!54708 (bvlshr lt!54708 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!29539 (= lt!54708 ((_ extract 31 0) (bvand (bvxor (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvlshr (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!29539 (and (bvsge (mask!6727 newMap!16) #b00000000000000000000000000000000) (let ((res!53062 (let ((h!2192 ((_ extract 31 0) (bvand (bvxor (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvlshr (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13742 (bvmul (bvxor h!2192 (bvlshr h!2192 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13742 (bvlshr x!13742 #b00000000000000000000000000001101)) (mask!6727 newMap!16)))))) (and (bvslt res!53062 (bvadd (mask!6727 newMap!16) #b00000000000000000000000000000001)) (bvsge res!53062 #b00000000000000000000000000000000))))))

(assert (=> d!29539 (= (toIndex!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6727 newMap!16)) (bvand (bvxor lt!54709 (bvlshr lt!54709 #b00000000000000000000000000001101)) (mask!6727 newMap!16)))))

(assert (=> d!28967 d!29539))

(assert (=> d!28967 d!29089))

(declare-fun d!29541 () Bool)

(assert (=> d!29541 (= ($colon$colon!80 e!68876 (ite c!18414 (h!2189 (toList!782 lt!53714)) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718)))) (Cons!1592 (ite c!18414 (h!2189 (toList!782 lt!53714)) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))) e!68876))))

(assert (=> bm!11157 d!29541))

(declare-fun d!29543 () Bool)

(assert (=> d!29543 (= (apply!98 lt!54030 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1338 (getValueByKey!157 (toList!782 lt!54030) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4410 () Bool)

(assert (= bs!4410 d!29543))

(declare-fun m!119753 () Bool)

(assert (=> bs!4410 m!119753))

(assert (=> bs!4410 m!119753))

(declare-fun m!119755 () Bool)

(assert (=> bs!4410 m!119755))

(assert (=> b!105612 d!29543))

(declare-fun d!29545 () Bool)

(assert (=> d!29545 (isDefined!109 (getValueByKey!157 (toList!782 lt!53974) (_1!1191 lt!53713)))))

(declare-fun lt!54710 () Unit!3212)

(assert (=> d!29545 (= lt!54710 (choose!669 (toList!782 lt!53974) (_1!1191 lt!53713)))))

(declare-fun e!69490 () Bool)

(assert (=> d!29545 e!69490))

(declare-fun res!53063 () Bool)

(assert (=> d!29545 (=> (not res!53063) (not e!69490))))

(assert (=> d!29545 (= res!53063 (isStrictlySorted!296 (toList!782 lt!53974)))))

(assert (=> d!29545 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53974) (_1!1191 lt!53713)) lt!54710)))

(declare-fun b!106800 () Bool)

(assert (=> b!106800 (= e!69490 (containsKey!160 (toList!782 lt!53974) (_1!1191 lt!53713)))))

(assert (= (and d!29545 res!53063) b!106800))

(assert (=> d!29545 m!117591))

(assert (=> d!29545 m!117591))

(assert (=> d!29545 m!118165))

(declare-fun m!119757 () Bool)

(assert (=> d!29545 m!119757))

(declare-fun m!119759 () Bool)

(assert (=> d!29545 m!119759))

(assert (=> b!106800 m!118161))

(assert (=> b!105875 d!29545))

(assert (=> b!105875 d!29357))

(assert (=> b!105875 d!28937))

(declare-fun b!106801 () Bool)

(declare-fun e!69494 () Bool)

(declare-fun lt!54727 () ListLongMap!1533)

(assert (=> b!106801 (= e!69494 (= (apply!98 lt!54727 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 (_2!1192 lt!53868))))))

(declare-fun b!106802 () Bool)

(declare-fun e!69503 () Bool)

(assert (=> b!106802 (= e!69503 e!69494)))

(declare-fun res!53064 () Bool)

(declare-fun call!11272 () Bool)

(assert (=> b!106802 (= res!53064 call!11272)))

(assert (=> b!106802 (=> (not res!53064) (not e!69494))))

(declare-fun b!106803 () Bool)

(declare-fun e!69497 () ListLongMap!1533)

(declare-fun call!11274 () ListLongMap!1533)

(assert (=> b!106803 (= e!69497 call!11274)))

(declare-fun b!106804 () Bool)

(declare-fun res!53068 () Bool)

(declare-fun e!69499 () Bool)

(assert (=> b!106804 (=> (not res!53068) (not e!69499))))

(declare-fun e!69493 () Bool)

(assert (=> b!106804 (= res!53068 e!69493)))

(declare-fun res!53071 () Bool)

(assert (=> b!106804 (=> res!53071 e!69493)))

(declare-fun e!69502 () Bool)

(assert (=> b!106804 (= res!53071 (not e!69502))))

(declare-fun res!53065 () Bool)

(assert (=> b!106804 (=> (not res!53065) (not e!69502))))

(assert (=> b!106804 (= res!53065 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))))))

(declare-fun b!106805 () Bool)

(declare-fun e!69498 () Bool)

(declare-fun e!69495 () Bool)

(assert (=> b!106805 (= e!69498 e!69495)))

(declare-fun res!53072 () Bool)

(declare-fun call!11275 () Bool)

(assert (=> b!106805 (= res!53072 call!11275)))

(assert (=> b!106805 (=> (not res!53072) (not e!69495))))

(declare-fun b!106807 () Bool)

(declare-fun res!53069 () Bool)

(assert (=> b!106807 (=> (not res!53069) (not e!69499))))

(assert (=> b!106807 (= res!53069 e!69498)))

(declare-fun c!18707 () Bool)

(assert (=> b!106807 (= c!18707 (not (= (bvand (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106808 () Bool)

(declare-fun e!69500 () Bool)

(assert (=> b!106808 (= e!69500 (= (apply!98 lt!54727 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (_values!2564 (_2!1192 lt!53868))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 (_2!1192 lt!53868)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106808 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_values!2564 (_2!1192 lt!53868)))))))

(assert (=> b!106808 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))))))

(declare-fun b!106809 () Bool)

(declare-fun call!11270 () ListLongMap!1533)

(assert (=> b!106809 (= e!69497 call!11270)))

(declare-fun b!106810 () Bool)

(declare-fun e!69491 () Unit!3212)

(declare-fun Unit!3271 () Unit!3212)

(assert (=> b!106810 (= e!69491 Unit!3271)))

(declare-fun b!106811 () Bool)

(assert (=> b!106811 (= e!69503 (not call!11272))))

(declare-fun b!106812 () Bool)

(assert (=> b!106812 (= e!69498 (not call!11275))))

(declare-fun b!106813 () Bool)

(declare-fun e!69501 () ListLongMap!1533)

(declare-fun e!69492 () ListLongMap!1533)

(assert (=> b!106813 (= e!69501 e!69492)))

(declare-fun c!18706 () Bool)

(assert (=> b!106813 (= c!18706 (and (not (= (bvand (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11266 () Bool)

(declare-fun call!11273 () ListLongMap!1533)

(declare-fun call!11271 () ListLongMap!1533)

(assert (=> bm!11266 (= call!11273 call!11271)))

(declare-fun bm!11267 () Bool)

(assert (=> bm!11267 (= call!11275 (contains!814 lt!54727 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106814 () Bool)

(assert (=> b!106814 (= e!69499 e!69503)))

(declare-fun c!18711 () Bool)

(assert (=> b!106814 (= c!18711 (not (= (bvand (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!29547 () Bool)

(assert (=> d!29547 e!69499))

(declare-fun res!53066 () Bool)

(assert (=> d!29547 (=> (not res!53066) (not e!69499))))

(assert (=> d!29547 (= res!53066 (or (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))))))))

(declare-fun lt!54717 () ListLongMap!1533)

(assert (=> d!29547 (= lt!54727 lt!54717)))

(declare-fun lt!54719 () Unit!3212)

(assert (=> d!29547 (= lt!54719 e!69491)))

(declare-fun c!18709 () Bool)

(declare-fun e!69496 () Bool)

(assert (=> d!29547 (= c!18709 e!69496)))

(declare-fun res!53070 () Bool)

(assert (=> d!29547 (=> (not res!53070) (not e!69496))))

(assert (=> d!29547 (= res!53070 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))))))

(assert (=> d!29547 (= lt!54717 e!69501)))

(declare-fun c!18710 () Bool)

(assert (=> d!29547 (= c!18710 (and (not (= (bvand (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29547 (validMask!0 (mask!6727 (_2!1192 lt!53868)))))

(assert (=> d!29547 (= (getCurrentListMap!469 (_keys!4287 (_2!1192 lt!53868)) (_values!2564 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868)) (extraKeys!2386 (_2!1192 lt!53868)) (zeroValue!2456 (_2!1192 lt!53868)) (minValue!2456 (_2!1192 lt!53868)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1192 lt!53868))) lt!54727)))

(declare-fun b!106806 () Bool)

(declare-fun call!11269 () ListLongMap!1533)

(assert (=> b!106806 (= e!69501 (+!139 call!11269 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (_2!1192 lt!53868)))))))

(declare-fun bm!11268 () Bool)

(assert (=> bm!11268 (= call!11272 (contains!814 lt!54727 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106815 () Bool)

(assert (=> b!106815 (= e!69495 (= (apply!98 lt!54727 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 (_2!1192 lt!53868))))))

(declare-fun b!106816 () Bool)

(assert (=> b!106816 (= e!69492 call!11274)))

(declare-fun b!106817 () Bool)

(assert (=> b!106817 (= e!69502 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000)))))

(declare-fun bm!11269 () Bool)

(assert (=> bm!11269 (= call!11270 call!11273)))

(declare-fun bm!11270 () Bool)

(assert (=> bm!11270 (= call!11274 call!11269)))

(declare-fun b!106818 () Bool)

(declare-fun c!18708 () Bool)

(assert (=> b!106818 (= c!18708 (and (not (= (bvand (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106818 (= e!69492 e!69497)))

(declare-fun bm!11271 () Bool)

(assert (=> bm!11271 (= call!11269 (+!139 (ite c!18710 call!11271 (ite c!18706 call!11273 call!11270)) (ite (or c!18710 c!18706) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (_2!1192 lt!53868))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (_2!1192 lt!53868))))))))

(declare-fun b!106819 () Bool)

(declare-fun lt!54725 () Unit!3212)

(assert (=> b!106819 (= e!69491 lt!54725)))

(declare-fun lt!54712 () ListLongMap!1533)

(assert (=> b!106819 (= lt!54712 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (_2!1192 lt!53868)) (_values!2564 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868)) (extraKeys!2386 (_2!1192 lt!53868)) (zeroValue!2456 (_2!1192 lt!53868)) (minValue!2456 (_2!1192 lt!53868)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1192 lt!53868))))))

(declare-fun lt!54726 () (_ BitVec 64))

(assert (=> b!106819 (= lt!54726 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54713 () (_ BitVec 64))

(assert (=> b!106819 (= lt!54713 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000))))

(declare-fun lt!54731 () Unit!3212)

(assert (=> b!106819 (= lt!54731 (addStillContains!74 lt!54712 lt!54726 (zeroValue!2456 (_2!1192 lt!53868)) lt!54713))))

(assert (=> b!106819 (contains!814 (+!139 lt!54712 (tuple2!2361 lt!54726 (zeroValue!2456 (_2!1192 lt!53868)))) lt!54713)))

(declare-fun lt!54724 () Unit!3212)

(assert (=> b!106819 (= lt!54724 lt!54731)))

(declare-fun lt!54720 () ListLongMap!1533)

(assert (=> b!106819 (= lt!54720 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (_2!1192 lt!53868)) (_values!2564 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868)) (extraKeys!2386 (_2!1192 lt!53868)) (zeroValue!2456 (_2!1192 lt!53868)) (minValue!2456 (_2!1192 lt!53868)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1192 lt!53868))))))

(declare-fun lt!54711 () (_ BitVec 64))

(assert (=> b!106819 (= lt!54711 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54721 () (_ BitVec 64))

(assert (=> b!106819 (= lt!54721 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000))))

(declare-fun lt!54728 () Unit!3212)

(assert (=> b!106819 (= lt!54728 (addApplyDifferent!74 lt!54720 lt!54711 (minValue!2456 (_2!1192 lt!53868)) lt!54721))))

(assert (=> b!106819 (= (apply!98 (+!139 lt!54720 (tuple2!2361 lt!54711 (minValue!2456 (_2!1192 lt!53868)))) lt!54721) (apply!98 lt!54720 lt!54721))))

(declare-fun lt!54715 () Unit!3212)

(assert (=> b!106819 (= lt!54715 lt!54728)))

(declare-fun lt!54723 () ListLongMap!1533)

(assert (=> b!106819 (= lt!54723 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (_2!1192 lt!53868)) (_values!2564 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868)) (extraKeys!2386 (_2!1192 lt!53868)) (zeroValue!2456 (_2!1192 lt!53868)) (minValue!2456 (_2!1192 lt!53868)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1192 lt!53868))))))

(declare-fun lt!54732 () (_ BitVec 64))

(assert (=> b!106819 (= lt!54732 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54718 () (_ BitVec 64))

(assert (=> b!106819 (= lt!54718 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000))))

(declare-fun lt!54714 () Unit!3212)

(assert (=> b!106819 (= lt!54714 (addApplyDifferent!74 lt!54723 lt!54732 (zeroValue!2456 (_2!1192 lt!53868)) lt!54718))))

(assert (=> b!106819 (= (apply!98 (+!139 lt!54723 (tuple2!2361 lt!54732 (zeroValue!2456 (_2!1192 lt!53868)))) lt!54718) (apply!98 lt!54723 lt!54718))))

(declare-fun lt!54729 () Unit!3212)

(assert (=> b!106819 (= lt!54729 lt!54714)))

(declare-fun lt!54722 () ListLongMap!1533)

(assert (=> b!106819 (= lt!54722 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (_2!1192 lt!53868)) (_values!2564 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868)) (extraKeys!2386 (_2!1192 lt!53868)) (zeroValue!2456 (_2!1192 lt!53868)) (minValue!2456 (_2!1192 lt!53868)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1192 lt!53868))))))

(declare-fun lt!54716 () (_ BitVec 64))

(assert (=> b!106819 (= lt!54716 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54730 () (_ BitVec 64))

(assert (=> b!106819 (= lt!54730 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000))))

(assert (=> b!106819 (= lt!54725 (addApplyDifferent!74 lt!54722 lt!54716 (minValue!2456 (_2!1192 lt!53868)) lt!54730))))

(assert (=> b!106819 (= (apply!98 (+!139 lt!54722 (tuple2!2361 lt!54716 (minValue!2456 (_2!1192 lt!53868)))) lt!54730) (apply!98 lt!54722 lt!54730))))

(declare-fun b!106820 () Bool)

(assert (=> b!106820 (= e!69496 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000)))))

(declare-fun bm!11272 () Bool)

(assert (=> bm!11272 (= call!11271 (getCurrentListMapNoExtraKeys!106 (_keys!4287 (_2!1192 lt!53868)) (_values!2564 (_2!1192 lt!53868)) (mask!6727 (_2!1192 lt!53868)) (extraKeys!2386 (_2!1192 lt!53868)) (zeroValue!2456 (_2!1192 lt!53868)) (minValue!2456 (_2!1192 lt!53868)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1192 lt!53868))))))

(declare-fun b!106821 () Bool)

(assert (=> b!106821 (= e!69493 e!69500)))

(declare-fun res!53067 () Bool)

(assert (=> b!106821 (=> (not res!53067) (not e!69500))))

(assert (=> b!106821 (= res!53067 (contains!814 lt!54727 (select (arr!2054 (_keys!4287 (_2!1192 lt!53868))) #b00000000000000000000000000000000)))))

(assert (=> b!106821 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!53868)))))))

(assert (= (and d!29547 c!18710) b!106806))

(assert (= (and d!29547 (not c!18710)) b!106813))

(assert (= (and b!106813 c!18706) b!106816))

(assert (= (and b!106813 (not c!18706)) b!106818))

(assert (= (and b!106818 c!18708) b!106803))

(assert (= (and b!106818 (not c!18708)) b!106809))

(assert (= (or b!106803 b!106809) bm!11269))

(assert (= (or b!106816 bm!11269) bm!11266))

(assert (= (or b!106816 b!106803) bm!11270))

(assert (= (or b!106806 bm!11266) bm!11272))

(assert (= (or b!106806 bm!11270) bm!11271))

(assert (= (and d!29547 res!53070) b!106820))

(assert (= (and d!29547 c!18709) b!106819))

(assert (= (and d!29547 (not c!18709)) b!106810))

(assert (= (and d!29547 res!53066) b!106804))

(assert (= (and b!106804 res!53065) b!106817))

(assert (= (and b!106804 (not res!53071)) b!106821))

(assert (= (and b!106821 res!53067) b!106808))

(assert (= (and b!106804 res!53068) b!106807))

(assert (= (and b!106807 c!18707) b!106805))

(assert (= (and b!106807 (not c!18707)) b!106812))

(assert (= (and b!106805 res!53072) b!106815))

(assert (= (or b!106805 b!106812) bm!11267))

(assert (= (and b!106807 res!53069) b!106814))

(assert (= (and b!106814 c!18711) b!106802))

(assert (= (and b!106814 (not c!18711)) b!106811))

(assert (= (and b!106802 res!53064) b!106801))

(assert (= (or b!106802 b!106811) bm!11268))

(declare-fun b_lambda!4773 () Bool)

(assert (=> (not b_lambda!4773) (not b!106808)))

(declare-fun tb!2057 () Bool)

(declare-fun t!5688 () Bool)

(assert (=> (and b!105184 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 (_2!1192 lt!53868))) t!5688) tb!2057))

(declare-fun result!3463 () Bool)

(assert (=> tb!2057 (= result!3463 tp_is_empty!2677)))

(assert (=> b!106808 t!5688))

(declare-fun b_and!6589 () Bool)

(assert (= b_and!6585 (and (=> t!5688 result!3463) b_and!6589)))

(declare-fun t!5690 () Bool)

(declare-fun tb!2059 () Bool)

(assert (=> (and b!105174 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (_2!1192 lt!53868))) t!5690) tb!2059))

(declare-fun result!3465 () Bool)

(assert (= result!3465 result!3463))

(assert (=> b!106808 t!5690))

(declare-fun b_and!6591 () Bool)

(assert (= b_and!6587 (and (=> t!5690 result!3465) b_and!6591)))

(declare-fun m!119761 () Bool)

(assert (=> b!106808 m!119761))

(declare-fun m!119763 () Bool)

(assert (=> b!106808 m!119763))

(declare-fun m!119765 () Bool)

(assert (=> b!106808 m!119765))

(assert (=> b!106808 m!119761))

(assert (=> b!106808 m!119763))

(assert (=> b!106808 m!118743))

(declare-fun m!119767 () Bool)

(assert (=> b!106808 m!119767))

(assert (=> b!106808 m!118743))

(declare-fun m!119769 () Bool)

(assert (=> d!29547 m!119769))

(assert (=> b!106817 m!118743))

(assert (=> b!106817 m!118743))

(assert (=> b!106817 m!118747))

(declare-fun m!119771 () Bool)

(assert (=> bm!11271 m!119771))

(declare-fun m!119773 () Bool)

(assert (=> bm!11272 m!119773))

(assert (=> b!106820 m!118743))

(assert (=> b!106820 m!118743))

(assert (=> b!106820 m!118747))

(declare-fun m!119775 () Bool)

(assert (=> b!106815 m!119775))

(declare-fun m!119777 () Bool)

(assert (=> bm!11267 m!119777))

(declare-fun m!119779 () Bool)

(assert (=> b!106819 m!119779))

(declare-fun m!119781 () Bool)

(assert (=> b!106819 m!119781))

(declare-fun m!119783 () Bool)

(assert (=> b!106819 m!119783))

(declare-fun m!119785 () Bool)

(assert (=> b!106819 m!119785))

(assert (=> b!106819 m!119773))

(declare-fun m!119787 () Bool)

(assert (=> b!106819 m!119787))

(declare-fun m!119789 () Bool)

(assert (=> b!106819 m!119789))

(declare-fun m!119791 () Bool)

(assert (=> b!106819 m!119791))

(declare-fun m!119793 () Bool)

(assert (=> b!106819 m!119793))

(assert (=> b!106819 m!119789))

(assert (=> b!106819 m!119793))

(declare-fun m!119795 () Bool)

(assert (=> b!106819 m!119795))

(declare-fun m!119797 () Bool)

(assert (=> b!106819 m!119797))

(declare-fun m!119799 () Bool)

(assert (=> b!106819 m!119799))

(assert (=> b!106819 m!118743))

(declare-fun m!119801 () Bool)

(assert (=> b!106819 m!119801))

(declare-fun m!119803 () Bool)

(assert (=> b!106819 m!119803))

(assert (=> b!106819 m!119787))

(declare-fun m!119805 () Bool)

(assert (=> b!106819 m!119805))

(assert (=> b!106819 m!119781))

(declare-fun m!119807 () Bool)

(assert (=> b!106819 m!119807))

(assert (=> b!106821 m!118743))

(assert (=> b!106821 m!118743))

(declare-fun m!119809 () Bool)

(assert (=> b!106821 m!119809))

(declare-fun m!119811 () Bool)

(assert (=> b!106806 m!119811))

(declare-fun m!119813 () Bool)

(assert (=> b!106801 m!119813))

(declare-fun m!119815 () Bool)

(assert (=> bm!11268 m!119815))

(assert (=> d!29005 d!29547))

(declare-fun b!106822 () Bool)

(declare-fun e!69504 () Option!163)

(assert (=> b!106822 (= e!69504 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54122)))))))

(declare-fun d!29549 () Bool)

(declare-fun c!18712 () Bool)

(assert (=> d!29549 (= c!18712 (and ((_ is Cons!1592) (toList!782 lt!54122)) (= (_1!1191 (h!2189 (toList!782 lt!54122))) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29549 (= (getValueByKey!157 (toList!782 lt!54122) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69504)))

(declare-fun b!106824 () Bool)

(declare-fun e!69505 () Option!163)

(assert (=> b!106824 (= e!69505 (getValueByKey!157 (t!5671 (toList!782 lt!54122)) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106823 () Bool)

(assert (=> b!106823 (= e!69504 e!69505)))

(declare-fun c!18713 () Bool)

(assert (=> b!106823 (= c!18713 (and ((_ is Cons!1592) (toList!782 lt!54122)) (not (= (_1!1191 (h!2189 (toList!782 lt!54122))) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106825 () Bool)

(assert (=> b!106825 (= e!69505 None!161)))

(assert (= (and d!29549 c!18712) b!106822))

(assert (= (and d!29549 (not c!18712)) b!106823))

(assert (= (and b!106823 c!18713) b!106824))

(assert (= (and b!106823 (not c!18713)) b!106825))

(declare-fun m!119817 () Bool)

(assert (=> b!106824 m!119817))

(assert (=> b!105772 d!29549))

(declare-fun d!29551 () Bool)

(declare-fun e!69506 () Bool)

(assert (=> d!29551 e!69506))

(declare-fun res!53073 () Bool)

(assert (=> d!29551 (=> res!53073 e!69506)))

(declare-fun lt!54734 () Bool)

(assert (=> d!29551 (= res!53073 (not lt!54734))))

(declare-fun lt!54735 () Bool)

(assert (=> d!29551 (= lt!54734 lt!54735)))

(declare-fun lt!54736 () Unit!3212)

(declare-fun e!69507 () Unit!3212)

(assert (=> d!29551 (= lt!54736 e!69507)))

(declare-fun c!18714 () Bool)

(assert (=> d!29551 (= c!18714 lt!54735)))

(assert (=> d!29551 (= lt!54735 (containsKey!160 (toList!782 lt!54122) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29551 (= (contains!814 lt!54122 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54734)))

(declare-fun b!106826 () Bool)

(declare-fun lt!54733 () Unit!3212)

(assert (=> b!106826 (= e!69507 lt!54733)))

(assert (=> b!106826 (= lt!54733 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54122) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106826 (isDefined!109 (getValueByKey!157 (toList!782 lt!54122) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106827 () Bool)

(declare-fun Unit!3272 () Unit!3212)

(assert (=> b!106827 (= e!69507 Unit!3272)))

(declare-fun b!106828 () Bool)

(assert (=> b!106828 (= e!69506 (isDefined!109 (getValueByKey!157 (toList!782 lt!54122) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29551 c!18714) b!106826))

(assert (= (and d!29551 (not c!18714)) b!106827))

(assert (= (and d!29551 (not res!53073)) b!106828))

(declare-fun m!119819 () Bool)

(assert (=> d!29551 m!119819))

(declare-fun m!119821 () Bool)

(assert (=> b!106826 m!119821))

(assert (=> b!106826 m!117971))

(assert (=> b!106826 m!117971))

(declare-fun m!119823 () Bool)

(assert (=> b!106826 m!119823))

(assert (=> b!106828 m!117971))

(assert (=> b!106828 m!117971))

(assert (=> b!106828 m!119823))

(assert (=> d!28893 d!29551))

(declare-fun b!106829 () Bool)

(declare-fun e!69508 () Option!163)

(assert (=> b!106829 (= e!69508 (Some!162 (_2!1191 (h!2189 lt!54121))))))

(declare-fun d!29553 () Bool)

(declare-fun c!18715 () Bool)

(assert (=> d!29553 (= c!18715 (and ((_ is Cons!1592) lt!54121) (= (_1!1191 (h!2189 lt!54121)) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29553 (= (getValueByKey!157 lt!54121 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69508)))

(declare-fun e!69509 () Option!163)

(declare-fun b!106831 () Bool)

(assert (=> b!106831 (= e!69509 (getValueByKey!157 (t!5671 lt!54121) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106830 () Bool)

(assert (=> b!106830 (= e!69508 e!69509)))

(declare-fun c!18716 () Bool)

(assert (=> b!106830 (= c!18716 (and ((_ is Cons!1592) lt!54121) (not (= (_1!1191 (h!2189 lt!54121)) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106832 () Bool)

(assert (=> b!106832 (= e!69509 None!161)))

(assert (= (and d!29553 c!18715) b!106829))

(assert (= (and d!29553 (not c!18715)) b!106830))

(assert (= (and b!106830 c!18716) b!106831))

(assert (= (and b!106830 (not c!18716)) b!106832))

(declare-fun m!119825 () Bool)

(assert (=> b!106831 m!119825))

(assert (=> d!28893 d!29553))

(declare-fun d!29555 () Bool)

(assert (=> d!29555 (= (getValueByKey!157 lt!54121 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54737 () Unit!3212)

(assert (=> d!29555 (= lt!54737 (choose!662 lt!54121 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69510 () Bool)

(assert (=> d!29555 e!69510))

(declare-fun res!53074 () Bool)

(assert (=> d!29555 (=> (not res!53074) (not e!69510))))

(assert (=> d!29555 (= res!53074 (isStrictlySorted!296 lt!54121))))

(assert (=> d!29555 (= (lemmaContainsTupThenGetReturnValue!73 lt!54121 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54737)))

(declare-fun b!106833 () Bool)

(declare-fun res!53075 () Bool)

(assert (=> b!106833 (=> (not res!53075) (not e!69510))))

(assert (=> b!106833 (= res!53075 (containsKey!160 lt!54121 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106834 () Bool)

(assert (=> b!106834 (= e!69510 (contains!816 lt!54121 (tuple2!2361 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29555 res!53074) b!106833))

(assert (= (and b!106833 res!53075) b!106834))

(assert (=> d!29555 m!117965))

(declare-fun m!119827 () Bool)

(assert (=> d!29555 m!119827))

(declare-fun m!119829 () Bool)

(assert (=> d!29555 m!119829))

(declare-fun m!119831 () Bool)

(assert (=> b!106833 m!119831))

(declare-fun m!119833 () Bool)

(assert (=> b!106834 m!119833))

(assert (=> d!28893 d!29555))

(declare-fun bm!11273 () Bool)

(declare-fun call!11278 () List!1596)

(declare-fun call!11277 () List!1596)

(assert (=> bm!11273 (= call!11278 call!11277)))

(declare-fun b!106835 () Bool)

(declare-fun c!18717 () Bool)

(declare-fun e!69511 () List!1596)

(declare-fun c!18719 () Bool)

(assert (=> b!106835 (= e!69511 (ite c!18719 (t!5671 (toList!782 lt!53943)) (ite c!18717 (Cons!1592 (h!2189 (toList!782 lt!53943)) (t!5671 (toList!782 lt!53943))) Nil!1593)))))

(declare-fun b!106836 () Bool)

(declare-fun e!69514 () List!1596)

(assert (=> b!106836 (= e!69514 call!11277)))

(declare-fun b!106838 () Bool)

(assert (=> b!106838 (= c!18717 (and ((_ is Cons!1592) (toList!782 lt!53943)) (bvsgt (_1!1191 (h!2189 (toList!782 lt!53943))) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun e!69513 () List!1596)

(assert (=> b!106838 (= e!69514 e!69513)))

(declare-fun bm!11274 () Bool)

(declare-fun c!18718 () Bool)

(declare-fun call!11276 () List!1596)

(assert (=> bm!11274 (= call!11276 ($colon$colon!80 e!69511 (ite c!18718 (h!2189 (toList!782 lt!53943)) (tuple2!2361 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18720 () Bool)

(assert (=> bm!11274 (= c!18720 c!18718)))

(declare-fun b!106839 () Bool)

(assert (=> b!106839 (= e!69513 call!11278)))

(declare-fun b!106840 () Bool)

(assert (=> b!106840 (= e!69513 call!11278)))

(declare-fun b!106841 () Bool)

(declare-fun res!53077 () Bool)

(declare-fun e!69512 () Bool)

(assert (=> b!106841 (=> (not res!53077) (not e!69512))))

(declare-fun lt!54738 () List!1596)

(assert (=> b!106841 (= res!53077 (containsKey!160 lt!54738 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106842 () Bool)

(assert (=> b!106842 (= e!69512 (contains!816 lt!54738 (tuple2!2361 (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106843 () Bool)

(declare-fun e!69515 () List!1596)

(assert (=> b!106843 (= e!69515 e!69514)))

(assert (=> b!106843 (= c!18719 (and ((_ is Cons!1592) (toList!782 lt!53943)) (= (_1!1191 (h!2189 (toList!782 lt!53943))) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun d!29557 () Bool)

(assert (=> d!29557 e!69512))

(declare-fun res!53076 () Bool)

(assert (=> d!29557 (=> (not res!53076) (not e!69512))))

(assert (=> d!29557 (= res!53076 (isStrictlySorted!296 lt!54738))))

(assert (=> d!29557 (= lt!54738 e!69515)))

(assert (=> d!29557 (= c!18718 (and ((_ is Cons!1592) (toList!782 lt!53943)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53943))) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29557 (isStrictlySorted!296 (toList!782 lt!53943))))

(assert (=> d!29557 (= (insertStrictlySorted!76 (toList!782 lt!53943) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54738)))

(declare-fun b!106837 () Bool)

(assert (=> b!106837 (= e!69511 (insertStrictlySorted!76 (t!5671 (toList!782 lt!53943)) (_1!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53937 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun bm!11275 () Bool)

(assert (=> bm!11275 (= call!11277 call!11276)))

(declare-fun b!106844 () Bool)

(assert (=> b!106844 (= e!69515 call!11276)))

(assert (= (and d!29557 c!18718) b!106844))

(assert (= (and d!29557 (not c!18718)) b!106843))

(assert (= (and b!106843 c!18719) b!106836))

(assert (= (and b!106843 (not c!18719)) b!106838))

(assert (= (and b!106838 c!18717) b!106840))

(assert (= (and b!106838 (not c!18717)) b!106839))

(assert (= (or b!106840 b!106839) bm!11273))

(assert (= (or b!106836 bm!11273) bm!11275))

(assert (= (or b!106844 bm!11275) bm!11274))

(assert (= (and bm!11274 c!18720) b!106837))

(assert (= (and bm!11274 (not c!18720)) b!106835))

(assert (= (and d!29557 res!53076) b!106841))

(assert (= (and b!106841 res!53077) b!106842))

(declare-fun m!119835 () Bool)

(assert (=> bm!11274 m!119835))

(declare-fun m!119837 () Bool)

(assert (=> d!29557 m!119837))

(declare-fun m!119839 () Bool)

(assert (=> d!29557 m!119839))

(declare-fun m!119841 () Bool)

(assert (=> b!106842 m!119841))

(declare-fun m!119843 () Bool)

(assert (=> b!106841 m!119843))

(declare-fun m!119845 () Bool)

(assert (=> b!106837 m!119845))

(assert (=> d!28893 d!29557))

(declare-fun d!29559 () Bool)

(declare-fun res!53078 () Bool)

(declare-fun e!69516 () Bool)

(assert (=> d!29559 (=> (not res!53078) (not e!69516))))

(assert (=> d!29559 (= res!53078 (simpleValid!74 (_2!1192 lt!54342)))))

(assert (=> d!29559 (= (valid!421 (_2!1192 lt!54342)) e!69516)))

(declare-fun b!106845 () Bool)

(declare-fun res!53079 () Bool)

(assert (=> b!106845 (=> (not res!53079) (not e!69516))))

(assert (=> b!106845 (= res!53079 (= (arrayCountValidKeys!0 (_keys!4287 (_2!1192 lt!54342)) #b00000000000000000000000000000000 (size!2309 (_keys!4287 (_2!1192 lt!54342)))) (_size!498 (_2!1192 lt!54342))))))

(declare-fun b!106846 () Bool)

(declare-fun res!53080 () Bool)

(assert (=> b!106846 (=> (not res!53080) (not e!69516))))

(assert (=> b!106846 (= res!53080 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4287 (_2!1192 lt!54342)) (mask!6727 (_2!1192 lt!54342))))))

(declare-fun b!106847 () Bool)

(assert (=> b!106847 (= e!69516 (arrayNoDuplicates!0 (_keys!4287 (_2!1192 lt!54342)) #b00000000000000000000000000000000 Nil!1594))))

(assert (= (and d!29559 res!53078) b!106845))

(assert (= (and b!106845 res!53079) b!106846))

(assert (= (and b!106846 res!53080) b!106847))

(declare-fun m!119847 () Bool)

(assert (=> d!29559 m!119847))

(declare-fun m!119849 () Bool)

(assert (=> b!106845 m!119849))

(declare-fun m!119851 () Bool)

(assert (=> b!106846 m!119851))

(declare-fun m!119853 () Bool)

(assert (=> b!106847 m!119853))

(assert (=> b!106064 d!29559))

(assert (=> d!28847 d!28845))

(declare-fun d!29561 () Bool)

(assert (=> d!29561 (= (getValueByKey!157 lt!53965 (_1!1191 lt!53713)) (Some!162 (_2!1191 lt!53713)))))

(assert (=> d!29561 true))

(declare-fun _$22!436 () Unit!3212)

(assert (=> d!29561 (= (choose!662 lt!53965 (_1!1191 lt!53713) (_2!1191 lt!53713)) _$22!436)))

(declare-fun bs!4411 () Bool)

(assert (= bs!4411 d!29561))

(assert (=> bs!4411 m!117561))

(assert (=> d!28847 d!29561))

(declare-fun d!29563 () Bool)

(declare-fun res!53081 () Bool)

(declare-fun e!69517 () Bool)

(assert (=> d!29563 (=> res!53081 e!69517)))

(assert (=> d!29563 (= res!53081 (or ((_ is Nil!1593) lt!53965) ((_ is Nil!1593) (t!5671 lt!53965))))))

(assert (=> d!29563 (= (isStrictlySorted!296 lt!53965) e!69517)))

(declare-fun b!106848 () Bool)

(declare-fun e!69518 () Bool)

(assert (=> b!106848 (= e!69517 e!69518)))

(declare-fun res!53082 () Bool)

(assert (=> b!106848 (=> (not res!53082) (not e!69518))))

(assert (=> b!106848 (= res!53082 (bvslt (_1!1191 (h!2189 lt!53965)) (_1!1191 (h!2189 (t!5671 lt!53965)))))))

(declare-fun b!106849 () Bool)

(assert (=> b!106849 (= e!69518 (isStrictlySorted!296 (t!5671 lt!53965)))))

(assert (= (and d!29563 (not res!53081)) b!106848))

(assert (= (and b!106848 res!53082) b!106849))

(declare-fun m!119855 () Bool)

(assert (=> b!106849 m!119855))

(assert (=> d!28847 d!29563))

(declare-fun d!29565 () Bool)

(assert (=> d!29565 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (getCurrentListMap!469 (_keys!4287 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(assert (=> d!29565 true))

(declare-fun _$5!110 () Unit!3212)

(assert (=> d!29565 (= (choose!664 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3161 lt!53873) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 (defaultEntry!2581 newMap!16)) _$5!110)))

(declare-fun bs!4412 () Bool)

(assert (= bs!4412 d!29565))

(assert (=> bs!4412 m!117451))

(assert (=> bs!4412 m!117451))

(assert (=> bs!4412 m!117855))

(assert (=> bs!4412 m!117445))

(assert (=> bs!4412 m!117857))

(assert (=> d!28863 d!29565))

(assert (=> d!28863 d!29089))

(declare-fun d!29567 () Bool)

(assert (=> d!29567 (isDefined!109 (getValueByKey!157 (toList!782 lt!53999) (_1!1191 lt!53718)))))

(declare-fun lt!54739 () Unit!3212)

(assert (=> d!29567 (= lt!54739 (choose!669 (toList!782 lt!53999) (_1!1191 lt!53718)))))

(declare-fun e!69519 () Bool)

(assert (=> d!29567 e!69519))

(declare-fun res!53083 () Bool)

(assert (=> d!29567 (=> (not res!53083) (not e!69519))))

(assert (=> d!29567 (= res!53083 (isStrictlySorted!296 (toList!782 lt!53999)))))

(assert (=> d!29567 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53999) (_1!1191 lt!53718)) lt!54739)))

(declare-fun b!106850 () Bool)

(assert (=> b!106850 (= e!69519 (containsKey!160 (toList!782 lt!53999) (_1!1191 lt!53718)))))

(assert (= (and d!29567 res!53083) b!106850))

(assert (=> d!29567 m!117623))

(assert (=> d!29567 m!117623))

(assert (=> d!29567 m!118041))

(declare-fun m!119857 () Bool)

(assert (=> d!29567 m!119857))

(declare-fun m!119859 () Bool)

(assert (=> d!29567 m!119859))

(assert (=> b!106850 m!118037))

(assert (=> b!105799 d!29567))

(assert (=> b!105799 d!29363))

(assert (=> b!105799 d!28869))

(declare-fun d!29569 () Bool)

(assert (=> d!29569 (isDefined!109 (getValueByKey!157 (toList!782 lt!53966) (_1!1191 lt!53713)))))

(declare-fun lt!54740 () Unit!3212)

(assert (=> d!29569 (= lt!54740 (choose!669 (toList!782 lt!53966) (_1!1191 lt!53713)))))

(declare-fun e!69520 () Bool)

(assert (=> d!29569 e!69520))

(declare-fun res!53084 () Bool)

(assert (=> d!29569 (=> (not res!53084) (not e!69520))))

(assert (=> d!29569 (= res!53084 (isStrictlySorted!296 (toList!782 lt!53966)))))

(assert (=> d!29569 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53966) (_1!1191 lt!53713)) lt!54740)))

(declare-fun b!106851 () Bool)

(assert (=> b!106851 (= e!69520 (containsKey!160 (toList!782 lt!53966) (_1!1191 lt!53713)))))

(assert (= (and d!29569 res!53084) b!106851))

(assert (=> d!29569 m!117567))

(assert (=> d!29569 m!117567))

(assert (=> d!29569 m!117799))

(declare-fun m!119861 () Bool)

(assert (=> d!29569 m!119861))

(declare-fun m!119863 () Bool)

(assert (=> d!29569 m!119863))

(assert (=> b!106851 m!117795))

(assert (=> b!105670 d!29569))

(assert (=> b!105670 d!29349))

(assert (=> b!105670 d!28917))

(declare-fun d!29571 () Bool)

(declare-fun c!18721 () Bool)

(assert (=> d!29571 (= c!18721 ((_ is Nil!1593) (toList!782 lt!53970)))))

(declare-fun e!69521 () (InoxSet tuple2!2360))

(assert (=> d!29571 (= (content!111 (toList!782 lt!53970)) e!69521)))

(declare-fun b!106852 () Bool)

(assert (=> b!106852 (= e!69521 ((as const (Array tuple2!2360 Bool)) false))))

(declare-fun b!106853 () Bool)

(assert (=> b!106853 (= e!69521 ((_ map or) (store ((as const (Array tuple2!2360 Bool)) false) (h!2189 (toList!782 lt!53970)) true) (content!111 (t!5671 (toList!782 lt!53970)))))))

(assert (= (and d!29571 c!18721) b!106852))

(assert (= (and d!29571 (not c!18721)) b!106853))

(declare-fun m!119865 () Bool)

(assert (=> b!106853 m!119865))

(declare-fun m!119867 () Bool)

(assert (=> b!106853 m!119867))

(assert (=> d!29015 d!29571))

(declare-fun d!29573 () Bool)

(assert (=> d!29573 (isDefined!109 (getValueByKey!157 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(declare-fun lt!54741 () Unit!3212)

(assert (=> d!29573 (= lt!54741 (choose!669 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(declare-fun e!69522 () Bool)

(assert (=> d!29573 e!69522))

(declare-fun res!53085 () Bool)

(assert (=> d!29573 (=> (not res!53085) (not e!69522))))

(assert (=> d!29573 (= res!53085 (isStrictlySorted!296 (toList!782 call!11107)))))

(assert (=> d!29573 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))) lt!54741)))

(declare-fun b!106854 () Bool)

(assert (=> b!106854 (= e!69522 (containsKey!160 (toList!782 call!11107) (select (arr!2054 (_keys!4287 newMap!16)) (index!3161 lt!53873))))))

(assert (= (and d!29573 res!53085) b!106854))

(assert (=> d!29573 m!117461))

(assert (=> d!29573 m!117843))

(assert (=> d!29573 m!117843))

(assert (=> d!29573 m!117845))

(assert (=> d!29573 m!117461))

(declare-fun m!119869 () Bool)

(assert (=> d!29573 m!119869))

(declare-fun m!119871 () Bool)

(assert (=> d!29573 m!119871))

(assert (=> b!106854 m!117461))

(assert (=> b!106854 m!117839))

(assert (=> b!105728 d!29573))

(assert (=> b!105728 d!29351))

(assert (=> b!105728 d!29353))

(declare-fun lt!54742 () Bool)

(declare-fun d!29575 () Bool)

(assert (=> d!29575 (= lt!54742 (select (content!111 (toList!782 lt!54141)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!69523 () Bool)

(assert (=> d!29575 (= lt!54742 e!69523)))

(declare-fun res!53086 () Bool)

(assert (=> d!29575 (=> (not res!53086) (not e!69523))))

(assert (=> d!29575 (= res!53086 ((_ is Cons!1592) (toList!782 lt!54141)))))

(assert (=> d!29575 (= (contains!816 (toList!782 lt!54141) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!54742)))

(declare-fun b!106855 () Bool)

(declare-fun e!69524 () Bool)

(assert (=> b!106855 (= e!69523 e!69524)))

(declare-fun res!53087 () Bool)

(assert (=> b!106855 (=> res!53087 e!69524)))

(assert (=> b!106855 (= res!53087 (= (h!2189 (toList!782 lt!54141)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106856 () Bool)

(assert (=> b!106856 (= e!69524 (contains!816 (t!5671 (toList!782 lt!54141)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29575 res!53086) b!106855))

(assert (= (and b!106855 (not res!53087)) b!106856))

(declare-fun m!119873 () Bool)

(assert (=> d!29575 m!119873))

(declare-fun m!119875 () Bool)

(assert (=> d!29575 m!119875))

(declare-fun m!119877 () Bool)

(assert (=> b!106856 m!119877))

(assert (=> b!105787 d!29575))

(declare-fun d!29577 () Bool)

(assert (=> d!29577 (= (apply!98 lt!54030 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1338 (getValueByKey!157 (toList!782 lt!54030) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4413 () Bool)

(assert (= bs!4413 d!29577))

(assert (=> bs!4413 m!117657))

(assert (=> bs!4413 m!119217))

(assert (=> bs!4413 m!119217))

(declare-fun m!119879 () Bool)

(assert (=> bs!4413 m!119879))

(assert (=> b!105619 d!29577))

(declare-fun d!29579 () Bool)

(declare-fun c!18722 () Bool)

(assert (=> d!29579 (= c!18722 ((_ is ValueCellFull!995) (select (arr!2055 (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!69525 () V!3217)

(assert (=> d!29579 (= (get!1334 (select (arr!2055 (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69525)))

(declare-fun b!106857 () Bool)

(assert (=> b!106857 (= e!69525 (get!1336 (select (arr!2055 (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106858 () Bool)

(assert (=> b!106858 (= e!69525 (get!1337 (select (arr!2055 (ite c!18322 (_values!2564 newMap!16) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (index!3161 lt!53873) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29579 c!18722) b!106857))

(assert (= (and d!29579 (not c!18722)) b!106858))

(assert (=> b!106857 m!117651))

(assert (=> b!106857 m!117653))

(declare-fun m!119881 () Bool)

(assert (=> b!106857 m!119881))

(assert (=> b!106858 m!117651))

(assert (=> b!106858 m!117653))

(declare-fun m!119883 () Bool)

(assert (=> b!106858 m!119883))

(assert (=> b!105619 d!29579))

(assert (=> b!105746 d!29099))

(declare-fun bm!11276 () Bool)

(declare-fun call!11281 () List!1596)

(declare-fun call!11280 () List!1596)

(assert (=> bm!11276 (= call!11281 call!11280)))

(declare-fun c!18725 () Bool)

(declare-fun b!106859 () Bool)

(declare-fun c!18723 () Bool)

(declare-fun e!69526 () List!1596)

(assert (=> b!106859 (= e!69526 (ite c!18725 (t!5671 (t!5671 (toList!782 lt!53714))) (ite c!18723 (Cons!1592 (h!2189 (t!5671 (toList!782 lt!53714))) (t!5671 (t!5671 (toList!782 lt!53714)))) Nil!1593)))))

(declare-fun b!106860 () Bool)

(declare-fun e!69529 () List!1596)

(assert (=> b!106860 (= e!69529 call!11280)))

(declare-fun b!106862 () Bool)

(assert (=> b!106862 (= c!18723 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53714))) (bvsgt (_1!1191 (h!2189 (t!5671 (toList!782 lt!53714)))) (_1!1191 lt!53713))))))

(declare-fun e!69528 () List!1596)

(assert (=> b!106862 (= e!69529 e!69528)))

(declare-fun c!18724 () Bool)

(declare-fun call!11279 () List!1596)

(declare-fun bm!11277 () Bool)

(assert (=> bm!11277 (= call!11279 ($colon$colon!80 e!69526 (ite c!18724 (h!2189 (t!5671 (toList!782 lt!53714))) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713)))))))

(declare-fun c!18726 () Bool)

(assert (=> bm!11277 (= c!18726 c!18724)))

(declare-fun b!106863 () Bool)

(assert (=> b!106863 (= e!69528 call!11281)))

(declare-fun b!106864 () Bool)

(assert (=> b!106864 (= e!69528 call!11281)))

(declare-fun b!106865 () Bool)

(declare-fun res!53089 () Bool)

(declare-fun e!69527 () Bool)

(assert (=> b!106865 (=> (not res!53089) (not e!69527))))

(declare-fun lt!54743 () List!1596)

(assert (=> b!106865 (= res!53089 (containsKey!160 lt!54743 (_1!1191 lt!53713)))))

(declare-fun b!106866 () Bool)

(assert (=> b!106866 (= e!69527 (contains!816 lt!54743 (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun b!106867 () Bool)

(declare-fun e!69530 () List!1596)

(assert (=> b!106867 (= e!69530 e!69529)))

(assert (=> b!106867 (= c!18725 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53714))) (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53714)))) (_1!1191 lt!53713))))))

(declare-fun d!29581 () Bool)

(assert (=> d!29581 e!69527))

(declare-fun res!53088 () Bool)

(assert (=> d!29581 (=> (not res!53088) (not e!69527))))

(assert (=> d!29581 (= res!53088 (isStrictlySorted!296 lt!54743))))

(assert (=> d!29581 (= lt!54743 e!69530)))

(assert (=> d!29581 (= c!18724 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53714))) (bvslt (_1!1191 (h!2189 (t!5671 (toList!782 lt!53714)))) (_1!1191 lt!53713))))))

(assert (=> d!29581 (isStrictlySorted!296 (t!5671 (toList!782 lt!53714)))))

(assert (=> d!29581 (= (insertStrictlySorted!76 (t!5671 (toList!782 lt!53714)) (_1!1191 lt!53713) (_2!1191 lt!53713)) lt!54743)))

(declare-fun b!106861 () Bool)

(assert (=> b!106861 (= e!69526 (insertStrictlySorted!76 (t!5671 (t!5671 (toList!782 lt!53714))) (_1!1191 lt!53713) (_2!1191 lt!53713)))))

(declare-fun bm!11278 () Bool)

(assert (=> bm!11278 (= call!11280 call!11279)))

(declare-fun b!106868 () Bool)

(assert (=> b!106868 (= e!69530 call!11279)))

(assert (= (and d!29581 c!18724) b!106868))

(assert (= (and d!29581 (not c!18724)) b!106867))

(assert (= (and b!106867 c!18725) b!106860))

(assert (= (and b!106867 (not c!18725)) b!106862))

(assert (= (and b!106862 c!18723) b!106864))

(assert (= (and b!106862 (not c!18723)) b!106863))

(assert (= (or b!106864 b!106863) bm!11276))

(assert (= (or b!106860 bm!11276) bm!11278))

(assert (= (or b!106868 bm!11278) bm!11277))

(assert (= (and bm!11277 c!18726) b!106861))

(assert (= (and bm!11277 (not c!18726)) b!106859))

(assert (= (and d!29581 res!53088) b!106865))

(assert (= (and b!106865 res!53089) b!106866))

(declare-fun m!119885 () Bool)

(assert (=> bm!11277 m!119885))

(declare-fun m!119887 () Bool)

(assert (=> d!29581 m!119887))

(assert (=> d!29581 m!118555))

(declare-fun m!119889 () Bool)

(assert (=> b!106866 m!119889))

(declare-fun m!119891 () Bool)

(assert (=> b!106865 m!119891))

(declare-fun m!119893 () Bool)

(assert (=> b!106861 m!119893))

(assert (=> b!105886 d!29581))

(assert (=> d!29009 d!29527))

(declare-fun d!29583 () Bool)

(declare-fun e!69531 () Bool)

(assert (=> d!29583 e!69531))

(declare-fun res!53090 () Bool)

(assert (=> d!29583 (=> res!53090 e!69531)))

(declare-fun lt!54745 () Bool)

(assert (=> d!29583 (= res!53090 (not lt!54745))))

(declare-fun lt!54746 () Bool)

(assert (=> d!29583 (= lt!54745 lt!54746)))

(declare-fun lt!54747 () Unit!3212)

(declare-fun e!69532 () Unit!3212)

(assert (=> d!29583 (= lt!54747 e!69532)))

(declare-fun c!18727 () Bool)

(assert (=> d!29583 (= c!18727 lt!54746)))

(assert (=> d!29583 (= lt!54746 (containsKey!160 (toList!782 (getCurrentListMap!469 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)))))))

(assert (=> d!29583 (= (contains!814 (getCurrentListMap!469 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)))) lt!54745)))

(declare-fun b!106869 () Bool)

(declare-fun lt!54744 () Unit!3212)

(assert (=> b!106869 (= e!69532 lt!54744)))

(assert (=> b!106869 (= lt!54744 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (getCurrentListMap!469 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)))))))

(assert (=> b!106869 (isDefined!109 (getValueByKey!157 (toList!782 (getCurrentListMap!469 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)))))))

(declare-fun b!106870 () Bool)

(declare-fun Unit!3273 () Unit!3212)

(assert (=> b!106870 (= e!69532 Unit!3273)))

(declare-fun b!106871 () Bool)

(assert (=> b!106871 (= e!69531 (isDefined!109 (getValueByKey!157 (toList!782 (getCurrentListMap!469 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))))))))

(assert (= (and d!29583 c!18727) b!106869))

(assert (= (and d!29583 (not c!18727)) b!106870))

(assert (= (and d!29583 (not res!53090)) b!106871))

(assert (=> d!29583 m!118397))

(declare-fun m!119895 () Bool)

(assert (=> d!29583 m!119895))

(assert (=> b!106869 m!118397))

(declare-fun m!119897 () Bool)

(assert (=> b!106869 m!119897))

(assert (=> b!106869 m!118397))

(declare-fun m!119899 () Bool)

(assert (=> b!106869 m!119899))

(assert (=> b!106869 m!119899))

(declare-fun m!119901 () Bool)

(assert (=> b!106869 m!119901))

(assert (=> b!106871 m!118397))

(assert (=> b!106871 m!119899))

(assert (=> b!106871 m!119899))

(assert (=> b!106871 m!119901))

(assert (=> d!29009 d!29583))

(declare-fun b!106872 () Bool)

(declare-fun e!69534 () (_ BitVec 32))

(declare-fun call!11282 () (_ BitVec 32))

(assert (=> b!106872 (= e!69534 (bvadd #b00000000000000000000000000000001 call!11282))))

(declare-fun b!106873 () Bool)

(assert (=> b!106873 (= e!69534 call!11282)))

(declare-fun d!29585 () Bool)

(declare-fun lt!54748 () (_ BitVec 32))

(assert (=> d!29585 (and (bvsge lt!54748 #b00000000000000000000000000000000) (bvsle lt!54748 (bvsub (size!2309 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!69533 () (_ BitVec 32))

(assert (=> d!29585 (= lt!54748 e!69533)))

(declare-fun c!18729 () Bool)

(assert (=> d!29585 (= c!18729 (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29585 (and (bvsle #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2309 (_keys!4287 newMap!16)) (size!2309 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))))

(assert (=> d!29585 (= (arrayCountValidKeys!0 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) lt!54748)))

(declare-fun b!106874 () Bool)

(assert (=> b!106874 (= e!69533 #b00000000000000000000000000000000)))

(declare-fun b!106875 () Bool)

(assert (=> b!106875 (= e!69533 e!69534)))

(declare-fun c!18728 () Bool)

(assert (=> b!106875 (= c!18728 (validKeyInArray!0 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11279 () Bool)

(assert (=> bm!11279 (= call!11282 (arrayCountValidKeys!0 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!29585 c!18729) b!106874))

(assert (= (and d!29585 (not c!18729)) b!106875))

(assert (= (and b!106875 c!18728) b!106872))

(assert (= (and b!106875 (not c!18728)) b!106873))

(assert (= (or b!106872 b!106873) bm!11279))

(declare-fun m!119903 () Bool)

(assert (=> b!106875 m!119903))

(assert (=> b!106875 m!119903))

(declare-fun m!119905 () Bool)

(assert (=> b!106875 m!119905))

(declare-fun m!119907 () Bool)

(assert (=> bm!11279 m!119907))

(assert (=> d!29009 d!29585))

(declare-fun b!106876 () Bool)

(declare-fun e!69536 () (_ BitVec 32))

(declare-fun call!11283 () (_ BitVec 32))

(assert (=> b!106876 (= e!69536 (bvadd #b00000000000000000000000000000001 call!11283))))

(declare-fun b!106877 () Bool)

(assert (=> b!106877 (= e!69536 call!11283)))

(declare-fun lt!54749 () (_ BitVec 32))

(declare-fun d!29587 () Bool)

(assert (=> d!29587 (and (bvsge lt!54749 #b00000000000000000000000000000000) (bvsle lt!54749 (bvsub (size!2309 lt!54354) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)))))))

(declare-fun e!69535 () (_ BitVec 32))

(assert (=> d!29587 (= lt!54749 e!69535)))

(declare-fun c!18731 () Bool)

(assert (=> d!29587 (= c!18731 (bvsge (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (bvadd (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000001)))))

(assert (=> d!29587 (and (bvsle (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (bvadd (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000001)) (bvsge (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000001) (size!2309 lt!54354)))))

(assert (=> d!29587 (= (arrayCountValidKeys!0 lt!54354 (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (bvadd (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000001)) lt!54749)))

(declare-fun b!106878 () Bool)

(assert (=> b!106878 (= e!69535 #b00000000000000000000000000000000)))

(declare-fun b!106879 () Bool)

(assert (=> b!106879 (= e!69535 e!69536)))

(declare-fun c!18730 () Bool)

(assert (=> b!106879 (= c!18730 (validKeyInArray!0 (select (arr!2054 lt!54354) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)))))))

(declare-fun bm!11280 () Bool)

(assert (=> bm!11280 (= call!11283 (arrayCountValidKeys!0 lt!54354 (bvadd (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000001) (bvadd (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000001)))))

(assert (= (and d!29587 c!18731) b!106878))

(assert (= (and d!29587 (not c!18731)) b!106879))

(assert (= (and b!106879 c!18730) b!106876))

(assert (= (and b!106879 (not c!18730)) b!106877))

(assert (= (or b!106876 b!106877) bm!11280))

(declare-fun m!119909 () Bool)

(assert (=> b!106879 m!119909))

(assert (=> b!106879 m!119909))

(declare-fun m!119911 () Bool)

(assert (=> b!106879 m!119911))

(declare-fun m!119913 () Bool)

(assert (=> bm!11280 m!119913))

(assert (=> d!29009 d!29587))

(declare-fun bm!11281 () Bool)

(declare-fun call!11284 () Bool)

(declare-fun c!18732 () Bool)

(assert (=> bm!11281 (= call!11284 (arrayNoDuplicates!0 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (bvadd lt!54355 #b00000000000000000000000000000001) (ite c!18732 (Cons!1593 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) lt!54355) lt!54347) lt!54347)))))

(declare-fun b!106881 () Bool)

(declare-fun e!69540 () Bool)

(declare-fun e!69539 () Bool)

(assert (=> b!106881 (= e!69540 e!69539)))

(assert (=> b!106881 (= c!18732 (validKeyInArray!0 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) lt!54355)))))

(declare-fun b!106882 () Bool)

(assert (=> b!106882 (= e!69539 call!11284)))

(declare-fun e!69538 () Bool)

(declare-fun b!106883 () Bool)

(assert (=> b!106883 (= e!69538 (contains!817 lt!54347 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) lt!54355)))))

(declare-fun b!106884 () Bool)

(assert (=> b!106884 (= e!69539 call!11284)))

(declare-fun b!106880 () Bool)

(declare-fun e!69537 () Bool)

(assert (=> b!106880 (= e!69537 e!69540)))

(declare-fun res!53092 () Bool)

(assert (=> b!106880 (=> (not res!53092) (not e!69540))))

(assert (=> b!106880 (= res!53092 (not e!69538))))

(declare-fun res!53091 () Bool)

(assert (=> b!106880 (=> (not res!53091) (not e!69538))))

(assert (=> b!106880 (= res!53091 (validKeyInArray!0 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) lt!54355)))))

(declare-fun d!29589 () Bool)

(declare-fun res!53093 () Bool)

(assert (=> d!29589 (=> res!53093 e!69537)))

(assert (=> d!29589 (= res!53093 (bvsge lt!54355 (size!2309 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))))

(assert (=> d!29589 (= (arrayNoDuplicates!0 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) lt!54355 lt!54347) e!69537)))

(assert (= (and d!29589 (not res!53093)) b!106880))

(assert (= (and b!106880 res!53091) b!106883))

(assert (= (and b!106880 res!53092) b!106881))

(assert (= (and b!106881 c!18732) b!106882))

(assert (= (and b!106881 (not c!18732)) b!106884))

(assert (= (or b!106882 b!106884) bm!11281))

(declare-fun m!119915 () Bool)

(assert (=> bm!11281 m!119915))

(declare-fun m!119917 () Bool)

(assert (=> bm!11281 m!119917))

(assert (=> b!106881 m!119915))

(assert (=> b!106881 m!119915))

(declare-fun m!119919 () Bool)

(assert (=> b!106881 m!119919))

(assert (=> b!106883 m!119915))

(assert (=> b!106883 m!119915))

(declare-fun m!119921 () Bool)

(assert (=> b!106883 m!119921))

(assert (=> b!106880 m!119915))

(assert (=> b!106880 m!119915))

(assert (=> b!106880 m!119919))

(assert (=> d!29009 d!29589))

(assert (=> d!29009 d!29361))

(assert (=> d!29009 d!28933))

(assert (=> d!29009 d!28783))

(declare-fun d!29591 () Bool)

(declare-fun e!69543 () Bool)

(assert (=> d!29591 e!69543))

(declare-fun res!53096 () Bool)

(assert (=> d!29591 (=> (not res!53096) (not e!69543))))

(assert (=> d!29591 (= res!53096 (and (bvsge (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000000) (bvslt (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (size!2309 (_keys!4287 newMap!16))) (bvslt (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (size!2310 (_values!2564 newMap!16)))))))

(declare-fun lt!54752 () Unit!3212)

(declare-fun choose!673 (array!4331 array!4333 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) (_ BitVec 64) V!3217 Int) Unit!3212)

(assert (=> d!29591 (= lt!54752 (choose!673 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 (defaultEntry!2581 newMap!16)))))

(assert (=> d!29591 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29591 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!30 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719 (defaultEntry!2581 newMap!16)) lt!54752)))

(declare-fun b!106887 () Bool)

(assert (=> b!106887 (= e!69543 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (getCurrentListMap!469 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))))))

(assert (= (and d!29591 res!53096) b!106887))

(assert (=> d!29591 m!117261))

(declare-fun m!119923 () Bool)

(assert (=> d!29591 m!119923))

(assert (=> d!29591 m!117661))

(assert (=> b!106887 m!117451))

(assert (=> b!106887 m!117451))

(assert (=> b!106887 m!117855))

(assert (=> b!106887 m!118413))

(assert (=> b!106887 m!118425))

(assert (=> b!106887 m!118399))

(assert (=> d!29009 d!29591))

(assert (=> d!29009 d!28977))

(declare-fun d!29593 () Bool)

(declare-fun e!69544 () Bool)

(assert (=> d!29593 e!69544))

(declare-fun res!53097 () Bool)

(assert (=> d!29593 (=> (not res!53097) (not e!69544))))

(assert (=> d!29593 (= res!53097 (and (bvsge (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000000) (bvslt (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (size!2309 lt!54360))))))

(declare-fun lt!54753 () Unit!3212)

(assert (=> d!29593 (= lt!54753 (choose!663 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (defaultEntry!2581 newMap!16)))))

(assert (=> d!29593 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29593 (= (lemmaValidKeyInArrayIsInListMap!107 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (defaultEntry!2581 newMap!16)) lt!54753)))

(declare-fun b!106888 () Bool)

(assert (=> b!106888 (= e!69544 (contains!814 (getCurrentListMap!469 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2054 lt!54360) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)))))))

(assert (= (and d!29593 res!53097) b!106888))

(declare-fun m!119925 () Bool)

(assert (=> d!29593 m!119925))

(assert (=> d!29593 m!117661))

(assert (=> b!106888 m!118407))

(declare-fun m!119927 () Bool)

(assert (=> b!106888 m!119927))

(assert (=> b!106888 m!118407))

(assert (=> b!106888 m!119927))

(declare-fun m!119929 () Bool)

(assert (=> b!106888 m!119929))

(assert (=> d!29009 d!29593))

(declare-fun b!106889 () Bool)

(declare-fun e!69546 () Bool)

(declare-fun call!11285 () Bool)

(assert (=> b!106889 (= e!69546 call!11285)))

(declare-fun d!29595 () Bool)

(declare-fun res!53098 () Bool)

(declare-fun e!69547 () Bool)

(assert (=> d!29595 (=> res!53098 e!69547)))

(assert (=> d!29595 (= res!53098 (bvsge #b00000000000000000000000000000000 (size!2309 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))))

(assert (=> d!29595 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (mask!6727 newMap!16)) e!69547)))

(declare-fun bm!11282 () Bool)

(assert (=> bm!11282 (= call!11285 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (mask!6727 newMap!16)))))

(declare-fun b!106890 () Bool)

(assert (=> b!106890 (= e!69547 e!69546)))

(declare-fun c!18733 () Bool)

(assert (=> b!106890 (= c!18733 (validKeyInArray!0 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!106891 () Bool)

(declare-fun e!69545 () Bool)

(assert (=> b!106891 (= e!69545 call!11285)))

(declare-fun b!106892 () Bool)

(assert (=> b!106892 (= e!69546 e!69545)))

(declare-fun lt!54754 () (_ BitVec 64))

(assert (=> b!106892 (= lt!54754 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54756 () Unit!3212)

(assert (=> b!106892 (= lt!54756 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) lt!54754 #b00000000000000000000000000000000))))

(assert (=> b!106892 (arrayContainsKey!0 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) lt!54754 #b00000000000000000000000000000000)))

(declare-fun lt!54755 () Unit!3212)

(assert (=> b!106892 (= lt!54755 lt!54756)))

(declare-fun res!53099 () Bool)

(assert (=> b!106892 (= res!53099 (= (seekEntryOrOpen!0 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000) (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (mask!6727 newMap!16)) (Found!253 #b00000000000000000000000000000000)))))

(assert (=> b!106892 (=> (not res!53099) (not e!69545))))

(assert (= (and d!29595 (not res!53098)) b!106890))

(assert (= (and b!106890 c!18733) b!106892))

(assert (= (and b!106890 (not c!18733)) b!106889))

(assert (= (and b!106892 res!53099) b!106891))

(assert (= (or b!106891 b!106889) bm!11282))

(declare-fun m!119931 () Bool)

(assert (=> bm!11282 m!119931))

(assert (=> b!106890 m!119903))

(assert (=> b!106890 m!119903))

(assert (=> b!106890 m!119905))

(assert (=> b!106892 m!119903))

(declare-fun m!119933 () Bool)

(assert (=> b!106892 m!119933))

(declare-fun m!119935 () Bool)

(assert (=> b!106892 m!119935))

(assert (=> b!106892 m!119903))

(declare-fun m!119937 () Bool)

(assert (=> b!106892 m!119937))

(assert (=> d!29009 d!29595))

(declare-fun d!29597 () Bool)

(assert (=> d!29597 (= (arrayCountValidKeys!0 lt!54354 (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (bvadd (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!54759 () Unit!3212)

(declare-fun choose!2 (array!4331 (_ BitVec 32)) Unit!3212)

(assert (=> d!29597 (= lt!54759 (choose!2 lt!54354 (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))))))

(declare-fun e!69550 () Bool)

(assert (=> d!29597 e!69550))

(declare-fun res!53104 () Bool)

(assert (=> d!29597 (=> (not res!53104) (not e!69550))))

(assert (=> d!29597 (= res!53104 (and (bvsge (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000000) (bvslt (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (size!2309 lt!54354))))))

(assert (=> d!29597 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!54354 (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))) lt!54759)))

(declare-fun b!106897 () Bool)

(declare-fun res!53105 () Bool)

(assert (=> b!106897 (=> (not res!53105) (not e!69550))))

(assert (=> b!106897 (= res!53105 (validKeyInArray!0 (select (arr!2054 lt!54354) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)))))))

(declare-fun b!106898 () Bool)

(assert (=> b!106898 (= e!69550 (bvslt (size!2309 lt!54354) #b01111111111111111111111111111111))))

(assert (= (and d!29597 res!53104) b!106897))

(assert (= (and b!106897 res!53105) b!106898))

(assert (=> d!29597 m!118421))

(declare-fun m!119939 () Bool)

(assert (=> d!29597 m!119939))

(assert (=> b!106897 m!119909))

(assert (=> b!106897 m!119909))

(assert (=> b!106897 m!119911))

(assert (=> d!29009 d!29597))

(declare-fun d!29599 () Bool)

(assert (=> d!29599 (arrayContainsKey!0 lt!54358 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!54760 () Unit!3212)

(assert (=> d!29599 (= lt!54760 (choose!13 lt!54358 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))))))

(assert (=> d!29599 (bvsge (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000000)))

(assert (=> d!29599 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!54358 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))) lt!54760)))

(declare-fun bs!4414 () Bool)

(assert (= bs!4414 d!29599))

(assert (=> bs!4414 m!117261))

(assert (=> bs!4414 m!118411))

(assert (=> bs!4414 m!117261))

(declare-fun m!119941 () Bool)

(assert (=> bs!4414 m!119941))

(assert (=> d!29009 d!29599))

(declare-fun b!106899 () Bool)

(declare-fun e!69554 () Bool)

(declare-fun lt!54777 () ListLongMap!1533)

(assert (=> b!106899 (= e!69554 (= (apply!98 lt!54777 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!106900 () Bool)

(declare-fun e!69563 () Bool)

(assert (=> b!106900 (= e!69563 e!69554)))

(declare-fun res!53106 () Bool)

(declare-fun call!11289 () Bool)

(assert (=> b!106900 (= res!53106 call!11289)))

(assert (=> b!106900 (=> (not res!53106) (not e!69554))))

(declare-fun b!106901 () Bool)

(declare-fun e!69557 () ListLongMap!1533)

(declare-fun call!11291 () ListLongMap!1533)

(assert (=> b!106901 (= e!69557 call!11291)))

(declare-fun b!106902 () Bool)

(declare-fun res!53110 () Bool)

(declare-fun e!69559 () Bool)

(assert (=> b!106902 (=> (not res!53110) (not e!69559))))

(declare-fun e!69553 () Bool)

(assert (=> b!106902 (= res!53110 e!69553)))

(declare-fun res!53113 () Bool)

(assert (=> b!106902 (=> res!53113 e!69553)))

(declare-fun e!69562 () Bool)

(assert (=> b!106902 (= res!53113 (not e!69562))))

(declare-fun res!53107 () Bool)

(assert (=> b!106902 (=> (not res!53107) (not e!69562))))

(assert (=> b!106902 (= res!53107 (bvslt #b00000000000000000000000000000000 (size!2309 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))))

(declare-fun b!106903 () Bool)

(declare-fun e!69558 () Bool)

(declare-fun e!69555 () Bool)

(assert (=> b!106903 (= e!69558 e!69555)))

(declare-fun res!53114 () Bool)

(declare-fun call!11292 () Bool)

(assert (=> b!106903 (= res!53114 call!11292)))

(assert (=> b!106903 (=> (not res!53114) (not e!69555))))

(declare-fun b!106905 () Bool)

(declare-fun res!53111 () Bool)

(assert (=> b!106905 (=> (not res!53111) (not e!69559))))

(assert (=> b!106905 (= res!53111 e!69558)))

(declare-fun c!18735 () Bool)

(assert (=> b!106905 (= c!18735 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106906 () Bool)

(declare-fun e!69560 () Bool)

(assert (=> b!106906 (= e!69560 (= (apply!98 lt!54777 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106906 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))))))))

(assert (=> b!106906 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))))

(declare-fun b!106907 () Bool)

(declare-fun call!11287 () ListLongMap!1533)

(assert (=> b!106907 (= e!69557 call!11287)))

(declare-fun b!106908 () Bool)

(declare-fun e!69551 () Unit!3212)

(declare-fun Unit!3274 () Unit!3212)

(assert (=> b!106908 (= e!69551 Unit!3274)))

(declare-fun b!106909 () Bool)

(assert (=> b!106909 (= e!69563 (not call!11289))))

(declare-fun b!106910 () Bool)

(assert (=> b!106910 (= e!69558 (not call!11292))))

(declare-fun b!106911 () Bool)

(declare-fun e!69561 () ListLongMap!1533)

(declare-fun e!69552 () ListLongMap!1533)

(assert (=> b!106911 (= e!69561 e!69552)))

(declare-fun c!18734 () Bool)

(assert (=> b!106911 (= c!18734 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11283 () Bool)

(declare-fun call!11290 () ListLongMap!1533)

(declare-fun call!11288 () ListLongMap!1533)

(assert (=> bm!11283 (= call!11290 call!11288)))

(declare-fun bm!11284 () Bool)

(assert (=> bm!11284 (= call!11292 (contains!814 lt!54777 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106912 () Bool)

(assert (=> b!106912 (= e!69559 e!69563)))

(declare-fun c!18739 () Bool)

(assert (=> b!106912 (= c!18739 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!29601 () Bool)

(assert (=> d!29601 e!69559))

(declare-fun res!53108 () Bool)

(assert (=> d!29601 (=> (not res!53108) (not e!69559))))

(assert (=> d!29601 (= res!53108 (or (bvsge #b00000000000000000000000000000000 (size!2309 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))))))

(declare-fun lt!54767 () ListLongMap!1533)

(assert (=> d!29601 (= lt!54777 lt!54767)))

(declare-fun lt!54769 () Unit!3212)

(assert (=> d!29601 (= lt!54769 e!69551)))

(declare-fun c!18737 () Bool)

(declare-fun e!69556 () Bool)

(assert (=> d!29601 (= c!18737 e!69556)))

(declare-fun res!53112 () Bool)

(assert (=> d!29601 (=> (not res!53112) (not e!69556))))

(assert (=> d!29601 (= res!53112 (bvslt #b00000000000000000000000000000000 (size!2309 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))))

(assert (=> d!29601 (= lt!54767 e!69561)))

(declare-fun c!18738 () Bool)

(assert (=> d!29601 (= c!18738 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29601 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29601 (= (getCurrentListMap!469 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54777)))

(declare-fun b!106904 () Bool)

(declare-fun call!11286 () ListLongMap!1533)

(assert (=> b!106904 (= e!69561 (+!139 call!11286 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun bm!11285 () Bool)

(assert (=> bm!11285 (= call!11289 (contains!814 lt!54777 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106913 () Bool)

(assert (=> b!106913 (= e!69555 (= (apply!98 lt!54777 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!106914 () Bool)

(assert (=> b!106914 (= e!69552 call!11291)))

(declare-fun b!106915 () Bool)

(assert (=> b!106915 (= e!69562 (validKeyInArray!0 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11286 () Bool)

(assert (=> bm!11286 (= call!11287 call!11290)))

(declare-fun bm!11287 () Bool)

(assert (=> bm!11287 (= call!11291 call!11286)))

(declare-fun b!106916 () Bool)

(declare-fun c!18736 () Bool)

(assert (=> b!106916 (= c!18736 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106916 (= e!69552 e!69557)))

(declare-fun bm!11288 () Bool)

(assert (=> bm!11288 (= call!11286 (+!139 (ite c!18738 call!11288 (ite c!18734 call!11290 call!11287)) (ite (or c!18738 c!18734) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun b!106917 () Bool)

(declare-fun lt!54775 () Unit!3212)

(assert (=> b!106917 (= e!69551 lt!54775)))

(declare-fun lt!54762 () ListLongMap!1533)

(assert (=> b!106917 (= lt!54762 (getCurrentListMapNoExtraKeys!106 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54776 () (_ BitVec 64))

(assert (=> b!106917 (= lt!54776 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54763 () (_ BitVec 64))

(assert (=> b!106917 (= lt!54763 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54781 () Unit!3212)

(assert (=> b!106917 (= lt!54781 (addStillContains!74 lt!54762 lt!54776 (zeroValue!2456 newMap!16) lt!54763))))

(assert (=> b!106917 (contains!814 (+!139 lt!54762 (tuple2!2361 lt!54776 (zeroValue!2456 newMap!16))) lt!54763)))

(declare-fun lt!54774 () Unit!3212)

(assert (=> b!106917 (= lt!54774 lt!54781)))

(declare-fun lt!54770 () ListLongMap!1533)

(assert (=> b!106917 (= lt!54770 (getCurrentListMapNoExtraKeys!106 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54761 () (_ BitVec 64))

(assert (=> b!106917 (= lt!54761 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54771 () (_ BitVec 64))

(assert (=> b!106917 (= lt!54771 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54778 () Unit!3212)

(assert (=> b!106917 (= lt!54778 (addApplyDifferent!74 lt!54770 lt!54761 (minValue!2456 newMap!16) lt!54771))))

(assert (=> b!106917 (= (apply!98 (+!139 lt!54770 (tuple2!2361 lt!54761 (minValue!2456 newMap!16))) lt!54771) (apply!98 lt!54770 lt!54771))))

(declare-fun lt!54765 () Unit!3212)

(assert (=> b!106917 (= lt!54765 lt!54778)))

(declare-fun lt!54773 () ListLongMap!1533)

(assert (=> b!106917 (= lt!54773 (getCurrentListMapNoExtraKeys!106 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54782 () (_ BitVec 64))

(assert (=> b!106917 (= lt!54782 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54768 () (_ BitVec 64))

(assert (=> b!106917 (= lt!54768 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54764 () Unit!3212)

(assert (=> b!106917 (= lt!54764 (addApplyDifferent!74 lt!54773 lt!54782 (zeroValue!2456 newMap!16) lt!54768))))

(assert (=> b!106917 (= (apply!98 (+!139 lt!54773 (tuple2!2361 lt!54782 (zeroValue!2456 newMap!16))) lt!54768) (apply!98 lt!54773 lt!54768))))

(declare-fun lt!54779 () Unit!3212)

(assert (=> b!106917 (= lt!54779 lt!54764)))

(declare-fun lt!54772 () ListLongMap!1533)

(assert (=> b!106917 (= lt!54772 (getCurrentListMapNoExtraKeys!106 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54766 () (_ BitVec 64))

(assert (=> b!106917 (= lt!54766 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54780 () (_ BitVec 64))

(assert (=> b!106917 (= lt!54780 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!106917 (= lt!54775 (addApplyDifferent!74 lt!54772 lt!54766 (minValue!2456 newMap!16) lt!54780))))

(assert (=> b!106917 (= (apply!98 (+!139 lt!54772 (tuple2!2361 lt!54766 (minValue!2456 newMap!16))) lt!54780) (apply!98 lt!54772 lt!54780))))

(declare-fun b!106918 () Bool)

(assert (=> b!106918 (= e!69556 (validKeyInArray!0 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11289 () Bool)

(assert (=> bm!11289 (= call!11288 (getCurrentListMapNoExtraKeys!106 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (array!4334 (store (arr!2055 (_values!2564 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (ValueCellFull!995 lt!53719)) (size!2310 (_values!2564 newMap!16))) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!106919 () Bool)

(assert (=> b!106919 (= e!69553 e!69560)))

(declare-fun res!53109 () Bool)

(assert (=> b!106919 (=> (not res!53109) (not e!69560))))

(assert (=> b!106919 (= res!53109 (contains!814 lt!54777 (select (arr!2054 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!106919 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))))))))

(assert (= (and d!29601 c!18738) b!106904))

(assert (= (and d!29601 (not c!18738)) b!106911))

(assert (= (and b!106911 c!18734) b!106914))

(assert (= (and b!106911 (not c!18734)) b!106916))

(assert (= (and b!106916 c!18736) b!106901))

(assert (= (and b!106916 (not c!18736)) b!106907))

(assert (= (or b!106901 b!106907) bm!11286))

(assert (= (or b!106914 bm!11286) bm!11283))

(assert (= (or b!106914 b!106901) bm!11287))

(assert (= (or b!106904 bm!11283) bm!11289))

(assert (= (or b!106904 bm!11287) bm!11288))

(assert (= (and d!29601 res!53112) b!106918))

(assert (= (and d!29601 c!18737) b!106917))

(assert (= (and d!29601 (not c!18737)) b!106908))

(assert (= (and d!29601 res!53108) b!106902))

(assert (= (and b!106902 res!53107) b!106915))

(assert (= (and b!106902 (not res!53113)) b!106919))

(assert (= (and b!106919 res!53109) b!106906))

(assert (= (and b!106902 res!53110) b!106905))

(assert (= (and b!106905 c!18735) b!106903))

(assert (= (and b!106905 (not c!18735)) b!106910))

(assert (= (and b!106903 res!53114) b!106913))

(assert (= (or b!106903 b!106910) bm!11284))

(assert (= (and b!106905 res!53111) b!106912))

(assert (= (and b!106912 c!18739) b!106900))

(assert (= (and b!106912 (not c!18739)) b!106909))

(assert (= (and b!106900 res!53106) b!106899))

(assert (= (or b!106900 b!106909) bm!11285))

(declare-fun b_lambda!4775 () Bool)

(assert (=> (not b_lambda!4775) (not b!106906)))

(assert (=> b!106906 t!5683))

(declare-fun b_and!6593 () Bool)

(assert (= b_and!6589 (and (=> t!5683 result!3459) b_and!6593)))

(assert (=> b!106906 t!5685))

(declare-fun b_and!6595 () Bool)

(assert (= b_and!6591 (and (=> t!5685 result!3461) b_and!6595)))

(declare-fun m!119943 () Bool)

(assert (=> b!106906 m!119943))

(assert (=> b!106906 m!117653))

(declare-fun m!119945 () Bool)

(assert (=> b!106906 m!119945))

(assert (=> b!106906 m!119943))

(assert (=> b!106906 m!117653))

(assert (=> b!106906 m!119903))

(declare-fun m!119947 () Bool)

(assert (=> b!106906 m!119947))

(assert (=> b!106906 m!119903))

(assert (=> d!29601 m!117661))

(assert (=> b!106915 m!119903))

(assert (=> b!106915 m!119903))

(assert (=> b!106915 m!119905))

(declare-fun m!119949 () Bool)

(assert (=> bm!11288 m!119949))

(declare-fun m!119951 () Bool)

(assert (=> bm!11289 m!119951))

(assert (=> b!106918 m!119903))

(assert (=> b!106918 m!119903))

(assert (=> b!106918 m!119905))

(declare-fun m!119953 () Bool)

(assert (=> b!106913 m!119953))

(declare-fun m!119955 () Bool)

(assert (=> bm!11284 m!119955))

(declare-fun m!119957 () Bool)

(assert (=> b!106917 m!119957))

(declare-fun m!119959 () Bool)

(assert (=> b!106917 m!119959))

(declare-fun m!119961 () Bool)

(assert (=> b!106917 m!119961))

(declare-fun m!119963 () Bool)

(assert (=> b!106917 m!119963))

(assert (=> b!106917 m!119951))

(declare-fun m!119965 () Bool)

(assert (=> b!106917 m!119965))

(declare-fun m!119967 () Bool)

(assert (=> b!106917 m!119967))

(declare-fun m!119969 () Bool)

(assert (=> b!106917 m!119969))

(declare-fun m!119971 () Bool)

(assert (=> b!106917 m!119971))

(assert (=> b!106917 m!119967))

(assert (=> b!106917 m!119971))

(declare-fun m!119973 () Bool)

(assert (=> b!106917 m!119973))

(declare-fun m!119975 () Bool)

(assert (=> b!106917 m!119975))

(declare-fun m!119977 () Bool)

(assert (=> b!106917 m!119977))

(assert (=> b!106917 m!119903))

(declare-fun m!119979 () Bool)

(assert (=> b!106917 m!119979))

(declare-fun m!119981 () Bool)

(assert (=> b!106917 m!119981))

(assert (=> b!106917 m!119965))

(declare-fun m!119983 () Bool)

(assert (=> b!106917 m!119983))

(assert (=> b!106917 m!119959))

(declare-fun m!119985 () Bool)

(assert (=> b!106917 m!119985))

(assert (=> b!106919 m!119903))

(assert (=> b!106919 m!119903))

(declare-fun m!119987 () Bool)

(assert (=> b!106919 m!119987))

(declare-fun m!119989 () Bool)

(assert (=> b!106904 m!119989))

(declare-fun m!119991 () Bool)

(assert (=> b!106899 m!119991))

(declare-fun m!119993 () Bool)

(assert (=> bm!11285 m!119993))

(assert (=> d!29009 d!29601))

(declare-fun d!29603 () Bool)

(declare-fun e!69566 () Bool)

(assert (=> d!29603 e!69566))

(declare-fun res!53117 () Bool)

(assert (=> d!29603 (=> (not res!53117) (not e!69566))))

(assert (=> d!29603 (= res!53117 (and (bvsge (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000000) (bvslt (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (size!2309 (_keys!4287 newMap!16)))))))

(declare-fun lt!54785 () Unit!3212)

(declare-fun choose!41 (array!4331 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1597) Unit!3212)

(assert (=> d!29603 (= lt!54785 (choose!41 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) lt!54355 lt!54347))))

(assert (=> d!29603 (bvslt (size!2309 (_keys!4287 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!29603 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) lt!54355 lt!54347) lt!54785)))

(declare-fun b!106922 () Bool)

(assert (=> b!106922 (= e!69566 (arrayNoDuplicates!0 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) lt!54355 lt!54347))))

(assert (= (and d!29603 res!53117) b!106922))

(assert (=> d!29603 m!117261))

(declare-fun m!119995 () Bool)

(assert (=> d!29603 m!119995))

(assert (=> b!106922 m!118399))

(assert (=> b!106922 m!118415))

(assert (=> d!29009 d!29603))

(declare-fun d!29605 () Bool)

(declare-fun e!69569 () Bool)

(assert (=> d!29605 e!69569))

(declare-fun res!53120 () Bool)

(assert (=> d!29605 (=> (not res!53120) (not e!69569))))

(assert (=> d!29605 (= res!53120 (and (bvsge (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000000) (bvslt (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (size!2309 (_keys!4287 newMap!16)))))))

(declare-fun lt!54788 () Unit!3212)

(declare-fun choose!102 ((_ BitVec 64) array!4331 (_ BitVec 32) (_ BitVec 32)) Unit!3212)

(assert (=> d!29605 (= lt!54788 (choose!102 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (mask!6727 newMap!16)))))

(assert (=> d!29605 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29605 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (mask!6727 newMap!16)) lt!54788)))

(declare-fun b!106925 () Bool)

(assert (=> b!106925 (= e!69569 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) (mask!6727 newMap!16)))))

(assert (= (and d!29605 res!53120) b!106925))

(assert (=> d!29605 m!117261))

(declare-fun m!119997 () Bool)

(assert (=> d!29605 m!119997))

(assert (=> d!29605 m!117661))

(assert (=> b!106925 m!118399))

(assert (=> b!106925 m!118423))

(assert (=> d!29009 d!29605))

(declare-fun b!106936 () Bool)

(declare-fun e!69575 () Bool)

(assert (=> b!106936 (= e!69575 (bvslt (size!2309 (_keys!4287 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!106935 () Bool)

(declare-fun res!53131 () Bool)

(assert (=> b!106935 (=> (not res!53131) (not e!69575))))

(assert (=> b!106935 (= res!53131 (validKeyInArray!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!69574 () Bool)

(declare-fun b!106937 () Bool)

(assert (=> b!106937 (= e!69574 (= (arrayCountValidKeys!0 (array!4332 (store (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2309 (_keys!4287 newMap!16))) #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4287 newMap!16) #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!29607 () Bool)

(assert (=> d!29607 e!69574))

(declare-fun res!53130 () Bool)

(assert (=> d!29607 (=> (not res!53130) (not e!69574))))

(assert (=> d!29607 (= res!53130 (and (bvsge (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000000) (bvslt (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (size!2309 (_keys!4287 newMap!16)))))))

(declare-fun lt!54791 () Unit!3212)

(declare-fun choose!1 (array!4331 (_ BitVec 32) (_ BitVec 64)) Unit!3212)

(assert (=> d!29607 (= lt!54791 (choose!1 (_keys!4287 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29607 e!69575))

(declare-fun res!53132 () Bool)

(assert (=> d!29607 (=> (not res!53132) (not e!69575))))

(assert (=> d!29607 (= res!53132 (and (bvsge (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) #b00000000000000000000000000000000) (bvslt (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (size!2309 (_keys!4287 newMap!16)))))))

(assert (=> d!29607 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4287 newMap!16) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54791)))

(declare-fun b!106934 () Bool)

(declare-fun res!53129 () Bool)

(assert (=> b!106934 (=> (not res!53129) (not e!69575))))

(assert (=> b!106934 (= res!53129 (not (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) (ite c!18319 (index!3163 lt!53873) (index!3160 lt!53873))))))))

(assert (= (and d!29607 res!53132) b!106934))

(assert (= (and b!106934 res!53129) b!106935))

(assert (= (and b!106935 res!53131) b!106936))

(assert (= (and d!29607 res!53130) b!106937))

(assert (=> b!106935 m!117261))

(assert (=> b!106935 m!117637))

(assert (=> b!106937 m!118399))

(assert (=> b!106937 m!118417))

(assert (=> b!106937 m!117543))

(assert (=> d!29607 m!117261))

(declare-fun m!119999 () Bool)

(assert (=> d!29607 m!119999))

(declare-fun m!120001 () Bool)

(assert (=> b!106934 m!120001))

(assert (=> b!106934 m!120001))

(declare-fun m!120003 () Bool)

(assert (=> b!106934 m!120003))

(assert (=> d!29009 d!29607))

(declare-fun b!106938 () Bool)

(declare-fun e!69579 () Bool)

(declare-fun lt!54808 () ListLongMap!1533)

(assert (=> b!106938 (= e!69579 (= (apply!98 lt!54808 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!106939 () Bool)

(declare-fun e!69588 () Bool)

(assert (=> b!106939 (= e!69588 e!69579)))

(declare-fun res!53133 () Bool)

(declare-fun call!11296 () Bool)

(assert (=> b!106939 (= res!53133 call!11296)))

(assert (=> b!106939 (=> (not res!53133) (not e!69579))))

(declare-fun b!106940 () Bool)

(declare-fun e!69582 () ListLongMap!1533)

(declare-fun call!11298 () ListLongMap!1533)

(assert (=> b!106940 (= e!69582 call!11298)))

(declare-fun b!106941 () Bool)

(declare-fun res!53137 () Bool)

(declare-fun e!69584 () Bool)

(assert (=> b!106941 (=> (not res!53137) (not e!69584))))

(declare-fun e!69578 () Bool)

(assert (=> b!106941 (= res!53137 e!69578)))

(declare-fun res!53140 () Bool)

(assert (=> b!106941 (=> res!53140 e!69578)))

(declare-fun e!69587 () Bool)

(assert (=> b!106941 (= res!53140 (not e!69587))))

(declare-fun res!53134 () Bool)

(assert (=> b!106941 (=> (not res!53134) (not e!69587))))

(assert (=> b!106941 (= res!53134 (bvslt #b00000000000000000000000000000000 (size!2309 lt!54360)))))

(declare-fun b!106942 () Bool)

(declare-fun e!69583 () Bool)

(declare-fun e!69580 () Bool)

(assert (=> b!106942 (= e!69583 e!69580)))

(declare-fun res!53141 () Bool)

(declare-fun call!11299 () Bool)

(assert (=> b!106942 (= res!53141 call!11299)))

(assert (=> b!106942 (=> (not res!53141) (not e!69580))))

(declare-fun b!106944 () Bool)

(declare-fun res!53138 () Bool)

(assert (=> b!106944 (=> (not res!53138) (not e!69584))))

(assert (=> b!106944 (= res!53138 e!69583)))

(declare-fun c!18741 () Bool)

(assert (=> b!106944 (= c!18741 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69585 () Bool)

(declare-fun b!106945 () Bool)

(assert (=> b!106945 (= e!69585 (= (apply!98 lt!54808 (select (arr!2054 lt!54360) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 lt!54335) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106945 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 lt!54335)))))

(assert (=> b!106945 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 lt!54360)))))

(declare-fun b!106946 () Bool)

(declare-fun call!11294 () ListLongMap!1533)

(assert (=> b!106946 (= e!69582 call!11294)))

(declare-fun b!106947 () Bool)

(declare-fun e!69576 () Unit!3212)

(declare-fun Unit!3275 () Unit!3212)

(assert (=> b!106947 (= e!69576 Unit!3275)))

(declare-fun b!106948 () Bool)

(assert (=> b!106948 (= e!69588 (not call!11296))))

(declare-fun b!106949 () Bool)

(assert (=> b!106949 (= e!69583 (not call!11299))))

(declare-fun b!106950 () Bool)

(declare-fun e!69586 () ListLongMap!1533)

(declare-fun e!69577 () ListLongMap!1533)

(assert (=> b!106950 (= e!69586 e!69577)))

(declare-fun c!18740 () Bool)

(assert (=> b!106950 (= c!18740 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11290 () Bool)

(declare-fun call!11297 () ListLongMap!1533)

(declare-fun call!11295 () ListLongMap!1533)

(assert (=> bm!11290 (= call!11297 call!11295)))

(declare-fun bm!11291 () Bool)

(assert (=> bm!11291 (= call!11299 (contains!814 lt!54808 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106951 () Bool)

(assert (=> b!106951 (= e!69584 e!69588)))

(declare-fun c!18745 () Bool)

(assert (=> b!106951 (= c!18745 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!29609 () Bool)

(assert (=> d!29609 e!69584))

(declare-fun res!53135 () Bool)

(assert (=> d!29609 (=> (not res!53135) (not e!69584))))

(assert (=> d!29609 (= res!53135 (or (bvsge #b00000000000000000000000000000000 (size!2309 lt!54360)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 lt!54360)))))))

(declare-fun lt!54798 () ListLongMap!1533)

(assert (=> d!29609 (= lt!54808 lt!54798)))

(declare-fun lt!54800 () Unit!3212)

(assert (=> d!29609 (= lt!54800 e!69576)))

(declare-fun c!18743 () Bool)

(declare-fun e!69581 () Bool)

(assert (=> d!29609 (= c!18743 e!69581)))

(declare-fun res!53139 () Bool)

(assert (=> d!29609 (=> (not res!53139) (not e!69581))))

(assert (=> d!29609 (= res!53139 (bvslt #b00000000000000000000000000000000 (size!2309 lt!54360)))))

(assert (=> d!29609 (= lt!54798 e!69586)))

(declare-fun c!18744 () Bool)

(assert (=> d!29609 (= c!18744 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29609 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29609 (= (getCurrentListMap!469 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54808)))

(declare-fun b!106943 () Bool)

(declare-fun call!11293 () ListLongMap!1533)

(assert (=> b!106943 (= e!69586 (+!139 call!11293 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun bm!11292 () Bool)

(assert (=> bm!11292 (= call!11296 (contains!814 lt!54808 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106952 () Bool)

(assert (=> b!106952 (= e!69580 (= (apply!98 lt!54808 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!106953 () Bool)

(assert (=> b!106953 (= e!69577 call!11298)))

(declare-fun b!106954 () Bool)

(assert (=> b!106954 (= e!69587 (validKeyInArray!0 (select (arr!2054 lt!54360) #b00000000000000000000000000000000)))))

(declare-fun bm!11293 () Bool)

(assert (=> bm!11293 (= call!11294 call!11297)))

(declare-fun bm!11294 () Bool)

(assert (=> bm!11294 (= call!11298 call!11293)))

(declare-fun b!106955 () Bool)

(declare-fun c!18742 () Bool)

(assert (=> b!106955 (= c!18742 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106955 (= e!69577 e!69582)))

(declare-fun bm!11295 () Bool)

(assert (=> bm!11295 (= call!11293 (+!139 (ite c!18744 call!11295 (ite c!18740 call!11297 call!11294)) (ite (or c!18744 c!18740) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun b!106956 () Bool)

(declare-fun lt!54806 () Unit!3212)

(assert (=> b!106956 (= e!69576 lt!54806)))

(declare-fun lt!54793 () ListLongMap!1533)

(assert (=> b!106956 (= lt!54793 (getCurrentListMapNoExtraKeys!106 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54807 () (_ BitVec 64))

(assert (=> b!106956 (= lt!54807 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54794 () (_ BitVec 64))

(assert (=> b!106956 (= lt!54794 (select (arr!2054 lt!54360) #b00000000000000000000000000000000))))

(declare-fun lt!54812 () Unit!3212)

(assert (=> b!106956 (= lt!54812 (addStillContains!74 lt!54793 lt!54807 (zeroValue!2456 newMap!16) lt!54794))))

(assert (=> b!106956 (contains!814 (+!139 lt!54793 (tuple2!2361 lt!54807 (zeroValue!2456 newMap!16))) lt!54794)))

(declare-fun lt!54805 () Unit!3212)

(assert (=> b!106956 (= lt!54805 lt!54812)))

(declare-fun lt!54801 () ListLongMap!1533)

(assert (=> b!106956 (= lt!54801 (getCurrentListMapNoExtraKeys!106 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54792 () (_ BitVec 64))

(assert (=> b!106956 (= lt!54792 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54802 () (_ BitVec 64))

(assert (=> b!106956 (= lt!54802 (select (arr!2054 lt!54360) #b00000000000000000000000000000000))))

(declare-fun lt!54809 () Unit!3212)

(assert (=> b!106956 (= lt!54809 (addApplyDifferent!74 lt!54801 lt!54792 (minValue!2456 newMap!16) lt!54802))))

(assert (=> b!106956 (= (apply!98 (+!139 lt!54801 (tuple2!2361 lt!54792 (minValue!2456 newMap!16))) lt!54802) (apply!98 lt!54801 lt!54802))))

(declare-fun lt!54796 () Unit!3212)

(assert (=> b!106956 (= lt!54796 lt!54809)))

(declare-fun lt!54804 () ListLongMap!1533)

(assert (=> b!106956 (= lt!54804 (getCurrentListMapNoExtraKeys!106 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54813 () (_ BitVec 64))

(assert (=> b!106956 (= lt!54813 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54799 () (_ BitVec 64))

(assert (=> b!106956 (= lt!54799 (select (arr!2054 lt!54360) #b00000000000000000000000000000000))))

(declare-fun lt!54795 () Unit!3212)

(assert (=> b!106956 (= lt!54795 (addApplyDifferent!74 lt!54804 lt!54813 (zeroValue!2456 newMap!16) lt!54799))))

(assert (=> b!106956 (= (apply!98 (+!139 lt!54804 (tuple2!2361 lt!54813 (zeroValue!2456 newMap!16))) lt!54799) (apply!98 lt!54804 lt!54799))))

(declare-fun lt!54810 () Unit!3212)

(assert (=> b!106956 (= lt!54810 lt!54795)))

(declare-fun lt!54803 () ListLongMap!1533)

(assert (=> b!106956 (= lt!54803 (getCurrentListMapNoExtraKeys!106 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54797 () (_ BitVec 64))

(assert (=> b!106956 (= lt!54797 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54811 () (_ BitVec 64))

(assert (=> b!106956 (= lt!54811 (select (arr!2054 lt!54360) #b00000000000000000000000000000000))))

(assert (=> b!106956 (= lt!54806 (addApplyDifferent!74 lt!54803 lt!54797 (minValue!2456 newMap!16) lt!54811))))

(assert (=> b!106956 (= (apply!98 (+!139 lt!54803 (tuple2!2361 lt!54797 (minValue!2456 newMap!16))) lt!54811) (apply!98 lt!54803 lt!54811))))

(declare-fun b!106957 () Bool)

(assert (=> b!106957 (= e!69581 (validKeyInArray!0 (select (arr!2054 lt!54360) #b00000000000000000000000000000000)))))

(declare-fun bm!11296 () Bool)

(assert (=> bm!11296 (= call!11295 (getCurrentListMapNoExtraKeys!106 lt!54360 lt!54335 (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!106958 () Bool)

(assert (=> b!106958 (= e!69578 e!69585)))

(declare-fun res!53136 () Bool)

(assert (=> b!106958 (=> (not res!53136) (not e!69585))))

(assert (=> b!106958 (= res!53136 (contains!814 lt!54808 (select (arr!2054 lt!54360) #b00000000000000000000000000000000)))))

(assert (=> b!106958 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 lt!54360)))))

(assert (= (and d!29609 c!18744) b!106943))

(assert (= (and d!29609 (not c!18744)) b!106950))

(assert (= (and b!106950 c!18740) b!106953))

(assert (= (and b!106950 (not c!18740)) b!106955))

(assert (= (and b!106955 c!18742) b!106940))

(assert (= (and b!106955 (not c!18742)) b!106946))

(assert (= (or b!106940 b!106946) bm!11293))

(assert (= (or b!106953 bm!11293) bm!11290))

(assert (= (or b!106953 b!106940) bm!11294))

(assert (= (or b!106943 bm!11290) bm!11296))

(assert (= (or b!106943 bm!11294) bm!11295))

(assert (= (and d!29609 res!53139) b!106957))

(assert (= (and d!29609 c!18743) b!106956))

(assert (= (and d!29609 (not c!18743)) b!106947))

(assert (= (and d!29609 res!53135) b!106941))

(assert (= (and b!106941 res!53134) b!106954))

(assert (= (and b!106941 (not res!53140)) b!106958))

(assert (= (and b!106958 res!53136) b!106945))

(assert (= (and b!106941 res!53137) b!106944))

(assert (= (and b!106944 c!18741) b!106942))

(assert (= (and b!106944 (not c!18741)) b!106949))

(assert (= (and b!106942 res!53141) b!106952))

(assert (= (or b!106942 b!106949) bm!11291))

(assert (= (and b!106944 res!53138) b!106951))

(assert (= (and b!106951 c!18745) b!106939))

(assert (= (and b!106951 (not c!18745)) b!106948))

(assert (= (and b!106939 res!53133) b!106938))

(assert (= (or b!106939 b!106948) bm!11292))

(declare-fun b_lambda!4777 () Bool)

(assert (=> (not b_lambda!4777) (not b!106945)))

(assert (=> b!106945 t!5683))

(declare-fun b_and!6597 () Bool)

(assert (= b_and!6593 (and (=> t!5683 result!3459) b_and!6597)))

(assert (=> b!106945 t!5685))

(declare-fun b_and!6599 () Bool)

(assert (= b_and!6595 (and (=> t!5685 result!3461) b_and!6599)))

(declare-fun m!120005 () Bool)

(assert (=> b!106945 m!120005))

(assert (=> b!106945 m!117653))

(declare-fun m!120007 () Bool)

(assert (=> b!106945 m!120007))

(assert (=> b!106945 m!120005))

(assert (=> b!106945 m!117653))

(declare-fun m!120009 () Bool)

(assert (=> b!106945 m!120009))

(declare-fun m!120011 () Bool)

(assert (=> b!106945 m!120011))

(assert (=> b!106945 m!120009))

(assert (=> d!29609 m!117661))

(assert (=> b!106954 m!120009))

(assert (=> b!106954 m!120009))

(declare-fun m!120013 () Bool)

(assert (=> b!106954 m!120013))

(declare-fun m!120015 () Bool)

(assert (=> bm!11295 m!120015))

(declare-fun m!120017 () Bool)

(assert (=> bm!11296 m!120017))

(assert (=> b!106957 m!120009))

(assert (=> b!106957 m!120009))

(assert (=> b!106957 m!120013))

(declare-fun m!120019 () Bool)

(assert (=> b!106952 m!120019))

(declare-fun m!120021 () Bool)

(assert (=> bm!11291 m!120021))

(declare-fun m!120023 () Bool)

(assert (=> b!106956 m!120023))

(declare-fun m!120025 () Bool)

(assert (=> b!106956 m!120025))

(declare-fun m!120027 () Bool)

(assert (=> b!106956 m!120027))

(declare-fun m!120029 () Bool)

(assert (=> b!106956 m!120029))

(assert (=> b!106956 m!120017))

(declare-fun m!120031 () Bool)

(assert (=> b!106956 m!120031))

(declare-fun m!120033 () Bool)

(assert (=> b!106956 m!120033))

(declare-fun m!120035 () Bool)

(assert (=> b!106956 m!120035))

(declare-fun m!120037 () Bool)

(assert (=> b!106956 m!120037))

(assert (=> b!106956 m!120033))

(assert (=> b!106956 m!120037))

(declare-fun m!120039 () Bool)

(assert (=> b!106956 m!120039))

(declare-fun m!120041 () Bool)

(assert (=> b!106956 m!120041))

(declare-fun m!120043 () Bool)

(assert (=> b!106956 m!120043))

(assert (=> b!106956 m!120009))

(declare-fun m!120045 () Bool)

(assert (=> b!106956 m!120045))

(declare-fun m!120047 () Bool)

(assert (=> b!106956 m!120047))

(assert (=> b!106956 m!120031))

(declare-fun m!120049 () Bool)

(assert (=> b!106956 m!120049))

(assert (=> b!106956 m!120025))

(declare-fun m!120051 () Bool)

(assert (=> b!106956 m!120051))

(assert (=> b!106958 m!120009))

(assert (=> b!106958 m!120009))

(declare-fun m!120053 () Bool)

(assert (=> b!106958 m!120053))

(declare-fun m!120055 () Bool)

(assert (=> b!106943 m!120055))

(declare-fun m!120057 () Bool)

(assert (=> b!106938 m!120057))

(declare-fun m!120059 () Bool)

(assert (=> bm!11292 m!120059))

(assert (=> d!29009 d!29609))

(assert (=> d!29009 d!29007))

(declare-fun d!29611 () Bool)

(declare-fun res!53142 () Bool)

(declare-fun e!69589 () Bool)

(assert (=> d!29611 (=> res!53142 e!69589)))

(assert (=> d!29611 (= res!53142 (= (select (arr!2054 lt!54358) #b00000000000000000000000000000000) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29611 (= (arrayContainsKey!0 lt!54358 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000) e!69589)))

(declare-fun b!106959 () Bool)

(declare-fun e!69590 () Bool)

(assert (=> b!106959 (= e!69589 e!69590)))

(declare-fun res!53143 () Bool)

(assert (=> b!106959 (=> (not res!53143) (not e!69590))))

(assert (=> b!106959 (= res!53143 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2309 lt!54358)))))

(declare-fun b!106960 () Bool)

(assert (=> b!106960 (= e!69590 (arrayContainsKey!0 lt!54358 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!29611 (not res!53142)) b!106959))

(assert (= (and b!106959 res!53143) b!106960))

(declare-fun m!120061 () Bool)

(assert (=> d!29611 m!120061))

(assert (=> b!106960 m!117261))

(declare-fun m!120063 () Bool)

(assert (=> b!106960 m!120063))

(assert (=> d!29009 d!29611))

(declare-fun d!29613 () Bool)

(declare-fun lt!54814 () Bool)

(assert (=> d!29613 (= lt!54814 (select (content!111 (t!5671 (toList!782 lt!53970))) lt!53718))))

(declare-fun e!69591 () Bool)

(assert (=> d!29613 (= lt!54814 e!69591)))

(declare-fun res!53144 () Bool)

(assert (=> d!29613 (=> (not res!53144) (not e!69591))))

(assert (=> d!29613 (= res!53144 ((_ is Cons!1592) (t!5671 (toList!782 lt!53970))))))

(assert (=> d!29613 (= (contains!816 (t!5671 (toList!782 lt!53970)) lt!53718) lt!54814)))

(declare-fun b!106961 () Bool)

(declare-fun e!69592 () Bool)

(assert (=> b!106961 (= e!69591 e!69592)))

(declare-fun res!53145 () Bool)

(assert (=> b!106961 (=> res!53145 e!69592)))

(assert (=> b!106961 (= res!53145 (= (h!2189 (t!5671 (toList!782 lt!53970))) lt!53718))))

(declare-fun b!106962 () Bool)

(assert (=> b!106962 (= e!69592 (contains!816 (t!5671 (t!5671 (toList!782 lt!53970))) lt!53718))))

(assert (= (and d!29613 res!53144) b!106961))

(assert (= (and b!106961 (not res!53145)) b!106962))

(assert (=> d!29613 m!119867))

(declare-fun m!120065 () Bool)

(assert (=> d!29613 m!120065))

(declare-fun m!120067 () Bool)

(assert (=> b!106962 m!120067))

(assert (=> b!106073 d!29613))

(declare-fun d!29615 () Bool)

(declare-fun c!18746 () Bool)

(assert (=> d!29615 (= c!18746 ((_ is Nil!1593) (toList!782 lt!53974)))))

(declare-fun e!69593 () (InoxSet tuple2!2360))

(assert (=> d!29615 (= (content!111 (toList!782 lt!53974)) e!69593)))

(declare-fun b!106963 () Bool)

(assert (=> b!106963 (= e!69593 ((as const (Array tuple2!2360 Bool)) false))))

(declare-fun b!106964 () Bool)

(assert (=> b!106964 (= e!69593 ((_ map or) (store ((as const (Array tuple2!2360 Bool)) false) (h!2189 (toList!782 lt!53974)) true) (content!111 (t!5671 (toList!782 lt!53974)))))))

(assert (= (and d!29615 c!18746) b!106963))

(assert (= (and d!29615 (not c!18746)) b!106964))

(declare-fun m!120069 () Bool)

(assert (=> b!106964 m!120069))

(declare-fun m!120071 () Bool)

(assert (=> b!106964 m!120071))

(assert (=> d!28991 d!29615))

(assert (=> b!105642 d!29461))

(assert (=> b!105904 d!29029))

(assert (=> b!105904 d!29031))

(declare-fun b!106965 () Bool)

(declare-fun e!69594 () Option!163)

(assert (=> b!106965 (= e!69594 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54114)))))))

(declare-fun d!29617 () Bool)

(declare-fun c!18747 () Bool)

(assert (=> d!29617 (= c!18747 (and ((_ is Cons!1592) (toList!782 lt!54114)) (= (_1!1191 (h!2189 (toList!782 lt!54114))) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29617 (= (getValueByKey!157 (toList!782 lt!54114) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69594)))

(declare-fun b!106967 () Bool)

(declare-fun e!69595 () Option!163)

(assert (=> b!106967 (= e!69595 (getValueByKey!157 (t!5671 (toList!782 lt!54114)) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106966 () Bool)

(assert (=> b!106966 (= e!69594 e!69595)))

(declare-fun c!18748 () Bool)

(assert (=> b!106966 (= c!18748 (and ((_ is Cons!1592) (toList!782 lt!54114)) (not (= (_1!1191 (h!2189 (toList!782 lt!54114))) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106968 () Bool)

(assert (=> b!106968 (= e!69595 None!161)))

(assert (= (and d!29617 c!18747) b!106965))

(assert (= (and d!29617 (not c!18747)) b!106966))

(assert (= (and b!106966 c!18748) b!106967))

(assert (= (and b!106966 (not c!18748)) b!106968))

(declare-fun m!120073 () Bool)

(assert (=> b!106967 m!120073))

(assert (=> b!105768 d!29617))

(assert (=> b!105820 d!29039))

(assert (=> b!105820 d!29041))

(declare-fun d!29619 () Bool)

(declare-fun lt!54815 () Bool)

(assert (=> d!29619 (= lt!54815 (select (content!111 (toList!782 lt!54057)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69596 () Bool)

(assert (=> d!29619 (= lt!54815 e!69596)))

(declare-fun res!53146 () Bool)

(assert (=> d!29619 (=> (not res!53146) (not e!69596))))

(assert (=> d!29619 (= res!53146 ((_ is Cons!1592) (toList!782 lt!54057)))))

(assert (=> d!29619 (= (contains!816 (toList!782 lt!54057) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!54815)))

(declare-fun b!106969 () Bool)

(declare-fun e!69597 () Bool)

(assert (=> b!106969 (= e!69596 e!69597)))

(declare-fun res!53147 () Bool)

(assert (=> b!106969 (=> res!53147 e!69597)))

(assert (=> b!106969 (= res!53147 (= (h!2189 (toList!782 lt!54057)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106970 () Bool)

(assert (=> b!106970 (= e!69597 (contains!816 (t!5671 (toList!782 lt!54057)) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29619 res!53146) b!106969))

(assert (= (and b!106969 (not res!53147)) b!106970))

(declare-fun m!120075 () Bool)

(assert (=> d!29619 m!120075))

(declare-fun m!120077 () Bool)

(assert (=> d!29619 m!120077))

(declare-fun m!120079 () Bool)

(assert (=> b!106970 m!120079))

(assert (=> b!105665 d!29619))

(assert (=> b!106016 d!29085))

(assert (=> b!106016 d!29087))

(declare-fun d!29621 () Bool)

(declare-fun e!69598 () Bool)

(assert (=> d!29621 e!69598))

(declare-fun res!53148 () Bool)

(assert (=> d!29621 (=> (not res!53148) (not e!69598))))

(declare-fun lt!54817 () ListLongMap!1533)

(assert (=> d!29621 (= res!53148 (contains!814 lt!54817 (_1!1191 (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(declare-fun lt!54816 () List!1596)

(assert (=> d!29621 (= lt!54817 (ListLongMap!1534 lt!54816))))

(declare-fun lt!54819 () Unit!3212)

(declare-fun lt!54818 () Unit!3212)

(assert (=> d!29621 (= lt!54819 lt!54818)))

(assert (=> d!29621 (= (getValueByKey!157 lt!54816 (_1!1191 (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))) (Some!162 (_2!1191 (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29621 (= lt!54818 (lemmaContainsTupThenGetReturnValue!73 lt!54816 (_1!1191 (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (_2!1191 (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29621 (= lt!54816 (insertStrictlySorted!76 (toList!782 (ite c!18425 call!11164 (ite c!18421 call!11166 call!11163))) (_1!1191 (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (_2!1191 (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29621 (= (+!139 (ite c!18425 call!11164 (ite c!18421 call!11166 call!11163)) (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) lt!54817)))

(declare-fun b!106971 () Bool)

(declare-fun res!53149 () Bool)

(assert (=> b!106971 (=> (not res!53149) (not e!69598))))

(assert (=> b!106971 (= res!53149 (= (getValueByKey!157 (toList!782 lt!54817) (_1!1191 (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))) (Some!162 (_2!1191 (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))))

(declare-fun b!106972 () Bool)

(assert (=> b!106972 (= e!69598 (contains!816 (toList!782 lt!54817) (ite (or c!18425 c!18421) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (= (and d!29621 res!53148) b!106971))

(assert (= (and b!106971 res!53149) b!106972))

(declare-fun m!120081 () Bool)

(assert (=> d!29621 m!120081))

(declare-fun m!120083 () Bool)

(assert (=> d!29621 m!120083))

(declare-fun m!120085 () Bool)

(assert (=> d!29621 m!120085))

(declare-fun m!120087 () Bool)

(assert (=> d!29621 m!120087))

(declare-fun m!120089 () Bool)

(assert (=> b!106971 m!120089))

(declare-fun m!120091 () Bool)

(assert (=> b!106972 m!120091))

(assert (=> bm!11164 d!29621))

(declare-fun d!29623 () Bool)

(declare-fun e!69599 () Bool)

(assert (=> d!29623 e!69599))

(declare-fun res!53150 () Bool)

(assert (=> d!29623 (=> res!53150 e!69599)))

(declare-fun lt!54821 () Bool)

(assert (=> d!29623 (= res!53150 (not lt!54821))))

(declare-fun lt!54822 () Bool)

(assert (=> d!29623 (= lt!54821 lt!54822)))

(declare-fun lt!54823 () Unit!3212)

(declare-fun e!69600 () Unit!3212)

(assert (=> d!29623 (= lt!54823 e!69600)))

(declare-fun c!18749 () Bool)

(assert (=> d!29623 (= c!18749 lt!54822)))

(assert (=> d!29623 (= lt!54822 (containsKey!160 (toList!782 lt!54114) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29623 (= (contains!814 lt!54114 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54821)))

(declare-fun b!106973 () Bool)

(declare-fun lt!54820 () Unit!3212)

(assert (=> b!106973 (= e!69600 lt!54820)))

(assert (=> b!106973 (= lt!54820 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54114) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106973 (isDefined!109 (getValueByKey!157 (toList!782 lt!54114) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106974 () Bool)

(declare-fun Unit!3276 () Unit!3212)

(assert (=> b!106974 (= e!69600 Unit!3276)))

(declare-fun b!106975 () Bool)

(assert (=> b!106975 (= e!69599 (isDefined!109 (getValueByKey!157 (toList!782 lt!54114) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29623 c!18749) b!106973))

(assert (= (and d!29623 (not c!18749)) b!106974))

(assert (= (and d!29623 (not res!53150)) b!106975))

(declare-fun m!120093 () Bool)

(assert (=> d!29623 m!120093))

(declare-fun m!120095 () Bool)

(assert (=> b!106973 m!120095))

(assert (=> b!106973 m!117935))

(assert (=> b!106973 m!117935))

(declare-fun m!120097 () Bool)

(assert (=> b!106973 m!120097))

(assert (=> b!106975 m!117935))

(assert (=> b!106975 m!117935))

(assert (=> b!106975 m!120097))

(assert (=> d!28879 d!29623))

(declare-fun b!106976 () Bool)

(declare-fun e!69601 () Option!163)

(assert (=> b!106976 (= e!69601 (Some!162 (_2!1191 (h!2189 lt!54113))))))

(declare-fun d!29625 () Bool)

(declare-fun c!18750 () Bool)

(assert (=> d!29625 (= c!18750 (and ((_ is Cons!1592) lt!54113) (= (_1!1191 (h!2189 lt!54113)) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29625 (= (getValueByKey!157 lt!54113 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69601)))

(declare-fun e!69602 () Option!163)

(declare-fun b!106978 () Bool)

(assert (=> b!106978 (= e!69602 (getValueByKey!157 (t!5671 lt!54113) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106977 () Bool)

(assert (=> b!106977 (= e!69601 e!69602)))

(declare-fun c!18751 () Bool)

(assert (=> b!106977 (= c!18751 (and ((_ is Cons!1592) lt!54113) (not (= (_1!1191 (h!2189 lt!54113)) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!106979 () Bool)

(assert (=> b!106979 (= e!69602 None!161)))

(assert (= (and d!29625 c!18750) b!106976))

(assert (= (and d!29625 (not c!18750)) b!106977))

(assert (= (and b!106977 c!18751) b!106978))

(assert (= (and b!106977 (not c!18751)) b!106979))

(declare-fun m!120099 () Bool)

(assert (=> b!106978 m!120099))

(assert (=> d!28879 d!29625))

(declare-fun d!29627 () Bool)

(assert (=> d!29627 (= (getValueByKey!157 lt!54113 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54824 () Unit!3212)

(assert (=> d!29627 (= lt!54824 (choose!662 lt!54113 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69603 () Bool)

(assert (=> d!29627 e!69603))

(declare-fun res!53151 () Bool)

(assert (=> d!29627 (=> (not res!53151) (not e!69603))))

(assert (=> d!29627 (= res!53151 (isStrictlySorted!296 lt!54113))))

(assert (=> d!29627 (= (lemmaContainsTupThenGetReturnValue!73 lt!54113 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54824)))

(declare-fun b!106980 () Bool)

(declare-fun res!53152 () Bool)

(assert (=> b!106980 (=> (not res!53152) (not e!69603))))

(assert (=> b!106980 (= res!53152 (containsKey!160 lt!54113 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106981 () Bool)

(assert (=> b!106981 (= e!69603 (contains!816 lt!54113 (tuple2!2361 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29627 res!53151) b!106980))

(assert (= (and b!106980 res!53152) b!106981))

(assert (=> d!29627 m!117929))

(declare-fun m!120101 () Bool)

(assert (=> d!29627 m!120101))

(declare-fun m!120103 () Bool)

(assert (=> d!29627 m!120103))

(declare-fun m!120105 () Bool)

(assert (=> b!106980 m!120105))

(declare-fun m!120107 () Bool)

(assert (=> b!106981 m!120107))

(assert (=> d!28879 d!29627))

(declare-fun bm!11297 () Bool)

(declare-fun call!11302 () List!1596)

(declare-fun call!11301 () List!1596)

(assert (=> bm!11297 (= call!11302 call!11301)))

(declare-fun c!18754 () Bool)

(declare-fun c!18752 () Bool)

(declare-fun e!69604 () List!1596)

(declare-fun b!106982 () Bool)

(assert (=> b!106982 (= e!69604 (ite c!18754 (t!5671 (toList!782 lt!53944)) (ite c!18752 (Cons!1592 (h!2189 (toList!782 lt!53944)) (t!5671 (toList!782 lt!53944))) Nil!1593)))))

(declare-fun b!106983 () Bool)

(declare-fun e!69607 () List!1596)

(assert (=> b!106983 (= e!69607 call!11301)))

(declare-fun b!106985 () Bool)

(assert (=> b!106985 (= c!18752 (and ((_ is Cons!1592) (toList!782 lt!53944)) (bvsgt (_1!1191 (h!2189 (toList!782 lt!53944))) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun e!69606 () List!1596)

(assert (=> b!106985 (= e!69607 e!69606)))

(declare-fun c!18753 () Bool)

(declare-fun call!11300 () List!1596)

(declare-fun bm!11298 () Bool)

(assert (=> bm!11298 (= call!11300 ($colon$colon!80 e!69604 (ite c!18753 (h!2189 (toList!782 lt!53944)) (tuple2!2361 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18755 () Bool)

(assert (=> bm!11298 (= c!18755 c!18753)))

(declare-fun b!106986 () Bool)

(assert (=> b!106986 (= e!69606 call!11302)))

(declare-fun b!106987 () Bool)

(assert (=> b!106987 (= e!69606 call!11302)))

(declare-fun b!106988 () Bool)

(declare-fun res!53154 () Bool)

(declare-fun e!69605 () Bool)

(assert (=> b!106988 (=> (not res!53154) (not e!69605))))

(declare-fun lt!54825 () List!1596)

(assert (=> b!106988 (= res!53154 (containsKey!160 lt!54825 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106989 () Bool)

(assert (=> b!106989 (= e!69605 (contains!816 lt!54825 (tuple2!2361 (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106990 () Bool)

(declare-fun e!69608 () List!1596)

(assert (=> b!106990 (= e!69608 e!69607)))

(assert (=> b!106990 (= c!18754 (and ((_ is Cons!1592) (toList!782 lt!53944)) (= (_1!1191 (h!2189 (toList!782 lt!53944))) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun d!29629 () Bool)

(assert (=> d!29629 e!69605))

(declare-fun res!53153 () Bool)

(assert (=> d!29629 (=> (not res!53153) (not e!69605))))

(assert (=> d!29629 (= res!53153 (isStrictlySorted!296 lt!54825))))

(assert (=> d!29629 (= lt!54825 e!69608)))

(assert (=> d!29629 (= c!18753 (and ((_ is Cons!1592) (toList!782 lt!53944)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53944))) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29629 (isStrictlySorted!296 (toList!782 lt!53944))))

(assert (=> d!29629 (= (insertStrictlySorted!76 (toList!782 lt!53944) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54825)))

(declare-fun b!106984 () Bool)

(assert (=> b!106984 (= e!69604 (insertStrictlySorted!76 (t!5671 (toList!782 lt!53944)) (_1!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun bm!11299 () Bool)

(assert (=> bm!11299 (= call!11301 call!11300)))

(declare-fun b!106991 () Bool)

(assert (=> b!106991 (= e!69608 call!11300)))

(assert (= (and d!29629 c!18753) b!106991))

(assert (= (and d!29629 (not c!18753)) b!106990))

(assert (= (and b!106990 c!18754) b!106983))

(assert (= (and b!106990 (not c!18754)) b!106985))

(assert (= (and b!106985 c!18752) b!106987))

(assert (= (and b!106985 (not c!18752)) b!106986))

(assert (= (or b!106987 b!106986) bm!11297))

(assert (= (or b!106983 bm!11297) bm!11299))

(assert (= (or b!106991 bm!11299) bm!11298))

(assert (= (and bm!11298 c!18755) b!106984))

(assert (= (and bm!11298 (not c!18755)) b!106982))

(assert (= (and d!29629 res!53153) b!106988))

(assert (= (and b!106988 res!53154) b!106989))

(declare-fun m!120109 () Bool)

(assert (=> bm!11298 m!120109))

(declare-fun m!120111 () Bool)

(assert (=> d!29629 m!120111))

(declare-fun m!120113 () Bool)

(assert (=> d!29629 m!120113))

(declare-fun m!120115 () Bool)

(assert (=> b!106989 m!120115))

(declare-fun m!120117 () Bool)

(assert (=> b!106988 m!120117))

(declare-fun m!120119 () Bool)

(assert (=> b!106984 m!120119))

(assert (=> d!28879 d!29629))

(declare-fun d!29631 () Bool)

(declare-fun e!69609 () Bool)

(assert (=> d!29631 e!69609))

(declare-fun res!53155 () Bool)

(assert (=> d!29631 (=> res!53155 e!69609)))

(declare-fun lt!54827 () Bool)

(assert (=> d!29631 (= res!53155 (not lt!54827))))

(declare-fun lt!54828 () Bool)

(assert (=> d!29631 (= lt!54827 lt!54828)))

(declare-fun lt!54829 () Unit!3212)

(declare-fun e!69610 () Unit!3212)

(assert (=> d!29631 (= lt!54829 e!69610)))

(declare-fun c!18756 () Bool)

(assert (=> d!29631 (= c!18756 lt!54828)))

(assert (=> d!29631 (= lt!54828 (containsKey!160 (toList!782 lt!54267) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29631 (= (contains!814 lt!54267 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) lt!54827)))

(declare-fun b!106992 () Bool)

(declare-fun lt!54826 () Unit!3212)

(assert (=> b!106992 (= e!69610 lt!54826)))

(assert (=> b!106992 (= lt!54826 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54267) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> b!106992 (isDefined!109 (getValueByKey!157 (toList!782 lt!54267) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106993 () Bool)

(declare-fun Unit!3277 () Unit!3212)

(assert (=> b!106993 (= e!69610 Unit!3277)))

(declare-fun b!106994 () Bool)

(assert (=> b!106994 (= e!69609 (isDefined!109 (getValueByKey!157 (toList!782 lt!54267) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29631 c!18756) b!106992))

(assert (= (and d!29631 (not c!18756)) b!106993))

(assert (= (and d!29631 (not res!53155)) b!106994))

(declare-fun m!120121 () Bool)

(assert (=> d!29631 m!120121))

(declare-fun m!120123 () Bool)

(assert (=> b!106992 m!120123))

(assert (=> b!106992 m!118371))

(assert (=> b!106992 m!118371))

(declare-fun m!120125 () Bool)

(assert (=> b!106992 m!120125))

(assert (=> b!106994 m!118371))

(assert (=> b!106994 m!118371))

(assert (=> b!106994 m!120125))

(assert (=> d!29001 d!29631))

(declare-fun b!106995 () Bool)

(declare-fun e!69611 () Option!163)

(assert (=> b!106995 (= e!69611 (Some!162 (_2!1191 (h!2189 lt!54266))))))

(declare-fun c!18757 () Bool)

(declare-fun d!29633 () Bool)

(assert (=> d!29633 (= c!18757 (and ((_ is Cons!1592) lt!54266) (= (_1!1191 (h!2189 lt!54266)) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (=> d!29633 (= (getValueByKey!157 lt!54266 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) e!69611)))

(declare-fun b!106997 () Bool)

(declare-fun e!69612 () Option!163)

(assert (=> b!106997 (= e!69612 (getValueByKey!157 (t!5671 lt!54266) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106996 () Bool)

(assert (=> b!106996 (= e!69611 e!69612)))

(declare-fun c!18758 () Bool)

(assert (=> b!106996 (= c!18758 (and ((_ is Cons!1592) lt!54266) (not (= (_1!1191 (h!2189 lt!54266)) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun b!106998 () Bool)

(assert (=> b!106998 (= e!69612 None!161)))

(assert (= (and d!29633 c!18757) b!106995))

(assert (= (and d!29633 (not c!18757)) b!106996))

(assert (= (and b!106996 c!18758) b!106997))

(assert (= (and b!106996 (not c!18758)) b!106998))

(declare-fun m!120127 () Bool)

(assert (=> b!106997 m!120127))

(assert (=> d!29001 d!29633))

(declare-fun d!29635 () Bool)

(assert (=> d!29635 (= (getValueByKey!157 lt!54266 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) (Some!162 (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun lt!54830 () Unit!3212)

(assert (=> d!29635 (= lt!54830 (choose!662 lt!54266 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun e!69613 () Bool)

(assert (=> d!29635 e!69613))

(declare-fun res!53156 () Bool)

(assert (=> d!29635 (=> (not res!53156) (not e!69613))))

(assert (=> d!29635 (= res!53156 (isStrictlySorted!296 lt!54266))))

(assert (=> d!29635 (= (lemmaContainsTupThenGetReturnValue!73 lt!54266 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) lt!54830)))

(declare-fun b!106999 () Bool)

(declare-fun res!53157 () Bool)

(assert (=> b!106999 (=> (not res!53157) (not e!69613))))

(assert (=> b!106999 (= res!53157 (containsKey!160 lt!54266 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107000 () Bool)

(assert (=> b!107000 (= e!69613 (contains!816 lt!54266 (tuple2!2361 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29635 res!53156) b!106999))

(assert (= (and b!106999 res!53157) b!107000))

(assert (=> d!29635 m!118365))

(declare-fun m!120129 () Bool)

(assert (=> d!29635 m!120129))

(declare-fun m!120131 () Bool)

(assert (=> d!29635 m!120131))

(declare-fun m!120133 () Bool)

(assert (=> b!106999 m!120133))

(declare-fun m!120135 () Bool)

(assert (=> b!107000 m!120135))

(assert (=> d!29001 d!29635))

(declare-fun bm!11300 () Bool)

(declare-fun call!11305 () List!1596)

(declare-fun call!11304 () List!1596)

(assert (=> bm!11300 (= call!11305 call!11304)))

(declare-fun b!107001 () Bool)

(declare-fun c!18761 () Bool)

(declare-fun c!18759 () Bool)

(declare-fun e!69614 () List!1596)

(assert (=> b!107001 (= e!69614 (ite c!18761 (t!5671 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126)))) (ite c!18759 (Cons!1592 (h!2189 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126)))) (t!5671 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126))))) Nil!1593)))))

(declare-fun b!107002 () Bool)

(declare-fun e!69617 () List!1596)

(assert (=> b!107002 (= e!69617 call!11304)))

(declare-fun b!107004 () Bool)

(assert (=> b!107004 (= c!18759 (and ((_ is Cons!1592) (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126)))) (bvsgt (_1!1191 (h!2189 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126))))) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun e!69616 () List!1596)

(assert (=> b!107004 (= e!69617 e!69616)))

(declare-fun call!11303 () List!1596)

(declare-fun c!18760 () Bool)

(declare-fun bm!11301 () Bool)

(assert (=> bm!11301 (= call!11303 ($colon$colon!80 e!69614 (ite c!18760 (h!2189 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126)))) (tuple2!2361 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun c!18762 () Bool)

(assert (=> bm!11301 (= c!18762 c!18760)))

(declare-fun b!107005 () Bool)

(assert (=> b!107005 (= e!69616 call!11305)))

(declare-fun b!107006 () Bool)

(assert (=> b!107006 (= e!69616 call!11305)))

(declare-fun b!107007 () Bool)

(declare-fun res!53159 () Bool)

(declare-fun e!69615 () Bool)

(assert (=> b!107007 (=> (not res!53159) (not e!69615))))

(declare-fun lt!54831 () List!1596)

(assert (=> b!107007 (= res!53159 (containsKey!160 lt!54831 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107008 () Bool)

(assert (=> b!107008 (= e!69615 (contains!816 lt!54831 (tuple2!2361 (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!107009 () Bool)

(declare-fun e!69618 () List!1596)

(assert (=> b!107009 (= e!69618 e!69617)))

(assert (=> b!107009 (= c!18761 (and ((_ is Cons!1592) (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126)))) (= (_1!1191 (h!2189 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126))))) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun d!29637 () Bool)

(assert (=> d!29637 e!69615))

(declare-fun res!53158 () Bool)

(assert (=> d!29637 (=> (not res!53158) (not e!69615))))

(assert (=> d!29637 (= res!53158 (isStrictlySorted!296 lt!54831))))

(assert (=> d!29637 (= lt!54831 e!69618)))

(assert (=> d!29637 (= c!18760 (and ((_ is Cons!1592) (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126)))) (bvslt (_1!1191 (h!2189 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126))))) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (=> d!29637 (isStrictlySorted!296 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126))))))

(assert (=> d!29637 (= (insertStrictlySorted!76 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126))) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) lt!54831)))

(declare-fun b!107003 () Bool)

(assert (=> b!107003 (= e!69614 (insertStrictlySorted!76 (t!5671 (toList!782 (ite c!18347 call!11127 (ite c!18343 call!11129 call!11126)))) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) (_2!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun bm!11302 () Bool)

(assert (=> bm!11302 (= call!11304 call!11303)))

(declare-fun b!107010 () Bool)

(assert (=> b!107010 (= e!69618 call!11303)))

(assert (= (and d!29637 c!18760) b!107010))

(assert (= (and d!29637 (not c!18760)) b!107009))

(assert (= (and b!107009 c!18761) b!107002))

(assert (= (and b!107009 (not c!18761)) b!107004))

(assert (= (and b!107004 c!18759) b!107006))

(assert (= (and b!107004 (not c!18759)) b!107005))

(assert (= (or b!107006 b!107005) bm!11300))

(assert (= (or b!107002 bm!11300) bm!11302))

(assert (= (or b!107010 bm!11302) bm!11301))

(assert (= (and bm!11301 c!18762) b!107003))

(assert (= (and bm!11301 (not c!18762)) b!107001))

(assert (= (and d!29637 res!53158) b!107007))

(assert (= (and b!107007 res!53159) b!107008))

(declare-fun m!120137 () Bool)

(assert (=> bm!11301 m!120137))

(declare-fun m!120139 () Bool)

(assert (=> d!29637 m!120139))

(declare-fun m!120141 () Bool)

(assert (=> d!29637 m!120141))

(declare-fun m!120143 () Bool)

(assert (=> b!107008 m!120143))

(declare-fun m!120145 () Bool)

(assert (=> b!107007 m!120145))

(declare-fun m!120147 () Bool)

(assert (=> b!107003 m!120147))

(assert (=> d!29001 d!29637))

(declare-fun d!29639 () Bool)

(declare-fun e!69619 () Bool)

(assert (=> d!29639 e!69619))

(declare-fun res!53160 () Bool)

(assert (=> d!29639 (=> (not res!53160) (not e!69619))))

(declare-fun lt!54833 () ListLongMap!1533)

(assert (=> d!29639 (= res!53160 (contains!814 lt!54833 (_1!1191 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))))))

(declare-fun lt!54832 () List!1596)

(assert (=> d!29639 (= lt!54833 (ListLongMap!1534 lt!54832))))

(declare-fun lt!54835 () Unit!3212)

(declare-fun lt!54834 () Unit!3212)

(assert (=> d!29639 (= lt!54835 lt!54834)))

(assert (=> d!29639 (= (getValueByKey!157 lt!54832 (_1!1191 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))) (Some!162 (_2!1191 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29639 (= lt!54834 (lemmaContainsTupThenGetReturnValue!73 lt!54832 (_1!1191 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) (_2!1191 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29639 (= lt!54832 (insertStrictlySorted!76 (toList!782 lt!54015) (_1!1191 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) (_2!1191 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29639 (= (+!139 lt!54015 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) lt!54833)))

(declare-fun b!107011 () Bool)

(declare-fun res!53161 () Bool)

(assert (=> b!107011 (=> (not res!53161) (not e!69619))))

(assert (=> b!107011 (= res!53161 (= (getValueByKey!157 (toList!782 lt!54833) (_1!1191 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))) (Some!162 (_2!1191 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))))))))

(declare-fun b!107012 () Bool)

(assert (=> b!107012 (= e!69619 (contains!816 (toList!782 lt!54833) (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))))))

(assert (= (and d!29639 res!53160) b!107011))

(assert (= (and b!107011 res!53161) b!107012))

(declare-fun m!120149 () Bool)

(assert (=> d!29639 m!120149))

(declare-fun m!120151 () Bool)

(assert (=> d!29639 m!120151))

(declare-fun m!120153 () Bool)

(assert (=> d!29639 m!120153))

(declare-fun m!120155 () Bool)

(assert (=> d!29639 m!120155))

(declare-fun m!120157 () Bool)

(assert (=> b!107011 m!120157))

(declare-fun m!120159 () Bool)

(assert (=> b!107012 m!120159))

(assert (=> b!105630 d!29639))

(assert (=> b!105630 d!29407))

(declare-fun d!29641 () Bool)

(assert (=> d!29641 (= (apply!98 (+!139 lt!54026 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) lt!54021) (apply!98 lt!54026 lt!54021))))

(declare-fun lt!54836 () Unit!3212)

(assert (=> d!29641 (= lt!54836 (choose!666 lt!54026 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) lt!54021))))

(declare-fun e!69620 () Bool)

(assert (=> d!29641 e!69620))

(declare-fun res!53162 () Bool)

(assert (=> d!29641 (=> (not res!53162) (not e!69620))))

(assert (=> d!29641 (= res!53162 (contains!814 lt!54026 lt!54021))))

(assert (=> d!29641 (= (addApplyDifferent!74 lt!54026 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) lt!54021) lt!54836)))

(declare-fun b!107013 () Bool)

(assert (=> b!107013 (= e!69620 (not (= lt!54021 lt!54035)))))

(assert (= (and d!29641 res!53162) b!107013))

(assert (=> d!29641 m!117687))

(assert (=> d!29641 m!117687))

(assert (=> d!29641 m!117689))

(declare-fun m!120161 () Bool)

(assert (=> d!29641 m!120161))

(assert (=> d!29641 m!117677))

(declare-fun m!120163 () Bool)

(assert (=> d!29641 m!120163))

(assert (=> b!105630 d!29641))

(declare-fun d!29643 () Bool)

(assert (=> d!29643 (= (apply!98 (+!139 lt!54026 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) lt!54021) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!54026 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))) lt!54021)))))

(declare-fun bs!4415 () Bool)

(assert (= bs!4415 d!29643))

(declare-fun m!120165 () Bool)

(assert (=> bs!4415 m!120165))

(assert (=> bs!4415 m!120165))

(declare-fun m!120167 () Bool)

(assert (=> bs!4415 m!120167))

(assert (=> b!105630 d!29643))

(declare-fun d!29645 () Bool)

(assert (=> d!29645 (= (apply!98 (+!139 lt!54025 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) lt!54033) (apply!98 lt!54025 lt!54033))))

(declare-fun lt!54837 () Unit!3212)

(assert (=> d!29645 (= lt!54837 (choose!666 lt!54025 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) lt!54033))))

(declare-fun e!69621 () Bool)

(assert (=> d!29645 e!69621))

(declare-fun res!53163 () Bool)

(assert (=> d!29645 (=> (not res!53163) (not e!69621))))

(assert (=> d!29645 (= res!53163 (contains!814 lt!54025 lt!54033))))

(assert (=> d!29645 (= (addApplyDifferent!74 lt!54025 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) lt!54033) lt!54837)))

(declare-fun b!107014 () Bool)

(assert (=> b!107014 (= e!69621 (not (= lt!54033 lt!54019)))))

(assert (= (and d!29645 res!53163) b!107014))

(assert (=> d!29645 m!117681))

(assert (=> d!29645 m!117681))

(assert (=> d!29645 m!117699))

(declare-fun m!120169 () Bool)

(assert (=> d!29645 m!120169))

(assert (=> d!29645 m!117695))

(declare-fun m!120171 () Bool)

(assert (=> d!29645 m!120171))

(assert (=> b!105630 d!29645))

(declare-fun d!29647 () Bool)

(declare-fun e!69622 () Bool)

(assert (=> d!29647 e!69622))

(declare-fun res!53164 () Bool)

(assert (=> d!29647 (=> (not res!53164) (not e!69622))))

(declare-fun lt!54839 () ListLongMap!1533)

(assert (=> d!29647 (= res!53164 (contains!814 lt!54839 (_1!1191 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))))))

(declare-fun lt!54838 () List!1596)

(assert (=> d!29647 (= lt!54839 (ListLongMap!1534 lt!54838))))

(declare-fun lt!54841 () Unit!3212)

(declare-fun lt!54840 () Unit!3212)

(assert (=> d!29647 (= lt!54841 lt!54840)))

(assert (=> d!29647 (= (getValueByKey!157 lt!54838 (_1!1191 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))) (Some!162 (_2!1191 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29647 (= lt!54840 (lemmaContainsTupThenGetReturnValue!73 lt!54838 (_1!1191 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) (_2!1191 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29647 (= lt!54838 (insertStrictlySorted!76 (toList!782 lt!54026) (_1!1191 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) (_2!1191 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29647 (= (+!139 lt!54026 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) lt!54839)))

(declare-fun b!107015 () Bool)

(declare-fun res!53165 () Bool)

(assert (=> b!107015 (=> (not res!53165) (not e!69622))))

(assert (=> b!107015 (= res!53165 (= (getValueByKey!157 (toList!782 lt!54839) (_1!1191 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))) (Some!162 (_2!1191 (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))))))))

(declare-fun b!107016 () Bool)

(assert (=> b!107016 (= e!69622 (contains!816 (toList!782 lt!54839) (tuple2!2361 lt!54035 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))))))

(assert (= (and d!29647 res!53164) b!107015))

(assert (= (and b!107015 res!53165) b!107016))

(declare-fun m!120173 () Bool)

(assert (=> d!29647 m!120173))

(declare-fun m!120175 () Bool)

(assert (=> d!29647 m!120175))

(declare-fun m!120177 () Bool)

(assert (=> d!29647 m!120177))

(declare-fun m!120179 () Bool)

(assert (=> d!29647 m!120179))

(declare-fun m!120181 () Bool)

(assert (=> b!107015 m!120181))

(declare-fun m!120183 () Bool)

(assert (=> b!107016 m!120183))

(assert (=> b!105630 d!29647))

(declare-fun d!29649 () Bool)

(declare-fun e!69623 () Bool)

(assert (=> d!29649 e!69623))

(declare-fun res!53166 () Bool)

(assert (=> d!29649 (=> res!53166 e!69623)))

(declare-fun lt!54843 () Bool)

(assert (=> d!29649 (= res!53166 (not lt!54843))))

(declare-fun lt!54844 () Bool)

(assert (=> d!29649 (= lt!54843 lt!54844)))

(declare-fun lt!54845 () Unit!3212)

(declare-fun e!69624 () Unit!3212)

(assert (=> d!29649 (= lt!54845 e!69624)))

(declare-fun c!18763 () Bool)

(assert (=> d!29649 (= c!18763 lt!54844)))

(assert (=> d!29649 (= lt!54844 (containsKey!160 (toList!782 (+!139 lt!54015 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))) lt!54016))))

(assert (=> d!29649 (= (contains!814 (+!139 lt!54015 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) lt!54016) lt!54843)))

(declare-fun b!107017 () Bool)

(declare-fun lt!54842 () Unit!3212)

(assert (=> b!107017 (= e!69624 lt!54842)))

(assert (=> b!107017 (= lt!54842 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (+!139 lt!54015 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))) lt!54016))))

(assert (=> b!107017 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!54015 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))) lt!54016))))

(declare-fun b!107018 () Bool)

(declare-fun Unit!3278 () Unit!3212)

(assert (=> b!107018 (= e!69624 Unit!3278)))

(declare-fun b!107019 () Bool)

(assert (=> b!107019 (= e!69623 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!54015 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))))) lt!54016)))))

(assert (= (and d!29649 c!18763) b!107017))

(assert (= (and d!29649 (not c!18763)) b!107018))

(assert (= (and d!29649 (not res!53166)) b!107019))

(declare-fun m!120185 () Bool)

(assert (=> d!29649 m!120185))

(declare-fun m!120187 () Bool)

(assert (=> b!107017 m!120187))

(declare-fun m!120189 () Bool)

(assert (=> b!107017 m!120189))

(assert (=> b!107017 m!120189))

(declare-fun m!120191 () Bool)

(assert (=> b!107017 m!120191))

(assert (=> b!107019 m!120189))

(assert (=> b!107019 m!120189))

(assert (=> b!107019 m!120191))

(assert (=> b!105630 d!29649))

(declare-fun d!29651 () Bool)

(assert (=> d!29651 (= (apply!98 lt!54023 lt!54024) (get!1338 (getValueByKey!157 (toList!782 lt!54023) lt!54024)))))

(declare-fun bs!4416 () Bool)

(assert (= bs!4416 d!29651))

(declare-fun m!120193 () Bool)

(assert (=> bs!4416 m!120193))

(assert (=> bs!4416 m!120193))

(declare-fun m!120195 () Bool)

(assert (=> bs!4416 m!120195))

(assert (=> b!105630 d!29651))

(declare-fun d!29653 () Bool)

(declare-fun e!69625 () Bool)

(assert (=> d!29653 e!69625))

(declare-fun res!53167 () Bool)

(assert (=> d!29653 (=> (not res!53167) (not e!69625))))

(declare-fun lt!54847 () ListLongMap!1533)

(assert (=> d!29653 (= res!53167 (contains!814 lt!54847 (_1!1191 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(declare-fun lt!54846 () List!1596)

(assert (=> d!29653 (= lt!54847 (ListLongMap!1534 lt!54846))))

(declare-fun lt!54849 () Unit!3212)

(declare-fun lt!54848 () Unit!3212)

(assert (=> d!29653 (= lt!54849 lt!54848)))

(assert (=> d!29653 (= (getValueByKey!157 lt!54846 (_1!1191 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) (Some!162 (_2!1191 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(assert (=> d!29653 (= lt!54848 (lemmaContainsTupThenGetReturnValue!73 lt!54846 (_1!1191 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) (_2!1191 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(assert (=> d!29653 (= lt!54846 (insertStrictlySorted!76 (toList!782 lt!54025) (_1!1191 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) (_2!1191 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(assert (=> d!29653 (= (+!139 lt!54025 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) lt!54847)))

(declare-fun b!107020 () Bool)

(declare-fun res!53168 () Bool)

(assert (=> b!107020 (=> (not res!53168) (not e!69625))))

(assert (=> b!107020 (= res!53168 (= (getValueByKey!157 (toList!782 lt!54847) (_1!1191 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) (Some!162 (_2!1191 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))))

(declare-fun b!107021 () Bool)

(assert (=> b!107021 (= e!69625 (contains!816 (toList!782 lt!54847) (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))

(assert (= (and d!29653 res!53167) b!107020))

(assert (= (and b!107020 res!53168) b!107021))

(declare-fun m!120197 () Bool)

(assert (=> d!29653 m!120197))

(declare-fun m!120199 () Bool)

(assert (=> d!29653 m!120199))

(declare-fun m!120201 () Bool)

(assert (=> d!29653 m!120201))

(declare-fun m!120203 () Bool)

(assert (=> d!29653 m!120203))

(declare-fun m!120205 () Bool)

(assert (=> b!107020 m!120205))

(declare-fun m!120207 () Bool)

(assert (=> b!107021 m!120207))

(assert (=> b!105630 d!29653))

(declare-fun d!29655 () Bool)

(assert (=> d!29655 (= (apply!98 lt!54026 lt!54021) (get!1338 (getValueByKey!157 (toList!782 lt!54026) lt!54021)))))

(declare-fun bs!4417 () Bool)

(assert (= bs!4417 d!29655))

(declare-fun m!120209 () Bool)

(assert (=> bs!4417 m!120209))

(assert (=> bs!4417 m!120209))

(declare-fun m!120211 () Bool)

(assert (=> bs!4417 m!120211))

(assert (=> b!105630 d!29655))

(declare-fun d!29657 () Bool)

(assert (=> d!29657 (= (apply!98 (+!139 lt!54025 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) lt!54033) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!54025 (tuple2!2361 lt!54019 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) lt!54033)))))

(declare-fun bs!4418 () Bool)

(assert (= bs!4418 d!29657))

(declare-fun m!120213 () Bool)

(assert (=> bs!4418 m!120213))

(assert (=> bs!4418 m!120213))

(declare-fun m!120215 () Bool)

(assert (=> bs!4418 m!120215))

(assert (=> b!105630 d!29657))

(declare-fun d!29659 () Bool)

(assert (=> d!29659 (= (apply!98 (+!139 lt!54023 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) lt!54024) (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!54023 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) lt!54024)))))

(declare-fun bs!4419 () Bool)

(assert (= bs!4419 d!29659))

(declare-fun m!120217 () Bool)

(assert (=> bs!4419 m!120217))

(assert (=> bs!4419 m!120217))

(declare-fun m!120219 () Bool)

(assert (=> bs!4419 m!120219))

(assert (=> b!105630 d!29659))

(declare-fun d!29661 () Bool)

(assert (=> d!29661 (= (apply!98 lt!54025 lt!54033) (get!1338 (getValueByKey!157 (toList!782 lt!54025) lt!54033)))))

(declare-fun bs!4420 () Bool)

(assert (= bs!4420 d!29661))

(declare-fun m!120221 () Bool)

(assert (=> bs!4420 m!120221))

(assert (=> bs!4420 m!120221))

(declare-fun m!120223 () Bool)

(assert (=> bs!4420 m!120223))

(assert (=> b!105630 d!29661))

(declare-fun d!29663 () Bool)

(declare-fun e!69626 () Bool)

(assert (=> d!29663 e!69626))

(declare-fun res!53169 () Bool)

(assert (=> d!29663 (=> (not res!53169) (not e!69626))))

(declare-fun lt!54851 () ListLongMap!1533)

(assert (=> d!29663 (= res!53169 (contains!814 lt!54851 (_1!1191 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(declare-fun lt!54850 () List!1596)

(assert (=> d!29663 (= lt!54851 (ListLongMap!1534 lt!54850))))

(declare-fun lt!54853 () Unit!3212)

(declare-fun lt!54852 () Unit!3212)

(assert (=> d!29663 (= lt!54853 lt!54852)))

(assert (=> d!29663 (= (getValueByKey!157 lt!54850 (_1!1191 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) (Some!162 (_2!1191 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(assert (=> d!29663 (= lt!54852 (lemmaContainsTupThenGetReturnValue!73 lt!54850 (_1!1191 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) (_2!1191 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(assert (=> d!29663 (= lt!54850 (insertStrictlySorted!76 (toList!782 lt!54023) (_1!1191 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) (_2!1191 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(assert (=> d!29663 (= (+!139 lt!54023 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) lt!54851)))

(declare-fun b!107022 () Bool)

(declare-fun res!53170 () Bool)

(assert (=> b!107022 (=> (not res!53170) (not e!69626))))

(assert (=> b!107022 (= res!53170 (= (getValueByKey!157 (toList!782 lt!54851) (_1!1191 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) (Some!162 (_2!1191 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))))

(declare-fun b!107023 () Bool)

(assert (=> b!107023 (= e!69626 (contains!816 (toList!782 lt!54851) (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))

(assert (= (and d!29663 res!53169) b!107022))

(assert (= (and b!107022 res!53170) b!107023))

(declare-fun m!120225 () Bool)

(assert (=> d!29663 m!120225))

(declare-fun m!120227 () Bool)

(assert (=> d!29663 m!120227))

(declare-fun m!120229 () Bool)

(assert (=> d!29663 m!120229))

(declare-fun m!120231 () Bool)

(assert (=> d!29663 m!120231))

(declare-fun m!120233 () Bool)

(assert (=> b!107022 m!120233))

(declare-fun m!120235 () Bool)

(assert (=> b!107023 m!120235))

(assert (=> b!105630 d!29663))

(declare-fun d!29665 () Bool)

(assert (=> d!29665 (= (apply!98 (+!139 lt!54023 (tuple2!2361 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))) lt!54024) (apply!98 lt!54023 lt!54024))))

(declare-fun lt!54854 () Unit!3212)

(assert (=> d!29665 (= lt!54854 (choose!666 lt!54023 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) lt!54024))))

(declare-fun e!69627 () Bool)

(assert (=> d!29665 e!69627))

(declare-fun res!53171 () Bool)

(assert (=> d!29665 (=> (not res!53171) (not e!69627))))

(assert (=> d!29665 (= res!53171 (contains!814 lt!54023 lt!54024))))

(assert (=> d!29665 (= (addApplyDifferent!74 lt!54023 lt!54014 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)) lt!54024) lt!54854)))

(declare-fun b!107024 () Bool)

(assert (=> b!107024 (= e!69627 (not (= lt!54024 lt!54014)))))

(assert (= (and d!29665 res!53171) b!107024))

(assert (=> d!29665 m!117683))

(assert (=> d!29665 m!117683))

(assert (=> d!29665 m!117685))

(declare-fun m!120237 () Bool)

(assert (=> d!29665 m!120237))

(assert (=> d!29665 m!117693))

(declare-fun m!120239 () Bool)

(assert (=> d!29665 m!120239))

(assert (=> b!105630 d!29665))

(declare-fun d!29667 () Bool)

(assert (=> d!29667 (contains!814 (+!139 lt!54015 (tuple2!2361 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)))) lt!54016)))

(declare-fun lt!54855 () Unit!3212)

(assert (=> d!29667 (= lt!54855 (choose!667 lt!54015 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) lt!54016))))

(assert (=> d!29667 (contains!814 lt!54015 lt!54016)))

(assert (=> d!29667 (= (addStillContains!74 lt!54015 lt!54029 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16)) lt!54016) lt!54855)))

(declare-fun bs!4421 () Bool)

(assert (= bs!4421 d!29667))

(assert (=> bs!4421 m!117675))

(assert (=> bs!4421 m!117675))

(assert (=> bs!4421 m!117701))

(declare-fun m!120241 () Bool)

(assert (=> bs!4421 m!120241))

(declare-fun m!120243 () Bool)

(assert (=> bs!4421 m!120243))

(assert (=> b!105630 d!29667))

(assert (=> bm!11197 d!29007))

(declare-fun d!29669 () Bool)

(declare-fun res!53172 () Bool)

(declare-fun e!69628 () Bool)

(assert (=> d!29669 (=> res!53172 e!69628)))

(assert (=> d!29669 (= res!53172 (and ((_ is Cons!1592) lt!54184) (= (_1!1191 (h!2189 lt!54184)) (_1!1191 lt!53718))))))

(assert (=> d!29669 (= (containsKey!160 lt!54184 (_1!1191 lt!53718)) e!69628)))

(declare-fun b!107025 () Bool)

(declare-fun e!69629 () Bool)

(assert (=> b!107025 (= e!69628 e!69629)))

(declare-fun res!53173 () Bool)

(assert (=> b!107025 (=> (not res!53173) (not e!69629))))

(assert (=> b!107025 (= res!53173 (and (or (not ((_ is Cons!1592) lt!54184)) (bvsle (_1!1191 (h!2189 lt!54184)) (_1!1191 lt!53718))) ((_ is Cons!1592) lt!54184) (bvslt (_1!1191 (h!2189 lt!54184)) (_1!1191 lt!53718))))))

(declare-fun b!107026 () Bool)

(assert (=> b!107026 (= e!69629 (containsKey!160 (t!5671 lt!54184) (_1!1191 lt!53718)))))

(assert (= (and d!29669 (not res!53172)) b!107025))

(assert (= (and b!107025 res!53173) b!107026))

(declare-fun m!120245 () Bool)

(assert (=> b!107026 m!120245))

(assert (=> b!105871 d!29669))

(declare-fun d!29671 () Bool)

(assert (=> d!29671 (= (get!1336 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2891 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105726 d!29671))

(declare-fun b!107027 () Bool)

(declare-fun e!69630 () Option!163)

(assert (=> b!107027 (= e!69630 (Some!162 (_2!1191 (h!2189 (t!5671 (toList!782 lt!53721))))))))

(declare-fun d!29673 () Bool)

(declare-fun c!18764 () Bool)

(assert (=> d!29673 (= c!18764 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53721))) (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53721)))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29673 (= (getValueByKey!157 (t!5671 (toList!782 lt!53721)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69630)))

(declare-fun e!69631 () Option!163)

(declare-fun b!107029 () Bool)

(assert (=> b!107029 (= e!69631 (getValueByKey!157 (t!5671 (t!5671 (toList!782 lt!53721))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!107028 () Bool)

(assert (=> b!107028 (= e!69630 e!69631)))

(declare-fun c!18765 () Bool)

(assert (=> b!107028 (= c!18765 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53721))) (not (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53721)))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(declare-fun b!107030 () Bool)

(assert (=> b!107030 (= e!69631 None!161)))

(assert (= (and d!29673 c!18764) b!107027))

(assert (= (and d!29673 (not c!18764)) b!107028))

(assert (= (and b!107028 c!18765) b!107029))

(assert (= (and b!107028 (not c!18765)) b!107030))

(assert (=> b!107029 m!117261))

(declare-fun m!120247 () Bool)

(assert (=> b!107029 m!120247))

(assert (=> b!105793 d!29673))

(declare-fun d!29675 () Bool)

(assert (=> d!29675 (isDefined!109 (getValueByKey!157 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!54856 () Unit!3212)

(assert (=> d!29675 (= lt!54856 (choose!669 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!69632 () Bool)

(assert (=> d!29675 e!69632))

(declare-fun res!53174 () Bool)

(assert (=> d!29675 (=> (not res!53174) (not e!69632))))

(assert (=> d!29675 (= res!53174 (isStrictlySorted!296 (toList!782 lt!53992)))))

(assert (=> d!29675 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54856)))

(declare-fun b!107031 () Bool)

(assert (=> b!107031 (= e!69632 (containsKey!160 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29675 res!53174) b!107031))

(assert (=> d!29675 m!117491))

(assert (=> d!29675 m!118073))

(assert (=> d!29675 m!118073))

(assert (=> d!29675 m!118461))

(assert (=> d!29675 m!117491))

(declare-fun m!120249 () Bool)

(assert (=> d!29675 m!120249))

(assert (=> d!29675 m!118479))

(assert (=> b!107031 m!117491))

(assert (=> b!107031 m!118457))

(assert (=> b!106074 d!29675))

(assert (=> b!106074 d!29387))

(assert (=> b!106074 d!29255))

(declare-fun lt!54857 () Bool)

(declare-fun d!29677 () Bool)

(assert (=> d!29677 (= lt!54857 (select (content!111 (toList!782 lt!54267)) (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69633 () Bool)

(assert (=> d!29677 (= lt!54857 e!69633)))

(declare-fun res!53175 () Bool)

(assert (=> d!29677 (=> (not res!53175) (not e!69633))))

(assert (=> d!29677 (= res!53175 ((_ is Cons!1592) (toList!782 lt!54267)))))

(assert (=> d!29677 (= (contains!816 (toList!782 lt!54267) (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54857)))

(declare-fun b!107032 () Bool)

(declare-fun e!69634 () Bool)

(assert (=> b!107032 (= e!69633 e!69634)))

(declare-fun res!53176 () Bool)

(assert (=> b!107032 (=> res!53176 e!69634)))

(assert (=> b!107032 (= res!53176 (= (h!2189 (toList!782 lt!54267)) (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107033 () Bool)

(assert (=> b!107033 (= e!69634 (contains!816 (t!5671 (toList!782 lt!54267)) (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (= (and d!29677 res!53175) b!107032))

(assert (= (and b!107032 (not res!53176)) b!107033))

(declare-fun m!120251 () Bool)

(assert (=> d!29677 m!120251))

(declare-fun m!120253 () Bool)

(assert (=> d!29677 m!120253))

(declare-fun m!120255 () Bool)

(assert (=> b!107033 m!120255))

(assert (=> b!106013 d!29677))

(declare-fun d!29679 () Bool)

(declare-fun lt!54858 () Bool)

(assert (=> d!29679 (= lt!54858 (select (content!110 (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!69635 () Bool)

(assert (=> d!29679 (= lt!54858 e!69635)))

(declare-fun res!53177 () Bool)

(assert (=> d!29679 (=> (not res!53177) (not e!69635))))

(assert (=> d!29679 (= res!53177 ((_ is Cons!1593) (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)))))

(assert (=> d!29679 (= (contains!817 (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!54858)))

(declare-fun b!107034 () Bool)

(declare-fun e!69636 () Bool)

(assert (=> b!107034 (= e!69635 e!69636)))

(declare-fun res!53178 () Bool)

(assert (=> b!107034 (=> res!53178 e!69636)))

(assert (=> b!107034 (= res!53178 (= (h!2190 (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!107035 () Bool)

(assert (=> b!107035 (= e!69636 (contains!817 (t!5672 (ite c!18366 (Cons!1593 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1594) Nil!1594)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!29679 res!53177) b!107034))

(assert (= (and b!107034 (not res!53178)) b!107035))

(declare-fun m!120257 () Bool)

(assert (=> d!29679 m!120257))

(assert (=> d!29679 m!117823))

(declare-fun m!120259 () Bool)

(assert (=> d!29679 m!120259))

(assert (=> b!107035 m!117823))

(declare-fun m!120261 () Bool)

(assert (=> b!107035 m!120261))

(assert (=> b!105724 d!29679))

(declare-fun d!29681 () Bool)

(declare-fun e!69637 () Bool)

(assert (=> d!29681 e!69637))

(declare-fun res!53179 () Bool)

(assert (=> d!29681 (=> res!53179 e!69637)))

(declare-fun lt!54860 () Bool)

(assert (=> d!29681 (= res!53179 (not lt!54860))))

(declare-fun lt!54861 () Bool)

(assert (=> d!29681 (= lt!54860 lt!54861)))

(declare-fun lt!54862 () Unit!3212)

(declare-fun e!69638 () Unit!3212)

(assert (=> d!29681 (= lt!54862 e!69638)))

(declare-fun c!18766 () Bool)

(assert (=> d!29681 (= c!18766 lt!54861)))

(assert (=> d!29681 (= lt!54861 (containsKey!160 (toList!782 lt!54030) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29681 (= (contains!814 lt!54030 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54860)))

(declare-fun b!107036 () Bool)

(declare-fun lt!54859 () Unit!3212)

(assert (=> b!107036 (= e!69638 lt!54859)))

(assert (=> b!107036 (= lt!54859 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54030) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107036 (isDefined!109 (getValueByKey!157 (toList!782 lt!54030) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107037 () Bool)

(declare-fun Unit!3279 () Unit!3212)

(assert (=> b!107037 (= e!69638 Unit!3279)))

(declare-fun b!107038 () Bool)

(assert (=> b!107038 (= e!69637 (isDefined!109 (getValueByKey!157 (toList!782 lt!54030) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29681 c!18766) b!107036))

(assert (= (and d!29681 (not c!18766)) b!107037))

(assert (= (and d!29681 (not res!53179)) b!107038))

(declare-fun m!120263 () Bool)

(assert (=> d!29681 m!120263))

(declare-fun m!120265 () Bool)

(assert (=> b!107036 m!120265))

(assert (=> b!107036 m!119753))

(assert (=> b!107036 m!119753))

(declare-fun m!120267 () Bool)

(assert (=> b!107036 m!120267))

(assert (=> b!107038 m!119753))

(assert (=> b!107038 m!119753))

(assert (=> b!107038 m!120267))

(assert (=> bm!11137 d!29681))

(assert (=> b!105754 d!29447))

(declare-fun d!29683 () Bool)

(declare-fun e!69639 () Bool)

(assert (=> d!29683 e!69639))

(declare-fun res!53180 () Bool)

(assert (=> d!29683 (=> (not res!53180) (not e!69639))))

(declare-fun lt!54864 () ListLongMap!1533)

(assert (=> d!29683 (= res!53180 (contains!814 lt!54864 (_1!1191 (tuple2!2361 lt!54099 lt!54098))))))

(declare-fun lt!54863 () List!1596)

(assert (=> d!29683 (= lt!54864 (ListLongMap!1534 lt!54863))))

(declare-fun lt!54866 () Unit!3212)

(declare-fun lt!54865 () Unit!3212)

(assert (=> d!29683 (= lt!54866 lt!54865)))

(assert (=> d!29683 (= (getValueByKey!157 lt!54863 (_1!1191 (tuple2!2361 lt!54099 lt!54098))) (Some!162 (_2!1191 (tuple2!2361 lt!54099 lt!54098))))))

(assert (=> d!29683 (= lt!54865 (lemmaContainsTupThenGetReturnValue!73 lt!54863 (_1!1191 (tuple2!2361 lt!54099 lt!54098)) (_2!1191 (tuple2!2361 lt!54099 lt!54098))))))

(assert (=> d!29683 (= lt!54863 (insertStrictlySorted!76 (toList!782 lt!54097) (_1!1191 (tuple2!2361 lt!54099 lt!54098)) (_2!1191 (tuple2!2361 lt!54099 lt!54098))))))

(assert (=> d!29683 (= (+!139 lt!54097 (tuple2!2361 lt!54099 lt!54098)) lt!54864)))

(declare-fun b!107039 () Bool)

(declare-fun res!53181 () Bool)

(assert (=> b!107039 (=> (not res!53181) (not e!69639))))

(assert (=> b!107039 (= res!53181 (= (getValueByKey!157 (toList!782 lt!54864) (_1!1191 (tuple2!2361 lt!54099 lt!54098))) (Some!162 (_2!1191 (tuple2!2361 lt!54099 lt!54098)))))))

(declare-fun b!107040 () Bool)

(assert (=> b!107040 (= e!69639 (contains!816 (toList!782 lt!54864) (tuple2!2361 lt!54099 lt!54098)))))

(assert (= (and d!29683 res!53180) b!107039))

(assert (= (and b!107039 res!53181) b!107040))

(declare-fun m!120269 () Bool)

(assert (=> d!29683 m!120269))

(declare-fun m!120271 () Bool)

(assert (=> d!29683 m!120271))

(declare-fun m!120273 () Bool)

(assert (=> d!29683 m!120273))

(declare-fun m!120275 () Bool)

(assert (=> d!29683 m!120275))

(declare-fun m!120277 () Bool)

(assert (=> b!107039 m!120277))

(declare-fun m!120279 () Bool)

(assert (=> b!107040 m!120279))

(assert (=> b!105754 d!29683))

(declare-fun d!29685 () Bool)

(declare-fun e!69640 () Bool)

(assert (=> d!29685 e!69640))

(declare-fun res!53182 () Bool)

(assert (=> d!29685 (=> (not res!53182) (not e!69640))))

(declare-fun lt!54868 () ListLongMap!1533)

(assert (=> d!29685 (= res!53182 (contains!814 lt!54868 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!54867 () List!1596)

(assert (=> d!29685 (= lt!54868 (ListLongMap!1534 lt!54867))))

(declare-fun lt!54870 () Unit!3212)

(declare-fun lt!54869 () Unit!3212)

(assert (=> d!29685 (= lt!54870 lt!54869)))

(assert (=> d!29685 (= (getValueByKey!157 lt!54867 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29685 (= lt!54869 (lemmaContainsTupThenGetReturnValue!73 lt!54867 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29685 (= lt!54867 (insertStrictlySorted!76 (toList!782 call!11158) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29685 (= (+!139 call!11158 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!54868)))

(declare-fun b!107041 () Bool)

(declare-fun res!53183 () Bool)

(assert (=> b!107041 (=> (not res!53183) (not e!69640))))

(assert (=> b!107041 (= res!53183 (= (getValueByKey!157 (toList!782 lt!54868) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!107042 () Bool)

(assert (=> b!107042 (= e!69640 (contains!816 (toList!782 lt!54868) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29685 res!53182) b!107041))

(assert (= (and b!107041 res!53183) b!107042))

(declare-fun m!120281 () Bool)

(assert (=> d!29685 m!120281))

(declare-fun m!120283 () Bool)

(assert (=> d!29685 m!120283))

(declare-fun m!120285 () Bool)

(assert (=> d!29685 m!120285))

(declare-fun m!120287 () Bool)

(assert (=> d!29685 m!120287))

(declare-fun m!120289 () Bool)

(assert (=> b!107041 m!120289))

(declare-fun m!120291 () Bool)

(assert (=> b!107042 m!120291))

(assert (=> b!105754 d!29685))

(declare-fun d!29687 () Bool)

(declare-fun e!69641 () Bool)

(assert (=> d!29687 e!69641))

(declare-fun res!53184 () Bool)

(assert (=> d!29687 (=> res!53184 e!69641)))

(declare-fun lt!54872 () Bool)

(assert (=> d!29687 (= res!53184 (not lt!54872))))

(declare-fun lt!54873 () Bool)

(assert (=> d!29687 (= lt!54872 lt!54873)))

(declare-fun lt!54874 () Unit!3212)

(declare-fun e!69642 () Unit!3212)

(assert (=> d!29687 (= lt!54874 e!69642)))

(declare-fun c!18767 () Bool)

(assert (=> d!29687 (= c!18767 lt!54873)))

(assert (=> d!29687 (= lt!54873 (containsKey!160 (toList!782 (+!139 lt!54097 (tuple2!2361 lt!54099 lt!54098))) lt!54094))))

(assert (=> d!29687 (= (contains!814 (+!139 lt!54097 (tuple2!2361 lt!54099 lt!54098)) lt!54094) lt!54872)))

(declare-fun b!107043 () Bool)

(declare-fun lt!54871 () Unit!3212)

(assert (=> b!107043 (= e!69642 lt!54871)))

(assert (=> b!107043 (= lt!54871 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (+!139 lt!54097 (tuple2!2361 lt!54099 lt!54098))) lt!54094))))

(assert (=> b!107043 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!54097 (tuple2!2361 lt!54099 lt!54098))) lt!54094))))

(declare-fun b!107044 () Bool)

(declare-fun Unit!3280 () Unit!3212)

(assert (=> b!107044 (= e!69642 Unit!3280)))

(declare-fun b!107045 () Bool)

(assert (=> b!107045 (= e!69641 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!54097 (tuple2!2361 lt!54099 lt!54098))) lt!54094)))))

(assert (= (and d!29687 c!18767) b!107043))

(assert (= (and d!29687 (not c!18767)) b!107044))

(assert (= (and d!29687 (not res!53184)) b!107045))

(declare-fun m!120293 () Bool)

(assert (=> d!29687 m!120293))

(declare-fun m!120295 () Bool)

(assert (=> b!107043 m!120295))

(declare-fun m!120297 () Bool)

(assert (=> b!107043 m!120297))

(assert (=> b!107043 m!120297))

(declare-fun m!120299 () Bool)

(assert (=> b!107043 m!120299))

(assert (=> b!107045 m!120297))

(assert (=> b!107045 m!120297))

(assert (=> b!107045 m!120299))

(assert (=> b!105754 d!29687))

(declare-fun d!29689 () Bool)

(assert (=> d!29689 (not (contains!814 (+!139 lt!54097 (tuple2!2361 lt!54099 lt!54098)) lt!54094))))

(declare-fun lt!54875 () Unit!3212)

(assert (=> d!29689 (= lt!54875 (choose!668 lt!54097 lt!54099 lt!54098 lt!54094))))

(declare-fun e!69643 () Bool)

(assert (=> d!29689 e!69643))

(declare-fun res!53185 () Bool)

(assert (=> d!29689 (=> (not res!53185) (not e!69643))))

(assert (=> d!29689 (= res!53185 (not (contains!814 lt!54097 lt!54094)))))

(assert (=> d!29689 (= (addStillNotContains!48 lt!54097 lt!54099 lt!54098 lt!54094) lt!54875)))

(declare-fun b!107046 () Bool)

(assert (=> b!107046 (= e!69643 (not (= lt!54099 lt!54094)))))

(assert (= (and d!29689 res!53185) b!107046))

(assert (=> d!29689 m!117885))

(assert (=> d!29689 m!117885))

(assert (=> d!29689 m!117887))

(declare-fun m!120301 () Bool)

(assert (=> d!29689 m!120301))

(declare-fun m!120303 () Bool)

(assert (=> d!29689 m!120303))

(assert (=> b!105754 d!29689))

(declare-fun d!29691 () Bool)

(assert (=> d!29691 (= (isEmpty!378 (toList!782 lt!53992)) ((_ is Nil!1593) (toList!782 lt!53992)))))

(assert (=> d!28989 d!29691))

(assert (=> b!105745 d!29069))

(declare-fun d!29693 () Bool)

(declare-fun e!69644 () Bool)

(assert (=> d!29693 e!69644))

(declare-fun res!53186 () Bool)

(assert (=> d!29693 (=> res!53186 e!69644)))

(declare-fun lt!54877 () Bool)

(assert (=> d!29693 (= res!53186 (not lt!54877))))

(declare-fun lt!54878 () Bool)

(assert (=> d!29693 (= lt!54877 lt!54878)))

(declare-fun lt!54879 () Unit!3212)

(declare-fun e!69645 () Unit!3212)

(assert (=> d!29693 (= lt!54879 e!69645)))

(declare-fun c!18768 () Bool)

(assert (=> d!29693 (= c!18768 lt!54878)))

(assert (=> d!29693 (= lt!54878 (containsKey!160 (toList!782 lt!54049) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> d!29693 (= (contains!814 lt!54049 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54877)))

(declare-fun b!107047 () Bool)

(declare-fun lt!54876 () Unit!3212)

(assert (=> b!107047 (= e!69645 lt!54876)))

(assert (=> b!107047 (= lt!54876 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54049) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(assert (=> b!107047 (isDefined!109 (getValueByKey!157 (toList!782 lt!54049) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!107048 () Bool)

(declare-fun Unit!3281 () Unit!3212)

(assert (=> b!107048 (= e!69645 Unit!3281)))

(declare-fun b!107049 () Bool)

(assert (=> b!107049 (= e!69644 (isDefined!109 (getValueByKey!157 (toList!782 lt!54049) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (= (and d!29693 c!18768) b!107047))

(assert (= (and d!29693 (not c!18768)) b!107048))

(assert (= (and d!29693 (not res!53186)) b!107049))

(declare-fun m!120305 () Bool)

(assert (=> d!29693 m!120305))

(declare-fun m!120307 () Bool)

(assert (=> b!107047 m!120307))

(assert (=> b!107047 m!117743))

(assert (=> b!107047 m!117743))

(declare-fun m!120309 () Bool)

(assert (=> b!107047 m!120309))

(assert (=> b!107049 m!117743))

(assert (=> b!107049 m!117743))

(assert (=> b!107049 m!120309))

(assert (=> d!28831 d!29693))

(declare-fun b!107050 () Bool)

(declare-fun e!69646 () Option!163)

(assert (=> b!107050 (= e!69646 (Some!162 (_2!1191 (h!2189 lt!54048))))))

(declare-fun c!18769 () Bool)

(declare-fun d!29695 () Bool)

(assert (=> d!29695 (= c!18769 (and ((_ is Cons!1592) lt!54048) (= (_1!1191 (h!2189 lt!54048)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!29695 (= (getValueByKey!157 lt!54048 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) e!69646)))

(declare-fun e!69647 () Option!163)

(declare-fun b!107052 () Bool)

(assert (=> b!107052 (= e!69647 (getValueByKey!157 (t!5671 lt!54048) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!107051 () Bool)

(assert (=> b!107051 (= e!69646 e!69647)))

(declare-fun c!18770 () Bool)

(assert (=> b!107051 (= c!18770 (and ((_ is Cons!1592) lt!54048) (not (= (_1!1191 (h!2189 lt!54048)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun b!107053 () Bool)

(assert (=> b!107053 (= e!69647 None!161)))

(assert (= (and d!29695 c!18769) b!107050))

(assert (= (and d!29695 (not c!18769)) b!107051))

(assert (= (and b!107051 c!18770) b!107052))

(assert (= (and b!107051 (not c!18770)) b!107053))

(declare-fun m!120311 () Bool)

(assert (=> b!107052 m!120311))

(assert (=> d!28831 d!29695))

(declare-fun d!29697 () Bool)

(assert (=> d!29697 (= (getValueByKey!157 lt!54048 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun lt!54880 () Unit!3212)

(assert (=> d!29697 (= lt!54880 (choose!662 lt!54048 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun e!69648 () Bool)

(assert (=> d!29697 e!69648))

(declare-fun res!53187 () Bool)

(assert (=> d!29697 (=> (not res!53187) (not e!69648))))

(assert (=> d!29697 (= res!53187 (isStrictlySorted!296 lt!54048))))

(assert (=> d!29697 (= (lemmaContainsTupThenGetReturnValue!73 lt!54048 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54880)))

(declare-fun b!107054 () Bool)

(declare-fun res!53188 () Bool)

(assert (=> b!107054 (=> (not res!53188) (not e!69648))))

(assert (=> b!107054 (= res!53188 (containsKey!160 lt!54048 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!107055 () Bool)

(assert (=> b!107055 (= e!69648 (contains!816 lt!54048 (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (= (and d!29697 res!53187) b!107054))

(assert (= (and b!107054 res!53188) b!107055))

(assert (=> d!29697 m!117737))

(declare-fun m!120313 () Bool)

(assert (=> d!29697 m!120313))

(declare-fun m!120315 () Bool)

(assert (=> d!29697 m!120315))

(declare-fun m!120317 () Bool)

(assert (=> b!107054 m!120317))

(declare-fun m!120319 () Bool)

(assert (=> b!107055 m!120319))

(assert (=> d!28831 d!29697))

(declare-fun bm!11303 () Bool)

(declare-fun call!11308 () List!1596)

(declare-fun call!11307 () List!1596)

(assert (=> bm!11303 (= call!11308 call!11307)))

(declare-fun c!18773 () Bool)

(declare-fun b!107056 () Bool)

(declare-fun e!69649 () List!1596)

(declare-fun c!18771 () Bool)

(assert (=> b!107056 (= e!69649 (ite c!18773 (t!5671 (toList!782 lt!53714)) (ite c!18771 (Cons!1592 (h!2189 (toList!782 lt!53714)) (t!5671 (toList!782 lt!53714))) Nil!1593)))))

(declare-fun b!107057 () Bool)

(declare-fun e!69652 () List!1596)

(assert (=> b!107057 (= e!69652 call!11307)))

(declare-fun b!107059 () Bool)

(assert (=> b!107059 (= c!18771 (and ((_ is Cons!1592) (toList!782 lt!53714)) (bvsgt (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun e!69651 () List!1596)

(assert (=> b!107059 (= e!69652 e!69651)))

(declare-fun c!18772 () Bool)

(declare-fun bm!11304 () Bool)

(declare-fun call!11306 () List!1596)

(assert (=> bm!11304 (= call!11306 ($colon$colon!80 e!69649 (ite c!18772 (h!2189 (toList!782 lt!53714)) (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))))

(declare-fun c!18774 () Bool)

(assert (=> bm!11304 (= c!18774 c!18772)))

(declare-fun b!107060 () Bool)

(assert (=> b!107060 (= e!69651 call!11308)))

(declare-fun b!107061 () Bool)

(assert (=> b!107061 (= e!69651 call!11308)))

(declare-fun b!107062 () Bool)

(declare-fun res!53190 () Bool)

(declare-fun e!69650 () Bool)

(assert (=> b!107062 (=> (not res!53190) (not e!69650))))

(declare-fun lt!54881 () List!1596)

(assert (=> b!107062 (= res!53190 (containsKey!160 lt!54881 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun b!107063 () Bool)

(assert (=> b!107063 (= e!69650 (contains!816 lt!54881 (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun b!107064 () Bool)

(declare-fun e!69653 () List!1596)

(assert (=> b!107064 (= e!69653 e!69652)))

(assert (=> b!107064 (= c!18773 (and ((_ is Cons!1592) (toList!782 lt!53714)) (= (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(declare-fun d!29699 () Bool)

(assert (=> d!29699 e!69650))

(declare-fun res!53189 () Bool)

(assert (=> d!29699 (=> (not res!53189) (not e!69650))))

(assert (=> d!29699 (= res!53189 (isStrictlySorted!296 lt!54881))))

(assert (=> d!29699 (= lt!54881 e!69653)))

(assert (=> d!29699 (= c!18772 (and ((_ is Cons!1592) (toList!782 lt!53714)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))))

(assert (=> d!29699 (isStrictlySorted!296 (toList!782 lt!53714))))

(assert (=> d!29699 (= (insertStrictlySorted!76 (toList!782 lt!53714) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))) lt!54881)))

(declare-fun b!107058 () Bool)

(assert (=> b!107058 (= e!69649 (insertStrictlySorted!76 (t!5671 (toList!782 lt!53714)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719))))))

(declare-fun bm!11305 () Bool)

(assert (=> bm!11305 (= call!11307 call!11306)))

(declare-fun b!107065 () Bool)

(assert (=> b!107065 (= e!69653 call!11306)))

(assert (= (and d!29699 c!18772) b!107065))

(assert (= (and d!29699 (not c!18772)) b!107064))

(assert (= (and b!107064 c!18773) b!107057))

(assert (= (and b!107064 (not c!18773)) b!107059))

(assert (= (and b!107059 c!18771) b!107061))

(assert (= (and b!107059 (not c!18771)) b!107060))

(assert (= (or b!107061 b!107060) bm!11303))

(assert (= (or b!107057 bm!11303) bm!11305))

(assert (= (or b!107065 bm!11305) bm!11304))

(assert (= (and bm!11304 c!18774) b!107058))

(assert (= (and bm!11304 (not c!18774)) b!107056))

(assert (= (and d!29699 res!53189) b!107062))

(assert (= (and b!107062 res!53190) b!107063))

(declare-fun m!120321 () Bool)

(assert (=> bm!11304 m!120321))

(declare-fun m!120323 () Bool)

(assert (=> d!29699 m!120323))

(assert (=> d!29699 m!118057))

(declare-fun m!120325 () Bool)

(assert (=> b!107063 m!120325))

(declare-fun m!120327 () Bool)

(assert (=> b!107062 m!120327))

(declare-fun m!120329 () Bool)

(assert (=> b!107058 m!120329))

(assert (=> d!28831 d!29699))

(declare-fun d!29701 () Bool)

(assert (=> d!29701 (= (get!1338 (getValueByKey!157 (toList!782 lt!53941) lt!53942)) (v!2898 (getValueByKey!157 (toList!782 lt!53941) lt!53942)))))

(assert (=> d!28885 d!29701))

(declare-fun b!107066 () Bool)

(declare-fun e!69654 () Option!163)

(assert (=> b!107066 (= e!69654 (Some!162 (_2!1191 (h!2189 (toList!782 lt!53941)))))))

(declare-fun d!29703 () Bool)

(declare-fun c!18775 () Bool)

(assert (=> d!29703 (= c!18775 (and ((_ is Cons!1592) (toList!782 lt!53941)) (= (_1!1191 (h!2189 (toList!782 lt!53941))) lt!53942)))))

(assert (=> d!29703 (= (getValueByKey!157 (toList!782 lt!53941) lt!53942) e!69654)))

(declare-fun b!107068 () Bool)

(declare-fun e!69655 () Option!163)

(assert (=> b!107068 (= e!69655 (getValueByKey!157 (t!5671 (toList!782 lt!53941)) lt!53942))))

(declare-fun b!107067 () Bool)

(assert (=> b!107067 (= e!69654 e!69655)))

(declare-fun c!18776 () Bool)

(assert (=> b!107067 (= c!18776 (and ((_ is Cons!1592) (toList!782 lt!53941)) (not (= (_1!1191 (h!2189 (toList!782 lt!53941))) lt!53942))))))

(declare-fun b!107069 () Bool)

(assert (=> b!107069 (= e!69655 None!161)))

(assert (= (and d!29703 c!18775) b!107066))

(assert (= (and d!29703 (not c!18775)) b!107067))

(assert (= (and b!107067 c!18776) b!107068))

(assert (= (and b!107067 (not c!18776)) b!107069))

(declare-fun m!120331 () Bool)

(assert (=> b!107068 m!120331))

(assert (=> d!28885 d!29703))

(declare-fun b!107070 () Bool)

(declare-fun e!69656 () Option!163)

(assert (=> b!107070 (= e!69656 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54141)))))))

(declare-fun d!29705 () Bool)

(declare-fun c!18777 () Bool)

(assert (=> d!29705 (= c!18777 (and ((_ is Cons!1592) (toList!782 lt!54141)) (= (_1!1191 (h!2189 (toList!782 lt!54141))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29705 (= (getValueByKey!157 (toList!782 lt!54141) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!69656)))

(declare-fun e!69657 () Option!163)

(declare-fun b!107072 () Bool)

(assert (=> b!107072 (= e!69657 (getValueByKey!157 (t!5671 (toList!782 lt!54141)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!107071 () Bool)

(assert (=> b!107071 (= e!69656 e!69657)))

(declare-fun c!18778 () Bool)

(assert (=> b!107071 (= c!18778 (and ((_ is Cons!1592) (toList!782 lt!54141)) (not (= (_1!1191 (h!2189 (toList!782 lt!54141))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!107073 () Bool)

(assert (=> b!107073 (= e!69657 None!161)))

(assert (= (and d!29705 c!18777) b!107070))

(assert (= (and d!29705 (not c!18777)) b!107071))

(assert (= (and b!107071 c!18778) b!107072))

(assert (= (and b!107071 (not c!18778)) b!107073))

(declare-fun m!120333 () Bool)

(assert (=> b!107072 m!120333))

(assert (=> b!105786 d!29705))

(assert (=> d!28975 d!28967))

(declare-fun b!107090 () Bool)

(declare-fun e!69666 () Bool)

(declare-fun call!11313 () Bool)

(assert (=> b!107090 (= e!69666 (not call!11313))))

(declare-fun b!107091 () Bool)

(declare-fun res!53199 () Bool)

(assert (=> b!107091 (=> (not res!53199) (not e!69666))))

(declare-fun call!11314 () Bool)

(assert (=> b!107091 (= res!53199 call!11314)))

(declare-fun e!69667 () Bool)

(assert (=> b!107091 (= e!69667 e!69666)))

(declare-fun lt!54884 () SeekEntryResult!253)

(declare-fun c!18784 () Bool)

(declare-fun bm!11310 () Bool)

(assert (=> bm!11310 (= call!11314 (inRange!0 (ite c!18784 (index!3160 lt!54884) (index!3163 lt!54884)) (mask!6727 newMap!16)))))

(declare-fun b!107092 () Bool)

(declare-fun e!69668 () Bool)

(declare-fun e!69669 () Bool)

(assert (=> b!107092 (= e!69668 e!69669)))

(declare-fun res!53201 () Bool)

(assert (=> b!107092 (= res!53201 call!11314)))

(assert (=> b!107092 (=> (not res!53201) (not e!69669))))

(declare-fun bm!11311 () Bool)

(assert (=> bm!11311 (= call!11313 (arrayContainsKey!0 (_keys!4287 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!107093 () Bool)

(assert (=> b!107093 (= e!69669 (not call!11313))))

(declare-fun b!107094 () Bool)

(declare-fun res!53200 () Bool)

(assert (=> b!107094 (=> (not res!53200) (not e!69666))))

(assert (=> b!107094 (= res!53200 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3163 lt!54884)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107095 () Bool)

(assert (=> b!107095 (= e!69668 e!69667)))

(declare-fun c!18783 () Bool)

(assert (=> b!107095 (= c!18783 ((_ is MissingVacant!253) lt!54884))))

(declare-fun d!29707 () Bool)

(assert (=> d!29707 e!69668))

(assert (=> d!29707 (= c!18784 ((_ is MissingZero!253) lt!54884))))

(assert (=> d!29707 (= lt!54884 (seekEntryOrOpen!0 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4287 newMap!16) (mask!6727 newMap!16)))))

(assert (=> d!29707 true))

(declare-fun _$34!892 () Unit!3212)

(assert (=> d!29707 (= (choose!670 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)) _$34!892)))

(declare-fun b!107096 () Bool)

(declare-fun res!53202 () Bool)

(assert (=> b!107096 (= res!53202 (= (select (arr!2054 (_keys!4287 newMap!16)) (index!3160 lt!54884)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107096 (=> (not res!53202) (not e!69669))))

(declare-fun b!107097 () Bool)

(assert (=> b!107097 (= e!69667 ((_ is Undefined!253) lt!54884))))

(assert (= (and d!29707 c!18784) b!107092))

(assert (= (and d!29707 (not c!18784)) b!107095))

(assert (= (and b!107092 res!53201) b!107096))

(assert (= (and b!107096 res!53202) b!107093))

(assert (= (and b!107095 c!18783) b!107091))

(assert (= (and b!107095 (not c!18783)) b!107097))

(assert (= (and b!107091 res!53199) b!107094))

(assert (= (and b!107094 res!53200) b!107090))

(assert (= (or b!107092 b!107091) bm!11310))

(assert (= (or b!107093 b!107090) bm!11311))

(declare-fun m!120335 () Bool)

(assert (=> b!107096 m!120335))

(declare-fun m!120337 () Bool)

(assert (=> bm!11310 m!120337))

(assert (=> d!29707 m!117261))

(assert (=> d!29707 m!117433))

(declare-fun m!120339 () Bool)

(assert (=> b!107094 m!120339))

(assert (=> bm!11311 m!117261))

(assert (=> bm!11311 m!117431))

(assert (=> d!28975 d!29707))

(assert (=> d!28975 d!29089))

(declare-fun d!29709 () Bool)

(declare-fun e!69670 () Bool)

(assert (=> d!29709 e!69670))

(declare-fun res!53203 () Bool)

(assert (=> d!29709 (=> (not res!53203) (not e!69670))))

(declare-fun lt!54886 () ListLongMap!1533)

(assert (=> d!29709 (= res!53203 (contains!814 lt!54886 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun lt!54885 () List!1596)

(assert (=> d!29709 (= lt!54886 (ListLongMap!1534 lt!54885))))

(declare-fun lt!54888 () Unit!3212)

(declare-fun lt!54887 () Unit!3212)

(assert (=> d!29709 (= lt!54888 lt!54887)))

(assert (=> d!29709 (= (getValueByKey!157 lt!54885 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29709 (= lt!54887 (lemmaContainsTupThenGetReturnValue!73 lt!54885 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29709 (= lt!54885 (insertStrictlySorted!76 (toList!782 call!11162) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29709 (= (+!139 call!11162 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) lt!54886)))

(declare-fun b!107098 () Bool)

(declare-fun res!53204 () Bool)

(assert (=> b!107098 (=> (not res!53204) (not e!69670))))

(assert (=> b!107098 (= res!53204 (= (getValueByKey!157 (toList!782 lt!54886) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(declare-fun b!107099 () Bool)

(assert (=> b!107099 (= e!69670 (contains!816 (toList!782 lt!54886) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(assert (= (and d!29709 res!53203) b!107098))

(assert (= (and b!107098 res!53204) b!107099))

(declare-fun m!120341 () Bool)

(assert (=> d!29709 m!120341))

(declare-fun m!120343 () Bool)

(assert (=> d!29709 m!120343))

(declare-fun m!120345 () Bool)

(assert (=> d!29709 m!120345))

(declare-fun m!120347 () Bool)

(assert (=> d!29709 m!120347))

(declare-fun m!120349 () Bool)

(assert (=> b!107098 m!120349))

(declare-fun m!120351 () Bool)

(assert (=> b!107099 m!120351))

(assert (=> b!105832 d!29709))

(assert (=> b!106069 d!28975))

(declare-fun b!107100 () Bool)

(declare-fun e!69671 () Option!163)

(assert (=> b!107100 (= e!69671 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54057)))))))

(declare-fun d!29711 () Bool)

(declare-fun c!18785 () Bool)

(assert (=> d!29711 (= c!18785 (and ((_ is Cons!1592) (toList!782 lt!54057)) (= (_1!1191 (h!2189 (toList!782 lt!54057))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29711 (= (getValueByKey!157 (toList!782 lt!54057) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69671)))

(declare-fun b!107102 () Bool)

(declare-fun e!69672 () Option!163)

(assert (=> b!107102 (= e!69672 (getValueByKey!157 (t!5671 (toList!782 lt!54057)) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107101 () Bool)

(assert (=> b!107101 (= e!69671 e!69672)))

(declare-fun c!18786 () Bool)

(assert (=> b!107101 (= c!18786 (and ((_ is Cons!1592) (toList!782 lt!54057)) (not (= (_1!1191 (h!2189 (toList!782 lt!54057))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!107103 () Bool)

(assert (=> b!107103 (= e!69672 None!161)))

(assert (= (and d!29711 c!18785) b!107100))

(assert (= (and d!29711 (not c!18785)) b!107101))

(assert (= (and b!107101 c!18786) b!107102))

(assert (= (and b!107101 (not c!18786)) b!107103))

(declare-fun m!120353 () Bool)

(assert (=> b!107102 m!120353))

(assert (=> b!105664 d!29711))

(declare-fun d!29713 () Bool)

(declare-fun res!53207 () Bool)

(declare-fun e!69673 () Bool)

(assert (=> d!29713 (=> (not res!53207) (not e!69673))))

(assert (=> d!29713 (= res!53207 (validMask!0 (mask!6727 (_2!1192 lt!53868))))))

(assert (=> d!29713 (= (simpleValid!74 (_2!1192 lt!53868)) e!69673)))

(declare-fun b!107104 () Bool)

(declare-fun res!53208 () Bool)

(assert (=> b!107104 (=> (not res!53208) (not e!69673))))

(assert (=> b!107104 (= res!53208 (and (= (size!2310 (_values!2564 (_2!1192 lt!53868))) (bvadd (mask!6727 (_2!1192 lt!53868)) #b00000000000000000000000000000001)) (= (size!2309 (_keys!4287 (_2!1192 lt!53868))) (size!2310 (_values!2564 (_2!1192 lt!53868)))) (bvsge (_size!498 (_2!1192 lt!53868)) #b00000000000000000000000000000000) (bvsle (_size!498 (_2!1192 lt!53868)) (bvadd (mask!6727 (_2!1192 lt!53868)) #b00000000000000000000000000000001))))))

(declare-fun b!107107 () Bool)

(assert (=> b!107107 (= e!69673 (and (bvsge (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000000) (bvsle (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000011) (bvsge (_vacant!498 (_2!1192 lt!53868)) #b00000000000000000000000000000000)))))

(declare-fun b!107105 () Bool)

(declare-fun res!53206 () Bool)

(assert (=> b!107105 (=> (not res!53206) (not e!69673))))

(assert (=> b!107105 (= res!53206 (bvsge (size!2315 (_2!1192 lt!53868)) (_size!498 (_2!1192 lt!53868))))))

(declare-fun b!107106 () Bool)

(declare-fun res!53205 () Bool)

(assert (=> b!107106 (=> (not res!53205) (not e!69673))))

(assert (=> b!107106 (= res!53205 (= (size!2315 (_2!1192 lt!53868)) (bvadd (_size!498 (_2!1192 lt!53868)) (bvsdiv (bvadd (extraKeys!2386 (_2!1192 lt!53868)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!29713 res!53207) b!107104))

(assert (= (and b!107104 res!53208) b!107105))

(assert (= (and b!107105 res!53206) b!107106))

(assert (= (and b!107106 res!53205) b!107107))

(assert (=> d!29713 m!119769))

(declare-fun m!120355 () Bool)

(assert (=> b!107105 m!120355))

(assert (=> b!107106 m!120355))

(assert (=> d!28829 d!29713))

(declare-fun d!29715 () Bool)

(assert (=> d!29715 (isDefined!109 (getValueByKey!157 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991))))

(declare-fun lt!54889 () Unit!3212)

(assert (=> d!29715 (= lt!54889 (choose!669 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991))))

(declare-fun e!69674 () Bool)

(assert (=> d!29715 e!69674))

(declare-fun res!53209 () Bool)

(assert (=> d!29715 (=> (not res!53209) (not e!69674))))

(assert (=> d!29715 (= res!53209 (isStrictlySorted!296 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995)))))))

(assert (=> d!29715 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991) lt!54889)))

(declare-fun b!107108 () Bool)

(assert (=> b!107108 (= e!69674 (containsKey!160 (toList!782 (+!139 lt!53994 (tuple2!2361 lt!53996 lt!53995))) lt!53991))))

(assert (= (and d!29715 res!53209) b!107108))

(assert (=> d!29715 m!117995))

(assert (=> d!29715 m!117995))

(assert (=> d!29715 m!117997))

(declare-fun m!120357 () Bool)

(assert (=> d!29715 m!120357))

(declare-fun m!120359 () Bool)

(assert (=> d!29715 m!120359))

(assert (=> b!107108 m!117991))

(assert (=> b!105777 d!29715))

(assert (=> b!105777 d!29453))

(assert (=> b!105777 d!29455))

(declare-fun b!107109 () Bool)

(declare-fun e!69675 () Option!163)

(assert (=> b!107109 (= e!69675 (Some!162 (_2!1191 (h!2189 (t!5671 (toList!782 lt!53999))))))))

(declare-fun d!29717 () Bool)

(declare-fun c!18787 () Bool)

(assert (=> d!29717 (= c!18787 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53999))) (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53999)))) (_1!1191 lt!53718))))))

(assert (=> d!29717 (= (getValueByKey!157 (t!5671 (toList!782 lt!53999)) (_1!1191 lt!53718)) e!69675)))

(declare-fun b!107111 () Bool)

(declare-fun e!69676 () Option!163)

(assert (=> b!107111 (= e!69676 (getValueByKey!157 (t!5671 (t!5671 (toList!782 lt!53999))) (_1!1191 lt!53718)))))

(declare-fun b!107110 () Bool)

(assert (=> b!107110 (= e!69675 e!69676)))

(declare-fun c!18788 () Bool)

(assert (=> b!107110 (= c!18788 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53999))) (not (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53999)))) (_1!1191 lt!53718)))))))

(declare-fun b!107112 () Bool)

(assert (=> b!107112 (= e!69676 None!161)))

(assert (= (and d!29717 c!18787) b!107109))

(assert (= (and d!29717 (not c!18787)) b!107110))

(assert (= (and b!107110 c!18788) b!107111))

(assert (= (and b!107110 (not c!18788)) b!107112))

(declare-fun m!120361 () Bool)

(assert (=> b!107111 m!120361))

(assert (=> b!105757 d!29717))

(declare-fun d!29719 () Bool)

(declare-fun e!69677 () Bool)

(assert (=> d!29719 e!69677))

(declare-fun res!53210 () Bool)

(assert (=> d!29719 (=> res!53210 e!69677)))

(declare-fun lt!54891 () Bool)

(assert (=> d!29719 (= res!53210 (not lt!54891))))

(declare-fun lt!54892 () Bool)

(assert (=> d!29719 (= lt!54891 lt!54892)))

(declare-fun lt!54893 () Unit!3212)

(declare-fun e!69678 () Unit!3212)

(assert (=> d!29719 (= lt!54893 e!69678)))

(declare-fun c!18789 () Bool)

(assert (=> d!29719 (= c!18789 lt!54892)))

(assert (=> d!29719 (= lt!54892 (containsKey!160 (toList!782 lt!54057) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29719 (= (contains!814 lt!54057 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54891)))

(declare-fun b!107113 () Bool)

(declare-fun lt!54890 () Unit!3212)

(assert (=> b!107113 (= e!69678 lt!54890)))

(assert (=> b!107113 (= lt!54890 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54057) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!107113 (isDefined!109 (getValueByKey!157 (toList!782 lt!54057) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107114 () Bool)

(declare-fun Unit!3282 () Unit!3212)

(assert (=> b!107114 (= e!69678 Unit!3282)))

(declare-fun b!107115 () Bool)

(assert (=> b!107115 (= e!69677 (isDefined!109 (getValueByKey!157 (toList!782 lt!54057) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29719 c!18789) b!107113))

(assert (= (and d!29719 (not c!18789)) b!107114))

(assert (= (and d!29719 (not res!53210)) b!107115))

(declare-fun m!120363 () Bool)

(assert (=> d!29719 m!120363))

(declare-fun m!120365 () Bool)

(assert (=> b!107113 m!120365))

(assert (=> b!107113 m!117767))

(assert (=> b!107113 m!117767))

(declare-fun m!120367 () Bool)

(assert (=> b!107113 m!120367))

(assert (=> b!107115 m!117767))

(assert (=> b!107115 m!117767))

(assert (=> b!107115 m!120367))

(assert (=> d!28837 d!29719))

(declare-fun b!107116 () Bool)

(declare-fun e!69679 () Option!163)

(assert (=> b!107116 (= e!69679 (Some!162 (_2!1191 (h!2189 lt!54056))))))

(declare-fun d!29721 () Bool)

(declare-fun c!18790 () Bool)

(assert (=> d!29721 (= c!18790 (and ((_ is Cons!1592) lt!54056) (= (_1!1191 (h!2189 lt!54056)) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29721 (= (getValueByKey!157 lt!54056 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) e!69679)))

(declare-fun b!107118 () Bool)

(declare-fun e!69680 () Option!163)

(assert (=> b!107118 (= e!69680 (getValueByKey!157 (t!5671 lt!54056) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107117 () Bool)

(assert (=> b!107117 (= e!69679 e!69680)))

(declare-fun c!18791 () Bool)

(assert (=> b!107117 (= c!18791 (and ((_ is Cons!1592) lt!54056) (not (= (_1!1191 (h!2189 lt!54056)) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!107119 () Bool)

(assert (=> b!107119 (= e!69680 None!161)))

(assert (= (and d!29721 c!18790) b!107116))

(assert (= (and d!29721 (not c!18790)) b!107117))

(assert (= (and b!107117 c!18791) b!107118))

(assert (= (and b!107117 (not c!18791)) b!107119))

(declare-fun m!120369 () Bool)

(assert (=> b!107118 m!120369))

(assert (=> d!28837 d!29721))

(declare-fun d!29723 () Bool)

(assert (=> d!29723 (= (getValueByKey!157 lt!54056 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) (Some!162 (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54894 () Unit!3212)

(assert (=> d!29723 (= lt!54894 (choose!662 lt!54056 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69681 () Bool)

(assert (=> d!29723 e!69681))

(declare-fun res!53211 () Bool)

(assert (=> d!29723 (=> (not res!53211) (not e!69681))))

(assert (=> d!29723 (= res!53211 (isStrictlySorted!296 lt!54056))))

(assert (=> d!29723 (= (lemmaContainsTupThenGetReturnValue!73 lt!54056 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54894)))

(declare-fun b!107120 () Bool)

(declare-fun res!53212 () Bool)

(assert (=> b!107120 (=> (not res!53212) (not e!69681))))

(assert (=> b!107120 (= res!53212 (containsKey!160 lt!54056 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107121 () Bool)

(assert (=> b!107121 (= e!69681 (contains!816 lt!54056 (tuple2!2361 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29723 res!53211) b!107120))

(assert (= (and b!107120 res!53212) b!107121))

(assert (=> d!29723 m!117761))

(declare-fun m!120371 () Bool)

(assert (=> d!29723 m!120371))

(declare-fun m!120373 () Bool)

(assert (=> d!29723 m!120373))

(declare-fun m!120375 () Bool)

(assert (=> b!107120 m!120375))

(declare-fun m!120377 () Bool)

(assert (=> b!107121 m!120377))

(assert (=> d!28837 d!29723))

(declare-fun bm!11312 () Bool)

(declare-fun call!11317 () List!1596)

(declare-fun call!11316 () List!1596)

(assert (=> bm!11312 (= call!11317 call!11316)))

(declare-fun c!18792 () Bool)

(declare-fun c!18794 () Bool)

(declare-fun e!69682 () List!1596)

(declare-fun b!107122 () Bool)

(assert (=> b!107122 (= e!69682 (ite c!18794 (t!5671 (toList!782 lt!53714)) (ite c!18792 (Cons!1592 (h!2189 (toList!782 lt!53714)) (t!5671 (toList!782 lt!53714))) Nil!1593)))))

(declare-fun b!107123 () Bool)

(declare-fun e!69685 () List!1596)

(assert (=> b!107123 (= e!69685 call!11316)))

(declare-fun b!107125 () Bool)

(assert (=> b!107125 (= c!18792 (and ((_ is Cons!1592) (toList!782 lt!53714)) (bvsgt (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun e!69684 () List!1596)

(assert (=> b!107125 (= e!69685 e!69684)))

(declare-fun call!11315 () List!1596)

(declare-fun c!18793 () Bool)

(declare-fun bm!11313 () Bool)

(assert (=> bm!11313 (= call!11315 ($colon$colon!80 e!69682 (ite c!18793 (h!2189 (toList!782 lt!53714)) (tuple2!2361 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18795 () Bool)

(assert (=> bm!11313 (= c!18795 c!18793)))

(declare-fun b!107126 () Bool)

(assert (=> b!107126 (= e!69684 call!11317)))

(declare-fun b!107127 () Bool)

(assert (=> b!107127 (= e!69684 call!11317)))

(declare-fun b!107128 () Bool)

(declare-fun res!53214 () Bool)

(declare-fun e!69683 () Bool)

(assert (=> b!107128 (=> (not res!53214) (not e!69683))))

(declare-fun lt!54895 () List!1596)

(assert (=> b!107128 (= res!53214 (containsKey!160 lt!54895 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107129 () Bool)

(assert (=> b!107129 (= e!69683 (contains!816 lt!54895 (tuple2!2361 (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107130 () Bool)

(declare-fun e!69686 () List!1596)

(assert (=> b!107130 (= e!69686 e!69685)))

(assert (=> b!107130 (= c!18794 (and ((_ is Cons!1592) (toList!782 lt!53714)) (= (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun d!29725 () Bool)

(assert (=> d!29725 e!69683))

(declare-fun res!53213 () Bool)

(assert (=> d!29725 (=> (not res!53213) (not e!69683))))

(assert (=> d!29725 (= res!53213 (isStrictlySorted!296 lt!54895))))

(assert (=> d!29725 (= lt!54895 e!69686)))

(assert (=> d!29725 (= c!18793 (and ((_ is Cons!1592) (toList!782 lt!53714)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53714))) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29725 (isStrictlySorted!296 (toList!782 lt!53714))))

(assert (=> d!29725 (= (insertStrictlySorted!76 (toList!782 lt!53714) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!54895)))

(declare-fun b!107124 () Bool)

(assert (=> b!107124 (= e!69682 (insertStrictlySorted!76 (t!5671 (toList!782 lt!53714)) (_1!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) (_2!1191 (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun bm!11314 () Bool)

(assert (=> bm!11314 (= call!11316 call!11315)))

(declare-fun b!107131 () Bool)

(assert (=> b!107131 (= e!69686 call!11315)))

(assert (= (and d!29725 c!18793) b!107131))

(assert (= (and d!29725 (not c!18793)) b!107130))

(assert (= (and b!107130 c!18794) b!107123))

(assert (= (and b!107130 (not c!18794)) b!107125))

(assert (= (and b!107125 c!18792) b!107127))

(assert (= (and b!107125 (not c!18792)) b!107126))

(assert (= (or b!107127 b!107126) bm!11312))

(assert (= (or b!107123 bm!11312) bm!11314))

(assert (= (or b!107131 bm!11314) bm!11313))

(assert (= (and bm!11313 c!18795) b!107124))

(assert (= (and bm!11313 (not c!18795)) b!107122))

(assert (= (and d!29725 res!53213) b!107128))

(assert (= (and b!107128 res!53214) b!107129))

(declare-fun m!120379 () Bool)

(assert (=> bm!11313 m!120379))

(declare-fun m!120381 () Bool)

(assert (=> d!29725 m!120381))

(assert (=> d!29725 m!118057))

(declare-fun m!120383 () Bool)

(assert (=> b!107129 m!120383))

(declare-fun m!120385 () Bool)

(assert (=> b!107128 m!120385))

(declare-fun m!120387 () Bool)

(assert (=> b!107124 m!120387))

(assert (=> d!28837 d!29725))

(declare-fun d!29727 () Bool)

(assert (=> d!29727 (= ($colon$colon!80 e!68816 (ite c!18392 (h!2189 (toList!782 (+!139 lt!53714 lt!53718))) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713)))) (Cons!1592 (ite c!18392 (h!2189 (toList!782 (+!139 lt!53714 lt!53718))) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))) e!68816))))

(assert (=> bm!11152 d!29727))

(declare-fun d!29729 () Bool)

(declare-fun e!69687 () Bool)

(assert (=> d!29729 e!69687))

(declare-fun res!53215 () Bool)

(assert (=> d!29729 (=> (not res!53215) (not e!69687))))

(declare-fun lt!54897 () ListLongMap!1533)

(assert (=> d!29729 (= res!53215 (contains!814 lt!54897 (_1!1191 (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))))

(declare-fun lt!54896 () List!1596)

(assert (=> d!29729 (= lt!54897 (ListLongMap!1534 lt!54896))))

(declare-fun lt!54899 () Unit!3212)

(declare-fun lt!54898 () Unit!3212)

(assert (=> d!29729 (= lt!54899 lt!54898)))

(assert (=> d!29729 (= (getValueByKey!157 lt!54896 (_1!1191 (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))) (Some!162 (_2!1191 (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))))

(assert (=> d!29729 (= lt!54898 (lemmaContainsTupThenGetReturnValue!73 lt!54896 (_1!1191 (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) (_2!1191 (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))))

(assert (=> d!29729 (= lt!54896 (insertStrictlySorted!76 (toList!782 (ite c!18371 call!11140 (ite c!18367 call!11142 call!11139))) (_1!1191 (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) (_2!1191 (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))))))

(assert (=> d!29729 (= (+!139 (ite c!18371 call!11140 (ite c!18367 call!11142 call!11139)) (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))) lt!54897)))

(declare-fun b!107132 () Bool)

(declare-fun res!53216 () Bool)

(assert (=> b!107132 (=> (not res!53216) (not e!69687))))

(assert (=> b!107132 (= res!53216 (= (getValueByKey!157 (toList!782 lt!54897) (_1!1191 (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16)))))) (Some!162 (_2!1191 (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))))

(declare-fun b!107133 () Bool)

(assert (=> b!107133 (= e!69687 (contains!816 (toList!782 lt!54897) (ite (or c!18371 c!18367) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18322 c!18318) lt!53719 (zeroValue!2456 newMap!16))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18322 (ite c!18318 (minValue!2456 newMap!16) lt!53719) (minValue!2456 newMap!16))))))))

(assert (= (and d!29729 res!53215) b!107132))

(assert (= (and b!107132 res!53216) b!107133))

(declare-fun m!120389 () Bool)

(assert (=> d!29729 m!120389))

(declare-fun m!120391 () Bool)

(assert (=> d!29729 m!120391))

(declare-fun m!120393 () Bool)

(assert (=> d!29729 m!120393))

(declare-fun m!120395 () Bool)

(assert (=> d!29729 m!120395))

(declare-fun m!120397 () Bool)

(assert (=> b!107132 m!120397))

(declare-fun m!120399 () Bool)

(assert (=> b!107133 m!120399))

(assert (=> bm!11140 d!29729))

(assert (=> d!28979 d!28811))

(assert (=> b!105858 d!29151))

(assert (=> b!105858 d!28935))

(declare-fun d!29731 () Bool)

(declare-fun lt!54900 () Bool)

(assert (=> d!29731 (= lt!54900 (select (content!111 (t!5671 (toList!782 lt!53974))) lt!53713))))

(declare-fun e!69688 () Bool)

(assert (=> d!29731 (= lt!54900 e!69688)))

(declare-fun res!53217 () Bool)

(assert (=> d!29731 (=> (not res!53217) (not e!69688))))

(assert (=> d!29731 (= res!53217 ((_ is Cons!1592) (t!5671 (toList!782 lt!53974))))))

(assert (=> d!29731 (= (contains!816 (t!5671 (toList!782 lt!53974)) lt!53713) lt!54900)))

(declare-fun b!107134 () Bool)

(declare-fun e!69689 () Bool)

(assert (=> b!107134 (= e!69688 e!69689)))

(declare-fun res!53218 () Bool)

(assert (=> b!107134 (=> res!53218 e!69689)))

(assert (=> b!107134 (= res!53218 (= (h!2189 (t!5671 (toList!782 lt!53974))) lt!53713))))

(declare-fun b!107135 () Bool)

(assert (=> b!107135 (= e!69689 (contains!816 (t!5671 (t!5671 (toList!782 lt!53974))) lt!53713))))

(assert (= (and d!29731 res!53217) b!107134))

(assert (= (and b!107134 (not res!53218)) b!107135))

(assert (=> d!29731 m!120071))

(declare-fun m!120401 () Bool)

(assert (=> d!29731 m!120401))

(declare-fun m!120403 () Bool)

(assert (=> b!107135 m!120403))

(assert (=> b!106001 d!29731))

(declare-fun d!29733 () Bool)

(declare-fun e!69690 () Bool)

(assert (=> d!29733 e!69690))

(declare-fun res!53219 () Bool)

(assert (=> d!29733 (=> res!53219 e!69690)))

(declare-fun lt!54902 () Bool)

(assert (=> d!29733 (= res!53219 (not lt!54902))))

(declare-fun lt!54903 () Bool)

(assert (=> d!29733 (= lt!54902 lt!54903)))

(declare-fun lt!54904 () Unit!3212)

(declare-fun e!69691 () Unit!3212)

(assert (=> d!29733 (= lt!54904 e!69691)))

(declare-fun c!18796 () Bool)

(assert (=> d!29733 (= c!18796 lt!54903)))

(assert (=> d!29733 (= lt!54903 (containsKey!160 (toList!782 (map!1283 (_2!1192 lt!54342))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29733 (= (contains!814 (map!1283 (_2!1192 lt!54342)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54902)))

(declare-fun b!107136 () Bool)

(declare-fun lt!54901 () Unit!3212)

(assert (=> b!107136 (= e!69691 lt!54901)))

(assert (=> b!107136 (= lt!54901 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 (map!1283 (_2!1192 lt!54342))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!107136 (isDefined!109 (getValueByKey!157 (toList!782 (map!1283 (_2!1192 lt!54342))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!107137 () Bool)

(declare-fun Unit!3283 () Unit!3212)

(assert (=> b!107137 (= e!69691 Unit!3283)))

(declare-fun b!107138 () Bool)

(assert (=> b!107138 (= e!69690 (isDefined!109 (getValueByKey!157 (toList!782 (map!1283 (_2!1192 lt!54342))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (= (and d!29733 c!18796) b!107136))

(assert (= (and d!29733 (not c!18796)) b!107137))

(assert (= (and d!29733 (not res!53219)) b!107138))

(assert (=> d!29733 m!117261))

(declare-fun m!120405 () Bool)

(assert (=> d!29733 m!120405))

(assert (=> b!107136 m!117261))

(declare-fun m!120407 () Bool)

(assert (=> b!107136 m!120407))

(assert (=> b!107136 m!117261))

(declare-fun m!120409 () Bool)

(assert (=> b!107136 m!120409))

(assert (=> b!107136 m!120409))

(declare-fun m!120411 () Bool)

(assert (=> b!107136 m!120411))

(assert (=> b!107138 m!117261))

(assert (=> b!107138 m!120409))

(assert (=> b!107138 m!120409))

(assert (=> b!107138 m!120411))

(assert (=> b!106056 d!29733))

(assert (=> b!106056 d!29059))

(declare-fun d!29735 () Bool)

(assert (=> d!29735 (= (inRange!0 (ite c!18463 (index!3160 lt!54224) (index!3163 lt!54224)) (mask!6727 newMap!16)) (and (bvsge (ite c!18463 (index!3160 lt!54224) (index!3163 lt!54224)) #b00000000000000000000000000000000) (bvslt (ite c!18463 (index!3160 lt!54224) (index!3163 lt!54224)) (bvadd (mask!6727 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11176 d!29735))

(declare-fun d!29737 () Bool)

(assert (=> d!29737 (= (get!1338 (getValueByKey!157 (toList!782 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53939)) (v!2898 (getValueByKey!157 (toList!782 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53939)))))

(assert (=> d!28895 d!29737))

(declare-fun e!69692 () Option!163)

(declare-fun b!107139 () Bool)

(assert (=> b!107139 (= e!69692 (Some!162 (_2!1191 (h!2189 (toList!782 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun d!29739 () Bool)

(declare-fun c!18797 () Bool)

(assert (=> d!29739 (= c!18797 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53939)))))

(assert (=> d!29739 (= (getValueByKey!157 (toList!782 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))) lt!53939) e!69692)))

(declare-fun b!107141 () Bool)

(declare-fun e!69693 () Option!163)

(assert (=> b!107141 (= e!69693 (getValueByKey!157 (t!5671 (toList!782 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) lt!53939))))

(declare-fun b!107140 () Bool)

(assert (=> b!107140 (= e!69692 e!69693)))

(declare-fun c!18798 () Bool)

(assert (=> b!107140 (= c!18798 (and ((_ is Cons!1592) (toList!782 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))))) (not (= (_1!1191 (h!2189 (toList!782 (+!139 lt!53944 (tuple2!2361 lt!53953 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))))))) lt!53939))))))

(declare-fun b!107142 () Bool)

(assert (=> b!107142 (= e!69693 None!161)))

(assert (= (and d!29739 c!18797) b!107139))

(assert (= (and d!29739 (not c!18797)) b!107140))

(assert (= (and b!107140 c!18798) b!107141))

(assert (= (and b!107140 (not c!18798)) b!107142))

(declare-fun m!120413 () Bool)

(assert (=> b!107141 m!120413))

(assert (=> d!28895 d!29739))

(declare-fun d!29741 () Bool)

(declare-fun lt!54905 () Bool)

(assert (=> d!29741 (= lt!54905 (select (content!111 lt!53969) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun e!69694 () Bool)

(assert (=> d!29741 (= lt!54905 e!69694)))

(declare-fun res!53220 () Bool)

(assert (=> d!29741 (=> (not res!53220) (not e!69694))))

(assert (=> d!29741 (= res!53220 ((_ is Cons!1592) lt!53969))))

(assert (=> d!29741 (= (contains!816 lt!53969 (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))) lt!54905)))

(declare-fun b!107143 () Bool)

(declare-fun e!69695 () Bool)

(assert (=> b!107143 (= e!69694 e!69695)))

(declare-fun res!53221 () Bool)

(assert (=> b!107143 (=> res!53221 e!69695)))

(assert (=> b!107143 (= res!53221 (= (h!2189 lt!53969) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun b!107144 () Bool)

(assert (=> b!107144 (= e!69695 (contains!816 (t!5671 lt!53969) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(assert (= (and d!29741 res!53220) b!107143))

(assert (= (and b!107143 (not res!53221)) b!107144))

(declare-fun m!120415 () Bool)

(assert (=> d!29741 m!120415))

(declare-fun m!120417 () Bool)

(assert (=> d!29741 m!120417))

(declare-fun m!120419 () Bool)

(assert (=> b!107144 m!120419))

(assert (=> b!105864 d!29741))

(declare-fun d!29743 () Bool)

(declare-fun lt!54906 () Bool)

(assert (=> d!29743 (= lt!54906 (select (content!110 Nil!1594) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!69696 () Bool)

(assert (=> d!29743 (= lt!54906 e!69696)))

(declare-fun res!53222 () Bool)

(assert (=> d!29743 (=> (not res!53222) (not e!69696))))

(assert (=> d!29743 (= res!53222 ((_ is Cons!1593) Nil!1594))))

(assert (=> d!29743 (= (contains!817 Nil!1594 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) lt!54906)))

(declare-fun b!107145 () Bool)

(declare-fun e!69697 () Bool)

(assert (=> b!107145 (= e!69696 e!69697)))

(declare-fun res!53223 () Bool)

(assert (=> b!107145 (=> res!53223 e!69697)))

(assert (=> b!107145 (= res!53223 (= (h!2190 Nil!1594) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107146 () Bool)

(assert (=> b!107146 (= e!69697 (contains!817 (t!5672 Nil!1594) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!29743 res!53222) b!107145))

(assert (= (and b!107145 (not res!53223)) b!107146))

(assert (=> d!29743 m!117645))

(assert (=> d!29743 m!117657))

(declare-fun m!120421 () Bool)

(assert (=> d!29743 m!120421))

(assert (=> b!107146 m!117657))

(declare-fun m!120423 () Bool)

(assert (=> b!107146 m!120423))

(assert (=> b!105977 d!29743))

(declare-fun d!29745 () Bool)

(declare-fun c!18799 () Bool)

(assert (=> d!29745 (= c!18799 ((_ is Nil!1593) (toList!782 lt!53999)))))

(declare-fun e!69698 () (InoxSet tuple2!2360))

(assert (=> d!29745 (= (content!111 (toList!782 lt!53999)) e!69698)))

(declare-fun b!107147 () Bool)

(assert (=> b!107147 (= e!69698 ((as const (Array tuple2!2360 Bool)) false))))

(declare-fun b!107148 () Bool)

(assert (=> b!107148 (= e!69698 ((_ map or) (store ((as const (Array tuple2!2360 Bool)) false) (h!2189 (toList!782 lt!53999)) true) (content!111 (t!5671 (toList!782 lt!53999)))))))

(assert (= (and d!29745 c!18799) b!107147))

(assert (= (and d!29745 (not c!18799)) b!107148))

(declare-fun m!120425 () Bool)

(assert (=> b!107148 m!120425))

(declare-fun m!120427 () Bool)

(assert (=> b!107148 m!120427))

(assert (=> d!28973 d!29745))

(declare-fun d!29747 () Bool)

(declare-fun e!69699 () Bool)

(assert (=> d!29747 e!69699))

(declare-fun res!53224 () Bool)

(assert (=> d!29747 (=> res!53224 e!69699)))

(declare-fun lt!54908 () Bool)

(assert (=> d!29747 (= res!53224 (not lt!54908))))

(declare-fun lt!54909 () Bool)

(assert (=> d!29747 (= lt!54908 lt!54909)))

(declare-fun lt!54910 () Unit!3212)

(declare-fun e!69700 () Unit!3212)

(assert (=> d!29747 (= lt!54910 e!69700)))

(declare-fun c!18800 () Bool)

(assert (=> d!29747 (= c!18800 lt!54909)))

(assert (=> d!29747 (= lt!54909 (containsKey!160 (toList!782 lt!54173) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29747 (= (contains!814 lt!54173 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54908)))

(declare-fun b!107149 () Bool)

(declare-fun lt!54907 () Unit!3212)

(assert (=> b!107149 (= e!69700 lt!54907)))

(assert (=> b!107149 (= lt!54907 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54173) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107149 (isDefined!109 (getValueByKey!157 (toList!782 lt!54173) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107150 () Bool)

(declare-fun Unit!3284 () Unit!3212)

(assert (=> b!107150 (= e!69700 Unit!3284)))

(declare-fun b!107151 () Bool)

(assert (=> b!107151 (= e!69699 (isDefined!109 (getValueByKey!157 (toList!782 lt!54173) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29747 c!18800) b!107149))

(assert (= (and d!29747 (not c!18800)) b!107150))

(assert (= (and d!29747 (not res!53224)) b!107151))

(declare-fun m!120429 () Bool)

(assert (=> d!29747 m!120429))

(declare-fun m!120431 () Bool)

(assert (=> b!107149 m!120431))

(assert (=> b!107149 m!119419))

(assert (=> b!107149 m!119419))

(declare-fun m!120433 () Bool)

(assert (=> b!107149 m!120433))

(assert (=> b!107151 m!119419))

(assert (=> b!107151 m!119419))

(assert (=> b!107151 m!120433))

(assert (=> bm!11160 d!29747))

(assert (=> b!105995 d!29135))

(declare-fun d!29749 () Bool)

(declare-fun res!53225 () Bool)

(declare-fun e!69701 () Bool)

(assert (=> d!29749 (=> res!53225 e!69701)))

(assert (=> d!29749 (= res!53225 (and ((_ is Cons!1592) (toList!782 lt!53992)) (= (_1!1191 (h!2189 (toList!782 lt!53992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29749 (= (containsKey!160 (toList!782 lt!53992) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69701)))

(declare-fun b!107152 () Bool)

(declare-fun e!69702 () Bool)

(assert (=> b!107152 (= e!69701 e!69702)))

(declare-fun res!53226 () Bool)

(assert (=> b!107152 (=> (not res!53226) (not e!69702))))

(assert (=> b!107152 (= res!53226 (and (or (not ((_ is Cons!1592) (toList!782 lt!53992))) (bvsle (_1!1191 (h!2189 (toList!782 lt!53992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1592) (toList!782 lt!53992)) (bvslt (_1!1191 (h!2189 (toList!782 lt!53992))) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!107153 () Bool)

(assert (=> b!107153 (= e!69702 (containsKey!160 (t!5671 (toList!782 lt!53992)) (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29749 (not res!53225)) b!107152))

(assert (= (and b!107152 res!53226) b!107153))

(assert (=> b!107153 m!117491))

(declare-fun m!120435 () Bool)

(assert (=> b!107153 m!120435))

(assert (=> d!29017 d!29749))

(declare-fun b!107154 () Bool)

(declare-fun e!69706 () Bool)

(declare-fun lt!54927 () ListLongMap!1533)

(assert (=> b!107154 (= e!69706 (= (apply!98 lt!54927 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53719))))

(declare-fun b!107155 () Bool)

(declare-fun e!69715 () Bool)

(assert (=> b!107155 (= e!69715 e!69706)))

(declare-fun res!53227 () Bool)

(declare-fun call!11321 () Bool)

(assert (=> b!107155 (= res!53227 call!11321)))

(assert (=> b!107155 (=> (not res!53227) (not e!69706))))

(declare-fun b!107156 () Bool)

(declare-fun e!69709 () ListLongMap!1533)

(declare-fun call!11323 () ListLongMap!1533)

(assert (=> b!107156 (= e!69709 call!11323)))

(declare-fun b!107157 () Bool)

(declare-fun res!53231 () Bool)

(declare-fun e!69711 () Bool)

(assert (=> b!107157 (=> (not res!53231) (not e!69711))))

(declare-fun e!69705 () Bool)

(assert (=> b!107157 (= res!53231 e!69705)))

(declare-fun res!53234 () Bool)

(assert (=> b!107157 (=> res!53234 e!69705)))

(declare-fun e!69714 () Bool)

(assert (=> b!107157 (= res!53234 (not e!69714))))

(declare-fun res!53228 () Bool)

(assert (=> b!107157 (=> (not res!53228) (not e!69714))))

(assert (=> b!107157 (= res!53228 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!107158 () Bool)

(declare-fun e!69710 () Bool)

(declare-fun e!69707 () Bool)

(assert (=> b!107158 (= e!69710 e!69707)))

(declare-fun res!53235 () Bool)

(declare-fun call!11324 () Bool)

(assert (=> b!107158 (= res!53235 call!11324)))

(assert (=> b!107158 (=> (not res!53235) (not e!69707))))

(declare-fun b!107160 () Bool)

(declare-fun res!53232 () Bool)

(assert (=> b!107160 (=> (not res!53232) (not e!69711))))

(assert (=> b!107160 (= res!53232 e!69710)))

(declare-fun c!18802 () Bool)

(assert (=> b!107160 (= c!18802 (not (= (bvand lt!53865 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!107161 () Bool)

(declare-fun e!69712 () Bool)

(assert (=> b!107161 (= e!69712 (= (apply!98 lt!54927 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (select (arr!2055 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107161 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_values!2564 newMap!16))))))

(assert (=> b!107161 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(declare-fun b!107162 () Bool)

(declare-fun call!11319 () ListLongMap!1533)

(assert (=> b!107162 (= e!69709 call!11319)))

(declare-fun b!107163 () Bool)

(declare-fun e!69703 () Unit!3212)

(declare-fun Unit!3285 () Unit!3212)

(assert (=> b!107163 (= e!69703 Unit!3285)))

(declare-fun b!107164 () Bool)

(assert (=> b!107164 (= e!69715 (not call!11321))))

(declare-fun b!107165 () Bool)

(assert (=> b!107165 (= e!69710 (not call!11324))))

(declare-fun b!107166 () Bool)

(declare-fun e!69713 () ListLongMap!1533)

(declare-fun e!69704 () ListLongMap!1533)

(assert (=> b!107166 (= e!69713 e!69704)))

(declare-fun c!18801 () Bool)

(assert (=> b!107166 (= c!18801 (and (not (= (bvand lt!53865 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!53865 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11315 () Bool)

(declare-fun call!11322 () ListLongMap!1533)

(declare-fun call!11320 () ListLongMap!1533)

(assert (=> bm!11315 (= call!11322 call!11320)))

(declare-fun bm!11316 () Bool)

(assert (=> bm!11316 (= call!11324 (contains!814 lt!54927 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107167 () Bool)

(assert (=> b!107167 (= e!69711 e!69715)))

(declare-fun c!18806 () Bool)

(assert (=> b!107167 (= c!18806 (not (= (bvand lt!53865 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!29751 () Bool)

(assert (=> d!29751 e!69711))

(declare-fun res!53229 () Bool)

(assert (=> d!29751 (=> (not res!53229) (not e!69711))))

(assert (=> d!29751 (= res!53229 (or (bvsge #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))))

(declare-fun lt!54917 () ListLongMap!1533)

(assert (=> d!29751 (= lt!54927 lt!54917)))

(declare-fun lt!54919 () Unit!3212)

(assert (=> d!29751 (= lt!54919 e!69703)))

(declare-fun c!18804 () Bool)

(declare-fun e!69708 () Bool)

(assert (=> d!29751 (= c!18804 e!69708)))

(declare-fun res!53233 () Bool)

(assert (=> d!29751 (=> (not res!53233) (not e!69708))))

(assert (=> d!29751 (= res!53233 (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (=> d!29751 (= lt!54917 e!69713)))

(declare-fun c!18805 () Bool)

(assert (=> d!29751 (= c!18805 (and (not (= (bvand lt!53865 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!53865 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29751 (validMask!0 (mask!6727 newMap!16))))

(assert (=> d!29751 (= (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53865 (zeroValue!2456 newMap!16) lt!53719 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54927)))

(declare-fun b!107159 () Bool)

(declare-fun call!11318 () ListLongMap!1533)

(assert (=> b!107159 (= e!69713 (+!139 call!11318 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)))))

(declare-fun bm!11317 () Bool)

(assert (=> bm!11317 (= call!11321 (contains!814 lt!54927 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107168 () Bool)

(assert (=> b!107168 (= e!69707 (= (apply!98 lt!54927 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!107169 () Bool)

(assert (=> b!107169 (= e!69704 call!11323)))

(declare-fun b!107170 () Bool)

(assert (=> b!107170 (= e!69714 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11318 () Bool)

(assert (=> bm!11318 (= call!11319 call!11322)))

(declare-fun bm!11319 () Bool)

(assert (=> bm!11319 (= call!11323 call!11318)))

(declare-fun b!107171 () Bool)

(declare-fun c!18803 () Bool)

(assert (=> b!107171 (= c!18803 (and (not (= (bvand lt!53865 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!53865 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!107171 (= e!69704 e!69709)))

(declare-fun bm!11320 () Bool)

(assert (=> bm!11320 (= call!11318 (+!139 (ite c!18805 call!11320 (ite c!18801 call!11322 call!11319)) (ite (or c!18805 c!18801) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719))))))

(declare-fun b!107172 () Bool)

(declare-fun lt!54925 () Unit!3212)

(assert (=> b!107172 (= e!69703 lt!54925)))

(declare-fun lt!54912 () ListLongMap!1533)

(assert (=> b!107172 (= lt!54912 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53865 (zeroValue!2456 newMap!16) lt!53719 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54926 () (_ BitVec 64))

(assert (=> b!107172 (= lt!54926 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54913 () (_ BitVec 64))

(assert (=> b!107172 (= lt!54913 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54931 () Unit!3212)

(assert (=> b!107172 (= lt!54931 (addStillContains!74 lt!54912 lt!54926 (zeroValue!2456 newMap!16) lt!54913))))

(assert (=> b!107172 (contains!814 (+!139 lt!54912 (tuple2!2361 lt!54926 (zeroValue!2456 newMap!16))) lt!54913)))

(declare-fun lt!54924 () Unit!3212)

(assert (=> b!107172 (= lt!54924 lt!54931)))

(declare-fun lt!54920 () ListLongMap!1533)

(assert (=> b!107172 (= lt!54920 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53865 (zeroValue!2456 newMap!16) lt!53719 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54911 () (_ BitVec 64))

(assert (=> b!107172 (= lt!54911 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54921 () (_ BitVec 64))

(assert (=> b!107172 (= lt!54921 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54928 () Unit!3212)

(assert (=> b!107172 (= lt!54928 (addApplyDifferent!74 lt!54920 lt!54911 lt!53719 lt!54921))))

(assert (=> b!107172 (= (apply!98 (+!139 lt!54920 (tuple2!2361 lt!54911 lt!53719)) lt!54921) (apply!98 lt!54920 lt!54921))))

(declare-fun lt!54915 () Unit!3212)

(assert (=> b!107172 (= lt!54915 lt!54928)))

(declare-fun lt!54923 () ListLongMap!1533)

(assert (=> b!107172 (= lt!54923 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53865 (zeroValue!2456 newMap!16) lt!53719 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54932 () (_ BitVec 64))

(assert (=> b!107172 (= lt!54932 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54918 () (_ BitVec 64))

(assert (=> b!107172 (= lt!54918 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54914 () Unit!3212)

(assert (=> b!107172 (= lt!54914 (addApplyDifferent!74 lt!54923 lt!54932 (zeroValue!2456 newMap!16) lt!54918))))

(assert (=> b!107172 (= (apply!98 (+!139 lt!54923 (tuple2!2361 lt!54932 (zeroValue!2456 newMap!16))) lt!54918) (apply!98 lt!54923 lt!54918))))

(declare-fun lt!54929 () Unit!3212)

(assert (=> b!107172 (= lt!54929 lt!54914)))

(declare-fun lt!54922 () ListLongMap!1533)

(assert (=> b!107172 (= lt!54922 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53865 (zeroValue!2456 newMap!16) lt!53719 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54916 () (_ BitVec 64))

(assert (=> b!107172 (= lt!54916 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54930 () (_ BitVec 64))

(assert (=> b!107172 (= lt!54930 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107172 (= lt!54925 (addApplyDifferent!74 lt!54922 lt!54916 lt!53719 lt!54930))))

(assert (=> b!107172 (= (apply!98 (+!139 lt!54922 (tuple2!2361 lt!54916 lt!53719)) lt!54930) (apply!98 lt!54922 lt!54930))))

(declare-fun b!107173 () Bool)

(assert (=> b!107173 (= e!69708 (validKeyInArray!0 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11321 () Bool)

(assert (=> bm!11321 (= call!11320 (getCurrentListMapNoExtraKeys!106 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53865 (zeroValue!2456 newMap!16) lt!53719 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!107174 () Bool)

(assert (=> b!107174 (= e!69705 e!69712)))

(declare-fun res!53230 () Bool)

(assert (=> b!107174 (=> (not res!53230) (not e!69712))))

(assert (=> b!107174 (= res!53230 (contains!814 lt!54927 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!107174 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2309 (_keys!4287 newMap!16))))))

(assert (= (and d!29751 c!18805) b!107159))

(assert (= (and d!29751 (not c!18805)) b!107166))

(assert (= (and b!107166 c!18801) b!107169))

(assert (= (and b!107166 (not c!18801)) b!107171))

(assert (= (and b!107171 c!18803) b!107156))

(assert (= (and b!107171 (not c!18803)) b!107162))

(assert (= (or b!107156 b!107162) bm!11318))

(assert (= (or b!107169 bm!11318) bm!11315))

(assert (= (or b!107169 b!107156) bm!11319))

(assert (= (or b!107159 bm!11315) bm!11321))

(assert (= (or b!107159 bm!11319) bm!11320))

(assert (= (and d!29751 res!53233) b!107173))

(assert (= (and d!29751 c!18804) b!107172))

(assert (= (and d!29751 (not c!18804)) b!107163))

(assert (= (and d!29751 res!53229) b!107157))

(assert (= (and b!107157 res!53228) b!107170))

(assert (= (and b!107157 (not res!53234)) b!107174))

(assert (= (and b!107174 res!53230) b!107161))

(assert (= (and b!107157 res!53231) b!107160))

(assert (= (and b!107160 c!18802) b!107158))

(assert (= (and b!107160 (not c!18802)) b!107165))

(assert (= (and b!107158 res!53235) b!107168))

(assert (= (or b!107158 b!107165) bm!11316))

(assert (= (and b!107160 res!53232) b!107167))

(assert (= (and b!107167 c!18806) b!107155))

(assert (= (and b!107167 (not c!18806)) b!107164))

(assert (= (and b!107155 res!53227) b!107154))

(assert (= (or b!107155 b!107164) bm!11317))

(declare-fun b_lambda!4779 () Bool)

(assert (=> (not b_lambda!4779) (not b!107161)))

(assert (=> b!107161 t!5683))

(declare-fun b_and!6601 () Bool)

(assert (= b_and!6597 (and (=> t!5683 result!3459) b_and!6601)))

(assert (=> b!107161 t!5685))

(declare-fun b_and!6603 () Bool)

(assert (= b_and!6599 (and (=> t!5685 result!3461) b_and!6603)))

(assert (=> b!107161 m!118077))

(assert (=> b!107161 m!117653))

(assert (=> b!107161 m!118079))

(assert (=> b!107161 m!118077))

(assert (=> b!107161 m!117653))

(assert (=> b!107161 m!117657))

(declare-fun m!120437 () Bool)

(assert (=> b!107161 m!120437))

(assert (=> b!107161 m!117657))

(assert (=> d!29751 m!117661))

(assert (=> b!107170 m!117657))

(assert (=> b!107170 m!117657))

(assert (=> b!107170 m!117663))

(declare-fun m!120439 () Bool)

(assert (=> bm!11320 m!120439))

(declare-fun m!120441 () Bool)

(assert (=> bm!11321 m!120441))

(assert (=> b!107173 m!117657))

(assert (=> b!107173 m!117657))

(assert (=> b!107173 m!117663))

(declare-fun m!120443 () Bool)

(assert (=> b!107168 m!120443))

(declare-fun m!120445 () Bool)

(assert (=> bm!11316 m!120445))

(declare-fun m!120447 () Bool)

(assert (=> b!107172 m!120447))

(declare-fun m!120449 () Bool)

(assert (=> b!107172 m!120449))

(declare-fun m!120451 () Bool)

(assert (=> b!107172 m!120451))

(declare-fun m!120453 () Bool)

(assert (=> b!107172 m!120453))

(assert (=> b!107172 m!120441))

(declare-fun m!120455 () Bool)

(assert (=> b!107172 m!120455))

(declare-fun m!120457 () Bool)

(assert (=> b!107172 m!120457))

(declare-fun m!120459 () Bool)

(assert (=> b!107172 m!120459))

(declare-fun m!120461 () Bool)

(assert (=> b!107172 m!120461))

(assert (=> b!107172 m!120457))

(assert (=> b!107172 m!120461))

(declare-fun m!120463 () Bool)

(assert (=> b!107172 m!120463))

(declare-fun m!120465 () Bool)

(assert (=> b!107172 m!120465))

(declare-fun m!120467 () Bool)

(assert (=> b!107172 m!120467))

(assert (=> b!107172 m!117657))

(declare-fun m!120469 () Bool)

(assert (=> b!107172 m!120469))

(declare-fun m!120471 () Bool)

(assert (=> b!107172 m!120471))

(assert (=> b!107172 m!120455))

(declare-fun m!120473 () Bool)

(assert (=> b!107172 m!120473))

(assert (=> b!107172 m!120449))

(declare-fun m!120475 () Bool)

(assert (=> b!107172 m!120475))

(assert (=> b!107174 m!117657))

(assert (=> b!107174 m!117657))

(declare-fun m!120477 () Bool)

(assert (=> b!107174 m!120477))

(declare-fun m!120479 () Bool)

(assert (=> b!107159 m!120479))

(declare-fun m!120481 () Bool)

(assert (=> b!107154 m!120481))

(declare-fun m!120483 () Bool)

(assert (=> bm!11317 m!120483))

(assert (=> d!28823 d!29751))

(assert (=> d!28823 d!28933))

(declare-fun d!29753 () Bool)

(declare-fun e!69716 () Bool)

(assert (=> d!29753 e!69716))

(declare-fun res!53236 () Bool)

(assert (=> d!29753 (=> (not res!53236) (not e!69716))))

(declare-fun lt!54934 () ListLongMap!1533)

(assert (=> d!29753 (= res!53236 (contains!814 lt!54934 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719))))))

(declare-fun lt!54933 () List!1596)

(assert (=> d!29753 (= lt!54934 (ListLongMap!1534 lt!54933))))

(declare-fun lt!54936 () Unit!3212)

(declare-fun lt!54935 () Unit!3212)

(assert (=> d!29753 (= lt!54936 lt!54935)))

(assert (=> d!29753 (= (getValueByKey!157 lt!54933 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719))))))

(assert (=> d!29753 (= lt!54935 (lemmaContainsTupThenGetReturnValue!73 lt!54933 (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719))))))

(assert (=> d!29753 (= lt!54933 (insertStrictlySorted!76 (toList!782 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719))))))

(assert (=> d!29753 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) lt!54934)))

(declare-fun b!107175 () Bool)

(declare-fun res!53237 () Bool)

(assert (=> b!107175 (=> (not res!53237) (not e!69716))))

(assert (=> b!107175 (= res!53237 (= (getValueByKey!157 (toList!782 lt!54934) (_1!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719))) (Some!162 (_2!1191 (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)))))))

(declare-fun b!107176 () Bool)

(assert (=> b!107176 (= e!69716 (contains!816 (toList!782 lt!54934) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)))))

(assert (= (and d!29753 res!53236) b!107175))

(assert (= (and b!107175 res!53237) b!107176))

(declare-fun m!120485 () Bool)

(assert (=> d!29753 m!120485))

(declare-fun m!120487 () Bool)

(assert (=> d!29753 m!120487))

(declare-fun m!120489 () Bool)

(assert (=> d!29753 m!120489))

(declare-fun m!120491 () Bool)

(assert (=> d!29753 m!120491))

(declare-fun m!120493 () Bool)

(assert (=> b!107175 m!120493))

(declare-fun m!120495 () Bool)

(assert (=> b!107176 m!120495))

(assert (=> d!28823 d!29753))

(declare-fun d!29755 () Bool)

(assert (=> d!29755 (= (+!139 (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53719)) (getCurrentListMap!469 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) lt!53865 (zeroValue!2456 newMap!16) lt!53719 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(assert (=> d!29755 true))

(declare-fun _$8!94 () Unit!3212)

(assert (=> d!29755 (= (choose!661 (_keys!4287 newMap!16) (_values!2564 newMap!16) (mask!6727 newMap!16) (extraKeys!2386 newMap!16) lt!53865 (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) lt!53719 (defaultEntry!2581 newMap!16)) _$8!94)))

(declare-fun bs!4422 () Bool)

(assert (= bs!4422 d!29755))

(assert (=> bs!4422 m!117451))

(assert (=> bs!4422 m!117451))

(assert (=> bs!4422 m!117713))

(assert (=> bs!4422 m!117711))

(assert (=> d!28823 d!29755))

(assert (=> d!28823 d!29089))

(declare-fun bm!11322 () Bool)

(declare-fun call!11327 () List!1596)

(declare-fun call!11326 () List!1596)

(assert (=> bm!11322 (= call!11327 call!11326)))

(declare-fun e!69717 () List!1596)

(declare-fun b!107177 () Bool)

(declare-fun c!18807 () Bool)

(declare-fun c!18809 () Bool)

(assert (=> b!107177 (= e!69717 (ite c!18809 (t!5671 (t!5671 (toList!782 lt!53714))) (ite c!18807 (Cons!1592 (h!2189 (t!5671 (toList!782 lt!53714))) (t!5671 (t!5671 (toList!782 lt!53714)))) Nil!1593)))))

(declare-fun b!107178 () Bool)

(declare-fun e!69720 () List!1596)

(assert (=> b!107178 (= e!69720 call!11326)))

(declare-fun b!107180 () Bool)

(assert (=> b!107180 (= c!18807 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53714))) (bvsgt (_1!1191 (h!2189 (t!5671 (toList!782 lt!53714)))) (_1!1191 lt!53718))))))

(declare-fun e!69719 () List!1596)

(assert (=> b!107180 (= e!69720 e!69719)))

(declare-fun bm!11323 () Bool)

(declare-fun call!11325 () List!1596)

(declare-fun c!18808 () Bool)

(assert (=> bm!11323 (= call!11325 ($colon$colon!80 e!69717 (ite c!18808 (h!2189 (t!5671 (toList!782 lt!53714))) (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718)))))))

(declare-fun c!18810 () Bool)

(assert (=> bm!11323 (= c!18810 c!18808)))

(declare-fun b!107181 () Bool)

(assert (=> b!107181 (= e!69719 call!11327)))

(declare-fun b!107182 () Bool)

(assert (=> b!107182 (= e!69719 call!11327)))

(declare-fun b!107183 () Bool)

(declare-fun res!53239 () Bool)

(declare-fun e!69718 () Bool)

(assert (=> b!107183 (=> (not res!53239) (not e!69718))))

(declare-fun lt!54937 () List!1596)

(assert (=> b!107183 (= res!53239 (containsKey!160 lt!54937 (_1!1191 lt!53718)))))

(declare-fun b!107184 () Bool)

(assert (=> b!107184 (= e!69718 (contains!816 lt!54937 (tuple2!2361 (_1!1191 lt!53718) (_2!1191 lt!53718))))))

(declare-fun b!107185 () Bool)

(declare-fun e!69721 () List!1596)

(assert (=> b!107185 (= e!69721 e!69720)))

(assert (=> b!107185 (= c!18809 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53714))) (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53714)))) (_1!1191 lt!53718))))))

(declare-fun d!29757 () Bool)

(assert (=> d!29757 e!69718))

(declare-fun res!53238 () Bool)

(assert (=> d!29757 (=> (not res!53238) (not e!69718))))

(assert (=> d!29757 (= res!53238 (isStrictlySorted!296 lt!54937))))

(assert (=> d!29757 (= lt!54937 e!69721)))

(assert (=> d!29757 (= c!18808 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53714))) (bvslt (_1!1191 (h!2189 (t!5671 (toList!782 lt!53714)))) (_1!1191 lt!53718))))))

(assert (=> d!29757 (isStrictlySorted!296 (t!5671 (toList!782 lt!53714)))))

(assert (=> d!29757 (= (insertStrictlySorted!76 (t!5671 (toList!782 lt!53714)) (_1!1191 lt!53718) (_2!1191 lt!53718)) lt!54937)))

(declare-fun b!107179 () Bool)

(assert (=> b!107179 (= e!69717 (insertStrictlySorted!76 (t!5671 (t!5671 (toList!782 lt!53714))) (_1!1191 lt!53718) (_2!1191 lt!53718)))))

(declare-fun bm!11324 () Bool)

(assert (=> bm!11324 (= call!11326 call!11325)))

(declare-fun b!107186 () Bool)

(assert (=> b!107186 (= e!69721 call!11325)))

(assert (= (and d!29757 c!18808) b!107186))

(assert (= (and d!29757 (not c!18808)) b!107185))

(assert (= (and b!107185 c!18809) b!107178))

(assert (= (and b!107185 (not c!18809)) b!107180))

(assert (= (and b!107180 c!18807) b!107182))

(assert (= (and b!107180 (not c!18807)) b!107181))

(assert (= (or b!107182 b!107181) bm!11322))

(assert (= (or b!107178 bm!11322) bm!11324))

(assert (= (or b!107186 bm!11324) bm!11323))

(assert (= (and bm!11323 c!18810) b!107179))

(assert (= (and bm!11323 (not c!18810)) b!107177))

(assert (= (and d!29757 res!53238) b!107183))

(assert (= (and b!107183 res!53239) b!107184))

(declare-fun m!120497 () Bool)

(assert (=> bm!11323 m!120497))

(declare-fun m!120499 () Bool)

(assert (=> d!29757 m!120499))

(assert (=> d!29757 m!118555))

(declare-fun m!120501 () Bool)

(assert (=> b!107184 m!120501))

(declare-fun m!120503 () Bool)

(assert (=> b!107183 m!120503))

(declare-fun m!120505 () Bool)

(assert (=> b!107179 m!120505))

(assert (=> b!105810 d!29757))

(declare-fun d!29759 () Bool)

(declare-fun e!69722 () Bool)

(assert (=> d!29759 e!69722))

(declare-fun res!53240 () Bool)

(assert (=> d!29759 (=> res!53240 e!69722)))

(declare-fun lt!54939 () Bool)

(assert (=> d!29759 (= res!53240 (not lt!54939))))

(declare-fun lt!54940 () Bool)

(assert (=> d!29759 (= lt!54939 lt!54940)))

(declare-fun lt!54941 () Unit!3212)

(declare-fun e!69723 () Unit!3212)

(assert (=> d!29759 (= lt!54941 e!69723)))

(declare-fun c!18811 () Bool)

(assert (=> d!29759 (= c!18811 lt!54940)))

(assert (=> d!29759 (= lt!54940 (containsKey!160 (toList!782 lt!54251) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29759 (= (contains!814 lt!54251 (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)) lt!54939)))

(declare-fun b!107187 () Bool)

(declare-fun lt!54938 () Unit!3212)

(assert (=> b!107187 (= e!69723 lt!54938)))

(assert (=> b!107187 (= lt!54938 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54251) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!107187 (isDefined!109 (getValueByKey!157 (toList!782 lt!54251) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107188 () Bool)

(declare-fun Unit!3286 () Unit!3212)

(assert (=> b!107188 (= e!69723 Unit!3286)))

(declare-fun b!107189 () Bool)

(assert (=> b!107189 (= e!69722 (isDefined!109 (getValueByKey!157 (toList!782 lt!54251) (select (arr!2054 (_keys!4287 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29759 c!18811) b!107187))

(assert (= (and d!29759 (not c!18811)) b!107188))

(assert (= (and d!29759 (not res!53240)) b!107189))

(assert (=> d!29759 m!117657))

(declare-fun m!120507 () Bool)

(assert (=> d!29759 m!120507))

(assert (=> b!107187 m!117657))

(declare-fun m!120509 () Bool)

(assert (=> b!107187 m!120509))

(assert (=> b!107187 m!117657))

(assert (=> b!107187 m!118853))

(assert (=> b!107187 m!118853))

(declare-fun m!120511 () Bool)

(assert (=> b!107187 m!120511))

(assert (=> b!107189 m!117657))

(assert (=> b!107189 m!118853))

(assert (=> b!107189 m!118853))

(assert (=> b!107189 m!120511))

(assert (=> b!105999 d!29759))

(assert (=> d!28883 d!28899))

(assert (=> d!28883 d!28877))

(declare-fun d!29761 () Bool)

(assert (=> d!29761 (contains!814 (+!139 lt!53933 (tuple2!2361 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))))) lt!53934)))

(assert (=> d!29761 true))

(declare-fun _$35!348 () Unit!3212)

(assert (=> d!29761 (= (choose!667 lt!53933 lt!53947 (zeroValue!2456 (v!2892 (underlying!361 thiss!992))) lt!53934) _$35!348)))

(declare-fun bs!4423 () Bool)

(assert (= bs!4423 d!29761))

(assert (=> bs!4423 m!117505))

(assert (=> bs!4423 m!117505))

(assert (=> bs!4423 m!117531))

(assert (=> d!28883 d!29761))

(declare-fun d!29763 () Bool)

(declare-fun e!69724 () Bool)

(assert (=> d!29763 e!69724))

(declare-fun res!53241 () Bool)

(assert (=> d!29763 (=> res!53241 e!69724)))

(declare-fun lt!54943 () Bool)

(assert (=> d!29763 (= res!53241 (not lt!54943))))

(declare-fun lt!54944 () Bool)

(assert (=> d!29763 (= lt!54943 lt!54944)))

(declare-fun lt!54945 () Unit!3212)

(declare-fun e!69725 () Unit!3212)

(assert (=> d!29763 (= lt!54945 e!69725)))

(declare-fun c!18812 () Bool)

(assert (=> d!29763 (= c!18812 lt!54944)))

(assert (=> d!29763 (= lt!54944 (containsKey!160 (toList!782 lt!53933) lt!53934))))

(assert (=> d!29763 (= (contains!814 lt!53933 lt!53934) lt!54943)))

(declare-fun b!107191 () Bool)

(declare-fun lt!54942 () Unit!3212)

(assert (=> b!107191 (= e!69725 lt!54942)))

(assert (=> b!107191 (= lt!54942 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!53933) lt!53934))))

(assert (=> b!107191 (isDefined!109 (getValueByKey!157 (toList!782 lt!53933) lt!53934))))

(declare-fun b!107192 () Bool)

(declare-fun Unit!3287 () Unit!3212)

(assert (=> b!107192 (= e!69725 Unit!3287)))

(declare-fun b!107193 () Bool)

(assert (=> b!107193 (= e!69724 (isDefined!109 (getValueByKey!157 (toList!782 lt!53933) lt!53934)))))

(assert (= (and d!29763 c!18812) b!107191))

(assert (= (and d!29763 (not c!18812)) b!107192))

(assert (= (and d!29763 (not res!53241)) b!107193))

(declare-fun m!120513 () Bool)

(assert (=> d!29763 m!120513))

(declare-fun m!120515 () Bool)

(assert (=> b!107191 m!120515))

(declare-fun m!120517 () Bool)

(assert (=> b!107191 m!120517))

(assert (=> b!107191 m!120517))

(declare-fun m!120519 () Bool)

(assert (=> b!107191 m!120519))

(assert (=> b!107193 m!120517))

(assert (=> b!107193 m!120517))

(assert (=> b!107193 m!120519))

(assert (=> d!28883 d!29763))

(declare-fun b!107194 () Bool)

(declare-fun e!69726 () Option!163)

(assert (=> b!107194 (= e!69726 (Some!162 (_2!1191 (h!2189 (t!5671 (toList!782 lt!53974))))))))

(declare-fun d!29765 () Bool)

(declare-fun c!18813 () Bool)

(assert (=> d!29765 (= c!18813 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53974))) (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53974)))) (_1!1191 lt!53713))))))

(assert (=> d!29765 (= (getValueByKey!157 (t!5671 (toList!782 lt!53974)) (_1!1191 lt!53713)) e!69726)))

(declare-fun b!107196 () Bool)

(declare-fun e!69727 () Option!163)

(assert (=> b!107196 (= e!69727 (getValueByKey!157 (t!5671 (t!5671 (toList!782 lt!53974))) (_1!1191 lt!53713)))))

(declare-fun b!107195 () Bool)

(assert (=> b!107195 (= e!69726 e!69727)))

(declare-fun c!18814 () Bool)

(assert (=> b!107195 (= c!18814 (and ((_ is Cons!1592) (t!5671 (toList!782 lt!53974))) (not (= (_1!1191 (h!2189 (t!5671 (toList!782 lt!53974)))) (_1!1191 lt!53713)))))))

(declare-fun b!107197 () Bool)

(assert (=> b!107197 (= e!69727 None!161)))

(assert (= (and d!29765 c!18813) b!107194))

(assert (= (and d!29765 (not c!18813)) b!107195))

(assert (= (and b!107195 c!18814) b!107196))

(assert (= (and b!107195 (not c!18814)) b!107197))

(declare-fun m!120521 () Bool)

(assert (=> b!107196 m!120521))

(assert (=> b!105854 d!29765))

(assert (=> b!105776 d!29195))

(assert (=> b!105776 d!29197))

(declare-fun b!107198 () Bool)

(declare-fun e!69728 () Option!163)

(assert (=> b!107198 (= e!69728 (Some!162 (_2!1191 (h!2189 (toList!782 lt!54267)))))))

(declare-fun c!18815 () Bool)

(declare-fun d!29767 () Bool)

(assert (=> d!29767 (= c!18815 (and ((_ is Cons!1592) (toList!782 lt!54267)) (= (_1!1191 (h!2189 (toList!782 lt!54267))) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (=> d!29767 (= (getValueByKey!157 (toList!782 lt!54267) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))) e!69728)))

(declare-fun e!69729 () Option!163)

(declare-fun b!107200 () Bool)

(assert (=> b!107200 (= e!69729 (getValueByKey!157 (t!5671 (toList!782 lt!54267)) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107199 () Bool)

(assert (=> b!107199 (= e!69728 e!69729)))

(declare-fun c!18816 () Bool)

(assert (=> b!107199 (= c!18816 (and ((_ is Cons!1592) (toList!782 lt!54267)) (not (= (_1!1191 (h!2189 (toList!782 lt!54267))) (_1!1191 (ite (or c!18347 c!18343) (tuple2!2361 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2892 (underlying!361 thiss!992)))) (tuple2!2361 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun b!107201 () Bool)

(assert (=> b!107201 (= e!69729 None!161)))

(assert (= (and d!29767 c!18815) b!107198))

(assert (= (and d!29767 (not c!18815)) b!107199))

(assert (= (and b!107199 c!18816) b!107200))

(assert (= (and b!107199 (not c!18816)) b!107201))

(declare-fun m!120523 () Bool)

(assert (=> b!107200 m!120523))

(assert (=> b!106012 d!29767))

(declare-fun d!29769 () Bool)

(declare-fun e!69730 () Bool)

(assert (=> d!29769 e!69730))

(declare-fun res!53242 () Bool)

(assert (=> d!29769 (=> res!53242 e!69730)))

(declare-fun lt!54947 () Bool)

(assert (=> d!29769 (= res!53242 (not lt!54947))))

(declare-fun lt!54948 () Bool)

(assert (=> d!29769 (= lt!54947 lt!54948)))

(declare-fun lt!54949 () Unit!3212)

(declare-fun e!69731 () Unit!3212)

(assert (=> d!29769 (= lt!54949 e!69731)))

(declare-fun c!18817 () Bool)

(assert (=> d!29769 (= c!18817 lt!54948)))

(assert (=> d!29769 (= lt!54948 (containsKey!160 (toList!782 lt!54095) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29769 (= (contains!814 lt!54095 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54947)))

(declare-fun b!107202 () Bool)

(declare-fun lt!54946 () Unit!3212)

(assert (=> b!107202 (= e!69731 lt!54946)))

(assert (=> b!107202 (= lt!54946 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54095) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107202 (isDefined!109 (getValueByKey!157 (toList!782 lt!54095) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107203 () Bool)

(declare-fun Unit!3288 () Unit!3212)

(assert (=> b!107203 (= e!69731 Unit!3288)))

(declare-fun b!107204 () Bool)

(assert (=> b!107204 (= e!69730 (isDefined!109 (getValueByKey!157 (toList!782 lt!54095) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29769 c!18817) b!107202))

(assert (= (and d!29769 (not c!18817)) b!107203))

(assert (= (and d!29769 (not res!53242)) b!107204))

(declare-fun m!120525 () Bool)

(assert (=> d!29769 m!120525))

(declare-fun m!120527 () Bool)

(assert (=> b!107202 m!120527))

(declare-fun m!120529 () Bool)

(assert (=> b!107202 m!120529))

(assert (=> b!107202 m!120529))

(declare-fun m!120531 () Bool)

(assert (=> b!107202 m!120531))

(assert (=> b!107204 m!120529))

(assert (=> b!107204 m!120529))

(assert (=> b!107204 m!120531))

(assert (=> b!105753 d!29769))

(declare-fun lt!54950 () Bool)

(declare-fun d!29771 () Bool)

(assert (=> d!29771 (= lt!54950 (select (content!111 (toList!782 lt!54049)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(declare-fun e!69732 () Bool)

(assert (=> d!29771 (= lt!54950 e!69732)))

(declare-fun res!53243 () Bool)

(assert (=> d!29771 (=> (not res!53243) (not e!69732))))

(assert (=> d!29771 (= res!53243 ((_ is Cons!1592) (toList!782 lt!54049)))))

(assert (=> d!29771 (= (contains!816 (toList!782 lt!54049) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)) lt!54950)))

(declare-fun b!107205 () Bool)

(declare-fun e!69733 () Bool)

(assert (=> b!107205 (= e!69732 e!69733)))

(declare-fun res!53244 () Bool)

(assert (=> b!107205 (=> res!53244 e!69733)))

(assert (=> b!107205 (= res!53244 (= (h!2189 (toList!782 lt!54049)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(declare-fun b!107206 () Bool)

(assert (=> b!107206 (= e!69733 (contains!816 (t!5671 (toList!782 lt!54049)) (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53719)))))

(assert (= (and d!29771 res!53243) b!107205))

(assert (= (and b!107205 (not res!53244)) b!107206))

(declare-fun m!120533 () Bool)

(assert (=> d!29771 m!120533))

(declare-fun m!120535 () Bool)

(assert (=> d!29771 m!120535))

(declare-fun m!120537 () Bool)

(assert (=> b!107206 m!120537))

(assert (=> b!105661 d!29771))

(declare-fun d!29773 () Bool)

(declare-fun res!53247 () Bool)

(declare-fun e!69734 () Bool)

(assert (=> d!29773 (=> (not res!53247) (not e!69734))))

(assert (=> d!29773 (= res!53247 (validMask!0 (mask!6727 (v!2892 (underlying!361 thiss!992)))))))

(assert (=> d!29773 (= (simpleValid!74 (v!2892 (underlying!361 thiss!992))) e!69734)))

(declare-fun b!107207 () Bool)

(declare-fun res!53248 () Bool)

(assert (=> b!107207 (=> (not res!53248) (not e!69734))))

(assert (=> b!107207 (= res!53248 (and (= (size!2310 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001)) (= (size!2309 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (size!2310 (_values!2564 (v!2892 (underlying!361 thiss!992))))) (bvsge (_size!498 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!498 (v!2892 (underlying!361 thiss!992))) (bvadd (mask!6727 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!107210 () Bool)

(assert (=> b!107210 (= e!69734 (and (bvsge (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!498 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!107208 () Bool)

(declare-fun res!53246 () Bool)

(assert (=> b!107208 (=> (not res!53246) (not e!69734))))

(assert (=> b!107208 (= res!53246 (bvsge (size!2315 (v!2892 (underlying!361 thiss!992))) (_size!498 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!107209 () Bool)

(declare-fun res!53245 () Bool)

(assert (=> b!107209 (=> (not res!53245) (not e!69734))))

(assert (=> b!107209 (= res!53245 (= (size!2315 (v!2892 (underlying!361 thiss!992))) (bvadd (_size!498 (v!2892 (underlying!361 thiss!992))) (bvsdiv (bvadd (extraKeys!2386 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!29773 res!53247) b!107207))

(assert (= (and b!107207 res!53248) b!107208))

(assert (= (and b!107208 res!53246) b!107209))

(assert (= (and b!107209 res!53245) b!107210))

(assert (=> d!29773 m!117279))

(declare-fun m!120539 () Bool)

(assert (=> b!107208 m!120539))

(assert (=> b!107209 m!120539))

(assert (=> d!28971 d!29773))

(declare-fun d!29775 () Bool)

(declare-fun e!69735 () Bool)

(assert (=> d!29775 e!69735))

(declare-fun res!53249 () Bool)

(assert (=> d!29775 (=> res!53249 e!69735)))

(declare-fun lt!54952 () Bool)

(assert (=> d!29775 (= res!53249 (not lt!54952))))

(declare-fun lt!54953 () Bool)

(assert (=> d!29775 (= lt!54952 lt!54953)))

(declare-fun lt!54954 () Unit!3212)

(declare-fun e!69736 () Unit!3212)

(assert (=> d!29775 (= lt!54954 e!69736)))

(declare-fun c!18818 () Bool)

(assert (=> d!29775 (= c!18818 lt!54953)))

(assert (=> d!29775 (= lt!54953 (containsKey!160 (toList!782 lt!54141) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29775 (= (contains!814 lt!54141 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!54952)))

(declare-fun b!107211 () Bool)

(declare-fun lt!54951 () Unit!3212)

(assert (=> b!107211 (= e!69736 lt!54951)))

(assert (=> b!107211 (= lt!54951 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!782 lt!54141) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!107211 (isDefined!109 (getValueByKey!157 (toList!782 lt!54141) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!107212 () Bool)

(declare-fun Unit!3289 () Unit!3212)

(assert (=> b!107212 (= e!69736 Unit!3289)))

(declare-fun b!107213 () Bool)

(assert (=> b!107213 (= e!69735 (isDefined!109 (getValueByKey!157 (toList!782 lt!54141) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!29775 c!18818) b!107211))

(assert (= (and d!29775 (not c!18818)) b!107212))

(assert (= (and d!29775 (not res!53249)) b!107213))

(declare-fun m!120541 () Bool)

(assert (=> d!29775 m!120541))

(declare-fun m!120543 () Bool)

(assert (=> b!107211 m!120543))

(assert (=> b!107211 m!118023))

(assert (=> b!107211 m!118023))

(declare-fun m!120545 () Bool)

(assert (=> b!107211 m!120545))

(assert (=> b!107213 m!118023))

(assert (=> b!107213 m!118023))

(assert (=> b!107213 m!120545))

(assert (=> d!28909 d!29775))

(declare-fun b!107214 () Bool)

(declare-fun e!69737 () Option!163)

(assert (=> b!107214 (= e!69737 (Some!162 (_2!1191 (h!2189 lt!54140))))))

(declare-fun d!29777 () Bool)

(declare-fun c!18819 () Bool)

(assert (=> d!29777 (= c!18819 (and ((_ is Cons!1592) lt!54140) (= (_1!1191 (h!2189 lt!54140)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29777 (= (getValueByKey!157 lt!54140 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!69737)))

(declare-fun b!107216 () Bool)

(declare-fun e!69738 () Option!163)

(assert (=> b!107216 (= e!69738 (getValueByKey!157 (t!5671 lt!54140) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!107215 () Bool)

(assert (=> b!107215 (= e!69737 e!69738)))

(declare-fun c!18820 () Bool)

(assert (=> b!107215 (= c!18820 (and ((_ is Cons!1592) lt!54140) (not (= (_1!1191 (h!2189 lt!54140)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!107217 () Bool)

(assert (=> b!107217 (= e!69738 None!161)))

(assert (= (and d!29777 c!18819) b!107214))

(assert (= (and d!29777 (not c!18819)) b!107215))

(assert (= (and b!107215 c!18820) b!107216))

(assert (= (and b!107215 (not c!18820)) b!107217))

(declare-fun m!120547 () Bool)

(assert (=> b!107216 m!120547))

(assert (=> d!28909 d!29777))

(declare-fun d!29779 () Bool)

(assert (=> d!29779 (= (getValueByKey!157 lt!54140 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!54955 () Unit!3212)

(assert (=> d!29779 (= lt!54955 (choose!662 lt!54140 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!69739 () Bool)

(assert (=> d!29779 e!69739))

(declare-fun res!53250 () Bool)

(assert (=> d!29779 (=> (not res!53250) (not e!69739))))

(assert (=> d!29779 (= res!53250 (isStrictlySorted!296 lt!54140))))

(assert (=> d!29779 (= (lemmaContainsTupThenGetReturnValue!73 lt!54140 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!54955)))

(declare-fun b!107218 () Bool)

(declare-fun res!53251 () Bool)

(assert (=> b!107218 (=> (not res!53251) (not e!69739))))

(assert (=> b!107218 (= res!53251 (containsKey!160 lt!54140 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!107219 () Bool)

(assert (=> b!107219 (= e!69739 (contains!816 lt!54140 (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!29779 res!53250) b!107218))

(assert (= (and b!107218 res!53251) b!107219))

(assert (=> d!29779 m!118017))

(declare-fun m!120549 () Bool)

(assert (=> d!29779 m!120549))

(declare-fun m!120551 () Bool)

(assert (=> d!29779 m!120551))

(declare-fun m!120553 () Bool)

(assert (=> b!107218 m!120553))

(declare-fun m!120555 () Bool)

(assert (=> b!107219 m!120555))

(assert (=> d!28909 d!29779))

(declare-fun bm!11325 () Bool)

(declare-fun call!11330 () List!1596)

(declare-fun call!11329 () List!1596)

(assert (=> bm!11325 (= call!11330 call!11329)))

(declare-fun e!69740 () List!1596)

(declare-fun b!107220 () Bool)

(declare-fun c!18823 () Bool)

(declare-fun c!18821 () Bool)

(assert (=> b!107220 (= e!69740 (ite c!18823 (t!5671 (toList!782 call!11134)) (ite c!18821 (Cons!1592 (h!2189 (toList!782 call!11134)) (t!5671 (toList!782 call!11134))) Nil!1593)))))

(declare-fun b!107221 () Bool)

(declare-fun e!69743 () List!1596)

(assert (=> b!107221 (= e!69743 call!11329)))

(declare-fun b!107223 () Bool)

(assert (=> b!107223 (= c!18821 (and ((_ is Cons!1592) (toList!782 call!11134)) (bvsgt (_1!1191 (h!2189 (toList!782 call!11134))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!69742 () List!1596)

(assert (=> b!107223 (= e!69743 e!69742)))

(declare-fun c!18822 () Bool)

(declare-fun call!11328 () List!1596)

(declare-fun bm!11326 () Bool)

(assert (=> bm!11326 (= call!11328 ($colon$colon!80 e!69740 (ite c!18822 (h!2189 (toList!782 call!11134)) (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!18824 () Bool)

(assert (=> bm!11326 (= c!18824 c!18822)))

(declare-fun b!107224 () Bool)

(assert (=> b!107224 (= e!69742 call!11330)))

(declare-fun b!107225 () Bool)

(assert (=> b!107225 (= e!69742 call!11330)))

(declare-fun b!107226 () Bool)

(declare-fun res!53253 () Bool)

(declare-fun e!69741 () Bool)

(assert (=> b!107226 (=> (not res!53253) (not e!69741))))

(declare-fun lt!54956 () List!1596)

(assert (=> b!107226 (= res!53253 (containsKey!160 lt!54956 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!107227 () Bool)

(assert (=> b!107227 (= e!69741 (contains!816 lt!54956 (tuple2!2361 (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!107228 () Bool)

(declare-fun e!69744 () List!1596)

(assert (=> b!107228 (= e!69744 e!69743)))

(assert (=> b!107228 (= c!18823 (and ((_ is Cons!1592) (toList!782 call!11134)) (= (_1!1191 (h!2189 (toList!782 call!11134))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun d!29781 () Bool)

(assert (=> d!29781 e!69741))

(declare-fun res!53252 () Bool)

(assert (=> d!29781 (=> (not res!53252) (not e!69741))))

(assert (=> d!29781 (= res!53252 (isStrictlySorted!296 lt!54956))))

(assert (=> d!29781 (= lt!54956 e!69744)))

(assert (=> d!29781 (= c!18822 (and ((_ is Cons!1592) (toList!782 call!11134)) (bvslt (_1!1191 (h!2189 (toList!782 call!11134))) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29781 (isStrictlySorted!296 (toList!782 call!11134))))

(assert (=> d!29781 (= (insertStrictlySorted!76 (toList!782 call!11134) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!54956)))

(declare-fun b!107222 () Bool)

(assert (=> b!107222 (= e!69740 (insertStrictlySorted!76 (t!5671 (toList!782 call!11134)) (_1!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1191 (tuple2!2361 (select (arr!2054 (_keys!4287 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1334 (select (arr!2055 (_values!2564 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!11327 () Bool)

(assert (=> bm!11327 (= call!11329 call!11328)))

(declare-fun b!107229 () Bool)

(assert (=> b!107229 (= e!69744 call!11328)))

(assert (= (and d!29781 c!18822) b!107229))

(assert (= (and d!29781 (not c!18822)) b!107228))

(assert (= (and b!107228 c!18823) b!107221))

(assert (= (and b!107228 (not c!18823)) b!107223))

(assert (= (and b!107223 c!18821) b!107225))

(assert (= (and b!107223 (not c!18821)) b!107224))

(assert (= (or b!107225 b!107224) bm!11325))

(assert (= (or b!107221 bm!11325) bm!11327))

(assert (= (or b!107229 bm!11327) bm!11326))

(assert (= (and bm!11326 c!18824) b!107222))

(assert (= (and bm!11326 (not c!18824)) b!107220))

(assert (= (and d!29781 res!53252) b!107226))

(assert (= (and b!107226 res!53253) b!107227))

(declare-fun m!120557 () Bool)

(assert (=> bm!11326 m!120557))

(declare-fun m!120559 () Bool)

(assert (=> d!29781 m!120559))

(declare-fun m!120561 () Bool)

(assert (=> d!29781 m!120561))

(declare-fun m!120563 () Bool)

(assert (=> b!107227 m!120563))

(declare-fun m!120565 () Bool)

(assert (=> b!107226 m!120565))

(declare-fun m!120567 () Bool)

(assert (=> b!107222 m!120567))

(assert (=> d!28909 d!29781))

(declare-fun d!29783 () Bool)

(declare-fun lt!54957 () Bool)

(assert (=> d!29783 (= lt!54957 (select (content!111 (t!5671 (toList!782 lt!53999))) lt!53718))))

(declare-fun e!69745 () Bool)

(assert (=> d!29783 (= lt!54957 e!69745)))

(declare-fun res!53254 () Bool)

(assert (=> d!29783 (=> (not res!53254) (not e!69745))))

(assert (=> d!29783 (= res!53254 ((_ is Cons!1592) (t!5671 (toList!782 lt!53999))))))

(assert (=> d!29783 (= (contains!816 (t!5671 (toList!782 lt!53999)) lt!53718) lt!54957)))

(declare-fun b!107230 () Bool)

(declare-fun e!69746 () Bool)

(assert (=> b!107230 (= e!69745 e!69746)))

(declare-fun res!53255 () Bool)

(assert (=> b!107230 (=> res!53255 e!69746)))

(assert (=> b!107230 (= res!53255 (= (h!2189 (t!5671 (toList!782 lt!53999))) lt!53718))))

(declare-fun b!107231 () Bool)

(assert (=> b!107231 (= e!69746 (contains!816 (t!5671 (t!5671 (toList!782 lt!53999))) lt!53718))))

(assert (= (and d!29783 res!53254) b!107230))

(assert (= (and b!107230 (not res!53255)) b!107231))

(assert (=> d!29783 m!120427))

(declare-fun m!120569 () Bool)

(assert (=> d!29783 m!120569))

(declare-fun m!120571 () Bool)

(assert (=> b!107231 m!120571))

(assert (=> b!105934 d!29783))

(declare-fun d!29785 () Bool)

(declare-fun lt!54958 () Bool)

(assert (=> d!29785 (= lt!54958 (select (content!111 lt!53965) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun e!69747 () Bool)

(assert (=> d!29785 (= lt!54958 e!69747)))

(declare-fun res!53256 () Bool)

(assert (=> d!29785 (=> (not res!53256) (not e!69747))))

(assert (=> d!29785 (= res!53256 ((_ is Cons!1592) lt!53965))))

(assert (=> d!29785 (= (contains!816 lt!53965 (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))) lt!54958)))

(declare-fun b!107232 () Bool)

(declare-fun e!69748 () Bool)

(assert (=> b!107232 (= e!69747 e!69748)))

(declare-fun res!53257 () Bool)

(assert (=> b!107232 (=> res!53257 e!69748)))

(assert (=> b!107232 (= res!53257 (= (h!2189 lt!53965) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(declare-fun b!107233 () Bool)

(assert (=> b!107233 (= e!69748 (contains!816 (t!5671 lt!53965) (tuple2!2361 (_1!1191 lt!53713) (_2!1191 lt!53713))))))

(assert (= (and d!29785 res!53256) b!107232))

(assert (= (and b!107232 (not res!53257)) b!107233))

(declare-fun m!120573 () Bool)

(assert (=> d!29785 m!120573))

(declare-fun m!120575 () Bool)

(assert (=> d!29785 m!120575))

(declare-fun m!120577 () Bool)

(assert (=> b!107233 m!120577))

(assert (=> b!105690 d!29785))

(declare-fun mapNonEmpty!3943 () Bool)

(declare-fun mapRes!3943 () Bool)

(declare-fun tp!9919 () Bool)

(declare-fun e!69749 () Bool)

(assert (=> mapNonEmpty!3943 (= mapRes!3943 (and tp!9919 e!69749))))

(declare-fun mapRest!3943 () (Array (_ BitVec 32) ValueCell!995))

(declare-fun mapKey!3943 () (_ BitVec 32))

(declare-fun mapValue!3943 () ValueCell!995)

(assert (=> mapNonEmpty!3943 (= mapRest!3941 (store mapRest!3943 mapKey!3943 mapValue!3943))))

(declare-fun b!107235 () Bool)

(declare-fun e!69750 () Bool)

(assert (=> b!107235 (= e!69750 tp_is_empty!2677)))

(declare-fun mapIsEmpty!3943 () Bool)

(assert (=> mapIsEmpty!3943 mapRes!3943))

(declare-fun condMapEmpty!3943 () Bool)

(declare-fun mapDefault!3943 () ValueCell!995)

(assert (=> mapNonEmpty!3941 (= condMapEmpty!3943 (= mapRest!3941 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3943)))))

(assert (=> mapNonEmpty!3941 (= tp!9917 (and e!69750 mapRes!3943))))

(declare-fun b!107234 () Bool)

(assert (=> b!107234 (= e!69749 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3941 condMapEmpty!3943) mapIsEmpty!3943))

(assert (= (and mapNonEmpty!3941 (not condMapEmpty!3943)) mapNonEmpty!3943))

(assert (= (and mapNonEmpty!3943 ((_ is ValueCellFull!995) mapValue!3943)) b!107234))

(assert (= (and mapNonEmpty!3941 ((_ is ValueCellFull!995) mapDefault!3943)) b!107235))

(declare-fun m!120579 () Bool)

(assert (=> mapNonEmpty!3943 m!120579))

(declare-fun mapNonEmpty!3944 () Bool)

(declare-fun mapRes!3944 () Bool)

(declare-fun tp!9920 () Bool)

(declare-fun e!69751 () Bool)

(assert (=> mapNonEmpty!3944 (= mapRes!3944 (and tp!9920 e!69751))))

(declare-fun mapValue!3944 () ValueCell!995)

(declare-fun mapRest!3944 () (Array (_ BitVec 32) ValueCell!995))

(declare-fun mapKey!3944 () (_ BitVec 32))

(assert (=> mapNonEmpty!3944 (= mapRest!3942 (store mapRest!3944 mapKey!3944 mapValue!3944))))

(declare-fun b!107237 () Bool)

(declare-fun e!69752 () Bool)

(assert (=> b!107237 (= e!69752 tp_is_empty!2677)))

(declare-fun mapIsEmpty!3944 () Bool)

(assert (=> mapIsEmpty!3944 mapRes!3944))

(declare-fun condMapEmpty!3944 () Bool)

(declare-fun mapDefault!3944 () ValueCell!995)

(assert (=> mapNonEmpty!3942 (= condMapEmpty!3944 (= mapRest!3942 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3944)))))

(assert (=> mapNonEmpty!3942 (= tp!9918 (and e!69752 mapRes!3944))))

(declare-fun b!107236 () Bool)

(assert (=> b!107236 (= e!69751 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3942 condMapEmpty!3944) mapIsEmpty!3944))

(assert (= (and mapNonEmpty!3942 (not condMapEmpty!3944)) mapNonEmpty!3944))

(assert (= (and mapNonEmpty!3944 ((_ is ValueCellFull!995) mapValue!3944)) b!107236))

(assert (= (and mapNonEmpty!3942 ((_ is ValueCellFull!995) mapDefault!3944)) b!107237))

(declare-fun m!120581 () Bool)

(assert (=> mapNonEmpty!3944 m!120581))

(declare-fun b_lambda!4781 () Bool)

(assert (= b_lambda!4767 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4781)))

(declare-fun b_lambda!4783 () Bool)

(assert (= b_lambda!4775 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4783)))

(declare-fun b_lambda!4785 () Bool)

(assert (= b_lambda!4777 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4785)))

(declare-fun b_lambda!4787 () Bool)

(assert (= b_lambda!4753 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4787)))

(declare-fun b_lambda!4789 () Bool)

(assert (= b_lambda!4761 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4789)))

(declare-fun b_lambda!4791 () Bool)

(assert (= b_lambda!4757 (or (and b!105184 b_free!2521) (and b!105174 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))) b_lambda!4791)))

(declare-fun b_lambda!4793 () Bool)

(assert (= b_lambda!4771 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4793)))

(declare-fun b_lambda!4795 () Bool)

(assert (= b_lambda!4763 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4795)))

(declare-fun b_lambda!4797 () Bool)

(assert (= b_lambda!4755 (or (and b!105184 b_free!2521) (and b!105174 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))))) b_lambda!4797)))

(declare-fun b_lambda!4799 () Bool)

(assert (= b_lambda!4759 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4799)))

(declare-fun b_lambda!4801 () Bool)

(assert (= b_lambda!4751 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4801)))

(declare-fun b_lambda!4803 () Bool)

(assert (= b_lambda!4765 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4803)))

(declare-fun b_lambda!4805 () Bool)

(assert (= b_lambda!4779 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4805)))

(declare-fun b_lambda!4807 () Bool)

(assert (= b_lambda!4769 (or (and b!105184 b_free!2521 (= (defaultEntry!2581 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105174 b_free!2523) b_lambda!4807)))

(check-sat (not bm!11320) (not bm!11311) (not b_lambda!4805) (not d!29481) (not d!29397) (not b!106351) (not d!29747) (not b!106890) (not d!29685) (not b!106636) (not b!106705) (not d!29755) (not b!106573) (not b!107098) (not b!106262) (not b!106091) (not b!106538) (not d!29469) (not b!106497) (not b!106302) (not b!106110) (not b!107043) (not b!106595) (not bm!11242) (not d!29199) (not bm!11265) (not d!29407) (not b!106760) (not b!106184) (not b!107099) (not b!106409) (not b!106935) (not b!106938) (not d!29465) (not b!107191) (not d!29269) (not b!106097) (not b!106970) (not b!106733) (not b!106363) (not b!107206) (not d!29679) (not b!106651) (not d!29583) (not b!106421) (not b!106609) (not d!29177) (not b!107106) (not b_lambda!4747) (not d!29509) (not b!106808) (not b!106570) (not bm!11260) (not b!106266) (not d!29659) (not b!107058) (not d!29493) (not b!106828) (not b!106906) (not b!106694) (not d!29283) (not b!107216) (not b!106355) (not d!29039) (not d!29093) (not b!106202) (not b!107020) (not b!106359) (not b!106799) (not b!106203) (not d!29775) (not b!106866) (not b!107047) (not b!106405) (not d!29681) (not b!106897) (not b!106618) (not d!29485) (not b!106584) (not d!29233) (not b!107193) (not b!106468) (not b!106373) (not d!29547) (not b!106992) (not b!106154) (not d!29219) (not d!29707) (not b!106800) (not b!106723) (not bm!11264) (not b!106345) (not b!106851) (not b_lambda!4783) (not d!29427) (not b!107019) (not b!106753) (not b!107187) (not b!106112) (not d!29435) (not b!106138) (not b!106342) (not b!106833) (not d!29213) (not d!29419) (not b!106619) (not b!106412) (not b!106296) (not b!106853) (not b!106626) (not b!106182) (not d!29209) (not b!106834) (not b!107133) (not bm!11202) (not b!107154) (not d!29373) (not b!106577) (not b!106858) (not b!106684) (not b!106106) (not b!107219) (not b!106511) (not b!106286) (not d!29599) (not b!106486) (not b!106972) (not b!106189) (not b!107222) (not b!107041) (not b!106726) (not d!29083) (not b!106635) (not b!107015) (not b!106413) (not b!106084) (not b!106155) (not b!106126) (not b!107189) (not b_lambda!4773) (not d!29045) (not b!106510) (not b!107068) (not b!106978) (not b_lambda!4797) (not b!106549) (not d!29623) (not b!106431) (not b!106644) (not b!106172) (not b!106612) (not d!29573) (not d!29773) (not d!29227) (not b!106257) (not b!107196) (not d!29325) (not b!106555) (not b!106264) (not d!29781) (not d!29099) (not d!29047) (not b_lambda!4741) (not d!29785) (not d!29145) (not b!106198) (not b!106746) (not b!107149) (not d!29403) (not d!29339) (not b!107176) (not b!106589) (not b!106913) (not d!29505) (not b!106357) (not b!106451) (not b!107003) (not bm!11281) (not d!29063) (not d!29525) (not d!29351) (not d!29779) (not b!106875) (not b!106550) b_and!6603 (not b!106586) (not b!107029) (not bm!11280) (not b!106697) (not b!106904) (not b!106934) (not d!29619) (not d!29675) (not d!29273) (not b!106925) (not d!29385) (not bm!11279) (not b!106881) (not d!29275) (not d!29475) (not b!107055) (not b!106532) (not d!29203) (not b!106433) (not b!106220) (not b!106176) (not b!106691) (not d!29639) (not d!29259) (not b!106175) (not b!106692) (not d!29345) (not d!29423) (not d!29463) (not b!107120) (not d!29515) (not b!107146) b_and!6601 (not b!106542) (not b!106399) (not b_lambda!4793) (not d!29241) (not b!107204) (not b!106119) (not b!106108) (not d!29439) (not b!106945) (not b!106341) (not b!106847) (not b!106117) (not b!106429) (not d!29311) (not d!29683) (not b!106139) (not b!107231) (not b!106592) (not b!107136) (not b!106500) (not b!107209) (not b!107132) (not b!106487) (not b!107007) (not b!106186) (not b!106579) (not bm!11282) (not b!106568) (not bm!11291) (not b!106157) (not b!107173) (not b!106638) (not b!107036) (not d!29349) (not d!29729) (not b!106958) (not b!106725) (not b!106382) (not b!107026) (not b!106223) (not b!106463) (not d!29097) (not b!106849) (not d!29357) (not d!29173) (not d!29053) (not d!29391) (not d!29305) (not b!106367) (not b!106888) (not b!107039) (not b!107031) (not d!29393) (not bm!11268) (not b!107148) (not d!29195) (not b!106615) (not b!106534) (not b!106404) (not bm!11208) (not d!29733) (not b!106360) (not d!29027) (not d!29653) (not b!107172) (not d!29699) (not b!107072) (not b!106166) (not b!106455) (not b!107184) (not b!106086) (not b!106348) (not d!29483) (not b!106118) (not d!29561) (not b!106611) (not d!29337) (not b!106856) (not b!106667) (not b!107159) (not b!107016) (not d!29121) (not b!107129) (not bm!11310) (not bm!11246) (not b!107151) (not b!107052) (not b!106681) (not d!29247) (not d!29303) (not b!106347) (not b!106414) (not b!106971) (not d!29147) (not d!29467) (not b!106309) (not b!106892) (not b!106158) (not b!106960) (not b!106156) (not b!106768) (not b!106502) (not b!106880) (not b!106278) (not b!106503) (not b!106603) (not b!106160) (not b!106120) (not b!106975) (not bm!11298) (not b!106820) (not bm!11296) (not b!106213) (not b!106427) (not b!106255) (not b!106312) (not b!106672) (not bm!11247) (not d!29159) (not b!106216) (not d!29055) (not b!106273) (not b!106187) (not b!106641) (not b!106569) (not d!29521) (not b!106256) (not d!29181) (not d!29607) (not b!107213) (not b!106622) (not d!29759) (not bm!11237) (not b!106714) (not b!106631) (not b!106402) (not b!106956) (not b!106952) (not b!106248) (not d!29263) (not b_lambda!4801) (not d!29507) (not d!29381) (not bm!11254) (not d!29477) (not d!29281) (not d!29257) (not d!29307) (not b!106222) (not b!106438) (not b!106846) (not b!106643) (not b!106082) (not b!106989) (not d!29569) (not d!29783) (not d!29643) (not d!29527) (not b!106857) (not bm!11274) tp_is_empty!2677 (not d!29697) (not d!29495) (not b!106461) (not d!29757) (not bm!11292) (not d!29291) (not d!29343) (not b!106922) (not b!106152) (not d!29649) (not b!107200) (not b!106211) (not b!106440) (not b!106576) (not b!107124) (not b!107144) (not d!29565) (not bm!11285) (not bm!11261) (not d!29365) (not bm!11257) (not b!106394) (not b_lambda!4795) (not d!29537) (not d!29631) (not b!106613) (not b!106879) (not b!106819) (not d!29471) (not d!29593) (not d!29085) (not b!106319) (not d!29635) (not b!106861) (not b!107021) (not d!29627) (not b_lambda!4785) (not d!29037) (not b!107008) (not b!106690) (not d!29473) (not d!29513) (not d!29293) (not b!106179) (not d!29677) (not bm!11295) (not d!29519) (not b!106666) (not d!29079) (not b!107183) (not d!29261) (not b!106994) (not b!107128) (not d!29059) (not d!29689) (not bm!11228) (not bm!11304) (not bm!11301) (not b!107233) (not b!106698) (not b!106598) (not b!106937) (not b!106566) (not b!106662) (not d!29051) (not b!106594) (not d!29609) (not b!106411) (not b!106251) (not d!29167) (not b!106424) (not b!106629) (not b!106751) (not b!106547) (not b!106397) (not b!106528) (not b!106466) (not b!106393) (not d!29169) (not b!106741) (not b_lambda!4743) (not b!106842) (not b!106253) (not b!106999) (not d!29687) (not d!29201) (not b!106482) (not b!106163) (not d!29043) (not b!106208) (not b!106343) (not b!106131) (not b!106225) (not b_lambda!4725) (not b!106447) (not d!29359) (not d!29363) (not b!106564) (not b_lambda!4787) (not bm!11267) (not b!106469) (not b!106432) (not b!106745) (not b!106854) (not b!106336) (not d!29559) (not d!29723) (not b!106695) (not b!106765) (not b!106743) (not d!29421) (not b!106142) (not b!106170) (not b!106228) (not bm!11326) (not b!106495) (not b!106919) (not b!106984) (not b!107012) (not b!106652) (not b_lambda!4791) (not b_lambda!4803) (not bm!11316) (not b_lambda!4749) (not bm!11225) (not bm!11224) (not d!29113) (not b!106917) (not b!106817) (not b!106967) (not b_lambda!4807) (not b!106824) (not b!106718) (not b!106664) (not b!106531) (not d!29545) (not d!29377) (not d!29321) (not b!106869) (not bm!11240) (not b!107121) (not d!29713) (not b!106284) (not b!106607) (not b!106168) (not d!29651) (not b!107175) (not b!106164) (not b_lambda!4727) (not d!29557) (not b!106915) (not b_next!2521) (not d!29155) (not b!107141) (not d!29741) (not b!106647) (not d!29433) (not b!106492) (not b_lambda!4745) (not b!106095) (not b!106582) (not b!106088) (not b!106744) (not bm!11243) (not d!29743) (not b!106239) (not b!106899) (not b!106545) (not d!29647) (not d!29665) (not bm!11323) (not b_lambda!4799) (not bm!11217) (not b!106806) (not b!106610) (not d!29731) (not b!106980) (not b!106297) (not d!29657) (not b!106195) (not b!106194) (not b!106083) (not b!106699) (not b!106633) (not b!107022) (not b!106234) (not d!29329) (not b!106419) (not d!29429) (not b!106865) (not b!106247) (not bm!11289) (not b!106167) (not b!106477) (not d!29445) (not d!29655) (not b!106146) (not b!106259) (not b!106536) (not b!106815) (not b_lambda!4729) (not b!106435) (not b!106954) (not d!29387) (not b!107017) (not b!106918) (not d!29313) (not mapNonEmpty!3943) (not d!29479) (not b!107011) (not d!29581) (not b!106981) (not bm!11252) (not b!106670) (not b!106128) (not d!29317) (not d!29603) (not b!106439) (not b!106430) (not b!106100) (not b!106729) (not b_lambda!4781) (not d!29629) (not b!106232) (not b!106391) (not b!106305) (not bm!11317) (not b!107170) (not b!106506) (not b!106240) (not d!29215) (not b!107062) (not d!29151) (not b!106964) (not b!107063) (not b!106144) (not b!106349) (not b!106717) (not b!106701) (not d!29613) (not b!106231) (not d!29487) (not b!107102) (not d!29267) (not b!106826) (not b!106675) (not d!29061) (not d!29415) (not b!106288) (not b_lambda!4789) (not b!106476) (not b!107174) (not bm!11288) (not b!106243) (not b!106442) (not b!106850) (not b!106678) (not b!106696) (not d!29591) (not d!29753) (not d!29761) (not b!106103) (not d!29103) (not bm!11272) (not b!106734) (not b!106887) (not d!29223) (not b!106104) (not d!29551) (not b!107111) (not b!106389) (not b!106707) (not bm!11249) (not d!29751) (not b!106841) (not b!106516) (not b!106883) (not bm!11219) (not b!107023) (not b!106703) (not bm!11284) (not b!106300) (not b!106686) (not d!29111) (not d!29139) (not b!106415) (not b!106456) (not b!106659) (not bm!11226) (not d!29489) (not bm!11201) (not b!106370) (not b!106962) (not b!106580) (not b!107000) (not d!29661) (not b!106871) (not b!107108) (not bm!11313) (not b!107161) (not b!106837) (not b!107035) (not b!106845) (not d!29375) (not b!106229) (not d!29645) (not b!107168) (not b!106716) (not b!107208) (not b!107211) (not d!29279) (not b!106764) (not d!29667) (not bm!11223) (not d!29383) (not b!106687) (not b!107227) (not bm!11212) (not b!106519) (not d!29453) (not d!29601) (not bm!11210) (not b!106380) (not b!107115) (not b!107042) (not b!106274) (not b!106957) (not b!107113) (not d!29191) (not bm!11214) (not d!29401) (not b!107153) (not b!106460) (not b!106514) (not b!106762) (not b_lambda!4717) (not d!29029) (not b!106720) (not d!29709) (not b!106668) (not b!106801) (not d!29567) (not d!29271) (not d!29769) (not b!107045) (not d!29149) (not b!107138) (not b!107105) (not bm!11205) (not d!29543) (not b_next!2523) (not b!106766) (not d!29323) (not d!29141) (not b!107218) (not b!106293) (not b!106316) (not d!29193) (not b!106395) (not b!106943) (not d!29335) (not b!107179) (not d!29071) (not bm!11220) (not b!106709) (not d!29771) (not d!29577) (not bm!11231) (not b!106557) (not d!29331) (not d!29285) (not bm!11239) (not b!106192) (not b!106997) (not b!106115) (not d!29115) (not b!106417) (not b!106410) (not b!106821) (not bm!11207) (not d!29693) (not b!106445) (not d!29355) (not d!29663) (not b!106660) (not bm!11234) (not b!107038) (not b!106448) (not b!106587) (not b!106237) (not bm!11203) (not b!106396) (not b!106544) (not b!106771) (not b!106518) (not d!29529) (not b!106290) (not bm!11216) (not d!29763) (not d!29295) (not b!106521) (not b!107033) (not d!29287) (not d!29289) (not d!29605) (not bm!11251) (not b!106304) (not b!106134) (not bm!11321) (not d!29621) (not b!107226) (not b!106494) (not b!106307) (not d!29715) (not d!29597) (not b!106973) (not b!106269) (not b!106657) (not b!106739) (not b!106831) (not bm!11271) (not b!106136) (not d!29719) (not b!106525) (not b!106472) (not b!106988) (not d!29725) (not b!107135) (not d!29119) (not b!106602) (not b!106546) (not b!107202) (not b!106169) (not d!29555) (not mapNonEmpty!3944) (not b!106375) (not d!29361) (not d!29497) (not d!29277) (not b!107054) (not d!29491) (not bm!11277) (not d!29637) (not b!107040) (not d!29641) (not b!107118) (not b!107049) (not d!29575))
(check-sat b_and!6601 b_and!6603 (not b_next!2521) (not b_next!2523))
