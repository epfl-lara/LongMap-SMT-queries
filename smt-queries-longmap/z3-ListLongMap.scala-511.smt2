; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12354 () Bool)

(assert start!12354)

(declare-fun b!105054 () Bool)

(declare-fun b_free!2521 () Bool)

(declare-fun b_next!2521 () Bool)

(assert (=> b!105054 (= b_free!2521 (not b_next!2521))))

(declare-fun tp!9886 () Bool)

(declare-fun b_and!6469 () Bool)

(assert (=> b!105054 (= tp!9886 b_and!6469)))

(declare-fun b!105064 () Bool)

(declare-fun b_free!2523 () Bool)

(declare-fun b_next!2523 () Bool)

(assert (=> b!105064 (= b_free!2523 (not b_next!2523))))

(declare-fun tp!9888 () Bool)

(declare-fun b_and!6471 () Bool)

(assert (=> b!105064 (= tp!9888 b_and!6471)))

(declare-fun b!105048 () Bool)

(declare-fun e!68398 () Bool)

(declare-fun e!68393 () Bool)

(declare-fun mapRes!3923 () Bool)

(assert (=> b!105048 (= e!68398 (and e!68393 mapRes!3923))))

(declare-fun condMapEmpty!3923 () Bool)

(declare-datatypes ((V!3217 0))(
  ( (V!3218 (val!1383 Int)) )
))
(declare-datatypes ((array!4325 0))(
  ( (array!4326 (arr!2050 (Array (_ BitVec 32) (_ BitVec 64))) (size!2306 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!995 0))(
  ( (ValueCellFull!995 (v!2882 V!3217)) (EmptyCell!995) )
))
(declare-datatypes ((array!4327 0))(
  ( (array!4328 (arr!2051 (Array (_ BitVec 32) ValueCell!995)) (size!2307 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!898 0))(
  ( (LongMapFixedSize!899 (defaultEntry!2581 Int) (mask!6726 (_ BitVec 32)) (extraKeys!2386 (_ BitVec 32)) (zeroValue!2456 V!3217) (minValue!2456 V!3217) (_size!498 (_ BitVec 32)) (_keys!4286 array!4325) (_values!2564 array!4327) (_vacant!498 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!688 0))(
  ( (Cell!689 (v!2883 LongMapFixedSize!898)) )
))
(declare-datatypes ((LongMap!688 0))(
  ( (LongMap!689 (underlying!355 Cell!688)) )
))
(declare-fun thiss!992 () LongMap!688)

(declare-fun mapDefault!3923 () ValueCell!995)

(assert (=> b!105048 (= condMapEmpty!3923 (= (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3923)))))

(declare-fun b!105049 () Bool)

(declare-fun e!68395 () Bool)

(declare-fun e!68403 () Bool)

(assert (=> b!105049 (= e!68395 e!68403)))

(declare-fun b!105050 () Bool)

(declare-fun tp_is_empty!2677 () Bool)

(assert (=> b!105050 (= e!68393 tp_is_empty!2677)))

(declare-fun b!105051 () Bool)

(declare-fun e!68391 () Bool)

(assert (=> b!105051 (= e!68391 tp_is_empty!2677)))

(declare-fun mapNonEmpty!3923 () Bool)

(declare-fun mapRes!3924 () Bool)

(declare-fun tp!9885 () Bool)

(declare-fun e!68396 () Bool)

(assert (=> mapNonEmpty!3923 (= mapRes!3924 (and tp!9885 e!68396))))

(declare-fun mapValue!3923 () ValueCell!995)

(declare-fun newMap!16 () LongMapFixedSize!898)

(declare-fun mapKey!3923 () (_ BitVec 32))

(declare-fun mapRest!3923 () (Array (_ BitVec 32) ValueCell!995))

(assert (=> mapNonEmpty!3923 (= (arr!2051 (_values!2564 newMap!16)) (store mapRest!3923 mapKey!3923 mapValue!3923))))

(declare-fun b!105052 () Bool)

(declare-fun res!52324 () Bool)

(declare-fun e!68389 () Bool)

(assert (=> b!105052 (=> (not res!52324) (not e!68389))))

(assert (=> b!105052 (= res!52324 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6726 newMap!16)) (_size!498 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun mapIsEmpty!3923 () Bool)

(assert (=> mapIsEmpty!3923 mapRes!3923))

(declare-fun b!105053 () Bool)

(declare-fun e!68388 () Bool)

(assert (=> b!105053 (= e!68388 (or (not (= (size!2307 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6726 (v!2883 (underlying!355 thiss!992)))))) (= (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (size!2307 (_values!2564 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun e!68397 () Bool)

(declare-fun array_inv!1293 (array!4325) Bool)

(declare-fun array_inv!1294 (array!4327) Bool)

(assert (=> b!105054 (= e!68397 (and tp!9886 tp_is_empty!2677 (array_inv!1293 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (array_inv!1294 (_values!2564 (v!2883 (underlying!355 thiss!992)))) e!68398))))

(declare-fun mapIsEmpty!3924 () Bool)

(assert (=> mapIsEmpty!3924 mapRes!3924))

(declare-fun b!105055 () Bool)

(declare-datatypes ((Unit!3218 0))(
  ( (Unit!3219) )
))
(declare-fun e!68392 () Unit!3218)

(declare-fun Unit!3220 () Unit!3218)

(assert (=> b!105055 (= e!68392 Unit!3220)))

(declare-fun lt!53602 () Unit!3218)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!109 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) (_ BitVec 32) Int) Unit!3218)

(assert (=> b!105055 (= lt!53602 (lemmaListMapContainsThenArrayContainsFrom!109 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4325 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!105055 (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!53597 () Unit!3218)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4325 (_ BitVec 32) (_ BitVec 32)) Unit!3218)

(assert (=> b!105055 (= lt!53597 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1615 0))(
  ( (Nil!1612) (Cons!1611 (h!2208 (_ BitVec 64)) (t!5689 List!1615)) )
))
(declare-fun arrayNoDuplicates!0 (array!4325 (_ BitVec 32) List!1615) Bool)

(assert (=> b!105055 (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) from!355 Nil!1612)))

(declare-fun lt!53603 () Unit!3218)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4325 (_ BitVec 32) (_ BitVec 64) List!1615) Unit!3218)

(assert (=> b!105055 (= lt!53603 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612)))))

(assert (=> b!105055 false))

(declare-fun b!105056 () Bool)

(declare-fun e!68399 () Bool)

(assert (=> b!105056 (= e!68399 (not e!68388))))

(declare-fun res!52322 () Bool)

(assert (=> b!105056 (=> res!52322 e!68388)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!105056 (= res!52322 (not (validMask!0 (mask!6726 (v!2883 (underlying!355 thiss!992))))))))

(declare-datatypes ((tuple2!2380 0))(
  ( (tuple2!2381 (_1!1201 (_ BitVec 64)) (_2!1201 V!3217)) )
))
(declare-datatypes ((List!1616 0))(
  ( (Nil!1613) (Cons!1612 (h!2209 tuple2!2380) (t!5690 List!1616)) )
))
(declare-datatypes ((ListLongMap!1543 0))(
  ( (ListLongMap!1544 (toList!787 List!1616)) )
))
(declare-fun lt!53604 () ListLongMap!1543)

(declare-fun lt!53599 () tuple2!2380)

(declare-fun lt!53606 () tuple2!2380)

(declare-fun +!135 (ListLongMap!1543 tuple2!2380) ListLongMap!1543)

(assert (=> b!105056 (= (+!135 (+!135 lt!53604 lt!53599) lt!53606) (+!135 (+!135 lt!53604 lt!53606) lt!53599))))

(assert (=> b!105056 (= lt!53606 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun lt!53601 () V!3217)

(assert (=> b!105056 (= lt!53599 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))

(declare-fun lt!53607 () Unit!3218)

(declare-fun addCommutativeForDiffKeys!47 (ListLongMap!1543 (_ BitVec 64) V!3217 (_ BitVec 64) V!3217) Unit!3218)

(assert (=> b!105056 (= lt!53607 (addCommutativeForDiffKeys!47 lt!53604 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!100 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) Int) ListLongMap!1543)

(assert (=> b!105056 (= lt!53604 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!105057 () Bool)

(assert (=> b!105057 (= e!68403 e!68397)))

(declare-fun b!105058 () Bool)

(declare-fun Unit!3221 () Unit!3218)

(assert (=> b!105058 (= e!68392 Unit!3221)))

(declare-fun b!105059 () Bool)

(declare-fun e!68394 () Bool)

(declare-fun e!68390 () Bool)

(assert (=> b!105059 (= e!68394 (and e!68390 mapRes!3924))))

(declare-fun condMapEmpty!3924 () Bool)

(declare-fun mapDefault!3924 () ValueCell!995)

(assert (=> b!105059 (= condMapEmpty!3924 (= (arr!2051 (_values!2564 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3924)))))

(declare-fun mapNonEmpty!3924 () Bool)

(declare-fun tp!9887 () Bool)

(assert (=> mapNonEmpty!3924 (= mapRes!3923 (and tp!9887 e!68391))))

(declare-fun mapValue!3924 () ValueCell!995)

(declare-fun mapKey!3924 () (_ BitVec 32))

(declare-fun mapRest!3924 () (Array (_ BitVec 32) ValueCell!995))

(assert (=> mapNonEmpty!3924 (= (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (store mapRest!3924 mapKey!3924 mapValue!3924))))

(declare-fun res!52323 () Bool)

(assert (=> start!12354 (=> (not res!52323) (not e!68389))))

(declare-fun valid!421 (LongMap!688) Bool)

(assert (=> start!12354 (= res!52323 (valid!421 thiss!992))))

(assert (=> start!12354 e!68389))

(assert (=> start!12354 e!68395))

(assert (=> start!12354 true))

(declare-fun e!68404 () Bool)

(assert (=> start!12354 e!68404))

(declare-fun b!105060 () Bool)

(declare-fun e!68401 () Bool)

(declare-fun e!68400 () Bool)

(assert (=> b!105060 (= e!68401 e!68400)))

(declare-fun res!52326 () Bool)

(assert (=> b!105060 (=> (not res!52326) (not e!68400))))

(assert (=> b!105060 (= res!52326 (and (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1331 (ValueCell!995 V!3217) V!3217)

(declare-fun dynLambda!383 (Int (_ BitVec 64)) V!3217)

(assert (=> b!105060 (= lt!53601 (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105061 () Bool)

(assert (=> b!105061 (= e!68396 tp_is_empty!2677)))

(declare-fun b!105062 () Bool)

(assert (=> b!105062 (= e!68390 tp_is_empty!2677)))

(declare-fun b!105063 () Bool)

(declare-fun res!52328 () Bool)

(assert (=> b!105063 (=> (not res!52328) (not e!68389))))

(declare-fun valid!422 (LongMapFixedSize!898) Bool)

(assert (=> b!105063 (= res!52328 (valid!422 newMap!16))))

(assert (=> b!105064 (= e!68404 (and tp!9888 tp_is_empty!2677 (array_inv!1293 (_keys!4286 newMap!16)) (array_inv!1294 (_values!2564 newMap!16)) e!68394))))

(declare-fun b!105065 () Bool)

(declare-fun res!52325 () Bool)

(assert (=> b!105065 (=> (not res!52325) (not e!68389))))

(assert (=> b!105065 (= res!52325 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!105066 () Bool)

(assert (=> b!105066 (= e!68389 e!68401)))

(declare-fun res!52327 () Bool)

(assert (=> b!105066 (=> (not res!52327) (not e!68401))))

(declare-fun lt!53598 () ListLongMap!1543)

(declare-fun lt!53596 () ListLongMap!1543)

(assert (=> b!105066 (= res!52327 (= lt!53598 lt!53596))))

(declare-fun map!1270 (LongMapFixedSize!898) ListLongMap!1543)

(assert (=> b!105066 (= lt!53596 (map!1270 newMap!16))))

(declare-fun getCurrentListMap!464 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) Int) ListLongMap!1543)

(assert (=> b!105066 (= lt!53598 (getCurrentListMap!464 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!105067 () Bool)

(assert (=> b!105067 (= e!68400 e!68399)))

(declare-fun res!52321 () Bool)

(assert (=> b!105067 (=> (not res!52321) (not e!68399))))

(declare-datatypes ((tuple2!2382 0))(
  ( (tuple2!2383 (_1!1202 Bool) (_2!1202 LongMapFixedSize!898)) )
))
(declare-fun lt!53600 () tuple2!2382)

(assert (=> b!105067 (= res!52321 (and (_1!1202 lt!53600) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!53605 () Unit!3218)

(assert (=> b!105067 (= lt!53605 e!68392)))

(declare-fun c!18248 () Bool)

(declare-fun contains!820 (ListLongMap!1543 (_ BitVec 64)) Bool)

(assert (=> b!105067 (= c!18248 (contains!820 lt!53596 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun update!159 (LongMapFixedSize!898 (_ BitVec 64) V!3217) tuple2!2382)

(assert (=> b!105067 (= lt!53600 (update!159 newMap!16 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))

(assert (= (and start!12354 res!52323) b!105065))

(assert (= (and b!105065 res!52325) b!105063))

(assert (= (and b!105063 res!52328) b!105052))

(assert (= (and b!105052 res!52324) b!105066))

(assert (= (and b!105066 res!52327) b!105060))

(assert (= (and b!105060 res!52326) b!105067))

(assert (= (and b!105067 c!18248) b!105055))

(assert (= (and b!105067 (not c!18248)) b!105058))

(assert (= (and b!105067 res!52321) b!105056))

(assert (= (and b!105056 (not res!52322)) b!105053))

(assert (= (and b!105048 condMapEmpty!3923) mapIsEmpty!3923))

(assert (= (and b!105048 (not condMapEmpty!3923)) mapNonEmpty!3924))

(get-info :version)

(assert (= (and mapNonEmpty!3924 ((_ is ValueCellFull!995) mapValue!3924)) b!105051))

(assert (= (and b!105048 ((_ is ValueCellFull!995) mapDefault!3923)) b!105050))

(assert (= b!105054 b!105048))

(assert (= b!105057 b!105054))

(assert (= b!105049 b!105057))

(assert (= start!12354 b!105049))

(assert (= (and b!105059 condMapEmpty!3924) mapIsEmpty!3924))

(assert (= (and b!105059 (not condMapEmpty!3924)) mapNonEmpty!3923))

(assert (= (and mapNonEmpty!3923 ((_ is ValueCellFull!995) mapValue!3923)) b!105061))

(assert (= (and b!105059 ((_ is ValueCellFull!995) mapDefault!3924)) b!105062))

(assert (= b!105064 b!105059))

(assert (= start!12354 b!105064))

(declare-fun b_lambda!4691 () Bool)

(assert (=> (not b_lambda!4691) (not b!105060)))

(declare-fun t!5686 () Bool)

(declare-fun tb!2041 () Bool)

(assert (=> (and b!105054 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))) t!5686) tb!2041))

(declare-fun result!3439 () Bool)

(assert (=> tb!2041 (= result!3439 tp_is_empty!2677)))

(assert (=> b!105060 t!5686))

(declare-fun b_and!6473 () Bool)

(assert (= b_and!6469 (and (=> t!5686 result!3439) b_and!6473)))

(declare-fun tb!2043 () Bool)

(declare-fun t!5688 () Bool)

(assert (=> (and b!105064 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))) t!5688) tb!2043))

(declare-fun result!3443 () Bool)

(assert (= result!3443 result!3439))

(assert (=> b!105060 t!5688))

(declare-fun b_and!6475 () Bool)

(assert (= b_and!6471 (and (=> t!5688 result!3443) b_and!6475)))

(declare-fun m!116869 () Bool)

(assert (=> start!12354 m!116869))

(declare-fun m!116871 () Bool)

(assert (=> b!105056 m!116871))

(declare-fun m!116873 () Bool)

(assert (=> b!105056 m!116873))

(declare-fun m!116875 () Bool)

(assert (=> b!105056 m!116875))

(declare-fun m!116877 () Bool)

(assert (=> b!105056 m!116877))

(declare-fun m!116879 () Bool)

(assert (=> b!105056 m!116879))

(assert (=> b!105056 m!116877))

(declare-fun m!116881 () Bool)

(assert (=> b!105056 m!116881))

(assert (=> b!105056 m!116873))

(declare-fun m!116883 () Bool)

(assert (=> b!105056 m!116883))

(assert (=> b!105056 m!116875))

(declare-fun m!116885 () Bool)

(assert (=> b!105056 m!116885))

(declare-fun m!116887 () Bool)

(assert (=> b!105064 m!116887))

(declare-fun m!116889 () Bool)

(assert (=> b!105064 m!116889))

(declare-fun m!116891 () Bool)

(assert (=> mapNonEmpty!3923 m!116891))

(declare-fun m!116893 () Bool)

(assert (=> b!105054 m!116893))

(declare-fun m!116895 () Bool)

(assert (=> b!105054 m!116895))

(declare-fun m!116897 () Bool)

(assert (=> b!105063 m!116897))

(assert (=> b!105067 m!116875))

(assert (=> b!105067 m!116875))

(declare-fun m!116899 () Bool)

(assert (=> b!105067 m!116899))

(assert (=> b!105067 m!116875))

(declare-fun m!116901 () Bool)

(assert (=> b!105067 m!116901))

(declare-fun m!116903 () Bool)

(assert (=> mapNonEmpty!3924 m!116903))

(declare-fun m!116905 () Bool)

(assert (=> b!105055 m!116905))

(declare-fun m!116907 () Bool)

(assert (=> b!105055 m!116907))

(assert (=> b!105055 m!116875))

(declare-fun m!116909 () Bool)

(assert (=> b!105055 m!116909))

(assert (=> b!105055 m!116875))

(assert (=> b!105055 m!116875))

(declare-fun m!116911 () Bool)

(assert (=> b!105055 m!116911))

(assert (=> b!105055 m!116875))

(declare-fun m!116913 () Bool)

(assert (=> b!105055 m!116913))

(declare-fun m!116915 () Bool)

(assert (=> b!105066 m!116915))

(declare-fun m!116917 () Bool)

(assert (=> b!105066 m!116917))

(assert (=> b!105060 m!116875))

(declare-fun m!116919 () Bool)

(assert (=> b!105060 m!116919))

(declare-fun m!116921 () Bool)

(assert (=> b!105060 m!116921))

(assert (=> b!105060 m!116919))

(assert (=> b!105060 m!116921))

(declare-fun m!116923 () Bool)

(assert (=> b!105060 m!116923))

(check-sat (not b!105066) (not b!105060) tp_is_empty!2677 (not b!105067) (not b!105064) (not b!105055) (not b!105054) (not mapNonEmpty!3924) (not mapNonEmpty!3923) b_and!6473 (not b_lambda!4691) (not b!105063) b_and!6475 (not b!105056) (not b_next!2523) (not start!12354) (not b_next!2521))
(check-sat b_and!6473 b_and!6475 (not b_next!2521) (not b_next!2523))
(get-model)

(declare-fun b_lambda!4697 () Bool)

(assert (= b_lambda!4691 (or (and b!105054 b_free!2521) (and b!105064 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))) b_lambda!4697)))

(check-sat (not b!105066) (not b!105060) tp_is_empty!2677 b_and!6473 (not b!105067) (not b!105064) (not b_lambda!4697) (not b!105055) (not b!105054) (not mapNonEmpty!3924) (not mapNonEmpty!3923) (not b!105063) b_and!6475 (not b!105056) (not b_next!2523) (not start!12354) (not b_next!2521))
(check-sat b_and!6473 b_and!6475 (not b_next!2521) (not b_next!2523))
(get-model)

(declare-fun d!28661 () Bool)

(assert (=> d!28661 (= (array_inv!1293 (_keys!4286 newMap!16)) (bvsge (size!2306 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105064 d!28661))

(declare-fun d!28663 () Bool)

(assert (=> d!28663 (= (array_inv!1294 (_values!2564 newMap!16)) (bvsge (size!2307 (_values!2564 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105064 d!28663))

(declare-fun d!28665 () Bool)

(assert (=> d!28665 (= (array_inv!1293 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvsge (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!105054 d!28665))

(declare-fun d!28667 () Bool)

(assert (=> d!28667 (= (array_inv!1294 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvsge (size!2307 (_values!2564 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!105054 d!28667))

(declare-fun d!28669 () Bool)

(assert (=> d!28669 (= (valid!421 thiss!992) (valid!422 (v!2883 (underlying!355 thiss!992))))))

(declare-fun bs!4313 () Bool)

(assert (= bs!4313 d!28669))

(declare-fun m!117037 () Bool)

(assert (=> bs!4313 m!117037))

(assert (=> start!12354 d!28669))

(declare-fun d!28671 () Bool)

(declare-fun res!52383 () Bool)

(declare-fun e!68515 () Bool)

(assert (=> d!28671 (=> (not res!52383) (not e!68515))))

(declare-fun simpleValid!74 (LongMapFixedSize!898) Bool)

(assert (=> d!28671 (= res!52383 (simpleValid!74 newMap!16))))

(assert (=> d!28671 (= (valid!422 newMap!16) e!68515)))

(declare-fun b!105200 () Bool)

(declare-fun res!52384 () Bool)

(assert (=> b!105200 (=> (not res!52384) (not e!68515))))

(declare-fun arrayCountValidKeys!0 (array!4325 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!105200 (= res!52384 (= (arrayCountValidKeys!0 (_keys!4286 newMap!16) #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (_size!498 newMap!16)))))

(declare-fun b!105201 () Bool)

(declare-fun res!52385 () Bool)

(assert (=> b!105201 (=> (not res!52385) (not e!68515))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4325 (_ BitVec 32)) Bool)

(assert (=> b!105201 (= res!52385 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun b!105202 () Bool)

(assert (=> b!105202 (= e!68515 (arrayNoDuplicates!0 (_keys!4286 newMap!16) #b00000000000000000000000000000000 Nil!1612))))

(assert (= (and d!28671 res!52383) b!105200))

(assert (= (and b!105200 res!52384) b!105201))

(assert (= (and b!105201 res!52385) b!105202))

(declare-fun m!117039 () Bool)

(assert (=> d!28671 m!117039))

(declare-fun m!117041 () Bool)

(assert (=> b!105200 m!117041))

(declare-fun m!117043 () Bool)

(assert (=> b!105201 m!117043))

(declare-fun m!117045 () Bool)

(assert (=> b!105202 m!117045))

(assert (=> b!105063 d!28671))

(declare-fun b!105227 () Bool)

(declare-fun e!68532 () ListLongMap!1543)

(assert (=> b!105227 (= e!68532 (ListLongMap!1544 Nil!1613))))

(declare-fun d!28673 () Bool)

(declare-fun e!68536 () Bool)

(assert (=> d!28673 e!68536))

(declare-fun res!52396 () Bool)

(assert (=> d!28673 (=> (not res!52396) (not e!68536))))

(declare-fun lt!53698 () ListLongMap!1543)

(assert (=> d!28673 (= res!52396 (not (contains!820 lt!53698 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28673 (= lt!53698 e!68532)))

(declare-fun c!18263 () Bool)

(assert (=> d!28673 (= c!18263 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!28673 (validMask!0 (mask!6726 (v!2883 (underlying!355 thiss!992))))))

(assert (=> d!28673 (= (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))) lt!53698)))

(declare-fun b!105228 () Bool)

(declare-fun e!68533 () Bool)

(declare-fun e!68531 () Bool)

(assert (=> b!105228 (= e!68533 e!68531)))

(assert (=> b!105228 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun res!52394 () Bool)

(assert (=> b!105228 (= res!52394 (contains!820 lt!53698 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105228 (=> (not res!52394) (not e!68531))))

(declare-fun b!105229 () Bool)

(declare-fun e!68534 () Bool)

(assert (=> b!105229 (= e!68533 e!68534)))

(declare-fun c!18265 () Bool)

(assert (=> b!105229 (= c!18265 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!105230 () Bool)

(declare-fun e!68530 () ListLongMap!1543)

(assert (=> b!105230 (= e!68532 e!68530)))

(declare-fun c!18266 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!105230 (= c!18266 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105231 () Bool)

(declare-fun lt!53700 () Unit!3218)

(declare-fun lt!53696 () Unit!3218)

(assert (=> b!105231 (= lt!53700 lt!53696)))

(declare-fun lt!53694 () (_ BitVec 64))

(declare-fun lt!53699 () V!3217)

(declare-fun lt!53695 () (_ BitVec 64))

(declare-fun lt!53697 () ListLongMap!1543)

(assert (=> b!105231 (not (contains!820 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)) lt!53695))))

(declare-fun addStillNotContains!47 (ListLongMap!1543 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3218)

(assert (=> b!105231 (= lt!53696 (addStillNotContains!47 lt!53697 lt!53694 lt!53699 lt!53695))))

(assert (=> b!105231 (= lt!53695 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!105231 (= lt!53699 (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!105231 (= lt!53694 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!11038 () ListLongMap!1543)

(assert (=> b!105231 (= lt!53697 call!11038)))

(assert (=> b!105231 (= e!68530 (+!135 call!11038 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!105232 () Bool)

(assert (=> b!105232 (= e!68536 e!68533)))

(declare-fun c!18264 () Bool)

(declare-fun e!68535 () Bool)

(assert (=> b!105232 (= c!18264 e!68535)))

(declare-fun res!52397 () Bool)

(assert (=> b!105232 (=> (not res!52397) (not e!68535))))

(assert (=> b!105232 (= res!52397 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!105233 () Bool)

(declare-fun isEmpty!374 (ListLongMap!1543) Bool)

(assert (=> b!105233 (= e!68534 (isEmpty!374 lt!53698))))

(declare-fun b!105234 () Bool)

(assert (=> b!105234 (= e!68530 call!11038)))

(declare-fun b!105235 () Bool)

(declare-fun res!52395 () Bool)

(assert (=> b!105235 (=> (not res!52395) (not e!68536))))

(assert (=> b!105235 (= res!52395 (not (contains!820 lt!53698 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105236 () Bool)

(assert (=> b!105236 (= e!68535 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105236 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun bm!11035 () Bool)

(assert (=> bm!11035 (= call!11038 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!105237 () Bool)

(assert (=> b!105237 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> b!105237 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2307 (_values!2564 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun apply!98 (ListLongMap!1543 (_ BitVec 64)) V!3217)

(assert (=> b!105237 (= e!68531 (= (apply!98 lt!53698 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!105238 () Bool)

(assert (=> b!105238 (= e!68534 (= lt!53698 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!28673 c!18263) b!105227))

(assert (= (and d!28673 (not c!18263)) b!105230))

(assert (= (and b!105230 c!18266) b!105231))

(assert (= (and b!105230 (not c!18266)) b!105234))

(assert (= (or b!105231 b!105234) bm!11035))

(assert (= (and d!28673 res!52396) b!105235))

(assert (= (and b!105235 res!52395) b!105232))

(assert (= (and b!105232 res!52397) b!105236))

(assert (= (and b!105232 c!18264) b!105228))

(assert (= (and b!105232 (not c!18264)) b!105229))

(assert (= (and b!105228 res!52394) b!105237))

(assert (= (and b!105229 c!18265) b!105238))

(assert (= (and b!105229 (not c!18265)) b!105233))

(declare-fun b_lambda!4699 () Bool)

(assert (=> (not b_lambda!4699) (not b!105231)))

(assert (=> b!105231 t!5686))

(declare-fun b_and!6493 () Bool)

(assert (= b_and!6473 (and (=> t!5686 result!3439) b_and!6493)))

(assert (=> b!105231 t!5688))

(declare-fun b_and!6495 () Bool)

(assert (= b_and!6475 (and (=> t!5688 result!3443) b_and!6495)))

(declare-fun b_lambda!4701 () Bool)

(assert (=> (not b_lambda!4701) (not b!105237)))

(assert (=> b!105237 t!5686))

(declare-fun b_and!6497 () Bool)

(assert (= b_and!6493 (and (=> t!5686 result!3439) b_and!6497)))

(assert (=> b!105237 t!5688))

(declare-fun b_and!6499 () Bool)

(assert (= b_and!6495 (and (=> t!5688 result!3443) b_and!6499)))

(declare-fun m!117047 () Bool)

(assert (=> d!28673 m!117047))

(assert (=> d!28673 m!116871))

(declare-fun m!117049 () Bool)

(assert (=> b!105228 m!117049))

(assert (=> b!105228 m!117049))

(declare-fun m!117051 () Bool)

(assert (=> b!105228 m!117051))

(assert (=> b!105236 m!117049))

(assert (=> b!105236 m!117049))

(declare-fun m!117053 () Bool)

(assert (=> b!105236 m!117053))

(assert (=> b!105237 m!116921))

(declare-fun m!117055 () Bool)

(assert (=> b!105237 m!117055))

(assert (=> b!105237 m!116921))

(declare-fun m!117057 () Bool)

(assert (=> b!105237 m!117057))

(assert (=> b!105237 m!117055))

(assert (=> b!105237 m!117049))

(declare-fun m!117059 () Bool)

(assert (=> b!105237 m!117059))

(assert (=> b!105237 m!117049))

(declare-fun m!117061 () Bool)

(assert (=> b!105231 m!117061))

(declare-fun m!117063 () Bool)

(assert (=> b!105231 m!117063))

(declare-fun m!117065 () Bool)

(assert (=> b!105231 m!117065))

(assert (=> b!105231 m!116921))

(assert (=> b!105231 m!117055))

(assert (=> b!105231 m!117049))

(declare-fun m!117067 () Bool)

(assert (=> b!105231 m!117067))

(assert (=> b!105231 m!117055))

(assert (=> b!105231 m!116921))

(assert (=> b!105231 m!117057))

(assert (=> b!105231 m!117063))

(declare-fun m!117069 () Bool)

(assert (=> b!105233 m!117069))

(declare-fun m!117071 () Bool)

(assert (=> b!105235 m!117071))

(declare-fun m!117073 () Bool)

(assert (=> b!105238 m!117073))

(assert (=> bm!11035 m!117073))

(assert (=> b!105230 m!117049))

(assert (=> b!105230 m!117049))

(assert (=> b!105230 m!117053))

(assert (=> b!105056 d!28673))

(declare-fun d!28675 () Bool)

(declare-fun e!68539 () Bool)

(assert (=> d!28675 e!68539))

(declare-fun res!52403 () Bool)

(assert (=> d!28675 (=> (not res!52403) (not e!68539))))

(declare-fun lt!53712 () ListLongMap!1543)

(assert (=> d!28675 (= res!52403 (contains!820 lt!53712 (_1!1201 lt!53599)))))

(declare-fun lt!53709 () List!1616)

(assert (=> d!28675 (= lt!53712 (ListLongMap!1544 lt!53709))))

(declare-fun lt!53710 () Unit!3218)

(declare-fun lt!53711 () Unit!3218)

(assert (=> d!28675 (= lt!53710 lt!53711)))

(declare-datatypes ((Option!160 0))(
  ( (Some!159 (v!2889 V!3217)) (None!158) )
))
(declare-fun getValueByKey!154 (List!1616 (_ BitVec 64)) Option!160)

(assert (=> d!28675 (= (getValueByKey!154 lt!53709 (_1!1201 lt!53599)) (Some!159 (_2!1201 lt!53599)))))

(declare-fun lemmaContainsTupThenGetReturnValue!73 (List!1616 (_ BitVec 64) V!3217) Unit!3218)

(assert (=> d!28675 (= lt!53711 (lemmaContainsTupThenGetReturnValue!73 lt!53709 (_1!1201 lt!53599) (_2!1201 lt!53599)))))

(declare-fun insertStrictlySorted!76 (List!1616 (_ BitVec 64) V!3217) List!1616)

(assert (=> d!28675 (= lt!53709 (insertStrictlySorted!76 (toList!787 (+!135 lt!53604 lt!53606)) (_1!1201 lt!53599) (_2!1201 lt!53599)))))

(assert (=> d!28675 (= (+!135 (+!135 lt!53604 lt!53606) lt!53599) lt!53712)))

(declare-fun b!105243 () Bool)

(declare-fun res!52402 () Bool)

(assert (=> b!105243 (=> (not res!52402) (not e!68539))))

(assert (=> b!105243 (= res!52402 (= (getValueByKey!154 (toList!787 lt!53712) (_1!1201 lt!53599)) (Some!159 (_2!1201 lt!53599))))))

(declare-fun b!105244 () Bool)

(declare-fun contains!821 (List!1616 tuple2!2380) Bool)

(assert (=> b!105244 (= e!68539 (contains!821 (toList!787 lt!53712) lt!53599))))

(assert (= (and d!28675 res!52403) b!105243))

(assert (= (and b!105243 res!52402) b!105244))

(declare-fun m!117075 () Bool)

(assert (=> d!28675 m!117075))

(declare-fun m!117077 () Bool)

(assert (=> d!28675 m!117077))

(declare-fun m!117079 () Bool)

(assert (=> d!28675 m!117079))

(declare-fun m!117081 () Bool)

(assert (=> d!28675 m!117081))

(declare-fun m!117083 () Bool)

(assert (=> b!105243 m!117083))

(declare-fun m!117085 () Bool)

(assert (=> b!105244 m!117085))

(assert (=> b!105056 d!28675))

(declare-fun d!28677 () Bool)

(declare-fun e!68540 () Bool)

(assert (=> d!28677 e!68540))

(declare-fun res!52405 () Bool)

(assert (=> d!28677 (=> (not res!52405) (not e!68540))))

(declare-fun lt!53716 () ListLongMap!1543)

(assert (=> d!28677 (= res!52405 (contains!820 lt!53716 (_1!1201 lt!53599)))))

(declare-fun lt!53713 () List!1616)

(assert (=> d!28677 (= lt!53716 (ListLongMap!1544 lt!53713))))

(declare-fun lt!53714 () Unit!3218)

(declare-fun lt!53715 () Unit!3218)

(assert (=> d!28677 (= lt!53714 lt!53715)))

(assert (=> d!28677 (= (getValueByKey!154 lt!53713 (_1!1201 lt!53599)) (Some!159 (_2!1201 lt!53599)))))

(assert (=> d!28677 (= lt!53715 (lemmaContainsTupThenGetReturnValue!73 lt!53713 (_1!1201 lt!53599) (_2!1201 lt!53599)))))

(assert (=> d!28677 (= lt!53713 (insertStrictlySorted!76 (toList!787 lt!53604) (_1!1201 lt!53599) (_2!1201 lt!53599)))))

(assert (=> d!28677 (= (+!135 lt!53604 lt!53599) lt!53716)))

(declare-fun b!105245 () Bool)

(declare-fun res!52404 () Bool)

(assert (=> b!105245 (=> (not res!52404) (not e!68540))))

(assert (=> b!105245 (= res!52404 (= (getValueByKey!154 (toList!787 lt!53716) (_1!1201 lt!53599)) (Some!159 (_2!1201 lt!53599))))))

(declare-fun b!105246 () Bool)

(assert (=> b!105246 (= e!68540 (contains!821 (toList!787 lt!53716) lt!53599))))

(assert (= (and d!28677 res!52405) b!105245))

(assert (= (and b!105245 res!52404) b!105246))

(declare-fun m!117087 () Bool)

(assert (=> d!28677 m!117087))

(declare-fun m!117089 () Bool)

(assert (=> d!28677 m!117089))

(declare-fun m!117091 () Bool)

(assert (=> d!28677 m!117091))

(declare-fun m!117093 () Bool)

(assert (=> d!28677 m!117093))

(declare-fun m!117095 () Bool)

(assert (=> b!105245 m!117095))

(declare-fun m!117097 () Bool)

(assert (=> b!105246 m!117097))

(assert (=> b!105056 d!28677))

(declare-fun d!28679 () Bool)

(declare-fun e!68541 () Bool)

(assert (=> d!28679 e!68541))

(declare-fun res!52407 () Bool)

(assert (=> d!28679 (=> (not res!52407) (not e!68541))))

(declare-fun lt!53720 () ListLongMap!1543)

(assert (=> d!28679 (= res!52407 (contains!820 lt!53720 (_1!1201 lt!53606)))))

(declare-fun lt!53717 () List!1616)

(assert (=> d!28679 (= lt!53720 (ListLongMap!1544 lt!53717))))

(declare-fun lt!53718 () Unit!3218)

(declare-fun lt!53719 () Unit!3218)

(assert (=> d!28679 (= lt!53718 lt!53719)))

(assert (=> d!28679 (= (getValueByKey!154 lt!53717 (_1!1201 lt!53606)) (Some!159 (_2!1201 lt!53606)))))

(assert (=> d!28679 (= lt!53719 (lemmaContainsTupThenGetReturnValue!73 lt!53717 (_1!1201 lt!53606) (_2!1201 lt!53606)))))

(assert (=> d!28679 (= lt!53717 (insertStrictlySorted!76 (toList!787 lt!53604) (_1!1201 lt!53606) (_2!1201 lt!53606)))))

(assert (=> d!28679 (= (+!135 lt!53604 lt!53606) lt!53720)))

(declare-fun b!105247 () Bool)

(declare-fun res!52406 () Bool)

(assert (=> b!105247 (=> (not res!52406) (not e!68541))))

(assert (=> b!105247 (= res!52406 (= (getValueByKey!154 (toList!787 lt!53720) (_1!1201 lt!53606)) (Some!159 (_2!1201 lt!53606))))))

(declare-fun b!105248 () Bool)

(assert (=> b!105248 (= e!68541 (contains!821 (toList!787 lt!53720) lt!53606))))

(assert (= (and d!28679 res!52407) b!105247))

(assert (= (and b!105247 res!52406) b!105248))

(declare-fun m!117099 () Bool)

(assert (=> d!28679 m!117099))

(declare-fun m!117101 () Bool)

(assert (=> d!28679 m!117101))

(declare-fun m!117103 () Bool)

(assert (=> d!28679 m!117103))

(declare-fun m!117105 () Bool)

(assert (=> d!28679 m!117105))

(declare-fun m!117107 () Bool)

(assert (=> b!105247 m!117107))

(declare-fun m!117109 () Bool)

(assert (=> b!105248 m!117109))

(assert (=> b!105056 d!28679))

(declare-fun d!28681 () Bool)

(assert (=> d!28681 (= (+!135 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (+!135 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(declare-fun lt!53723 () Unit!3218)

(declare-fun choose!659 (ListLongMap!1543 (_ BitVec 64) V!3217 (_ BitVec 64) V!3217) Unit!3218)

(assert (=> d!28681 (= lt!53723 (choose!659 lt!53604 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))

(assert (=> d!28681 (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28681 (= (addCommutativeForDiffKeys!47 lt!53604 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) lt!53723)))

(declare-fun bs!4314 () Bool)

(assert (= bs!4314 d!28681))

(declare-fun m!117111 () Bool)

(assert (=> bs!4314 m!117111))

(declare-fun m!117113 () Bool)

(assert (=> bs!4314 m!117113))

(assert (=> bs!4314 m!116875))

(declare-fun m!117115 () Bool)

(assert (=> bs!4314 m!117115))

(assert (=> bs!4314 m!117111))

(declare-fun m!117117 () Bool)

(assert (=> bs!4314 m!117117))

(assert (=> bs!4314 m!117117))

(declare-fun m!117119 () Bool)

(assert (=> bs!4314 m!117119))

(assert (=> b!105056 d!28681))

(declare-fun d!28683 () Bool)

(declare-fun e!68542 () Bool)

(assert (=> d!28683 e!68542))

(declare-fun res!52409 () Bool)

(assert (=> d!28683 (=> (not res!52409) (not e!68542))))

(declare-fun lt!53727 () ListLongMap!1543)

(assert (=> d!28683 (= res!52409 (contains!820 lt!53727 (_1!1201 lt!53606)))))

(declare-fun lt!53724 () List!1616)

(assert (=> d!28683 (= lt!53727 (ListLongMap!1544 lt!53724))))

(declare-fun lt!53725 () Unit!3218)

(declare-fun lt!53726 () Unit!3218)

(assert (=> d!28683 (= lt!53725 lt!53726)))

(assert (=> d!28683 (= (getValueByKey!154 lt!53724 (_1!1201 lt!53606)) (Some!159 (_2!1201 lt!53606)))))

(assert (=> d!28683 (= lt!53726 (lemmaContainsTupThenGetReturnValue!73 lt!53724 (_1!1201 lt!53606) (_2!1201 lt!53606)))))

(assert (=> d!28683 (= lt!53724 (insertStrictlySorted!76 (toList!787 (+!135 lt!53604 lt!53599)) (_1!1201 lt!53606) (_2!1201 lt!53606)))))

(assert (=> d!28683 (= (+!135 (+!135 lt!53604 lt!53599) lt!53606) lt!53727)))

(declare-fun b!105249 () Bool)

(declare-fun res!52408 () Bool)

(assert (=> b!105249 (=> (not res!52408) (not e!68542))))

(assert (=> b!105249 (= res!52408 (= (getValueByKey!154 (toList!787 lt!53727) (_1!1201 lt!53606)) (Some!159 (_2!1201 lt!53606))))))

(declare-fun b!105250 () Bool)

(assert (=> b!105250 (= e!68542 (contains!821 (toList!787 lt!53727) lt!53606))))

(assert (= (and d!28683 res!52409) b!105249))

(assert (= (and b!105249 res!52408) b!105250))

(declare-fun m!117121 () Bool)

(assert (=> d!28683 m!117121))

(declare-fun m!117123 () Bool)

(assert (=> d!28683 m!117123))

(declare-fun m!117125 () Bool)

(assert (=> d!28683 m!117125))

(declare-fun m!117127 () Bool)

(assert (=> d!28683 m!117127))

(declare-fun m!117129 () Bool)

(assert (=> b!105249 m!117129))

(declare-fun m!117131 () Bool)

(assert (=> b!105250 m!117131))

(assert (=> b!105056 d!28683))

(declare-fun d!28685 () Bool)

(assert (=> d!28685 (= (validMask!0 (mask!6726 (v!2883 (underlying!355 thiss!992)))) (and (or (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000001111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000011111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000001111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000011111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000001111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000011111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000001111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000011111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000001111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000011111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000001111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000011111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000111111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000001111111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000011111111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000111111111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000001111111111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000011111111111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000111111111111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00001111111111111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00011111111111111111111111111111) (= (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!105056 d!28685))

(declare-fun d!28687 () Bool)

(declare-fun e!68547 () Bool)

(assert (=> d!28687 e!68547))

(declare-fun res!52412 () Bool)

(assert (=> d!28687 (=> res!52412 e!68547)))

(declare-fun lt!53736 () Bool)

(assert (=> d!28687 (= res!52412 (not lt!53736))))

(declare-fun lt!53739 () Bool)

(assert (=> d!28687 (= lt!53736 lt!53739)))

(declare-fun lt!53738 () Unit!3218)

(declare-fun e!68548 () Unit!3218)

(assert (=> d!28687 (= lt!53738 e!68548)))

(declare-fun c!18269 () Bool)

(assert (=> d!28687 (= c!18269 lt!53739)))

(declare-fun containsKey!158 (List!1616 (_ BitVec 64)) Bool)

(assert (=> d!28687 (= lt!53739 (containsKey!158 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!28687 (= (contains!820 lt!53596 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) lt!53736)))

(declare-fun b!105257 () Bool)

(declare-fun lt!53737 () Unit!3218)

(assert (=> b!105257 (= e!68548 lt!53737)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!107 (List!1616 (_ BitVec 64)) Unit!3218)

(assert (=> b!105257 (= lt!53737 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun isDefined!108 (Option!160) Bool)

(assert (=> b!105257 (isDefined!108 (getValueByKey!154 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105258 () Bool)

(declare-fun Unit!3228 () Unit!3218)

(assert (=> b!105258 (= e!68548 Unit!3228)))

(declare-fun b!105259 () Bool)

(assert (=> b!105259 (= e!68547 (isDefined!108 (getValueByKey!154 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (= (and d!28687 c!18269) b!105257))

(assert (= (and d!28687 (not c!18269)) b!105258))

(assert (= (and d!28687 (not res!52412)) b!105259))

(assert (=> d!28687 m!116875))

(declare-fun m!117133 () Bool)

(assert (=> d!28687 m!117133))

(assert (=> b!105257 m!116875))

(declare-fun m!117135 () Bool)

(assert (=> b!105257 m!117135))

(assert (=> b!105257 m!116875))

(declare-fun m!117137 () Bool)

(assert (=> b!105257 m!117137))

(assert (=> b!105257 m!117137))

(declare-fun m!117139 () Bool)

(assert (=> b!105257 m!117139))

(assert (=> b!105259 m!116875))

(assert (=> b!105259 m!117137))

(assert (=> b!105259 m!117137))

(assert (=> b!105259 m!117139))

(assert (=> b!105067 d!28687))

(declare-fun b!105344 () Bool)

(declare-fun res!52443 () Bool)

(declare-fun call!11106 () Bool)

(assert (=> b!105344 (= res!52443 call!11106)))

(declare-fun e!68598 () Bool)

(assert (=> b!105344 (=> (not res!52443) (not e!68598))))

(declare-fun bm!11084 () Bool)

(declare-fun call!11089 () ListLongMap!1543)

(declare-fun call!11108 () ListLongMap!1543)

(assert (=> bm!11084 (= call!11089 call!11108)))

(declare-fun call!11088 () ListLongMap!1543)

(declare-fun call!11102 () ListLongMap!1543)

(declare-fun b!105345 () Bool)

(declare-fun e!68604 () Bool)

(assert (=> b!105345 (= e!68604 (= call!11088 (+!135 call!11102 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun bm!11085 () Bool)

(declare-fun c!18299 () Bool)

(declare-fun c!18307 () Bool)

(declare-fun call!11096 () ListLongMap!1543)

(declare-fun c!18304 () Bool)

(declare-fun lt!53802 () (_ BitVec 32))

(declare-datatypes ((SeekEntryResult!262 0))(
  ( (MissingZero!262 (index!3196 (_ BitVec 32))) (Found!262 (index!3197 (_ BitVec 32))) (Intermediate!262 (undefined!1074 Bool) (index!3198 (_ BitVec 32)) (x!13647 (_ BitVec 32))) (Undefined!262) (MissingVacant!262 (index!3199 (_ BitVec 32))) )
))
(declare-fun lt!53814 () SeekEntryResult!262)

(assert (=> bm!11085 (= call!11096 (getCurrentListMap!464 (_keys!4286 newMap!16) (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) (mask!6726 newMap!16) (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) (zeroValue!2456 newMap!16) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105346 () Bool)

(declare-fun e!68601 () Unit!3218)

(declare-fun Unit!3229 () Unit!3218)

(assert (=> b!105346 (= e!68601 Unit!3229)))

(declare-fun lt!53806 () Unit!3218)

(declare-fun call!11091 () Unit!3218)

(assert (=> b!105346 (= lt!53806 call!11091)))

(declare-fun lt!53794 () SeekEntryResult!262)

(declare-fun call!11094 () SeekEntryResult!262)

(assert (=> b!105346 (= lt!53794 call!11094)))

(declare-fun c!18302 () Bool)

(assert (=> b!105346 (= c!18302 ((_ is MissingZero!262) lt!53794))))

(declare-fun e!68610 () Bool)

(assert (=> b!105346 e!68610))

(declare-fun lt!53800 () Unit!3218)

(assert (=> b!105346 (= lt!53800 lt!53806)))

(assert (=> b!105346 false))

(declare-fun b!105347 () Bool)

(declare-fun res!52453 () Bool)

(assert (=> b!105347 (= res!52453 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3199 lt!53794)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68612 () Bool)

(assert (=> b!105347 (=> (not res!52453) (not e!68612))))

(declare-fun b!105348 () Bool)

(declare-fun e!68606 () Bool)

(assert (=> b!105348 (= e!68606 (= call!11088 call!11102))))

(declare-fun b!105349 () Bool)

(declare-fun e!68593 () tuple2!2382)

(declare-fun e!68594 () tuple2!2382)

(assert (=> b!105349 (= e!68593 e!68594)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4325 (_ BitVec 32)) SeekEntryResult!262)

(assert (=> b!105349 (= lt!53814 (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(assert (=> b!105349 (= c!18307 ((_ is Undefined!262) lt!53814))))

(declare-fun b!105350 () Bool)

(declare-fun lt!53816 () Unit!3218)

(declare-fun lt!53804 () Unit!3218)

(assert (=> b!105350 (= lt!53816 lt!53804)))

(declare-fun call!11107 () ListLongMap!1543)

(assert (=> b!105350 (= call!11089 call!11107)))

(declare-fun lt!53811 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!47 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 V!3217 Int) Unit!3218)

(assert (=> b!105350 (= lt!53804 (lemmaChangeZeroKeyThenAddPairToListMap!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) lt!53811 (zeroValue!2456 newMap!16) lt!53601 (minValue!2456 newMap!16) (defaultEntry!2581 newMap!16)))))

(assert (=> b!105350 (= lt!53811 (bvor (extraKeys!2386 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!68611 () tuple2!2382)

(assert (=> b!105350 (= e!68611 (tuple2!2383 true (LongMapFixedSize!899 (defaultEntry!2581 newMap!16) (mask!6726 newMap!16) (bvor (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) lt!53601 (minValue!2456 newMap!16) (_size!498 newMap!16) (_keys!4286 newMap!16) (_values!2564 newMap!16) (_vacant!498 newMap!16))))))

(declare-fun bm!11086 () Bool)

(declare-fun call!11101 () Bool)

(declare-fun call!11093 () Bool)

(assert (=> bm!11086 (= call!11101 call!11093)))

(declare-fun b!105351 () Bool)

(declare-fun e!68596 () ListLongMap!1543)

(declare-fun call!11095 () ListLongMap!1543)

(assert (=> b!105351 (= e!68596 call!11095)))

(declare-fun b!105352 () Bool)

(assert (=> b!105352 (= e!68596 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun call!11105 () Unit!3218)

(declare-fun bm!11087 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) Int) Unit!3218)

(assert (=> bm!11087 (= call!11105 (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(declare-fun bm!11088 () Bool)

(assert (=> bm!11088 (= call!11093 (arrayContainsKey!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!105353 () Bool)

(assert (=> b!105353 (= e!68606 e!68604)))

(declare-fun res!52452 () Bool)

(assert (=> b!105353 (= res!52452 (contains!820 call!11088 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> b!105353 (=> (not res!52452) (not e!68604))))

(declare-fun bm!11089 () Bool)

(declare-fun call!11092 () Bool)

(assert (=> bm!11089 (= call!11106 call!11092)))

(declare-fun b!105354 () Bool)

(declare-fun c!18305 () Bool)

(assert (=> b!105354 (= c!18305 ((_ is MissingVacant!262) lt!53794))))

(declare-fun e!68595 () Bool)

(assert (=> b!105354 (= e!68610 e!68595)))

(declare-fun b!105355 () Bool)

(declare-fun e!68600 () tuple2!2382)

(declare-fun lt!53813 () tuple2!2382)

(assert (=> b!105355 (= e!68600 (tuple2!2383 (_1!1202 lt!53813) (_2!1202 lt!53813)))))

(declare-fun call!11090 () tuple2!2382)

(assert (=> b!105355 (= lt!53813 call!11090)))

(declare-fun b!105356 () Bool)

(declare-fun e!68614 () Unit!3218)

(declare-fun lt!53818 () Unit!3218)

(assert (=> b!105356 (= e!68614 lt!53818)))

(assert (=> b!105356 (= lt!53818 call!11091)))

(declare-fun lt!53817 () SeekEntryResult!262)

(declare-fun call!11098 () SeekEntryResult!262)

(assert (=> b!105356 (= lt!53817 call!11098)))

(declare-fun c!18309 () Bool)

(assert (=> b!105356 (= c!18309 ((_ is MissingZero!262) lt!53817))))

(declare-fun e!68597 () Bool)

(assert (=> b!105356 e!68597))

(declare-fun b!105357 () Bool)

(declare-fun e!68603 () Bool)

(declare-fun e!68613 () Bool)

(assert (=> b!105357 (= e!68603 e!68613)))

(declare-fun res!52447 () Bool)

(declare-fun call!11110 () Bool)

(assert (=> b!105357 (= res!52447 call!11110)))

(assert (=> b!105357 (=> (not res!52447) (not e!68613))))

(declare-fun b!105358 () Bool)

(declare-fun e!68609 () Bool)

(assert (=> b!105358 (= e!68609 e!68606)))

(declare-fun c!18311 () Bool)

(declare-fun lt!53812 () tuple2!2382)

(assert (=> b!105358 (= c!18311 (_1!1202 lt!53812))))

(declare-fun bm!11090 () Bool)

(assert (=> bm!11090 (= call!11088 (map!1270 (_2!1202 lt!53812)))))

(declare-fun bm!11091 () Bool)

(declare-fun call!11109 () SeekEntryResult!262)

(assert (=> bm!11091 (= call!11098 call!11109)))

(declare-fun c!18306 () Bool)

(declare-fun bm!11092 () Bool)

(declare-fun updateHelperNewKey!47 (LongMapFixedSize!898 (_ BitVec 64) V!3217 (_ BitVec 32)) tuple2!2382)

(assert (=> bm!11092 (= call!11090 (updateHelperNewKey!47 newMap!16 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))))))

(declare-fun b!105359 () Bool)

(declare-fun lt!53815 () Unit!3218)

(declare-fun lt!53803 () Unit!3218)

(assert (=> b!105359 (= lt!53815 lt!53803)))

(declare-fun call!11103 () ListLongMap!1543)

(assert (=> b!105359 (contains!820 call!11103 (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814)))))

(declare-fun lt!53795 () array!4327)

(declare-fun lemmaValidKeyInArrayIsInListMap!106 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) Int) Unit!3218)

(assert (=> b!105359 (= lt!53803 (lemmaValidKeyInArrayIsInListMap!106 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3197 lt!53814) (defaultEntry!2581 newMap!16)))))

(assert (=> b!105359 (= lt!53795 (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))))

(declare-fun lt!53808 () Unit!3218)

(declare-fun lt!53819 () Unit!3218)

(assert (=> b!105359 (= lt!53808 lt!53819)))

(assert (=> b!105359 (= call!11108 call!11095)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) (_ BitVec 64) V!3217 Int) Unit!3218)

(assert (=> b!105359 (= lt!53819 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3197 lt!53814) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53801 () Unit!3218)

(assert (=> b!105359 (= lt!53801 e!68601)))

(declare-fun c!18301 () Bool)

(declare-fun call!11097 () Bool)

(assert (=> b!105359 (= c!18301 call!11097)))

(declare-fun e!68602 () tuple2!2382)

(assert (=> b!105359 (= e!68602 (tuple2!2383 true (LongMapFixedSize!899 (defaultEntry!2581 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (_size!498 newMap!16) (_keys!4286 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (_vacant!498 newMap!16))))))

(declare-fun b!105360 () Bool)

(declare-fun lt!53820 () Unit!3218)

(declare-fun lt!53807 () Unit!3218)

(assert (=> b!105360 (= lt!53820 lt!53807)))

(declare-fun call!11087 () ListLongMap!1543)

(assert (=> b!105360 (= call!11089 call!11087)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 V!3217 Int) Unit!3218)

(assert (=> b!105360 (= lt!53807 (lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) lt!53802 (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) lt!53601 (defaultEntry!2581 newMap!16)))))

(assert (=> b!105360 (= lt!53802 (bvor (extraKeys!2386 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!105360 (= e!68611 (tuple2!2383 true (LongMapFixedSize!899 (defaultEntry!2581 newMap!16) (mask!6726 newMap!16) (bvor (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) (zeroValue!2456 newMap!16) lt!53601 (_size!498 newMap!16) (_keys!4286 newMap!16) (_values!2564 newMap!16) (_vacant!498 newMap!16))))))

(declare-fun bm!11093 () Bool)

(declare-fun call!11099 () Bool)

(assert (=> bm!11093 (= call!11099 call!11092)))

(declare-fun bm!11094 () Bool)

(declare-fun call!11100 () Bool)

(assert (=> bm!11094 (= call!11100 call!11093)))

(declare-fun b!105361 () Bool)

(declare-fun Unit!3230 () Unit!3218)

(assert (=> b!105361 (= e!68614 Unit!3230)))

(declare-fun lt!53799 () Unit!3218)

(assert (=> b!105361 (= lt!53799 call!11105)))

(declare-fun lt!53798 () SeekEntryResult!262)

(assert (=> b!105361 (= lt!53798 call!11098)))

(declare-fun res!52445 () Bool)

(assert (=> b!105361 (= res!52445 ((_ is Found!262) lt!53798))))

(declare-fun e!68599 () Bool)

(assert (=> b!105361 (=> (not res!52445) (not e!68599))))

(assert (=> b!105361 e!68599))

(declare-fun lt!53796 () Unit!3218)

(assert (=> b!105361 (= lt!53796 lt!53799)))

(assert (=> b!105361 false))

(declare-fun b!105362 () Bool)

(assert (=> b!105362 (= c!18306 ((_ is MissingVacant!262) lt!53814))))

(assert (=> b!105362 (= e!68594 e!68600)))

(declare-fun bm!11095 () Bool)

(assert (=> bm!11095 (= call!11107 call!11103)))

(declare-fun bm!11096 () Bool)

(assert (=> bm!11096 (= call!11087 call!11096)))

(declare-fun bm!11097 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) Int) Unit!3218)

(assert (=> bm!11097 (= call!11091 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(declare-fun bm!11098 () Bool)

(assert (=> bm!11098 (= call!11094 call!11109)))

(declare-fun b!105363 () Bool)

(assert (=> b!105363 (= e!68595 e!68612)))

(declare-fun res!52446 () Bool)

(declare-fun call!11104 () Bool)

(assert (=> b!105363 (= res!52446 call!11104)))

(assert (=> b!105363 (=> (not res!52446) (not e!68612))))

(declare-fun b!105364 () Bool)

(assert (=> b!105364 (= e!68595 ((_ is Undefined!262) lt!53794))))

(declare-fun bm!11099 () Bool)

(assert (=> bm!11099 (= call!11109 (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun d!28689 () Bool)

(assert (=> d!28689 e!68609))

(declare-fun res!52454 () Bool)

(assert (=> d!28689 (=> (not res!52454) (not e!68609))))

(assert (=> d!28689 (= res!52454 (valid!422 (_2!1202 lt!53812)))))

(assert (=> d!28689 (= lt!53812 e!68593)))

(assert (=> d!28689 (= c!18304 (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvneg (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (=> d!28689 (valid!422 newMap!16)))

(assert (=> d!28689 (= (update!159 newMap!16 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601) lt!53812)))

(declare-fun b!105365 () Bool)

(assert (=> b!105365 (= e!68600 e!68602)))

(declare-fun c!18298 () Bool)

(assert (=> b!105365 (= c!18298 ((_ is MissingZero!262) lt!53814))))

(declare-fun lt!53810 () SeekEntryResult!262)

(declare-fun b!105366 () Bool)

(assert (=> b!105366 (= e!68598 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53810)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105367 () Bool)

(declare-fun c!18308 () Bool)

(assert (=> b!105367 (= c!18308 ((_ is MissingVacant!262) lt!53817))))

(assert (=> b!105367 (= e!68597 e!68603)))

(declare-fun b!105368 () Bool)

(declare-fun res!52441 () Bool)

(declare-fun e!68605 () Bool)

(assert (=> b!105368 (=> (not res!52441) (not e!68605))))

(assert (=> b!105368 (= res!52441 call!11104)))

(assert (=> b!105368 (= e!68610 e!68605)))

(declare-fun b!105369 () Bool)

(assert (=> b!105369 (= e!68593 e!68611)))

(assert (=> b!105369 (= c!18299 (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105370 () Bool)

(declare-fun res!52444 () Bool)

(assert (=> b!105370 (=> (not res!52444) (not e!68605))))

(assert (=> b!105370 (= res!52444 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3196 lt!53794)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105371 () Bool)

(assert (=> b!105371 (= e!68613 (not call!11101))))

(declare-fun e!68608 () ListLongMap!1543)

(declare-fun b!105372 () Bool)

(assert (=> b!105372 (= e!68608 (ite c!18299 call!11087 call!11107))))

(declare-fun b!105373 () Bool)

(assert (=> b!105373 (= e!68599 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53798)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105374 () Bool)

(declare-fun res!52442 () Bool)

(declare-fun e!68607 () Bool)

(assert (=> b!105374 (=> (not res!52442) (not e!68607))))

(assert (=> b!105374 (= res!52442 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3196 lt!53817)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11100 () Bool)

(assert (=> bm!11100 (= call!11104 call!11106)))

(declare-fun c!18300 () Bool)

(declare-fun bm!11101 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11101 (= call!11092 (inRange!0 (ite c!18307 (ite c!18300 (index!3197 lt!53798) (ite c!18309 (index!3196 lt!53817) (index!3199 lt!53817))) (ite c!18301 (index!3197 lt!53810) (ite c!18302 (index!3196 lt!53794) (index!3199 lt!53794)))) (mask!6726 newMap!16)))))

(declare-fun b!105375 () Bool)

(assert (=> b!105375 (= e!68605 (not call!11100))))

(declare-fun b!105376 () Bool)

(declare-fun res!52449 () Bool)

(assert (=> b!105376 (= res!52449 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3199 lt!53817)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105376 (=> (not res!52449) (not e!68613))))

(declare-fun b!105377 () Bool)

(declare-fun lt!53797 () Unit!3218)

(assert (=> b!105377 (= e!68601 lt!53797)))

(assert (=> b!105377 (= lt!53797 call!11105)))

(assert (=> b!105377 (= lt!53810 call!11094)))

(declare-fun res!52450 () Bool)

(assert (=> b!105377 (= res!52450 ((_ is Found!262) lt!53810))))

(assert (=> b!105377 (=> (not res!52450) (not e!68598))))

(assert (=> b!105377 e!68598))

(declare-fun bm!11102 () Bool)

(assert (=> bm!11102 (= call!11095 call!11096)))

(declare-fun bm!11103 () Bool)

(assert (=> bm!11103 (= call!11103 (getCurrentListMap!464 (_keys!4286 newMap!16) (ite c!18304 (_values!2564 newMap!16) lt!53795) (mask!6726 newMap!16) (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105378 () Bool)

(assert (=> b!105378 (= e!68608 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105379 () Bool)

(declare-fun lt!53809 () tuple2!2382)

(assert (=> b!105379 (= lt!53809 call!11090)))

(assert (=> b!105379 (= e!68602 (tuple2!2383 (_1!1202 lt!53809) (_2!1202 lt!53809)))))

(declare-fun b!105380 () Bool)

(assert (=> b!105380 (= e!68612 (not call!11100))))

(declare-fun bm!11104 () Bool)

(declare-fun c!18310 () Bool)

(assert (=> bm!11104 (= c!18310 c!18307)))

(assert (=> bm!11104 (= call!11097 (contains!820 e!68596 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun bm!11105 () Bool)

(assert (=> bm!11105 (= call!11110 call!11099)))

(declare-fun bm!11106 () Bool)

(assert (=> bm!11106 (= call!11108 (+!135 e!68608 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun c!18303 () Bool)

(assert (=> bm!11106 (= c!18303 c!18304)))

(declare-fun b!105381 () Bool)

(assert (=> b!105381 (= e!68607 (not call!11101))))

(declare-fun b!105382 () Bool)

(declare-fun lt!53805 () Unit!3218)

(assert (=> b!105382 (= lt!53805 e!68614)))

(assert (=> b!105382 (= c!18300 call!11097)))

(assert (=> b!105382 (= e!68594 (tuple2!2383 false newMap!16))))

(declare-fun b!105383 () Bool)

(declare-fun res!52451 () Bool)

(assert (=> b!105383 (=> (not res!52451) (not e!68607))))

(assert (=> b!105383 (= res!52451 call!11110)))

(assert (=> b!105383 (= e!68597 e!68607)))

(declare-fun b!105384 () Bool)

(assert (=> b!105384 (= e!68603 ((_ is Undefined!262) lt!53817))))

(declare-fun bm!11107 () Bool)

(assert (=> bm!11107 (= call!11102 (map!1270 newMap!16))))

(declare-fun b!105385 () Bool)

(declare-fun res!52448 () Bool)

(assert (=> b!105385 (= res!52448 call!11099)))

(assert (=> b!105385 (=> (not res!52448) (not e!68599))))

(assert (= (and d!28689 c!18304) b!105369))

(assert (= (and d!28689 (not c!18304)) b!105349))

(assert (= (and b!105369 c!18299) b!105350))

(assert (= (and b!105369 (not c!18299)) b!105360))

(assert (= (or b!105350 b!105360) bm!11096))

(assert (= (or b!105350 b!105360) bm!11095))

(assert (= (or b!105350 b!105360) bm!11084))

(assert (= (and b!105349 c!18307) b!105382))

(assert (= (and b!105349 (not c!18307)) b!105362))

(assert (= (and b!105382 c!18300) b!105361))

(assert (= (and b!105382 (not c!18300)) b!105356))

(assert (= (and b!105361 res!52445) b!105385))

(assert (= (and b!105385 res!52448) b!105373))

(assert (= (and b!105356 c!18309) b!105383))

(assert (= (and b!105356 (not c!18309)) b!105367))

(assert (= (and b!105383 res!52451) b!105374))

(assert (= (and b!105374 res!52442) b!105381))

(assert (= (and b!105367 c!18308) b!105357))

(assert (= (and b!105367 (not c!18308)) b!105384))

(assert (= (and b!105357 res!52447) b!105376))

(assert (= (and b!105376 res!52449) b!105371))

(assert (= (or b!105383 b!105357) bm!11105))

(assert (= (or b!105381 b!105371) bm!11086))

(assert (= (or b!105385 bm!11105) bm!11093))

(assert (= (or b!105361 b!105356) bm!11091))

(assert (= (and b!105362 c!18306) b!105355))

(assert (= (and b!105362 (not c!18306)) b!105365))

(assert (= (and b!105365 c!18298) b!105379))

(assert (= (and b!105365 (not c!18298)) b!105359))

(assert (= (and b!105359 c!18301) b!105377))

(assert (= (and b!105359 (not c!18301)) b!105346))

(assert (= (and b!105377 res!52450) b!105344))

(assert (= (and b!105344 res!52443) b!105366))

(assert (= (and b!105346 c!18302) b!105368))

(assert (= (and b!105346 (not c!18302)) b!105354))

(assert (= (and b!105368 res!52441) b!105370))

(assert (= (and b!105370 res!52444) b!105375))

(assert (= (and b!105354 c!18305) b!105363))

(assert (= (and b!105354 (not c!18305)) b!105364))

(assert (= (and b!105363 res!52446) b!105347))

(assert (= (and b!105347 res!52453) b!105380))

(assert (= (or b!105368 b!105363) bm!11100))

(assert (= (or b!105375 b!105380) bm!11094))

(assert (= (or b!105344 bm!11100) bm!11089))

(assert (= (or b!105377 b!105346) bm!11098))

(assert (= (or b!105355 b!105379) bm!11092))

(assert (= (or b!105361 b!105377) bm!11087))

(assert (= (or b!105356 b!105346) bm!11097))

(assert (= (or bm!11091 bm!11098) bm!11099))

(assert (= (or b!105382 b!105359) bm!11102))

(assert (= (or bm!11093 bm!11089) bm!11101))

(assert (= (or bm!11086 bm!11094) bm!11088))

(assert (= (or b!105382 b!105359) bm!11104))

(assert (= (and bm!11104 c!18310) b!105351))

(assert (= (and bm!11104 (not c!18310)) b!105352))

(assert (= (or bm!11096 bm!11102) bm!11085))

(assert (= (or bm!11095 b!105359) bm!11103))

(assert (= (or bm!11084 b!105359) bm!11106))

(assert (= (and bm!11106 c!18303) b!105372))

(assert (= (and bm!11106 (not c!18303)) b!105378))

(assert (= (and d!28689 res!52454) b!105358))

(assert (= (and b!105358 c!18311) b!105353))

(assert (= (and b!105358 (not c!18311)) b!105348))

(assert (= (and b!105353 res!52452) b!105345))

(assert (= (or b!105353 b!105345 b!105348) bm!11090))

(assert (= (or b!105345 b!105348) bm!11107))

(assert (=> bm!11104 m!116875))

(declare-fun m!117141 () Bool)

(assert (=> bm!11104 m!117141))

(declare-fun m!117143 () Bool)

(assert (=> b!105352 m!117143))

(assert (=> bm!11097 m!116875))

(declare-fun m!117145 () Bool)

(assert (=> bm!11097 m!117145))

(declare-fun m!117147 () Bool)

(assert (=> b!105374 m!117147))

(declare-fun m!117149 () Bool)

(assert (=> b!105347 m!117149))

(declare-fun m!117151 () Bool)

(assert (=> b!105360 m!117151))

(assert (=> bm!11107 m!116915))

(declare-fun m!117153 () Bool)

(assert (=> b!105376 m!117153))

(declare-fun m!117155 () Bool)

(assert (=> b!105366 m!117155))

(assert (=> bm!11088 m!116875))

(declare-fun m!117157 () Bool)

(assert (=> bm!11088 m!117157))

(assert (=> b!105349 m!116875))

(declare-fun m!117159 () Bool)

(assert (=> b!105349 m!117159))

(declare-fun m!117161 () Bool)

(assert (=> bm!11103 m!117161))

(declare-fun m!117163 () Bool)

(assert (=> bm!11101 m!117163))

(assert (=> b!105353 m!116875))

(declare-fun m!117165 () Bool)

(assert (=> b!105353 m!117165))

(declare-fun m!117167 () Bool)

(assert (=> b!105359 m!117167))

(declare-fun m!117169 () Bool)

(assert (=> b!105359 m!117169))

(declare-fun m!117171 () Bool)

(assert (=> b!105359 m!117171))

(declare-fun m!117173 () Bool)

(assert (=> b!105359 m!117173))

(assert (=> b!105359 m!116875))

(declare-fun m!117175 () Bool)

(assert (=> b!105359 m!117175))

(assert (=> b!105359 m!117171))

(declare-fun m!117177 () Bool)

(assert (=> bm!11106 m!117177))

(assert (=> bm!11085 m!117169))

(declare-fun m!117179 () Bool)

(assert (=> bm!11085 m!117179))

(declare-fun m!117181 () Bool)

(assert (=> b!105350 m!117181))

(assert (=> bm!11099 m!116875))

(assert (=> bm!11099 m!117159))

(declare-fun m!117183 () Bool)

(assert (=> bm!11090 m!117183))

(assert (=> bm!11092 m!116875))

(declare-fun m!117185 () Bool)

(assert (=> bm!11092 m!117185))

(declare-fun m!117187 () Bool)

(assert (=> d!28689 m!117187))

(assert (=> d!28689 m!116897))

(assert (=> bm!11087 m!116875))

(declare-fun m!117189 () Bool)

(assert (=> bm!11087 m!117189))

(declare-fun m!117191 () Bool)

(assert (=> b!105370 m!117191))

(declare-fun m!117193 () Bool)

(assert (=> b!105345 m!117193))

(assert (=> b!105378 m!117143))

(declare-fun m!117195 () Bool)

(assert (=> b!105373 m!117195))

(assert (=> b!105067 d!28689))

(declare-fun d!28691 () Bool)

(declare-fun c!18314 () Bool)

(assert (=> d!28691 (= c!18314 ((_ is ValueCellFull!995) (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun e!68617 () V!3217)

(assert (=> d!28691 (= (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68617)))

(declare-fun b!105390 () Bool)

(declare-fun get!1333 (ValueCell!995 V!3217) V!3217)

(assert (=> b!105390 (= e!68617 (get!1333 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105391 () Bool)

(declare-fun get!1334 (ValueCell!995 V!3217) V!3217)

(assert (=> b!105391 (= e!68617 (get!1334 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28691 c!18314) b!105390))

(assert (= (and d!28691 (not c!18314)) b!105391))

(assert (=> b!105390 m!116919))

(assert (=> b!105390 m!116921))

(declare-fun m!117197 () Bool)

(assert (=> b!105390 m!117197))

(assert (=> b!105391 m!116919))

(assert (=> b!105391 m!116921))

(declare-fun m!117199 () Bool)

(assert (=> b!105391 m!117199))

(assert (=> b!105060 d!28691))

(declare-fun d!28693 () Bool)

(assert (=> d!28693 (not (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53823 () Unit!3218)

(declare-fun choose!68 (array!4325 (_ BitVec 32) (_ BitVec 64) List!1615) Unit!3218)

(assert (=> d!28693 (= lt!53823 (choose!68 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612)))))

(assert (=> d!28693 (bvslt (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!28693 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612)) lt!53823)))

(declare-fun bs!4315 () Bool)

(assert (= bs!4315 d!28693))

(assert (=> bs!4315 m!116875))

(assert (=> bs!4315 m!116911))

(assert (=> bs!4315 m!116875))

(declare-fun m!117201 () Bool)

(assert (=> bs!4315 m!117201))

(assert (=> b!105055 d!28693))

(declare-fun d!28695 () Bool)

(assert (=> d!28695 (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) from!355 Nil!1612)))

(declare-fun lt!53826 () Unit!3218)

(declare-fun choose!39 (array!4325 (_ BitVec 32) (_ BitVec 32)) Unit!3218)

(assert (=> d!28695 (= lt!53826 (choose!39 (_keys!4286 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!28695 (bvslt (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!28695 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000 from!355) lt!53826)))

(declare-fun bs!4316 () Bool)

(assert (= bs!4316 d!28695))

(assert (=> bs!4316 m!116907))

(declare-fun m!117203 () Bool)

(assert (=> bs!4316 m!117203))

(assert (=> b!105055 d!28695))

(declare-fun d!28697 () Bool)

(declare-fun res!52459 () Bool)

(declare-fun e!68622 () Bool)

(assert (=> d!28697 (=> res!52459 e!68622)))

(assert (=> d!28697 (= res!52459 (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!28697 (= (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!68622)))

(declare-fun b!105396 () Bool)

(declare-fun e!68623 () Bool)

(assert (=> b!105396 (= e!68622 e!68623)))

(declare-fun res!52460 () Bool)

(assert (=> b!105396 (=> (not res!52460) (not e!68623))))

(assert (=> b!105396 (= res!52460 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!105397 () Bool)

(assert (=> b!105397 (= e!68623 (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!28697 (not res!52459)) b!105396))

(assert (= (and b!105396 res!52460) b!105397))

(assert (=> d!28697 m!117049))

(assert (=> b!105397 m!116875))

(declare-fun m!117205 () Bool)

(assert (=> b!105397 m!117205))

(assert (=> b!105055 d!28697))

(declare-fun d!28699 () Bool)

(declare-fun e!68626 () Bool)

(assert (=> d!28699 e!68626))

(declare-fun c!18317 () Bool)

(assert (=> d!28699 (= c!18317 (and (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!53829 () Unit!3218)

(declare-fun choose!660 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) (_ BitVec 32) Int) Unit!3218)

(assert (=> d!28699 (= lt!53829 (choose!660 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(assert (=> d!28699 (validMask!0 (mask!6726 (v!2883 (underlying!355 thiss!992))))))

(assert (=> d!28699 (= (lemmaListMapContainsThenArrayContainsFrom!109 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))) lt!53829)))

(declare-fun b!105402 () Bool)

(assert (=> b!105402 (= e!68626 (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!105403 () Bool)

(assert (=> b!105403 (= e!68626 (ite (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!28699 c!18317) b!105402))

(assert (= (and d!28699 (not c!18317)) b!105403))

(assert (=> d!28699 m!116875))

(declare-fun m!117207 () Bool)

(assert (=> d!28699 m!117207))

(assert (=> d!28699 m!116871))

(assert (=> b!105402 m!116875))

(assert (=> b!105402 m!116911))

(assert (=> b!105055 d!28699))

(declare-fun b!105414 () Bool)

(declare-fun e!68638 () Bool)

(declare-fun call!11113 () Bool)

(assert (=> b!105414 (= e!68638 call!11113)))

(declare-fun b!105415 () Bool)

(assert (=> b!105415 (= e!68638 call!11113)))

(declare-fun b!105416 () Bool)

(declare-fun e!68636 () Bool)

(assert (=> b!105416 (= e!68636 e!68638)))

(declare-fun c!18320 () Bool)

(assert (=> b!105416 (= c!18320 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun d!28701 () Bool)

(declare-fun res!52469 () Bool)

(declare-fun e!68635 () Bool)

(assert (=> d!28701 (=> res!52469 e!68635)))

(assert (=> d!28701 (= res!52469 (bvsge from!355 (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!28701 (= (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) from!355 Nil!1612) e!68635)))

(declare-fun b!105417 () Bool)

(assert (=> b!105417 (= e!68635 e!68636)))

(declare-fun res!52468 () Bool)

(assert (=> b!105417 (=> (not res!52468) (not e!68636))))

(declare-fun e!68637 () Bool)

(assert (=> b!105417 (= res!52468 (not e!68637))))

(declare-fun res!52467 () Bool)

(assert (=> b!105417 (=> (not res!52467) (not e!68637))))

(assert (=> b!105417 (= res!52467 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105418 () Bool)

(declare-fun contains!822 (List!1615 (_ BitVec 64)) Bool)

(assert (=> b!105418 (= e!68637 (contains!822 Nil!1612 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun bm!11110 () Bool)

(assert (=> bm!11110 (= call!11113 (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)))))

(assert (= (and d!28701 (not res!52469)) b!105417))

(assert (= (and b!105417 res!52467) b!105418))

(assert (= (and b!105417 res!52468) b!105416))

(assert (= (and b!105416 c!18320) b!105414))

(assert (= (and b!105416 (not c!18320)) b!105415))

(assert (= (or b!105414 b!105415) bm!11110))

(assert (=> b!105416 m!116875))

(assert (=> b!105416 m!116875))

(declare-fun m!117209 () Bool)

(assert (=> b!105416 m!117209))

(assert (=> b!105417 m!116875))

(assert (=> b!105417 m!116875))

(assert (=> b!105417 m!117209))

(assert (=> b!105418 m!116875))

(assert (=> b!105418 m!116875))

(declare-fun m!117211 () Bool)

(assert (=> b!105418 m!117211))

(assert (=> bm!11110 m!116875))

(declare-fun m!117213 () Bool)

(assert (=> bm!11110 m!117213))

(assert (=> b!105055 d!28701))

(declare-fun d!28703 () Bool)

(assert (=> d!28703 (= (map!1270 newMap!16) (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun bs!4317 () Bool)

(assert (= bs!4317 d!28703))

(assert (=> bs!4317 m!117143))

(assert (=> b!105066 d!28703))

(declare-fun b!105461 () Bool)

(declare-fun e!68667 () Unit!3218)

(declare-fun Unit!3231 () Unit!3218)

(assert (=> b!105461 (= e!68667 Unit!3231)))

(declare-fun b!105462 () Bool)

(declare-fun e!68666 () ListLongMap!1543)

(declare-fun call!11132 () ListLongMap!1543)

(assert (=> b!105462 (= e!68666 call!11132)))

(declare-fun b!105463 () Bool)

(declare-fun e!68665 () Bool)

(declare-fun lt!53875 () ListLongMap!1543)

(assert (=> b!105463 (= e!68665 (= (apply!98 lt!53875 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!105464 () Bool)

(declare-fun c!18338 () Bool)

(assert (=> b!105464 (= c!18338 (and (not (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68669 () ListLongMap!1543)

(assert (=> b!105464 (= e!68669 e!68666)))

(declare-fun b!105465 () Bool)

(declare-fun e!68671 () Bool)

(declare-fun e!68674 () Bool)

(assert (=> b!105465 (= e!68671 e!68674)))

(declare-fun res!52496 () Bool)

(declare-fun call!11128 () Bool)

(assert (=> b!105465 (= res!52496 call!11128)))

(assert (=> b!105465 (=> (not res!52496) (not e!68674))))

(declare-fun bm!11125 () Bool)

(declare-fun call!11134 () ListLongMap!1543)

(declare-fun call!11133 () ListLongMap!1543)

(assert (=> bm!11125 (= call!11134 call!11133)))

(declare-fun b!105466 () Bool)

(declare-fun e!68670 () Bool)

(assert (=> b!105466 (= e!68670 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105467 () Bool)

(declare-fun res!52495 () Bool)

(declare-fun e!68673 () Bool)

(assert (=> b!105467 (=> (not res!52495) (not e!68673))))

(declare-fun e!68676 () Bool)

(assert (=> b!105467 (= res!52495 e!68676)))

(declare-fun res!52490 () Bool)

(assert (=> b!105467 (=> res!52490 e!68676)))

(declare-fun e!68675 () Bool)

(assert (=> b!105467 (= res!52490 (not e!68675))))

(declare-fun res!52489 () Bool)

(assert (=> b!105467 (=> (not res!52489) (not e!68675))))

(assert (=> b!105467 (= res!52489 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun bm!11126 () Bool)

(declare-fun call!11129 () ListLongMap!1543)

(assert (=> bm!11126 (= call!11132 call!11129)))

(declare-fun bm!11127 () Bool)

(declare-fun call!11130 () ListLongMap!1543)

(assert (=> bm!11127 (= call!11133 call!11130)))

(declare-fun b!105468 () Bool)

(declare-fun e!68677 () Bool)

(assert (=> b!105468 (= e!68677 (= (apply!98 lt!53875 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105468 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2307 (_values!2564 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> b!105468 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!105469 () Bool)

(declare-fun res!52492 () Bool)

(assert (=> b!105469 (=> (not res!52492) (not e!68673))))

(assert (=> b!105469 (= res!52492 e!68671)))

(declare-fun c!18337 () Bool)

(assert (=> b!105469 (= c!18337 (not (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105470 () Bool)

(assert (=> b!105470 (= e!68669 call!11132)))

(declare-fun b!105471 () Bool)

(declare-fun e!68668 () Bool)

(declare-fun call!11131 () Bool)

(assert (=> b!105471 (= e!68668 (not call!11131))))

(declare-fun bm!11128 () Bool)

(assert (=> bm!11128 (= call!11130 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!105472 () Bool)

(assert (=> b!105472 (= e!68674 (= (apply!98 lt!53875 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!105473 () Bool)

(assert (=> b!105473 (= e!68666 call!11134)))

(declare-fun b!105474 () Bool)

(assert (=> b!105474 (= e!68668 e!68665)))

(declare-fun res!52494 () Bool)

(assert (=> b!105474 (= res!52494 call!11131)))

(assert (=> b!105474 (=> (not res!52494) (not e!68665))))

(declare-fun c!18333 () Bool)

(declare-fun c!18336 () Bool)

(declare-fun bm!11129 () Bool)

(assert (=> bm!11129 (= call!11129 (+!135 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134)) (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun bm!11130 () Bool)

(assert (=> bm!11130 (= call!11131 (contains!820 lt!53875 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105475 () Bool)

(assert (=> b!105475 (= e!68675 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105476 () Bool)

(declare-fun e!68672 () ListLongMap!1543)

(assert (=> b!105476 (= e!68672 e!68669)))

(assert (=> b!105476 (= c!18336 (and (not (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105477 () Bool)

(assert (=> b!105477 (= e!68671 (not call!11128))))

(declare-fun b!105478 () Bool)

(assert (=> b!105478 (= e!68673 e!68668)))

(declare-fun c!18334 () Bool)

(assert (=> b!105478 (= c!18334 (not (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105479 () Bool)

(declare-fun lt!53877 () Unit!3218)

(assert (=> b!105479 (= e!68667 lt!53877)))

(declare-fun lt!53879 () ListLongMap!1543)

(assert (=> b!105479 (= lt!53879 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun lt!53890 () (_ BitVec 64))

(assert (=> b!105479 (= lt!53890 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53883 () (_ BitVec 64))

(assert (=> b!105479 (= lt!53883 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53889 () Unit!3218)

(declare-fun addStillContains!74 (ListLongMap!1543 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3218)

(assert (=> b!105479 (= lt!53889 (addStillContains!74 lt!53879 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53883))))

(assert (=> b!105479 (contains!820 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53883)))

(declare-fun lt!53886 () Unit!3218)

(assert (=> b!105479 (= lt!53886 lt!53889)))

(declare-fun lt!53892 () ListLongMap!1543)

(assert (=> b!105479 (= lt!53892 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun lt!53891 () (_ BitVec 64))

(assert (=> b!105479 (= lt!53891 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53876 () (_ BitVec 64))

(assert (=> b!105479 (= lt!53876 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53880 () Unit!3218)

(declare-fun addApplyDifferent!74 (ListLongMap!1543 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3218)

(assert (=> b!105479 (= lt!53880 (addApplyDifferent!74 lt!53892 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53876))))

(assert (=> b!105479 (= (apply!98 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53876) (apply!98 lt!53892 lt!53876))))

(declare-fun lt!53881 () Unit!3218)

(assert (=> b!105479 (= lt!53881 lt!53880)))

(declare-fun lt!53895 () ListLongMap!1543)

(assert (=> b!105479 (= lt!53895 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun lt!53885 () (_ BitVec 64))

(assert (=> b!105479 (= lt!53885 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53894 () (_ BitVec 64))

(assert (=> b!105479 (= lt!53894 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53878 () Unit!3218)

(assert (=> b!105479 (= lt!53878 (addApplyDifferent!74 lt!53895 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53894))))

(assert (=> b!105479 (= (apply!98 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53894) (apply!98 lt!53895 lt!53894))))

(declare-fun lt!53882 () Unit!3218)

(assert (=> b!105479 (= lt!53882 lt!53878)))

(declare-fun lt!53884 () ListLongMap!1543)

(assert (=> b!105479 (= lt!53884 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun lt!53874 () (_ BitVec 64))

(assert (=> b!105479 (= lt!53874 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53888 () (_ BitVec 64))

(assert (=> b!105479 (= lt!53888 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!105479 (= lt!53877 (addApplyDifferent!74 lt!53884 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53888))))

(assert (=> b!105479 (= (apply!98 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53888) (apply!98 lt!53884 lt!53888))))

(declare-fun b!105480 () Bool)

(assert (=> b!105480 (= e!68676 e!68677)))

(declare-fun res!52491 () Bool)

(assert (=> b!105480 (=> (not res!52491) (not e!68677))))

(assert (=> b!105480 (= res!52491 (contains!820 lt!53875 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105480 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!105481 () Bool)

(assert (=> b!105481 (= e!68672 (+!135 call!11129 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun d!28705 () Bool)

(assert (=> d!28705 e!68673))

(declare-fun res!52493 () Bool)

(assert (=> d!28705 (=> (not res!52493) (not e!68673))))

(assert (=> d!28705 (= res!52493 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun lt!53893 () ListLongMap!1543)

(assert (=> d!28705 (= lt!53875 lt!53893)))

(declare-fun lt!53887 () Unit!3218)

(assert (=> d!28705 (= lt!53887 e!68667)))

(declare-fun c!18335 () Bool)

(assert (=> d!28705 (= c!18335 e!68670)))

(declare-fun res!52488 () Bool)

(assert (=> d!28705 (=> (not res!52488) (not e!68670))))

(assert (=> d!28705 (= res!52488 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!28705 (= lt!53893 e!68672)))

(assert (=> d!28705 (= c!18333 (and (not (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28705 (validMask!0 (mask!6726 (v!2883 (underlying!355 thiss!992))))))

(assert (=> d!28705 (= (getCurrentListMap!464 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))) lt!53875)))

(declare-fun bm!11131 () Bool)

(assert (=> bm!11131 (= call!11128 (contains!820 lt!53875 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28705 c!18333) b!105481))

(assert (= (and d!28705 (not c!18333)) b!105476))

(assert (= (and b!105476 c!18336) b!105470))

(assert (= (and b!105476 (not c!18336)) b!105464))

(assert (= (and b!105464 c!18338) b!105462))

(assert (= (and b!105464 (not c!18338)) b!105473))

(assert (= (or b!105462 b!105473) bm!11125))

(assert (= (or b!105470 bm!11125) bm!11127))

(assert (= (or b!105470 b!105462) bm!11126))

(assert (= (or b!105481 bm!11127) bm!11128))

(assert (= (or b!105481 bm!11126) bm!11129))

(assert (= (and d!28705 res!52488) b!105466))

(assert (= (and d!28705 c!18335) b!105479))

(assert (= (and d!28705 (not c!18335)) b!105461))

(assert (= (and d!28705 res!52493) b!105467))

(assert (= (and b!105467 res!52489) b!105475))

(assert (= (and b!105467 (not res!52490)) b!105480))

(assert (= (and b!105480 res!52491) b!105468))

(assert (= (and b!105467 res!52495) b!105469))

(assert (= (and b!105469 c!18337) b!105465))

(assert (= (and b!105469 (not c!18337)) b!105477))

(assert (= (and b!105465 res!52496) b!105472))

(assert (= (or b!105465 b!105477) bm!11131))

(assert (= (and b!105469 res!52492) b!105478))

(assert (= (and b!105478 c!18334) b!105474))

(assert (= (and b!105478 (not c!18334)) b!105471))

(assert (= (and b!105474 res!52494) b!105463))

(assert (= (or b!105474 b!105471) bm!11130))

(declare-fun b_lambda!4703 () Bool)

(assert (=> (not b_lambda!4703) (not b!105468)))

(assert (=> b!105468 t!5686))

(declare-fun b_and!6501 () Bool)

(assert (= b_and!6497 (and (=> t!5686 result!3439) b_and!6501)))

(assert (=> b!105468 t!5688))

(declare-fun b_and!6503 () Bool)

(assert (= b_and!6499 (and (=> t!5688 result!3443) b_and!6503)))

(declare-fun m!117215 () Bool)

(assert (=> bm!11130 m!117215))

(declare-fun m!117217 () Bool)

(assert (=> b!105481 m!117217))

(assert (=> b!105468 m!116921))

(assert (=> b!105468 m!117049))

(declare-fun m!117219 () Bool)

(assert (=> b!105468 m!117219))

(assert (=> b!105468 m!117049))

(assert (=> b!105468 m!117055))

(assert (=> b!105468 m!117055))

(assert (=> b!105468 m!116921))

(assert (=> b!105468 m!117057))

(assert (=> bm!11128 m!116881))

(declare-fun m!117221 () Bool)

(assert (=> bm!11131 m!117221))

(assert (=> b!105466 m!117049))

(assert (=> b!105466 m!117049))

(assert (=> b!105466 m!117053))

(declare-fun m!117223 () Bool)

(assert (=> b!105472 m!117223))

(assert (=> b!105480 m!117049))

(assert (=> b!105480 m!117049))

(declare-fun m!117225 () Bool)

(assert (=> b!105480 m!117225))

(declare-fun m!117227 () Bool)

(assert (=> b!105479 m!117227))

(declare-fun m!117229 () Bool)

(assert (=> b!105479 m!117229))

(declare-fun m!117231 () Bool)

(assert (=> b!105479 m!117231))

(declare-fun m!117233 () Bool)

(assert (=> b!105479 m!117233))

(declare-fun m!117235 () Bool)

(assert (=> b!105479 m!117235))

(declare-fun m!117237 () Bool)

(assert (=> b!105479 m!117237))

(declare-fun m!117239 () Bool)

(assert (=> b!105479 m!117239))

(declare-fun m!117241 () Bool)

(assert (=> b!105479 m!117241))

(declare-fun m!117243 () Bool)

(assert (=> b!105479 m!117243))

(declare-fun m!117245 () Bool)

(assert (=> b!105479 m!117245))

(assert (=> b!105479 m!116881))

(declare-fun m!117247 () Bool)

(assert (=> b!105479 m!117247))

(declare-fun m!117249 () Bool)

(assert (=> b!105479 m!117249))

(assert (=> b!105479 m!117249))

(declare-fun m!117251 () Bool)

(assert (=> b!105479 m!117251))

(declare-fun m!117253 () Bool)

(assert (=> b!105479 m!117253))

(assert (=> b!105479 m!117235))

(assert (=> b!105479 m!117239))

(declare-fun m!117255 () Bool)

(assert (=> b!105479 m!117255))

(assert (=> b!105479 m!117049))

(assert (=> b!105479 m!117229))

(declare-fun m!117257 () Bool)

(assert (=> bm!11129 m!117257))

(declare-fun m!117259 () Bool)

(assert (=> b!105463 m!117259))

(assert (=> d!28705 m!116871))

(assert (=> b!105475 m!117049))

(assert (=> b!105475 m!117049))

(assert (=> b!105475 m!117053))

(assert (=> b!105066 d!28705))

(declare-fun condMapEmpty!3939 () Bool)

(declare-fun mapDefault!3939 () ValueCell!995)

(assert (=> mapNonEmpty!3923 (= condMapEmpty!3939 (= mapRest!3923 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3939)))))

(declare-fun e!68682 () Bool)

(declare-fun mapRes!3939 () Bool)

(assert (=> mapNonEmpty!3923 (= tp!9885 (and e!68682 mapRes!3939))))

(declare-fun mapNonEmpty!3939 () Bool)

(declare-fun tp!9915 () Bool)

(declare-fun e!68683 () Bool)

(assert (=> mapNonEmpty!3939 (= mapRes!3939 (and tp!9915 e!68683))))

(declare-fun mapValue!3939 () ValueCell!995)

(declare-fun mapRest!3939 () (Array (_ BitVec 32) ValueCell!995))

(declare-fun mapKey!3939 () (_ BitVec 32))

(assert (=> mapNonEmpty!3939 (= mapRest!3923 (store mapRest!3939 mapKey!3939 mapValue!3939))))

(declare-fun mapIsEmpty!3939 () Bool)

(assert (=> mapIsEmpty!3939 mapRes!3939))

(declare-fun b!105489 () Bool)

(assert (=> b!105489 (= e!68682 tp_is_empty!2677)))

(declare-fun b!105488 () Bool)

(assert (=> b!105488 (= e!68683 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3923 condMapEmpty!3939) mapIsEmpty!3939))

(assert (= (and mapNonEmpty!3923 (not condMapEmpty!3939)) mapNonEmpty!3939))

(assert (= (and mapNonEmpty!3939 ((_ is ValueCellFull!995) mapValue!3939)) b!105488))

(assert (= (and mapNonEmpty!3923 ((_ is ValueCellFull!995) mapDefault!3939)) b!105489))

(declare-fun m!117261 () Bool)

(assert (=> mapNonEmpty!3939 m!117261))

(declare-fun condMapEmpty!3940 () Bool)

(declare-fun mapDefault!3940 () ValueCell!995)

(assert (=> mapNonEmpty!3924 (= condMapEmpty!3940 (= mapRest!3924 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3940)))))

(declare-fun e!68684 () Bool)

(declare-fun mapRes!3940 () Bool)

(assert (=> mapNonEmpty!3924 (= tp!9887 (and e!68684 mapRes!3940))))

(declare-fun mapNonEmpty!3940 () Bool)

(declare-fun tp!9916 () Bool)

(declare-fun e!68685 () Bool)

(assert (=> mapNonEmpty!3940 (= mapRes!3940 (and tp!9916 e!68685))))

(declare-fun mapRest!3940 () (Array (_ BitVec 32) ValueCell!995))

(declare-fun mapValue!3940 () ValueCell!995)

(declare-fun mapKey!3940 () (_ BitVec 32))

(assert (=> mapNonEmpty!3940 (= mapRest!3924 (store mapRest!3940 mapKey!3940 mapValue!3940))))

(declare-fun mapIsEmpty!3940 () Bool)

(assert (=> mapIsEmpty!3940 mapRes!3940))

(declare-fun b!105491 () Bool)

(assert (=> b!105491 (= e!68684 tp_is_empty!2677)))

(declare-fun b!105490 () Bool)

(assert (=> b!105490 (= e!68685 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3924 condMapEmpty!3940) mapIsEmpty!3940))

(assert (= (and mapNonEmpty!3924 (not condMapEmpty!3940)) mapNonEmpty!3940))

(assert (= (and mapNonEmpty!3940 ((_ is ValueCellFull!995) mapValue!3940)) b!105490))

(assert (= (and mapNonEmpty!3924 ((_ is ValueCellFull!995) mapDefault!3940)) b!105491))

(declare-fun m!117263 () Bool)

(assert (=> mapNonEmpty!3940 m!117263))

(declare-fun b_lambda!4705 () Bool)

(assert (= b_lambda!4703 (or (and b!105054 b_free!2521) (and b!105064 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))) b_lambda!4705)))

(declare-fun b_lambda!4707 () Bool)

(assert (= b_lambda!4701 (or (and b!105054 b_free!2521) (and b!105064 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))) b_lambda!4707)))

(declare-fun b_lambda!4709 () Bool)

(assert (= b_lambda!4699 (or (and b!105054 b_free!2521) (and b!105064 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))) b_lambda!4709)))

(check-sat (not b!105245) (not b!105249) (not b!105230) (not b!105350) (not b!105468) (not bm!11101) (not b!105390) (not b!105417) (not b!105480) (not b!105247) (not b_lambda!4705) (not d!28705) (not b!105349) b_and!6501 (not d!28673) (not b!105235) (not b!105237) (not bm!11085) (not mapNonEmpty!3940) (not d!28699) (not b_lambda!4707) (not d!28683) (not b!105345) (not b!105244) (not d!28675) (not d!28677) (not d!28703) (not bm!11035) tp_is_empty!2677 (not bm!11128) (not b!105202) (not b!105228) (not b!105250) (not b!105231) (not b!105397) (not b!105418) (not bm!11087) (not b!105378) (not b!105259) b_and!6503 (not bm!11129) (not bm!11090) (not b!105359) (not b!105233) (not d!28671) (not d!28681) (not bm!11104) (not b!105353) (not b!105257) (not d!28679) (not bm!11106) (not d!28693) (not bm!11103) (not b!105391) (not bm!11097) (not bm!11110) (not b!105248) (not b_lambda!4709) (not bm!11099) (not bm!11130) (not b!105475) (not b!105463) (not b!105238) (not bm!11088) (not bm!11092) (not d!28695) (not mapNonEmpty!3939) (not b!105416) (not b_next!2523) (not b_lambda!4697) (not bm!11107) (not b!105352) (not b!105402) (not b!105479) (not b!105246) (not bm!11131) (not b!105236) (not b!105360) (not b!105472) (not b!105200) (not d!28689) (not b!105466) (not b_next!2521) (not d!28687) (not b!105243) (not b!105201) (not d!28669) (not b!105481))
(check-sat b_and!6501 b_and!6503 (not b_next!2521) (not b_next!2523))
(get-model)

(declare-fun d!28707 () Bool)

(assert (=> d!28707 (= (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105236 d!28707))

(declare-fun b!105500 () Bool)

(declare-fun e!68691 () (_ BitVec 32))

(declare-fun call!11137 () (_ BitVec 32))

(assert (=> b!105500 (= e!68691 (bvadd #b00000000000000000000000000000001 call!11137))))

(declare-fun b!105501 () Bool)

(declare-fun e!68690 () (_ BitVec 32))

(assert (=> b!105501 (= e!68690 #b00000000000000000000000000000000)))

(declare-fun d!28709 () Bool)

(declare-fun lt!53898 () (_ BitVec 32))

(assert (=> d!28709 (and (bvsge lt!53898 #b00000000000000000000000000000000) (bvsle lt!53898 (bvsub (size!2306 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28709 (= lt!53898 e!68690)))

(declare-fun c!18343 () Bool)

(assert (=> d!28709 (= c!18343 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!28709 (and (bvsle #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2306 (_keys!4286 newMap!16)) (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!28709 (= (arrayCountValidKeys!0 (_keys!4286 newMap!16) #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) lt!53898)))

(declare-fun b!105502 () Bool)

(assert (=> b!105502 (= e!68690 e!68691)))

(declare-fun c!18344 () Bool)

(assert (=> b!105502 (= c!18344 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105503 () Bool)

(assert (=> b!105503 (= e!68691 call!11137)))

(declare-fun bm!11134 () Bool)

(assert (=> bm!11134 (= call!11137 (arrayCountValidKeys!0 (_keys!4286 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))))))

(assert (= (and d!28709 c!18343) b!105501))

(assert (= (and d!28709 (not c!18343)) b!105502))

(assert (= (and b!105502 c!18344) b!105500))

(assert (= (and b!105502 (not c!18344)) b!105503))

(assert (= (or b!105500 b!105503) bm!11134))

(declare-fun m!117265 () Bool)

(assert (=> b!105502 m!117265))

(assert (=> b!105502 m!117265))

(declare-fun m!117267 () Bool)

(assert (=> b!105502 m!117267))

(declare-fun m!117269 () Bool)

(assert (=> bm!11134 m!117269))

(assert (=> b!105200 d!28709))

(declare-fun d!28711 () Bool)

(declare-fun lt!53907 () SeekEntryResult!262)

(assert (=> d!28711 (and (or ((_ is Undefined!262) lt!53907) (not ((_ is Found!262) lt!53907)) (and (bvsge (index!3197 lt!53907) #b00000000000000000000000000000000) (bvslt (index!3197 lt!53907) (size!2306 (_keys!4286 newMap!16))))) (or ((_ is Undefined!262) lt!53907) ((_ is Found!262) lt!53907) (not ((_ is MissingZero!262) lt!53907)) (and (bvsge (index!3196 lt!53907) #b00000000000000000000000000000000) (bvslt (index!3196 lt!53907) (size!2306 (_keys!4286 newMap!16))))) (or ((_ is Undefined!262) lt!53907) ((_ is Found!262) lt!53907) ((_ is MissingZero!262) lt!53907) (not ((_ is MissingVacant!262) lt!53907)) (and (bvsge (index!3199 lt!53907) #b00000000000000000000000000000000) (bvslt (index!3199 lt!53907) (size!2306 (_keys!4286 newMap!16))))) (or ((_ is Undefined!262) lt!53907) (ite ((_ is Found!262) lt!53907) (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53907)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (ite ((_ is MissingZero!262) lt!53907) (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3196 lt!53907)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!262) lt!53907) (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3199 lt!53907)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!68699 () SeekEntryResult!262)

(assert (=> d!28711 (= lt!53907 e!68699)))

(declare-fun c!18351 () Bool)

(declare-fun lt!53905 () SeekEntryResult!262)

(assert (=> d!28711 (= c!18351 (and ((_ is Intermediate!262) lt!53905) (undefined!1074 lt!53905)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4325 (_ BitVec 32)) SeekEntryResult!262)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!28711 (= lt!53905 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (mask!6726 newMap!16)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(assert (=> d!28711 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28711 (= (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)) lt!53907)))

(declare-fun e!68698 () SeekEntryResult!262)

(declare-fun b!105516 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4325 (_ BitVec 32)) SeekEntryResult!262)

(assert (=> b!105516 (= e!68698 (seekKeyOrZeroReturnVacant!0 (x!13647 lt!53905) (index!3198 lt!53905) (index!3198 lt!53905) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun b!105517 () Bool)

(declare-fun e!68700 () SeekEntryResult!262)

(assert (=> b!105517 (= e!68700 (Found!262 (index!3198 lt!53905)))))

(declare-fun b!105518 () Bool)

(assert (=> b!105518 (= e!68699 e!68700)))

(declare-fun lt!53906 () (_ BitVec 64))

(assert (=> b!105518 (= lt!53906 (select (arr!2050 (_keys!4286 newMap!16)) (index!3198 lt!53905)))))

(declare-fun c!18353 () Bool)

(assert (=> b!105518 (= c!18353 (= lt!53906 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105519 () Bool)

(assert (=> b!105519 (= e!68699 Undefined!262)))

(declare-fun b!105520 () Bool)

(assert (=> b!105520 (= e!68698 (MissingZero!262 (index!3198 lt!53905)))))

(declare-fun b!105521 () Bool)

(declare-fun c!18352 () Bool)

(assert (=> b!105521 (= c!18352 (= lt!53906 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105521 (= e!68700 e!68698)))

(assert (= (and d!28711 c!18351) b!105519))

(assert (= (and d!28711 (not c!18351)) b!105518))

(assert (= (and b!105518 c!18353) b!105517))

(assert (= (and b!105518 (not c!18353)) b!105521))

(assert (= (and b!105521 c!18352) b!105520))

(assert (= (and b!105521 (not c!18352)) b!105516))

(declare-fun m!117271 () Bool)

(assert (=> d!28711 m!117271))

(assert (=> d!28711 m!116875))

(declare-fun m!117273 () Bool)

(assert (=> d!28711 m!117273))

(declare-fun m!117275 () Bool)

(assert (=> d!28711 m!117275))

(declare-fun m!117277 () Bool)

(assert (=> d!28711 m!117277))

(declare-fun m!117279 () Bool)

(assert (=> d!28711 m!117279))

(assert (=> d!28711 m!117273))

(assert (=> d!28711 m!116875))

(declare-fun m!117281 () Bool)

(assert (=> d!28711 m!117281))

(assert (=> b!105516 m!116875))

(declare-fun m!117283 () Bool)

(assert (=> b!105516 m!117283))

(declare-fun m!117285 () Bool)

(assert (=> b!105518 m!117285))

(assert (=> b!105349 d!28711))

(declare-fun b!105522 () Bool)

(declare-fun e!68703 () Unit!3218)

(declare-fun Unit!3232 () Unit!3218)

(assert (=> b!105522 (= e!68703 Unit!3232)))

(declare-fun b!105523 () Bool)

(declare-fun e!68702 () ListLongMap!1543)

(declare-fun call!11142 () ListLongMap!1543)

(assert (=> b!105523 (= e!68702 call!11142)))

(declare-fun b!105524 () Bool)

(declare-fun e!68701 () Bool)

(declare-fun lt!53909 () ListLongMap!1543)

(assert (=> b!105524 (= e!68701 (= (apply!98 lt!53909 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!105525 () Bool)

(declare-fun c!18359 () Bool)

(assert (=> b!105525 (= c!18359 (and (not (= (bvand (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68705 () ListLongMap!1543)

(assert (=> b!105525 (= e!68705 e!68702)))

(declare-fun b!105526 () Bool)

(declare-fun e!68707 () Bool)

(declare-fun e!68710 () Bool)

(assert (=> b!105526 (= e!68707 e!68710)))

(declare-fun res!52505 () Bool)

(declare-fun call!11138 () Bool)

(assert (=> b!105526 (= res!52505 call!11138)))

(assert (=> b!105526 (=> (not res!52505) (not e!68710))))

(declare-fun bm!11135 () Bool)

(declare-fun call!11144 () ListLongMap!1543)

(declare-fun call!11143 () ListLongMap!1543)

(assert (=> bm!11135 (= call!11144 call!11143)))

(declare-fun b!105527 () Bool)

(declare-fun e!68706 () Bool)

(assert (=> b!105527 (= e!68706 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105528 () Bool)

(declare-fun res!52504 () Bool)

(declare-fun e!68709 () Bool)

(assert (=> b!105528 (=> (not res!52504) (not e!68709))))

(declare-fun e!68712 () Bool)

(assert (=> b!105528 (= res!52504 e!68712)))

(declare-fun res!52499 () Bool)

(assert (=> b!105528 (=> res!52499 e!68712)))

(declare-fun e!68711 () Bool)

(assert (=> b!105528 (= res!52499 (not e!68711))))

(declare-fun res!52498 () Bool)

(assert (=> b!105528 (=> (not res!52498) (not e!68711))))

(assert (=> b!105528 (= res!52498 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun bm!11136 () Bool)

(declare-fun call!11139 () ListLongMap!1543)

(assert (=> bm!11136 (= call!11142 call!11139)))

(declare-fun bm!11137 () Bool)

(declare-fun call!11140 () ListLongMap!1543)

(assert (=> bm!11137 (= call!11143 call!11140)))

(declare-fun e!68713 () Bool)

(declare-fun b!105529 () Bool)

(assert (=> b!105529 (= e!68713 (= (apply!98 lt!53909 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (ite c!18304 (_values!2564 newMap!16) lt!53795)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105529 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (ite c!18304 (_values!2564 newMap!16) lt!53795))))))

(assert (=> b!105529 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!105530 () Bool)

(declare-fun res!52501 () Bool)

(assert (=> b!105530 (=> (not res!52501) (not e!68709))))

(assert (=> b!105530 (= res!52501 e!68707)))

(declare-fun c!18358 () Bool)

(assert (=> b!105530 (= c!18358 (not (= (bvand (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105531 () Bool)

(assert (=> b!105531 (= e!68705 call!11142)))

(declare-fun b!105532 () Bool)

(declare-fun e!68704 () Bool)

(declare-fun call!11141 () Bool)

(assert (=> b!105532 (= e!68704 (not call!11141))))

(declare-fun bm!11138 () Bool)

(assert (=> bm!11138 (= call!11140 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite c!18304 (_values!2564 newMap!16) lt!53795) (mask!6726 newMap!16) (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105533 () Bool)

(assert (=> b!105533 (= e!68710 (= (apply!98 lt!53909 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))))

(declare-fun b!105534 () Bool)

(assert (=> b!105534 (= e!68702 call!11144)))

(declare-fun b!105535 () Bool)

(assert (=> b!105535 (= e!68704 e!68701)))

(declare-fun res!52503 () Bool)

(assert (=> b!105535 (= res!52503 call!11141)))

(assert (=> b!105535 (=> (not res!52503) (not e!68701))))

(declare-fun bm!11139 () Bool)

(declare-fun c!18357 () Bool)

(declare-fun c!18354 () Bool)

(assert (=> bm!11139 (= call!11139 (+!135 (ite c!18354 call!11140 (ite c!18357 call!11143 call!11144)) (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun bm!11140 () Bool)

(assert (=> bm!11140 (= call!11141 (contains!820 lt!53909 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105536 () Bool)

(assert (=> b!105536 (= e!68711 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105537 () Bool)

(declare-fun e!68708 () ListLongMap!1543)

(assert (=> b!105537 (= e!68708 e!68705)))

(assert (=> b!105537 (= c!18357 (and (not (= (bvand (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105538 () Bool)

(assert (=> b!105538 (= e!68707 (not call!11138))))

(declare-fun b!105539 () Bool)

(assert (=> b!105539 (= e!68709 e!68704)))

(declare-fun c!18355 () Bool)

(assert (=> b!105539 (= c!18355 (not (= (bvand (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105540 () Bool)

(declare-fun lt!53911 () Unit!3218)

(assert (=> b!105540 (= e!68703 lt!53911)))

(declare-fun lt!53913 () ListLongMap!1543)

(assert (=> b!105540 (= lt!53913 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite c!18304 (_values!2564 newMap!16) lt!53795) (mask!6726 newMap!16) (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53924 () (_ BitVec 64))

(assert (=> b!105540 (= lt!53924 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53917 () (_ BitVec 64))

(assert (=> b!105540 (= lt!53917 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53923 () Unit!3218)

(assert (=> b!105540 (= lt!53923 (addStillContains!74 lt!53913 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) lt!53917))))

(assert (=> b!105540 (contains!820 (+!135 lt!53913 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) lt!53917)))

(declare-fun lt!53920 () Unit!3218)

(assert (=> b!105540 (= lt!53920 lt!53923)))

(declare-fun lt!53926 () ListLongMap!1543)

(assert (=> b!105540 (= lt!53926 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite c!18304 (_values!2564 newMap!16) lt!53795) (mask!6726 newMap!16) (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53925 () (_ BitVec 64))

(assert (=> b!105540 (= lt!53925 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53910 () (_ BitVec 64))

(assert (=> b!105540 (= lt!53910 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53914 () Unit!3218)

(assert (=> b!105540 (= lt!53914 (addApplyDifferent!74 lt!53926 lt!53925 (minValue!2456 newMap!16) lt!53910))))

(assert (=> b!105540 (= (apply!98 (+!135 lt!53926 (tuple2!2381 lt!53925 (minValue!2456 newMap!16))) lt!53910) (apply!98 lt!53926 lt!53910))))

(declare-fun lt!53915 () Unit!3218)

(assert (=> b!105540 (= lt!53915 lt!53914)))

(declare-fun lt!53929 () ListLongMap!1543)

(assert (=> b!105540 (= lt!53929 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite c!18304 (_values!2564 newMap!16) lt!53795) (mask!6726 newMap!16) (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53919 () (_ BitVec 64))

(assert (=> b!105540 (= lt!53919 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53928 () (_ BitVec 64))

(assert (=> b!105540 (= lt!53928 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53912 () Unit!3218)

(assert (=> b!105540 (= lt!53912 (addApplyDifferent!74 lt!53929 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) lt!53928))))

(assert (=> b!105540 (= (apply!98 (+!135 lt!53929 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) lt!53928) (apply!98 lt!53929 lt!53928))))

(declare-fun lt!53916 () Unit!3218)

(assert (=> b!105540 (= lt!53916 lt!53912)))

(declare-fun lt!53918 () ListLongMap!1543)

(assert (=> b!105540 (= lt!53918 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite c!18304 (_values!2564 newMap!16) lt!53795) (mask!6726 newMap!16) (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53908 () (_ BitVec 64))

(assert (=> b!105540 (= lt!53908 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53922 () (_ BitVec 64))

(assert (=> b!105540 (= lt!53922 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105540 (= lt!53911 (addApplyDifferent!74 lt!53918 lt!53908 (minValue!2456 newMap!16) lt!53922))))

(assert (=> b!105540 (= (apply!98 (+!135 lt!53918 (tuple2!2381 lt!53908 (minValue!2456 newMap!16))) lt!53922) (apply!98 lt!53918 lt!53922))))

(declare-fun b!105541 () Bool)

(assert (=> b!105541 (= e!68712 e!68713)))

(declare-fun res!52500 () Bool)

(assert (=> b!105541 (=> (not res!52500) (not e!68713))))

(assert (=> b!105541 (= res!52500 (contains!820 lt!53909 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105541 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!105542 () Bool)

(assert (=> b!105542 (= e!68708 (+!135 call!11139 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun d!28713 () Bool)

(assert (=> d!28713 e!68709))

(declare-fun res!52502 () Bool)

(assert (=> d!28713 (=> (not res!52502) (not e!68709))))

(assert (=> d!28713 (= res!52502 (or (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))))

(declare-fun lt!53927 () ListLongMap!1543)

(assert (=> d!28713 (= lt!53909 lt!53927)))

(declare-fun lt!53921 () Unit!3218)

(assert (=> d!28713 (= lt!53921 e!68703)))

(declare-fun c!18356 () Bool)

(assert (=> d!28713 (= c!18356 e!68706)))

(declare-fun res!52497 () Bool)

(assert (=> d!28713 (=> (not res!52497) (not e!68706))))

(assert (=> d!28713 (= res!52497 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!28713 (= lt!53927 e!68708)))

(assert (=> d!28713 (= c!18354 (and (not (= (bvand (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28713 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28713 (= (getCurrentListMap!464 (_keys!4286 newMap!16) (ite c!18304 (_values!2564 newMap!16) lt!53795) (mask!6726 newMap!16) (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!53909)))

(declare-fun bm!11141 () Bool)

(assert (=> bm!11141 (= call!11138 (contains!820 lt!53909 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28713 c!18354) b!105542))

(assert (= (and d!28713 (not c!18354)) b!105537))

(assert (= (and b!105537 c!18357) b!105531))

(assert (= (and b!105537 (not c!18357)) b!105525))

(assert (= (and b!105525 c!18359) b!105523))

(assert (= (and b!105525 (not c!18359)) b!105534))

(assert (= (or b!105523 b!105534) bm!11135))

(assert (= (or b!105531 bm!11135) bm!11137))

(assert (= (or b!105531 b!105523) bm!11136))

(assert (= (or b!105542 bm!11137) bm!11138))

(assert (= (or b!105542 bm!11136) bm!11139))

(assert (= (and d!28713 res!52497) b!105527))

(assert (= (and d!28713 c!18356) b!105540))

(assert (= (and d!28713 (not c!18356)) b!105522))

(assert (= (and d!28713 res!52502) b!105528))

(assert (= (and b!105528 res!52498) b!105536))

(assert (= (and b!105528 (not res!52499)) b!105541))

(assert (= (and b!105541 res!52500) b!105529))

(assert (= (and b!105528 res!52504) b!105530))

(assert (= (and b!105530 c!18358) b!105526))

(assert (= (and b!105530 (not c!18358)) b!105538))

(assert (= (and b!105526 res!52505) b!105533))

(assert (= (or b!105526 b!105538) bm!11141))

(assert (= (and b!105530 res!52501) b!105539))

(assert (= (and b!105539 c!18355) b!105535))

(assert (= (and b!105539 (not c!18355)) b!105532))

(assert (= (and b!105535 res!52503) b!105524))

(assert (= (or b!105535 b!105532) bm!11140))

(declare-fun b_lambda!4711 () Bool)

(assert (=> (not b_lambda!4711) (not b!105529)))

(declare-fun t!5701 () Bool)

(declare-fun tb!2053 () Bool)

(assert (=> (and b!105054 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16)) t!5701) tb!2053))

(declare-fun result!3459 () Bool)

(assert (=> tb!2053 (= result!3459 tp_is_empty!2677)))

(assert (=> b!105529 t!5701))

(declare-fun b_and!6505 () Bool)

(assert (= b_and!6501 (and (=> t!5701 result!3459) b_and!6505)))

(declare-fun t!5703 () Bool)

(declare-fun tb!2055 () Bool)

(assert (=> (and b!105064 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 newMap!16)) t!5703) tb!2055))

(declare-fun result!3461 () Bool)

(assert (= result!3461 result!3459))

(assert (=> b!105529 t!5703))

(declare-fun b_and!6507 () Bool)

(assert (= b_and!6503 (and (=> t!5703 result!3461) b_and!6507)))

(declare-fun m!117287 () Bool)

(assert (=> bm!11140 m!117287))

(declare-fun m!117289 () Bool)

(assert (=> b!105542 m!117289))

(declare-fun m!117291 () Bool)

(assert (=> b!105529 m!117291))

(assert (=> b!105529 m!117265))

(declare-fun m!117293 () Bool)

(assert (=> b!105529 m!117293))

(assert (=> b!105529 m!117265))

(declare-fun m!117295 () Bool)

(assert (=> b!105529 m!117295))

(assert (=> b!105529 m!117295))

(assert (=> b!105529 m!117291))

(declare-fun m!117297 () Bool)

(assert (=> b!105529 m!117297))

(declare-fun m!117299 () Bool)

(assert (=> bm!11138 m!117299))

(declare-fun m!117301 () Bool)

(assert (=> bm!11141 m!117301))

(assert (=> b!105527 m!117265))

(assert (=> b!105527 m!117265))

(assert (=> b!105527 m!117267))

(declare-fun m!117303 () Bool)

(assert (=> b!105533 m!117303))

(assert (=> b!105541 m!117265))

(assert (=> b!105541 m!117265))

(declare-fun m!117305 () Bool)

(assert (=> b!105541 m!117305))

(declare-fun m!117307 () Bool)

(assert (=> b!105540 m!117307))

(declare-fun m!117309 () Bool)

(assert (=> b!105540 m!117309))

(declare-fun m!117311 () Bool)

(assert (=> b!105540 m!117311))

(declare-fun m!117313 () Bool)

(assert (=> b!105540 m!117313))

(declare-fun m!117315 () Bool)

(assert (=> b!105540 m!117315))

(declare-fun m!117317 () Bool)

(assert (=> b!105540 m!117317))

(declare-fun m!117319 () Bool)

(assert (=> b!105540 m!117319))

(declare-fun m!117321 () Bool)

(assert (=> b!105540 m!117321))

(declare-fun m!117323 () Bool)

(assert (=> b!105540 m!117323))

(declare-fun m!117325 () Bool)

(assert (=> b!105540 m!117325))

(assert (=> b!105540 m!117299))

(declare-fun m!117327 () Bool)

(assert (=> b!105540 m!117327))

(declare-fun m!117329 () Bool)

(assert (=> b!105540 m!117329))

(assert (=> b!105540 m!117329))

(declare-fun m!117331 () Bool)

(assert (=> b!105540 m!117331))

(declare-fun m!117333 () Bool)

(assert (=> b!105540 m!117333))

(assert (=> b!105540 m!117315))

(assert (=> b!105540 m!117319))

(declare-fun m!117335 () Bool)

(assert (=> b!105540 m!117335))

(assert (=> b!105540 m!117265))

(assert (=> b!105540 m!117309))

(declare-fun m!117337 () Bool)

(assert (=> bm!11139 m!117337))

(declare-fun m!117339 () Bool)

(assert (=> b!105524 m!117339))

(assert (=> d!28713 m!117277))

(assert (=> b!105536 m!117265))

(assert (=> b!105536 m!117265))

(assert (=> b!105536 m!117267))

(assert (=> bm!11103 d!28713))

(declare-fun call!11150 () Bool)

(declare-fun lt!53935 () SeekEntryResult!262)

(declare-fun c!18364 () Bool)

(declare-fun bm!11146 () Bool)

(assert (=> bm!11146 (= call!11150 (inRange!0 (ite c!18364 (index!3196 lt!53935) (index!3199 lt!53935)) (mask!6726 newMap!16)))))

(declare-fun b!105559 () Bool)

(assert (=> b!105559 (and (bvsge (index!3196 lt!53935) #b00000000000000000000000000000000) (bvslt (index!3196 lt!53935) (size!2306 (_keys!4286 newMap!16))))))

(declare-fun res!52517 () Bool)

(assert (=> b!105559 (= res!52517 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3196 lt!53935)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68725 () Bool)

(assert (=> b!105559 (=> (not res!52517) (not e!68725))))

(declare-fun b!105560 () Bool)

(declare-fun e!68722 () Bool)

(declare-fun call!11149 () Bool)

(assert (=> b!105560 (= e!68722 (not call!11149))))

(declare-fun bm!11147 () Bool)

(assert (=> bm!11147 (= call!11149 (arrayContainsKey!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!28715 () Bool)

(declare-fun e!68723 () Bool)

(assert (=> d!28715 e!68723))

(assert (=> d!28715 (= c!18364 ((_ is MissingZero!262) lt!53935))))

(assert (=> d!28715 (= lt!53935 (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun lt!53934 () Unit!3218)

(declare-fun choose!661 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) Int) Unit!3218)

(assert (=> d!28715 (= lt!53934 (choose!661 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(assert (=> d!28715 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28715 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)) lt!53934)))

(declare-fun b!105561 () Bool)

(declare-fun res!52515 () Bool)

(assert (=> b!105561 (=> (not res!52515) (not e!68722))))

(assert (=> b!105561 (= res!52515 call!11150)))

(declare-fun e!68724 () Bool)

(assert (=> b!105561 (= e!68724 e!68722)))

(declare-fun b!105562 () Bool)

(assert (=> b!105562 (= e!68723 e!68725)))

(declare-fun res!52514 () Bool)

(assert (=> b!105562 (= res!52514 call!11150)))

(assert (=> b!105562 (=> (not res!52514) (not e!68725))))

(declare-fun b!105563 () Bool)

(assert (=> b!105563 (= e!68723 e!68724)))

(declare-fun c!18365 () Bool)

(assert (=> b!105563 (= c!18365 ((_ is MissingVacant!262) lt!53935))))

(declare-fun b!105564 () Bool)

(assert (=> b!105564 (= e!68724 ((_ is Undefined!262) lt!53935))))

(declare-fun b!105565 () Bool)

(assert (=> b!105565 (= e!68725 (not call!11149))))

(declare-fun b!105566 () Bool)

(declare-fun res!52516 () Bool)

(assert (=> b!105566 (=> (not res!52516) (not e!68722))))

(assert (=> b!105566 (= res!52516 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3199 lt!53935)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105566 (and (bvsge (index!3199 lt!53935) #b00000000000000000000000000000000) (bvslt (index!3199 lt!53935) (size!2306 (_keys!4286 newMap!16))))))

(assert (= (and d!28715 c!18364) b!105562))

(assert (= (and d!28715 (not c!18364)) b!105563))

(assert (= (and b!105562 res!52514) b!105559))

(assert (= (and b!105559 res!52517) b!105565))

(assert (= (and b!105563 c!18365) b!105561))

(assert (= (and b!105563 (not c!18365)) b!105564))

(assert (= (and b!105561 res!52515) b!105566))

(assert (= (and b!105566 res!52516) b!105560))

(assert (= (or b!105562 b!105561) bm!11146))

(assert (= (or b!105565 b!105560) bm!11147))

(assert (=> d!28715 m!116875))

(assert (=> d!28715 m!117159))

(assert (=> d!28715 m!116875))

(declare-fun m!117341 () Bool)

(assert (=> d!28715 m!117341))

(assert (=> d!28715 m!117277))

(declare-fun m!117343 () Bool)

(assert (=> bm!11146 m!117343))

(declare-fun m!117345 () Bool)

(assert (=> b!105566 m!117345))

(assert (=> bm!11147 m!116875))

(assert (=> bm!11147 m!117157))

(declare-fun m!117347 () Bool)

(assert (=> b!105559 m!117347))

(assert (=> bm!11097 d!28715))

(declare-fun d!28717 () Bool)

(declare-fun get!1335 (Option!160) V!3217)

(assert (=> d!28717 (= (apply!98 lt!53698 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1335 (getValueByKey!154 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4318 () Bool)

(assert (= bs!4318 d!28717))

(assert (=> bs!4318 m!117049))

(declare-fun m!117349 () Bool)

(assert (=> bs!4318 m!117349))

(assert (=> bs!4318 m!117349))

(declare-fun m!117351 () Bool)

(assert (=> bs!4318 m!117351))

(assert (=> b!105237 d!28717))

(declare-fun d!28719 () Bool)

(declare-fun c!18366 () Bool)

(assert (=> d!28719 (= c!18366 ((_ is ValueCellFull!995) (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!68726 () V!3217)

(assert (=> d!28719 (= (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68726)))

(declare-fun b!105567 () Bool)

(assert (=> b!105567 (= e!68726 (get!1333 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105568 () Bool)

(assert (=> b!105568 (= e!68726 (get!1334 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28719 c!18366) b!105567))

(assert (= (and d!28719 (not c!18366)) b!105568))

(assert (=> b!105567 m!117055))

(assert (=> b!105567 m!116921))

(declare-fun m!117353 () Bool)

(assert (=> b!105567 m!117353))

(assert (=> b!105568 m!117055))

(assert (=> b!105568 m!116921))

(declare-fun m!117355 () Bool)

(assert (=> b!105568 m!117355))

(assert (=> b!105237 d!28719))

(declare-fun b!105569 () Bool)

(declare-fun e!68730 () Bool)

(declare-fun call!11151 () Bool)

(assert (=> b!105569 (= e!68730 call!11151)))

(declare-fun b!105570 () Bool)

(assert (=> b!105570 (= e!68730 call!11151)))

(declare-fun b!105571 () Bool)

(declare-fun e!68728 () Bool)

(assert (=> b!105571 (= e!68728 e!68730)))

(declare-fun c!18367 () Bool)

(assert (=> b!105571 (= c!18367 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!28721 () Bool)

(declare-fun res!52520 () Bool)

(declare-fun e!68727 () Bool)

(assert (=> d!28721 (=> res!52520 e!68727)))

(assert (=> d!28721 (= res!52520 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!28721 (= (arrayNoDuplicates!0 (_keys!4286 newMap!16) #b00000000000000000000000000000000 Nil!1612) e!68727)))

(declare-fun b!105572 () Bool)

(assert (=> b!105572 (= e!68727 e!68728)))

(declare-fun res!52519 () Bool)

(assert (=> b!105572 (=> (not res!52519) (not e!68728))))

(declare-fun e!68729 () Bool)

(assert (=> b!105572 (= res!52519 (not e!68729))))

(declare-fun res!52518 () Bool)

(assert (=> b!105572 (=> (not res!52518) (not e!68729))))

(assert (=> b!105572 (= res!52518 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105573 () Bool)

(assert (=> b!105573 (= e!68729 (contains!822 Nil!1612 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11148 () Bool)

(assert (=> bm!11148 (= call!11151 (arrayNoDuplicates!0 (_keys!4286 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18367 (Cons!1611 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) Nil!1612) Nil!1612)))))

(assert (= (and d!28721 (not res!52520)) b!105572))

(assert (= (and b!105572 res!52518) b!105573))

(assert (= (and b!105572 res!52519) b!105571))

(assert (= (and b!105571 c!18367) b!105569))

(assert (= (and b!105571 (not c!18367)) b!105570))

(assert (= (or b!105569 b!105570) bm!11148))

(assert (=> b!105571 m!117265))

(assert (=> b!105571 m!117265))

(assert (=> b!105571 m!117267))

(assert (=> b!105572 m!117265))

(assert (=> b!105572 m!117265))

(assert (=> b!105572 m!117267))

(assert (=> b!105573 m!117265))

(assert (=> b!105573 m!117265))

(declare-fun m!117357 () Bool)

(assert (=> b!105573 m!117357))

(assert (=> bm!11148 m!117265))

(declare-fun m!117359 () Bool)

(assert (=> bm!11148 m!117359))

(assert (=> b!105202 d!28721))

(declare-fun d!28723 () Bool)

(assert (=> d!28723 (= (get!1334 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105391 d!28723))

(declare-fun b!105574 () Bool)

(declare-fun e!68733 () Unit!3218)

(declare-fun Unit!3233 () Unit!3218)

(assert (=> b!105574 (= e!68733 Unit!3233)))

(declare-fun b!105575 () Bool)

(declare-fun e!68732 () ListLongMap!1543)

(declare-fun call!11156 () ListLongMap!1543)

(assert (=> b!105575 (= e!68732 call!11156)))

(declare-fun b!105576 () Bool)

(declare-fun e!68731 () Bool)

(declare-fun lt!53937 () ListLongMap!1543)

(assert (=> b!105576 (= e!68731 (= (apply!98 lt!53937 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!105577 () Bool)

(declare-fun c!18373 () Bool)

(assert (=> b!105577 (= c!18373 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68735 () ListLongMap!1543)

(assert (=> b!105577 (= e!68735 e!68732)))

(declare-fun b!105578 () Bool)

(declare-fun e!68737 () Bool)

(declare-fun e!68740 () Bool)

(assert (=> b!105578 (= e!68737 e!68740)))

(declare-fun res!52529 () Bool)

(declare-fun call!11152 () Bool)

(assert (=> b!105578 (= res!52529 call!11152)))

(assert (=> b!105578 (=> (not res!52529) (not e!68740))))

(declare-fun bm!11149 () Bool)

(declare-fun call!11158 () ListLongMap!1543)

(declare-fun call!11157 () ListLongMap!1543)

(assert (=> bm!11149 (= call!11158 call!11157)))

(declare-fun b!105579 () Bool)

(declare-fun e!68736 () Bool)

(assert (=> b!105579 (= e!68736 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105580 () Bool)

(declare-fun res!52528 () Bool)

(declare-fun e!68739 () Bool)

(assert (=> b!105580 (=> (not res!52528) (not e!68739))))

(declare-fun e!68742 () Bool)

(assert (=> b!105580 (= res!52528 e!68742)))

(declare-fun res!52523 () Bool)

(assert (=> b!105580 (=> res!52523 e!68742)))

(declare-fun e!68741 () Bool)

(assert (=> b!105580 (= res!52523 (not e!68741))))

(declare-fun res!52522 () Bool)

(assert (=> b!105580 (=> (not res!52522) (not e!68741))))

(assert (=> b!105580 (= res!52522 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun bm!11150 () Bool)

(declare-fun call!11153 () ListLongMap!1543)

(assert (=> bm!11150 (= call!11156 call!11153)))

(declare-fun bm!11151 () Bool)

(declare-fun call!11154 () ListLongMap!1543)

(assert (=> bm!11151 (= call!11157 call!11154)))

(declare-fun b!105581 () Bool)

(declare-fun e!68743 () Bool)

(assert (=> b!105581 (= e!68743 (= (apply!98 lt!53937 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105581 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (_values!2564 newMap!16))))))

(assert (=> b!105581 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!105582 () Bool)

(declare-fun res!52525 () Bool)

(assert (=> b!105582 (=> (not res!52525) (not e!68739))))

(assert (=> b!105582 (= res!52525 e!68737)))

(declare-fun c!18372 () Bool)

(assert (=> b!105582 (= c!18372 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105583 () Bool)

(assert (=> b!105583 (= e!68735 call!11156)))

(declare-fun b!105584 () Bool)

(declare-fun e!68734 () Bool)

(declare-fun call!11155 () Bool)

(assert (=> b!105584 (= e!68734 (not call!11155))))

(declare-fun bm!11152 () Bool)

(assert (=> bm!11152 (= call!11154 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105585 () Bool)

(assert (=> b!105585 (= e!68740 (= (apply!98 lt!53937 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!105586 () Bool)

(assert (=> b!105586 (= e!68732 call!11158)))

(declare-fun b!105587 () Bool)

(assert (=> b!105587 (= e!68734 e!68731)))

(declare-fun res!52527 () Bool)

(assert (=> b!105587 (= res!52527 call!11155)))

(assert (=> b!105587 (=> (not res!52527) (not e!68731))))

(declare-fun c!18371 () Bool)

(declare-fun bm!11153 () Bool)

(declare-fun c!18368 () Bool)

(assert (=> bm!11153 (= call!11153 (+!135 (ite c!18368 call!11154 (ite c!18371 call!11157 call!11158)) (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun bm!11154 () Bool)

(assert (=> bm!11154 (= call!11155 (contains!820 lt!53937 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105588 () Bool)

(assert (=> b!105588 (= e!68741 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105589 () Bool)

(declare-fun e!68738 () ListLongMap!1543)

(assert (=> b!105589 (= e!68738 e!68735)))

(assert (=> b!105589 (= c!18371 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105590 () Bool)

(assert (=> b!105590 (= e!68737 (not call!11152))))

(declare-fun b!105591 () Bool)

(assert (=> b!105591 (= e!68739 e!68734)))

(declare-fun c!18369 () Bool)

(assert (=> b!105591 (= c!18369 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105592 () Bool)

(declare-fun lt!53939 () Unit!3218)

(assert (=> b!105592 (= e!68733 lt!53939)))

(declare-fun lt!53941 () ListLongMap!1543)

(assert (=> b!105592 (= lt!53941 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53952 () (_ BitVec 64))

(assert (=> b!105592 (= lt!53952 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53945 () (_ BitVec 64))

(assert (=> b!105592 (= lt!53945 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53951 () Unit!3218)

(assert (=> b!105592 (= lt!53951 (addStillContains!74 lt!53941 lt!53952 (zeroValue!2456 newMap!16) lt!53945))))

(assert (=> b!105592 (contains!820 (+!135 lt!53941 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16))) lt!53945)))

(declare-fun lt!53948 () Unit!3218)

(assert (=> b!105592 (= lt!53948 lt!53951)))

(declare-fun lt!53954 () ListLongMap!1543)

(assert (=> b!105592 (= lt!53954 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53953 () (_ BitVec 64))

(assert (=> b!105592 (= lt!53953 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53938 () (_ BitVec 64))

(assert (=> b!105592 (= lt!53938 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53942 () Unit!3218)

(assert (=> b!105592 (= lt!53942 (addApplyDifferent!74 lt!53954 lt!53953 (minValue!2456 newMap!16) lt!53938))))

(assert (=> b!105592 (= (apply!98 (+!135 lt!53954 (tuple2!2381 lt!53953 (minValue!2456 newMap!16))) lt!53938) (apply!98 lt!53954 lt!53938))))

(declare-fun lt!53943 () Unit!3218)

(assert (=> b!105592 (= lt!53943 lt!53942)))

(declare-fun lt!53957 () ListLongMap!1543)

(assert (=> b!105592 (= lt!53957 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53947 () (_ BitVec 64))

(assert (=> b!105592 (= lt!53947 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53956 () (_ BitVec 64))

(assert (=> b!105592 (= lt!53956 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53940 () Unit!3218)

(assert (=> b!105592 (= lt!53940 (addApplyDifferent!74 lt!53957 lt!53947 (zeroValue!2456 newMap!16) lt!53956))))

(assert (=> b!105592 (= (apply!98 (+!135 lt!53957 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16))) lt!53956) (apply!98 lt!53957 lt!53956))))

(declare-fun lt!53944 () Unit!3218)

(assert (=> b!105592 (= lt!53944 lt!53940)))

(declare-fun lt!53946 () ListLongMap!1543)

(assert (=> b!105592 (= lt!53946 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53936 () (_ BitVec 64))

(assert (=> b!105592 (= lt!53936 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53950 () (_ BitVec 64))

(assert (=> b!105592 (= lt!53950 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105592 (= lt!53939 (addApplyDifferent!74 lt!53946 lt!53936 (minValue!2456 newMap!16) lt!53950))))

(assert (=> b!105592 (= (apply!98 (+!135 lt!53946 (tuple2!2381 lt!53936 (minValue!2456 newMap!16))) lt!53950) (apply!98 lt!53946 lt!53950))))

(declare-fun b!105593 () Bool)

(assert (=> b!105593 (= e!68742 e!68743)))

(declare-fun res!52524 () Bool)

(assert (=> b!105593 (=> (not res!52524) (not e!68743))))

(assert (=> b!105593 (= res!52524 (contains!820 lt!53937 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105593 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!105594 () Bool)

(assert (=> b!105594 (= e!68738 (+!135 call!11153 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun d!28725 () Bool)

(assert (=> d!28725 e!68739))

(declare-fun res!52526 () Bool)

(assert (=> d!28725 (=> (not res!52526) (not e!68739))))

(assert (=> d!28725 (= res!52526 (or (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))))

(declare-fun lt!53955 () ListLongMap!1543)

(assert (=> d!28725 (= lt!53937 lt!53955)))

(declare-fun lt!53949 () Unit!3218)

(assert (=> d!28725 (= lt!53949 e!68733)))

(declare-fun c!18370 () Bool)

(assert (=> d!28725 (= c!18370 e!68736)))

(declare-fun res!52521 () Bool)

(assert (=> d!28725 (=> (not res!52521) (not e!68736))))

(assert (=> d!28725 (= res!52521 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!28725 (= lt!53955 e!68738)))

(assert (=> d!28725 (= c!18368 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28725 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28725 (= (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!53937)))

(declare-fun bm!11155 () Bool)

(assert (=> bm!11155 (= call!11152 (contains!820 lt!53937 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28725 c!18368) b!105594))

(assert (= (and d!28725 (not c!18368)) b!105589))

(assert (= (and b!105589 c!18371) b!105583))

(assert (= (and b!105589 (not c!18371)) b!105577))

(assert (= (and b!105577 c!18373) b!105575))

(assert (= (and b!105577 (not c!18373)) b!105586))

(assert (= (or b!105575 b!105586) bm!11149))

(assert (= (or b!105583 bm!11149) bm!11151))

(assert (= (or b!105583 b!105575) bm!11150))

(assert (= (or b!105594 bm!11151) bm!11152))

(assert (= (or b!105594 bm!11150) bm!11153))

(assert (= (and d!28725 res!52521) b!105579))

(assert (= (and d!28725 c!18370) b!105592))

(assert (= (and d!28725 (not c!18370)) b!105574))

(assert (= (and d!28725 res!52526) b!105580))

(assert (= (and b!105580 res!52522) b!105588))

(assert (= (and b!105580 (not res!52523)) b!105593))

(assert (= (and b!105593 res!52524) b!105581))

(assert (= (and b!105580 res!52528) b!105582))

(assert (= (and b!105582 c!18372) b!105578))

(assert (= (and b!105582 (not c!18372)) b!105590))

(assert (= (and b!105578 res!52529) b!105585))

(assert (= (or b!105578 b!105590) bm!11155))

(assert (= (and b!105582 res!52525) b!105591))

(assert (= (and b!105591 c!18369) b!105587))

(assert (= (and b!105591 (not c!18369)) b!105584))

(assert (= (and b!105587 res!52527) b!105576))

(assert (= (or b!105587 b!105584) bm!11154))

(declare-fun b_lambda!4713 () Bool)

(assert (=> (not b_lambda!4713) (not b!105581)))

(assert (=> b!105581 t!5701))

(declare-fun b_and!6509 () Bool)

(assert (= b_and!6505 (and (=> t!5701 result!3459) b_and!6509)))

(assert (=> b!105581 t!5703))

(declare-fun b_and!6511 () Bool)

(assert (= b_and!6507 (and (=> t!5703 result!3461) b_and!6511)))

(declare-fun m!117361 () Bool)

(assert (=> bm!11154 m!117361))

(declare-fun m!117363 () Bool)

(assert (=> b!105594 m!117363))

(assert (=> b!105581 m!117291))

(assert (=> b!105581 m!117265))

(declare-fun m!117365 () Bool)

(assert (=> b!105581 m!117365))

(assert (=> b!105581 m!117265))

(declare-fun m!117367 () Bool)

(assert (=> b!105581 m!117367))

(assert (=> b!105581 m!117367))

(assert (=> b!105581 m!117291))

(declare-fun m!117369 () Bool)

(assert (=> b!105581 m!117369))

(declare-fun m!117371 () Bool)

(assert (=> bm!11152 m!117371))

(declare-fun m!117373 () Bool)

(assert (=> bm!11155 m!117373))

(assert (=> b!105579 m!117265))

(assert (=> b!105579 m!117265))

(assert (=> b!105579 m!117267))

(declare-fun m!117375 () Bool)

(assert (=> b!105585 m!117375))

(assert (=> b!105593 m!117265))

(assert (=> b!105593 m!117265))

(declare-fun m!117377 () Bool)

(assert (=> b!105593 m!117377))

(declare-fun m!117379 () Bool)

(assert (=> b!105592 m!117379))

(declare-fun m!117381 () Bool)

(assert (=> b!105592 m!117381))

(declare-fun m!117383 () Bool)

(assert (=> b!105592 m!117383))

(declare-fun m!117385 () Bool)

(assert (=> b!105592 m!117385))

(declare-fun m!117387 () Bool)

(assert (=> b!105592 m!117387))

(declare-fun m!117389 () Bool)

(assert (=> b!105592 m!117389))

(declare-fun m!117391 () Bool)

(assert (=> b!105592 m!117391))

(declare-fun m!117393 () Bool)

(assert (=> b!105592 m!117393))

(declare-fun m!117395 () Bool)

(assert (=> b!105592 m!117395))

(declare-fun m!117397 () Bool)

(assert (=> b!105592 m!117397))

(assert (=> b!105592 m!117371))

(declare-fun m!117399 () Bool)

(assert (=> b!105592 m!117399))

(declare-fun m!117401 () Bool)

(assert (=> b!105592 m!117401))

(assert (=> b!105592 m!117401))

(declare-fun m!117403 () Bool)

(assert (=> b!105592 m!117403))

(declare-fun m!117405 () Bool)

(assert (=> b!105592 m!117405))

(assert (=> b!105592 m!117387))

(assert (=> b!105592 m!117391))

(declare-fun m!117407 () Bool)

(assert (=> b!105592 m!117407))

(assert (=> b!105592 m!117265))

(assert (=> b!105592 m!117381))

(declare-fun m!117409 () Bool)

(assert (=> bm!11153 m!117409))

(declare-fun m!117411 () Bool)

(assert (=> b!105576 m!117411))

(assert (=> d!28725 m!117277))

(assert (=> b!105588 m!117265))

(assert (=> b!105588 m!117265))

(assert (=> b!105588 m!117267))

(assert (=> b!105352 d!28725))

(declare-fun d!28727 () Bool)

(declare-fun e!68744 () Bool)

(assert (=> d!28727 e!68744))

(declare-fun res!52530 () Bool)

(assert (=> d!28727 (=> res!52530 e!68744)))

(declare-fun lt!53958 () Bool)

(assert (=> d!28727 (= res!52530 (not lt!53958))))

(declare-fun lt!53961 () Bool)

(assert (=> d!28727 (= lt!53958 lt!53961)))

(declare-fun lt!53960 () Unit!3218)

(declare-fun e!68745 () Unit!3218)

(assert (=> d!28727 (= lt!53960 e!68745)))

(declare-fun c!18374 () Bool)

(assert (=> d!28727 (= c!18374 lt!53961)))

(assert (=> d!28727 (= lt!53961 (containsKey!158 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(assert (=> d!28727 (= (contains!820 call!11103 (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))) lt!53958)))

(declare-fun b!105595 () Bool)

(declare-fun lt!53959 () Unit!3218)

(assert (=> b!105595 (= e!68745 lt!53959)))

(assert (=> b!105595 (= lt!53959 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(assert (=> b!105595 (isDefined!108 (getValueByKey!154 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(declare-fun b!105596 () Bool)

(declare-fun Unit!3234 () Unit!3218)

(assert (=> b!105596 (= e!68745 Unit!3234)))

(declare-fun b!105597 () Bool)

(assert (=> b!105597 (= e!68744 (isDefined!108 (getValueByKey!154 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814)))))))

(assert (= (and d!28727 c!18374) b!105595))

(assert (= (and d!28727 (not c!18374)) b!105596))

(assert (= (and d!28727 (not res!52530)) b!105597))

(assert (=> d!28727 m!117171))

(declare-fun m!117413 () Bool)

(assert (=> d!28727 m!117413))

(assert (=> b!105595 m!117171))

(declare-fun m!117415 () Bool)

(assert (=> b!105595 m!117415))

(assert (=> b!105595 m!117171))

(declare-fun m!117417 () Bool)

(assert (=> b!105595 m!117417))

(assert (=> b!105595 m!117417))

(declare-fun m!117419 () Bool)

(assert (=> b!105595 m!117419))

(assert (=> b!105597 m!117171))

(assert (=> b!105597 m!117417))

(assert (=> b!105597 m!117417))

(assert (=> b!105597 m!117419))

(assert (=> b!105359 d!28727))

(declare-fun d!28729 () Bool)

(declare-fun e!68748 () Bool)

(assert (=> d!28729 e!68748))

(declare-fun res!52533 () Bool)

(assert (=> d!28729 (=> (not res!52533) (not e!68748))))

(assert (=> d!28729 (= res!52533 (and (bvsge (index!3197 lt!53814) #b00000000000000000000000000000000) (bvslt (index!3197 lt!53814) (size!2306 (_keys!4286 newMap!16)))))))

(declare-fun lt!53964 () Unit!3218)

(declare-fun choose!662 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) Int) Unit!3218)

(assert (=> d!28729 (= lt!53964 (choose!662 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3197 lt!53814) (defaultEntry!2581 newMap!16)))))

(assert (=> d!28729 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28729 (= (lemmaValidKeyInArrayIsInListMap!106 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3197 lt!53814) (defaultEntry!2581 newMap!16)) lt!53964)))

(declare-fun b!105600 () Bool)

(assert (=> b!105600 (= e!68748 (contains!820 (getCurrentListMap!464 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(assert (= (and d!28729 res!52533) b!105600))

(declare-fun m!117421 () Bool)

(assert (=> d!28729 m!117421))

(assert (=> d!28729 m!117277))

(declare-fun m!117423 () Bool)

(assert (=> b!105600 m!117423))

(assert (=> b!105600 m!117171))

(assert (=> b!105600 m!117423))

(assert (=> b!105600 m!117171))

(declare-fun m!117425 () Bool)

(assert (=> b!105600 m!117425))

(assert (=> b!105359 d!28729))

(declare-fun d!28731 () Bool)

(declare-fun e!68751 () Bool)

(assert (=> d!28731 e!68751))

(declare-fun res!52536 () Bool)

(assert (=> d!28731 (=> (not res!52536) (not e!68751))))

(assert (=> d!28731 (= res!52536 (and (bvsge (index!3197 lt!53814) #b00000000000000000000000000000000) (bvslt (index!3197 lt!53814) (size!2307 (_values!2564 newMap!16)))))))

(declare-fun lt!53967 () Unit!3218)

(declare-fun choose!663 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) (_ BitVec 64) V!3217 Int) Unit!3218)

(assert (=> d!28731 (= lt!53967 (choose!663 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3197 lt!53814) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 (defaultEntry!2581 newMap!16)))))

(assert (=> d!28731 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28731 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3197 lt!53814) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 (defaultEntry!2581 newMap!16)) lt!53967)))

(declare-fun b!105603 () Bool)

(assert (=> b!105603 (= e!68751 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (getCurrentListMap!464 (_keys!4286 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))))))

(assert (= (and d!28731 res!52536) b!105603))

(assert (=> d!28731 m!116875))

(declare-fun m!117427 () Bool)

(assert (=> d!28731 m!117427))

(assert (=> d!28731 m!117277))

(assert (=> b!105603 m!117143))

(assert (=> b!105603 m!117143))

(declare-fun m!117429 () Bool)

(assert (=> b!105603 m!117429))

(assert (=> b!105603 m!117169))

(declare-fun m!117431 () Bool)

(assert (=> b!105603 m!117431))

(assert (=> b!105359 d!28731))

(declare-fun d!28733 () Bool)

(declare-fun res!52541 () Bool)

(declare-fun e!68756 () Bool)

(assert (=> d!28733 (=> res!52541 e!68756)))

(assert (=> d!28733 (= res!52541 (and ((_ is Cons!1612) (toList!787 lt!53596)) (= (_1!1201 (h!2209 (toList!787 lt!53596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (=> d!28733 (= (containsKey!158 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) e!68756)))

(declare-fun b!105608 () Bool)

(declare-fun e!68757 () Bool)

(assert (=> b!105608 (= e!68756 e!68757)))

(declare-fun res!52542 () Bool)

(assert (=> b!105608 (=> (not res!52542) (not e!68757))))

(assert (=> b!105608 (= res!52542 (and (or (not ((_ is Cons!1612) (toList!787 lt!53596))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))) ((_ is Cons!1612) (toList!787 lt!53596)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(declare-fun b!105609 () Bool)

(assert (=> b!105609 (= e!68757 (containsKey!158 (t!5690 (toList!787 lt!53596)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (= (and d!28733 (not res!52541)) b!105608))

(assert (= (and b!105608 res!52542) b!105609))

(assert (=> b!105609 m!116875))

(declare-fun m!117433 () Bool)

(assert (=> b!105609 m!117433))

(assert (=> d!28687 d!28733))

(declare-fun d!28735 () Bool)

(declare-fun lt!53970 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!109 (List!1616) (InoxSet tuple2!2380))

(assert (=> d!28735 (= lt!53970 (select (content!109 (toList!787 lt!53720)) lt!53606))))

(declare-fun e!68762 () Bool)

(assert (=> d!28735 (= lt!53970 e!68762)))

(declare-fun res!52547 () Bool)

(assert (=> d!28735 (=> (not res!52547) (not e!68762))))

(assert (=> d!28735 (= res!52547 ((_ is Cons!1612) (toList!787 lt!53720)))))

(assert (=> d!28735 (= (contains!821 (toList!787 lt!53720) lt!53606) lt!53970)))

(declare-fun b!105614 () Bool)

(declare-fun e!68763 () Bool)

(assert (=> b!105614 (= e!68762 e!68763)))

(declare-fun res!52548 () Bool)

(assert (=> b!105614 (=> res!52548 e!68763)))

(assert (=> b!105614 (= res!52548 (= (h!2209 (toList!787 lt!53720)) lt!53606))))

(declare-fun b!105615 () Bool)

(assert (=> b!105615 (= e!68763 (contains!821 (t!5690 (toList!787 lt!53720)) lt!53606))))

(assert (= (and d!28735 res!52547) b!105614))

(assert (= (and b!105614 (not res!52548)) b!105615))

(declare-fun m!117435 () Bool)

(assert (=> d!28735 m!117435))

(declare-fun m!117437 () Bool)

(assert (=> d!28735 m!117437))

(declare-fun m!117439 () Bool)

(assert (=> b!105615 m!117439))

(assert (=> b!105248 d!28735))

(assert (=> b!105230 d!28707))

(declare-fun d!28737 () Bool)

(declare-fun e!68764 () Bool)

(assert (=> d!28737 e!68764))

(declare-fun res!52549 () Bool)

(assert (=> d!28737 (=> res!52549 e!68764)))

(declare-fun lt!53971 () Bool)

(assert (=> d!28737 (= res!52549 (not lt!53971))))

(declare-fun lt!53974 () Bool)

(assert (=> d!28737 (= lt!53971 lt!53974)))

(declare-fun lt!53973 () Unit!3218)

(declare-fun e!68765 () Unit!3218)

(assert (=> d!28737 (= lt!53973 e!68765)))

(declare-fun c!18375 () Bool)

(assert (=> d!28737 (= c!18375 lt!53974)))

(assert (=> d!28737 (= lt!53974 (containsKey!158 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!28737 (= (contains!820 lt!53875 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53971)))

(declare-fun b!105616 () Bool)

(declare-fun lt!53972 () Unit!3218)

(assert (=> b!105616 (= e!68765 lt!53972)))

(assert (=> b!105616 (= lt!53972 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105616 (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105617 () Bool)

(declare-fun Unit!3235 () Unit!3218)

(assert (=> b!105617 (= e!68765 Unit!3235)))

(declare-fun b!105618 () Bool)

(assert (=> b!105618 (= e!68764 (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!28737 c!18375) b!105616))

(assert (= (and d!28737 (not c!18375)) b!105617))

(assert (= (and d!28737 (not res!52549)) b!105618))

(assert (=> d!28737 m!117049))

(declare-fun m!117441 () Bool)

(assert (=> d!28737 m!117441))

(assert (=> b!105616 m!117049))

(declare-fun m!117443 () Bool)

(assert (=> b!105616 m!117443))

(assert (=> b!105616 m!117049))

(declare-fun m!117445 () Bool)

(assert (=> b!105616 m!117445))

(assert (=> b!105616 m!117445))

(declare-fun m!117447 () Bool)

(assert (=> b!105616 m!117447))

(assert (=> b!105618 m!117049))

(assert (=> b!105618 m!117445))

(assert (=> b!105618 m!117445))

(assert (=> b!105618 m!117447))

(assert (=> b!105480 d!28737))

(declare-fun b!105619 () Bool)

(declare-fun e!68768 () Unit!3218)

(declare-fun Unit!3236 () Unit!3218)

(assert (=> b!105619 (= e!68768 Unit!3236)))

(declare-fun b!105620 () Bool)

(declare-fun e!68767 () ListLongMap!1543)

(declare-fun call!11163 () ListLongMap!1543)

(assert (=> b!105620 (= e!68767 call!11163)))

(declare-fun b!105621 () Bool)

(declare-fun lt!53976 () ListLongMap!1543)

(declare-fun e!68766 () Bool)

(assert (=> b!105621 (= e!68766 (= (apply!98 lt!53976 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))

(declare-fun b!105622 () Bool)

(declare-fun c!18381 () Bool)

(assert (=> b!105622 (= c!18381 (and (not (= (bvand (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68770 () ListLongMap!1543)

(assert (=> b!105622 (= e!68770 e!68767)))

(declare-fun b!105623 () Bool)

(declare-fun e!68772 () Bool)

(declare-fun e!68775 () Bool)

(assert (=> b!105623 (= e!68772 e!68775)))

(declare-fun res!52558 () Bool)

(declare-fun call!11159 () Bool)

(assert (=> b!105623 (= res!52558 call!11159)))

(assert (=> b!105623 (=> (not res!52558) (not e!68775))))

(declare-fun bm!11156 () Bool)

(declare-fun call!11165 () ListLongMap!1543)

(declare-fun call!11164 () ListLongMap!1543)

(assert (=> bm!11156 (= call!11165 call!11164)))

(declare-fun b!105624 () Bool)

(declare-fun e!68771 () Bool)

(assert (=> b!105624 (= e!68771 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105625 () Bool)

(declare-fun res!52557 () Bool)

(declare-fun e!68774 () Bool)

(assert (=> b!105625 (=> (not res!52557) (not e!68774))))

(declare-fun e!68777 () Bool)

(assert (=> b!105625 (= res!52557 e!68777)))

(declare-fun res!52552 () Bool)

(assert (=> b!105625 (=> res!52552 e!68777)))

(declare-fun e!68776 () Bool)

(assert (=> b!105625 (= res!52552 (not e!68776))))

(declare-fun res!52551 () Bool)

(assert (=> b!105625 (=> (not res!52551) (not e!68776))))

(assert (=> b!105625 (= res!52551 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun bm!11157 () Bool)

(declare-fun call!11160 () ListLongMap!1543)

(assert (=> bm!11157 (= call!11163 call!11160)))

(declare-fun bm!11158 () Bool)

(declare-fun call!11161 () ListLongMap!1543)

(assert (=> bm!11158 (= call!11164 call!11161)))

(declare-fun e!68778 () Bool)

(declare-fun b!105626 () Bool)

(assert (=> b!105626 (= e!68778 (= (apply!98 lt!53976 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105626 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))))))))

(assert (=> b!105626 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!105627 () Bool)

(declare-fun res!52554 () Bool)

(assert (=> b!105627 (=> (not res!52554) (not e!68774))))

(assert (=> b!105627 (= res!52554 e!68772)))

(declare-fun c!18380 () Bool)

(assert (=> b!105627 (= c!18380 (not (= (bvand (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105628 () Bool)

(assert (=> b!105628 (= e!68770 call!11163)))

(declare-fun b!105629 () Bool)

(declare-fun e!68769 () Bool)

(declare-fun call!11162 () Bool)

(assert (=> b!105629 (= e!68769 (not call!11162))))

(declare-fun bm!11159 () Bool)

(assert (=> bm!11159 (= call!11161 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) (mask!6726 newMap!16) (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) (zeroValue!2456 newMap!16) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!105630 () Bool)

(assert (=> b!105630 (= e!68775 (= (apply!98 lt!53976 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!105631 () Bool)

(assert (=> b!105631 (= e!68767 call!11165)))

(declare-fun b!105632 () Bool)

(assert (=> b!105632 (= e!68769 e!68766)))

(declare-fun res!52556 () Bool)

(assert (=> b!105632 (= res!52556 call!11162)))

(assert (=> b!105632 (=> (not res!52556) (not e!68766))))

(declare-fun bm!11160 () Bool)

(declare-fun c!18379 () Bool)

(declare-fun c!18376 () Bool)

(assert (=> bm!11160 (= call!11160 (+!135 (ite c!18376 call!11161 (ite c!18379 call!11164 call!11165)) (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(declare-fun bm!11161 () Bool)

(assert (=> bm!11161 (= call!11162 (contains!820 lt!53976 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105633 () Bool)

(assert (=> b!105633 (= e!68776 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105634 () Bool)

(declare-fun e!68773 () ListLongMap!1543)

(assert (=> b!105634 (= e!68773 e!68770)))

(assert (=> b!105634 (= c!18379 (and (not (= (bvand (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105635 () Bool)

(assert (=> b!105635 (= e!68772 (not call!11159))))

(declare-fun b!105636 () Bool)

(assert (=> b!105636 (= e!68774 e!68769)))

(declare-fun c!18377 () Bool)

(assert (=> b!105636 (= c!18377 (not (= (bvand (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105637 () Bool)

(declare-fun lt!53978 () Unit!3218)

(assert (=> b!105637 (= e!68768 lt!53978)))

(declare-fun lt!53980 () ListLongMap!1543)

(assert (=> b!105637 (= lt!53980 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) (mask!6726 newMap!16) (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) (zeroValue!2456 newMap!16) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53991 () (_ BitVec 64))

(assert (=> b!105637 (= lt!53991 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53984 () (_ BitVec 64))

(assert (=> b!105637 (= lt!53984 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53990 () Unit!3218)

(assert (=> b!105637 (= lt!53990 (addStillContains!74 lt!53980 lt!53991 (zeroValue!2456 newMap!16) lt!53984))))

(assert (=> b!105637 (contains!820 (+!135 lt!53980 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16))) lt!53984)))

(declare-fun lt!53987 () Unit!3218)

(assert (=> b!105637 (= lt!53987 lt!53990)))

(declare-fun lt!53993 () ListLongMap!1543)

(assert (=> b!105637 (= lt!53993 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) (mask!6726 newMap!16) (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) (zeroValue!2456 newMap!16) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53992 () (_ BitVec 64))

(assert (=> b!105637 (= lt!53992 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53977 () (_ BitVec 64))

(assert (=> b!105637 (= lt!53977 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53981 () Unit!3218)

(assert (=> b!105637 (= lt!53981 (addApplyDifferent!74 lt!53993 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) lt!53977))))

(assert (=> b!105637 (= (apply!98 (+!135 lt!53993 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) lt!53977) (apply!98 lt!53993 lt!53977))))

(declare-fun lt!53982 () Unit!3218)

(assert (=> b!105637 (= lt!53982 lt!53981)))

(declare-fun lt!53996 () ListLongMap!1543)

(assert (=> b!105637 (= lt!53996 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) (mask!6726 newMap!16) (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) (zeroValue!2456 newMap!16) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53986 () (_ BitVec 64))

(assert (=> b!105637 (= lt!53986 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53995 () (_ BitVec 64))

(assert (=> b!105637 (= lt!53995 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53979 () Unit!3218)

(assert (=> b!105637 (= lt!53979 (addApplyDifferent!74 lt!53996 lt!53986 (zeroValue!2456 newMap!16) lt!53995))))

(assert (=> b!105637 (= (apply!98 (+!135 lt!53996 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16))) lt!53995) (apply!98 lt!53996 lt!53995))))

(declare-fun lt!53983 () Unit!3218)

(assert (=> b!105637 (= lt!53983 lt!53979)))

(declare-fun lt!53985 () ListLongMap!1543)

(assert (=> b!105637 (= lt!53985 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) (mask!6726 newMap!16) (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) (zeroValue!2456 newMap!16) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!53975 () (_ BitVec 64))

(assert (=> b!105637 (= lt!53975 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53989 () (_ BitVec 64))

(assert (=> b!105637 (= lt!53989 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105637 (= lt!53978 (addApplyDifferent!74 lt!53985 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) lt!53989))))

(assert (=> b!105637 (= (apply!98 (+!135 lt!53985 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) lt!53989) (apply!98 lt!53985 lt!53989))))

(declare-fun b!105638 () Bool)

(assert (=> b!105638 (= e!68777 e!68778)))

(declare-fun res!52553 () Bool)

(assert (=> b!105638 (=> (not res!52553) (not e!68778))))

(assert (=> b!105638 (= res!52553 (contains!820 lt!53976 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105638 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!105639 () Bool)

(assert (=> b!105639 (= e!68773 (+!135 call!11160 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))

(declare-fun d!28739 () Bool)

(assert (=> d!28739 e!68774))

(declare-fun res!52555 () Bool)

(assert (=> d!28739 (=> (not res!52555) (not e!68774))))

(assert (=> d!28739 (= res!52555 (or (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))))

(declare-fun lt!53994 () ListLongMap!1543)

(assert (=> d!28739 (= lt!53976 lt!53994)))

(declare-fun lt!53988 () Unit!3218)

(assert (=> d!28739 (= lt!53988 e!68768)))

(declare-fun c!18378 () Bool)

(assert (=> d!28739 (= c!18378 e!68771)))

(declare-fun res!52550 () Bool)

(assert (=> d!28739 (=> (not res!52550) (not e!68771))))

(assert (=> d!28739 (= res!52550 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!28739 (= lt!53994 e!68773)))

(assert (=> d!28739 (= c!18376 (and (not (= (bvand (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28739 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28739 (= (getCurrentListMap!464 (_keys!4286 newMap!16) (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) (mask!6726 newMap!16) (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) (zeroValue!2456 newMap!16) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!53976)))

(declare-fun bm!11162 () Bool)

(assert (=> bm!11162 (= call!11159 (contains!820 lt!53976 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28739 c!18376) b!105639))

(assert (= (and d!28739 (not c!18376)) b!105634))

(assert (= (and b!105634 c!18379) b!105628))

(assert (= (and b!105634 (not c!18379)) b!105622))

(assert (= (and b!105622 c!18381) b!105620))

(assert (= (and b!105622 (not c!18381)) b!105631))

(assert (= (or b!105620 b!105631) bm!11156))

(assert (= (or b!105628 bm!11156) bm!11158))

(assert (= (or b!105628 b!105620) bm!11157))

(assert (= (or b!105639 bm!11158) bm!11159))

(assert (= (or b!105639 bm!11157) bm!11160))

(assert (= (and d!28739 res!52550) b!105624))

(assert (= (and d!28739 c!18378) b!105637))

(assert (= (and d!28739 (not c!18378)) b!105619))

(assert (= (and d!28739 res!52555) b!105625))

(assert (= (and b!105625 res!52551) b!105633))

(assert (= (and b!105625 (not res!52552)) b!105638))

(assert (= (and b!105638 res!52553) b!105626))

(assert (= (and b!105625 res!52557) b!105627))

(assert (= (and b!105627 c!18380) b!105623))

(assert (= (and b!105627 (not c!18380)) b!105635))

(assert (= (and b!105623 res!52558) b!105630))

(assert (= (or b!105623 b!105635) bm!11162))

(assert (= (and b!105627 res!52554) b!105636))

(assert (= (and b!105636 c!18377) b!105632))

(assert (= (and b!105636 (not c!18377)) b!105629))

(assert (= (and b!105632 res!52556) b!105621))

(assert (= (or b!105632 b!105629) bm!11161))

(declare-fun b_lambda!4715 () Bool)

(assert (=> (not b_lambda!4715) (not b!105626)))

(assert (=> b!105626 t!5701))

(declare-fun b_and!6513 () Bool)

(assert (= b_and!6509 (and (=> t!5701 result!3459) b_and!6513)))

(assert (=> b!105626 t!5703))

(declare-fun b_and!6515 () Bool)

(assert (= b_and!6511 (and (=> t!5703 result!3461) b_and!6515)))

(declare-fun m!117449 () Bool)

(assert (=> bm!11161 m!117449))

(declare-fun m!117451 () Bool)

(assert (=> b!105639 m!117451))

(assert (=> b!105626 m!117291))

(assert (=> b!105626 m!117265))

(declare-fun m!117453 () Bool)

(assert (=> b!105626 m!117453))

(assert (=> b!105626 m!117265))

(declare-fun m!117455 () Bool)

(assert (=> b!105626 m!117455))

(assert (=> b!105626 m!117455))

(assert (=> b!105626 m!117291))

(declare-fun m!117457 () Bool)

(assert (=> b!105626 m!117457))

(declare-fun m!117459 () Bool)

(assert (=> bm!11159 m!117459))

(declare-fun m!117461 () Bool)

(assert (=> bm!11162 m!117461))

(assert (=> b!105624 m!117265))

(assert (=> b!105624 m!117265))

(assert (=> b!105624 m!117267))

(declare-fun m!117463 () Bool)

(assert (=> b!105630 m!117463))

(assert (=> b!105638 m!117265))

(assert (=> b!105638 m!117265))

(declare-fun m!117465 () Bool)

(assert (=> b!105638 m!117465))

(declare-fun m!117467 () Bool)

(assert (=> b!105637 m!117467))

(declare-fun m!117469 () Bool)

(assert (=> b!105637 m!117469))

(declare-fun m!117471 () Bool)

(assert (=> b!105637 m!117471))

(declare-fun m!117473 () Bool)

(assert (=> b!105637 m!117473))

(declare-fun m!117475 () Bool)

(assert (=> b!105637 m!117475))

(declare-fun m!117477 () Bool)

(assert (=> b!105637 m!117477))

(declare-fun m!117479 () Bool)

(assert (=> b!105637 m!117479))

(declare-fun m!117481 () Bool)

(assert (=> b!105637 m!117481))

(declare-fun m!117483 () Bool)

(assert (=> b!105637 m!117483))

(declare-fun m!117485 () Bool)

(assert (=> b!105637 m!117485))

(assert (=> b!105637 m!117459))

(declare-fun m!117487 () Bool)

(assert (=> b!105637 m!117487))

(declare-fun m!117489 () Bool)

(assert (=> b!105637 m!117489))

(assert (=> b!105637 m!117489))

(declare-fun m!117491 () Bool)

(assert (=> b!105637 m!117491))

(declare-fun m!117493 () Bool)

(assert (=> b!105637 m!117493))

(assert (=> b!105637 m!117475))

(assert (=> b!105637 m!117479))

(declare-fun m!117495 () Bool)

(assert (=> b!105637 m!117495))

(assert (=> b!105637 m!117265))

(assert (=> b!105637 m!117469))

(declare-fun m!117497 () Bool)

(assert (=> bm!11160 m!117497))

(declare-fun m!117499 () Bool)

(assert (=> b!105621 m!117499))

(assert (=> d!28739 m!117277))

(assert (=> b!105633 m!117265))

(assert (=> b!105633 m!117265))

(assert (=> b!105633 m!117267))

(assert (=> bm!11085 d!28739))

(declare-fun d!28741 () Bool)

(declare-fun lt!53997 () Bool)

(assert (=> d!28741 (= lt!53997 (select (content!109 (toList!787 lt!53727)) lt!53606))))

(declare-fun e!68779 () Bool)

(assert (=> d!28741 (= lt!53997 e!68779)))

(declare-fun res!52559 () Bool)

(assert (=> d!28741 (=> (not res!52559) (not e!68779))))

(assert (=> d!28741 (= res!52559 ((_ is Cons!1612) (toList!787 lt!53727)))))

(assert (=> d!28741 (= (contains!821 (toList!787 lt!53727) lt!53606) lt!53997)))

(declare-fun b!105640 () Bool)

(declare-fun e!68780 () Bool)

(assert (=> b!105640 (= e!68779 e!68780)))

(declare-fun res!52560 () Bool)

(assert (=> b!105640 (=> res!52560 e!68780)))

(assert (=> b!105640 (= res!52560 (= (h!2209 (toList!787 lt!53727)) lt!53606))))

(declare-fun b!105641 () Bool)

(assert (=> b!105641 (= e!68780 (contains!821 (t!5690 (toList!787 lt!53727)) lt!53606))))

(assert (= (and d!28741 res!52559) b!105640))

(assert (= (and b!105640 (not res!52560)) b!105641))

(declare-fun m!117501 () Bool)

(assert (=> d!28741 m!117501))

(declare-fun m!117503 () Bool)

(assert (=> d!28741 m!117503))

(declare-fun m!117505 () Bool)

(assert (=> b!105641 m!117505))

(assert (=> b!105250 d!28741))

(assert (=> b!105475 d!28707))

(declare-fun d!28743 () Bool)

(declare-fun lt!53998 () Bool)

(assert (=> d!28743 (= lt!53998 (select (content!109 (toList!787 lt!53712)) lt!53599))))

(declare-fun e!68781 () Bool)

(assert (=> d!28743 (= lt!53998 e!68781)))

(declare-fun res!52561 () Bool)

(assert (=> d!28743 (=> (not res!52561) (not e!68781))))

(assert (=> d!28743 (= res!52561 ((_ is Cons!1612) (toList!787 lt!53712)))))

(assert (=> d!28743 (= (contains!821 (toList!787 lt!53712) lt!53599) lt!53998)))

(declare-fun b!105642 () Bool)

(declare-fun e!68782 () Bool)

(assert (=> b!105642 (= e!68781 e!68782)))

(declare-fun res!52562 () Bool)

(assert (=> b!105642 (=> res!52562 e!68782)))

(assert (=> b!105642 (= res!52562 (= (h!2209 (toList!787 lt!53712)) lt!53599))))

(declare-fun b!105643 () Bool)

(assert (=> b!105643 (= e!68782 (contains!821 (t!5690 (toList!787 lt!53712)) lt!53599))))

(assert (= (and d!28743 res!52561) b!105642))

(assert (= (and b!105642 (not res!52562)) b!105643))

(declare-fun m!117507 () Bool)

(assert (=> d!28743 m!117507))

(declare-fun m!117509 () Bool)

(assert (=> d!28743 m!117509))

(declare-fun m!117511 () Bool)

(assert (=> b!105643 m!117511))

(assert (=> b!105244 d!28743))

(declare-fun d!28745 () Bool)

(assert (=> d!28745 (= (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (and (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105416 d!28745))

(declare-fun d!28747 () Bool)

(declare-fun e!68783 () Bool)

(assert (=> d!28747 e!68783))

(declare-fun res!52563 () Bool)

(assert (=> d!28747 (=> res!52563 e!68783)))

(declare-fun lt!53999 () Bool)

(assert (=> d!28747 (= res!52563 (not lt!53999))))

(declare-fun lt!54002 () Bool)

(assert (=> d!28747 (= lt!53999 lt!54002)))

(declare-fun lt!54001 () Unit!3218)

(declare-fun e!68784 () Unit!3218)

(assert (=> d!28747 (= lt!54001 e!68784)))

(declare-fun c!18382 () Bool)

(assert (=> d!28747 (= c!18382 lt!54002)))

(assert (=> d!28747 (= lt!54002 (containsKey!158 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!28747 (= (contains!820 lt!53698 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53999)))

(declare-fun b!105644 () Bool)

(declare-fun lt!54000 () Unit!3218)

(assert (=> b!105644 (= e!68784 lt!54000)))

(assert (=> b!105644 (= lt!54000 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105644 (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105645 () Bool)

(declare-fun Unit!3237 () Unit!3218)

(assert (=> b!105645 (= e!68784 Unit!3237)))

(declare-fun b!105646 () Bool)

(assert (=> b!105646 (= e!68783 (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!28747 c!18382) b!105644))

(assert (= (and d!28747 (not c!18382)) b!105645))

(assert (= (and d!28747 (not res!52563)) b!105646))

(assert (=> d!28747 m!117049))

(declare-fun m!117513 () Bool)

(assert (=> d!28747 m!117513))

(assert (=> b!105644 m!117049))

(declare-fun m!117515 () Bool)

(assert (=> b!105644 m!117515))

(assert (=> b!105644 m!117049))

(assert (=> b!105644 m!117349))

(assert (=> b!105644 m!117349))

(declare-fun m!117517 () Bool)

(assert (=> b!105644 m!117517))

(assert (=> b!105646 m!117049))

(assert (=> b!105646 m!117349))

(assert (=> b!105646 m!117349))

(assert (=> b!105646 m!117517))

(assert (=> b!105228 d!28747))

(assert (=> bm!11107 d!28703))

(declare-fun d!28749 () Bool)

(declare-fun lt!54003 () Bool)

(assert (=> d!28749 (= lt!54003 (select (content!109 (toList!787 lt!53716)) lt!53599))))

(declare-fun e!68785 () Bool)

(assert (=> d!28749 (= lt!54003 e!68785)))

(declare-fun res!52564 () Bool)

(assert (=> d!28749 (=> (not res!52564) (not e!68785))))

(assert (=> d!28749 (= res!52564 ((_ is Cons!1612) (toList!787 lt!53716)))))

(assert (=> d!28749 (= (contains!821 (toList!787 lt!53716) lt!53599) lt!54003)))

(declare-fun b!105647 () Bool)

(declare-fun e!68786 () Bool)

(assert (=> b!105647 (= e!68785 e!68786)))

(declare-fun res!52565 () Bool)

(assert (=> b!105647 (=> res!52565 e!68786)))

(assert (=> b!105647 (= res!52565 (= (h!2209 (toList!787 lt!53716)) lt!53599))))

(declare-fun b!105648 () Bool)

(assert (=> b!105648 (= e!68786 (contains!821 (t!5690 (toList!787 lt!53716)) lt!53599))))

(assert (= (and d!28749 res!52564) b!105647))

(assert (= (and b!105647 (not res!52565)) b!105648))

(declare-fun m!117519 () Bool)

(assert (=> d!28749 m!117519))

(declare-fun m!117521 () Bool)

(assert (=> d!28749 m!117521))

(declare-fun m!117523 () Bool)

(assert (=> b!105648 m!117523))

(assert (=> b!105246 d!28749))

(declare-fun d!28751 () Bool)

(assert (=> d!28751 (= (apply!98 lt!53895 lt!53894) (get!1335 (getValueByKey!154 (toList!787 lt!53895) lt!53894)))))

(declare-fun bs!4319 () Bool)

(assert (= bs!4319 d!28751))

(declare-fun m!117525 () Bool)

(assert (=> bs!4319 m!117525))

(assert (=> bs!4319 m!117525))

(declare-fun m!117527 () Bool)

(assert (=> bs!4319 m!117527))

(assert (=> b!105479 d!28751))

(declare-fun d!28753 () Bool)

(assert (=> d!28753 (= (apply!98 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53888) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53888)))))

(declare-fun bs!4320 () Bool)

(assert (= bs!4320 d!28753))

(declare-fun m!117529 () Bool)

(assert (=> bs!4320 m!117529))

(assert (=> bs!4320 m!117529))

(declare-fun m!117531 () Bool)

(assert (=> bs!4320 m!117531))

(assert (=> b!105479 d!28753))

(declare-fun d!28755 () Bool)

(declare-fun e!68787 () Bool)

(assert (=> d!28755 e!68787))

(declare-fun res!52567 () Bool)

(assert (=> d!28755 (=> (not res!52567) (not e!68787))))

(declare-fun lt!54007 () ListLongMap!1543)

(assert (=> d!28755 (= res!52567 (contains!820 lt!54007 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54004 () List!1616)

(assert (=> d!28755 (= lt!54007 (ListLongMap!1544 lt!54004))))

(declare-fun lt!54005 () Unit!3218)

(declare-fun lt!54006 () Unit!3218)

(assert (=> d!28755 (= lt!54005 lt!54006)))

(assert (=> d!28755 (= (getValueByKey!154 lt!54004 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28755 (= lt!54006 (lemmaContainsTupThenGetReturnValue!73 lt!54004 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28755 (= lt!54004 (insertStrictlySorted!76 (toList!787 lt!53895) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28755 (= (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54007)))

(declare-fun b!105649 () Bool)

(declare-fun res!52566 () Bool)

(assert (=> b!105649 (=> (not res!52566) (not e!68787))))

(assert (=> b!105649 (= res!52566 (= (getValueByKey!154 (toList!787 lt!54007) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!105650 () Bool)

(assert (=> b!105650 (= e!68787 (contains!821 (toList!787 lt!54007) (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!28755 res!52567) b!105649))

(assert (= (and b!105649 res!52566) b!105650))

(declare-fun m!117533 () Bool)

(assert (=> d!28755 m!117533))

(declare-fun m!117535 () Bool)

(assert (=> d!28755 m!117535))

(declare-fun m!117537 () Bool)

(assert (=> d!28755 m!117537))

(declare-fun m!117539 () Bool)

(assert (=> d!28755 m!117539))

(declare-fun m!117541 () Bool)

(assert (=> b!105649 m!117541))

(declare-fun m!117543 () Bool)

(assert (=> b!105650 m!117543))

(assert (=> b!105479 d!28755))

(declare-fun d!28757 () Bool)

(assert (=> d!28757 (= (apply!98 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53894) (apply!98 lt!53895 lt!53894))))

(declare-fun lt!54010 () Unit!3218)

(declare-fun choose!664 (ListLongMap!1543 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3218)

(assert (=> d!28757 (= lt!54010 (choose!664 lt!53895 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53894))))

(declare-fun e!68790 () Bool)

(assert (=> d!28757 e!68790))

(declare-fun res!52570 () Bool)

(assert (=> d!28757 (=> (not res!52570) (not e!68790))))

(assert (=> d!28757 (= res!52570 (contains!820 lt!53895 lt!53894))))

(assert (=> d!28757 (= (addApplyDifferent!74 lt!53895 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53894) lt!54010)))

(declare-fun b!105654 () Bool)

(assert (=> b!105654 (= e!68790 (not (= lt!53894 lt!53885)))))

(assert (= (and d!28757 res!52570) b!105654))

(declare-fun m!117545 () Bool)

(assert (=> d!28757 m!117545))

(assert (=> d!28757 m!117233))

(declare-fun m!117547 () Bool)

(assert (=> d!28757 m!117547))

(assert (=> d!28757 m!117239))

(assert (=> d!28757 m!117239))

(assert (=> d!28757 m!117241))

(assert (=> b!105479 d!28757))

(declare-fun d!28759 () Bool)

(declare-fun e!68791 () Bool)

(assert (=> d!28759 e!68791))

(declare-fun res!52571 () Bool)

(assert (=> d!28759 (=> res!52571 e!68791)))

(declare-fun lt!54011 () Bool)

(assert (=> d!28759 (= res!52571 (not lt!54011))))

(declare-fun lt!54014 () Bool)

(assert (=> d!28759 (= lt!54011 lt!54014)))

(declare-fun lt!54013 () Unit!3218)

(declare-fun e!68792 () Unit!3218)

(assert (=> d!28759 (= lt!54013 e!68792)))

(declare-fun c!18383 () Bool)

(assert (=> d!28759 (= c!18383 lt!54014)))

(assert (=> d!28759 (= lt!54014 (containsKey!158 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883))))

(assert (=> d!28759 (= (contains!820 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53883) lt!54011)))

(declare-fun b!105655 () Bool)

(declare-fun lt!54012 () Unit!3218)

(assert (=> b!105655 (= e!68792 lt!54012)))

(assert (=> b!105655 (= lt!54012 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883))))

(assert (=> b!105655 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883))))

(declare-fun b!105656 () Bool)

(declare-fun Unit!3238 () Unit!3218)

(assert (=> b!105656 (= e!68792 Unit!3238)))

(declare-fun b!105657 () Bool)

(assert (=> b!105657 (= e!68791 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883)))))

(assert (= (and d!28759 c!18383) b!105655))

(assert (= (and d!28759 (not c!18383)) b!105656))

(assert (= (and d!28759 (not res!52571)) b!105657))

(declare-fun m!117549 () Bool)

(assert (=> d!28759 m!117549))

(declare-fun m!117551 () Bool)

(assert (=> b!105655 m!117551))

(declare-fun m!117553 () Bool)

(assert (=> b!105655 m!117553))

(assert (=> b!105655 m!117553))

(declare-fun m!117555 () Bool)

(assert (=> b!105655 m!117555))

(assert (=> b!105657 m!117553))

(assert (=> b!105657 m!117553))

(assert (=> b!105657 m!117555))

(assert (=> b!105479 d!28759))

(declare-fun d!28761 () Bool)

(declare-fun e!68793 () Bool)

(assert (=> d!28761 e!68793))

(declare-fun res!52573 () Bool)

(assert (=> d!28761 (=> (not res!52573) (not e!68793))))

(declare-fun lt!54018 () ListLongMap!1543)

(assert (=> d!28761 (= res!52573 (contains!820 lt!54018 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54015 () List!1616)

(assert (=> d!28761 (= lt!54018 (ListLongMap!1544 lt!54015))))

(declare-fun lt!54016 () Unit!3218)

(declare-fun lt!54017 () Unit!3218)

(assert (=> d!28761 (= lt!54016 lt!54017)))

(assert (=> d!28761 (= (getValueByKey!154 lt!54015 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28761 (= lt!54017 (lemmaContainsTupThenGetReturnValue!73 lt!54015 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28761 (= lt!54015 (insertStrictlySorted!76 (toList!787 lt!53892) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28761 (= (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54018)))

(declare-fun b!105658 () Bool)

(declare-fun res!52572 () Bool)

(assert (=> b!105658 (=> (not res!52572) (not e!68793))))

(assert (=> b!105658 (= res!52572 (= (getValueByKey!154 (toList!787 lt!54018) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!105659 () Bool)

(assert (=> b!105659 (= e!68793 (contains!821 (toList!787 lt!54018) (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!28761 res!52573) b!105658))

(assert (= (and b!105658 res!52572) b!105659))

(declare-fun m!117557 () Bool)

(assert (=> d!28761 m!117557))

(declare-fun m!117559 () Bool)

(assert (=> d!28761 m!117559))

(declare-fun m!117561 () Bool)

(assert (=> d!28761 m!117561))

(declare-fun m!117563 () Bool)

(assert (=> d!28761 m!117563))

(declare-fun m!117565 () Bool)

(assert (=> b!105658 m!117565))

(declare-fun m!117567 () Bool)

(assert (=> b!105659 m!117567))

(assert (=> b!105479 d!28761))

(declare-fun d!28763 () Bool)

(assert (=> d!28763 (= (apply!98 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53876) (apply!98 lt!53892 lt!53876))))

(declare-fun lt!54019 () Unit!3218)

(assert (=> d!28763 (= lt!54019 (choose!664 lt!53892 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53876))))

(declare-fun e!68794 () Bool)

(assert (=> d!28763 e!68794))

(declare-fun res!52574 () Bool)

(assert (=> d!28763 (=> (not res!52574) (not e!68794))))

(assert (=> d!28763 (= res!52574 (contains!820 lt!53892 lt!53876))))

(assert (=> d!28763 (= (addApplyDifferent!74 lt!53892 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53876) lt!54019)))

(declare-fun b!105660 () Bool)

(assert (=> b!105660 (= e!68794 (not (= lt!53876 lt!53891)))))

(assert (= (and d!28763 res!52574) b!105660))

(declare-fun m!117569 () Bool)

(assert (=> d!28763 m!117569))

(assert (=> d!28763 m!117255))

(declare-fun m!117571 () Bool)

(assert (=> d!28763 m!117571))

(assert (=> d!28763 m!117249))

(assert (=> d!28763 m!117249))

(assert (=> d!28763 m!117251))

(assert (=> b!105479 d!28763))

(declare-fun d!28765 () Bool)

(declare-fun e!68795 () Bool)

(assert (=> d!28765 e!68795))

(declare-fun res!52576 () Bool)

(assert (=> d!28765 (=> (not res!52576) (not e!68795))))

(declare-fun lt!54023 () ListLongMap!1543)

(assert (=> d!28765 (= res!52576 (contains!820 lt!54023 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54020 () List!1616)

(assert (=> d!28765 (= lt!54023 (ListLongMap!1544 lt!54020))))

(declare-fun lt!54021 () Unit!3218)

(declare-fun lt!54022 () Unit!3218)

(assert (=> d!28765 (= lt!54021 lt!54022)))

(assert (=> d!28765 (= (getValueByKey!154 lt!54020 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28765 (= lt!54022 (lemmaContainsTupThenGetReturnValue!73 lt!54020 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28765 (= lt!54020 (insertStrictlySorted!76 (toList!787 lt!53879) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28765 (= (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54023)))

(declare-fun b!105661 () Bool)

(declare-fun res!52575 () Bool)

(assert (=> b!105661 (=> (not res!52575) (not e!68795))))

(assert (=> b!105661 (= res!52575 (= (getValueByKey!154 (toList!787 lt!54023) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!105662 () Bool)

(assert (=> b!105662 (= e!68795 (contains!821 (toList!787 lt!54023) (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!28765 res!52576) b!105661))

(assert (= (and b!105661 res!52575) b!105662))

(declare-fun m!117573 () Bool)

(assert (=> d!28765 m!117573))

(declare-fun m!117575 () Bool)

(assert (=> d!28765 m!117575))

(declare-fun m!117577 () Bool)

(assert (=> d!28765 m!117577))

(declare-fun m!117579 () Bool)

(assert (=> d!28765 m!117579))

(declare-fun m!117581 () Bool)

(assert (=> b!105661 m!117581))

(declare-fun m!117583 () Bool)

(assert (=> b!105662 m!117583))

(assert (=> b!105479 d!28765))

(declare-fun d!28767 () Bool)

(assert (=> d!28767 (= (apply!98 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53876) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53876)))))

(declare-fun bs!4321 () Bool)

(assert (= bs!4321 d!28767))

(declare-fun m!117585 () Bool)

(assert (=> bs!4321 m!117585))

(assert (=> bs!4321 m!117585))

(declare-fun m!117587 () Bool)

(assert (=> bs!4321 m!117587))

(assert (=> b!105479 d!28767))

(declare-fun d!28769 () Bool)

(assert (=> d!28769 (= (apply!98 lt!53884 lt!53888) (get!1335 (getValueByKey!154 (toList!787 lt!53884) lt!53888)))))

(declare-fun bs!4322 () Bool)

(assert (= bs!4322 d!28769))

(declare-fun m!117589 () Bool)

(assert (=> bs!4322 m!117589))

(assert (=> bs!4322 m!117589))

(declare-fun m!117591 () Bool)

(assert (=> bs!4322 m!117591))

(assert (=> b!105479 d!28769))

(declare-fun d!28771 () Bool)

(assert (=> d!28771 (contains!820 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53883)))

(declare-fun lt!54026 () Unit!3218)

(declare-fun choose!665 (ListLongMap!1543 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3218)

(assert (=> d!28771 (= lt!54026 (choose!665 lt!53879 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53883))))

(assert (=> d!28771 (contains!820 lt!53879 lt!53883)))

(assert (=> d!28771 (= (addStillContains!74 lt!53879 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53883) lt!54026)))

(declare-fun bs!4323 () Bool)

(assert (= bs!4323 d!28771))

(assert (=> bs!4323 m!117235))

(assert (=> bs!4323 m!117235))

(assert (=> bs!4323 m!117237))

(declare-fun m!117593 () Bool)

(assert (=> bs!4323 m!117593))

(declare-fun m!117595 () Bool)

(assert (=> bs!4323 m!117595))

(assert (=> b!105479 d!28771))

(assert (=> b!105479 d!28673))

(declare-fun d!28773 () Bool)

(assert (=> d!28773 (= (apply!98 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53894) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53894)))))

(declare-fun bs!4324 () Bool)

(assert (= bs!4324 d!28773))

(declare-fun m!117597 () Bool)

(assert (=> bs!4324 m!117597))

(assert (=> bs!4324 m!117597))

(declare-fun m!117599 () Bool)

(assert (=> bs!4324 m!117599))

(assert (=> b!105479 d!28773))

(declare-fun d!28775 () Bool)

(assert (=> d!28775 (= (apply!98 lt!53892 lt!53876) (get!1335 (getValueByKey!154 (toList!787 lt!53892) lt!53876)))))

(declare-fun bs!4325 () Bool)

(assert (= bs!4325 d!28775))

(declare-fun m!117601 () Bool)

(assert (=> bs!4325 m!117601))

(assert (=> bs!4325 m!117601))

(declare-fun m!117603 () Bool)

(assert (=> bs!4325 m!117603))

(assert (=> b!105479 d!28775))

(declare-fun d!28777 () Bool)

(assert (=> d!28777 (= (apply!98 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53888) (apply!98 lt!53884 lt!53888))))

(declare-fun lt!54027 () Unit!3218)

(assert (=> d!28777 (= lt!54027 (choose!664 lt!53884 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53888))))

(declare-fun e!68796 () Bool)

(assert (=> d!28777 e!68796))

(declare-fun res!52577 () Bool)

(assert (=> d!28777 (=> (not res!52577) (not e!68796))))

(assert (=> d!28777 (= res!52577 (contains!820 lt!53884 lt!53888))))

(assert (=> d!28777 (= (addApplyDifferent!74 lt!53884 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53888) lt!54027)))

(declare-fun b!105664 () Bool)

(assert (=> b!105664 (= e!68796 (not (= lt!53888 lt!53874)))))

(assert (= (and d!28777 res!52577) b!105664))

(declare-fun m!117605 () Bool)

(assert (=> d!28777 m!117605))

(assert (=> d!28777 m!117253))

(declare-fun m!117607 () Bool)

(assert (=> d!28777 m!117607))

(assert (=> d!28777 m!117229))

(assert (=> d!28777 m!117229))

(assert (=> d!28777 m!117231))

(assert (=> b!105479 d!28777))

(declare-fun d!28779 () Bool)

(declare-fun e!68797 () Bool)

(assert (=> d!28779 e!68797))

(declare-fun res!52579 () Bool)

(assert (=> d!28779 (=> (not res!52579) (not e!68797))))

(declare-fun lt!54031 () ListLongMap!1543)

(assert (=> d!28779 (= res!52579 (contains!820 lt!54031 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54028 () List!1616)

(assert (=> d!28779 (= lt!54031 (ListLongMap!1544 lt!54028))))

(declare-fun lt!54029 () Unit!3218)

(declare-fun lt!54030 () Unit!3218)

(assert (=> d!28779 (= lt!54029 lt!54030)))

(assert (=> d!28779 (= (getValueByKey!154 lt!54028 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28779 (= lt!54030 (lemmaContainsTupThenGetReturnValue!73 lt!54028 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28779 (= lt!54028 (insertStrictlySorted!76 (toList!787 lt!53884) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28779 (= (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54031)))

(declare-fun b!105665 () Bool)

(declare-fun res!52578 () Bool)

(assert (=> b!105665 (=> (not res!52578) (not e!68797))))

(assert (=> b!105665 (= res!52578 (= (getValueByKey!154 (toList!787 lt!54031) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!105666 () Bool)

(assert (=> b!105666 (= e!68797 (contains!821 (toList!787 lt!54031) (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!28779 res!52579) b!105665))

(assert (= (and b!105665 res!52578) b!105666))

(declare-fun m!117609 () Bool)

(assert (=> d!28779 m!117609))

(declare-fun m!117611 () Bool)

(assert (=> d!28779 m!117611))

(declare-fun m!117613 () Bool)

(assert (=> d!28779 m!117613))

(declare-fun m!117615 () Bool)

(assert (=> d!28779 m!117615))

(declare-fun m!117617 () Bool)

(assert (=> b!105665 m!117617))

(declare-fun m!117619 () Bool)

(assert (=> b!105666 m!117619))

(assert (=> b!105479 d!28779))

(declare-fun d!28781 () Bool)

(declare-fun lt!54034 () Bool)

(declare-fun content!110 (List!1615) (InoxSet (_ BitVec 64)))

(assert (=> d!28781 (= lt!54034 (select (content!110 Nil!1612) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun e!68802 () Bool)

(assert (=> d!28781 (= lt!54034 e!68802)))

(declare-fun res!52585 () Bool)

(assert (=> d!28781 (=> (not res!52585) (not e!68802))))

(assert (=> d!28781 (= res!52585 ((_ is Cons!1611) Nil!1612))))

(assert (=> d!28781 (= (contains!822 Nil!1612 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) lt!54034)))

(declare-fun b!105671 () Bool)

(declare-fun e!68803 () Bool)

(assert (=> b!105671 (= e!68802 e!68803)))

(declare-fun res!52584 () Bool)

(assert (=> b!105671 (=> res!52584 e!68803)))

(assert (=> b!105671 (= res!52584 (= (h!2208 Nil!1612) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105672 () Bool)

(assert (=> b!105672 (= e!68803 (contains!822 (t!5689 Nil!1612) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (= (and d!28781 res!52585) b!105671))

(assert (= (and b!105671 (not res!52584)) b!105672))

(declare-fun m!117621 () Bool)

(assert (=> d!28781 m!117621))

(assert (=> d!28781 m!116875))

(declare-fun m!117623 () Bool)

(assert (=> d!28781 m!117623))

(assert (=> b!105672 m!116875))

(declare-fun m!117625 () Bool)

(assert (=> b!105672 m!117625))

(assert (=> b!105418 d!28781))

(declare-fun d!28783 () Bool)

(declare-fun e!68804 () Bool)

(assert (=> d!28783 e!68804))

(declare-fun res!52586 () Bool)

(assert (=> d!28783 (=> res!52586 e!68804)))

(declare-fun lt!54035 () Bool)

(assert (=> d!28783 (= res!52586 (not lt!54035))))

(declare-fun lt!54038 () Bool)

(assert (=> d!28783 (= lt!54035 lt!54038)))

(declare-fun lt!54037 () Unit!3218)

(declare-fun e!68805 () Unit!3218)

(assert (=> d!28783 (= lt!54037 e!68805)))

(declare-fun c!18384 () Bool)

(assert (=> d!28783 (= c!18384 lt!54038)))

(assert (=> d!28783 (= lt!54038 (containsKey!158 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!28783 (= (contains!820 call!11088 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) lt!54035)))

(declare-fun b!105673 () Bool)

(declare-fun lt!54036 () Unit!3218)

(assert (=> b!105673 (= e!68805 lt!54036)))

(assert (=> b!105673 (= lt!54036 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> b!105673 (isDefined!108 (getValueByKey!154 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105674 () Bool)

(declare-fun Unit!3239 () Unit!3218)

(assert (=> b!105674 (= e!68805 Unit!3239)))

(declare-fun b!105675 () Bool)

(assert (=> b!105675 (= e!68804 (isDefined!108 (getValueByKey!154 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (= (and d!28783 c!18384) b!105673))

(assert (= (and d!28783 (not c!18384)) b!105674))

(assert (= (and d!28783 (not res!52586)) b!105675))

(assert (=> d!28783 m!116875))

(declare-fun m!117627 () Bool)

(assert (=> d!28783 m!117627))

(assert (=> b!105673 m!116875))

(declare-fun m!117629 () Bool)

(assert (=> b!105673 m!117629))

(assert (=> b!105673 m!116875))

(declare-fun m!117631 () Bool)

(assert (=> b!105673 m!117631))

(assert (=> b!105673 m!117631))

(declare-fun m!117633 () Bool)

(assert (=> b!105673 m!117633))

(assert (=> b!105675 m!116875))

(assert (=> b!105675 m!117631))

(assert (=> b!105675 m!117631))

(assert (=> b!105675 m!117633))

(assert (=> b!105353 d!28783))

(assert (=> d!28705 d!28685))

(declare-fun d!28785 () Bool)

(declare-fun e!68806 () Bool)

(assert (=> d!28785 e!68806))

(declare-fun res!52588 () Bool)

(assert (=> d!28785 (=> (not res!52588) (not e!68806))))

(declare-fun lt!54042 () ListLongMap!1543)

(assert (=> d!28785 (= res!52588 (contains!820 lt!54042 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun lt!54039 () List!1616)

(assert (=> d!28785 (= lt!54042 (ListLongMap!1544 lt!54039))))

(declare-fun lt!54040 () Unit!3218)

(declare-fun lt!54041 () Unit!3218)

(assert (=> d!28785 (= lt!54040 lt!54041)))

(assert (=> d!28785 (= (getValueByKey!154 lt!54039 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) (Some!159 (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!28785 (= lt!54041 (lemmaContainsTupThenGetReturnValue!73 lt!54039 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!28785 (= lt!54039 (insertStrictlySorted!76 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134))) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!28785 (= (+!135 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134)) (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54042)))

(declare-fun b!105676 () Bool)

(declare-fun res!52587 () Bool)

(assert (=> b!105676 (=> (not res!52587) (not e!68806))))

(assert (=> b!105676 (= res!52587 (= (getValueByKey!154 (toList!787 lt!54042) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) (Some!159 (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun b!105677 () Bool)

(assert (=> b!105677 (= e!68806 (contains!821 (toList!787 lt!54042) (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (= (and d!28785 res!52588) b!105676))

(assert (= (and b!105676 res!52587) b!105677))

(declare-fun m!117635 () Bool)

(assert (=> d!28785 m!117635))

(declare-fun m!117637 () Bool)

(assert (=> d!28785 m!117637))

(declare-fun m!117639 () Bool)

(assert (=> d!28785 m!117639))

(declare-fun m!117641 () Bool)

(assert (=> d!28785 m!117641))

(declare-fun m!117643 () Bool)

(assert (=> b!105676 m!117643))

(declare-fun m!117645 () Bool)

(assert (=> b!105677 m!117645))

(assert (=> bm!11129 d!28785))

(declare-fun d!28787 () Bool)

(assert (=> d!28787 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53811 lt!53601 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54045 () Unit!3218)

(declare-fun choose!666 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 V!3217 Int) Unit!3218)

(assert (=> d!28787 (= lt!54045 (choose!666 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) lt!53811 (zeroValue!2456 newMap!16) lt!53601 (minValue!2456 newMap!16) (defaultEntry!2581 newMap!16)))))

(assert (=> d!28787 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28787 (= (lemmaChangeZeroKeyThenAddPairToListMap!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) lt!53811 (zeroValue!2456 newMap!16) lt!53601 (minValue!2456 newMap!16) (defaultEntry!2581 newMap!16)) lt!54045)))

(declare-fun bs!4326 () Bool)

(assert (= bs!4326 d!28787))

(assert (=> bs!4326 m!117143))

(declare-fun m!117647 () Bool)

(assert (=> bs!4326 m!117647))

(declare-fun m!117649 () Bool)

(assert (=> bs!4326 m!117649))

(assert (=> bs!4326 m!117143))

(declare-fun m!117651 () Bool)

(assert (=> bs!4326 m!117651))

(assert (=> bs!4326 m!117277))

(assert (=> b!105350 d!28787))

(declare-fun d!28789 () Bool)

(declare-fun e!68809 () Bool)

(assert (=> d!28789 e!68809))

(declare-fun c!18387 () Bool)

(assert (=> d!28789 (= c!18387 (and (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!28789 true))

(declare-fun _$29!141 () Unit!3218)

(assert (=> d!28789 (= (choose!660 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))) _$29!141)))

(declare-fun b!105682 () Bool)

(assert (=> b!105682 (= e!68809 (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!105683 () Bool)

(assert (=> b!105683 (= e!68809 (ite (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!28789 c!18387) b!105682))

(assert (= (and d!28789 (not c!18387)) b!105683))

(assert (=> b!105682 m!116875))

(assert (=> b!105682 m!116911))

(assert (=> d!28699 d!28789))

(assert (=> d!28699 d!28685))

(declare-fun d!28791 () Bool)

(declare-fun res!52589 () Bool)

(declare-fun e!68810 () Bool)

(assert (=> d!28791 (=> (not res!52589) (not e!68810))))

(assert (=> d!28791 (= res!52589 (simpleValid!74 (_2!1202 lt!53812)))))

(assert (=> d!28791 (= (valid!422 (_2!1202 lt!53812)) e!68810)))

(declare-fun b!105684 () Bool)

(declare-fun res!52590 () Bool)

(assert (=> b!105684 (=> (not res!52590) (not e!68810))))

(assert (=> b!105684 (= res!52590 (= (arrayCountValidKeys!0 (_keys!4286 (_2!1202 lt!53812)) #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))) (_size!498 (_2!1202 lt!53812))))))

(declare-fun b!105685 () Bool)

(declare-fun res!52591 () Bool)

(assert (=> b!105685 (=> (not res!52591) (not e!68810))))

(assert (=> b!105685 (= res!52591 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4286 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812))))))

(declare-fun b!105686 () Bool)

(assert (=> b!105686 (= e!68810 (arrayNoDuplicates!0 (_keys!4286 (_2!1202 lt!53812)) #b00000000000000000000000000000000 Nil!1612))))

(assert (= (and d!28791 res!52589) b!105684))

(assert (= (and b!105684 res!52590) b!105685))

(assert (= (and b!105685 res!52591) b!105686))

(declare-fun m!117653 () Bool)

(assert (=> d!28791 m!117653))

(declare-fun m!117655 () Bool)

(assert (=> b!105684 m!117655))

(declare-fun m!117657 () Bool)

(assert (=> b!105685 m!117657))

(declare-fun m!117659 () Bool)

(assert (=> b!105686 m!117659))

(assert (=> d!28689 d!28791))

(assert (=> d!28689 d!28671))

(declare-fun b!105696 () Bool)

(declare-fun res!52602 () Bool)

(declare-fun e!68813 () Bool)

(assert (=> b!105696 (=> (not res!52602) (not e!68813))))

(declare-fun size!2312 (LongMapFixedSize!898) (_ BitVec 32))

(assert (=> b!105696 (= res!52602 (bvsge (size!2312 newMap!16) (_size!498 newMap!16)))))

(declare-fun b!105697 () Bool)

(declare-fun res!52603 () Bool)

(assert (=> b!105697 (=> (not res!52603) (not e!68813))))

(assert (=> b!105697 (= res!52603 (= (size!2312 newMap!16) (bvadd (_size!498 newMap!16) (bvsdiv (bvadd (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!105695 () Bool)

(declare-fun res!52600 () Bool)

(assert (=> b!105695 (=> (not res!52600) (not e!68813))))

(assert (=> b!105695 (= res!52600 (and (= (size!2307 (_values!2564 newMap!16)) (bvadd (mask!6726 newMap!16) #b00000000000000000000000000000001)) (= (size!2306 (_keys!4286 newMap!16)) (size!2307 (_values!2564 newMap!16))) (bvsge (_size!498 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!498 newMap!16) (bvadd (mask!6726 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!105698 () Bool)

(assert (=> b!105698 (= e!68813 (and (bvsge (extraKeys!2386 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2386 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!498 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!28793 () Bool)

(declare-fun res!52601 () Bool)

(assert (=> d!28793 (=> (not res!52601) (not e!68813))))

(assert (=> d!28793 (= res!52601 (validMask!0 (mask!6726 newMap!16)))))

(assert (=> d!28793 (= (simpleValid!74 newMap!16) e!68813)))

(assert (= (and d!28793 res!52601) b!105695))

(assert (= (and b!105695 res!52600) b!105696))

(assert (= (and b!105696 res!52602) b!105697))

(assert (= (and b!105697 res!52603) b!105698))

(declare-fun m!117661 () Bool)

(assert (=> b!105696 m!117661))

(assert (=> b!105697 m!117661))

(assert (=> d!28793 m!117277))

(assert (=> d!28671 d!28793))

(declare-fun d!28795 () Bool)

(assert (=> d!28795 (= (apply!98 lt!53875 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1335 (getValueByKey!154 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4327 () Bool)

(assert (= bs!4327 d!28795))

(assert (=> bs!4327 m!117049))

(assert (=> bs!4327 m!117445))

(assert (=> bs!4327 m!117445))

(declare-fun m!117663 () Bool)

(assert (=> bs!4327 m!117663))

(assert (=> b!105468 d!28795))

(assert (=> b!105468 d!28719))

(declare-fun b!105699 () Bool)

(declare-fun e!68816 () ListLongMap!1543)

(assert (=> b!105699 (= e!68816 (ListLongMap!1544 Nil!1613))))

(declare-fun d!28797 () Bool)

(declare-fun e!68820 () Bool)

(assert (=> d!28797 e!68820))

(declare-fun res!52606 () Bool)

(assert (=> d!28797 (=> (not res!52606) (not e!68820))))

(declare-fun lt!54050 () ListLongMap!1543)

(assert (=> d!28797 (= res!52606 (not (contains!820 lt!54050 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28797 (= lt!54050 e!68816)))

(declare-fun c!18388 () Bool)

(assert (=> d!28797 (= c!18388 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!28797 (validMask!0 (mask!6726 (v!2883 (underlying!355 thiss!992))))))

(assert (=> d!28797 (= (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))) lt!54050)))

(declare-fun b!105700 () Bool)

(declare-fun e!68817 () Bool)

(declare-fun e!68815 () Bool)

(assert (=> b!105700 (= e!68817 e!68815)))

(assert (=> b!105700 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun res!52604 () Bool)

(assert (=> b!105700 (= res!52604 (contains!820 lt!54050 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!105700 (=> (not res!52604) (not e!68815))))

(declare-fun b!105701 () Bool)

(declare-fun e!68818 () Bool)

(assert (=> b!105701 (= e!68817 e!68818)))

(declare-fun c!18390 () Bool)

(assert (=> b!105701 (= c!18390 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!105702 () Bool)

(declare-fun e!68814 () ListLongMap!1543)

(assert (=> b!105702 (= e!68816 e!68814)))

(declare-fun c!18391 () Bool)

(assert (=> b!105702 (= c!18391 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!105703 () Bool)

(declare-fun lt!54052 () Unit!3218)

(declare-fun lt!54048 () Unit!3218)

(assert (=> b!105703 (= lt!54052 lt!54048)))

(declare-fun lt!54051 () V!3217)

(declare-fun lt!54046 () (_ BitVec 64))

(declare-fun lt!54047 () (_ BitVec 64))

(declare-fun lt!54049 () ListLongMap!1543)

(assert (=> b!105703 (not (contains!820 (+!135 lt!54049 (tuple2!2381 lt!54046 lt!54051)) lt!54047))))

(assert (=> b!105703 (= lt!54048 (addStillNotContains!47 lt!54049 lt!54046 lt!54051 lt!54047))))

(assert (=> b!105703 (= lt!54047 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!105703 (= lt!54051 (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!105703 (= lt!54046 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!11166 () ListLongMap!1543)

(assert (=> b!105703 (= lt!54049 call!11166)))

(assert (=> b!105703 (= e!68814 (+!135 call!11166 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!105704 () Bool)

(assert (=> b!105704 (= e!68820 e!68817)))

(declare-fun c!18389 () Bool)

(declare-fun e!68819 () Bool)

(assert (=> b!105704 (= c!18389 e!68819)))

(declare-fun res!52607 () Bool)

(assert (=> b!105704 (=> (not res!52607) (not e!68819))))

(assert (=> b!105704 (= res!52607 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!105705 () Bool)

(assert (=> b!105705 (= e!68818 (isEmpty!374 lt!54050))))

(declare-fun b!105706 () Bool)

(assert (=> b!105706 (= e!68814 call!11166)))

(declare-fun b!105707 () Bool)

(declare-fun res!52605 () Bool)

(assert (=> b!105707 (=> (not res!52605) (not e!68820))))

(assert (=> b!105707 (= res!52605 (not (contains!820 lt!54050 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105708 () Bool)

(assert (=> b!105708 (= e!68819 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!105708 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!11163 () Bool)

(assert (=> bm!11163 (= call!11166 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!105709 () Bool)

(assert (=> b!105709 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> b!105709 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2307 (_values!2564 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> b!105709 (= e!68815 (= (apply!98 lt!54050 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!105710 () Bool)

(assert (=> b!105710 (= e!68818 (= lt!54050 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!28797 c!18388) b!105699))

(assert (= (and d!28797 (not c!18388)) b!105702))

(assert (= (and b!105702 c!18391) b!105703))

(assert (= (and b!105702 (not c!18391)) b!105706))

(assert (= (or b!105703 b!105706) bm!11163))

(assert (= (and d!28797 res!52606) b!105707))

(assert (= (and b!105707 res!52605) b!105704))

(assert (= (and b!105704 res!52607) b!105708))

(assert (= (and b!105704 c!18389) b!105700))

(assert (= (and b!105704 (not c!18389)) b!105701))

(assert (= (and b!105700 res!52604) b!105709))

(assert (= (and b!105701 c!18390) b!105710))

(assert (= (and b!105701 (not c!18390)) b!105705))

(declare-fun b_lambda!4717 () Bool)

(assert (=> (not b_lambda!4717) (not b!105703)))

(assert (=> b!105703 t!5686))

(declare-fun b_and!6517 () Bool)

(assert (= b_and!6513 (and (=> t!5686 result!3439) b_and!6517)))

(assert (=> b!105703 t!5688))

(declare-fun b_and!6519 () Bool)

(assert (= b_and!6515 (and (=> t!5688 result!3443) b_and!6519)))

(declare-fun b_lambda!4719 () Bool)

(assert (=> (not b_lambda!4719) (not b!105709)))

(assert (=> b!105709 t!5686))

(declare-fun b_and!6521 () Bool)

(assert (= b_and!6517 (and (=> t!5686 result!3439) b_and!6521)))

(assert (=> b!105709 t!5688))

(declare-fun b_and!6523 () Bool)

(assert (= b_and!6519 (and (=> t!5688 result!3443) b_and!6523)))

(declare-fun m!117665 () Bool)

(assert (=> d!28797 m!117665))

(assert (=> d!28797 m!116871))

(declare-fun m!117667 () Bool)

(assert (=> b!105700 m!117667))

(assert (=> b!105700 m!117667))

(declare-fun m!117669 () Bool)

(assert (=> b!105700 m!117669))

(assert (=> b!105708 m!117667))

(assert (=> b!105708 m!117667))

(declare-fun m!117671 () Bool)

(assert (=> b!105708 m!117671))

(assert (=> b!105709 m!116921))

(declare-fun m!117673 () Bool)

(assert (=> b!105709 m!117673))

(assert (=> b!105709 m!116921))

(declare-fun m!117675 () Bool)

(assert (=> b!105709 m!117675))

(assert (=> b!105709 m!117673))

(assert (=> b!105709 m!117667))

(declare-fun m!117677 () Bool)

(assert (=> b!105709 m!117677))

(assert (=> b!105709 m!117667))

(declare-fun m!117679 () Bool)

(assert (=> b!105703 m!117679))

(declare-fun m!117681 () Bool)

(assert (=> b!105703 m!117681))

(declare-fun m!117683 () Bool)

(assert (=> b!105703 m!117683))

(assert (=> b!105703 m!116921))

(assert (=> b!105703 m!117673))

(assert (=> b!105703 m!117667))

(declare-fun m!117685 () Bool)

(assert (=> b!105703 m!117685))

(assert (=> b!105703 m!117673))

(assert (=> b!105703 m!116921))

(assert (=> b!105703 m!117675))

(assert (=> b!105703 m!117681))

(declare-fun m!117687 () Bool)

(assert (=> b!105705 m!117687))

(declare-fun m!117689 () Bool)

(assert (=> b!105707 m!117689))

(declare-fun m!117691 () Bool)

(assert (=> b!105710 m!117691))

(assert (=> bm!11163 m!117691))

(assert (=> b!105702 m!117667))

(assert (=> b!105702 m!117667))

(assert (=> b!105702 m!117671))

(assert (=> bm!11035 d!28797))

(declare-fun b!105719 () Bool)

(declare-fun e!68827 () Bool)

(declare-fun call!11169 () Bool)

(assert (=> b!105719 (= e!68827 call!11169)))

(declare-fun b!105720 () Bool)

(declare-fun e!68829 () Bool)

(assert (=> b!105720 (= e!68829 call!11169)))

(declare-fun b!105721 () Bool)

(declare-fun e!68828 () Bool)

(assert (=> b!105721 (= e!68828 e!68827)))

(declare-fun c!18394 () Bool)

(assert (=> b!105721 (= c!18394 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11166 () Bool)

(assert (=> bm!11166 (= call!11169 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun d!28799 () Bool)

(declare-fun res!52613 () Bool)

(assert (=> d!28799 (=> res!52613 e!68828)))

(assert (=> d!28799 (= res!52613 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!28799 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4286 newMap!16) (mask!6726 newMap!16)) e!68828)))

(declare-fun b!105722 () Bool)

(assert (=> b!105722 (= e!68827 e!68829)))

(declare-fun lt!54061 () (_ BitVec 64))

(assert (=> b!105722 (= lt!54061 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54060 () Unit!3218)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4325 (_ BitVec 64) (_ BitVec 32)) Unit!3218)

(assert (=> b!105722 (= lt!54060 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4286 newMap!16) lt!54061 #b00000000000000000000000000000000))))

(assert (=> b!105722 (arrayContainsKey!0 (_keys!4286 newMap!16) lt!54061 #b00000000000000000000000000000000)))

(declare-fun lt!54059 () Unit!3218)

(assert (=> b!105722 (= lt!54059 lt!54060)))

(declare-fun res!52612 () Bool)

(assert (=> b!105722 (= res!52612 (= (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) (_keys!4286 newMap!16) (mask!6726 newMap!16)) (Found!262 #b00000000000000000000000000000000)))))

(assert (=> b!105722 (=> (not res!52612) (not e!68829))))

(assert (= (and d!28799 (not res!52613)) b!105721))

(assert (= (and b!105721 c!18394) b!105722))

(assert (= (and b!105721 (not c!18394)) b!105719))

(assert (= (and b!105722 res!52612) b!105720))

(assert (= (or b!105720 b!105719) bm!11166))

(assert (=> b!105721 m!117265))

(assert (=> b!105721 m!117265))

(assert (=> b!105721 m!117267))

(declare-fun m!117693 () Bool)

(assert (=> bm!11166 m!117693))

(assert (=> b!105722 m!117265))

(declare-fun m!117695 () Bool)

(assert (=> b!105722 m!117695))

(declare-fun m!117697 () Bool)

(assert (=> b!105722 m!117697))

(assert (=> b!105722 m!117265))

(declare-fun m!117699 () Bool)

(assert (=> b!105722 m!117699))

(assert (=> b!105201 d!28799))

(assert (=> b!105238 d!28797))

(assert (=> b!105402 d!28697))

(declare-fun d!28801 () Bool)

(declare-fun e!68830 () Bool)

(assert (=> d!28801 e!68830))

(declare-fun res!52614 () Bool)

(assert (=> d!28801 (=> res!52614 e!68830)))

(declare-fun lt!54062 () Bool)

(assert (=> d!28801 (= res!52614 (not lt!54062))))

(declare-fun lt!54065 () Bool)

(assert (=> d!28801 (= lt!54062 lt!54065)))

(declare-fun lt!54064 () Unit!3218)

(declare-fun e!68831 () Unit!3218)

(assert (=> d!28801 (= lt!54064 e!68831)))

(declare-fun c!18395 () Bool)

(assert (=> d!28801 (= c!18395 lt!54065)))

(assert (=> d!28801 (= lt!54065 (containsKey!158 (toList!787 lt!53712) (_1!1201 lt!53599)))))

(assert (=> d!28801 (= (contains!820 lt!53712 (_1!1201 lt!53599)) lt!54062)))

(declare-fun b!105723 () Bool)

(declare-fun lt!54063 () Unit!3218)

(assert (=> b!105723 (= e!68831 lt!54063)))

(assert (=> b!105723 (= lt!54063 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53712) (_1!1201 lt!53599)))))

(assert (=> b!105723 (isDefined!108 (getValueByKey!154 (toList!787 lt!53712) (_1!1201 lt!53599)))))

(declare-fun b!105724 () Bool)

(declare-fun Unit!3240 () Unit!3218)

(assert (=> b!105724 (= e!68831 Unit!3240)))

(declare-fun b!105725 () Bool)

(assert (=> b!105725 (= e!68830 (isDefined!108 (getValueByKey!154 (toList!787 lt!53712) (_1!1201 lt!53599))))))

(assert (= (and d!28801 c!18395) b!105723))

(assert (= (and d!28801 (not c!18395)) b!105724))

(assert (= (and d!28801 (not res!52614)) b!105725))

(declare-fun m!117701 () Bool)

(assert (=> d!28801 m!117701))

(declare-fun m!117703 () Bool)

(assert (=> b!105723 m!117703))

(assert (=> b!105723 m!117083))

(assert (=> b!105723 m!117083))

(declare-fun m!117705 () Bool)

(assert (=> b!105723 m!117705))

(assert (=> b!105725 m!117083))

(assert (=> b!105725 m!117083))

(assert (=> b!105725 m!117705))

(assert (=> d!28675 d!28801))

(declare-fun b!105736 () Bool)

(declare-fun e!68837 () Option!160)

(assert (=> b!105736 (= e!68837 (getValueByKey!154 (t!5690 lt!53709) (_1!1201 lt!53599)))))

(declare-fun b!105735 () Bool)

(declare-fun e!68836 () Option!160)

(assert (=> b!105735 (= e!68836 e!68837)))

(declare-fun c!18401 () Bool)

(assert (=> b!105735 (= c!18401 (and ((_ is Cons!1612) lt!53709) (not (= (_1!1201 (h!2209 lt!53709)) (_1!1201 lt!53599)))))))

(declare-fun d!28803 () Bool)

(declare-fun c!18400 () Bool)

(assert (=> d!28803 (= c!18400 (and ((_ is Cons!1612) lt!53709) (= (_1!1201 (h!2209 lt!53709)) (_1!1201 lt!53599))))))

(assert (=> d!28803 (= (getValueByKey!154 lt!53709 (_1!1201 lt!53599)) e!68836)))

(declare-fun b!105737 () Bool)

(assert (=> b!105737 (= e!68837 None!158)))

(declare-fun b!105734 () Bool)

(assert (=> b!105734 (= e!68836 (Some!159 (_2!1201 (h!2209 lt!53709))))))

(assert (= (and d!28803 c!18400) b!105734))

(assert (= (and d!28803 (not c!18400)) b!105735))

(assert (= (and b!105735 c!18401) b!105736))

(assert (= (and b!105735 (not c!18401)) b!105737))

(declare-fun m!117707 () Bool)

(assert (=> b!105736 m!117707))

(assert (=> d!28675 d!28803))

(declare-fun d!28805 () Bool)

(assert (=> d!28805 (= (getValueByKey!154 lt!53709 (_1!1201 lt!53599)) (Some!159 (_2!1201 lt!53599)))))

(declare-fun lt!54068 () Unit!3218)

(declare-fun choose!667 (List!1616 (_ BitVec 64) V!3217) Unit!3218)

(assert (=> d!28805 (= lt!54068 (choose!667 lt!53709 (_1!1201 lt!53599) (_2!1201 lt!53599)))))

(declare-fun e!68840 () Bool)

(assert (=> d!28805 e!68840))

(declare-fun res!52619 () Bool)

(assert (=> d!28805 (=> (not res!52619) (not e!68840))))

(declare-fun isStrictlySorted!304 (List!1616) Bool)

(assert (=> d!28805 (= res!52619 (isStrictlySorted!304 lt!53709))))

(assert (=> d!28805 (= (lemmaContainsTupThenGetReturnValue!73 lt!53709 (_1!1201 lt!53599) (_2!1201 lt!53599)) lt!54068)))

(declare-fun b!105742 () Bool)

(declare-fun res!52620 () Bool)

(assert (=> b!105742 (=> (not res!52620) (not e!68840))))

(assert (=> b!105742 (= res!52620 (containsKey!158 lt!53709 (_1!1201 lt!53599)))))

(declare-fun b!105743 () Bool)

(assert (=> b!105743 (= e!68840 (contains!821 lt!53709 (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(assert (= (and d!28805 res!52619) b!105742))

(assert (= (and b!105742 res!52620) b!105743))

(assert (=> d!28805 m!117077))

(declare-fun m!117709 () Bool)

(assert (=> d!28805 m!117709))

(declare-fun m!117711 () Bool)

(assert (=> d!28805 m!117711))

(declare-fun m!117713 () Bool)

(assert (=> b!105742 m!117713))

(declare-fun m!117715 () Bool)

(assert (=> b!105743 m!117715))

(assert (=> d!28675 d!28805))

(declare-fun c!18412 () Bool)

(declare-fun b!105764 () Bool)

(assert (=> b!105764 (= c!18412 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 lt!53606))) (bvsgt (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 lt!53606)))) (_1!1201 lt!53599))))))

(declare-fun e!68854 () List!1616)

(declare-fun e!68853 () List!1616)

(assert (=> b!105764 (= e!68854 e!68853)))

(declare-fun b!105765 () Bool)

(declare-fun e!68852 () List!1616)

(declare-fun call!11176 () List!1616)

(assert (=> b!105765 (= e!68852 call!11176)))

(declare-fun b!105766 () Bool)

(declare-fun e!68855 () Bool)

(declare-fun lt!54071 () List!1616)

(assert (=> b!105766 (= e!68855 (contains!821 lt!54071 (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun b!105767 () Bool)

(declare-fun res!52625 () Bool)

(assert (=> b!105767 (=> (not res!52625) (not e!68855))))

(assert (=> b!105767 (= res!52625 (containsKey!158 lt!54071 (_1!1201 lt!53599)))))

(declare-fun b!105768 () Bool)

(declare-fun call!11177 () List!1616)

(assert (=> b!105768 (= e!68853 call!11177)))

(declare-fun b!105769 () Bool)

(assert (=> b!105769 (= e!68853 call!11177)))

(declare-fun b!105770 () Bool)

(assert (=> b!105770 (= e!68852 e!68854)))

(declare-fun c!18413 () Bool)

(assert (=> b!105770 (= c!18413 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 lt!53606))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 lt!53606)))) (_1!1201 lt!53599))))))

(declare-fun bm!11173 () Bool)

(declare-fun call!11178 () List!1616)

(assert (=> bm!11173 (= call!11178 call!11176)))

(declare-fun b!105771 () Bool)

(assert (=> b!105771 (= e!68854 call!11178)))

(declare-fun e!68851 () List!1616)

(declare-fun b!105772 () Bool)

(assert (=> b!105772 (= e!68851 (insertStrictlySorted!76 (t!5690 (toList!787 (+!135 lt!53604 lt!53606))) (_1!1201 lt!53599) (_2!1201 lt!53599)))))

(declare-fun bm!11175 () Bool)

(assert (=> bm!11175 (= call!11177 call!11178)))

(declare-fun b!105773 () Bool)

(assert (=> b!105773 (= e!68851 (ite c!18413 (t!5690 (toList!787 (+!135 lt!53604 lt!53606))) (ite c!18412 (Cons!1612 (h!2209 (toList!787 (+!135 lt!53604 lt!53606))) (t!5690 (toList!787 (+!135 lt!53604 lt!53606)))) Nil!1613)))))

(declare-fun bm!11174 () Bool)

(declare-fun c!18410 () Bool)

(declare-fun $colon$colon!80 (List!1616 tuple2!2380) List!1616)

(assert (=> bm!11174 (= call!11176 ($colon$colon!80 e!68851 (ite c!18410 (h!2209 (toList!787 (+!135 lt!53604 lt!53606))) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599)))))))

(declare-fun c!18411 () Bool)

(assert (=> bm!11174 (= c!18411 c!18410)))

(declare-fun d!28807 () Bool)

(assert (=> d!28807 e!68855))

(declare-fun res!52626 () Bool)

(assert (=> d!28807 (=> (not res!52626) (not e!68855))))

(assert (=> d!28807 (= res!52626 (isStrictlySorted!304 lt!54071))))

(assert (=> d!28807 (= lt!54071 e!68852)))

(assert (=> d!28807 (= c!18410 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 lt!53606))) (bvslt (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 lt!53606)))) (_1!1201 lt!53599))))))

(assert (=> d!28807 (isStrictlySorted!304 (toList!787 (+!135 lt!53604 lt!53606)))))

(assert (=> d!28807 (= (insertStrictlySorted!76 (toList!787 (+!135 lt!53604 lt!53606)) (_1!1201 lt!53599) (_2!1201 lt!53599)) lt!54071)))

(assert (= (and d!28807 c!18410) b!105765))

(assert (= (and d!28807 (not c!18410)) b!105770))

(assert (= (and b!105770 c!18413) b!105771))

(assert (= (and b!105770 (not c!18413)) b!105764))

(assert (= (and b!105764 c!18412) b!105768))

(assert (= (and b!105764 (not c!18412)) b!105769))

(assert (= (or b!105768 b!105769) bm!11175))

(assert (= (or b!105771 bm!11175) bm!11173))

(assert (= (or b!105765 bm!11173) bm!11174))

(assert (= (and bm!11174 c!18411) b!105772))

(assert (= (and bm!11174 (not c!18411)) b!105773))

(assert (= (and d!28807 res!52626) b!105767))

(assert (= (and b!105767 res!52625) b!105766))

(declare-fun m!117717 () Bool)

(assert (=> b!105766 m!117717))

(declare-fun m!117719 () Bool)

(assert (=> d!28807 m!117719))

(declare-fun m!117721 () Bool)

(assert (=> d!28807 m!117721))

(declare-fun m!117723 () Bool)

(assert (=> b!105767 m!117723))

(declare-fun m!117725 () Bool)

(assert (=> b!105772 m!117725))

(declare-fun m!117727 () Bool)

(assert (=> bm!11174 m!117727))

(assert (=> d!28675 d!28807))

(assert (=> d!28703 d!28725))

(assert (=> d!28695 d!28701))

(declare-fun d!28809 () Bool)

(assert (=> d!28809 (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) from!355 Nil!1612)))

(assert (=> d!28809 true))

(declare-fun _$71!147 () Unit!3218)

(assert (=> d!28809 (= (choose!39 (_keys!4286 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!147)))

(declare-fun bs!4328 () Bool)

(assert (= bs!4328 d!28809))

(assert (=> bs!4328 m!116907))

(assert (=> d!28695 d!28809))

(declare-fun d!28811 () Bool)

(assert (=> d!28811 (= (get!1333 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2882 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> b!105390 d!28811))

(declare-fun d!28813 () Bool)

(declare-fun e!68858 () Bool)

(assert (=> d!28813 e!68858))

(declare-fun res!52631 () Bool)

(assert (=> d!28813 (=> (not res!52631) (not e!68858))))

(declare-fun lt!54077 () SeekEntryResult!262)

(assert (=> d!28813 (= res!52631 ((_ is Found!262) lt!54077))))

(assert (=> d!28813 (= lt!54077 (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun lt!54076 () Unit!3218)

(declare-fun choose!668 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) Int) Unit!3218)

(assert (=> d!28813 (= lt!54076 (choose!668 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(assert (=> d!28813 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28813 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)) lt!54076)))

(declare-fun b!105778 () Bool)

(declare-fun res!52632 () Bool)

(assert (=> b!105778 (=> (not res!52632) (not e!68858))))

(assert (=> b!105778 (= res!52632 (inRange!0 (index!3197 lt!54077) (mask!6726 newMap!16)))))

(declare-fun b!105779 () Bool)

(assert (=> b!105779 (= e!68858 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!54077)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> b!105779 (and (bvsge (index!3197 lt!54077) #b00000000000000000000000000000000) (bvslt (index!3197 lt!54077) (size!2306 (_keys!4286 newMap!16))))))

(assert (= (and d!28813 res!52631) b!105778))

(assert (= (and b!105778 res!52632) b!105779))

(assert (=> d!28813 m!116875))

(assert (=> d!28813 m!117159))

(assert (=> d!28813 m!116875))

(declare-fun m!117729 () Bool)

(assert (=> d!28813 m!117729))

(assert (=> d!28813 m!117277))

(declare-fun m!117731 () Bool)

(assert (=> b!105778 m!117731))

(declare-fun m!117733 () Bool)

(assert (=> b!105779 m!117733))

(assert (=> bm!11087 d!28813))

(assert (=> b!105378 d!28725))

(assert (=> bm!11128 d!28673))

(assert (=> b!105231 d!28719))

(declare-fun d!28815 () Bool)

(declare-fun e!68859 () Bool)

(assert (=> d!28815 e!68859))

(declare-fun res!52634 () Bool)

(assert (=> d!28815 (=> (not res!52634) (not e!68859))))

(declare-fun lt!54081 () ListLongMap!1543)

(assert (=> d!28815 (= res!52634 (contains!820 lt!54081 (_1!1201 (tuple2!2381 lt!53694 lt!53699))))))

(declare-fun lt!54078 () List!1616)

(assert (=> d!28815 (= lt!54081 (ListLongMap!1544 lt!54078))))

(declare-fun lt!54079 () Unit!3218)

(declare-fun lt!54080 () Unit!3218)

(assert (=> d!28815 (= lt!54079 lt!54080)))

(assert (=> d!28815 (= (getValueByKey!154 lt!54078 (_1!1201 (tuple2!2381 lt!53694 lt!53699))) (Some!159 (_2!1201 (tuple2!2381 lt!53694 lt!53699))))))

(assert (=> d!28815 (= lt!54080 (lemmaContainsTupThenGetReturnValue!73 lt!54078 (_1!1201 (tuple2!2381 lt!53694 lt!53699)) (_2!1201 (tuple2!2381 lt!53694 lt!53699))))))

(assert (=> d!28815 (= lt!54078 (insertStrictlySorted!76 (toList!787 lt!53697) (_1!1201 (tuple2!2381 lt!53694 lt!53699)) (_2!1201 (tuple2!2381 lt!53694 lt!53699))))))

(assert (=> d!28815 (= (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)) lt!54081)))

(declare-fun b!105780 () Bool)

(declare-fun res!52633 () Bool)

(assert (=> b!105780 (=> (not res!52633) (not e!68859))))

(assert (=> b!105780 (= res!52633 (= (getValueByKey!154 (toList!787 lt!54081) (_1!1201 (tuple2!2381 lt!53694 lt!53699))) (Some!159 (_2!1201 (tuple2!2381 lt!53694 lt!53699)))))))

(declare-fun b!105781 () Bool)

(assert (=> b!105781 (= e!68859 (contains!821 (toList!787 lt!54081) (tuple2!2381 lt!53694 lt!53699)))))

(assert (= (and d!28815 res!52634) b!105780))

(assert (= (and b!105780 res!52633) b!105781))

(declare-fun m!117735 () Bool)

(assert (=> d!28815 m!117735))

(declare-fun m!117737 () Bool)

(assert (=> d!28815 m!117737))

(declare-fun m!117739 () Bool)

(assert (=> d!28815 m!117739))

(declare-fun m!117741 () Bool)

(assert (=> d!28815 m!117741))

(declare-fun m!117743 () Bool)

(assert (=> b!105780 m!117743))

(declare-fun m!117745 () Bool)

(assert (=> b!105781 m!117745))

(assert (=> b!105231 d!28815))

(declare-fun d!28817 () Bool)

(assert (=> d!28817 (not (contains!820 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)) lt!53695))))

(declare-fun lt!54084 () Unit!3218)

(declare-fun choose!669 (ListLongMap!1543 (_ BitVec 64) V!3217 (_ BitVec 64)) Unit!3218)

(assert (=> d!28817 (= lt!54084 (choose!669 lt!53697 lt!53694 lt!53699 lt!53695))))

(declare-fun e!68862 () Bool)

(assert (=> d!28817 e!68862))

(declare-fun res!52637 () Bool)

(assert (=> d!28817 (=> (not res!52637) (not e!68862))))

(assert (=> d!28817 (= res!52637 (not (contains!820 lt!53697 lt!53695)))))

(assert (=> d!28817 (= (addStillNotContains!47 lt!53697 lt!53694 lt!53699 lt!53695) lt!54084)))

(declare-fun b!105785 () Bool)

(assert (=> b!105785 (= e!68862 (not (= lt!53694 lt!53695)))))

(assert (= (and d!28817 res!52637) b!105785))

(assert (=> d!28817 m!117063))

(assert (=> d!28817 m!117063))

(assert (=> d!28817 m!117065))

(declare-fun m!117747 () Bool)

(assert (=> d!28817 m!117747))

(declare-fun m!117749 () Bool)

(assert (=> d!28817 m!117749))

(assert (=> b!105231 d!28817))

(declare-fun d!28819 () Bool)

(declare-fun e!68863 () Bool)

(assert (=> d!28819 e!68863))

(declare-fun res!52639 () Bool)

(assert (=> d!28819 (=> (not res!52639) (not e!68863))))

(declare-fun lt!54088 () ListLongMap!1543)

(assert (=> d!28819 (= res!52639 (contains!820 lt!54088 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!54085 () List!1616)

(assert (=> d!28819 (= lt!54088 (ListLongMap!1544 lt!54085))))

(declare-fun lt!54086 () Unit!3218)

(declare-fun lt!54087 () Unit!3218)

(assert (=> d!28819 (= lt!54086 lt!54087)))

(assert (=> d!28819 (= (getValueByKey!154 lt!54085 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28819 (= lt!54087 (lemmaContainsTupThenGetReturnValue!73 lt!54085 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28819 (= lt!54085 (insertStrictlySorted!76 (toList!787 call!11038) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28819 (= (+!135 call!11038 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!54088)))

(declare-fun b!105786 () Bool)

(declare-fun res!52638 () Bool)

(assert (=> b!105786 (=> (not res!52638) (not e!68863))))

(assert (=> b!105786 (= res!52638 (= (getValueByKey!154 (toList!787 lt!54088) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!105787 () Bool)

(assert (=> b!105787 (= e!68863 (contains!821 (toList!787 lt!54088) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28819 res!52639) b!105786))

(assert (= (and b!105786 res!52638) b!105787))

(declare-fun m!117751 () Bool)

(assert (=> d!28819 m!117751))

(declare-fun m!117753 () Bool)

(assert (=> d!28819 m!117753))

(declare-fun m!117755 () Bool)

(assert (=> d!28819 m!117755))

(declare-fun m!117757 () Bool)

(assert (=> d!28819 m!117757))

(declare-fun m!117759 () Bool)

(assert (=> b!105786 m!117759))

(declare-fun m!117761 () Bool)

(assert (=> b!105787 m!117761))

(assert (=> b!105231 d!28819))

(declare-fun d!28821 () Bool)

(declare-fun e!68864 () Bool)

(assert (=> d!28821 e!68864))

(declare-fun res!52640 () Bool)

(assert (=> d!28821 (=> res!52640 e!68864)))

(declare-fun lt!54089 () Bool)

(assert (=> d!28821 (= res!52640 (not lt!54089))))

(declare-fun lt!54092 () Bool)

(assert (=> d!28821 (= lt!54089 lt!54092)))

(declare-fun lt!54091 () Unit!3218)

(declare-fun e!68865 () Unit!3218)

(assert (=> d!28821 (= lt!54091 e!68865)))

(declare-fun c!18414 () Bool)

(assert (=> d!28821 (= c!18414 lt!54092)))

(assert (=> d!28821 (= lt!54092 (containsKey!158 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695))))

(assert (=> d!28821 (= (contains!820 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)) lt!53695) lt!54089)))

(declare-fun b!105788 () Bool)

(declare-fun lt!54090 () Unit!3218)

(assert (=> b!105788 (= e!68865 lt!54090)))

(assert (=> b!105788 (= lt!54090 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695))))

(assert (=> b!105788 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695))))

(declare-fun b!105789 () Bool)

(declare-fun Unit!3241 () Unit!3218)

(assert (=> b!105789 (= e!68865 Unit!3241)))

(declare-fun b!105790 () Bool)

(assert (=> b!105790 (= e!68864 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695)))))

(assert (= (and d!28821 c!18414) b!105788))

(assert (= (and d!28821 (not c!18414)) b!105789))

(assert (= (and d!28821 (not res!52640)) b!105790))

(declare-fun m!117763 () Bool)

(assert (=> d!28821 m!117763))

(declare-fun m!117765 () Bool)

(assert (=> b!105788 m!117765))

(declare-fun m!117767 () Bool)

(assert (=> b!105788 m!117767))

(assert (=> b!105788 m!117767))

(declare-fun m!117769 () Bool)

(assert (=> b!105788 m!117769))

(assert (=> b!105790 m!117767))

(assert (=> b!105790 m!117767))

(assert (=> b!105790 m!117769))

(assert (=> b!105231 d!28821))

(declare-fun b!105791 () Bool)

(declare-fun e!68869 () Bool)

(declare-fun call!11179 () Bool)

(assert (=> b!105791 (= e!68869 call!11179)))

(declare-fun b!105792 () Bool)

(assert (=> b!105792 (= e!68869 call!11179)))

(declare-fun b!105793 () Bool)

(declare-fun e!68867 () Bool)

(assert (=> b!105793 (= e!68867 e!68869)))

(declare-fun c!18415 () Bool)

(assert (=> b!105793 (= c!18415 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!28823 () Bool)

(declare-fun res!52643 () Bool)

(declare-fun e!68866 () Bool)

(assert (=> d!28823 (=> res!52643 e!68866)))

(assert (=> d!28823 (= res!52643 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!28823 (= (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)) e!68866)))

(declare-fun b!105794 () Bool)

(assert (=> b!105794 (= e!68866 e!68867)))

(declare-fun res!52642 () Bool)

(assert (=> b!105794 (=> (not res!52642) (not e!68867))))

(declare-fun e!68868 () Bool)

(assert (=> b!105794 (= res!52642 (not e!68868))))

(declare-fun res!52641 () Bool)

(assert (=> b!105794 (=> (not res!52641) (not e!68868))))

(assert (=> b!105794 (= res!52641 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!105795 () Bool)

(assert (=> b!105795 (= e!68868 (contains!822 (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!11176 () Bool)

(assert (=> bm!11176 (= call!11179 (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18415 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612))))))

(assert (= (and d!28823 (not res!52643)) b!105794))

(assert (= (and b!105794 res!52641) b!105795))

(assert (= (and b!105794 res!52642) b!105793))

(assert (= (and b!105793 c!18415) b!105791))

(assert (= (and b!105793 (not c!18415)) b!105792))

(assert (= (or b!105791 b!105792) bm!11176))

(declare-fun m!117771 () Bool)

(assert (=> b!105793 m!117771))

(assert (=> b!105793 m!117771))

(declare-fun m!117773 () Bool)

(assert (=> b!105793 m!117773))

(assert (=> b!105794 m!117771))

(assert (=> b!105794 m!117771))

(assert (=> b!105794 m!117773))

(assert (=> b!105795 m!117771))

(assert (=> b!105795 m!117771))

(declare-fun m!117775 () Bool)

(assert (=> b!105795 m!117775))

(assert (=> bm!11176 m!117771))

(declare-fun m!117777 () Bool)

(assert (=> bm!11176 m!117777))

(assert (=> bm!11110 d!28823))

(declare-fun b!105830 () Bool)

(declare-fun e!68886 () Bool)

(declare-fun call!11188 () Bool)

(assert (=> b!105830 (= e!68886 (not call!11188))))

(declare-fun b!105831 () Bool)

(declare-fun e!68891 () Bool)

(assert (=> b!105831 (= e!68891 (not call!11188))))

(declare-fun b!105832 () Bool)

(declare-fun res!52662 () Bool)

(declare-fun e!68892 () Bool)

(assert (=> b!105832 (=> (not res!52662) (not e!68892))))

(declare-fun lt!54165 () tuple2!2382)

(assert (=> b!105832 (= res!52662 (valid!422 (_2!1202 lt!54165)))))

(declare-fun bm!11185 () Bool)

(declare-fun call!11190 () SeekEntryResult!262)

(assert (=> bm!11185 (= call!11190 (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun b!105833 () Bool)

(declare-fun c!18424 () Bool)

(declare-fun lt!54171 () SeekEntryResult!262)

(assert (=> b!105833 (= c!18424 ((_ is MissingVacant!262) lt!54171))))

(declare-fun e!68889 () Bool)

(declare-fun e!68893 () Bool)

(assert (=> b!105833 (= e!68889 e!68893)))

(declare-fun b!105834 () Bool)

(assert (=> b!105834 (= e!68893 e!68891)))

(declare-fun res!52669 () Bool)

(declare-fun call!11191 () Bool)

(assert (=> b!105834 (= res!52669 call!11191)))

(assert (=> b!105834 (=> (not res!52669) (not e!68891))))

(declare-fun bm!11186 () Bool)

(assert (=> bm!11186 (= call!11188 (arrayContainsKey!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!105835 () Bool)

(declare-fun res!52668 () Bool)

(declare-fun call!11189 () Bool)

(assert (=> b!105835 (= res!52668 call!11189)))

(declare-fun e!68887 () Bool)

(assert (=> b!105835 (=> (not res!52668) (not e!68887))))

(declare-fun b!105836 () Bool)

(declare-fun e!68890 () Unit!3218)

(declare-fun Unit!3242 () Unit!3218)

(assert (=> b!105836 (= e!68890 Unit!3242)))

(declare-fun lt!54172 () Unit!3218)

(declare-fun lemmaArrayContainsKeyThenInListMap!30 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) (_ BitVec 32) Int) Unit!3218)

(assert (=> b!105836 (= lt!54172 (lemmaArrayContainsKeyThenInListMap!30 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(assert (=> b!105836 (contains!820 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))

(declare-fun lt!54181 () Unit!3218)

(assert (=> b!105836 (= lt!54181 lt!54172)))

(assert (=> b!105836 false))

(declare-fun b!105837 () Bool)

(declare-fun res!52665 () Bool)

(assert (=> b!105837 (=> (not res!52665) (not e!68892))))

(assert (=> b!105837 (= res!52665 (contains!820 (map!1270 (_2!1202 lt!54165)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105838 () Bool)

(declare-fun res!52664 () Bool)

(assert (=> b!105838 (= res!52664 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3199 lt!54171)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105838 (=> (not res!52664) (not e!68891))))

(declare-fun b!105839 () Bool)

(declare-fun res!52666 () Bool)

(assert (=> b!105839 (=> (not res!52666) (not e!68886))))

(assert (=> b!105839 (= res!52666 call!11191)))

(assert (=> b!105839 (= e!68889 e!68886)))

(declare-fun b!105840 () Bool)

(declare-fun Unit!3243 () Unit!3218)

(assert (=> b!105840 (= e!68890 Unit!3243)))

(declare-fun d!28825 () Bool)

(assert (=> d!28825 e!68892))

(declare-fun res!52670 () Bool)

(assert (=> d!28825 (=> (not res!52670) (not e!68892))))

(assert (=> d!28825 (= res!52670 (_1!1202 lt!54165))))

(assert (=> d!28825 (= lt!54165 (tuple2!2383 true (LongMapFixedSize!899 (defaultEntry!2581 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (bvadd (_size!498 newMap!16) #b00000000000000000000000000000001) (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (_vacant!498 newMap!16))))))

(declare-fun lt!54175 () Unit!3218)

(declare-fun lt!54167 () Unit!3218)

(assert (=> d!28825 (= lt!54175 lt!54167)))

(declare-fun lt!54154 () array!4327)

(declare-fun lt!54176 () array!4325)

(assert (=> d!28825 (contains!820 (getCurrentListMap!464 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))))))

(assert (=> d!28825 (= lt!54167 (lemmaValidKeyInArrayIsInListMap!106 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (defaultEntry!2581 newMap!16)))))

(assert (=> d!28825 (= lt!54154 (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))))

(assert (=> d!28825 (= lt!54176 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))

(declare-fun lt!54178 () Unit!3218)

(declare-fun lt!54153 () Unit!3218)

(assert (=> d!28825 (= lt!54178 lt!54153)))

(declare-fun lt!54174 () array!4325)

(assert (=> d!28825 (= (arrayCountValidKeys!0 lt!54174 (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (bvadd (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4325 (_ BitVec 32)) Unit!3218)

(assert (=> d!28825 (= lt!54153 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!54174 (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))))))

(assert (=> d!28825 (= lt!54174 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))

(declare-fun lt!54170 () Unit!3218)

(declare-fun lt!54164 () Unit!3218)

(assert (=> d!28825 (= lt!54170 lt!54164)))

(declare-fun lt!54166 () array!4325)

(assert (=> d!28825 (arrayContainsKey!0 lt!54166 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!28825 (= lt!54164 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!54166 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))))))

(assert (=> d!28825 (= lt!54166 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))

(declare-fun lt!54157 () Unit!3218)

(declare-fun lt!54173 () Unit!3218)

(assert (=> d!28825 (= lt!54157 lt!54173)))

(assert (=> d!28825 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (getCurrentListMap!464 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!30 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) (_ BitVec 64) V!3217 Int) Unit!3218)

(assert (=> d!28825 (= lt!54173 (lemmaAddValidKeyToArrayThenAddPairToListMap!30 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54161 () Unit!3218)

(declare-fun lt!54177 () Unit!3218)

(assert (=> d!28825 (= lt!54161 lt!54177)))

(assert (=> d!28825 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (mask!6726 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4325 (_ BitVec 32) (_ BitVec 32)) Unit!3218)

(assert (=> d!28825 (= lt!54177 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (mask!6726 newMap!16)))))

(declare-fun lt!54159 () Unit!3218)

(declare-fun lt!54160 () Unit!3218)

(assert (=> d!28825 (= lt!54159 lt!54160)))

(assert (=> d!28825 (= (arrayCountValidKeys!0 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4286 newMap!16) #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4325 (_ BitVec 32) (_ BitVec 64)) Unit!3218)

(assert (=> d!28825 (= lt!54160 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4286 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun lt!54156 () Unit!3218)

(declare-fun lt!54180 () Unit!3218)

(assert (=> d!28825 (= lt!54156 lt!54180)))

(declare-fun lt!54169 () (_ BitVec 32))

(declare-fun lt!54158 () List!1615)

(assert (=> d!28825 (arrayNoDuplicates!0 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) lt!54169 lt!54158)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4325 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1615) Unit!3218)

(assert (=> d!28825 (= lt!54180 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) lt!54169 lt!54158))))

(assert (=> d!28825 (= lt!54158 Nil!1612)))

(assert (=> d!28825 (= lt!54169 #b00000000000000000000000000000000)))

(declare-fun lt!54179 () Unit!3218)

(assert (=> d!28825 (= lt!54179 e!68890)))

(declare-fun c!18427 () Bool)

(assert (=> d!28825 (= c!18427 (arrayContainsKey!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!54182 () Unit!3218)

(declare-fun e!68888 () Unit!3218)

(assert (=> d!28825 (= lt!54182 e!68888)))

(declare-fun c!18425 () Bool)

(assert (=> d!28825 (= c!18425 (contains!820 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!28825 (valid!422 newMap!16)))

(assert (=> d!28825 (= (updateHelperNewKey!47 newMap!16 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))) lt!54165)))

(declare-fun bm!11187 () Bool)

(assert (=> bm!11187 (= call!11191 call!11189)))

(declare-fun b!105841 () Bool)

(assert (=> b!105841 (= e!68892 (= (map!1270 (_2!1202 lt!54165)) (+!135 (map!1270 newMap!16) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!105842 () Bool)

(declare-fun res!52663 () Bool)

(assert (=> b!105842 (=> (not res!52663) (not e!68886))))

(assert (=> b!105842 (= res!52663 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3196 lt!54171)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105843 () Bool)

(declare-fun lt!54168 () Unit!3218)

(assert (=> b!105843 (= e!68888 lt!54168)))

(assert (=> b!105843 (= lt!54168 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(assert (=> b!105843 (= lt!54171 call!11190)))

(declare-fun c!18426 () Bool)

(assert (=> b!105843 (= c!18426 ((_ is MissingZero!262) lt!54171))))

(assert (=> b!105843 e!68889))

(declare-fun b!105844 () Bool)

(declare-fun lt!54155 () SeekEntryResult!262)

(assert (=> b!105844 (= e!68887 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!54155)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105845 () Bool)

(assert (=> b!105845 (= e!68893 ((_ is Undefined!262) lt!54171))))

(declare-fun bm!11188 () Bool)

(assert (=> bm!11188 (= call!11189 (inRange!0 (ite c!18425 (index!3197 lt!54155) (ite c!18426 (index!3196 lt!54171) (index!3199 lt!54171))) (mask!6726 newMap!16)))))

(declare-fun b!105846 () Bool)

(declare-fun Unit!3244 () Unit!3218)

(assert (=> b!105846 (= e!68888 Unit!3244)))

(declare-fun lt!54163 () Unit!3218)

(assert (=> b!105846 (= lt!54163 (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)))))

(assert (=> b!105846 (= lt!54155 call!11190)))

(declare-fun res!52667 () Bool)

(assert (=> b!105846 (= res!52667 ((_ is Found!262) lt!54155))))

(assert (=> b!105846 (=> (not res!52667) (not e!68887))))

(assert (=> b!105846 e!68887))

(declare-fun lt!54162 () Unit!3218)

(assert (=> b!105846 (= lt!54162 lt!54163)))

(assert (=> b!105846 false))

(assert (= (and d!28825 c!18425) b!105846))

(assert (= (and d!28825 (not c!18425)) b!105843))

(assert (= (and b!105846 res!52667) b!105835))

(assert (= (and b!105835 res!52668) b!105844))

(assert (= (and b!105843 c!18426) b!105839))

(assert (= (and b!105843 (not c!18426)) b!105833))

(assert (= (and b!105839 res!52666) b!105842))

(assert (= (and b!105842 res!52663) b!105830))

(assert (= (and b!105833 c!18424) b!105834))

(assert (= (and b!105833 (not c!18424)) b!105845))

(assert (= (and b!105834 res!52669) b!105838))

(assert (= (and b!105838 res!52664) b!105831))

(assert (= (or b!105839 b!105834) bm!11187))

(assert (= (or b!105830 b!105831) bm!11186))

(assert (= (or b!105835 bm!11187) bm!11188))

(assert (= (or b!105846 b!105843) bm!11185))

(assert (= (and d!28825 c!18427) b!105836))

(assert (= (and d!28825 (not c!18427)) b!105840))

(assert (= (and d!28825 res!52670) b!105832))

(assert (= (and b!105832 res!52662) b!105837))

(assert (= (and b!105837 res!52665) b!105841))

(assert (=> b!105843 m!116875))

(assert (=> b!105843 m!117145))

(declare-fun m!117779 () Bool)

(assert (=> bm!11188 m!117779))

(declare-fun m!117781 () Bool)

(assert (=> b!105842 m!117781))

(declare-fun m!117783 () Bool)

(assert (=> b!105837 m!117783))

(assert (=> b!105837 m!117783))

(assert (=> b!105837 m!116875))

(declare-fun m!117785 () Bool)

(assert (=> b!105837 m!117785))

(declare-fun m!117787 () Bool)

(assert (=> b!105838 m!117787))

(declare-fun m!117789 () Bool)

(assert (=> b!105844 m!117789))

(assert (=> b!105836 m!116875))

(declare-fun m!117791 () Bool)

(assert (=> b!105836 m!117791))

(assert (=> b!105836 m!117143))

(assert (=> b!105836 m!117143))

(assert (=> b!105836 m!116875))

(declare-fun m!117793 () Bool)

(assert (=> b!105836 m!117793))

(assert (=> d!28825 m!116875))

(declare-fun m!117795 () Bool)

(assert (=> d!28825 m!117795))

(assert (=> d!28825 m!117143))

(assert (=> d!28825 m!117429))

(assert (=> d!28825 m!117143))

(assert (=> d!28825 m!116875))

(assert (=> d!28825 m!117793))

(declare-fun m!117797 () Bool)

(assert (=> d!28825 m!117797))

(declare-fun m!117799 () Bool)

(assert (=> d!28825 m!117799))

(declare-fun m!117801 () Bool)

(assert (=> d!28825 m!117801))

(declare-fun m!117803 () Bool)

(assert (=> d!28825 m!117803))

(assert (=> d!28825 m!117041))

(assert (=> d!28825 m!116875))

(declare-fun m!117805 () Bool)

(assert (=> d!28825 m!117805))

(assert (=> d!28825 m!116875))

(declare-fun m!117807 () Bool)

(assert (=> d!28825 m!117807))

(declare-fun m!117809 () Bool)

(assert (=> d!28825 m!117809))

(declare-fun m!117811 () Bool)

(assert (=> d!28825 m!117811))

(assert (=> d!28825 m!116875))

(assert (=> d!28825 m!117157))

(declare-fun m!117813 () Bool)

(assert (=> d!28825 m!117813))

(declare-fun m!117815 () Bool)

(assert (=> d!28825 m!117815))

(declare-fun m!117817 () Bool)

(assert (=> d!28825 m!117817))

(assert (=> d!28825 m!116875))

(declare-fun m!117819 () Bool)

(assert (=> d!28825 m!117819))

(assert (=> d!28825 m!117143))

(assert (=> d!28825 m!116897))

(assert (=> d!28825 m!117815))

(assert (=> d!28825 m!117817))

(declare-fun m!117821 () Bool)

(assert (=> d!28825 m!117821))

(declare-fun m!117823 () Bool)

(assert (=> d!28825 m!117823))

(assert (=> d!28825 m!116875))

(declare-fun m!117825 () Bool)

(assert (=> d!28825 m!117825))

(assert (=> d!28825 m!116875))

(declare-fun m!117827 () Bool)

(assert (=> d!28825 m!117827))

(declare-fun m!117829 () Bool)

(assert (=> d!28825 m!117829))

(assert (=> bm!11185 m!116875))

(assert (=> bm!11185 m!117159))

(assert (=> b!105846 m!116875))

(assert (=> b!105846 m!117189))

(declare-fun m!117831 () Bool)

(assert (=> b!105832 m!117831))

(assert (=> b!105841 m!117783))

(assert (=> b!105841 m!116915))

(assert (=> b!105841 m!116915))

(declare-fun m!117833 () Bool)

(assert (=> b!105841 m!117833))

(assert (=> bm!11186 m!116875))

(assert (=> bm!11186 m!117157))

(assert (=> bm!11092 d!28825))

(declare-fun d!28827 () Bool)

(declare-fun e!68894 () Bool)

(assert (=> d!28827 e!68894))

(declare-fun res!52672 () Bool)

(assert (=> d!28827 (=> (not res!52672) (not e!68894))))

(declare-fun lt!54186 () ListLongMap!1543)

(assert (=> d!28827 (= res!52672 (contains!820 lt!54186 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun lt!54183 () List!1616)

(assert (=> d!28827 (= lt!54186 (ListLongMap!1544 lt!54183))))

(declare-fun lt!54184 () Unit!3218)

(declare-fun lt!54185 () Unit!3218)

(assert (=> d!28827 (= lt!54184 lt!54185)))

(assert (=> d!28827 (= (getValueByKey!154 lt!54183 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!28827 (= lt!54185 (lemmaContainsTupThenGetReturnValue!73 lt!54183 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!28827 (= lt!54183 (insertStrictlySorted!76 (toList!787 call!11102) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!28827 (= (+!135 call!11102 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) lt!54186)))

(declare-fun b!105847 () Bool)

(declare-fun res!52671 () Bool)

(assert (=> b!105847 (=> (not res!52671) (not e!68894))))

(assert (=> b!105847 (= res!52671 (= (getValueByKey!154 (toList!787 lt!54186) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!105848 () Bool)

(assert (=> b!105848 (= e!68894 (contains!821 (toList!787 lt!54186) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(assert (= (and d!28827 res!52672) b!105847))

(assert (= (and b!105847 res!52671) b!105848))

(declare-fun m!117835 () Bool)

(assert (=> d!28827 m!117835))

(declare-fun m!117837 () Bool)

(assert (=> d!28827 m!117837))

(declare-fun m!117839 () Bool)

(assert (=> d!28827 m!117839))

(declare-fun m!117841 () Bool)

(assert (=> d!28827 m!117841))

(declare-fun m!117843 () Bool)

(assert (=> b!105847 m!117843))

(declare-fun m!117845 () Bool)

(assert (=> b!105848 m!117845))

(assert (=> b!105345 d!28827))

(declare-fun d!28829 () Bool)

(assert (=> d!28829 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53802 (zeroValue!2456 newMap!16) lt!53601 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54189 () Unit!3218)

(declare-fun choose!670 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 V!3217 Int) Unit!3218)

(assert (=> d!28829 (= lt!54189 (choose!670 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) lt!53802 (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) lt!53601 (defaultEntry!2581 newMap!16)))))

(assert (=> d!28829 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28829 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) lt!53802 (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) lt!53601 (defaultEntry!2581 newMap!16)) lt!54189)))

(declare-fun bs!4329 () Bool)

(assert (= bs!4329 d!28829))

(declare-fun m!117847 () Bool)

(assert (=> bs!4329 m!117847))

(assert (=> bs!4329 m!117277))

(declare-fun m!117849 () Bool)

(assert (=> bs!4329 m!117849))

(assert (=> bs!4329 m!117143))

(assert (=> bs!4329 m!117143))

(declare-fun m!117851 () Bool)

(assert (=> bs!4329 m!117851))

(assert (=> b!105360 d!28829))

(declare-fun d!28831 () Bool)

(declare-fun e!68895 () Bool)

(assert (=> d!28831 e!68895))

(declare-fun res!52674 () Bool)

(assert (=> d!28831 (=> (not res!52674) (not e!68895))))

(declare-fun lt!54193 () ListLongMap!1543)

(assert (=> d!28831 (= res!52674 (contains!820 lt!54193 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54190 () List!1616)

(assert (=> d!28831 (= lt!54193 (ListLongMap!1544 lt!54190))))

(declare-fun lt!54191 () Unit!3218)

(declare-fun lt!54192 () Unit!3218)

(assert (=> d!28831 (= lt!54191 lt!54192)))

(assert (=> d!28831 (= (getValueByKey!154 lt!54190 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28831 (= lt!54192 (lemmaContainsTupThenGetReturnValue!73 lt!54190 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28831 (= lt!54190 (insertStrictlySorted!76 (toList!787 call!11129) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28831 (= (+!135 call!11129 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54193)))

(declare-fun b!105849 () Bool)

(declare-fun res!52673 () Bool)

(assert (=> b!105849 (=> (not res!52673) (not e!68895))))

(assert (=> b!105849 (= res!52673 (= (getValueByKey!154 (toList!787 lt!54193) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!105850 () Bool)

(assert (=> b!105850 (= e!68895 (contains!821 (toList!787 lt!54193) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!28831 res!52674) b!105849))

(assert (= (and b!105849 res!52673) b!105850))

(declare-fun m!117853 () Bool)

(assert (=> d!28831 m!117853))

(declare-fun m!117855 () Bool)

(assert (=> d!28831 m!117855))

(declare-fun m!117857 () Bool)

(assert (=> d!28831 m!117857))

(declare-fun m!117859 () Bool)

(assert (=> d!28831 m!117859))

(declare-fun m!117861 () Bool)

(assert (=> b!105849 m!117861))

(declare-fun m!117863 () Bool)

(assert (=> b!105850 m!117863))

(assert (=> b!105481 d!28831))

(declare-fun b!105853 () Bool)

(declare-fun e!68897 () Option!160)

(assert (=> b!105853 (= e!68897 (getValueByKey!154 (t!5690 (toList!787 lt!53727)) (_1!1201 lt!53606)))))

(declare-fun b!105852 () Bool)

(declare-fun e!68896 () Option!160)

(assert (=> b!105852 (= e!68896 e!68897)))

(declare-fun c!18429 () Bool)

(assert (=> b!105852 (= c!18429 (and ((_ is Cons!1612) (toList!787 lt!53727)) (not (= (_1!1201 (h!2209 (toList!787 lt!53727))) (_1!1201 lt!53606)))))))

(declare-fun d!28833 () Bool)

(declare-fun c!18428 () Bool)

(assert (=> d!28833 (= c!18428 (and ((_ is Cons!1612) (toList!787 lt!53727)) (= (_1!1201 (h!2209 (toList!787 lt!53727))) (_1!1201 lt!53606))))))

(assert (=> d!28833 (= (getValueByKey!154 (toList!787 lt!53727) (_1!1201 lt!53606)) e!68896)))

(declare-fun b!105854 () Bool)

(assert (=> b!105854 (= e!68897 None!158)))

(declare-fun b!105851 () Bool)

(assert (=> b!105851 (= e!68896 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53727)))))))

(assert (= (and d!28833 c!18428) b!105851))

(assert (= (and d!28833 (not c!18428)) b!105852))

(assert (= (and b!105852 c!18429) b!105853))

(assert (= (and b!105852 (not c!18429)) b!105854))

(declare-fun m!117865 () Bool)

(assert (=> b!105853 m!117865))

(assert (=> b!105249 d!28833))

(declare-fun d!28835 () Bool)

(declare-fun res!52675 () Bool)

(declare-fun e!68898 () Bool)

(assert (=> d!28835 (=> res!52675 e!68898)))

(assert (=> d!28835 (= res!52675 (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!28835 (= (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!68898)))

(declare-fun b!105855 () Bool)

(declare-fun e!68899 () Bool)

(assert (=> b!105855 (= e!68898 e!68899)))

(declare-fun res!52676 () Bool)

(assert (=> b!105855 (=> (not res!52676) (not e!68899))))

(assert (=> b!105855 (= res!52676 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!105856 () Bool)

(assert (=> b!105856 (= e!68899 (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!28835 (not res!52675)) b!105855))

(assert (= (and b!105855 res!52676) b!105856))

(assert (=> d!28835 m!117667))

(assert (=> b!105856 m!116875))

(declare-fun m!117867 () Bool)

(assert (=> b!105856 m!117867))

(assert (=> b!105397 d!28835))

(assert (=> b!105466 d!28707))

(declare-fun d!28837 () Bool)

(assert (=> d!28837 (= (inRange!0 (ite c!18307 (ite c!18300 (index!3197 lt!53798) (ite c!18309 (index!3196 lt!53817) (index!3199 lt!53817))) (ite c!18301 (index!3197 lt!53810) (ite c!18302 (index!3196 lt!53794) (index!3199 lt!53794)))) (mask!6726 newMap!16)) (and (bvsge (ite c!18307 (ite c!18300 (index!3197 lt!53798) (ite c!18309 (index!3196 lt!53817) (index!3199 lt!53817))) (ite c!18301 (index!3197 lt!53810) (ite c!18302 (index!3196 lt!53794) (index!3199 lt!53794)))) #b00000000000000000000000000000000) (bvslt (ite c!18307 (ite c!18300 (index!3197 lt!53798) (ite c!18309 (index!3196 lt!53817) (index!3199 lt!53817))) (ite c!18301 (index!3197 lt!53810) (ite c!18302 (index!3196 lt!53794) (index!3199 lt!53794)))) (bvadd (mask!6726 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11101 d!28837))

(declare-fun d!28839 () Bool)

(declare-fun isEmpty!375 (List!1616) Bool)

(assert (=> d!28839 (= (isEmpty!374 lt!53698) (isEmpty!375 (toList!787 lt!53698)))))

(declare-fun bs!4330 () Bool)

(assert (= bs!4330 d!28839))

(declare-fun m!117869 () Bool)

(assert (=> bs!4330 m!117869))

(assert (=> b!105233 d!28839))

(declare-fun d!28841 () Bool)

(declare-fun e!68900 () Bool)

(assert (=> d!28841 e!68900))

(declare-fun res!52677 () Bool)

(assert (=> d!28841 (=> res!52677 e!68900)))

(declare-fun lt!54194 () Bool)

(assert (=> d!28841 (= res!52677 (not lt!54194))))

(declare-fun lt!54197 () Bool)

(assert (=> d!28841 (= lt!54194 lt!54197)))

(declare-fun lt!54196 () Unit!3218)

(declare-fun e!68901 () Unit!3218)

(assert (=> d!28841 (= lt!54196 e!68901)))

(declare-fun c!18430 () Bool)

(assert (=> d!28841 (= c!18430 lt!54197)))

(assert (=> d!28841 (= lt!54197 (containsKey!158 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28841 (= (contains!820 lt!53698 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54194)))

(declare-fun b!105857 () Bool)

(declare-fun lt!54195 () Unit!3218)

(assert (=> b!105857 (= e!68901 lt!54195)))

(assert (=> b!105857 (= lt!54195 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105857 (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105858 () Bool)

(declare-fun Unit!3245 () Unit!3218)

(assert (=> b!105858 (= e!68901 Unit!3245)))

(declare-fun b!105859 () Bool)

(assert (=> b!105859 (= e!68900 (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28841 c!18430) b!105857))

(assert (= (and d!28841 (not c!18430)) b!105858))

(assert (= (and d!28841 (not res!52677)) b!105859))

(declare-fun m!117871 () Bool)

(assert (=> d!28841 m!117871))

(declare-fun m!117873 () Bool)

(assert (=> b!105857 m!117873))

(declare-fun m!117875 () Bool)

(assert (=> b!105857 m!117875))

(assert (=> b!105857 m!117875))

(declare-fun m!117877 () Bool)

(assert (=> b!105857 m!117877))

(assert (=> b!105859 m!117875))

(assert (=> b!105859 m!117875))

(assert (=> b!105859 m!117877))

(assert (=> b!105235 d!28841))

(declare-fun d!28843 () Bool)

(declare-fun isEmpty!376 (Option!160) Bool)

(assert (=> d!28843 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))))

(declare-fun bs!4331 () Bool)

(assert (= bs!4331 d!28843))

(assert (=> bs!4331 m!117137))

(declare-fun m!117879 () Bool)

(assert (=> bs!4331 m!117879))

(assert (=> b!105259 d!28843))

(declare-fun b!105862 () Bool)

(declare-fun e!68903 () Option!160)

(assert (=> b!105862 (= e!68903 (getValueByKey!154 (t!5690 (toList!787 lt!53596)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105861 () Bool)

(declare-fun e!68902 () Option!160)

(assert (=> b!105861 (= e!68902 e!68903)))

(declare-fun c!18432 () Bool)

(assert (=> b!105861 (= c!18432 (and ((_ is Cons!1612) (toList!787 lt!53596)) (not (= (_1!1201 (h!2209 (toList!787 lt!53596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))))

(declare-fun d!28845 () Bool)

(declare-fun c!18431 () Bool)

(assert (=> d!28845 (= c!18431 (and ((_ is Cons!1612) (toList!787 lt!53596)) (= (_1!1201 (h!2209 (toList!787 lt!53596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (=> d!28845 (= (getValueByKey!154 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) e!68902)))

(declare-fun b!105863 () Bool)

(assert (=> b!105863 (= e!68903 None!158)))

(declare-fun b!105860 () Bool)

(assert (=> b!105860 (= e!68902 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53596)))))))

(assert (= (and d!28845 c!18431) b!105860))

(assert (= (and d!28845 (not c!18431)) b!105861))

(assert (= (and b!105861 c!18432) b!105862))

(assert (= (and b!105861 (not c!18432)) b!105863))

(assert (=> b!105862 m!116875))

(declare-fun m!117881 () Bool)

(assert (=> b!105862 m!117881))

(assert (=> b!105259 d!28845))

(declare-fun b!105866 () Bool)

(declare-fun e!68905 () Option!160)

(assert (=> b!105866 (= e!68905 (getValueByKey!154 (t!5690 (toList!787 lt!53712)) (_1!1201 lt!53599)))))

(declare-fun b!105865 () Bool)

(declare-fun e!68904 () Option!160)

(assert (=> b!105865 (= e!68904 e!68905)))

(declare-fun c!18434 () Bool)

(assert (=> b!105865 (= c!18434 (and ((_ is Cons!1612) (toList!787 lt!53712)) (not (= (_1!1201 (h!2209 (toList!787 lt!53712))) (_1!1201 lt!53599)))))))

(declare-fun d!28847 () Bool)

(declare-fun c!18433 () Bool)

(assert (=> d!28847 (= c!18433 (and ((_ is Cons!1612) (toList!787 lt!53712)) (= (_1!1201 (h!2209 (toList!787 lt!53712))) (_1!1201 lt!53599))))))

(assert (=> d!28847 (= (getValueByKey!154 (toList!787 lt!53712) (_1!1201 lt!53599)) e!68904)))

(declare-fun b!105867 () Bool)

(assert (=> b!105867 (= e!68905 None!158)))

(declare-fun b!105864 () Bool)

(assert (=> b!105864 (= e!68904 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53712)))))))

(assert (= (and d!28847 c!18433) b!105864))

(assert (= (and d!28847 (not c!18433)) b!105865))

(assert (= (and b!105865 c!18434) b!105866))

(assert (= (and b!105865 (not c!18434)) b!105867))

(declare-fun m!117883 () Bool)

(assert (=> b!105866 m!117883))

(assert (=> b!105243 d!28847))

(declare-fun d!28849 () Bool)

(declare-fun e!68906 () Bool)

(assert (=> d!28849 e!68906))

(declare-fun res!52678 () Bool)

(assert (=> d!28849 (=> res!52678 e!68906)))

(declare-fun lt!54198 () Bool)

(assert (=> d!28849 (= res!52678 (not lt!54198))))

(declare-fun lt!54201 () Bool)

(assert (=> d!28849 (= lt!54198 lt!54201)))

(declare-fun lt!54200 () Unit!3218)

(declare-fun e!68907 () Unit!3218)

(assert (=> d!28849 (= lt!54200 e!68907)))

(declare-fun c!18435 () Bool)

(assert (=> d!28849 (= c!18435 lt!54201)))

(assert (=> d!28849 (= lt!54201 (containsKey!158 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28849 (= (contains!820 lt!53698 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54198)))

(declare-fun b!105868 () Bool)

(declare-fun lt!54199 () Unit!3218)

(assert (=> b!105868 (= e!68907 lt!54199)))

(assert (=> b!105868 (= lt!54199 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105868 (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105869 () Bool)

(declare-fun Unit!3246 () Unit!3218)

(assert (=> b!105869 (= e!68907 Unit!3246)))

(declare-fun b!105870 () Bool)

(assert (=> b!105870 (= e!68906 (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28849 c!18435) b!105868))

(assert (= (and d!28849 (not c!18435)) b!105869))

(assert (= (and d!28849 (not res!52678)) b!105870))

(declare-fun m!117885 () Bool)

(assert (=> d!28849 m!117885))

(declare-fun m!117887 () Bool)

(assert (=> b!105868 m!117887))

(declare-fun m!117889 () Bool)

(assert (=> b!105868 m!117889))

(assert (=> b!105868 m!117889))

(declare-fun m!117891 () Bool)

(assert (=> b!105868 m!117891))

(assert (=> b!105870 m!117889))

(assert (=> b!105870 m!117889))

(assert (=> b!105870 m!117891))

(assert (=> d!28673 d!28849))

(assert (=> d!28673 d!28685))

(assert (=> b!105417 d!28745))

(declare-fun d!28851 () Bool)

(assert (=> d!28851 (= (map!1270 (_2!1202 lt!53812)) (getCurrentListMap!464 (_keys!4286 (_2!1202 lt!53812)) (_values!2564 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812)) (extraKeys!2386 (_2!1202 lt!53812)) (zeroValue!2456 (_2!1202 lt!53812)) (minValue!2456 (_2!1202 lt!53812)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1202 lt!53812))))))

(declare-fun bs!4332 () Bool)

(assert (= bs!4332 d!28851))

(declare-fun m!117893 () Bool)

(assert (=> bs!4332 m!117893))

(assert (=> bm!11090 d!28851))

(declare-fun b!105873 () Bool)

(declare-fun e!68909 () Option!160)

(assert (=> b!105873 (= e!68909 (getValueByKey!154 (t!5690 (toList!787 lt!53716)) (_1!1201 lt!53599)))))

(declare-fun b!105872 () Bool)

(declare-fun e!68908 () Option!160)

(assert (=> b!105872 (= e!68908 e!68909)))

(declare-fun c!18437 () Bool)

(assert (=> b!105872 (= c!18437 (and ((_ is Cons!1612) (toList!787 lt!53716)) (not (= (_1!1201 (h!2209 (toList!787 lt!53716))) (_1!1201 lt!53599)))))))

(declare-fun d!28853 () Bool)

(declare-fun c!18436 () Bool)

(assert (=> d!28853 (= c!18436 (and ((_ is Cons!1612) (toList!787 lt!53716)) (= (_1!1201 (h!2209 (toList!787 lt!53716))) (_1!1201 lt!53599))))))

(assert (=> d!28853 (= (getValueByKey!154 (toList!787 lt!53716) (_1!1201 lt!53599)) e!68908)))

(declare-fun b!105874 () Bool)

(assert (=> b!105874 (= e!68909 None!158)))

(declare-fun b!105871 () Bool)

(assert (=> b!105871 (= e!68908 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53716)))))))

(assert (= (and d!28853 c!18436) b!105871))

(assert (= (and d!28853 (not c!18436)) b!105872))

(assert (= (and b!105872 c!18437) b!105873))

(assert (= (and b!105872 (not c!18437)) b!105874))

(declare-fun m!117895 () Bool)

(assert (=> b!105873 m!117895))

(assert (=> b!105245 d!28853))

(declare-fun d!28855 () Bool)

(declare-fun res!52679 () Bool)

(declare-fun e!68910 () Bool)

(assert (=> d!28855 (=> (not res!52679) (not e!68910))))

(assert (=> d!28855 (= res!52679 (simpleValid!74 (v!2883 (underlying!355 thiss!992))))))

(assert (=> d!28855 (= (valid!422 (v!2883 (underlying!355 thiss!992))) e!68910)))

(declare-fun b!105875 () Bool)

(declare-fun res!52680 () Bool)

(assert (=> b!105875 (=> (not res!52680) (not e!68910))))

(assert (=> b!105875 (= res!52680 (= (arrayCountValidKeys!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000 (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))) (_size!498 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!105876 () Bool)

(declare-fun res!52681 () Bool)

(assert (=> b!105876 (=> (not res!52681) (not e!68910))))

(assert (=> b!105876 (= res!52681 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!105877 () Bool)

(assert (=> b!105877 (= e!68910 (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000 Nil!1612))))

(assert (= (and d!28855 res!52679) b!105875))

(assert (= (and b!105875 res!52680) b!105876))

(assert (= (and b!105876 res!52681) b!105877))

(declare-fun m!117897 () Bool)

(assert (=> d!28855 m!117897))

(declare-fun m!117899 () Bool)

(assert (=> b!105875 m!117899))

(declare-fun m!117901 () Bool)

(assert (=> b!105876 m!117901))

(declare-fun m!117903 () Bool)

(assert (=> b!105877 m!117903))

(assert (=> d!28669 d!28855))

(declare-fun d!28857 () Bool)

(assert (=> d!28857 (= (apply!98 lt!53875 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1335 (getValueByKey!154 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4333 () Bool)

(assert (= bs!4333 d!28857))

(declare-fun m!117905 () Bool)

(assert (=> bs!4333 m!117905))

(assert (=> bs!4333 m!117905))

(declare-fun m!117907 () Bool)

(assert (=> bs!4333 m!117907))

(assert (=> b!105463 d!28857))

(declare-fun d!28859 () Bool)

(declare-fun e!68911 () Bool)

(assert (=> d!28859 e!68911))

(declare-fun res!52682 () Bool)

(assert (=> d!28859 (=> res!52682 e!68911)))

(declare-fun lt!54202 () Bool)

(assert (=> d!28859 (= res!52682 (not lt!54202))))

(declare-fun lt!54205 () Bool)

(assert (=> d!28859 (= lt!54202 lt!54205)))

(declare-fun lt!54204 () Unit!3218)

(declare-fun e!68912 () Unit!3218)

(assert (=> d!28859 (= lt!54204 e!68912)))

(declare-fun c!18438 () Bool)

(assert (=> d!28859 (= c!18438 lt!54205)))

(assert (=> d!28859 (= lt!54205 (containsKey!158 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28859 (= (contains!820 lt!53875 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54202)))

(declare-fun b!105878 () Bool)

(declare-fun lt!54203 () Unit!3218)

(assert (=> b!105878 (= e!68912 lt!54203)))

(assert (=> b!105878 (= lt!54203 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105878 (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105879 () Bool)

(declare-fun Unit!3247 () Unit!3218)

(assert (=> b!105879 (= e!68912 Unit!3247)))

(declare-fun b!105880 () Bool)

(assert (=> b!105880 (= e!68911 (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28859 c!18438) b!105878))

(assert (= (and d!28859 (not c!18438)) b!105879))

(assert (= (and d!28859 (not res!52682)) b!105880))

(declare-fun m!117909 () Bool)

(assert (=> d!28859 m!117909))

(declare-fun m!117911 () Bool)

(assert (=> b!105878 m!117911))

(declare-fun m!117913 () Bool)

(assert (=> b!105878 m!117913))

(assert (=> b!105878 m!117913))

(declare-fun m!117915 () Bool)

(assert (=> b!105878 m!117915))

(assert (=> b!105880 m!117913))

(assert (=> b!105880 m!117913))

(assert (=> b!105880 m!117915))

(assert (=> bm!11131 d!28859))

(declare-fun b!105883 () Bool)

(declare-fun e!68914 () Option!160)

(assert (=> b!105883 (= e!68914 (getValueByKey!154 (t!5690 (toList!787 lt!53720)) (_1!1201 lt!53606)))))

(declare-fun b!105882 () Bool)

(declare-fun e!68913 () Option!160)

(assert (=> b!105882 (= e!68913 e!68914)))

(declare-fun c!18440 () Bool)

(assert (=> b!105882 (= c!18440 (and ((_ is Cons!1612) (toList!787 lt!53720)) (not (= (_1!1201 (h!2209 (toList!787 lt!53720))) (_1!1201 lt!53606)))))))

(declare-fun d!28861 () Bool)

(declare-fun c!18439 () Bool)

(assert (=> d!28861 (= c!18439 (and ((_ is Cons!1612) (toList!787 lt!53720)) (= (_1!1201 (h!2209 (toList!787 lt!53720))) (_1!1201 lt!53606))))))

(assert (=> d!28861 (= (getValueByKey!154 (toList!787 lt!53720) (_1!1201 lt!53606)) e!68913)))

(declare-fun b!105884 () Bool)

(assert (=> b!105884 (= e!68914 None!158)))

(declare-fun b!105881 () Bool)

(assert (=> b!105881 (= e!68913 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53720)))))))

(assert (= (and d!28861 c!18439) b!105881))

(assert (= (and d!28861 (not c!18439)) b!105882))

(assert (= (and b!105882 c!18440) b!105883))

(assert (= (and b!105882 (not c!18440)) b!105884))

(declare-fun m!117917 () Bool)

(assert (=> b!105883 m!117917))

(assert (=> b!105247 d!28861))

(declare-fun d!28863 () Bool)

(declare-fun res!52683 () Bool)

(declare-fun e!68915 () Bool)

(assert (=> d!28863 (=> res!52683 e!68915)))

(assert (=> d!28863 (= res!52683 (= (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!28863 (= (arrayContainsKey!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000) e!68915)))

(declare-fun b!105885 () Bool)

(declare-fun e!68916 () Bool)

(assert (=> b!105885 (= e!68915 e!68916)))

(declare-fun res!52684 () Bool)

(assert (=> b!105885 (=> (not res!52684) (not e!68916))))

(assert (=> b!105885 (= res!52684 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!105886 () Bool)

(assert (=> b!105886 (= e!68916 (arrayContainsKey!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28863 (not res!52683)) b!105885))

(assert (= (and b!105885 res!52684) b!105886))

(assert (=> d!28863 m!117265))

(assert (=> b!105886 m!116875))

(declare-fun m!117919 () Bool)

(assert (=> b!105886 m!117919))

(assert (=> bm!11088 d!28863))

(declare-fun d!28865 () Bool)

(assert (=> d!28865 (= (apply!98 lt!53875 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1335 (getValueByKey!154 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4334 () Bool)

(assert (= bs!4334 d!28865))

(assert (=> bs!4334 m!117913))

(assert (=> bs!4334 m!117913))

(declare-fun m!117921 () Bool)

(assert (=> bs!4334 m!117921))

(assert (=> b!105472 d!28865))

(declare-fun d!28867 () Bool)

(declare-fun e!68917 () Bool)

(assert (=> d!28867 e!68917))

(declare-fun res!52685 () Bool)

(assert (=> d!28867 (=> res!52685 e!68917)))

(declare-fun lt!54206 () Bool)

(assert (=> d!28867 (= res!52685 (not lt!54206))))

(declare-fun lt!54209 () Bool)

(assert (=> d!28867 (= lt!54206 lt!54209)))

(declare-fun lt!54208 () Unit!3218)

(declare-fun e!68918 () Unit!3218)

(assert (=> d!28867 (= lt!54208 e!68918)))

(declare-fun c!18441 () Bool)

(assert (=> d!28867 (= c!18441 lt!54209)))

(assert (=> d!28867 (= lt!54209 (containsKey!158 (toList!787 lt!53716) (_1!1201 lt!53599)))))

(assert (=> d!28867 (= (contains!820 lt!53716 (_1!1201 lt!53599)) lt!54206)))

(declare-fun b!105887 () Bool)

(declare-fun lt!54207 () Unit!3218)

(assert (=> b!105887 (= e!68918 lt!54207)))

(assert (=> b!105887 (= lt!54207 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53716) (_1!1201 lt!53599)))))

(assert (=> b!105887 (isDefined!108 (getValueByKey!154 (toList!787 lt!53716) (_1!1201 lt!53599)))))

(declare-fun b!105888 () Bool)

(declare-fun Unit!3248 () Unit!3218)

(assert (=> b!105888 (= e!68918 Unit!3248)))

(declare-fun b!105889 () Bool)

(assert (=> b!105889 (= e!68917 (isDefined!108 (getValueByKey!154 (toList!787 lt!53716) (_1!1201 lt!53599))))))

(assert (= (and d!28867 c!18441) b!105887))

(assert (= (and d!28867 (not c!18441)) b!105888))

(assert (= (and d!28867 (not res!52685)) b!105889))

(declare-fun m!117923 () Bool)

(assert (=> d!28867 m!117923))

(declare-fun m!117925 () Bool)

(assert (=> b!105887 m!117925))

(assert (=> b!105887 m!117095))

(assert (=> b!105887 m!117095))

(declare-fun m!117927 () Bool)

(assert (=> b!105887 m!117927))

(assert (=> b!105889 m!117095))

(assert (=> b!105889 m!117095))

(assert (=> b!105889 m!117927))

(assert (=> d!28677 d!28867))

(declare-fun b!105892 () Bool)

(declare-fun e!68920 () Option!160)

(assert (=> b!105892 (= e!68920 (getValueByKey!154 (t!5690 lt!53713) (_1!1201 lt!53599)))))

(declare-fun b!105891 () Bool)

(declare-fun e!68919 () Option!160)

(assert (=> b!105891 (= e!68919 e!68920)))

(declare-fun c!18443 () Bool)

(assert (=> b!105891 (= c!18443 (and ((_ is Cons!1612) lt!53713) (not (= (_1!1201 (h!2209 lt!53713)) (_1!1201 lt!53599)))))))

(declare-fun d!28869 () Bool)

(declare-fun c!18442 () Bool)

(assert (=> d!28869 (= c!18442 (and ((_ is Cons!1612) lt!53713) (= (_1!1201 (h!2209 lt!53713)) (_1!1201 lt!53599))))))

(assert (=> d!28869 (= (getValueByKey!154 lt!53713 (_1!1201 lt!53599)) e!68919)))

(declare-fun b!105893 () Bool)

(assert (=> b!105893 (= e!68920 None!158)))

(declare-fun b!105890 () Bool)

(assert (=> b!105890 (= e!68919 (Some!159 (_2!1201 (h!2209 lt!53713))))))

(assert (= (and d!28869 c!18442) b!105890))

(assert (= (and d!28869 (not c!18442)) b!105891))

(assert (= (and b!105891 c!18443) b!105892))

(assert (= (and b!105891 (not c!18443)) b!105893))

(declare-fun m!117929 () Bool)

(assert (=> b!105892 m!117929))

(assert (=> d!28677 d!28869))

(declare-fun d!28871 () Bool)

(assert (=> d!28871 (= (getValueByKey!154 lt!53713 (_1!1201 lt!53599)) (Some!159 (_2!1201 lt!53599)))))

(declare-fun lt!54210 () Unit!3218)

(assert (=> d!28871 (= lt!54210 (choose!667 lt!53713 (_1!1201 lt!53599) (_2!1201 lt!53599)))))

(declare-fun e!68921 () Bool)

(assert (=> d!28871 e!68921))

(declare-fun res!52686 () Bool)

(assert (=> d!28871 (=> (not res!52686) (not e!68921))))

(assert (=> d!28871 (= res!52686 (isStrictlySorted!304 lt!53713))))

(assert (=> d!28871 (= (lemmaContainsTupThenGetReturnValue!73 lt!53713 (_1!1201 lt!53599) (_2!1201 lt!53599)) lt!54210)))

(declare-fun b!105894 () Bool)

(declare-fun res!52687 () Bool)

(assert (=> b!105894 (=> (not res!52687) (not e!68921))))

(assert (=> b!105894 (= res!52687 (containsKey!158 lt!53713 (_1!1201 lt!53599)))))

(declare-fun b!105895 () Bool)

(assert (=> b!105895 (= e!68921 (contains!821 lt!53713 (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(assert (= (and d!28871 res!52686) b!105894))

(assert (= (and b!105894 res!52687) b!105895))

(assert (=> d!28871 m!117089))

(declare-fun m!117931 () Bool)

(assert (=> d!28871 m!117931))

(declare-fun m!117933 () Bool)

(assert (=> d!28871 m!117933))

(declare-fun m!117935 () Bool)

(assert (=> b!105894 m!117935))

(declare-fun m!117937 () Bool)

(assert (=> b!105895 m!117937))

(assert (=> d!28677 d!28871))

(declare-fun b!105896 () Bool)

(declare-fun c!18446 () Bool)

(assert (=> b!105896 (= c!18446 (and ((_ is Cons!1612) (toList!787 lt!53604)) (bvsgt (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 lt!53599))))))

(declare-fun e!68925 () List!1616)

(declare-fun e!68924 () List!1616)

(assert (=> b!105896 (= e!68925 e!68924)))

(declare-fun b!105897 () Bool)

(declare-fun e!68923 () List!1616)

(declare-fun call!11192 () List!1616)

(assert (=> b!105897 (= e!68923 call!11192)))

(declare-fun b!105898 () Bool)

(declare-fun e!68926 () Bool)

(declare-fun lt!54211 () List!1616)

(assert (=> b!105898 (= e!68926 (contains!821 lt!54211 (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun b!105899 () Bool)

(declare-fun res!52688 () Bool)

(assert (=> b!105899 (=> (not res!52688) (not e!68926))))

(assert (=> b!105899 (= res!52688 (containsKey!158 lt!54211 (_1!1201 lt!53599)))))

(declare-fun b!105900 () Bool)

(declare-fun call!11193 () List!1616)

(assert (=> b!105900 (= e!68924 call!11193)))

(declare-fun b!105901 () Bool)

(assert (=> b!105901 (= e!68924 call!11193)))

(declare-fun b!105902 () Bool)

(assert (=> b!105902 (= e!68923 e!68925)))

(declare-fun c!18447 () Bool)

(assert (=> b!105902 (= c!18447 (and ((_ is Cons!1612) (toList!787 lt!53604)) (= (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 lt!53599))))))

(declare-fun bm!11189 () Bool)

(declare-fun call!11194 () List!1616)

(assert (=> bm!11189 (= call!11194 call!11192)))

(declare-fun b!105903 () Bool)

(assert (=> b!105903 (= e!68925 call!11194)))

(declare-fun b!105904 () Bool)

(declare-fun e!68922 () List!1616)

(assert (=> b!105904 (= e!68922 (insertStrictlySorted!76 (t!5690 (toList!787 lt!53604)) (_1!1201 lt!53599) (_2!1201 lt!53599)))))

(declare-fun bm!11191 () Bool)

(assert (=> bm!11191 (= call!11193 call!11194)))

(declare-fun b!105905 () Bool)

(assert (=> b!105905 (= e!68922 (ite c!18447 (t!5690 (toList!787 lt!53604)) (ite c!18446 (Cons!1612 (h!2209 (toList!787 lt!53604)) (t!5690 (toList!787 lt!53604))) Nil!1613)))))

(declare-fun c!18444 () Bool)

(declare-fun bm!11190 () Bool)

(assert (=> bm!11190 (= call!11192 ($colon$colon!80 e!68922 (ite c!18444 (h!2209 (toList!787 lt!53604)) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599)))))))

(declare-fun c!18445 () Bool)

(assert (=> bm!11190 (= c!18445 c!18444)))

(declare-fun d!28873 () Bool)

(assert (=> d!28873 e!68926))

(declare-fun res!52689 () Bool)

(assert (=> d!28873 (=> (not res!52689) (not e!68926))))

(assert (=> d!28873 (= res!52689 (isStrictlySorted!304 lt!54211))))

(assert (=> d!28873 (= lt!54211 e!68923)))

(assert (=> d!28873 (= c!18444 (and ((_ is Cons!1612) (toList!787 lt!53604)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 lt!53599))))))

(assert (=> d!28873 (isStrictlySorted!304 (toList!787 lt!53604))))

(assert (=> d!28873 (= (insertStrictlySorted!76 (toList!787 lt!53604) (_1!1201 lt!53599) (_2!1201 lt!53599)) lt!54211)))

(assert (= (and d!28873 c!18444) b!105897))

(assert (= (and d!28873 (not c!18444)) b!105902))

(assert (= (and b!105902 c!18447) b!105903))

(assert (= (and b!105902 (not c!18447)) b!105896))

(assert (= (and b!105896 c!18446) b!105900))

(assert (= (and b!105896 (not c!18446)) b!105901))

(assert (= (or b!105900 b!105901) bm!11191))

(assert (= (or b!105903 bm!11191) bm!11189))

(assert (= (or b!105897 bm!11189) bm!11190))

(assert (= (and bm!11190 c!18445) b!105904))

(assert (= (and bm!11190 (not c!18445)) b!105905))

(assert (= (and d!28873 res!52689) b!105899))

(assert (= (and b!105899 res!52688) b!105898))

(declare-fun m!117939 () Bool)

(assert (=> b!105898 m!117939))

(declare-fun m!117941 () Bool)

(assert (=> d!28873 m!117941))

(declare-fun m!117943 () Bool)

(assert (=> d!28873 m!117943))

(declare-fun m!117945 () Bool)

(assert (=> b!105899 m!117945))

(declare-fun m!117947 () Bool)

(assert (=> b!105904 m!117947))

(declare-fun m!117949 () Bool)

(assert (=> bm!11190 m!117949))

(assert (=> d!28677 d!28873))

(declare-fun d!28875 () Bool)

(declare-fun e!68927 () Bool)

(assert (=> d!28875 e!68927))

(declare-fun res!52690 () Bool)

(assert (=> d!28875 (=> res!52690 e!68927)))

(declare-fun lt!54212 () Bool)

(assert (=> d!28875 (= res!52690 (not lt!54212))))

(declare-fun lt!54215 () Bool)

(assert (=> d!28875 (= lt!54212 lt!54215)))

(declare-fun lt!54214 () Unit!3218)

(declare-fun e!68928 () Unit!3218)

(assert (=> d!28875 (= lt!54214 e!68928)))

(declare-fun c!18448 () Bool)

(assert (=> d!28875 (= c!18448 lt!54215)))

(assert (=> d!28875 (= lt!54215 (containsKey!158 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!28875 (= (contains!820 e!68596 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) lt!54212)))

(declare-fun b!105906 () Bool)

(declare-fun lt!54213 () Unit!3218)

(assert (=> b!105906 (= e!68928 lt!54213)))

(assert (=> b!105906 (= lt!54213 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> b!105906 (isDefined!108 (getValueByKey!154 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!105907 () Bool)

(declare-fun Unit!3249 () Unit!3218)

(assert (=> b!105907 (= e!68928 Unit!3249)))

(declare-fun b!105908 () Bool)

(assert (=> b!105908 (= e!68927 (isDefined!108 (getValueByKey!154 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (= (and d!28875 c!18448) b!105906))

(assert (= (and d!28875 (not c!18448)) b!105907))

(assert (= (and d!28875 (not res!52690)) b!105908))

(assert (=> d!28875 m!116875))

(declare-fun m!117951 () Bool)

(assert (=> d!28875 m!117951))

(assert (=> b!105906 m!116875))

(declare-fun m!117953 () Bool)

(assert (=> b!105906 m!117953))

(assert (=> b!105906 m!116875))

(declare-fun m!117955 () Bool)

(assert (=> b!105906 m!117955))

(assert (=> b!105906 m!117955))

(declare-fun m!117957 () Bool)

(assert (=> b!105906 m!117957))

(assert (=> b!105908 m!116875))

(assert (=> b!105908 m!117955))

(assert (=> b!105908 m!117955))

(assert (=> b!105908 m!117957))

(assert (=> bm!11104 d!28875))

(assert (=> bm!11099 d!28711))

(declare-fun d!28877 () Bool)

(declare-fun e!68929 () Bool)

(assert (=> d!28877 e!68929))

(declare-fun res!52691 () Bool)

(assert (=> d!28877 (=> res!52691 e!68929)))

(declare-fun lt!54216 () Bool)

(assert (=> d!28877 (= res!52691 (not lt!54216))))

(declare-fun lt!54219 () Bool)

(assert (=> d!28877 (= lt!54216 lt!54219)))

(declare-fun lt!54218 () Unit!3218)

(declare-fun e!68930 () Unit!3218)

(assert (=> d!28877 (= lt!54218 e!68930)))

(declare-fun c!18449 () Bool)

(assert (=> d!28877 (= c!18449 lt!54219)))

(assert (=> d!28877 (= lt!54219 (containsKey!158 (toList!787 lt!53720) (_1!1201 lt!53606)))))

(assert (=> d!28877 (= (contains!820 lt!53720 (_1!1201 lt!53606)) lt!54216)))

(declare-fun b!105909 () Bool)

(declare-fun lt!54217 () Unit!3218)

(assert (=> b!105909 (= e!68930 lt!54217)))

(assert (=> b!105909 (= lt!54217 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53720) (_1!1201 lt!53606)))))

(assert (=> b!105909 (isDefined!108 (getValueByKey!154 (toList!787 lt!53720) (_1!1201 lt!53606)))))

(declare-fun b!105910 () Bool)

(declare-fun Unit!3250 () Unit!3218)

(assert (=> b!105910 (= e!68930 Unit!3250)))

(declare-fun b!105911 () Bool)

(assert (=> b!105911 (= e!68929 (isDefined!108 (getValueByKey!154 (toList!787 lt!53720) (_1!1201 lt!53606))))))

(assert (= (and d!28877 c!18449) b!105909))

(assert (= (and d!28877 (not c!18449)) b!105910))

(assert (= (and d!28877 (not res!52691)) b!105911))

(declare-fun m!117959 () Bool)

(assert (=> d!28877 m!117959))

(declare-fun m!117961 () Bool)

(assert (=> b!105909 m!117961))

(assert (=> b!105909 m!117107))

(assert (=> b!105909 m!117107))

(declare-fun m!117963 () Bool)

(assert (=> b!105909 m!117963))

(assert (=> b!105911 m!117107))

(assert (=> b!105911 m!117107))

(assert (=> b!105911 m!117963))

(assert (=> d!28679 d!28877))

(declare-fun b!105914 () Bool)

(declare-fun e!68932 () Option!160)

(assert (=> b!105914 (= e!68932 (getValueByKey!154 (t!5690 lt!53717) (_1!1201 lt!53606)))))

(declare-fun b!105913 () Bool)

(declare-fun e!68931 () Option!160)

(assert (=> b!105913 (= e!68931 e!68932)))

(declare-fun c!18451 () Bool)

(assert (=> b!105913 (= c!18451 (and ((_ is Cons!1612) lt!53717) (not (= (_1!1201 (h!2209 lt!53717)) (_1!1201 lt!53606)))))))

(declare-fun d!28879 () Bool)

(declare-fun c!18450 () Bool)

(assert (=> d!28879 (= c!18450 (and ((_ is Cons!1612) lt!53717) (= (_1!1201 (h!2209 lt!53717)) (_1!1201 lt!53606))))))

(assert (=> d!28879 (= (getValueByKey!154 lt!53717 (_1!1201 lt!53606)) e!68931)))

(declare-fun b!105915 () Bool)

(assert (=> b!105915 (= e!68932 None!158)))

(declare-fun b!105912 () Bool)

(assert (=> b!105912 (= e!68931 (Some!159 (_2!1201 (h!2209 lt!53717))))))

(assert (= (and d!28879 c!18450) b!105912))

(assert (= (and d!28879 (not c!18450)) b!105913))

(assert (= (and b!105913 c!18451) b!105914))

(assert (= (and b!105913 (not c!18451)) b!105915))

(declare-fun m!117965 () Bool)

(assert (=> b!105914 m!117965))

(assert (=> d!28679 d!28879))

(declare-fun d!28881 () Bool)

(assert (=> d!28881 (= (getValueByKey!154 lt!53717 (_1!1201 lt!53606)) (Some!159 (_2!1201 lt!53606)))))

(declare-fun lt!54220 () Unit!3218)

(assert (=> d!28881 (= lt!54220 (choose!667 lt!53717 (_1!1201 lt!53606) (_2!1201 lt!53606)))))

(declare-fun e!68933 () Bool)

(assert (=> d!28881 e!68933))

(declare-fun res!52692 () Bool)

(assert (=> d!28881 (=> (not res!52692) (not e!68933))))

(assert (=> d!28881 (= res!52692 (isStrictlySorted!304 lt!53717))))

(assert (=> d!28881 (= (lemmaContainsTupThenGetReturnValue!73 lt!53717 (_1!1201 lt!53606) (_2!1201 lt!53606)) lt!54220)))

(declare-fun b!105916 () Bool)

(declare-fun res!52693 () Bool)

(assert (=> b!105916 (=> (not res!52693) (not e!68933))))

(assert (=> b!105916 (= res!52693 (containsKey!158 lt!53717 (_1!1201 lt!53606)))))

(declare-fun b!105917 () Bool)

(assert (=> b!105917 (= e!68933 (contains!821 lt!53717 (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(assert (= (and d!28881 res!52692) b!105916))

(assert (= (and b!105916 res!52693) b!105917))

(assert (=> d!28881 m!117101))

(declare-fun m!117967 () Bool)

(assert (=> d!28881 m!117967))

(declare-fun m!117969 () Bool)

(assert (=> d!28881 m!117969))

(declare-fun m!117971 () Bool)

(assert (=> b!105916 m!117971))

(declare-fun m!117973 () Bool)

(assert (=> b!105917 m!117973))

(assert (=> d!28679 d!28881))

(declare-fun b!105918 () Bool)

(declare-fun c!18454 () Bool)

(assert (=> b!105918 (= c!18454 (and ((_ is Cons!1612) (toList!787 lt!53604)) (bvsgt (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 lt!53606))))))

(declare-fun e!68937 () List!1616)

(declare-fun e!68936 () List!1616)

(assert (=> b!105918 (= e!68937 e!68936)))

(declare-fun b!105919 () Bool)

(declare-fun e!68935 () List!1616)

(declare-fun call!11195 () List!1616)

(assert (=> b!105919 (= e!68935 call!11195)))

(declare-fun b!105920 () Bool)

(declare-fun e!68938 () Bool)

(declare-fun lt!54221 () List!1616)

(assert (=> b!105920 (= e!68938 (contains!821 lt!54221 (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun b!105921 () Bool)

(declare-fun res!52694 () Bool)

(assert (=> b!105921 (=> (not res!52694) (not e!68938))))

(assert (=> b!105921 (= res!52694 (containsKey!158 lt!54221 (_1!1201 lt!53606)))))

(declare-fun b!105922 () Bool)

(declare-fun call!11196 () List!1616)

(assert (=> b!105922 (= e!68936 call!11196)))

(declare-fun b!105923 () Bool)

(assert (=> b!105923 (= e!68936 call!11196)))

(declare-fun b!105924 () Bool)

(assert (=> b!105924 (= e!68935 e!68937)))

(declare-fun c!18455 () Bool)

(assert (=> b!105924 (= c!18455 (and ((_ is Cons!1612) (toList!787 lt!53604)) (= (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 lt!53606))))))

(declare-fun bm!11192 () Bool)

(declare-fun call!11197 () List!1616)

(assert (=> bm!11192 (= call!11197 call!11195)))

(declare-fun b!105925 () Bool)

(assert (=> b!105925 (= e!68937 call!11197)))

(declare-fun b!105926 () Bool)

(declare-fun e!68934 () List!1616)

(assert (=> b!105926 (= e!68934 (insertStrictlySorted!76 (t!5690 (toList!787 lt!53604)) (_1!1201 lt!53606) (_2!1201 lt!53606)))))

(declare-fun bm!11194 () Bool)

(assert (=> bm!11194 (= call!11196 call!11197)))

(declare-fun b!105927 () Bool)

(assert (=> b!105927 (= e!68934 (ite c!18455 (t!5690 (toList!787 lt!53604)) (ite c!18454 (Cons!1612 (h!2209 (toList!787 lt!53604)) (t!5690 (toList!787 lt!53604))) Nil!1613)))))

(declare-fun bm!11193 () Bool)

(declare-fun c!18452 () Bool)

(assert (=> bm!11193 (= call!11195 ($colon$colon!80 e!68934 (ite c!18452 (h!2209 (toList!787 lt!53604)) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606)))))))

(declare-fun c!18453 () Bool)

(assert (=> bm!11193 (= c!18453 c!18452)))

(declare-fun d!28883 () Bool)

(assert (=> d!28883 e!68938))

(declare-fun res!52695 () Bool)

(assert (=> d!28883 (=> (not res!52695) (not e!68938))))

(assert (=> d!28883 (= res!52695 (isStrictlySorted!304 lt!54221))))

(assert (=> d!28883 (= lt!54221 e!68935)))

(assert (=> d!28883 (= c!18452 (and ((_ is Cons!1612) (toList!787 lt!53604)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 lt!53606))))))

(assert (=> d!28883 (isStrictlySorted!304 (toList!787 lt!53604))))

(assert (=> d!28883 (= (insertStrictlySorted!76 (toList!787 lt!53604) (_1!1201 lt!53606) (_2!1201 lt!53606)) lt!54221)))

(assert (= (and d!28883 c!18452) b!105919))

(assert (= (and d!28883 (not c!18452)) b!105924))

(assert (= (and b!105924 c!18455) b!105925))

(assert (= (and b!105924 (not c!18455)) b!105918))

(assert (= (and b!105918 c!18454) b!105922))

(assert (= (and b!105918 (not c!18454)) b!105923))

(assert (= (or b!105922 b!105923) bm!11194))

(assert (= (or b!105925 bm!11194) bm!11192))

(assert (= (or b!105919 bm!11192) bm!11193))

(assert (= (and bm!11193 c!18453) b!105926))

(assert (= (and bm!11193 (not c!18453)) b!105927))

(assert (= (and d!28883 res!52695) b!105921))

(assert (= (and b!105921 res!52694) b!105920))

(declare-fun m!117975 () Bool)

(assert (=> b!105920 m!117975))

(declare-fun m!117977 () Bool)

(assert (=> d!28883 m!117977))

(assert (=> d!28883 m!117943))

(declare-fun m!117979 () Bool)

(assert (=> b!105921 m!117979))

(declare-fun m!117981 () Bool)

(assert (=> b!105926 m!117981))

(declare-fun m!117983 () Bool)

(assert (=> bm!11193 m!117983))

(assert (=> d!28679 d!28883))

(declare-fun d!28885 () Bool)

(declare-fun e!68939 () Bool)

(assert (=> d!28885 e!68939))

(declare-fun res!52697 () Bool)

(assert (=> d!28885 (=> (not res!52697) (not e!68939))))

(declare-fun lt!54225 () ListLongMap!1543)

(assert (=> d!28885 (= res!52697 (contains!820 lt!54225 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun lt!54222 () List!1616)

(assert (=> d!28885 (= lt!54225 (ListLongMap!1544 lt!54222))))

(declare-fun lt!54223 () Unit!3218)

(declare-fun lt!54224 () Unit!3218)

(assert (=> d!28885 (= lt!54223 lt!54224)))

(assert (=> d!28885 (= (getValueByKey!154 lt!54222 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!28885 (= lt!54224 (lemmaContainsTupThenGetReturnValue!73 lt!54222 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!28885 (= lt!54222 (insertStrictlySorted!76 (toList!787 lt!53604) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!28885 (= (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) lt!54225)))

(declare-fun b!105928 () Bool)

(declare-fun res!52696 () Bool)

(assert (=> b!105928 (=> (not res!52696) (not e!68939))))

(assert (=> b!105928 (= res!52696 (= (getValueByKey!154 (toList!787 lt!54225) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!105929 () Bool)

(assert (=> b!105929 (= e!68939 (contains!821 (toList!787 lt!54225) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(assert (= (and d!28885 res!52697) b!105928))

(assert (= (and b!105928 res!52696) b!105929))

(declare-fun m!117985 () Bool)

(assert (=> d!28885 m!117985))

(declare-fun m!117987 () Bool)

(assert (=> d!28885 m!117987))

(declare-fun m!117989 () Bool)

(assert (=> d!28885 m!117989))

(declare-fun m!117991 () Bool)

(assert (=> d!28885 m!117991))

(declare-fun m!117993 () Bool)

(assert (=> b!105928 m!117993))

(declare-fun m!117995 () Bool)

(assert (=> b!105929 m!117995))

(assert (=> d!28681 d!28885))

(declare-fun d!28887 () Bool)

(declare-fun e!68940 () Bool)

(assert (=> d!28887 e!68940))

(declare-fun res!52699 () Bool)

(assert (=> d!28887 (=> (not res!52699) (not e!68940))))

(declare-fun lt!54229 () ListLongMap!1543)

(assert (=> d!28887 (= res!52699 (contains!820 lt!54229 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54226 () List!1616)

(assert (=> d!28887 (= lt!54229 (ListLongMap!1544 lt!54226))))

(declare-fun lt!54227 () Unit!3218)

(declare-fun lt!54228 () Unit!3218)

(assert (=> d!28887 (= lt!54227 lt!54228)))

(assert (=> d!28887 (= (getValueByKey!154 lt!54226 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28887 (= lt!54228 (lemmaContainsTupThenGetReturnValue!73 lt!54226 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28887 (= lt!54226 (insertStrictlySorted!76 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28887 (= (+!135 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54229)))

(declare-fun b!105930 () Bool)

(declare-fun res!52698 () Bool)

(assert (=> b!105930 (=> (not res!52698) (not e!68940))))

(assert (=> b!105930 (= res!52698 (= (getValueByKey!154 (toList!787 lt!54229) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!105931 () Bool)

(assert (=> b!105931 (= e!68940 (contains!821 (toList!787 lt!54229) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!28887 res!52699) b!105930))

(assert (= (and b!105930 res!52698) b!105931))

(declare-fun m!117997 () Bool)

(assert (=> d!28887 m!117997))

(declare-fun m!117999 () Bool)

(assert (=> d!28887 m!117999))

(declare-fun m!118001 () Bool)

(assert (=> d!28887 m!118001))

(declare-fun m!118003 () Bool)

(assert (=> d!28887 m!118003))

(declare-fun m!118005 () Bool)

(assert (=> b!105930 m!118005))

(declare-fun m!118007 () Bool)

(assert (=> b!105931 m!118007))

(assert (=> d!28681 d!28887))

(declare-fun d!28889 () Bool)

(declare-fun e!68941 () Bool)

(assert (=> d!28889 e!68941))

(declare-fun res!52701 () Bool)

(assert (=> d!28889 (=> (not res!52701) (not e!68941))))

(declare-fun lt!54233 () ListLongMap!1543)

(assert (=> d!28889 (= res!52701 (contains!820 lt!54233 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54230 () List!1616)

(assert (=> d!28889 (= lt!54233 (ListLongMap!1544 lt!54230))))

(declare-fun lt!54231 () Unit!3218)

(declare-fun lt!54232 () Unit!3218)

(assert (=> d!28889 (= lt!54231 lt!54232)))

(assert (=> d!28889 (= (getValueByKey!154 lt!54230 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28889 (= lt!54232 (lemmaContainsTupThenGetReturnValue!73 lt!54230 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28889 (= lt!54230 (insertStrictlySorted!76 (toList!787 lt!53604) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28889 (= (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54233)))

(declare-fun b!105932 () Bool)

(declare-fun res!52700 () Bool)

(assert (=> b!105932 (=> (not res!52700) (not e!68941))))

(assert (=> b!105932 (= res!52700 (= (getValueByKey!154 (toList!787 lt!54233) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!105933 () Bool)

(assert (=> b!105933 (= e!68941 (contains!821 (toList!787 lt!54233) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!28889 res!52701) b!105932))

(assert (= (and b!105932 res!52700) b!105933))

(declare-fun m!118009 () Bool)

(assert (=> d!28889 m!118009))

(declare-fun m!118011 () Bool)

(assert (=> d!28889 m!118011))

(declare-fun m!118013 () Bool)

(assert (=> d!28889 m!118013))

(declare-fun m!118015 () Bool)

(assert (=> d!28889 m!118015))

(declare-fun m!118017 () Bool)

(assert (=> b!105932 m!118017))

(declare-fun m!118019 () Bool)

(assert (=> b!105933 m!118019))

(assert (=> d!28681 d!28889))

(declare-fun d!28891 () Bool)

(assert (=> d!28891 (= (+!135 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (+!135 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(assert (=> d!28891 true))

(declare-fun _$28!161 () Unit!3218)

(assert (=> d!28891 (= (choose!659 lt!53604 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) _$28!161)))

(declare-fun bs!4335 () Bool)

(assert (= bs!4335 d!28891))

(assert (=> bs!4335 m!117117))

(assert (=> bs!4335 m!117117))

(assert (=> bs!4335 m!117119))

(assert (=> bs!4335 m!117111))

(assert (=> bs!4335 m!117111))

(assert (=> bs!4335 m!117113))

(assert (=> d!28681 d!28891))

(declare-fun d!28893 () Bool)

(declare-fun e!68942 () Bool)

(assert (=> d!28893 e!68942))

(declare-fun res!52703 () Bool)

(assert (=> d!28893 (=> (not res!52703) (not e!68942))))

(declare-fun lt!54237 () ListLongMap!1543)

(assert (=> d!28893 (= res!52703 (contains!820 lt!54237 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun lt!54234 () List!1616)

(assert (=> d!28893 (= lt!54237 (ListLongMap!1544 lt!54234))))

(declare-fun lt!54235 () Unit!3218)

(declare-fun lt!54236 () Unit!3218)

(assert (=> d!28893 (= lt!54235 lt!54236)))

(assert (=> d!28893 (= (getValueByKey!154 lt!54234 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!28893 (= lt!54236 (lemmaContainsTupThenGetReturnValue!73 lt!54234 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!28893 (= lt!54234 (insertStrictlySorted!76 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!28893 (= (+!135 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) lt!54237)))

(declare-fun b!105934 () Bool)

(declare-fun res!52702 () Bool)

(assert (=> b!105934 (=> (not res!52702) (not e!68942))))

(assert (=> b!105934 (= res!52702 (= (getValueByKey!154 (toList!787 lt!54237) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!105935 () Bool)

(assert (=> b!105935 (= e!68942 (contains!821 (toList!787 lt!54237) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(assert (= (and d!28893 res!52703) b!105934))

(assert (= (and b!105934 res!52702) b!105935))

(declare-fun m!118021 () Bool)

(assert (=> d!28893 m!118021))

(declare-fun m!118023 () Bool)

(assert (=> d!28893 m!118023))

(declare-fun m!118025 () Bool)

(assert (=> d!28893 m!118025))

(declare-fun m!118027 () Bool)

(assert (=> d!28893 m!118027))

(declare-fun m!118029 () Bool)

(assert (=> b!105934 m!118029))

(declare-fun m!118031 () Bool)

(assert (=> b!105935 m!118031))

(assert (=> d!28681 d!28893))

(assert (=> d!28693 d!28697))

(declare-fun d!28895 () Bool)

(assert (=> d!28895 (not (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!28895 true))

(declare-fun _$68!106 () Unit!3218)

(assert (=> d!28895 (= (choose!68 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612)) _$68!106)))

(declare-fun bs!4336 () Bool)

(assert (= bs!4336 d!28895))

(assert (=> bs!4336 m!116875))

(assert (=> bs!4336 m!116911))

(assert (=> d!28693 d!28895))

(declare-fun d!28897 () Bool)

(declare-fun e!68943 () Bool)

(assert (=> d!28897 e!68943))

(declare-fun res!52704 () Bool)

(assert (=> d!28897 (=> res!52704 e!68943)))

(declare-fun lt!54238 () Bool)

(assert (=> d!28897 (= res!52704 (not lt!54238))))

(declare-fun lt!54241 () Bool)

(assert (=> d!28897 (= lt!54238 lt!54241)))

(declare-fun lt!54240 () Unit!3218)

(declare-fun e!68944 () Unit!3218)

(assert (=> d!28897 (= lt!54240 e!68944)))

(declare-fun c!18456 () Bool)

(assert (=> d!28897 (= c!18456 lt!54241)))

(assert (=> d!28897 (= lt!54241 (containsKey!158 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28897 (= (contains!820 lt!53875 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54238)))

(declare-fun b!105936 () Bool)

(declare-fun lt!54239 () Unit!3218)

(assert (=> b!105936 (= e!68944 lt!54239)))

(assert (=> b!105936 (= lt!54239 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105936 (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105937 () Bool)

(declare-fun Unit!3251 () Unit!3218)

(assert (=> b!105937 (= e!68944 Unit!3251)))

(declare-fun b!105938 () Bool)

(assert (=> b!105938 (= e!68943 (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28897 c!18456) b!105936))

(assert (= (and d!28897 (not c!18456)) b!105937))

(assert (= (and d!28897 (not res!52704)) b!105938))

(declare-fun m!118033 () Bool)

(assert (=> d!28897 m!118033))

(declare-fun m!118035 () Bool)

(assert (=> b!105936 m!118035))

(assert (=> b!105936 m!117905))

(assert (=> b!105936 m!117905))

(declare-fun m!118037 () Bool)

(assert (=> b!105936 m!118037))

(assert (=> b!105938 m!117905))

(assert (=> b!105938 m!117905))

(assert (=> b!105938 m!118037))

(assert (=> bm!11130 d!28897))

(declare-fun d!28899 () Bool)

(declare-fun e!68945 () Bool)

(assert (=> d!28899 e!68945))

(declare-fun res!52705 () Bool)

(assert (=> d!28899 (=> res!52705 e!68945)))

(declare-fun lt!54242 () Bool)

(assert (=> d!28899 (= res!52705 (not lt!54242))))

(declare-fun lt!54245 () Bool)

(assert (=> d!28899 (= lt!54242 lt!54245)))

(declare-fun lt!54244 () Unit!3218)

(declare-fun e!68946 () Unit!3218)

(assert (=> d!28899 (= lt!54244 e!68946)))

(declare-fun c!18457 () Bool)

(assert (=> d!28899 (= c!18457 lt!54245)))

(assert (=> d!28899 (= lt!54245 (containsKey!158 (toList!787 lt!53727) (_1!1201 lt!53606)))))

(assert (=> d!28899 (= (contains!820 lt!53727 (_1!1201 lt!53606)) lt!54242)))

(declare-fun b!105939 () Bool)

(declare-fun lt!54243 () Unit!3218)

(assert (=> b!105939 (= e!68946 lt!54243)))

(assert (=> b!105939 (= lt!54243 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53727) (_1!1201 lt!53606)))))

(assert (=> b!105939 (isDefined!108 (getValueByKey!154 (toList!787 lt!53727) (_1!1201 lt!53606)))))

(declare-fun b!105940 () Bool)

(declare-fun Unit!3252 () Unit!3218)

(assert (=> b!105940 (= e!68946 Unit!3252)))

(declare-fun b!105941 () Bool)

(assert (=> b!105941 (= e!68945 (isDefined!108 (getValueByKey!154 (toList!787 lt!53727) (_1!1201 lt!53606))))))

(assert (= (and d!28899 c!18457) b!105939))

(assert (= (and d!28899 (not c!18457)) b!105940))

(assert (= (and d!28899 (not res!52705)) b!105941))

(declare-fun m!118039 () Bool)

(assert (=> d!28899 m!118039))

(declare-fun m!118041 () Bool)

(assert (=> b!105939 m!118041))

(assert (=> b!105939 m!117129))

(assert (=> b!105939 m!117129))

(declare-fun m!118043 () Bool)

(assert (=> b!105939 m!118043))

(assert (=> b!105941 m!117129))

(assert (=> b!105941 m!117129))

(assert (=> b!105941 m!118043))

(assert (=> d!28683 d!28899))

(declare-fun b!105944 () Bool)

(declare-fun e!68948 () Option!160)

(assert (=> b!105944 (= e!68948 (getValueByKey!154 (t!5690 lt!53724) (_1!1201 lt!53606)))))

(declare-fun b!105943 () Bool)

(declare-fun e!68947 () Option!160)

(assert (=> b!105943 (= e!68947 e!68948)))

(declare-fun c!18459 () Bool)

(assert (=> b!105943 (= c!18459 (and ((_ is Cons!1612) lt!53724) (not (= (_1!1201 (h!2209 lt!53724)) (_1!1201 lt!53606)))))))

(declare-fun d!28901 () Bool)

(declare-fun c!18458 () Bool)

(assert (=> d!28901 (= c!18458 (and ((_ is Cons!1612) lt!53724) (= (_1!1201 (h!2209 lt!53724)) (_1!1201 lt!53606))))))

(assert (=> d!28901 (= (getValueByKey!154 lt!53724 (_1!1201 lt!53606)) e!68947)))

(declare-fun b!105945 () Bool)

(assert (=> b!105945 (= e!68948 None!158)))

(declare-fun b!105942 () Bool)

(assert (=> b!105942 (= e!68947 (Some!159 (_2!1201 (h!2209 lt!53724))))))

(assert (= (and d!28901 c!18458) b!105942))

(assert (= (and d!28901 (not c!18458)) b!105943))

(assert (= (and b!105943 c!18459) b!105944))

(assert (= (and b!105943 (not c!18459)) b!105945))

(declare-fun m!118045 () Bool)

(assert (=> b!105944 m!118045))

(assert (=> d!28683 d!28901))

(declare-fun d!28903 () Bool)

(assert (=> d!28903 (= (getValueByKey!154 lt!53724 (_1!1201 lt!53606)) (Some!159 (_2!1201 lt!53606)))))

(declare-fun lt!54246 () Unit!3218)

(assert (=> d!28903 (= lt!54246 (choose!667 lt!53724 (_1!1201 lt!53606) (_2!1201 lt!53606)))))

(declare-fun e!68949 () Bool)

(assert (=> d!28903 e!68949))

(declare-fun res!52706 () Bool)

(assert (=> d!28903 (=> (not res!52706) (not e!68949))))

(assert (=> d!28903 (= res!52706 (isStrictlySorted!304 lt!53724))))

(assert (=> d!28903 (= (lemmaContainsTupThenGetReturnValue!73 lt!53724 (_1!1201 lt!53606) (_2!1201 lt!53606)) lt!54246)))

(declare-fun b!105946 () Bool)

(declare-fun res!52707 () Bool)

(assert (=> b!105946 (=> (not res!52707) (not e!68949))))

(assert (=> b!105946 (= res!52707 (containsKey!158 lt!53724 (_1!1201 lt!53606)))))

(declare-fun b!105947 () Bool)

(assert (=> b!105947 (= e!68949 (contains!821 lt!53724 (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(assert (= (and d!28903 res!52706) b!105946))

(assert (= (and b!105946 res!52707) b!105947))

(assert (=> d!28903 m!117123))

(declare-fun m!118047 () Bool)

(assert (=> d!28903 m!118047))

(declare-fun m!118049 () Bool)

(assert (=> d!28903 m!118049))

(declare-fun m!118051 () Bool)

(assert (=> b!105946 m!118051))

(declare-fun m!118053 () Bool)

(assert (=> b!105947 m!118053))

(assert (=> d!28683 d!28903))

(declare-fun c!18462 () Bool)

(declare-fun b!105948 () Bool)

(assert (=> b!105948 (= c!18462 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 lt!53599))) (bvsgt (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 lt!53599)))) (_1!1201 lt!53606))))))

(declare-fun e!68953 () List!1616)

(declare-fun e!68952 () List!1616)

(assert (=> b!105948 (= e!68953 e!68952)))

(declare-fun b!105949 () Bool)

(declare-fun e!68951 () List!1616)

(declare-fun call!11198 () List!1616)

(assert (=> b!105949 (= e!68951 call!11198)))

(declare-fun b!105950 () Bool)

(declare-fun e!68954 () Bool)

(declare-fun lt!54247 () List!1616)

(assert (=> b!105950 (= e!68954 (contains!821 lt!54247 (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun b!105951 () Bool)

(declare-fun res!52708 () Bool)

(assert (=> b!105951 (=> (not res!52708) (not e!68954))))

(assert (=> b!105951 (= res!52708 (containsKey!158 lt!54247 (_1!1201 lt!53606)))))

(declare-fun b!105952 () Bool)

(declare-fun call!11199 () List!1616)

(assert (=> b!105952 (= e!68952 call!11199)))

(declare-fun b!105953 () Bool)

(assert (=> b!105953 (= e!68952 call!11199)))

(declare-fun b!105954 () Bool)

(assert (=> b!105954 (= e!68951 e!68953)))

(declare-fun c!18463 () Bool)

(assert (=> b!105954 (= c!18463 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 lt!53599))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 lt!53599)))) (_1!1201 lt!53606))))))

(declare-fun bm!11195 () Bool)

(declare-fun call!11200 () List!1616)

(assert (=> bm!11195 (= call!11200 call!11198)))

(declare-fun b!105955 () Bool)

(assert (=> b!105955 (= e!68953 call!11200)))

(declare-fun b!105956 () Bool)

(declare-fun e!68950 () List!1616)

(assert (=> b!105956 (= e!68950 (insertStrictlySorted!76 (t!5690 (toList!787 (+!135 lt!53604 lt!53599))) (_1!1201 lt!53606) (_2!1201 lt!53606)))))

(declare-fun bm!11197 () Bool)

(assert (=> bm!11197 (= call!11199 call!11200)))

(declare-fun b!105957 () Bool)

(assert (=> b!105957 (= e!68950 (ite c!18463 (t!5690 (toList!787 (+!135 lt!53604 lt!53599))) (ite c!18462 (Cons!1612 (h!2209 (toList!787 (+!135 lt!53604 lt!53599))) (t!5690 (toList!787 (+!135 lt!53604 lt!53599)))) Nil!1613)))))

(declare-fun bm!11196 () Bool)

(declare-fun c!18460 () Bool)

(assert (=> bm!11196 (= call!11198 ($colon$colon!80 e!68950 (ite c!18460 (h!2209 (toList!787 (+!135 lt!53604 lt!53599))) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606)))))))

(declare-fun c!18461 () Bool)

(assert (=> bm!11196 (= c!18461 c!18460)))

(declare-fun d!28905 () Bool)

(assert (=> d!28905 e!68954))

(declare-fun res!52709 () Bool)

(assert (=> d!28905 (=> (not res!52709) (not e!68954))))

(assert (=> d!28905 (= res!52709 (isStrictlySorted!304 lt!54247))))

(assert (=> d!28905 (= lt!54247 e!68951)))

(assert (=> d!28905 (= c!18460 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 lt!53599))) (bvslt (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 lt!53599)))) (_1!1201 lt!53606))))))

(assert (=> d!28905 (isStrictlySorted!304 (toList!787 (+!135 lt!53604 lt!53599)))))

(assert (=> d!28905 (= (insertStrictlySorted!76 (toList!787 (+!135 lt!53604 lt!53599)) (_1!1201 lt!53606) (_2!1201 lt!53606)) lt!54247)))

(assert (= (and d!28905 c!18460) b!105949))

(assert (= (and d!28905 (not c!18460)) b!105954))

(assert (= (and b!105954 c!18463) b!105955))

(assert (= (and b!105954 (not c!18463)) b!105948))

(assert (= (and b!105948 c!18462) b!105952))

(assert (= (and b!105948 (not c!18462)) b!105953))

(assert (= (or b!105952 b!105953) bm!11197))

(assert (= (or b!105955 bm!11197) bm!11195))

(assert (= (or b!105949 bm!11195) bm!11196))

(assert (= (and bm!11196 c!18461) b!105956))

(assert (= (and bm!11196 (not c!18461)) b!105957))

(assert (= (and d!28905 res!52709) b!105951))

(assert (= (and b!105951 res!52708) b!105950))

(declare-fun m!118055 () Bool)

(assert (=> b!105950 m!118055))

(declare-fun m!118057 () Bool)

(assert (=> d!28905 m!118057))

(declare-fun m!118059 () Bool)

(assert (=> d!28905 m!118059))

(declare-fun m!118061 () Bool)

(assert (=> b!105951 m!118061))

(declare-fun m!118063 () Bool)

(assert (=> b!105956 m!118063))

(declare-fun m!118065 () Bool)

(assert (=> bm!11196 m!118065))

(assert (=> d!28683 d!28905))

(declare-fun d!28907 () Bool)

(declare-fun e!68955 () Bool)

(assert (=> d!28907 e!68955))

(declare-fun res!52711 () Bool)

(assert (=> d!28907 (=> (not res!52711) (not e!68955))))

(declare-fun lt!54251 () ListLongMap!1543)

(assert (=> d!28907 (= res!52711 (contains!820 lt!54251 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun lt!54248 () List!1616)

(assert (=> d!28907 (= lt!54251 (ListLongMap!1544 lt!54248))))

(declare-fun lt!54249 () Unit!3218)

(declare-fun lt!54250 () Unit!3218)

(assert (=> d!28907 (= lt!54249 lt!54250)))

(assert (=> d!28907 (= (getValueByKey!154 lt!54248 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) (Some!159 (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!28907 (= lt!54250 (lemmaContainsTupThenGetReturnValue!73 lt!54248 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!28907 (= lt!54248 (insertStrictlySorted!76 (toList!787 e!68608) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!28907 (= (+!135 e!68608 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54251)))

(declare-fun b!105958 () Bool)

(declare-fun res!52710 () Bool)

(assert (=> b!105958 (=> (not res!52710) (not e!68955))))

(assert (=> b!105958 (= res!52710 (= (getValueByKey!154 (toList!787 lt!54251) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) (Some!159 (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun b!105959 () Bool)

(assert (=> b!105959 (= e!68955 (contains!821 (toList!787 lt!54251) (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (= (and d!28907 res!52711) b!105958))

(assert (= (and b!105958 res!52710) b!105959))

(declare-fun m!118067 () Bool)

(assert (=> d!28907 m!118067))

(declare-fun m!118069 () Bool)

(assert (=> d!28907 m!118069))

(declare-fun m!118071 () Bool)

(assert (=> d!28907 m!118071))

(declare-fun m!118073 () Bool)

(assert (=> d!28907 m!118073))

(declare-fun m!118075 () Bool)

(assert (=> b!105958 m!118075))

(declare-fun m!118077 () Bool)

(assert (=> b!105959 m!118077))

(assert (=> bm!11106 d!28907))

(declare-fun d!28909 () Bool)

(assert (=> d!28909 (isDefined!108 (getValueByKey!154 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun lt!54254 () Unit!3218)

(declare-fun choose!671 (List!1616 (_ BitVec 64)) Unit!3218)

(assert (=> d!28909 (= lt!54254 (choose!671 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun e!68958 () Bool)

(assert (=> d!28909 e!68958))

(declare-fun res!52714 () Bool)

(assert (=> d!28909 (=> (not res!52714) (not e!68958))))

(assert (=> d!28909 (= res!52714 (isStrictlySorted!304 (toList!787 lt!53596)))))

(assert (=> d!28909 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) lt!54254)))

(declare-fun b!105962 () Bool)

(assert (=> b!105962 (= e!68958 (containsKey!158 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (= (and d!28909 res!52714) b!105962))

(assert (=> d!28909 m!116875))

(assert (=> d!28909 m!117137))

(assert (=> d!28909 m!117137))

(assert (=> d!28909 m!117139))

(assert (=> d!28909 m!116875))

(declare-fun m!118079 () Bool)

(assert (=> d!28909 m!118079))

(declare-fun m!118081 () Bool)

(assert (=> d!28909 m!118081))

(assert (=> b!105962 m!116875))

(assert (=> b!105962 m!117133))

(assert (=> b!105257 d!28909))

(assert (=> b!105257 d!28843))

(assert (=> b!105257 d!28845))

(declare-fun condMapEmpty!3941 () Bool)

(declare-fun mapDefault!3941 () ValueCell!995)

(assert (=> mapNonEmpty!3939 (= condMapEmpty!3941 (= mapRest!3939 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3941)))))

(declare-fun e!68959 () Bool)

(declare-fun mapRes!3941 () Bool)

(assert (=> mapNonEmpty!3939 (= tp!9915 (and e!68959 mapRes!3941))))

(declare-fun mapNonEmpty!3941 () Bool)

(declare-fun tp!9917 () Bool)

(declare-fun e!68960 () Bool)

(assert (=> mapNonEmpty!3941 (= mapRes!3941 (and tp!9917 e!68960))))

(declare-fun mapKey!3941 () (_ BitVec 32))

(declare-fun mapValue!3941 () ValueCell!995)

(declare-fun mapRest!3941 () (Array (_ BitVec 32) ValueCell!995))

(assert (=> mapNonEmpty!3941 (= mapRest!3939 (store mapRest!3941 mapKey!3941 mapValue!3941))))

(declare-fun mapIsEmpty!3941 () Bool)

(assert (=> mapIsEmpty!3941 mapRes!3941))

(declare-fun b!105964 () Bool)

(assert (=> b!105964 (= e!68959 tp_is_empty!2677)))

(declare-fun b!105963 () Bool)

(assert (=> b!105963 (= e!68960 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3939 condMapEmpty!3941) mapIsEmpty!3941))

(assert (= (and mapNonEmpty!3939 (not condMapEmpty!3941)) mapNonEmpty!3941))

(assert (= (and mapNonEmpty!3941 ((_ is ValueCellFull!995) mapValue!3941)) b!105963))

(assert (= (and mapNonEmpty!3939 ((_ is ValueCellFull!995) mapDefault!3941)) b!105964))

(declare-fun m!118083 () Bool)

(assert (=> mapNonEmpty!3941 m!118083))

(declare-fun condMapEmpty!3942 () Bool)

(declare-fun mapDefault!3942 () ValueCell!995)

(assert (=> mapNonEmpty!3940 (= condMapEmpty!3942 (= mapRest!3940 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3942)))))

(declare-fun e!68961 () Bool)

(declare-fun mapRes!3942 () Bool)

(assert (=> mapNonEmpty!3940 (= tp!9916 (and e!68961 mapRes!3942))))

(declare-fun mapNonEmpty!3942 () Bool)

(declare-fun tp!9918 () Bool)

(declare-fun e!68962 () Bool)

(assert (=> mapNonEmpty!3942 (= mapRes!3942 (and tp!9918 e!68962))))

(declare-fun mapRest!3942 () (Array (_ BitVec 32) ValueCell!995))

(declare-fun mapKey!3942 () (_ BitVec 32))

(declare-fun mapValue!3942 () ValueCell!995)

(assert (=> mapNonEmpty!3942 (= mapRest!3940 (store mapRest!3942 mapKey!3942 mapValue!3942))))

(declare-fun mapIsEmpty!3942 () Bool)

(assert (=> mapIsEmpty!3942 mapRes!3942))

(declare-fun b!105966 () Bool)

(assert (=> b!105966 (= e!68961 tp_is_empty!2677)))

(declare-fun b!105965 () Bool)

(assert (=> b!105965 (= e!68962 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3940 condMapEmpty!3942) mapIsEmpty!3942))

(assert (= (and mapNonEmpty!3940 (not condMapEmpty!3942)) mapNonEmpty!3942))

(assert (= (and mapNonEmpty!3942 ((_ is ValueCellFull!995) mapValue!3942)) b!105965))

(assert (= (and mapNonEmpty!3940 ((_ is ValueCellFull!995) mapDefault!3942)) b!105966))

(declare-fun m!118085 () Bool)

(assert (=> mapNonEmpty!3942 m!118085))

(declare-fun b_lambda!4721 () Bool)

(assert (= b_lambda!4713 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4721)))

(declare-fun b_lambda!4723 () Bool)

(assert (= b_lambda!4717 (or (and b!105054 b_free!2521) (and b!105064 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))) b_lambda!4723)))

(declare-fun b_lambda!4725 () Bool)

(assert (= b_lambda!4715 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4725)))

(declare-fun b_lambda!4727 () Bool)

(assert (= b_lambda!4711 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4727)))

(declare-fun b_lambda!4729 () Bool)

(assert (= b_lambda!4719 (or (and b!105054 b_free!2521) (and b!105064 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))) b_lambda!4729)))

(check-sat (not b!105895) (not bm!11185) (not b!105609) (not d!28797) (not d!28883) (not b!105639) (not b!105950) (not d!28793) (not b!105603) (not d!28741) (not b!105786) (not d!28841) (not b!105778) (not d!28715) (not b!105697) (not bm!11146) (not b_lambda!4725) (not b!105665) (not d!28783) (not b!105597) (not b!105909) (not b!105659) (not b!105959) (not b!105677) (not b!105932) (not b!105655) (not b!105887) (not bm!11196) (not bm!11138) (not b!105618) b_and!6521 (not b!105848) (not b!105836) (not d!28851) (not b!105529) (not b!105917) (not bm!11134) (not b!105946) (not b!105593) (not b!105956) (not b!105502) (not b!105878) (not b!105594) (not b_lambda!4705) (not b!105886) (not b!105743) (not b!105721) (not b!105723) (not b!105853) (not d!28767) (not b!105904) (not d!28821) (not b!105846) (not bm!11174) (not d!28859) (not b!105615) (not b!105911) (not d!28893) (not d!28805) (not d!28895) (not bm!11139) (not b!105866) (not b!105889) (not d!28877) (not b_lambda!4707) (not d!28903) (not bm!11153) (not b!105790) (not b!105576) (not bm!11148) (not d!28763) (not b!105931) (not b!105947) (not b!105666) (not b!105921) (not b!105682) (not d!28743) (not b!105573) (not b!105958) (not b!105581) (not d!28843) (not b!105661) (not d!28747) (not b!105568) (not d!28907) (not d!28753) (not b!105941) (not b!105579) (not b!105673) (not b!105707) (not b!105709) (not b!105621) (not bm!11176) (not b!105657) tp_is_empty!2677 (not b!105641) (not b!105914) (not b!105572) (not b!105600) (not d!28779) (not b!105672) (not d!28829) (not bm!11140) (not bm!11163) (not d!28749) (not b!105767) (not b!105926) (not d!28731) (not b!105876) (not d!28735) (not bm!11159) (not b!105787) (not b!105906) (not bm!11141) (not b!105648) (not b!105536) (not b!105686) (not d!28775) (not b!105705) (not b!105793) (not b!105788) (not b!105837) (not b!105540) (not b!105857) (not d!28827) (not d!28813) (not b!105722) (not b!105585) (not b!105685) (not b!105859) (not b_lambda!4723) (not b!105626) (not b!105899) (not d!28777) (not b!105644) (not d!28875) (not b!105847) (not b!105862) (not d!28899) (not d!28831) (not d!28891) (not d!28839) (not d!28765) (not b!105868) (not b!105541) (not bm!11190) (not bm!11154) (not b_lambda!4709) (not d!28769) (not b!105633) (not bm!11155) (not mapNonEmpty!3941) (not b!105571) (not b!105794) (not b!105938) (not d!28725) (not b!105920) b_and!6523 (not b!105708) (not d!28857) (not b!105935) (not b!105929) (not bm!11152) (not b!105781) (not d!28825) (not b!105725) (not b!105588) (not b!105616) (not b!105930) (not d!28801) (not b!105630) (not bm!11166) (not d!28855) (not d!28873) (not d!28757) (not b_next!2523) (not b!105542) (not b!105675) (not b!105658) (not d!28727) (not d!28771) (not b!105567) (not b!105637) (not d!28791) (not d!28881) (not b!105676) (not b!105898) (not d!28849) (not d!28729) (not bm!11147) (not b!105880) (not b!105684) (not b!105703) (not b!105873) (not b_lambda!4697) (not bm!11160) (not b!105624) (not b!105742) (not d!28807) (not d!28867) (not b_lambda!4727) (not b!105524) (not b!105849) (not b!105650) (not d!28865) (not b!105936) (not d!28713) (not b!105870) (not d!28887) (not b!105933) (not b!105795) (not d!28905) (not d!28785) (not b!105894) (not b!105875) (not b!105702) (not b!105916) (not bm!11188) (not d!28751) (not d!28815) (not d!28759) (not b!105649) (not d!28781) (not b!105710) (not d!28871) (not d!28795) (not d!28817) (not b!105962) (not d!28711) (not b!105841) (not d!28739) (not d!28717) (not b!105643) (not b!105736) (not d!28755) (not b!105856) (not b!105934) (not d!28737) (not b_next!2521) (not b!105516) (not bm!11193) (not b!105772) (not b!105877) (not b!105638) (not b!105843) (not b!105928) (not b!105533) (not d!28889) (not d!28897) (not b!105700) (not d!28787) (not b!105646) (not b!105780) (not b!105951) (not b!105944) (not d!28773) (not d!28819) (not b_lambda!4721) (not bm!11161) (not b!105595) (not b!105696) (not bm!11186) (not b!105883) (not d!28761) (not b!105832) (not b!105662) (not b!105766) (not b!105939) (not b!105892) (not b!105527) (not b_lambda!4729) (not mapNonEmpty!3942) (not d!28885) (not b!105908) (not b!105592) (not b!105850) (not d!28809) (not bm!11162) (not d!28909))
(check-sat b_and!6521 b_and!6523 (not b_next!2521) (not b_next!2523))
(get-model)

(declare-fun b!105969 () Bool)

(declare-fun e!68964 () Option!160)

(assert (=> b!105969 (= e!68964 (getValueByKey!154 (t!5690 (toList!787 lt!54237)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!105968 () Bool)

(declare-fun e!68963 () Option!160)

(assert (=> b!105968 (= e!68963 e!68964)))

(declare-fun c!18465 () Bool)

(assert (=> b!105968 (= c!18465 (and ((_ is Cons!1612) (toList!787 lt!54237)) (not (= (_1!1201 (h!2209 (toList!787 lt!54237))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun d!28911 () Bool)

(declare-fun c!18464 () Bool)

(assert (=> d!28911 (= c!18464 (and ((_ is Cons!1612) (toList!787 lt!54237)) (= (_1!1201 (h!2209 (toList!787 lt!54237))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!28911 (= (getValueByKey!154 (toList!787 lt!54237) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) e!68963)))

(declare-fun b!105970 () Bool)

(assert (=> b!105970 (= e!68964 None!158)))

(declare-fun b!105967 () Bool)

(assert (=> b!105967 (= e!68963 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54237)))))))

(assert (= (and d!28911 c!18464) b!105967))

(assert (= (and d!28911 (not c!18464)) b!105968))

(assert (= (and b!105968 c!18465) b!105969))

(assert (= (and b!105968 (not c!18465)) b!105970))

(declare-fun m!118087 () Bool)

(assert (=> b!105969 m!118087))

(assert (=> b!105934 d!28911))

(declare-fun d!28913 () Bool)

(assert (=> d!28913 (= (isDefined!108 (getValueByKey!154 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814)))) (not (isEmpty!376 (getValueByKey!154 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))))

(declare-fun bs!4337 () Bool)

(assert (= bs!4337 d!28913))

(assert (=> bs!4337 m!117417))

(declare-fun m!118089 () Bool)

(assert (=> bs!4337 m!118089))

(assert (=> b!105597 d!28913))

(declare-fun b!105973 () Bool)

(declare-fun e!68966 () Option!160)

(assert (=> b!105973 (= e!68966 (getValueByKey!154 (t!5690 (toList!787 call!11103)) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(declare-fun b!105972 () Bool)

(declare-fun e!68965 () Option!160)

(assert (=> b!105972 (= e!68965 e!68966)))

(declare-fun c!18467 () Bool)

(assert (=> b!105972 (= c!18467 (and ((_ is Cons!1612) (toList!787 call!11103)) (not (= (_1!1201 (h!2209 (toList!787 call!11103))) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))))

(declare-fun c!18466 () Bool)

(declare-fun d!28915 () Bool)

(assert (=> d!28915 (= c!18466 (and ((_ is Cons!1612) (toList!787 call!11103)) (= (_1!1201 (h!2209 (toList!787 call!11103))) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814)))))))

(assert (=> d!28915 (= (getValueByKey!154 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))) e!68965)))

(declare-fun b!105974 () Bool)

(assert (=> b!105974 (= e!68966 None!158)))

(declare-fun b!105971 () Bool)

(assert (=> b!105971 (= e!68965 (Some!159 (_2!1201 (h!2209 (toList!787 call!11103)))))))

(assert (= (and d!28915 c!18466) b!105971))

(assert (= (and d!28915 (not c!18466)) b!105972))

(assert (= (and b!105972 c!18467) b!105973))

(assert (= (and b!105972 (not c!18467)) b!105974))

(assert (=> b!105973 m!117171))

(declare-fun m!118091 () Bool)

(assert (=> b!105973 m!118091))

(assert (=> b!105597 d!28915))

(declare-fun d!28917 () Bool)

(assert (=> d!28917 (= (apply!98 lt!53993 lt!53977) (get!1335 (getValueByKey!154 (toList!787 lt!53993) lt!53977)))))

(declare-fun bs!4338 () Bool)

(assert (= bs!4338 d!28917))

(declare-fun m!118093 () Bool)

(assert (=> bs!4338 m!118093))

(assert (=> bs!4338 m!118093))

(declare-fun m!118095 () Bool)

(assert (=> bs!4338 m!118095))

(assert (=> b!105637 d!28917))

(declare-fun b!105975 () Bool)

(declare-fun e!68969 () ListLongMap!1543)

(assert (=> b!105975 (= e!68969 (ListLongMap!1544 Nil!1613))))

(declare-fun d!28919 () Bool)

(declare-fun e!68973 () Bool)

(assert (=> d!28919 e!68973))

(declare-fun res!52717 () Bool)

(assert (=> d!28919 (=> (not res!52717) (not e!68973))))

(declare-fun lt!54259 () ListLongMap!1543)

(assert (=> d!28919 (= res!52717 (not (contains!820 lt!54259 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28919 (= lt!54259 e!68969)))

(declare-fun c!18468 () Bool)

(assert (=> d!28919 (= c!18468 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!28919 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28919 (= (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) (mask!6726 newMap!16) (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) (zeroValue!2456 newMap!16) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54259)))

(declare-fun b!105976 () Bool)

(declare-fun e!68970 () Bool)

(declare-fun e!68968 () Bool)

(assert (=> b!105976 (= e!68970 e!68968)))

(assert (=> b!105976 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun res!52715 () Bool)

(assert (=> b!105976 (= res!52715 (contains!820 lt!54259 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105976 (=> (not res!52715) (not e!68968))))

(declare-fun b!105977 () Bool)

(declare-fun e!68971 () Bool)

(assert (=> b!105977 (= e!68970 e!68971)))

(declare-fun c!18470 () Bool)

(assert (=> b!105977 (= c!18470 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!105978 () Bool)

(declare-fun e!68967 () ListLongMap!1543)

(assert (=> b!105978 (= e!68969 e!68967)))

(declare-fun c!18471 () Bool)

(assert (=> b!105978 (= c!18471 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105979 () Bool)

(declare-fun lt!54261 () Unit!3218)

(declare-fun lt!54257 () Unit!3218)

(assert (=> b!105979 (= lt!54261 lt!54257)))

(declare-fun lt!54260 () V!3217)

(declare-fun lt!54258 () ListLongMap!1543)

(declare-fun lt!54256 () (_ BitVec 64))

(declare-fun lt!54255 () (_ BitVec 64))

(assert (=> b!105979 (not (contains!820 (+!135 lt!54258 (tuple2!2381 lt!54255 lt!54260)) lt!54256))))

(assert (=> b!105979 (= lt!54257 (addStillNotContains!47 lt!54258 lt!54255 lt!54260 lt!54256))))

(assert (=> b!105979 (= lt!54256 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!105979 (= lt!54260 (get!1331 (select (arr!2051 (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!105979 (= lt!54255 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11201 () ListLongMap!1543)

(assert (=> b!105979 (= lt!54258 call!11201)))

(assert (=> b!105979 (= e!68967 (+!135 call!11201 (tuple2!2381 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) (get!1331 (select (arr!2051 (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!105980 () Bool)

(assert (=> b!105980 (= e!68973 e!68970)))

(declare-fun c!18469 () Bool)

(declare-fun e!68972 () Bool)

(assert (=> b!105980 (= c!18469 e!68972)))

(declare-fun res!52718 () Bool)

(assert (=> b!105980 (=> (not res!52718) (not e!68972))))

(assert (=> b!105980 (= res!52718 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!105981 () Bool)

(assert (=> b!105981 (= e!68971 (isEmpty!374 lt!54259))))

(declare-fun b!105982 () Bool)

(assert (=> b!105982 (= e!68967 call!11201)))

(declare-fun b!105983 () Bool)

(declare-fun res!52716 () Bool)

(assert (=> b!105983 (=> (not res!52716) (not e!68973))))

(assert (=> b!105983 (= res!52716 (not (contains!820 lt!54259 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105984 () Bool)

(assert (=> b!105984 (= e!68972 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105984 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!11198 () Bool)

(assert (=> bm!11198 (= call!11201 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) (mask!6726 newMap!16) (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) (zeroValue!2456 newMap!16) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16)))))

(declare-fun b!105985 () Bool)

(assert (=> b!105985 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> b!105985 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))))))))

(assert (=> b!105985 (= e!68968 (= (apply!98 lt!54259 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!105986 () Bool)

(assert (=> b!105986 (= e!68971 (= lt!54259 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) (mask!6726 newMap!16) (ite c!18304 (ite c!18299 (extraKeys!2386 newMap!16) lt!53802) (extraKeys!2386 newMap!16)) (zeroValue!2456 newMap!16) (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16))))))

(assert (= (and d!28919 c!18468) b!105975))

(assert (= (and d!28919 (not c!18468)) b!105978))

(assert (= (and b!105978 c!18471) b!105979))

(assert (= (and b!105978 (not c!18471)) b!105982))

(assert (= (or b!105979 b!105982) bm!11198))

(assert (= (and d!28919 res!52717) b!105983))

(assert (= (and b!105983 res!52716) b!105980))

(assert (= (and b!105980 res!52718) b!105984))

(assert (= (and b!105980 c!18469) b!105976))

(assert (= (and b!105980 (not c!18469)) b!105977))

(assert (= (and b!105976 res!52715) b!105985))

(assert (= (and b!105977 c!18470) b!105986))

(assert (= (and b!105977 (not c!18470)) b!105981))

(declare-fun b_lambda!4731 () Bool)

(assert (=> (not b_lambda!4731) (not b!105979)))

(assert (=> b!105979 t!5701))

(declare-fun b_and!6525 () Bool)

(assert (= b_and!6521 (and (=> t!5701 result!3459) b_and!6525)))

(assert (=> b!105979 t!5703))

(declare-fun b_and!6527 () Bool)

(assert (= b_and!6523 (and (=> t!5703 result!3461) b_and!6527)))

(declare-fun b_lambda!4733 () Bool)

(assert (=> (not b_lambda!4733) (not b!105985)))

(assert (=> b!105985 t!5701))

(declare-fun b_and!6529 () Bool)

(assert (= b_and!6525 (and (=> t!5701 result!3459) b_and!6529)))

(assert (=> b!105985 t!5703))

(declare-fun b_and!6531 () Bool)

(assert (= b_and!6527 (and (=> t!5703 result!3461) b_and!6531)))

(declare-fun m!118097 () Bool)

(assert (=> d!28919 m!118097))

(assert (=> d!28919 m!117277))

(assert (=> b!105976 m!117265))

(assert (=> b!105976 m!117265))

(declare-fun m!118099 () Bool)

(assert (=> b!105976 m!118099))

(assert (=> b!105984 m!117265))

(assert (=> b!105984 m!117265))

(assert (=> b!105984 m!117267))

(assert (=> b!105985 m!117291))

(assert (=> b!105985 m!117455))

(assert (=> b!105985 m!117291))

(assert (=> b!105985 m!117457))

(assert (=> b!105985 m!117455))

(assert (=> b!105985 m!117265))

(declare-fun m!118101 () Bool)

(assert (=> b!105985 m!118101))

(assert (=> b!105985 m!117265))

(declare-fun m!118103 () Bool)

(assert (=> b!105979 m!118103))

(declare-fun m!118105 () Bool)

(assert (=> b!105979 m!118105))

(declare-fun m!118107 () Bool)

(assert (=> b!105979 m!118107))

(assert (=> b!105979 m!117291))

(assert (=> b!105979 m!117455))

(assert (=> b!105979 m!117265))

(declare-fun m!118109 () Bool)

(assert (=> b!105979 m!118109))

(assert (=> b!105979 m!117455))

(assert (=> b!105979 m!117291))

(assert (=> b!105979 m!117457))

(assert (=> b!105979 m!118105))

(declare-fun m!118111 () Bool)

(assert (=> b!105981 m!118111))

(declare-fun m!118113 () Bool)

(assert (=> b!105983 m!118113))

(declare-fun m!118115 () Bool)

(assert (=> b!105986 m!118115))

(assert (=> bm!11198 m!118115))

(assert (=> b!105978 m!117265))

(assert (=> b!105978 m!117265))

(assert (=> b!105978 m!117267))

(assert (=> b!105637 d!28919))

(declare-fun d!28921 () Bool)

(declare-fun e!68974 () Bool)

(assert (=> d!28921 e!68974))

(declare-fun res!52720 () Bool)

(assert (=> d!28921 (=> (not res!52720) (not e!68974))))

(declare-fun lt!54265 () ListLongMap!1543)

(assert (=> d!28921 (= res!52720 (contains!820 lt!54265 (_1!1201 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(declare-fun lt!54262 () List!1616)

(assert (=> d!28921 (= lt!54265 (ListLongMap!1544 lt!54262))))

(declare-fun lt!54263 () Unit!3218)

(declare-fun lt!54264 () Unit!3218)

(assert (=> d!28921 (= lt!54263 lt!54264)))

(assert (=> d!28921 (= (getValueByKey!154 lt!54262 (_1!1201 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) (Some!159 (_2!1201 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(assert (=> d!28921 (= lt!54264 (lemmaContainsTupThenGetReturnValue!73 lt!54262 (_1!1201 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) (_2!1201 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(assert (=> d!28921 (= lt!54262 (insertStrictlySorted!76 (toList!787 lt!53993) (_1!1201 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) (_2!1201 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(assert (=> d!28921 (= (+!135 lt!53993 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) lt!54265)))

(declare-fun b!105987 () Bool)

(declare-fun res!52719 () Bool)

(assert (=> b!105987 (=> (not res!52719) (not e!68974))))

(assert (=> b!105987 (= res!52719 (= (getValueByKey!154 (toList!787 lt!54265) (_1!1201 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) (Some!159 (_2!1201 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))))

(declare-fun b!105988 () Bool)

(assert (=> b!105988 (= e!68974 (contains!821 (toList!787 lt!54265) (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))

(assert (= (and d!28921 res!52720) b!105987))

(assert (= (and b!105987 res!52719) b!105988))

(declare-fun m!118117 () Bool)

(assert (=> d!28921 m!118117))

(declare-fun m!118119 () Bool)

(assert (=> d!28921 m!118119))

(declare-fun m!118121 () Bool)

(assert (=> d!28921 m!118121))

(declare-fun m!118123 () Bool)

(assert (=> d!28921 m!118123))

(declare-fun m!118125 () Bool)

(assert (=> b!105987 m!118125))

(declare-fun m!118127 () Bool)

(assert (=> b!105988 m!118127))

(assert (=> b!105637 d!28921))

(declare-fun d!28923 () Bool)

(declare-fun e!68975 () Bool)

(assert (=> d!28923 e!68975))

(declare-fun res!52722 () Bool)

(assert (=> d!28923 (=> (not res!52722) (not e!68975))))

(declare-fun lt!54269 () ListLongMap!1543)

(assert (=> d!28923 (= res!52722 (contains!820 lt!54269 (_1!1201 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16)))))))

(declare-fun lt!54266 () List!1616)

(assert (=> d!28923 (= lt!54269 (ListLongMap!1544 lt!54266))))

(declare-fun lt!54267 () Unit!3218)

(declare-fun lt!54268 () Unit!3218)

(assert (=> d!28923 (= lt!54267 lt!54268)))

(assert (=> d!28923 (= (getValueByKey!154 lt!54266 (_1!1201 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16)))))))

(assert (=> d!28923 (= lt!54268 (lemmaContainsTupThenGetReturnValue!73 lt!54266 (_1!1201 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16)))))))

(assert (=> d!28923 (= lt!54266 (insertStrictlySorted!76 (toList!787 lt!53980) (_1!1201 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16)))))))

(assert (=> d!28923 (= (+!135 lt!53980 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16))) lt!54269)))

(declare-fun b!105989 () Bool)

(declare-fun res!52721 () Bool)

(assert (=> b!105989 (=> (not res!52721) (not e!68975))))

(assert (=> b!105989 (= res!52721 (= (getValueByKey!154 (toList!787 lt!54269) (_1!1201 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16))))))))

(declare-fun b!105990 () Bool)

(assert (=> b!105990 (= e!68975 (contains!821 (toList!787 lt!54269) (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16))))))

(assert (= (and d!28923 res!52722) b!105989))

(assert (= (and b!105989 res!52721) b!105990))

(declare-fun m!118129 () Bool)

(assert (=> d!28923 m!118129))

(declare-fun m!118131 () Bool)

(assert (=> d!28923 m!118131))

(declare-fun m!118133 () Bool)

(assert (=> d!28923 m!118133))

(declare-fun m!118135 () Bool)

(assert (=> d!28923 m!118135))

(declare-fun m!118137 () Bool)

(assert (=> b!105989 m!118137))

(declare-fun m!118139 () Bool)

(assert (=> b!105990 m!118139))

(assert (=> b!105637 d!28923))

(declare-fun d!28925 () Bool)

(assert (=> d!28925 (= (apply!98 (+!135 lt!53985 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) lt!53989) (apply!98 lt!53985 lt!53989))))

(declare-fun lt!54270 () Unit!3218)

(assert (=> d!28925 (= lt!54270 (choose!664 lt!53985 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) lt!53989))))

(declare-fun e!68976 () Bool)

(assert (=> d!28925 e!68976))

(declare-fun res!52723 () Bool)

(assert (=> d!28925 (=> (not res!52723) (not e!68976))))

(assert (=> d!28925 (= res!52723 (contains!820 lt!53985 lt!53989))))

(assert (=> d!28925 (= (addApplyDifferent!74 lt!53985 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) lt!53989) lt!54270)))

(declare-fun b!105991 () Bool)

(assert (=> b!105991 (= e!68976 (not (= lt!53989 lt!53975)))))

(assert (= (and d!28925 res!52723) b!105991))

(declare-fun m!118141 () Bool)

(assert (=> d!28925 m!118141))

(assert (=> d!28925 m!117493))

(declare-fun m!118143 () Bool)

(assert (=> d!28925 m!118143))

(assert (=> d!28925 m!117469))

(assert (=> d!28925 m!117469))

(assert (=> d!28925 m!117471))

(assert (=> b!105637 d!28925))

(declare-fun d!28927 () Bool)

(assert (=> d!28927 (= (apply!98 (+!135 lt!53996 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16))) lt!53995) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53996 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16)))) lt!53995)))))

(declare-fun bs!4339 () Bool)

(assert (= bs!4339 d!28927))

(declare-fun m!118145 () Bool)

(assert (=> bs!4339 m!118145))

(assert (=> bs!4339 m!118145))

(declare-fun m!118147 () Bool)

(assert (=> bs!4339 m!118147))

(assert (=> b!105637 d!28927))

(declare-fun d!28929 () Bool)

(assert (=> d!28929 (= (apply!98 (+!135 lt!53993 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) lt!53977) (apply!98 lt!53993 lt!53977))))

(declare-fun lt!54271 () Unit!3218)

(assert (=> d!28929 (= lt!54271 (choose!664 lt!53993 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) lt!53977))))

(declare-fun e!68977 () Bool)

(assert (=> d!28929 e!68977))

(declare-fun res!52724 () Bool)

(assert (=> d!28929 (=> (not res!52724) (not e!68977))))

(assert (=> d!28929 (= res!52724 (contains!820 lt!53993 lt!53977))))

(assert (=> d!28929 (= (addApplyDifferent!74 lt!53993 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)) lt!53977) lt!54271)))

(declare-fun b!105992 () Bool)

(assert (=> b!105992 (= e!68977 (not (= lt!53977 lt!53992)))))

(assert (= (and d!28929 res!52724) b!105992))

(declare-fun m!118149 () Bool)

(assert (=> d!28929 m!118149))

(assert (=> d!28929 m!117495))

(declare-fun m!118151 () Bool)

(assert (=> d!28929 m!118151))

(assert (=> d!28929 m!117489))

(assert (=> d!28929 m!117489))

(assert (=> d!28929 m!117491))

(assert (=> b!105637 d!28929))

(declare-fun d!28931 () Bool)

(assert (=> d!28931 (= (apply!98 (+!135 lt!53993 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) lt!53977) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53993 (tuple2!2381 lt!53992 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) lt!53977)))))

(declare-fun bs!4340 () Bool)

(assert (= bs!4340 d!28931))

(declare-fun m!118153 () Bool)

(assert (=> bs!4340 m!118153))

(assert (=> bs!4340 m!118153))

(declare-fun m!118155 () Bool)

(assert (=> bs!4340 m!118155))

(assert (=> b!105637 d!28931))

(declare-fun d!28933 () Bool)

(assert (=> d!28933 (= (apply!98 (+!135 lt!53985 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) lt!53989) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53985 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) lt!53989)))))

(declare-fun bs!4341 () Bool)

(assert (= bs!4341 d!28933))

(declare-fun m!118157 () Bool)

(assert (=> bs!4341 m!118157))

(assert (=> bs!4341 m!118157))

(declare-fun m!118159 () Bool)

(assert (=> bs!4341 m!118159))

(assert (=> b!105637 d!28933))

(declare-fun d!28935 () Bool)

(assert (=> d!28935 (= (apply!98 lt!53996 lt!53995) (get!1335 (getValueByKey!154 (toList!787 lt!53996) lt!53995)))))

(declare-fun bs!4342 () Bool)

(assert (= bs!4342 d!28935))

(declare-fun m!118161 () Bool)

(assert (=> bs!4342 m!118161))

(assert (=> bs!4342 m!118161))

(declare-fun m!118163 () Bool)

(assert (=> bs!4342 m!118163))

(assert (=> b!105637 d!28935))

(declare-fun d!28937 () Bool)

(declare-fun e!68978 () Bool)

(assert (=> d!28937 e!68978))

(declare-fun res!52726 () Bool)

(assert (=> d!28937 (=> (not res!52726) (not e!68978))))

(declare-fun lt!54275 () ListLongMap!1543)

(assert (=> d!28937 (= res!52726 (contains!820 lt!54275 (_1!1201 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(declare-fun lt!54272 () List!1616)

(assert (=> d!28937 (= lt!54275 (ListLongMap!1544 lt!54272))))

(declare-fun lt!54273 () Unit!3218)

(declare-fun lt!54274 () Unit!3218)

(assert (=> d!28937 (= lt!54273 lt!54274)))

(assert (=> d!28937 (= (getValueByKey!154 lt!54272 (_1!1201 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) (Some!159 (_2!1201 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(assert (=> d!28937 (= lt!54274 (lemmaContainsTupThenGetReturnValue!73 lt!54272 (_1!1201 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) (_2!1201 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(assert (=> d!28937 (= lt!54272 (insertStrictlySorted!76 (toList!787 lt!53985) (_1!1201 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) (_2!1201 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(assert (=> d!28937 (= (+!135 lt!53985 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) lt!54275)))

(declare-fun b!105993 () Bool)

(declare-fun res!52725 () Bool)

(assert (=> b!105993 (=> (not res!52725) (not e!68978))))

(assert (=> b!105993 (= res!52725 (= (getValueByKey!154 (toList!787 lt!54275) (_1!1201 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) (Some!159 (_2!1201 (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))))

(declare-fun b!105994 () Bool)

(assert (=> b!105994 (= e!68978 (contains!821 (toList!787 lt!54275) (tuple2!2381 lt!53975 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))

(assert (= (and d!28937 res!52726) b!105993))

(assert (= (and b!105993 res!52725) b!105994))

(declare-fun m!118165 () Bool)

(assert (=> d!28937 m!118165))

(declare-fun m!118167 () Bool)

(assert (=> d!28937 m!118167))

(declare-fun m!118169 () Bool)

(assert (=> d!28937 m!118169))

(declare-fun m!118171 () Bool)

(assert (=> d!28937 m!118171))

(declare-fun m!118173 () Bool)

(assert (=> b!105993 m!118173))

(declare-fun m!118175 () Bool)

(assert (=> b!105994 m!118175))

(assert (=> b!105637 d!28937))

(declare-fun d!28939 () Bool)

(declare-fun e!68979 () Bool)

(assert (=> d!28939 e!68979))

(declare-fun res!52727 () Bool)

(assert (=> d!28939 (=> res!52727 e!68979)))

(declare-fun lt!54276 () Bool)

(assert (=> d!28939 (= res!52727 (not lt!54276))))

(declare-fun lt!54279 () Bool)

(assert (=> d!28939 (= lt!54276 lt!54279)))

(declare-fun lt!54278 () Unit!3218)

(declare-fun e!68980 () Unit!3218)

(assert (=> d!28939 (= lt!54278 e!68980)))

(declare-fun c!18472 () Bool)

(assert (=> d!28939 (= c!18472 lt!54279)))

(assert (=> d!28939 (= lt!54279 (containsKey!158 (toList!787 (+!135 lt!53980 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16)))) lt!53984))))

(assert (=> d!28939 (= (contains!820 (+!135 lt!53980 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16))) lt!53984) lt!54276)))

(declare-fun b!105995 () Bool)

(declare-fun lt!54277 () Unit!3218)

(assert (=> b!105995 (= e!68980 lt!54277)))

(assert (=> b!105995 (= lt!54277 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (+!135 lt!53980 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16)))) lt!53984))))

(assert (=> b!105995 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53980 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16)))) lt!53984))))

(declare-fun b!105996 () Bool)

(declare-fun Unit!3253 () Unit!3218)

(assert (=> b!105996 (= e!68980 Unit!3253)))

(declare-fun b!105997 () Bool)

(assert (=> b!105997 (= e!68979 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53980 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16)))) lt!53984)))))

(assert (= (and d!28939 c!18472) b!105995))

(assert (= (and d!28939 (not c!18472)) b!105996))

(assert (= (and d!28939 (not res!52727)) b!105997))

(declare-fun m!118177 () Bool)

(assert (=> d!28939 m!118177))

(declare-fun m!118179 () Bool)

(assert (=> b!105995 m!118179))

(declare-fun m!118181 () Bool)

(assert (=> b!105995 m!118181))

(assert (=> b!105995 m!118181))

(declare-fun m!118183 () Bool)

(assert (=> b!105995 m!118183))

(assert (=> b!105997 m!118181))

(assert (=> b!105997 m!118181))

(assert (=> b!105997 m!118183))

(assert (=> b!105637 d!28939))

(declare-fun d!28941 () Bool)

(assert (=> d!28941 (= (apply!98 (+!135 lt!53996 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16))) lt!53995) (apply!98 lt!53996 lt!53995))))

(declare-fun lt!54280 () Unit!3218)

(assert (=> d!28941 (= lt!54280 (choose!664 lt!53996 lt!53986 (zeroValue!2456 newMap!16) lt!53995))))

(declare-fun e!68981 () Bool)

(assert (=> d!28941 e!68981))

(declare-fun res!52728 () Bool)

(assert (=> d!28941 (=> (not res!52728) (not e!68981))))

(assert (=> d!28941 (= res!52728 (contains!820 lt!53996 lt!53995))))

(assert (=> d!28941 (= (addApplyDifferent!74 lt!53996 lt!53986 (zeroValue!2456 newMap!16) lt!53995) lt!54280)))

(declare-fun b!105998 () Bool)

(assert (=> b!105998 (= e!68981 (not (= lt!53995 lt!53986)))))

(assert (= (and d!28941 res!52728) b!105998))

(declare-fun m!118185 () Bool)

(assert (=> d!28941 m!118185))

(assert (=> d!28941 m!117473))

(declare-fun m!118187 () Bool)

(assert (=> d!28941 m!118187))

(assert (=> d!28941 m!117479))

(assert (=> d!28941 m!117479))

(assert (=> d!28941 m!117481))

(assert (=> b!105637 d!28941))

(declare-fun d!28943 () Bool)

(assert (=> d!28943 (contains!820 (+!135 lt!53980 (tuple2!2381 lt!53991 (zeroValue!2456 newMap!16))) lt!53984)))

(declare-fun lt!54281 () Unit!3218)

(assert (=> d!28943 (= lt!54281 (choose!665 lt!53980 lt!53991 (zeroValue!2456 newMap!16) lt!53984))))

(assert (=> d!28943 (contains!820 lt!53980 lt!53984)))

(assert (=> d!28943 (= (addStillContains!74 lt!53980 lt!53991 (zeroValue!2456 newMap!16) lt!53984) lt!54281)))

(declare-fun bs!4343 () Bool)

(assert (= bs!4343 d!28943))

(assert (=> bs!4343 m!117475))

(assert (=> bs!4343 m!117475))

(assert (=> bs!4343 m!117477))

(declare-fun m!118189 () Bool)

(assert (=> bs!4343 m!118189))

(declare-fun m!118191 () Bool)

(assert (=> bs!4343 m!118191))

(assert (=> b!105637 d!28943))

(declare-fun d!28945 () Bool)

(assert (=> d!28945 (= (apply!98 lt!53985 lt!53989) (get!1335 (getValueByKey!154 (toList!787 lt!53985) lt!53989)))))

(declare-fun bs!4344 () Bool)

(assert (= bs!4344 d!28945))

(declare-fun m!118193 () Bool)

(assert (=> bs!4344 m!118193))

(assert (=> bs!4344 m!118193))

(declare-fun m!118195 () Bool)

(assert (=> bs!4344 m!118195))

(assert (=> b!105637 d!28945))

(declare-fun d!28947 () Bool)

(declare-fun e!68982 () Bool)

(assert (=> d!28947 e!68982))

(declare-fun res!52730 () Bool)

(assert (=> d!28947 (=> (not res!52730) (not e!68982))))

(declare-fun lt!54285 () ListLongMap!1543)

(assert (=> d!28947 (= res!52730 (contains!820 lt!54285 (_1!1201 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16)))))))

(declare-fun lt!54282 () List!1616)

(assert (=> d!28947 (= lt!54285 (ListLongMap!1544 lt!54282))))

(declare-fun lt!54283 () Unit!3218)

(declare-fun lt!54284 () Unit!3218)

(assert (=> d!28947 (= lt!54283 lt!54284)))

(assert (=> d!28947 (= (getValueByKey!154 lt!54282 (_1!1201 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16)))))))

(assert (=> d!28947 (= lt!54284 (lemmaContainsTupThenGetReturnValue!73 lt!54282 (_1!1201 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16)))))))

(assert (=> d!28947 (= lt!54282 (insertStrictlySorted!76 (toList!787 lt!53996) (_1!1201 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16)))))))

(assert (=> d!28947 (= (+!135 lt!53996 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16))) lt!54285)))

(declare-fun b!105999 () Bool)

(declare-fun res!52729 () Bool)

(assert (=> b!105999 (=> (not res!52729) (not e!68982))))

(assert (=> b!105999 (= res!52729 (= (getValueByKey!154 (toList!787 lt!54285) (_1!1201 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16))))))))

(declare-fun b!106000 () Bool)

(assert (=> b!106000 (= e!68982 (contains!821 (toList!787 lt!54285) (tuple2!2381 lt!53986 (zeroValue!2456 newMap!16))))))

(assert (= (and d!28947 res!52730) b!105999))

(assert (= (and b!105999 res!52729) b!106000))

(declare-fun m!118197 () Bool)

(assert (=> d!28947 m!118197))

(declare-fun m!118199 () Bool)

(assert (=> d!28947 m!118199))

(declare-fun m!118201 () Bool)

(assert (=> d!28947 m!118201))

(declare-fun m!118203 () Bool)

(assert (=> d!28947 m!118203))

(declare-fun m!118205 () Bool)

(assert (=> b!105999 m!118205))

(declare-fun m!118207 () Bool)

(assert (=> b!106000 m!118207))

(assert (=> b!105637 d!28947))

(declare-fun b!106003 () Bool)

(declare-fun e!68984 () Option!160)

(assert (=> b!106003 (= e!68984 (getValueByKey!154 (t!5690 (t!5690 lt!53717)) (_1!1201 lt!53606)))))

(declare-fun b!106002 () Bool)

(declare-fun e!68983 () Option!160)

(assert (=> b!106002 (= e!68983 e!68984)))

(declare-fun c!18474 () Bool)

(assert (=> b!106002 (= c!18474 (and ((_ is Cons!1612) (t!5690 lt!53717)) (not (= (_1!1201 (h!2209 (t!5690 lt!53717))) (_1!1201 lt!53606)))))))

(declare-fun d!28949 () Bool)

(declare-fun c!18473 () Bool)

(assert (=> d!28949 (= c!18473 (and ((_ is Cons!1612) (t!5690 lt!53717)) (= (_1!1201 (h!2209 (t!5690 lt!53717))) (_1!1201 lt!53606))))))

(assert (=> d!28949 (= (getValueByKey!154 (t!5690 lt!53717) (_1!1201 lt!53606)) e!68983)))

(declare-fun b!106004 () Bool)

(assert (=> b!106004 (= e!68984 None!158)))

(declare-fun b!106001 () Bool)

(assert (=> b!106001 (= e!68983 (Some!159 (_2!1201 (h!2209 (t!5690 lt!53717)))))))

(assert (= (and d!28949 c!18473) b!106001))

(assert (= (and d!28949 (not c!18473)) b!106002))

(assert (= (and b!106002 c!18474) b!106003))

(assert (= (and b!106002 (not c!18474)) b!106004))

(declare-fun m!118209 () Bool)

(assert (=> b!106003 m!118209))

(assert (=> b!105914 d!28949))

(declare-fun d!28951 () Bool)

(assert (=> d!28951 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4345 () Bool)

(assert (= bs!4345 d!28951))

(assert (=> bs!4345 m!117889))

(declare-fun m!118211 () Bool)

(assert (=> bs!4345 m!118211))

(assert (=> b!105870 d!28951))

(declare-fun b!106007 () Bool)

(declare-fun e!68986 () Option!160)

(assert (=> b!106007 (= e!68986 (getValueByKey!154 (t!5690 (toList!787 lt!53698)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106006 () Bool)

(declare-fun e!68985 () Option!160)

(assert (=> b!106006 (= e!68985 e!68986)))

(declare-fun c!18476 () Bool)

(assert (=> b!106006 (= c!18476 (and ((_ is Cons!1612) (toList!787 lt!53698)) (not (= (_1!1201 (h!2209 (toList!787 lt!53698))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!28953 () Bool)

(declare-fun c!18475 () Bool)

(assert (=> d!28953 (= c!18475 (and ((_ is Cons!1612) (toList!787 lt!53698)) (= (_1!1201 (h!2209 (toList!787 lt!53698))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28953 (= (getValueByKey!154 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000) e!68985)))

(declare-fun b!106008 () Bool)

(assert (=> b!106008 (= e!68986 None!158)))

(declare-fun b!106005 () Bool)

(assert (=> b!106005 (= e!68985 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53698)))))))

(assert (= (and d!28953 c!18475) b!106005))

(assert (= (and d!28953 (not c!18475)) b!106006))

(assert (= (and b!106006 c!18476) b!106007))

(assert (= (and b!106006 (not c!18476)) b!106008))

(declare-fun m!118213 () Bool)

(assert (=> b!106007 m!118213))

(assert (=> b!105870 d!28953))

(declare-fun b!106009 () Bool)

(declare-fun e!68989 () ListLongMap!1543)

(assert (=> b!106009 (= e!68989 (ListLongMap!1544 Nil!1613))))

(declare-fun d!28955 () Bool)

(declare-fun e!68993 () Bool)

(assert (=> d!28955 e!68993))

(declare-fun res!52733 () Bool)

(assert (=> d!28955 (=> (not res!52733) (not e!68993))))

(declare-fun lt!54290 () ListLongMap!1543)

(assert (=> d!28955 (= res!52733 (not (contains!820 lt!54290 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28955 (= lt!54290 e!68989)))

(declare-fun c!18477 () Bool)

(assert (=> d!28955 (= c!18477 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!28955 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!28955 (= (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54290)))

(declare-fun b!106010 () Bool)

(declare-fun e!68990 () Bool)

(declare-fun e!68988 () Bool)

(assert (=> b!106010 (= e!68990 e!68988)))

(assert (=> b!106010 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun res!52731 () Bool)

(assert (=> b!106010 (= res!52731 (contains!820 lt!54290 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106010 (=> (not res!52731) (not e!68988))))

(declare-fun b!106011 () Bool)

(declare-fun e!68991 () Bool)

(assert (=> b!106011 (= e!68990 e!68991)))

(declare-fun c!18479 () Bool)

(assert (=> b!106011 (= c!18479 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106012 () Bool)

(declare-fun e!68987 () ListLongMap!1543)

(assert (=> b!106012 (= e!68989 e!68987)))

(declare-fun c!18480 () Bool)

(assert (=> b!106012 (= c!18480 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106013 () Bool)

(declare-fun lt!54292 () Unit!3218)

(declare-fun lt!54288 () Unit!3218)

(assert (=> b!106013 (= lt!54292 lt!54288)))

(declare-fun lt!54291 () V!3217)

(declare-fun lt!54287 () (_ BitVec 64))

(declare-fun lt!54286 () (_ BitVec 64))

(declare-fun lt!54289 () ListLongMap!1543)

(assert (=> b!106013 (not (contains!820 (+!135 lt!54289 (tuple2!2381 lt!54286 lt!54291)) lt!54287))))

(assert (=> b!106013 (= lt!54288 (addStillNotContains!47 lt!54289 lt!54286 lt!54291 lt!54287))))

(assert (=> b!106013 (= lt!54287 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106013 (= lt!54291 (get!1331 (select (arr!2051 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106013 (= lt!54286 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11202 () ListLongMap!1543)

(assert (=> b!106013 (= lt!54289 call!11202)))

(assert (=> b!106013 (= e!68987 (+!135 call!11202 (tuple2!2381 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) (get!1331 (select (arr!2051 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106014 () Bool)

(assert (=> b!106014 (= e!68993 e!68990)))

(declare-fun c!18478 () Bool)

(declare-fun e!68992 () Bool)

(assert (=> b!106014 (= c!18478 e!68992)))

(declare-fun res!52734 () Bool)

(assert (=> b!106014 (=> (not res!52734) (not e!68992))))

(assert (=> b!106014 (= res!52734 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106015 () Bool)

(assert (=> b!106015 (= e!68991 (isEmpty!374 lt!54290))))

(declare-fun b!106016 () Bool)

(assert (=> b!106016 (= e!68987 call!11202)))

(declare-fun b!106017 () Bool)

(declare-fun res!52732 () Bool)

(assert (=> b!106017 (=> (not res!52732) (not e!68993))))

(assert (=> b!106017 (= res!52732 (not (contains!820 lt!54290 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106018 () Bool)

(assert (=> b!106018 (= e!68992 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106018 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!11199 () Bool)

(assert (=> bm!11199 (= call!11202 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16)))))

(declare-fun b!106019 () Bool)

(assert (=> b!106019 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> b!106019 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (_values!2564 newMap!16))))))

(assert (=> b!106019 (= e!68988 (= (apply!98 lt!54290 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106020 () Bool)

(assert (=> b!106020 (= e!68991 (= lt!54290 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16))))))

(assert (= (and d!28955 c!18477) b!106009))

(assert (= (and d!28955 (not c!18477)) b!106012))

(assert (= (and b!106012 c!18480) b!106013))

(assert (= (and b!106012 (not c!18480)) b!106016))

(assert (= (or b!106013 b!106016) bm!11199))

(assert (= (and d!28955 res!52733) b!106017))

(assert (= (and b!106017 res!52732) b!106014))

(assert (= (and b!106014 res!52734) b!106018))

(assert (= (and b!106014 c!18478) b!106010))

(assert (= (and b!106014 (not c!18478)) b!106011))

(assert (= (and b!106010 res!52731) b!106019))

(assert (= (and b!106011 c!18479) b!106020))

(assert (= (and b!106011 (not c!18479)) b!106015))

(declare-fun b_lambda!4735 () Bool)

(assert (=> (not b_lambda!4735) (not b!106013)))

(assert (=> b!106013 t!5701))

(declare-fun b_and!6533 () Bool)

(assert (= b_and!6529 (and (=> t!5701 result!3459) b_and!6533)))

(assert (=> b!106013 t!5703))

(declare-fun b_and!6535 () Bool)

(assert (= b_and!6531 (and (=> t!5703 result!3461) b_and!6535)))

(declare-fun b_lambda!4737 () Bool)

(assert (=> (not b_lambda!4737) (not b!106019)))

(assert (=> b!106019 t!5701))

(declare-fun b_and!6537 () Bool)

(assert (= b_and!6533 (and (=> t!5701 result!3459) b_and!6537)))

(assert (=> b!106019 t!5703))

(declare-fun b_and!6539 () Bool)

(assert (= b_and!6535 (and (=> t!5703 result!3461) b_and!6539)))

(declare-fun m!118215 () Bool)

(assert (=> d!28955 m!118215))

(assert (=> d!28955 m!117277))

(assert (=> b!106010 m!117265))

(assert (=> b!106010 m!117265))

(declare-fun m!118217 () Bool)

(assert (=> b!106010 m!118217))

(assert (=> b!106018 m!117265))

(assert (=> b!106018 m!117265))

(assert (=> b!106018 m!117267))

(assert (=> b!106019 m!117291))

(assert (=> b!106019 m!117367))

(assert (=> b!106019 m!117291))

(assert (=> b!106019 m!117369))

(assert (=> b!106019 m!117367))

(assert (=> b!106019 m!117265))

(declare-fun m!118219 () Bool)

(assert (=> b!106019 m!118219))

(assert (=> b!106019 m!117265))

(declare-fun m!118221 () Bool)

(assert (=> b!106013 m!118221))

(declare-fun m!118223 () Bool)

(assert (=> b!106013 m!118223))

(declare-fun m!118225 () Bool)

(assert (=> b!106013 m!118225))

(assert (=> b!106013 m!117291))

(assert (=> b!106013 m!117367))

(assert (=> b!106013 m!117265))

(declare-fun m!118227 () Bool)

(assert (=> b!106013 m!118227))

(assert (=> b!106013 m!117367))

(assert (=> b!106013 m!117291))

(assert (=> b!106013 m!117369))

(assert (=> b!106013 m!118223))

(declare-fun m!118229 () Bool)

(assert (=> b!106015 m!118229))

(declare-fun m!118231 () Bool)

(assert (=> b!106017 m!118231))

(declare-fun m!118233 () Bool)

(assert (=> b!106020 m!118233))

(assert (=> bm!11199 m!118233))

(assert (=> b!106012 m!117265))

(assert (=> b!106012 m!117265))

(assert (=> b!106012 m!117267))

(assert (=> bm!11152 d!28955))

(declare-fun b!106023 () Bool)

(declare-fun e!68995 () Option!160)

(assert (=> b!106023 (= e!68995 (getValueByKey!154 (t!5690 (toList!787 lt!54007)) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106022 () Bool)

(declare-fun e!68994 () Option!160)

(assert (=> b!106022 (= e!68994 e!68995)))

(declare-fun c!18482 () Bool)

(assert (=> b!106022 (= c!18482 (and ((_ is Cons!1612) (toList!787 lt!54007)) (not (= (_1!1201 (h!2209 (toList!787 lt!54007))) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun d!28957 () Bool)

(declare-fun c!18481 () Bool)

(assert (=> d!28957 (= c!18481 (and ((_ is Cons!1612) (toList!787 lt!54007)) (= (_1!1201 (h!2209 (toList!787 lt!54007))) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!28957 (= (getValueByKey!154 (toList!787 lt!54007) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!68994)))

(declare-fun b!106024 () Bool)

(assert (=> b!106024 (= e!68995 None!158)))

(declare-fun b!106021 () Bool)

(assert (=> b!106021 (= e!68994 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54007)))))))

(assert (= (and d!28957 c!18481) b!106021))

(assert (= (and d!28957 (not c!18481)) b!106022))

(assert (= (and b!106022 c!18482) b!106023))

(assert (= (and b!106022 (not c!18482)) b!106024))

(declare-fun m!118235 () Bool)

(assert (=> b!106023 m!118235))

(assert (=> b!105649 d!28957))

(declare-fun d!28959 () Bool)

(assert (=> d!28959 (isDefined!108 (getValueByKey!154 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun lt!54293 () Unit!3218)

(assert (=> d!28959 (= lt!54293 (choose!671 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun e!68996 () Bool)

(assert (=> d!28959 e!68996))

(declare-fun res!52735 () Bool)

(assert (=> d!28959 (=> (not res!52735) (not e!68996))))

(assert (=> d!28959 (= res!52735 (isStrictlySorted!304 (toList!787 call!11088)))))

(assert (=> d!28959 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) lt!54293)))

(declare-fun b!106025 () Bool)

(assert (=> b!106025 (= e!68996 (containsKey!158 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (= (and d!28959 res!52735) b!106025))

(assert (=> d!28959 m!116875))

(assert (=> d!28959 m!117631))

(assert (=> d!28959 m!117631))

(assert (=> d!28959 m!117633))

(assert (=> d!28959 m!116875))

(declare-fun m!118237 () Bool)

(assert (=> d!28959 m!118237))

(declare-fun m!118239 () Bool)

(assert (=> d!28959 m!118239))

(assert (=> b!106025 m!116875))

(assert (=> b!106025 m!117627))

(assert (=> b!105673 d!28959))

(declare-fun d!28961 () Bool)

(assert (=> d!28961 (= (isDefined!108 (getValueByKey!154 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))) (not (isEmpty!376 (getValueByKey!154 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))))

(declare-fun bs!4346 () Bool)

(assert (= bs!4346 d!28961))

(assert (=> bs!4346 m!117631))

(declare-fun m!118241 () Bool)

(assert (=> bs!4346 m!118241))

(assert (=> b!105673 d!28961))

(declare-fun e!68998 () Option!160)

(declare-fun b!106028 () Bool)

(assert (=> b!106028 (= e!68998 (getValueByKey!154 (t!5690 (toList!787 call!11088)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!106027 () Bool)

(declare-fun e!68997 () Option!160)

(assert (=> b!106027 (= e!68997 e!68998)))

(declare-fun c!18484 () Bool)

(assert (=> b!106027 (= c!18484 (and ((_ is Cons!1612) (toList!787 call!11088)) (not (= (_1!1201 (h!2209 (toList!787 call!11088))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))))

(declare-fun d!28963 () Bool)

(declare-fun c!18483 () Bool)

(assert (=> d!28963 (= c!18483 (and ((_ is Cons!1612) (toList!787 call!11088)) (= (_1!1201 (h!2209 (toList!787 call!11088))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (=> d!28963 (= (getValueByKey!154 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) e!68997)))

(declare-fun b!106029 () Bool)

(assert (=> b!106029 (= e!68998 None!158)))

(declare-fun b!106026 () Bool)

(assert (=> b!106026 (= e!68997 (Some!159 (_2!1201 (h!2209 (toList!787 call!11088)))))))

(assert (= (and d!28963 c!18483) b!106026))

(assert (= (and d!28963 (not c!18483)) b!106027))

(assert (= (and b!106027 c!18484) b!106028))

(assert (= (and b!106027 (not c!18484)) b!106029))

(assert (=> b!106028 m!116875))

(declare-fun m!118243 () Bool)

(assert (=> b!106028 m!118243))

(assert (=> b!105673 d!28963))

(declare-fun d!28965 () Bool)

(declare-fun e!68999 () Bool)

(assert (=> d!28965 e!68999))

(declare-fun res!52736 () Bool)

(assert (=> d!28965 (=> res!52736 e!68999)))

(declare-fun lt!54294 () Bool)

(assert (=> d!28965 (= res!52736 (not lt!54294))))

(declare-fun lt!54297 () Bool)

(assert (=> d!28965 (= lt!54294 lt!54297)))

(declare-fun lt!54296 () Unit!3218)

(declare-fun e!69000 () Unit!3218)

(assert (=> d!28965 (= lt!54296 e!69000)))

(declare-fun c!18485 () Bool)

(assert (=> d!28965 (= c!18485 lt!54297)))

(assert (=> d!28965 (= lt!54297 (containsKey!158 (toList!787 lt!54229) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28965 (= (contains!820 lt!54229 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54294)))

(declare-fun b!106030 () Bool)

(declare-fun lt!54295 () Unit!3218)

(assert (=> b!106030 (= e!69000 lt!54295)))

(assert (=> b!106030 (= lt!54295 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54229) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> b!106030 (isDefined!108 (getValueByKey!154 (toList!787 lt!54229) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106031 () Bool)

(declare-fun Unit!3254 () Unit!3218)

(assert (=> b!106031 (= e!69000 Unit!3254)))

(declare-fun b!106032 () Bool)

(assert (=> b!106032 (= e!68999 (isDefined!108 (getValueByKey!154 (toList!787 lt!54229) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!28965 c!18485) b!106030))

(assert (= (and d!28965 (not c!18485)) b!106031))

(assert (= (and d!28965 (not res!52736)) b!106032))

(declare-fun m!118245 () Bool)

(assert (=> d!28965 m!118245))

(declare-fun m!118247 () Bool)

(assert (=> b!106030 m!118247))

(assert (=> b!106030 m!118005))

(assert (=> b!106030 m!118005))

(declare-fun m!118249 () Bool)

(assert (=> b!106030 m!118249))

(assert (=> b!106032 m!118005))

(assert (=> b!106032 m!118005))

(assert (=> b!106032 m!118249))

(assert (=> d!28887 d!28965))

(declare-fun b!106035 () Bool)

(declare-fun e!69002 () Option!160)

(assert (=> b!106035 (= e!69002 (getValueByKey!154 (t!5690 lt!54226) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106034 () Bool)

(declare-fun e!69001 () Option!160)

(assert (=> b!106034 (= e!69001 e!69002)))

(declare-fun c!18487 () Bool)

(assert (=> b!106034 (= c!18487 (and ((_ is Cons!1612) lt!54226) (not (= (_1!1201 (h!2209 lt!54226)) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun d!28967 () Bool)

(declare-fun c!18486 () Bool)

(assert (=> d!28967 (= c!18486 (and ((_ is Cons!1612) lt!54226) (= (_1!1201 (h!2209 lt!54226)) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!28967 (= (getValueByKey!154 lt!54226 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69001)))

(declare-fun b!106036 () Bool)

(assert (=> b!106036 (= e!69002 None!158)))

(declare-fun b!106033 () Bool)

(assert (=> b!106033 (= e!69001 (Some!159 (_2!1201 (h!2209 lt!54226))))))

(assert (= (and d!28967 c!18486) b!106033))

(assert (= (and d!28967 (not c!18486)) b!106034))

(assert (= (and b!106034 c!18487) b!106035))

(assert (= (and b!106034 (not c!18487)) b!106036))

(declare-fun m!118251 () Bool)

(assert (=> b!106035 m!118251))

(assert (=> d!28887 d!28967))

(declare-fun d!28969 () Bool)

(assert (=> d!28969 (= (getValueByKey!154 lt!54226 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54298 () Unit!3218)

(assert (=> d!28969 (= lt!54298 (choose!667 lt!54226 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun e!69003 () Bool)

(assert (=> d!28969 e!69003))

(declare-fun res!52737 () Bool)

(assert (=> d!28969 (=> (not res!52737) (not e!69003))))

(assert (=> d!28969 (= res!52737 (isStrictlySorted!304 lt!54226))))

(assert (=> d!28969 (= (lemmaContainsTupThenGetReturnValue!73 lt!54226 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54298)))

(declare-fun b!106037 () Bool)

(declare-fun res!52738 () Bool)

(assert (=> b!106037 (=> (not res!52738) (not e!69003))))

(assert (=> b!106037 (= res!52738 (containsKey!158 lt!54226 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106038 () Bool)

(assert (=> b!106038 (= e!69003 (contains!821 lt!54226 (tuple2!2381 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!28969 res!52737) b!106037))

(assert (= (and b!106037 res!52738) b!106038))

(assert (=> d!28969 m!117999))

(declare-fun m!118253 () Bool)

(assert (=> d!28969 m!118253))

(declare-fun m!118255 () Bool)

(assert (=> d!28969 m!118255))

(declare-fun m!118257 () Bool)

(assert (=> b!106037 m!118257))

(declare-fun m!118259 () Bool)

(assert (=> b!106038 m!118259))

(assert (=> d!28887 d!28969))

(declare-fun b!106039 () Bool)

(declare-fun c!18490 () Bool)

(assert (=> b!106039 (= c!18490 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) (bvsgt (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun e!69007 () List!1616)

(declare-fun e!69006 () List!1616)

(assert (=> b!106039 (= e!69007 e!69006)))

(declare-fun b!106040 () Bool)

(declare-fun e!69005 () List!1616)

(declare-fun call!11203 () List!1616)

(assert (=> b!106040 (= e!69005 call!11203)))

(declare-fun b!106041 () Bool)

(declare-fun e!69008 () Bool)

(declare-fun lt!54299 () List!1616)

(assert (=> b!106041 (= e!69008 (contains!821 lt!54299 (tuple2!2381 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106042 () Bool)

(declare-fun res!52739 () Bool)

(assert (=> b!106042 (=> (not res!52739) (not e!69008))))

(assert (=> b!106042 (= res!52739 (containsKey!158 lt!54299 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106043 () Bool)

(declare-fun call!11204 () List!1616)

(assert (=> b!106043 (= e!69006 call!11204)))

(declare-fun b!106044 () Bool)

(assert (=> b!106044 (= e!69006 call!11204)))

(declare-fun b!106045 () Bool)

(assert (=> b!106045 (= e!69005 e!69007)))

(declare-fun c!18491 () Bool)

(assert (=> b!106045 (= c!18491 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun bm!11200 () Bool)

(declare-fun call!11205 () List!1616)

(assert (=> bm!11200 (= call!11205 call!11203)))

(declare-fun b!106046 () Bool)

(assert (=> b!106046 (= e!69007 call!11205)))

(declare-fun b!106047 () Bool)

(declare-fun e!69004 () List!1616)

(assert (=> b!106047 (= e!69004 (insertStrictlySorted!76 (t!5690 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun bm!11202 () Bool)

(assert (=> bm!11202 (= call!11204 call!11205)))

(declare-fun b!106048 () Bool)

(assert (=> b!106048 (= e!69004 (ite c!18491 (t!5690 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) (ite c!18490 (Cons!1612 (h!2209 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) (t!5690 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))) Nil!1613)))))

(declare-fun c!18488 () Bool)

(declare-fun bm!11201 () Bool)

(assert (=> bm!11201 (= call!11203 ($colon$colon!80 e!69004 (ite c!18488 (h!2209 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) (tuple2!2381 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18489 () Bool)

(assert (=> bm!11201 (= c!18489 c!18488)))

(declare-fun d!28971 () Bool)

(assert (=> d!28971 e!69008))

(declare-fun res!52740 () Bool)

(assert (=> d!28971 (=> (not res!52740) (not e!69008))))

(assert (=> d!28971 (= res!52740 (isStrictlySorted!304 lt!54299))))

(assert (=> d!28971 (= lt!54299 e!69005)))

(assert (=> d!28971 (= c!18488 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) (bvslt (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!28971 (isStrictlySorted!304 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!28971 (= (insertStrictlySorted!76 (toList!787 (+!135 lt!53604 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54299)))

(assert (= (and d!28971 c!18488) b!106040))

(assert (= (and d!28971 (not c!18488)) b!106045))

(assert (= (and b!106045 c!18491) b!106046))

(assert (= (and b!106045 (not c!18491)) b!106039))

(assert (= (and b!106039 c!18490) b!106043))

(assert (= (and b!106039 (not c!18490)) b!106044))

(assert (= (or b!106043 b!106044) bm!11202))

(assert (= (or b!106046 bm!11202) bm!11200))

(assert (= (or b!106040 bm!11200) bm!11201))

(assert (= (and bm!11201 c!18489) b!106047))

(assert (= (and bm!11201 (not c!18489)) b!106048))

(assert (= (and d!28971 res!52740) b!106042))

(assert (= (and b!106042 res!52739) b!106041))

(declare-fun m!118261 () Bool)

(assert (=> b!106041 m!118261))

(declare-fun m!118263 () Bool)

(assert (=> d!28971 m!118263))

(declare-fun m!118265 () Bool)

(assert (=> d!28971 m!118265))

(declare-fun m!118267 () Bool)

(assert (=> b!106042 m!118267))

(declare-fun m!118269 () Bool)

(assert (=> b!106047 m!118269))

(declare-fun m!118271 () Bool)

(assert (=> bm!11201 m!118271))

(assert (=> d!28887 d!28971))

(declare-fun d!28973 () Bool)

(declare-fun res!52741 () Bool)

(declare-fun e!69009 () Bool)

(assert (=> d!28973 (=> res!52741 e!69009)))

(assert (=> d!28973 (= res!52741 (and ((_ is Cons!1612) lt!53709) (= (_1!1201 (h!2209 lt!53709)) (_1!1201 lt!53599))))))

(assert (=> d!28973 (= (containsKey!158 lt!53709 (_1!1201 lt!53599)) e!69009)))

(declare-fun b!106049 () Bool)

(declare-fun e!69010 () Bool)

(assert (=> b!106049 (= e!69009 e!69010)))

(declare-fun res!52742 () Bool)

(assert (=> b!106049 (=> (not res!52742) (not e!69010))))

(assert (=> b!106049 (= res!52742 (and (or (not ((_ is Cons!1612) lt!53709)) (bvsle (_1!1201 (h!2209 lt!53709)) (_1!1201 lt!53599))) ((_ is Cons!1612) lt!53709) (bvslt (_1!1201 (h!2209 lt!53709)) (_1!1201 lt!53599))))))

(declare-fun b!106050 () Bool)

(assert (=> b!106050 (= e!69010 (containsKey!158 (t!5690 lt!53709) (_1!1201 lt!53599)))))

(assert (= (and d!28973 (not res!52741)) b!106049))

(assert (= (and b!106049 res!52742) b!106050))

(declare-fun m!118273 () Bool)

(assert (=> b!106050 m!118273))

(assert (=> b!105742 d!28973))

(declare-fun d!28975 () Bool)

(assert (=> d!28975 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4347 () Bool)

(assert (= bs!4347 d!28975))

(assert (=> bs!4347 m!117445))

(declare-fun m!118275 () Bool)

(assert (=> bs!4347 m!118275))

(assert (=> b!105618 d!28975))

(declare-fun b!106053 () Bool)

(declare-fun e!69012 () Option!160)

(assert (=> b!106053 (= e!69012 (getValueByKey!154 (t!5690 (toList!787 lt!53875)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!106052 () Bool)

(declare-fun e!69011 () Option!160)

(assert (=> b!106052 (= e!69011 e!69012)))

(declare-fun c!18493 () Bool)

(assert (=> b!106052 (= c!18493 (and ((_ is Cons!1612) (toList!787 lt!53875)) (not (= (_1!1201 (h!2209 (toList!787 lt!53875))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun d!28977 () Bool)

(declare-fun c!18492 () Bool)

(assert (=> d!28977 (= c!18492 (and ((_ is Cons!1612) (toList!787 lt!53875)) (= (_1!1201 (h!2209 (toList!787 lt!53875))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28977 (= (getValueByKey!154 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69011)))

(declare-fun b!106054 () Bool)

(assert (=> b!106054 (= e!69012 None!158)))

(declare-fun b!106051 () Bool)

(assert (=> b!106051 (= e!69011 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53875)))))))

(assert (= (and d!28977 c!18492) b!106051))

(assert (= (and d!28977 (not c!18492)) b!106052))

(assert (= (and b!106052 c!18493) b!106053))

(assert (= (and b!106052 (not c!18493)) b!106054))

(assert (=> b!106053 m!117049))

(declare-fun m!118277 () Bool)

(assert (=> b!106053 m!118277))

(assert (=> b!105618 d!28977))

(declare-fun d!28979 () Bool)

(assert (=> d!28979 (= (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105579 d!28979))

(assert (=> d!28817 d!28821))

(assert (=> d!28817 d!28815))

(declare-fun d!28981 () Bool)

(assert (=> d!28981 (not (contains!820 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)) lt!53695))))

(assert (=> d!28981 true))

(declare-fun _$36!319 () Unit!3218)

(assert (=> d!28981 (= (choose!669 lt!53697 lt!53694 lt!53699 lt!53695) _$36!319)))

(declare-fun bs!4348 () Bool)

(assert (= bs!4348 d!28981))

(assert (=> bs!4348 m!117063))

(assert (=> bs!4348 m!117063))

(assert (=> bs!4348 m!117065))

(assert (=> d!28817 d!28981))

(declare-fun d!28983 () Bool)

(declare-fun e!69013 () Bool)

(assert (=> d!28983 e!69013))

(declare-fun res!52743 () Bool)

(assert (=> d!28983 (=> res!52743 e!69013)))

(declare-fun lt!54300 () Bool)

(assert (=> d!28983 (= res!52743 (not lt!54300))))

(declare-fun lt!54303 () Bool)

(assert (=> d!28983 (= lt!54300 lt!54303)))

(declare-fun lt!54302 () Unit!3218)

(declare-fun e!69014 () Unit!3218)

(assert (=> d!28983 (= lt!54302 e!69014)))

(declare-fun c!18494 () Bool)

(assert (=> d!28983 (= c!18494 lt!54303)))

(assert (=> d!28983 (= lt!54303 (containsKey!158 (toList!787 lt!53697) lt!53695))))

(assert (=> d!28983 (= (contains!820 lt!53697 lt!53695) lt!54300)))

(declare-fun b!106056 () Bool)

(declare-fun lt!54301 () Unit!3218)

(assert (=> b!106056 (= e!69014 lt!54301)))

(assert (=> b!106056 (= lt!54301 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53697) lt!53695))))

(assert (=> b!106056 (isDefined!108 (getValueByKey!154 (toList!787 lt!53697) lt!53695))))

(declare-fun b!106057 () Bool)

(declare-fun Unit!3255 () Unit!3218)

(assert (=> b!106057 (= e!69014 Unit!3255)))

(declare-fun b!106058 () Bool)

(assert (=> b!106058 (= e!69013 (isDefined!108 (getValueByKey!154 (toList!787 lt!53697) lt!53695)))))

(assert (= (and d!28983 c!18494) b!106056))

(assert (= (and d!28983 (not c!18494)) b!106057))

(assert (= (and d!28983 (not res!52743)) b!106058))

(declare-fun m!118279 () Bool)

(assert (=> d!28983 m!118279))

(declare-fun m!118281 () Bool)

(assert (=> b!106056 m!118281))

(declare-fun m!118283 () Bool)

(assert (=> b!106056 m!118283))

(assert (=> b!106056 m!118283))

(declare-fun m!118285 () Bool)

(assert (=> b!106056 m!118285))

(assert (=> b!106058 m!118283))

(assert (=> b!106058 m!118283))

(assert (=> b!106058 m!118285))

(assert (=> d!28817 d!28983))

(assert (=> b!105846 d!28813))

(declare-fun b!106059 () Bool)

(declare-fun e!69015 () Bool)

(declare-fun call!11206 () Bool)

(assert (=> b!106059 (= e!69015 call!11206)))

(declare-fun b!106060 () Bool)

(declare-fun e!69017 () Bool)

(assert (=> b!106060 (= e!69017 call!11206)))

(declare-fun b!106061 () Bool)

(declare-fun e!69016 () Bool)

(assert (=> b!106061 (= e!69016 e!69015)))

(declare-fun c!18495 () Bool)

(assert (=> b!106061 (= c!18495 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11203 () Bool)

(assert (=> bm!11203 (= call!11206 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun d!28985 () Bool)

(declare-fun res!52745 () Bool)

(assert (=> d!28985 (=> res!52745 e!69016)))

(assert (=> d!28985 (= res!52745 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!28985 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4286 newMap!16) (mask!6726 newMap!16)) e!69016)))

(declare-fun b!106062 () Bool)

(assert (=> b!106062 (= e!69015 e!69017)))

(declare-fun lt!54306 () (_ BitVec 64))

(assert (=> b!106062 (= lt!54306 (select (arr!2050 (_keys!4286 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!54305 () Unit!3218)

(assert (=> b!106062 (= lt!54305 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4286 newMap!16) lt!54306 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!106062 (arrayContainsKey!0 (_keys!4286 newMap!16) lt!54306 #b00000000000000000000000000000000)))

(declare-fun lt!54304 () Unit!3218)

(assert (=> b!106062 (= lt!54304 lt!54305)))

(declare-fun res!52744 () Bool)

(assert (=> b!106062 (= res!52744 (= (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4286 newMap!16) (mask!6726 newMap!16)) (Found!262 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!106062 (=> (not res!52744) (not e!69017))))

(assert (= (and d!28985 (not res!52745)) b!106061))

(assert (= (and b!106061 c!18495) b!106062))

(assert (= (and b!106061 (not c!18495)) b!106059))

(assert (= (and b!106062 res!52744) b!106060))

(assert (= (or b!106060 b!106059) bm!11203))

(declare-fun m!118287 () Bool)

(assert (=> b!106061 m!118287))

(assert (=> b!106061 m!118287))

(declare-fun m!118289 () Bool)

(assert (=> b!106061 m!118289))

(declare-fun m!118291 () Bool)

(assert (=> bm!11203 m!118291))

(assert (=> b!106062 m!118287))

(declare-fun m!118293 () Bool)

(assert (=> b!106062 m!118293))

(declare-fun m!118295 () Bool)

(assert (=> b!106062 m!118295))

(assert (=> b!106062 m!118287))

(declare-fun m!118297 () Bool)

(assert (=> b!106062 m!118297))

(assert (=> bm!11166 d!28985))

(declare-fun d!28987 () Bool)

(declare-fun e!69018 () Bool)

(assert (=> d!28987 e!69018))

(declare-fun res!52746 () Bool)

(assert (=> d!28987 (=> res!52746 e!69018)))

(declare-fun lt!54307 () Bool)

(assert (=> d!28987 (= res!52746 (not lt!54307))))

(declare-fun lt!54310 () Bool)

(assert (=> d!28987 (= lt!54307 lt!54310)))

(declare-fun lt!54309 () Unit!3218)

(declare-fun e!69019 () Unit!3218)

(assert (=> d!28987 (= lt!54309 e!69019)))

(declare-fun c!18496 () Bool)

(assert (=> d!28987 (= c!18496 lt!54310)))

(assert (=> d!28987 (= lt!54310 (containsKey!158 (toList!787 lt!54007) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!28987 (= (contains!820 lt!54007 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54307)))

(declare-fun b!106063 () Bool)

(declare-fun lt!54308 () Unit!3218)

(assert (=> b!106063 (= e!69019 lt!54308)))

(assert (=> b!106063 (= lt!54308 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54007) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> b!106063 (isDefined!108 (getValueByKey!154 (toList!787 lt!54007) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106064 () Bool)

(declare-fun Unit!3256 () Unit!3218)

(assert (=> b!106064 (= e!69019 Unit!3256)))

(declare-fun b!106065 () Bool)

(assert (=> b!106065 (= e!69018 (isDefined!108 (getValueByKey!154 (toList!787 lt!54007) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!28987 c!18496) b!106063))

(assert (= (and d!28987 (not c!18496)) b!106064))

(assert (= (and d!28987 (not res!52746)) b!106065))

(declare-fun m!118299 () Bool)

(assert (=> d!28987 m!118299))

(declare-fun m!118301 () Bool)

(assert (=> b!106063 m!118301))

(assert (=> b!106063 m!117541))

(assert (=> b!106063 m!117541))

(declare-fun m!118303 () Bool)

(assert (=> b!106063 m!118303))

(assert (=> b!106065 m!117541))

(assert (=> b!106065 m!117541))

(assert (=> b!106065 m!118303))

(assert (=> d!28755 d!28987))

(declare-fun e!69021 () Option!160)

(declare-fun b!106068 () Bool)

(assert (=> b!106068 (= e!69021 (getValueByKey!154 (t!5690 lt!54004) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106067 () Bool)

(declare-fun e!69020 () Option!160)

(assert (=> b!106067 (= e!69020 e!69021)))

(declare-fun c!18498 () Bool)

(assert (=> b!106067 (= c!18498 (and ((_ is Cons!1612) lt!54004) (not (= (_1!1201 (h!2209 lt!54004)) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18497 () Bool)

(declare-fun d!28989 () Bool)

(assert (=> d!28989 (= c!18497 (and ((_ is Cons!1612) lt!54004) (= (_1!1201 (h!2209 lt!54004)) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!28989 (= (getValueByKey!154 lt!54004 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69020)))

(declare-fun b!106069 () Bool)

(assert (=> b!106069 (= e!69021 None!158)))

(declare-fun b!106066 () Bool)

(assert (=> b!106066 (= e!69020 (Some!159 (_2!1201 (h!2209 lt!54004))))))

(assert (= (and d!28989 c!18497) b!106066))

(assert (= (and d!28989 (not c!18497)) b!106067))

(assert (= (and b!106067 c!18498) b!106068))

(assert (= (and b!106067 (not c!18498)) b!106069))

(declare-fun m!118305 () Bool)

(assert (=> b!106068 m!118305))

(assert (=> d!28755 d!28989))

(declare-fun d!28991 () Bool)

(assert (=> d!28991 (= (getValueByKey!154 lt!54004 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54311 () Unit!3218)

(assert (=> d!28991 (= lt!54311 (choose!667 lt!54004 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun e!69022 () Bool)

(assert (=> d!28991 e!69022))

(declare-fun res!52747 () Bool)

(assert (=> d!28991 (=> (not res!52747) (not e!69022))))

(assert (=> d!28991 (= res!52747 (isStrictlySorted!304 lt!54004))))

(assert (=> d!28991 (= (lemmaContainsTupThenGetReturnValue!73 lt!54004 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54311)))

(declare-fun b!106070 () Bool)

(declare-fun res!52748 () Bool)

(assert (=> b!106070 (=> (not res!52748) (not e!69022))))

(assert (=> b!106070 (= res!52748 (containsKey!158 lt!54004 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106071 () Bool)

(assert (=> b!106071 (= e!69022 (contains!821 lt!54004 (tuple2!2381 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!28991 res!52747) b!106070))

(assert (= (and b!106070 res!52748) b!106071))

(assert (=> d!28991 m!117535))

(declare-fun m!118307 () Bool)

(assert (=> d!28991 m!118307))

(declare-fun m!118309 () Bool)

(assert (=> d!28991 m!118309))

(declare-fun m!118311 () Bool)

(assert (=> b!106070 m!118311))

(declare-fun m!118313 () Bool)

(assert (=> b!106071 m!118313))

(assert (=> d!28755 d!28991))

(declare-fun c!18501 () Bool)

(declare-fun b!106072 () Bool)

(assert (=> b!106072 (= c!18501 (and ((_ is Cons!1612) (toList!787 lt!53895)) (bvsgt (_1!1201 (h!2209 (toList!787 lt!53895))) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun e!69026 () List!1616)

(declare-fun e!69025 () List!1616)

(assert (=> b!106072 (= e!69026 e!69025)))

(declare-fun b!106073 () Bool)

(declare-fun e!69024 () List!1616)

(declare-fun call!11207 () List!1616)

(assert (=> b!106073 (= e!69024 call!11207)))

(declare-fun b!106074 () Bool)

(declare-fun e!69027 () Bool)

(declare-fun lt!54312 () List!1616)

(assert (=> b!106074 (= e!69027 (contains!821 lt!54312 (tuple2!2381 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106075 () Bool)

(declare-fun res!52749 () Bool)

(assert (=> b!106075 (=> (not res!52749) (not e!69027))))

(assert (=> b!106075 (= res!52749 (containsKey!158 lt!54312 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106076 () Bool)

(declare-fun call!11208 () List!1616)

(assert (=> b!106076 (= e!69025 call!11208)))

(declare-fun b!106077 () Bool)

(assert (=> b!106077 (= e!69025 call!11208)))

(declare-fun b!106078 () Bool)

(assert (=> b!106078 (= e!69024 e!69026)))

(declare-fun c!18502 () Bool)

(assert (=> b!106078 (= c!18502 (and ((_ is Cons!1612) (toList!787 lt!53895)) (= (_1!1201 (h!2209 (toList!787 lt!53895))) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun bm!11204 () Bool)

(declare-fun call!11209 () List!1616)

(assert (=> bm!11204 (= call!11209 call!11207)))

(declare-fun b!106079 () Bool)

(assert (=> b!106079 (= e!69026 call!11209)))

(declare-fun b!106080 () Bool)

(declare-fun e!69023 () List!1616)

(assert (=> b!106080 (= e!69023 (insertStrictlySorted!76 (t!5690 (toList!787 lt!53895)) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun bm!11206 () Bool)

(assert (=> bm!11206 (= call!11208 call!11209)))

(declare-fun b!106081 () Bool)

(assert (=> b!106081 (= e!69023 (ite c!18502 (t!5690 (toList!787 lt!53895)) (ite c!18501 (Cons!1612 (h!2209 (toList!787 lt!53895)) (t!5690 (toList!787 lt!53895))) Nil!1613)))))

(declare-fun bm!11205 () Bool)

(declare-fun c!18499 () Bool)

(assert (=> bm!11205 (= call!11207 ($colon$colon!80 e!69023 (ite c!18499 (h!2209 (toList!787 lt!53895)) (tuple2!2381 (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18500 () Bool)

(assert (=> bm!11205 (= c!18500 c!18499)))

(declare-fun d!28993 () Bool)

(assert (=> d!28993 e!69027))

(declare-fun res!52750 () Bool)

(assert (=> d!28993 (=> (not res!52750) (not e!69027))))

(assert (=> d!28993 (= res!52750 (isStrictlySorted!304 lt!54312))))

(assert (=> d!28993 (= lt!54312 e!69024)))

(assert (=> d!28993 (= c!18499 (and ((_ is Cons!1612) (toList!787 lt!53895)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53895))) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!28993 (isStrictlySorted!304 (toList!787 lt!53895))))

(assert (=> d!28993 (= (insertStrictlySorted!76 (toList!787 lt!53895) (_1!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54312)))

(assert (= (and d!28993 c!18499) b!106073))

(assert (= (and d!28993 (not c!18499)) b!106078))

(assert (= (and b!106078 c!18502) b!106079))

(assert (= (and b!106078 (not c!18502)) b!106072))

(assert (= (and b!106072 c!18501) b!106076))

(assert (= (and b!106072 (not c!18501)) b!106077))

(assert (= (or b!106076 b!106077) bm!11206))

(assert (= (or b!106079 bm!11206) bm!11204))

(assert (= (or b!106073 bm!11204) bm!11205))

(assert (= (and bm!11205 c!18500) b!106080))

(assert (= (and bm!11205 (not c!18500)) b!106081))

(assert (= (and d!28993 res!52750) b!106075))

(assert (= (and b!106075 res!52749) b!106074))

(declare-fun m!118315 () Bool)

(assert (=> b!106074 m!118315))

(declare-fun m!118317 () Bool)

(assert (=> d!28993 m!118317))

(declare-fun m!118319 () Bool)

(assert (=> d!28993 m!118319))

(declare-fun m!118321 () Bool)

(assert (=> b!106075 m!118321))

(declare-fun m!118323 () Bool)

(assert (=> b!106080 m!118323))

(declare-fun m!118325 () Bool)

(assert (=> bm!11205 m!118325))

(assert (=> d!28755 d!28993))

(declare-fun b!106084 () Bool)

(declare-fun e!69029 () Option!160)

(assert (=> b!106084 (= e!69029 (getValueByKey!154 (t!5690 (toList!787 lt!54229)) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106083 () Bool)

(declare-fun e!69028 () Option!160)

(assert (=> b!106083 (= e!69028 e!69029)))

(declare-fun c!18504 () Bool)

(assert (=> b!106083 (= c!18504 (and ((_ is Cons!1612) (toList!787 lt!54229)) (not (= (_1!1201 (h!2209 (toList!787 lt!54229))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun d!28995 () Bool)

(declare-fun c!18503 () Bool)

(assert (=> d!28995 (= c!18503 (and ((_ is Cons!1612) (toList!787 lt!54229)) (= (_1!1201 (h!2209 (toList!787 lt!54229))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!28995 (= (getValueByKey!154 (toList!787 lt!54229) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69028)))

(declare-fun b!106085 () Bool)

(assert (=> b!106085 (= e!69029 None!158)))

(declare-fun b!106082 () Bool)

(assert (=> b!106082 (= e!69028 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54229)))))))

(assert (= (and d!28995 c!18503) b!106082))

(assert (= (and d!28995 (not c!18503)) b!106083))

(assert (= (and b!106083 c!18504) b!106084))

(assert (= (and b!106083 (not c!18504)) b!106085))

(declare-fun m!118327 () Bool)

(assert (=> b!106084 m!118327))

(assert (=> b!105930 d!28995))

(declare-fun b!106088 () Bool)

(declare-fun e!69031 () Option!160)

(assert (=> b!106088 (= e!69031 (getValueByKey!154 (t!5690 (toList!787 lt!54023)) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106087 () Bool)

(declare-fun e!69030 () Option!160)

(assert (=> b!106087 (= e!69030 e!69031)))

(declare-fun c!18506 () Bool)

(assert (=> b!106087 (= c!18506 (and ((_ is Cons!1612) (toList!787 lt!54023)) (not (= (_1!1201 (h!2209 (toList!787 lt!54023))) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun d!28997 () Bool)

(declare-fun c!18505 () Bool)

(assert (=> d!28997 (= c!18505 (and ((_ is Cons!1612) (toList!787 lt!54023)) (= (_1!1201 (h!2209 (toList!787 lt!54023))) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!28997 (= (getValueByKey!154 (toList!787 lt!54023) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69030)))

(declare-fun b!106089 () Bool)

(assert (=> b!106089 (= e!69031 None!158)))

(declare-fun b!106086 () Bool)

(assert (=> b!106086 (= e!69030 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54023)))))))

(assert (= (and d!28997 c!18505) b!106086))

(assert (= (and d!28997 (not c!18505)) b!106087))

(assert (= (and b!106087 c!18506) b!106088))

(assert (= (and b!106087 (not c!18506)) b!106089))

(declare-fun m!118329 () Bool)

(assert (=> b!106088 m!118329))

(assert (=> b!105661 d!28997))

(declare-fun d!28999 () Bool)

(assert (=> d!28999 (isDefined!108 (getValueByKey!154 (toList!787 lt!53720) (_1!1201 lt!53606)))))

(declare-fun lt!54313 () Unit!3218)

(assert (=> d!28999 (= lt!54313 (choose!671 (toList!787 lt!53720) (_1!1201 lt!53606)))))

(declare-fun e!69032 () Bool)

(assert (=> d!28999 e!69032))

(declare-fun res!52751 () Bool)

(assert (=> d!28999 (=> (not res!52751) (not e!69032))))

(assert (=> d!28999 (= res!52751 (isStrictlySorted!304 (toList!787 lt!53720)))))

(assert (=> d!28999 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53720) (_1!1201 lt!53606)) lt!54313)))

(declare-fun b!106090 () Bool)

(assert (=> b!106090 (= e!69032 (containsKey!158 (toList!787 lt!53720) (_1!1201 lt!53606)))))

(assert (= (and d!28999 res!52751) b!106090))

(assert (=> d!28999 m!117107))

(assert (=> d!28999 m!117107))

(assert (=> d!28999 m!117963))

(declare-fun m!118331 () Bool)

(assert (=> d!28999 m!118331))

(declare-fun m!118333 () Bool)

(assert (=> d!28999 m!118333))

(assert (=> b!106090 m!117959))

(assert (=> b!105909 d!28999))

(declare-fun d!29001 () Bool)

(assert (=> d!29001 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53720) (_1!1201 lt!53606))) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53720) (_1!1201 lt!53606)))))))

(declare-fun bs!4349 () Bool)

(assert (= bs!4349 d!29001))

(assert (=> bs!4349 m!117107))

(declare-fun m!118335 () Bool)

(assert (=> bs!4349 m!118335))

(assert (=> b!105909 d!29001))

(assert (=> b!105909 d!28861))

(declare-fun d!29003 () Bool)

(assert (=> d!29003 (= (apply!98 lt!54050 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1335 (getValueByKey!154 (toList!787 lt!54050) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4350 () Bool)

(assert (= bs!4350 d!29003))

(assert (=> bs!4350 m!117667))

(declare-fun m!118337 () Bool)

(assert (=> bs!4350 m!118337))

(assert (=> bs!4350 m!118337))

(declare-fun m!118339 () Bool)

(assert (=> bs!4350 m!118339))

(assert (=> b!105709 d!29003))

(declare-fun d!29005 () Bool)

(declare-fun c!18507 () Bool)

(assert (=> d!29005 (= c!18507 ((_ is ValueCellFull!995) (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!69033 () V!3217)

(assert (=> d!29005 (= (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69033)))

(declare-fun b!106091 () Bool)

(assert (=> b!106091 (= e!69033 (get!1333 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106092 () Bool)

(assert (=> b!106092 (= e!69033 (get!1334 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29005 c!18507) b!106091))

(assert (= (and d!29005 (not c!18507)) b!106092))

(assert (=> b!106091 m!117673))

(assert (=> b!106091 m!116921))

(declare-fun m!118341 () Bool)

(assert (=> b!106091 m!118341))

(assert (=> b!106092 m!117673))

(assert (=> b!106092 m!116921))

(declare-fun m!118343 () Bool)

(assert (=> b!106092 m!118343))

(assert (=> b!105709 d!29005))

(declare-fun d!29007 () Bool)

(assert (=> d!29007 (= ($colon$colon!80 e!68950 (ite c!18460 (h!2209 (toList!787 (+!135 lt!53604 lt!53599))) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606)))) (Cons!1612 (ite c!18460 (h!2209 (toList!787 (+!135 lt!53604 lt!53599))) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))) e!68950))))

(assert (=> bm!11196 d!29007))

(declare-fun d!29009 () Bool)

(declare-fun e!69034 () Bool)

(assert (=> d!29009 e!69034))

(declare-fun res!52752 () Bool)

(assert (=> d!29009 (=> res!52752 e!69034)))

(declare-fun lt!54314 () Bool)

(assert (=> d!29009 (= res!52752 (not lt!54314))))

(declare-fun lt!54317 () Bool)

(assert (=> d!29009 (= lt!54314 lt!54317)))

(declare-fun lt!54316 () Unit!3218)

(declare-fun e!69035 () Unit!3218)

(assert (=> d!29009 (= lt!54316 e!69035)))

(declare-fun c!18508 () Bool)

(assert (=> d!29009 (= c!18508 lt!54317)))

(assert (=> d!29009 (= lt!54317 (containsKey!158 (toList!787 lt!54023) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!29009 (= (contains!820 lt!54023 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54314)))

(declare-fun b!106093 () Bool)

(declare-fun lt!54315 () Unit!3218)

(assert (=> b!106093 (= e!69035 lt!54315)))

(assert (=> b!106093 (= lt!54315 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54023) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> b!106093 (isDefined!108 (getValueByKey!154 (toList!787 lt!54023) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106094 () Bool)

(declare-fun Unit!3257 () Unit!3218)

(assert (=> b!106094 (= e!69035 Unit!3257)))

(declare-fun b!106095 () Bool)

(assert (=> b!106095 (= e!69034 (isDefined!108 (getValueByKey!154 (toList!787 lt!54023) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!29009 c!18508) b!106093))

(assert (= (and d!29009 (not c!18508)) b!106094))

(assert (= (and d!29009 (not res!52752)) b!106095))

(declare-fun m!118345 () Bool)

(assert (=> d!29009 m!118345))

(declare-fun m!118347 () Bool)

(assert (=> b!106093 m!118347))

(assert (=> b!106093 m!117581))

(assert (=> b!106093 m!117581))

(declare-fun m!118349 () Bool)

(assert (=> b!106093 m!118349))

(assert (=> b!106095 m!117581))

(assert (=> b!106095 m!117581))

(assert (=> b!106095 m!118349))

(assert (=> d!28765 d!29009))

(declare-fun e!69037 () Option!160)

(declare-fun b!106098 () Bool)

(assert (=> b!106098 (= e!69037 (getValueByKey!154 (t!5690 lt!54020) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106097 () Bool)

(declare-fun e!69036 () Option!160)

(assert (=> b!106097 (= e!69036 e!69037)))

(declare-fun c!18510 () Bool)

(assert (=> b!106097 (= c!18510 (and ((_ is Cons!1612) lt!54020) (not (= (_1!1201 (h!2209 lt!54020)) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun d!29011 () Bool)

(declare-fun c!18509 () Bool)

(assert (=> d!29011 (= c!18509 (and ((_ is Cons!1612) lt!54020) (= (_1!1201 (h!2209 lt!54020)) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29011 (= (getValueByKey!154 lt!54020 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69036)))

(declare-fun b!106099 () Bool)

(assert (=> b!106099 (= e!69037 None!158)))

(declare-fun b!106096 () Bool)

(assert (=> b!106096 (= e!69036 (Some!159 (_2!1201 (h!2209 lt!54020))))))

(assert (= (and d!29011 c!18509) b!106096))

(assert (= (and d!29011 (not c!18509)) b!106097))

(assert (= (and b!106097 c!18510) b!106098))

(assert (= (and b!106097 (not c!18510)) b!106099))

(declare-fun m!118351 () Bool)

(assert (=> b!106098 m!118351))

(assert (=> d!28765 d!29011))

(declare-fun d!29013 () Bool)

(assert (=> d!29013 (= (getValueByKey!154 lt!54020 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54318 () Unit!3218)

(assert (=> d!29013 (= lt!54318 (choose!667 lt!54020 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun e!69038 () Bool)

(assert (=> d!29013 e!69038))

(declare-fun res!52753 () Bool)

(assert (=> d!29013 (=> (not res!52753) (not e!69038))))

(assert (=> d!29013 (= res!52753 (isStrictlySorted!304 lt!54020))))

(assert (=> d!29013 (= (lemmaContainsTupThenGetReturnValue!73 lt!54020 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54318)))

(declare-fun b!106100 () Bool)

(declare-fun res!52754 () Bool)

(assert (=> b!106100 (=> (not res!52754) (not e!69038))))

(assert (=> b!106100 (= res!52754 (containsKey!158 lt!54020 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106101 () Bool)

(assert (=> b!106101 (= e!69038 (contains!821 lt!54020 (tuple2!2381 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!29013 res!52753) b!106100))

(assert (= (and b!106100 res!52754) b!106101))

(assert (=> d!29013 m!117575))

(declare-fun m!118353 () Bool)

(assert (=> d!29013 m!118353))

(declare-fun m!118355 () Bool)

(assert (=> d!29013 m!118355))

(declare-fun m!118357 () Bool)

(assert (=> b!106100 m!118357))

(declare-fun m!118359 () Bool)

(assert (=> b!106101 m!118359))

(assert (=> d!28765 d!29013))

(declare-fun c!18513 () Bool)

(declare-fun b!106102 () Bool)

(assert (=> b!106102 (= c!18513 (and ((_ is Cons!1612) (toList!787 lt!53879)) (bvsgt (_1!1201 (h!2209 (toList!787 lt!53879))) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun e!69042 () List!1616)

(declare-fun e!69041 () List!1616)

(assert (=> b!106102 (= e!69042 e!69041)))

(declare-fun b!106103 () Bool)

(declare-fun e!69040 () List!1616)

(declare-fun call!11210 () List!1616)

(assert (=> b!106103 (= e!69040 call!11210)))

(declare-fun b!106104 () Bool)

(declare-fun e!69043 () Bool)

(declare-fun lt!54319 () List!1616)

(assert (=> b!106104 (= e!69043 (contains!821 lt!54319 (tuple2!2381 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106105 () Bool)

(declare-fun res!52755 () Bool)

(assert (=> b!106105 (=> (not res!52755) (not e!69043))))

(assert (=> b!106105 (= res!52755 (containsKey!158 lt!54319 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106106 () Bool)

(declare-fun call!11211 () List!1616)

(assert (=> b!106106 (= e!69041 call!11211)))

(declare-fun b!106107 () Bool)

(assert (=> b!106107 (= e!69041 call!11211)))

(declare-fun b!106108 () Bool)

(assert (=> b!106108 (= e!69040 e!69042)))

(declare-fun c!18514 () Bool)

(assert (=> b!106108 (= c!18514 (and ((_ is Cons!1612) (toList!787 lt!53879)) (= (_1!1201 (h!2209 (toList!787 lt!53879))) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun bm!11207 () Bool)

(declare-fun call!11212 () List!1616)

(assert (=> bm!11207 (= call!11212 call!11210)))

(declare-fun b!106109 () Bool)

(assert (=> b!106109 (= e!69042 call!11212)))

(declare-fun b!106110 () Bool)

(declare-fun e!69039 () List!1616)

(assert (=> b!106110 (= e!69039 (insertStrictlySorted!76 (t!5690 (toList!787 lt!53879)) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun bm!11209 () Bool)

(assert (=> bm!11209 (= call!11211 call!11212)))

(declare-fun b!106111 () Bool)

(assert (=> b!106111 (= e!69039 (ite c!18514 (t!5690 (toList!787 lt!53879)) (ite c!18513 (Cons!1612 (h!2209 (toList!787 lt!53879)) (t!5690 (toList!787 lt!53879))) Nil!1613)))))

(declare-fun c!18511 () Bool)

(declare-fun bm!11208 () Bool)

(assert (=> bm!11208 (= call!11210 ($colon$colon!80 e!69039 (ite c!18511 (h!2209 (toList!787 lt!53879)) (tuple2!2381 (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18512 () Bool)

(assert (=> bm!11208 (= c!18512 c!18511)))

(declare-fun d!29015 () Bool)

(assert (=> d!29015 e!69043))

(declare-fun res!52756 () Bool)

(assert (=> d!29015 (=> (not res!52756) (not e!69043))))

(assert (=> d!29015 (= res!52756 (isStrictlySorted!304 lt!54319))))

(assert (=> d!29015 (= lt!54319 e!69040)))

(assert (=> d!29015 (= c!18511 (and ((_ is Cons!1612) (toList!787 lt!53879)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53879))) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29015 (isStrictlySorted!304 (toList!787 lt!53879))))

(assert (=> d!29015 (= (insertStrictlySorted!76 (toList!787 lt!53879) (_1!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54319)))

(assert (= (and d!29015 c!18511) b!106103))

(assert (= (and d!29015 (not c!18511)) b!106108))

(assert (= (and b!106108 c!18514) b!106109))

(assert (= (and b!106108 (not c!18514)) b!106102))

(assert (= (and b!106102 c!18513) b!106106))

(assert (= (and b!106102 (not c!18513)) b!106107))

(assert (= (or b!106106 b!106107) bm!11209))

(assert (= (or b!106109 bm!11209) bm!11207))

(assert (= (or b!106103 bm!11207) bm!11208))

(assert (= (and bm!11208 c!18512) b!106110))

(assert (= (and bm!11208 (not c!18512)) b!106111))

(assert (= (and d!29015 res!52756) b!106105))

(assert (= (and b!106105 res!52755) b!106104))

(declare-fun m!118361 () Bool)

(assert (=> b!106104 m!118361))

(declare-fun m!118363 () Bool)

(assert (=> d!29015 m!118363))

(declare-fun m!118365 () Bool)

(assert (=> d!29015 m!118365))

(declare-fun m!118367 () Bool)

(assert (=> b!106105 m!118367))

(declare-fun m!118369 () Bool)

(assert (=> b!106110 m!118369))

(declare-fun m!118371 () Bool)

(assert (=> bm!11208 m!118371))

(assert (=> d!28765 d!29015))

(declare-fun b!106112 () Bool)

(declare-fun e!69047 () Bool)

(declare-fun call!11213 () Bool)

(assert (=> b!106112 (= e!69047 call!11213)))

(declare-fun b!106113 () Bool)

(assert (=> b!106113 (= e!69047 call!11213)))

(declare-fun b!106114 () Bool)

(declare-fun e!69045 () Bool)

(assert (=> b!106114 (= e!69045 e!69047)))

(declare-fun c!18515 () Bool)

(assert (=> b!106114 (= c!18515 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000)))))

(declare-fun d!29017 () Bool)

(declare-fun res!52759 () Bool)

(declare-fun e!69044 () Bool)

(assert (=> d!29017 (=> res!52759 e!69044)))

(assert (=> d!29017 (= res!52759 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))))))

(assert (=> d!29017 (= (arrayNoDuplicates!0 (_keys!4286 (_2!1202 lt!53812)) #b00000000000000000000000000000000 Nil!1612) e!69044)))

(declare-fun b!106115 () Bool)

(assert (=> b!106115 (= e!69044 e!69045)))

(declare-fun res!52758 () Bool)

(assert (=> b!106115 (=> (not res!52758) (not e!69045))))

(declare-fun e!69046 () Bool)

(assert (=> b!106115 (= res!52758 (not e!69046))))

(declare-fun res!52757 () Bool)

(assert (=> b!106115 (=> (not res!52757) (not e!69046))))

(assert (=> b!106115 (= res!52757 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000)))))

(declare-fun b!106116 () Bool)

(assert (=> b!106116 (= e!69046 (contains!822 Nil!1612 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000)))))

(declare-fun bm!11210 () Bool)

(assert (=> bm!11210 (= call!11213 (arrayNoDuplicates!0 (_keys!4286 (_2!1202 lt!53812)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18515 (Cons!1611 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000) Nil!1612) Nil!1612)))))

(assert (= (and d!29017 (not res!52759)) b!106115))

(assert (= (and b!106115 res!52757) b!106116))

(assert (= (and b!106115 res!52758) b!106114))

(assert (= (and b!106114 c!18515) b!106112))

(assert (= (and b!106114 (not c!18515)) b!106113))

(assert (= (or b!106112 b!106113) bm!11210))

(declare-fun m!118373 () Bool)

(assert (=> b!106114 m!118373))

(assert (=> b!106114 m!118373))

(declare-fun m!118375 () Bool)

(assert (=> b!106114 m!118375))

(assert (=> b!106115 m!118373))

(assert (=> b!106115 m!118373))

(assert (=> b!106115 m!118375))

(assert (=> b!106116 m!118373))

(assert (=> b!106116 m!118373))

(declare-fun m!118377 () Bool)

(assert (=> b!106116 m!118377))

(assert (=> bm!11210 m!118373))

(declare-fun m!118379 () Bool)

(assert (=> bm!11210 m!118379))

(assert (=> b!105686 d!29017))

(declare-fun b!106117 () Bool)

(declare-fun e!69051 () Bool)

(declare-fun call!11214 () Bool)

(assert (=> b!106117 (= e!69051 call!11214)))

(declare-fun b!106118 () Bool)

(assert (=> b!106118 (= e!69051 call!11214)))

(declare-fun b!106119 () Bool)

(declare-fun e!69049 () Bool)

(assert (=> b!106119 (= e!69049 e!69051)))

(declare-fun c!18516 () Bool)

(assert (=> b!106119 (= c!18516 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!29019 () Bool)

(declare-fun res!52762 () Bool)

(declare-fun e!69048 () Bool)

(assert (=> d!29019 (=> res!52762 e!69048)))

(assert (=> d!29019 (= res!52762 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!29019 (= (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000 Nil!1612) e!69048)))

(declare-fun b!106120 () Bool)

(assert (=> b!106120 (= e!69048 e!69049)))

(declare-fun res!52761 () Bool)

(assert (=> b!106120 (=> (not res!52761) (not e!69049))))

(declare-fun e!69050 () Bool)

(assert (=> b!106120 (= res!52761 (not e!69050))))

(declare-fun res!52760 () Bool)

(assert (=> b!106120 (=> (not res!52760) (not e!69050))))

(assert (=> b!106120 (= res!52760 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!106121 () Bool)

(assert (=> b!106121 (= e!69050 (contains!822 Nil!1612 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11211 () Bool)

(assert (=> bm!11211 (= call!11214 (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18516 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000) Nil!1612) Nil!1612)))))

(assert (= (and d!29019 (not res!52762)) b!106120))

(assert (= (and b!106120 res!52760) b!106121))

(assert (= (and b!106120 res!52761) b!106119))

(assert (= (and b!106119 c!18516) b!106117))

(assert (= (and b!106119 (not c!18516)) b!106118))

(assert (= (or b!106117 b!106118) bm!11211))

(declare-fun m!118381 () Bool)

(assert (=> b!106119 m!118381))

(assert (=> b!106119 m!118381))

(declare-fun m!118383 () Bool)

(assert (=> b!106119 m!118383))

(assert (=> b!106120 m!118381))

(assert (=> b!106120 m!118381))

(assert (=> b!106120 m!118383))

(assert (=> b!106121 m!118381))

(assert (=> b!106121 m!118381))

(declare-fun m!118385 () Bool)

(assert (=> b!106121 m!118385))

(assert (=> bm!11211 m!118381))

(declare-fun m!118387 () Bool)

(assert (=> bm!11211 m!118387))

(assert (=> b!105877 d!29019))

(assert (=> d!28777 d!28769))

(assert (=> d!28777 d!28753))

(declare-fun d!29021 () Bool)

(declare-fun e!69052 () Bool)

(assert (=> d!29021 e!69052))

(declare-fun res!52763 () Bool)

(assert (=> d!29021 (=> res!52763 e!69052)))

(declare-fun lt!54320 () Bool)

(assert (=> d!29021 (= res!52763 (not lt!54320))))

(declare-fun lt!54323 () Bool)

(assert (=> d!29021 (= lt!54320 lt!54323)))

(declare-fun lt!54322 () Unit!3218)

(declare-fun e!69053 () Unit!3218)

(assert (=> d!29021 (= lt!54322 e!69053)))

(declare-fun c!18517 () Bool)

(assert (=> d!29021 (= c!18517 lt!54323)))

(assert (=> d!29021 (= lt!54323 (containsKey!158 (toList!787 lt!53884) lt!53888))))

(assert (=> d!29021 (= (contains!820 lt!53884 lt!53888) lt!54320)))

(declare-fun b!106122 () Bool)

(declare-fun lt!54321 () Unit!3218)

(assert (=> b!106122 (= e!69053 lt!54321)))

(assert (=> b!106122 (= lt!54321 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53884) lt!53888))))

(assert (=> b!106122 (isDefined!108 (getValueByKey!154 (toList!787 lt!53884) lt!53888))))

(declare-fun b!106123 () Bool)

(declare-fun Unit!3258 () Unit!3218)

(assert (=> b!106123 (= e!69053 Unit!3258)))

(declare-fun b!106124 () Bool)

(assert (=> b!106124 (= e!69052 (isDefined!108 (getValueByKey!154 (toList!787 lt!53884) lt!53888)))))

(assert (= (and d!29021 c!18517) b!106122))

(assert (= (and d!29021 (not c!18517)) b!106123))

(assert (= (and d!29021 (not res!52763)) b!106124))

(declare-fun m!118389 () Bool)

(assert (=> d!29021 m!118389))

(declare-fun m!118391 () Bool)

(assert (=> b!106122 m!118391))

(assert (=> b!106122 m!117589))

(assert (=> b!106122 m!117589))

(declare-fun m!118393 () Bool)

(assert (=> b!106122 m!118393))

(assert (=> b!106124 m!117589))

(assert (=> b!106124 m!117589))

(assert (=> b!106124 m!118393))

(assert (=> d!28777 d!29021))

(declare-fun d!29023 () Bool)

(assert (=> d!29023 (= (apply!98 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53888) (apply!98 lt!53884 lt!53888))))

(assert (=> d!29023 true))

(declare-fun _$34!887 () Unit!3218)

(assert (=> d!29023 (= (choose!664 lt!53884 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53888) _$34!887)))

(declare-fun bs!4351 () Bool)

(assert (= bs!4351 d!29023))

(assert (=> bs!4351 m!117229))

(assert (=> bs!4351 m!117229))

(assert (=> bs!4351 m!117231))

(assert (=> bs!4351 m!117253))

(assert (=> d!28777 d!29023))

(assert (=> d!28777 d!28779))

(declare-fun b!106138 () Bool)

(declare-fun e!69062 () SeekEntryResult!262)

(declare-fun e!69061 () SeekEntryResult!262)

(assert (=> b!106138 (= e!69062 e!69061)))

(declare-fun lt!54328 () (_ BitVec 64))

(declare-fun c!18524 () Bool)

(assert (=> b!106138 (= c!18524 (= lt!54328 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!106139 () Bool)

(assert (=> b!106139 (= e!69061 (Found!262 (index!3198 lt!53905)))))

(declare-fun e!69060 () SeekEntryResult!262)

(declare-fun b!106140 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!106140 (= e!69060 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13647 lt!53905) #b00000000000000000000000000000001) (nextIndex!0 (index!3198 lt!53905) (x!13647 lt!53905) (mask!6726 newMap!16)) (index!3198 lt!53905) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun b!106141 () Bool)

(assert (=> b!106141 (= e!69060 (MissingVacant!262 (index!3198 lt!53905)))))

(declare-fun b!106142 () Bool)

(assert (=> b!106142 (= e!69062 Undefined!262)))

(declare-fun b!106143 () Bool)

(declare-fun c!18526 () Bool)

(assert (=> b!106143 (= c!18526 (= lt!54328 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106143 (= e!69061 e!69060)))

(declare-fun d!29025 () Bool)

(declare-fun lt!54329 () SeekEntryResult!262)

(assert (=> d!29025 (and (or ((_ is Undefined!262) lt!54329) (not ((_ is Found!262) lt!54329)) (and (bvsge (index!3197 lt!54329) #b00000000000000000000000000000000) (bvslt (index!3197 lt!54329) (size!2306 (_keys!4286 newMap!16))))) (or ((_ is Undefined!262) lt!54329) ((_ is Found!262) lt!54329) (not ((_ is MissingVacant!262) lt!54329)) (not (= (index!3199 lt!54329) (index!3198 lt!53905))) (and (bvsge (index!3199 lt!54329) #b00000000000000000000000000000000) (bvslt (index!3199 lt!54329) (size!2306 (_keys!4286 newMap!16))))) (or ((_ is Undefined!262) lt!54329) (ite ((_ is Found!262) lt!54329) (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!54329)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (and ((_ is MissingVacant!262) lt!54329) (= (index!3199 lt!54329) (index!3198 lt!53905)) (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3199 lt!54329)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!29025 (= lt!54329 e!69062)))

(declare-fun c!18525 () Bool)

(assert (=> d!29025 (= c!18525 (bvsge (x!13647 lt!53905) #b01111111111111111111111111111110))))

(assert (=> d!29025 (= lt!54328 (select (arr!2050 (_keys!4286 newMap!16)) (index!3198 lt!53905)))))

(assert (=> d!29025 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29025 (= (seekKeyOrZeroReturnVacant!0 (x!13647 lt!53905) (index!3198 lt!53905) (index!3198 lt!53905) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)) lt!54329)))

(assert (= (and d!29025 c!18525) b!106142))

(assert (= (and d!29025 (not c!18525)) b!106138))

(assert (= (and b!106138 c!18524) b!106139))

(assert (= (and b!106138 (not c!18524)) b!106143))

(assert (= (and b!106143 c!18526) b!106141))

(assert (= (and b!106143 (not c!18526)) b!106140))

(declare-fun m!118395 () Bool)

(assert (=> b!106140 m!118395))

(assert (=> b!106140 m!118395))

(assert (=> b!106140 m!116875))

(declare-fun m!118397 () Bool)

(assert (=> b!106140 m!118397))

(declare-fun m!118399 () Bool)

(assert (=> d!29025 m!118399))

(declare-fun m!118401 () Bool)

(assert (=> d!29025 m!118401))

(assert (=> d!29025 m!117285))

(assert (=> d!29025 m!117277))

(assert (=> b!105516 d!29025))

(declare-fun d!29027 () Bool)

(declare-fun res!52768 () Bool)

(declare-fun e!69067 () Bool)

(assert (=> d!29027 (=> res!52768 e!69067)))

(assert (=> d!29027 (= res!52768 (or ((_ is Nil!1613) lt!54247) ((_ is Nil!1613) (t!5690 lt!54247))))))

(assert (=> d!29027 (= (isStrictlySorted!304 lt!54247) e!69067)))

(declare-fun b!106148 () Bool)

(declare-fun e!69068 () Bool)

(assert (=> b!106148 (= e!69067 e!69068)))

(declare-fun res!52769 () Bool)

(assert (=> b!106148 (=> (not res!52769) (not e!69068))))

(assert (=> b!106148 (= res!52769 (bvslt (_1!1201 (h!2209 lt!54247)) (_1!1201 (h!2209 (t!5690 lt!54247)))))))

(declare-fun b!106149 () Bool)

(assert (=> b!106149 (= e!69068 (isStrictlySorted!304 (t!5690 lt!54247)))))

(assert (= (and d!29027 (not res!52768)) b!106148))

(assert (= (and b!106148 res!52769) b!106149))

(declare-fun m!118403 () Bool)

(assert (=> b!106149 m!118403))

(assert (=> d!28905 d!29027))

(declare-fun d!29029 () Bool)

(declare-fun res!52770 () Bool)

(declare-fun e!69069 () Bool)

(assert (=> d!29029 (=> res!52770 e!69069)))

(assert (=> d!29029 (= res!52770 (or ((_ is Nil!1613) (toList!787 (+!135 lt!53604 lt!53599))) ((_ is Nil!1613) (t!5690 (toList!787 (+!135 lt!53604 lt!53599))))))))

(assert (=> d!29029 (= (isStrictlySorted!304 (toList!787 (+!135 lt!53604 lt!53599))) e!69069)))

(declare-fun b!106150 () Bool)

(declare-fun e!69070 () Bool)

(assert (=> b!106150 (= e!69069 e!69070)))

(declare-fun res!52771 () Bool)

(assert (=> b!106150 (=> (not res!52771) (not e!69070))))

(assert (=> b!106150 (= res!52771 (bvslt (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 lt!53599)))) (_1!1201 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53599)))))))))

(declare-fun b!106151 () Bool)

(assert (=> b!106151 (= e!69070 (isStrictlySorted!304 (t!5690 (toList!787 (+!135 lt!53604 lt!53599)))))))

(assert (= (and d!29029 (not res!52770)) b!106150))

(assert (= (and b!106150 res!52771) b!106151))

(declare-fun m!118405 () Bool)

(assert (=> b!106151 m!118405))

(assert (=> d!28905 d!29029))

(declare-fun lt!54330 () Bool)

(declare-fun d!29031 () Bool)

(assert (=> d!29031 (= lt!54330 (select (content!109 (toList!787 lt!54007)) (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun e!69071 () Bool)

(assert (=> d!29031 (= lt!54330 e!69071)))

(declare-fun res!52772 () Bool)

(assert (=> d!29031 (=> (not res!52772) (not e!69071))))

(assert (=> d!29031 (= res!52772 ((_ is Cons!1612) (toList!787 lt!54007)))))

(assert (=> d!29031 (= (contains!821 (toList!787 lt!54007) (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54330)))

(declare-fun b!106152 () Bool)

(declare-fun e!69072 () Bool)

(assert (=> b!106152 (= e!69071 e!69072)))

(declare-fun res!52773 () Bool)

(assert (=> b!106152 (=> res!52773 e!69072)))

(assert (=> b!106152 (= res!52773 (= (h!2209 (toList!787 lt!54007)) (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!106153 () Bool)

(assert (=> b!106153 (= e!69072 (contains!821 (t!5690 (toList!787 lt!54007)) (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!29031 res!52772) b!106152))

(assert (= (and b!106152 (not res!52773)) b!106153))

(declare-fun m!118407 () Bool)

(assert (=> d!29031 m!118407))

(declare-fun m!118409 () Bool)

(assert (=> d!29031 m!118409))

(declare-fun m!118411 () Bool)

(assert (=> b!106153 m!118411))

(assert (=> b!105650 d!29031))

(declare-fun e!69074 () Option!160)

(declare-fun b!106156 () Bool)

(assert (=> b!106156 (= e!69074 (getValueByKey!154 (t!5690 (toList!787 lt!54251)) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!106155 () Bool)

(declare-fun e!69073 () Option!160)

(assert (=> b!106155 (= e!69073 e!69074)))

(declare-fun c!18528 () Bool)

(assert (=> b!106155 (= c!18528 (and ((_ is Cons!1612) (toList!787 lt!54251)) (not (= (_1!1201 (h!2209 (toList!787 lt!54251))) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))))

(declare-fun d!29033 () Bool)

(declare-fun c!18527 () Bool)

(assert (=> d!29033 (= c!18527 (and ((_ is Cons!1612) (toList!787 lt!54251)) (= (_1!1201 (h!2209 (toList!787 lt!54251))) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(assert (=> d!29033 (= (getValueByKey!154 (toList!787 lt!54251) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) e!69073)))

(declare-fun b!106157 () Bool)

(assert (=> b!106157 (= e!69074 None!158)))

(declare-fun b!106154 () Bool)

(assert (=> b!106154 (= e!69073 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54251)))))))

(assert (= (and d!29033 c!18527) b!106154))

(assert (= (and d!29033 (not c!18527)) b!106155))

(assert (= (and b!106155 c!18528) b!106156))

(assert (= (and b!106155 (not c!18528)) b!106157))

(declare-fun m!118413 () Bool)

(assert (=> b!106156 m!118413))

(assert (=> b!105958 d!29033))

(declare-fun e!69076 () Option!160)

(declare-fun b!106160 () Bool)

(assert (=> b!106160 (= e!69076 (getValueByKey!154 (t!5690 (toList!787 lt!54018)) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106159 () Bool)

(declare-fun e!69075 () Option!160)

(assert (=> b!106159 (= e!69075 e!69076)))

(declare-fun c!18530 () Bool)

(assert (=> b!106159 (= c!18530 (and ((_ is Cons!1612) (toList!787 lt!54018)) (not (= (_1!1201 (h!2209 (toList!787 lt!54018))) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18529 () Bool)

(declare-fun d!29035 () Bool)

(assert (=> d!29035 (= c!18529 (and ((_ is Cons!1612) (toList!787 lt!54018)) (= (_1!1201 (h!2209 (toList!787 lt!54018))) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29035 (= (getValueByKey!154 (toList!787 lt!54018) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69075)))

(declare-fun b!106161 () Bool)

(assert (=> b!106161 (= e!69076 None!158)))

(declare-fun b!106158 () Bool)

(assert (=> b!106158 (= e!69075 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54018)))))))

(assert (= (and d!29035 c!18529) b!106158))

(assert (= (and d!29035 (not c!18529)) b!106159))

(assert (= (and b!106159 c!18530) b!106160))

(assert (= (and b!106159 (not c!18530)) b!106161))

(declare-fun m!118415 () Bool)

(assert (=> b!106160 m!118415))

(assert (=> b!105658 d!29035))

(assert (=> b!105536 d!28979))

(declare-fun d!29037 () Bool)

(declare-fun e!69077 () Bool)

(assert (=> d!29037 e!69077))

(declare-fun res!52774 () Bool)

(assert (=> d!29037 (=> res!52774 e!69077)))

(declare-fun lt!54331 () Bool)

(assert (=> d!29037 (= res!52774 (not lt!54331))))

(declare-fun lt!54334 () Bool)

(assert (=> d!29037 (= lt!54331 lt!54334)))

(declare-fun lt!54333 () Unit!3218)

(declare-fun e!69078 () Unit!3218)

(assert (=> d!29037 (= lt!54333 e!69078)))

(declare-fun c!18531 () Bool)

(assert (=> d!29037 (= c!18531 lt!54334)))

(assert (=> d!29037 (= lt!54334 (containsKey!158 (toList!787 lt!54237) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!29037 (= (contains!820 lt!54237 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54331)))

(declare-fun b!106162 () Bool)

(declare-fun lt!54332 () Unit!3218)

(assert (=> b!106162 (= e!69078 lt!54332)))

(assert (=> b!106162 (= lt!54332 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54237) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> b!106162 (isDefined!108 (getValueByKey!154 (toList!787 lt!54237) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106163 () Bool)

(declare-fun Unit!3259 () Unit!3218)

(assert (=> b!106163 (= e!69078 Unit!3259)))

(declare-fun b!106164 () Bool)

(assert (=> b!106164 (= e!69077 (isDefined!108 (getValueByKey!154 (toList!787 lt!54237) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (= (and d!29037 c!18531) b!106162))

(assert (= (and d!29037 (not c!18531)) b!106163))

(assert (= (and d!29037 (not res!52774)) b!106164))

(declare-fun m!118417 () Bool)

(assert (=> d!29037 m!118417))

(declare-fun m!118419 () Bool)

(assert (=> b!106162 m!118419))

(assert (=> b!106162 m!118029))

(assert (=> b!106162 m!118029))

(declare-fun m!118421 () Bool)

(assert (=> b!106162 m!118421))

(assert (=> b!106164 m!118029))

(assert (=> b!106164 m!118029))

(assert (=> b!106164 m!118421))

(assert (=> d!28893 d!29037))

(declare-fun e!69080 () Option!160)

(declare-fun b!106167 () Bool)

(assert (=> b!106167 (= e!69080 (getValueByKey!154 (t!5690 lt!54234) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106166 () Bool)

(declare-fun e!69079 () Option!160)

(assert (=> b!106166 (= e!69079 e!69080)))

(declare-fun c!18533 () Bool)

(assert (=> b!106166 (= c!18533 (and ((_ is Cons!1612) lt!54234) (not (= (_1!1201 (h!2209 lt!54234)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun c!18532 () Bool)

(declare-fun d!29039 () Bool)

(assert (=> d!29039 (= c!18532 (and ((_ is Cons!1612) lt!54234) (= (_1!1201 (h!2209 lt!54234)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!29039 (= (getValueByKey!154 lt!54234 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) e!69079)))

(declare-fun b!106168 () Bool)

(assert (=> b!106168 (= e!69080 None!158)))

(declare-fun b!106165 () Bool)

(assert (=> b!106165 (= e!69079 (Some!159 (_2!1201 (h!2209 lt!54234))))))

(assert (= (and d!29039 c!18532) b!106165))

(assert (= (and d!29039 (not c!18532)) b!106166))

(assert (= (and b!106166 c!18533) b!106167))

(assert (= (and b!106166 (not c!18533)) b!106168))

(declare-fun m!118423 () Bool)

(assert (=> b!106167 m!118423))

(assert (=> d!28893 d!29039))

(declare-fun d!29041 () Bool)

(assert (=> d!29041 (= (getValueByKey!154 lt!54234 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun lt!54335 () Unit!3218)

(assert (=> d!29041 (= lt!54335 (choose!667 lt!54234 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun e!69081 () Bool)

(assert (=> d!29041 e!69081))

(declare-fun res!52775 () Bool)

(assert (=> d!29041 (=> (not res!52775) (not e!69081))))

(assert (=> d!29041 (= res!52775 (isStrictlySorted!304 lt!54234))))

(assert (=> d!29041 (= (lemmaContainsTupThenGetReturnValue!73 lt!54234 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54335)))

(declare-fun b!106169 () Bool)

(declare-fun res!52776 () Bool)

(assert (=> b!106169 (=> (not res!52776) (not e!69081))))

(assert (=> b!106169 (= res!52776 (containsKey!158 lt!54234 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106170 () Bool)

(assert (=> b!106170 (= e!69081 (contains!821 lt!54234 (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (= (and d!29041 res!52775) b!106169))

(assert (= (and b!106169 res!52776) b!106170))

(assert (=> d!29041 m!118023))

(declare-fun m!118425 () Bool)

(assert (=> d!29041 m!118425))

(declare-fun m!118427 () Bool)

(assert (=> d!29041 m!118427))

(declare-fun m!118429 () Bool)

(assert (=> b!106169 m!118429))

(declare-fun m!118431 () Bool)

(assert (=> b!106170 m!118431))

(assert (=> d!28893 d!29041))

(declare-fun b!106171 () Bool)

(declare-fun c!18536 () Bool)

(assert (=> b!106171 (= c!18536 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (bvsgt (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun e!69085 () List!1616)

(declare-fun e!69084 () List!1616)

(assert (=> b!106171 (= e!69085 e!69084)))

(declare-fun b!106172 () Bool)

(declare-fun e!69083 () List!1616)

(declare-fun call!11215 () List!1616)

(assert (=> b!106172 (= e!69083 call!11215)))

(declare-fun e!69086 () Bool)

(declare-fun b!106173 () Bool)

(declare-fun lt!54336 () List!1616)

(assert (=> b!106173 (= e!69086 (contains!821 lt!54336 (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!106174 () Bool)

(declare-fun res!52777 () Bool)

(assert (=> b!106174 (=> (not res!52777) (not e!69086))))

(assert (=> b!106174 (= res!52777 (containsKey!158 lt!54336 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106175 () Bool)

(declare-fun call!11216 () List!1616)

(assert (=> b!106175 (= e!69084 call!11216)))

(declare-fun b!106176 () Bool)

(assert (=> b!106176 (= e!69084 call!11216)))

(declare-fun b!106177 () Bool)

(assert (=> b!106177 (= e!69083 e!69085)))

(declare-fun c!18537 () Bool)

(assert (=> b!106177 (= c!18537 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun bm!11212 () Bool)

(declare-fun call!11217 () List!1616)

(assert (=> bm!11212 (= call!11217 call!11215)))

(declare-fun b!106178 () Bool)

(assert (=> b!106178 (= e!69085 call!11217)))

(declare-fun b!106179 () Bool)

(declare-fun e!69082 () List!1616)

(assert (=> b!106179 (= e!69082 (insertStrictlySorted!76 (t!5690 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun bm!11214 () Bool)

(assert (=> bm!11214 (= call!11216 call!11217)))

(declare-fun b!106180 () Bool)

(assert (=> b!106180 (= e!69082 (ite c!18537 (t!5690 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (ite c!18536 (Cons!1612 (h!2209 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (t!5690 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) Nil!1613)))))

(declare-fun bm!11213 () Bool)

(declare-fun c!18534 () Bool)

(assert (=> bm!11213 (= call!11215 ($colon$colon!80 e!69082 (ite c!18534 (h!2209 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun c!18535 () Bool)

(assert (=> bm!11213 (= c!18535 c!18534)))

(declare-fun d!29043 () Bool)

(assert (=> d!29043 e!69086))

(declare-fun res!52778 () Bool)

(assert (=> d!29043 (=> (not res!52778) (not e!69086))))

(assert (=> d!29043 (= res!52778 (isStrictlySorted!304 lt!54336))))

(assert (=> d!29043 (= lt!54336 e!69083)))

(assert (=> d!29043 (= c!18534 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (bvslt (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!29043 (isStrictlySorted!304 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!29043 (= (insertStrictlySorted!76 (toList!787 (+!135 lt!53604 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54336)))

(assert (= (and d!29043 c!18534) b!106172))

(assert (= (and d!29043 (not c!18534)) b!106177))

(assert (= (and b!106177 c!18537) b!106178))

(assert (= (and b!106177 (not c!18537)) b!106171))

(assert (= (and b!106171 c!18536) b!106175))

(assert (= (and b!106171 (not c!18536)) b!106176))

(assert (= (or b!106175 b!106176) bm!11214))

(assert (= (or b!106178 bm!11214) bm!11212))

(assert (= (or b!106172 bm!11212) bm!11213))

(assert (= (and bm!11213 c!18535) b!106179))

(assert (= (and bm!11213 (not c!18535)) b!106180))

(assert (= (and d!29043 res!52778) b!106174))

(assert (= (and b!106174 res!52777) b!106173))

(declare-fun m!118433 () Bool)

(assert (=> b!106173 m!118433))

(declare-fun m!118435 () Bool)

(assert (=> d!29043 m!118435))

(declare-fun m!118437 () Bool)

(assert (=> d!29043 m!118437))

(declare-fun m!118439 () Bool)

(assert (=> b!106174 m!118439))

(declare-fun m!118441 () Bool)

(assert (=> b!106179 m!118441))

(declare-fun m!118443 () Bool)

(assert (=> bm!11213 m!118443))

(assert (=> d!28893 d!29043))

(declare-fun d!29045 () Bool)

(declare-fun res!52779 () Bool)

(declare-fun e!69087 () Bool)

(assert (=> d!29045 (=> res!52779 e!69087)))

(assert (=> d!29045 (= res!52779 (and ((_ is Cons!1612) lt!54071) (= (_1!1201 (h!2209 lt!54071)) (_1!1201 lt!53599))))))

(assert (=> d!29045 (= (containsKey!158 lt!54071 (_1!1201 lt!53599)) e!69087)))

(declare-fun b!106181 () Bool)

(declare-fun e!69088 () Bool)

(assert (=> b!106181 (= e!69087 e!69088)))

(declare-fun res!52780 () Bool)

(assert (=> b!106181 (=> (not res!52780) (not e!69088))))

(assert (=> b!106181 (= res!52780 (and (or (not ((_ is Cons!1612) lt!54071)) (bvsle (_1!1201 (h!2209 lt!54071)) (_1!1201 lt!53599))) ((_ is Cons!1612) lt!54071) (bvslt (_1!1201 (h!2209 lt!54071)) (_1!1201 lt!53599))))))

(declare-fun b!106182 () Bool)

(assert (=> b!106182 (= e!69088 (containsKey!158 (t!5690 lt!54071) (_1!1201 lt!53599)))))

(assert (= (and d!29045 (not res!52779)) b!106181))

(assert (= (and b!106181 res!52780) b!106182))

(declare-fun m!118445 () Bool)

(assert (=> b!106182 m!118445))

(assert (=> b!105767 d!29045))

(declare-fun d!29047 () Bool)

(declare-fun e!69089 () Bool)

(assert (=> d!29047 e!69089))

(declare-fun res!52781 () Bool)

(assert (=> d!29047 (=> res!52781 e!69089)))

(declare-fun lt!54337 () Bool)

(assert (=> d!29047 (= res!52781 (not lt!54337))))

(declare-fun lt!54340 () Bool)

(assert (=> d!29047 (= lt!54337 lt!54340)))

(declare-fun lt!54339 () Unit!3218)

(declare-fun e!69090 () Unit!3218)

(assert (=> d!29047 (= lt!54339 e!69090)))

(declare-fun c!18538 () Bool)

(assert (=> d!29047 (= c!18538 lt!54340)))

(assert (=> d!29047 (= lt!54340 (containsKey!158 (toList!787 lt!54050) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!29047 (= (contains!820 lt!54050 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!54337)))

(declare-fun b!106183 () Bool)

(declare-fun lt!54338 () Unit!3218)

(assert (=> b!106183 (= e!69090 lt!54338)))

(assert (=> b!106183 (= lt!54338 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54050) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!106183 (isDefined!108 (getValueByKey!154 (toList!787 lt!54050) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!106184 () Bool)

(declare-fun Unit!3260 () Unit!3218)

(assert (=> b!106184 (= e!69090 Unit!3260)))

(declare-fun b!106185 () Bool)

(assert (=> b!106185 (= e!69089 (isDefined!108 (getValueByKey!154 (toList!787 lt!54050) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!29047 c!18538) b!106183))

(assert (= (and d!29047 (not c!18538)) b!106184))

(assert (= (and d!29047 (not res!52781)) b!106185))

(assert (=> d!29047 m!117667))

(declare-fun m!118447 () Bool)

(assert (=> d!29047 m!118447))

(assert (=> b!106183 m!117667))

(declare-fun m!118449 () Bool)

(assert (=> b!106183 m!118449))

(assert (=> b!106183 m!117667))

(assert (=> b!106183 m!118337))

(assert (=> b!106183 m!118337))

(declare-fun m!118451 () Bool)

(assert (=> b!106183 m!118451))

(assert (=> b!106185 m!117667))

(assert (=> b!106185 m!118337))

(assert (=> b!106185 m!118337))

(assert (=> b!106185 m!118451))

(assert (=> b!105700 d!29047))

(assert (=> d!28763 d!28767))

(assert (=> d!28763 d!28761))

(declare-fun d!29049 () Bool)

(assert (=> d!29049 (= (apply!98 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53876) (apply!98 lt!53892 lt!53876))))

(assert (=> d!29049 true))

(declare-fun _$34!888 () Unit!3218)

(assert (=> d!29049 (= (choose!664 lt!53892 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53876) _$34!888)))

(declare-fun bs!4352 () Bool)

(assert (= bs!4352 d!29049))

(assert (=> bs!4352 m!117249))

(assert (=> bs!4352 m!117249))

(assert (=> bs!4352 m!117251))

(assert (=> bs!4352 m!117255))

(assert (=> d!28763 d!29049))

(assert (=> d!28763 d!28775))

(declare-fun d!29051 () Bool)

(declare-fun e!69091 () Bool)

(assert (=> d!29051 e!69091))

(declare-fun res!52782 () Bool)

(assert (=> d!29051 (=> res!52782 e!69091)))

(declare-fun lt!54341 () Bool)

(assert (=> d!29051 (= res!52782 (not lt!54341))))

(declare-fun lt!54344 () Bool)

(assert (=> d!29051 (= lt!54341 lt!54344)))

(declare-fun lt!54343 () Unit!3218)

(declare-fun e!69092 () Unit!3218)

(assert (=> d!29051 (= lt!54343 e!69092)))

(declare-fun c!18539 () Bool)

(assert (=> d!29051 (= c!18539 lt!54344)))

(assert (=> d!29051 (= lt!54344 (containsKey!158 (toList!787 lt!53892) lt!53876))))

(assert (=> d!29051 (= (contains!820 lt!53892 lt!53876) lt!54341)))

(declare-fun b!106186 () Bool)

(declare-fun lt!54342 () Unit!3218)

(assert (=> b!106186 (= e!69092 lt!54342)))

(assert (=> b!106186 (= lt!54342 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53892) lt!53876))))

(assert (=> b!106186 (isDefined!108 (getValueByKey!154 (toList!787 lt!53892) lt!53876))))

(declare-fun b!106187 () Bool)

(declare-fun Unit!3261 () Unit!3218)

(assert (=> b!106187 (= e!69092 Unit!3261)))

(declare-fun b!106188 () Bool)

(assert (=> b!106188 (= e!69091 (isDefined!108 (getValueByKey!154 (toList!787 lt!53892) lt!53876)))))

(assert (= (and d!29051 c!18539) b!106186))

(assert (= (and d!29051 (not c!18539)) b!106187))

(assert (= (and d!29051 (not res!52782)) b!106188))

(declare-fun m!118453 () Bool)

(assert (=> d!29051 m!118453))

(declare-fun m!118455 () Bool)

(assert (=> b!106186 m!118455))

(assert (=> b!106186 m!117601))

(assert (=> b!106186 m!117601))

(declare-fun m!118457 () Bool)

(assert (=> b!106186 m!118457))

(assert (=> b!106188 m!117601))

(assert (=> b!106188 m!117601))

(assert (=> b!106188 m!118457))

(assert (=> d!28763 d!29051))

(declare-fun d!29053 () Bool)

(declare-fun e!69093 () Bool)

(assert (=> d!29053 e!69093))

(declare-fun res!52783 () Bool)

(assert (=> d!29053 (=> res!52783 e!69093)))

(declare-fun lt!54345 () Bool)

(assert (=> d!29053 (= res!52783 (not lt!54345))))

(declare-fun lt!54348 () Bool)

(assert (=> d!29053 (= lt!54345 lt!54348)))

(declare-fun lt!54347 () Unit!3218)

(declare-fun e!69094 () Unit!3218)

(assert (=> d!29053 (= lt!54347 e!69094)))

(declare-fun c!18540 () Bool)

(assert (=> d!29053 (= c!18540 lt!54348)))

(assert (=> d!29053 (= lt!54348 (containsKey!158 (toList!787 lt!54186) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!29053 (= (contains!820 lt!54186 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54345)))

(declare-fun b!106189 () Bool)

(declare-fun lt!54346 () Unit!3218)

(assert (=> b!106189 (= e!69094 lt!54346)))

(assert (=> b!106189 (= lt!54346 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54186) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> b!106189 (isDefined!108 (getValueByKey!154 (toList!787 lt!54186) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106190 () Bool)

(declare-fun Unit!3262 () Unit!3218)

(assert (=> b!106190 (= e!69094 Unit!3262)))

(declare-fun b!106191 () Bool)

(assert (=> b!106191 (= e!69093 (isDefined!108 (getValueByKey!154 (toList!787 lt!54186) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (= (and d!29053 c!18540) b!106189))

(assert (= (and d!29053 (not c!18540)) b!106190))

(assert (= (and d!29053 (not res!52783)) b!106191))

(declare-fun m!118459 () Bool)

(assert (=> d!29053 m!118459))

(declare-fun m!118461 () Bool)

(assert (=> b!106189 m!118461))

(assert (=> b!106189 m!117843))

(assert (=> b!106189 m!117843))

(declare-fun m!118463 () Bool)

(assert (=> b!106189 m!118463))

(assert (=> b!106191 m!117843))

(assert (=> b!106191 m!117843))

(assert (=> b!106191 m!118463))

(assert (=> d!28827 d!29053))

(declare-fun e!69096 () Option!160)

(declare-fun b!106194 () Bool)

(assert (=> b!106194 (= e!69096 (getValueByKey!154 (t!5690 lt!54183) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106193 () Bool)

(declare-fun e!69095 () Option!160)

(assert (=> b!106193 (= e!69095 e!69096)))

(declare-fun c!18542 () Bool)

(assert (=> b!106193 (= c!18542 (and ((_ is Cons!1612) lt!54183) (not (= (_1!1201 (h!2209 lt!54183)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun c!18541 () Bool)

(declare-fun d!29055 () Bool)

(assert (=> d!29055 (= c!18541 (and ((_ is Cons!1612) lt!54183) (= (_1!1201 (h!2209 lt!54183)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!29055 (= (getValueByKey!154 lt!54183 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) e!69095)))

(declare-fun b!106195 () Bool)

(assert (=> b!106195 (= e!69096 None!158)))

(declare-fun b!106192 () Bool)

(assert (=> b!106192 (= e!69095 (Some!159 (_2!1201 (h!2209 lt!54183))))))

(assert (= (and d!29055 c!18541) b!106192))

(assert (= (and d!29055 (not c!18541)) b!106193))

(assert (= (and b!106193 c!18542) b!106194))

(assert (= (and b!106193 (not c!18542)) b!106195))

(declare-fun m!118465 () Bool)

(assert (=> b!106194 m!118465))

(assert (=> d!28827 d!29055))

(declare-fun d!29057 () Bool)

(assert (=> d!29057 (= (getValueByKey!154 lt!54183 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun lt!54349 () Unit!3218)

(assert (=> d!29057 (= lt!54349 (choose!667 lt!54183 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun e!69097 () Bool)

(assert (=> d!29057 e!69097))

(declare-fun res!52784 () Bool)

(assert (=> d!29057 (=> (not res!52784) (not e!69097))))

(assert (=> d!29057 (= res!52784 (isStrictlySorted!304 lt!54183))))

(assert (=> d!29057 (= (lemmaContainsTupThenGetReturnValue!73 lt!54183 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54349)))

(declare-fun b!106196 () Bool)

(declare-fun res!52785 () Bool)

(assert (=> b!106196 (=> (not res!52785) (not e!69097))))

(assert (=> b!106196 (= res!52785 (containsKey!158 lt!54183 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106197 () Bool)

(assert (=> b!106197 (= e!69097 (contains!821 lt!54183 (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (= (and d!29057 res!52784) b!106196))

(assert (= (and b!106196 res!52785) b!106197))

(assert (=> d!29057 m!117837))

(declare-fun m!118467 () Bool)

(assert (=> d!29057 m!118467))

(declare-fun m!118469 () Bool)

(assert (=> d!29057 m!118469))

(declare-fun m!118471 () Bool)

(assert (=> b!106196 m!118471))

(declare-fun m!118473 () Bool)

(assert (=> b!106197 m!118473))

(assert (=> d!28827 d!29057))

(declare-fun b!106198 () Bool)

(declare-fun c!18545 () Bool)

(assert (=> b!106198 (= c!18545 (and ((_ is Cons!1612) (toList!787 call!11102)) (bvsgt (_1!1201 (h!2209 (toList!787 call!11102))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun e!69101 () List!1616)

(declare-fun e!69100 () List!1616)

(assert (=> b!106198 (= e!69101 e!69100)))

(declare-fun b!106199 () Bool)

(declare-fun e!69099 () List!1616)

(declare-fun call!11218 () List!1616)

(assert (=> b!106199 (= e!69099 call!11218)))

(declare-fun e!69102 () Bool)

(declare-fun b!106200 () Bool)

(declare-fun lt!54350 () List!1616)

(assert (=> b!106200 (= e!69102 (contains!821 lt!54350 (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!106201 () Bool)

(declare-fun res!52786 () Bool)

(assert (=> b!106201 (=> (not res!52786) (not e!69102))))

(assert (=> b!106201 (= res!52786 (containsKey!158 lt!54350 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106202 () Bool)

(declare-fun call!11219 () List!1616)

(assert (=> b!106202 (= e!69100 call!11219)))

(declare-fun b!106203 () Bool)

(assert (=> b!106203 (= e!69100 call!11219)))

(declare-fun b!106204 () Bool)

(assert (=> b!106204 (= e!69099 e!69101)))

(declare-fun c!18546 () Bool)

(assert (=> b!106204 (= c!18546 (and ((_ is Cons!1612) (toList!787 call!11102)) (= (_1!1201 (h!2209 (toList!787 call!11102))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun bm!11215 () Bool)

(declare-fun call!11220 () List!1616)

(assert (=> bm!11215 (= call!11220 call!11218)))

(declare-fun b!106205 () Bool)

(assert (=> b!106205 (= e!69101 call!11220)))

(declare-fun b!106206 () Bool)

(declare-fun e!69098 () List!1616)

(assert (=> b!106206 (= e!69098 (insertStrictlySorted!76 (t!5690 (toList!787 call!11102)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun bm!11217 () Bool)

(assert (=> bm!11217 (= call!11219 call!11220)))

(declare-fun b!106207 () Bool)

(assert (=> b!106207 (= e!69098 (ite c!18546 (t!5690 (toList!787 call!11102)) (ite c!18545 (Cons!1612 (h!2209 (toList!787 call!11102)) (t!5690 (toList!787 call!11102))) Nil!1613)))))

(declare-fun c!18543 () Bool)

(declare-fun bm!11216 () Bool)

(assert (=> bm!11216 (= call!11218 ($colon$colon!80 e!69098 (ite c!18543 (h!2209 (toList!787 call!11102)) (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun c!18544 () Bool)

(assert (=> bm!11216 (= c!18544 c!18543)))

(declare-fun d!29059 () Bool)

(assert (=> d!29059 e!69102))

(declare-fun res!52787 () Bool)

(assert (=> d!29059 (=> (not res!52787) (not e!69102))))

(assert (=> d!29059 (= res!52787 (isStrictlySorted!304 lt!54350))))

(assert (=> d!29059 (= lt!54350 e!69099)))

(assert (=> d!29059 (= c!18543 (and ((_ is Cons!1612) (toList!787 call!11102)) (bvslt (_1!1201 (h!2209 (toList!787 call!11102))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!29059 (isStrictlySorted!304 (toList!787 call!11102))))

(assert (=> d!29059 (= (insertStrictlySorted!76 (toList!787 call!11102) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54350)))

(assert (= (and d!29059 c!18543) b!106199))

(assert (= (and d!29059 (not c!18543)) b!106204))

(assert (= (and b!106204 c!18546) b!106205))

(assert (= (and b!106204 (not c!18546)) b!106198))

(assert (= (and b!106198 c!18545) b!106202))

(assert (= (and b!106198 (not c!18545)) b!106203))

(assert (= (or b!106202 b!106203) bm!11217))

(assert (= (or b!106205 bm!11217) bm!11215))

(assert (= (or b!106199 bm!11215) bm!11216))

(assert (= (and bm!11216 c!18544) b!106206))

(assert (= (and bm!11216 (not c!18544)) b!106207))

(assert (= (and d!29059 res!52787) b!106201))

(assert (= (and b!106201 res!52786) b!106200))

(declare-fun m!118475 () Bool)

(assert (=> b!106200 m!118475))

(declare-fun m!118477 () Bool)

(assert (=> d!29059 m!118477))

(declare-fun m!118479 () Bool)

(assert (=> d!29059 m!118479))

(declare-fun m!118481 () Bool)

(assert (=> b!106201 m!118481))

(declare-fun m!118483 () Bool)

(assert (=> b!106206 m!118483))

(declare-fun m!118485 () Bool)

(assert (=> bm!11216 m!118485))

(assert (=> d!28827 d!29059))

(assert (=> b!105682 d!28697))

(declare-fun d!29061 () Bool)

(assert (=> d!29061 (isDefined!108 (getValueByKey!154 (toList!787 lt!53716) (_1!1201 lt!53599)))))

(declare-fun lt!54351 () Unit!3218)

(assert (=> d!29061 (= lt!54351 (choose!671 (toList!787 lt!53716) (_1!1201 lt!53599)))))

(declare-fun e!69103 () Bool)

(assert (=> d!29061 e!69103))

(declare-fun res!52788 () Bool)

(assert (=> d!29061 (=> (not res!52788) (not e!69103))))

(assert (=> d!29061 (= res!52788 (isStrictlySorted!304 (toList!787 lt!53716)))))

(assert (=> d!29061 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53716) (_1!1201 lt!53599)) lt!54351)))

(declare-fun b!106208 () Bool)

(assert (=> b!106208 (= e!69103 (containsKey!158 (toList!787 lt!53716) (_1!1201 lt!53599)))))

(assert (= (and d!29061 res!52788) b!106208))

(assert (=> d!29061 m!117095))

(assert (=> d!29061 m!117095))

(assert (=> d!29061 m!117927))

(declare-fun m!118487 () Bool)

(assert (=> d!29061 m!118487))

(declare-fun m!118489 () Bool)

(assert (=> d!29061 m!118489))

(assert (=> b!106208 m!117923))

(assert (=> b!105887 d!29061))

(declare-fun d!29063 () Bool)

(assert (=> d!29063 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53716) (_1!1201 lt!53599))) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53716) (_1!1201 lt!53599)))))))

(declare-fun bs!4353 () Bool)

(assert (= bs!4353 d!29063))

(assert (=> bs!4353 m!117095))

(declare-fun m!118491 () Bool)

(assert (=> bs!4353 m!118491))

(assert (=> b!105887 d!29063))

(assert (=> b!105887 d!28853))

(declare-fun d!29065 () Bool)

(declare-fun lt!54352 () Bool)

(assert (=> d!29065 (= lt!54352 (select (content!110 Nil!1612) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!69104 () Bool)

(assert (=> d!29065 (= lt!54352 e!69104)))

(declare-fun res!52790 () Bool)

(assert (=> d!29065 (=> (not res!52790) (not e!69104))))

(assert (=> d!29065 (= res!52790 ((_ is Cons!1611) Nil!1612))))

(assert (=> d!29065 (= (contains!822 Nil!1612 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) lt!54352)))

(declare-fun b!106209 () Bool)

(declare-fun e!69105 () Bool)

(assert (=> b!106209 (= e!69104 e!69105)))

(declare-fun res!52789 () Bool)

(assert (=> b!106209 (=> res!52789 e!69105)))

(assert (=> b!106209 (= res!52789 (= (h!2208 Nil!1612) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106210 () Bool)

(assert (=> b!106210 (= e!69105 (contains!822 (t!5689 Nil!1612) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!29065 res!52790) b!106209))

(assert (= (and b!106209 (not res!52789)) b!106210))

(assert (=> d!29065 m!117621))

(assert (=> d!29065 m!117265))

(declare-fun m!118493 () Bool)

(assert (=> d!29065 m!118493))

(assert (=> b!106210 m!117265))

(declare-fun m!118495 () Bool)

(assert (=> b!106210 m!118495))

(assert (=> b!105573 d!29065))

(declare-fun d!29067 () Bool)

(declare-fun lt!54353 () Bool)

(assert (=> d!29067 (= lt!54353 (select (content!109 lt!53724) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun e!69106 () Bool)

(assert (=> d!29067 (= lt!54353 e!69106)))

(declare-fun res!52791 () Bool)

(assert (=> d!29067 (=> (not res!52791) (not e!69106))))

(assert (=> d!29067 (= res!52791 ((_ is Cons!1612) lt!53724))))

(assert (=> d!29067 (= (contains!821 lt!53724 (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))) lt!54353)))

(declare-fun b!106211 () Bool)

(declare-fun e!69107 () Bool)

(assert (=> b!106211 (= e!69106 e!69107)))

(declare-fun res!52792 () Bool)

(assert (=> b!106211 (=> res!52792 e!69107)))

(assert (=> b!106211 (= res!52792 (= (h!2209 lt!53724) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun b!106212 () Bool)

(assert (=> b!106212 (= e!69107 (contains!821 (t!5690 lt!53724) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(assert (= (and d!29067 res!52791) b!106211))

(assert (= (and b!106211 (not res!52792)) b!106212))

(declare-fun m!118497 () Bool)

(assert (=> d!29067 m!118497))

(declare-fun m!118499 () Bool)

(assert (=> d!29067 m!118499))

(declare-fun m!118501 () Bool)

(assert (=> b!106212 m!118501))

(assert (=> b!105947 d!29067))

(declare-fun d!29069 () Bool)

(assert (=> d!29069 (= (isEmpty!376 (getValueByKey!154 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))) (not ((_ is Some!159) (getValueByKey!154 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))))

(assert (=> d!28843 d!29069))

(declare-fun d!29071 () Bool)

(declare-fun e!69108 () Bool)

(assert (=> d!29071 e!69108))

(declare-fun res!52794 () Bool)

(assert (=> d!29071 (=> (not res!52794) (not e!69108))))

(declare-fun lt!54357 () ListLongMap!1543)

(assert (=> d!29071 (= res!52794 (contains!820 lt!54357 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun lt!54354 () List!1616)

(assert (=> d!29071 (= lt!54357 (ListLongMap!1544 lt!54354))))

(declare-fun lt!54355 () Unit!3218)

(declare-fun lt!54356 () Unit!3218)

(assert (=> d!29071 (= lt!54355 lt!54356)))

(assert (=> d!29071 (= (getValueByKey!154 lt!54354 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29071 (= lt!54356 (lemmaContainsTupThenGetReturnValue!73 lt!54354 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29071 (= lt!54354 (insertStrictlySorted!76 (toList!787 call!11139) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29071 (= (+!135 call!11139 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) lt!54357)))

(declare-fun b!106213 () Bool)

(declare-fun res!52793 () Bool)

(assert (=> b!106213 (=> (not res!52793) (not e!69108))))

(assert (=> b!106213 (= res!52793 (= (getValueByKey!154 (toList!787 lt!54357) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(declare-fun b!106214 () Bool)

(assert (=> b!106214 (= e!69108 (contains!821 (toList!787 lt!54357) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(assert (= (and d!29071 res!52794) b!106213))

(assert (= (and b!106213 res!52793) b!106214))

(declare-fun m!118503 () Bool)

(assert (=> d!29071 m!118503))

(declare-fun m!118505 () Bool)

(assert (=> d!29071 m!118505))

(declare-fun m!118507 () Bool)

(assert (=> d!29071 m!118507))

(declare-fun m!118509 () Bool)

(assert (=> d!29071 m!118509))

(declare-fun m!118511 () Bool)

(assert (=> b!106213 m!118511))

(declare-fun m!118513 () Bool)

(assert (=> b!106214 m!118513))

(assert (=> b!105542 d!29071))

(assert (=> b!105721 d!28979))

(declare-fun d!29073 () Bool)

(declare-fun res!52795 () Bool)

(declare-fun e!69109 () Bool)

(assert (=> d!29073 (=> res!52795 e!69109)))

(assert (=> d!29073 (= res!52795 (and ((_ is Cons!1612) (toList!787 call!11088)) (= (_1!1201 (h!2209 (toList!787 call!11088))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (=> d!29073 (= (containsKey!158 (toList!787 call!11088) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) e!69109)))

(declare-fun b!106215 () Bool)

(declare-fun e!69110 () Bool)

(assert (=> b!106215 (= e!69109 e!69110)))

(declare-fun res!52796 () Bool)

(assert (=> b!106215 (=> (not res!52796) (not e!69110))))

(assert (=> b!106215 (= res!52796 (and (or (not ((_ is Cons!1612) (toList!787 call!11088))) (bvsle (_1!1201 (h!2209 (toList!787 call!11088))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))) ((_ is Cons!1612) (toList!787 call!11088)) (bvslt (_1!1201 (h!2209 (toList!787 call!11088))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(declare-fun b!106216 () Bool)

(assert (=> b!106216 (= e!69110 (containsKey!158 (t!5690 (toList!787 call!11088)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (= (and d!29073 (not res!52795)) b!106215))

(assert (= (and b!106215 res!52796) b!106216))

(assert (=> b!106216 m!116875))

(declare-fun m!118515 () Bool)

(assert (=> b!106216 m!118515))

(assert (=> d!28783 d!29073))

(declare-fun d!29075 () Bool)

(assert (=> d!29075 (= (inRange!0 (ite c!18425 (index!3197 lt!54155) (ite c!18426 (index!3196 lt!54171) (index!3199 lt!54171))) (mask!6726 newMap!16)) (and (bvsge (ite c!18425 (index!3197 lt!54155) (ite c!18426 (index!3196 lt!54171) (index!3199 lt!54171))) #b00000000000000000000000000000000) (bvslt (ite c!18425 (index!3197 lt!54155) (ite c!18426 (index!3196 lt!54171) (index!3199 lt!54171))) (bvadd (mask!6726 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11188 d!29075))

(declare-fun d!29077 () Bool)

(declare-fun e!69111 () Bool)

(assert (=> d!29077 e!69111))

(declare-fun res!52797 () Bool)

(assert (=> d!29077 (=> res!52797 e!69111)))

(declare-fun lt!54358 () Bool)

(assert (=> d!29077 (= res!52797 (not lt!54358))))

(declare-fun lt!54361 () Bool)

(assert (=> d!29077 (= lt!54358 lt!54361)))

(declare-fun lt!54360 () Unit!3218)

(declare-fun e!69112 () Unit!3218)

(assert (=> d!29077 (= lt!54360 e!69112)))

(declare-fun c!18547 () Bool)

(assert (=> d!29077 (= c!18547 lt!54361)))

(assert (=> d!29077 (= lt!54361 (containsKey!158 (toList!787 lt!54050) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29077 (= (contains!820 lt!54050 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54358)))

(declare-fun b!106217 () Bool)

(declare-fun lt!54359 () Unit!3218)

(assert (=> b!106217 (= e!69112 lt!54359)))

(assert (=> b!106217 (= lt!54359 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54050) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106217 (isDefined!108 (getValueByKey!154 (toList!787 lt!54050) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106218 () Bool)

(declare-fun Unit!3263 () Unit!3218)

(assert (=> b!106218 (= e!69112 Unit!3263)))

(declare-fun b!106219 () Bool)

(assert (=> b!106219 (= e!69111 (isDefined!108 (getValueByKey!154 (toList!787 lt!54050) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29077 c!18547) b!106217))

(assert (= (and d!29077 (not c!18547)) b!106218))

(assert (= (and d!29077 (not res!52797)) b!106219))

(declare-fun m!118517 () Bool)

(assert (=> d!29077 m!118517))

(declare-fun m!118519 () Bool)

(assert (=> b!106217 m!118519))

(declare-fun m!118521 () Bool)

(assert (=> b!106217 m!118521))

(assert (=> b!106217 m!118521))

(declare-fun m!118523 () Bool)

(assert (=> b!106217 m!118523))

(assert (=> b!106219 m!118521))

(assert (=> b!106219 m!118521))

(assert (=> b!106219 m!118523))

(assert (=> d!28797 d!29077))

(assert (=> d!28797 d!28685))

(declare-fun d!29079 () Bool)

(declare-fun e!69113 () Bool)

(assert (=> d!29079 e!69113))

(declare-fun res!52798 () Bool)

(assert (=> d!29079 (=> res!52798 e!69113)))

(declare-fun lt!54362 () Bool)

(assert (=> d!29079 (= res!52798 (not lt!54362))))

(declare-fun lt!54365 () Bool)

(assert (=> d!29079 (= lt!54362 lt!54365)))

(declare-fun lt!54364 () Unit!3218)

(declare-fun e!69114 () Unit!3218)

(assert (=> d!29079 (= lt!54364 e!69114)))

(declare-fun c!18548 () Bool)

(assert (=> d!29079 (= c!18548 lt!54365)))

(assert (=> d!29079 (= lt!54365 (containsKey!158 (toList!787 lt!54088) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29079 (= (contains!820 lt!54088 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!54362)))

(declare-fun b!106220 () Bool)

(declare-fun lt!54363 () Unit!3218)

(assert (=> b!106220 (= e!69114 lt!54363)))

(assert (=> b!106220 (= lt!54363 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54088) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!106220 (isDefined!108 (getValueByKey!154 (toList!787 lt!54088) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106221 () Bool)

(declare-fun Unit!3264 () Unit!3218)

(assert (=> b!106221 (= e!69114 Unit!3264)))

(declare-fun b!106222 () Bool)

(assert (=> b!106222 (= e!69113 (isDefined!108 (getValueByKey!154 (toList!787 lt!54088) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!29079 c!18548) b!106220))

(assert (= (and d!29079 (not c!18548)) b!106221))

(assert (= (and d!29079 (not res!52798)) b!106222))

(declare-fun m!118525 () Bool)

(assert (=> d!29079 m!118525))

(declare-fun m!118527 () Bool)

(assert (=> b!106220 m!118527))

(assert (=> b!106220 m!117759))

(assert (=> b!106220 m!117759))

(declare-fun m!118529 () Bool)

(assert (=> b!106220 m!118529))

(assert (=> b!106222 m!117759))

(assert (=> b!106222 m!117759))

(assert (=> b!106222 m!118529))

(assert (=> d!28819 d!29079))

(declare-fun e!69116 () Option!160)

(declare-fun b!106225 () Bool)

(assert (=> b!106225 (= e!69116 (getValueByKey!154 (t!5690 lt!54085) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106224 () Bool)

(declare-fun e!69115 () Option!160)

(assert (=> b!106224 (= e!69115 e!69116)))

(declare-fun c!18550 () Bool)

(assert (=> b!106224 (= c!18550 (and ((_ is Cons!1612) lt!54085) (not (= (_1!1201 (h!2209 lt!54085)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!29081 () Bool)

(declare-fun c!18549 () Bool)

(assert (=> d!29081 (= c!18549 (and ((_ is Cons!1612) lt!54085) (= (_1!1201 (h!2209 lt!54085)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29081 (= (getValueByKey!154 lt!54085 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!69115)))

(declare-fun b!106226 () Bool)

(assert (=> b!106226 (= e!69116 None!158)))

(declare-fun b!106223 () Bool)

(assert (=> b!106223 (= e!69115 (Some!159 (_2!1201 (h!2209 lt!54085))))))

(assert (= (and d!29081 c!18549) b!106223))

(assert (= (and d!29081 (not c!18549)) b!106224))

(assert (= (and b!106224 c!18550) b!106225))

(assert (= (and b!106224 (not c!18550)) b!106226))

(declare-fun m!118531 () Bool)

(assert (=> b!106225 m!118531))

(assert (=> d!28819 d!29081))

(declare-fun d!29083 () Bool)

(assert (=> d!29083 (= (getValueByKey!154 lt!54085 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!54366 () Unit!3218)

(assert (=> d!29083 (= lt!54366 (choose!667 lt!54085 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!69117 () Bool)

(assert (=> d!29083 e!69117))

(declare-fun res!52799 () Bool)

(assert (=> d!29083 (=> (not res!52799) (not e!69117))))

(assert (=> d!29083 (= res!52799 (isStrictlySorted!304 lt!54085))))

(assert (=> d!29083 (= (lemmaContainsTupThenGetReturnValue!73 lt!54085 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!54366)))

(declare-fun b!106227 () Bool)

(declare-fun res!52800 () Bool)

(assert (=> b!106227 (=> (not res!52800) (not e!69117))))

(assert (=> b!106227 (= res!52800 (containsKey!158 lt!54085 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106228 () Bool)

(assert (=> b!106228 (= e!69117 (contains!821 lt!54085 (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!29083 res!52799) b!106227))

(assert (= (and b!106227 res!52800) b!106228))

(assert (=> d!29083 m!117753))

(declare-fun m!118533 () Bool)

(assert (=> d!29083 m!118533))

(declare-fun m!118535 () Bool)

(assert (=> d!29083 m!118535))

(declare-fun m!118537 () Bool)

(assert (=> b!106227 m!118537))

(declare-fun m!118539 () Bool)

(assert (=> b!106228 m!118539))

(assert (=> d!28819 d!29083))

(declare-fun c!18553 () Bool)

(declare-fun b!106229 () Bool)

(assert (=> b!106229 (= c!18553 (and ((_ is Cons!1612) (toList!787 call!11038)) (bvsgt (_1!1201 (h!2209 (toList!787 call!11038))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!69121 () List!1616)

(declare-fun e!69120 () List!1616)

(assert (=> b!106229 (= e!69121 e!69120)))

(declare-fun b!106230 () Bool)

(declare-fun e!69119 () List!1616)

(declare-fun call!11221 () List!1616)

(assert (=> b!106230 (= e!69119 call!11221)))

(declare-fun e!69122 () Bool)

(declare-fun lt!54367 () List!1616)

(declare-fun b!106231 () Bool)

(assert (=> b!106231 (= e!69122 (contains!821 lt!54367 (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!106232 () Bool)

(declare-fun res!52801 () Bool)

(assert (=> b!106232 (=> (not res!52801) (not e!69122))))

(assert (=> b!106232 (= res!52801 (containsKey!158 lt!54367 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106233 () Bool)

(declare-fun call!11222 () List!1616)

(assert (=> b!106233 (= e!69120 call!11222)))

(declare-fun b!106234 () Bool)

(assert (=> b!106234 (= e!69120 call!11222)))

(declare-fun b!106235 () Bool)

(assert (=> b!106235 (= e!69119 e!69121)))

(declare-fun c!18554 () Bool)

(assert (=> b!106235 (= c!18554 (and ((_ is Cons!1612) (toList!787 call!11038)) (= (_1!1201 (h!2209 (toList!787 call!11038))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!11218 () Bool)

(declare-fun call!11223 () List!1616)

(assert (=> bm!11218 (= call!11223 call!11221)))

(declare-fun b!106236 () Bool)

(assert (=> b!106236 (= e!69121 call!11223)))

(declare-fun e!69118 () List!1616)

(declare-fun b!106237 () Bool)

(assert (=> b!106237 (= e!69118 (insertStrictlySorted!76 (t!5690 (toList!787 call!11038)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!11220 () Bool)

(assert (=> bm!11220 (= call!11222 call!11223)))

(declare-fun b!106238 () Bool)

(assert (=> b!106238 (= e!69118 (ite c!18554 (t!5690 (toList!787 call!11038)) (ite c!18553 (Cons!1612 (h!2209 (toList!787 call!11038)) (t!5690 (toList!787 call!11038))) Nil!1613)))))

(declare-fun c!18551 () Bool)

(declare-fun bm!11219 () Bool)

(assert (=> bm!11219 (= call!11221 ($colon$colon!80 e!69118 (ite c!18551 (h!2209 (toList!787 call!11038)) (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!18552 () Bool)

(assert (=> bm!11219 (= c!18552 c!18551)))

(declare-fun d!29085 () Bool)

(assert (=> d!29085 e!69122))

(declare-fun res!52802 () Bool)

(assert (=> d!29085 (=> (not res!52802) (not e!69122))))

(assert (=> d!29085 (= res!52802 (isStrictlySorted!304 lt!54367))))

(assert (=> d!29085 (= lt!54367 e!69119)))

(assert (=> d!29085 (= c!18551 (and ((_ is Cons!1612) (toList!787 call!11038)) (bvslt (_1!1201 (h!2209 (toList!787 call!11038))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29085 (isStrictlySorted!304 (toList!787 call!11038))))

(assert (=> d!29085 (= (insertStrictlySorted!76 (toList!787 call!11038) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!54367)))

(assert (= (and d!29085 c!18551) b!106230))

(assert (= (and d!29085 (not c!18551)) b!106235))

(assert (= (and b!106235 c!18554) b!106236))

(assert (= (and b!106235 (not c!18554)) b!106229))

(assert (= (and b!106229 c!18553) b!106233))

(assert (= (and b!106229 (not c!18553)) b!106234))

(assert (= (or b!106233 b!106234) bm!11220))

(assert (= (or b!106236 bm!11220) bm!11218))

(assert (= (or b!106230 bm!11218) bm!11219))

(assert (= (and bm!11219 c!18552) b!106237))

(assert (= (and bm!11219 (not c!18552)) b!106238))

(assert (= (and d!29085 res!52802) b!106232))

(assert (= (and b!106232 res!52801) b!106231))

(declare-fun m!118541 () Bool)

(assert (=> b!106231 m!118541))

(declare-fun m!118543 () Bool)

(assert (=> d!29085 m!118543))

(declare-fun m!118545 () Bool)

(assert (=> d!29085 m!118545))

(declare-fun m!118547 () Bool)

(assert (=> b!106232 m!118547))

(declare-fun m!118549 () Bool)

(assert (=> b!106237 m!118549))

(declare-fun m!118551 () Bool)

(assert (=> bm!11219 m!118551))

(assert (=> d!28819 d!29085))

(declare-fun d!29087 () Bool)

(assert (=> d!29087 (= (apply!98 lt!53909 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1335 (getValueByKey!154 (toList!787 lt!53909) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4354 () Bool)

(assert (= bs!4354 d!29087))

(assert (=> bs!4354 m!117265))

(declare-fun m!118553 () Bool)

(assert (=> bs!4354 m!118553))

(assert (=> bs!4354 m!118553))

(declare-fun m!118555 () Bool)

(assert (=> bs!4354 m!118555))

(assert (=> b!105529 d!29087))

(declare-fun d!29089 () Bool)

(declare-fun c!18555 () Bool)

(assert (=> d!29089 (= c!18555 ((_ is ValueCellFull!995) (select (arr!2051 (ite c!18304 (_values!2564 newMap!16) lt!53795)) #b00000000000000000000000000000000)))))

(declare-fun e!69123 () V!3217)

(assert (=> d!29089 (= (get!1331 (select (arr!2051 (ite c!18304 (_values!2564 newMap!16) lt!53795)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69123)))

(declare-fun b!106239 () Bool)

(assert (=> b!106239 (= e!69123 (get!1333 (select (arr!2051 (ite c!18304 (_values!2564 newMap!16) lt!53795)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106240 () Bool)

(assert (=> b!106240 (= e!69123 (get!1334 (select (arr!2051 (ite c!18304 (_values!2564 newMap!16) lt!53795)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29089 c!18555) b!106239))

(assert (= (and d!29089 (not c!18555)) b!106240))

(assert (=> b!106239 m!117295))

(assert (=> b!106239 m!117291))

(declare-fun m!118557 () Bool)

(assert (=> b!106239 m!118557))

(assert (=> b!106240 m!117295))

(assert (=> b!106240 m!117291))

(declare-fun m!118559 () Bool)

(assert (=> b!106240 m!118559))

(assert (=> b!105529 d!29089))

(declare-fun d!29091 () Bool)

(assert (=> d!29091 (= (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695)) (not (isEmpty!376 (getValueByKey!154 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695))))))

(declare-fun bs!4355 () Bool)

(assert (= bs!4355 d!29091))

(assert (=> bs!4355 m!117767))

(declare-fun m!118561 () Bool)

(assert (=> bs!4355 m!118561))

(assert (=> b!105790 d!29091))

(declare-fun b!106243 () Bool)

(declare-fun e!69125 () Option!160)

(assert (=> b!106243 (= e!69125 (getValueByKey!154 (t!5690 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)))) lt!53695))))

(declare-fun b!106242 () Bool)

(declare-fun e!69124 () Option!160)

(assert (=> b!106242 (= e!69124 e!69125)))

(declare-fun c!18557 () Bool)

(assert (=> b!106242 (= c!18557 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)))) (not (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))))) lt!53695))))))

(declare-fun c!18556 () Bool)

(declare-fun d!29093 () Bool)

(assert (=> d!29093 (= c!18556 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))))) lt!53695)))))

(assert (=> d!29093 (= (getValueByKey!154 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695) e!69124)))

(declare-fun b!106244 () Bool)

(assert (=> b!106244 (= e!69125 None!158)))

(declare-fun b!106241 () Bool)

(assert (=> b!106241 (= e!69124 (Some!159 (_2!1201 (h!2209 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)))))))))

(assert (= (and d!29093 c!18556) b!106241))

(assert (= (and d!29093 (not c!18556)) b!106242))

(assert (= (and b!106242 c!18557) b!106243))

(assert (= (and b!106242 (not c!18557)) b!106244))

(declare-fun m!118563 () Bool)

(assert (=> b!106243 m!118563))

(assert (=> b!105790 d!29093))

(declare-fun b!106245 () Bool)

(declare-fun e!69126 () Bool)

(declare-fun call!11224 () Bool)

(assert (=> b!106245 (= e!69126 call!11224)))

(declare-fun b!106246 () Bool)

(declare-fun e!69128 () Bool)

(assert (=> b!106246 (= e!69128 call!11224)))

(declare-fun b!106247 () Bool)

(declare-fun e!69127 () Bool)

(assert (=> b!106247 (= e!69127 e!69126)))

(declare-fun c!18558 () Bool)

(assert (=> b!106247 (= c!18558 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000)))))

(declare-fun bm!11221 () Bool)

(assert (=> bm!11221 (= call!11224 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4286 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812))))))

(declare-fun d!29095 () Bool)

(declare-fun res!52804 () Bool)

(assert (=> d!29095 (=> res!52804 e!69127)))

(assert (=> d!29095 (= res!52804 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))))))

(assert (=> d!29095 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4286 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812))) e!69127)))

(declare-fun b!106248 () Bool)

(assert (=> b!106248 (= e!69126 e!69128)))

(declare-fun lt!54370 () (_ BitVec 64))

(assert (=> b!106248 (= lt!54370 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000))))

(declare-fun lt!54369 () Unit!3218)

(assert (=> b!106248 (= lt!54369 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4286 (_2!1202 lt!53812)) lt!54370 #b00000000000000000000000000000000))))

(assert (=> b!106248 (arrayContainsKey!0 (_keys!4286 (_2!1202 lt!53812)) lt!54370 #b00000000000000000000000000000000)))

(declare-fun lt!54368 () Unit!3218)

(assert (=> b!106248 (= lt!54368 lt!54369)))

(declare-fun res!52803 () Bool)

(assert (=> b!106248 (= res!52803 (= (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000) (_keys!4286 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812))) (Found!262 #b00000000000000000000000000000000)))))

(assert (=> b!106248 (=> (not res!52803) (not e!69128))))

(assert (= (and d!29095 (not res!52804)) b!106247))

(assert (= (and b!106247 c!18558) b!106248))

(assert (= (and b!106247 (not c!18558)) b!106245))

(assert (= (and b!106248 res!52803) b!106246))

(assert (= (or b!106246 b!106245) bm!11221))

(assert (=> b!106247 m!118373))

(assert (=> b!106247 m!118373))

(assert (=> b!106247 m!118375))

(declare-fun m!118565 () Bool)

(assert (=> bm!11221 m!118565))

(assert (=> b!106248 m!118373))

(declare-fun m!118567 () Bool)

(assert (=> b!106248 m!118567))

(declare-fun m!118569 () Bool)

(assert (=> b!106248 m!118569))

(assert (=> b!106248 m!118373))

(declare-fun m!118571 () Bool)

(assert (=> b!106248 m!118571))

(assert (=> b!105685 d!29095))

(declare-fun b!106251 () Bool)

(declare-fun e!69130 () Option!160)

(assert (=> b!106251 (= e!69130 (getValueByKey!154 (t!5690 (t!5690 (toList!787 lt!53727))) (_1!1201 lt!53606)))))

(declare-fun b!106250 () Bool)

(declare-fun e!69129 () Option!160)

(assert (=> b!106250 (= e!69129 e!69130)))

(declare-fun c!18560 () Bool)

(assert (=> b!106250 (= c!18560 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53727))) (not (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53727)))) (_1!1201 lt!53606)))))))

(declare-fun d!29097 () Bool)

(declare-fun c!18559 () Bool)

(assert (=> d!29097 (= c!18559 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53727))) (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53727)))) (_1!1201 lt!53606))))))

(assert (=> d!29097 (= (getValueByKey!154 (t!5690 (toList!787 lt!53727)) (_1!1201 lt!53606)) e!69129)))

(declare-fun b!106252 () Bool)

(assert (=> b!106252 (= e!69130 None!158)))

(declare-fun b!106249 () Bool)

(assert (=> b!106249 (= e!69129 (Some!159 (_2!1201 (h!2209 (t!5690 (toList!787 lt!53727))))))))

(assert (= (and d!29097 c!18559) b!106249))

(assert (= (and d!29097 (not c!18559)) b!106250))

(assert (= (and b!106250 c!18560) b!106251))

(assert (= (and b!106250 (not c!18560)) b!106252))

(declare-fun m!118573 () Bool)

(assert (=> b!106251 m!118573))

(assert (=> b!105853 d!29097))

(declare-fun d!29099 () Bool)

(assert (=> d!29099 (= (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883)) (not (isEmpty!376 (getValueByKey!154 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883))))))

(declare-fun bs!4356 () Bool)

(assert (= bs!4356 d!29099))

(assert (=> bs!4356 m!117553))

(declare-fun m!118575 () Bool)

(assert (=> bs!4356 m!118575))

(assert (=> b!105657 d!29099))

(declare-fun e!69132 () Option!160)

(declare-fun b!106255 () Bool)

(assert (=> b!106255 (= e!69132 (getValueByKey!154 (t!5690 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) lt!53883))))

(declare-fun b!106254 () Bool)

(declare-fun e!69131 () Option!160)

(assert (=> b!106254 (= e!69131 e!69132)))

(declare-fun c!18562 () Bool)

(assert (=> b!106254 (= c!18562 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (not (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53883))))))

(declare-fun d!29101 () Bool)

(declare-fun c!18561 () Bool)

(assert (=> d!29101 (= c!18561 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53883)))))

(assert (=> d!29101 (= (getValueByKey!154 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883) e!69131)))

(declare-fun b!106256 () Bool)

(assert (=> b!106256 (= e!69132 None!158)))

(declare-fun b!106253 () Bool)

(assert (=> b!106253 (= e!69131 (Some!159 (_2!1201 (h!2209 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))))

(assert (= (and d!29101 c!18561) b!106253))

(assert (= (and d!29101 (not c!18561)) b!106254))

(assert (= (and b!106254 c!18562) b!106255))

(assert (= (and b!106254 (not c!18562)) b!106256))

(declare-fun m!118577 () Bool)

(assert (=> b!106255 m!118577))

(assert (=> b!105657 d!29101))

(declare-fun d!29103 () Bool)

(assert (=> d!29103 (= (apply!98 lt!53909 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1335 (getValueByKey!154 (toList!787 lt!53909) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4357 () Bool)

(assert (= bs!4357 d!29103))

(declare-fun m!118579 () Bool)

(assert (=> bs!4357 m!118579))

(assert (=> bs!4357 m!118579))

(declare-fun m!118581 () Bool)

(assert (=> bs!4357 m!118581))

(assert (=> b!105524 d!29103))

(assert (=> bm!11185 d!28711))

(declare-fun b!106257 () Bool)

(declare-fun e!69133 () Bool)

(declare-fun call!11225 () Bool)

(assert (=> b!106257 (= e!69133 call!11225)))

(declare-fun b!106258 () Bool)

(declare-fun e!69135 () Bool)

(assert (=> b!106258 (= e!69135 call!11225)))

(declare-fun b!106259 () Bool)

(declare-fun e!69134 () Bool)

(assert (=> b!106259 (= e!69134 e!69133)))

(declare-fun c!18563 () Bool)

(assert (=> b!106259 (= c!18563 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11222 () Bool)

(assert (=> bm!11222 (= call!11225 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4286 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun d!29105 () Bool)

(declare-fun res!52806 () Bool)

(assert (=> d!29105 (=> res!52806 e!69134)))

(assert (=> d!29105 (= res!52806 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!29105 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992)))) e!69134)))

(declare-fun b!106260 () Bool)

(assert (=> b!106260 (= e!69133 e!69135)))

(declare-fun lt!54373 () (_ BitVec 64))

(assert (=> b!106260 (= lt!54373 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!54372 () Unit!3218)

(assert (=> b!106260 (= lt!54372 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) lt!54373 #b00000000000000000000000000000000))))

(assert (=> b!106260 (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) lt!54373 #b00000000000000000000000000000000)))

(declare-fun lt!54371 () Unit!3218)

(assert (=> b!106260 (= lt!54371 lt!54372)))

(declare-fun res!52805 () Bool)

(assert (=> b!106260 (= res!52805 (= (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000) (_keys!4286 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992)))) (Found!262 #b00000000000000000000000000000000)))))

(assert (=> b!106260 (=> (not res!52805) (not e!69135))))

(assert (= (and d!29105 (not res!52806)) b!106259))

(assert (= (and b!106259 c!18563) b!106260))

(assert (= (and b!106259 (not c!18563)) b!106257))

(assert (= (and b!106260 res!52805) b!106258))

(assert (= (or b!106258 b!106257) bm!11222))

(assert (=> b!106259 m!118381))

(assert (=> b!106259 m!118381))

(assert (=> b!106259 m!118383))

(declare-fun m!118583 () Bool)

(assert (=> bm!11222 m!118583))

(assert (=> b!106260 m!118381))

(declare-fun m!118585 () Bool)

(assert (=> b!106260 m!118585))

(declare-fun m!118587 () Bool)

(assert (=> b!106260 m!118587))

(assert (=> b!106260 m!118381))

(declare-fun m!118589 () Bool)

(assert (=> b!106260 m!118589))

(assert (=> b!105876 d!29105))

(declare-fun d!29107 () Bool)

(declare-fun lt!54374 () Bool)

(assert (=> d!29107 (= lt!54374 (select (content!109 (toList!787 lt!54186)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(declare-fun e!69136 () Bool)

(assert (=> d!29107 (= lt!54374 e!69136)))

(declare-fun res!52807 () Bool)

(assert (=> d!29107 (=> (not res!52807) (not e!69136))))

(assert (=> d!29107 (= res!52807 ((_ is Cons!1612) (toList!787 lt!54186)))))

(assert (=> d!29107 (= (contains!821 (toList!787 lt!54186) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) lt!54374)))

(declare-fun b!106261 () Bool)

(declare-fun e!69137 () Bool)

(assert (=> b!106261 (= e!69136 e!69137)))

(declare-fun res!52808 () Bool)

(assert (=> b!106261 (=> res!52808 e!69137)))

(assert (=> b!106261 (= res!52808 (= (h!2209 (toList!787 lt!54186)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(declare-fun b!106262 () Bool)

(assert (=> b!106262 (= e!69137 (contains!821 (t!5690 (toList!787 lt!54186)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(assert (= (and d!29107 res!52807) b!106261))

(assert (= (and b!106261 (not res!52808)) b!106262))

(declare-fun m!118591 () Bool)

(assert (=> d!29107 m!118591))

(declare-fun m!118593 () Bool)

(assert (=> d!29107 m!118593))

(declare-fun m!118595 () Bool)

(assert (=> b!106262 m!118595))

(assert (=> b!105848 d!29107))

(declare-fun d!29109 () Bool)

(assert (=> d!29109 (= (apply!98 lt!53976 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1335 (getValueByKey!154 (toList!787 lt!53976) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4358 () Bool)

(assert (= bs!4358 d!29109))

(declare-fun m!118597 () Bool)

(assert (=> bs!4358 m!118597))

(assert (=> bs!4358 m!118597))

(declare-fun m!118599 () Bool)

(assert (=> bs!4358 m!118599))

(assert (=> b!105630 d!29109))

(declare-fun b!106263 () Bool)

(declare-fun e!69141 () Bool)

(declare-fun call!11226 () Bool)

(assert (=> b!106263 (= e!69141 call!11226)))

(declare-fun b!106264 () Bool)

(assert (=> b!106264 (= e!69141 call!11226)))

(declare-fun b!106265 () Bool)

(declare-fun e!69139 () Bool)

(assert (=> b!106265 (= e!69139 e!69141)))

(declare-fun c!18564 () Bool)

(assert (=> b!106265 (= c!18564 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!29111 () Bool)

(declare-fun res!52811 () Bool)

(declare-fun e!69138 () Bool)

(assert (=> d!29111 (=> res!52811 e!69138)))

(assert (=> d!29111 (= res!52811 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!29111 (= (arrayNoDuplicates!0 (_keys!4286 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18367 (Cons!1611 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) Nil!1612) Nil!1612)) e!69138)))

(declare-fun b!106266 () Bool)

(assert (=> b!106266 (= e!69138 e!69139)))

(declare-fun res!52810 () Bool)

(assert (=> b!106266 (=> (not res!52810) (not e!69139))))

(declare-fun e!69140 () Bool)

(assert (=> b!106266 (= res!52810 (not e!69140))))

(declare-fun res!52809 () Bool)

(assert (=> b!106266 (=> (not res!52809) (not e!69140))))

(assert (=> b!106266 (= res!52809 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!106267 () Bool)

(assert (=> b!106267 (= e!69140 (contains!822 (ite c!18367 (Cons!1611 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) Nil!1612) Nil!1612) (select (arr!2050 (_keys!4286 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11223 () Bool)

(assert (=> bm!11223 (= call!11226 (arrayNoDuplicates!0 (_keys!4286 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18564 (Cons!1611 (select (arr!2050 (_keys!4286 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!18367 (Cons!1611 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) Nil!1612) Nil!1612)) (ite c!18367 (Cons!1611 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) Nil!1612) Nil!1612))))))

(assert (= (and d!29111 (not res!52811)) b!106266))

(assert (= (and b!106266 res!52809) b!106267))

(assert (= (and b!106266 res!52810) b!106265))

(assert (= (and b!106265 c!18564) b!106263))

(assert (= (and b!106265 (not c!18564)) b!106264))

(assert (= (or b!106263 b!106264) bm!11223))

(assert (=> b!106265 m!118287))

(assert (=> b!106265 m!118287))

(assert (=> b!106265 m!118289))

(assert (=> b!106266 m!118287))

(assert (=> b!106266 m!118287))

(assert (=> b!106266 m!118289))

(assert (=> b!106267 m!118287))

(assert (=> b!106267 m!118287))

(declare-fun m!118601 () Bool)

(assert (=> b!106267 m!118601))

(assert (=> bm!11223 m!118287))

(declare-fun m!118603 () Bool)

(assert (=> bm!11223 m!118603))

(assert (=> bm!11148 d!29111))

(declare-fun d!29113 () Bool)

(assert (=> d!29113 (= (content!110 Nil!1612) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!28781 d!29113))

(declare-fun b!106268 () Bool)

(declare-fun e!69145 () Bool)

(declare-fun call!11227 () Bool)

(assert (=> b!106268 (= e!69145 call!11227)))

(declare-fun b!106269 () Bool)

(assert (=> b!106269 (= e!69145 call!11227)))

(declare-fun b!106270 () Bool)

(declare-fun e!69143 () Bool)

(assert (=> b!106270 (= e!69143 e!69145)))

(declare-fun c!18565 () Bool)

(assert (=> b!106270 (= c!18565 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!29115 () Bool)

(declare-fun res!52814 () Bool)

(declare-fun e!69142 () Bool)

(assert (=> d!29115 (=> res!52814 e!69142)))

(assert (=> d!29115 (= res!52814 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!29115 (= (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18415 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612))) e!69142)))

(declare-fun b!106271 () Bool)

(assert (=> b!106271 (= e!69142 e!69143)))

(declare-fun res!52813 () Bool)

(assert (=> b!106271 (=> (not res!52813) (not e!69143))))

(declare-fun e!69144 () Bool)

(assert (=> b!106271 (= res!52813 (not e!69144))))

(declare-fun res!52812 () Bool)

(assert (=> b!106271 (=> (not res!52812) (not e!69144))))

(assert (=> b!106271 (= res!52812 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!106272 () Bool)

(assert (=> b!106272 (= e!69144 (contains!822 (ite c!18415 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!11224 () Bool)

(assert (=> bm!11224 (= call!11227 (arrayNoDuplicates!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18565 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!18415 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612))) (ite c!18415 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)))))))

(assert (= (and d!29115 (not res!52814)) b!106271))

(assert (= (and b!106271 res!52812) b!106272))

(assert (= (and b!106271 res!52813) b!106270))

(assert (= (and b!106270 c!18565) b!106268))

(assert (= (and b!106270 (not c!18565)) b!106269))

(assert (= (or b!106268 b!106269) bm!11224))

(declare-fun m!118605 () Bool)

(assert (=> b!106270 m!118605))

(assert (=> b!106270 m!118605))

(declare-fun m!118607 () Bool)

(assert (=> b!106270 m!118607))

(assert (=> b!106271 m!118605))

(assert (=> b!106271 m!118605))

(assert (=> b!106271 m!118607))

(assert (=> b!106272 m!118605))

(assert (=> b!106272 m!118605))

(declare-fun m!118609 () Bool)

(assert (=> b!106272 m!118609))

(assert (=> bm!11224 m!118605))

(declare-fun m!118611 () Bool)

(assert (=> bm!11224 m!118611))

(assert (=> bm!11176 d!29115))

(declare-fun b!106275 () Bool)

(declare-fun e!69147 () Option!160)

(assert (=> b!106275 (= e!69147 (getValueByKey!154 (t!5690 (t!5690 lt!53713)) (_1!1201 lt!53599)))))

(declare-fun b!106274 () Bool)

(declare-fun e!69146 () Option!160)

(assert (=> b!106274 (= e!69146 e!69147)))

(declare-fun c!18567 () Bool)

(assert (=> b!106274 (= c!18567 (and ((_ is Cons!1612) (t!5690 lt!53713)) (not (= (_1!1201 (h!2209 (t!5690 lt!53713))) (_1!1201 lt!53599)))))))

(declare-fun d!29117 () Bool)

(declare-fun c!18566 () Bool)

(assert (=> d!29117 (= c!18566 (and ((_ is Cons!1612) (t!5690 lt!53713)) (= (_1!1201 (h!2209 (t!5690 lt!53713))) (_1!1201 lt!53599))))))

(assert (=> d!29117 (= (getValueByKey!154 (t!5690 lt!53713) (_1!1201 lt!53599)) e!69146)))

(declare-fun b!106276 () Bool)

(assert (=> b!106276 (= e!69147 None!158)))

(declare-fun b!106273 () Bool)

(assert (=> b!106273 (= e!69146 (Some!159 (_2!1201 (h!2209 (t!5690 lt!53713)))))))

(assert (= (and d!29117 c!18566) b!106273))

(assert (= (and d!29117 (not c!18566)) b!106274))

(assert (= (and b!106274 c!18567) b!106275))

(assert (= (and b!106274 (not c!18567)) b!106276))

(declare-fun m!118613 () Bool)

(assert (=> b!106275 m!118613))

(assert (=> b!105892 d!29117))

(declare-fun d!29119 () Bool)

(declare-fun lt!54375 () Bool)

(assert (=> d!29119 (= lt!54375 (select (content!109 (toList!787 lt!54088)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!69148 () Bool)

(assert (=> d!29119 (= lt!54375 e!69148)))

(declare-fun res!52815 () Bool)

(assert (=> d!29119 (=> (not res!52815) (not e!69148))))

(assert (=> d!29119 (= res!52815 ((_ is Cons!1612) (toList!787 lt!54088)))))

(assert (=> d!29119 (= (contains!821 (toList!787 lt!54088) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!54375)))

(declare-fun b!106277 () Bool)

(declare-fun e!69149 () Bool)

(assert (=> b!106277 (= e!69148 e!69149)))

(declare-fun res!52816 () Bool)

(assert (=> b!106277 (=> res!52816 e!69149)))

(assert (=> b!106277 (= res!52816 (= (h!2209 (toList!787 lt!54088)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106278 () Bool)

(assert (=> b!106278 (= e!69149 (contains!821 (t!5690 (toList!787 lt!54088)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29119 res!52815) b!106277))

(assert (= (and b!106277 (not res!52816)) b!106278))

(declare-fun m!118615 () Bool)

(assert (=> d!29119 m!118615))

(declare-fun m!118617 () Bool)

(assert (=> d!29119 m!118617))

(declare-fun m!118619 () Bool)

(assert (=> b!106278 m!118619))

(assert (=> b!105787 d!29119))

(declare-fun d!29121 () Bool)

(declare-fun res!52817 () Bool)

(declare-fun e!69150 () Bool)

(assert (=> d!29121 (=> res!52817 e!69150)))

(assert (=> d!29121 (= res!52817 (and ((_ is Cons!1612) (toList!787 lt!53720)) (= (_1!1201 (h!2209 (toList!787 lt!53720))) (_1!1201 lt!53606))))))

(assert (=> d!29121 (= (containsKey!158 (toList!787 lt!53720) (_1!1201 lt!53606)) e!69150)))

(declare-fun b!106279 () Bool)

(declare-fun e!69151 () Bool)

(assert (=> b!106279 (= e!69150 e!69151)))

(declare-fun res!52818 () Bool)

(assert (=> b!106279 (=> (not res!52818) (not e!69151))))

(assert (=> b!106279 (= res!52818 (and (or (not ((_ is Cons!1612) (toList!787 lt!53720))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53720))) (_1!1201 lt!53606))) ((_ is Cons!1612) (toList!787 lt!53720)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53720))) (_1!1201 lt!53606))))))

(declare-fun b!106280 () Bool)

(assert (=> b!106280 (= e!69151 (containsKey!158 (t!5690 (toList!787 lt!53720)) (_1!1201 lt!53606)))))

(assert (= (and d!29121 (not res!52817)) b!106279))

(assert (= (and b!106279 res!52818) b!106280))

(declare-fun m!118621 () Bool)

(assert (=> b!106280 m!118621))

(assert (=> d!28877 d!29121))

(declare-fun d!29123 () Bool)

(declare-fun e!69152 () Bool)

(assert (=> d!29123 e!69152))

(declare-fun res!52819 () Bool)

(assert (=> d!29123 (=> res!52819 e!69152)))

(declare-fun lt!54376 () Bool)

(assert (=> d!29123 (= res!52819 (not lt!54376))))

(declare-fun lt!54379 () Bool)

(assert (=> d!29123 (= lt!54376 lt!54379)))

(declare-fun lt!54378 () Unit!3218)

(declare-fun e!69153 () Unit!3218)

(assert (=> d!29123 (= lt!54378 e!69153)))

(declare-fun c!18568 () Bool)

(assert (=> d!29123 (= c!18568 lt!54379)))

(assert (=> d!29123 (= lt!54379 (containsKey!158 (toList!787 lt!53909) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29123 (= (contains!820 lt!53909 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54376)))

(declare-fun b!106281 () Bool)

(declare-fun lt!54377 () Unit!3218)

(assert (=> b!106281 (= e!69153 lt!54377)))

(assert (=> b!106281 (= lt!54377 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53909) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106281 (isDefined!108 (getValueByKey!154 (toList!787 lt!53909) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106282 () Bool)

(declare-fun Unit!3265 () Unit!3218)

(assert (=> b!106282 (= e!69153 Unit!3265)))

(declare-fun b!106283 () Bool)

(assert (=> b!106283 (= e!69152 (isDefined!108 (getValueByKey!154 (toList!787 lt!53909) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29123 c!18568) b!106281))

(assert (= (and d!29123 (not c!18568)) b!106282))

(assert (= (and d!29123 (not res!52819)) b!106283))

(declare-fun m!118623 () Bool)

(assert (=> d!29123 m!118623))

(declare-fun m!118625 () Bool)

(assert (=> b!106281 m!118625))

(assert (=> b!106281 m!118579))

(assert (=> b!106281 m!118579))

(declare-fun m!118627 () Bool)

(assert (=> b!106281 m!118627))

(assert (=> b!106283 m!118579))

(assert (=> b!106283 m!118579))

(assert (=> b!106283 m!118627))

(assert (=> bm!11140 d!29123))

(declare-fun d!29125 () Bool)

(assert (not d!29125))

(assert (=> b!105672 d!29125))

(declare-fun b!106284 () Bool)

(declare-fun e!69156 () ListLongMap!1543)

(assert (=> b!106284 (= e!69156 (ListLongMap!1544 Nil!1613))))

(declare-fun d!29127 () Bool)

(declare-fun e!69160 () Bool)

(assert (=> d!29127 e!69160))

(declare-fun res!52822 () Bool)

(assert (=> d!29127 (=> (not res!52822) (not e!69160))))

(declare-fun lt!54384 () ListLongMap!1543)

(assert (=> d!29127 (= res!52822 (not (contains!820 lt!54384 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29127 (= lt!54384 e!69156)))

(declare-fun c!18569 () Bool)

(assert (=> d!29127 (= c!18569 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!29127 (validMask!0 (mask!6726 (v!2883 (underlying!355 thiss!992))))))

(assert (=> d!29127 (= (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))) lt!54384)))

(declare-fun b!106285 () Bool)

(declare-fun e!69157 () Bool)

(declare-fun e!69155 () Bool)

(assert (=> b!106285 (= e!69157 e!69155)))

(assert (=> b!106285 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun res!52820 () Bool)

(assert (=> b!106285 (= res!52820 (contains!820 lt!54384 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!106285 (=> (not res!52820) (not e!69155))))

(declare-fun b!106286 () Bool)

(declare-fun e!69158 () Bool)

(assert (=> b!106286 (= e!69157 e!69158)))

(declare-fun c!18571 () Bool)

(assert (=> b!106286 (= c!18571 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!106287 () Bool)

(declare-fun e!69154 () ListLongMap!1543)

(assert (=> b!106287 (= e!69156 e!69154)))

(declare-fun c!18572 () Bool)

(assert (=> b!106287 (= c!18572 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!106288 () Bool)

(declare-fun lt!54386 () Unit!3218)

(declare-fun lt!54382 () Unit!3218)

(assert (=> b!106288 (= lt!54386 lt!54382)))

(declare-fun lt!54383 () ListLongMap!1543)

(declare-fun lt!54380 () (_ BitVec 64))

(declare-fun lt!54385 () V!3217)

(declare-fun lt!54381 () (_ BitVec 64))

(assert (=> b!106288 (not (contains!820 (+!135 lt!54383 (tuple2!2381 lt!54380 lt!54385)) lt!54381))))

(assert (=> b!106288 (= lt!54382 (addStillNotContains!47 lt!54383 lt!54380 lt!54385 lt!54381))))

(assert (=> b!106288 (= lt!54381 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106288 (= lt!54385 (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106288 (= lt!54380 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!11228 () ListLongMap!1543)

(assert (=> b!106288 (= lt!54383 call!11228)))

(assert (=> b!106288 (= e!69154 (+!135 call!11228 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106289 () Bool)

(assert (=> b!106289 (= e!69160 e!69157)))

(declare-fun c!18570 () Bool)

(declare-fun e!69159 () Bool)

(assert (=> b!106289 (= c!18570 e!69159)))

(declare-fun res!52823 () Bool)

(assert (=> b!106289 (=> (not res!52823) (not e!69159))))

(assert (=> b!106289 (= res!52823 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!106290 () Bool)

(assert (=> b!106290 (= e!69158 (isEmpty!374 lt!54384))))

(declare-fun b!106291 () Bool)

(assert (=> b!106291 (= e!69154 call!11228)))

(declare-fun b!106292 () Bool)

(declare-fun res!52821 () Bool)

(assert (=> b!106292 (=> (not res!52821) (not e!69160))))

(assert (=> b!106292 (= res!52821 (not (contains!820 lt!54384 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106293 () Bool)

(assert (=> b!106293 (= e!69159 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!106293 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!11225 () Bool)

(assert (=> bm!11225 (= call!11228 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!106294 () Bool)

(assert (=> b!106294 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> b!106294 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2307 (_values!2564 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> b!106294 (= e!69155 (= (apply!98 lt!54384 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106295 () Bool)

(assert (=> b!106295 (= e!69158 (= lt!54384 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (_values!2564 (v!2883 (underlying!355 thiss!992))) (mask!6726 (v!2883 (underlying!355 thiss!992))) (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) (minValue!2456 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!29127 c!18569) b!106284))

(assert (= (and d!29127 (not c!18569)) b!106287))

(assert (= (and b!106287 c!18572) b!106288))

(assert (= (and b!106287 (not c!18572)) b!106291))

(assert (= (or b!106288 b!106291) bm!11225))

(assert (= (and d!29127 res!52822) b!106292))

(assert (= (and b!106292 res!52821) b!106289))

(assert (= (and b!106289 res!52823) b!106293))

(assert (= (and b!106289 c!18570) b!106285))

(assert (= (and b!106289 (not c!18570)) b!106286))

(assert (= (and b!106285 res!52820) b!106294))

(assert (= (and b!106286 c!18571) b!106295))

(assert (= (and b!106286 (not c!18571)) b!106290))

(declare-fun b_lambda!4739 () Bool)

(assert (=> (not b_lambda!4739) (not b!106288)))

(assert (=> b!106288 t!5686))

(declare-fun b_and!6541 () Bool)

(assert (= b_and!6537 (and (=> t!5686 result!3439) b_and!6541)))

(assert (=> b!106288 t!5688))

(declare-fun b_and!6543 () Bool)

(assert (= b_and!6539 (and (=> t!5688 result!3443) b_and!6543)))

(declare-fun b_lambda!4741 () Bool)

(assert (=> (not b_lambda!4741) (not b!106294)))

(assert (=> b!106294 t!5686))

(declare-fun b_and!6545 () Bool)

(assert (= b_and!6541 (and (=> t!5686 result!3439) b_and!6545)))

(assert (=> b!106294 t!5688))

(declare-fun b_and!6547 () Bool)

(assert (= b_and!6543 (and (=> t!5688 result!3443) b_and!6547)))

(declare-fun m!118629 () Bool)

(assert (=> d!29127 m!118629))

(assert (=> d!29127 m!116871))

(declare-fun m!118631 () Bool)

(assert (=> b!106285 m!118631))

(assert (=> b!106285 m!118631))

(declare-fun m!118633 () Bool)

(assert (=> b!106285 m!118633))

(assert (=> b!106293 m!118631))

(assert (=> b!106293 m!118631))

(declare-fun m!118635 () Bool)

(assert (=> b!106293 m!118635))

(assert (=> b!106294 m!116921))

(declare-fun m!118637 () Bool)

(assert (=> b!106294 m!118637))

(assert (=> b!106294 m!116921))

(declare-fun m!118639 () Bool)

(assert (=> b!106294 m!118639))

(assert (=> b!106294 m!118637))

(assert (=> b!106294 m!118631))

(declare-fun m!118641 () Bool)

(assert (=> b!106294 m!118641))

(assert (=> b!106294 m!118631))

(declare-fun m!118643 () Bool)

(assert (=> b!106288 m!118643))

(declare-fun m!118645 () Bool)

(assert (=> b!106288 m!118645))

(declare-fun m!118647 () Bool)

(assert (=> b!106288 m!118647))

(assert (=> b!106288 m!116921))

(assert (=> b!106288 m!118637))

(assert (=> b!106288 m!118631))

(declare-fun m!118649 () Bool)

(assert (=> b!106288 m!118649))

(assert (=> b!106288 m!118637))

(assert (=> b!106288 m!116921))

(assert (=> b!106288 m!118639))

(assert (=> b!106288 m!118645))

(declare-fun m!118651 () Bool)

(assert (=> b!106290 m!118651))

(declare-fun m!118653 () Bool)

(assert (=> b!106292 m!118653))

(declare-fun m!118655 () Bool)

(assert (=> b!106295 m!118655))

(assert (=> bm!11225 m!118655))

(assert (=> b!106287 m!118631))

(assert (=> b!106287 m!118631))

(assert (=> b!106287 m!118635))

(assert (=> bm!11163 d!29127))

(declare-fun d!29129 () Bool)

(declare-fun lt!54387 () Bool)

(assert (=> d!29129 (= lt!54387 (select (content!109 lt!54071) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun e!69161 () Bool)

(assert (=> d!29129 (= lt!54387 e!69161)))

(declare-fun res!52824 () Bool)

(assert (=> d!29129 (=> (not res!52824) (not e!69161))))

(assert (=> d!29129 (= res!52824 ((_ is Cons!1612) lt!54071))))

(assert (=> d!29129 (= (contains!821 lt!54071 (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))) lt!54387)))

(declare-fun b!106296 () Bool)

(declare-fun e!69162 () Bool)

(assert (=> b!106296 (= e!69161 e!69162)))

(declare-fun res!52825 () Bool)

(assert (=> b!106296 (=> res!52825 e!69162)))

(assert (=> b!106296 (= res!52825 (= (h!2209 lt!54071) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun b!106297 () Bool)

(assert (=> b!106297 (= e!69162 (contains!821 (t!5690 lt!54071) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(assert (= (and d!29129 res!52824) b!106296))

(assert (= (and b!106296 (not res!52825)) b!106297))

(declare-fun m!118657 () Bool)

(assert (=> d!29129 m!118657))

(declare-fun m!118659 () Bool)

(assert (=> d!29129 m!118659))

(declare-fun m!118661 () Bool)

(assert (=> b!106297 m!118661))

(assert (=> b!105766 d!29129))

(declare-fun d!29131 () Bool)

(assert (=> d!29131 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (getCurrentListMap!464 (_keys!4286 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(assert (=> d!29131 true))

(declare-fun _$5!110 () Unit!3218)

(assert (=> d!29131 (= (choose!663 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3197 lt!53814) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 (defaultEntry!2581 newMap!16)) _$5!110)))

(declare-fun bs!4359 () Bool)

(assert (= bs!4359 d!29131))

(assert (=> bs!4359 m!117143))

(assert (=> bs!4359 m!117143))

(assert (=> bs!4359 m!117429))

(assert (=> bs!4359 m!117169))

(assert (=> bs!4359 m!117431))

(assert (=> d!28731 d!29131))

(declare-fun d!29133 () Bool)

(assert (=> d!29133 (= (validMask!0 (mask!6726 newMap!16)) (and (or (= (mask!6726 newMap!16) #b00000000000000000000000000000111) (= (mask!6726 newMap!16) #b00000000000000000000000000001111) (= (mask!6726 newMap!16) #b00000000000000000000000000011111) (= (mask!6726 newMap!16) #b00000000000000000000000000111111) (= (mask!6726 newMap!16) #b00000000000000000000000001111111) (= (mask!6726 newMap!16) #b00000000000000000000000011111111) (= (mask!6726 newMap!16) #b00000000000000000000000111111111) (= (mask!6726 newMap!16) #b00000000000000000000001111111111) (= (mask!6726 newMap!16) #b00000000000000000000011111111111) (= (mask!6726 newMap!16) #b00000000000000000000111111111111) (= (mask!6726 newMap!16) #b00000000000000000001111111111111) (= (mask!6726 newMap!16) #b00000000000000000011111111111111) (= (mask!6726 newMap!16) #b00000000000000000111111111111111) (= (mask!6726 newMap!16) #b00000000000000001111111111111111) (= (mask!6726 newMap!16) #b00000000000000011111111111111111) (= (mask!6726 newMap!16) #b00000000000000111111111111111111) (= (mask!6726 newMap!16) #b00000000000001111111111111111111) (= (mask!6726 newMap!16) #b00000000000011111111111111111111) (= (mask!6726 newMap!16) #b00000000000111111111111111111111) (= (mask!6726 newMap!16) #b00000000001111111111111111111111) (= (mask!6726 newMap!16) #b00000000011111111111111111111111) (= (mask!6726 newMap!16) #b00000000111111111111111111111111) (= (mask!6726 newMap!16) #b00000001111111111111111111111111) (= (mask!6726 newMap!16) #b00000011111111111111111111111111) (= (mask!6726 newMap!16) #b00000111111111111111111111111111) (= (mask!6726 newMap!16) #b00001111111111111111111111111111) (= (mask!6726 newMap!16) #b00011111111111111111111111111111) (= (mask!6726 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6726 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!28731 d!29133))

(declare-fun d!29135 () Bool)

(assert (=> d!29135 (isDefined!108 (getValueByKey!154 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(declare-fun lt!54388 () Unit!3218)

(assert (=> d!29135 (= lt!54388 (choose!671 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(declare-fun e!69163 () Bool)

(assert (=> d!29135 e!69163))

(declare-fun res!52826 () Bool)

(assert (=> d!29135 (=> (not res!52826) (not e!69163))))

(assert (=> d!29135 (= res!52826 (isStrictlySorted!304 (toList!787 call!11103)))))

(assert (=> d!29135 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))) lt!54388)))

(declare-fun b!106298 () Bool)

(assert (=> b!106298 (= e!69163 (containsKey!158 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(assert (= (and d!29135 res!52826) b!106298))

(assert (=> d!29135 m!117171))

(assert (=> d!29135 m!117417))

(assert (=> d!29135 m!117417))

(assert (=> d!29135 m!117419))

(assert (=> d!29135 m!117171))

(declare-fun m!118663 () Bool)

(assert (=> d!29135 m!118663))

(declare-fun m!118665 () Bool)

(assert (=> d!29135 m!118665))

(assert (=> b!106298 m!117171))

(assert (=> b!106298 m!117413))

(assert (=> b!105595 d!29135))

(assert (=> b!105595 d!28913))

(assert (=> b!105595 d!28915))

(declare-fun d!29137 () Bool)

(declare-fun e!69164 () Bool)

(assert (=> d!29137 e!69164))

(declare-fun res!52828 () Bool)

(assert (=> d!29137 (=> (not res!52828) (not e!69164))))

(declare-fun lt!54392 () ListLongMap!1543)

(assert (=> d!29137 (= res!52828 (contains!820 lt!54392 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun lt!54389 () List!1616)

(assert (=> d!29137 (= lt!54392 (ListLongMap!1544 lt!54389))))

(declare-fun lt!54390 () Unit!3218)

(declare-fun lt!54391 () Unit!3218)

(assert (=> d!29137 (= lt!54390 lt!54391)))

(assert (=> d!29137 (= (getValueByKey!154 lt!54389 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!29137 (= lt!54391 (lemmaContainsTupThenGetReturnValue!73 lt!54389 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!29137 (= lt!54389 (insertStrictlySorted!76 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!29137 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) lt!54392)))

(declare-fun b!106299 () Bool)

(declare-fun res!52827 () Bool)

(assert (=> b!106299 (=> (not res!52827) (not e!69164))))

(assert (=> b!106299 (= res!52827 (= (getValueByKey!154 (toList!787 lt!54392) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!106300 () Bool)

(assert (=> b!106300 (= e!69164 (contains!821 (toList!787 lt!54392) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(assert (= (and d!29137 res!52828) b!106299))

(assert (= (and b!106299 res!52827) b!106300))

(declare-fun m!118667 () Bool)

(assert (=> d!29137 m!118667))

(declare-fun m!118669 () Bool)

(assert (=> d!29137 m!118669))

(declare-fun m!118671 () Bool)

(assert (=> d!29137 m!118671))

(declare-fun m!118673 () Bool)

(assert (=> d!29137 m!118673))

(declare-fun m!118675 () Bool)

(assert (=> b!106299 m!118675))

(declare-fun m!118677 () Bool)

(assert (=> b!106300 m!118677))

(assert (=> b!105603 d!29137))

(assert (=> b!105603 d!28725))

(declare-fun b!106301 () Bool)

(declare-fun e!69167 () Unit!3218)

(declare-fun Unit!3266 () Unit!3218)

(assert (=> b!106301 (= e!69167 Unit!3266)))

(declare-fun b!106302 () Bool)

(declare-fun e!69166 () ListLongMap!1543)

(declare-fun call!11233 () ListLongMap!1543)

(assert (=> b!106302 (= e!69166 call!11233)))

(declare-fun b!106303 () Bool)

(declare-fun e!69165 () Bool)

(declare-fun lt!54394 () ListLongMap!1543)

(assert (=> b!106303 (= e!69165 (= (apply!98 lt!54394 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!106304 () Bool)

(declare-fun c!18578 () Bool)

(assert (=> b!106304 (= c!18578 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69169 () ListLongMap!1543)

(assert (=> b!106304 (= e!69169 e!69166)))

(declare-fun b!106305 () Bool)

(declare-fun e!69171 () Bool)

(declare-fun e!69174 () Bool)

(assert (=> b!106305 (= e!69171 e!69174)))

(declare-fun res!52837 () Bool)

(declare-fun call!11229 () Bool)

(assert (=> b!106305 (= res!52837 call!11229)))

(assert (=> b!106305 (=> (not res!52837) (not e!69174))))

(declare-fun bm!11226 () Bool)

(declare-fun call!11235 () ListLongMap!1543)

(declare-fun call!11234 () ListLongMap!1543)

(assert (=> bm!11226 (= call!11235 call!11234)))

(declare-fun b!106306 () Bool)

(declare-fun e!69170 () Bool)

(assert (=> b!106306 (= e!69170 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106307 () Bool)

(declare-fun res!52836 () Bool)

(declare-fun e!69173 () Bool)

(assert (=> b!106307 (=> (not res!52836) (not e!69173))))

(declare-fun e!69176 () Bool)

(assert (=> b!106307 (= res!52836 e!69176)))

(declare-fun res!52831 () Bool)

(assert (=> b!106307 (=> res!52831 e!69176)))

(declare-fun e!69175 () Bool)

(assert (=> b!106307 (= res!52831 (not e!69175))))

(declare-fun res!52830 () Bool)

(assert (=> b!106307 (=> (not res!52830) (not e!69175))))

(assert (=> b!106307 (= res!52830 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun bm!11227 () Bool)

(declare-fun call!11230 () ListLongMap!1543)

(assert (=> bm!11227 (= call!11233 call!11230)))

(declare-fun bm!11228 () Bool)

(declare-fun call!11231 () ListLongMap!1543)

(assert (=> bm!11228 (= call!11234 call!11231)))

(declare-fun b!106308 () Bool)

(declare-fun e!69177 () Bool)

(assert (=> b!106308 (= e!69177 (= (apply!98 lt!54394 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106308 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))))))

(assert (=> b!106308 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106309 () Bool)

(declare-fun res!52833 () Bool)

(assert (=> b!106309 (=> (not res!52833) (not e!69173))))

(assert (=> b!106309 (= res!52833 e!69171)))

(declare-fun c!18577 () Bool)

(assert (=> b!106309 (= c!18577 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106310 () Bool)

(assert (=> b!106310 (= e!69169 call!11233)))

(declare-fun b!106311 () Bool)

(declare-fun e!69168 () Bool)

(declare-fun call!11232 () Bool)

(assert (=> b!106311 (= e!69168 (not call!11232))))

(declare-fun bm!11229 () Bool)

(assert (=> bm!11229 (= call!11231 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!106312 () Bool)

(assert (=> b!106312 (= e!69174 (= (apply!98 lt!54394 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!106313 () Bool)

(assert (=> b!106313 (= e!69166 call!11235)))

(declare-fun b!106314 () Bool)

(assert (=> b!106314 (= e!69168 e!69165)))

(declare-fun res!52835 () Bool)

(assert (=> b!106314 (= res!52835 call!11232)))

(assert (=> b!106314 (=> (not res!52835) (not e!69165))))

(declare-fun bm!11230 () Bool)

(declare-fun c!18576 () Bool)

(declare-fun c!18573 () Bool)

(assert (=> bm!11230 (= call!11230 (+!135 (ite c!18573 call!11231 (ite c!18576 call!11234 call!11235)) (ite (or c!18573 c!18576) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun bm!11231 () Bool)

(assert (=> bm!11231 (= call!11232 (contains!820 lt!54394 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106315 () Bool)

(assert (=> b!106315 (= e!69175 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106316 () Bool)

(declare-fun e!69172 () ListLongMap!1543)

(assert (=> b!106316 (= e!69172 e!69169)))

(assert (=> b!106316 (= c!18576 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106317 () Bool)

(assert (=> b!106317 (= e!69171 (not call!11229))))

(declare-fun b!106318 () Bool)

(assert (=> b!106318 (= e!69173 e!69168)))

(declare-fun c!18574 () Bool)

(assert (=> b!106318 (= c!18574 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106319 () Bool)

(declare-fun lt!54396 () Unit!3218)

(assert (=> b!106319 (= e!69167 lt!54396)))

(declare-fun lt!54398 () ListLongMap!1543)

(assert (=> b!106319 (= lt!54398 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54409 () (_ BitVec 64))

(assert (=> b!106319 (= lt!54409 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54402 () (_ BitVec 64))

(assert (=> b!106319 (= lt!54402 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54408 () Unit!3218)

(assert (=> b!106319 (= lt!54408 (addStillContains!74 lt!54398 lt!54409 (zeroValue!2456 newMap!16) lt!54402))))

(assert (=> b!106319 (contains!820 (+!135 lt!54398 (tuple2!2381 lt!54409 (zeroValue!2456 newMap!16))) lt!54402)))

(declare-fun lt!54405 () Unit!3218)

(assert (=> b!106319 (= lt!54405 lt!54408)))

(declare-fun lt!54411 () ListLongMap!1543)

(assert (=> b!106319 (= lt!54411 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54410 () (_ BitVec 64))

(assert (=> b!106319 (= lt!54410 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54395 () (_ BitVec 64))

(assert (=> b!106319 (= lt!54395 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54399 () Unit!3218)

(assert (=> b!106319 (= lt!54399 (addApplyDifferent!74 lt!54411 lt!54410 (minValue!2456 newMap!16) lt!54395))))

(assert (=> b!106319 (= (apply!98 (+!135 lt!54411 (tuple2!2381 lt!54410 (minValue!2456 newMap!16))) lt!54395) (apply!98 lt!54411 lt!54395))))

(declare-fun lt!54400 () Unit!3218)

(assert (=> b!106319 (= lt!54400 lt!54399)))

(declare-fun lt!54414 () ListLongMap!1543)

(assert (=> b!106319 (= lt!54414 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54404 () (_ BitVec 64))

(assert (=> b!106319 (= lt!54404 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54413 () (_ BitVec 64))

(assert (=> b!106319 (= lt!54413 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54397 () Unit!3218)

(assert (=> b!106319 (= lt!54397 (addApplyDifferent!74 lt!54414 lt!54404 (zeroValue!2456 newMap!16) lt!54413))))

(assert (=> b!106319 (= (apply!98 (+!135 lt!54414 (tuple2!2381 lt!54404 (zeroValue!2456 newMap!16))) lt!54413) (apply!98 lt!54414 lt!54413))))

(declare-fun lt!54401 () Unit!3218)

(assert (=> b!106319 (= lt!54401 lt!54397)))

(declare-fun lt!54403 () ListLongMap!1543)

(assert (=> b!106319 (= lt!54403 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54393 () (_ BitVec 64))

(assert (=> b!106319 (= lt!54393 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54407 () (_ BitVec 64))

(assert (=> b!106319 (= lt!54407 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106319 (= lt!54396 (addApplyDifferent!74 lt!54403 lt!54393 (minValue!2456 newMap!16) lt!54407))))

(assert (=> b!106319 (= (apply!98 (+!135 lt!54403 (tuple2!2381 lt!54393 (minValue!2456 newMap!16))) lt!54407) (apply!98 lt!54403 lt!54407))))

(declare-fun b!106320 () Bool)

(assert (=> b!106320 (= e!69176 e!69177)))

(declare-fun res!52832 () Bool)

(assert (=> b!106320 (=> (not res!52832) (not e!69177))))

(assert (=> b!106320 (= res!52832 (contains!820 lt!54394 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106320 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106321 () Bool)

(assert (=> b!106321 (= e!69172 (+!135 call!11230 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun d!29139 () Bool)

(assert (=> d!29139 e!69173))

(declare-fun res!52834 () Bool)

(assert (=> d!29139 (=> (not res!52834) (not e!69173))))

(assert (=> d!29139 (= res!52834 (or (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))))

(declare-fun lt!54412 () ListLongMap!1543)

(assert (=> d!29139 (= lt!54394 lt!54412)))

(declare-fun lt!54406 () Unit!3218)

(assert (=> d!29139 (= lt!54406 e!69167)))

(declare-fun c!18575 () Bool)

(assert (=> d!29139 (= c!18575 e!69170)))

(declare-fun res!52829 () Bool)

(assert (=> d!29139 (=> (not res!52829) (not e!69170))))

(assert (=> d!29139 (= res!52829 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!29139 (= lt!54412 e!69172)))

(assert (=> d!29139 (= c!18573 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29139 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29139 (= (getCurrentListMap!464 (_keys!4286 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54394)))

(declare-fun bm!11232 () Bool)

(assert (=> bm!11232 (= call!11229 (contains!820 lt!54394 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29139 c!18573) b!106321))

(assert (= (and d!29139 (not c!18573)) b!106316))

(assert (= (and b!106316 c!18576) b!106310))

(assert (= (and b!106316 (not c!18576)) b!106304))

(assert (= (and b!106304 c!18578) b!106302))

(assert (= (and b!106304 (not c!18578)) b!106313))

(assert (= (or b!106302 b!106313) bm!11226))

(assert (= (or b!106310 bm!11226) bm!11228))

(assert (= (or b!106310 b!106302) bm!11227))

(assert (= (or b!106321 bm!11228) bm!11229))

(assert (= (or b!106321 bm!11227) bm!11230))

(assert (= (and d!29139 res!52829) b!106306))

(assert (= (and d!29139 c!18575) b!106319))

(assert (= (and d!29139 (not c!18575)) b!106301))

(assert (= (and d!29139 res!52834) b!106307))

(assert (= (and b!106307 res!52830) b!106315))

(assert (= (and b!106307 (not res!52831)) b!106320))

(assert (= (and b!106320 res!52832) b!106308))

(assert (= (and b!106307 res!52836) b!106309))

(assert (= (and b!106309 c!18577) b!106305))

(assert (= (and b!106309 (not c!18577)) b!106317))

(assert (= (and b!106305 res!52837) b!106312))

(assert (= (or b!106305 b!106317) bm!11232))

(assert (= (and b!106309 res!52833) b!106318))

(assert (= (and b!106318 c!18574) b!106314))

(assert (= (and b!106318 (not c!18574)) b!106311))

(assert (= (and b!106314 res!52835) b!106303))

(assert (= (or b!106314 b!106311) bm!11231))

(declare-fun b_lambda!4743 () Bool)

(assert (=> (not b_lambda!4743) (not b!106308)))

(assert (=> b!106308 t!5701))

(declare-fun b_and!6549 () Bool)

(assert (= b_and!6545 (and (=> t!5701 result!3459) b_and!6549)))

(assert (=> b!106308 t!5703))

(declare-fun b_and!6551 () Bool)

(assert (= b_and!6547 (and (=> t!5703 result!3461) b_and!6551)))

(declare-fun m!118679 () Bool)

(assert (=> bm!11231 m!118679))

(declare-fun m!118681 () Bool)

(assert (=> b!106321 m!118681))

(assert (=> b!106308 m!117291))

(assert (=> b!106308 m!117265))

(declare-fun m!118683 () Bool)

(assert (=> b!106308 m!118683))

(assert (=> b!106308 m!117265))

(declare-fun m!118685 () Bool)

(assert (=> b!106308 m!118685))

(assert (=> b!106308 m!118685))

(assert (=> b!106308 m!117291))

(declare-fun m!118687 () Bool)

(assert (=> b!106308 m!118687))

(declare-fun m!118689 () Bool)

(assert (=> bm!11229 m!118689))

(declare-fun m!118691 () Bool)

(assert (=> bm!11232 m!118691))

(assert (=> b!106306 m!117265))

(assert (=> b!106306 m!117265))

(assert (=> b!106306 m!117267))

(declare-fun m!118693 () Bool)

(assert (=> b!106312 m!118693))

(assert (=> b!106320 m!117265))

(assert (=> b!106320 m!117265))

(declare-fun m!118695 () Bool)

(assert (=> b!106320 m!118695))

(declare-fun m!118697 () Bool)

(assert (=> b!106319 m!118697))

(declare-fun m!118699 () Bool)

(assert (=> b!106319 m!118699))

(declare-fun m!118701 () Bool)

(assert (=> b!106319 m!118701))

(declare-fun m!118703 () Bool)

(assert (=> b!106319 m!118703))

(declare-fun m!118705 () Bool)

(assert (=> b!106319 m!118705))

(declare-fun m!118707 () Bool)

(assert (=> b!106319 m!118707))

(declare-fun m!118709 () Bool)

(assert (=> b!106319 m!118709))

(declare-fun m!118711 () Bool)

(assert (=> b!106319 m!118711))

(declare-fun m!118713 () Bool)

(assert (=> b!106319 m!118713))

(declare-fun m!118715 () Bool)

(assert (=> b!106319 m!118715))

(assert (=> b!106319 m!118689))

(declare-fun m!118717 () Bool)

(assert (=> b!106319 m!118717))

(declare-fun m!118719 () Bool)

(assert (=> b!106319 m!118719))

(assert (=> b!106319 m!118719))

(declare-fun m!118721 () Bool)

(assert (=> b!106319 m!118721))

(declare-fun m!118723 () Bool)

(assert (=> b!106319 m!118723))

(assert (=> b!106319 m!118705))

(assert (=> b!106319 m!118709))

(declare-fun m!118725 () Bool)

(assert (=> b!106319 m!118725))

(assert (=> b!106319 m!117265))

(assert (=> b!106319 m!118699))

(declare-fun m!118727 () Bool)

(assert (=> bm!11230 m!118727))

(declare-fun m!118729 () Bool)

(assert (=> b!106303 m!118729))

(assert (=> d!29139 m!117277))

(assert (=> b!106315 m!117265))

(assert (=> b!106315 m!117265))

(assert (=> b!106315 m!117267))

(assert (=> b!105603 d!29139))

(declare-fun d!29141 () Bool)

(declare-fun e!69178 () Bool)

(assert (=> d!29141 e!69178))

(declare-fun res!52838 () Bool)

(assert (=> d!29141 (=> res!52838 e!69178)))

(declare-fun lt!54415 () Bool)

(assert (=> d!29141 (= res!52838 (not lt!54415))))

(declare-fun lt!54418 () Bool)

(assert (=> d!29141 (= lt!54415 lt!54418)))

(declare-fun lt!54417 () Unit!3218)

(declare-fun e!69179 () Unit!3218)

(assert (=> d!29141 (= lt!54417 e!69179)))

(declare-fun c!18579 () Bool)

(assert (=> d!29141 (= c!18579 lt!54418)))

(assert (=> d!29141 (= lt!54418 (containsKey!158 (toList!787 lt!54233) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!29141 (= (contains!820 lt!54233 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54415)))

(declare-fun b!106322 () Bool)

(declare-fun lt!54416 () Unit!3218)

(assert (=> b!106322 (= e!69179 lt!54416)))

(assert (=> b!106322 (= lt!54416 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54233) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> b!106322 (isDefined!108 (getValueByKey!154 (toList!787 lt!54233) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106323 () Bool)

(declare-fun Unit!3267 () Unit!3218)

(assert (=> b!106323 (= e!69179 Unit!3267)))

(declare-fun b!106324 () Bool)

(assert (=> b!106324 (= e!69178 (isDefined!108 (getValueByKey!154 (toList!787 lt!54233) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!29141 c!18579) b!106322))

(assert (= (and d!29141 (not c!18579)) b!106323))

(assert (= (and d!29141 (not res!52838)) b!106324))

(declare-fun m!118731 () Bool)

(assert (=> d!29141 m!118731))

(declare-fun m!118733 () Bool)

(assert (=> b!106322 m!118733))

(assert (=> b!106322 m!118017))

(assert (=> b!106322 m!118017))

(declare-fun m!118735 () Bool)

(assert (=> b!106322 m!118735))

(assert (=> b!106324 m!118017))

(assert (=> b!106324 m!118017))

(assert (=> b!106324 m!118735))

(assert (=> d!28889 d!29141))

(declare-fun b!106327 () Bool)

(declare-fun e!69181 () Option!160)

(assert (=> b!106327 (= e!69181 (getValueByKey!154 (t!5690 lt!54230) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106326 () Bool)

(declare-fun e!69180 () Option!160)

(assert (=> b!106326 (= e!69180 e!69181)))

(declare-fun c!18581 () Bool)

(assert (=> b!106326 (= c!18581 (and ((_ is Cons!1612) lt!54230) (not (= (_1!1201 (h!2209 lt!54230)) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun d!29143 () Bool)

(declare-fun c!18580 () Bool)

(assert (=> d!29143 (= c!18580 (and ((_ is Cons!1612) lt!54230) (= (_1!1201 (h!2209 lt!54230)) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29143 (= (getValueByKey!154 lt!54230 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69180)))

(declare-fun b!106328 () Bool)

(assert (=> b!106328 (= e!69181 None!158)))

(declare-fun b!106325 () Bool)

(assert (=> b!106325 (= e!69180 (Some!159 (_2!1201 (h!2209 lt!54230))))))

(assert (= (and d!29143 c!18580) b!106325))

(assert (= (and d!29143 (not c!18580)) b!106326))

(assert (= (and b!106326 c!18581) b!106327))

(assert (= (and b!106326 (not c!18581)) b!106328))

(declare-fun m!118737 () Bool)

(assert (=> b!106327 m!118737))

(assert (=> d!28889 d!29143))

(declare-fun d!29145 () Bool)

(assert (=> d!29145 (= (getValueByKey!154 lt!54230 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54419 () Unit!3218)

(assert (=> d!29145 (= lt!54419 (choose!667 lt!54230 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun e!69182 () Bool)

(assert (=> d!29145 e!69182))

(declare-fun res!52839 () Bool)

(assert (=> d!29145 (=> (not res!52839) (not e!69182))))

(assert (=> d!29145 (= res!52839 (isStrictlySorted!304 lt!54230))))

(assert (=> d!29145 (= (lemmaContainsTupThenGetReturnValue!73 lt!54230 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54419)))

(declare-fun b!106329 () Bool)

(declare-fun res!52840 () Bool)

(assert (=> b!106329 (=> (not res!52840) (not e!69182))))

(assert (=> b!106329 (= res!52840 (containsKey!158 lt!54230 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106330 () Bool)

(assert (=> b!106330 (= e!69182 (contains!821 lt!54230 (tuple2!2381 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!29145 res!52839) b!106329))

(assert (= (and b!106329 res!52840) b!106330))

(assert (=> d!29145 m!118011))

(declare-fun m!118739 () Bool)

(assert (=> d!29145 m!118739))

(declare-fun m!118741 () Bool)

(assert (=> d!29145 m!118741))

(declare-fun m!118743 () Bool)

(assert (=> b!106329 m!118743))

(declare-fun m!118745 () Bool)

(assert (=> b!106330 m!118745))

(assert (=> d!28889 d!29145))

(declare-fun b!106331 () Bool)

(declare-fun c!18584 () Bool)

(assert (=> b!106331 (= c!18584 (and ((_ is Cons!1612) (toList!787 lt!53604)) (bvsgt (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun e!69186 () List!1616)

(declare-fun e!69185 () List!1616)

(assert (=> b!106331 (= e!69186 e!69185)))

(declare-fun b!106332 () Bool)

(declare-fun e!69184 () List!1616)

(declare-fun call!11236 () List!1616)

(assert (=> b!106332 (= e!69184 call!11236)))

(declare-fun b!106333 () Bool)

(declare-fun e!69187 () Bool)

(declare-fun lt!54420 () List!1616)

(assert (=> b!106333 (= e!69187 (contains!821 lt!54420 (tuple2!2381 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106334 () Bool)

(declare-fun res!52841 () Bool)

(assert (=> b!106334 (=> (not res!52841) (not e!69187))))

(assert (=> b!106334 (= res!52841 (containsKey!158 lt!54420 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106335 () Bool)

(declare-fun call!11237 () List!1616)

(assert (=> b!106335 (= e!69185 call!11237)))

(declare-fun b!106336 () Bool)

(assert (=> b!106336 (= e!69185 call!11237)))

(declare-fun b!106337 () Bool)

(assert (=> b!106337 (= e!69184 e!69186)))

(declare-fun c!18585 () Bool)

(assert (=> b!106337 (= c!18585 (and ((_ is Cons!1612) (toList!787 lt!53604)) (= (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun bm!11233 () Bool)

(declare-fun call!11238 () List!1616)

(assert (=> bm!11233 (= call!11238 call!11236)))

(declare-fun b!106338 () Bool)

(assert (=> b!106338 (= e!69186 call!11238)))

(declare-fun b!106339 () Bool)

(declare-fun e!69183 () List!1616)

(assert (=> b!106339 (= e!69183 (insertStrictlySorted!76 (t!5690 (toList!787 lt!53604)) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun bm!11235 () Bool)

(assert (=> bm!11235 (= call!11237 call!11238)))

(declare-fun b!106340 () Bool)

(assert (=> b!106340 (= e!69183 (ite c!18585 (t!5690 (toList!787 lt!53604)) (ite c!18584 (Cons!1612 (h!2209 (toList!787 lt!53604)) (t!5690 (toList!787 lt!53604))) Nil!1613)))))

(declare-fun c!18582 () Bool)

(declare-fun bm!11234 () Bool)

(assert (=> bm!11234 (= call!11236 ($colon$colon!80 e!69183 (ite c!18582 (h!2209 (toList!787 lt!53604)) (tuple2!2381 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18583 () Bool)

(assert (=> bm!11234 (= c!18583 c!18582)))

(declare-fun d!29147 () Bool)

(assert (=> d!29147 e!69187))

(declare-fun res!52842 () Bool)

(assert (=> d!29147 (=> (not res!52842) (not e!69187))))

(assert (=> d!29147 (= res!52842 (isStrictlySorted!304 lt!54420))))

(assert (=> d!29147 (= lt!54420 e!69184)))

(assert (=> d!29147 (= c!18582 (and ((_ is Cons!1612) (toList!787 lt!53604)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29147 (isStrictlySorted!304 (toList!787 lt!53604))))

(assert (=> d!29147 (= (insertStrictlySorted!76 (toList!787 lt!53604) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54420)))

(assert (= (and d!29147 c!18582) b!106332))

(assert (= (and d!29147 (not c!18582)) b!106337))

(assert (= (and b!106337 c!18585) b!106338))

(assert (= (and b!106337 (not c!18585)) b!106331))

(assert (= (and b!106331 c!18584) b!106335))

(assert (= (and b!106331 (not c!18584)) b!106336))

(assert (= (or b!106335 b!106336) bm!11235))

(assert (= (or b!106338 bm!11235) bm!11233))

(assert (= (or b!106332 bm!11233) bm!11234))

(assert (= (and bm!11234 c!18583) b!106339))

(assert (= (and bm!11234 (not c!18583)) b!106340))

(assert (= (and d!29147 res!52842) b!106334))

(assert (= (and b!106334 res!52841) b!106333))

(declare-fun m!118747 () Bool)

(assert (=> b!106333 m!118747))

(declare-fun m!118749 () Bool)

(assert (=> d!29147 m!118749))

(assert (=> d!29147 m!117943))

(declare-fun m!118751 () Bool)

(assert (=> b!106334 m!118751))

(declare-fun m!118753 () Bool)

(assert (=> b!106339 m!118753))

(declare-fun m!118755 () Bool)

(assert (=> bm!11234 m!118755))

(assert (=> d!28889 d!29147))

(assert (=> b!105572 d!28979))

(declare-fun d!29149 () Bool)

(declare-fun c!18588 () Bool)

(assert (=> d!29149 (= c!18588 ((_ is Nil!1613) (toList!787 lt!53720)))))

(declare-fun e!69190 () (InoxSet tuple2!2380))

(assert (=> d!29149 (= (content!109 (toList!787 lt!53720)) e!69190)))

(declare-fun b!106345 () Bool)

(assert (=> b!106345 (= e!69190 ((as const (Array tuple2!2380 Bool)) false))))

(declare-fun b!106346 () Bool)

(assert (=> b!106346 (= e!69190 ((_ map or) (store ((as const (Array tuple2!2380 Bool)) false) (h!2209 (toList!787 lt!53720)) true) (content!109 (t!5690 (toList!787 lt!53720)))))))

(assert (= (and d!29149 c!18588) b!106345))

(assert (= (and d!29149 (not c!18588)) b!106346))

(declare-fun m!118757 () Bool)

(assert (=> b!106346 m!118757))

(declare-fun m!118759 () Bool)

(assert (=> b!106346 m!118759))

(assert (=> d!28735 d!29149))

(assert (=> d!28713 d!29133))

(declare-fun b!106349 () Bool)

(declare-fun e!69192 () Option!160)

(assert (=> b!106349 (= e!69192 (getValueByKey!154 (t!5690 (toList!787 lt!54233)) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106348 () Bool)

(declare-fun e!69191 () Option!160)

(assert (=> b!106348 (= e!69191 e!69192)))

(declare-fun c!18590 () Bool)

(assert (=> b!106348 (= c!18590 (and ((_ is Cons!1612) (toList!787 lt!54233)) (not (= (_1!1201 (h!2209 (toList!787 lt!54233))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun d!29151 () Bool)

(declare-fun c!18589 () Bool)

(assert (=> d!29151 (= c!18589 (and ((_ is Cons!1612) (toList!787 lt!54233)) (= (_1!1201 (h!2209 (toList!787 lt!54233))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29151 (= (getValueByKey!154 (toList!787 lt!54233) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69191)))

(declare-fun b!106350 () Bool)

(assert (=> b!106350 (= e!69192 None!158)))

(declare-fun b!106347 () Bool)

(assert (=> b!106347 (= e!69191 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54233)))))))

(assert (= (and d!29151 c!18589) b!106347))

(assert (= (and d!29151 (not c!18589)) b!106348))

(assert (= (and b!106348 c!18590) b!106349))

(assert (= (and b!106348 (not c!18590)) b!106350))

(declare-fun m!118761 () Bool)

(assert (=> b!106349 m!118761))

(assert (=> b!105932 d!29151))

(assert (=> bm!11147 d!28863))

(declare-fun d!29153 () Bool)

(assert (=> d!29153 (= (isDefined!108 (getValueByKey!154 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))) (not (isEmpty!376 (getValueByKey!154 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))))

(declare-fun bs!4360 () Bool)

(assert (= bs!4360 d!29153))

(assert (=> bs!4360 m!117955))

(declare-fun m!118763 () Bool)

(assert (=> bs!4360 m!118763))

(assert (=> b!105908 d!29153))

(declare-fun e!69194 () Option!160)

(declare-fun b!106353 () Bool)

(assert (=> b!106353 (= e!69194 (getValueByKey!154 (t!5690 (toList!787 e!68596)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!106352 () Bool)

(declare-fun e!69193 () Option!160)

(assert (=> b!106352 (= e!69193 e!69194)))

(declare-fun c!18592 () Bool)

(assert (=> b!106352 (= c!18592 (and ((_ is Cons!1612) (toList!787 e!68596)) (not (= (_1!1201 (h!2209 (toList!787 e!68596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))))

(declare-fun c!18591 () Bool)

(declare-fun d!29155 () Bool)

(assert (=> d!29155 (= c!18591 (and ((_ is Cons!1612) (toList!787 e!68596)) (= (_1!1201 (h!2209 (toList!787 e!68596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (=> d!29155 (= (getValueByKey!154 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) e!69193)))

(declare-fun b!106354 () Bool)

(assert (=> b!106354 (= e!69194 None!158)))

(declare-fun b!106351 () Bool)

(assert (=> b!106351 (= e!69193 (Some!159 (_2!1201 (h!2209 (toList!787 e!68596)))))))

(assert (= (and d!29155 c!18591) b!106351))

(assert (= (and d!29155 (not c!18591)) b!106352))

(assert (= (and b!106352 c!18592) b!106353))

(assert (= (and b!106352 (not c!18592)) b!106354))

(assert (=> b!106353 m!116875))

(declare-fun m!118765 () Bool)

(assert (=> b!106353 m!118765))

(assert (=> b!105908 d!29155))

(assert (=> d!28757 d!28751))

(declare-fun d!29157 () Bool)

(declare-fun e!69195 () Bool)

(assert (=> d!29157 e!69195))

(declare-fun res!52843 () Bool)

(assert (=> d!29157 (=> res!52843 e!69195)))

(declare-fun lt!54421 () Bool)

(assert (=> d!29157 (= res!52843 (not lt!54421))))

(declare-fun lt!54424 () Bool)

(assert (=> d!29157 (= lt!54421 lt!54424)))

(declare-fun lt!54423 () Unit!3218)

(declare-fun e!69196 () Unit!3218)

(assert (=> d!29157 (= lt!54423 e!69196)))

(declare-fun c!18593 () Bool)

(assert (=> d!29157 (= c!18593 lt!54424)))

(assert (=> d!29157 (= lt!54424 (containsKey!158 (toList!787 lt!53895) lt!53894))))

(assert (=> d!29157 (= (contains!820 lt!53895 lt!53894) lt!54421)))

(declare-fun b!106355 () Bool)

(declare-fun lt!54422 () Unit!3218)

(assert (=> b!106355 (= e!69196 lt!54422)))

(assert (=> b!106355 (= lt!54422 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53895) lt!53894))))

(assert (=> b!106355 (isDefined!108 (getValueByKey!154 (toList!787 lt!53895) lt!53894))))

(declare-fun b!106356 () Bool)

(declare-fun Unit!3268 () Unit!3218)

(assert (=> b!106356 (= e!69196 Unit!3268)))

(declare-fun b!106357 () Bool)

(assert (=> b!106357 (= e!69195 (isDefined!108 (getValueByKey!154 (toList!787 lt!53895) lt!53894)))))

(assert (= (and d!29157 c!18593) b!106355))

(assert (= (and d!29157 (not c!18593)) b!106356))

(assert (= (and d!29157 (not res!52843)) b!106357))

(declare-fun m!118767 () Bool)

(assert (=> d!29157 m!118767))

(declare-fun m!118769 () Bool)

(assert (=> b!106355 m!118769))

(assert (=> b!106355 m!117525))

(assert (=> b!106355 m!117525))

(declare-fun m!118771 () Bool)

(assert (=> b!106355 m!118771))

(assert (=> b!106357 m!117525))

(assert (=> b!106357 m!117525))

(assert (=> b!106357 m!118771))

(assert (=> d!28757 d!29157))

(declare-fun d!29159 () Bool)

(assert (=> d!29159 (= (apply!98 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53894) (apply!98 lt!53895 lt!53894))))

(assert (=> d!29159 true))

(declare-fun _$34!889 () Unit!3218)

(assert (=> d!29159 (= (choose!664 lt!53895 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53894) _$34!889)))

(declare-fun bs!4361 () Bool)

(assert (= bs!4361 d!29159))

(assert (=> bs!4361 m!117239))

(assert (=> bs!4361 m!117239))

(assert (=> bs!4361 m!117241))

(assert (=> bs!4361 m!117233))

(assert (=> d!28757 d!29159))

(assert (=> d!28757 d!28755))

(assert (=> d!28757 d!28773))

(assert (=> b!105962 d!28733))

(declare-fun d!29161 () Bool)

(declare-fun lt!54425 () Bool)

(assert (=> d!29161 (= lt!54425 (select (content!109 (t!5690 (toList!787 lt!53720))) lt!53606))))

(declare-fun e!69197 () Bool)

(assert (=> d!29161 (= lt!54425 e!69197)))

(declare-fun res!52844 () Bool)

(assert (=> d!29161 (=> (not res!52844) (not e!69197))))

(assert (=> d!29161 (= res!52844 ((_ is Cons!1612) (t!5690 (toList!787 lt!53720))))))

(assert (=> d!29161 (= (contains!821 (t!5690 (toList!787 lt!53720)) lt!53606) lt!54425)))

(declare-fun b!106358 () Bool)

(declare-fun e!69198 () Bool)

(assert (=> b!106358 (= e!69197 e!69198)))

(declare-fun res!52845 () Bool)

(assert (=> b!106358 (=> res!52845 e!69198)))

(assert (=> b!106358 (= res!52845 (= (h!2209 (t!5690 (toList!787 lt!53720))) lt!53606))))

(declare-fun b!106359 () Bool)

(assert (=> b!106359 (= e!69198 (contains!821 (t!5690 (t!5690 (toList!787 lt!53720))) lt!53606))))

(assert (= (and d!29161 res!52844) b!106358))

(assert (= (and b!106358 (not res!52845)) b!106359))

(assert (=> d!29161 m!118759))

(declare-fun m!118773 () Bool)

(assert (=> d!29161 m!118773))

(declare-fun m!118775 () Bool)

(assert (=> b!106359 m!118775))

(assert (=> b!105615 d!29161))

(declare-fun d!29163 () Bool)

(declare-fun res!52846 () Bool)

(declare-fun e!69199 () Bool)

(assert (=> d!29163 (=> res!52846 e!69199)))

(assert (=> d!29163 (= res!52846 (= (select (arr!2050 (_keys!4286 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!29163 (= (arrayContainsKey!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!69199)))

(declare-fun b!106360 () Bool)

(declare-fun e!69200 () Bool)

(assert (=> b!106360 (= e!69199 e!69200)))

(declare-fun res!52847 () Bool)

(assert (=> b!106360 (=> (not res!52847) (not e!69200))))

(assert (=> b!106360 (= res!52847 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106361 () Bool)

(assert (=> b!106361 (= e!69200 (arrayContainsKey!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29163 (not res!52846)) b!106360))

(assert (= (and b!106360 res!52847) b!106361))

(assert (=> d!29163 m!118287))

(assert (=> b!106361 m!116875))

(declare-fun m!118777 () Bool)

(assert (=> b!106361 m!118777))

(assert (=> b!105886 d!29163))

(declare-fun b!106362 () Bool)

(declare-fun e!69202 () (_ BitVec 32))

(declare-fun call!11239 () (_ BitVec 32))

(assert (=> b!106362 (= e!69202 (bvadd #b00000000000000000000000000000001 call!11239))))

(declare-fun b!106363 () Bool)

(declare-fun e!69201 () (_ BitVec 32))

(assert (=> b!106363 (= e!69201 #b00000000000000000000000000000000)))

(declare-fun d!29165 () Bool)

(declare-fun lt!54426 () (_ BitVec 32))

(assert (=> d!29165 (and (bvsge lt!54426 #b00000000000000000000000000000000) (bvsle lt!54426 (bvsub (size!2306 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000)))))

(assert (=> d!29165 (= lt!54426 e!69201)))

(declare-fun c!18594 () Bool)

(assert (=> d!29165 (= c!18594 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))))))

(assert (=> d!29165 (and (bvsle #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2306 (_keys!4286 (_2!1202 lt!53812))) (size!2306 (_keys!4286 (_2!1202 lt!53812)))))))

(assert (=> d!29165 (= (arrayCountValidKeys!0 (_keys!4286 (_2!1202 lt!53812)) #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))) lt!54426)))

(declare-fun b!106364 () Bool)

(assert (=> b!106364 (= e!69201 e!69202)))

(declare-fun c!18595 () Bool)

(assert (=> b!106364 (= c!18595 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000)))))

(declare-fun b!106365 () Bool)

(assert (=> b!106365 (= e!69202 call!11239)))

(declare-fun bm!11236 () Bool)

(assert (=> bm!11236 (= call!11239 (arrayCountValidKeys!0 (_keys!4286 (_2!1202 lt!53812)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (_2!1202 lt!53812)))))))

(assert (= (and d!29165 c!18594) b!106363))

(assert (= (and d!29165 (not c!18594)) b!106364))

(assert (= (and b!106364 c!18595) b!106362))

(assert (= (and b!106364 (not c!18595)) b!106365))

(assert (= (or b!106362 b!106365) bm!11236))

(assert (=> b!106364 m!118373))

(assert (=> b!106364 m!118373))

(assert (=> b!106364 m!118375))

(declare-fun m!118779 () Bool)

(assert (=> bm!11236 m!118779))

(assert (=> b!105684 d!29165))

(declare-fun b!106368 () Bool)

(declare-fun e!69204 () Option!160)

(assert (=> b!106368 (= e!69204 (getValueByKey!154 (t!5690 (t!5690 lt!53709)) (_1!1201 lt!53599)))))

(declare-fun b!106367 () Bool)

(declare-fun e!69203 () Option!160)

(assert (=> b!106367 (= e!69203 e!69204)))

(declare-fun c!18597 () Bool)

(assert (=> b!106367 (= c!18597 (and ((_ is Cons!1612) (t!5690 lt!53709)) (not (= (_1!1201 (h!2209 (t!5690 lt!53709))) (_1!1201 lt!53599)))))))

(declare-fun d!29167 () Bool)

(declare-fun c!18596 () Bool)

(assert (=> d!29167 (= c!18596 (and ((_ is Cons!1612) (t!5690 lt!53709)) (= (_1!1201 (h!2209 (t!5690 lt!53709))) (_1!1201 lt!53599))))))

(assert (=> d!29167 (= (getValueByKey!154 (t!5690 lt!53709) (_1!1201 lt!53599)) e!69203)))

(declare-fun b!106369 () Bool)

(assert (=> b!106369 (= e!69204 None!158)))

(declare-fun b!106366 () Bool)

(assert (=> b!106366 (= e!69203 (Some!159 (_2!1201 (h!2209 (t!5690 lt!53709)))))))

(assert (= (and d!29167 c!18596) b!106366))

(assert (= (and d!29167 (not c!18596)) b!106367))

(assert (= (and b!106367 c!18597) b!106368))

(assert (= (and b!106367 (not c!18597)) b!106369))

(declare-fun m!118781 () Bool)

(assert (=> b!106368 m!118781))

(assert (=> b!105736 d!29167))

(declare-fun d!29169 () Bool)

(declare-fun res!52848 () Bool)

(declare-fun e!69205 () Bool)

(assert (=> d!29169 (=> res!52848 e!69205)))

(assert (=> d!29169 (= res!52848 (and ((_ is Cons!1612) (toList!787 lt!53716)) (= (_1!1201 (h!2209 (toList!787 lt!53716))) (_1!1201 lt!53599))))))

(assert (=> d!29169 (= (containsKey!158 (toList!787 lt!53716) (_1!1201 lt!53599)) e!69205)))

(declare-fun b!106370 () Bool)

(declare-fun e!69206 () Bool)

(assert (=> b!106370 (= e!69205 e!69206)))

(declare-fun res!52849 () Bool)

(assert (=> b!106370 (=> (not res!52849) (not e!69206))))

(assert (=> b!106370 (= res!52849 (and (or (not ((_ is Cons!1612) (toList!787 lt!53716))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53716))) (_1!1201 lt!53599))) ((_ is Cons!1612) (toList!787 lt!53716)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53716))) (_1!1201 lt!53599))))))

(declare-fun b!106371 () Bool)

(assert (=> b!106371 (= e!69206 (containsKey!158 (t!5690 (toList!787 lt!53716)) (_1!1201 lt!53599)))))

(assert (= (and d!29169 (not res!52848)) b!106370))

(assert (= (and b!106370 res!52849) b!106371))

(declare-fun m!118783 () Bool)

(assert (=> b!106371 m!118783))

(assert (=> d!28867 d!29169))

(declare-fun d!29171 () Bool)

(declare-fun e!69207 () Bool)

(assert (=> d!29171 e!69207))

(declare-fun res!52850 () Bool)

(assert (=> d!29171 (=> res!52850 e!69207)))

(declare-fun lt!54427 () Bool)

(assert (=> d!29171 (= res!52850 (not lt!54427))))

(declare-fun lt!54430 () Bool)

(assert (=> d!29171 (= lt!54427 lt!54430)))

(declare-fun lt!54429 () Unit!3218)

(declare-fun e!69208 () Unit!3218)

(assert (=> d!29171 (= lt!54429 e!69208)))

(declare-fun c!18598 () Bool)

(assert (=> d!29171 (= c!18598 lt!54430)))

(assert (=> d!29171 (= lt!54430 (containsKey!158 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(assert (=> d!29171 (= (contains!820 (getCurrentListMap!464 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))) lt!54427)))

(declare-fun b!106372 () Bool)

(declare-fun lt!54428 () Unit!3218)

(assert (=> b!106372 (= e!69208 lt!54428)))

(assert (=> b!106372 (= lt!54428 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(assert (=> b!106372 (isDefined!108 (getValueByKey!154 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(declare-fun b!106373 () Bool)

(declare-fun Unit!3269 () Unit!3218)

(assert (=> b!106373 (= e!69208 Unit!3269)))

(declare-fun b!106374 () Bool)

(assert (=> b!106374 (= e!69207 (isDefined!108 (getValueByKey!154 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814)))))))

(assert (= (and d!29171 c!18598) b!106372))

(assert (= (and d!29171 (not c!18598)) b!106373))

(assert (= (and d!29171 (not res!52850)) b!106374))

(assert (=> d!29171 m!117171))

(declare-fun m!118785 () Bool)

(assert (=> d!29171 m!118785))

(assert (=> b!106372 m!117171))

(declare-fun m!118787 () Bool)

(assert (=> b!106372 m!118787))

(assert (=> b!106372 m!117171))

(declare-fun m!118789 () Bool)

(assert (=> b!106372 m!118789))

(assert (=> b!106372 m!118789))

(declare-fun m!118791 () Bool)

(assert (=> b!106372 m!118791))

(assert (=> b!106374 m!117171))

(assert (=> b!106374 m!118789))

(assert (=> b!106374 m!118789))

(assert (=> b!106374 m!118791))

(assert (=> b!105600 d!29171))

(declare-fun b!106375 () Bool)

(declare-fun e!69211 () Unit!3218)

(declare-fun Unit!3270 () Unit!3218)

(assert (=> b!106375 (= e!69211 Unit!3270)))

(declare-fun b!106376 () Bool)

(declare-fun e!69210 () ListLongMap!1543)

(declare-fun call!11244 () ListLongMap!1543)

(assert (=> b!106376 (= e!69210 call!11244)))

(declare-fun b!106377 () Bool)

(declare-fun e!69209 () Bool)

(declare-fun lt!54432 () ListLongMap!1543)

(assert (=> b!106377 (= e!69209 (= (apply!98 lt!54432 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!106378 () Bool)

(declare-fun c!18604 () Bool)

(assert (=> b!106378 (= c!18604 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69213 () ListLongMap!1543)

(assert (=> b!106378 (= e!69213 e!69210)))

(declare-fun b!106379 () Bool)

(declare-fun e!69215 () Bool)

(declare-fun e!69218 () Bool)

(assert (=> b!106379 (= e!69215 e!69218)))

(declare-fun res!52859 () Bool)

(declare-fun call!11240 () Bool)

(assert (=> b!106379 (= res!52859 call!11240)))

(assert (=> b!106379 (=> (not res!52859) (not e!69218))))

(declare-fun bm!11237 () Bool)

(declare-fun call!11246 () ListLongMap!1543)

(declare-fun call!11245 () ListLongMap!1543)

(assert (=> bm!11237 (= call!11246 call!11245)))

(declare-fun b!106380 () Bool)

(declare-fun e!69214 () Bool)

(assert (=> b!106380 (= e!69214 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106381 () Bool)

(declare-fun res!52858 () Bool)

(declare-fun e!69217 () Bool)

(assert (=> b!106381 (=> (not res!52858) (not e!69217))))

(declare-fun e!69220 () Bool)

(assert (=> b!106381 (= res!52858 e!69220)))

(declare-fun res!52853 () Bool)

(assert (=> b!106381 (=> res!52853 e!69220)))

(declare-fun e!69219 () Bool)

(assert (=> b!106381 (= res!52853 (not e!69219))))

(declare-fun res!52852 () Bool)

(assert (=> b!106381 (=> (not res!52852) (not e!69219))))

(assert (=> b!106381 (= res!52852 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun bm!11238 () Bool)

(declare-fun call!11241 () ListLongMap!1543)

(assert (=> bm!11238 (= call!11244 call!11241)))

(declare-fun bm!11239 () Bool)

(declare-fun call!11242 () ListLongMap!1543)

(assert (=> bm!11239 (= call!11245 call!11242)))

(declare-fun b!106382 () Bool)

(declare-fun e!69221 () Bool)

(assert (=> b!106382 (= e!69221 (= (apply!98 lt!54432 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 lt!53795) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106382 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 lt!53795)))))

(assert (=> b!106382 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106383 () Bool)

(declare-fun res!52855 () Bool)

(assert (=> b!106383 (=> (not res!52855) (not e!69217))))

(assert (=> b!106383 (= res!52855 e!69215)))

(declare-fun c!18603 () Bool)

(assert (=> b!106383 (= c!18603 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106384 () Bool)

(assert (=> b!106384 (= e!69213 call!11244)))

(declare-fun b!106385 () Bool)

(declare-fun e!69212 () Bool)

(declare-fun call!11243 () Bool)

(assert (=> b!106385 (= e!69212 (not call!11243))))

(declare-fun bm!11240 () Bool)

(assert (=> bm!11240 (= call!11242 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!106386 () Bool)

(assert (=> b!106386 (= e!69218 (= (apply!98 lt!54432 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!106387 () Bool)

(assert (=> b!106387 (= e!69210 call!11246)))

(declare-fun b!106388 () Bool)

(assert (=> b!106388 (= e!69212 e!69209)))

(declare-fun res!52857 () Bool)

(assert (=> b!106388 (= res!52857 call!11243)))

(assert (=> b!106388 (=> (not res!52857) (not e!69209))))

(declare-fun bm!11241 () Bool)

(declare-fun c!18599 () Bool)

(declare-fun c!18602 () Bool)

(assert (=> bm!11241 (= call!11241 (+!135 (ite c!18599 call!11242 (ite c!18602 call!11245 call!11246)) (ite (or c!18599 c!18602) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun bm!11242 () Bool)

(assert (=> bm!11242 (= call!11243 (contains!820 lt!54432 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106389 () Bool)

(assert (=> b!106389 (= e!69219 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106390 () Bool)

(declare-fun e!69216 () ListLongMap!1543)

(assert (=> b!106390 (= e!69216 e!69213)))

(assert (=> b!106390 (= c!18602 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106391 () Bool)

(assert (=> b!106391 (= e!69215 (not call!11240))))

(declare-fun b!106392 () Bool)

(assert (=> b!106392 (= e!69217 e!69212)))

(declare-fun c!18600 () Bool)

(assert (=> b!106392 (= c!18600 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106393 () Bool)

(declare-fun lt!54434 () Unit!3218)

(assert (=> b!106393 (= e!69211 lt!54434)))

(declare-fun lt!54436 () ListLongMap!1543)

(assert (=> b!106393 (= lt!54436 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54447 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54447 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54440 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54440 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54446 () Unit!3218)

(assert (=> b!106393 (= lt!54446 (addStillContains!74 lt!54436 lt!54447 (zeroValue!2456 newMap!16) lt!54440))))

(assert (=> b!106393 (contains!820 (+!135 lt!54436 (tuple2!2381 lt!54447 (zeroValue!2456 newMap!16))) lt!54440)))

(declare-fun lt!54443 () Unit!3218)

(assert (=> b!106393 (= lt!54443 lt!54446)))

(declare-fun lt!54449 () ListLongMap!1543)

(assert (=> b!106393 (= lt!54449 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54448 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54448 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54433 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54433 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54437 () Unit!3218)

(assert (=> b!106393 (= lt!54437 (addApplyDifferent!74 lt!54449 lt!54448 (minValue!2456 newMap!16) lt!54433))))

(assert (=> b!106393 (= (apply!98 (+!135 lt!54449 (tuple2!2381 lt!54448 (minValue!2456 newMap!16))) lt!54433) (apply!98 lt!54449 lt!54433))))

(declare-fun lt!54438 () Unit!3218)

(assert (=> b!106393 (= lt!54438 lt!54437)))

(declare-fun lt!54452 () ListLongMap!1543)

(assert (=> b!106393 (= lt!54452 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54442 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54442 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54451 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54451 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54435 () Unit!3218)

(assert (=> b!106393 (= lt!54435 (addApplyDifferent!74 lt!54452 lt!54442 (zeroValue!2456 newMap!16) lt!54451))))

(assert (=> b!106393 (= (apply!98 (+!135 lt!54452 (tuple2!2381 lt!54442 (zeroValue!2456 newMap!16))) lt!54451) (apply!98 lt!54452 lt!54451))))

(declare-fun lt!54439 () Unit!3218)

(assert (=> b!106393 (= lt!54439 lt!54435)))

(declare-fun lt!54441 () ListLongMap!1543)

(assert (=> b!106393 (= lt!54441 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54431 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54431 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54445 () (_ BitVec 64))

(assert (=> b!106393 (= lt!54445 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106393 (= lt!54434 (addApplyDifferent!74 lt!54441 lt!54431 (minValue!2456 newMap!16) lt!54445))))

(assert (=> b!106393 (= (apply!98 (+!135 lt!54441 (tuple2!2381 lt!54431 (minValue!2456 newMap!16))) lt!54445) (apply!98 lt!54441 lt!54445))))

(declare-fun b!106394 () Bool)

(assert (=> b!106394 (= e!69220 e!69221)))

(declare-fun res!52854 () Bool)

(assert (=> b!106394 (=> (not res!52854) (not e!69221))))

(assert (=> b!106394 (= res!52854 (contains!820 lt!54432 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106394 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106395 () Bool)

(assert (=> b!106395 (= e!69216 (+!135 call!11241 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun d!29173 () Bool)

(assert (=> d!29173 e!69217))

(declare-fun res!52856 () Bool)

(assert (=> d!29173 (=> (not res!52856) (not e!69217))))

(assert (=> d!29173 (= res!52856 (or (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))))

(declare-fun lt!54450 () ListLongMap!1543)

(assert (=> d!29173 (= lt!54432 lt!54450)))

(declare-fun lt!54444 () Unit!3218)

(assert (=> d!29173 (= lt!54444 e!69211)))

(declare-fun c!18601 () Bool)

(assert (=> d!29173 (= c!18601 e!69214)))

(declare-fun res!52851 () Bool)

(assert (=> d!29173 (=> (not res!52851) (not e!69214))))

(assert (=> d!29173 (= res!52851 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!29173 (= lt!54450 e!69216)))

(assert (=> d!29173 (= c!18599 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29173 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29173 (= (getCurrentListMap!464 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54432)))

(declare-fun bm!11243 () Bool)

(assert (=> bm!11243 (= call!11240 (contains!820 lt!54432 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29173 c!18599) b!106395))

(assert (= (and d!29173 (not c!18599)) b!106390))

(assert (= (and b!106390 c!18602) b!106384))

(assert (= (and b!106390 (not c!18602)) b!106378))

(assert (= (and b!106378 c!18604) b!106376))

(assert (= (and b!106378 (not c!18604)) b!106387))

(assert (= (or b!106376 b!106387) bm!11237))

(assert (= (or b!106384 bm!11237) bm!11239))

(assert (= (or b!106384 b!106376) bm!11238))

(assert (= (or b!106395 bm!11239) bm!11240))

(assert (= (or b!106395 bm!11238) bm!11241))

(assert (= (and d!29173 res!52851) b!106380))

(assert (= (and d!29173 c!18601) b!106393))

(assert (= (and d!29173 (not c!18601)) b!106375))

(assert (= (and d!29173 res!52856) b!106381))

(assert (= (and b!106381 res!52852) b!106389))

(assert (= (and b!106381 (not res!52853)) b!106394))

(assert (= (and b!106394 res!52854) b!106382))

(assert (= (and b!106381 res!52858) b!106383))

(assert (= (and b!106383 c!18603) b!106379))

(assert (= (and b!106383 (not c!18603)) b!106391))

(assert (= (and b!106379 res!52859) b!106386))

(assert (= (or b!106379 b!106391) bm!11243))

(assert (= (and b!106383 res!52855) b!106392))

(assert (= (and b!106392 c!18600) b!106388))

(assert (= (and b!106392 (not c!18600)) b!106385))

(assert (= (and b!106388 res!52857) b!106377))

(assert (= (or b!106388 b!106385) bm!11242))

(declare-fun b_lambda!4745 () Bool)

(assert (=> (not b_lambda!4745) (not b!106382)))

(assert (=> b!106382 t!5701))

(declare-fun b_and!6553 () Bool)

(assert (= b_and!6549 (and (=> t!5701 result!3459) b_and!6553)))

(assert (=> b!106382 t!5703))

(declare-fun b_and!6555 () Bool)

(assert (= b_and!6551 (and (=> t!5703 result!3461) b_and!6555)))

(declare-fun m!118793 () Bool)

(assert (=> bm!11242 m!118793))

(declare-fun m!118795 () Bool)

(assert (=> b!106395 m!118795))

(assert (=> b!106382 m!117291))

(assert (=> b!106382 m!117265))

(declare-fun m!118797 () Bool)

(assert (=> b!106382 m!118797))

(assert (=> b!106382 m!117265))

(declare-fun m!118799 () Bool)

(assert (=> b!106382 m!118799))

(assert (=> b!106382 m!118799))

(assert (=> b!106382 m!117291))

(declare-fun m!118801 () Bool)

(assert (=> b!106382 m!118801))

(declare-fun m!118803 () Bool)

(assert (=> bm!11240 m!118803))

(declare-fun m!118805 () Bool)

(assert (=> bm!11243 m!118805))

(assert (=> b!106380 m!117265))

(assert (=> b!106380 m!117265))

(assert (=> b!106380 m!117267))

(declare-fun m!118807 () Bool)

(assert (=> b!106386 m!118807))

(assert (=> b!106394 m!117265))

(assert (=> b!106394 m!117265))

(declare-fun m!118809 () Bool)

(assert (=> b!106394 m!118809))

(declare-fun m!118811 () Bool)

(assert (=> b!106393 m!118811))

(declare-fun m!118813 () Bool)

(assert (=> b!106393 m!118813))

(declare-fun m!118815 () Bool)

(assert (=> b!106393 m!118815))

(declare-fun m!118817 () Bool)

(assert (=> b!106393 m!118817))

(declare-fun m!118819 () Bool)

(assert (=> b!106393 m!118819))

(declare-fun m!118821 () Bool)

(assert (=> b!106393 m!118821))

(declare-fun m!118823 () Bool)

(assert (=> b!106393 m!118823))

(declare-fun m!118825 () Bool)

(assert (=> b!106393 m!118825))

(declare-fun m!118827 () Bool)

(assert (=> b!106393 m!118827))

(declare-fun m!118829 () Bool)

(assert (=> b!106393 m!118829))

(assert (=> b!106393 m!118803))

(declare-fun m!118831 () Bool)

(assert (=> b!106393 m!118831))

(declare-fun m!118833 () Bool)

(assert (=> b!106393 m!118833))

(assert (=> b!106393 m!118833))

(declare-fun m!118835 () Bool)

(assert (=> b!106393 m!118835))

(declare-fun m!118837 () Bool)

(assert (=> b!106393 m!118837))

(assert (=> b!106393 m!118819))

(assert (=> b!106393 m!118823))

(declare-fun m!118839 () Bool)

(assert (=> b!106393 m!118839))

(assert (=> b!106393 m!117265))

(assert (=> b!106393 m!118813))

(declare-fun m!118841 () Bool)

(assert (=> bm!11241 m!118841))

(declare-fun m!118843 () Bool)

(assert (=> b!106377 m!118843))

(assert (=> d!29173 m!117277))

(assert (=> b!106389 m!117265))

(assert (=> b!106389 m!117265))

(assert (=> b!106389 m!117267))

(assert (=> b!105600 d!29173))

(declare-fun d!29175 () Bool)

(assert (=> d!29175 (= (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53876)) (v!2889 (getValueByKey!154 (toList!787 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53876)))))

(assert (=> d!28767 d!29175))

(declare-fun b!106398 () Bool)

(declare-fun e!69223 () Option!160)

(assert (=> b!106398 (= e!69223 (getValueByKey!154 (t!5690 (toList!787 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) lt!53876))))

(declare-fun b!106397 () Bool)

(declare-fun e!69222 () Option!160)

(assert (=> b!106397 (= e!69222 e!69223)))

(declare-fun c!18606 () Bool)

(assert (=> b!106397 (= c!18606 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) (not (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53876))))))

(declare-fun c!18605 () Bool)

(declare-fun d!29177 () Bool)

(assert (=> d!29177 (= c!18605 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53876)))))

(assert (=> d!29177 (= (getValueByKey!154 (toList!787 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53876) e!69222)))

(declare-fun b!106399 () Bool)

(assert (=> b!106399 (= e!69223 None!158)))

(declare-fun b!106396 () Bool)

(assert (=> b!106396 (= e!69222 (Some!159 (_2!1201 (h!2209 (toList!787 (+!135 lt!53892 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))))

(assert (= (and d!29177 c!18605) b!106396))

(assert (= (and d!29177 (not c!18605)) b!106397))

(assert (= (and b!106397 c!18606) b!106398))

(assert (= (and b!106397 (not c!18606)) b!106399))

(declare-fun m!118845 () Bool)

(assert (=> b!106398 m!118845))

(assert (=> d!28767 d!29177))

(assert (=> bm!11159 d!28919))

(declare-fun d!29179 () Bool)

(declare-fun res!52860 () Bool)

(declare-fun e!69224 () Bool)

(assert (=> d!29179 (=> (not res!52860) (not e!69224))))

(assert (=> d!29179 (= res!52860 (simpleValid!74 (_2!1202 lt!54165)))))

(assert (=> d!29179 (= (valid!422 (_2!1202 lt!54165)) e!69224)))

(declare-fun b!106400 () Bool)

(declare-fun res!52861 () Bool)

(assert (=> b!106400 (=> (not res!52861) (not e!69224))))

(assert (=> b!106400 (= res!52861 (= (arrayCountValidKeys!0 (_keys!4286 (_2!1202 lt!54165)) #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!54165)))) (_size!498 (_2!1202 lt!54165))))))

(declare-fun b!106401 () Bool)

(declare-fun res!52862 () Bool)

(assert (=> b!106401 (=> (not res!52862) (not e!69224))))

(assert (=> b!106401 (= res!52862 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4286 (_2!1202 lt!54165)) (mask!6726 (_2!1202 lt!54165))))))

(declare-fun b!106402 () Bool)

(assert (=> b!106402 (= e!69224 (arrayNoDuplicates!0 (_keys!4286 (_2!1202 lt!54165)) #b00000000000000000000000000000000 Nil!1612))))

(assert (= (and d!29179 res!52860) b!106400))

(assert (= (and b!106400 res!52861) b!106401))

(assert (= (and b!106401 res!52862) b!106402))

(declare-fun m!118847 () Bool)

(assert (=> d!29179 m!118847))

(declare-fun m!118849 () Bool)

(assert (=> b!106400 m!118849))

(declare-fun m!118851 () Bool)

(assert (=> b!106401 m!118851))

(declare-fun m!118853 () Bool)

(assert (=> b!106402 m!118853))

(assert (=> b!105832 d!29179))

(assert (=> d!28909 d!28843))

(assert (=> d!28909 d!28845))

(declare-fun d!29181 () Bool)

(assert (=> d!29181 (isDefined!108 (getValueByKey!154 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!29181 true))

(declare-fun _$12!353 () Unit!3218)

(assert (=> d!29181 (= (choose!671 (toList!787 lt!53596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) _$12!353)))

(declare-fun bs!4362 () Bool)

(assert (= bs!4362 d!29181))

(assert (=> bs!4362 m!116875))

(assert (=> bs!4362 m!117137))

(assert (=> bs!4362 m!117137))

(assert (=> bs!4362 m!117139))

(assert (=> d!28909 d!29181))

(declare-fun d!29183 () Bool)

(declare-fun res!52863 () Bool)

(declare-fun e!69225 () Bool)

(assert (=> d!29183 (=> res!52863 e!69225)))

(assert (=> d!29183 (= res!52863 (or ((_ is Nil!1613) (toList!787 lt!53596)) ((_ is Nil!1613) (t!5690 (toList!787 lt!53596)))))))

(assert (=> d!29183 (= (isStrictlySorted!304 (toList!787 lt!53596)) e!69225)))

(declare-fun b!106403 () Bool)

(declare-fun e!69226 () Bool)

(assert (=> b!106403 (= e!69225 e!69226)))

(declare-fun res!52864 () Bool)

(assert (=> b!106403 (=> (not res!52864) (not e!69226))))

(assert (=> b!106403 (= res!52864 (bvslt (_1!1201 (h!2209 (toList!787 lt!53596))) (_1!1201 (h!2209 (t!5690 (toList!787 lt!53596))))))))

(declare-fun b!106404 () Bool)

(assert (=> b!106404 (= e!69226 (isStrictlySorted!304 (t!5690 (toList!787 lt!53596))))))

(assert (= (and d!29183 (not res!52863)) b!106403))

(assert (= (and b!106403 res!52864) b!106404))

(declare-fun m!118855 () Bool)

(assert (=> b!106404 m!118855))

(assert (=> d!28909 d!29183))

(declare-fun b!106405 () Bool)

(declare-fun e!69228 () (_ BitVec 32))

(declare-fun call!11247 () (_ BitVec 32))

(assert (=> b!106405 (= e!69228 (bvadd #b00000000000000000000000000000001 call!11247))))

(declare-fun b!106406 () Bool)

(declare-fun e!69227 () (_ BitVec 32))

(assert (=> b!106406 (= e!69227 #b00000000000000000000000000000000)))

(declare-fun d!29185 () Bool)

(declare-fun lt!54453 () (_ BitVec 32))

(assert (=> d!29185 (and (bvsge lt!54453 #b00000000000000000000000000000000) (bvsle lt!54453 (bvsub (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!29185 (= lt!54453 e!69227)))

(declare-fun c!18607 () Bool)

(assert (=> d!29185 (= c!18607 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!29185 (and (bvsle #b00000000000000000000000000000000 (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (=> d!29185 (= (arrayCountValidKeys!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000 (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))) lt!54453)))

(declare-fun b!106407 () Bool)

(assert (=> b!106407 (= e!69227 e!69228)))

(declare-fun c!18608 () Bool)

(assert (=> b!106407 (= c!18608 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!106408 () Bool)

(assert (=> b!106408 (= e!69228 call!11247)))

(declare-fun bm!11244 () Bool)

(assert (=> bm!11244 (= call!11247 (arrayCountValidKeys!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!29185 c!18607) b!106406))

(assert (= (and d!29185 (not c!18607)) b!106407))

(assert (= (and b!106407 c!18608) b!106405))

(assert (= (and b!106407 (not c!18608)) b!106408))

(assert (= (or b!106405 b!106408) bm!11244))

(assert (=> b!106407 m!118381))

(assert (=> b!106407 m!118381))

(assert (=> b!106407 m!118383))

(declare-fun m!118857 () Bool)

(assert (=> bm!11244 m!118857))

(assert (=> b!105875 d!29185))

(declare-fun d!29187 () Bool)

(assert (=> d!29187 (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!54454 () Unit!3218)

(assert (=> d!29187 (= lt!54454 (choose!671 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!69229 () Bool)

(assert (=> d!29187 e!69229))

(declare-fun res!52865 () Bool)

(assert (=> d!29187 (=> (not res!52865) (not e!69229))))

(assert (=> d!29187 (= res!52865 (isStrictlySorted!304 (toList!787 lt!53875)))))

(assert (=> d!29187 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54454)))

(declare-fun b!106409 () Bool)

(assert (=> b!106409 (= e!69229 (containsKey!158 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29187 res!52865) b!106409))

(assert (=> d!29187 m!117049))

(assert (=> d!29187 m!117445))

(assert (=> d!29187 m!117445))

(assert (=> d!29187 m!117447))

(assert (=> d!29187 m!117049))

(declare-fun m!118859 () Bool)

(assert (=> d!29187 m!118859))

(declare-fun m!118861 () Bool)

(assert (=> d!29187 m!118861))

(assert (=> b!106409 m!117049))

(assert (=> b!106409 m!117441))

(assert (=> b!105616 d!29187))

(assert (=> b!105616 d!28975))

(assert (=> b!105616 d!28977))

(declare-fun d!29189 () Bool)

(declare-fun e!69230 () Bool)

(assert (=> d!29189 e!69230))

(declare-fun res!52866 () Bool)

(assert (=> d!29189 (=> res!52866 e!69230)))

(declare-fun lt!54455 () Bool)

(assert (=> d!29189 (= res!52866 (not lt!54455))))

(declare-fun lt!54458 () Bool)

(assert (=> d!29189 (= lt!54455 lt!54458)))

(declare-fun lt!54457 () Unit!3218)

(declare-fun e!69231 () Unit!3218)

(assert (=> d!29189 (= lt!54457 e!69231)))

(declare-fun c!18609 () Bool)

(assert (=> d!29189 (= c!18609 lt!54458)))

(assert (=> d!29189 (= lt!54458 (containsKey!158 (toList!787 lt!53909) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29189 (= (contains!820 lt!53909 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) lt!54455)))

(declare-fun b!106410 () Bool)

(declare-fun lt!54456 () Unit!3218)

(assert (=> b!106410 (= e!69231 lt!54456)))

(assert (=> b!106410 (= lt!54456 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53909) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106410 (isDefined!108 (getValueByKey!154 (toList!787 lt!53909) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106411 () Bool)

(declare-fun Unit!3271 () Unit!3218)

(assert (=> b!106411 (= e!69231 Unit!3271)))

(declare-fun b!106412 () Bool)

(assert (=> b!106412 (= e!69230 (isDefined!108 (getValueByKey!154 (toList!787 lt!53909) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29189 c!18609) b!106410))

(assert (= (and d!29189 (not c!18609)) b!106411))

(assert (= (and d!29189 (not res!52866)) b!106412))

(assert (=> d!29189 m!117265))

(declare-fun m!118863 () Bool)

(assert (=> d!29189 m!118863))

(assert (=> b!106410 m!117265))

(declare-fun m!118865 () Bool)

(assert (=> b!106410 m!118865))

(assert (=> b!106410 m!117265))

(assert (=> b!106410 m!118553))

(assert (=> b!106410 m!118553))

(declare-fun m!118867 () Bool)

(assert (=> b!106410 m!118867))

(assert (=> b!106412 m!117265))

(assert (=> b!106412 m!118553))

(assert (=> b!106412 m!118553))

(assert (=> b!106412 m!118867))

(assert (=> b!105541 d!29189))

(declare-fun d!29191 () Bool)

(declare-fun lt!54459 () Bool)

(assert (=> d!29191 (= lt!54459 (select (content!109 (toList!787 lt!54233)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun e!69232 () Bool)

(assert (=> d!29191 (= lt!54459 e!69232)))

(declare-fun res!52867 () Bool)

(assert (=> d!29191 (=> (not res!52867) (not e!69232))))

(assert (=> d!29191 (= res!52867 ((_ is Cons!1612) (toList!787 lt!54233)))))

(assert (=> d!29191 (= (contains!821 (toList!787 lt!54233) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54459)))

(declare-fun b!106413 () Bool)

(declare-fun e!69233 () Bool)

(assert (=> b!106413 (= e!69232 e!69233)))

(declare-fun res!52868 () Bool)

(assert (=> b!106413 (=> res!52868 e!69233)))

(assert (=> b!106413 (= res!52868 (= (h!2209 (toList!787 lt!54233)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!106414 () Bool)

(assert (=> b!106414 (= e!69233 (contains!821 (t!5690 (toList!787 lt!54233)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!29191 res!52867) b!106413))

(assert (= (and b!106413 (not res!52868)) b!106414))

(declare-fun m!118869 () Bool)

(assert (=> d!29191 m!118869))

(declare-fun m!118871 () Bool)

(assert (=> d!29191 m!118871))

(declare-fun m!118873 () Bool)

(assert (=> b!106414 m!118873))

(assert (=> b!105933 d!29191))

(declare-fun b!106417 () Bool)

(declare-fun e!69235 () Option!160)

(assert (=> b!106417 (= e!69235 (getValueByKey!154 (t!5690 (toList!787 lt!54186)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106416 () Bool)

(declare-fun e!69234 () Option!160)

(assert (=> b!106416 (= e!69234 e!69235)))

(declare-fun c!18611 () Bool)

(assert (=> b!106416 (= c!18611 (and ((_ is Cons!1612) (toList!787 lt!54186)) (not (= (_1!1201 (h!2209 (toList!787 lt!54186))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun d!29193 () Bool)

(declare-fun c!18610 () Bool)

(assert (=> d!29193 (= c!18610 (and ((_ is Cons!1612) (toList!787 lt!54186)) (= (_1!1201 (h!2209 (toList!787 lt!54186))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!29193 (= (getValueByKey!154 (toList!787 lt!54186) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) e!69234)))

(declare-fun b!106418 () Bool)

(assert (=> b!106418 (= e!69235 None!158)))

(declare-fun b!106415 () Bool)

(assert (=> b!106415 (= e!69234 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54186)))))))

(assert (= (and d!29193 c!18610) b!106415))

(assert (= (and d!29193 (not c!18610)) b!106416))

(assert (= (and b!106416 c!18611) b!106417))

(assert (= (and b!106416 (not c!18611)) b!106418))

(declare-fun m!118875 () Bool)

(assert (=> b!106417 m!118875))

(assert (=> b!105847 d!29193))

(declare-fun d!29195 () Bool)

(declare-fun res!52869 () Bool)

(declare-fun e!69236 () Bool)

(assert (=> d!29195 (=> res!52869 e!69236)))

(assert (=> d!29195 (= res!52869 (and ((_ is Cons!1612) lt!53724) (= (_1!1201 (h!2209 lt!53724)) (_1!1201 lt!53606))))))

(assert (=> d!29195 (= (containsKey!158 lt!53724 (_1!1201 lt!53606)) e!69236)))

(declare-fun b!106419 () Bool)

(declare-fun e!69237 () Bool)

(assert (=> b!106419 (= e!69236 e!69237)))

(declare-fun res!52870 () Bool)

(assert (=> b!106419 (=> (not res!52870) (not e!69237))))

(assert (=> b!106419 (= res!52870 (and (or (not ((_ is Cons!1612) lt!53724)) (bvsle (_1!1201 (h!2209 lt!53724)) (_1!1201 lt!53606))) ((_ is Cons!1612) lt!53724) (bvslt (_1!1201 (h!2209 lt!53724)) (_1!1201 lt!53606))))))

(declare-fun b!106420 () Bool)

(assert (=> b!106420 (= e!69237 (containsKey!158 (t!5690 lt!53724) (_1!1201 lt!53606)))))

(assert (= (and d!29195 (not res!52869)) b!106419))

(assert (= (and b!106419 res!52870) b!106420))

(declare-fun m!118877 () Bool)

(assert (=> b!106420 m!118877))

(assert (=> b!105946 d!29195))

(declare-fun d!29197 () Bool)

(assert (=> d!29197 (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54460 () Unit!3218)

(assert (=> d!29197 (= lt!54460 (choose!671 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69238 () Bool)

(assert (=> d!29197 e!69238))

(declare-fun res!52871 () Bool)

(assert (=> d!29197 (=> (not res!52871) (not e!69238))))

(assert (=> d!29197 (= res!52871 (isStrictlySorted!304 (toList!787 lt!53698)))))

(assert (=> d!29197 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000) lt!54460)))

(declare-fun b!106421 () Bool)

(assert (=> b!106421 (= e!69238 (containsKey!158 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29197 res!52871) b!106421))

(assert (=> d!29197 m!117889))

(assert (=> d!29197 m!117889))

(assert (=> d!29197 m!117891))

(declare-fun m!118879 () Bool)

(assert (=> d!29197 m!118879))

(declare-fun m!118881 () Bool)

(assert (=> d!29197 m!118881))

(assert (=> b!106421 m!117885))

(assert (=> b!105868 d!29197))

(assert (=> b!105868 d!28951))

(assert (=> b!105868 d!28953))

(assert (=> b!105624 d!28979))

(declare-fun d!29199 () Bool)

(declare-fun res!52872 () Bool)

(declare-fun e!69239 () Bool)

(assert (=> d!29199 (=> res!52872 e!69239)))

(assert (=> d!29199 (= res!52872 (and ((_ is Cons!1612) lt!54221) (= (_1!1201 (h!2209 lt!54221)) (_1!1201 lt!53606))))))

(assert (=> d!29199 (= (containsKey!158 lt!54221 (_1!1201 lt!53606)) e!69239)))

(declare-fun b!106422 () Bool)

(declare-fun e!69240 () Bool)

(assert (=> b!106422 (= e!69239 e!69240)))

(declare-fun res!52873 () Bool)

(assert (=> b!106422 (=> (not res!52873) (not e!69240))))

(assert (=> b!106422 (= res!52873 (and (or (not ((_ is Cons!1612) lt!54221)) (bvsle (_1!1201 (h!2209 lt!54221)) (_1!1201 lt!53606))) ((_ is Cons!1612) lt!54221) (bvslt (_1!1201 (h!2209 lt!54221)) (_1!1201 lt!53606))))))

(declare-fun b!106423 () Bool)

(assert (=> b!106423 (= e!69240 (containsKey!158 (t!5690 lt!54221) (_1!1201 lt!53606)))))

(assert (= (and d!29199 (not res!52872)) b!106422))

(assert (= (and b!106422 res!52873) b!106423))

(declare-fun m!118883 () Bool)

(assert (=> b!106423 m!118883))

(assert (=> b!105921 d!29199))

(declare-fun lt!54461 () Bool)

(declare-fun d!29201 () Bool)

(assert (=> d!29201 (= lt!54461 (select (content!110 (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!69241 () Bool)

(assert (=> d!29201 (= lt!54461 e!69241)))

(declare-fun res!52875 () Bool)

(assert (=> d!29201 (=> (not res!52875) (not e!69241))))

(assert (=> d!29201 (= res!52875 ((_ is Cons!1611) (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)))))

(assert (=> d!29201 (= (contains!822 (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!54461)))

(declare-fun b!106424 () Bool)

(declare-fun e!69242 () Bool)

(assert (=> b!106424 (= e!69241 e!69242)))

(declare-fun res!52874 () Bool)

(assert (=> b!106424 (=> res!52874 e!69242)))

(assert (=> b!106424 (= res!52874 (= (h!2208 (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!106425 () Bool)

(assert (=> b!106425 (= e!69242 (contains!822 (t!5689 (ite c!18320 (Cons!1611 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) Nil!1612) Nil!1612)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!29201 res!52875) b!106424))

(assert (= (and b!106424 (not res!52874)) b!106425))

(declare-fun m!118885 () Bool)

(assert (=> d!29201 m!118885))

(assert (=> d!29201 m!117771))

(declare-fun m!118887 () Bool)

(assert (=> d!29201 m!118887))

(assert (=> b!106425 m!117771))

(declare-fun m!118889 () Bool)

(assert (=> b!106425 m!118889))

(assert (=> b!105795 d!29201))

(declare-fun e!69244 () Option!160)

(declare-fun b!106428 () Bool)

(assert (=> b!106428 (= e!69244 (getValueByKey!154 (t!5690 (toList!787 lt!54088)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106427 () Bool)

(declare-fun e!69243 () Option!160)

(assert (=> b!106427 (= e!69243 e!69244)))

(declare-fun c!18613 () Bool)

(assert (=> b!106427 (= c!18613 (and ((_ is Cons!1612) (toList!787 lt!54088)) (not (= (_1!1201 (h!2209 (toList!787 lt!54088))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!29203 () Bool)

(declare-fun c!18612 () Bool)

(assert (=> d!29203 (= c!18612 (and ((_ is Cons!1612) (toList!787 lt!54088)) (= (_1!1201 (h!2209 (toList!787 lt!54088))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29203 (= (getValueByKey!154 (toList!787 lt!54088) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!69243)))

(declare-fun b!106429 () Bool)

(assert (=> b!106429 (= e!69244 None!158)))

(declare-fun b!106426 () Bool)

(assert (=> b!106426 (= e!69243 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54088)))))))

(assert (= (and d!29203 c!18612) b!106426))

(assert (= (and d!29203 (not c!18612)) b!106427))

(assert (= (and b!106427 c!18613) b!106428))

(assert (= (and b!106427 (not c!18613)) b!106429))

(declare-fun m!118891 () Bool)

(assert (=> b!106428 m!118891))

(assert (=> b!105786 d!29203))

(declare-fun d!29205 () Bool)

(declare-fun e!69245 () Bool)

(assert (=> d!29205 e!69245))

(declare-fun res!52877 () Bool)

(assert (=> d!29205 (=> (not res!52877) (not e!69245))))

(declare-fun lt!54465 () ListLongMap!1543)

(assert (=> d!29205 (= res!52877 (contains!820 lt!54465 (_1!1201 (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(declare-fun lt!54462 () List!1616)

(assert (=> d!29205 (= lt!54465 (ListLongMap!1544 lt!54462))))

(declare-fun lt!54463 () Unit!3218)

(declare-fun lt!54464 () Unit!3218)

(assert (=> d!29205 (= lt!54463 lt!54464)))

(assert (=> d!29205 (= (getValueByKey!154 lt!54462 (_1!1201 (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))) (Some!159 (_2!1201 (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29205 (= lt!54464 (lemmaContainsTupThenGetReturnValue!73 lt!54462 (_1!1201 (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (_2!1201 (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29205 (= lt!54462 (insertStrictlySorted!76 (toList!787 (ite c!18354 call!11140 (ite c!18357 call!11143 call!11144))) (_1!1201 (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (_2!1201 (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29205 (= (+!135 (ite c!18354 call!11140 (ite c!18357 call!11143 call!11144)) (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) lt!54465)))

(declare-fun b!106430 () Bool)

(declare-fun res!52876 () Bool)

(assert (=> b!106430 (=> (not res!52876) (not e!69245))))

(assert (=> b!106430 (= res!52876 (= (getValueByKey!154 (toList!787 lt!54465) (_1!1201 (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))) (Some!159 (_2!1201 (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))))

(declare-fun b!106431 () Bool)

(assert (=> b!106431 (= e!69245 (contains!821 (toList!787 lt!54465) (ite (or c!18354 c!18357) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (= (and d!29205 res!52877) b!106430))

(assert (= (and b!106430 res!52876) b!106431))

(declare-fun m!118893 () Bool)

(assert (=> d!29205 m!118893))

(declare-fun m!118895 () Bool)

(assert (=> d!29205 m!118895))

(declare-fun m!118897 () Bool)

(assert (=> d!29205 m!118897))

(declare-fun m!118899 () Bool)

(assert (=> d!29205 m!118899))

(declare-fun m!118901 () Bool)

(assert (=> b!106430 m!118901))

(declare-fun m!118903 () Bool)

(assert (=> b!106431 m!118903))

(assert (=> bm!11139 d!29205))

(assert (=> d!28895 d!28697))

(declare-fun d!29207 () Bool)

(assert (=> d!29207 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53727) (_1!1201 lt!53606))) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53727) (_1!1201 lt!53606)))))))

(declare-fun bs!4363 () Bool)

(assert (= bs!4363 d!29207))

(assert (=> bs!4363 m!117129))

(declare-fun m!118905 () Bool)

(assert (=> bs!4363 m!118905))

(assert (=> b!105941 d!29207))

(assert (=> b!105941 d!28833))

(declare-fun d!29209 () Bool)

(assert (=> d!29209 (= (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105708 d!29209))

(declare-fun d!29211 () Bool)

(declare-fun res!52878 () Bool)

(declare-fun e!69246 () Bool)

(assert (=> d!29211 (=> res!52878 e!69246)))

(assert (=> d!29211 (= res!52878 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))))) lt!53695)))))

(assert (=> d!29211 (= (containsKey!158 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695) e!69246)))

(declare-fun b!106432 () Bool)

(declare-fun e!69247 () Bool)

(assert (=> b!106432 (= e!69246 e!69247)))

(declare-fun res!52879 () Bool)

(assert (=> b!106432 (=> (not res!52879) (not e!69247))))

(assert (=> b!106432 (= res!52879 (and (or (not ((_ is Cons!1612) (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))))) (bvsle (_1!1201 (h!2209 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))))) lt!53695)) ((_ is Cons!1612) (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)))) (bvslt (_1!1201 (h!2209 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))))) lt!53695)))))

(declare-fun b!106433 () Bool)

(assert (=> b!106433 (= e!69247 (containsKey!158 (t!5690 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)))) lt!53695))))

(assert (= (and d!29211 (not res!52878)) b!106432))

(assert (= (and b!106432 res!52879) b!106433))

(declare-fun m!118907 () Bool)

(assert (=> b!106433 m!118907))

(assert (=> d!28821 d!29211))

(declare-fun b!106434 () Bool)

(declare-fun e!69250 () Unit!3218)

(declare-fun Unit!3272 () Unit!3218)

(assert (=> b!106434 (= e!69250 Unit!3272)))

(declare-fun b!106435 () Bool)

(declare-fun e!69249 () ListLongMap!1543)

(declare-fun call!11252 () ListLongMap!1543)

(assert (=> b!106435 (= e!69249 call!11252)))

(declare-fun b!106436 () Bool)

(declare-fun e!69248 () Bool)

(declare-fun lt!54467 () ListLongMap!1543)

(assert (=> b!106436 (= e!69248 (= (apply!98 lt!54467 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53601))))

(declare-fun b!106437 () Bool)

(declare-fun c!18619 () Bool)

(assert (=> b!106437 (= c!18619 (and (not (= (bvand lt!53802 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!53802 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69252 () ListLongMap!1543)

(assert (=> b!106437 (= e!69252 e!69249)))

(declare-fun b!106438 () Bool)

(declare-fun e!69254 () Bool)

(declare-fun e!69257 () Bool)

(assert (=> b!106438 (= e!69254 e!69257)))

(declare-fun res!52888 () Bool)

(declare-fun call!11248 () Bool)

(assert (=> b!106438 (= res!52888 call!11248)))

(assert (=> b!106438 (=> (not res!52888) (not e!69257))))

(declare-fun bm!11245 () Bool)

(declare-fun call!11254 () ListLongMap!1543)

(declare-fun call!11253 () ListLongMap!1543)

(assert (=> bm!11245 (= call!11254 call!11253)))

(declare-fun b!106439 () Bool)

(declare-fun e!69253 () Bool)

(assert (=> b!106439 (= e!69253 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106440 () Bool)

(declare-fun res!52887 () Bool)

(declare-fun e!69256 () Bool)

(assert (=> b!106440 (=> (not res!52887) (not e!69256))))

(declare-fun e!69259 () Bool)

(assert (=> b!106440 (= res!52887 e!69259)))

(declare-fun res!52882 () Bool)

(assert (=> b!106440 (=> res!52882 e!69259)))

(declare-fun e!69258 () Bool)

(assert (=> b!106440 (= res!52882 (not e!69258))))

(declare-fun res!52881 () Bool)

(assert (=> b!106440 (=> (not res!52881) (not e!69258))))

(assert (=> b!106440 (= res!52881 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun bm!11246 () Bool)

(declare-fun call!11249 () ListLongMap!1543)

(assert (=> bm!11246 (= call!11252 call!11249)))

(declare-fun bm!11247 () Bool)

(declare-fun call!11250 () ListLongMap!1543)

(assert (=> bm!11247 (= call!11253 call!11250)))

(declare-fun b!106441 () Bool)

(declare-fun e!69260 () Bool)

(assert (=> b!106441 (= e!69260 (= (apply!98 lt!54467 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106441 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (_values!2564 newMap!16))))))

(assert (=> b!106441 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106442 () Bool)

(declare-fun res!52884 () Bool)

(assert (=> b!106442 (=> (not res!52884) (not e!69256))))

(assert (=> b!106442 (= res!52884 e!69254)))

(declare-fun c!18618 () Bool)

(assert (=> b!106442 (= c!18618 (not (= (bvand lt!53802 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106443 () Bool)

(assert (=> b!106443 (= e!69252 call!11252)))

(declare-fun b!106444 () Bool)

(declare-fun e!69251 () Bool)

(declare-fun call!11251 () Bool)

(assert (=> b!106444 (= e!69251 (not call!11251))))

(declare-fun bm!11248 () Bool)

(assert (=> bm!11248 (= call!11250 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53802 (zeroValue!2456 newMap!16) lt!53601 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!106445 () Bool)

(assert (=> b!106445 (= e!69257 (= (apply!98 lt!54467 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!106446 () Bool)

(assert (=> b!106446 (= e!69249 call!11254)))

(declare-fun b!106447 () Bool)

(assert (=> b!106447 (= e!69251 e!69248)))

(declare-fun res!52886 () Bool)

(assert (=> b!106447 (= res!52886 call!11251)))

(assert (=> b!106447 (=> (not res!52886) (not e!69248))))

(declare-fun c!18617 () Bool)

(declare-fun bm!11249 () Bool)

(declare-fun c!18614 () Bool)

(assert (=> bm!11249 (= call!11249 (+!135 (ite c!18614 call!11250 (ite c!18617 call!11253 call!11254)) (ite (or c!18614 c!18617) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601))))))

(declare-fun bm!11250 () Bool)

(assert (=> bm!11250 (= call!11251 (contains!820 lt!54467 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106448 () Bool)

(assert (=> b!106448 (= e!69258 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106449 () Bool)

(declare-fun e!69255 () ListLongMap!1543)

(assert (=> b!106449 (= e!69255 e!69252)))

(assert (=> b!106449 (= c!18617 (and (not (= (bvand lt!53802 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!53802 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106450 () Bool)

(assert (=> b!106450 (= e!69254 (not call!11248))))

(declare-fun b!106451 () Bool)

(assert (=> b!106451 (= e!69256 e!69251)))

(declare-fun c!18615 () Bool)

(assert (=> b!106451 (= c!18615 (not (= (bvand lt!53802 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106452 () Bool)

(declare-fun lt!54469 () Unit!3218)

(assert (=> b!106452 (= e!69250 lt!54469)))

(declare-fun lt!54471 () ListLongMap!1543)

(assert (=> b!106452 (= lt!54471 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53802 (zeroValue!2456 newMap!16) lt!53601 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54482 () (_ BitVec 64))

(assert (=> b!106452 (= lt!54482 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54475 () (_ BitVec 64))

(assert (=> b!106452 (= lt!54475 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54481 () Unit!3218)

(assert (=> b!106452 (= lt!54481 (addStillContains!74 lt!54471 lt!54482 (zeroValue!2456 newMap!16) lt!54475))))

(assert (=> b!106452 (contains!820 (+!135 lt!54471 (tuple2!2381 lt!54482 (zeroValue!2456 newMap!16))) lt!54475)))

(declare-fun lt!54478 () Unit!3218)

(assert (=> b!106452 (= lt!54478 lt!54481)))

(declare-fun lt!54484 () ListLongMap!1543)

(assert (=> b!106452 (= lt!54484 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53802 (zeroValue!2456 newMap!16) lt!53601 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54483 () (_ BitVec 64))

(assert (=> b!106452 (= lt!54483 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54468 () (_ BitVec 64))

(assert (=> b!106452 (= lt!54468 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54472 () Unit!3218)

(assert (=> b!106452 (= lt!54472 (addApplyDifferent!74 lt!54484 lt!54483 lt!53601 lt!54468))))

(assert (=> b!106452 (= (apply!98 (+!135 lt!54484 (tuple2!2381 lt!54483 lt!53601)) lt!54468) (apply!98 lt!54484 lt!54468))))

(declare-fun lt!54473 () Unit!3218)

(assert (=> b!106452 (= lt!54473 lt!54472)))

(declare-fun lt!54487 () ListLongMap!1543)

(assert (=> b!106452 (= lt!54487 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53802 (zeroValue!2456 newMap!16) lt!53601 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54477 () (_ BitVec 64))

(assert (=> b!106452 (= lt!54477 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54486 () (_ BitVec 64))

(assert (=> b!106452 (= lt!54486 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54470 () Unit!3218)

(assert (=> b!106452 (= lt!54470 (addApplyDifferent!74 lt!54487 lt!54477 (zeroValue!2456 newMap!16) lt!54486))))

(assert (=> b!106452 (= (apply!98 (+!135 lt!54487 (tuple2!2381 lt!54477 (zeroValue!2456 newMap!16))) lt!54486) (apply!98 lt!54487 lt!54486))))

(declare-fun lt!54474 () Unit!3218)

(assert (=> b!106452 (= lt!54474 lt!54470)))

(declare-fun lt!54476 () ListLongMap!1543)

(assert (=> b!106452 (= lt!54476 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53802 (zeroValue!2456 newMap!16) lt!53601 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54466 () (_ BitVec 64))

(assert (=> b!106452 (= lt!54466 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54480 () (_ BitVec 64))

(assert (=> b!106452 (= lt!54480 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106452 (= lt!54469 (addApplyDifferent!74 lt!54476 lt!54466 lt!53601 lt!54480))))

(assert (=> b!106452 (= (apply!98 (+!135 lt!54476 (tuple2!2381 lt!54466 lt!53601)) lt!54480) (apply!98 lt!54476 lt!54480))))

(declare-fun b!106453 () Bool)

(assert (=> b!106453 (= e!69259 e!69260)))

(declare-fun res!52883 () Bool)

(assert (=> b!106453 (=> (not res!52883) (not e!69260))))

(assert (=> b!106453 (= res!52883 (contains!820 lt!54467 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106453 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106454 () Bool)

(assert (=> b!106454 (= e!69255 (+!135 call!11249 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)))))

(declare-fun d!29213 () Bool)

(assert (=> d!29213 e!69256))

(declare-fun res!52885 () Bool)

(assert (=> d!29213 (=> (not res!52885) (not e!69256))))

(assert (=> d!29213 (= res!52885 (or (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))))

(declare-fun lt!54485 () ListLongMap!1543)

(assert (=> d!29213 (= lt!54467 lt!54485)))

(declare-fun lt!54479 () Unit!3218)

(assert (=> d!29213 (= lt!54479 e!69250)))

(declare-fun c!18616 () Bool)

(assert (=> d!29213 (= c!18616 e!69253)))

(declare-fun res!52880 () Bool)

(assert (=> d!29213 (=> (not res!52880) (not e!69253))))

(assert (=> d!29213 (= res!52880 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!29213 (= lt!54485 e!69255)))

(assert (=> d!29213 (= c!18614 (and (not (= (bvand lt!53802 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!53802 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29213 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29213 (= (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53802 (zeroValue!2456 newMap!16) lt!53601 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54467)))

(declare-fun bm!11251 () Bool)

(assert (=> bm!11251 (= call!11248 (contains!820 lt!54467 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29213 c!18614) b!106454))

(assert (= (and d!29213 (not c!18614)) b!106449))

(assert (= (and b!106449 c!18617) b!106443))

(assert (= (and b!106449 (not c!18617)) b!106437))

(assert (= (and b!106437 c!18619) b!106435))

(assert (= (and b!106437 (not c!18619)) b!106446))

(assert (= (or b!106435 b!106446) bm!11245))

(assert (= (or b!106443 bm!11245) bm!11247))

(assert (= (or b!106443 b!106435) bm!11246))

(assert (= (or b!106454 bm!11247) bm!11248))

(assert (= (or b!106454 bm!11246) bm!11249))

(assert (= (and d!29213 res!52880) b!106439))

(assert (= (and d!29213 c!18616) b!106452))

(assert (= (and d!29213 (not c!18616)) b!106434))

(assert (= (and d!29213 res!52885) b!106440))

(assert (= (and b!106440 res!52881) b!106448))

(assert (= (and b!106440 (not res!52882)) b!106453))

(assert (= (and b!106453 res!52883) b!106441))

(assert (= (and b!106440 res!52887) b!106442))

(assert (= (and b!106442 c!18618) b!106438))

(assert (= (and b!106442 (not c!18618)) b!106450))

(assert (= (and b!106438 res!52888) b!106445))

(assert (= (or b!106438 b!106450) bm!11251))

(assert (= (and b!106442 res!52884) b!106451))

(assert (= (and b!106451 c!18615) b!106447))

(assert (= (and b!106451 (not c!18615)) b!106444))

(assert (= (and b!106447 res!52886) b!106436))

(assert (= (or b!106447 b!106444) bm!11250))

(declare-fun b_lambda!4747 () Bool)

(assert (=> (not b_lambda!4747) (not b!106441)))

(assert (=> b!106441 t!5701))

(declare-fun b_and!6557 () Bool)

(assert (= b_and!6553 (and (=> t!5701 result!3459) b_and!6557)))

(assert (=> b!106441 t!5703))

(declare-fun b_and!6559 () Bool)

(assert (= b_and!6555 (and (=> t!5703 result!3461) b_and!6559)))

(declare-fun m!118909 () Bool)

(assert (=> bm!11250 m!118909))

(declare-fun m!118911 () Bool)

(assert (=> b!106454 m!118911))

(assert (=> b!106441 m!117291))

(assert (=> b!106441 m!117265))

(declare-fun m!118913 () Bool)

(assert (=> b!106441 m!118913))

(assert (=> b!106441 m!117265))

(assert (=> b!106441 m!117367))

(assert (=> b!106441 m!117367))

(assert (=> b!106441 m!117291))

(assert (=> b!106441 m!117369))

(declare-fun m!118915 () Bool)

(assert (=> bm!11248 m!118915))

(declare-fun m!118917 () Bool)

(assert (=> bm!11251 m!118917))

(assert (=> b!106439 m!117265))

(assert (=> b!106439 m!117265))

(assert (=> b!106439 m!117267))

(declare-fun m!118919 () Bool)

(assert (=> b!106445 m!118919))

(assert (=> b!106453 m!117265))

(assert (=> b!106453 m!117265))

(declare-fun m!118921 () Bool)

(assert (=> b!106453 m!118921))

(declare-fun m!118923 () Bool)

(assert (=> b!106452 m!118923))

(declare-fun m!118925 () Bool)

(assert (=> b!106452 m!118925))

(declare-fun m!118927 () Bool)

(assert (=> b!106452 m!118927))

(declare-fun m!118929 () Bool)

(assert (=> b!106452 m!118929))

(declare-fun m!118931 () Bool)

(assert (=> b!106452 m!118931))

(declare-fun m!118933 () Bool)

(assert (=> b!106452 m!118933))

(declare-fun m!118935 () Bool)

(assert (=> b!106452 m!118935))

(declare-fun m!118937 () Bool)

(assert (=> b!106452 m!118937))

(declare-fun m!118939 () Bool)

(assert (=> b!106452 m!118939))

(declare-fun m!118941 () Bool)

(assert (=> b!106452 m!118941))

(assert (=> b!106452 m!118915))

(declare-fun m!118943 () Bool)

(assert (=> b!106452 m!118943))

(declare-fun m!118945 () Bool)

(assert (=> b!106452 m!118945))

(assert (=> b!106452 m!118945))

(declare-fun m!118947 () Bool)

(assert (=> b!106452 m!118947))

(declare-fun m!118949 () Bool)

(assert (=> b!106452 m!118949))

(assert (=> b!106452 m!118931))

(assert (=> b!106452 m!118935))

(declare-fun m!118951 () Bool)

(assert (=> b!106452 m!118951))

(assert (=> b!106452 m!117265))

(assert (=> b!106452 m!118925))

(declare-fun m!118953 () Bool)

(assert (=> bm!11249 m!118953))

(declare-fun m!118955 () Bool)

(assert (=> b!106436 m!118955))

(assert (=> d!29213 m!117277))

(assert (=> b!106448 m!117265))

(assert (=> b!106448 m!117265))

(assert (=> b!106448 m!117267))

(assert (=> d!28829 d!29213))

(assert (=> d!28829 d!28725))

(declare-fun d!29215 () Bool)

(assert (=> d!29215 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53802 (zeroValue!2456 newMap!16) lt!53601 #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(assert (=> d!29215 true))

(declare-fun _$8!94 () Unit!3218)

(assert (=> d!29215 (= (choose!670 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) lt!53802 (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) lt!53601 (defaultEntry!2581 newMap!16)) _$8!94)))

(declare-fun bs!4364 () Bool)

(assert (= bs!4364 d!29215))

(assert (=> bs!4364 m!117143))

(assert (=> bs!4364 m!117143))

(assert (=> bs!4364 m!117851))

(assert (=> bs!4364 m!117849))

(assert (=> d!28829 d!29215))

(declare-fun d!29217 () Bool)

(declare-fun e!69261 () Bool)

(assert (=> d!29217 e!69261))

(declare-fun res!52890 () Bool)

(assert (=> d!29217 (=> (not res!52890) (not e!69261))))

(declare-fun lt!54491 () ListLongMap!1543)

(assert (=> d!29217 (= res!52890 (contains!820 lt!54491 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601))))))

(declare-fun lt!54488 () List!1616)

(assert (=> d!29217 (= lt!54491 (ListLongMap!1544 lt!54488))))

(declare-fun lt!54489 () Unit!3218)

(declare-fun lt!54490 () Unit!3218)

(assert (=> d!29217 (= lt!54489 lt!54490)))

(assert (=> d!29217 (= (getValueByKey!154 lt!54488 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601))))))

(assert (=> d!29217 (= lt!54490 (lemmaContainsTupThenGetReturnValue!73 lt!54488 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601))))))

(assert (=> d!29217 (= lt!54488 (insertStrictlySorted!76 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601))))))

(assert (=> d!29217 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) lt!54491)))

(declare-fun b!106455 () Bool)

(declare-fun res!52889 () Bool)

(assert (=> b!106455 (=> (not res!52889) (not e!69261))))

(assert (=> b!106455 (= res!52889 (= (getValueByKey!154 (toList!787 lt!54491) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)))))))

(declare-fun b!106456 () Bool)

(assert (=> b!106456 (= e!69261 (contains!821 (toList!787 lt!54491) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)))))

(assert (= (and d!29217 res!52890) b!106455))

(assert (= (and b!106455 res!52889) b!106456))

(declare-fun m!118957 () Bool)

(assert (=> d!29217 m!118957))

(declare-fun m!118959 () Bool)

(assert (=> d!29217 m!118959))

(declare-fun m!118961 () Bool)

(assert (=> d!29217 m!118961))

(declare-fun m!118963 () Bool)

(assert (=> d!29217 m!118963))

(declare-fun m!118965 () Bool)

(assert (=> b!106455 m!118965))

(declare-fun m!118967 () Bool)

(assert (=> b!106456 m!118967))

(assert (=> d!28829 d!29217))

(assert (=> d!28829 d!29133))

(declare-fun d!29219 () Bool)

(declare-fun res!52891 () Bool)

(declare-fun e!69262 () Bool)

(assert (=> d!29219 (=> res!52891 e!69262)))

(assert (=> d!29219 (= res!52891 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53883)))))

(assert (=> d!29219 (= (containsKey!158 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883) e!69262)))

(declare-fun b!106457 () Bool)

(declare-fun e!69263 () Bool)

(assert (=> b!106457 (= e!69262 e!69263)))

(declare-fun res!52892 () Bool)

(assert (=> b!106457 (=> (not res!52892) (not e!69263))))

(assert (=> b!106457 (= res!52892 (and (or (not ((_ is Cons!1612) (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) (bvsle (_1!1201 (h!2209 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53883)) ((_ is Cons!1612) (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (bvslt (_1!1201 (h!2209 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53883)))))

(declare-fun b!106458 () Bool)

(assert (=> b!106458 (= e!69263 (containsKey!158 (t!5690 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) lt!53883))))

(assert (= (and d!29219 (not res!52891)) b!106457))

(assert (= (and b!106457 res!52892) b!106458))

(declare-fun m!118969 () Bool)

(assert (=> b!106458 m!118969))

(assert (=> d!28759 d!29219))

(assert (=> b!105571 d!28979))

(declare-fun d!29221 () Bool)

(assert (=> d!29221 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4365 () Bool)

(assert (= bs!4365 d!29221))

(assert (=> bs!4365 m!117349))

(declare-fun m!118971 () Bool)

(assert (=> bs!4365 m!118971))

(assert (=> b!105646 d!29221))

(declare-fun b!106461 () Bool)

(declare-fun e!69265 () Option!160)

(assert (=> b!106461 (= e!69265 (getValueByKey!154 (t!5690 (toList!787 lt!53698)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!106460 () Bool)

(declare-fun e!69264 () Option!160)

(assert (=> b!106460 (= e!69264 e!69265)))

(declare-fun c!18621 () Bool)

(assert (=> b!106460 (= c!18621 (and ((_ is Cons!1612) (toList!787 lt!53698)) (not (= (_1!1201 (h!2209 (toList!787 lt!53698))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun c!18620 () Bool)

(declare-fun d!29223 () Bool)

(assert (=> d!29223 (= c!18620 (and ((_ is Cons!1612) (toList!787 lt!53698)) (= (_1!1201 (h!2209 (toList!787 lt!53698))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29223 (= (getValueByKey!154 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69264)))

(declare-fun b!106462 () Bool)

(assert (=> b!106462 (= e!69265 None!158)))

(declare-fun b!106459 () Bool)

(assert (=> b!106459 (= e!69264 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53698)))))))

(assert (= (and d!29223 c!18620) b!106459))

(assert (= (and d!29223 (not c!18620)) b!106460))

(assert (= (and b!106460 c!18621) b!106461))

(assert (= (and b!106460 (not c!18621)) b!106462))

(assert (=> b!106461 m!117049))

(declare-fun m!118973 () Bool)

(assert (=> b!106461 m!118973))

(assert (=> b!105646 d!29223))

(assert (=> d!28809 d!28701))

(declare-fun b!106465 () Bool)

(declare-fun e!69267 () Option!160)

(assert (=> b!106465 (= e!69267 (getValueByKey!154 (t!5690 (t!5690 (toList!787 lt!53716))) (_1!1201 lt!53599)))))

(declare-fun b!106464 () Bool)

(declare-fun e!69266 () Option!160)

(assert (=> b!106464 (= e!69266 e!69267)))

(declare-fun c!18623 () Bool)

(assert (=> b!106464 (= c!18623 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53716))) (not (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53716)))) (_1!1201 lt!53599)))))))

(declare-fun d!29225 () Bool)

(declare-fun c!18622 () Bool)

(assert (=> d!29225 (= c!18622 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53716))) (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53716)))) (_1!1201 lt!53599))))))

(assert (=> d!29225 (= (getValueByKey!154 (t!5690 (toList!787 lt!53716)) (_1!1201 lt!53599)) e!69266)))

(declare-fun b!106466 () Bool)

(assert (=> b!106466 (= e!69267 None!158)))

(declare-fun b!106463 () Bool)

(assert (=> b!106463 (= e!69266 (Some!159 (_2!1201 (h!2209 (t!5690 (toList!787 lt!53716))))))))

(assert (= (and d!29225 c!18622) b!106463))

(assert (= (and d!29225 (not c!18622)) b!106464))

(assert (= (and b!106464 c!18623) b!106465))

(assert (= (and b!106464 (not c!18623)) b!106466))

(declare-fun m!118975 () Bool)

(assert (=> b!106465 m!118975))

(assert (=> b!105873 d!29225))

(declare-fun d!29227 () Bool)

(assert (=> d!29227 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53712) (_1!1201 lt!53599))) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53712) (_1!1201 lt!53599)))))))

(declare-fun bs!4366 () Bool)

(assert (= bs!4366 d!29227))

(assert (=> bs!4366 m!117083))

(declare-fun m!118977 () Bool)

(assert (=> bs!4366 m!118977))

(assert (=> b!105725 d!29227))

(assert (=> b!105725 d!28847))

(assert (=> d!28813 d!28711))

(declare-fun d!29229 () Bool)

(declare-fun e!69270 () Bool)

(assert (=> d!29229 e!69270))

(declare-fun res!52897 () Bool)

(assert (=> d!29229 (=> (not res!52897) (not e!69270))))

(declare-fun lt!54494 () SeekEntryResult!262)

(assert (=> d!29229 (= res!52897 ((_ is Found!262) lt!54494))))

(assert (=> d!29229 (= lt!54494 (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(assert (=> d!29229 true))

(declare-fun _$33!90 () Unit!3218)

(assert (=> d!29229 (= (choose!668 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)) _$33!90)))

(declare-fun b!106471 () Bool)

(declare-fun res!52898 () Bool)

(assert (=> b!106471 (=> (not res!52898) (not e!69270))))

(assert (=> b!106471 (= res!52898 (inRange!0 (index!3197 lt!54494) (mask!6726 newMap!16)))))

(declare-fun b!106472 () Bool)

(assert (=> b!106472 (= e!69270 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!54494)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (= (and d!29229 res!52897) b!106471))

(assert (= (and b!106471 res!52898) b!106472))

(assert (=> d!29229 m!116875))

(assert (=> d!29229 m!117159))

(declare-fun m!118979 () Bool)

(assert (=> b!106471 m!118979))

(declare-fun m!118981 () Bool)

(assert (=> b!106472 m!118981))

(assert (=> d!28813 d!29229))

(assert (=> d!28813 d!29133))

(assert (=> d!28881 d!28879))

(declare-fun d!29231 () Bool)

(assert (=> d!29231 (= (getValueByKey!154 lt!53717 (_1!1201 lt!53606)) (Some!159 (_2!1201 lt!53606)))))

(assert (=> d!29231 true))

(declare-fun _$22!433 () Unit!3218)

(assert (=> d!29231 (= (choose!667 lt!53717 (_1!1201 lt!53606) (_2!1201 lt!53606)) _$22!433)))

(declare-fun bs!4367 () Bool)

(assert (= bs!4367 d!29231))

(assert (=> bs!4367 m!117101))

(assert (=> d!28881 d!29231))

(declare-fun d!29233 () Bool)

(declare-fun res!52899 () Bool)

(declare-fun e!69271 () Bool)

(assert (=> d!29233 (=> res!52899 e!69271)))

(assert (=> d!29233 (= res!52899 (or ((_ is Nil!1613) lt!53717) ((_ is Nil!1613) (t!5690 lt!53717))))))

(assert (=> d!29233 (= (isStrictlySorted!304 lt!53717) e!69271)))

(declare-fun b!106473 () Bool)

(declare-fun e!69272 () Bool)

(assert (=> b!106473 (= e!69271 e!69272)))

(declare-fun res!52900 () Bool)

(assert (=> b!106473 (=> (not res!52900) (not e!69272))))

(assert (=> b!106473 (= res!52900 (bvslt (_1!1201 (h!2209 lt!53717)) (_1!1201 (h!2209 (t!5690 lt!53717)))))))

(declare-fun b!106474 () Bool)

(assert (=> b!106474 (= e!69272 (isStrictlySorted!304 (t!5690 lt!53717)))))

(assert (= (and d!29233 (not res!52899)) b!106473))

(assert (= (and b!106473 res!52900) b!106474))

(declare-fun m!118983 () Bool)

(assert (=> b!106474 m!118983))

(assert (=> d!28881 d!29233))

(declare-fun b!106475 () Bool)

(declare-fun c!18626 () Bool)

(assert (=> b!106475 (= c!18626 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53604))) (bvsgt (_1!1201 (h!2209 (t!5690 (toList!787 lt!53604)))) (_1!1201 lt!53606))))))

(declare-fun e!69276 () List!1616)

(declare-fun e!69275 () List!1616)

(assert (=> b!106475 (= e!69276 e!69275)))

(declare-fun b!106476 () Bool)

(declare-fun e!69274 () List!1616)

(declare-fun call!11255 () List!1616)

(assert (=> b!106476 (= e!69274 call!11255)))

(declare-fun b!106477 () Bool)

(declare-fun e!69277 () Bool)

(declare-fun lt!54495 () List!1616)

(assert (=> b!106477 (= e!69277 (contains!821 lt!54495 (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun b!106478 () Bool)

(declare-fun res!52901 () Bool)

(assert (=> b!106478 (=> (not res!52901) (not e!69277))))

(assert (=> b!106478 (= res!52901 (containsKey!158 lt!54495 (_1!1201 lt!53606)))))

(declare-fun b!106479 () Bool)

(declare-fun call!11256 () List!1616)

(assert (=> b!106479 (= e!69275 call!11256)))

(declare-fun b!106480 () Bool)

(assert (=> b!106480 (= e!69275 call!11256)))

(declare-fun b!106481 () Bool)

(assert (=> b!106481 (= e!69274 e!69276)))

(declare-fun c!18627 () Bool)

(assert (=> b!106481 (= c!18627 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53604))) (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53604)))) (_1!1201 lt!53606))))))

(declare-fun bm!11252 () Bool)

(declare-fun call!11257 () List!1616)

(assert (=> bm!11252 (= call!11257 call!11255)))

(declare-fun b!106482 () Bool)

(assert (=> b!106482 (= e!69276 call!11257)))

(declare-fun b!106483 () Bool)

(declare-fun e!69273 () List!1616)

(assert (=> b!106483 (= e!69273 (insertStrictlySorted!76 (t!5690 (t!5690 (toList!787 lt!53604))) (_1!1201 lt!53606) (_2!1201 lt!53606)))))

(declare-fun bm!11254 () Bool)

(assert (=> bm!11254 (= call!11256 call!11257)))

(declare-fun b!106484 () Bool)

(assert (=> b!106484 (= e!69273 (ite c!18627 (t!5690 (t!5690 (toList!787 lt!53604))) (ite c!18626 (Cons!1612 (h!2209 (t!5690 (toList!787 lt!53604))) (t!5690 (t!5690 (toList!787 lt!53604)))) Nil!1613)))))

(declare-fun c!18624 () Bool)

(declare-fun bm!11253 () Bool)

(assert (=> bm!11253 (= call!11255 ($colon$colon!80 e!69273 (ite c!18624 (h!2209 (t!5690 (toList!787 lt!53604))) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606)))))))

(declare-fun c!18625 () Bool)

(assert (=> bm!11253 (= c!18625 c!18624)))

(declare-fun d!29235 () Bool)

(assert (=> d!29235 e!69277))

(declare-fun res!52902 () Bool)

(assert (=> d!29235 (=> (not res!52902) (not e!69277))))

(assert (=> d!29235 (= res!52902 (isStrictlySorted!304 lt!54495))))

(assert (=> d!29235 (= lt!54495 e!69274)))

(assert (=> d!29235 (= c!18624 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53604))) (bvslt (_1!1201 (h!2209 (t!5690 (toList!787 lt!53604)))) (_1!1201 lt!53606))))))

(assert (=> d!29235 (isStrictlySorted!304 (t!5690 (toList!787 lt!53604)))))

(assert (=> d!29235 (= (insertStrictlySorted!76 (t!5690 (toList!787 lt!53604)) (_1!1201 lt!53606) (_2!1201 lt!53606)) lt!54495)))

(assert (= (and d!29235 c!18624) b!106476))

(assert (= (and d!29235 (not c!18624)) b!106481))

(assert (= (and b!106481 c!18627) b!106482))

(assert (= (and b!106481 (not c!18627)) b!106475))

(assert (= (and b!106475 c!18626) b!106479))

(assert (= (and b!106475 (not c!18626)) b!106480))

(assert (= (or b!106479 b!106480) bm!11254))

(assert (= (or b!106482 bm!11254) bm!11252))

(assert (= (or b!106476 bm!11252) bm!11253))

(assert (= (and bm!11253 c!18625) b!106483))

(assert (= (and bm!11253 (not c!18625)) b!106484))

(assert (= (and d!29235 res!52902) b!106478))

(assert (= (and b!106478 res!52901) b!106477))

(declare-fun m!118985 () Bool)

(assert (=> b!106477 m!118985))

(declare-fun m!118987 () Bool)

(assert (=> d!29235 m!118987))

(declare-fun m!118989 () Bool)

(assert (=> d!29235 m!118989))

(declare-fun m!118991 () Bool)

(assert (=> b!106478 m!118991))

(declare-fun m!118993 () Bool)

(assert (=> b!106483 m!118993))

(declare-fun m!118995 () Bool)

(assert (=> bm!11253 m!118995))

(assert (=> b!105926 d!29235))

(declare-fun d!29237 () Bool)

(assert (=> d!29237 (= (get!1335 (getValueByKey!154 (toList!787 lt!53884) lt!53888)) (v!2889 (getValueByKey!154 (toList!787 lt!53884) lt!53888)))))

(assert (=> d!28769 d!29237))

(declare-fun b!106487 () Bool)

(declare-fun e!69279 () Option!160)

(assert (=> b!106487 (= e!69279 (getValueByKey!154 (t!5690 (toList!787 lt!53884)) lt!53888))))

(declare-fun b!106486 () Bool)

(declare-fun e!69278 () Option!160)

(assert (=> b!106486 (= e!69278 e!69279)))

(declare-fun c!18629 () Bool)

(assert (=> b!106486 (= c!18629 (and ((_ is Cons!1612) (toList!787 lt!53884)) (not (= (_1!1201 (h!2209 (toList!787 lt!53884))) lt!53888))))))

(declare-fun d!29239 () Bool)

(declare-fun c!18628 () Bool)

(assert (=> d!29239 (= c!18628 (and ((_ is Cons!1612) (toList!787 lt!53884)) (= (_1!1201 (h!2209 (toList!787 lt!53884))) lt!53888)))))

(assert (=> d!29239 (= (getValueByKey!154 (toList!787 lt!53884) lt!53888) e!69278)))

(declare-fun b!106488 () Bool)

(assert (=> b!106488 (= e!69279 None!158)))

(declare-fun b!106485 () Bool)

(assert (=> b!106485 (= e!69278 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53884)))))))

(assert (= (and d!29239 c!18628) b!106485))

(assert (= (and d!29239 (not c!18628)) b!106486))

(assert (= (and b!106486 c!18629) b!106487))

(assert (= (and b!106486 (not c!18629)) b!106488))

(declare-fun m!118997 () Bool)

(assert (=> b!106487 m!118997))

(assert (=> d!28769 d!29239))

(declare-fun b!106491 () Bool)

(declare-fun e!69281 () Option!160)

(assert (=> b!106491 (= e!69281 (getValueByKey!154 (t!5690 (t!5690 (toList!787 lt!53596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!106490 () Bool)

(declare-fun e!69280 () Option!160)

(assert (=> b!106490 (= e!69280 e!69281)))

(declare-fun c!18631 () Bool)

(assert (=> b!106490 (= c!18631 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53596))) (not (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53596)))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))))

(declare-fun d!29241 () Bool)

(declare-fun c!18630 () Bool)

(assert (=> d!29241 (= c!18630 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53596))) (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53596)))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (=> d!29241 (= (getValueByKey!154 (t!5690 (toList!787 lt!53596)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) e!69280)))

(declare-fun b!106492 () Bool)

(assert (=> b!106492 (= e!69281 None!158)))

(declare-fun b!106489 () Bool)

(assert (=> b!106489 (= e!69280 (Some!159 (_2!1201 (h!2209 (t!5690 (toList!787 lt!53596))))))))

(assert (= (and d!29241 c!18630) b!106489))

(assert (= (and d!29241 (not c!18630)) b!106490))

(assert (= (and b!106490 c!18631) b!106491))

(assert (= (and b!106490 (not c!18631)) b!106492))

(assert (=> b!106491 m!116875))

(declare-fun m!118999 () Bool)

(assert (=> b!106491 m!118999))

(assert (=> b!105862 d!29241))

(declare-fun d!29243 () Bool)

(assert (=> d!29243 (= (get!1335 (getValueByKey!154 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2889 (getValueByKey!154 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28717 d!29243))

(assert (=> d!28717 d!29223))

(declare-fun d!29245 () Bool)

(declare-fun res!52903 () Bool)

(declare-fun e!69282 () Bool)

(assert (=> d!29245 (=> res!52903 e!69282)))

(assert (=> d!29245 (= res!52903 (and ((_ is Cons!1612) (toList!787 call!11103)) (= (_1!1201 (h!2209 (toList!787 call!11103))) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814)))))))

(assert (=> d!29245 (= (containsKey!158 (toList!787 call!11103) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))) e!69282)))

(declare-fun b!106493 () Bool)

(declare-fun e!69283 () Bool)

(assert (=> b!106493 (= e!69282 e!69283)))

(declare-fun res!52904 () Bool)

(assert (=> b!106493 (=> (not res!52904) (not e!69283))))

(assert (=> b!106493 (= res!52904 (and (or (not ((_ is Cons!1612) (toList!787 call!11103))) (bvsle (_1!1201 (h!2209 (toList!787 call!11103))) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814)))) ((_ is Cons!1612) (toList!787 call!11103)) (bvslt (_1!1201 (h!2209 (toList!787 call!11103))) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814)))))))

(declare-fun b!106494 () Bool)

(assert (=> b!106494 (= e!69283 (containsKey!158 (t!5690 (toList!787 call!11103)) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814))))))

(assert (= (and d!29245 (not res!52903)) b!106493))

(assert (= (and b!106493 res!52904) b!106494))

(assert (=> b!106494 m!117171))

(declare-fun m!119001 () Bool)

(assert (=> b!106494 m!119001))

(assert (=> d!28727 d!29245))

(declare-fun d!29247 () Bool)

(assert (=> d!29247 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4368 () Bool)

(assert (= bs!4368 d!29247))

(assert (=> bs!4368 m!117875))

(declare-fun m!119003 () Bool)

(assert (=> bs!4368 m!119003))

(assert (=> b!105859 d!29247))

(declare-fun b!106497 () Bool)

(declare-fun e!69285 () Option!160)

(assert (=> b!106497 (= e!69285 (getValueByKey!154 (t!5690 (toList!787 lt!53698)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106496 () Bool)

(declare-fun e!69284 () Option!160)

(assert (=> b!106496 (= e!69284 e!69285)))

(declare-fun c!18633 () Bool)

(assert (=> b!106496 (= c!18633 (and ((_ is Cons!1612) (toList!787 lt!53698)) (not (= (_1!1201 (h!2209 (toList!787 lt!53698))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!29249 () Bool)

(declare-fun c!18632 () Bool)

(assert (=> d!29249 (= c!18632 (and ((_ is Cons!1612) (toList!787 lt!53698)) (= (_1!1201 (h!2209 (toList!787 lt!53698))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29249 (= (getValueByKey!154 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000) e!69284)))

(declare-fun b!106498 () Bool)

(assert (=> b!106498 (= e!69285 None!158)))

(declare-fun b!106495 () Bool)

(assert (=> b!106495 (= e!69284 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53698)))))))

(assert (= (and d!29249 c!18632) b!106495))

(assert (= (and d!29249 (not c!18632)) b!106496))

(assert (= (and b!106496 c!18633) b!106497))

(assert (= (and b!106496 (not c!18633)) b!106498))

(declare-fun m!119005 () Bool)

(assert (=> b!106497 m!119005))

(assert (=> b!105859 d!29249))

(declare-fun d!29251 () Bool)

(declare-fun e!69286 () Bool)

(assert (=> d!29251 e!69286))

(declare-fun res!52905 () Bool)

(assert (=> d!29251 (=> res!52905 e!69286)))

(declare-fun lt!54496 () Bool)

(assert (=> d!29251 (= res!52905 (not lt!54496))))

(declare-fun lt!54499 () Bool)

(assert (=> d!29251 (= lt!54496 lt!54499)))

(declare-fun lt!54498 () Unit!3218)

(declare-fun e!69287 () Unit!3218)

(assert (=> d!29251 (= lt!54498 e!69287)))

(declare-fun c!18634 () Bool)

(assert (=> d!29251 (= c!18634 lt!54499)))

(assert (=> d!29251 (= lt!54499 (containsKey!158 (toList!787 lt!53909) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29251 (= (contains!820 lt!53909 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54496)))

(declare-fun b!106499 () Bool)

(declare-fun lt!54497 () Unit!3218)

(assert (=> b!106499 (= e!69287 lt!54497)))

(assert (=> b!106499 (= lt!54497 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53909) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106499 (isDefined!108 (getValueByKey!154 (toList!787 lt!53909) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106500 () Bool)

(declare-fun Unit!3273 () Unit!3218)

(assert (=> b!106500 (= e!69287 Unit!3273)))

(declare-fun b!106501 () Bool)

(assert (=> b!106501 (= e!69286 (isDefined!108 (getValueByKey!154 (toList!787 lt!53909) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29251 c!18634) b!106499))

(assert (= (and d!29251 (not c!18634)) b!106500))

(assert (= (and d!29251 (not res!52905)) b!106501))

(declare-fun m!119007 () Bool)

(assert (=> d!29251 m!119007))

(declare-fun m!119009 () Bool)

(assert (=> b!106499 m!119009))

(declare-fun m!119011 () Bool)

(assert (=> b!106499 m!119011))

(assert (=> b!106499 m!119011))

(declare-fun m!119013 () Bool)

(assert (=> b!106499 m!119013))

(assert (=> b!106501 m!119011))

(assert (=> b!106501 m!119011))

(assert (=> b!106501 m!119013))

(assert (=> bm!11141 d!29251))

(declare-fun d!29253 () Bool)

(declare-fun res!52906 () Bool)

(declare-fun e!69288 () Bool)

(assert (=> d!29253 (=> res!52906 e!69288)))

(assert (=> d!29253 (= res!52906 (and ((_ is Cons!1612) (toList!787 lt!53698)) (= (_1!1201 (h!2209 (toList!787 lt!53698))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29253 (= (containsKey!158 (toList!787 lt!53698) #b0000000000000000000000000000000000000000000000000000000000000000) e!69288)))

(declare-fun b!106502 () Bool)

(declare-fun e!69289 () Bool)

(assert (=> b!106502 (= e!69288 e!69289)))

(declare-fun res!52907 () Bool)

(assert (=> b!106502 (=> (not res!52907) (not e!69289))))

(assert (=> b!106502 (= res!52907 (and (or (not ((_ is Cons!1612) (toList!787 lt!53698))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53698))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1612) (toList!787 lt!53698)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53698))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106503 () Bool)

(assert (=> b!106503 (= e!69289 (containsKey!158 (t!5690 (toList!787 lt!53698)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29253 (not res!52906)) b!106502))

(assert (= (and b!106502 res!52907) b!106503))

(declare-fun m!119015 () Bool)

(assert (=> b!106503 m!119015))

(assert (=> d!28849 d!29253))

(assert (=> d!28715 d!28711))

(declare-fun call!11262 () Bool)

(declare-fun lt!54502 () SeekEntryResult!262)

(declare-fun bm!11259 () Bool)

(declare-fun c!18640 () Bool)

(assert (=> bm!11259 (= call!11262 (inRange!0 (ite c!18640 (index!3196 lt!54502) (index!3199 lt!54502)) (mask!6726 newMap!16)))))

(declare-fun b!106520 () Bool)

(declare-fun e!69301 () Bool)

(declare-fun e!69298 () Bool)

(assert (=> b!106520 (= e!69301 e!69298)))

(declare-fun res!52919 () Bool)

(assert (=> b!106520 (= res!52919 call!11262)))

(assert (=> b!106520 (=> (not res!52919) (not e!69298))))

(declare-fun b!106521 () Bool)

(declare-fun res!52916 () Bool)

(declare-fun e!69300 () Bool)

(assert (=> b!106521 (=> (not res!52916) (not e!69300))))

(assert (=> b!106521 (= res!52916 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3199 lt!54502)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106522 () Bool)

(declare-fun e!69299 () Bool)

(assert (=> b!106522 (= e!69299 ((_ is Undefined!262) lt!54502))))

(declare-fun b!106523 () Bool)

(declare-fun res!52918 () Bool)

(assert (=> b!106523 (=> (not res!52918) (not e!69300))))

(assert (=> b!106523 (= res!52918 call!11262)))

(assert (=> b!106523 (= e!69299 e!69300)))

(declare-fun b!106524 () Bool)

(declare-fun call!11263 () Bool)

(assert (=> b!106524 (= e!69300 (not call!11263))))

(declare-fun b!106525 () Bool)

(assert (=> b!106525 (= e!69298 (not call!11263))))

(declare-fun b!106526 () Bool)

(assert (=> b!106526 (= e!69301 e!69299)))

(declare-fun c!18639 () Bool)

(assert (=> b!106526 (= c!18639 ((_ is MissingVacant!262) lt!54502))))

(declare-fun b!106527 () Bool)

(declare-fun res!52917 () Bool)

(assert (=> b!106527 (= res!52917 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3196 lt!54502)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106527 (=> (not res!52917) (not e!69298))))

(declare-fun bm!11260 () Bool)

(assert (=> bm!11260 (= call!11263 (arrayContainsKey!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!29255 () Bool)

(assert (=> d!29255 e!69301))

(assert (=> d!29255 (= c!18640 ((_ is MissingZero!262) lt!54502))))

(assert (=> d!29255 (= lt!54502 (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(assert (=> d!29255 true))

(declare-fun _$34!892 () Unit!3218)

(assert (=> d!29255 (= (choose!661 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (defaultEntry!2581 newMap!16)) _$34!892)))

(assert (= (and d!29255 c!18640) b!106520))

(assert (= (and d!29255 (not c!18640)) b!106526))

(assert (= (and b!106520 res!52919) b!106527))

(assert (= (and b!106527 res!52917) b!106525))

(assert (= (and b!106526 c!18639) b!106523))

(assert (= (and b!106526 (not c!18639)) b!106522))

(assert (= (and b!106523 res!52918) b!106521))

(assert (= (and b!106521 res!52916) b!106524))

(assert (= (or b!106520 b!106523) bm!11259))

(assert (= (or b!106525 b!106524) bm!11260))

(declare-fun m!119017 () Bool)

(assert (=> bm!11259 m!119017))

(assert (=> bm!11260 m!116875))

(assert (=> bm!11260 m!117157))

(declare-fun m!119019 () Bool)

(assert (=> b!106521 m!119019))

(declare-fun m!119021 () Bool)

(assert (=> b!106527 m!119021))

(assert (=> d!29255 m!116875))

(assert (=> d!29255 m!117159))

(assert (=> d!28715 d!29255))

(assert (=> d!28715 d!29133))

(declare-fun d!29257 () Bool)

(declare-fun res!52920 () Bool)

(declare-fun e!69302 () Bool)

(assert (=> d!29257 (=> res!52920 e!69302)))

(assert (=> d!29257 (= res!52920 (and ((_ is Cons!1612) (toList!787 lt!53875)) (= (_1!1201 (h!2209 (toList!787 lt!53875))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29257 (= (containsKey!158 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69302)))

(declare-fun b!106528 () Bool)

(declare-fun e!69303 () Bool)

(assert (=> b!106528 (= e!69302 e!69303)))

(declare-fun res!52921 () Bool)

(assert (=> b!106528 (=> (not res!52921) (not e!69303))))

(assert (=> b!106528 (= res!52921 (and (or (not ((_ is Cons!1612) (toList!787 lt!53875))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53875))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1612) (toList!787 lt!53875)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53875))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!106529 () Bool)

(assert (=> b!106529 (= e!69303 (containsKey!158 (t!5690 (toList!787 lt!53875)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29257 (not res!52920)) b!106528))

(assert (= (and b!106528 res!52921) b!106529))

(assert (=> b!106529 m!117049))

(declare-fun m!119023 () Bool)

(assert (=> b!106529 m!119023))

(assert (=> d!28737 d!29257))

(declare-fun d!29259 () Bool)

(declare-fun lt!54503 () Bool)

(assert (=> d!29259 (= lt!54503 (select (content!109 lt!54221) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun e!69304 () Bool)

(assert (=> d!29259 (= lt!54503 e!69304)))

(declare-fun res!52922 () Bool)

(assert (=> d!29259 (=> (not res!52922) (not e!69304))))

(assert (=> d!29259 (= res!52922 ((_ is Cons!1612) lt!54221))))

(assert (=> d!29259 (= (contains!821 lt!54221 (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))) lt!54503)))

(declare-fun b!106530 () Bool)

(declare-fun e!69305 () Bool)

(assert (=> b!106530 (= e!69304 e!69305)))

(declare-fun res!52923 () Bool)

(assert (=> b!106530 (=> res!52923 e!69305)))

(assert (=> b!106530 (= res!52923 (= (h!2209 lt!54221) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun b!106531 () Bool)

(assert (=> b!106531 (= e!69305 (contains!821 (t!5690 lt!54221) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(assert (= (and d!29259 res!52922) b!106530))

(assert (= (and b!106530 (not res!52923)) b!106531))

(declare-fun m!119025 () Bool)

(assert (=> d!29259 m!119025))

(declare-fun m!119027 () Bool)

(assert (=> d!29259 m!119027))

(declare-fun m!119029 () Bool)

(assert (=> b!106531 m!119029))

(assert (=> b!105920 d!29259))

(declare-fun d!29261 () Bool)

(declare-fun e!69306 () Bool)

(assert (=> d!29261 e!69306))

(declare-fun res!52924 () Bool)

(assert (=> d!29261 (=> res!52924 e!69306)))

(declare-fun lt!54504 () Bool)

(assert (=> d!29261 (= res!52924 (not lt!54504))))

(declare-fun lt!54507 () Bool)

(assert (=> d!29261 (= lt!54504 lt!54507)))

(declare-fun lt!54506 () Unit!3218)

(declare-fun e!69307 () Unit!3218)

(assert (=> d!29261 (= lt!54506 e!69307)))

(declare-fun c!18641 () Bool)

(assert (=> d!29261 (= c!18641 lt!54507)))

(assert (=> d!29261 (= lt!54507 (containsKey!158 (toList!787 (map!1270 (_2!1202 lt!54165))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!29261 (= (contains!820 (map!1270 (_2!1202 lt!54165)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) lt!54504)))

(declare-fun b!106532 () Bool)

(declare-fun lt!54505 () Unit!3218)

(assert (=> b!106532 (= e!69307 lt!54505)))

(assert (=> b!106532 (= lt!54505 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (map!1270 (_2!1202 lt!54165))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> b!106532 (isDefined!108 (getValueByKey!154 (toList!787 (map!1270 (_2!1202 lt!54165))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!106533 () Bool)

(declare-fun Unit!3274 () Unit!3218)

(assert (=> b!106533 (= e!69307 Unit!3274)))

(declare-fun b!106534 () Bool)

(assert (=> b!106534 (= e!69306 (isDefined!108 (getValueByKey!154 (toList!787 (map!1270 (_2!1202 lt!54165))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (= (and d!29261 c!18641) b!106532))

(assert (= (and d!29261 (not c!18641)) b!106533))

(assert (= (and d!29261 (not res!52924)) b!106534))

(assert (=> d!29261 m!116875))

(declare-fun m!119031 () Bool)

(assert (=> d!29261 m!119031))

(assert (=> b!106532 m!116875))

(declare-fun m!119033 () Bool)

(assert (=> b!106532 m!119033))

(assert (=> b!106532 m!116875))

(declare-fun m!119035 () Bool)

(assert (=> b!106532 m!119035))

(assert (=> b!106532 m!119035))

(declare-fun m!119037 () Bool)

(assert (=> b!106532 m!119037))

(assert (=> b!106534 m!116875))

(assert (=> b!106534 m!119035))

(assert (=> b!106534 m!119035))

(assert (=> b!106534 m!119037))

(assert (=> b!105837 d!29261))

(declare-fun d!29263 () Bool)

(assert (=> d!29263 (= (map!1270 (_2!1202 lt!54165)) (getCurrentListMap!464 (_keys!4286 (_2!1202 lt!54165)) (_values!2564 (_2!1202 lt!54165)) (mask!6726 (_2!1202 lt!54165)) (extraKeys!2386 (_2!1202 lt!54165)) (zeroValue!2456 (_2!1202 lt!54165)) (minValue!2456 (_2!1202 lt!54165)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1202 lt!54165))))))

(declare-fun bs!4369 () Bool)

(assert (= bs!4369 d!29263))

(declare-fun m!119039 () Bool)

(assert (=> bs!4369 m!119039))

(assert (=> b!105837 d!29263))

(declare-fun d!29265 () Bool)

(assert (=> d!29265 (= (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105794 d!29265))

(declare-fun c!18644 () Bool)

(declare-fun b!106535 () Bool)

(assert (=> b!106535 (= c!18644 (and ((_ is Cons!1612) (t!5690 (toList!787 (+!135 lt!53604 lt!53606)))) (bvsgt (_1!1201 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53606))))) (_1!1201 lt!53599))))))

(declare-fun e!69311 () List!1616)

(declare-fun e!69310 () List!1616)

(assert (=> b!106535 (= e!69311 e!69310)))

(declare-fun b!106536 () Bool)

(declare-fun e!69309 () List!1616)

(declare-fun call!11264 () List!1616)

(assert (=> b!106536 (= e!69309 call!11264)))

(declare-fun b!106537 () Bool)

(declare-fun e!69312 () Bool)

(declare-fun lt!54508 () List!1616)

(assert (=> b!106537 (= e!69312 (contains!821 lt!54508 (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun b!106538 () Bool)

(declare-fun res!52925 () Bool)

(assert (=> b!106538 (=> (not res!52925) (not e!69312))))

(assert (=> b!106538 (= res!52925 (containsKey!158 lt!54508 (_1!1201 lt!53599)))))

(declare-fun b!106539 () Bool)

(declare-fun call!11265 () List!1616)

(assert (=> b!106539 (= e!69310 call!11265)))

(declare-fun b!106540 () Bool)

(assert (=> b!106540 (= e!69310 call!11265)))

(declare-fun b!106541 () Bool)

(assert (=> b!106541 (= e!69309 e!69311)))

(declare-fun c!18645 () Bool)

(assert (=> b!106541 (= c!18645 (and ((_ is Cons!1612) (t!5690 (toList!787 (+!135 lt!53604 lt!53606)))) (= (_1!1201 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53606))))) (_1!1201 lt!53599))))))

(declare-fun bm!11261 () Bool)

(declare-fun call!11266 () List!1616)

(assert (=> bm!11261 (= call!11266 call!11264)))

(declare-fun b!106542 () Bool)

(assert (=> b!106542 (= e!69311 call!11266)))

(declare-fun b!106543 () Bool)

(declare-fun e!69308 () List!1616)

(assert (=> b!106543 (= e!69308 (insertStrictlySorted!76 (t!5690 (t!5690 (toList!787 (+!135 lt!53604 lt!53606)))) (_1!1201 lt!53599) (_2!1201 lt!53599)))))

(declare-fun bm!11263 () Bool)

(assert (=> bm!11263 (= call!11265 call!11266)))

(declare-fun b!106544 () Bool)

(assert (=> b!106544 (= e!69308 (ite c!18645 (t!5690 (t!5690 (toList!787 (+!135 lt!53604 lt!53606)))) (ite c!18644 (Cons!1612 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53606)))) (t!5690 (t!5690 (toList!787 (+!135 lt!53604 lt!53606))))) Nil!1613)))))

(declare-fun c!18642 () Bool)

(declare-fun bm!11262 () Bool)

(assert (=> bm!11262 (= call!11264 ($colon$colon!80 e!69308 (ite c!18642 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53606)))) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599)))))))

(declare-fun c!18643 () Bool)

(assert (=> bm!11262 (= c!18643 c!18642)))

(declare-fun d!29267 () Bool)

(assert (=> d!29267 e!69312))

(declare-fun res!52926 () Bool)

(assert (=> d!29267 (=> (not res!52926) (not e!69312))))

(assert (=> d!29267 (= res!52926 (isStrictlySorted!304 lt!54508))))

(assert (=> d!29267 (= lt!54508 e!69309)))

(assert (=> d!29267 (= c!18642 (and ((_ is Cons!1612) (t!5690 (toList!787 (+!135 lt!53604 lt!53606)))) (bvslt (_1!1201 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53606))))) (_1!1201 lt!53599))))))

(assert (=> d!29267 (isStrictlySorted!304 (t!5690 (toList!787 (+!135 lt!53604 lt!53606))))))

(assert (=> d!29267 (= (insertStrictlySorted!76 (t!5690 (toList!787 (+!135 lt!53604 lt!53606))) (_1!1201 lt!53599) (_2!1201 lt!53599)) lt!54508)))

(assert (= (and d!29267 c!18642) b!106536))

(assert (= (and d!29267 (not c!18642)) b!106541))

(assert (= (and b!106541 c!18645) b!106542))

(assert (= (and b!106541 (not c!18645)) b!106535))

(assert (= (and b!106535 c!18644) b!106539))

(assert (= (and b!106535 (not c!18644)) b!106540))

(assert (= (or b!106539 b!106540) bm!11263))

(assert (= (or b!106542 bm!11263) bm!11261))

(assert (= (or b!106536 bm!11261) bm!11262))

(assert (= (and bm!11262 c!18643) b!106543))

(assert (= (and bm!11262 (not c!18643)) b!106544))

(assert (= (and d!29267 res!52926) b!106538))

(assert (= (and b!106538 res!52925) b!106537))

(declare-fun m!119041 () Bool)

(assert (=> b!106537 m!119041))

(declare-fun m!119043 () Bool)

(assert (=> d!29267 m!119043))

(declare-fun m!119045 () Bool)

(assert (=> d!29267 m!119045))

(declare-fun m!119047 () Bool)

(assert (=> b!106538 m!119047))

(declare-fun m!119049 () Bool)

(assert (=> b!106543 m!119049))

(declare-fun m!119051 () Bool)

(assert (=> bm!11262 m!119051))

(assert (=> b!105772 d!29267))

(declare-fun d!29269 () Bool)

(declare-fun e!69313 () Bool)

(assert (=> d!29269 e!69313))

(declare-fun res!52927 () Bool)

(assert (=> d!29269 (=> res!52927 e!69313)))

(declare-fun lt!54509 () Bool)

(assert (=> d!29269 (= res!52927 (not lt!54509))))

(declare-fun lt!54512 () Bool)

(assert (=> d!29269 (= lt!54509 lt!54512)))

(declare-fun lt!54511 () Unit!3218)

(declare-fun e!69314 () Unit!3218)

(assert (=> d!29269 (= lt!54511 e!69314)))

(declare-fun c!18646 () Bool)

(assert (=> d!29269 (= c!18646 lt!54512)))

(assert (=> d!29269 (= lt!54512 (containsKey!158 (toList!787 lt!54050) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29269 (= (contains!820 lt!54050 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54509)))

(declare-fun b!106545 () Bool)

(declare-fun lt!54510 () Unit!3218)

(assert (=> b!106545 (= e!69314 lt!54510)))

(assert (=> b!106545 (= lt!54510 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54050) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106545 (isDefined!108 (getValueByKey!154 (toList!787 lt!54050) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106546 () Bool)

(declare-fun Unit!3275 () Unit!3218)

(assert (=> b!106546 (= e!69314 Unit!3275)))

(declare-fun b!106547 () Bool)

(assert (=> b!106547 (= e!69313 (isDefined!108 (getValueByKey!154 (toList!787 lt!54050) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29269 c!18646) b!106545))

(assert (= (and d!29269 (not c!18646)) b!106546))

(assert (= (and d!29269 (not res!52927)) b!106547))

(declare-fun m!119053 () Bool)

(assert (=> d!29269 m!119053))

(declare-fun m!119055 () Bool)

(assert (=> b!106545 m!119055))

(declare-fun m!119057 () Bool)

(assert (=> b!106545 m!119057))

(assert (=> b!106545 m!119057))

(declare-fun m!119059 () Bool)

(assert (=> b!106545 m!119059))

(assert (=> b!106547 m!119057))

(assert (=> b!106547 m!119057))

(assert (=> b!106547 m!119059))

(assert (=> b!105707 d!29269))

(declare-fun d!29271 () Bool)

(assert (=> d!29271 (= (size!2312 newMap!16) (bvadd (_size!498 newMap!16) (bvsdiv (bvadd (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!105697 d!29271))

(declare-fun d!29273 () Bool)

(assert (=> d!29273 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695))))

(declare-fun lt!54513 () Unit!3218)

(assert (=> d!29273 (= lt!54513 (choose!671 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695))))

(declare-fun e!69315 () Bool)

(assert (=> d!29273 e!69315))

(declare-fun res!52928 () Bool)

(assert (=> d!29273 (=> (not res!52928) (not e!69315))))

(assert (=> d!29273 (= res!52928 (isStrictlySorted!304 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699)))))))

(assert (=> d!29273 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695) lt!54513)))

(declare-fun b!106548 () Bool)

(assert (=> b!106548 (= e!69315 (containsKey!158 (toList!787 (+!135 lt!53697 (tuple2!2381 lt!53694 lt!53699))) lt!53695))))

(assert (= (and d!29273 res!52928) b!106548))

(assert (=> d!29273 m!117767))

(assert (=> d!29273 m!117767))

(assert (=> d!29273 m!117769))

(declare-fun m!119061 () Bool)

(assert (=> d!29273 m!119061))

(declare-fun m!119063 () Bool)

(assert (=> d!29273 m!119063))

(assert (=> b!106548 m!117763))

(assert (=> b!105788 d!29273))

(assert (=> b!105788 d!29091))

(assert (=> b!105788 d!29093))

(declare-fun d!29275 () Bool)

(declare-fun res!52929 () Bool)

(declare-fun e!69316 () Bool)

(assert (=> d!29275 (=> res!52929 e!69316)))

(assert (=> d!29275 (= res!52929 (and ((_ is Cons!1612) lt!54211) (= (_1!1201 (h!2209 lt!54211)) (_1!1201 lt!53599))))))

(assert (=> d!29275 (= (containsKey!158 lt!54211 (_1!1201 lt!53599)) e!69316)))

(declare-fun b!106549 () Bool)

(declare-fun e!69317 () Bool)

(assert (=> b!106549 (= e!69316 e!69317)))

(declare-fun res!52930 () Bool)

(assert (=> b!106549 (=> (not res!52930) (not e!69317))))

(assert (=> b!106549 (= res!52930 (and (or (not ((_ is Cons!1612) lt!54211)) (bvsle (_1!1201 (h!2209 lt!54211)) (_1!1201 lt!53599))) ((_ is Cons!1612) lt!54211) (bvslt (_1!1201 (h!2209 lt!54211)) (_1!1201 lt!53599))))))

(declare-fun b!106550 () Bool)

(assert (=> b!106550 (= e!69317 (containsKey!158 (t!5690 lt!54211) (_1!1201 lt!53599)))))

(assert (= (and d!29275 (not res!52929)) b!106549))

(assert (= (and b!106549 res!52930) b!106550))

(declare-fun m!119065 () Bool)

(assert (=> b!106550 m!119065))

(assert (=> b!105899 d!29275))

(declare-fun d!29277 () Bool)

(assert (=> d!29277 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883))))

(declare-fun lt!54514 () Unit!3218)

(assert (=> d!29277 (= lt!54514 (choose!671 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883))))

(declare-fun e!69318 () Bool)

(assert (=> d!29277 e!69318))

(declare-fun res!52931 () Bool)

(assert (=> d!29277 (=> (not res!52931) (not e!69318))))

(assert (=> d!29277 (= res!52931 (isStrictlySorted!304 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29277 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883) lt!54514)))

(declare-fun b!106551 () Bool)

(assert (=> b!106551 (= e!69318 (containsKey!158 (toList!787 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53883))))

(assert (= (and d!29277 res!52931) b!106551))

(assert (=> d!29277 m!117553))

(assert (=> d!29277 m!117553))

(assert (=> d!29277 m!117555))

(declare-fun m!119067 () Bool)

(assert (=> d!29277 m!119067))

(declare-fun m!119069 () Bool)

(assert (=> d!29277 m!119069))

(assert (=> b!106551 m!117549))

(assert (=> b!105655 d!29277))

(assert (=> b!105655 d!29099))

(assert (=> b!105655 d!29101))

(assert (=> b!105588 d!28979))

(declare-fun d!29279 () Bool)

(assert (=> d!29279 (= (apply!98 lt!53937 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1335 (getValueByKey!154 (toList!787 lt!53937) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4370 () Bool)

(assert (= bs!4370 d!29279))

(assert (=> bs!4370 m!117265))

(declare-fun m!119071 () Bool)

(assert (=> bs!4370 m!119071))

(assert (=> bs!4370 m!119071))

(declare-fun m!119073 () Bool)

(assert (=> bs!4370 m!119073))

(assert (=> b!105581 d!29279))

(declare-fun d!29281 () Bool)

(declare-fun c!18647 () Bool)

(assert (=> d!29281 (= c!18647 ((_ is ValueCellFull!995) (select (arr!2051 (_values!2564 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!69319 () V!3217)

(assert (=> d!29281 (= (get!1331 (select (arr!2051 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69319)))

(declare-fun b!106552 () Bool)

(assert (=> b!106552 (= e!69319 (get!1333 (select (arr!2051 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106553 () Bool)

(assert (=> b!106553 (= e!69319 (get!1334 (select (arr!2051 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29281 c!18647) b!106552))

(assert (= (and d!29281 (not c!18647)) b!106553))

(assert (=> b!106552 m!117367))

(assert (=> b!106552 m!117291))

(declare-fun m!119075 () Bool)

(assert (=> b!106552 m!119075))

(assert (=> b!106553 m!117367))

(assert (=> b!106553 m!117291))

(declare-fun m!119077 () Bool)

(assert (=> b!106553 m!119077))

(assert (=> b!105581 d!29281))

(declare-fun d!29283 () Bool)

(assert (=> d!29283 (= ($colon$colon!80 e!68934 (ite c!18452 (h!2209 (toList!787 lt!53604)) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606)))) (Cons!1612 (ite c!18452 (h!2209 (toList!787 lt!53604)) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))) e!68934))))

(assert (=> bm!11193 d!29283))

(assert (=> b!105843 d!28715))

(assert (=> d!28891 d!28887))

(assert (=> d!28891 d!28885))

(assert (=> d!28891 d!28893))

(assert (=> d!28891 d!28889))

(declare-fun d!29285 () Bool)

(declare-fun c!18648 () Bool)

(assert (=> d!29285 (= c!18648 ((_ is Nil!1613) (toList!787 lt!53727)))))

(declare-fun e!69320 () (InoxSet tuple2!2380))

(assert (=> d!29285 (= (content!109 (toList!787 lt!53727)) e!69320)))

(declare-fun b!106554 () Bool)

(assert (=> b!106554 (= e!69320 ((as const (Array tuple2!2380 Bool)) false))))

(declare-fun b!106555 () Bool)

(assert (=> b!106555 (= e!69320 ((_ map or) (store ((as const (Array tuple2!2380 Bool)) false) (h!2209 (toList!787 lt!53727)) true) (content!109 (t!5690 (toList!787 lt!53727)))))))

(assert (= (and d!29285 c!18648) b!106554))

(assert (= (and d!29285 (not c!18648)) b!106555))

(declare-fun m!119079 () Bool)

(assert (=> b!106555 m!119079))

(declare-fun m!119081 () Bool)

(assert (=> b!106555 m!119081))

(assert (=> d!28741 d!29285))

(assert (=> d!28871 d!28869))

(declare-fun d!29287 () Bool)

(assert (=> d!29287 (= (getValueByKey!154 lt!53713 (_1!1201 lt!53599)) (Some!159 (_2!1201 lt!53599)))))

(assert (=> d!29287 true))

(declare-fun _$22!434 () Unit!3218)

(assert (=> d!29287 (= (choose!667 lt!53713 (_1!1201 lt!53599) (_2!1201 lt!53599)) _$22!434)))

(declare-fun bs!4371 () Bool)

(assert (= bs!4371 d!29287))

(assert (=> bs!4371 m!117089))

(assert (=> d!28871 d!29287))

(declare-fun d!29289 () Bool)

(declare-fun res!52932 () Bool)

(declare-fun e!69321 () Bool)

(assert (=> d!29289 (=> res!52932 e!69321)))

(assert (=> d!29289 (= res!52932 (or ((_ is Nil!1613) lt!53713) ((_ is Nil!1613) (t!5690 lt!53713))))))

(assert (=> d!29289 (= (isStrictlySorted!304 lt!53713) e!69321)))

(declare-fun b!106556 () Bool)

(declare-fun e!69322 () Bool)

(assert (=> b!106556 (= e!69321 e!69322)))

(declare-fun res!52933 () Bool)

(assert (=> b!106556 (=> (not res!52933) (not e!69322))))

(assert (=> b!106556 (= res!52933 (bvslt (_1!1201 (h!2209 lt!53713)) (_1!1201 (h!2209 (t!5690 lt!53713)))))))

(declare-fun b!106557 () Bool)

(assert (=> b!106557 (= e!69322 (isStrictlySorted!304 (t!5690 lt!53713)))))

(assert (= (and d!29289 (not res!52932)) b!106556))

(assert (= (and b!106556 res!52933) b!106557))

(declare-fun m!119083 () Bool)

(assert (=> b!106557 m!119083))

(assert (=> d!28871 d!29289))

(declare-fun b!106558 () Bool)

(declare-fun c!18651 () Bool)

(assert (=> b!106558 (= c!18651 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53604))) (bvsgt (_1!1201 (h!2209 (t!5690 (toList!787 lt!53604)))) (_1!1201 lt!53599))))))

(declare-fun e!69326 () List!1616)

(declare-fun e!69325 () List!1616)

(assert (=> b!106558 (= e!69326 e!69325)))

(declare-fun b!106559 () Bool)

(declare-fun e!69324 () List!1616)

(declare-fun call!11267 () List!1616)

(assert (=> b!106559 (= e!69324 call!11267)))

(declare-fun b!106560 () Bool)

(declare-fun e!69327 () Bool)

(declare-fun lt!54515 () List!1616)

(assert (=> b!106560 (= e!69327 (contains!821 lt!54515 (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun b!106561 () Bool)

(declare-fun res!52934 () Bool)

(assert (=> b!106561 (=> (not res!52934) (not e!69327))))

(assert (=> b!106561 (= res!52934 (containsKey!158 lt!54515 (_1!1201 lt!53599)))))

(declare-fun b!106562 () Bool)

(declare-fun call!11268 () List!1616)

(assert (=> b!106562 (= e!69325 call!11268)))

(declare-fun b!106563 () Bool)

(assert (=> b!106563 (= e!69325 call!11268)))

(declare-fun b!106564 () Bool)

(assert (=> b!106564 (= e!69324 e!69326)))

(declare-fun c!18652 () Bool)

(assert (=> b!106564 (= c!18652 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53604))) (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53604)))) (_1!1201 lt!53599))))))

(declare-fun bm!11264 () Bool)

(declare-fun call!11269 () List!1616)

(assert (=> bm!11264 (= call!11269 call!11267)))

(declare-fun b!106565 () Bool)

(assert (=> b!106565 (= e!69326 call!11269)))

(declare-fun b!106566 () Bool)

(declare-fun e!69323 () List!1616)

(assert (=> b!106566 (= e!69323 (insertStrictlySorted!76 (t!5690 (t!5690 (toList!787 lt!53604))) (_1!1201 lt!53599) (_2!1201 lt!53599)))))

(declare-fun bm!11266 () Bool)

(assert (=> bm!11266 (= call!11268 call!11269)))

(declare-fun b!106567 () Bool)

(assert (=> b!106567 (= e!69323 (ite c!18652 (t!5690 (t!5690 (toList!787 lt!53604))) (ite c!18651 (Cons!1612 (h!2209 (t!5690 (toList!787 lt!53604))) (t!5690 (t!5690 (toList!787 lt!53604)))) Nil!1613)))))

(declare-fun bm!11265 () Bool)

(declare-fun c!18649 () Bool)

(assert (=> bm!11265 (= call!11267 ($colon$colon!80 e!69323 (ite c!18649 (h!2209 (t!5690 (toList!787 lt!53604))) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599)))))))

(declare-fun c!18650 () Bool)

(assert (=> bm!11265 (= c!18650 c!18649)))

(declare-fun d!29291 () Bool)

(assert (=> d!29291 e!69327))

(declare-fun res!52935 () Bool)

(assert (=> d!29291 (=> (not res!52935) (not e!69327))))

(assert (=> d!29291 (= res!52935 (isStrictlySorted!304 lt!54515))))

(assert (=> d!29291 (= lt!54515 e!69324)))

(assert (=> d!29291 (= c!18649 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53604))) (bvslt (_1!1201 (h!2209 (t!5690 (toList!787 lt!53604)))) (_1!1201 lt!53599))))))

(assert (=> d!29291 (isStrictlySorted!304 (t!5690 (toList!787 lt!53604)))))

(assert (=> d!29291 (= (insertStrictlySorted!76 (t!5690 (toList!787 lt!53604)) (_1!1201 lt!53599) (_2!1201 lt!53599)) lt!54515)))

(assert (= (and d!29291 c!18649) b!106559))

(assert (= (and d!29291 (not c!18649)) b!106564))

(assert (= (and b!106564 c!18652) b!106565))

(assert (= (and b!106564 (not c!18652)) b!106558))

(assert (= (and b!106558 c!18651) b!106562))

(assert (= (and b!106558 (not c!18651)) b!106563))

(assert (= (or b!106562 b!106563) bm!11266))

(assert (= (or b!106565 bm!11266) bm!11264))

(assert (= (or b!106559 bm!11264) bm!11265))

(assert (= (and bm!11265 c!18650) b!106566))

(assert (= (and bm!11265 (not c!18650)) b!106567))

(assert (= (and d!29291 res!52935) b!106561))

(assert (= (and b!106561 res!52934) b!106560))

(declare-fun m!119085 () Bool)

(assert (=> b!106560 m!119085))

(declare-fun m!119087 () Bool)

(assert (=> d!29291 m!119087))

(assert (=> d!29291 m!118989))

(declare-fun m!119089 () Bool)

(assert (=> b!106561 m!119089))

(declare-fun m!119091 () Bool)

(assert (=> b!106566 m!119091))

(declare-fun m!119093 () Bool)

(assert (=> bm!11265 m!119093))

(assert (=> b!105904 d!29291))

(declare-fun d!29293 () Bool)

(declare-fun res!52936 () Bool)

(declare-fun e!69328 () Bool)

(assert (=> d!29293 (=> res!52936 e!69328)))

(assert (=> d!29293 (= res!52936 (or ((_ is Nil!1613) lt!54221) ((_ is Nil!1613) (t!5690 lt!54221))))))

(assert (=> d!29293 (= (isStrictlySorted!304 lt!54221) e!69328)))

(declare-fun b!106568 () Bool)

(declare-fun e!69329 () Bool)

(assert (=> b!106568 (= e!69328 e!69329)))

(declare-fun res!52937 () Bool)

(assert (=> b!106568 (=> (not res!52937) (not e!69329))))

(assert (=> b!106568 (= res!52937 (bvslt (_1!1201 (h!2209 lt!54221)) (_1!1201 (h!2209 (t!5690 lt!54221)))))))

(declare-fun b!106569 () Bool)

(assert (=> b!106569 (= e!69329 (isStrictlySorted!304 (t!5690 lt!54221)))))

(assert (= (and d!29293 (not res!52936)) b!106568))

(assert (= (and b!106568 res!52937) b!106569))

(declare-fun m!119095 () Bool)

(assert (=> b!106569 m!119095))

(assert (=> d!28883 d!29293))

(declare-fun d!29295 () Bool)

(declare-fun res!52938 () Bool)

(declare-fun e!69330 () Bool)

(assert (=> d!29295 (=> res!52938 e!69330)))

(assert (=> d!29295 (= res!52938 (or ((_ is Nil!1613) (toList!787 lt!53604)) ((_ is Nil!1613) (t!5690 (toList!787 lt!53604)))))))

(assert (=> d!29295 (= (isStrictlySorted!304 (toList!787 lt!53604)) e!69330)))

(declare-fun b!106570 () Bool)

(declare-fun e!69331 () Bool)

(assert (=> b!106570 (= e!69330 e!69331)))

(declare-fun res!52939 () Bool)

(assert (=> b!106570 (=> (not res!52939) (not e!69331))))

(assert (=> b!106570 (= res!52939 (bvslt (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 (h!2209 (t!5690 (toList!787 lt!53604))))))))

(declare-fun b!106571 () Bool)

(assert (=> b!106571 (= e!69331 (isStrictlySorted!304 (t!5690 (toList!787 lt!53604))))))

(assert (= (and d!29295 (not res!52938)) b!106570))

(assert (= (and b!106570 res!52939) b!106571))

(assert (=> b!106571 m!118989))

(assert (=> d!28883 d!29295))

(declare-fun d!29297 () Bool)

(declare-fun lt!54516 () Bool)

(assert (=> d!29297 (= lt!54516 (select (content!109 (toList!787 lt!54042)) (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun e!69332 () Bool)

(assert (=> d!29297 (= lt!54516 e!69332)))

(declare-fun res!52940 () Bool)

(assert (=> d!29297 (=> (not res!52940) (not e!69332))))

(assert (=> d!29297 (= res!52940 ((_ is Cons!1612) (toList!787 lt!54042)))))

(assert (=> d!29297 (= (contains!821 (toList!787 lt!54042) (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54516)))

(declare-fun b!106572 () Bool)

(declare-fun e!69333 () Bool)

(assert (=> b!106572 (= e!69332 e!69333)))

(declare-fun res!52941 () Bool)

(assert (=> b!106572 (=> res!52941 e!69333)))

(assert (=> b!106572 (= res!52941 (= (h!2209 (toList!787 lt!54042)) (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106573 () Bool)

(assert (=> b!106573 (= e!69333 (contains!821 (t!5690 (toList!787 lt!54042)) (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (= (and d!29297 res!52940) b!106572))

(assert (= (and b!106572 (not res!52941)) b!106573))

(declare-fun m!119097 () Bool)

(assert (=> d!29297 m!119097))

(declare-fun m!119099 () Bool)

(assert (=> d!29297 m!119099))

(declare-fun m!119101 () Bool)

(assert (=> b!106573 m!119101))

(assert (=> b!105677 d!29297))

(declare-fun d!29299 () Bool)

(assert (=> d!29299 (= (apply!98 lt!53909 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1335 (getValueByKey!154 (toList!787 lt!53909) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4372 () Bool)

(assert (= bs!4372 d!29299))

(assert (=> bs!4372 m!119011))

(assert (=> bs!4372 m!119011))

(declare-fun m!119103 () Bool)

(assert (=> bs!4372 m!119103))

(assert (=> b!105533 d!29299))

(declare-fun d!29301 () Bool)

(assert (=> d!29301 (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54517 () Unit!3218)

(assert (=> d!29301 (= lt!54517 (choose!671 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69334 () Bool)

(assert (=> d!29301 e!69334))

(declare-fun res!52942 () Bool)

(assert (=> d!29301 (=> (not res!52942) (not e!69334))))

(assert (=> d!29301 (= res!52942 (isStrictlySorted!304 (toList!787 lt!53698)))))

(assert (=> d!29301 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000) lt!54517)))

(declare-fun b!106574 () Bool)

(assert (=> b!106574 (= e!69334 (containsKey!158 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29301 res!52942) b!106574))

(assert (=> d!29301 m!117875))

(assert (=> d!29301 m!117875))

(assert (=> d!29301 m!117877))

(declare-fun m!119105 () Bool)

(assert (=> d!29301 m!119105))

(assert (=> d!29301 m!118881))

(assert (=> b!106574 m!117871))

(assert (=> b!105857 d!29301))

(assert (=> b!105857 d!29247))

(assert (=> b!105857 d!29249))

(declare-fun d!29303 () Bool)

(declare-fun e!69335 () Bool)

(assert (=> d!29303 e!69335))

(declare-fun res!52944 () Bool)

(assert (=> d!29303 (=> (not res!52944) (not e!69335))))

(declare-fun lt!54521 () ListLongMap!1543)

(assert (=> d!29303 (= res!52944 (contains!820 lt!54521 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun lt!54518 () List!1616)

(assert (=> d!29303 (= lt!54521 (ListLongMap!1544 lt!54518))))

(declare-fun lt!54519 () Unit!3218)

(declare-fun lt!54520 () Unit!3218)

(assert (=> d!29303 (= lt!54519 lt!54520)))

(assert (=> d!29303 (= (getValueByKey!154 lt!54518 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29303 (= lt!54520 (lemmaContainsTupThenGetReturnValue!73 lt!54518 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29303 (= lt!54518 (insertStrictlySorted!76 (toList!787 call!11153) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (=> d!29303 (= (+!135 call!11153 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))) lt!54521)))

(declare-fun b!106575 () Bool)

(declare-fun res!52943 () Bool)

(assert (=> b!106575 (=> (not res!52943) (not e!69335))))

(assert (=> b!106575 (= res!52943 (= (getValueByKey!154 (toList!787 lt!54521) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(declare-fun b!106576 () Bool)

(assert (=> b!106576 (= e!69335 (contains!821 (toList!787 lt!54521) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(assert (= (and d!29303 res!52944) b!106575))

(assert (= (and b!106575 res!52943) b!106576))

(declare-fun m!119107 () Bool)

(assert (=> d!29303 m!119107))

(declare-fun m!119109 () Bool)

(assert (=> d!29303 m!119109))

(declare-fun m!119111 () Bool)

(assert (=> d!29303 m!119111))

(declare-fun m!119113 () Bool)

(assert (=> d!29303 m!119113))

(declare-fun m!119115 () Bool)

(assert (=> b!106575 m!119115))

(declare-fun m!119117 () Bool)

(assert (=> b!106576 m!119117))

(assert (=> b!105594 d!29303))

(declare-fun d!29305 () Bool)

(declare-fun res!52945 () Bool)

(declare-fun e!69336 () Bool)

(assert (=> d!29305 (=> res!52945 e!69336)))

(assert (=> d!29305 (= res!52945 (and ((_ is Cons!1612) (toList!787 lt!53727)) (= (_1!1201 (h!2209 (toList!787 lt!53727))) (_1!1201 lt!53606))))))

(assert (=> d!29305 (= (containsKey!158 (toList!787 lt!53727) (_1!1201 lt!53606)) e!69336)))

(declare-fun b!106577 () Bool)

(declare-fun e!69337 () Bool)

(assert (=> b!106577 (= e!69336 e!69337)))

(declare-fun res!52946 () Bool)

(assert (=> b!106577 (=> (not res!52946) (not e!69337))))

(assert (=> b!106577 (= res!52946 (and (or (not ((_ is Cons!1612) (toList!787 lt!53727))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53727))) (_1!1201 lt!53606))) ((_ is Cons!1612) (toList!787 lt!53727)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53727))) (_1!1201 lt!53606))))))

(declare-fun b!106578 () Bool)

(assert (=> b!106578 (= e!69337 (containsKey!158 (t!5690 (toList!787 lt!53727)) (_1!1201 lt!53606)))))

(assert (= (and d!29305 (not res!52945)) b!106577))

(assert (= (and b!106577 res!52946) b!106578))

(declare-fun m!119119 () Bool)

(assert (=> b!106578 m!119119))

(assert (=> d!28899 d!29305))

(assert (=> b!105633 d!28979))

(declare-fun d!29307 () Bool)

(assert (=> d!29307 (isDefined!108 (getValueByKey!154 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun lt!54522 () Unit!3218)

(assert (=> d!29307 (= lt!54522 (choose!671 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun e!69338 () Bool)

(assert (=> d!29307 e!69338))

(declare-fun res!52947 () Bool)

(assert (=> d!29307 (=> (not res!52947) (not e!69338))))

(assert (=> d!29307 (= res!52947 (isStrictlySorted!304 (toList!787 e!68596)))))

(assert (=> d!29307 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) lt!54522)))

(declare-fun b!106579 () Bool)

(assert (=> b!106579 (= e!69338 (containsKey!158 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (= (and d!29307 res!52947) b!106579))

(assert (=> d!29307 m!116875))

(assert (=> d!29307 m!117955))

(assert (=> d!29307 m!117955))

(assert (=> d!29307 m!117957))

(assert (=> d!29307 m!116875))

(declare-fun m!119121 () Bool)

(assert (=> d!29307 m!119121))

(declare-fun m!119123 () Bool)

(assert (=> d!29307 m!119123))

(assert (=> b!106579 m!116875))

(assert (=> b!106579 m!117951))

(assert (=> b!105906 d!29307))

(assert (=> b!105906 d!29153))

(assert (=> b!105906 d!29155))

(declare-fun d!29309 () Bool)

(declare-fun lt!54523 () Bool)

(assert (=> d!29309 (= lt!54523 (select (content!109 lt!54211) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun e!69339 () Bool)

(assert (=> d!29309 (= lt!54523 e!69339)))

(declare-fun res!52948 () Bool)

(assert (=> d!29309 (=> (not res!52948) (not e!69339))))

(assert (=> d!29309 (= res!52948 ((_ is Cons!1612) lt!54211))))

(assert (=> d!29309 (= (contains!821 lt!54211 (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))) lt!54523)))

(declare-fun b!106580 () Bool)

(declare-fun e!69340 () Bool)

(assert (=> b!106580 (= e!69339 e!69340)))

(declare-fun res!52949 () Bool)

(assert (=> b!106580 (=> res!52949 e!69340)))

(assert (=> b!106580 (= res!52949 (= (h!2209 lt!54211) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun b!106581 () Bool)

(assert (=> b!106581 (= e!69340 (contains!821 (t!5690 lt!54211) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(assert (= (and d!29309 res!52948) b!106580))

(assert (= (and b!106580 (not res!52949)) b!106581))

(declare-fun m!119125 () Bool)

(assert (=> d!29309 m!119125))

(declare-fun m!119127 () Bool)

(assert (=> d!29309 m!119127))

(declare-fun m!119129 () Bool)

(assert (=> b!106581 m!119129))

(assert (=> b!105898 d!29309))

(declare-fun d!29311 () Bool)

(assert (=> d!29311 (isDefined!108 (getValueByKey!154 (toList!787 lt!53727) (_1!1201 lt!53606)))))

(declare-fun lt!54524 () Unit!3218)

(assert (=> d!29311 (= lt!54524 (choose!671 (toList!787 lt!53727) (_1!1201 lt!53606)))))

(declare-fun e!69341 () Bool)

(assert (=> d!29311 e!69341))

(declare-fun res!52950 () Bool)

(assert (=> d!29311 (=> (not res!52950) (not e!69341))))

(assert (=> d!29311 (= res!52950 (isStrictlySorted!304 (toList!787 lt!53727)))))

(assert (=> d!29311 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53727) (_1!1201 lt!53606)) lt!54524)))

(declare-fun b!106582 () Bool)

(assert (=> b!106582 (= e!69341 (containsKey!158 (toList!787 lt!53727) (_1!1201 lt!53606)))))

(assert (= (and d!29311 res!52950) b!106582))

(assert (=> d!29311 m!117129))

(assert (=> d!29311 m!117129))

(assert (=> d!29311 m!118043))

(declare-fun m!119131 () Bool)

(assert (=> d!29311 m!119131))

(declare-fun m!119133 () Bool)

(assert (=> d!29311 m!119133))

(assert (=> b!106582 m!118039))

(assert (=> b!105939 d!29311))

(assert (=> b!105939 d!29207))

(assert (=> b!105939 d!28833))

(declare-fun d!29313 () Bool)

(declare-fun e!69342 () Bool)

(assert (=> d!29313 e!69342))

(declare-fun res!52952 () Bool)

(assert (=> d!29313 (=> (not res!52952) (not e!69342))))

(declare-fun lt!54528 () ListLongMap!1543)

(assert (=> d!29313 (= res!52952 (contains!820 lt!54528 (_1!1201 (tuple2!2381 lt!53925 (minValue!2456 newMap!16)))))))

(declare-fun lt!54525 () List!1616)

(assert (=> d!29313 (= lt!54528 (ListLongMap!1544 lt!54525))))

(declare-fun lt!54526 () Unit!3218)

(declare-fun lt!54527 () Unit!3218)

(assert (=> d!29313 (= lt!54526 lt!54527)))

(assert (=> d!29313 (= (getValueByKey!154 lt!54525 (_1!1201 (tuple2!2381 lt!53925 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53925 (minValue!2456 newMap!16)))))))

(assert (=> d!29313 (= lt!54527 (lemmaContainsTupThenGetReturnValue!73 lt!54525 (_1!1201 (tuple2!2381 lt!53925 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53925 (minValue!2456 newMap!16)))))))

(assert (=> d!29313 (= lt!54525 (insertStrictlySorted!76 (toList!787 lt!53926) (_1!1201 (tuple2!2381 lt!53925 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53925 (minValue!2456 newMap!16)))))))

(assert (=> d!29313 (= (+!135 lt!53926 (tuple2!2381 lt!53925 (minValue!2456 newMap!16))) lt!54528)))

(declare-fun b!106583 () Bool)

(declare-fun res!52951 () Bool)

(assert (=> b!106583 (=> (not res!52951) (not e!69342))))

(assert (=> b!106583 (= res!52951 (= (getValueByKey!154 (toList!787 lt!54528) (_1!1201 (tuple2!2381 lt!53925 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53925 (minValue!2456 newMap!16))))))))

(declare-fun b!106584 () Bool)

(assert (=> b!106584 (= e!69342 (contains!821 (toList!787 lt!54528) (tuple2!2381 lt!53925 (minValue!2456 newMap!16))))))

(assert (= (and d!29313 res!52952) b!106583))

(assert (= (and b!106583 res!52951) b!106584))

(declare-fun m!119135 () Bool)

(assert (=> d!29313 m!119135))

(declare-fun m!119137 () Bool)

(assert (=> d!29313 m!119137))

(declare-fun m!119139 () Bool)

(assert (=> d!29313 m!119139))

(declare-fun m!119141 () Bool)

(assert (=> d!29313 m!119141))

(declare-fun m!119143 () Bool)

(assert (=> b!106583 m!119143))

(declare-fun m!119145 () Bool)

(assert (=> b!106584 m!119145))

(assert (=> b!105540 d!29313))

(declare-fun d!29315 () Bool)

(assert (=> d!29315 (= (apply!98 (+!135 lt!53929 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) lt!53928) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53929 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))) lt!53928)))))

(declare-fun bs!4373 () Bool)

(assert (= bs!4373 d!29315))

(declare-fun m!119147 () Bool)

(assert (=> bs!4373 m!119147))

(assert (=> bs!4373 m!119147))

(declare-fun m!119149 () Bool)

(assert (=> bs!4373 m!119149))

(assert (=> b!105540 d!29315))

(declare-fun d!29317 () Bool)

(declare-fun e!69343 () Bool)

(assert (=> d!29317 e!69343))

(declare-fun res!52954 () Bool)

(assert (=> d!29317 (=> (not res!52954) (not e!69343))))

(declare-fun lt!54532 () ListLongMap!1543)

(assert (=> d!29317 (= res!52954 (contains!820 lt!54532 (_1!1201 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))))))

(declare-fun lt!54529 () List!1616)

(assert (=> d!29317 (= lt!54532 (ListLongMap!1544 lt!54529))))

(declare-fun lt!54530 () Unit!3218)

(declare-fun lt!54531 () Unit!3218)

(assert (=> d!29317 (= lt!54530 lt!54531)))

(assert (=> d!29317 (= (getValueByKey!154 lt!54529 (_1!1201 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))) (Some!159 (_2!1201 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29317 (= lt!54531 (lemmaContainsTupThenGetReturnValue!73 lt!54529 (_1!1201 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) (_2!1201 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29317 (= lt!54529 (insertStrictlySorted!76 (toList!787 lt!53929) (_1!1201 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) (_2!1201 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29317 (= (+!135 lt!53929 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) lt!54532)))

(declare-fun b!106585 () Bool)

(declare-fun res!52953 () Bool)

(assert (=> b!106585 (=> (not res!52953) (not e!69343))))

(assert (=> b!106585 (= res!52953 (= (getValueByKey!154 (toList!787 lt!54532) (_1!1201 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))) (Some!159 (_2!1201 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))))))))

(declare-fun b!106586 () Bool)

(assert (=> b!106586 (= e!69343 (contains!821 (toList!787 lt!54532) (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))))))

(assert (= (and d!29317 res!52954) b!106585))

(assert (= (and b!106585 res!52953) b!106586))

(declare-fun m!119151 () Bool)

(assert (=> d!29317 m!119151))

(declare-fun m!119153 () Bool)

(assert (=> d!29317 m!119153))

(declare-fun m!119155 () Bool)

(assert (=> d!29317 m!119155))

(declare-fun m!119157 () Bool)

(assert (=> d!29317 m!119157))

(declare-fun m!119159 () Bool)

(assert (=> b!106585 m!119159))

(declare-fun m!119161 () Bool)

(assert (=> b!106586 m!119161))

(assert (=> b!105540 d!29317))

(declare-fun d!29319 () Bool)

(assert (=> d!29319 (= (apply!98 (+!135 lt!53929 (tuple2!2381 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) lt!53928) (apply!98 lt!53929 lt!53928))))

(declare-fun lt!54533 () Unit!3218)

(assert (=> d!29319 (= lt!54533 (choose!664 lt!53929 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) lt!53928))))

(declare-fun e!69344 () Bool)

(assert (=> d!29319 e!69344))

(declare-fun res!52955 () Bool)

(assert (=> d!29319 (=> (not res!52955) (not e!69344))))

(assert (=> d!29319 (= res!52955 (contains!820 lt!53929 lt!53928))))

(assert (=> d!29319 (= (addApplyDifferent!74 lt!53929 lt!53919 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) lt!53928) lt!54533)))

(declare-fun b!106587 () Bool)

(assert (=> b!106587 (= e!69344 (not (= lt!53928 lt!53919)))))

(assert (= (and d!29319 res!52955) b!106587))

(declare-fun m!119163 () Bool)

(assert (=> d!29319 m!119163))

(assert (=> d!29319 m!117313))

(declare-fun m!119165 () Bool)

(assert (=> d!29319 m!119165))

(assert (=> d!29319 m!117319))

(assert (=> d!29319 m!117319))

(assert (=> d!29319 m!117321))

(assert (=> b!105540 d!29319))

(declare-fun d!29321 () Bool)

(assert (=> d!29321 (= (apply!98 (+!135 lt!53918 (tuple2!2381 lt!53908 (minValue!2456 newMap!16))) lt!53922) (apply!98 lt!53918 lt!53922))))

(declare-fun lt!54534 () Unit!3218)

(assert (=> d!29321 (= lt!54534 (choose!664 lt!53918 lt!53908 (minValue!2456 newMap!16) lt!53922))))

(declare-fun e!69345 () Bool)

(assert (=> d!29321 e!69345))

(declare-fun res!52956 () Bool)

(assert (=> d!29321 (=> (not res!52956) (not e!69345))))

(assert (=> d!29321 (= res!52956 (contains!820 lt!53918 lt!53922))))

(assert (=> d!29321 (= (addApplyDifferent!74 lt!53918 lt!53908 (minValue!2456 newMap!16) lt!53922) lt!54534)))

(declare-fun b!106588 () Bool)

(assert (=> b!106588 (= e!69345 (not (= lt!53922 lt!53908)))))

(assert (= (and d!29321 res!52956) b!106588))

(declare-fun m!119167 () Bool)

(assert (=> d!29321 m!119167))

(assert (=> d!29321 m!117333))

(declare-fun m!119169 () Bool)

(assert (=> d!29321 m!119169))

(assert (=> d!29321 m!117309))

(assert (=> d!29321 m!117309))

(assert (=> d!29321 m!117311))

(assert (=> b!105540 d!29321))

(declare-fun d!29323 () Bool)

(assert (=> d!29323 (= (apply!98 lt!53918 lt!53922) (get!1335 (getValueByKey!154 (toList!787 lt!53918) lt!53922)))))

(declare-fun bs!4374 () Bool)

(assert (= bs!4374 d!29323))

(declare-fun m!119171 () Bool)

(assert (=> bs!4374 m!119171))

(assert (=> bs!4374 m!119171))

(declare-fun m!119173 () Bool)

(assert (=> bs!4374 m!119173))

(assert (=> b!105540 d!29323))

(declare-fun d!29325 () Bool)

(assert (=> d!29325 (= (apply!98 lt!53929 lt!53928) (get!1335 (getValueByKey!154 (toList!787 lt!53929) lt!53928)))))

(declare-fun bs!4375 () Bool)

(assert (= bs!4375 d!29325))

(declare-fun m!119175 () Bool)

(assert (=> bs!4375 m!119175))

(assert (=> bs!4375 m!119175))

(declare-fun m!119177 () Bool)

(assert (=> bs!4375 m!119177))

(assert (=> b!105540 d!29325))

(declare-fun d!29327 () Bool)

(assert (=> d!29327 (= (apply!98 (+!135 lt!53926 (tuple2!2381 lt!53925 (minValue!2456 newMap!16))) lt!53910) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53926 (tuple2!2381 lt!53925 (minValue!2456 newMap!16)))) lt!53910)))))

(declare-fun bs!4376 () Bool)

(assert (= bs!4376 d!29327))

(declare-fun m!119179 () Bool)

(assert (=> bs!4376 m!119179))

(assert (=> bs!4376 m!119179))

(declare-fun m!119181 () Bool)

(assert (=> bs!4376 m!119181))

(assert (=> b!105540 d!29327))

(declare-fun d!29329 () Bool)

(assert (=> d!29329 (= (apply!98 lt!53926 lt!53910) (get!1335 (getValueByKey!154 (toList!787 lt!53926) lt!53910)))))

(declare-fun bs!4377 () Bool)

(assert (= bs!4377 d!29329))

(declare-fun m!119183 () Bool)

(assert (=> bs!4377 m!119183))

(assert (=> bs!4377 m!119183))

(declare-fun m!119185 () Bool)

(assert (=> bs!4377 m!119185))

(assert (=> b!105540 d!29329))

(declare-fun d!29331 () Bool)

(declare-fun e!69346 () Bool)

(assert (=> d!29331 e!69346))

(declare-fun res!52958 () Bool)

(assert (=> d!29331 (=> (not res!52958) (not e!69346))))

(declare-fun lt!54538 () ListLongMap!1543)

(assert (=> d!29331 (= res!52958 (contains!820 lt!54538 (_1!1201 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))))))

(declare-fun lt!54535 () List!1616)

(assert (=> d!29331 (= lt!54538 (ListLongMap!1544 lt!54535))))

(declare-fun lt!54536 () Unit!3218)

(declare-fun lt!54537 () Unit!3218)

(assert (=> d!29331 (= lt!54536 lt!54537)))

(assert (=> d!29331 (= (getValueByKey!154 lt!54535 (_1!1201 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))) (Some!159 (_2!1201 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29331 (= lt!54537 (lemmaContainsTupThenGetReturnValue!73 lt!54535 (_1!1201 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) (_2!1201 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29331 (= lt!54535 (insertStrictlySorted!76 (toList!787 lt!53913) (_1!1201 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) (_2!1201 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))))))

(assert (=> d!29331 (= (+!135 lt!53913 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) lt!54538)))

(declare-fun b!106589 () Bool)

(declare-fun res!52957 () Bool)

(assert (=> b!106589 (=> (not res!52957) (not e!69346))))

(assert (=> b!106589 (= res!52957 (= (getValueByKey!154 (toList!787 lt!54538) (_1!1201 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))) (Some!159 (_2!1201 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))))))))

(declare-fun b!106590 () Bool)

(assert (=> b!106590 (= e!69346 (contains!821 (toList!787 lt!54538) (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))))))

(assert (= (and d!29331 res!52958) b!106589))

(assert (= (and b!106589 res!52957) b!106590))

(declare-fun m!119187 () Bool)

(assert (=> d!29331 m!119187))

(declare-fun m!119189 () Bool)

(assert (=> d!29331 m!119189))

(declare-fun m!119191 () Bool)

(assert (=> d!29331 m!119191))

(declare-fun m!119193 () Bool)

(assert (=> d!29331 m!119193))

(declare-fun m!119195 () Bool)

(assert (=> b!106589 m!119195))

(declare-fun m!119197 () Bool)

(assert (=> b!106590 m!119197))

(assert (=> b!105540 d!29331))

(declare-fun d!29333 () Bool)

(assert (=> d!29333 (= (apply!98 (+!135 lt!53926 (tuple2!2381 lt!53925 (minValue!2456 newMap!16))) lt!53910) (apply!98 lt!53926 lt!53910))))

(declare-fun lt!54539 () Unit!3218)

(assert (=> d!29333 (= lt!54539 (choose!664 lt!53926 lt!53925 (minValue!2456 newMap!16) lt!53910))))

(declare-fun e!69347 () Bool)

(assert (=> d!29333 e!69347))

(declare-fun res!52959 () Bool)

(assert (=> d!29333 (=> (not res!52959) (not e!69347))))

(assert (=> d!29333 (= res!52959 (contains!820 lt!53926 lt!53910))))

(assert (=> d!29333 (= (addApplyDifferent!74 lt!53926 lt!53925 (minValue!2456 newMap!16) lt!53910) lt!54539)))

(declare-fun b!106591 () Bool)

(assert (=> b!106591 (= e!69347 (not (= lt!53910 lt!53925)))))

(assert (= (and d!29333 res!52959) b!106591))

(declare-fun m!119199 () Bool)

(assert (=> d!29333 m!119199))

(assert (=> d!29333 m!117335))

(declare-fun m!119201 () Bool)

(assert (=> d!29333 m!119201))

(assert (=> d!29333 m!117329))

(assert (=> d!29333 m!117329))

(assert (=> d!29333 m!117331))

(assert (=> b!105540 d!29333))

(declare-fun d!29335 () Bool)

(assert (=> d!29335 (contains!820 (+!135 lt!53913 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) lt!53917)))

(declare-fun lt!54540 () Unit!3218)

(assert (=> d!29335 (= lt!54540 (choose!665 lt!53913 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) lt!53917))))

(assert (=> d!29335 (contains!820 lt!53913 lt!53917)))

(assert (=> d!29335 (= (addStillContains!74 lt!53913 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) lt!53917) lt!54540)))

(declare-fun bs!4378 () Bool)

(assert (= bs!4378 d!29335))

(assert (=> bs!4378 m!117315))

(assert (=> bs!4378 m!117315))

(assert (=> bs!4378 m!117317))

(declare-fun m!119203 () Bool)

(assert (=> bs!4378 m!119203))

(declare-fun m!119205 () Bool)

(assert (=> bs!4378 m!119205))

(assert (=> b!105540 d!29335))

(declare-fun b!106592 () Bool)

(declare-fun e!69350 () ListLongMap!1543)

(assert (=> b!106592 (= e!69350 (ListLongMap!1544 Nil!1613))))

(declare-fun d!29337 () Bool)

(declare-fun e!69354 () Bool)

(assert (=> d!29337 e!69354))

(declare-fun res!52962 () Bool)

(assert (=> d!29337 (=> (not res!52962) (not e!69354))))

(declare-fun lt!54545 () ListLongMap!1543)

(assert (=> d!29337 (= res!52962 (not (contains!820 lt!54545 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29337 (= lt!54545 e!69350)))

(declare-fun c!18653 () Bool)

(assert (=> d!29337 (= c!18653 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!29337 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29337 (= (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite c!18304 (_values!2564 newMap!16) lt!53795) (mask!6726 newMap!16) (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54545)))

(declare-fun b!106593 () Bool)

(declare-fun e!69351 () Bool)

(declare-fun e!69349 () Bool)

(assert (=> b!106593 (= e!69351 e!69349)))

(assert (=> b!106593 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun res!52960 () Bool)

(assert (=> b!106593 (= res!52960 (contains!820 lt!54545 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106593 (=> (not res!52960) (not e!69349))))

(declare-fun b!106594 () Bool)

(declare-fun e!69352 () Bool)

(assert (=> b!106594 (= e!69351 e!69352)))

(declare-fun c!18655 () Bool)

(assert (=> b!106594 (= c!18655 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106595 () Bool)

(declare-fun e!69348 () ListLongMap!1543)

(assert (=> b!106595 (= e!69350 e!69348)))

(declare-fun c!18656 () Bool)

(assert (=> b!106595 (= c!18656 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106596 () Bool)

(declare-fun lt!54547 () Unit!3218)

(declare-fun lt!54543 () Unit!3218)

(assert (=> b!106596 (= lt!54547 lt!54543)))

(declare-fun lt!54544 () ListLongMap!1543)

(declare-fun lt!54542 () (_ BitVec 64))

(declare-fun lt!54546 () V!3217)

(declare-fun lt!54541 () (_ BitVec 64))

(assert (=> b!106596 (not (contains!820 (+!135 lt!54544 (tuple2!2381 lt!54541 lt!54546)) lt!54542))))

(assert (=> b!106596 (= lt!54543 (addStillNotContains!47 lt!54544 lt!54541 lt!54546 lt!54542))))

(assert (=> b!106596 (= lt!54542 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106596 (= lt!54546 (get!1331 (select (arr!2051 (ite c!18304 (_values!2564 newMap!16) lt!53795)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106596 (= lt!54541 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11270 () ListLongMap!1543)

(assert (=> b!106596 (= lt!54544 call!11270)))

(assert (=> b!106596 (= e!69348 (+!135 call!11270 (tuple2!2381 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) (get!1331 (select (arr!2051 (ite c!18304 (_values!2564 newMap!16) lt!53795)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106597 () Bool)

(assert (=> b!106597 (= e!69354 e!69351)))

(declare-fun c!18654 () Bool)

(declare-fun e!69353 () Bool)

(assert (=> b!106597 (= c!18654 e!69353)))

(declare-fun res!52963 () Bool)

(assert (=> b!106597 (=> (not res!52963) (not e!69353))))

(assert (=> b!106597 (= res!52963 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!106598 () Bool)

(assert (=> b!106598 (= e!69352 (isEmpty!374 lt!54545))))

(declare-fun b!106599 () Bool)

(assert (=> b!106599 (= e!69348 call!11270)))

(declare-fun b!106600 () Bool)

(declare-fun res!52961 () Bool)

(assert (=> b!106600 (=> (not res!52961) (not e!69354))))

(assert (=> b!106600 (= res!52961 (not (contains!820 lt!54545 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106601 () Bool)

(assert (=> b!106601 (= e!69353 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106601 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!11267 () Bool)

(assert (=> bm!11267 (= call!11270 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite c!18304 (_values!2564 newMap!16) lt!53795) (mask!6726 newMap!16) (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) (minValue!2456 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16)))))

(declare-fun b!106602 () Bool)

(assert (=> b!106602 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> b!106602 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (ite c!18304 (_values!2564 newMap!16) lt!53795))))))

(assert (=> b!106602 (= e!69349 (= (apply!98 lt!54545 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (ite c!18304 (_values!2564 newMap!16) lt!53795)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106603 () Bool)

(assert (=> b!106603 (= e!69352 (= lt!54545 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (ite c!18304 (_values!2564 newMap!16) lt!53795) (mask!6726 newMap!16) (ite (and c!18304 c!18299) lt!53811 (extraKeys!2386 newMap!16)) (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)) (minValue!2456 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2581 newMap!16))))))

(assert (= (and d!29337 c!18653) b!106592))

(assert (= (and d!29337 (not c!18653)) b!106595))

(assert (= (and b!106595 c!18656) b!106596))

(assert (= (and b!106595 (not c!18656)) b!106599))

(assert (= (or b!106596 b!106599) bm!11267))

(assert (= (and d!29337 res!52962) b!106600))

(assert (= (and b!106600 res!52961) b!106597))

(assert (= (and b!106597 res!52963) b!106601))

(assert (= (and b!106597 c!18654) b!106593))

(assert (= (and b!106597 (not c!18654)) b!106594))

(assert (= (and b!106593 res!52960) b!106602))

(assert (= (and b!106594 c!18655) b!106603))

(assert (= (and b!106594 (not c!18655)) b!106598))

(declare-fun b_lambda!4749 () Bool)

(assert (=> (not b_lambda!4749) (not b!106596)))

(assert (=> b!106596 t!5701))

(declare-fun b_and!6561 () Bool)

(assert (= b_and!6557 (and (=> t!5701 result!3459) b_and!6561)))

(assert (=> b!106596 t!5703))

(declare-fun b_and!6563 () Bool)

(assert (= b_and!6559 (and (=> t!5703 result!3461) b_and!6563)))

(declare-fun b_lambda!4751 () Bool)

(assert (=> (not b_lambda!4751) (not b!106602)))

(assert (=> b!106602 t!5701))

(declare-fun b_and!6565 () Bool)

(assert (= b_and!6561 (and (=> t!5701 result!3459) b_and!6565)))

(assert (=> b!106602 t!5703))

(declare-fun b_and!6567 () Bool)

(assert (= b_and!6563 (and (=> t!5703 result!3461) b_and!6567)))

(declare-fun m!119207 () Bool)

(assert (=> d!29337 m!119207))

(assert (=> d!29337 m!117277))

(assert (=> b!106593 m!117265))

(assert (=> b!106593 m!117265))

(declare-fun m!119209 () Bool)

(assert (=> b!106593 m!119209))

(assert (=> b!106601 m!117265))

(assert (=> b!106601 m!117265))

(assert (=> b!106601 m!117267))

(assert (=> b!106602 m!117291))

(assert (=> b!106602 m!117295))

(assert (=> b!106602 m!117291))

(assert (=> b!106602 m!117297))

(assert (=> b!106602 m!117295))

(assert (=> b!106602 m!117265))

(declare-fun m!119211 () Bool)

(assert (=> b!106602 m!119211))

(assert (=> b!106602 m!117265))

(declare-fun m!119213 () Bool)

(assert (=> b!106596 m!119213))

(declare-fun m!119215 () Bool)

(assert (=> b!106596 m!119215))

(declare-fun m!119217 () Bool)

(assert (=> b!106596 m!119217))

(assert (=> b!106596 m!117291))

(assert (=> b!106596 m!117295))

(assert (=> b!106596 m!117265))

(declare-fun m!119219 () Bool)

(assert (=> b!106596 m!119219))

(assert (=> b!106596 m!117295))

(assert (=> b!106596 m!117291))

(assert (=> b!106596 m!117297))

(assert (=> b!106596 m!119215))

(declare-fun m!119221 () Bool)

(assert (=> b!106598 m!119221))

(declare-fun m!119223 () Bool)

(assert (=> b!106600 m!119223))

(declare-fun m!119225 () Bool)

(assert (=> b!106603 m!119225))

(assert (=> bm!11267 m!119225))

(assert (=> b!106595 m!117265))

(assert (=> b!106595 m!117265))

(assert (=> b!106595 m!117267))

(assert (=> b!105540 d!29337))

(declare-fun d!29339 () Bool)

(declare-fun e!69355 () Bool)

(assert (=> d!29339 e!69355))

(declare-fun res!52965 () Bool)

(assert (=> d!29339 (=> (not res!52965) (not e!69355))))

(declare-fun lt!54551 () ListLongMap!1543)

(assert (=> d!29339 (= res!52965 (contains!820 lt!54551 (_1!1201 (tuple2!2381 lt!53908 (minValue!2456 newMap!16)))))))

(declare-fun lt!54548 () List!1616)

(assert (=> d!29339 (= lt!54551 (ListLongMap!1544 lt!54548))))

(declare-fun lt!54549 () Unit!3218)

(declare-fun lt!54550 () Unit!3218)

(assert (=> d!29339 (= lt!54549 lt!54550)))

(assert (=> d!29339 (= (getValueByKey!154 lt!54548 (_1!1201 (tuple2!2381 lt!53908 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53908 (minValue!2456 newMap!16)))))))

(assert (=> d!29339 (= lt!54550 (lemmaContainsTupThenGetReturnValue!73 lt!54548 (_1!1201 (tuple2!2381 lt!53908 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53908 (minValue!2456 newMap!16)))))))

(assert (=> d!29339 (= lt!54548 (insertStrictlySorted!76 (toList!787 lt!53918) (_1!1201 (tuple2!2381 lt!53908 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53908 (minValue!2456 newMap!16)))))))

(assert (=> d!29339 (= (+!135 lt!53918 (tuple2!2381 lt!53908 (minValue!2456 newMap!16))) lt!54551)))

(declare-fun b!106604 () Bool)

(declare-fun res!52964 () Bool)

(assert (=> b!106604 (=> (not res!52964) (not e!69355))))

(assert (=> b!106604 (= res!52964 (= (getValueByKey!154 (toList!787 lt!54551) (_1!1201 (tuple2!2381 lt!53908 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53908 (minValue!2456 newMap!16))))))))

(declare-fun b!106605 () Bool)

(assert (=> b!106605 (= e!69355 (contains!821 (toList!787 lt!54551) (tuple2!2381 lt!53908 (minValue!2456 newMap!16))))))

(assert (= (and d!29339 res!52965) b!106604))

(assert (= (and b!106604 res!52964) b!106605))

(declare-fun m!119227 () Bool)

(assert (=> d!29339 m!119227))

(declare-fun m!119229 () Bool)

(assert (=> d!29339 m!119229))

(declare-fun m!119231 () Bool)

(assert (=> d!29339 m!119231))

(declare-fun m!119233 () Bool)

(assert (=> d!29339 m!119233))

(declare-fun m!119235 () Bool)

(assert (=> b!106604 m!119235))

(declare-fun m!119237 () Bool)

(assert (=> b!106605 m!119237))

(assert (=> b!105540 d!29339))

(declare-fun d!29341 () Bool)

(assert (=> d!29341 (= (apply!98 (+!135 lt!53918 (tuple2!2381 lt!53908 (minValue!2456 newMap!16))) lt!53922) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53918 (tuple2!2381 lt!53908 (minValue!2456 newMap!16)))) lt!53922)))))

(declare-fun bs!4379 () Bool)

(assert (= bs!4379 d!29341))

(declare-fun m!119239 () Bool)

(assert (=> bs!4379 m!119239))

(assert (=> bs!4379 m!119239))

(declare-fun m!119241 () Bool)

(assert (=> bs!4379 m!119241))

(assert (=> b!105540 d!29341))

(declare-fun d!29343 () Bool)

(declare-fun e!69356 () Bool)

(assert (=> d!29343 e!69356))

(declare-fun res!52966 () Bool)

(assert (=> d!29343 (=> res!52966 e!69356)))

(declare-fun lt!54552 () Bool)

(assert (=> d!29343 (= res!52966 (not lt!54552))))

(declare-fun lt!54555 () Bool)

(assert (=> d!29343 (= lt!54552 lt!54555)))

(declare-fun lt!54554 () Unit!3218)

(declare-fun e!69357 () Unit!3218)

(assert (=> d!29343 (= lt!54554 e!69357)))

(declare-fun c!18657 () Bool)

(assert (=> d!29343 (= c!18657 lt!54555)))

(assert (=> d!29343 (= lt!54555 (containsKey!158 (toList!787 (+!135 lt!53913 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))) lt!53917))))

(assert (=> d!29343 (= (contains!820 (+!135 lt!53913 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16)))) lt!53917) lt!54552)))

(declare-fun b!106606 () Bool)

(declare-fun lt!54553 () Unit!3218)

(assert (=> b!106606 (= e!69357 lt!54553)))

(assert (=> b!106606 (= lt!54553 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (+!135 lt!53913 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))) lt!53917))))

(assert (=> b!106606 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53913 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))) lt!53917))))

(declare-fun b!106607 () Bool)

(declare-fun Unit!3276 () Unit!3218)

(assert (=> b!106607 (= e!69357 Unit!3276)))

(declare-fun b!106608 () Bool)

(assert (=> b!106608 (= e!69356 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53913 (tuple2!2381 lt!53924 (ite (and c!18304 c!18299) lt!53601 (zeroValue!2456 newMap!16))))) lt!53917)))))

(assert (= (and d!29343 c!18657) b!106606))

(assert (= (and d!29343 (not c!18657)) b!106607))

(assert (= (and d!29343 (not res!52966)) b!106608))

(declare-fun m!119243 () Bool)

(assert (=> d!29343 m!119243))

(declare-fun m!119245 () Bool)

(assert (=> b!106606 m!119245))

(declare-fun m!119247 () Bool)

(assert (=> b!106606 m!119247))

(assert (=> b!106606 m!119247))

(declare-fun m!119249 () Bool)

(assert (=> b!106606 m!119249))

(assert (=> b!106608 m!119247))

(assert (=> b!106608 m!119247))

(assert (=> b!106608 m!119249))

(assert (=> b!105540 d!29343))

(declare-fun d!29345 () Bool)

(assert (=> d!29345 (= (apply!98 lt!53937 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1335 (getValueByKey!154 (toList!787 lt!53937) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4380 () Bool)

(assert (= bs!4380 d!29345))

(declare-fun m!119251 () Bool)

(assert (=> bs!4380 m!119251))

(assert (=> bs!4380 m!119251))

(declare-fun m!119253 () Bool)

(assert (=> bs!4380 m!119253))

(assert (=> b!105576 d!29345))

(declare-fun b!106611 () Bool)

(declare-fun e!69359 () Option!160)

(assert (=> b!106611 (= e!69359 (getValueByKey!154 (t!5690 (t!5690 lt!53724)) (_1!1201 lt!53606)))))

(declare-fun b!106610 () Bool)

(declare-fun e!69358 () Option!160)

(assert (=> b!106610 (= e!69358 e!69359)))

(declare-fun c!18659 () Bool)

(assert (=> b!106610 (= c!18659 (and ((_ is Cons!1612) (t!5690 lt!53724)) (not (= (_1!1201 (h!2209 (t!5690 lt!53724))) (_1!1201 lt!53606)))))))

(declare-fun d!29347 () Bool)

(declare-fun c!18658 () Bool)

(assert (=> d!29347 (= c!18658 (and ((_ is Cons!1612) (t!5690 lt!53724)) (= (_1!1201 (h!2209 (t!5690 lt!53724))) (_1!1201 lt!53606))))))

(assert (=> d!29347 (= (getValueByKey!154 (t!5690 lt!53724) (_1!1201 lt!53606)) e!69358)))

(declare-fun b!106612 () Bool)

(assert (=> b!106612 (= e!69359 None!158)))

(declare-fun b!106609 () Bool)

(assert (=> b!106609 (= e!69358 (Some!159 (_2!1201 (h!2209 (t!5690 lt!53724)))))))

(assert (= (and d!29347 c!18658) b!106609))

(assert (= (and d!29347 (not c!18658)) b!106610))

(assert (= (and b!106610 c!18659) b!106611))

(assert (= (and b!106610 (not c!18659)) b!106612))

(declare-fun m!119255 () Bool)

(assert (=> b!106611 m!119255))

(assert (=> b!105944 d!29347))

(declare-fun d!29349 () Bool)

(assert (=> d!29349 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4381 () Bool)

(assert (= bs!4381 d!29349))

(assert (=> bs!4381 m!117905))

(declare-fun m!119257 () Bool)

(assert (=> bs!4381 m!119257))

(assert (=> b!105938 d!29349))

(declare-fun b!106615 () Bool)

(declare-fun e!69361 () Option!160)

(assert (=> b!106615 (= e!69361 (getValueByKey!154 (t!5690 (toList!787 lt!53875)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106614 () Bool)

(declare-fun e!69360 () Option!160)

(assert (=> b!106614 (= e!69360 e!69361)))

(declare-fun c!18661 () Bool)

(assert (=> b!106614 (= c!18661 (and ((_ is Cons!1612) (toList!787 lt!53875)) (not (= (_1!1201 (h!2209 (toList!787 lt!53875))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!29351 () Bool)

(declare-fun c!18660 () Bool)

(assert (=> d!29351 (= c!18660 (and ((_ is Cons!1612) (toList!787 lt!53875)) (= (_1!1201 (h!2209 (toList!787 lt!53875))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29351 (= (getValueByKey!154 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000) e!69360)))

(declare-fun b!106616 () Bool)

(assert (=> b!106616 (= e!69361 None!158)))

(declare-fun b!106613 () Bool)

(assert (=> b!106613 (= e!69360 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53875)))))))

(assert (= (and d!29351 c!18660) b!106613))

(assert (= (and d!29351 (not c!18660)) b!106614))

(assert (= (and b!106614 c!18661) b!106615))

(assert (= (and b!106614 (not c!18661)) b!106616))

(declare-fun m!119259 () Bool)

(assert (=> b!106615 m!119259))

(assert (=> b!105938 d!29351))

(declare-fun d!29353 () Bool)

(assert (=> d!29353 (= ($colon$colon!80 e!68851 (ite c!18410 (h!2209 (toList!787 (+!135 lt!53604 lt!53606))) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599)))) (Cons!1612 (ite c!18410 (h!2209 (toList!787 (+!135 lt!53604 lt!53606))) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))) e!68851))))

(assert (=> bm!11174 d!29353))

(assert (=> b!105696 d!29271))

(declare-fun d!29355 () Bool)

(assert (=> d!29355 (contains!820 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))

(declare-fun lt!54558 () Unit!3218)

(declare-fun choose!672 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 64) (_ BitVec 32) Int) Unit!3218)

(assert (=> d!29355 (= lt!54558 (choose!672 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(assert (=> d!29355 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29355 (= (lemmaArrayContainsKeyThenInListMap!30 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54558)))

(declare-fun bs!4382 () Bool)

(assert (= bs!4382 d!29355))

(assert (=> bs!4382 m!117143))

(assert (=> bs!4382 m!117143))

(assert (=> bs!4382 m!116875))

(assert (=> bs!4382 m!117793))

(assert (=> bs!4382 m!116875))

(declare-fun m!119261 () Bool)

(assert (=> bs!4382 m!119261))

(assert (=> bs!4382 m!117277))

(assert (=> b!105836 d!29355))

(declare-fun d!29357 () Bool)

(declare-fun e!69362 () Bool)

(assert (=> d!29357 e!69362))

(declare-fun res!52967 () Bool)

(assert (=> d!29357 (=> res!52967 e!69362)))

(declare-fun lt!54559 () Bool)

(assert (=> d!29357 (= res!52967 (not lt!54559))))

(declare-fun lt!54562 () Bool)

(assert (=> d!29357 (= lt!54559 lt!54562)))

(declare-fun lt!54561 () Unit!3218)

(declare-fun e!69363 () Unit!3218)

(assert (=> d!29357 (= lt!54561 e!69363)))

(declare-fun c!18662 () Bool)

(assert (=> d!29357 (= c!18662 lt!54562)))

(assert (=> d!29357 (= lt!54562 (containsKey!158 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!29357 (= (contains!820 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) lt!54559)))

(declare-fun b!106617 () Bool)

(declare-fun lt!54560 () Unit!3218)

(assert (=> b!106617 (= e!69363 lt!54560)))

(assert (=> b!106617 (= lt!54560 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> b!106617 (isDefined!108 (getValueByKey!154 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!106618 () Bool)

(declare-fun Unit!3277 () Unit!3218)

(assert (=> b!106618 (= e!69363 Unit!3277)))

(declare-fun b!106619 () Bool)

(assert (=> b!106619 (= e!69362 (isDefined!108 (getValueByKey!154 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (= (and d!29357 c!18662) b!106617))

(assert (= (and d!29357 (not c!18662)) b!106618))

(assert (= (and d!29357 (not res!52967)) b!106619))

(assert (=> d!29357 m!116875))

(declare-fun m!119263 () Bool)

(assert (=> d!29357 m!119263))

(assert (=> b!106617 m!116875))

(declare-fun m!119265 () Bool)

(assert (=> b!106617 m!119265))

(assert (=> b!106617 m!116875))

(declare-fun m!119267 () Bool)

(assert (=> b!106617 m!119267))

(assert (=> b!106617 m!119267))

(declare-fun m!119269 () Bool)

(assert (=> b!106617 m!119269))

(assert (=> b!106619 m!116875))

(assert (=> b!106619 m!119267))

(assert (=> b!106619 m!119267))

(assert (=> b!106619 m!119269))

(assert (=> b!105836 d!29357))

(assert (=> b!105836 d!28725))

(declare-fun d!29359 () Bool)

(declare-fun e!69364 () Bool)

(assert (=> d!29359 e!69364))

(declare-fun res!52968 () Bool)

(assert (=> d!29359 (=> res!52968 e!69364)))

(declare-fun lt!54563 () Bool)

(assert (=> d!29359 (= res!52968 (not lt!54563))))

(declare-fun lt!54566 () Bool)

(assert (=> d!29359 (= lt!54563 lt!54566)))

(declare-fun lt!54565 () Unit!3218)

(declare-fun e!69365 () Unit!3218)

(assert (=> d!29359 (= lt!54565 e!69365)))

(declare-fun c!18663 () Bool)

(assert (=> d!29359 (= c!18663 lt!54566)))

(assert (=> d!29359 (= lt!54566 (containsKey!158 (toList!787 lt!53937) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29359 (= (contains!820 lt!53937 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54563)))

(declare-fun b!106620 () Bool)

(declare-fun lt!54564 () Unit!3218)

(assert (=> b!106620 (= e!69365 lt!54564)))

(assert (=> b!106620 (= lt!54564 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53937) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106620 (isDefined!108 (getValueByKey!154 (toList!787 lt!53937) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106621 () Bool)

(declare-fun Unit!3278 () Unit!3218)

(assert (=> b!106621 (= e!69365 Unit!3278)))

(declare-fun b!106622 () Bool)

(assert (=> b!106622 (= e!69364 (isDefined!108 (getValueByKey!154 (toList!787 lt!53937) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29359 c!18663) b!106620))

(assert (= (and d!29359 (not c!18663)) b!106621))

(assert (= (and d!29359 (not res!52968)) b!106622))

(declare-fun m!119271 () Bool)

(assert (=> d!29359 m!119271))

(declare-fun m!119273 () Bool)

(assert (=> b!106620 m!119273))

(assert (=> b!106620 m!119251))

(assert (=> b!106620 m!119251))

(declare-fun m!119275 () Bool)

(assert (=> b!106620 m!119275))

(assert (=> b!106622 m!119251))

(assert (=> b!106622 m!119251))

(assert (=> b!106622 m!119275))

(assert (=> bm!11154 d!29359))

(assert (=> b!105793 d!29265))

(declare-fun d!29361 () Bool)

(declare-fun c!18664 () Bool)

(assert (=> d!29361 (= c!18664 ((_ is Nil!1613) (toList!787 lt!53716)))))

(declare-fun e!69366 () (InoxSet tuple2!2380))

(assert (=> d!29361 (= (content!109 (toList!787 lt!53716)) e!69366)))

(declare-fun b!106623 () Bool)

(assert (=> b!106623 (= e!69366 ((as const (Array tuple2!2380 Bool)) false))))

(declare-fun b!106624 () Bool)

(assert (=> b!106624 (= e!69366 ((_ map or) (store ((as const (Array tuple2!2380 Bool)) false) (h!2209 (toList!787 lt!53716)) true) (content!109 (t!5690 (toList!787 lt!53716)))))))

(assert (= (and d!29361 c!18664) b!106623))

(assert (= (and d!29361 (not c!18664)) b!106624))

(declare-fun m!119277 () Bool)

(assert (=> b!106624 m!119277))

(declare-fun m!119279 () Bool)

(assert (=> b!106624 m!119279))

(assert (=> d!28749 d!29361))

(declare-fun d!29363 () Bool)

(assert (=> d!29363 (isDefined!108 (getValueByKey!154 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!54567 () Unit!3218)

(assert (=> d!29363 (= lt!54567 (choose!671 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!69367 () Bool)

(assert (=> d!29363 e!69367))

(declare-fun res!52969 () Bool)

(assert (=> d!29363 (=> (not res!52969) (not e!69367))))

(assert (=> d!29363 (= res!52969 (isStrictlySorted!304 (toList!787 lt!53698)))))

(assert (=> d!29363 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54567)))

(declare-fun b!106625 () Bool)

(assert (=> b!106625 (= e!69367 (containsKey!158 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29363 res!52969) b!106625))

(assert (=> d!29363 m!117049))

(assert (=> d!29363 m!117349))

(assert (=> d!29363 m!117349))

(assert (=> d!29363 m!117517))

(assert (=> d!29363 m!117049))

(declare-fun m!119281 () Bool)

(assert (=> d!29363 m!119281))

(assert (=> d!29363 m!118881))

(assert (=> b!106625 m!117049))

(assert (=> b!106625 m!117513))

(assert (=> b!105644 d!29363))

(assert (=> b!105644 d!29221))

(assert (=> b!105644 d!29223))

(declare-fun d!29365 () Bool)

(assert (=> d!29365 (= (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53894)) (v!2889 (getValueByKey!154 (toList!787 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53894)))))

(assert (=> d!28773 d!29365))

(declare-fun b!106628 () Bool)

(declare-fun e!69369 () Option!160)

(assert (=> b!106628 (= e!69369 (getValueByKey!154 (t!5690 (toList!787 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) lt!53894))))

(declare-fun b!106627 () Bool)

(declare-fun e!69368 () Option!160)

(assert (=> b!106627 (= e!69368 e!69369)))

(declare-fun c!18666 () Bool)

(assert (=> b!106627 (= c!18666 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (not (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53894))))))

(declare-fun c!18665 () Bool)

(declare-fun d!29367 () Bool)

(assert (=> d!29367 (= c!18665 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53894)))))

(assert (=> d!29367 (= (getValueByKey!154 (toList!787 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53894) e!69368)))

(declare-fun b!106629 () Bool)

(assert (=> b!106629 (= e!69369 None!158)))

(declare-fun b!106626 () Bool)

(assert (=> b!106626 (= e!69368 (Some!159 (_2!1201 (h!2209 (toList!787 (+!135 lt!53895 (tuple2!2381 lt!53885 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))))))

(assert (= (and d!29367 c!18665) b!106626))

(assert (= (and d!29367 (not c!18665)) b!106627))

(assert (= (and b!106627 c!18666) b!106628))

(assert (= (and b!106627 (not c!18666)) b!106629))

(declare-fun m!119283 () Bool)

(assert (=> b!106628 m!119283))

(assert (=> d!28773 d!29367))

(declare-fun b!106630 () Bool)

(declare-fun e!69371 () (_ BitVec 32))

(declare-fun call!11271 () (_ BitVec 32))

(assert (=> b!106630 (= e!69371 (bvadd #b00000000000000000000000000000001 call!11271))))

(declare-fun b!106631 () Bool)

(declare-fun e!69370 () (_ BitVec 32))

(assert (=> b!106631 (= e!69370 #b00000000000000000000000000000000)))

(declare-fun d!29369 () Bool)

(declare-fun lt!54568 () (_ BitVec 32))

(assert (=> d!29369 (and (bvsge lt!54568 #b00000000000000000000000000000000) (bvsle lt!54568 (bvsub (size!2306 (_keys!4286 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!29369 (= lt!54568 e!69370)))

(declare-fun c!18667 () Bool)

(assert (=> d!29369 (= c!18667 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!29369 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2306 (_keys!4286 newMap!16)) (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!29369 (= (arrayCountValidKeys!0 (_keys!4286 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))) lt!54568)))

(declare-fun b!106632 () Bool)

(assert (=> b!106632 (= e!69370 e!69371)))

(declare-fun c!18668 () Bool)

(assert (=> b!106632 (= c!18668 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!106633 () Bool)

(assert (=> b!106633 (= e!69371 call!11271)))

(declare-fun bm!11268 () Bool)

(assert (=> bm!11268 (= call!11271 (arrayCountValidKeys!0 (_keys!4286 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))))))

(assert (= (and d!29369 c!18667) b!106631))

(assert (= (and d!29369 (not c!18667)) b!106632))

(assert (= (and b!106632 c!18668) b!106630))

(assert (= (and b!106632 (not c!18668)) b!106633))

(assert (= (or b!106630 b!106633) bm!11268))

(assert (=> b!106632 m!118287))

(assert (=> b!106632 m!118287))

(assert (=> b!106632 m!118289))

(declare-fun m!119285 () Bool)

(assert (=> bm!11268 m!119285))

(assert (=> bm!11134 d!29369))

(declare-fun d!29371 () Bool)

(assert (=> d!29371 (= (apply!98 lt!53976 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1335 (getValueByKey!154 (toList!787 lt!53976) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4383 () Bool)

(assert (= bs!4383 d!29371))

(declare-fun m!119287 () Bool)

(assert (=> bs!4383 m!119287))

(assert (=> bs!4383 m!119287))

(declare-fun m!119289 () Bool)

(assert (=> bs!4383 m!119289))

(assert (=> b!105621 d!29371))

(assert (=> bm!11138 d!29337))

(declare-fun lt!54569 () Bool)

(declare-fun d!29373 () Bool)

(assert (=> d!29373 (= lt!54569 (select (content!109 (toList!787 lt!54081)) (tuple2!2381 lt!53694 lt!53699)))))

(declare-fun e!69372 () Bool)

(assert (=> d!29373 (= lt!54569 e!69372)))

(declare-fun res!52970 () Bool)

(assert (=> d!29373 (=> (not res!52970) (not e!69372))))

(assert (=> d!29373 (= res!52970 ((_ is Cons!1612) (toList!787 lt!54081)))))

(assert (=> d!29373 (= (contains!821 (toList!787 lt!54081) (tuple2!2381 lt!53694 lt!53699)) lt!54569)))

(declare-fun b!106634 () Bool)

(declare-fun e!69373 () Bool)

(assert (=> b!106634 (= e!69372 e!69373)))

(declare-fun res!52971 () Bool)

(assert (=> b!106634 (=> res!52971 e!69373)))

(assert (=> b!106634 (= res!52971 (= (h!2209 (toList!787 lt!54081)) (tuple2!2381 lt!53694 lt!53699)))))

(declare-fun b!106635 () Bool)

(assert (=> b!106635 (= e!69373 (contains!821 (t!5690 (toList!787 lt!54081)) (tuple2!2381 lt!53694 lt!53699)))))

(assert (= (and d!29373 res!52970) b!106634))

(assert (= (and b!106634 (not res!52971)) b!106635))

(declare-fun m!119291 () Bool)

(assert (=> d!29373 m!119291))

(declare-fun m!119293 () Bool)

(assert (=> d!29373 m!119293))

(declare-fun m!119295 () Bool)

(assert (=> b!106635 m!119295))

(assert (=> b!105781 d!29373))

(declare-fun b!106638 () Bool)

(declare-fun e!69375 () Option!160)

(assert (=> b!106638 (= e!69375 (getValueByKey!154 (t!5690 (toList!787 lt!54042)) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106637 () Bool)

(declare-fun e!69374 () Option!160)

(assert (=> b!106637 (= e!69374 e!69375)))

(declare-fun c!18670 () Bool)

(assert (=> b!106637 (= c!18670 (and ((_ is Cons!1612) (toList!787 lt!54042)) (not (= (_1!1201 (h!2209 (toList!787 lt!54042))) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))))

(declare-fun c!18669 () Bool)

(declare-fun d!29375 () Bool)

(assert (=> d!29375 (= c!18669 (and ((_ is Cons!1612) (toList!787 lt!54042)) (= (_1!1201 (h!2209 (toList!787 lt!54042))) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(assert (=> d!29375 (= (getValueByKey!154 (toList!787 lt!54042) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) e!69374)))

(declare-fun b!106639 () Bool)

(assert (=> b!106639 (= e!69375 None!158)))

(declare-fun b!106636 () Bool)

(assert (=> b!106636 (= e!69374 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54042)))))))

(assert (= (and d!29375 c!18669) b!106636))

(assert (= (and d!29375 (not c!18669)) b!106637))

(assert (= (and b!106637 c!18670) b!106638))

(assert (= (and b!106637 (not c!18670)) b!106639))

(declare-fun m!119297 () Bool)

(assert (=> b!106638 m!119297))

(assert (=> b!105676 d!29375))

(declare-fun d!29377 () Bool)

(assert (=> d!29377 (= ($colon$colon!80 e!68922 (ite c!18444 (h!2209 (toList!787 lt!53604)) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599)))) (Cons!1612 (ite c!18444 (h!2209 (toList!787 lt!53604)) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))) e!68922))))

(assert (=> bm!11190 d!29377))

(declare-fun d!29379 () Bool)

(assert (=> d!29379 (= (get!1335 (getValueByKey!154 (toList!787 lt!53895) lt!53894)) (v!2889 (getValueByKey!154 (toList!787 lt!53895) lt!53894)))))

(assert (=> d!28751 d!29379))

(declare-fun b!106642 () Bool)

(declare-fun e!69377 () Option!160)

(assert (=> b!106642 (= e!69377 (getValueByKey!154 (t!5690 (toList!787 lt!53895)) lt!53894))))

(declare-fun b!106641 () Bool)

(declare-fun e!69376 () Option!160)

(assert (=> b!106641 (= e!69376 e!69377)))

(declare-fun c!18672 () Bool)

(assert (=> b!106641 (= c!18672 (and ((_ is Cons!1612) (toList!787 lt!53895)) (not (= (_1!1201 (h!2209 (toList!787 lt!53895))) lt!53894))))))

(declare-fun d!29381 () Bool)

(declare-fun c!18671 () Bool)

(assert (=> d!29381 (= c!18671 (and ((_ is Cons!1612) (toList!787 lt!53895)) (= (_1!1201 (h!2209 (toList!787 lt!53895))) lt!53894)))))

(assert (=> d!29381 (= (getValueByKey!154 (toList!787 lt!53895) lt!53894) e!69376)))

(declare-fun b!106643 () Bool)

(assert (=> b!106643 (= e!69377 None!158)))

(declare-fun b!106640 () Bool)

(assert (=> b!106640 (= e!69376 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53895)))))))

(assert (= (and d!29381 c!18671) b!106640))

(assert (= (and d!29381 (not c!18671)) b!106641))

(assert (= (and b!106641 c!18672) b!106642))

(assert (= (and b!106641 (not c!18672)) b!106643))

(declare-fun m!119299 () Bool)

(assert (=> b!106642 m!119299))

(assert (=> d!28751 d!29381))

(declare-fun d!29383 () Bool)

(declare-fun res!52972 () Bool)

(declare-fun e!69378 () Bool)

(assert (=> d!29383 (=> res!52972 e!69378)))

(assert (=> d!29383 (= res!52972 (and ((_ is Cons!1612) (toList!787 lt!53698)) (= (_1!1201 (h!2209 (toList!787 lt!53698))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29383 (= (containsKey!158 (toList!787 lt!53698) #b1000000000000000000000000000000000000000000000000000000000000000) e!69378)))

(declare-fun b!106644 () Bool)

(declare-fun e!69379 () Bool)

(assert (=> b!106644 (= e!69378 e!69379)))

(declare-fun res!52973 () Bool)

(assert (=> b!106644 (=> (not res!52973) (not e!69379))))

(assert (=> b!106644 (= res!52973 (and (or (not ((_ is Cons!1612) (toList!787 lt!53698))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53698))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1612) (toList!787 lt!53698)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53698))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106645 () Bool)

(assert (=> b!106645 (= e!69379 (containsKey!158 (t!5690 (toList!787 lt!53698)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29383 (not res!52972)) b!106644))

(assert (= (and b!106644 res!52973) b!106645))

(declare-fun m!119301 () Bool)

(assert (=> b!106645 m!119301))

(assert (=> d!28841 d!29383))

(declare-fun d!29385 () Bool)

(assert (=> d!29385 (= (get!1333 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2882 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105567 d!29385))

(assert (=> d!28805 d!28803))

(declare-fun d!29387 () Bool)

(assert (=> d!29387 (= (getValueByKey!154 lt!53709 (_1!1201 lt!53599)) (Some!159 (_2!1201 lt!53599)))))

(assert (=> d!29387 true))

(declare-fun _$22!435 () Unit!3218)

(assert (=> d!29387 (= (choose!667 lt!53709 (_1!1201 lt!53599) (_2!1201 lt!53599)) _$22!435)))

(declare-fun bs!4384 () Bool)

(assert (= bs!4384 d!29387))

(assert (=> bs!4384 m!117077))

(assert (=> d!28805 d!29387))

(declare-fun d!29389 () Bool)

(declare-fun res!52974 () Bool)

(declare-fun e!69380 () Bool)

(assert (=> d!29389 (=> res!52974 e!69380)))

(assert (=> d!29389 (= res!52974 (or ((_ is Nil!1613) lt!53709) ((_ is Nil!1613) (t!5690 lt!53709))))))

(assert (=> d!29389 (= (isStrictlySorted!304 lt!53709) e!69380)))

(declare-fun b!106646 () Bool)

(declare-fun e!69381 () Bool)

(assert (=> b!106646 (= e!69380 e!69381)))

(declare-fun res!52975 () Bool)

(assert (=> b!106646 (=> (not res!52975) (not e!69381))))

(assert (=> b!106646 (= res!52975 (bvslt (_1!1201 (h!2209 lt!53709)) (_1!1201 (h!2209 (t!5690 lt!53709)))))))

(declare-fun b!106647 () Bool)

(assert (=> b!106647 (= e!69381 (isStrictlySorted!304 (t!5690 lt!53709)))))

(assert (= (and d!29389 (not res!52974)) b!106646))

(assert (= (and b!106646 res!52975) b!106647))

(declare-fun m!119303 () Bool)

(assert (=> b!106647 m!119303))

(assert (=> d!28805 d!29389))

(declare-fun d!29391 () Bool)

(declare-fun e!69382 () Bool)

(assert (=> d!29391 e!69382))

(declare-fun res!52976 () Bool)

(assert (=> d!29391 (=> res!52976 e!69382)))

(declare-fun lt!54570 () Bool)

(assert (=> d!29391 (= res!52976 (not lt!54570))))

(declare-fun lt!54573 () Bool)

(assert (=> d!29391 (= lt!54570 lt!54573)))

(declare-fun lt!54572 () Unit!3218)

(declare-fun e!69383 () Unit!3218)

(assert (=> d!29391 (= lt!54572 e!69383)))

(declare-fun c!18673 () Bool)

(assert (=> d!29391 (= c!18673 lt!54573)))

(assert (=> d!29391 (= lt!54573 (containsKey!158 (toList!787 lt!53937) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29391 (= (contains!820 lt!53937 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) lt!54570)))

(declare-fun b!106648 () Bool)

(declare-fun lt!54571 () Unit!3218)

(assert (=> b!106648 (= e!69383 lt!54571)))

(assert (=> b!106648 (= lt!54571 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53937) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106648 (isDefined!108 (getValueByKey!154 (toList!787 lt!53937) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106649 () Bool)

(declare-fun Unit!3279 () Unit!3218)

(assert (=> b!106649 (= e!69383 Unit!3279)))

(declare-fun b!106650 () Bool)

(assert (=> b!106650 (= e!69382 (isDefined!108 (getValueByKey!154 (toList!787 lt!53937) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29391 c!18673) b!106648))

(assert (= (and d!29391 (not c!18673)) b!106649))

(assert (= (and d!29391 (not res!52976)) b!106650))

(assert (=> d!29391 m!117265))

(declare-fun m!119305 () Bool)

(assert (=> d!29391 m!119305))

(assert (=> b!106648 m!117265))

(declare-fun m!119307 () Bool)

(assert (=> b!106648 m!119307))

(assert (=> b!106648 m!117265))

(assert (=> b!106648 m!119071))

(assert (=> b!106648 m!119071))

(declare-fun m!119309 () Bool)

(assert (=> b!106648 m!119309))

(assert (=> b!106650 m!117265))

(assert (=> b!106650 m!119071))

(assert (=> b!106650 m!119071))

(assert (=> b!106650 m!119309))

(assert (=> b!105593 d!29391))

(assert (=> b!105527 d!28979))

(declare-fun d!29393 () Bool)

(assert (=> d!29393 (isDefined!108 (getValueByKey!154 (toList!787 lt!53712) (_1!1201 lt!53599)))))

(declare-fun lt!54574 () Unit!3218)

(assert (=> d!29393 (= lt!54574 (choose!671 (toList!787 lt!53712) (_1!1201 lt!53599)))))

(declare-fun e!69384 () Bool)

(assert (=> d!29393 e!69384))

(declare-fun res!52977 () Bool)

(assert (=> d!29393 (=> (not res!52977) (not e!69384))))

(assert (=> d!29393 (= res!52977 (isStrictlySorted!304 (toList!787 lt!53712)))))

(assert (=> d!29393 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53712) (_1!1201 lt!53599)) lt!54574)))

(declare-fun b!106651 () Bool)

(assert (=> b!106651 (= e!69384 (containsKey!158 (toList!787 lt!53712) (_1!1201 lt!53599)))))

(assert (= (and d!29393 res!52977) b!106651))

(assert (=> d!29393 m!117083))

(assert (=> d!29393 m!117083))

(assert (=> d!29393 m!117705))

(declare-fun m!119311 () Bool)

(assert (=> d!29393 m!119311))

(declare-fun m!119313 () Bool)

(assert (=> d!29393 m!119313))

(assert (=> b!106651 m!117701))

(assert (=> b!105723 d!29393))

(assert (=> b!105723 d!29227))

(assert (=> b!105723 d!28847))

(declare-fun d!29395 () Bool)

(declare-fun e!69385 () Bool)

(assert (=> d!29395 e!69385))

(declare-fun res!52978 () Bool)

(assert (=> d!29395 (=> res!52978 e!69385)))

(declare-fun lt!54575 () Bool)

(assert (=> d!29395 (= res!52978 (not lt!54575))))

(declare-fun lt!54578 () Bool)

(assert (=> d!29395 (= lt!54575 lt!54578)))

(declare-fun lt!54577 () Unit!3218)

(declare-fun e!69386 () Unit!3218)

(assert (=> d!29395 (= lt!54577 e!69386)))

(declare-fun c!18674 () Bool)

(assert (=> d!29395 (= c!18674 lt!54578)))

(assert (=> d!29395 (= lt!54578 (containsKey!158 (toList!787 lt!54042) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29395 (= (contains!820 lt!54042 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) lt!54575)))

(declare-fun b!106652 () Bool)

(declare-fun lt!54576 () Unit!3218)

(assert (=> b!106652 (= e!69386 lt!54576)))

(assert (=> b!106652 (= lt!54576 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54042) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> b!106652 (isDefined!108 (getValueByKey!154 (toList!787 lt!54042) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106653 () Bool)

(declare-fun Unit!3280 () Unit!3218)

(assert (=> b!106653 (= e!69386 Unit!3280)))

(declare-fun b!106654 () Bool)

(assert (=> b!106654 (= e!69385 (isDefined!108 (getValueByKey!154 (toList!787 lt!54042) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(assert (= (and d!29395 c!18674) b!106652))

(assert (= (and d!29395 (not c!18674)) b!106653))

(assert (= (and d!29395 (not res!52978)) b!106654))

(declare-fun m!119315 () Bool)

(assert (=> d!29395 m!119315))

(declare-fun m!119317 () Bool)

(assert (=> b!106652 m!119317))

(assert (=> b!106652 m!117643))

(assert (=> b!106652 m!117643))

(declare-fun m!119319 () Bool)

(assert (=> b!106652 m!119319))

(assert (=> b!106654 m!117643))

(assert (=> b!106654 m!117643))

(assert (=> b!106654 m!119319))

(assert (=> d!28785 d!29395))

(declare-fun b!106657 () Bool)

(declare-fun e!69388 () Option!160)

(assert (=> b!106657 (= e!69388 (getValueByKey!154 (t!5690 lt!54039) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106656 () Bool)

(declare-fun e!69387 () Option!160)

(assert (=> b!106656 (= e!69387 e!69388)))

(declare-fun c!18676 () Bool)

(assert (=> b!106656 (= c!18676 (and ((_ is Cons!1612) lt!54039) (not (= (_1!1201 (h!2209 lt!54039)) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))))

(declare-fun d!29397 () Bool)

(declare-fun c!18675 () Bool)

(assert (=> d!29397 (= c!18675 (and ((_ is Cons!1612) lt!54039) (= (_1!1201 (h!2209 lt!54039)) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(assert (=> d!29397 (= (getValueByKey!154 lt!54039 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) e!69387)))

(declare-fun b!106658 () Bool)

(assert (=> b!106658 (= e!69388 None!158)))

(declare-fun b!106655 () Bool)

(assert (=> b!106655 (= e!69387 (Some!159 (_2!1201 (h!2209 lt!54039))))))

(assert (= (and d!29397 c!18675) b!106655))

(assert (= (and d!29397 (not c!18675)) b!106656))

(assert (= (and b!106656 c!18676) b!106657))

(assert (= (and b!106656 (not c!18676)) b!106658))

(declare-fun m!119321 () Bool)

(assert (=> b!106657 m!119321))

(assert (=> d!28785 d!29397))

(declare-fun d!29399 () Bool)

(assert (=> d!29399 (= (getValueByKey!154 lt!54039 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) (Some!159 (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun lt!54579 () Unit!3218)

(assert (=> d!29399 (= lt!54579 (choose!667 lt!54039 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun e!69389 () Bool)

(assert (=> d!29399 e!69389))

(declare-fun res!52979 () Bool)

(assert (=> d!29399 (=> (not res!52979) (not e!69389))))

(assert (=> d!29399 (= res!52979 (isStrictlySorted!304 lt!54039))))

(assert (=> d!29399 (= (lemmaContainsTupThenGetReturnValue!73 lt!54039 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) lt!54579)))

(declare-fun b!106659 () Bool)

(declare-fun res!52980 () Bool)

(assert (=> b!106659 (=> (not res!52980) (not e!69389))))

(assert (=> b!106659 (= res!52980 (containsKey!158 lt!54039 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106660 () Bool)

(assert (=> b!106660 (= e!69389 (contains!821 lt!54039 (tuple2!2381 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(assert (= (and d!29399 res!52979) b!106659))

(assert (= (and b!106659 res!52980) b!106660))

(assert (=> d!29399 m!117637))

(declare-fun m!119323 () Bool)

(assert (=> d!29399 m!119323))

(declare-fun m!119325 () Bool)

(assert (=> d!29399 m!119325))

(declare-fun m!119327 () Bool)

(assert (=> b!106659 m!119327))

(declare-fun m!119329 () Bool)

(assert (=> b!106660 m!119329))

(assert (=> d!28785 d!29399))

(declare-fun c!18679 () Bool)

(declare-fun b!106661 () Bool)

(assert (=> b!106661 (= c!18679 (and ((_ is Cons!1612) (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134)))) (bvsgt (_1!1201 (h!2209 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134))))) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun e!69393 () List!1616)

(declare-fun e!69392 () List!1616)

(assert (=> b!106661 (= e!69393 e!69392)))

(declare-fun b!106662 () Bool)

(declare-fun e!69391 () List!1616)

(declare-fun call!11272 () List!1616)

(assert (=> b!106662 (= e!69391 call!11272)))

(declare-fun lt!54580 () List!1616)

(declare-fun e!69394 () Bool)

(declare-fun b!106663 () Bool)

(assert (=> b!106663 (= e!69394 (contains!821 lt!54580 (tuple2!2381 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun b!106664 () Bool)

(declare-fun res!52981 () Bool)

(assert (=> b!106664 (=> (not res!52981) (not e!69394))))

(assert (=> b!106664 (= res!52981 (containsKey!158 lt!54580 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106665 () Bool)

(declare-fun call!11273 () List!1616)

(assert (=> b!106665 (= e!69392 call!11273)))

(declare-fun b!106666 () Bool)

(assert (=> b!106666 (= e!69392 call!11273)))

(declare-fun b!106667 () Bool)

(assert (=> b!106667 (= e!69391 e!69393)))

(declare-fun c!18680 () Bool)

(assert (=> b!106667 (= c!18680 (and ((_ is Cons!1612) (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134)))) (= (_1!1201 (h!2209 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134))))) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun bm!11269 () Bool)

(declare-fun call!11274 () List!1616)

(assert (=> bm!11269 (= call!11274 call!11272)))

(declare-fun b!106668 () Bool)

(assert (=> b!106668 (= e!69393 call!11274)))

(declare-fun b!106669 () Bool)

(declare-fun e!69390 () List!1616)

(assert (=> b!106669 (= e!69390 (insertStrictlySorted!76 (t!5690 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134)))) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun bm!11271 () Bool)

(assert (=> bm!11271 (= call!11273 call!11274)))

(declare-fun b!106670 () Bool)

(assert (=> b!106670 (= e!69390 (ite c!18680 (t!5690 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134)))) (ite c!18679 (Cons!1612 (h!2209 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134)))) (t!5690 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134))))) Nil!1613)))))

(declare-fun bm!11270 () Bool)

(declare-fun c!18677 () Bool)

(assert (=> bm!11270 (= call!11272 ($colon$colon!80 e!69390 (ite c!18677 (h!2209 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134)))) (tuple2!2381 (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))))

(declare-fun c!18678 () Bool)

(assert (=> bm!11270 (= c!18678 c!18677)))

(declare-fun d!29401 () Bool)

(assert (=> d!29401 e!69394))

(declare-fun res!52982 () Bool)

(assert (=> d!29401 (=> (not res!52982) (not e!69394))))

(assert (=> d!29401 (= res!52982 (isStrictlySorted!304 lt!54580))))

(assert (=> d!29401 (= lt!54580 e!69391)))

(assert (=> d!29401 (= c!18677 (and ((_ is Cons!1612) (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134)))) (bvslt (_1!1201 (h!2209 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134))))) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(assert (=> d!29401 (isStrictlySorted!304 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134))))))

(assert (=> d!29401 (= (insertStrictlySorted!76 (toList!787 (ite c!18333 call!11130 (ite c!18336 call!11133 call!11134))) (_1!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (_2!1201 (ite (or c!18333 c!18336) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992)))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) lt!54580)))

(assert (= (and d!29401 c!18677) b!106662))

(assert (= (and d!29401 (not c!18677)) b!106667))

(assert (= (and b!106667 c!18680) b!106668))

(assert (= (and b!106667 (not c!18680)) b!106661))

(assert (= (and b!106661 c!18679) b!106665))

(assert (= (and b!106661 (not c!18679)) b!106666))

(assert (= (or b!106665 b!106666) bm!11271))

(assert (= (or b!106668 bm!11271) bm!11269))

(assert (= (or b!106662 bm!11269) bm!11270))

(assert (= (and bm!11270 c!18678) b!106669))

(assert (= (and bm!11270 (not c!18678)) b!106670))

(assert (= (and d!29401 res!52982) b!106664))

(assert (= (and b!106664 res!52981) b!106663))

(declare-fun m!119331 () Bool)

(assert (=> b!106663 m!119331))

(declare-fun m!119333 () Bool)

(assert (=> d!29401 m!119333))

(declare-fun m!119335 () Bool)

(assert (=> d!29401 m!119335))

(declare-fun m!119337 () Bool)

(assert (=> b!106664 m!119337))

(declare-fun m!119339 () Bool)

(assert (=> b!106669 m!119339))

(declare-fun m!119341 () Bool)

(assert (=> bm!11270 m!119341))

(assert (=> d!28785 d!29401))

(declare-fun d!29403 () Bool)

(declare-fun lt!54581 () Bool)

(assert (=> d!29403 (= lt!54581 (select (content!109 (t!5690 (toList!787 lt!53716))) lt!53599))))

(declare-fun e!69395 () Bool)

(assert (=> d!29403 (= lt!54581 e!69395)))

(declare-fun res!52983 () Bool)

(assert (=> d!29403 (=> (not res!52983) (not e!69395))))

(assert (=> d!29403 (= res!52983 ((_ is Cons!1612) (t!5690 (toList!787 lt!53716))))))

(assert (=> d!29403 (= (contains!821 (t!5690 (toList!787 lt!53716)) lt!53599) lt!54581)))

(declare-fun b!106671 () Bool)

(declare-fun e!69396 () Bool)

(assert (=> b!106671 (= e!69395 e!69396)))

(declare-fun res!52984 () Bool)

(assert (=> b!106671 (=> res!52984 e!69396)))

(assert (=> b!106671 (= res!52984 (= (h!2209 (t!5690 (toList!787 lt!53716))) lt!53599))))

(declare-fun b!106672 () Bool)

(assert (=> b!106672 (= e!69396 (contains!821 (t!5690 (t!5690 (toList!787 lt!53716))) lt!53599))))

(assert (= (and d!29403 res!52983) b!106671))

(assert (= (and b!106671 (not res!52984)) b!106672))

(assert (=> d!29403 m!119279))

(declare-fun m!119343 () Bool)

(assert (=> d!29403 m!119343))

(declare-fun m!119345 () Bool)

(assert (=> b!106672 m!119345))

(assert (=> b!105648 d!29403))

(assert (=> d!28725 d!29133))

(declare-fun d!29405 () Bool)

(declare-fun res!52985 () Bool)

(declare-fun e!69397 () Bool)

(assert (=> d!29405 (=> res!52985 e!69397)))

(assert (=> d!29405 (= res!52985 (and ((_ is Cons!1612) lt!54247) (= (_1!1201 (h!2209 lt!54247)) (_1!1201 lt!53606))))))

(assert (=> d!29405 (= (containsKey!158 lt!54247 (_1!1201 lt!53606)) e!69397)))

(declare-fun b!106673 () Bool)

(declare-fun e!69398 () Bool)

(assert (=> b!106673 (= e!69397 e!69398)))

(declare-fun res!52986 () Bool)

(assert (=> b!106673 (=> (not res!52986) (not e!69398))))

(assert (=> b!106673 (= res!52986 (and (or (not ((_ is Cons!1612) lt!54247)) (bvsle (_1!1201 (h!2209 lt!54247)) (_1!1201 lt!53606))) ((_ is Cons!1612) lt!54247) (bvslt (_1!1201 (h!2209 lt!54247)) (_1!1201 lt!53606))))))

(declare-fun b!106674 () Bool)

(assert (=> b!106674 (= e!69398 (containsKey!158 (t!5690 lt!54247) (_1!1201 lt!53606)))))

(assert (= (and d!29405 (not res!52985)) b!106673))

(assert (= (and b!106673 res!52986) b!106674))

(declare-fun m!119347 () Bool)

(assert (=> b!106674 m!119347))

(assert (=> b!105951 d!29405))

(declare-fun d!29407 () Bool)

(declare-fun lt!54582 () Bool)

(assert (=> d!29407 (= lt!54582 (select (content!109 (toList!787 lt!54225)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(declare-fun e!69399 () Bool)

(assert (=> d!29407 (= lt!54582 e!69399)))

(declare-fun res!52987 () Bool)

(assert (=> d!29407 (=> (not res!52987) (not e!69399))))

(assert (=> d!29407 (= res!52987 ((_ is Cons!1612) (toList!787 lt!54225)))))

(assert (=> d!29407 (= (contains!821 (toList!787 lt!54225) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) lt!54582)))

(declare-fun b!106675 () Bool)

(declare-fun e!69400 () Bool)

(assert (=> b!106675 (= e!69399 e!69400)))

(declare-fun res!52988 () Bool)

(assert (=> b!106675 (=> res!52988 e!69400)))

(assert (=> b!106675 (= res!52988 (= (h!2209 (toList!787 lt!54225)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(declare-fun b!106676 () Bool)

(assert (=> b!106676 (= e!69400 (contains!821 (t!5690 (toList!787 lt!54225)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(assert (= (and d!29407 res!52987) b!106675))

(assert (= (and b!106675 (not res!52988)) b!106676))

(declare-fun m!119349 () Bool)

(assert (=> d!29407 m!119349))

(declare-fun m!119351 () Bool)

(assert (=> d!29407 m!119351))

(declare-fun m!119353 () Bool)

(assert (=> b!106676 m!119353))

(assert (=> b!105929 d!29407))

(declare-fun d!29409 () Bool)

(declare-fun e!69401 () Bool)

(assert (=> d!29409 e!69401))

(declare-fun res!52989 () Bool)

(assert (=> d!29409 (=> res!52989 e!69401)))

(declare-fun lt!54583 () Bool)

(assert (=> d!29409 (= res!52989 (not lt!54583))))

(declare-fun lt!54586 () Bool)

(assert (=> d!29409 (= lt!54583 lt!54586)))

(declare-fun lt!54585 () Unit!3218)

(declare-fun e!69402 () Unit!3218)

(assert (=> d!29409 (= lt!54585 e!69402)))

(declare-fun c!18681 () Bool)

(assert (=> d!29409 (= c!18681 lt!54586)))

(assert (=> d!29409 (= lt!54586 (containsKey!158 (toList!787 lt!53976) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29409 (= (contains!820 lt!53976 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54583)))

(declare-fun b!106677 () Bool)

(declare-fun lt!54584 () Unit!3218)

(assert (=> b!106677 (= e!69402 lt!54584)))

(assert (=> b!106677 (= lt!54584 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53976) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106677 (isDefined!108 (getValueByKey!154 (toList!787 lt!53976) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106678 () Bool)

(declare-fun Unit!3281 () Unit!3218)

(assert (=> b!106678 (= e!69402 Unit!3281)))

(declare-fun b!106679 () Bool)

(assert (=> b!106679 (= e!69401 (isDefined!108 (getValueByKey!154 (toList!787 lt!53976) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29409 c!18681) b!106677))

(assert (= (and d!29409 (not c!18681)) b!106678))

(assert (= (and d!29409 (not res!52989)) b!106679))

(declare-fun m!119355 () Bool)

(assert (=> d!29409 m!119355))

(declare-fun m!119357 () Bool)

(assert (=> b!106677 m!119357))

(assert (=> b!106677 m!119287))

(assert (=> b!106677 m!119287))

(declare-fun m!119359 () Bool)

(assert (=> b!106677 m!119359))

(assert (=> b!106679 m!119287))

(assert (=> b!106679 m!119287))

(assert (=> b!106679 m!119359))

(assert (=> bm!11161 d!29409))

(declare-fun d!29411 () Bool)

(declare-fun e!69403 () Bool)

(assert (=> d!29411 e!69403))

(declare-fun res!52990 () Bool)

(assert (=> d!29411 (=> res!52990 e!69403)))

(declare-fun lt!54587 () Bool)

(assert (=> d!29411 (= res!52990 (not lt!54587))))

(declare-fun lt!54590 () Bool)

(assert (=> d!29411 (= lt!54587 lt!54590)))

(declare-fun lt!54589 () Unit!3218)

(declare-fun e!69404 () Unit!3218)

(assert (=> d!29411 (= lt!54589 e!69404)))

(declare-fun c!18682 () Bool)

(assert (=> d!29411 (= c!18682 lt!54590)))

(assert (=> d!29411 (= lt!54590 (containsKey!158 (toList!787 lt!54193) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!29411 (= (contains!820 lt!54193 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54587)))

(declare-fun b!106680 () Bool)

(declare-fun lt!54588 () Unit!3218)

(assert (=> b!106680 (= e!69404 lt!54588)))

(assert (=> b!106680 (= lt!54588 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54193) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> b!106680 (isDefined!108 (getValueByKey!154 (toList!787 lt!54193) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106681 () Bool)

(declare-fun Unit!3282 () Unit!3218)

(assert (=> b!106681 (= e!69404 Unit!3282)))

(declare-fun b!106682 () Bool)

(assert (=> b!106682 (= e!69403 (isDefined!108 (getValueByKey!154 (toList!787 lt!54193) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!29411 c!18682) b!106680))

(assert (= (and d!29411 (not c!18682)) b!106681))

(assert (= (and d!29411 (not res!52990)) b!106682))

(declare-fun m!119361 () Bool)

(assert (=> d!29411 m!119361))

(declare-fun m!119363 () Bool)

(assert (=> b!106680 m!119363))

(assert (=> b!106680 m!117861))

(assert (=> b!106680 m!117861))

(declare-fun m!119365 () Bool)

(assert (=> b!106680 m!119365))

(assert (=> b!106682 m!117861))

(assert (=> b!106682 m!117861))

(assert (=> b!106682 m!119365))

(assert (=> d!28831 d!29411))

(declare-fun b!106685 () Bool)

(declare-fun e!69406 () Option!160)

(assert (=> b!106685 (= e!69406 (getValueByKey!154 (t!5690 lt!54190) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106684 () Bool)

(declare-fun e!69405 () Option!160)

(assert (=> b!106684 (= e!69405 e!69406)))

(declare-fun c!18684 () Bool)

(assert (=> b!106684 (= c!18684 (and ((_ is Cons!1612) lt!54190) (not (= (_1!1201 (h!2209 lt!54190)) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun d!29413 () Bool)

(declare-fun c!18683 () Bool)

(assert (=> d!29413 (= c!18683 (and ((_ is Cons!1612) lt!54190) (= (_1!1201 (h!2209 lt!54190)) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29413 (= (getValueByKey!154 lt!54190 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69405)))

(declare-fun b!106686 () Bool)

(assert (=> b!106686 (= e!69406 None!158)))

(declare-fun b!106683 () Bool)

(assert (=> b!106683 (= e!69405 (Some!159 (_2!1201 (h!2209 lt!54190))))))

(assert (= (and d!29413 c!18683) b!106683))

(assert (= (and d!29413 (not c!18683)) b!106684))

(assert (= (and b!106684 c!18684) b!106685))

(assert (= (and b!106684 (not c!18684)) b!106686))

(declare-fun m!119367 () Bool)

(assert (=> b!106685 m!119367))

(assert (=> d!28831 d!29413))

(declare-fun d!29415 () Bool)

(assert (=> d!29415 (= (getValueByKey!154 lt!54190 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54591 () Unit!3218)

(assert (=> d!29415 (= lt!54591 (choose!667 lt!54190 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun e!69407 () Bool)

(assert (=> d!29415 e!69407))

(declare-fun res!52991 () Bool)

(assert (=> d!29415 (=> (not res!52991) (not e!69407))))

(assert (=> d!29415 (= res!52991 (isStrictlySorted!304 lt!54190))))

(assert (=> d!29415 (= (lemmaContainsTupThenGetReturnValue!73 lt!54190 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54591)))

(declare-fun b!106687 () Bool)

(declare-fun res!52992 () Bool)

(assert (=> b!106687 (=> (not res!52992) (not e!69407))))

(assert (=> b!106687 (= res!52992 (containsKey!158 lt!54190 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106688 () Bool)

(assert (=> b!106688 (= e!69407 (contains!821 lt!54190 (tuple2!2381 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!29415 res!52991) b!106687))

(assert (= (and b!106687 res!52992) b!106688))

(assert (=> d!29415 m!117855))

(declare-fun m!119369 () Bool)

(assert (=> d!29415 m!119369))

(declare-fun m!119371 () Bool)

(assert (=> d!29415 m!119371))

(declare-fun m!119373 () Bool)

(assert (=> b!106687 m!119373))

(declare-fun m!119375 () Bool)

(assert (=> b!106688 m!119375))

(assert (=> d!28831 d!29415))

(declare-fun b!106689 () Bool)

(declare-fun c!18687 () Bool)

(assert (=> b!106689 (= c!18687 (and ((_ is Cons!1612) (toList!787 call!11129)) (bvsgt (_1!1201 (h!2209 (toList!787 call!11129))) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun e!69411 () List!1616)

(declare-fun e!69410 () List!1616)

(assert (=> b!106689 (= e!69411 e!69410)))

(declare-fun b!106690 () Bool)

(declare-fun e!69409 () List!1616)

(declare-fun call!11275 () List!1616)

(assert (=> b!106690 (= e!69409 call!11275)))

(declare-fun b!106691 () Bool)

(declare-fun e!69412 () Bool)

(declare-fun lt!54592 () List!1616)

(assert (=> b!106691 (= e!69412 (contains!821 lt!54592 (tuple2!2381 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106692 () Bool)

(declare-fun res!52993 () Bool)

(assert (=> b!106692 (=> (not res!52993) (not e!69412))))

(assert (=> b!106692 (= res!52993 (containsKey!158 lt!54592 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106693 () Bool)

(declare-fun call!11276 () List!1616)

(assert (=> b!106693 (= e!69410 call!11276)))

(declare-fun b!106694 () Bool)

(assert (=> b!106694 (= e!69410 call!11276)))

(declare-fun b!106695 () Bool)

(assert (=> b!106695 (= e!69409 e!69411)))

(declare-fun c!18688 () Bool)

(assert (=> b!106695 (= c!18688 (and ((_ is Cons!1612) (toList!787 call!11129)) (= (_1!1201 (h!2209 (toList!787 call!11129))) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun bm!11272 () Bool)

(declare-fun call!11277 () List!1616)

(assert (=> bm!11272 (= call!11277 call!11275)))

(declare-fun b!106696 () Bool)

(assert (=> b!106696 (= e!69411 call!11277)))

(declare-fun b!106697 () Bool)

(declare-fun e!69408 () List!1616)

(assert (=> b!106697 (= e!69408 (insertStrictlySorted!76 (t!5690 (toList!787 call!11129)) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun bm!11274 () Bool)

(assert (=> bm!11274 (= call!11276 call!11277)))

(declare-fun b!106698 () Bool)

(assert (=> b!106698 (= e!69408 (ite c!18688 (t!5690 (toList!787 call!11129)) (ite c!18687 (Cons!1612 (h!2209 (toList!787 call!11129)) (t!5690 (toList!787 call!11129))) Nil!1613)))))

(declare-fun bm!11273 () Bool)

(declare-fun c!18685 () Bool)

(assert (=> bm!11273 (= call!11275 ($colon$colon!80 e!69408 (ite c!18685 (h!2209 (toList!787 call!11129)) (tuple2!2381 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18686 () Bool)

(assert (=> bm!11273 (= c!18686 c!18685)))

(declare-fun d!29417 () Bool)

(assert (=> d!29417 e!69412))

(declare-fun res!52994 () Bool)

(assert (=> d!29417 (=> (not res!52994) (not e!69412))))

(assert (=> d!29417 (= res!52994 (isStrictlySorted!304 lt!54592))))

(assert (=> d!29417 (= lt!54592 e!69409)))

(assert (=> d!29417 (= c!18685 (and ((_ is Cons!1612) (toList!787 call!11129)) (bvslt (_1!1201 (h!2209 (toList!787 call!11129))) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29417 (isStrictlySorted!304 (toList!787 call!11129))))

(assert (=> d!29417 (= (insertStrictlySorted!76 (toList!787 call!11129) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54592)))

(assert (= (and d!29417 c!18685) b!106690))

(assert (= (and d!29417 (not c!18685)) b!106695))

(assert (= (and b!106695 c!18688) b!106696))

(assert (= (and b!106695 (not c!18688)) b!106689))

(assert (= (and b!106689 c!18687) b!106693))

(assert (= (and b!106689 (not c!18687)) b!106694))

(assert (= (or b!106693 b!106694) bm!11274))

(assert (= (or b!106696 bm!11274) bm!11272))

(assert (= (or b!106690 bm!11272) bm!11273))

(assert (= (and bm!11273 c!18686) b!106697))

(assert (= (and bm!11273 (not c!18686)) b!106698))

(assert (= (and d!29417 res!52994) b!106692))

(assert (= (and b!106692 res!52993) b!106691))

(declare-fun m!119377 () Bool)

(assert (=> b!106691 m!119377))

(declare-fun m!119379 () Bool)

(assert (=> d!29417 m!119379))

(declare-fun m!119381 () Bool)

(assert (=> d!29417 m!119381))

(declare-fun m!119383 () Bool)

(assert (=> b!106692 m!119383))

(declare-fun m!119385 () Bool)

(assert (=> b!106697 m!119385))

(declare-fun m!119387 () Bool)

(assert (=> bm!11273 m!119387))

(assert (=> d!28831 d!29417))

(declare-fun d!29419 () Bool)

(declare-fun lt!54593 () Bool)

(assert (=> d!29419 (= lt!54593 (select (content!109 (toList!787 lt!54193)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun e!69413 () Bool)

(assert (=> d!29419 (= lt!54593 e!69413)))

(declare-fun res!52995 () Bool)

(assert (=> d!29419 (=> (not res!52995) (not e!69413))))

(assert (=> d!29419 (= res!52995 ((_ is Cons!1612) (toList!787 lt!54193)))))

(assert (=> d!29419 (= (contains!821 (toList!787 lt!54193) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54593)))

(declare-fun b!106699 () Bool)

(declare-fun e!69414 () Bool)

(assert (=> b!106699 (= e!69413 e!69414)))

(declare-fun res!52996 () Bool)

(assert (=> b!106699 (=> res!52996 e!69414)))

(assert (=> b!106699 (= res!52996 (= (h!2209 (toList!787 lt!54193)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!106700 () Bool)

(assert (=> b!106700 (= e!69414 (contains!821 (t!5690 (toList!787 lt!54193)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!29419 res!52995) b!106699))

(assert (= (and b!106699 (not res!52996)) b!106700))

(declare-fun m!119389 () Bool)

(assert (=> d!29419 m!119389))

(declare-fun m!119391 () Bool)

(assert (=> d!29419 m!119391))

(declare-fun m!119393 () Bool)

(assert (=> b!106700 m!119393))

(assert (=> b!105850 d!29419))

(declare-fun d!29421 () Bool)

(assert (=> d!29421 (= (isEmpty!375 (toList!787 lt!53698)) ((_ is Nil!1613) (toList!787 lt!53698)))))

(assert (=> d!28839 d!29421))

(declare-fun d!29423 () Bool)

(assert (=> d!29423 (= (inRange!0 (ite c!18364 (index!3196 lt!53935) (index!3199 lt!53935)) (mask!6726 newMap!16)) (and (bvsge (ite c!18364 (index!3196 lt!53935) (index!3199 lt!53935)) #b00000000000000000000000000000000) (bvslt (ite c!18364 (index!3196 lt!53935) (index!3199 lt!53935)) (bvadd (mask!6726 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11146 d!29423))

(declare-fun d!29425 () Bool)

(assert (=> d!29425 (= (get!1334 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105568 d!29425))

(declare-fun d!29427 () Bool)

(assert (=> d!29427 (= (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!376 (getValueByKey!154 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4385 () Bool)

(assert (= bs!4385 d!29427))

(assert (=> bs!4385 m!117913))

(declare-fun m!119395 () Bool)

(assert (=> bs!4385 m!119395))

(assert (=> b!105880 d!29427))

(declare-fun b!106703 () Bool)

(declare-fun e!69416 () Option!160)

(assert (=> b!106703 (= e!69416 (getValueByKey!154 (t!5690 (toList!787 lt!53875)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106702 () Bool)

(declare-fun e!69415 () Option!160)

(assert (=> b!106702 (= e!69415 e!69416)))

(declare-fun c!18690 () Bool)

(assert (=> b!106702 (= c!18690 (and ((_ is Cons!1612) (toList!787 lt!53875)) (not (= (_1!1201 (h!2209 (toList!787 lt!53875))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!29429 () Bool)

(declare-fun c!18689 () Bool)

(assert (=> d!29429 (= c!18689 (and ((_ is Cons!1612) (toList!787 lt!53875)) (= (_1!1201 (h!2209 (toList!787 lt!53875))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29429 (= (getValueByKey!154 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000) e!69415)))

(declare-fun b!106704 () Bool)

(assert (=> b!106704 (= e!69416 None!158)))

(declare-fun b!106701 () Bool)

(assert (=> b!106701 (= e!69415 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53875)))))))

(assert (= (and d!29429 c!18689) b!106701))

(assert (= (and d!29429 (not c!18689)) b!106702))

(assert (= (and b!106702 c!18690) b!106703))

(assert (= (and b!106702 (not c!18690)) b!106704))

(declare-fun m!119397 () Bool)

(assert (=> b!106703 m!119397))

(assert (=> b!105880 d!29429))

(declare-fun d!29431 () Bool)

(assert (=> d!29431 (= (isEmpty!374 lt!54050) (isEmpty!375 (toList!787 lt!54050)))))

(declare-fun bs!4386 () Bool)

(assert (= bs!4386 d!29431))

(declare-fun m!119399 () Bool)

(assert (=> bs!4386 m!119399))

(assert (=> b!105705 d!29431))

(assert (=> d!28771 d!28759))

(assert (=> d!28771 d!28765))

(declare-fun d!29433 () Bool)

(assert (=> d!29433 (contains!820 (+!135 lt!53879 (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!53883)))

(assert (=> d!29433 true))

(declare-fun _$35!348 () Unit!3218)

(assert (=> d!29433 (= (choose!665 lt!53879 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))) lt!53883) _$35!348)))

(declare-fun bs!4387 () Bool)

(assert (= bs!4387 d!29433))

(assert (=> bs!4387 m!117235))

(assert (=> bs!4387 m!117235))

(assert (=> bs!4387 m!117237))

(assert (=> d!28771 d!29433))

(declare-fun d!29435 () Bool)

(declare-fun e!69417 () Bool)

(assert (=> d!29435 e!69417))

(declare-fun res!52997 () Bool)

(assert (=> d!29435 (=> res!52997 e!69417)))

(declare-fun lt!54594 () Bool)

(assert (=> d!29435 (= res!52997 (not lt!54594))))

(declare-fun lt!54597 () Bool)

(assert (=> d!29435 (= lt!54594 lt!54597)))

(declare-fun lt!54596 () Unit!3218)

(declare-fun e!69418 () Unit!3218)

(assert (=> d!29435 (= lt!54596 e!69418)))

(declare-fun c!18691 () Bool)

(assert (=> d!29435 (= c!18691 lt!54597)))

(assert (=> d!29435 (= lt!54597 (containsKey!158 (toList!787 lt!53879) lt!53883))))

(assert (=> d!29435 (= (contains!820 lt!53879 lt!53883) lt!54594)))

(declare-fun b!106706 () Bool)

(declare-fun lt!54595 () Unit!3218)

(assert (=> b!106706 (= e!69418 lt!54595)))

(assert (=> b!106706 (= lt!54595 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53879) lt!53883))))

(assert (=> b!106706 (isDefined!108 (getValueByKey!154 (toList!787 lt!53879) lt!53883))))

(declare-fun b!106707 () Bool)

(declare-fun Unit!3283 () Unit!3218)

(assert (=> b!106707 (= e!69418 Unit!3283)))

(declare-fun b!106708 () Bool)

(assert (=> b!106708 (= e!69417 (isDefined!108 (getValueByKey!154 (toList!787 lt!53879) lt!53883)))))

(assert (= (and d!29435 c!18691) b!106706))

(assert (= (and d!29435 (not c!18691)) b!106707))

(assert (= (and d!29435 (not res!52997)) b!106708))

(declare-fun m!119401 () Bool)

(assert (=> d!29435 m!119401))

(declare-fun m!119403 () Bool)

(assert (=> b!106706 m!119403))

(declare-fun m!119405 () Bool)

(assert (=> b!106706 m!119405))

(assert (=> b!106706 m!119405))

(declare-fun m!119407 () Bool)

(assert (=> b!106706 m!119407))

(assert (=> b!106708 m!119405))

(assert (=> b!106708 m!119405))

(assert (=> b!106708 m!119407))

(assert (=> d!28771 d!29435))

(declare-fun d!29437 () Bool)

(declare-fun res!52998 () Bool)

(declare-fun e!69419 () Bool)

(assert (=> d!29437 (=> res!52998 e!69419)))

(assert (=> d!29437 (= res!52998 (or ((_ is Nil!1613) lt!54211) ((_ is Nil!1613) (t!5690 lt!54211))))))

(assert (=> d!29437 (= (isStrictlySorted!304 lt!54211) e!69419)))

(declare-fun b!106709 () Bool)

(declare-fun e!69420 () Bool)

(assert (=> b!106709 (= e!69419 e!69420)))

(declare-fun res!52999 () Bool)

(assert (=> b!106709 (=> (not res!52999) (not e!69420))))

(assert (=> b!106709 (= res!52999 (bvslt (_1!1201 (h!2209 lt!54211)) (_1!1201 (h!2209 (t!5690 lt!54211)))))))

(declare-fun b!106710 () Bool)

(assert (=> b!106710 (= e!69420 (isStrictlySorted!304 (t!5690 lt!54211)))))

(assert (= (and d!29437 (not res!52998)) b!106709))

(assert (= (and b!106709 res!52999) b!106710))

(declare-fun m!119409 () Bool)

(assert (=> b!106710 m!119409))

(assert (=> d!28873 d!29437))

(assert (=> d!28873 d!29295))

(declare-fun d!29439 () Bool)

(declare-fun res!53000 () Bool)

(declare-fun e!69421 () Bool)

(assert (=> d!29439 (=> res!53000 e!69421)))

(assert (=> d!29439 (= res!53000 (and ((_ is Cons!1612) (toList!787 e!68596)) (= (_1!1201 (h!2209 (toList!787 e!68596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (=> d!29439 (= (containsKey!158 (toList!787 e!68596) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) e!69421)))

(declare-fun b!106711 () Bool)

(declare-fun e!69422 () Bool)

(assert (=> b!106711 (= e!69421 e!69422)))

(declare-fun res!53001 () Bool)

(assert (=> b!106711 (=> (not res!53001) (not e!69422))))

(assert (=> b!106711 (= res!53001 (and (or (not ((_ is Cons!1612) (toList!787 e!68596))) (bvsle (_1!1201 (h!2209 (toList!787 e!68596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))) ((_ is Cons!1612) (toList!787 e!68596)) (bvslt (_1!1201 (h!2209 (toList!787 e!68596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(declare-fun b!106712 () Bool)

(assert (=> b!106712 (= e!69422 (containsKey!158 (t!5690 (toList!787 e!68596)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (= (and d!29439 (not res!53000)) b!106711))

(assert (= (and b!106711 res!53001) b!106712))

(assert (=> b!106712 m!116875))

(declare-fun m!119411 () Bool)

(assert (=> b!106712 m!119411))

(assert (=> d!28875 d!29439))

(declare-fun d!29441 () Bool)

(declare-fun e!69423 () Bool)

(assert (=> d!29441 e!69423))

(declare-fun res!53003 () Bool)

(assert (=> d!29441 (=> (not res!53003) (not e!69423))))

(declare-fun lt!54601 () ListLongMap!1543)

(assert (=> d!29441 (= res!53003 (contains!820 lt!54601 (_1!1201 (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(declare-fun lt!54598 () List!1616)

(assert (=> d!29441 (= lt!54601 (ListLongMap!1544 lt!54598))))

(declare-fun lt!54599 () Unit!3218)

(declare-fun lt!54600 () Unit!3218)

(assert (=> d!29441 (= lt!54599 lt!54600)))

(assert (=> d!29441 (= (getValueByKey!154 lt!54598 (_1!1201 (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))) (Some!159 (_2!1201 (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29441 (= lt!54600 (lemmaContainsTupThenGetReturnValue!73 lt!54598 (_1!1201 (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (_2!1201 (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29441 (= lt!54598 (insertStrictlySorted!76 (toList!787 (ite c!18368 call!11154 (ite c!18371 call!11157 call!11158))) (_1!1201 (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) (_2!1201 (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))))

(assert (=> d!29441 (= (+!135 (ite c!18368 call!11154 (ite c!18371 call!11157 call!11158)) (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))) lt!54601)))

(declare-fun b!106713 () Bool)

(declare-fun res!53002 () Bool)

(assert (=> b!106713 (=> (not res!53002) (not e!69423))))

(assert (=> b!106713 (= res!53002 (= (getValueByKey!154 (toList!787 lt!54601) (_1!1201 (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))) (Some!159 (_2!1201 (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))))

(declare-fun b!106714 () Bool)

(assert (=> b!106714 (= e!69423 (contains!821 (toList!787 lt!54601) (ite (or c!18368 c!18371) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(assert (= (and d!29441 res!53003) b!106713))

(assert (= (and b!106713 res!53002) b!106714))

(declare-fun m!119413 () Bool)

(assert (=> d!29441 m!119413))

(declare-fun m!119415 () Bool)

(assert (=> d!29441 m!119415))

(declare-fun m!119417 () Bool)

(assert (=> d!29441 m!119417))

(declare-fun m!119419 () Bool)

(assert (=> d!29441 m!119419))

(declare-fun m!119421 () Bool)

(assert (=> b!106713 m!119421))

(declare-fun m!119423 () Bool)

(assert (=> b!106714 m!119423))

(assert (=> bm!11153 d!29441))

(declare-fun b!106717 () Bool)

(declare-fun e!69425 () Option!160)

(assert (=> b!106717 (= e!69425 (getValueByKey!154 (t!5690 (t!5690 (toList!787 lt!53720))) (_1!1201 lt!53606)))))

(declare-fun b!106716 () Bool)

(declare-fun e!69424 () Option!160)

(assert (=> b!106716 (= e!69424 e!69425)))

(declare-fun c!18693 () Bool)

(assert (=> b!106716 (= c!18693 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53720))) (not (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53720)))) (_1!1201 lt!53606)))))))

(declare-fun d!29443 () Bool)

(declare-fun c!18692 () Bool)

(assert (=> d!29443 (= c!18692 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53720))) (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53720)))) (_1!1201 lt!53606))))))

(assert (=> d!29443 (= (getValueByKey!154 (t!5690 (toList!787 lt!53720)) (_1!1201 lt!53606)) e!69424)))

(declare-fun b!106718 () Bool)

(assert (=> b!106718 (= e!69425 None!158)))

(declare-fun b!106715 () Bool)

(assert (=> b!106715 (= e!69424 (Some!159 (_2!1201 (h!2209 (t!5690 (toList!787 lt!53720))))))))

(assert (= (and d!29443 c!18692) b!106715))

(assert (= (and d!29443 (not c!18692)) b!106716))

(assert (= (and b!106716 c!18693) b!106717))

(assert (= (and b!106716 (not c!18693)) b!106718))

(declare-fun m!119425 () Bool)

(assert (=> b!106717 m!119425))

(assert (=> b!105883 d!29443))

(declare-fun d!29445 () Bool)

(declare-fun res!53004 () Bool)

(declare-fun e!69426 () Bool)

(assert (=> d!29445 (=> res!53004 e!69426)))

(assert (=> d!29445 (= res!53004 (= (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!29445 (= (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!69426)))

(declare-fun b!106719 () Bool)

(declare-fun e!69427 () Bool)

(assert (=> b!106719 (= e!69426 e!69427)))

(declare-fun res!53005 () Bool)

(assert (=> b!106719 (=> (not res!53005) (not e!69427))))

(assert (=> b!106719 (= res!53005 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!106720 () Bool)

(assert (=> b!106720 (= e!69427 (arrayContainsKey!0 (_keys!4286 (v!2883 (underlying!355 thiss!992))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29445 (not res!53004)) b!106719))

(assert (= (and b!106719 res!53005) b!106720))

(assert (=> d!29445 m!118631))

(assert (=> b!106720 m!116875))

(declare-fun m!119427 () Bool)

(assert (=> b!106720 m!119427))

(assert (=> b!105856 d!29445))

(assert (=> d!28793 d!29133))

(assert (=> b!105841 d!29263))

(declare-fun d!29447 () Bool)

(declare-fun e!69428 () Bool)

(assert (=> d!29447 e!69428))

(declare-fun res!53007 () Bool)

(assert (=> d!29447 (=> (not res!53007) (not e!69428))))

(declare-fun lt!54605 () ListLongMap!1543)

(assert (=> d!29447 (= res!53007 (contains!820 lt!54605 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun lt!54602 () List!1616)

(assert (=> d!29447 (= lt!54605 (ListLongMap!1544 lt!54602))))

(declare-fun lt!54603 () Unit!3218)

(declare-fun lt!54604 () Unit!3218)

(assert (=> d!29447 (= lt!54603 lt!54604)))

(assert (=> d!29447 (= (getValueByKey!154 lt!54602 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!29447 (= lt!54604 (lemmaContainsTupThenGetReturnValue!73 lt!54602 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!29447 (= lt!54602 (insertStrictlySorted!76 (toList!787 (map!1270 newMap!16)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!29447 (= (+!135 (map!1270 newMap!16) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) lt!54605)))

(declare-fun b!106721 () Bool)

(declare-fun res!53006 () Bool)

(assert (=> b!106721 (=> (not res!53006) (not e!69428))))

(assert (=> b!106721 (= res!53006 (= (getValueByKey!154 (toList!787 lt!54605) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!106722 () Bool)

(assert (=> b!106722 (= e!69428 (contains!821 (toList!787 lt!54605) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(assert (= (and d!29447 res!53007) b!106721))

(assert (= (and b!106721 res!53006) b!106722))

(declare-fun m!119429 () Bool)

(assert (=> d!29447 m!119429))

(declare-fun m!119431 () Bool)

(assert (=> d!29447 m!119431))

(declare-fun m!119433 () Bool)

(assert (=> d!29447 m!119433))

(declare-fun m!119435 () Bool)

(assert (=> d!29447 m!119435))

(declare-fun m!119437 () Bool)

(assert (=> b!106721 m!119437))

(declare-fun m!119439 () Bool)

(assert (=> b!106722 m!119439))

(assert (=> b!105841 d!29447))

(assert (=> b!105841 d!28703))

(declare-fun e!69430 () Option!160)

(declare-fun b!106725 () Bool)

(assert (=> b!106725 (= e!69430 (getValueByKey!154 (t!5690 (toList!787 lt!54081)) (_1!1201 (tuple2!2381 lt!53694 lt!53699))))))

(declare-fun b!106724 () Bool)

(declare-fun e!69429 () Option!160)

(assert (=> b!106724 (= e!69429 e!69430)))

(declare-fun c!18695 () Bool)

(assert (=> b!106724 (= c!18695 (and ((_ is Cons!1612) (toList!787 lt!54081)) (not (= (_1!1201 (h!2209 (toList!787 lt!54081))) (_1!1201 (tuple2!2381 lt!53694 lt!53699))))))))

(declare-fun d!29449 () Bool)

(declare-fun c!18694 () Bool)

(assert (=> d!29449 (= c!18694 (and ((_ is Cons!1612) (toList!787 lt!54081)) (= (_1!1201 (h!2209 (toList!787 lt!54081))) (_1!1201 (tuple2!2381 lt!53694 lt!53699)))))))

(assert (=> d!29449 (= (getValueByKey!154 (toList!787 lt!54081) (_1!1201 (tuple2!2381 lt!53694 lt!53699))) e!69429)))

(declare-fun b!106726 () Bool)

(assert (=> b!106726 (= e!69430 None!158)))

(declare-fun b!106723 () Bool)

(assert (=> b!106723 (= e!69429 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54081)))))))

(assert (= (and d!29449 c!18694) b!106723))

(assert (= (and d!29449 (not c!18694)) b!106724))

(assert (= (and b!106724 c!18695) b!106725))

(assert (= (and b!106724 (not c!18695)) b!106726))

(declare-fun m!119441 () Bool)

(assert (=> b!106725 m!119441))

(assert (=> b!105780 d!29449))

(declare-fun d!29451 () Bool)

(assert (=> d!29451 (= (get!1335 (getValueByKey!154 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2889 (getValueByKey!154 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28857 d!29451))

(assert (=> d!28857 d!29351))

(declare-fun d!29453 () Bool)

(declare-fun e!69431 () Bool)

(assert (=> d!29453 e!69431))

(declare-fun res!53008 () Bool)

(assert (=> d!29453 (=> res!53008 e!69431)))

(declare-fun lt!54606 () Bool)

(assert (=> d!29453 (= res!53008 (not lt!54606))))

(declare-fun lt!54609 () Bool)

(assert (=> d!29453 (= lt!54606 lt!54609)))

(declare-fun lt!54608 () Unit!3218)

(declare-fun e!69432 () Unit!3218)

(assert (=> d!29453 (= lt!54608 e!69432)))

(declare-fun c!18696 () Bool)

(assert (=> d!29453 (= c!18696 lt!54609)))

(assert (=> d!29453 (= lt!54609 (containsKey!158 (toList!787 lt!54031) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!29453 (= (contains!820 lt!54031 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54606)))

(declare-fun b!106727 () Bool)

(declare-fun lt!54607 () Unit!3218)

(assert (=> b!106727 (= e!69432 lt!54607)))

(assert (=> b!106727 (= lt!54607 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54031) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> b!106727 (isDefined!108 (getValueByKey!154 (toList!787 lt!54031) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106728 () Bool)

(declare-fun Unit!3284 () Unit!3218)

(assert (=> b!106728 (= e!69432 Unit!3284)))

(declare-fun b!106729 () Bool)

(assert (=> b!106729 (= e!69431 (isDefined!108 (getValueByKey!154 (toList!787 lt!54031) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!29453 c!18696) b!106727))

(assert (= (and d!29453 (not c!18696)) b!106728))

(assert (= (and d!29453 (not res!53008)) b!106729))

(declare-fun m!119443 () Bool)

(assert (=> d!29453 m!119443))

(declare-fun m!119445 () Bool)

(assert (=> b!106727 m!119445))

(assert (=> b!106727 m!117617))

(assert (=> b!106727 m!117617))

(declare-fun m!119447 () Bool)

(assert (=> b!106727 m!119447))

(assert (=> b!106729 m!117617))

(assert (=> b!106729 m!117617))

(assert (=> b!106729 m!119447))

(assert (=> d!28779 d!29453))

(declare-fun e!69434 () Option!160)

(declare-fun b!106732 () Bool)

(assert (=> b!106732 (= e!69434 (getValueByKey!154 (t!5690 lt!54028) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106731 () Bool)

(declare-fun e!69433 () Option!160)

(assert (=> b!106731 (= e!69433 e!69434)))

(declare-fun c!18698 () Bool)

(assert (=> b!106731 (= c!18698 (and ((_ is Cons!1612) lt!54028) (not (= (_1!1201 (h!2209 lt!54028)) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18697 () Bool)

(declare-fun d!29455 () Bool)

(assert (=> d!29455 (= c!18697 (and ((_ is Cons!1612) lt!54028) (= (_1!1201 (h!2209 lt!54028)) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29455 (= (getValueByKey!154 lt!54028 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69433)))

(declare-fun b!106733 () Bool)

(assert (=> b!106733 (= e!69434 None!158)))

(declare-fun b!106730 () Bool)

(assert (=> b!106730 (= e!69433 (Some!159 (_2!1201 (h!2209 lt!54028))))))

(assert (= (and d!29455 c!18697) b!106730))

(assert (= (and d!29455 (not c!18697)) b!106731))

(assert (= (and b!106731 c!18698) b!106732))

(assert (= (and b!106731 (not c!18698)) b!106733))

(declare-fun m!119449 () Bool)

(assert (=> b!106732 m!119449))

(assert (=> d!28779 d!29455))

(declare-fun d!29457 () Bool)

(assert (=> d!29457 (= (getValueByKey!154 lt!54028 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54610 () Unit!3218)

(assert (=> d!29457 (= lt!54610 (choose!667 lt!54028 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun e!69435 () Bool)

(assert (=> d!29457 e!69435))

(declare-fun res!53009 () Bool)

(assert (=> d!29457 (=> (not res!53009) (not e!69435))))

(assert (=> d!29457 (= res!53009 (isStrictlySorted!304 lt!54028))))

(assert (=> d!29457 (= (lemmaContainsTupThenGetReturnValue!73 lt!54028 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54610)))

(declare-fun b!106734 () Bool)

(declare-fun res!53010 () Bool)

(assert (=> b!106734 (=> (not res!53010) (not e!69435))))

(assert (=> b!106734 (= res!53010 (containsKey!158 lt!54028 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106735 () Bool)

(assert (=> b!106735 (= e!69435 (contains!821 lt!54028 (tuple2!2381 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!29457 res!53009) b!106734))

(assert (= (and b!106734 res!53010) b!106735))

(assert (=> d!29457 m!117611))

(declare-fun m!119451 () Bool)

(assert (=> d!29457 m!119451))

(declare-fun m!119453 () Bool)

(assert (=> d!29457 m!119453))

(declare-fun m!119455 () Bool)

(assert (=> b!106734 m!119455))

(declare-fun m!119457 () Bool)

(assert (=> b!106735 m!119457))

(assert (=> d!28779 d!29457))

(declare-fun c!18701 () Bool)

(declare-fun b!106736 () Bool)

(assert (=> b!106736 (= c!18701 (and ((_ is Cons!1612) (toList!787 lt!53884)) (bvsgt (_1!1201 (h!2209 (toList!787 lt!53884))) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun e!69439 () List!1616)

(declare-fun e!69438 () List!1616)

(assert (=> b!106736 (= e!69439 e!69438)))

(declare-fun b!106737 () Bool)

(declare-fun e!69437 () List!1616)

(declare-fun call!11278 () List!1616)

(assert (=> b!106737 (= e!69437 call!11278)))

(declare-fun lt!54611 () List!1616)

(declare-fun b!106738 () Bool)

(declare-fun e!69440 () Bool)

(assert (=> b!106738 (= e!69440 (contains!821 lt!54611 (tuple2!2381 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106739 () Bool)

(declare-fun res!53011 () Bool)

(assert (=> b!106739 (=> (not res!53011) (not e!69440))))

(assert (=> b!106739 (= res!53011 (containsKey!158 lt!54611 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106740 () Bool)

(declare-fun call!11279 () List!1616)

(assert (=> b!106740 (= e!69438 call!11279)))

(declare-fun b!106741 () Bool)

(assert (=> b!106741 (= e!69438 call!11279)))

(declare-fun b!106742 () Bool)

(assert (=> b!106742 (= e!69437 e!69439)))

(declare-fun c!18702 () Bool)

(assert (=> b!106742 (= c!18702 (and ((_ is Cons!1612) (toList!787 lt!53884)) (= (_1!1201 (h!2209 (toList!787 lt!53884))) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun bm!11275 () Bool)

(declare-fun call!11280 () List!1616)

(assert (=> bm!11275 (= call!11280 call!11278)))

(declare-fun b!106743 () Bool)

(assert (=> b!106743 (= e!69439 call!11280)))

(declare-fun b!106744 () Bool)

(declare-fun e!69436 () List!1616)

(assert (=> b!106744 (= e!69436 (insertStrictlySorted!76 (t!5690 (toList!787 lt!53884)) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun bm!11277 () Bool)

(assert (=> bm!11277 (= call!11279 call!11280)))

(declare-fun b!106745 () Bool)

(assert (=> b!106745 (= e!69436 (ite c!18702 (t!5690 (toList!787 lt!53884)) (ite c!18701 (Cons!1612 (h!2209 (toList!787 lt!53884)) (t!5690 (toList!787 lt!53884))) Nil!1613)))))

(declare-fun bm!11276 () Bool)

(declare-fun c!18699 () Bool)

(assert (=> bm!11276 (= call!11278 ($colon$colon!80 e!69436 (ite c!18699 (h!2209 (toList!787 lt!53884)) (tuple2!2381 (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18700 () Bool)

(assert (=> bm!11276 (= c!18700 c!18699)))

(declare-fun d!29459 () Bool)

(assert (=> d!29459 e!69440))

(declare-fun res!53012 () Bool)

(assert (=> d!29459 (=> (not res!53012) (not e!69440))))

(assert (=> d!29459 (= res!53012 (isStrictlySorted!304 lt!54611))))

(assert (=> d!29459 (= lt!54611 e!69437)))

(assert (=> d!29459 (= c!18699 (and ((_ is Cons!1612) (toList!787 lt!53884)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53884))) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29459 (isStrictlySorted!304 (toList!787 lt!53884))))

(assert (=> d!29459 (= (insertStrictlySorted!76 (toList!787 lt!53884) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54611)))

(assert (= (and d!29459 c!18699) b!106737))

(assert (= (and d!29459 (not c!18699)) b!106742))

(assert (= (and b!106742 c!18702) b!106743))

(assert (= (and b!106742 (not c!18702)) b!106736))

(assert (= (and b!106736 c!18701) b!106740))

(assert (= (and b!106736 (not c!18701)) b!106741))

(assert (= (or b!106740 b!106741) bm!11277))

(assert (= (or b!106743 bm!11277) bm!11275))

(assert (= (or b!106737 bm!11275) bm!11276))

(assert (= (and bm!11276 c!18700) b!106744))

(assert (= (and bm!11276 (not c!18700)) b!106745))

(assert (= (and d!29459 res!53012) b!106739))

(assert (= (and b!106739 res!53011) b!106738))

(declare-fun m!119459 () Bool)

(assert (=> b!106738 m!119459))

(declare-fun m!119461 () Bool)

(assert (=> d!29459 m!119461))

(declare-fun m!119463 () Bool)

(assert (=> d!29459 m!119463))

(declare-fun m!119465 () Bool)

(assert (=> b!106739 m!119465))

(declare-fun m!119467 () Bool)

(assert (=> b!106744 m!119467))

(declare-fun m!119469 () Bool)

(assert (=> bm!11276 m!119469))

(assert (=> d!28779 d!29459))

(assert (=> b!105703 d!29005))

(declare-fun d!29461 () Bool)

(declare-fun e!69441 () Bool)

(assert (=> d!29461 e!69441))

(declare-fun res!53014 () Bool)

(assert (=> d!29461 (=> (not res!53014) (not e!69441))))

(declare-fun lt!54615 () ListLongMap!1543)

(assert (=> d!29461 (= res!53014 (contains!820 lt!54615 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!54612 () List!1616)

(assert (=> d!29461 (= lt!54615 (ListLongMap!1544 lt!54612))))

(declare-fun lt!54613 () Unit!3218)

(declare-fun lt!54614 () Unit!3218)

(assert (=> d!29461 (= lt!54613 lt!54614)))

(assert (=> d!29461 (= (getValueByKey!154 lt!54612 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29461 (= lt!54614 (lemmaContainsTupThenGetReturnValue!73 lt!54612 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29461 (= lt!54612 (insertStrictlySorted!76 (toList!787 call!11166) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29461 (= (+!135 call!11166 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!54615)))

(declare-fun b!106746 () Bool)

(declare-fun res!53013 () Bool)

(assert (=> b!106746 (=> (not res!53013) (not e!69441))))

(assert (=> b!106746 (= res!53013 (= (getValueByKey!154 (toList!787 lt!54615) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!106747 () Bool)

(assert (=> b!106747 (= e!69441 (contains!821 (toList!787 lt!54615) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1331 (select (arr!2051 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29461 res!53014) b!106746))

(assert (= (and b!106746 res!53013) b!106747))

(declare-fun m!119471 () Bool)

(assert (=> d!29461 m!119471))

(declare-fun m!119473 () Bool)

(assert (=> d!29461 m!119473))

(declare-fun m!119475 () Bool)

(assert (=> d!29461 m!119475))

(declare-fun m!119477 () Bool)

(assert (=> d!29461 m!119477))

(declare-fun m!119479 () Bool)

(assert (=> b!106746 m!119479))

(declare-fun m!119481 () Bool)

(assert (=> b!106747 m!119481))

(assert (=> b!105703 d!29461))

(declare-fun d!29463 () Bool)

(declare-fun e!69442 () Bool)

(assert (=> d!29463 e!69442))

(declare-fun res!53016 () Bool)

(assert (=> d!29463 (=> (not res!53016) (not e!69442))))

(declare-fun lt!54619 () ListLongMap!1543)

(assert (=> d!29463 (= res!53016 (contains!820 lt!54619 (_1!1201 (tuple2!2381 lt!54046 lt!54051))))))

(declare-fun lt!54616 () List!1616)

(assert (=> d!29463 (= lt!54619 (ListLongMap!1544 lt!54616))))

(declare-fun lt!54617 () Unit!3218)

(declare-fun lt!54618 () Unit!3218)

(assert (=> d!29463 (= lt!54617 lt!54618)))

(assert (=> d!29463 (= (getValueByKey!154 lt!54616 (_1!1201 (tuple2!2381 lt!54046 lt!54051))) (Some!159 (_2!1201 (tuple2!2381 lt!54046 lt!54051))))))

(assert (=> d!29463 (= lt!54618 (lemmaContainsTupThenGetReturnValue!73 lt!54616 (_1!1201 (tuple2!2381 lt!54046 lt!54051)) (_2!1201 (tuple2!2381 lt!54046 lt!54051))))))

(assert (=> d!29463 (= lt!54616 (insertStrictlySorted!76 (toList!787 lt!54049) (_1!1201 (tuple2!2381 lt!54046 lt!54051)) (_2!1201 (tuple2!2381 lt!54046 lt!54051))))))

(assert (=> d!29463 (= (+!135 lt!54049 (tuple2!2381 lt!54046 lt!54051)) lt!54619)))

(declare-fun b!106748 () Bool)

(declare-fun res!53015 () Bool)

(assert (=> b!106748 (=> (not res!53015) (not e!69442))))

(assert (=> b!106748 (= res!53015 (= (getValueByKey!154 (toList!787 lt!54619) (_1!1201 (tuple2!2381 lt!54046 lt!54051))) (Some!159 (_2!1201 (tuple2!2381 lt!54046 lt!54051)))))))

(declare-fun b!106749 () Bool)

(assert (=> b!106749 (= e!69442 (contains!821 (toList!787 lt!54619) (tuple2!2381 lt!54046 lt!54051)))))

(assert (= (and d!29463 res!53016) b!106748))

(assert (= (and b!106748 res!53015) b!106749))

(declare-fun m!119483 () Bool)

(assert (=> d!29463 m!119483))

(declare-fun m!119485 () Bool)

(assert (=> d!29463 m!119485))

(declare-fun m!119487 () Bool)

(assert (=> d!29463 m!119487))

(declare-fun m!119489 () Bool)

(assert (=> d!29463 m!119489))

(declare-fun m!119491 () Bool)

(assert (=> b!106748 m!119491))

(declare-fun m!119493 () Bool)

(assert (=> b!106749 m!119493))

(assert (=> b!105703 d!29463))

(declare-fun d!29465 () Bool)

(assert (=> d!29465 (not (contains!820 (+!135 lt!54049 (tuple2!2381 lt!54046 lt!54051)) lt!54047))))

(declare-fun lt!54620 () Unit!3218)

(assert (=> d!29465 (= lt!54620 (choose!669 lt!54049 lt!54046 lt!54051 lt!54047))))

(declare-fun e!69443 () Bool)

(assert (=> d!29465 e!69443))

(declare-fun res!53017 () Bool)

(assert (=> d!29465 (=> (not res!53017) (not e!69443))))

(assert (=> d!29465 (= res!53017 (not (contains!820 lt!54049 lt!54047)))))

(assert (=> d!29465 (= (addStillNotContains!47 lt!54049 lt!54046 lt!54051 lt!54047) lt!54620)))

(declare-fun b!106750 () Bool)

(assert (=> b!106750 (= e!69443 (not (= lt!54046 lt!54047)))))

(assert (= (and d!29465 res!53017) b!106750))

(assert (=> d!29465 m!117681))

(assert (=> d!29465 m!117681))

(assert (=> d!29465 m!117683))

(declare-fun m!119495 () Bool)

(assert (=> d!29465 m!119495))

(declare-fun m!119497 () Bool)

(assert (=> d!29465 m!119497))

(assert (=> b!105703 d!29465))

(declare-fun d!29467 () Bool)

(declare-fun e!69444 () Bool)

(assert (=> d!29467 e!69444))

(declare-fun res!53018 () Bool)

(assert (=> d!29467 (=> res!53018 e!69444)))

(declare-fun lt!54621 () Bool)

(assert (=> d!29467 (= res!53018 (not lt!54621))))

(declare-fun lt!54624 () Bool)

(assert (=> d!29467 (= lt!54621 lt!54624)))

(declare-fun lt!54623 () Unit!3218)

(declare-fun e!69445 () Unit!3218)

(assert (=> d!29467 (= lt!54623 e!69445)))

(declare-fun c!18703 () Bool)

(assert (=> d!29467 (= c!18703 lt!54624)))

(assert (=> d!29467 (= lt!54624 (containsKey!158 (toList!787 (+!135 lt!54049 (tuple2!2381 lt!54046 lt!54051))) lt!54047))))

(assert (=> d!29467 (= (contains!820 (+!135 lt!54049 (tuple2!2381 lt!54046 lt!54051)) lt!54047) lt!54621)))

(declare-fun b!106751 () Bool)

(declare-fun lt!54622 () Unit!3218)

(assert (=> b!106751 (= e!69445 lt!54622)))

(assert (=> b!106751 (= lt!54622 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (+!135 lt!54049 (tuple2!2381 lt!54046 lt!54051))) lt!54047))))

(assert (=> b!106751 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!54049 (tuple2!2381 lt!54046 lt!54051))) lt!54047))))

(declare-fun b!106752 () Bool)

(declare-fun Unit!3285 () Unit!3218)

(assert (=> b!106752 (= e!69445 Unit!3285)))

(declare-fun b!106753 () Bool)

(assert (=> b!106753 (= e!69444 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!54049 (tuple2!2381 lt!54046 lt!54051))) lt!54047)))))

(assert (= (and d!29467 c!18703) b!106751))

(assert (= (and d!29467 (not c!18703)) b!106752))

(assert (= (and d!29467 (not res!53018)) b!106753))

(declare-fun m!119499 () Bool)

(assert (=> d!29467 m!119499))

(declare-fun m!119501 () Bool)

(assert (=> b!106751 m!119501))

(declare-fun m!119503 () Bool)

(assert (=> b!106751 m!119503))

(assert (=> b!106751 m!119503))

(declare-fun m!119505 () Bool)

(assert (=> b!106751 m!119505))

(assert (=> b!106753 m!119503))

(assert (=> b!106753 m!119503))

(assert (=> b!106753 m!119505))

(assert (=> b!105703 d!29467))

(declare-fun d!29469 () Bool)

(declare-fun e!69446 () Bool)

(assert (=> d!29469 e!69446))

(declare-fun res!53019 () Bool)

(assert (=> d!29469 (=> res!53019 e!69446)))

(declare-fun lt!54625 () Bool)

(assert (=> d!29469 (= res!53019 (not lt!54625))))

(declare-fun lt!54628 () Bool)

(assert (=> d!29469 (= lt!54625 lt!54628)))

(declare-fun lt!54627 () Unit!3218)

(declare-fun e!69447 () Unit!3218)

(assert (=> d!29469 (= lt!54627 e!69447)))

(declare-fun c!18704 () Bool)

(assert (=> d!29469 (= c!18704 lt!54628)))

(assert (=> d!29469 (= lt!54628 (containsKey!158 (toList!787 lt!53976) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29469 (= (contains!820 lt!53976 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) lt!54625)))

(declare-fun b!106754 () Bool)

(declare-fun lt!54626 () Unit!3218)

(assert (=> b!106754 (= e!69447 lt!54626)))

(assert (=> b!106754 (= lt!54626 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53976) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106754 (isDefined!108 (getValueByKey!154 (toList!787 lt!53976) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106755 () Bool)

(declare-fun Unit!3286 () Unit!3218)

(assert (=> b!106755 (= e!69447 Unit!3286)))

(declare-fun b!106756 () Bool)

(assert (=> b!106756 (= e!69446 (isDefined!108 (getValueByKey!154 (toList!787 lt!53976) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29469 c!18704) b!106754))

(assert (= (and d!29469 (not c!18704)) b!106755))

(assert (= (and d!29469 (not res!53019)) b!106756))

(assert (=> d!29469 m!117265))

(declare-fun m!119507 () Bool)

(assert (=> d!29469 m!119507))

(assert (=> b!106754 m!117265))

(declare-fun m!119509 () Bool)

(assert (=> b!106754 m!119509))

(assert (=> b!106754 m!117265))

(declare-fun m!119511 () Bool)

(assert (=> b!106754 m!119511))

(assert (=> b!106754 m!119511))

(declare-fun m!119513 () Bool)

(assert (=> b!106754 m!119513))

(assert (=> b!106756 m!117265))

(assert (=> b!106756 m!119511))

(assert (=> b!106756 m!119511))

(assert (=> b!106756 m!119513))

(assert (=> b!105638 d!29469))

(declare-fun d!29471 () Bool)

(declare-fun e!69448 () Bool)

(assert (=> d!29471 e!69448))

(declare-fun res!53020 () Bool)

(assert (=> d!29471 (=> res!53020 e!69448)))

(declare-fun lt!54629 () Bool)

(assert (=> d!29471 (= res!53020 (not lt!54629))))

(declare-fun lt!54632 () Bool)

(assert (=> d!29471 (= lt!54629 lt!54632)))

(declare-fun lt!54631 () Unit!3218)

(declare-fun e!69449 () Unit!3218)

(assert (=> d!29471 (= lt!54631 e!69449)))

(declare-fun c!18705 () Bool)

(assert (=> d!29471 (= c!18705 lt!54632)))

(assert (=> d!29471 (= lt!54632 (containsKey!158 (toList!787 lt!54081) (_1!1201 (tuple2!2381 lt!53694 lt!53699))))))

(assert (=> d!29471 (= (contains!820 lt!54081 (_1!1201 (tuple2!2381 lt!53694 lt!53699))) lt!54629)))

(declare-fun b!106757 () Bool)

(declare-fun lt!54630 () Unit!3218)

(assert (=> b!106757 (= e!69449 lt!54630)))

(assert (=> b!106757 (= lt!54630 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54081) (_1!1201 (tuple2!2381 lt!53694 lt!53699))))))

(assert (=> b!106757 (isDefined!108 (getValueByKey!154 (toList!787 lt!54081) (_1!1201 (tuple2!2381 lt!53694 lt!53699))))))

(declare-fun b!106758 () Bool)

(declare-fun Unit!3287 () Unit!3218)

(assert (=> b!106758 (= e!69449 Unit!3287)))

(declare-fun b!106759 () Bool)

(assert (=> b!106759 (= e!69448 (isDefined!108 (getValueByKey!154 (toList!787 lt!54081) (_1!1201 (tuple2!2381 lt!53694 lt!53699)))))))

(assert (= (and d!29471 c!18705) b!106757))

(assert (= (and d!29471 (not c!18705)) b!106758))

(assert (= (and d!29471 (not res!53020)) b!106759))

(declare-fun m!119515 () Bool)

(assert (=> d!29471 m!119515))

(declare-fun m!119517 () Bool)

(assert (=> b!106757 m!119517))

(assert (=> b!106757 m!117743))

(assert (=> b!106757 m!117743))

(declare-fun m!119519 () Bool)

(assert (=> b!106757 m!119519))

(assert (=> b!106759 m!117743))

(assert (=> b!106759 m!117743))

(assert (=> b!106759 m!119519))

(assert (=> d!28815 d!29471))

(declare-fun e!69451 () Option!160)

(declare-fun b!106762 () Bool)

(assert (=> b!106762 (= e!69451 (getValueByKey!154 (t!5690 lt!54078) (_1!1201 (tuple2!2381 lt!53694 lt!53699))))))

(declare-fun b!106761 () Bool)

(declare-fun e!69450 () Option!160)

(assert (=> b!106761 (= e!69450 e!69451)))

(declare-fun c!18707 () Bool)

(assert (=> b!106761 (= c!18707 (and ((_ is Cons!1612) lt!54078) (not (= (_1!1201 (h!2209 lt!54078)) (_1!1201 (tuple2!2381 lt!53694 lt!53699))))))))

(declare-fun d!29473 () Bool)

(declare-fun c!18706 () Bool)

(assert (=> d!29473 (= c!18706 (and ((_ is Cons!1612) lt!54078) (= (_1!1201 (h!2209 lt!54078)) (_1!1201 (tuple2!2381 lt!53694 lt!53699)))))))

(assert (=> d!29473 (= (getValueByKey!154 lt!54078 (_1!1201 (tuple2!2381 lt!53694 lt!53699))) e!69450)))

(declare-fun b!106763 () Bool)

(assert (=> b!106763 (= e!69451 None!158)))

(declare-fun b!106760 () Bool)

(assert (=> b!106760 (= e!69450 (Some!159 (_2!1201 (h!2209 lt!54078))))))

(assert (= (and d!29473 c!18706) b!106760))

(assert (= (and d!29473 (not c!18706)) b!106761))

(assert (= (and b!106761 c!18707) b!106762))

(assert (= (and b!106761 (not c!18707)) b!106763))

(declare-fun m!119521 () Bool)

(assert (=> b!106762 m!119521))

(assert (=> d!28815 d!29473))

(declare-fun d!29475 () Bool)

(assert (=> d!29475 (= (getValueByKey!154 lt!54078 (_1!1201 (tuple2!2381 lt!53694 lt!53699))) (Some!159 (_2!1201 (tuple2!2381 lt!53694 lt!53699))))))

(declare-fun lt!54633 () Unit!3218)

(assert (=> d!29475 (= lt!54633 (choose!667 lt!54078 (_1!1201 (tuple2!2381 lt!53694 lt!53699)) (_2!1201 (tuple2!2381 lt!53694 lt!53699))))))

(declare-fun e!69452 () Bool)

(assert (=> d!29475 e!69452))

(declare-fun res!53021 () Bool)

(assert (=> d!29475 (=> (not res!53021) (not e!69452))))

(assert (=> d!29475 (= res!53021 (isStrictlySorted!304 lt!54078))))

(assert (=> d!29475 (= (lemmaContainsTupThenGetReturnValue!73 lt!54078 (_1!1201 (tuple2!2381 lt!53694 lt!53699)) (_2!1201 (tuple2!2381 lt!53694 lt!53699))) lt!54633)))

(declare-fun b!106764 () Bool)

(declare-fun res!53022 () Bool)

(assert (=> b!106764 (=> (not res!53022) (not e!69452))))

(assert (=> b!106764 (= res!53022 (containsKey!158 lt!54078 (_1!1201 (tuple2!2381 lt!53694 lt!53699))))))

(declare-fun b!106765 () Bool)

(assert (=> b!106765 (= e!69452 (contains!821 lt!54078 (tuple2!2381 (_1!1201 (tuple2!2381 lt!53694 lt!53699)) (_2!1201 (tuple2!2381 lt!53694 lt!53699)))))))

(assert (= (and d!29475 res!53021) b!106764))

(assert (= (and b!106764 res!53022) b!106765))

(assert (=> d!29475 m!117737))

(declare-fun m!119523 () Bool)

(assert (=> d!29475 m!119523))

(declare-fun m!119525 () Bool)

(assert (=> d!29475 m!119525))

(declare-fun m!119527 () Bool)

(assert (=> b!106764 m!119527))

(declare-fun m!119529 () Bool)

(assert (=> b!106765 m!119529))

(assert (=> d!28815 d!29475))

(declare-fun b!106766 () Bool)

(declare-fun c!18710 () Bool)

(assert (=> b!106766 (= c!18710 (and ((_ is Cons!1612) (toList!787 lt!53697)) (bvsgt (_1!1201 (h!2209 (toList!787 lt!53697))) (_1!1201 (tuple2!2381 lt!53694 lt!53699)))))))

(declare-fun e!69456 () List!1616)

(declare-fun e!69455 () List!1616)

(assert (=> b!106766 (= e!69456 e!69455)))

(declare-fun b!106767 () Bool)

(declare-fun e!69454 () List!1616)

(declare-fun call!11281 () List!1616)

(assert (=> b!106767 (= e!69454 call!11281)))

(declare-fun b!106768 () Bool)

(declare-fun lt!54634 () List!1616)

(declare-fun e!69457 () Bool)

(assert (=> b!106768 (= e!69457 (contains!821 lt!54634 (tuple2!2381 (_1!1201 (tuple2!2381 lt!53694 lt!53699)) (_2!1201 (tuple2!2381 lt!53694 lt!53699)))))))

(declare-fun b!106769 () Bool)

(declare-fun res!53023 () Bool)

(assert (=> b!106769 (=> (not res!53023) (not e!69457))))

(assert (=> b!106769 (= res!53023 (containsKey!158 lt!54634 (_1!1201 (tuple2!2381 lt!53694 lt!53699))))))

(declare-fun b!106770 () Bool)

(declare-fun call!11282 () List!1616)

(assert (=> b!106770 (= e!69455 call!11282)))

(declare-fun b!106771 () Bool)

(assert (=> b!106771 (= e!69455 call!11282)))

(declare-fun b!106772 () Bool)

(assert (=> b!106772 (= e!69454 e!69456)))

(declare-fun c!18711 () Bool)

(assert (=> b!106772 (= c!18711 (and ((_ is Cons!1612) (toList!787 lt!53697)) (= (_1!1201 (h!2209 (toList!787 lt!53697))) (_1!1201 (tuple2!2381 lt!53694 lt!53699)))))))

(declare-fun bm!11278 () Bool)

(declare-fun call!11283 () List!1616)

(assert (=> bm!11278 (= call!11283 call!11281)))

(declare-fun b!106773 () Bool)

(assert (=> b!106773 (= e!69456 call!11283)))

(declare-fun e!69453 () List!1616)

(declare-fun b!106774 () Bool)

(assert (=> b!106774 (= e!69453 (insertStrictlySorted!76 (t!5690 (toList!787 lt!53697)) (_1!1201 (tuple2!2381 lt!53694 lt!53699)) (_2!1201 (tuple2!2381 lt!53694 lt!53699))))))

(declare-fun bm!11280 () Bool)

(assert (=> bm!11280 (= call!11282 call!11283)))

(declare-fun b!106775 () Bool)

(assert (=> b!106775 (= e!69453 (ite c!18711 (t!5690 (toList!787 lt!53697)) (ite c!18710 (Cons!1612 (h!2209 (toList!787 lt!53697)) (t!5690 (toList!787 lt!53697))) Nil!1613)))))

(declare-fun c!18708 () Bool)

(declare-fun bm!11279 () Bool)

(assert (=> bm!11279 (= call!11281 ($colon$colon!80 e!69453 (ite c!18708 (h!2209 (toList!787 lt!53697)) (tuple2!2381 (_1!1201 (tuple2!2381 lt!53694 lt!53699)) (_2!1201 (tuple2!2381 lt!53694 lt!53699))))))))

(declare-fun c!18709 () Bool)

(assert (=> bm!11279 (= c!18709 c!18708)))

(declare-fun d!29477 () Bool)

(assert (=> d!29477 e!69457))

(declare-fun res!53024 () Bool)

(assert (=> d!29477 (=> (not res!53024) (not e!69457))))

(assert (=> d!29477 (= res!53024 (isStrictlySorted!304 lt!54634))))

(assert (=> d!29477 (= lt!54634 e!69454)))

(assert (=> d!29477 (= c!18708 (and ((_ is Cons!1612) (toList!787 lt!53697)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53697))) (_1!1201 (tuple2!2381 lt!53694 lt!53699)))))))

(assert (=> d!29477 (isStrictlySorted!304 (toList!787 lt!53697))))

(assert (=> d!29477 (= (insertStrictlySorted!76 (toList!787 lt!53697) (_1!1201 (tuple2!2381 lt!53694 lt!53699)) (_2!1201 (tuple2!2381 lt!53694 lt!53699))) lt!54634)))

(assert (= (and d!29477 c!18708) b!106767))

(assert (= (and d!29477 (not c!18708)) b!106772))

(assert (= (and b!106772 c!18711) b!106773))

(assert (= (and b!106772 (not c!18711)) b!106766))

(assert (= (and b!106766 c!18710) b!106770))

(assert (= (and b!106766 (not c!18710)) b!106771))

(assert (= (or b!106770 b!106771) bm!11280))

(assert (= (or b!106773 bm!11280) bm!11278))

(assert (= (or b!106767 bm!11278) bm!11279))

(assert (= (and bm!11279 c!18709) b!106774))

(assert (= (and bm!11279 (not c!18709)) b!106775))

(assert (= (and d!29477 res!53024) b!106769))

(assert (= (and b!106769 res!53023) b!106768))

(declare-fun m!119531 () Bool)

(assert (=> b!106768 m!119531))

(declare-fun m!119533 () Bool)

(assert (=> d!29477 m!119533))

(declare-fun m!119535 () Bool)

(assert (=> d!29477 m!119535))

(declare-fun m!119537 () Bool)

(assert (=> b!106769 m!119537))

(declare-fun m!119539 () Bool)

(assert (=> b!106774 m!119539))

(declare-fun m!119541 () Bool)

(assert (=> bm!11279 m!119541))

(assert (=> d!28815 d!29477))

(declare-fun d!29479 () Bool)

(assert (=> d!29479 (= (get!1335 (getValueByKey!154 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2889 (getValueByKey!154 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28865 d!29479))

(assert (=> d!28865 d!29429))

(declare-fun d!29481 () Bool)

(declare-fun c!18712 () Bool)

(assert (=> d!29481 (= c!18712 ((_ is Nil!1613) (toList!787 lt!53712)))))

(declare-fun e!69458 () (InoxSet tuple2!2380))

(assert (=> d!29481 (= (content!109 (toList!787 lt!53712)) e!69458)))

(declare-fun b!106776 () Bool)

(assert (=> b!106776 (= e!69458 ((as const (Array tuple2!2380 Bool)) false))))

(declare-fun b!106777 () Bool)

(assert (=> b!106777 (= e!69458 ((_ map or) (store ((as const (Array tuple2!2380 Bool)) false) (h!2209 (toList!787 lt!53712)) true) (content!109 (t!5690 (toList!787 lt!53712)))))))

(assert (= (and d!29481 c!18712) b!106776))

(assert (= (and d!29481 (not c!18712)) b!106777))

(declare-fun m!119543 () Bool)

(assert (=> b!106777 m!119543))

(declare-fun m!119545 () Bool)

(assert (=> b!106777 m!119545))

(assert (=> d!28743 d!29481))

(declare-fun d!29483 () Bool)

(declare-fun lt!54635 () Bool)

(assert (=> d!29483 (= lt!54635 (select (content!109 lt!53713) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun e!69459 () Bool)

(assert (=> d!29483 (= lt!54635 e!69459)))

(declare-fun res!53025 () Bool)

(assert (=> d!29483 (=> (not res!53025) (not e!69459))))

(assert (=> d!29483 (= res!53025 ((_ is Cons!1612) lt!53713))))

(assert (=> d!29483 (= (contains!821 lt!53713 (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))) lt!54635)))

(declare-fun b!106778 () Bool)

(declare-fun e!69460 () Bool)

(assert (=> b!106778 (= e!69459 e!69460)))

(declare-fun res!53026 () Bool)

(assert (=> b!106778 (=> res!53026 e!69460)))

(assert (=> b!106778 (= res!53026 (= (h!2209 lt!53713) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun b!106779 () Bool)

(assert (=> b!106779 (= e!69460 (contains!821 (t!5690 lt!53713) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(assert (= (and d!29483 res!53025) b!106778))

(assert (= (and b!106778 (not res!53026)) b!106779))

(declare-fun m!119547 () Bool)

(assert (=> d!29483 m!119547))

(declare-fun m!119549 () Bool)

(assert (=> d!29483 m!119549))

(declare-fun m!119551 () Bool)

(assert (=> b!106779 m!119551))

(assert (=> b!105895 d!29483))

(declare-fun d!29485 () Bool)

(declare-fun res!53027 () Bool)

(declare-fun e!69461 () Bool)

(assert (=> d!29485 (=> res!53027 e!69461)))

(assert (=> d!29485 (= res!53027 (and ((_ is Cons!1612) (toList!787 lt!53875)) (= (_1!1201 (h!2209 (toList!787 lt!53875))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29485 (= (containsKey!158 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000) e!69461)))

(declare-fun b!106780 () Bool)

(declare-fun e!69462 () Bool)

(assert (=> b!106780 (= e!69461 e!69462)))

(declare-fun res!53028 () Bool)

(assert (=> b!106780 (=> (not res!53028) (not e!69462))))

(assert (=> b!106780 (= res!53028 (and (or (not ((_ is Cons!1612) (toList!787 lt!53875))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53875))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1612) (toList!787 lt!53875)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53875))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106781 () Bool)

(assert (=> b!106781 (= e!69462 (containsKey!158 (t!5690 (toList!787 lt!53875)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29485 (not res!53027)) b!106780))

(assert (= (and b!106780 res!53028) b!106781))

(declare-fun m!119553 () Bool)

(assert (=> b!106781 m!119553))

(assert (=> d!28897 d!29485))

(declare-fun d!29487 () Bool)

(declare-fun e!69463 () Bool)

(assert (=> d!29487 e!69463))

(declare-fun res!53030 () Bool)

(assert (=> d!29487 (=> (not res!53030) (not e!69463))))

(declare-fun lt!54639 () ListLongMap!1543)

(assert (=> d!29487 (= res!53030 (contains!820 lt!54639 (_1!1201 (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))))

(declare-fun lt!54636 () List!1616)

(assert (=> d!29487 (= lt!54639 (ListLongMap!1544 lt!54636))))

(declare-fun lt!54637 () Unit!3218)

(declare-fun lt!54638 () Unit!3218)

(assert (=> d!29487 (= lt!54637 lt!54638)))

(assert (=> d!29487 (= (getValueByKey!154 lt!54636 (_1!1201 (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))) (Some!159 (_2!1201 (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))))

(assert (=> d!29487 (= lt!54638 (lemmaContainsTupThenGetReturnValue!73 lt!54636 (_1!1201 (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) (_2!1201 (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))))

(assert (=> d!29487 (= lt!54636 (insertStrictlySorted!76 (toList!787 (ite c!18376 call!11161 (ite c!18379 call!11164 call!11165))) (_1!1201 (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) (_2!1201 (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))))

(assert (=> d!29487 (= (+!135 (ite c!18376 call!11161 (ite c!18379 call!11164 call!11165)) (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) lt!54639)))

(declare-fun b!106782 () Bool)

(declare-fun res!53029 () Bool)

(assert (=> b!106782 (=> (not res!53029) (not e!69463))))

(assert (=> b!106782 (= res!53029 (= (getValueByKey!154 (toList!787 lt!54639) (_1!1201 (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))) (Some!159 (_2!1201 (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))))

(declare-fun b!106783 () Bool)

(assert (=> b!106783 (= e!69463 (contains!821 (toList!787 lt!54639) (ite (or c!18376 c!18379) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(assert (= (and d!29487 res!53030) b!106782))

(assert (= (and b!106782 res!53029) b!106783))

(declare-fun m!119555 () Bool)

(assert (=> d!29487 m!119555))

(declare-fun m!119557 () Bool)

(assert (=> d!29487 m!119557))

(declare-fun m!119559 () Bool)

(assert (=> d!29487 m!119559))

(declare-fun m!119561 () Bool)

(assert (=> d!29487 m!119561))

(declare-fun m!119563 () Bool)

(assert (=> b!106782 m!119563))

(declare-fun m!119565 () Bool)

(assert (=> b!106783 m!119565))

(assert (=> bm!11160 d!29487))

(assert (=> b!105911 d!29001))

(assert (=> b!105911 d!28861))

(declare-fun d!29489 () Bool)

(declare-fun lt!54640 () Bool)

(assert (=> d!29489 (= lt!54640 (select (content!109 lt!54247) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun e!69464 () Bool)

(assert (=> d!29489 (= lt!54640 e!69464)))

(declare-fun res!53031 () Bool)

(assert (=> d!29489 (=> (not res!53031) (not e!69464))))

(assert (=> d!29489 (= res!53031 ((_ is Cons!1612) lt!54247))))

(assert (=> d!29489 (= (contains!821 lt!54247 (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))) lt!54640)))

(declare-fun b!106784 () Bool)

(declare-fun e!69465 () Bool)

(assert (=> b!106784 (= e!69464 e!69465)))

(declare-fun res!53032 () Bool)

(assert (=> b!106784 (=> res!53032 e!69465)))

(assert (=> b!106784 (= res!53032 (= (h!2209 lt!54247) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun b!106785 () Bool)

(assert (=> b!106785 (= e!69465 (contains!821 (t!5690 lt!54247) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(assert (= (and d!29489 res!53031) b!106784))

(assert (= (and b!106784 (not res!53032)) b!106785))

(declare-fun m!119567 () Bool)

(assert (=> d!29489 m!119567))

(declare-fun m!119569 () Bool)

(assert (=> d!29489 m!119569))

(declare-fun m!119571 () Bool)

(assert (=> b!106785 m!119571))

(assert (=> b!105950 d!29489))

(declare-fun b!106787 () Bool)

(declare-fun res!53035 () Bool)

(declare-fun e!69466 () Bool)

(assert (=> b!106787 (=> (not res!53035) (not e!69466))))

(assert (=> b!106787 (= res!53035 (bvsge (size!2312 (v!2883 (underlying!355 thiss!992))) (_size!498 (v!2883 (underlying!355 thiss!992)))))))

(declare-fun b!106788 () Bool)

(declare-fun res!53036 () Bool)

(assert (=> b!106788 (=> (not res!53036) (not e!69466))))

(assert (=> b!106788 (= res!53036 (= (size!2312 (v!2883 (underlying!355 thiss!992))) (bvadd (_size!498 (v!2883 (underlying!355 thiss!992))) (bvsdiv (bvadd (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!106786 () Bool)

(declare-fun res!53033 () Bool)

(assert (=> b!106786 (=> (not res!53033) (not e!69466))))

(assert (=> b!106786 (= res!53033 (and (= (size!2307 (_values!2564 (v!2883 (underlying!355 thiss!992)))) (bvadd (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000001)) (= (size!2306 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (size!2307 (_values!2564 (v!2883 (underlying!355 thiss!992))))) (bvsge (_size!498 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!498 (v!2883 (underlying!355 thiss!992))) (bvadd (mask!6726 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!106789 () Bool)

(assert (=> b!106789 (= e!69466 (and (bvsge (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2386 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!498 (v!2883 (underlying!355 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!29491 () Bool)

(declare-fun res!53034 () Bool)

(assert (=> d!29491 (=> (not res!53034) (not e!69466))))

(assert (=> d!29491 (= res!53034 (validMask!0 (mask!6726 (v!2883 (underlying!355 thiss!992)))))))

(assert (=> d!29491 (= (simpleValid!74 (v!2883 (underlying!355 thiss!992))) e!69466)))

(assert (= (and d!29491 res!53034) b!106786))

(assert (= (and b!106786 res!53033) b!106787))

(assert (= (and b!106787 res!53035) b!106788))

(assert (= (and b!106788 res!53036) b!106789))

(declare-fun m!119573 () Bool)

(assert (=> b!106787 m!119573))

(assert (=> b!106788 m!119573))

(assert (=> d!29491 m!116871))

(assert (=> d!28855 d!29491))

(declare-fun b!106792 () Bool)

(declare-fun e!69468 () Option!160)

(assert (=> b!106792 (= e!69468 (getValueByKey!154 (t!5690 (toList!787 lt!54225)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106791 () Bool)

(declare-fun e!69467 () Option!160)

(assert (=> b!106791 (= e!69467 e!69468)))

(declare-fun c!18714 () Bool)

(assert (=> b!106791 (= c!18714 (and ((_ is Cons!1612) (toList!787 lt!54225)) (not (= (_1!1201 (h!2209 (toList!787 lt!54225))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun d!29493 () Bool)

(declare-fun c!18713 () Bool)

(assert (=> d!29493 (= c!18713 (and ((_ is Cons!1612) (toList!787 lt!54225)) (= (_1!1201 (h!2209 (toList!787 lt!54225))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!29493 (= (getValueByKey!154 (toList!787 lt!54225) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) e!69467)))

(declare-fun b!106793 () Bool)

(assert (=> b!106793 (= e!69468 None!158)))

(declare-fun b!106790 () Bool)

(assert (=> b!106790 (= e!69467 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54225)))))))

(assert (= (and d!29493 c!18713) b!106790))

(assert (= (and d!29493 (not c!18713)) b!106791))

(assert (= (and b!106791 c!18714) b!106792))

(assert (= (and b!106791 (not c!18714)) b!106793))

(declare-fun m!119575 () Bool)

(assert (=> b!106792 m!119575))

(assert (=> b!105928 d!29493))

(declare-fun d!29495 () Bool)

(declare-fun res!53037 () Bool)

(declare-fun e!69469 () Bool)

(assert (=> d!29495 (=> res!53037 e!69469)))

(assert (=> d!29495 (= res!53037 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53596))) (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53596)))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(assert (=> d!29495 (= (containsKey!158 (t!5690 (toList!787 lt!53596)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) e!69469)))

(declare-fun b!106794 () Bool)

(declare-fun e!69470 () Bool)

(assert (=> b!106794 (= e!69469 e!69470)))

(declare-fun res!53038 () Bool)

(assert (=> b!106794 (=> (not res!53038) (not e!69470))))

(assert (=> b!106794 (= res!53038 (and (or (not ((_ is Cons!1612) (t!5690 (toList!787 lt!53596)))) (bvsle (_1!1201 (h!2209 (t!5690 (toList!787 lt!53596)))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))) ((_ is Cons!1612) (t!5690 (toList!787 lt!53596))) (bvslt (_1!1201 (h!2209 (t!5690 (toList!787 lt!53596)))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355))))))

(declare-fun b!106795 () Bool)

(assert (=> b!106795 (= e!69470 (containsKey!158 (t!5690 (t!5690 (toList!787 lt!53596))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (= (and d!29495 (not res!53037)) b!106794))

(assert (= (and b!106794 res!53038) b!106795))

(assert (=> b!106795 m!116875))

(declare-fun m!119577 () Bool)

(assert (=> b!106795 m!119577))

(assert (=> b!105609 d!29495))

(declare-fun b!106798 () Bool)

(declare-fun e!69472 () Option!160)

(assert (=> b!106798 (= e!69472 (getValueByKey!154 (t!5690 (toList!787 lt!54193)) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106797 () Bool)

(declare-fun e!69471 () Option!160)

(assert (=> b!106797 (= e!69471 e!69472)))

(declare-fun c!18716 () Bool)

(assert (=> b!106797 (= c!18716 (and ((_ is Cons!1612) (toList!787 lt!54193)) (not (= (_1!1201 (h!2209 (toList!787 lt!54193))) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun d!29497 () Bool)

(declare-fun c!18715 () Bool)

(assert (=> d!29497 (= c!18715 (and ((_ is Cons!1612) (toList!787 lt!54193)) (= (_1!1201 (h!2209 (toList!787 lt!54193))) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29497 (= (getValueByKey!154 (toList!787 lt!54193) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69471)))

(declare-fun b!106799 () Bool)

(assert (=> b!106799 (= e!69472 None!158)))

(declare-fun b!106796 () Bool)

(assert (=> b!106796 (= e!69471 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54193)))))))

(assert (= (and d!29497 c!18715) b!106796))

(assert (= (and d!29497 (not c!18715)) b!106797))

(assert (= (and b!106797 c!18716) b!106798))

(assert (= (and b!106797 (not c!18716)) b!106799))

(declare-fun m!119579 () Bool)

(assert (=> b!106798 m!119579))

(assert (=> b!105849 d!29497))

(declare-fun d!29499 () Bool)

(declare-fun res!53039 () Bool)

(declare-fun e!69473 () Bool)

(assert (=> d!29499 (=> res!53039 e!69473)))

(assert (=> d!29499 (= res!53039 (and ((_ is Cons!1612) (toList!787 lt!53698)) (= (_1!1201 (h!2209 (toList!787 lt!53698))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29499 (= (containsKey!158 (toList!787 lt!53698) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69473)))

(declare-fun b!106800 () Bool)

(declare-fun e!69474 () Bool)

(assert (=> b!106800 (= e!69473 e!69474)))

(declare-fun res!53040 () Bool)

(assert (=> b!106800 (=> (not res!53040) (not e!69474))))

(assert (=> b!106800 (= res!53040 (and (or (not ((_ is Cons!1612) (toList!787 lt!53698))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53698))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1612) (toList!787 lt!53698)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53698))) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!106801 () Bool)

(assert (=> b!106801 (= e!69474 (containsKey!158 (t!5690 (toList!787 lt!53698)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29499 (not res!53039)) b!106800))

(assert (= (and b!106800 res!53040) b!106801))

(assert (=> b!106801 m!117049))

(declare-fun m!119581 () Bool)

(assert (=> b!106801 m!119581))

(assert (=> d!28747 d!29499))

(declare-fun lt!54641 () Bool)

(declare-fun d!29501 () Bool)

(assert (=> d!29501 (= lt!54641 (select (content!109 (toList!787 lt!54031)) (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun e!69475 () Bool)

(assert (=> d!29501 (= lt!54641 e!69475)))

(declare-fun res!53041 () Bool)

(assert (=> d!29501 (=> (not res!53041) (not e!69475))))

(assert (=> d!29501 (= res!53041 ((_ is Cons!1612) (toList!787 lt!54031)))))

(assert (=> d!29501 (= (contains!821 (toList!787 lt!54031) (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54641)))

(declare-fun b!106802 () Bool)

(declare-fun e!69476 () Bool)

(assert (=> b!106802 (= e!69475 e!69476)))

(declare-fun res!53042 () Bool)

(assert (=> b!106802 (=> res!53042 e!69476)))

(assert (=> b!106802 (= res!53042 (= (h!2209 (toList!787 lt!54031)) (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!106803 () Bool)

(assert (=> b!106803 (= e!69476 (contains!821 (t!5690 (toList!787 lt!54031)) (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!29501 res!53041) b!106802))

(assert (= (and b!106802 (not res!53042)) b!106803))

(declare-fun m!119583 () Bool)

(assert (=> d!29501 m!119583))

(declare-fun m!119585 () Bool)

(assert (=> d!29501 m!119585))

(declare-fun m!119587 () Bool)

(assert (=> b!106803 m!119587))

(assert (=> b!105666 d!29501))

(declare-fun d!29503 () Bool)

(assert (=> d!29503 (= (get!1335 (getValueByKey!154 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2889 (getValueByKey!154 (toList!787 lt!53875) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28795 d!29503))

(assert (=> d!28795 d!28977))

(declare-fun d!29505 () Bool)

(declare-fun lt!54642 () Bool)

(assert (=> d!29505 (= lt!54642 (select (content!109 lt!53717) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun e!69477 () Bool)

(assert (=> d!29505 (= lt!54642 e!69477)))

(declare-fun res!53043 () Bool)

(assert (=> d!29505 (=> (not res!53043) (not e!69477))))

(assert (=> d!29505 (= res!53043 ((_ is Cons!1612) lt!53717))))

(assert (=> d!29505 (= (contains!821 lt!53717 (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))) lt!54642)))

(declare-fun b!106804 () Bool)

(declare-fun e!69478 () Bool)

(assert (=> b!106804 (= e!69477 e!69478)))

(declare-fun res!53044 () Bool)

(assert (=> b!106804 (=> res!53044 e!69478)))

(assert (=> b!106804 (= res!53044 (= (h!2209 lt!53717) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun b!106805 () Bool)

(assert (=> b!106805 (= e!69478 (contains!821 (t!5690 lt!53717) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(assert (= (and d!29505 res!53043) b!106804))

(assert (= (and b!106804 (not res!53044)) b!106805))

(declare-fun m!119589 () Bool)

(assert (=> d!29505 m!119589))

(declare-fun m!119591 () Bool)

(assert (=> d!29505 m!119591))

(declare-fun m!119593 () Bool)

(assert (=> b!106805 m!119593))

(assert (=> b!105917 d!29505))

(declare-fun d!29507 () Bool)

(declare-fun e!69479 () Bool)

(assert (=> d!29507 e!69479))

(declare-fun res!53045 () Bool)

(assert (=> d!29507 (=> res!53045 e!69479)))

(declare-fun lt!54643 () Bool)

(assert (=> d!29507 (= res!53045 (not lt!54643))))

(declare-fun lt!54646 () Bool)

(assert (=> d!29507 (= lt!54643 lt!54646)))

(declare-fun lt!54645 () Unit!3218)

(declare-fun e!69480 () Unit!3218)

(assert (=> d!29507 (= lt!54645 e!69480)))

(declare-fun c!18717 () Bool)

(assert (=> d!29507 (= c!18717 lt!54646)))

(assert (=> d!29507 (= lt!54646 (containsKey!158 (toList!787 lt!53937) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29507 (= (contains!820 lt!53937 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54643)))

(declare-fun b!106806 () Bool)

(declare-fun lt!54644 () Unit!3218)

(assert (=> b!106806 (= e!69480 lt!54644)))

(assert (=> b!106806 (= lt!54644 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53937) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106806 (isDefined!108 (getValueByKey!154 (toList!787 lt!53937) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106807 () Bool)

(declare-fun Unit!3288 () Unit!3218)

(assert (=> b!106807 (= e!69480 Unit!3288)))

(declare-fun b!106808 () Bool)

(assert (=> b!106808 (= e!69479 (isDefined!108 (getValueByKey!154 (toList!787 lt!53937) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29507 c!18717) b!106806))

(assert (= (and d!29507 (not c!18717)) b!106807))

(assert (= (and d!29507 (not res!53045)) b!106808))

(declare-fun m!119595 () Bool)

(assert (=> d!29507 m!119595))

(declare-fun m!119597 () Bool)

(assert (=> b!106806 m!119597))

(declare-fun m!119599 () Bool)

(assert (=> b!106806 m!119599))

(assert (=> b!106806 m!119599))

(declare-fun m!119601 () Bool)

(assert (=> b!106806 m!119601))

(assert (=> b!106808 m!119599))

(assert (=> b!106808 m!119599))

(assert (=> b!106808 m!119601))

(assert (=> bm!11155 d!29507))

(declare-fun d!29509 () Bool)

(declare-fun e!69481 () Bool)

(assert (=> d!29509 e!69481))

(declare-fun res!53047 () Bool)

(assert (=> d!29509 (=> (not res!53047) (not e!69481))))

(declare-fun lt!54650 () ListLongMap!1543)

(assert (=> d!29509 (= res!53047 (contains!820 lt!54650 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(declare-fun lt!54647 () List!1616)

(assert (=> d!29509 (= lt!54650 (ListLongMap!1544 lt!54647))))

(declare-fun lt!54648 () Unit!3218)

(declare-fun lt!54649 () Unit!3218)

(assert (=> d!29509 (= lt!54648 lt!54649)))

(assert (=> d!29509 (= (getValueByKey!154 lt!54647 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(assert (=> d!29509 (= lt!54649 (lemmaContainsTupThenGetReturnValue!73 lt!54647 (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(assert (=> d!29509 (= lt!54647 (insertStrictlySorted!76 (toList!787 call!11160) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))))))

(assert (=> d!29509 (= (+!135 call!11160 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))) lt!54650)))

(declare-fun b!106809 () Bool)

(declare-fun res!53046 () Bool)

(assert (=> b!106809 (=> (not res!53046) (not e!69481))))

(assert (=> b!106809 (= res!53046 (= (getValueByKey!154 (toList!787 lt!54650) (_1!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16))))) (Some!159 (_2!1201 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))))

(declare-fun b!106810 () Bool)

(assert (=> b!106810 (= e!69481 (contains!821 (toList!787 lt!54650) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18304 (ite c!18299 (minValue!2456 newMap!16) lt!53601) (minValue!2456 newMap!16)))))))

(assert (= (and d!29509 res!53047) b!106809))

(assert (= (and b!106809 res!53046) b!106810))

(declare-fun m!119603 () Bool)

(assert (=> d!29509 m!119603))

(declare-fun m!119605 () Bool)

(assert (=> d!29509 m!119605))

(declare-fun m!119607 () Bool)

(assert (=> d!29509 m!119607))

(declare-fun m!119609 () Bool)

(assert (=> d!29509 m!119609))

(declare-fun m!119611 () Bool)

(assert (=> b!106809 m!119611))

(declare-fun m!119613 () Bool)

(assert (=> b!106810 m!119613))

(assert (=> b!105639 d!29509))

(declare-fun d!29511 () Bool)

(declare-fun res!53048 () Bool)

(declare-fun e!69482 () Bool)

(assert (=> d!29511 (=> res!53048 e!69482)))

(assert (=> d!29511 (= res!53048 (or ((_ is Nil!1613) lt!54071) ((_ is Nil!1613) (t!5690 lt!54071))))))

(assert (=> d!29511 (= (isStrictlySorted!304 lt!54071) e!69482)))

(declare-fun b!106811 () Bool)

(declare-fun e!69483 () Bool)

(assert (=> b!106811 (= e!69482 e!69483)))

(declare-fun res!53049 () Bool)

(assert (=> b!106811 (=> (not res!53049) (not e!69483))))

(assert (=> b!106811 (= res!53049 (bvslt (_1!1201 (h!2209 lt!54071)) (_1!1201 (h!2209 (t!5690 lt!54071)))))))

(declare-fun b!106812 () Bool)

(assert (=> b!106812 (= e!69483 (isStrictlySorted!304 (t!5690 lt!54071)))))

(assert (= (and d!29511 (not res!53048)) b!106811))

(assert (= (and b!106811 res!53049) b!106812))

(declare-fun m!119615 () Bool)

(assert (=> b!106812 m!119615))

(assert (=> d!28807 d!29511))

(declare-fun d!29513 () Bool)

(declare-fun res!53050 () Bool)

(declare-fun e!69484 () Bool)

(assert (=> d!29513 (=> res!53050 e!69484)))

(assert (=> d!29513 (= res!53050 (or ((_ is Nil!1613) (toList!787 (+!135 lt!53604 lt!53606))) ((_ is Nil!1613) (t!5690 (toList!787 (+!135 lt!53604 lt!53606))))))))

(assert (=> d!29513 (= (isStrictlySorted!304 (toList!787 (+!135 lt!53604 lt!53606))) e!69484)))

(declare-fun b!106813 () Bool)

(declare-fun e!69485 () Bool)

(assert (=> b!106813 (= e!69484 e!69485)))

(declare-fun res!53051 () Bool)

(assert (=> b!106813 (=> (not res!53051) (not e!69485))))

(assert (=> b!106813 (= res!53051 (bvslt (_1!1201 (h!2209 (toList!787 (+!135 lt!53604 lt!53606)))) (_1!1201 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53606)))))))))

(declare-fun b!106814 () Bool)

(assert (=> b!106814 (= e!69485 (isStrictlySorted!304 (t!5690 (toList!787 (+!135 lt!53604 lt!53606)))))))

(assert (= (and d!29513 (not res!53050)) b!106813))

(assert (= (and b!106813 res!53051) b!106814))

(assert (=> b!106814 m!119045))

(assert (=> d!28807 d!29513))

(declare-fun d!29515 () Bool)

(declare-fun e!69486 () Bool)

(assert (=> d!29515 e!69486))

(declare-fun res!53052 () Bool)

(assert (=> d!29515 (=> res!53052 e!69486)))

(declare-fun lt!54651 () Bool)

(assert (=> d!29515 (= res!53052 (not lt!54651))))

(declare-fun lt!54654 () Bool)

(assert (=> d!29515 (= lt!54651 lt!54654)))

(declare-fun lt!54653 () Unit!3218)

(declare-fun e!69487 () Unit!3218)

(assert (=> d!29515 (= lt!54653 e!69487)))

(declare-fun c!18718 () Bool)

(assert (=> d!29515 (= c!18718 lt!54654)))

(assert (=> d!29515 (= lt!54654 (containsKey!158 (toList!787 lt!54225) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> d!29515 (= (contains!820 lt!54225 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54651)))

(declare-fun b!106815 () Bool)

(declare-fun lt!54652 () Unit!3218)

(assert (=> b!106815 (= e!69487 lt!54652)))

(assert (=> b!106815 (= lt!54652 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54225) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (=> b!106815 (isDefined!108 (getValueByKey!154 (toList!787 lt!54225) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106816 () Bool)

(declare-fun Unit!3289 () Unit!3218)

(assert (=> b!106816 (= e!69487 Unit!3289)))

(declare-fun b!106817 () Bool)

(assert (=> b!106817 (= e!69486 (isDefined!108 (getValueByKey!154 (toList!787 lt!54225) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (= (and d!29515 c!18718) b!106815))

(assert (= (and d!29515 (not c!18718)) b!106816))

(assert (= (and d!29515 (not res!53052)) b!106817))

(declare-fun m!119617 () Bool)

(assert (=> d!29515 m!119617))

(declare-fun m!119619 () Bool)

(assert (=> b!106815 m!119619))

(assert (=> b!106815 m!117993))

(assert (=> b!106815 m!117993))

(declare-fun m!119621 () Bool)

(assert (=> b!106815 m!119621))

(assert (=> b!106817 m!117993))

(assert (=> b!106817 m!117993))

(assert (=> b!106817 m!119621))

(assert (=> d!28885 d!29515))

(declare-fun e!69489 () Option!160)

(declare-fun b!106820 () Bool)

(assert (=> b!106820 (= e!69489 (getValueByKey!154 (t!5690 lt!54222) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106819 () Bool)

(declare-fun e!69488 () Option!160)

(assert (=> b!106819 (= e!69488 e!69489)))

(declare-fun c!18720 () Bool)

(assert (=> b!106819 (= c!18720 (and ((_ is Cons!1612) lt!54222) (not (= (_1!1201 (h!2209 lt!54222)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun d!29517 () Bool)

(declare-fun c!18719 () Bool)

(assert (=> d!29517 (= c!18719 (and ((_ is Cons!1612) lt!54222) (= (_1!1201 (h!2209 lt!54222)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!29517 (= (getValueByKey!154 lt!54222 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) e!69488)))

(declare-fun b!106821 () Bool)

(assert (=> b!106821 (= e!69489 None!158)))

(declare-fun b!106818 () Bool)

(assert (=> b!106818 (= e!69488 (Some!159 (_2!1201 (h!2209 lt!54222))))))

(assert (= (and d!29517 c!18719) b!106818))

(assert (= (and d!29517 (not c!18719)) b!106819))

(assert (= (and b!106819 c!18720) b!106820))

(assert (= (and b!106819 (not c!18720)) b!106821))

(declare-fun m!119623 () Bool)

(assert (=> b!106820 m!119623))

(assert (=> d!28885 d!29517))

(declare-fun d!29519 () Bool)

(assert (=> d!29519 (= (getValueByKey!154 lt!54222 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (Some!159 (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun lt!54655 () Unit!3218)

(assert (=> d!29519 (= lt!54655 (choose!667 lt!54222 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun e!69490 () Bool)

(assert (=> d!29519 e!69490))

(declare-fun res!53053 () Bool)

(assert (=> d!29519 (=> (not res!53053) (not e!69490))))

(assert (=> d!29519 (= res!53053 (isStrictlySorted!304 lt!54222))))

(assert (=> d!29519 (= (lemmaContainsTupThenGetReturnValue!73 lt!54222 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54655)))

(declare-fun b!106822 () Bool)

(declare-fun res!53054 () Bool)

(assert (=> b!106822 (=> (not res!53054) (not e!69490))))

(assert (=> b!106822 (= res!53054 (containsKey!158 lt!54222 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106823 () Bool)

(assert (=> b!106823 (= e!69490 (contains!821 lt!54222 (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (= (and d!29519 res!53053) b!106822))

(assert (= (and b!106822 res!53054) b!106823))

(assert (=> d!29519 m!117987))

(declare-fun m!119625 () Bool)

(assert (=> d!29519 m!119625))

(declare-fun m!119627 () Bool)

(assert (=> d!29519 m!119627))

(declare-fun m!119629 () Bool)

(assert (=> b!106822 m!119629))

(declare-fun m!119631 () Bool)

(assert (=> b!106823 m!119631))

(assert (=> d!28885 d!29519))

(declare-fun b!106824 () Bool)

(declare-fun c!18723 () Bool)

(assert (=> b!106824 (= c!18723 (and ((_ is Cons!1612) (toList!787 lt!53604)) (bvsgt (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun e!69494 () List!1616)

(declare-fun e!69493 () List!1616)

(assert (=> b!106824 (= e!69494 e!69493)))

(declare-fun b!106825 () Bool)

(declare-fun e!69492 () List!1616)

(declare-fun call!11284 () List!1616)

(assert (=> b!106825 (= e!69492 call!11284)))

(declare-fun b!106826 () Bool)

(declare-fun lt!54656 () List!1616)

(declare-fun e!69495 () Bool)

(assert (=> b!106826 (= e!69495 (contains!821 lt!54656 (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!106827 () Bool)

(declare-fun res!53055 () Bool)

(assert (=> b!106827 (=> (not res!53055) (not e!69495))))

(assert (=> b!106827 (= res!53055 (containsKey!158 lt!54656 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!106828 () Bool)

(declare-fun call!11285 () List!1616)

(assert (=> b!106828 (= e!69493 call!11285)))

(declare-fun b!106829 () Bool)

(assert (=> b!106829 (= e!69493 call!11285)))

(declare-fun b!106830 () Bool)

(assert (=> b!106830 (= e!69492 e!69494)))

(declare-fun c!18724 () Bool)

(assert (=> b!106830 (= c!18724 (and ((_ is Cons!1612) (toList!787 lt!53604)) (= (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun bm!11281 () Bool)

(declare-fun call!11286 () List!1616)

(assert (=> bm!11281 (= call!11286 call!11284)))

(declare-fun b!106831 () Bool)

(assert (=> b!106831 (= e!69494 call!11286)))

(declare-fun e!69491 () List!1616)

(declare-fun b!106832 () Bool)

(assert (=> b!106832 (= e!69491 (insertStrictlySorted!76 (t!5690 (toList!787 lt!53604)) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun bm!11283 () Bool)

(assert (=> bm!11283 (= call!11285 call!11286)))

(declare-fun b!106833 () Bool)

(assert (=> b!106833 (= e!69491 (ite c!18724 (t!5690 (toList!787 lt!53604)) (ite c!18723 (Cons!1612 (h!2209 (toList!787 lt!53604)) (t!5690 (toList!787 lt!53604))) Nil!1613)))))

(declare-fun bm!11282 () Bool)

(declare-fun c!18721 () Bool)

(assert (=> bm!11282 (= call!11284 ($colon$colon!80 e!69491 (ite c!18721 (h!2209 (toList!787 lt!53604)) (tuple2!2381 (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun c!18722 () Bool)

(assert (=> bm!11282 (= c!18722 c!18721)))

(declare-fun d!29521 () Bool)

(assert (=> d!29521 e!69495))

(declare-fun res!53056 () Bool)

(assert (=> d!29521 (=> (not res!53056) (not e!69495))))

(assert (=> d!29521 (= res!53056 (isStrictlySorted!304 lt!54656))))

(assert (=> d!29521 (= lt!54656 e!69492)))

(assert (=> d!29521 (= c!18721 (and ((_ is Cons!1612) (toList!787 lt!53604)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53604))) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!29521 (isStrictlySorted!304 (toList!787 lt!53604))))

(assert (=> d!29521 (= (insertStrictlySorted!76 (toList!787 lt!53604) (_1!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (_2!1201 (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54656)))

(assert (= (and d!29521 c!18721) b!106825))

(assert (= (and d!29521 (not c!18721)) b!106830))

(assert (= (and b!106830 c!18724) b!106831))

(assert (= (and b!106830 (not c!18724)) b!106824))

(assert (= (and b!106824 c!18723) b!106828))

(assert (= (and b!106824 (not c!18723)) b!106829))

(assert (= (or b!106828 b!106829) bm!11283))

(assert (= (or b!106831 bm!11283) bm!11281))

(assert (= (or b!106825 bm!11281) bm!11282))

(assert (= (and bm!11282 c!18722) b!106832))

(assert (= (and bm!11282 (not c!18722)) b!106833))

(assert (= (and d!29521 res!53056) b!106827))

(assert (= (and b!106827 res!53055) b!106826))

(declare-fun m!119633 () Bool)

(assert (=> b!106826 m!119633))

(declare-fun m!119635 () Bool)

(assert (=> d!29521 m!119635))

(assert (=> d!29521 m!117943))

(declare-fun m!119637 () Bool)

(assert (=> b!106827 m!119637))

(declare-fun m!119639 () Bool)

(assert (=> b!106832 m!119639))

(declare-fun m!119641 () Bool)

(assert (=> bm!11282 m!119641))

(assert (=> d!28885 d!29521))

(declare-fun d!29523 () Bool)

(declare-fun res!53057 () Bool)

(declare-fun e!69496 () Bool)

(assert (=> d!29523 (=> res!53057 e!69496)))

(assert (=> d!29523 (= res!53057 (and ((_ is Cons!1612) (toList!787 lt!53712)) (= (_1!1201 (h!2209 (toList!787 lt!53712))) (_1!1201 lt!53599))))))

(assert (=> d!29523 (= (containsKey!158 (toList!787 lt!53712) (_1!1201 lt!53599)) e!69496)))

(declare-fun b!106834 () Bool)

(declare-fun e!69497 () Bool)

(assert (=> b!106834 (= e!69496 e!69497)))

(declare-fun res!53058 () Bool)

(assert (=> b!106834 (=> (not res!53058) (not e!69497))))

(assert (=> b!106834 (= res!53058 (and (or (not ((_ is Cons!1612) (toList!787 lt!53712))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53712))) (_1!1201 lt!53599))) ((_ is Cons!1612) (toList!787 lt!53712)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53712))) (_1!1201 lt!53599))))))

(declare-fun b!106835 () Bool)

(assert (=> b!106835 (= e!69497 (containsKey!158 (t!5690 (toList!787 lt!53712)) (_1!1201 lt!53599)))))

(assert (= (and d!29523 (not res!53057)) b!106834))

(assert (= (and b!106834 res!53058) b!106835))

(declare-fun m!119643 () Bool)

(assert (=> b!106835 m!119643))

(assert (=> d!28801 d!29523))

(declare-fun d!29525 () Bool)

(assert (=> d!29525 (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54657 () Unit!3218)

(assert (=> d!29525 (= lt!54657 (choose!671 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69498 () Bool)

(assert (=> d!29525 e!69498))

(declare-fun res!53059 () Bool)

(assert (=> d!29525 (=> (not res!53059) (not e!69498))))

(assert (=> d!29525 (= res!53059 (isStrictlySorted!304 (toList!787 lt!53875)))))

(assert (=> d!29525 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000) lt!54657)))

(declare-fun b!106836 () Bool)

(assert (=> b!106836 (= e!69498 (containsKey!158 (toList!787 lt!53875) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29525 res!53059) b!106836))

(assert (=> d!29525 m!117905))

(assert (=> d!29525 m!117905))

(assert (=> d!29525 m!118037))

(declare-fun m!119645 () Bool)

(assert (=> d!29525 m!119645))

(assert (=> d!29525 m!118861))

(assert (=> b!106836 m!118033))

(assert (=> b!105936 d!29525))

(assert (=> b!105936 d!29349))

(assert (=> b!105936 d!29351))

(declare-fun d!29527 () Bool)

(declare-fun lt!54658 () Bool)

(assert (=> d!29527 (= lt!54658 (select (content!109 (t!5690 (toList!787 lt!53727))) lt!53606))))

(declare-fun e!69499 () Bool)

(assert (=> d!29527 (= lt!54658 e!69499)))

(declare-fun res!53060 () Bool)

(assert (=> d!29527 (=> (not res!53060) (not e!69499))))

(assert (=> d!29527 (= res!53060 ((_ is Cons!1612) (t!5690 (toList!787 lt!53727))))))

(assert (=> d!29527 (= (contains!821 (t!5690 (toList!787 lt!53727)) lt!53606) lt!54658)))

(declare-fun b!106837 () Bool)

(declare-fun e!69500 () Bool)

(assert (=> b!106837 (= e!69499 e!69500)))

(declare-fun res!53061 () Bool)

(assert (=> b!106837 (=> res!53061 e!69500)))

(assert (=> b!106837 (= res!53061 (= (h!2209 (t!5690 (toList!787 lt!53727))) lt!53606))))

(declare-fun b!106838 () Bool)

(assert (=> b!106838 (= e!69500 (contains!821 (t!5690 (t!5690 (toList!787 lt!53727))) lt!53606))))

(assert (= (and d!29527 res!53060) b!106837))

(assert (= (and b!106837 (not res!53061)) b!106838))

(assert (=> d!29527 m!119081))

(declare-fun m!119647 () Bool)

(assert (=> d!29527 m!119647))

(declare-fun m!119649 () Bool)

(assert (=> b!106838 m!119649))

(assert (=> b!105641 d!29527))

(declare-fun b!106857 () Bool)

(declare-fun lt!54663 () SeekEntryResult!262)

(assert (=> b!106857 (and (bvsge (index!3198 lt!54663) #b00000000000000000000000000000000) (bvslt (index!3198 lt!54663) (size!2306 (_keys!4286 newMap!16))))))

(declare-fun res!53070 () Bool)

(assert (=> b!106857 (= res!53070 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3198 lt!54663)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun e!69515 () Bool)

(assert (=> b!106857 (=> res!53070 e!69515)))

(declare-fun e!69513 () Bool)

(assert (=> b!106857 (= e!69513 e!69515)))

(declare-fun b!106858 () Bool)

(declare-fun e!69511 () SeekEntryResult!262)

(assert (=> b!106858 (= e!69511 (Intermediate!262 true (toIndex!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (mask!6726 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!106859 () Bool)

(declare-fun e!69512 () Bool)

(assert (=> b!106859 (= e!69512 e!69513)))

(declare-fun res!53069 () Bool)

(assert (=> b!106859 (= res!53069 (and ((_ is Intermediate!262) lt!54663) (not (undefined!1074 lt!54663)) (bvslt (x!13647 lt!54663) #b01111111111111111111111111111110) (bvsge (x!13647 lt!54663) #b00000000000000000000000000000000) (bvsge (x!13647 lt!54663) #b00000000000000000000000000000000)))))

(assert (=> b!106859 (=> (not res!53069) (not e!69513))))

(declare-fun d!29529 () Bool)

(assert (=> d!29529 e!69512))

(declare-fun c!18732 () Bool)

(assert (=> d!29529 (= c!18732 (and ((_ is Intermediate!262) lt!54663) (undefined!1074 lt!54663)))))

(assert (=> d!29529 (= lt!54663 e!69511)))

(declare-fun c!18733 () Bool)

(assert (=> d!29529 (= c!18733 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!54664 () (_ BitVec 64))

(assert (=> d!29529 (= lt!54664 (select (arr!2050 (_keys!4286 newMap!16)) (toIndex!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (mask!6726 newMap!16))))))

(assert (=> d!29529 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29529 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (mask!6726 newMap!16)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)) lt!54663)))

(declare-fun b!106860 () Bool)

(assert (=> b!106860 (and (bvsge (index!3198 lt!54663) #b00000000000000000000000000000000) (bvslt (index!3198 lt!54663) (size!2306 (_keys!4286 newMap!16))))))

(assert (=> b!106860 (= e!69515 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3198 lt!54663)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106861 () Bool)

(assert (=> b!106861 (and (bvsge (index!3198 lt!54663) #b00000000000000000000000000000000) (bvslt (index!3198 lt!54663) (size!2306 (_keys!4286 newMap!16))))))

(declare-fun res!53068 () Bool)

(assert (=> b!106861 (= res!53068 (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3198 lt!54663)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106861 (=> res!53068 e!69515)))

(declare-fun e!69514 () SeekEntryResult!262)

(declare-fun b!106862 () Bool)

(assert (=> b!106862 (= e!69514 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (mask!6726 newMap!16)) #b00000000000000000000000000000000 (mask!6726 newMap!16)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun b!106863 () Bool)

(assert (=> b!106863 (= e!69511 e!69514)))

(declare-fun c!18731 () Bool)

(assert (=> b!106863 (= c!18731 (or (= lt!54664 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (= (bvadd lt!54664 lt!54664) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106864 () Bool)

(assert (=> b!106864 (= e!69512 (bvsge (x!13647 lt!54663) #b01111111111111111111111111111110))))

(declare-fun b!106865 () Bool)

(assert (=> b!106865 (= e!69514 (Intermediate!262 false (toIndex!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (mask!6726 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!29529 c!18733) b!106858))

(assert (= (and d!29529 (not c!18733)) b!106863))

(assert (= (and b!106863 c!18731) b!106865))

(assert (= (and b!106863 (not c!18731)) b!106862))

(assert (= (and d!29529 c!18732) b!106864))

(assert (= (and d!29529 (not c!18732)) b!106859))

(assert (= (and b!106859 res!53069) b!106857))

(assert (= (and b!106857 (not res!53070)) b!106861))

(assert (= (and b!106861 (not res!53068)) b!106860))

(assert (=> d!29529 m!117273))

(declare-fun m!119651 () Bool)

(assert (=> d!29529 m!119651))

(assert (=> d!29529 m!117277))

(declare-fun m!119653 () Bool)

(assert (=> b!106861 m!119653))

(assert (=> b!106862 m!117273))

(declare-fun m!119655 () Bool)

(assert (=> b!106862 m!119655))

(assert (=> b!106862 m!119655))

(assert (=> b!106862 m!116875))

(declare-fun m!119657 () Bool)

(assert (=> b!106862 m!119657))

(assert (=> b!106860 m!119653))

(assert (=> b!106857 m!119653))

(assert (=> d!28711 d!29529))

(declare-fun d!29531 () Bool)

(declare-fun lt!54670 () (_ BitVec 32))

(declare-fun lt!54669 () (_ BitVec 32))

(assert (=> d!29531 (= lt!54670 (bvmul (bvxor lt!54669 (bvlshr lt!54669 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!29531 (= lt!54669 ((_ extract 31 0) (bvand (bvxor (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvlshr (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!29531 (and (bvsge (mask!6726 newMap!16) #b00000000000000000000000000000000) (let ((res!53071 (let ((h!2211 ((_ extract 31 0) (bvand (bvxor (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvlshr (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13750 (bvmul (bvxor h!2211 (bvlshr h!2211 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13750 (bvlshr x!13750 #b00000000000000000000000000001101)) (mask!6726 newMap!16)))))) (and (bvslt res!53071 (bvadd (mask!6726 newMap!16) #b00000000000000000000000000000001)) (bvsge res!53071 #b00000000000000000000000000000000))))))

(assert (=> d!29531 (= (toIndex!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (mask!6726 newMap!16)) (bvand (bvxor lt!54670 (bvlshr lt!54670 #b00000000000000000000000000001101)) (mask!6726 newMap!16)))))

(assert (=> d!28711 d!29531))

(assert (=> d!28711 d!29133))

(declare-fun d!29533 () Bool)

(assert (=> d!29533 (= (apply!98 lt!53976 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1335 (getValueByKey!154 (toList!787 lt!53976) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4388 () Bool)

(assert (= bs!4388 d!29533))

(assert (=> bs!4388 m!117265))

(assert (=> bs!4388 m!119511))

(assert (=> bs!4388 m!119511))

(declare-fun m!119659 () Bool)

(assert (=> bs!4388 m!119659))

(assert (=> b!105626 d!29533))

(declare-fun d!29535 () Bool)

(declare-fun c!18734 () Bool)

(assert (=> d!29535 (= c!18734 ((_ is ValueCellFull!995) (select (arr!2051 (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!69516 () V!3217)

(assert (=> d!29535 (= (get!1331 (select (arr!2051 (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69516)))

(declare-fun b!106866 () Bool)

(assert (=> b!106866 (= e!69516 (get!1333 (select (arr!2051 (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106867 () Bool)

(assert (=> b!106867 (= e!69516 (get!1334 (select (arr!2051 (ite (or c!18304 c!18307) (_values!2564 newMap!16) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (index!3197 lt!53814) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29535 c!18734) b!106866))

(assert (= (and d!29535 (not c!18734)) b!106867))

(assert (=> b!106866 m!117455))

(assert (=> b!106866 m!117291))

(declare-fun m!119661 () Bool)

(assert (=> b!106866 m!119661))

(assert (=> b!106867 m!117455))

(assert (=> b!106867 m!117291))

(declare-fun m!119663 () Bool)

(assert (=> b!106867 m!119663))

(assert (=> b!105626 d!29535))

(assert (=> bm!11186 d!28863))

(declare-fun d!29537 () Bool)

(declare-fun lt!54671 () Bool)

(assert (=> d!29537 (= lt!54671 (select (content!109 (toList!787 lt!54023)) (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun e!69517 () Bool)

(assert (=> d!29537 (= lt!54671 e!69517)))

(declare-fun res!53072 () Bool)

(assert (=> d!29537 (=> (not res!53072) (not e!69517))))

(assert (=> d!29537 (= res!53072 ((_ is Cons!1612) (toList!787 lt!54023)))))

(assert (=> d!29537 (= (contains!821 (toList!787 lt!54023) (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54671)))

(declare-fun b!106868 () Bool)

(declare-fun e!69518 () Bool)

(assert (=> b!106868 (= e!69517 e!69518)))

(declare-fun res!53073 () Bool)

(assert (=> b!106868 (=> res!53073 e!69518)))

(assert (=> b!106868 (= res!53073 (= (h!2209 (toList!787 lt!54023)) (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!106869 () Bool)

(assert (=> b!106869 (= e!69518 (contains!821 (t!5690 (toList!787 lt!54023)) (tuple2!2381 lt!53890 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!29537 res!53072) b!106868))

(assert (= (and b!106868 (not res!53073)) b!106869))

(declare-fun m!119665 () Bool)

(assert (=> d!29537 m!119665))

(declare-fun m!119667 () Bool)

(assert (=> d!29537 m!119667))

(declare-fun m!119669 () Bool)

(assert (=> b!106869 m!119669))

(assert (=> b!105662 d!29537))

(assert (=> b!105502 d!28979))

(declare-fun d!29539 () Bool)

(declare-fun e!69519 () Bool)

(assert (=> d!29539 e!69519))

(declare-fun res!53074 () Bool)

(assert (=> d!29539 (=> res!53074 e!69519)))

(declare-fun lt!54672 () Bool)

(assert (=> d!29539 (= res!53074 (not lt!54672))))

(declare-fun lt!54675 () Bool)

(assert (=> d!29539 (= lt!54672 lt!54675)))

(declare-fun lt!54674 () Unit!3218)

(declare-fun e!69520 () Unit!3218)

(assert (=> d!29539 (= lt!54674 e!69520)))

(declare-fun c!18735 () Bool)

(assert (=> d!29539 (= c!18735 lt!54675)))

(assert (=> d!29539 (= lt!54675 (containsKey!158 (toList!787 lt!54018) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> d!29539 (= (contains!820 lt!54018 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54672)))

(declare-fun b!106870 () Bool)

(declare-fun lt!54673 () Unit!3218)

(assert (=> b!106870 (= e!69520 lt!54673)))

(assert (=> b!106870 (= lt!54673 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54018) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(assert (=> b!106870 (isDefined!108 (getValueByKey!154 (toList!787 lt!54018) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106871 () Bool)

(declare-fun Unit!3290 () Unit!3218)

(assert (=> b!106871 (= e!69520 Unit!3290)))

(declare-fun b!106872 () Bool)

(assert (=> b!106872 (= e!69519 (isDefined!108 (getValueByKey!154 (toList!787 lt!54018) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!29539 c!18735) b!106870))

(assert (= (and d!29539 (not c!18735)) b!106871))

(assert (= (and d!29539 (not res!53074)) b!106872))

(declare-fun m!119671 () Bool)

(assert (=> d!29539 m!119671))

(declare-fun m!119673 () Bool)

(assert (=> b!106870 m!119673))

(assert (=> b!106870 m!117565))

(assert (=> b!106870 m!117565))

(declare-fun m!119675 () Bool)

(assert (=> b!106870 m!119675))

(assert (=> b!106872 m!117565))

(assert (=> b!106872 m!117565))

(assert (=> b!106872 m!119675))

(assert (=> d!28761 d!29539))

(declare-fun e!69522 () Option!160)

(declare-fun b!106875 () Bool)

(assert (=> b!106875 (= e!69522 (getValueByKey!154 (t!5690 lt!54015) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106874 () Bool)

(declare-fun e!69521 () Option!160)

(assert (=> b!106874 (= e!69521 e!69522)))

(declare-fun c!18737 () Bool)

(assert (=> b!106874 (= c!18737 (and ((_ is Cons!1612) lt!54015) (not (= (_1!1201 (h!2209 lt!54015)) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18736 () Bool)

(declare-fun d!29541 () Bool)

(assert (=> d!29541 (= c!18736 (and ((_ is Cons!1612) lt!54015) (= (_1!1201 (h!2209 lt!54015)) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29541 (= (getValueByKey!154 lt!54015 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69521)))

(declare-fun b!106876 () Bool)

(assert (=> b!106876 (= e!69522 None!158)))

(declare-fun b!106873 () Bool)

(assert (=> b!106873 (= e!69521 (Some!159 (_2!1201 (h!2209 lt!54015))))))

(assert (= (and d!29541 c!18736) b!106873))

(assert (= (and d!29541 (not c!18736)) b!106874))

(assert (= (and b!106874 c!18737) b!106875))

(assert (= (and b!106874 (not c!18737)) b!106876))

(declare-fun m!119677 () Bool)

(assert (=> b!106875 m!119677))

(assert (=> d!28761 d!29541))

(declare-fun d!29543 () Bool)

(assert (=> d!29543 (= (getValueByKey!154 lt!54015 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) (Some!159 (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun lt!54676 () Unit!3218)

(assert (=> d!29543 (= lt!54676 (choose!667 lt!54015 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun e!69523 () Bool)

(assert (=> d!29543 e!69523))

(declare-fun res!53075 () Bool)

(assert (=> d!29543 (=> (not res!53075) (not e!69523))))

(assert (=> d!29543 (= res!53075 (isStrictlySorted!304 lt!54015))))

(assert (=> d!29543 (= (lemmaContainsTupThenGetReturnValue!73 lt!54015 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54676)))

(declare-fun b!106877 () Bool)

(declare-fun res!53076 () Bool)

(assert (=> b!106877 (=> (not res!53076) (not e!69523))))

(assert (=> b!106877 (= res!53076 (containsKey!158 lt!54015 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106878 () Bool)

(assert (=> b!106878 (= e!69523 (contains!821 lt!54015 (tuple2!2381 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (= (and d!29543 res!53075) b!106877))

(assert (= (and b!106877 res!53076) b!106878))

(assert (=> d!29543 m!117559))

(declare-fun m!119679 () Bool)

(assert (=> d!29543 m!119679))

(declare-fun m!119681 () Bool)

(assert (=> d!29543 m!119681))

(declare-fun m!119683 () Bool)

(assert (=> b!106877 m!119683))

(declare-fun m!119685 () Bool)

(assert (=> b!106878 m!119685))

(assert (=> d!28761 d!29543))

(declare-fun b!106879 () Bool)

(declare-fun c!18740 () Bool)

(assert (=> b!106879 (= c!18740 (and ((_ is Cons!1612) (toList!787 lt!53892)) (bvsgt (_1!1201 (h!2209 (toList!787 lt!53892))) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun e!69527 () List!1616)

(declare-fun e!69526 () List!1616)

(assert (=> b!106879 (= e!69527 e!69526)))

(declare-fun b!106880 () Bool)

(declare-fun e!69525 () List!1616)

(declare-fun call!11287 () List!1616)

(assert (=> b!106880 (= e!69525 call!11287)))

(declare-fun b!106881 () Bool)

(declare-fun e!69528 () Bool)

(declare-fun lt!54677 () List!1616)

(assert (=> b!106881 (= e!69528 (contains!821 lt!54677 (tuple2!2381 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun b!106882 () Bool)

(declare-fun res!53077 () Bool)

(assert (=> b!106882 (=> (not res!53077) (not e!69528))))

(assert (=> b!106882 (= res!53077 (containsKey!158 lt!54677 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!106883 () Bool)

(declare-fun call!11288 () List!1616)

(assert (=> b!106883 (= e!69526 call!11288)))

(declare-fun b!106884 () Bool)

(assert (=> b!106884 (= e!69526 call!11288)))

(declare-fun b!106885 () Bool)

(assert (=> b!106885 (= e!69525 e!69527)))

(declare-fun c!18741 () Bool)

(assert (=> b!106885 (= c!18741 (and ((_ is Cons!1612) (toList!787 lt!53892)) (= (_1!1201 (h!2209 (toList!787 lt!53892))) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(declare-fun bm!11284 () Bool)

(declare-fun call!11289 () List!1616)

(assert (=> bm!11284 (= call!11289 call!11287)))

(declare-fun b!106886 () Bool)

(assert (=> b!106886 (= e!69527 call!11289)))

(declare-fun e!69524 () List!1616)

(declare-fun b!106887 () Bool)

(assert (=> b!106887 (= e!69524 (insertStrictlySorted!76 (t!5690 (toList!787 lt!53892)) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun bm!11286 () Bool)

(assert (=> bm!11286 (= call!11288 call!11289)))

(declare-fun b!106888 () Bool)

(assert (=> b!106888 (= e!69524 (ite c!18741 (t!5690 (toList!787 lt!53892)) (ite c!18740 (Cons!1612 (h!2209 (toList!787 lt!53892)) (t!5690 (toList!787 lt!53892))) Nil!1613)))))

(declare-fun c!18738 () Bool)

(declare-fun bm!11285 () Bool)

(assert (=> bm!11285 (= call!11287 ($colon$colon!80 e!69524 (ite c!18738 (h!2209 (toList!787 lt!53892)) (tuple2!2381 (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18739 () Bool)

(assert (=> bm!11285 (= c!18739 c!18738)))

(declare-fun d!29545 () Bool)

(assert (=> d!29545 e!69528))

(declare-fun res!53078 () Bool)

(assert (=> d!29545 (=> (not res!53078) (not e!69528))))

(assert (=> d!29545 (= res!53078 (isStrictlySorted!304 lt!54677))))

(assert (=> d!29545 (= lt!54677 e!69525)))

(assert (=> d!29545 (= c!18738 (and ((_ is Cons!1612) (toList!787 lt!53892)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53892))) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29545 (isStrictlySorted!304 (toList!787 lt!53892))))

(assert (=> d!29545 (= (insertStrictlySorted!76 (toList!787 lt!53892) (_1!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) (_2!1201 (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!54677)))

(assert (= (and d!29545 c!18738) b!106880))

(assert (= (and d!29545 (not c!18738)) b!106885))

(assert (= (and b!106885 c!18741) b!106886))

(assert (= (and b!106885 (not c!18741)) b!106879))

(assert (= (and b!106879 c!18740) b!106883))

(assert (= (and b!106879 (not c!18740)) b!106884))

(assert (= (or b!106883 b!106884) bm!11286))

(assert (= (or b!106886 bm!11286) bm!11284))

(assert (= (or b!106880 bm!11284) bm!11285))

(assert (= (and bm!11285 c!18739) b!106887))

(assert (= (and bm!11285 (not c!18739)) b!106888))

(assert (= (and d!29545 res!53078) b!106882))

(assert (= (and b!106882 res!53077) b!106881))

(declare-fun m!119687 () Bool)

(assert (=> b!106881 m!119687))

(declare-fun m!119689 () Bool)

(assert (=> d!29545 m!119689))

(declare-fun m!119691 () Bool)

(assert (=> d!29545 m!119691))

(declare-fun m!119693 () Bool)

(assert (=> b!106882 m!119693))

(declare-fun m!119695 () Bool)

(assert (=> b!106887 m!119695))

(declare-fun m!119697 () Bool)

(assert (=> bm!11285 m!119697))

(assert (=> d!28761 d!29545))

(assert (=> b!105889 d!29063))

(assert (=> b!105889 d!28853))

(declare-fun lt!54678 () Bool)

(declare-fun d!29547 () Bool)

(assert (=> d!29547 (= lt!54678 (select (content!109 (toList!787 lt!54237)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(declare-fun e!69529 () Bool)

(assert (=> d!29547 (= lt!54678 e!69529)))

(declare-fun res!53079 () Bool)

(assert (=> d!29547 (=> (not res!53079) (not e!69529))))

(assert (=> d!29547 (= res!53079 ((_ is Cons!1612) (toList!787 lt!54237)))))

(assert (=> d!29547 (= (contains!821 (toList!787 lt!54237) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) lt!54678)))

(declare-fun b!106889 () Bool)

(declare-fun e!69530 () Bool)

(assert (=> b!106889 (= e!69529 e!69530)))

(declare-fun res!53080 () Bool)

(assert (=> b!106889 (=> res!53080 e!69530)))

(assert (=> b!106889 (= res!53080 (= (h!2209 (toList!787 lt!54237)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(declare-fun b!106890 () Bool)

(assert (=> b!106890 (= e!69530 (contains!821 (t!5690 (toList!787 lt!54237)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))

(assert (= (and d!29547 res!53079) b!106889))

(assert (= (and b!106889 (not res!53080)) b!106890))

(declare-fun m!119699 () Bool)

(assert (=> d!29547 m!119699))

(declare-fun m!119701 () Bool)

(assert (=> d!29547 m!119701))

(declare-fun m!119703 () Bool)

(assert (=> b!106890 m!119703))

(assert (=> b!105935 d!29547))

(declare-fun d!29549 () Bool)

(declare-fun lt!54679 () Bool)

(assert (=> d!29549 (= lt!54679 (select (content!109 (t!5690 (toList!787 lt!53712))) lt!53599))))

(declare-fun e!69531 () Bool)

(assert (=> d!29549 (= lt!54679 e!69531)))

(declare-fun res!53081 () Bool)

(assert (=> d!29549 (=> (not res!53081) (not e!69531))))

(assert (=> d!29549 (= res!53081 ((_ is Cons!1612) (t!5690 (toList!787 lt!53712))))))

(assert (=> d!29549 (= (contains!821 (t!5690 (toList!787 lt!53712)) lt!53599) lt!54679)))

(declare-fun b!106891 () Bool)

(declare-fun e!69532 () Bool)

(assert (=> b!106891 (= e!69531 e!69532)))

(declare-fun res!53082 () Bool)

(assert (=> b!106891 (=> res!53082 e!69532)))

(assert (=> b!106891 (= res!53082 (= (h!2209 (t!5690 (toList!787 lt!53712))) lt!53599))))

(declare-fun b!106892 () Bool)

(assert (=> b!106892 (= e!69532 (contains!821 (t!5690 (t!5690 (toList!787 lt!53712))) lt!53599))))

(assert (= (and d!29549 res!53081) b!106891))

(assert (= (and b!106891 (not res!53082)) b!106892))

(assert (=> d!29549 m!119545))

(declare-fun m!119705 () Bool)

(assert (=> d!29549 m!119705))

(declare-fun m!119707 () Bool)

(assert (=> b!106892 m!119707))

(assert (=> b!105643 d!29549))

(assert (=> b!105702 d!29209))

(declare-fun d!29551 () Bool)

(declare-fun e!69533 () Bool)

(assert (=> d!29551 e!69533))

(declare-fun res!53083 () Bool)

(assert (=> d!29551 (=> res!53083 e!69533)))

(declare-fun lt!54680 () Bool)

(assert (=> d!29551 (= res!53083 (not lt!54680))))

(declare-fun lt!54683 () Bool)

(assert (=> d!29551 (= lt!54680 lt!54683)))

(declare-fun lt!54682 () Unit!3218)

(declare-fun e!69534 () Unit!3218)

(assert (=> d!29551 (= lt!54682 e!69534)))

(declare-fun c!18742 () Bool)

(assert (=> d!29551 (= c!18742 lt!54683)))

(assert (=> d!29551 (= lt!54683 (containsKey!158 (toList!787 lt!53976) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29551 (= (contains!820 lt!53976 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54680)))

(declare-fun b!106893 () Bool)

(declare-fun lt!54681 () Unit!3218)

(assert (=> b!106893 (= e!69534 lt!54681)))

(assert (=> b!106893 (= lt!54681 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53976) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106893 (isDefined!108 (getValueByKey!154 (toList!787 lt!53976) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106894 () Bool)

(declare-fun Unit!3291 () Unit!3218)

(assert (=> b!106894 (= e!69534 Unit!3291)))

(declare-fun b!106895 () Bool)

(assert (=> b!106895 (= e!69533 (isDefined!108 (getValueByKey!154 (toList!787 lt!53976) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29551 c!18742) b!106893))

(assert (= (and d!29551 (not c!18742)) b!106894))

(assert (= (and d!29551 (not res!53083)) b!106895))

(declare-fun m!119709 () Bool)

(assert (=> d!29551 m!119709))

(declare-fun m!119711 () Bool)

(assert (=> b!106893 m!119711))

(assert (=> b!106893 m!118597))

(assert (=> b!106893 m!118597))

(declare-fun m!119713 () Bool)

(assert (=> b!106893 m!119713))

(assert (=> b!106895 m!118597))

(assert (=> b!106895 m!118597))

(assert (=> b!106895 m!119713))

(assert (=> bm!11162 d!29551))

(declare-fun d!29553 () Bool)

(assert (=> d!29553 (= (apply!98 lt!53937 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1335 (getValueByKey!154 (toList!787 lt!53937) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4389 () Bool)

(assert (= bs!4389 d!29553))

(assert (=> bs!4389 m!119599))

(assert (=> bs!4389 m!119599))

(declare-fun m!119715 () Bool)

(assert (=> bs!4389 m!119715))

(assert (=> b!105585 d!29553))

(declare-fun d!29555 () Bool)

(declare-fun e!69535 () Bool)

(assert (=> d!29555 e!69535))

(declare-fun res!53084 () Bool)

(assert (=> d!29555 (=> res!53084 e!69535)))

(declare-fun lt!54684 () Bool)

(assert (=> d!29555 (= res!53084 (not lt!54684))))

(declare-fun lt!54687 () Bool)

(assert (=> d!29555 (= lt!54684 lt!54687)))

(declare-fun lt!54686 () Unit!3218)

(declare-fun e!69536 () Unit!3218)

(assert (=> d!29555 (= lt!54686 e!69536)))

(declare-fun c!18743 () Bool)

(assert (=> d!29555 (= c!18743 lt!54687)))

(assert (=> d!29555 (= lt!54687 (containsKey!158 (toList!787 lt!54251) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> d!29555 (= (contains!820 lt!54251 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) lt!54684)))

(declare-fun b!106896 () Bool)

(declare-fun lt!54685 () Unit!3218)

(assert (=> b!106896 (= e!69536 lt!54685)))

(assert (=> b!106896 (= lt!54685 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!54251) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(assert (=> b!106896 (isDefined!108 (getValueByKey!154 (toList!787 lt!54251) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!106897 () Bool)

(declare-fun Unit!3292 () Unit!3218)

(assert (=> b!106897 (= e!69536 Unit!3292)))

(declare-fun b!106898 () Bool)

(assert (=> b!106898 (= e!69535 (isDefined!108 (getValueByKey!154 (toList!787 lt!54251) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(assert (= (and d!29555 c!18743) b!106896))

(assert (= (and d!29555 (not c!18743)) b!106897))

(assert (= (and d!29555 (not res!53084)) b!106898))

(declare-fun m!119717 () Bool)

(assert (=> d!29555 m!119717))

(declare-fun m!119719 () Bool)

(assert (=> b!106896 m!119719))

(assert (=> b!106896 m!118075))

(assert (=> b!106896 m!118075))

(declare-fun m!119721 () Bool)

(assert (=> b!106896 m!119721))

(assert (=> b!106898 m!118075))

(assert (=> b!106898 m!118075))

(assert (=> b!106898 m!119721))

(assert (=> d!28907 d!29555))

(declare-fun b!106901 () Bool)

(declare-fun e!69538 () Option!160)

(assert (=> b!106901 (= e!69538 (getValueByKey!154 (t!5690 lt!54248) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!106900 () Bool)

(declare-fun e!69537 () Option!160)

(assert (=> b!106900 (= e!69537 e!69538)))

(declare-fun c!18745 () Bool)

(assert (=> b!106900 (= c!18745 (and ((_ is Cons!1612) lt!54248) (not (= (_1!1201 (h!2209 lt!54248)) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))))

(declare-fun d!29557 () Bool)

(declare-fun c!18744 () Bool)

(assert (=> d!29557 (= c!18744 (and ((_ is Cons!1612) lt!54248) (= (_1!1201 (h!2209 lt!54248)) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(assert (=> d!29557 (= (getValueByKey!154 lt!54248 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) e!69537)))

(declare-fun b!106902 () Bool)

(assert (=> b!106902 (= e!69538 None!158)))

(declare-fun b!106899 () Bool)

(assert (=> b!106899 (= e!69537 (Some!159 (_2!1201 (h!2209 lt!54248))))))

(assert (= (and d!29557 c!18744) b!106899))

(assert (= (and d!29557 (not c!18744)) b!106900))

(assert (= (and b!106900 c!18745) b!106901))

(assert (= (and b!106900 (not c!18745)) b!106902))

(declare-fun m!119723 () Bool)

(assert (=> b!106901 m!119723))

(assert (=> d!28907 d!29557))

(declare-fun d!29559 () Bool)

(assert (=> d!29559 (= (getValueByKey!154 lt!54248 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) (Some!159 (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun lt!54688 () Unit!3218)

(assert (=> d!29559 (= lt!54688 (choose!667 lt!54248 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun e!69539 () Bool)

(assert (=> d!29559 e!69539))

(declare-fun res!53085 () Bool)

(assert (=> d!29559 (=> (not res!53085) (not e!69539))))

(assert (=> d!29559 (= res!53085 (isStrictlySorted!304 lt!54248))))

(assert (=> d!29559 (= (lemmaContainsTupThenGetReturnValue!73 lt!54248 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) lt!54688)))

(declare-fun b!106903 () Bool)

(declare-fun res!53086 () Bool)

(assert (=> b!106903 (=> (not res!53086) (not e!69539))))

(assert (=> b!106903 (= res!53086 (containsKey!158 lt!54248 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!106904 () Bool)

(assert (=> b!106904 (= e!69539 (contains!821 lt!54248 (tuple2!2381 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(assert (= (and d!29559 res!53085) b!106903))

(assert (= (and b!106903 res!53086) b!106904))

(assert (=> d!29559 m!118069))

(declare-fun m!119725 () Bool)

(assert (=> d!29559 m!119725))

(declare-fun m!119727 () Bool)

(assert (=> d!29559 m!119727))

(declare-fun m!119729 () Bool)

(assert (=> b!106903 m!119729))

(declare-fun m!119731 () Bool)

(assert (=> b!106904 m!119731))

(assert (=> d!28907 d!29559))

(declare-fun c!18748 () Bool)

(declare-fun b!106905 () Bool)

(assert (=> b!106905 (= c!18748 (and ((_ is Cons!1612) (toList!787 e!68608)) (bvsgt (_1!1201 (h!2209 (toList!787 e!68608))) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun e!69543 () List!1616)

(declare-fun e!69542 () List!1616)

(assert (=> b!106905 (= e!69543 e!69542)))

(declare-fun b!106906 () Bool)

(declare-fun e!69541 () List!1616)

(declare-fun call!11290 () List!1616)

(assert (=> b!106906 (= e!69541 call!11290)))

(declare-fun b!106907 () Bool)

(declare-fun e!69544 () Bool)

(declare-fun lt!54689 () List!1616)

(assert (=> b!106907 (= e!69544 (contains!821 lt!54689 (tuple2!2381 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun b!106908 () Bool)

(declare-fun res!53087 () Bool)

(assert (=> b!106908 (=> (not res!53087) (not e!69544))))

(assert (=> b!106908 (= res!53087 (containsKey!158 lt!54689 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun b!106909 () Bool)

(declare-fun call!11291 () List!1616)

(assert (=> b!106909 (= e!69542 call!11291)))

(declare-fun b!106910 () Bool)

(assert (=> b!106910 (= e!69542 call!11291)))

(declare-fun b!106911 () Bool)

(assert (=> b!106911 (= e!69541 e!69543)))

(declare-fun c!18749 () Bool)

(assert (=> b!106911 (= c!18749 (and ((_ is Cons!1612) (toList!787 e!68608)) (= (_1!1201 (h!2209 (toList!787 e!68608))) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(declare-fun bm!11287 () Bool)

(declare-fun call!11292 () List!1616)

(assert (=> bm!11287 (= call!11292 call!11290)))

(declare-fun b!106912 () Bool)

(assert (=> b!106912 (= e!69543 call!11292)))

(declare-fun b!106913 () Bool)

(declare-fun e!69540 () List!1616)

(assert (=> b!106913 (= e!69540 (insertStrictlySorted!76 (t!5690 (toList!787 e!68608)) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))

(declare-fun bm!11289 () Bool)

(assert (=> bm!11289 (= call!11291 call!11292)))

(declare-fun b!106914 () Bool)

(assert (=> b!106914 (= e!69540 (ite c!18749 (t!5690 (toList!787 e!68608)) (ite c!18748 (Cons!1612 (h!2209 (toList!787 e!68608)) (t!5690 (toList!787 e!68608))) Nil!1613)))))

(declare-fun bm!11288 () Bool)

(declare-fun c!18746 () Bool)

(assert (=> bm!11288 (= call!11290 ($colon$colon!80 e!69540 (ite c!18746 (h!2209 (toList!787 e!68608)) (tuple2!2381 (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))))))))

(declare-fun c!18747 () Bool)

(assert (=> bm!11288 (= c!18747 c!18746)))

(declare-fun d!29561 () Bool)

(assert (=> d!29561 e!69544))

(declare-fun res!53088 () Bool)

(assert (=> d!29561 (=> (not res!53088) (not e!69544))))

(assert (=> d!29561 (= res!53088 (isStrictlySorted!304 lt!54689))))

(assert (=> d!29561 (= lt!54689 e!69541)))

(assert (=> d!29561 (= c!18746 (and ((_ is Cons!1612) (toList!787 e!68608)) (bvslt (_1!1201 (h!2209 (toList!787 e!68608))) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))))

(assert (=> d!29561 (isStrictlySorted!304 (toList!787 e!68608))))

(assert (=> d!29561 (= (insertStrictlySorted!76 (toList!787 e!68608) (_1!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) (_2!1201 (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)))) lt!54689)))

(assert (= (and d!29561 c!18746) b!106906))

(assert (= (and d!29561 (not c!18746)) b!106911))

(assert (= (and b!106911 c!18749) b!106912))

(assert (= (and b!106911 (not c!18749)) b!106905))

(assert (= (and b!106905 c!18748) b!106909))

(assert (= (and b!106905 (not c!18748)) b!106910))

(assert (= (or b!106909 b!106910) bm!11289))

(assert (= (or b!106912 bm!11289) bm!11287))

(assert (= (or b!106906 bm!11287) bm!11288))

(assert (= (and bm!11288 c!18747) b!106913))

(assert (= (and bm!11288 (not c!18747)) b!106914))

(assert (= (and d!29561 res!53088) b!106908))

(assert (= (and b!106908 res!53087) b!106907))

(declare-fun m!119733 () Bool)

(assert (=> b!106907 m!119733))

(declare-fun m!119735 () Bool)

(assert (=> d!29561 m!119735))

(declare-fun m!119737 () Bool)

(assert (=> d!29561 m!119737))

(declare-fun m!119739 () Bool)

(assert (=> b!106908 m!119739))

(declare-fun m!119741 () Bool)

(assert (=> b!106913 m!119741))

(declare-fun m!119743 () Bool)

(assert (=> bm!11288 m!119743))

(assert (=> d!28907 d!29561))

(declare-fun d!29563 () Bool)

(declare-fun res!53089 () Bool)

(declare-fun e!69545 () Bool)

(assert (=> d!29563 (=> res!53089 e!69545)))

(assert (=> d!29563 (= res!53089 (and ((_ is Cons!1612) (toList!787 lt!53875)) (= (_1!1201 (h!2209 (toList!787 lt!53875))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29563 (= (containsKey!158 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000) e!69545)))

(declare-fun b!106915 () Bool)

(declare-fun e!69546 () Bool)

(assert (=> b!106915 (= e!69545 e!69546)))

(declare-fun res!53090 () Bool)

(assert (=> b!106915 (=> (not res!53090) (not e!69546))))

(assert (=> b!106915 (= res!53090 (and (or (not ((_ is Cons!1612) (toList!787 lt!53875))) (bvsle (_1!1201 (h!2209 (toList!787 lt!53875))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1612) (toList!787 lt!53875)) (bvslt (_1!1201 (h!2209 (toList!787 lt!53875))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106916 () Bool)

(assert (=> b!106916 (= e!69546 (containsKey!158 (t!5690 (toList!787 lt!53875)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29563 (not res!53089)) b!106915))

(assert (= (and b!106915 res!53090) b!106916))

(declare-fun m!119745 () Bool)

(assert (=> b!106916 m!119745))

(assert (=> d!28859 d!29563))

(declare-fun b!106917 () Bool)

(declare-fun e!69548 () (_ BitVec 32))

(declare-fun call!11293 () (_ BitVec 32))

(assert (=> b!106917 (= e!69548 (bvadd #b00000000000000000000000000000001 call!11293))))

(declare-fun b!106918 () Bool)

(declare-fun e!69547 () (_ BitVec 32))

(assert (=> b!106918 (= e!69547 #b00000000000000000000000000000000)))

(declare-fun d!29565 () Bool)

(declare-fun lt!54690 () (_ BitVec 32))

(assert (=> d!29565 (and (bvsge lt!54690 #b00000000000000000000000000000000) (bvsle lt!54690 (bvsub (size!2306 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!29565 (= lt!54690 e!69547)))

(declare-fun c!18750 () Bool)

(assert (=> d!29565 (= c!18750 (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!29565 (and (bvsle #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2306 (_keys!4286 newMap!16)) (size!2306 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))))

(assert (=> d!29565 (= (arrayCountValidKeys!0 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) lt!54690)))

(declare-fun b!106919 () Bool)

(assert (=> b!106919 (= e!69547 e!69548)))

(declare-fun c!18751 () Bool)

(assert (=> b!106919 (= c!18751 (validKeyInArray!0 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!106920 () Bool)

(assert (=> b!106920 (= e!69548 call!11293)))

(declare-fun bm!11290 () Bool)

(assert (=> bm!11290 (= call!11293 (arrayCountValidKeys!0 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))))))

(assert (= (and d!29565 c!18750) b!106918))

(assert (= (and d!29565 (not c!18750)) b!106919))

(assert (= (and b!106919 c!18751) b!106917))

(assert (= (and b!106919 (not c!18751)) b!106920))

(assert (= (or b!106917 b!106920) bm!11290))

(declare-fun m!119747 () Bool)

(assert (=> b!106919 m!119747))

(assert (=> b!106919 m!119747))

(declare-fun m!119749 () Bool)

(assert (=> b!106919 m!119749))

(declare-fun m!119751 () Bool)

(assert (=> bm!11290 m!119751))

(assert (=> d!28825 d!29565))

(declare-fun d!29567 () Bool)

(declare-fun e!69551 () Bool)

(assert (=> d!29567 e!69551))

(declare-fun res!53093 () Bool)

(assert (=> d!29567 (=> (not res!53093) (not e!69551))))

(assert (=> d!29567 (= res!53093 (and (bvsge (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000000) (bvslt (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (size!2306 (_keys!4286 newMap!16)))))))

(declare-fun lt!54693 () Unit!3218)

(declare-fun choose!41 (array!4325 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1615) Unit!3218)

(assert (=> d!29567 (= lt!54693 (choose!41 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) lt!54169 lt!54158))))

(assert (=> d!29567 (bvslt (size!2306 (_keys!4286 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!29567 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4286 newMap!16) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) lt!54169 lt!54158) lt!54693)))

(declare-fun b!106923 () Bool)

(assert (=> b!106923 (= e!69551 (arrayNoDuplicates!0 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) lt!54169 lt!54158))))

(assert (= (and d!29567 res!53093) b!106923))

(assert (=> d!29567 m!116875))

(declare-fun m!119753 () Bool)

(assert (=> d!29567 m!119753))

(assert (=> b!106923 m!117823))

(assert (=> b!106923 m!117829))

(assert (=> d!28825 d!29567))

(declare-fun d!29569 () Bool)

(declare-fun e!69552 () Bool)

(assert (=> d!29569 e!69552))

(declare-fun res!53094 () Bool)

(assert (=> d!29569 (=> res!53094 e!69552)))

(declare-fun lt!54694 () Bool)

(assert (=> d!29569 (= res!53094 (not lt!54694))))

(declare-fun lt!54697 () Bool)

(assert (=> d!29569 (= lt!54694 lt!54697)))

(declare-fun lt!54696 () Unit!3218)

(declare-fun e!69553 () Unit!3218)

(assert (=> d!29569 (= lt!54696 e!69553)))

(declare-fun c!18752 () Bool)

(assert (=> d!29569 (= c!18752 lt!54697)))

(assert (=> d!29569 (= lt!54697 (containsKey!158 (toList!787 (getCurrentListMap!464 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)))))))

(assert (=> d!29569 (= (contains!820 (getCurrentListMap!464 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)))) lt!54694)))

(declare-fun b!106924 () Bool)

(declare-fun lt!54695 () Unit!3218)

(assert (=> b!106924 (= e!69553 lt!54695)))

(assert (=> b!106924 (= lt!54695 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (getCurrentListMap!464 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)))))))

(assert (=> b!106924 (isDefined!108 (getValueByKey!154 (toList!787 (getCurrentListMap!464 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)))))))

(declare-fun b!106925 () Bool)

(declare-fun Unit!3293 () Unit!3218)

(assert (=> b!106925 (= e!69553 Unit!3293)))

(declare-fun b!106926 () Bool)

(assert (=> b!106926 (= e!69552 (isDefined!108 (getValueByKey!154 (toList!787 (getCurrentListMap!464 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (select (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))))))))

(assert (= (and d!29569 c!18752) b!106924))

(assert (= (and d!29569 (not c!18752)) b!106925))

(assert (= (and d!29569 (not res!53094)) b!106926))

(assert (=> d!29569 m!117817))

(declare-fun m!119755 () Bool)

(assert (=> d!29569 m!119755))

(assert (=> b!106924 m!117817))

(declare-fun m!119757 () Bool)

(assert (=> b!106924 m!119757))

(assert (=> b!106924 m!117817))

(declare-fun m!119759 () Bool)

(assert (=> b!106924 m!119759))

(assert (=> b!106924 m!119759))

(declare-fun m!119761 () Bool)

(assert (=> b!106924 m!119761))

(assert (=> b!106926 m!117817))

(assert (=> b!106926 m!119759))

(assert (=> b!106926 m!119759))

(assert (=> b!106926 m!119761))

(assert (=> d!28825 d!29569))

(declare-fun d!29571 () Bool)

(declare-fun e!69554 () Bool)

(assert (=> d!29571 e!69554))

(declare-fun res!53095 () Bool)

(assert (=> d!29571 (=> (not res!53095) (not e!69554))))

(assert (=> d!29571 (= res!53095 (and (bvsge (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000000) (bvslt (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (size!2306 lt!54176))))))

(declare-fun lt!54698 () Unit!3218)

(assert (=> d!29571 (= lt!54698 (choose!662 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (defaultEntry!2581 newMap!16)))))

(assert (=> d!29571 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29571 (= (lemmaValidKeyInArrayIsInListMap!106 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (defaultEntry!2581 newMap!16)) lt!54698)))

(declare-fun b!106927 () Bool)

(assert (=> b!106927 (= e!69554 (contains!820 (getCurrentListMap!464 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2050 lt!54176) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)))))))

(assert (= (and d!29571 res!53095) b!106927))

(declare-fun m!119763 () Bool)

(assert (=> d!29571 m!119763))

(assert (=> d!29571 m!117277))

(assert (=> b!106927 m!117815))

(declare-fun m!119765 () Bool)

(assert (=> b!106927 m!119765))

(assert (=> b!106927 m!117815))

(assert (=> b!106927 m!119765))

(declare-fun m!119767 () Bool)

(assert (=> b!106927 m!119767))

(assert (=> d!28825 d!29571))

(assert (=> d!28825 d!29357))

(declare-fun d!29573 () Bool)

(declare-fun res!53096 () Bool)

(declare-fun e!69555 () Bool)

(assert (=> d!29573 (=> res!53096 e!69555)))

(assert (=> d!29573 (= res!53096 (= (select (arr!2050 lt!54166) #b00000000000000000000000000000000) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!29573 (= (arrayContainsKey!0 lt!54166 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000) e!69555)))

(declare-fun b!106928 () Bool)

(declare-fun e!69556 () Bool)

(assert (=> b!106928 (= e!69555 e!69556)))

(declare-fun res!53097 () Bool)

(assert (=> b!106928 (=> (not res!53097) (not e!69556))))

(assert (=> b!106928 (= res!53097 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 lt!54166)))))

(declare-fun b!106929 () Bool)

(assert (=> b!106929 (= e!69556 (arrayContainsKey!0 lt!54166 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!29573 (not res!53096)) b!106928))

(assert (= (and b!106928 res!53097) b!106929))

(declare-fun m!119769 () Bool)

(assert (=> d!29573 m!119769))

(assert (=> b!106929 m!116875))

(declare-fun m!119771 () Bool)

(assert (=> b!106929 m!119771))

(assert (=> d!28825 d!29573))

(assert (=> d!28825 d!28863))

(assert (=> d!28825 d!28709))

(declare-fun d!29575 () Bool)

(assert (=> d!29575 (= (arrayCountValidKeys!0 lt!54174 (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (bvadd (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!54701 () Unit!3218)

(declare-fun choose!2 (array!4325 (_ BitVec 32)) Unit!3218)

(assert (=> d!29575 (= lt!54701 (choose!2 lt!54174 (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))))))

(declare-fun e!69559 () Bool)

(assert (=> d!29575 e!69559))

(declare-fun res!53102 () Bool)

(assert (=> d!29575 (=> (not res!53102) (not e!69559))))

(assert (=> d!29575 (= res!53102 (and (bvsge (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000000) (bvslt (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (size!2306 lt!54174))))))

(assert (=> d!29575 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!54174 (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))) lt!54701)))

(declare-fun b!106934 () Bool)

(declare-fun res!53103 () Bool)

(assert (=> b!106934 (=> (not res!53103) (not e!69559))))

(assert (=> b!106934 (= res!53103 (validKeyInArray!0 (select (arr!2050 lt!54174) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)))))))

(declare-fun b!106935 () Bool)

(assert (=> b!106935 (= e!69559 (bvslt (size!2306 lt!54174) #b01111111111111111111111111111111))))

(assert (= (and d!29575 res!53102) b!106934))

(assert (= (and b!106934 res!53103) b!106935))

(assert (=> d!29575 m!117803))

(declare-fun m!119773 () Bool)

(assert (=> d!29575 m!119773))

(declare-fun m!119775 () Bool)

(assert (=> b!106934 m!119775))

(assert (=> b!106934 m!119775))

(declare-fun m!119777 () Bool)

(assert (=> b!106934 m!119777))

(assert (=> d!28825 d!29575))

(declare-fun d!29577 () Bool)

(declare-fun e!69562 () Bool)

(assert (=> d!29577 e!69562))

(declare-fun res!53106 () Bool)

(assert (=> d!29577 (=> (not res!53106) (not e!69562))))

(assert (=> d!29577 (= res!53106 (and (bvsge (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000000) (bvslt (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (size!2306 (_keys!4286 newMap!16))) (bvslt (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (size!2307 (_values!2564 newMap!16)))))))

(declare-fun lt!54704 () Unit!3218)

(declare-fun choose!673 (array!4325 array!4327 (_ BitVec 32) (_ BitVec 32) V!3217 V!3217 (_ BitVec 32) (_ BitVec 64) V!3217 Int) Unit!3218)

(assert (=> d!29577 (= lt!54704 (choose!673 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 (defaultEntry!2581 newMap!16)))))

(assert (=> d!29577 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29577 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!30 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601 (defaultEntry!2581 newMap!16)) lt!54704)))

(declare-fun b!106938 () Bool)

(assert (=> b!106938 (= e!69562 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601)) (getCurrentListMap!464 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))))))

(assert (= (and d!29577 res!53106) b!106938))

(assert (=> d!29577 m!116875))

(declare-fun m!119779 () Bool)

(assert (=> d!29577 m!119779))

(assert (=> d!29577 m!117277))

(assert (=> b!106938 m!117143))

(assert (=> b!106938 m!117429))

(assert (=> b!106938 m!117823))

(assert (=> b!106938 m!117799))

(assert (=> b!106938 m!117143))

(assert (=> b!106938 m!117809))

(assert (=> d!28825 d!29577))

(declare-fun b!106939 () Bool)

(declare-fun e!69564 () (_ BitVec 32))

(declare-fun call!11294 () (_ BitVec 32))

(assert (=> b!106939 (= e!69564 (bvadd #b00000000000000000000000000000001 call!11294))))

(declare-fun b!106940 () Bool)

(declare-fun e!69563 () (_ BitVec 32))

(assert (=> b!106940 (= e!69563 #b00000000000000000000000000000000)))

(declare-fun d!29579 () Bool)

(declare-fun lt!54705 () (_ BitVec 32))

(assert (=> d!29579 (and (bvsge lt!54705 #b00000000000000000000000000000000) (bvsle lt!54705 (bvsub (size!2306 lt!54174) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)))))))

(assert (=> d!29579 (= lt!54705 e!69563)))

(declare-fun c!18753 () Bool)

(assert (=> d!29579 (= c!18753 (bvsge (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (bvadd (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000001)))))

(assert (=> d!29579 (and (bvsle (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (bvadd (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000001)) (bvsge (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000001) (size!2306 lt!54174)))))

(assert (=> d!29579 (= (arrayCountValidKeys!0 lt!54174 (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (bvadd (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000001)) lt!54705)))

(declare-fun b!106941 () Bool)

(assert (=> b!106941 (= e!69563 e!69564)))

(declare-fun c!18754 () Bool)

(assert (=> b!106941 (= c!18754 (validKeyInArray!0 (select (arr!2050 lt!54174) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)))))))

(declare-fun b!106942 () Bool)

(assert (=> b!106942 (= e!69564 call!11294)))

(declare-fun bm!11291 () Bool)

(assert (=> bm!11291 (= call!11294 (arrayCountValidKeys!0 lt!54174 (bvadd (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000001) (bvadd (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000001)))))

(assert (= (and d!29579 c!18753) b!106940))

(assert (= (and d!29579 (not c!18753)) b!106941))

(assert (= (and b!106941 c!18754) b!106939))

(assert (= (and b!106941 (not c!18754)) b!106942))

(assert (= (or b!106939 b!106942) bm!11291))

(assert (=> b!106941 m!119775))

(assert (=> b!106941 m!119775))

(assert (=> b!106941 m!119777))

(declare-fun m!119781 () Bool)

(assert (=> bm!11291 m!119781))

(assert (=> d!28825 d!29579))

(declare-fun b!106943 () Bool)

(declare-fun e!69567 () Unit!3218)

(declare-fun Unit!3294 () Unit!3218)

(assert (=> b!106943 (= e!69567 Unit!3294)))

(declare-fun b!106944 () Bool)

(declare-fun e!69566 () ListLongMap!1543)

(declare-fun call!11299 () ListLongMap!1543)

(assert (=> b!106944 (= e!69566 call!11299)))

(declare-fun b!106945 () Bool)

(declare-fun e!69565 () Bool)

(declare-fun lt!54707 () ListLongMap!1543)

(assert (=> b!106945 (= e!69565 (= (apply!98 lt!54707 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!106946 () Bool)

(declare-fun c!18760 () Bool)

(assert (=> b!106946 (= c!18760 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69569 () ListLongMap!1543)

(assert (=> b!106946 (= e!69569 e!69566)))

(declare-fun b!106947 () Bool)

(declare-fun e!69571 () Bool)

(declare-fun e!69574 () Bool)

(assert (=> b!106947 (= e!69571 e!69574)))

(declare-fun res!53115 () Bool)

(declare-fun call!11295 () Bool)

(assert (=> b!106947 (= res!53115 call!11295)))

(assert (=> b!106947 (=> (not res!53115) (not e!69574))))

(declare-fun bm!11292 () Bool)

(declare-fun call!11301 () ListLongMap!1543)

(declare-fun call!11300 () ListLongMap!1543)

(assert (=> bm!11292 (= call!11301 call!11300)))

(declare-fun b!106948 () Bool)

(declare-fun e!69570 () Bool)

(assert (=> b!106948 (= e!69570 (validKeyInArray!0 (select (arr!2050 lt!54176) #b00000000000000000000000000000000)))))

(declare-fun b!106949 () Bool)

(declare-fun res!53114 () Bool)

(declare-fun e!69573 () Bool)

(assert (=> b!106949 (=> (not res!53114) (not e!69573))))

(declare-fun e!69576 () Bool)

(assert (=> b!106949 (= res!53114 e!69576)))

(declare-fun res!53109 () Bool)

(assert (=> b!106949 (=> res!53109 e!69576)))

(declare-fun e!69575 () Bool)

(assert (=> b!106949 (= res!53109 (not e!69575))))

(declare-fun res!53108 () Bool)

(assert (=> b!106949 (=> (not res!53108) (not e!69575))))

(assert (=> b!106949 (= res!53108 (bvslt #b00000000000000000000000000000000 (size!2306 lt!54176)))))

(declare-fun bm!11293 () Bool)

(declare-fun call!11296 () ListLongMap!1543)

(assert (=> bm!11293 (= call!11299 call!11296)))

(declare-fun bm!11294 () Bool)

(declare-fun call!11297 () ListLongMap!1543)

(assert (=> bm!11294 (= call!11300 call!11297)))

(declare-fun e!69577 () Bool)

(declare-fun b!106950 () Bool)

(assert (=> b!106950 (= e!69577 (= (apply!98 lt!54707 (select (arr!2050 lt!54176) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 lt!54154) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106950 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 lt!54154)))))

(assert (=> b!106950 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 lt!54176)))))

(declare-fun b!106951 () Bool)

(declare-fun res!53111 () Bool)

(assert (=> b!106951 (=> (not res!53111) (not e!69573))))

(assert (=> b!106951 (= res!53111 e!69571)))

(declare-fun c!18759 () Bool)

(assert (=> b!106951 (= c!18759 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106952 () Bool)

(assert (=> b!106952 (= e!69569 call!11299)))

(declare-fun b!106953 () Bool)

(declare-fun e!69568 () Bool)

(declare-fun call!11298 () Bool)

(assert (=> b!106953 (= e!69568 (not call!11298))))

(declare-fun bm!11295 () Bool)

(assert (=> bm!11295 (= call!11297 (getCurrentListMapNoExtraKeys!100 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!106954 () Bool)

(assert (=> b!106954 (= e!69574 (= (apply!98 lt!54707 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!106955 () Bool)

(assert (=> b!106955 (= e!69566 call!11301)))

(declare-fun b!106956 () Bool)

(assert (=> b!106956 (= e!69568 e!69565)))

(declare-fun res!53113 () Bool)

(assert (=> b!106956 (= res!53113 call!11298)))

(assert (=> b!106956 (=> (not res!53113) (not e!69565))))

(declare-fun c!18758 () Bool)

(declare-fun bm!11296 () Bool)

(declare-fun c!18755 () Bool)

(assert (=> bm!11296 (= call!11296 (+!135 (ite c!18755 call!11297 (ite c!18758 call!11300 call!11301)) (ite (or c!18755 c!18758) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun bm!11297 () Bool)

(assert (=> bm!11297 (= call!11298 (contains!820 lt!54707 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106957 () Bool)

(assert (=> b!106957 (= e!69575 (validKeyInArray!0 (select (arr!2050 lt!54176) #b00000000000000000000000000000000)))))

(declare-fun b!106958 () Bool)

(declare-fun e!69572 () ListLongMap!1543)

(assert (=> b!106958 (= e!69572 e!69569)))

(assert (=> b!106958 (= c!18758 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106959 () Bool)

(assert (=> b!106959 (= e!69571 (not call!11295))))

(declare-fun b!106960 () Bool)

(assert (=> b!106960 (= e!69573 e!69568)))

(declare-fun c!18756 () Bool)

(assert (=> b!106960 (= c!18756 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106961 () Bool)

(declare-fun lt!54709 () Unit!3218)

(assert (=> b!106961 (= e!69567 lt!54709)))

(declare-fun lt!54711 () ListLongMap!1543)

(assert (=> b!106961 (= lt!54711 (getCurrentListMapNoExtraKeys!100 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54722 () (_ BitVec 64))

(assert (=> b!106961 (= lt!54722 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54715 () (_ BitVec 64))

(assert (=> b!106961 (= lt!54715 (select (arr!2050 lt!54176) #b00000000000000000000000000000000))))

(declare-fun lt!54721 () Unit!3218)

(assert (=> b!106961 (= lt!54721 (addStillContains!74 lt!54711 lt!54722 (zeroValue!2456 newMap!16) lt!54715))))

(assert (=> b!106961 (contains!820 (+!135 lt!54711 (tuple2!2381 lt!54722 (zeroValue!2456 newMap!16))) lt!54715)))

(declare-fun lt!54718 () Unit!3218)

(assert (=> b!106961 (= lt!54718 lt!54721)))

(declare-fun lt!54724 () ListLongMap!1543)

(assert (=> b!106961 (= lt!54724 (getCurrentListMapNoExtraKeys!100 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54723 () (_ BitVec 64))

(assert (=> b!106961 (= lt!54723 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54708 () (_ BitVec 64))

(assert (=> b!106961 (= lt!54708 (select (arr!2050 lt!54176) #b00000000000000000000000000000000))))

(declare-fun lt!54712 () Unit!3218)

(assert (=> b!106961 (= lt!54712 (addApplyDifferent!74 lt!54724 lt!54723 (minValue!2456 newMap!16) lt!54708))))

(assert (=> b!106961 (= (apply!98 (+!135 lt!54724 (tuple2!2381 lt!54723 (minValue!2456 newMap!16))) lt!54708) (apply!98 lt!54724 lt!54708))))

(declare-fun lt!54713 () Unit!3218)

(assert (=> b!106961 (= lt!54713 lt!54712)))

(declare-fun lt!54727 () ListLongMap!1543)

(assert (=> b!106961 (= lt!54727 (getCurrentListMapNoExtraKeys!100 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54717 () (_ BitVec 64))

(assert (=> b!106961 (= lt!54717 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54726 () (_ BitVec 64))

(assert (=> b!106961 (= lt!54726 (select (arr!2050 lt!54176) #b00000000000000000000000000000000))))

(declare-fun lt!54710 () Unit!3218)

(assert (=> b!106961 (= lt!54710 (addApplyDifferent!74 lt!54727 lt!54717 (zeroValue!2456 newMap!16) lt!54726))))

(assert (=> b!106961 (= (apply!98 (+!135 lt!54727 (tuple2!2381 lt!54717 (zeroValue!2456 newMap!16))) lt!54726) (apply!98 lt!54727 lt!54726))))

(declare-fun lt!54714 () Unit!3218)

(assert (=> b!106961 (= lt!54714 lt!54710)))

(declare-fun lt!54716 () ListLongMap!1543)

(assert (=> b!106961 (= lt!54716 (getCurrentListMapNoExtraKeys!100 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54706 () (_ BitVec 64))

(assert (=> b!106961 (= lt!54706 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54720 () (_ BitVec 64))

(assert (=> b!106961 (= lt!54720 (select (arr!2050 lt!54176) #b00000000000000000000000000000000))))

(assert (=> b!106961 (= lt!54709 (addApplyDifferent!74 lt!54716 lt!54706 (minValue!2456 newMap!16) lt!54720))))

(assert (=> b!106961 (= (apply!98 (+!135 lt!54716 (tuple2!2381 lt!54706 (minValue!2456 newMap!16))) lt!54720) (apply!98 lt!54716 lt!54720))))

(declare-fun b!106962 () Bool)

(assert (=> b!106962 (= e!69576 e!69577)))

(declare-fun res!53110 () Bool)

(assert (=> b!106962 (=> (not res!53110) (not e!69577))))

(assert (=> b!106962 (= res!53110 (contains!820 lt!54707 (select (arr!2050 lt!54176) #b00000000000000000000000000000000)))))

(assert (=> b!106962 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 lt!54176)))))

(declare-fun b!106963 () Bool)

(assert (=> b!106963 (= e!69572 (+!135 call!11296 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun d!29581 () Bool)

(assert (=> d!29581 e!69573))

(declare-fun res!53112 () Bool)

(assert (=> d!29581 (=> (not res!53112) (not e!69573))))

(assert (=> d!29581 (= res!53112 (or (bvsge #b00000000000000000000000000000000 (size!2306 lt!54176)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 lt!54176)))))))

(declare-fun lt!54725 () ListLongMap!1543)

(assert (=> d!29581 (= lt!54707 lt!54725)))

(declare-fun lt!54719 () Unit!3218)

(assert (=> d!29581 (= lt!54719 e!69567)))

(declare-fun c!18757 () Bool)

(assert (=> d!29581 (= c!18757 e!69570)))

(declare-fun res!53107 () Bool)

(assert (=> d!29581 (=> (not res!53107) (not e!69570))))

(assert (=> d!29581 (= res!53107 (bvslt #b00000000000000000000000000000000 (size!2306 lt!54176)))))

(assert (=> d!29581 (= lt!54725 e!69572)))

(assert (=> d!29581 (= c!18755 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29581 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29581 (= (getCurrentListMap!464 lt!54176 lt!54154 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54707)))

(declare-fun bm!11298 () Bool)

(assert (=> bm!11298 (= call!11295 (contains!820 lt!54707 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29581 c!18755) b!106963))

(assert (= (and d!29581 (not c!18755)) b!106958))

(assert (= (and b!106958 c!18758) b!106952))

(assert (= (and b!106958 (not c!18758)) b!106946))

(assert (= (and b!106946 c!18760) b!106944))

(assert (= (and b!106946 (not c!18760)) b!106955))

(assert (= (or b!106944 b!106955) bm!11292))

(assert (= (or b!106952 bm!11292) bm!11294))

(assert (= (or b!106952 b!106944) bm!11293))

(assert (= (or b!106963 bm!11294) bm!11295))

(assert (= (or b!106963 bm!11293) bm!11296))

(assert (= (and d!29581 res!53107) b!106948))

(assert (= (and d!29581 c!18757) b!106961))

(assert (= (and d!29581 (not c!18757)) b!106943))

(assert (= (and d!29581 res!53112) b!106949))

(assert (= (and b!106949 res!53108) b!106957))

(assert (= (and b!106949 (not res!53109)) b!106962))

(assert (= (and b!106962 res!53110) b!106950))

(assert (= (and b!106949 res!53114) b!106951))

(assert (= (and b!106951 c!18759) b!106947))

(assert (= (and b!106951 (not c!18759)) b!106959))

(assert (= (and b!106947 res!53115) b!106954))

(assert (= (or b!106947 b!106959) bm!11298))

(assert (= (and b!106951 res!53111) b!106960))

(assert (= (and b!106960 c!18756) b!106956))

(assert (= (and b!106960 (not c!18756)) b!106953))

(assert (= (and b!106956 res!53113) b!106945))

(assert (= (or b!106956 b!106953) bm!11297))

(declare-fun b_lambda!4753 () Bool)

(assert (=> (not b_lambda!4753) (not b!106950)))

(assert (=> b!106950 t!5701))

(declare-fun b_and!6569 () Bool)

(assert (= b_and!6565 (and (=> t!5701 result!3459) b_and!6569)))

(assert (=> b!106950 t!5703))

(declare-fun b_and!6571 () Bool)

(assert (= b_and!6567 (and (=> t!5703 result!3461) b_and!6571)))

(declare-fun m!119783 () Bool)

(assert (=> bm!11297 m!119783))

(declare-fun m!119785 () Bool)

(assert (=> b!106963 m!119785))

(assert (=> b!106950 m!117291))

(declare-fun m!119787 () Bool)

(assert (=> b!106950 m!119787))

(declare-fun m!119789 () Bool)

(assert (=> b!106950 m!119789))

(assert (=> b!106950 m!119787))

(declare-fun m!119791 () Bool)

(assert (=> b!106950 m!119791))

(assert (=> b!106950 m!119791))

(assert (=> b!106950 m!117291))

(declare-fun m!119793 () Bool)

(assert (=> b!106950 m!119793))

(declare-fun m!119795 () Bool)

(assert (=> bm!11295 m!119795))

(declare-fun m!119797 () Bool)

(assert (=> bm!11298 m!119797))

(assert (=> b!106948 m!119787))

(assert (=> b!106948 m!119787))

(declare-fun m!119799 () Bool)

(assert (=> b!106948 m!119799))

(declare-fun m!119801 () Bool)

(assert (=> b!106954 m!119801))

(assert (=> b!106962 m!119787))

(assert (=> b!106962 m!119787))

(declare-fun m!119803 () Bool)

(assert (=> b!106962 m!119803))

(declare-fun m!119805 () Bool)

(assert (=> b!106961 m!119805))

(declare-fun m!119807 () Bool)

(assert (=> b!106961 m!119807))

(declare-fun m!119809 () Bool)

(assert (=> b!106961 m!119809))

(declare-fun m!119811 () Bool)

(assert (=> b!106961 m!119811))

(declare-fun m!119813 () Bool)

(assert (=> b!106961 m!119813))

(declare-fun m!119815 () Bool)

(assert (=> b!106961 m!119815))

(declare-fun m!119817 () Bool)

(assert (=> b!106961 m!119817))

(declare-fun m!119819 () Bool)

(assert (=> b!106961 m!119819))

(declare-fun m!119821 () Bool)

(assert (=> b!106961 m!119821))

(declare-fun m!119823 () Bool)

(assert (=> b!106961 m!119823))

(assert (=> b!106961 m!119795))

(declare-fun m!119825 () Bool)

(assert (=> b!106961 m!119825))

(declare-fun m!119827 () Bool)

(assert (=> b!106961 m!119827))

(assert (=> b!106961 m!119827))

(declare-fun m!119829 () Bool)

(assert (=> b!106961 m!119829))

(declare-fun m!119831 () Bool)

(assert (=> b!106961 m!119831))

(assert (=> b!106961 m!119813))

(assert (=> b!106961 m!119817))

(declare-fun m!119833 () Bool)

(assert (=> b!106961 m!119833))

(assert (=> b!106961 m!119787))

(assert (=> b!106961 m!119807))

(declare-fun m!119835 () Bool)

(assert (=> bm!11296 m!119835))

(declare-fun m!119837 () Bool)

(assert (=> b!106945 m!119837))

(assert (=> d!29581 m!117277))

(assert (=> b!106957 m!119787))

(assert (=> b!106957 m!119787))

(assert (=> b!106957 m!119799))

(assert (=> d!28825 d!29581))

(declare-fun d!29583 () Bool)

(declare-fun e!69580 () Bool)

(assert (=> d!29583 e!69580))

(declare-fun res!53118 () Bool)

(assert (=> d!29583 (=> (not res!53118) (not e!69580))))

(assert (=> d!29583 (= res!53118 (and (bvsge (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000000) (bvslt (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (size!2306 (_keys!4286 newMap!16)))))))

(declare-fun lt!54730 () Unit!3218)

(declare-fun choose!102 ((_ BitVec 64) array!4325 (_ BitVec 32) (_ BitVec 32)) Unit!3218)

(assert (=> d!29583 (= lt!54730 (choose!102 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (mask!6726 newMap!16)))))

(assert (=> d!29583 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29583 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (_keys!4286 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (mask!6726 newMap!16)) lt!54730)))

(declare-fun b!106966 () Bool)

(assert (=> b!106966 (= e!69580 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (mask!6726 newMap!16)))))

(assert (= (and d!29583 res!53118) b!106966))

(assert (=> d!29583 m!116875))

(declare-fun m!119839 () Bool)

(assert (=> d!29583 m!119839))

(assert (=> d!29583 m!117277))

(assert (=> b!106966 m!117823))

(assert (=> b!106966 m!117801))

(assert (=> d!28825 d!29583))

(assert (=> d!28825 d!29137))

(declare-fun b!106967 () Bool)

(declare-fun e!69581 () Bool)

(declare-fun call!11302 () Bool)

(assert (=> b!106967 (= e!69581 call!11302)))

(declare-fun b!106968 () Bool)

(declare-fun e!69583 () Bool)

(assert (=> b!106968 (= e!69583 call!11302)))

(declare-fun b!106969 () Bool)

(declare-fun e!69582 () Bool)

(assert (=> b!106969 (= e!69582 e!69581)))

(declare-fun c!18761 () Bool)

(assert (=> b!106969 (= c!18761 (validKeyInArray!0 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11299 () Bool)

(assert (=> bm!11299 (= call!11302 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (mask!6726 newMap!16)))))

(declare-fun d!29585 () Bool)

(declare-fun res!53120 () Bool)

(assert (=> d!29585 (=> res!53120 e!69582)))

(assert (=> d!29585 (= res!53120 (bvsge #b00000000000000000000000000000000 (size!2306 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))))

(assert (=> d!29585 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (mask!6726 newMap!16)) e!69582)))

(declare-fun b!106970 () Bool)

(assert (=> b!106970 (= e!69581 e!69583)))

(declare-fun lt!54733 () (_ BitVec 64))

(assert (=> b!106970 (= lt!54733 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54732 () Unit!3218)

(assert (=> b!106970 (= lt!54732 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) lt!54733 #b00000000000000000000000000000000))))

(assert (=> b!106970 (arrayContainsKey!0 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) lt!54733 #b00000000000000000000000000000000)))

(declare-fun lt!54731 () Unit!3218)

(assert (=> b!106970 (= lt!54731 lt!54732)))

(declare-fun res!53119 () Bool)

(assert (=> b!106970 (= res!53119 (= (seekEntryOrOpen!0 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000) (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (mask!6726 newMap!16)) (Found!262 #b00000000000000000000000000000000)))))

(assert (=> b!106970 (=> (not res!53119) (not e!69583))))

(assert (= (and d!29585 (not res!53120)) b!106969))

(assert (= (and b!106969 c!18761) b!106970))

(assert (= (and b!106969 (not c!18761)) b!106967))

(assert (= (and b!106970 res!53119) b!106968))

(assert (= (or b!106968 b!106967) bm!11299))

(assert (=> b!106969 m!119747))

(assert (=> b!106969 m!119747))

(assert (=> b!106969 m!119749))

(declare-fun m!119841 () Bool)

(assert (=> bm!11299 m!119841))

(assert (=> b!106970 m!119747))

(declare-fun m!119843 () Bool)

(assert (=> b!106970 m!119843))

(declare-fun m!119845 () Bool)

(assert (=> b!106970 m!119845))

(assert (=> b!106970 m!119747))

(declare-fun m!119847 () Bool)

(assert (=> b!106970 m!119847))

(assert (=> d!28825 d!29585))

(declare-fun b!106971 () Bool)

(declare-fun e!69587 () Bool)

(declare-fun call!11303 () Bool)

(assert (=> b!106971 (= e!69587 call!11303)))

(declare-fun b!106972 () Bool)

(assert (=> b!106972 (= e!69587 call!11303)))

(declare-fun b!106973 () Bool)

(declare-fun e!69585 () Bool)

(assert (=> b!106973 (= e!69585 e!69587)))

(declare-fun c!18762 () Bool)

(assert (=> b!106973 (= c!18762 (validKeyInArray!0 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) lt!54169)))))

(declare-fun d!29587 () Bool)

(declare-fun res!53123 () Bool)

(declare-fun e!69584 () Bool)

(assert (=> d!29587 (=> res!53123 e!69584)))

(assert (=> d!29587 (= res!53123 (bvsge lt!54169 (size!2306 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))))

(assert (=> d!29587 (= (arrayNoDuplicates!0 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) lt!54169 lt!54158) e!69584)))

(declare-fun b!106974 () Bool)

(assert (=> b!106974 (= e!69584 e!69585)))

(declare-fun res!53122 () Bool)

(assert (=> b!106974 (=> (not res!53122) (not e!69585))))

(declare-fun e!69586 () Bool)

(assert (=> b!106974 (= res!53122 (not e!69586))))

(declare-fun res!53121 () Bool)

(assert (=> b!106974 (=> (not res!53121) (not e!69586))))

(assert (=> b!106974 (= res!53121 (validKeyInArray!0 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) lt!54169)))))

(declare-fun b!106975 () Bool)

(assert (=> b!106975 (= e!69586 (contains!822 lt!54158 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) lt!54169)))))

(declare-fun bm!11300 () Bool)

(assert (=> bm!11300 (= call!11303 (arrayNoDuplicates!0 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (bvadd lt!54169 #b00000000000000000000000000000001) (ite c!18762 (Cons!1611 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) lt!54169) lt!54158) lt!54158)))))

(assert (= (and d!29587 (not res!53123)) b!106974))

(assert (= (and b!106974 res!53121) b!106975))

(assert (= (and b!106974 res!53122) b!106973))

(assert (= (and b!106973 c!18762) b!106971))

(assert (= (and b!106973 (not c!18762)) b!106972))

(assert (= (or b!106971 b!106972) bm!11300))

(declare-fun m!119849 () Bool)

(assert (=> b!106973 m!119849))

(assert (=> b!106973 m!119849))

(declare-fun m!119851 () Bool)

(assert (=> b!106973 m!119851))

(assert (=> b!106974 m!119849))

(assert (=> b!106974 m!119849))

(assert (=> b!106974 m!119851))

(assert (=> b!106975 m!119849))

(assert (=> b!106975 m!119849))

(declare-fun m!119853 () Bool)

(assert (=> b!106975 m!119853))

(assert (=> bm!11300 m!119849))

(declare-fun m!119855 () Bool)

(assert (=> bm!11300 m!119855))

(assert (=> d!28825 d!29587))

(declare-fun b!106976 () Bool)

(declare-fun e!69590 () Unit!3218)

(declare-fun Unit!3295 () Unit!3218)

(assert (=> b!106976 (= e!69590 Unit!3295)))

(declare-fun b!106977 () Bool)

(declare-fun e!69589 () ListLongMap!1543)

(declare-fun call!11308 () ListLongMap!1543)

(assert (=> b!106977 (= e!69589 call!11308)))

(declare-fun b!106978 () Bool)

(declare-fun e!69588 () Bool)

(declare-fun lt!54735 () ListLongMap!1543)

(assert (=> b!106978 (= e!69588 (= (apply!98 lt!54735 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!106979 () Bool)

(declare-fun c!18768 () Bool)

(assert (=> b!106979 (= c!18768 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69592 () ListLongMap!1543)

(assert (=> b!106979 (= e!69592 e!69589)))

(declare-fun b!106980 () Bool)

(declare-fun e!69594 () Bool)

(declare-fun e!69597 () Bool)

(assert (=> b!106980 (= e!69594 e!69597)))

(declare-fun res!53132 () Bool)

(declare-fun call!11304 () Bool)

(assert (=> b!106980 (= res!53132 call!11304)))

(assert (=> b!106980 (=> (not res!53132) (not e!69597))))

(declare-fun bm!11301 () Bool)

(declare-fun call!11310 () ListLongMap!1543)

(declare-fun call!11309 () ListLongMap!1543)

(assert (=> bm!11301 (= call!11310 call!11309)))

(declare-fun e!69593 () Bool)

(declare-fun b!106981 () Bool)

(assert (=> b!106981 (= e!69593 (validKeyInArray!0 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!106982 () Bool)

(declare-fun res!53131 () Bool)

(declare-fun e!69596 () Bool)

(assert (=> b!106982 (=> (not res!53131) (not e!69596))))

(declare-fun e!69599 () Bool)

(assert (=> b!106982 (= res!53131 e!69599)))

(declare-fun res!53126 () Bool)

(assert (=> b!106982 (=> res!53126 e!69599)))

(declare-fun e!69598 () Bool)

(assert (=> b!106982 (= res!53126 (not e!69598))))

(declare-fun res!53125 () Bool)

(assert (=> b!106982 (=> (not res!53125) (not e!69598))))

(assert (=> b!106982 (= res!53125 (bvslt #b00000000000000000000000000000000 (size!2306 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))))

(declare-fun bm!11302 () Bool)

(declare-fun call!11305 () ListLongMap!1543)

(assert (=> bm!11302 (= call!11308 call!11305)))

(declare-fun bm!11303 () Bool)

(declare-fun call!11306 () ListLongMap!1543)

(assert (=> bm!11303 (= call!11309 call!11306)))

(declare-fun b!106983 () Bool)

(declare-fun e!69600 () Bool)

(assert (=> b!106983 (= e!69600 (= (apply!98 lt!54735 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106983 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))))))))

(assert (=> b!106983 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))))

(declare-fun b!106984 () Bool)

(declare-fun res!53128 () Bool)

(assert (=> b!106984 (=> (not res!53128) (not e!69596))))

(assert (=> b!106984 (= res!53128 e!69594)))

(declare-fun c!18767 () Bool)

(assert (=> b!106984 (= c!18767 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106985 () Bool)

(assert (=> b!106985 (= e!69592 call!11308)))

(declare-fun b!106986 () Bool)

(declare-fun e!69591 () Bool)

(declare-fun call!11307 () Bool)

(assert (=> b!106986 (= e!69591 (not call!11307))))

(declare-fun bm!11304 () Bool)

(assert (=> bm!11304 (= call!11306 (getCurrentListMapNoExtraKeys!100 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!106987 () Bool)

(assert (=> b!106987 (= e!69597 (= (apply!98 lt!54735 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 newMap!16)))))

(declare-fun b!106988 () Bool)

(assert (=> b!106988 (= e!69589 call!11310)))

(declare-fun b!106989 () Bool)

(assert (=> b!106989 (= e!69591 e!69588)))

(declare-fun res!53130 () Bool)

(assert (=> b!106989 (= res!53130 call!11307)))

(assert (=> b!106989 (=> (not res!53130) (not e!69588))))

(declare-fun bm!11305 () Bool)

(declare-fun c!18763 () Bool)

(declare-fun c!18766 () Bool)

(assert (=> bm!11305 (= call!11305 (+!135 (ite c!18763 call!11306 (ite c!18766 call!11309 call!11310)) (ite (or c!18763 c!18766) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 newMap!16)) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun bm!11306 () Bool)

(assert (=> bm!11306 (= call!11307 (contains!820 lt!54735 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106990 () Bool)

(assert (=> b!106990 (= e!69598 (validKeyInArray!0 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!106991 () Bool)

(declare-fun e!69595 () ListLongMap!1543)

(assert (=> b!106991 (= e!69595 e!69592)))

(assert (=> b!106991 (= c!18766 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106992 () Bool)

(assert (=> b!106992 (= e!69594 (not call!11304))))

(declare-fun b!106993 () Bool)

(assert (=> b!106993 (= e!69596 e!69591)))

(declare-fun c!18764 () Bool)

(assert (=> b!106993 (= c!18764 (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106994 () Bool)

(declare-fun lt!54737 () Unit!3218)

(assert (=> b!106994 (= e!69590 lt!54737)))

(declare-fun lt!54739 () ListLongMap!1543)

(assert (=> b!106994 (= lt!54739 (getCurrentListMapNoExtraKeys!100 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54750 () (_ BitVec 64))

(assert (=> b!106994 (= lt!54750 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54743 () (_ BitVec 64))

(assert (=> b!106994 (= lt!54743 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54749 () Unit!3218)

(assert (=> b!106994 (= lt!54749 (addStillContains!74 lt!54739 lt!54750 (zeroValue!2456 newMap!16) lt!54743))))

(assert (=> b!106994 (contains!820 (+!135 lt!54739 (tuple2!2381 lt!54750 (zeroValue!2456 newMap!16))) lt!54743)))

(declare-fun lt!54746 () Unit!3218)

(assert (=> b!106994 (= lt!54746 lt!54749)))

(declare-fun lt!54752 () ListLongMap!1543)

(assert (=> b!106994 (= lt!54752 (getCurrentListMapNoExtraKeys!100 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54751 () (_ BitVec 64))

(assert (=> b!106994 (= lt!54751 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54736 () (_ BitVec 64))

(assert (=> b!106994 (= lt!54736 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54740 () Unit!3218)

(assert (=> b!106994 (= lt!54740 (addApplyDifferent!74 lt!54752 lt!54751 (minValue!2456 newMap!16) lt!54736))))

(assert (=> b!106994 (= (apply!98 (+!135 lt!54752 (tuple2!2381 lt!54751 (minValue!2456 newMap!16))) lt!54736) (apply!98 lt!54752 lt!54736))))

(declare-fun lt!54741 () Unit!3218)

(assert (=> b!106994 (= lt!54741 lt!54740)))

(declare-fun lt!54755 () ListLongMap!1543)

(assert (=> b!106994 (= lt!54755 (getCurrentListMapNoExtraKeys!100 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54745 () (_ BitVec 64))

(assert (=> b!106994 (= lt!54745 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54754 () (_ BitVec 64))

(assert (=> b!106994 (= lt!54754 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54738 () Unit!3218)

(assert (=> b!106994 (= lt!54738 (addApplyDifferent!74 lt!54755 lt!54745 (zeroValue!2456 newMap!16) lt!54754))))

(assert (=> b!106994 (= (apply!98 (+!135 lt!54755 (tuple2!2381 lt!54745 (zeroValue!2456 newMap!16))) lt!54754) (apply!98 lt!54755 lt!54754))))

(declare-fun lt!54742 () Unit!3218)

(assert (=> b!106994 (= lt!54742 lt!54738)))

(declare-fun lt!54744 () ListLongMap!1543)

(assert (=> b!106994 (= lt!54744 (getCurrentListMapNoExtraKeys!100 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54734 () (_ BitVec 64))

(assert (=> b!106994 (= lt!54734 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54748 () (_ BitVec 64))

(assert (=> b!106994 (= lt!54748 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!106994 (= lt!54737 (addApplyDifferent!74 lt!54744 lt!54734 (minValue!2456 newMap!16) lt!54748))))

(assert (=> b!106994 (= (apply!98 (+!135 lt!54744 (tuple2!2381 lt!54734 (minValue!2456 newMap!16))) lt!54748) (apply!98 lt!54744 lt!54748))))

(declare-fun b!106995 () Bool)

(assert (=> b!106995 (= e!69599 e!69600)))

(declare-fun res!53127 () Bool)

(assert (=> b!106995 (=> (not res!53127) (not e!69600))))

(assert (=> b!106995 (= res!53127 (contains!820 lt!54735 (select (arr!2050 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!106995 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))))

(declare-fun b!106996 () Bool)

(assert (=> b!106996 (= e!69595 (+!135 call!11305 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun d!29589 () Bool)

(assert (=> d!29589 e!69596))

(declare-fun res!53129 () Bool)

(assert (=> d!29589 (=> (not res!53129) (not e!69596))))

(assert (=> d!29589 (= res!53129 (or (bvsge #b00000000000000000000000000000000 (size!2306 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))))))

(declare-fun lt!54753 () ListLongMap!1543)

(assert (=> d!29589 (= lt!54735 lt!54753)))

(declare-fun lt!54747 () Unit!3218)

(assert (=> d!29589 (= lt!54747 e!69590)))

(declare-fun c!18765 () Bool)

(assert (=> d!29589 (= c!18765 e!69593)))

(declare-fun res!53124 () Bool)

(assert (=> d!29589 (=> (not res!53124) (not e!69593))))

(assert (=> d!29589 (= res!53124 (bvslt #b00000000000000000000000000000000 (size!2306 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))))))))

(assert (=> d!29589 (= lt!54753 e!69595)))

(assert (=> d!29589 (= c!18763 (and (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29589 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29589 (= (getCurrentListMap!464 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) (array!4328 (store (arr!2051 (_values!2564 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (ValueCellFull!995 lt!53601)) (size!2307 (_values!2564 newMap!16))) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54735)))

(declare-fun bm!11307 () Bool)

(assert (=> bm!11307 (= call!11304 (contains!820 lt!54735 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29589 c!18763) b!106996))

(assert (= (and d!29589 (not c!18763)) b!106991))

(assert (= (and b!106991 c!18766) b!106985))

(assert (= (and b!106991 (not c!18766)) b!106979))

(assert (= (and b!106979 c!18768) b!106977))

(assert (= (and b!106979 (not c!18768)) b!106988))

(assert (= (or b!106977 b!106988) bm!11301))

(assert (= (or b!106985 bm!11301) bm!11303))

(assert (= (or b!106985 b!106977) bm!11302))

(assert (= (or b!106996 bm!11303) bm!11304))

(assert (= (or b!106996 bm!11302) bm!11305))

(assert (= (and d!29589 res!53124) b!106981))

(assert (= (and d!29589 c!18765) b!106994))

(assert (= (and d!29589 (not c!18765)) b!106976))

(assert (= (and d!29589 res!53129) b!106982))

(assert (= (and b!106982 res!53125) b!106990))

(assert (= (and b!106982 (not res!53126)) b!106995))

(assert (= (and b!106995 res!53127) b!106983))

(assert (= (and b!106982 res!53131) b!106984))

(assert (= (and b!106984 c!18767) b!106980))

(assert (= (and b!106984 (not c!18767)) b!106992))

(assert (= (and b!106980 res!53132) b!106987))

(assert (= (or b!106980 b!106992) bm!11307))

(assert (= (and b!106984 res!53128) b!106993))

(assert (= (and b!106993 c!18764) b!106989))

(assert (= (and b!106993 (not c!18764)) b!106986))

(assert (= (and b!106989 res!53130) b!106978))

(assert (= (or b!106989 b!106986) bm!11306))

(declare-fun b_lambda!4755 () Bool)

(assert (=> (not b_lambda!4755) (not b!106983)))

(assert (=> b!106983 t!5701))

(declare-fun b_and!6573 () Bool)

(assert (= b_and!6569 (and (=> t!5701 result!3459) b_and!6573)))

(assert (=> b!106983 t!5703))

(declare-fun b_and!6575 () Bool)

(assert (= b_and!6571 (and (=> t!5703 result!3461) b_and!6575)))

(declare-fun m!119857 () Bool)

(assert (=> bm!11306 m!119857))

(declare-fun m!119859 () Bool)

(assert (=> b!106996 m!119859))

(assert (=> b!106983 m!117291))

(assert (=> b!106983 m!119747))

(declare-fun m!119861 () Bool)

(assert (=> b!106983 m!119861))

(assert (=> b!106983 m!119747))

(declare-fun m!119863 () Bool)

(assert (=> b!106983 m!119863))

(assert (=> b!106983 m!119863))

(assert (=> b!106983 m!117291))

(declare-fun m!119865 () Bool)

(assert (=> b!106983 m!119865))

(declare-fun m!119867 () Bool)

(assert (=> bm!11304 m!119867))

(declare-fun m!119869 () Bool)

(assert (=> bm!11307 m!119869))

(assert (=> b!106981 m!119747))

(assert (=> b!106981 m!119747))

(assert (=> b!106981 m!119749))

(declare-fun m!119871 () Bool)

(assert (=> b!106987 m!119871))

(assert (=> b!106995 m!119747))

(assert (=> b!106995 m!119747))

(declare-fun m!119873 () Bool)

(assert (=> b!106995 m!119873))

(declare-fun m!119875 () Bool)

(assert (=> b!106994 m!119875))

(declare-fun m!119877 () Bool)

(assert (=> b!106994 m!119877))

(declare-fun m!119879 () Bool)

(assert (=> b!106994 m!119879))

(declare-fun m!119881 () Bool)

(assert (=> b!106994 m!119881))

(declare-fun m!119883 () Bool)

(assert (=> b!106994 m!119883))

(declare-fun m!119885 () Bool)

(assert (=> b!106994 m!119885))

(declare-fun m!119887 () Bool)

(assert (=> b!106994 m!119887))

(declare-fun m!119889 () Bool)

(assert (=> b!106994 m!119889))

(declare-fun m!119891 () Bool)

(assert (=> b!106994 m!119891))

(declare-fun m!119893 () Bool)

(assert (=> b!106994 m!119893))

(assert (=> b!106994 m!119867))

(declare-fun m!119895 () Bool)

(assert (=> b!106994 m!119895))

(declare-fun m!119897 () Bool)

(assert (=> b!106994 m!119897))

(assert (=> b!106994 m!119897))

(declare-fun m!119899 () Bool)

(assert (=> b!106994 m!119899))

(declare-fun m!119901 () Bool)

(assert (=> b!106994 m!119901))

(assert (=> b!106994 m!119883))

(assert (=> b!106994 m!119887))

(declare-fun m!119903 () Bool)

(assert (=> b!106994 m!119903))

(assert (=> b!106994 m!119747))

(assert (=> b!106994 m!119877))

(declare-fun m!119905 () Bool)

(assert (=> bm!11305 m!119905))

(declare-fun m!119907 () Bool)

(assert (=> b!106978 m!119907))

(assert (=> d!29589 m!117277))

(assert (=> b!106990 m!119747))

(assert (=> b!106990 m!119747))

(assert (=> b!106990 m!119749))

(assert (=> d!28825 d!29589))

(assert (=> d!28825 d!28725))

(declare-fun b!107005 () Bool)

(declare-fun res!53142 () Bool)

(declare-fun e!69606 () Bool)

(assert (=> b!107005 (=> (not res!53142) (not e!69606))))

(assert (=> b!107005 (= res!53142 (not (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))))))))

(declare-fun b!107006 () Bool)

(declare-fun res!53141 () Bool)

(assert (=> b!107006 (=> (not res!53141) (not e!69606))))

(assert (=> b!107006 (= res!53141 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(declare-fun b!107008 () Bool)

(declare-fun e!69605 () Bool)

(assert (=> b!107008 (= e!69605 (= (arrayCountValidKeys!0 (array!4326 (store (arr!2050 (_keys!4286 newMap!16)) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) (size!2306 (_keys!4286 newMap!16))) #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4286 newMap!16) #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!107007 () Bool)

(assert (=> b!107007 (= e!69606 (bvslt (size!2306 (_keys!4286 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!29591 () Bool)

(assert (=> d!29591 e!69605))

(declare-fun res!53144 () Bool)

(assert (=> d!29591 (=> (not res!53144) (not e!69605))))

(assert (=> d!29591 (= res!53144 (and (bvsge (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000000) (bvslt (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (size!2306 (_keys!4286 newMap!16)))))))

(declare-fun lt!54758 () Unit!3218)

(declare-fun choose!1 (array!4325 (_ BitVec 32) (_ BitVec 64)) Unit!3218)

(assert (=> d!29591 (= lt!54758 (choose!1 (_keys!4286 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)))))

(assert (=> d!29591 e!69606))

(declare-fun res!53143 () Bool)

(assert (=> d!29591 (=> (not res!53143) (not e!69606))))

(assert (=> d!29591 (= res!53143 (and (bvsge (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000000) (bvslt (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (size!2306 (_keys!4286 newMap!16)))))))

(assert (=> d!29591 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4286 newMap!16) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355)) lt!54758)))

(assert (= (and d!29591 res!53143) b!107005))

(assert (= (and b!107005 res!53142) b!107006))

(assert (= (and b!107006 res!53141) b!107007))

(assert (= (and d!29591 res!53144) b!107008))

(declare-fun m!119909 () Bool)

(assert (=> b!107005 m!119909))

(assert (=> b!107005 m!119909))

(declare-fun m!119911 () Bool)

(assert (=> b!107005 m!119911))

(assert (=> b!107006 m!116875))

(assert (=> b!107006 m!117209))

(assert (=> b!107008 m!117823))

(assert (=> b!107008 m!117813))

(assert (=> b!107008 m!117041))

(assert (=> d!29591 m!116875))

(declare-fun m!119913 () Bool)

(assert (=> d!29591 m!119913))

(assert (=> d!28825 d!29591))

(assert (=> d!28825 d!28671))

(declare-fun d!29593 () Bool)

(assert (=> d!29593 (arrayContainsKey!0 lt!54166 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!54761 () Unit!3218)

(declare-fun choose!13 (array!4325 (_ BitVec 64) (_ BitVec 32)) Unit!3218)

(assert (=> d!29593 (= lt!54761 (choose!13 lt!54166 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))))))

(assert (=> d!29593 (bvsge (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814)) #b00000000000000000000000000000000)))

(assert (=> d!29593 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!54166 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) (ite c!18306 (index!3199 lt!53814) (index!3196 lt!53814))) lt!54761)))

(declare-fun bs!4390 () Bool)

(assert (= bs!4390 d!29593))

(assert (=> bs!4390 m!116875))

(assert (=> bs!4390 m!117825))

(assert (=> bs!4390 m!116875))

(declare-fun m!119915 () Bool)

(assert (=> bs!4390 m!119915))

(assert (=> d!28825 d!29593))

(declare-fun d!29595 () Bool)

(declare-fun lt!54762 () Bool)

(assert (=> d!29595 (= lt!54762 (select (content!109 (toList!787 lt!54229)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun e!69607 () Bool)

(assert (=> d!29595 (= lt!54762 e!69607)))

(declare-fun res!53145 () Bool)

(assert (=> d!29595 (=> (not res!53145) (not e!69607))))

(assert (=> d!29595 (= res!53145 ((_ is Cons!1612) (toList!787 lt!54229)))))

(assert (=> d!29595 (= (contains!821 (toList!787 lt!54229) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54762)))

(declare-fun b!107009 () Bool)

(declare-fun e!69608 () Bool)

(assert (=> b!107009 (= e!69607 e!69608)))

(declare-fun res!53146 () Bool)

(assert (=> b!107009 (=> res!53146 e!69608)))

(assert (=> b!107009 (= res!53146 (= (h!2209 (toList!787 lt!54229)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!107010 () Bool)

(assert (=> b!107010 (= e!69608 (contains!821 (t!5690 (toList!787 lt!54229)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!29595 res!53145) b!107009))

(assert (= (and b!107009 (not res!53146)) b!107010))

(declare-fun m!119917 () Bool)

(assert (=> d!29595 m!119917))

(declare-fun m!119919 () Bool)

(assert (=> d!29595 m!119919))

(declare-fun m!119921 () Bool)

(assert (=> b!107010 m!119921))

(assert (=> b!105931 d!29595))

(declare-fun d!29597 () Bool)

(declare-fun lt!54763 () Bool)

(assert (=> d!29597 (= lt!54763 (select (content!109 lt!53709) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun e!69609 () Bool)

(assert (=> d!29597 (= lt!54763 e!69609)))

(declare-fun res!53147 () Bool)

(assert (=> d!29597 (=> (not res!53147) (not e!69609))))

(assert (=> d!29597 (= res!53147 ((_ is Cons!1612) lt!53709))))

(assert (=> d!29597 (= (contains!821 lt!53709 (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))) lt!54763)))

(declare-fun b!107011 () Bool)

(declare-fun e!69610 () Bool)

(assert (=> b!107011 (= e!69609 e!69610)))

(declare-fun res!53148 () Bool)

(assert (=> b!107011 (=> res!53148 e!69610)))

(assert (=> b!107011 (= res!53148 (= (h!2209 lt!53709) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(declare-fun b!107012 () Bool)

(assert (=> b!107012 (= e!69610 (contains!821 (t!5690 lt!53709) (tuple2!2381 (_1!1201 lt!53599) (_2!1201 lt!53599))))))

(assert (= (and d!29597 res!53147) b!107011))

(assert (= (and b!107011 (not res!53148)) b!107012))

(declare-fun m!119923 () Bool)

(assert (=> d!29597 m!119923))

(declare-fun m!119925 () Bool)

(assert (=> d!29597 m!119925))

(declare-fun m!119927 () Bool)

(assert (=> b!107012 m!119927))

(assert (=> b!105743 d!29597))

(declare-fun d!29599 () Bool)

(declare-fun res!53149 () Bool)

(declare-fun e!69611 () Bool)

(assert (=> d!29599 (=> res!53149 e!69611)))

(assert (=> d!29599 (= res!53149 (and ((_ is Cons!1612) lt!53713) (= (_1!1201 (h!2209 lt!53713)) (_1!1201 lt!53599))))))

(assert (=> d!29599 (= (containsKey!158 lt!53713 (_1!1201 lt!53599)) e!69611)))

(declare-fun b!107013 () Bool)

(declare-fun e!69612 () Bool)

(assert (=> b!107013 (= e!69611 e!69612)))

(declare-fun res!53150 () Bool)

(assert (=> b!107013 (=> (not res!53150) (not e!69612))))

(assert (=> b!107013 (= res!53150 (and (or (not ((_ is Cons!1612) lt!53713)) (bvsle (_1!1201 (h!2209 lt!53713)) (_1!1201 lt!53599))) ((_ is Cons!1612) lt!53713) (bvslt (_1!1201 (h!2209 lt!53713)) (_1!1201 lt!53599))))))

(declare-fun b!107014 () Bool)

(assert (=> b!107014 (= e!69612 (containsKey!158 (t!5690 lt!53713) (_1!1201 lt!53599)))))

(assert (= (and d!29599 (not res!53149)) b!107013))

(assert (= (and b!107013 res!53150) b!107014))

(declare-fun m!119929 () Bool)

(assert (=> b!107014 m!119929))

(assert (=> b!105894 d!29599))

(declare-fun b!107015 () Bool)

(declare-fun e!69615 () Unit!3218)

(declare-fun Unit!3296 () Unit!3218)

(assert (=> b!107015 (= e!69615 Unit!3296)))

(declare-fun b!107016 () Bool)

(declare-fun e!69614 () ListLongMap!1543)

(declare-fun call!11315 () ListLongMap!1543)

(assert (=> b!107016 (= e!69614 call!11315)))

(declare-fun b!107017 () Bool)

(declare-fun e!69613 () Bool)

(declare-fun lt!54765 () ListLongMap!1543)

(assert (=> b!107017 (= e!69613 (= (apply!98 lt!54765 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 newMap!16)))))

(declare-fun b!107018 () Bool)

(declare-fun c!18774 () Bool)

(assert (=> b!107018 (= c!18774 (and (not (= (bvand lt!53811 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!53811 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69617 () ListLongMap!1543)

(assert (=> b!107018 (= e!69617 e!69614)))

(declare-fun b!107019 () Bool)

(declare-fun e!69619 () Bool)

(declare-fun e!69622 () Bool)

(assert (=> b!107019 (= e!69619 e!69622)))

(declare-fun res!53159 () Bool)

(declare-fun call!11311 () Bool)

(assert (=> b!107019 (= res!53159 call!11311)))

(assert (=> b!107019 (=> (not res!53159) (not e!69622))))

(declare-fun bm!11308 () Bool)

(declare-fun call!11317 () ListLongMap!1543)

(declare-fun call!11316 () ListLongMap!1543)

(assert (=> bm!11308 (= call!11317 call!11316)))

(declare-fun b!107020 () Bool)

(declare-fun e!69618 () Bool)

(assert (=> b!107020 (= e!69618 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107021 () Bool)

(declare-fun res!53158 () Bool)

(declare-fun e!69621 () Bool)

(assert (=> b!107021 (=> (not res!53158) (not e!69621))))

(declare-fun e!69624 () Bool)

(assert (=> b!107021 (= res!53158 e!69624)))

(declare-fun res!53153 () Bool)

(assert (=> b!107021 (=> res!53153 e!69624)))

(declare-fun e!69623 () Bool)

(assert (=> b!107021 (= res!53153 (not e!69623))))

(declare-fun res!53152 () Bool)

(assert (=> b!107021 (=> (not res!53152) (not e!69623))))

(assert (=> b!107021 (= res!53152 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun bm!11309 () Bool)

(declare-fun call!11312 () ListLongMap!1543)

(assert (=> bm!11309 (= call!11315 call!11312)))

(declare-fun bm!11310 () Bool)

(declare-fun call!11313 () ListLongMap!1543)

(assert (=> bm!11310 (= call!11316 call!11313)))

(declare-fun b!107022 () Bool)

(declare-fun e!69625 () Bool)

(assert (=> b!107022 (= e!69625 (= (apply!98 lt!54765 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (_values!2564 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107022 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (_values!2564 newMap!16))))))

(assert (=> b!107022 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!107023 () Bool)

(declare-fun res!53155 () Bool)

(assert (=> b!107023 (=> (not res!53155) (not e!69621))))

(assert (=> b!107023 (= res!53155 e!69619)))

(declare-fun c!18773 () Bool)

(assert (=> b!107023 (= c!18773 (not (= (bvand lt!53811 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!107024 () Bool)

(assert (=> b!107024 (= e!69617 call!11315)))

(declare-fun b!107025 () Bool)

(declare-fun e!69616 () Bool)

(declare-fun call!11314 () Bool)

(assert (=> b!107025 (= e!69616 (not call!11314))))

(declare-fun bm!11311 () Bool)

(assert (=> bm!11311 (= call!11313 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53811 lt!53601 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun b!107026 () Bool)

(assert (=> b!107026 (= e!69622 (= (apply!98 lt!54765 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53601))))

(declare-fun b!107027 () Bool)

(assert (=> b!107027 (= e!69614 call!11317)))

(declare-fun b!107028 () Bool)

(assert (=> b!107028 (= e!69616 e!69613)))

(declare-fun res!53157 () Bool)

(assert (=> b!107028 (= res!53157 call!11314)))

(assert (=> b!107028 (=> (not res!53157) (not e!69613))))

(declare-fun bm!11312 () Bool)

(declare-fun c!18769 () Bool)

(declare-fun c!18772 () Bool)

(assert (=> bm!11312 (= call!11312 (+!135 (ite c!18769 call!11313 (ite c!18772 call!11316 call!11317)) (ite (or c!18769 c!18772) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16)))))))

(declare-fun bm!11313 () Bool)

(assert (=> bm!11313 (= call!11314 (contains!820 lt!54765 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107029 () Bool)

(assert (=> b!107029 (= e!69623 (validKeyInArray!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107030 () Bool)

(declare-fun e!69620 () ListLongMap!1543)

(assert (=> b!107030 (= e!69620 e!69617)))

(assert (=> b!107030 (= c!18772 (and (not (= (bvand lt!53811 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!53811 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!107031 () Bool)

(assert (=> b!107031 (= e!69619 (not call!11311))))

(declare-fun b!107032 () Bool)

(assert (=> b!107032 (= e!69621 e!69616)))

(declare-fun c!18770 () Bool)

(assert (=> b!107032 (= c!18770 (not (= (bvand lt!53811 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!107033 () Bool)

(declare-fun lt!54767 () Unit!3218)

(assert (=> b!107033 (= e!69615 lt!54767)))

(declare-fun lt!54769 () ListLongMap!1543)

(assert (=> b!107033 (= lt!54769 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53811 lt!53601 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54780 () (_ BitVec 64))

(assert (=> b!107033 (= lt!54780 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54773 () (_ BitVec 64))

(assert (=> b!107033 (= lt!54773 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54779 () Unit!3218)

(assert (=> b!107033 (= lt!54779 (addStillContains!74 lt!54769 lt!54780 lt!53601 lt!54773))))

(assert (=> b!107033 (contains!820 (+!135 lt!54769 (tuple2!2381 lt!54780 lt!53601)) lt!54773)))

(declare-fun lt!54776 () Unit!3218)

(assert (=> b!107033 (= lt!54776 lt!54779)))

(declare-fun lt!54782 () ListLongMap!1543)

(assert (=> b!107033 (= lt!54782 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53811 lt!53601 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54781 () (_ BitVec 64))

(assert (=> b!107033 (= lt!54781 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54766 () (_ BitVec 64))

(assert (=> b!107033 (= lt!54766 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54770 () Unit!3218)

(assert (=> b!107033 (= lt!54770 (addApplyDifferent!74 lt!54782 lt!54781 (minValue!2456 newMap!16) lt!54766))))

(assert (=> b!107033 (= (apply!98 (+!135 lt!54782 (tuple2!2381 lt!54781 (minValue!2456 newMap!16))) lt!54766) (apply!98 lt!54782 lt!54766))))

(declare-fun lt!54771 () Unit!3218)

(assert (=> b!107033 (= lt!54771 lt!54770)))

(declare-fun lt!54785 () ListLongMap!1543)

(assert (=> b!107033 (= lt!54785 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53811 lt!53601 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54775 () (_ BitVec 64))

(assert (=> b!107033 (= lt!54775 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54784 () (_ BitVec 64))

(assert (=> b!107033 (= lt!54784 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54768 () Unit!3218)

(assert (=> b!107033 (= lt!54768 (addApplyDifferent!74 lt!54785 lt!54775 lt!53601 lt!54784))))

(assert (=> b!107033 (= (apply!98 (+!135 lt!54785 (tuple2!2381 lt!54775 lt!53601)) lt!54784) (apply!98 lt!54785 lt!54784))))

(declare-fun lt!54772 () Unit!3218)

(assert (=> b!107033 (= lt!54772 lt!54768)))

(declare-fun lt!54774 () ListLongMap!1543)

(assert (=> b!107033 (= lt!54774 (getCurrentListMapNoExtraKeys!100 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53811 lt!53601 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(declare-fun lt!54764 () (_ BitVec 64))

(assert (=> b!107033 (= lt!54764 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54778 () (_ BitVec 64))

(assert (=> b!107033 (= lt!54778 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107033 (= lt!54767 (addApplyDifferent!74 lt!54774 lt!54764 (minValue!2456 newMap!16) lt!54778))))

(assert (=> b!107033 (= (apply!98 (+!135 lt!54774 (tuple2!2381 lt!54764 (minValue!2456 newMap!16))) lt!54778) (apply!98 lt!54774 lt!54778))))

(declare-fun b!107034 () Bool)

(assert (=> b!107034 (= e!69624 e!69625)))

(declare-fun res!53154 () Bool)

(assert (=> b!107034 (=> (not res!53154) (not e!69625))))

(assert (=> b!107034 (= res!53154 (contains!820 lt!54765 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!107034 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!107035 () Bool)

(assert (=> b!107035 (= e!69620 (+!135 call!11312 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 newMap!16))))))

(declare-fun d!29601 () Bool)

(assert (=> d!29601 e!69621))

(declare-fun res!53156 () Bool)

(assert (=> d!29601 (=> (not res!53156) (not e!69621))))

(assert (=> d!29601 (= res!53156 (or (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))))

(declare-fun lt!54783 () ListLongMap!1543)

(assert (=> d!29601 (= lt!54765 lt!54783)))

(declare-fun lt!54777 () Unit!3218)

(assert (=> d!29601 (= lt!54777 e!69615)))

(declare-fun c!18771 () Bool)

(assert (=> d!29601 (= c!18771 e!69618)))

(declare-fun res!53151 () Bool)

(assert (=> d!29601 (=> (not res!53151) (not e!69618))))

(assert (=> d!29601 (= res!53151 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 newMap!16))))))

(assert (=> d!29601 (= lt!54783 e!69620)))

(assert (=> d!29601 (= c!18769 (and (not (= (bvand lt!53811 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!53811 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29601 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29601 (= (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53811 lt!53601 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) lt!54765)))

(declare-fun bm!11314 () Bool)

(assert (=> bm!11314 (= call!11311 (contains!820 lt!54765 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29601 c!18769) b!107035))

(assert (= (and d!29601 (not c!18769)) b!107030))

(assert (= (and b!107030 c!18772) b!107024))

(assert (= (and b!107030 (not c!18772)) b!107018))

(assert (= (and b!107018 c!18774) b!107016))

(assert (= (and b!107018 (not c!18774)) b!107027))

(assert (= (or b!107016 b!107027) bm!11308))

(assert (= (or b!107024 bm!11308) bm!11310))

(assert (= (or b!107024 b!107016) bm!11309))

(assert (= (or b!107035 bm!11310) bm!11311))

(assert (= (or b!107035 bm!11309) bm!11312))

(assert (= (and d!29601 res!53151) b!107020))

(assert (= (and d!29601 c!18771) b!107033))

(assert (= (and d!29601 (not c!18771)) b!107015))

(assert (= (and d!29601 res!53156) b!107021))

(assert (= (and b!107021 res!53152) b!107029))

(assert (= (and b!107021 (not res!53153)) b!107034))

(assert (= (and b!107034 res!53154) b!107022))

(assert (= (and b!107021 res!53158) b!107023))

(assert (= (and b!107023 c!18773) b!107019))

(assert (= (and b!107023 (not c!18773)) b!107031))

(assert (= (and b!107019 res!53159) b!107026))

(assert (= (or b!107019 b!107031) bm!11314))

(assert (= (and b!107023 res!53155) b!107032))

(assert (= (and b!107032 c!18770) b!107028))

(assert (= (and b!107032 (not c!18770)) b!107025))

(assert (= (and b!107028 res!53157) b!107017))

(assert (= (or b!107028 b!107025) bm!11313))

(declare-fun b_lambda!4757 () Bool)

(assert (=> (not b_lambda!4757) (not b!107022)))

(assert (=> b!107022 t!5701))

(declare-fun b_and!6577 () Bool)

(assert (= b_and!6573 (and (=> t!5701 result!3459) b_and!6577)))

(assert (=> b!107022 t!5703))

(declare-fun b_and!6579 () Bool)

(assert (= b_and!6575 (and (=> t!5703 result!3461) b_and!6579)))

(declare-fun m!119931 () Bool)

(assert (=> bm!11313 m!119931))

(declare-fun m!119933 () Bool)

(assert (=> b!107035 m!119933))

(assert (=> b!107022 m!117291))

(assert (=> b!107022 m!117265))

(declare-fun m!119935 () Bool)

(assert (=> b!107022 m!119935))

(assert (=> b!107022 m!117265))

(assert (=> b!107022 m!117367))

(assert (=> b!107022 m!117367))

(assert (=> b!107022 m!117291))

(assert (=> b!107022 m!117369))

(declare-fun m!119937 () Bool)

(assert (=> bm!11311 m!119937))

(declare-fun m!119939 () Bool)

(assert (=> bm!11314 m!119939))

(assert (=> b!107020 m!117265))

(assert (=> b!107020 m!117265))

(assert (=> b!107020 m!117267))

(declare-fun m!119941 () Bool)

(assert (=> b!107026 m!119941))

(assert (=> b!107034 m!117265))

(assert (=> b!107034 m!117265))

(declare-fun m!119943 () Bool)

(assert (=> b!107034 m!119943))

(declare-fun m!119945 () Bool)

(assert (=> b!107033 m!119945))

(declare-fun m!119947 () Bool)

(assert (=> b!107033 m!119947))

(declare-fun m!119949 () Bool)

(assert (=> b!107033 m!119949))

(declare-fun m!119951 () Bool)

(assert (=> b!107033 m!119951))

(declare-fun m!119953 () Bool)

(assert (=> b!107033 m!119953))

(declare-fun m!119955 () Bool)

(assert (=> b!107033 m!119955))

(declare-fun m!119957 () Bool)

(assert (=> b!107033 m!119957))

(declare-fun m!119959 () Bool)

(assert (=> b!107033 m!119959))

(declare-fun m!119961 () Bool)

(assert (=> b!107033 m!119961))

(declare-fun m!119963 () Bool)

(assert (=> b!107033 m!119963))

(assert (=> b!107033 m!119937))

(declare-fun m!119965 () Bool)

(assert (=> b!107033 m!119965))

(declare-fun m!119967 () Bool)

(assert (=> b!107033 m!119967))

(assert (=> b!107033 m!119967))

(declare-fun m!119969 () Bool)

(assert (=> b!107033 m!119969))

(declare-fun m!119971 () Bool)

(assert (=> b!107033 m!119971))

(assert (=> b!107033 m!119953))

(assert (=> b!107033 m!119957))

(declare-fun m!119973 () Bool)

(assert (=> b!107033 m!119973))

(assert (=> b!107033 m!117265))

(assert (=> b!107033 m!119947))

(declare-fun m!119975 () Bool)

(assert (=> bm!11312 m!119975))

(declare-fun m!119977 () Bool)

(assert (=> b!107017 m!119977))

(assert (=> d!29601 m!117277))

(assert (=> b!107029 m!117265))

(assert (=> b!107029 m!117265))

(assert (=> b!107029 m!117267))

(assert (=> d!28787 d!29601))

(assert (=> d!28787 d!28725))

(declare-fun d!29603 () Bool)

(assert (=> d!29603 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) lt!53811 lt!53601 (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)))))

(assert (=> d!29603 true))

(declare-fun _$7!92 () Unit!3218)

(assert (=> d!29603 (= (choose!666 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) lt!53811 (zeroValue!2456 newMap!16) lt!53601 (minValue!2456 newMap!16) (defaultEntry!2581 newMap!16)) _$7!92)))

(declare-fun bs!4391 () Bool)

(assert (= bs!4391 d!29603))

(assert (=> bs!4391 m!117143))

(assert (=> bs!4391 m!117143))

(assert (=> bs!4391 m!117651))

(assert (=> bs!4391 m!117649))

(assert (=> d!28787 d!29603))

(declare-fun d!29605 () Bool)

(declare-fun e!69626 () Bool)

(assert (=> d!29605 e!69626))

(declare-fun res!53161 () Bool)

(assert (=> d!29605 (=> (not res!53161) (not e!69626))))

(declare-fun lt!54789 () ListLongMap!1543)

(assert (=> d!29605 (= res!53161 (contains!820 lt!54789 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601))))))

(declare-fun lt!54786 () List!1616)

(assert (=> d!29605 (= lt!54789 (ListLongMap!1544 lt!54786))))

(declare-fun lt!54787 () Unit!3218)

(declare-fun lt!54788 () Unit!3218)

(assert (=> d!29605 (= lt!54787 lt!54788)))

(assert (=> d!29605 (= (getValueByKey!154 lt!54786 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601))) (Some!159 (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601))))))

(assert (=> d!29605 (= lt!54788 (lemmaContainsTupThenGetReturnValue!73 lt!54786 (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601))))))

(assert (=> d!29605 (= lt!54786 (insertStrictlySorted!76 (toList!787 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16))) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601))))))

(assert (=> d!29605 (= (+!135 (getCurrentListMap!464 (_keys!4286 newMap!16) (_values!2564 newMap!16) (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601)) lt!54789)))

(declare-fun b!107036 () Bool)

(declare-fun res!53160 () Bool)

(assert (=> b!107036 (=> (not res!53160) (not e!69626))))

(assert (=> b!107036 (= res!53160 (= (getValueByKey!154 (toList!787 lt!54789) (_1!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601))) (Some!159 (_2!1201 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601)))))))

(declare-fun b!107037 () Bool)

(assert (=> b!107037 (= e!69626 (contains!821 (toList!787 lt!54789) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601)))))

(assert (= (and d!29605 res!53161) b!107036))

(assert (= (and b!107036 res!53160) b!107037))

(declare-fun m!119979 () Bool)

(assert (=> d!29605 m!119979))

(declare-fun m!119981 () Bool)

(assert (=> d!29605 m!119981))

(declare-fun m!119983 () Bool)

(assert (=> d!29605 m!119983))

(declare-fun m!119985 () Bool)

(assert (=> d!29605 m!119985))

(declare-fun m!119987 () Bool)

(assert (=> b!107036 m!119987))

(declare-fun m!119989 () Bool)

(assert (=> b!107037 m!119989))

(assert (=> d!28787 d!29605))

(assert (=> d!28787 d!29133))

(declare-fun d!29607 () Bool)

(assert (=> d!29607 (arrayContainsKey!0 (_keys!4286 newMap!16) lt!54061 #b00000000000000000000000000000000)))

(declare-fun lt!54790 () Unit!3218)

(assert (=> d!29607 (= lt!54790 (choose!13 (_keys!4286 newMap!16) lt!54061 #b00000000000000000000000000000000))))

(assert (=> d!29607 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!29607 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4286 newMap!16) lt!54061 #b00000000000000000000000000000000) lt!54790)))

(declare-fun bs!4392 () Bool)

(assert (= bs!4392 d!29607))

(assert (=> bs!4392 m!117697))

(declare-fun m!119991 () Bool)

(assert (=> bs!4392 m!119991))

(assert (=> b!105722 d!29607))

(declare-fun d!29609 () Bool)

(declare-fun res!53162 () Bool)

(declare-fun e!69627 () Bool)

(assert (=> d!29609 (=> res!53162 e!69627)))

(assert (=> d!29609 (= res!53162 (= (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) lt!54061))))

(assert (=> d!29609 (= (arrayContainsKey!0 (_keys!4286 newMap!16) lt!54061 #b00000000000000000000000000000000) e!69627)))

(declare-fun b!107038 () Bool)

(declare-fun e!69628 () Bool)

(assert (=> b!107038 (= e!69627 e!69628)))

(declare-fun res!53163 () Bool)

(assert (=> b!107038 (=> (not res!53163) (not e!69628))))

(assert (=> b!107038 (= res!53163 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2306 (_keys!4286 newMap!16))))))

(declare-fun b!107039 () Bool)

(assert (=> b!107039 (= e!69628 (arrayContainsKey!0 (_keys!4286 newMap!16) lt!54061 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!29609 (not res!53162)) b!107038))

(assert (= (and b!107038 res!53163) b!107039))

(assert (=> d!29609 m!117265))

(declare-fun m!119993 () Bool)

(assert (=> b!107039 m!119993))

(assert (=> b!105722 d!29609))

(declare-fun d!29611 () Bool)

(declare-fun lt!54793 () SeekEntryResult!262)

(assert (=> d!29611 (and (or ((_ is Undefined!262) lt!54793) (not ((_ is Found!262) lt!54793)) (and (bvsge (index!3197 lt!54793) #b00000000000000000000000000000000) (bvslt (index!3197 lt!54793) (size!2306 (_keys!4286 newMap!16))))) (or ((_ is Undefined!262) lt!54793) ((_ is Found!262) lt!54793) (not ((_ is MissingZero!262) lt!54793)) (and (bvsge (index!3196 lt!54793) #b00000000000000000000000000000000) (bvslt (index!3196 lt!54793) (size!2306 (_keys!4286 newMap!16))))) (or ((_ is Undefined!262) lt!54793) ((_ is Found!262) lt!54793) ((_ is MissingZero!262) lt!54793) (not ((_ is MissingVacant!262) lt!54793)) (and (bvsge (index!3199 lt!54793) #b00000000000000000000000000000000) (bvslt (index!3199 lt!54793) (size!2306 (_keys!4286 newMap!16))))) (or ((_ is Undefined!262) lt!54793) (ite ((_ is Found!262) lt!54793) (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!54793)) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!262) lt!54793) (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3196 lt!54793)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!262) lt!54793) (= (select (arr!2050 (_keys!4286 newMap!16)) (index!3199 lt!54793)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!69630 () SeekEntryResult!262)

(assert (=> d!29611 (= lt!54793 e!69630)))

(declare-fun c!18775 () Bool)

(declare-fun lt!54791 () SeekEntryResult!262)

(assert (=> d!29611 (= c!18775 (and ((_ is Intermediate!262) lt!54791) (undefined!1074 lt!54791)))))

(assert (=> d!29611 (= lt!54791 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) (mask!6726 newMap!16)) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(assert (=> d!29611 (validMask!0 (mask!6726 newMap!16))))

(assert (=> d!29611 (= (seekEntryOrOpen!0 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) (_keys!4286 newMap!16) (mask!6726 newMap!16)) lt!54793)))

(declare-fun b!107040 () Bool)

(declare-fun e!69629 () SeekEntryResult!262)

(assert (=> b!107040 (= e!69629 (seekKeyOrZeroReturnVacant!0 (x!13647 lt!54791) (index!3198 lt!54791) (index!3198 lt!54791) (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000) (_keys!4286 newMap!16) (mask!6726 newMap!16)))))

(declare-fun b!107041 () Bool)

(declare-fun e!69631 () SeekEntryResult!262)

(assert (=> b!107041 (= e!69631 (Found!262 (index!3198 lt!54791)))))

(declare-fun b!107042 () Bool)

(assert (=> b!107042 (= e!69630 e!69631)))

(declare-fun lt!54792 () (_ BitVec 64))

(assert (=> b!107042 (= lt!54792 (select (arr!2050 (_keys!4286 newMap!16)) (index!3198 lt!54791)))))

(declare-fun c!18777 () Bool)

(assert (=> b!107042 (= c!18777 (= lt!54792 (select (arr!2050 (_keys!4286 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107043 () Bool)

(assert (=> b!107043 (= e!69630 Undefined!262)))

(declare-fun b!107044 () Bool)

(assert (=> b!107044 (= e!69629 (MissingZero!262 (index!3198 lt!54791)))))

(declare-fun b!107045 () Bool)

(declare-fun c!18776 () Bool)

(assert (=> b!107045 (= c!18776 (= lt!54792 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107045 (= e!69631 e!69629)))

(assert (= (and d!29611 c!18775) b!107043))

(assert (= (and d!29611 (not c!18775)) b!107042))

(assert (= (and b!107042 c!18777) b!107041))

(assert (= (and b!107042 (not c!18777)) b!107045))

(assert (= (and b!107045 c!18776) b!107044))

(assert (= (and b!107045 (not c!18776)) b!107040))

(declare-fun m!119995 () Bool)

(assert (=> d!29611 m!119995))

(assert (=> d!29611 m!117265))

(declare-fun m!119997 () Bool)

(assert (=> d!29611 m!119997))

(declare-fun m!119999 () Bool)

(assert (=> d!29611 m!119999))

(assert (=> d!29611 m!117277))

(declare-fun m!120001 () Bool)

(assert (=> d!29611 m!120001))

(assert (=> d!29611 m!119997))

(assert (=> d!29611 m!117265))

(declare-fun m!120003 () Bool)

(assert (=> d!29611 m!120003))

(assert (=> b!107040 m!117265))

(declare-fun m!120005 () Bool)

(assert (=> b!107040 m!120005))

(declare-fun m!120007 () Bool)

(assert (=> b!107042 m!120007))

(assert (=> b!105722 d!29611))

(declare-fun b!107048 () Bool)

(declare-fun e!69633 () Option!160)

(assert (=> b!107048 (= e!69633 (getValueByKey!154 (t!5690 (t!5690 (toList!787 lt!53712))) (_1!1201 lt!53599)))))

(declare-fun b!107047 () Bool)

(declare-fun e!69632 () Option!160)

(assert (=> b!107047 (= e!69632 e!69633)))

(declare-fun c!18779 () Bool)

(assert (=> b!107047 (= c!18779 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53712))) (not (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53712)))) (_1!1201 lt!53599)))))))

(declare-fun d!29613 () Bool)

(declare-fun c!18778 () Bool)

(assert (=> d!29613 (= c!18778 (and ((_ is Cons!1612) (t!5690 (toList!787 lt!53712))) (= (_1!1201 (h!2209 (t!5690 (toList!787 lt!53712)))) (_1!1201 lt!53599))))))

(assert (=> d!29613 (= (getValueByKey!154 (t!5690 (toList!787 lt!53712)) (_1!1201 lt!53599)) e!69632)))

(declare-fun b!107049 () Bool)

(assert (=> b!107049 (= e!69633 None!158)))

(declare-fun b!107046 () Bool)

(assert (=> b!107046 (= e!69632 (Some!159 (_2!1201 (h!2209 (t!5690 (toList!787 lt!53712))))))))

(assert (= (and d!29613 c!18778) b!107046))

(assert (= (and d!29613 (not c!18778)) b!107047))

(assert (= (and b!107047 c!18779) b!107048))

(assert (= (and b!107047 (not c!18779)) b!107049))

(declare-fun m!120009 () Bool)

(assert (=> b!107048 m!120009))

(assert (=> b!105866 d!29613))

(declare-fun d!29615 () Bool)

(assert (=> d!29615 (= (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53888)) (v!2889 (getValueByKey!154 (toList!787 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53888)))))

(assert (=> d!28753 d!29615))

(declare-fun e!69635 () Option!160)

(declare-fun b!107052 () Bool)

(assert (=> b!107052 (= e!69635 (getValueByKey!154 (t!5690 (toList!787 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) lt!53888))))

(declare-fun b!107051 () Bool)

(declare-fun e!69634 () Option!160)

(assert (=> b!107051 (= e!69634 e!69635)))

(declare-fun c!18781 () Bool)

(assert (=> b!107051 (= c!18781 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) (not (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53888))))))

(declare-fun c!18780 () Bool)

(declare-fun d!29617 () Bool)

(assert (=> d!29617 (= c!18780 (and ((_ is Cons!1612) (toList!787 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))) (= (_1!1201 (h!2209 (toList!787 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))) lt!53888)))))

(assert (=> d!29617 (= (getValueByKey!154 (toList!787 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) lt!53888) e!69634)))

(declare-fun b!107053 () Bool)

(assert (=> b!107053 (= e!69635 None!158)))

(declare-fun b!107050 () Bool)

(assert (=> b!107050 (= e!69634 (Some!159 (_2!1201 (h!2209 (toList!787 (+!135 lt!53884 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))))

(assert (= (and d!29617 c!18780) b!107050))

(assert (= (and d!29617 (not c!18780)) b!107051))

(assert (= (and b!107051 c!18781) b!107052))

(assert (= (and b!107051 (not c!18781)) b!107053))

(declare-fun m!120011 () Bool)

(assert (=> b!107052 m!120011))

(assert (=> d!28753 d!29617))

(declare-fun c!18784 () Bool)

(declare-fun b!107054 () Bool)

(assert (=> b!107054 (= c!18784 (and ((_ is Cons!1612) (t!5690 (toList!787 (+!135 lt!53604 lt!53599)))) (bvsgt (_1!1201 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53599))))) (_1!1201 lt!53606))))))

(declare-fun e!69639 () List!1616)

(declare-fun e!69638 () List!1616)

(assert (=> b!107054 (= e!69639 e!69638)))

(declare-fun b!107055 () Bool)

(declare-fun e!69637 () List!1616)

(declare-fun call!11318 () List!1616)

(assert (=> b!107055 (= e!69637 call!11318)))

(declare-fun b!107056 () Bool)

(declare-fun e!69640 () Bool)

(declare-fun lt!54794 () List!1616)

(assert (=> b!107056 (= e!69640 (contains!821 lt!54794 (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606))))))

(declare-fun b!107057 () Bool)

(declare-fun res!53164 () Bool)

(assert (=> b!107057 (=> (not res!53164) (not e!69640))))

(assert (=> b!107057 (= res!53164 (containsKey!158 lt!54794 (_1!1201 lt!53606)))))

(declare-fun b!107058 () Bool)

(declare-fun call!11319 () List!1616)

(assert (=> b!107058 (= e!69638 call!11319)))

(declare-fun b!107059 () Bool)

(assert (=> b!107059 (= e!69638 call!11319)))

(declare-fun b!107060 () Bool)

(assert (=> b!107060 (= e!69637 e!69639)))

(declare-fun c!18785 () Bool)

(assert (=> b!107060 (= c!18785 (and ((_ is Cons!1612) (t!5690 (toList!787 (+!135 lt!53604 lt!53599)))) (= (_1!1201 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53599))))) (_1!1201 lt!53606))))))

(declare-fun bm!11315 () Bool)

(declare-fun call!11320 () List!1616)

(assert (=> bm!11315 (= call!11320 call!11318)))

(declare-fun b!107061 () Bool)

(assert (=> b!107061 (= e!69639 call!11320)))

(declare-fun e!69636 () List!1616)

(declare-fun b!107062 () Bool)

(assert (=> b!107062 (= e!69636 (insertStrictlySorted!76 (t!5690 (t!5690 (toList!787 (+!135 lt!53604 lt!53599)))) (_1!1201 lt!53606) (_2!1201 lt!53606)))))

(declare-fun bm!11317 () Bool)

(assert (=> bm!11317 (= call!11319 call!11320)))

(declare-fun b!107063 () Bool)

(assert (=> b!107063 (= e!69636 (ite c!18785 (t!5690 (t!5690 (toList!787 (+!135 lt!53604 lt!53599)))) (ite c!18784 (Cons!1612 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53599)))) (t!5690 (t!5690 (toList!787 (+!135 lt!53604 lt!53599))))) Nil!1613)))))

(declare-fun bm!11316 () Bool)

(declare-fun c!18782 () Bool)

(assert (=> bm!11316 (= call!11318 ($colon$colon!80 e!69636 (ite c!18782 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53599)))) (tuple2!2381 (_1!1201 lt!53606) (_2!1201 lt!53606)))))))

(declare-fun c!18783 () Bool)

(assert (=> bm!11316 (= c!18783 c!18782)))

(declare-fun d!29619 () Bool)

(assert (=> d!29619 e!69640))

(declare-fun res!53165 () Bool)

(assert (=> d!29619 (=> (not res!53165) (not e!69640))))

(assert (=> d!29619 (= res!53165 (isStrictlySorted!304 lt!54794))))

(assert (=> d!29619 (= lt!54794 e!69637)))

(assert (=> d!29619 (= c!18782 (and ((_ is Cons!1612) (t!5690 (toList!787 (+!135 lt!53604 lt!53599)))) (bvslt (_1!1201 (h!2209 (t!5690 (toList!787 (+!135 lt!53604 lt!53599))))) (_1!1201 lt!53606))))))

(assert (=> d!29619 (isStrictlySorted!304 (t!5690 (toList!787 (+!135 lt!53604 lt!53599))))))

(assert (=> d!29619 (= (insertStrictlySorted!76 (t!5690 (toList!787 (+!135 lt!53604 lt!53599))) (_1!1201 lt!53606) (_2!1201 lt!53606)) lt!54794)))

(assert (= (and d!29619 c!18782) b!107055))

(assert (= (and d!29619 (not c!18782)) b!107060))

(assert (= (and b!107060 c!18785) b!107061))

(assert (= (and b!107060 (not c!18785)) b!107054))

(assert (= (and b!107054 c!18784) b!107058))

(assert (= (and b!107054 (not c!18784)) b!107059))

(assert (= (or b!107058 b!107059) bm!11317))

(assert (= (or b!107061 bm!11317) bm!11315))

(assert (= (or b!107055 bm!11315) bm!11316))

(assert (= (and bm!11316 c!18783) b!107062))

(assert (= (and bm!11316 (not c!18783)) b!107063))

(assert (= (and d!29619 res!53165) b!107057))

(assert (= (and b!107057 res!53164) b!107056))

(declare-fun m!120013 () Bool)

(assert (=> b!107056 m!120013))

(declare-fun m!120015 () Bool)

(assert (=> d!29619 m!120015))

(assert (=> d!29619 m!118405))

(declare-fun m!120017 () Bool)

(assert (=> b!107057 m!120017))

(declare-fun m!120019 () Bool)

(assert (=> b!107062 m!120019))

(declare-fun m!120021 () Bool)

(assert (=> bm!11316 m!120021))

(assert (=> b!105956 d!29619))

(declare-fun b!107066 () Bool)

(declare-fun e!69642 () Option!160)

(assert (=> b!107066 (= e!69642 (getValueByKey!154 (t!5690 (toList!787 lt!54031)) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))

(declare-fun b!107065 () Bool)

(declare-fun e!69641 () Option!160)

(assert (=> b!107065 (= e!69641 e!69642)))

(declare-fun c!18787 () Bool)

(assert (=> b!107065 (= c!18787 (and ((_ is Cons!1612) (toList!787 lt!54031)) (not (= (_1!1201 (h!2209 (toList!787 lt!54031))) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))))))))

(declare-fun c!18786 () Bool)

(declare-fun d!29621 () Bool)

(assert (=> d!29621 (= c!18786 (and ((_ is Cons!1612) (toList!787 lt!54031)) (= (_1!1201 (h!2209 (toList!787 lt!54031))) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))))

(assert (=> d!29621 (= (getValueByKey!154 (toList!787 lt!54031) (_1!1201 (tuple2!2381 lt!53874 (minValue!2456 (v!2883 (underlying!355 thiss!992)))))) e!69641)))

(declare-fun b!107067 () Bool)

(assert (=> b!107067 (= e!69642 None!158)))

(declare-fun b!107064 () Bool)

(assert (=> b!107064 (= e!69641 (Some!159 (_2!1201 (h!2209 (toList!787 lt!54031)))))))

(assert (= (and d!29621 c!18786) b!107064))

(assert (= (and d!29621 (not c!18786)) b!107065))

(assert (= (and b!107065 c!18787) b!107066))

(assert (= (and b!107065 (not c!18787)) b!107067))

(declare-fun m!120023 () Bool)

(assert (=> b!107066 m!120023))

(assert (=> b!105665 d!29621))

(assert (=> b!105710 d!29127))

(declare-fun d!29623 () Bool)

(assert (=> d!29623 (contains!820 (getCurrentListMap!464 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2581 newMap!16)) (select (arr!2050 (_keys!4286 newMap!16)) (index!3197 lt!53814)))))

(assert (=> d!29623 true))

(declare-fun _$16!126 () Unit!3218)

(assert (=> d!29623 (= (choose!662 (_keys!4286 newMap!16) lt!53795 (mask!6726 newMap!16) (extraKeys!2386 newMap!16) (zeroValue!2456 newMap!16) (minValue!2456 newMap!16) (index!3197 lt!53814) (defaultEntry!2581 newMap!16)) _$16!126)))

(declare-fun bs!4393 () Bool)

(assert (= bs!4393 d!29623))

(assert (=> bs!4393 m!117423))

(assert (=> bs!4393 m!117171))

(assert (=> bs!4393 m!117423))

(assert (=> bs!4393 m!117171))

(assert (=> bs!4393 m!117425))

(assert (=> d!28729 d!29623))

(assert (=> d!28729 d!29133))

(declare-fun d!29625 () Bool)

(declare-fun e!69643 () Bool)

(assert (=> d!29625 e!69643))

(declare-fun res!53167 () Bool)

(assert (=> d!29625 (=> (not res!53167) (not e!69643))))

(declare-fun lt!54798 () ListLongMap!1543)

(assert (=> d!29625 (= res!53167 (contains!820 lt!54798 (_1!1201 (tuple2!2381 lt!53936 (minValue!2456 newMap!16)))))))

(declare-fun lt!54795 () List!1616)

(assert (=> d!29625 (= lt!54798 (ListLongMap!1544 lt!54795))))

(declare-fun lt!54796 () Unit!3218)

(declare-fun lt!54797 () Unit!3218)

(assert (=> d!29625 (= lt!54796 lt!54797)))

(assert (=> d!29625 (= (getValueByKey!154 lt!54795 (_1!1201 (tuple2!2381 lt!53936 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53936 (minValue!2456 newMap!16)))))))

(assert (=> d!29625 (= lt!54797 (lemmaContainsTupThenGetReturnValue!73 lt!54795 (_1!1201 (tuple2!2381 lt!53936 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53936 (minValue!2456 newMap!16)))))))

(assert (=> d!29625 (= lt!54795 (insertStrictlySorted!76 (toList!787 lt!53946) (_1!1201 (tuple2!2381 lt!53936 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53936 (minValue!2456 newMap!16)))))))

(assert (=> d!29625 (= (+!135 lt!53946 (tuple2!2381 lt!53936 (minValue!2456 newMap!16))) lt!54798)))

(declare-fun b!107068 () Bool)

(declare-fun res!53166 () Bool)

(assert (=> b!107068 (=> (not res!53166) (not e!69643))))

(assert (=> b!107068 (= res!53166 (= (getValueByKey!154 (toList!787 lt!54798) (_1!1201 (tuple2!2381 lt!53936 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53936 (minValue!2456 newMap!16))))))))

(declare-fun b!107069 () Bool)

(assert (=> b!107069 (= e!69643 (contains!821 (toList!787 lt!54798) (tuple2!2381 lt!53936 (minValue!2456 newMap!16))))))

(assert (= (and d!29625 res!53167) b!107068))

(assert (= (and b!107068 res!53166) b!107069))

(declare-fun m!120025 () Bool)

(assert (=> d!29625 m!120025))

(declare-fun m!120027 () Bool)

(assert (=> d!29625 m!120027))

(declare-fun m!120029 () Bool)

(assert (=> d!29625 m!120029))

(declare-fun m!120031 () Bool)

(assert (=> d!29625 m!120031))

(declare-fun m!120033 () Bool)

(assert (=> b!107068 m!120033))

(declare-fun m!120035 () Bool)

(assert (=> b!107069 m!120035))

(assert (=> b!105592 d!29625))

(declare-fun d!29627 () Bool)

(assert (=> d!29627 (= (apply!98 (+!135 lt!53957 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16))) lt!53956) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53957 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16)))) lt!53956)))))

(declare-fun bs!4394 () Bool)

(assert (= bs!4394 d!29627))

(declare-fun m!120037 () Bool)

(assert (=> bs!4394 m!120037))

(assert (=> bs!4394 m!120037))

(declare-fun m!120039 () Bool)

(assert (=> bs!4394 m!120039))

(assert (=> b!105592 d!29627))

(declare-fun d!29629 () Bool)

(assert (=> d!29629 (contains!820 (+!135 lt!53941 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16))) lt!53945)))

(declare-fun lt!54799 () Unit!3218)

(assert (=> d!29629 (= lt!54799 (choose!665 lt!53941 lt!53952 (zeroValue!2456 newMap!16) lt!53945))))

(assert (=> d!29629 (contains!820 lt!53941 lt!53945)))

(assert (=> d!29629 (= (addStillContains!74 lt!53941 lt!53952 (zeroValue!2456 newMap!16) lt!53945) lt!54799)))

(declare-fun bs!4395 () Bool)

(assert (= bs!4395 d!29629))

(assert (=> bs!4395 m!117387))

(assert (=> bs!4395 m!117387))

(assert (=> bs!4395 m!117389))

(declare-fun m!120041 () Bool)

(assert (=> bs!4395 m!120041))

(declare-fun m!120043 () Bool)

(assert (=> bs!4395 m!120043))

(assert (=> b!105592 d!29629))

(declare-fun d!29631 () Bool)

(declare-fun e!69644 () Bool)

(assert (=> d!29631 e!69644))

(declare-fun res!53169 () Bool)

(assert (=> d!29631 (=> (not res!53169) (not e!69644))))

(declare-fun lt!54803 () ListLongMap!1543)

(assert (=> d!29631 (= res!53169 (contains!820 lt!54803 (_1!1201 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16)))))))

(declare-fun lt!54800 () List!1616)

(assert (=> d!29631 (= lt!54803 (ListLongMap!1544 lt!54800))))

(declare-fun lt!54801 () Unit!3218)

(declare-fun lt!54802 () Unit!3218)

(assert (=> d!29631 (= lt!54801 lt!54802)))

(assert (=> d!29631 (= (getValueByKey!154 lt!54800 (_1!1201 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29631 (= lt!54802 (lemmaContainsTupThenGetReturnValue!73 lt!54800 (_1!1201 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29631 (= lt!54800 (insertStrictlySorted!76 (toList!787 lt!53941) (_1!1201 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29631 (= (+!135 lt!53941 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16))) lt!54803)))

(declare-fun b!107070 () Bool)

(declare-fun res!53168 () Bool)

(assert (=> b!107070 (=> (not res!53168) (not e!69644))))

(assert (=> b!107070 (= res!53168 (= (getValueByKey!154 (toList!787 lt!54803) (_1!1201 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16))))))))

(declare-fun b!107071 () Bool)

(assert (=> b!107071 (= e!69644 (contains!821 (toList!787 lt!54803) (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16))))))

(assert (= (and d!29631 res!53169) b!107070))

(assert (= (and b!107070 res!53168) b!107071))

(declare-fun m!120045 () Bool)

(assert (=> d!29631 m!120045))

(declare-fun m!120047 () Bool)

(assert (=> d!29631 m!120047))

(declare-fun m!120049 () Bool)

(assert (=> d!29631 m!120049))

(declare-fun m!120051 () Bool)

(assert (=> d!29631 m!120051))

(declare-fun m!120053 () Bool)

(assert (=> b!107070 m!120053))

(declare-fun m!120055 () Bool)

(assert (=> b!107071 m!120055))

(assert (=> b!105592 d!29631))

(declare-fun d!29633 () Bool)

(assert (=> d!29633 (= (apply!98 (+!135 lt!53946 (tuple2!2381 lt!53936 (minValue!2456 newMap!16))) lt!53950) (apply!98 lt!53946 lt!53950))))

(declare-fun lt!54804 () Unit!3218)

(assert (=> d!29633 (= lt!54804 (choose!664 lt!53946 lt!53936 (minValue!2456 newMap!16) lt!53950))))

(declare-fun e!69645 () Bool)

(assert (=> d!29633 e!69645))

(declare-fun res!53170 () Bool)

(assert (=> d!29633 (=> (not res!53170) (not e!69645))))

(assert (=> d!29633 (= res!53170 (contains!820 lt!53946 lt!53950))))

(assert (=> d!29633 (= (addApplyDifferent!74 lt!53946 lt!53936 (minValue!2456 newMap!16) lt!53950) lt!54804)))

(declare-fun b!107072 () Bool)

(assert (=> b!107072 (= e!69645 (not (= lt!53950 lt!53936)))))

(assert (= (and d!29633 res!53170) b!107072))

(declare-fun m!120057 () Bool)

(assert (=> d!29633 m!120057))

(assert (=> d!29633 m!117405))

(declare-fun m!120059 () Bool)

(assert (=> d!29633 m!120059))

(assert (=> d!29633 m!117381))

(assert (=> d!29633 m!117381))

(assert (=> d!29633 m!117383))

(assert (=> b!105592 d!29633))

(declare-fun d!29635 () Bool)

(assert (=> d!29635 (= (apply!98 (+!135 lt!53954 (tuple2!2381 lt!53953 (minValue!2456 newMap!16))) lt!53938) (apply!98 lt!53954 lt!53938))))

(declare-fun lt!54805 () Unit!3218)

(assert (=> d!29635 (= lt!54805 (choose!664 lt!53954 lt!53953 (minValue!2456 newMap!16) lt!53938))))

(declare-fun e!69646 () Bool)

(assert (=> d!29635 e!69646))

(declare-fun res!53171 () Bool)

(assert (=> d!29635 (=> (not res!53171) (not e!69646))))

(assert (=> d!29635 (= res!53171 (contains!820 lt!53954 lt!53938))))

(assert (=> d!29635 (= (addApplyDifferent!74 lt!53954 lt!53953 (minValue!2456 newMap!16) lt!53938) lt!54805)))

(declare-fun b!107073 () Bool)

(assert (=> b!107073 (= e!69646 (not (= lt!53938 lt!53953)))))

(assert (= (and d!29635 res!53171) b!107073))

(declare-fun m!120061 () Bool)

(assert (=> d!29635 m!120061))

(assert (=> d!29635 m!117407))

(declare-fun m!120063 () Bool)

(assert (=> d!29635 m!120063))

(assert (=> d!29635 m!117401))

(assert (=> d!29635 m!117401))

(assert (=> d!29635 m!117403))

(assert (=> b!105592 d!29635))

(declare-fun d!29637 () Bool)

(assert (=> d!29637 (= (apply!98 (+!135 lt!53946 (tuple2!2381 lt!53936 (minValue!2456 newMap!16))) lt!53950) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53946 (tuple2!2381 lt!53936 (minValue!2456 newMap!16)))) lt!53950)))))

(declare-fun bs!4396 () Bool)

(assert (= bs!4396 d!29637))

(declare-fun m!120065 () Bool)

(assert (=> bs!4396 m!120065))

(assert (=> bs!4396 m!120065))

(declare-fun m!120067 () Bool)

(assert (=> bs!4396 m!120067))

(assert (=> b!105592 d!29637))

(declare-fun d!29639 () Bool)

(assert (=> d!29639 (= (apply!98 lt!53946 lt!53950) (get!1335 (getValueByKey!154 (toList!787 lt!53946) lt!53950)))))

(declare-fun bs!4397 () Bool)

(assert (= bs!4397 d!29639))

(declare-fun m!120069 () Bool)

(assert (=> bs!4397 m!120069))

(assert (=> bs!4397 m!120069))

(declare-fun m!120071 () Bool)

(assert (=> bs!4397 m!120071))

(assert (=> b!105592 d!29639))

(assert (=> b!105592 d!28955))

(declare-fun d!29641 () Bool)

(declare-fun e!69647 () Bool)

(assert (=> d!29641 e!69647))

(declare-fun res!53173 () Bool)

(assert (=> d!29641 (=> (not res!53173) (not e!69647))))

(declare-fun lt!54809 () ListLongMap!1543)

(assert (=> d!29641 (= res!53173 (contains!820 lt!54809 (_1!1201 (tuple2!2381 lt!53953 (minValue!2456 newMap!16)))))))

(declare-fun lt!54806 () List!1616)

(assert (=> d!29641 (= lt!54809 (ListLongMap!1544 lt!54806))))

(declare-fun lt!54807 () Unit!3218)

(declare-fun lt!54808 () Unit!3218)

(assert (=> d!29641 (= lt!54807 lt!54808)))

(assert (=> d!29641 (= (getValueByKey!154 lt!54806 (_1!1201 (tuple2!2381 lt!53953 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53953 (minValue!2456 newMap!16)))))))

(assert (=> d!29641 (= lt!54808 (lemmaContainsTupThenGetReturnValue!73 lt!54806 (_1!1201 (tuple2!2381 lt!53953 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53953 (minValue!2456 newMap!16)))))))

(assert (=> d!29641 (= lt!54806 (insertStrictlySorted!76 (toList!787 lt!53954) (_1!1201 (tuple2!2381 lt!53953 (minValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53953 (minValue!2456 newMap!16)))))))

(assert (=> d!29641 (= (+!135 lt!53954 (tuple2!2381 lt!53953 (minValue!2456 newMap!16))) lt!54809)))

(declare-fun b!107074 () Bool)

(declare-fun res!53172 () Bool)

(assert (=> b!107074 (=> (not res!53172) (not e!69647))))

(assert (=> b!107074 (= res!53172 (= (getValueByKey!154 (toList!787 lt!54809) (_1!1201 (tuple2!2381 lt!53953 (minValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53953 (minValue!2456 newMap!16))))))))

(declare-fun b!107075 () Bool)

(assert (=> b!107075 (= e!69647 (contains!821 (toList!787 lt!54809) (tuple2!2381 lt!53953 (minValue!2456 newMap!16))))))

(assert (= (and d!29641 res!53173) b!107074))

(assert (= (and b!107074 res!53172) b!107075))

(declare-fun m!120073 () Bool)

(assert (=> d!29641 m!120073))

(declare-fun m!120075 () Bool)

(assert (=> d!29641 m!120075))

(declare-fun m!120077 () Bool)

(assert (=> d!29641 m!120077))

(declare-fun m!120079 () Bool)

(assert (=> d!29641 m!120079))

(declare-fun m!120081 () Bool)

(assert (=> b!107074 m!120081))

(declare-fun m!120083 () Bool)

(assert (=> b!107075 m!120083))

(assert (=> b!105592 d!29641))

(declare-fun d!29643 () Bool)

(assert (=> d!29643 (= (apply!98 (+!135 lt!53954 (tuple2!2381 lt!53953 (minValue!2456 newMap!16))) lt!53938) (get!1335 (getValueByKey!154 (toList!787 (+!135 lt!53954 (tuple2!2381 lt!53953 (minValue!2456 newMap!16)))) lt!53938)))))

(declare-fun bs!4398 () Bool)

(assert (= bs!4398 d!29643))

(declare-fun m!120085 () Bool)

(assert (=> bs!4398 m!120085))

(assert (=> bs!4398 m!120085))

(declare-fun m!120087 () Bool)

(assert (=> bs!4398 m!120087))

(assert (=> b!105592 d!29643))

(declare-fun d!29645 () Bool)

(declare-fun e!69648 () Bool)

(assert (=> d!29645 e!69648))

(declare-fun res!53174 () Bool)

(assert (=> d!29645 (=> res!53174 e!69648)))

(declare-fun lt!54810 () Bool)

(assert (=> d!29645 (= res!53174 (not lt!54810))))

(declare-fun lt!54813 () Bool)

(assert (=> d!29645 (= lt!54810 lt!54813)))

(declare-fun lt!54812 () Unit!3218)

(declare-fun e!69649 () Unit!3218)

(assert (=> d!29645 (= lt!54812 e!69649)))

(declare-fun c!18788 () Bool)

(assert (=> d!29645 (= c!18788 lt!54813)))

(assert (=> d!29645 (= lt!54813 (containsKey!158 (toList!787 (+!135 lt!53941 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16)))) lt!53945))))

(assert (=> d!29645 (= (contains!820 (+!135 lt!53941 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16))) lt!53945) lt!54810)))

(declare-fun b!107076 () Bool)

(declare-fun lt!54811 () Unit!3218)

(assert (=> b!107076 (= e!69649 lt!54811)))

(assert (=> b!107076 (= lt!54811 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 (+!135 lt!53941 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16)))) lt!53945))))

(assert (=> b!107076 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53941 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16)))) lt!53945))))

(declare-fun b!107077 () Bool)

(declare-fun Unit!3297 () Unit!3218)

(assert (=> b!107077 (= e!69649 Unit!3297)))

(declare-fun b!107078 () Bool)

(assert (=> b!107078 (= e!69648 (isDefined!108 (getValueByKey!154 (toList!787 (+!135 lt!53941 (tuple2!2381 lt!53952 (zeroValue!2456 newMap!16)))) lt!53945)))))

(assert (= (and d!29645 c!18788) b!107076))

(assert (= (and d!29645 (not c!18788)) b!107077))

(assert (= (and d!29645 (not res!53174)) b!107078))

(declare-fun m!120089 () Bool)

(assert (=> d!29645 m!120089))

(declare-fun m!120091 () Bool)

(assert (=> b!107076 m!120091))

(declare-fun m!120093 () Bool)

(assert (=> b!107076 m!120093))

(assert (=> b!107076 m!120093))

(declare-fun m!120095 () Bool)

(assert (=> b!107076 m!120095))

(assert (=> b!107078 m!120093))

(assert (=> b!107078 m!120093))

(assert (=> b!107078 m!120095))

(assert (=> b!105592 d!29645))

(declare-fun d!29647 () Bool)

(declare-fun e!69650 () Bool)

(assert (=> d!29647 e!69650))

(declare-fun res!53176 () Bool)

(assert (=> d!29647 (=> (not res!53176) (not e!69650))))

(declare-fun lt!54817 () ListLongMap!1543)

(assert (=> d!29647 (= res!53176 (contains!820 lt!54817 (_1!1201 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16)))))))

(declare-fun lt!54814 () List!1616)

(assert (=> d!29647 (= lt!54817 (ListLongMap!1544 lt!54814))))

(declare-fun lt!54815 () Unit!3218)

(declare-fun lt!54816 () Unit!3218)

(assert (=> d!29647 (= lt!54815 lt!54816)))

(assert (=> d!29647 (= (getValueByKey!154 lt!54814 (_1!1201 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29647 (= lt!54816 (lemmaContainsTupThenGetReturnValue!73 lt!54814 (_1!1201 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29647 (= lt!54814 (insertStrictlySorted!76 (toList!787 lt!53957) (_1!1201 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16))) (_2!1201 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16)))))))

(assert (=> d!29647 (= (+!135 lt!53957 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16))) lt!54817)))

(declare-fun b!107079 () Bool)

(declare-fun res!53175 () Bool)

(assert (=> b!107079 (=> (not res!53175) (not e!69650))))

(assert (=> b!107079 (= res!53175 (= (getValueByKey!154 (toList!787 lt!54817) (_1!1201 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16)))) (Some!159 (_2!1201 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16))))))))

(declare-fun b!107080 () Bool)

(assert (=> b!107080 (= e!69650 (contains!821 (toList!787 lt!54817) (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16))))))

(assert (= (and d!29647 res!53176) b!107079))

(assert (= (and b!107079 res!53175) b!107080))

(declare-fun m!120097 () Bool)

(assert (=> d!29647 m!120097))

(declare-fun m!120099 () Bool)

(assert (=> d!29647 m!120099))

(declare-fun m!120101 () Bool)

(assert (=> d!29647 m!120101))

(declare-fun m!120103 () Bool)

(assert (=> d!29647 m!120103))

(declare-fun m!120105 () Bool)

(assert (=> b!107079 m!120105))

(declare-fun m!120107 () Bool)

(assert (=> b!107080 m!120107))

(assert (=> b!105592 d!29647))

(declare-fun d!29649 () Bool)

(assert (=> d!29649 (= (apply!98 (+!135 lt!53957 (tuple2!2381 lt!53947 (zeroValue!2456 newMap!16))) lt!53956) (apply!98 lt!53957 lt!53956))))

(declare-fun lt!54818 () Unit!3218)

(assert (=> d!29649 (= lt!54818 (choose!664 lt!53957 lt!53947 (zeroValue!2456 newMap!16) lt!53956))))

(declare-fun e!69651 () Bool)

(assert (=> d!29649 e!69651))

(declare-fun res!53177 () Bool)

(assert (=> d!29649 (=> (not res!53177) (not e!69651))))

(assert (=> d!29649 (= res!53177 (contains!820 lt!53957 lt!53956))))

(assert (=> d!29649 (= (addApplyDifferent!74 lt!53957 lt!53947 (zeroValue!2456 newMap!16) lt!53956) lt!54818)))

(declare-fun b!107081 () Bool)

(assert (=> b!107081 (= e!69651 (not (= lt!53956 lt!53947)))))

(assert (= (and d!29649 res!53177) b!107081))

(declare-fun m!120109 () Bool)

(assert (=> d!29649 m!120109))

(assert (=> d!29649 m!117385))

(declare-fun m!120111 () Bool)

(assert (=> d!29649 m!120111))

(assert (=> d!29649 m!117391))

(assert (=> d!29649 m!117391))

(assert (=> d!29649 m!117393))

(assert (=> b!105592 d!29649))

(declare-fun d!29651 () Bool)

(assert (=> d!29651 (= (apply!98 lt!53954 lt!53938) (get!1335 (getValueByKey!154 (toList!787 lt!53954) lt!53938)))))

(declare-fun bs!4399 () Bool)

(assert (= bs!4399 d!29651))

(declare-fun m!120113 () Bool)

(assert (=> bs!4399 m!120113))

(assert (=> bs!4399 m!120113))

(declare-fun m!120115 () Bool)

(assert (=> bs!4399 m!120115))

(assert (=> b!105592 d!29651))

(declare-fun d!29653 () Bool)

(assert (=> d!29653 (= (apply!98 lt!53957 lt!53956) (get!1335 (getValueByKey!154 (toList!787 lt!53957) lt!53956)))))

(declare-fun bs!4400 () Bool)

(assert (= bs!4400 d!29653))

(declare-fun m!120117 () Bool)

(assert (=> bs!4400 m!120117))

(assert (=> bs!4400 m!120117))

(declare-fun m!120119 () Bool)

(assert (=> bs!4400 m!120119))

(assert (=> b!105592 d!29653))

(declare-fun d!29655 () Bool)

(declare-fun res!53178 () Bool)

(declare-fun e!69652 () Bool)

(assert (=> d!29655 (=> res!53178 e!69652)))

(assert (=> d!29655 (= res!53178 (and ((_ is Cons!1612) lt!53717) (= (_1!1201 (h!2209 lt!53717)) (_1!1201 lt!53606))))))

(assert (=> d!29655 (= (containsKey!158 lt!53717 (_1!1201 lt!53606)) e!69652)))

(declare-fun b!107082 () Bool)

(declare-fun e!69653 () Bool)

(assert (=> b!107082 (= e!69652 e!69653)))

(declare-fun res!53179 () Bool)

(assert (=> b!107082 (=> (not res!53179) (not e!69653))))

(assert (=> b!107082 (= res!53179 (and (or (not ((_ is Cons!1612) lt!53717)) (bvsle (_1!1201 (h!2209 lt!53717)) (_1!1201 lt!53606))) ((_ is Cons!1612) lt!53717) (bvslt (_1!1201 (h!2209 lt!53717)) (_1!1201 lt!53606))))))

(declare-fun b!107083 () Bool)

(assert (=> b!107083 (= e!69653 (containsKey!158 (t!5690 lt!53717) (_1!1201 lt!53606)))))

(assert (= (and d!29655 (not res!53178)) b!107082))

(assert (= (and b!107082 res!53179) b!107083))

(declare-fun m!120121 () Bool)

(assert (=> b!107083 m!120121))

(assert (=> b!105916 d!29655))

(declare-fun b!107084 () Bool)

(declare-fun e!69656 () Unit!3218)

(declare-fun Unit!3298 () Unit!3218)

(assert (=> b!107084 (= e!69656 Unit!3298)))

(declare-fun b!107085 () Bool)

(declare-fun e!69655 () ListLongMap!1543)

(declare-fun call!11325 () ListLongMap!1543)

(assert (=> b!107085 (= e!69655 call!11325)))

(declare-fun b!107086 () Bool)

(declare-fun e!69654 () Bool)

(declare-fun lt!54820 () ListLongMap!1543)

(assert (=> b!107086 (= e!69654 (= (apply!98 lt!54820 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2456 (_2!1202 lt!53812))))))

(declare-fun b!107087 () Bool)

(declare-fun c!18794 () Bool)

(assert (=> b!107087 (= c!18794 (and (not (= (bvand (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69658 () ListLongMap!1543)

(assert (=> b!107087 (= e!69658 e!69655)))

(declare-fun b!107088 () Bool)

(declare-fun e!69660 () Bool)

(declare-fun e!69663 () Bool)

(assert (=> b!107088 (= e!69660 e!69663)))

(declare-fun res!53188 () Bool)

(declare-fun call!11321 () Bool)

(assert (=> b!107088 (= res!53188 call!11321)))

(assert (=> b!107088 (=> (not res!53188) (not e!69663))))

(declare-fun bm!11318 () Bool)

(declare-fun call!11327 () ListLongMap!1543)

(declare-fun call!11326 () ListLongMap!1543)

(assert (=> bm!11318 (= call!11327 call!11326)))

(declare-fun b!107089 () Bool)

(declare-fun e!69659 () Bool)

(assert (=> b!107089 (= e!69659 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000)))))

(declare-fun b!107090 () Bool)

(declare-fun res!53187 () Bool)

(declare-fun e!69662 () Bool)

(assert (=> b!107090 (=> (not res!53187) (not e!69662))))

(declare-fun e!69665 () Bool)

(assert (=> b!107090 (= res!53187 e!69665)))

(declare-fun res!53182 () Bool)

(assert (=> b!107090 (=> res!53182 e!69665)))

(declare-fun e!69664 () Bool)

(assert (=> b!107090 (= res!53182 (not e!69664))))

(declare-fun res!53181 () Bool)

(assert (=> b!107090 (=> (not res!53181) (not e!69664))))

(assert (=> b!107090 (= res!53181 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))))))

(declare-fun bm!11319 () Bool)

(declare-fun call!11322 () ListLongMap!1543)

(assert (=> bm!11319 (= call!11325 call!11322)))

(declare-fun bm!11320 () Bool)

(declare-fun call!11323 () ListLongMap!1543)

(assert (=> bm!11320 (= call!11326 call!11323)))

(declare-fun b!107091 () Bool)

(declare-fun e!69666 () Bool)

(assert (=> b!107091 (= e!69666 (= (apply!98 lt!54820 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000)) (get!1331 (select (arr!2051 (_values!2564 (_2!1202 lt!53812))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2581 (_2!1202 lt!53812)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107091 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2307 (_values!2564 (_2!1202 lt!53812)))))))

(assert (=> b!107091 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))))))

(declare-fun b!107092 () Bool)

(declare-fun res!53184 () Bool)

(assert (=> b!107092 (=> (not res!53184) (not e!69662))))

(assert (=> b!107092 (= res!53184 e!69660)))

(declare-fun c!18793 () Bool)

(assert (=> b!107092 (= c!18793 (not (= (bvand (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!107093 () Bool)

(assert (=> b!107093 (= e!69658 call!11325)))

(declare-fun b!107094 () Bool)

(declare-fun e!69657 () Bool)

(declare-fun call!11324 () Bool)

(assert (=> b!107094 (= e!69657 (not call!11324))))

(declare-fun bm!11321 () Bool)

(assert (=> bm!11321 (= call!11323 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (_2!1202 lt!53812)) (_values!2564 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812)) (extraKeys!2386 (_2!1202 lt!53812)) (zeroValue!2456 (_2!1202 lt!53812)) (minValue!2456 (_2!1202 lt!53812)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1202 lt!53812))))))

(declare-fun b!107095 () Bool)

(assert (=> b!107095 (= e!69663 (= (apply!98 lt!54820 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2456 (_2!1202 lt!53812))))))

(declare-fun b!107096 () Bool)

(assert (=> b!107096 (= e!69655 call!11327)))

(declare-fun b!107097 () Bool)

(assert (=> b!107097 (= e!69657 e!69654)))

(declare-fun res!53186 () Bool)

(assert (=> b!107097 (= res!53186 call!11324)))

(assert (=> b!107097 (=> (not res!53186) (not e!69654))))

(declare-fun bm!11322 () Bool)

(declare-fun c!18789 () Bool)

(declare-fun c!18792 () Bool)

(assert (=> bm!11322 (= call!11322 (+!135 (ite c!18789 call!11323 (ite c!18792 call!11326 call!11327)) (ite (or c!18789 c!18792) (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2456 (_2!1202 lt!53812))) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (_2!1202 lt!53812))))))))

(declare-fun bm!11323 () Bool)

(assert (=> bm!11323 (= call!11324 (contains!820 lt!54820 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107098 () Bool)

(assert (=> b!107098 (= e!69664 (validKeyInArray!0 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000)))))

(declare-fun b!107099 () Bool)

(declare-fun e!69661 () ListLongMap!1543)

(assert (=> b!107099 (= e!69661 e!69658)))

(assert (=> b!107099 (= c!18792 (and (not (= (bvand (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!107100 () Bool)

(assert (=> b!107100 (= e!69660 (not call!11321))))

(declare-fun b!107101 () Bool)

(assert (=> b!107101 (= e!69662 e!69657)))

(declare-fun c!18790 () Bool)

(assert (=> b!107101 (= c!18790 (not (= (bvand (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!107102 () Bool)

(declare-fun lt!54822 () Unit!3218)

(assert (=> b!107102 (= e!69656 lt!54822)))

(declare-fun lt!54824 () ListLongMap!1543)

(assert (=> b!107102 (= lt!54824 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (_2!1202 lt!53812)) (_values!2564 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812)) (extraKeys!2386 (_2!1202 lt!53812)) (zeroValue!2456 (_2!1202 lt!53812)) (minValue!2456 (_2!1202 lt!53812)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1202 lt!53812))))))

(declare-fun lt!54835 () (_ BitVec 64))

(assert (=> b!107102 (= lt!54835 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54828 () (_ BitVec 64))

(assert (=> b!107102 (= lt!54828 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000))))

(declare-fun lt!54834 () Unit!3218)

(assert (=> b!107102 (= lt!54834 (addStillContains!74 lt!54824 lt!54835 (zeroValue!2456 (_2!1202 lt!53812)) lt!54828))))

(assert (=> b!107102 (contains!820 (+!135 lt!54824 (tuple2!2381 lt!54835 (zeroValue!2456 (_2!1202 lt!53812)))) lt!54828)))

(declare-fun lt!54831 () Unit!3218)

(assert (=> b!107102 (= lt!54831 lt!54834)))

(declare-fun lt!54837 () ListLongMap!1543)

(assert (=> b!107102 (= lt!54837 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (_2!1202 lt!53812)) (_values!2564 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812)) (extraKeys!2386 (_2!1202 lt!53812)) (zeroValue!2456 (_2!1202 lt!53812)) (minValue!2456 (_2!1202 lt!53812)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1202 lt!53812))))))

(declare-fun lt!54836 () (_ BitVec 64))

(assert (=> b!107102 (= lt!54836 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54821 () (_ BitVec 64))

(assert (=> b!107102 (= lt!54821 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000))))

(declare-fun lt!54825 () Unit!3218)

(assert (=> b!107102 (= lt!54825 (addApplyDifferent!74 lt!54837 lt!54836 (minValue!2456 (_2!1202 lt!53812)) lt!54821))))

(assert (=> b!107102 (= (apply!98 (+!135 lt!54837 (tuple2!2381 lt!54836 (minValue!2456 (_2!1202 lt!53812)))) lt!54821) (apply!98 lt!54837 lt!54821))))

(declare-fun lt!54826 () Unit!3218)

(assert (=> b!107102 (= lt!54826 lt!54825)))

(declare-fun lt!54840 () ListLongMap!1543)

(assert (=> b!107102 (= lt!54840 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (_2!1202 lt!53812)) (_values!2564 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812)) (extraKeys!2386 (_2!1202 lt!53812)) (zeroValue!2456 (_2!1202 lt!53812)) (minValue!2456 (_2!1202 lt!53812)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1202 lt!53812))))))

(declare-fun lt!54830 () (_ BitVec 64))

(assert (=> b!107102 (= lt!54830 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54839 () (_ BitVec 64))

(assert (=> b!107102 (= lt!54839 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000))))

(declare-fun lt!54823 () Unit!3218)

(assert (=> b!107102 (= lt!54823 (addApplyDifferent!74 lt!54840 lt!54830 (zeroValue!2456 (_2!1202 lt!53812)) lt!54839))))

(assert (=> b!107102 (= (apply!98 (+!135 lt!54840 (tuple2!2381 lt!54830 (zeroValue!2456 (_2!1202 lt!53812)))) lt!54839) (apply!98 lt!54840 lt!54839))))

(declare-fun lt!54827 () Unit!3218)

(assert (=> b!107102 (= lt!54827 lt!54823)))

(declare-fun lt!54829 () ListLongMap!1543)

(assert (=> b!107102 (= lt!54829 (getCurrentListMapNoExtraKeys!100 (_keys!4286 (_2!1202 lt!53812)) (_values!2564 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812)) (extraKeys!2386 (_2!1202 lt!53812)) (zeroValue!2456 (_2!1202 lt!53812)) (minValue!2456 (_2!1202 lt!53812)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1202 lt!53812))))))

(declare-fun lt!54819 () (_ BitVec 64))

(assert (=> b!107102 (= lt!54819 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54833 () (_ BitVec 64))

(assert (=> b!107102 (= lt!54833 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000))))

(assert (=> b!107102 (= lt!54822 (addApplyDifferent!74 lt!54829 lt!54819 (minValue!2456 (_2!1202 lt!53812)) lt!54833))))

(assert (=> b!107102 (= (apply!98 (+!135 lt!54829 (tuple2!2381 lt!54819 (minValue!2456 (_2!1202 lt!53812)))) lt!54833) (apply!98 lt!54829 lt!54833))))

(declare-fun b!107103 () Bool)

(assert (=> b!107103 (= e!69665 e!69666)))

(declare-fun res!53183 () Bool)

(assert (=> b!107103 (=> (not res!53183) (not e!69666))))

(assert (=> b!107103 (= res!53183 (contains!820 lt!54820 (select (arr!2050 (_keys!4286 (_2!1202 lt!53812))) #b00000000000000000000000000000000)))))

(assert (=> b!107103 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))))))

(declare-fun b!107104 () Bool)

(assert (=> b!107104 (= e!69661 (+!135 call!11322 (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2456 (_2!1202 lt!53812)))))))

(declare-fun d!29657 () Bool)

(assert (=> d!29657 e!69662))

(declare-fun res!53185 () Bool)

(assert (=> d!29657 (=> (not res!53185) (not e!69662))))

(assert (=> d!29657 (= res!53185 (or (bvsge #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))))))))

(declare-fun lt!54838 () ListLongMap!1543)

(assert (=> d!29657 (= lt!54820 lt!54838)))

(declare-fun lt!54832 () Unit!3218)

(assert (=> d!29657 (= lt!54832 e!69656)))

(declare-fun c!18791 () Bool)

(assert (=> d!29657 (= c!18791 e!69659)))

(declare-fun res!53180 () Bool)

(assert (=> d!29657 (=> (not res!53180) (not e!69659))))

(assert (=> d!29657 (= res!53180 (bvslt #b00000000000000000000000000000000 (size!2306 (_keys!4286 (_2!1202 lt!53812)))))))

(assert (=> d!29657 (= lt!54838 e!69661)))

(assert (=> d!29657 (= c!18789 (and (not (= (bvand (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29657 (validMask!0 (mask!6726 (_2!1202 lt!53812)))))

(assert (=> d!29657 (= (getCurrentListMap!464 (_keys!4286 (_2!1202 lt!53812)) (_values!2564 (_2!1202 lt!53812)) (mask!6726 (_2!1202 lt!53812)) (extraKeys!2386 (_2!1202 lt!53812)) (zeroValue!2456 (_2!1202 lt!53812)) (minValue!2456 (_2!1202 lt!53812)) #b00000000000000000000000000000000 (defaultEntry!2581 (_2!1202 lt!53812))) lt!54820)))

(declare-fun bm!11324 () Bool)

(assert (=> bm!11324 (= call!11321 (contains!820 lt!54820 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29657 c!18789) b!107104))

(assert (= (and d!29657 (not c!18789)) b!107099))

(assert (= (and b!107099 c!18792) b!107093))

(assert (= (and b!107099 (not c!18792)) b!107087))

(assert (= (and b!107087 c!18794) b!107085))

(assert (= (and b!107087 (not c!18794)) b!107096))

(assert (= (or b!107085 b!107096) bm!11318))

(assert (= (or b!107093 bm!11318) bm!11320))

(assert (= (or b!107093 b!107085) bm!11319))

(assert (= (or b!107104 bm!11320) bm!11321))

(assert (= (or b!107104 bm!11319) bm!11322))

(assert (= (and d!29657 res!53180) b!107089))

(assert (= (and d!29657 c!18791) b!107102))

(assert (= (and d!29657 (not c!18791)) b!107084))

(assert (= (and d!29657 res!53185) b!107090))

(assert (= (and b!107090 res!53181) b!107098))

(assert (= (and b!107090 (not res!53182)) b!107103))

(assert (= (and b!107103 res!53183) b!107091))

(assert (= (and b!107090 res!53187) b!107092))

(assert (= (and b!107092 c!18793) b!107088))

(assert (= (and b!107092 (not c!18793)) b!107100))

(assert (= (and b!107088 res!53188) b!107095))

(assert (= (or b!107088 b!107100) bm!11324))

(assert (= (and b!107092 res!53184) b!107101))

(assert (= (and b!107101 c!18790) b!107097))

(assert (= (and b!107101 (not c!18790)) b!107094))

(assert (= (and b!107097 res!53186) b!107086))

(assert (= (or b!107097 b!107094) bm!11323))

(declare-fun b_lambda!4759 () Bool)

(assert (=> (not b_lambda!4759) (not b!107091)))

(declare-fun t!5706 () Bool)

(declare-fun tb!2057 () Bool)

(assert (=> (and b!105054 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 (_2!1202 lt!53812))) t!5706) tb!2057))

(declare-fun result!3463 () Bool)

(assert (=> tb!2057 (= result!3463 tp_is_empty!2677)))

(assert (=> b!107091 t!5706))

(declare-fun b_and!6581 () Bool)

(assert (= b_and!6577 (and (=> t!5706 result!3463) b_and!6581)))

(declare-fun t!5708 () Bool)

(declare-fun tb!2059 () Bool)

(assert (=> (and b!105064 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (_2!1202 lt!53812))) t!5708) tb!2059))

(declare-fun result!3465 () Bool)

(assert (= result!3465 result!3463))

(assert (=> b!107091 t!5708))

(declare-fun b_and!6583 () Bool)

(assert (= b_and!6579 (and (=> t!5708 result!3465) b_and!6583)))

(declare-fun m!120123 () Bool)

(assert (=> bm!11323 m!120123))

(declare-fun m!120125 () Bool)

(assert (=> b!107104 m!120125))

(declare-fun m!120127 () Bool)

(assert (=> b!107091 m!120127))

(assert (=> b!107091 m!118373))

(declare-fun m!120129 () Bool)

(assert (=> b!107091 m!120129))

(assert (=> b!107091 m!118373))

(declare-fun m!120131 () Bool)

(assert (=> b!107091 m!120131))

(assert (=> b!107091 m!120131))

(assert (=> b!107091 m!120127))

(declare-fun m!120133 () Bool)

(assert (=> b!107091 m!120133))

(declare-fun m!120135 () Bool)

(assert (=> bm!11321 m!120135))

(declare-fun m!120137 () Bool)

(assert (=> bm!11324 m!120137))

(assert (=> b!107089 m!118373))

(assert (=> b!107089 m!118373))

(assert (=> b!107089 m!118375))

(declare-fun m!120139 () Bool)

(assert (=> b!107095 m!120139))

(assert (=> b!107103 m!118373))

(assert (=> b!107103 m!118373))

(declare-fun m!120141 () Bool)

(assert (=> b!107103 m!120141))

(declare-fun m!120143 () Bool)

(assert (=> b!107102 m!120143))

(declare-fun m!120145 () Bool)

(assert (=> b!107102 m!120145))

(declare-fun m!120147 () Bool)

(assert (=> b!107102 m!120147))

(declare-fun m!120149 () Bool)

(assert (=> b!107102 m!120149))

(declare-fun m!120151 () Bool)

(assert (=> b!107102 m!120151))

(declare-fun m!120153 () Bool)

(assert (=> b!107102 m!120153))

(declare-fun m!120155 () Bool)

(assert (=> b!107102 m!120155))

(declare-fun m!120157 () Bool)

(assert (=> b!107102 m!120157))

(declare-fun m!120159 () Bool)

(assert (=> b!107102 m!120159))

(declare-fun m!120161 () Bool)

(assert (=> b!107102 m!120161))

(assert (=> b!107102 m!120135))

(declare-fun m!120163 () Bool)

(assert (=> b!107102 m!120163))

(declare-fun m!120165 () Bool)

(assert (=> b!107102 m!120165))

(assert (=> b!107102 m!120165))

(declare-fun m!120167 () Bool)

(assert (=> b!107102 m!120167))

(declare-fun m!120169 () Bool)

(assert (=> b!107102 m!120169))

(assert (=> b!107102 m!120151))

(assert (=> b!107102 m!120155))

(declare-fun m!120171 () Bool)

(assert (=> b!107102 m!120171))

(assert (=> b!107102 m!118373))

(assert (=> b!107102 m!120145))

(declare-fun m!120173 () Bool)

(assert (=> bm!11322 m!120173))

(declare-fun m!120175 () Bool)

(assert (=> b!107086 m!120175))

(declare-fun m!120177 () Bool)

(assert (=> d!29657 m!120177))

(assert (=> b!107098 m!118373))

(assert (=> b!107098 m!118373))

(assert (=> b!107098 m!118375))

(assert (=> d!28851 d!29657))

(declare-fun b!107106 () Bool)

(declare-fun res!53191 () Bool)

(declare-fun e!69667 () Bool)

(assert (=> b!107106 (=> (not res!53191) (not e!69667))))

(assert (=> b!107106 (= res!53191 (bvsge (size!2312 (_2!1202 lt!53812)) (_size!498 (_2!1202 lt!53812))))))

(declare-fun b!107107 () Bool)

(declare-fun res!53192 () Bool)

(assert (=> b!107107 (=> (not res!53192) (not e!69667))))

(assert (=> b!107107 (= res!53192 (= (size!2312 (_2!1202 lt!53812)) (bvadd (_size!498 (_2!1202 lt!53812)) (bvsdiv (bvadd (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!107105 () Bool)

(declare-fun res!53189 () Bool)

(assert (=> b!107105 (=> (not res!53189) (not e!69667))))

(assert (=> b!107105 (= res!53189 (and (= (size!2307 (_values!2564 (_2!1202 lt!53812))) (bvadd (mask!6726 (_2!1202 lt!53812)) #b00000000000000000000000000000001)) (= (size!2306 (_keys!4286 (_2!1202 lt!53812))) (size!2307 (_values!2564 (_2!1202 lt!53812)))) (bvsge (_size!498 (_2!1202 lt!53812)) #b00000000000000000000000000000000) (bvsle (_size!498 (_2!1202 lt!53812)) (bvadd (mask!6726 (_2!1202 lt!53812)) #b00000000000000000000000000000001))))))

(declare-fun b!107108 () Bool)

(assert (=> b!107108 (= e!69667 (and (bvsge (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000000) (bvsle (extraKeys!2386 (_2!1202 lt!53812)) #b00000000000000000000000000000011) (bvsge (_vacant!498 (_2!1202 lt!53812)) #b00000000000000000000000000000000)))))

(declare-fun d!29659 () Bool)

(declare-fun res!53190 () Bool)

(assert (=> d!29659 (=> (not res!53190) (not e!69667))))

(assert (=> d!29659 (= res!53190 (validMask!0 (mask!6726 (_2!1202 lt!53812))))))

(assert (=> d!29659 (= (simpleValid!74 (_2!1202 lt!53812)) e!69667)))

(assert (= (and d!29659 res!53190) b!107105))

(assert (= (and b!107105 res!53189) b!107106))

(assert (= (and b!107106 res!53191) b!107107))

(assert (= (and b!107107 res!53192) b!107108))

(declare-fun m!120179 () Bool)

(assert (=> b!107106 m!120179))

(assert (=> b!107107 m!120179))

(assert (=> d!29659 m!120177))

(assert (=> d!28791 d!29659))

(assert (=> d!28739 d!29133))

(declare-fun d!29661 () Bool)

(assert (=> d!29661 (= (inRange!0 (index!3197 lt!54077) (mask!6726 newMap!16)) (and (bvsge (index!3197 lt!54077) #b00000000000000000000000000000000) (bvslt (index!3197 lt!54077) (bvadd (mask!6726 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!105778 d!29661))

(assert (=> b!105675 d!28961))

(assert (=> b!105675 d!28963))

(declare-fun d!29663 () Bool)

(declare-fun lt!54841 () Bool)

(assert (=> d!29663 (= lt!54841 (select (content!109 (toList!787 lt!54251)) (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun e!69668 () Bool)

(assert (=> d!29663 (= lt!54841 e!69668)))

(declare-fun res!53193 () Bool)

(assert (=> d!29663 (=> (not res!53193) (not e!69668))))

(assert (=> d!29663 (= res!53193 ((_ is Cons!1612) (toList!787 lt!54251)))))

(assert (=> d!29663 (= (contains!821 (toList!787 lt!54251) (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))) lt!54841)))

(declare-fun b!107109 () Bool)

(declare-fun e!69669 () Bool)

(assert (=> b!107109 (= e!69668 e!69669)))

(declare-fun res!53194 () Bool)

(assert (=> b!107109 (=> res!53194 e!69669)))

(assert (=> b!107109 (= res!53194 (= (h!2209 (toList!787 lt!54251)) (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(declare-fun b!107110 () Bool)

(assert (=> b!107110 (= e!69669 (contains!821 (t!5690 (toList!787 lt!54251)) (ite c!18304 (ite c!18299 (tuple2!2381 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53601) (tuple2!2381 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53601)) (tuple2!2381 (select (arr!2050 (_keys!4286 (v!2883 (underlying!355 thiss!992)))) from!355) lt!53601))))))

(assert (= (and d!29663 res!53193) b!107109))

(assert (= (and b!107109 (not res!53194)) b!107110))

(declare-fun m!120181 () Bool)

(assert (=> d!29663 m!120181))

(declare-fun m!120183 () Bool)

(assert (=> d!29663 m!120183))

(declare-fun m!120185 () Bool)

(assert (=> b!107110 m!120185))

(assert (=> b!105959 d!29663))

(declare-fun d!29665 () Bool)

(assert (=> d!29665 (isDefined!108 (getValueByKey!154 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54842 () Unit!3218)

(assert (=> d!29665 (= lt!54842 (choose!671 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69670 () Bool)

(assert (=> d!29665 e!69670))

(declare-fun res!53195 () Bool)

(assert (=> d!29665 (=> (not res!53195) (not e!69670))))

(assert (=> d!29665 (= res!53195 (isStrictlySorted!304 (toList!787 lt!53875)))))

(assert (=> d!29665 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000) lt!54842)))

(declare-fun b!107111 () Bool)

(assert (=> b!107111 (= e!69670 (containsKey!158 (toList!787 lt!53875) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29665 res!53195) b!107111))

(assert (=> d!29665 m!117913))

(assert (=> d!29665 m!117913))

(assert (=> d!29665 m!117915))

(declare-fun m!120187 () Bool)

(assert (=> d!29665 m!120187))

(assert (=> d!29665 m!118861))

(assert (=> b!107111 m!117909))

(assert (=> b!105878 d!29665))

(assert (=> b!105878 d!29427))

(assert (=> b!105878 d!29429))

(declare-fun d!29667 () Bool)

(assert (=> d!29667 (= (get!1335 (getValueByKey!154 (toList!787 lt!53892) lt!53876)) (v!2889 (getValueByKey!154 (toList!787 lt!53892) lt!53876)))))

(assert (=> d!28775 d!29667))

(declare-fun b!107114 () Bool)

(declare-fun e!69672 () Option!160)

(assert (=> b!107114 (= e!69672 (getValueByKey!154 (t!5690 (toList!787 lt!53892)) lt!53876))))

(declare-fun b!107113 () Bool)

(declare-fun e!69671 () Option!160)

(assert (=> b!107113 (= e!69671 e!69672)))

(declare-fun c!18796 () Bool)

(assert (=> b!107113 (= c!18796 (and ((_ is Cons!1612) (toList!787 lt!53892)) (not (= (_1!1201 (h!2209 (toList!787 lt!53892))) lt!53876))))))

(declare-fun d!29669 () Bool)

(declare-fun c!18795 () Bool)

(assert (=> d!29669 (= c!18795 (and ((_ is Cons!1612) (toList!787 lt!53892)) (= (_1!1201 (h!2209 (toList!787 lt!53892))) lt!53876)))))

(assert (=> d!29669 (= (getValueByKey!154 (toList!787 lt!53892) lt!53876) e!69671)))

(declare-fun b!107115 () Bool)

(assert (=> b!107115 (= e!69672 None!158)))

(declare-fun b!107112 () Bool)

(assert (=> b!107112 (= e!69671 (Some!159 (_2!1201 (h!2209 (toList!787 lt!53892)))))))

(assert (= (and d!29669 c!18795) b!107112))

(assert (= (and d!29669 (not c!18795)) b!107113))

(assert (= (and b!107113 c!18796) b!107114))

(assert (= (and b!107113 (not c!18796)) b!107115))

(declare-fun m!120189 () Bool)

(assert (=> b!107114 m!120189))

(assert (=> d!28775 d!29669))

(declare-fun d!29671 () Bool)

(declare-fun lt!54843 () Bool)

(assert (=> d!29671 (= lt!54843 (select (content!109 (toList!787 lt!54018)) (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun e!69673 () Bool)

(assert (=> d!29671 (= lt!54843 e!69673)))

(declare-fun res!53196 () Bool)

(assert (=> d!29671 (=> (not res!53196) (not e!69673))))

(assert (=> d!29671 (= res!53196 ((_ is Cons!1612) (toList!787 lt!54018)))))

(assert (=> d!29671 (= (contains!821 (toList!787 lt!54018) (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))) lt!54843)))

(declare-fun b!107116 () Bool)

(declare-fun e!69674 () Bool)

(assert (=> b!107116 (= e!69673 e!69674)))

(declare-fun res!53197 () Bool)

(assert (=> b!107116 (=> res!53197 e!69674)))

(assert (=> b!107116 (= res!53197 (= (h!2209 (toList!787 lt!54018)) (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(declare-fun b!107117 () Bool)

(assert (=> b!107117 (= e!69674 (contains!821 (t!5690 (toList!787 lt!54018)) (tuple2!2381 lt!53891 (minValue!2456 (v!2883 (underlying!355 thiss!992))))))))

(assert (= (and d!29671 res!53196) b!107116))

(assert (= (and b!107116 (not res!53197)) b!107117))

(declare-fun m!120191 () Bool)

(assert (=> d!29671 m!120191))

(declare-fun m!120193 () Bool)

(assert (=> d!29671 m!120193))

(declare-fun m!120195 () Bool)

(assert (=> b!107117 m!120195))

(assert (=> b!105659 d!29671))

(assert (=> d!28903 d!28901))

(declare-fun d!29673 () Bool)

(assert (=> d!29673 (= (getValueByKey!154 lt!53724 (_1!1201 lt!53606)) (Some!159 (_2!1201 lt!53606)))))

(assert (=> d!29673 true))

(declare-fun _$22!436 () Unit!3218)

(assert (=> d!29673 (= (choose!667 lt!53724 (_1!1201 lt!53606) (_2!1201 lt!53606)) _$22!436)))

(declare-fun bs!4401 () Bool)

(assert (= bs!4401 d!29673))

(assert (=> bs!4401 m!117123))

(assert (=> d!28903 d!29673))

(declare-fun d!29675 () Bool)

(declare-fun res!53198 () Bool)

(declare-fun e!69675 () Bool)

(assert (=> d!29675 (=> res!53198 e!69675)))

(assert (=> d!29675 (= res!53198 (or ((_ is Nil!1613) lt!53724) ((_ is Nil!1613) (t!5690 lt!53724))))))

(assert (=> d!29675 (= (isStrictlySorted!304 lt!53724) e!69675)))

(declare-fun b!107118 () Bool)

(declare-fun e!69676 () Bool)

(assert (=> b!107118 (= e!69675 e!69676)))

(declare-fun res!53199 () Bool)

(assert (=> b!107118 (=> (not res!53199) (not e!69676))))

(assert (=> b!107118 (= res!53199 (bvslt (_1!1201 (h!2209 lt!53724)) (_1!1201 (h!2209 (t!5690 lt!53724)))))))

(declare-fun b!107119 () Bool)

(assert (=> b!107119 (= e!69676 (isStrictlySorted!304 (t!5690 lt!53724)))))

(assert (= (and d!29675 (not res!53198)) b!107118))

(assert (= (and b!107118 res!53199) b!107119))

(declare-fun m!120197 () Bool)

(assert (=> b!107119 m!120197))

(assert (=> d!28903 d!29675))

(declare-fun condMapEmpty!3943 () Bool)

(declare-fun mapDefault!3943 () ValueCell!995)

(assert (=> mapNonEmpty!3942 (= condMapEmpty!3943 (= mapRest!3942 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3943)))))

(declare-fun e!69677 () Bool)

(declare-fun mapRes!3943 () Bool)

(assert (=> mapNonEmpty!3942 (= tp!9918 (and e!69677 mapRes!3943))))

(declare-fun mapNonEmpty!3943 () Bool)

(declare-fun tp!9919 () Bool)

(declare-fun e!69678 () Bool)

(assert (=> mapNonEmpty!3943 (= mapRes!3943 (and tp!9919 e!69678))))

(declare-fun mapValue!3943 () ValueCell!995)

(declare-fun mapKey!3943 () (_ BitVec 32))

(declare-fun mapRest!3943 () (Array (_ BitVec 32) ValueCell!995))

(assert (=> mapNonEmpty!3943 (= mapRest!3942 (store mapRest!3943 mapKey!3943 mapValue!3943))))

(declare-fun mapIsEmpty!3943 () Bool)

(assert (=> mapIsEmpty!3943 mapRes!3943))

(declare-fun b!107121 () Bool)

(assert (=> b!107121 (= e!69677 tp_is_empty!2677)))

(declare-fun b!107120 () Bool)

(assert (=> b!107120 (= e!69678 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3942 condMapEmpty!3943) mapIsEmpty!3943))

(assert (= (and mapNonEmpty!3942 (not condMapEmpty!3943)) mapNonEmpty!3943))

(assert (= (and mapNonEmpty!3943 ((_ is ValueCellFull!995) mapValue!3943)) b!107120))

(assert (= (and mapNonEmpty!3942 ((_ is ValueCellFull!995) mapDefault!3943)) b!107121))

(declare-fun m!120199 () Bool)

(assert (=> mapNonEmpty!3943 m!120199))

(declare-fun condMapEmpty!3944 () Bool)

(declare-fun mapDefault!3944 () ValueCell!995)

(assert (=> mapNonEmpty!3941 (= condMapEmpty!3944 (= mapRest!3941 ((as const (Array (_ BitVec 32) ValueCell!995)) mapDefault!3944)))))

(declare-fun e!69679 () Bool)

(declare-fun mapRes!3944 () Bool)

(assert (=> mapNonEmpty!3941 (= tp!9917 (and e!69679 mapRes!3944))))

(declare-fun mapNonEmpty!3944 () Bool)

(declare-fun tp!9920 () Bool)

(declare-fun e!69680 () Bool)

(assert (=> mapNonEmpty!3944 (= mapRes!3944 (and tp!9920 e!69680))))

(declare-fun mapRest!3944 () (Array (_ BitVec 32) ValueCell!995))

(declare-fun mapValue!3944 () ValueCell!995)

(declare-fun mapKey!3944 () (_ BitVec 32))

(assert (=> mapNonEmpty!3944 (= mapRest!3941 (store mapRest!3944 mapKey!3944 mapValue!3944))))

(declare-fun mapIsEmpty!3944 () Bool)

(assert (=> mapIsEmpty!3944 mapRes!3944))

(declare-fun b!107123 () Bool)

(assert (=> b!107123 (= e!69679 tp_is_empty!2677)))

(declare-fun b!107122 () Bool)

(assert (=> b!107122 (= e!69680 tp_is_empty!2677)))

(assert (= (and mapNonEmpty!3941 condMapEmpty!3944) mapIsEmpty!3944))

(assert (= (and mapNonEmpty!3941 (not condMapEmpty!3944)) mapNonEmpty!3944))

(assert (= (and mapNonEmpty!3944 ((_ is ValueCellFull!995) mapValue!3944)) b!107122))

(assert (= (and mapNonEmpty!3941 ((_ is ValueCellFull!995) mapDefault!3944)) b!107123))

(declare-fun m!120201 () Bool)

(assert (=> mapNonEmpty!3944 m!120201))

(declare-fun b_lambda!4761 () Bool)

(assert (= b_lambda!4749 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4761)))

(declare-fun b_lambda!4763 () Bool)

(assert (= b_lambda!4751 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4763)))

(declare-fun b_lambda!4765 () Bool)

(assert (= b_lambda!4741 (or (and b!105054 b_free!2521) (and b!105064 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))) b_lambda!4765)))

(declare-fun b_lambda!4767 () Bool)

(assert (= b_lambda!4737 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4767)))

(declare-fun b_lambda!4769 () Bool)

(assert (= b_lambda!4747 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4769)))

(declare-fun b_lambda!4771 () Bool)

(assert (= b_lambda!4743 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4771)))

(declare-fun b_lambda!4773 () Bool)

(assert (= b_lambda!4731 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4773)))

(declare-fun b_lambda!4775 () Bool)

(assert (= b_lambda!4757 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4775)))

(declare-fun b_lambda!4777 () Bool)

(assert (= b_lambda!4733 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4777)))

(declare-fun b_lambda!4779 () Bool)

(assert (= b_lambda!4755 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4779)))

(declare-fun b_lambda!4781 () Bool)

(assert (= b_lambda!4745 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4781)))

(declare-fun b_lambda!4783 () Bool)

(assert (= b_lambda!4753 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4783)))

(declare-fun b_lambda!4785 () Bool)

(assert (= b_lambda!4739 (or (and b!105054 b_free!2521) (and b!105064 b_free!2523 (= (defaultEntry!2581 newMap!16) (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))))) b_lambda!4785)))

(declare-fun b_lambda!4787 () Bool)

(assert (= b_lambda!4735 (or (and b!105054 b_free!2521 (= (defaultEntry!2581 (v!2883 (underlying!355 thiss!992))) (defaultEntry!2581 newMap!16))) (and b!105064 b_free!2523) b_lambda!4787)))

(check-sat (not b!106896) (not bm!11296) (not b!106098) (not b!106374) (not b!106605) (not b!106093) (not d!29091) (not b!106708) (not d!29141) (not b!106394) (not d!29037) (not d!29331) (not d!29349) (not bm!11221) (not d!29153) (not b!106303) (not b!106764) (not b!106934) (not b!106727) (not b!107017) (not d!29505) (not b!106768) (not b!106324) (not b!107012) (not b!106240) (not d!29371) (not d!29065) (not d!29103) (not b!106583) (not b!106803) (not b!106251) (not bm!11229) (not d!28971) (not b!106265) (not d!29643) (not bm!11199) (not d!28945) (not b_lambda!4725) (not d!29629) (not d!29357) (not b!106281) (not b!106032) (not b!106297) (not b!106153) (not b!106545) (not b!106290) (not d!29043) (not b!106371) (not b!106749) (not b!106417) (not b!106382) (not d!29287) (not b!106826) (not d!29539) (not d!28969) (not b_lambda!4759) (not b!106783) (not b!106000) (not b!106222) (not b_lambda!4781) (not d!29409) (not d!29673) (not b!106114) (not d!28959) (not b!106299) (not b!106961) (not b!106924) (not b!106441) (not b_lambda!4769) (not b!106963) (not b!106974) (not d!29191) (not b!105981) (not b!106645) (not b!106581) (not d!29263) (not b!106461) (not b!106355) (not bm!11234) (not d!29475) (not d!29041) (not b!106622) (not bm!11230) (not b!106053) (not b!106600) (not bm!11270) (not b!106275) (not d!28991) (not b!106393) (not b!106095) (not bm!11253) (not b!106620) (not bm!11307) (not b!106615) (not b!106774) (not b!106996) (not b!106651) (not b!106183) (not b!106782) (not b!106779) (not b!106322) (not b!106712) (not b!106907) (not d!28947) (not b!106808) (not b!106664) (not b!106189) (not b!106359) (not b!106458) (not b!106208) (not b!106327) (not b!107107) (not b!106619) (not b!106212) (not b!107036) (not d!29559) (not d!29373) (not d!29335) (not b_lambda!4705) (not b!106169) (not b!107075) (not b!105987) (not b!106817) (not d!29181) (not d!29631) (not d!29463) (not b!106739) (not b!106213) (not b!106814) (not d!29077) (not b!107035) (not d!28955) (not b!106092) (not b!106725) (not d!29509) (not b!106650) (not b!106353) (not b!106604) (not d!29545) (not b!106115) (not b!106660) (not b!106030) (not b!106319) (not d!29109) (not b!107010) (not d!29387) (not b!106312) (not b!106425) (not b!106225) (not d!29605) (not b!107103) (not d!29399) (not b!106219) (not d!28961) (not b!106497) (not b_lambda!4707) (not b!106887) (not d!29611) (not b!106578) (not d!29273) (not d!29639) (not d!29301) (not d!29085) (not b!107057) (not b!106589) (not b!106151) (not b!106196) (not d!29543) (not d!29501) (not bm!11243) (not b!106402) (not b!106923) (not b!106714) (not b!106423) (not d!29337) (not d!29333) (not b!106306) (not b!107022) (not b!107033) (not d!29355) (not d!29013) (not b!106598) (not b!106941) (not b!106300) (not b!106820) (not d!29147) (not d!29123) (not d!29161) (not b!107091) (not b!107014) (not b!106474) (not b!106576) (not b!106015) (not b!107069) (not bm!11298) (not d!29465) (not d!29483) (not d!28951) (not d!29087) (not b!106058) (not d!29363) (not b_lambda!4787) (not b!106448) (not b!106271) (not bm!11267) (not d!29307) (not b!106162) (not b!106386) (not d!29489) (not b!106431) (not d!29401) (not d!29469) (not d!29403) (not b!106603) (not b!106901) b_and!6581 (not b!106122) (not d!29129) (not d!29213) (not b!106372) (not bm!11222) (not b!106206) (not b!106404) (not b!106088) (not b!106062) (not bm!11299) (not bm!11210) (not b!106407) (not bm!11306) (not b!107026) (not b!106657) (not b!106638) (not d!29597) (not b!106080) (not b!106892) (not d!29171) (not b!106160) (not b!106037) (not d!28987) (not d!29593) tp_is_empty!2677 (not b!106575) (not d!29053) (not d!29645) (not d!29603) (not b!106121) (not d!29637) (not b!106747) (not d!29547) (not b!106329) (not b!106124) (not b!106020) (not b!106483) (not b!106748) (not b!106595) (not b!107066) (not d!29391) (not b!106938) (not b!106430) (not b!106247) (not bm!11259) (not b!106777) (not b!107102) (not b!106593) (not b!106216) (not b!106412) (not b!106364) (not b!107048) (not b!106455) (not bm!11273) (not b!106260) (not d!29231) (not b!106809) (not d!29635) (not b!106389) (not d!29339) (not b!106966) (not b!107079) (not d!29251) (not b!106038) (not b!106669) (not d!29215) (not b!105978) (not d!29051) (not d!29477) (not bm!11324) (not d!29187) (not b!106582) (not d!29277) (not d!29083) (not b!107006) (not b!106792) (not b!106285) (not b!106120) (not b!106194) (not b!106893) (not d!29551) (not b!106217) (not b!106870) (not b!107095) (not d!29435) (not d!29581) (not b!106339) (not b!106990) (not d!29467) (not d!29303) (not bm!11216) (not b!106571) (not d!28925) (not b!106659) (not b!106543) (not b!107039) (not b!107080) (not b!106445) (not d!29317) (not d!29395) (not b!106149) (not d!29049) (not d!29247) (not d!29015) (not mapNonEmpty!3943) (not b!106687) (not d!29571) (not b!106547) (not bm!11251) (not d!29227) (not b!106478) (not b!106330) (not d!29107) (not bm!11224) (not b!105976) (not b_lambda!4767) (not bm!11242) (not d!29021) (not b!106071) (not bm!11291) (not b!106691) (not d!29411) (not b!106454) (not b!106679) (not bm!11240) (not bm!11276) (not bm!11285) (not b!106164) (not bm!11300) (not d!28921) (not b!106751) (not bm!11244) (not b!106270) (not b!107020) (not d!28983) (not d!29459) (not b!107111) (not b!107110) (not b!106806) (not b!106188) (not d!29595) (not b!107086) b_and!6583 (not b!106018) (not bm!11205) (not b!106823) (not d!29555) (not bm!11231) (not bm!11198) (not b!106700) (not b!106529) (not b!106283) (not b!106872) (not d!29217) (not b!106890) (not b!106648) (not d!29001) (not b!106962) (not d!29205) (not b!106978) (not b!107083) (not b!106280) (not b_lambda!4785) (not b!106720) (not b!106065) (not bm!11313) (not d!29633) (not b!106167) (not d!28943) (not d!29561) (not b!106561) (not d!29537) (not b!105983) (not b!106948) (not b!106625) (not b!106754) (not d!29321) (not b_lambda!4723) (not b!106746) (not b!106090) (not b!107034) (not b!106788) (not b!106697) (not d!29567) (not d!29521) (not b!106070) (not d!29229) (not d!28975) (not b!106465) (not bm!11208) (not bm!11282) (not d!29419) (not b!107040) (not b!106875) (not d!29627) (not b!105985) (not b!106003) (not b!106243) (not bm!11321) (not d!29003) (not d!29663) (not b!106023) (not b!106288) (not b!106320) (not d!29269) (not b!107089) (not d!29577) (not b!106119) (not b!106734) (not b!106676) (not b!106414) (not b!106010) (not d!29057) (not b!106025) (not b!106590) (not b!106174) (not b!106785) (not b!106061) (not b!106553) (not d!29299) (not b!106601) (not bm!11201) (not b!106116) (not b!106237) (not b!106635) (not d!29201) (not b!106975) (not b!106075) (not b!105999) (not b!107114) (not b!106913) (not b!106272) (not d!28919) (not b!105995) (not b!106987) (not d!28993) (not b!106722) (not b!106232) (not b!106904) (not b_lambda!4709) (not d!29119) (not b!106585) (not b!105988) (not b!106293) (not bm!11305) (not d!28927) (not d!29157) (not d!29145) (not d!28965) (not b!106798) (not b!106957) (not d!29487) (not b!106729) (not b!106969) (not b!105973) (not d!29261) (not b!106835) (not b!106248) (not b!105989) (not b!106787) (not b!106333) (not d!29079) (not b!106706) (not d!29059) (not b!107052) (not b!106487) (not b!105997) (not b!107005) (not b!106047) (not d!29063) (not b!106499) (not b!106560) (not b!106239) (not d!28937) (not d!29589) (not b!106586) (not d!29659) (not b!106013) (not b!106973) (not bm!11262) (not d!29071) (not b_lambda!4765) (not b!106220) (not b!106395) (not b!106398) (not bm!11304) (not d!29327) (not bm!11295) (not b!106810) (not b!105986) (not b!106995) (not d!29325) (not b!106744) (not b!105979) (not b!106182) (not b!106201) (not d!29575) (not b!106179) (not d!29515) (not b_lambda!4779) (not d!29527) (not b!106927) (not bm!11316) (not d!29135) (not b!106433) (not d!28999) (not b!106862) (not b!106551) (not d!29651) (not b!106945) (not d!29235) (not b!107117) (not b_next!2523) (not b!106611) (not b!106732) (not b!106584) (not b!106401) (not bm!11288) (not d!29671) (not b!106185) (not b!106042) (not d!29641) (not d!29461) (not d!29427) (not b!106682) (not b!106753) (not d!29315) (not b!106091) (not b!106769) (not mapNonEmpty!3944) (not b!106267) (not b!106557) (not b!106717) (not bm!11265) (not d!29453) (not d!29525) (not bm!11223) (not b!107037) (not b!106428) (not b!106602) (not b!106738) (not b_lambda!4773) (not b!106898) (not d!29279) (not d!29519) (not b!106357) (not b!106410) (not b!106456) (not b!106994) (not b!106882) (not d!29009) (not d!29179) (not b!106765) (not b!106954) (not d!29433) (not b!106981) (not d!29259) (not b!106781) (not b!106214) (not b!106721) (not b!106292) (not b!106266) (not b!106074) (not b!106295) (not b!106007) (not b!106663) (not b!107071) (not b!106420) (not bm!11314) (not bm!11219) (not d!29189) (not b!106692) (not b!106173) (not b!106838) (not bm!11260) (not b!106186) (not b!106019) (not d!29099) (not b!106278) (not b!107056) (not b!106531) (not bm!11211) (not b!106881) (not b!106654) (not b!107078) (not d!29359) (not d!29255) (not d!29607) (not b_lambda!4697) (not d!29047) (not b!106084) (not b!106795) (not d!29407) (not b!106677) (not b!107074) (not b!107098) (not b!106608) (not b!106191) (not b!106063) (not b!106104) (not d!29653) (not b_lambda!4727) (not b!106436) (not d!29393) (not b!106916) (not b!106170) (not d!29533) (not b!106866) (not b!106815) (not b!105984) (not d!29139) (not b!107008) (not b!106298) (not b!106100) (not d!29491) (not b!106735) (not b!106548) (not d!29343) (not b!106550) (not d!29601) (not bm!11322) (not d!29221) (not bm!11203) (not d!28923) (not b!106573) (not b!106361) (not d!29415) (not b!106197) (not b!106140) (not d!29431) (not d!29471) (not b!106255) (not d!28941) (not bm!11241) (not b!106713) (not b!106926) (not d!29345) (not d!29507) (not d!29569) (not d!28931) (not b!106259) (not b!106056) (not bm!11250) (not d!29323) (not b!106867) (not b!106757) (not b!106908) (not b!107029) (not b!107104) (not b_lambda!4771) (not d!29529) (not d!28939) (not b!106628) (not d!29625) (not b!106596) (not b_lambda!4761) (not d!29553) (not d!28917) (not b!106035) (not bm!11232) (not b!106569) (not b!106315) (not b!106017) (not b!106903) (not d!29023) (not bm!11312) (not b!106294) (not b!106050) (not b!106574) (not b!106703) (not d!29197) (not b!106606) (not b!106632) (not d!29649) (not b!106028) (not bm!11311) (not b_lambda!4763) (not b!106101) (not bm!11297) (not b!106537) (not b!106491) (not b!106756) (not d!29417) (not b_lambda!4777) (not b!106822) (not b!106647) (not b!106477) (not b!106878) (not d!29619) (not d!29313) (not b!106642) (not d!29267) (not b!107119) (not b_next!2521) (not b!106680) (not d!29457) (not b_lambda!4775) (not d!29173) (not b!106624) (not d!29657) (not b!106380) (not bm!11249) (not b!106805) (not b!106287) (not d!28933) (not d!28981) (not d!29647) (not b!107062) (not b!107068) (not d!29591) (not b!106710) (not b!106227) (not d!29137) (not d!29067) (not b!106566) (not d!29309) (not b!106685) (not b!106534) (not b!106759) (not b!106453) (not bm!11268) (not d!29319) (not b!106652) (not b!106552) (not b!106494) (not b!106983) (not b!106308) (not bm!11248) (not b!107106) (not b!106919) (not b!105969) (not b!106929) (not b!106321) (not b!105993) (not b_lambda!4783) (not b!106503) (not b!106231) (not d!29549) (not b!105994) (not d!29207) (not b_lambda!4721) (not b!106012) (not d!28929) (not d!28913) (not b!106812) (not b!106228) (not b!106110) (not d!29447) (not d!29583) (not b!106471) (not d!29061) (not bm!11213) (not b_lambda!4729) (not b!106832) (not d!29329) (not bm!11323) (not d!29623) (not b!106538) (not b!106400) (not b!106672) (not b!106674) (not d!29025) (not b!106877) (not b!106346) (not b!106617) (not b!106950) (not bm!11290) (not b!106156) (not b!106688) (not b!106200) (not b!106409) (not b!106895) (not bm!11236) (not b!106210) (not b!106349) (not b!106501) (not b!106532) (not bm!11279) (not b!106262) (not b!106421) (not d!29131) (not b!106368) (not d!29297) (not b!106439) (not b!107076) (not d!29127) (not b!106377) (not b!106836) (not b!107070) (not d!29159) (not b!106869) (not b!106762) (not b!106105) (not d!29665) (not b!106801) (not b!106068) (not b!106555) (not b!106452) (not b!106579) (not d!29031) (not b!106827) (not d!28935) (not b!105990) (not b!106041) (not b!106970) (not d!29341) (not d!29291) (not b!106334) (not d!29311) (not d!29441) (not bm!11225))
(check-sat b_and!6581 b_and!6583 (not b_next!2521) (not b_next!2523))
