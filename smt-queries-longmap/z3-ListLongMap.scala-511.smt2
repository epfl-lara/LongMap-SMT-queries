; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12352 () Bool)

(assert start!12352)

(declare-fun b!105285 () Bool)

(declare-fun b_free!2525 () Bool)

(declare-fun b_next!2525 () Bool)

(assert (=> b!105285 (= b_free!2525 (not b_next!2525))))

(declare-fun tp!9900 () Bool)

(declare-fun b_and!6503 () Bool)

(assert (=> b!105285 (= tp!9900 b_and!6503)))

(declare-fun b!105288 () Bool)

(declare-fun b_free!2527 () Bool)

(declare-fun b_next!2527 () Bool)

(assert (=> b!105288 (= b_free!2527 (not b_next!2527))))

(declare-fun tp!9899 () Bool)

(declare-fun b_and!6505 () Bool)

(assert (=> b!105288 (= tp!9899 b_and!6505)))

(declare-fun b!105284 () Bool)

(declare-fun e!68563 () Bool)

(declare-fun tp_is_empty!2679 () Bool)

(assert (=> b!105284 (= e!68563 tp_is_empty!2679)))

(declare-fun e!68559 () Bool)

(declare-datatypes ((V!3219 0))(
  ( (V!3220 (val!1384 Int)) )
))
(declare-datatypes ((array!4349 0))(
  ( (array!4350 (arr!2063 (Array (_ BitVec 32) (_ BitVec 64))) (size!2318 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!996 0))(
  ( (ValueCellFull!996 (v!2891 V!3219)) (EmptyCell!996) )
))
(declare-datatypes ((array!4351 0))(
  ( (array!4352 (arr!2064 (Array (_ BitVec 32) ValueCell!996)) (size!2319 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!900 0))(
  ( (LongMapFixedSize!901 (defaultEntry!2582 Int) (mask!6728 (_ BitVec 32)) (extraKeys!2387 (_ BitVec 32)) (zeroValue!2457 V!3219) (minValue!2457 V!3219) (_size!499 (_ BitVec 32)) (_keys!4288 array!4349) (_values!2565 array!4351) (_vacant!499 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!700 0))(
  ( (Cell!701 (v!2892 LongMapFixedSize!900)) )
))
(declare-datatypes ((LongMap!700 0))(
  ( (LongMap!701 (underlying!361 Cell!700)) )
))
(declare-fun thiss!992 () LongMap!700)

(declare-fun e!68562 () Bool)

(declare-fun array_inv!1299 (array!4349) Bool)

(declare-fun array_inv!1300 (array!4351) Bool)

(assert (=> b!105285 (= e!68559 (and tp!9900 tp_is_empty!2679 (array_inv!1299 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (array_inv!1300 (_values!2565 (v!2892 (underlying!361 thiss!992)))) e!68562))))

(declare-fun b!105286 () Bool)

(declare-fun e!68567 () Bool)

(declare-fun e!68556 () Bool)

(declare-fun mapRes!3929 () Bool)

(assert (=> b!105286 (= e!68567 (and e!68556 mapRes!3929))))

(declare-fun condMapEmpty!3929 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!900)

(declare-fun mapDefault!3930 () ValueCell!996)

(assert (=> b!105286 (= condMapEmpty!3929 (= (arr!2064 (_values!2565 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3930)))))

(declare-fun b!105287 () Bool)

(declare-fun e!68566 () Bool)

(declare-fun e!68554 () Bool)

(assert (=> b!105287 (= e!68566 e!68554)))

(declare-fun e!68564 () Bool)

(assert (=> b!105288 (= e!68564 (and tp!9899 tp_is_empty!2679 (array_inv!1299 (_keys!4288 newMap!16)) (array_inv!1300 (_values!2565 newMap!16)) e!68567))))

(declare-fun b!105290 () Bool)

(declare-fun e!68570 () Bool)

(assert (=> b!105290 (= e!68570 tp_is_empty!2679)))

(declare-fun b!105291 () Bool)

(assert (=> b!105291 (= e!68556 tp_is_empty!2679)))

(declare-fun mapIsEmpty!3929 () Bool)

(assert (=> mapIsEmpty!3929 mapRes!3929))

(declare-fun b!105292 () Bool)

(declare-datatypes ((Unit!3232 0))(
  ( (Unit!3233) )
))
(declare-fun e!68553 () Unit!3232)

(declare-fun Unit!3234 () Unit!3232)

(assert (=> b!105292 (= e!68553 Unit!3234)))

(declare-fun lt!53810 () Unit!3232)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!105 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) (_ BitVec 32) Int) Unit!3232)

(assert (=> b!105292 (= lt!53810 (lemmaListMapContainsThenArrayContainsFrom!105 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4349 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!105292 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!53804 () Unit!3232)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4349 (_ BitVec 32) (_ BitVec 32)) Unit!3232)

(assert (=> b!105292 (= lt!53804 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1616 0))(
  ( (Nil!1613) (Cons!1612 (h!2209 (_ BitVec 64)) (t!5699 List!1616)) )
))
(declare-fun arrayNoDuplicates!0 (array!4349 (_ BitVec 32) List!1616) Bool)

(assert (=> b!105292 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) from!355 Nil!1613)))

(declare-fun lt!53812 () Unit!3232)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4349 (_ BitVec 32) (_ BitVec 64) List!1616) Unit!3232)

(assert (=> b!105292 (= lt!53812 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613)))))

(assert (=> b!105292 false))

(declare-fun mapNonEmpty!3929 () Bool)

(declare-fun mapRes!3930 () Bool)

(declare-fun tp!9897 () Bool)

(assert (=> mapNonEmpty!3929 (= mapRes!3930 (and tp!9897 e!68563))))

(declare-fun mapRest!3929 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapValue!3930 () ValueCell!996)

(declare-fun mapKey!3929 () (_ BitVec 32))

(assert (=> mapNonEmpty!3929 (= (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (store mapRest!3929 mapKey!3929 mapValue!3930))))

(declare-fun b!105293 () Bool)

(declare-fun e!68561 () Bool)

(assert (=> b!105293 (= e!68561 tp_is_empty!2679)))

(declare-fun b!105294 () Bool)

(declare-fun res!52437 () Bool)

(declare-fun e!68565 () Bool)

(assert (=> b!105294 (=> (not res!52437) (not e!68565))))

(assert (=> b!105294 (= res!52437 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!105295 () Bool)

(declare-fun e!68568 () Bool)

(assert (=> b!105295 (= e!68568 (or (not (= (size!2319 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6728 (v!2892 (underlying!361 thiss!992)))))) (= (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (size!2319 (_values!2565 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!105296 () Bool)

(declare-fun Unit!3235 () Unit!3232)

(assert (=> b!105296 (= e!68553 Unit!3235)))

(declare-fun b!105297 () Bool)

(declare-fun e!68560 () Bool)

(assert (=> b!105297 (= e!68565 e!68560)))

(declare-fun res!52440 () Bool)

(assert (=> b!105297 (=> (not res!52440) (not e!68560))))

(declare-datatypes ((tuple2!2410 0))(
  ( (tuple2!2411 (_1!1216 (_ BitVec 64)) (_2!1216 V!3219)) )
))
(declare-datatypes ((List!1617 0))(
  ( (Nil!1614) (Cons!1613 (h!2210 tuple2!2410) (t!5700 List!1617)) )
))
(declare-datatypes ((ListLongMap!1575 0))(
  ( (ListLongMap!1576 (toList!803 List!1617)) )
))
(declare-fun lt!53811 () ListLongMap!1575)

(declare-fun lt!53813 () ListLongMap!1575)

(assert (=> b!105297 (= res!52440 (= lt!53811 lt!53813))))

(declare-fun map!1286 (LongMapFixedSize!900) ListLongMap!1575)

(assert (=> b!105297 (= lt!53813 (map!1286 newMap!16))))

(declare-fun getCurrentListMap!489 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) Int) ListLongMap!1575)

(assert (=> b!105297 (= lt!53811 (getCurrentListMap!489 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105298 () Bool)

(declare-fun e!68569 () Bool)

(declare-fun e!68557 () Bool)

(assert (=> b!105298 (= e!68569 e!68557)))

(declare-fun res!52439 () Bool)

(assert (=> b!105298 (=> (not res!52439) (not e!68557))))

(declare-datatypes ((tuple2!2412 0))(
  ( (tuple2!2413 (_1!1217 Bool) (_2!1217 LongMapFixedSize!900)) )
))
(declare-fun lt!53806 () tuple2!2412)

(assert (=> b!105298 (= res!52439 (and (_1!1217 lt!53806) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!53809 () Unit!3232)

(assert (=> b!105298 (= lt!53809 e!68553)))

(declare-fun c!18293 () Bool)

(declare-fun contains!828 (ListLongMap!1575 (_ BitVec 64)) Bool)

(assert (=> b!105298 (= c!18293 (contains!828 lt!53813 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun lt!53807 () V!3219)

(declare-fun update!156 (LongMapFixedSize!900 (_ BitVec 64) V!3219) tuple2!2412)

(assert (=> b!105298 (= lt!53806 (update!156 newMap!16 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))

(declare-fun b!105299 () Bool)

(assert (=> b!105299 (= e!68562 (and e!68561 mapRes!3930))))

(declare-fun condMapEmpty!3930 () Bool)

(declare-fun mapDefault!3929 () ValueCell!996)

(assert (=> b!105299 (= condMapEmpty!3930 (= (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3929)))))

(declare-fun b!105300 () Bool)

(assert (=> b!105300 (= e!68560 e!68569)))

(declare-fun res!52436 () Bool)

(assert (=> b!105300 (=> (not res!52436) (not e!68569))))

(assert (=> b!105300 (= res!52436 (and (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1330 (ValueCell!996 V!3219) V!3219)

(declare-fun dynLambda!385 (Int (_ BitVec 64)) V!3219)

(assert (=> b!105300 (= lt!53807 (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun mapNonEmpty!3930 () Bool)

(declare-fun tp!9898 () Bool)

(assert (=> mapNonEmpty!3930 (= mapRes!3929 (and tp!9898 e!68570))))

(declare-fun mapValue!3929 () ValueCell!996)

(declare-fun mapRest!3930 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapKey!3930 () (_ BitVec 32))

(assert (=> mapNonEmpty!3930 (= (arr!2064 (_values!2565 newMap!16)) (store mapRest!3930 mapKey!3930 mapValue!3929))))

(declare-fun res!52442 () Bool)

(assert (=> start!12352 (=> (not res!52442) (not e!68565))))

(declare-fun valid!420 (LongMap!700) Bool)

(assert (=> start!12352 (= res!52442 (valid!420 thiss!992))))

(assert (=> start!12352 e!68565))

(assert (=> start!12352 e!68566))

(assert (=> start!12352 true))

(assert (=> start!12352 e!68564))

(declare-fun b!105289 () Bool)

(assert (=> b!105289 (= e!68557 (not e!68568))))

(declare-fun res!52441 () Bool)

(assert (=> b!105289 (=> res!52441 e!68568)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!105289 (= res!52441 (not (validMask!0 (mask!6728 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun lt!53805 () ListLongMap!1575)

(declare-fun lt!53814 () tuple2!2410)

(declare-fun lt!53815 () tuple2!2410)

(declare-fun +!144 (ListLongMap!1575 tuple2!2410) ListLongMap!1575)

(assert (=> b!105289 (= (+!144 (+!144 lt!53805 lt!53814) lt!53815) (+!144 (+!144 lt!53805 lt!53815) lt!53814))))

(assert (=> b!105289 (= lt!53815 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))

(assert (=> b!105289 (= lt!53814 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))

(declare-fun lt!53808 () Unit!3232)

(declare-fun addCommutativeForDiffKeys!56 (ListLongMap!1575 (_ BitVec 64) V!3219 (_ BitVec 64) V!3219) Unit!3232)

(assert (=> b!105289 (= lt!53808 (addCommutativeForDiffKeys!56 lt!53805 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!110 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) Int) ListLongMap!1575)

(assert (=> b!105289 (= lt!53805 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun mapIsEmpty!3930 () Bool)

(assert (=> mapIsEmpty!3930 mapRes!3930))

(declare-fun b!105301 () Bool)

(declare-fun res!52435 () Bool)

(assert (=> b!105301 (=> (not res!52435) (not e!68565))))

(declare-fun valid!421 (LongMapFixedSize!900) Bool)

(assert (=> b!105301 (= res!52435 (valid!421 newMap!16))))

(declare-fun b!105302 () Bool)

(declare-fun res!52438 () Bool)

(assert (=> b!105302 (=> (not res!52438) (not e!68565))))

(assert (=> b!105302 (= res!52438 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6728 newMap!16)) (_size!499 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105303 () Bool)

(assert (=> b!105303 (= e!68554 e!68559)))

(assert (= (and start!12352 res!52442) b!105294))

(assert (= (and b!105294 res!52437) b!105301))

(assert (= (and b!105301 res!52435) b!105302))

(assert (= (and b!105302 res!52438) b!105297))

(assert (= (and b!105297 res!52440) b!105300))

(assert (= (and b!105300 res!52436) b!105298))

(assert (= (and b!105298 c!18293) b!105292))

(assert (= (and b!105298 (not c!18293)) b!105296))

(assert (= (and b!105298 res!52439) b!105289))

(assert (= (and b!105289 (not res!52441)) b!105295))

(assert (= (and b!105299 condMapEmpty!3930) mapIsEmpty!3930))

(assert (= (and b!105299 (not condMapEmpty!3930)) mapNonEmpty!3929))

(get-info :version)

(assert (= (and mapNonEmpty!3929 ((_ is ValueCellFull!996) mapValue!3930)) b!105284))

(assert (= (and b!105299 ((_ is ValueCellFull!996) mapDefault!3929)) b!105293))

(assert (= b!105285 b!105299))

(assert (= b!105303 b!105285))

(assert (= b!105287 b!105303))

(assert (= start!12352 b!105287))

(assert (= (and b!105286 condMapEmpty!3929) mapIsEmpty!3929))

(assert (= (and b!105286 (not condMapEmpty!3929)) mapNonEmpty!3930))

(assert (= (and mapNonEmpty!3930 ((_ is ValueCellFull!996) mapValue!3929)) b!105290))

(assert (= (and b!105286 ((_ is ValueCellFull!996) mapDefault!3930)) b!105291))

(assert (= b!105288 b!105286))

(assert (= start!12352 b!105288))

(declare-fun b_lambda!4715 () Bool)

(assert (=> (not b_lambda!4715) (not b!105300)))

(declare-fun t!5696 () Bool)

(declare-fun tb!2049 () Bool)

(assert (=> (and b!105285 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))) t!5696) tb!2049))

(declare-fun result!3449 () Bool)

(assert (=> tb!2049 (= result!3449 tp_is_empty!2679)))

(assert (=> b!105300 t!5696))

(declare-fun b_and!6507 () Bool)

(assert (= b_and!6503 (and (=> t!5696 result!3449) b_and!6507)))

(declare-fun tb!2051 () Bool)

(declare-fun t!5698 () Bool)

(assert (=> (and b!105288 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))) t!5698) tb!2051))

(declare-fun result!3453 () Bool)

(assert (= result!3453 result!3449))

(assert (=> b!105300 t!5698))

(declare-fun b_and!6509 () Bool)

(assert (= b_and!6505 (and (=> t!5698 result!3453) b_and!6509)))

(declare-fun m!117485 () Bool)

(assert (=> b!105292 m!117485))

(declare-fun m!117487 () Bool)

(assert (=> b!105292 m!117487))

(declare-fun m!117489 () Bool)

(assert (=> b!105292 m!117489))

(declare-fun m!117491 () Bool)

(assert (=> b!105292 m!117491))

(assert (=> b!105292 m!117489))

(assert (=> b!105292 m!117489))

(declare-fun m!117493 () Bool)

(assert (=> b!105292 m!117493))

(assert (=> b!105292 m!117489))

(declare-fun m!117495 () Bool)

(assert (=> b!105292 m!117495))

(assert (=> b!105300 m!117489))

(declare-fun m!117497 () Bool)

(assert (=> b!105300 m!117497))

(declare-fun m!117499 () Bool)

(assert (=> b!105300 m!117499))

(assert (=> b!105300 m!117497))

(assert (=> b!105300 m!117499))

(declare-fun m!117501 () Bool)

(assert (=> b!105300 m!117501))

(declare-fun m!117503 () Bool)

(assert (=> b!105301 m!117503))

(declare-fun m!117505 () Bool)

(assert (=> mapNonEmpty!3930 m!117505))

(declare-fun m!117507 () Bool)

(assert (=> b!105297 m!117507))

(declare-fun m!117509 () Bool)

(assert (=> b!105297 m!117509))

(declare-fun m!117511 () Bool)

(assert (=> mapNonEmpty!3929 m!117511))

(declare-fun m!117513 () Bool)

(assert (=> b!105289 m!117513))

(declare-fun m!117515 () Bool)

(assert (=> b!105289 m!117515))

(declare-fun m!117517 () Bool)

(assert (=> b!105289 m!117517))

(declare-fun m!117519 () Bool)

(assert (=> b!105289 m!117519))

(declare-fun m!117521 () Bool)

(assert (=> b!105289 m!117521))

(assert (=> b!105289 m!117489))

(assert (=> b!105289 m!117519))

(assert (=> b!105289 m!117513))

(assert (=> b!105289 m!117489))

(declare-fun m!117523 () Bool)

(assert (=> b!105289 m!117523))

(declare-fun m!117525 () Bool)

(assert (=> b!105289 m!117525))

(declare-fun m!117527 () Bool)

(assert (=> b!105285 m!117527))

(declare-fun m!117529 () Bool)

(assert (=> b!105285 m!117529))

(assert (=> b!105298 m!117489))

(assert (=> b!105298 m!117489))

(declare-fun m!117531 () Bool)

(assert (=> b!105298 m!117531))

(assert (=> b!105298 m!117489))

(declare-fun m!117533 () Bool)

(assert (=> b!105298 m!117533))

(declare-fun m!117535 () Bool)

(assert (=> b!105288 m!117535))

(declare-fun m!117537 () Bool)

(assert (=> b!105288 m!117537))

(declare-fun m!117539 () Bool)

(assert (=> start!12352 m!117539))

(check-sat (not mapNonEmpty!3930) (not start!12352) (not b!105301) (not b!105292) b_and!6509 (not b!105300) (not mapNonEmpty!3929) (not b!105285) (not b_next!2525) (not b!105288) (not b_lambda!4715) (not b!105289) b_and!6507 (not b!105297) (not b_next!2527) (not b!105298) tp_is_empty!2679)
(check-sat b_and!6507 b_and!6509 (not b_next!2525) (not b_next!2527))
(get-model)

(declare-fun b_lambda!4719 () Bool)

(assert (= b_lambda!4715 (or (and b!105285 b_free!2525) (and b!105288 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))) b_lambda!4719)))

(check-sat (not mapNonEmpty!3930) (not b_lambda!4719) (not start!12352) (not b!105301) (not b!105292) b_and!6509 (not b!105300) (not mapNonEmpty!3929) (not b!105285) (not b_next!2525) (not b!105288) (not b!105289) b_and!6507 (not b!105297) (not b_next!2527) (not b!105298) tp_is_empty!2679)
(check-sat b_and!6507 b_and!6509 (not b_next!2525) (not b_next!2527))
(get-model)

(declare-fun d!28783 () Bool)

(assert (=> d!28783 (not (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53854 () Unit!3232)

(declare-fun choose!68 (array!4349 (_ BitVec 32) (_ BitVec 64) List!1616) Unit!3232)

(assert (=> d!28783 (= lt!53854 (choose!68 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613)))))

(assert (=> d!28783 (bvslt (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!28783 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613)) lt!53854)))

(declare-fun bs!4335 () Bool)

(assert (= bs!4335 d!28783))

(assert (=> bs!4335 m!117489))

(assert (=> bs!4335 m!117493))

(assert (=> bs!4335 m!117489))

(declare-fun m!117597 () Bool)

(assert (=> bs!4335 m!117597))

(assert (=> b!105292 d!28783))

(declare-fun d!28785 () Bool)

(assert (=> d!28785 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) from!355 Nil!1613)))

(declare-fun lt!53857 () Unit!3232)

(declare-fun choose!39 (array!4349 (_ BitVec 32) (_ BitVec 32)) Unit!3232)

(assert (=> d!28785 (= lt!53857 (choose!39 (_keys!4288 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!28785 (bvslt (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!28785 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 from!355) lt!53857)))

(declare-fun bs!4336 () Bool)

(assert (= bs!4336 d!28785))

(assert (=> bs!4336 m!117487))

(declare-fun m!117599 () Bool)

(assert (=> bs!4336 m!117599))

(assert (=> b!105292 d!28785))

(declare-fun d!28787 () Bool)

(declare-fun res!52471 () Bool)

(declare-fun e!68629 () Bool)

(assert (=> d!28787 (=> res!52471 e!68629)))

(assert (=> d!28787 (= res!52471 (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!28787 (= (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!68629)))

(declare-fun b!105372 () Bool)

(declare-fun e!68630 () Bool)

(assert (=> b!105372 (= e!68629 e!68630)))

(declare-fun res!52472 () Bool)

(assert (=> b!105372 (=> (not res!52472) (not e!68630))))

(assert (=> b!105372 (= res!52472 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105373 () Bool)

(assert (=> b!105373 (= e!68630 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!28787 (not res!52471)) b!105372))

(assert (= (and b!105372 res!52472) b!105373))

(declare-fun m!117601 () Bool)

(assert (=> d!28787 m!117601))

(assert (=> b!105373 m!117489))

(declare-fun m!117603 () Bool)

(assert (=> b!105373 m!117603))

(assert (=> b!105292 d!28787))

(declare-fun d!28789 () Bool)

(declare-fun e!68633 () Bool)

(assert (=> d!28789 e!68633))

(declare-fun c!18299 () Bool)

(assert (=> d!28789 (= c!18299 (and (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!53860 () Unit!3232)

(declare-fun choose!652 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) (_ BitVec 32) Int) Unit!3232)

(assert (=> d!28789 (= lt!53860 (choose!652 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(assert (=> d!28789 (validMask!0 (mask!6728 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!28789 (= (lemmaListMapContainsThenArrayContainsFrom!105 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))) lt!53860)))

(declare-fun b!105378 () Bool)

(assert (=> b!105378 (= e!68633 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!105379 () Bool)

(assert (=> b!105379 (= e!68633 (ite (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!28789 c!18299) b!105378))

(assert (= (and d!28789 (not c!18299)) b!105379))

(assert (=> d!28789 m!117489))

(declare-fun m!117605 () Bool)

(assert (=> d!28789 m!117605))

(assert (=> d!28789 m!117517))

(assert (=> b!105378 m!117489))

(assert (=> b!105378 m!117493))

(assert (=> b!105292 d!28789))

(declare-fun b!105390 () Bool)

(declare-fun e!68643 () Bool)

(declare-fun e!68644 () Bool)

(assert (=> b!105390 (= e!68643 e!68644)))

(declare-fun res!52481 () Bool)

(assert (=> b!105390 (=> (not res!52481) (not e!68644))))

(declare-fun e!68645 () Bool)

(assert (=> b!105390 (= res!52481 (not e!68645))))

(declare-fun res!52479 () Bool)

(assert (=> b!105390 (=> (not res!52479) (not e!68645))))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!105390 (= res!52479 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105391 () Bool)

(declare-fun e!68642 () Bool)

(declare-fun call!11062 () Bool)

(assert (=> b!105391 (= e!68642 call!11062)))

(declare-fun b!105392 () Bool)

(declare-fun contains!829 (List!1616 (_ BitVec 64)) Bool)

(assert (=> b!105392 (= e!68645 (contains!829 Nil!1613 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun d!28791 () Bool)

(declare-fun res!52480 () Bool)

(assert (=> d!28791 (=> res!52480 e!68643)))

(assert (=> d!28791 (= res!52480 (bvsge from!355 (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!28791 (= (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) from!355 Nil!1613) e!68643)))

(declare-fun c!18302 () Bool)

(declare-fun bm!11059 () Bool)

(assert (=> bm!11059 (= call!11062 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)))))

(declare-fun b!105393 () Bool)

(assert (=> b!105393 (= e!68642 call!11062)))

(declare-fun b!105394 () Bool)

(assert (=> b!105394 (= e!68644 e!68642)))

(assert (=> b!105394 (= c!18302 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!28791 (not res!52480)) b!105390))

(assert (= (and b!105390 res!52479) b!105392))

(assert (= (and b!105390 res!52481) b!105394))

(assert (= (and b!105394 c!18302) b!105391))

(assert (= (and b!105394 (not c!18302)) b!105393))

(assert (= (or b!105391 b!105393) bm!11059))

(assert (=> b!105390 m!117489))

(assert (=> b!105390 m!117489))

(declare-fun m!117607 () Bool)

(assert (=> b!105390 m!117607))

(assert (=> b!105392 m!117489))

(assert (=> b!105392 m!117489))

(declare-fun m!117609 () Bool)

(assert (=> b!105392 m!117609))

(assert (=> bm!11059 m!117489))

(declare-fun m!117611 () Bool)

(assert (=> bm!11059 m!117611))

(assert (=> b!105394 m!117489))

(assert (=> b!105394 m!117489))

(assert (=> b!105394 m!117607))

(assert (=> b!105292 d!28791))

(declare-fun d!28793 () Bool)

(assert (=> d!28793 (= (valid!420 thiss!992) (valid!421 (v!2892 (underlying!361 thiss!992))))))

(declare-fun bs!4337 () Bool)

(assert (= bs!4337 d!28793))

(declare-fun m!117613 () Bool)

(assert (=> bs!4337 m!117613))

(assert (=> start!12352 d!28793))

(declare-fun b!105419 () Bool)

(declare-fun e!68665 () Bool)

(declare-fun e!68663 () Bool)

(assert (=> b!105419 (= e!68665 e!68663)))

(assert (=> b!105419 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun lt!53878 () ListLongMap!1575)

(declare-fun res!52491 () Bool)

(assert (=> b!105419 (= res!52491 (contains!828 lt!53878 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105419 (=> (not res!52491) (not e!68663))))

(declare-fun b!105420 () Bool)

(declare-fun e!68664 () ListLongMap!1575)

(declare-fun call!11065 () ListLongMap!1575)

(assert (=> b!105420 (= e!68664 call!11065)))

(declare-fun d!28795 () Bool)

(declare-fun e!68661 () Bool)

(assert (=> d!28795 e!68661))

(declare-fun res!52490 () Bool)

(assert (=> d!28795 (=> (not res!52490) (not e!68661))))

(assert (=> d!28795 (= res!52490 (not (contains!828 lt!53878 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!68662 () ListLongMap!1575)

(assert (=> d!28795 (= lt!53878 e!68662)))

(declare-fun c!18314 () Bool)

(assert (=> d!28795 (= c!18314 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!28795 (validMask!0 (mask!6728 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!28795 (= (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))) lt!53878)))

(declare-fun b!105421 () Bool)

(assert (=> b!105421 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> b!105421 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_values!2565 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun apply!98 (ListLongMap!1575 (_ BitVec 64)) V!3219)

(assert (=> b!105421 (= e!68663 (= (apply!98 lt!53878 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!105422 () Bool)

(declare-fun e!68660 () Bool)

(assert (=> b!105422 (= e!68660 (= lt!53878 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105423 () Bool)

(assert (=> b!105423 (= e!68662 e!68664)))

(declare-fun c!18312 () Bool)

(assert (=> b!105423 (= c!18312 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!11062 () Bool)

(assert (=> bm!11062 (= call!11065 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105424 () Bool)

(assert (=> b!105424 (= e!68662 (ListLongMap!1576 Nil!1614))))

(declare-fun b!105425 () Bool)

(assert (=> b!105425 (= e!68665 e!68660)))

(declare-fun c!18311 () Bool)

(assert (=> b!105425 (= c!18311 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105426 () Bool)

(declare-fun lt!53877 () Unit!3232)

(declare-fun lt!53876 () Unit!3232)

(assert (=> b!105426 (= lt!53877 lt!53876)))

(declare-fun lt!53879 () (_ BitVec 64))

(declare-fun lt!53875 () V!3219)

(declare-fun lt!53881 () ListLongMap!1575)

(declare-fun lt!53880 () (_ BitVec 64))

(assert (=> b!105426 (not (contains!828 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)) lt!53880))))

(declare-fun addStillNotContains!46 (ListLongMap!1575 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3232)

(assert (=> b!105426 (= lt!53876 (addStillNotContains!46 lt!53881 lt!53879 lt!53875 lt!53880))))

(assert (=> b!105426 (= lt!53880 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!105426 (= lt!53875 (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!105426 (= lt!53879 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!105426 (= lt!53881 call!11065)))

(assert (=> b!105426 (= e!68664 (+!144 call!11065 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!105427 () Bool)

(declare-fun res!52492 () Bool)

(assert (=> b!105427 (=> (not res!52492) (not e!68661))))

(assert (=> b!105427 (= res!52492 (not (contains!828 lt!53878 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105428 () Bool)

(declare-fun isEmpty!370 (ListLongMap!1575) Bool)

(assert (=> b!105428 (= e!68660 (isEmpty!370 lt!53878))))

(declare-fun b!105429 () Bool)

(declare-fun e!68666 () Bool)

(assert (=> b!105429 (= e!68666 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105429 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!105430 () Bool)

(assert (=> b!105430 (= e!68661 e!68665)))

(declare-fun c!18313 () Bool)

(assert (=> b!105430 (= c!18313 e!68666)))

(declare-fun res!52493 () Bool)

(assert (=> b!105430 (=> (not res!52493) (not e!68666))))

(assert (=> b!105430 (= res!52493 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28795 c!18314) b!105424))

(assert (= (and d!28795 (not c!18314)) b!105423))

(assert (= (and b!105423 c!18312) b!105426))

(assert (= (and b!105423 (not c!18312)) b!105420))

(assert (= (or b!105426 b!105420) bm!11062))

(assert (= (and d!28795 res!52490) b!105427))

(assert (= (and b!105427 res!52492) b!105430))

(assert (= (and b!105430 res!52493) b!105429))

(assert (= (and b!105430 c!18313) b!105419))

(assert (= (and b!105430 (not c!18313)) b!105425))

(assert (= (and b!105419 res!52491) b!105421))

(assert (= (and b!105425 c!18311) b!105422))

(assert (= (and b!105425 (not c!18311)) b!105428))

(declare-fun b_lambda!4721 () Bool)

(assert (=> (not b_lambda!4721) (not b!105421)))

(assert (=> b!105421 t!5696))

(declare-fun b_and!6519 () Bool)

(assert (= b_and!6507 (and (=> t!5696 result!3449) b_and!6519)))

(assert (=> b!105421 t!5698))

(declare-fun b_and!6521 () Bool)

(assert (= b_and!6509 (and (=> t!5698 result!3453) b_and!6521)))

(declare-fun b_lambda!4723 () Bool)

(assert (=> (not b_lambda!4723) (not b!105426)))

(assert (=> b!105426 t!5696))

(declare-fun b_and!6523 () Bool)

(assert (= b_and!6519 (and (=> t!5696 result!3449) b_and!6523)))

(assert (=> b!105426 t!5698))

(declare-fun b_and!6525 () Bool)

(assert (= b_and!6521 (and (=> t!5698 result!3453) b_and!6525)))

(declare-fun m!117615 () Bool)

(assert (=> bm!11062 m!117615))

(assert (=> b!105421 m!117601))

(declare-fun m!117617 () Bool)

(assert (=> b!105421 m!117617))

(declare-fun m!117619 () Bool)

(assert (=> b!105421 m!117619))

(assert (=> b!105421 m!117619))

(assert (=> b!105421 m!117499))

(declare-fun m!117621 () Bool)

(assert (=> b!105421 m!117621))

(assert (=> b!105421 m!117499))

(assert (=> b!105421 m!117601))

(assert (=> b!105419 m!117601))

(assert (=> b!105419 m!117601))

(declare-fun m!117623 () Bool)

(assert (=> b!105419 m!117623))

(declare-fun m!117625 () Bool)

(assert (=> b!105428 m!117625))

(assert (=> b!105423 m!117601))

(assert (=> b!105423 m!117601))

(declare-fun m!117627 () Bool)

(assert (=> b!105423 m!117627))

(declare-fun m!117629 () Bool)

(assert (=> d!28795 m!117629))

(assert (=> d!28795 m!117517))

(assert (=> b!105422 m!117615))

(assert (=> b!105429 m!117601))

(assert (=> b!105429 m!117601))

(assert (=> b!105429 m!117627))

(declare-fun m!117631 () Bool)

(assert (=> b!105427 m!117631))

(declare-fun m!117633 () Bool)

(assert (=> b!105426 m!117633))

(assert (=> b!105426 m!117633))

(declare-fun m!117635 () Bool)

(assert (=> b!105426 m!117635))

(assert (=> b!105426 m!117619))

(assert (=> b!105426 m!117619))

(assert (=> b!105426 m!117499))

(assert (=> b!105426 m!117621))

(assert (=> b!105426 m!117499))

(assert (=> b!105426 m!117601))

(declare-fun m!117637 () Bool)

(assert (=> b!105426 m!117637))

(declare-fun m!117639 () Bool)

(assert (=> b!105426 m!117639))

(assert (=> b!105289 d!28795))

(declare-fun d!28797 () Bool)

(declare-fun e!68669 () Bool)

(assert (=> d!28797 e!68669))

(declare-fun res!52498 () Bool)

(assert (=> d!28797 (=> (not res!52498) (not e!68669))))

(declare-fun lt!53891 () ListLongMap!1575)

(assert (=> d!28797 (= res!52498 (contains!828 lt!53891 (_1!1216 lt!53815)))))

(declare-fun lt!53893 () List!1617)

(assert (=> d!28797 (= lt!53891 (ListLongMap!1576 lt!53893))))

(declare-fun lt!53892 () Unit!3232)

(declare-fun lt!53890 () Unit!3232)

(assert (=> d!28797 (= lt!53892 lt!53890)))

(declare-datatypes ((Option!162 0))(
  ( (Some!161 (v!2896 V!3219)) (None!160) )
))
(declare-fun getValueByKey!156 (List!1617 (_ BitVec 64)) Option!162)

(assert (=> d!28797 (= (getValueByKey!156 lt!53893 (_1!1216 lt!53815)) (Some!161 (_2!1216 lt!53815)))))

(declare-fun lemmaContainsTupThenGetReturnValue!72 (List!1617 (_ BitVec 64) V!3219) Unit!3232)

(assert (=> d!28797 (= lt!53890 (lemmaContainsTupThenGetReturnValue!72 lt!53893 (_1!1216 lt!53815) (_2!1216 lt!53815)))))

(declare-fun insertStrictlySorted!75 (List!1617 (_ BitVec 64) V!3219) List!1617)

(assert (=> d!28797 (= lt!53893 (insertStrictlySorted!75 (toList!803 lt!53805) (_1!1216 lt!53815) (_2!1216 lt!53815)))))

(assert (=> d!28797 (= (+!144 lt!53805 lt!53815) lt!53891)))

(declare-fun b!105435 () Bool)

(declare-fun res!52499 () Bool)

(assert (=> b!105435 (=> (not res!52499) (not e!68669))))

(assert (=> b!105435 (= res!52499 (= (getValueByKey!156 (toList!803 lt!53891) (_1!1216 lt!53815)) (Some!161 (_2!1216 lt!53815))))))

(declare-fun b!105436 () Bool)

(declare-fun contains!830 (List!1617 tuple2!2410) Bool)

(assert (=> b!105436 (= e!68669 (contains!830 (toList!803 lt!53891) lt!53815))))

(assert (= (and d!28797 res!52498) b!105435))

(assert (= (and b!105435 res!52499) b!105436))

(declare-fun m!117641 () Bool)

(assert (=> d!28797 m!117641))

(declare-fun m!117643 () Bool)

(assert (=> d!28797 m!117643))

(declare-fun m!117645 () Bool)

(assert (=> d!28797 m!117645))

(declare-fun m!117647 () Bool)

(assert (=> d!28797 m!117647))

(declare-fun m!117649 () Bool)

(assert (=> b!105435 m!117649))

(declare-fun m!117651 () Bool)

(assert (=> b!105436 m!117651))

(assert (=> b!105289 d!28797))

(declare-fun d!28799 () Bool)

(declare-fun e!68670 () Bool)

(assert (=> d!28799 e!68670))

(declare-fun res!52500 () Bool)

(assert (=> d!28799 (=> (not res!52500) (not e!68670))))

(declare-fun lt!53895 () ListLongMap!1575)

(assert (=> d!28799 (= res!52500 (contains!828 lt!53895 (_1!1216 lt!53814)))))

(declare-fun lt!53897 () List!1617)

(assert (=> d!28799 (= lt!53895 (ListLongMap!1576 lt!53897))))

(declare-fun lt!53896 () Unit!3232)

(declare-fun lt!53894 () Unit!3232)

(assert (=> d!28799 (= lt!53896 lt!53894)))

(assert (=> d!28799 (= (getValueByKey!156 lt!53897 (_1!1216 lt!53814)) (Some!161 (_2!1216 lt!53814)))))

(assert (=> d!28799 (= lt!53894 (lemmaContainsTupThenGetReturnValue!72 lt!53897 (_1!1216 lt!53814) (_2!1216 lt!53814)))))

(assert (=> d!28799 (= lt!53897 (insertStrictlySorted!75 (toList!803 lt!53805) (_1!1216 lt!53814) (_2!1216 lt!53814)))))

(assert (=> d!28799 (= (+!144 lt!53805 lt!53814) lt!53895)))

(declare-fun b!105437 () Bool)

(declare-fun res!52501 () Bool)

(assert (=> b!105437 (=> (not res!52501) (not e!68670))))

(assert (=> b!105437 (= res!52501 (= (getValueByKey!156 (toList!803 lt!53895) (_1!1216 lt!53814)) (Some!161 (_2!1216 lt!53814))))))

(declare-fun b!105438 () Bool)

(assert (=> b!105438 (= e!68670 (contains!830 (toList!803 lt!53895) lt!53814))))

(assert (= (and d!28799 res!52500) b!105437))

(assert (= (and b!105437 res!52501) b!105438))

(declare-fun m!117653 () Bool)

(assert (=> d!28799 m!117653))

(declare-fun m!117655 () Bool)

(assert (=> d!28799 m!117655))

(declare-fun m!117657 () Bool)

(assert (=> d!28799 m!117657))

(declare-fun m!117659 () Bool)

(assert (=> d!28799 m!117659))

(declare-fun m!117661 () Bool)

(assert (=> b!105437 m!117661))

(declare-fun m!117663 () Bool)

(assert (=> b!105438 m!117663))

(assert (=> b!105289 d!28799))

(declare-fun d!28801 () Bool)

(assert (=> d!28801 (= (+!144 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (+!144 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(declare-fun lt!53900 () Unit!3232)

(declare-fun choose!653 (ListLongMap!1575 (_ BitVec 64) V!3219 (_ BitVec 64) V!3219) Unit!3232)

(assert (=> d!28801 (= lt!53900 (choose!653 lt!53805 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))

(assert (=> d!28801 (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28801 (= (addCommutativeForDiffKeys!56 lt!53805 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) lt!53900)))

(declare-fun bs!4338 () Bool)

(assert (= bs!4338 d!28801))

(declare-fun m!117665 () Bool)

(assert (=> bs!4338 m!117665))

(declare-fun m!117667 () Bool)

(assert (=> bs!4338 m!117667))

(assert (=> bs!4338 m!117665))

(assert (=> bs!4338 m!117489))

(declare-fun m!117669 () Bool)

(assert (=> bs!4338 m!117669))

(declare-fun m!117671 () Bool)

(assert (=> bs!4338 m!117671))

(declare-fun m!117673 () Bool)

(assert (=> bs!4338 m!117673))

(assert (=> bs!4338 m!117671))

(assert (=> b!105289 d!28801))

(declare-fun d!28803 () Bool)

(assert (=> d!28803 (= (validMask!0 (mask!6728 (v!2892 (underlying!361 thiss!992)))) (and (or (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000001111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000011111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000001111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000011111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000001111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000011111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000001111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000011111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000001111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000011111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000001111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000011111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000111111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000001111111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000011111111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000111111111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000001111111111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000011111111111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000111111111111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00001111111111111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00011111111111111111111111111111) (= (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!105289 d!28803))

(declare-fun d!28805 () Bool)

(declare-fun e!68671 () Bool)

(assert (=> d!28805 e!68671))

(declare-fun res!52502 () Bool)

(assert (=> d!28805 (=> (not res!52502) (not e!68671))))

(declare-fun lt!53902 () ListLongMap!1575)

(assert (=> d!28805 (= res!52502 (contains!828 lt!53902 (_1!1216 lt!53815)))))

(declare-fun lt!53904 () List!1617)

(assert (=> d!28805 (= lt!53902 (ListLongMap!1576 lt!53904))))

(declare-fun lt!53903 () Unit!3232)

(declare-fun lt!53901 () Unit!3232)

(assert (=> d!28805 (= lt!53903 lt!53901)))

(assert (=> d!28805 (= (getValueByKey!156 lt!53904 (_1!1216 lt!53815)) (Some!161 (_2!1216 lt!53815)))))

(assert (=> d!28805 (= lt!53901 (lemmaContainsTupThenGetReturnValue!72 lt!53904 (_1!1216 lt!53815) (_2!1216 lt!53815)))))

(assert (=> d!28805 (= lt!53904 (insertStrictlySorted!75 (toList!803 (+!144 lt!53805 lt!53814)) (_1!1216 lt!53815) (_2!1216 lt!53815)))))

(assert (=> d!28805 (= (+!144 (+!144 lt!53805 lt!53814) lt!53815) lt!53902)))

(declare-fun b!105439 () Bool)

(declare-fun res!52503 () Bool)

(assert (=> b!105439 (=> (not res!52503) (not e!68671))))

(assert (=> b!105439 (= res!52503 (= (getValueByKey!156 (toList!803 lt!53902) (_1!1216 lt!53815)) (Some!161 (_2!1216 lt!53815))))))

(declare-fun b!105440 () Bool)

(assert (=> b!105440 (= e!68671 (contains!830 (toList!803 lt!53902) lt!53815))))

(assert (= (and d!28805 res!52502) b!105439))

(assert (= (and b!105439 res!52503) b!105440))

(declare-fun m!117675 () Bool)

(assert (=> d!28805 m!117675))

(declare-fun m!117677 () Bool)

(assert (=> d!28805 m!117677))

(declare-fun m!117679 () Bool)

(assert (=> d!28805 m!117679))

(declare-fun m!117681 () Bool)

(assert (=> d!28805 m!117681))

(declare-fun m!117683 () Bool)

(assert (=> b!105439 m!117683))

(declare-fun m!117685 () Bool)

(assert (=> b!105440 m!117685))

(assert (=> b!105289 d!28805))

(declare-fun d!28807 () Bool)

(declare-fun e!68672 () Bool)

(assert (=> d!28807 e!68672))

(declare-fun res!52504 () Bool)

(assert (=> d!28807 (=> (not res!52504) (not e!68672))))

(declare-fun lt!53906 () ListLongMap!1575)

(assert (=> d!28807 (= res!52504 (contains!828 lt!53906 (_1!1216 lt!53814)))))

(declare-fun lt!53908 () List!1617)

(assert (=> d!28807 (= lt!53906 (ListLongMap!1576 lt!53908))))

(declare-fun lt!53907 () Unit!3232)

(declare-fun lt!53905 () Unit!3232)

(assert (=> d!28807 (= lt!53907 lt!53905)))

(assert (=> d!28807 (= (getValueByKey!156 lt!53908 (_1!1216 lt!53814)) (Some!161 (_2!1216 lt!53814)))))

(assert (=> d!28807 (= lt!53905 (lemmaContainsTupThenGetReturnValue!72 lt!53908 (_1!1216 lt!53814) (_2!1216 lt!53814)))))

(assert (=> d!28807 (= lt!53908 (insertStrictlySorted!75 (toList!803 (+!144 lt!53805 lt!53815)) (_1!1216 lt!53814) (_2!1216 lt!53814)))))

(assert (=> d!28807 (= (+!144 (+!144 lt!53805 lt!53815) lt!53814) lt!53906)))

(declare-fun b!105441 () Bool)

(declare-fun res!52505 () Bool)

(assert (=> b!105441 (=> (not res!52505) (not e!68672))))

(assert (=> b!105441 (= res!52505 (= (getValueByKey!156 (toList!803 lt!53906) (_1!1216 lt!53814)) (Some!161 (_2!1216 lt!53814))))))

(declare-fun b!105442 () Bool)

(assert (=> b!105442 (= e!68672 (contains!830 (toList!803 lt!53906) lt!53814))))

(assert (= (and d!28807 res!52504) b!105441))

(assert (= (and b!105441 res!52505) b!105442))

(declare-fun m!117687 () Bool)

(assert (=> d!28807 m!117687))

(declare-fun m!117689 () Bool)

(assert (=> d!28807 m!117689))

(declare-fun m!117691 () Bool)

(assert (=> d!28807 m!117691))

(declare-fun m!117693 () Bool)

(assert (=> d!28807 m!117693))

(declare-fun m!117695 () Bool)

(assert (=> b!105441 m!117695))

(declare-fun m!117697 () Bool)

(assert (=> b!105442 m!117697))

(assert (=> b!105289 d!28807))

(declare-fun d!28809 () Bool)

(declare-fun res!52512 () Bool)

(declare-fun e!68675 () Bool)

(assert (=> d!28809 (=> (not res!52512) (not e!68675))))

(declare-fun simpleValid!74 (LongMapFixedSize!900) Bool)

(assert (=> d!28809 (= res!52512 (simpleValid!74 newMap!16))))

(assert (=> d!28809 (= (valid!421 newMap!16) e!68675)))

(declare-fun b!105449 () Bool)

(declare-fun res!52513 () Bool)

(assert (=> b!105449 (=> (not res!52513) (not e!68675))))

(declare-fun arrayCountValidKeys!0 (array!4349 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!105449 (= res!52513 (= (arrayCountValidKeys!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (_size!499 newMap!16)))))

(declare-fun b!105450 () Bool)

(declare-fun res!52514 () Bool)

(assert (=> b!105450 (=> (not res!52514) (not e!68675))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4349 (_ BitVec 32)) Bool)

(assert (=> b!105450 (= res!52514 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!105451 () Bool)

(assert (=> b!105451 (= e!68675 (arrayNoDuplicates!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 Nil!1613))))

(assert (= (and d!28809 res!52512) b!105449))

(assert (= (and b!105449 res!52513) b!105450))

(assert (= (and b!105450 res!52514) b!105451))

(declare-fun m!117699 () Bool)

(assert (=> d!28809 m!117699))

(declare-fun m!117701 () Bool)

(assert (=> b!105449 m!117701))

(declare-fun m!117703 () Bool)

(assert (=> b!105450 m!117703))

(declare-fun m!117705 () Bool)

(assert (=> b!105451 m!117705))

(assert (=> b!105301 d!28809))

(declare-fun d!28811 () Bool)

(assert (=> d!28811 (= (array_inv!1299 (_keys!4288 newMap!16)) (bvsge (size!2318 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105288 d!28811))

(declare-fun d!28813 () Bool)

(assert (=> d!28813 (= (array_inv!1300 (_values!2565 newMap!16)) (bvsge (size!2319 (_values!2565 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105288 d!28813))

(declare-fun d!28815 () Bool)

(assert (=> d!28815 (= (map!1286 newMap!16) (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bs!4339 () Bool)

(assert (= bs!4339 d!28815))

(declare-fun m!117707 () Bool)

(assert (=> bs!4339 m!117707))

(assert (=> b!105297 d!28815))

(declare-fun bm!11077 () Bool)

(declare-fun call!11083 () Bool)

(declare-fun lt!53958 () ListLongMap!1575)

(assert (=> bm!11077 (= call!11083 (contains!828 lt!53958 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11078 () Bool)

(declare-fun call!11086 () ListLongMap!1575)

(declare-fun call!11081 () ListLongMap!1575)

(assert (=> bm!11078 (= call!11086 call!11081)))

(declare-fun b!105494 () Bool)

(declare-fun e!68703 () Unit!3232)

(declare-fun lt!53974 () Unit!3232)

(assert (=> b!105494 (= e!68703 lt!53974)))

(declare-fun lt!53956 () ListLongMap!1575)

(assert (=> b!105494 (= lt!53956 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun lt!53966 () (_ BitVec 64))

(assert (=> b!105494 (= lt!53966 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53954 () (_ BitVec 64))

(assert (=> b!105494 (= lt!53954 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53969 () Unit!3232)

(declare-fun addStillContains!74 (ListLongMap!1575 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3232)

(assert (=> b!105494 (= lt!53969 (addStillContains!74 lt!53956 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53954))))

(assert (=> b!105494 (contains!828 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53954)))

(declare-fun lt!53968 () Unit!3232)

(assert (=> b!105494 (= lt!53968 lt!53969)))

(declare-fun lt!53971 () ListLongMap!1575)

(assert (=> b!105494 (= lt!53971 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun lt!53955 () (_ BitVec 64))

(assert (=> b!105494 (= lt!53955 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53953 () (_ BitVec 64))

(assert (=> b!105494 (= lt!53953 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53972 () Unit!3232)

(declare-fun addApplyDifferent!74 (ListLongMap!1575 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3232)

(assert (=> b!105494 (= lt!53972 (addApplyDifferent!74 lt!53971 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53953))))

(assert (=> b!105494 (= (apply!98 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53953) (apply!98 lt!53971 lt!53953))))

(declare-fun lt!53965 () Unit!3232)

(assert (=> b!105494 (= lt!53965 lt!53972)))

(declare-fun lt!53963 () ListLongMap!1575)

(assert (=> b!105494 (= lt!53963 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun lt!53967 () (_ BitVec 64))

(assert (=> b!105494 (= lt!53967 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53957 () (_ BitVec 64))

(assert (=> b!105494 (= lt!53957 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!53964 () Unit!3232)

(assert (=> b!105494 (= lt!53964 (addApplyDifferent!74 lt!53963 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53957))))

(assert (=> b!105494 (= (apply!98 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53957) (apply!98 lt!53963 lt!53957))))

(declare-fun lt!53973 () Unit!3232)

(assert (=> b!105494 (= lt!53973 lt!53964)))

(declare-fun lt!53959 () ListLongMap!1575)

(assert (=> b!105494 (= lt!53959 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun lt!53961 () (_ BitVec 64))

(assert (=> b!105494 (= lt!53961 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53970 () (_ BitVec 64))

(assert (=> b!105494 (= lt!53970 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!105494 (= lt!53974 (addApplyDifferent!74 lt!53959 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53970))))

(assert (=> b!105494 (= (apply!98 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53970) (apply!98 lt!53959 lt!53970))))

(declare-fun bm!11079 () Bool)

(declare-fun call!11080 () ListLongMap!1575)

(assert (=> bm!11079 (= call!11081 call!11080)))

(declare-fun bm!11080 () Bool)

(declare-fun call!11084 () Bool)

(assert (=> bm!11080 (= call!11084 (contains!828 lt!53958 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105495 () Bool)

(declare-fun res!52539 () Bool)

(declare-fun e!68702 () Bool)

(assert (=> b!105495 (=> (not res!52539) (not e!68702))))

(declare-fun e!68711 () Bool)

(assert (=> b!105495 (= res!52539 e!68711)))

(declare-fun res!52540 () Bool)

(assert (=> b!105495 (=> res!52540 e!68711)))

(declare-fun e!68708 () Bool)

(assert (=> b!105495 (= res!52540 (not e!68708))))

(declare-fun res!52537 () Bool)

(assert (=> b!105495 (=> (not res!52537) (not e!68708))))

(assert (=> b!105495 (= res!52537 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105496 () Bool)

(declare-fun e!68712 () ListLongMap!1575)

(declare-fun call!11085 () ListLongMap!1575)

(assert (=> b!105496 (= e!68712 (+!144 call!11085 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun bm!11081 () Bool)

(declare-fun call!11082 () ListLongMap!1575)

(assert (=> bm!11081 (= call!11082 call!11085)))

(declare-fun b!105497 () Bool)

(declare-fun e!68713 () Bool)

(assert (=> b!105497 (= e!68702 e!68713)))

(declare-fun c!18330 () Bool)

(assert (=> b!105497 (= c!18330 (not (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105498 () Bool)

(declare-fun e!68710 () Bool)

(assert (=> b!105498 (= e!68710 (= (apply!98 lt!53958 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105499 () Bool)

(declare-fun Unit!3240 () Unit!3232)

(assert (=> b!105499 (= e!68703 Unit!3240)))

(declare-fun b!105500 () Bool)

(assert (=> b!105500 (= e!68713 (not call!11083))))

(declare-fun b!105501 () Bool)

(declare-fun e!68714 () Bool)

(declare-fun e!68707 () Bool)

(assert (=> b!105501 (= e!68714 e!68707)))

(declare-fun res!52535 () Bool)

(assert (=> b!105501 (= res!52535 call!11084)))

(assert (=> b!105501 (=> (not res!52535) (not e!68707))))

(declare-fun d!28817 () Bool)

(assert (=> d!28817 e!68702))

(declare-fun res!52538 () Bool)

(assert (=> d!28817 (=> (not res!52538) (not e!68702))))

(assert (=> d!28817 (= res!52538 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun lt!53960 () ListLongMap!1575)

(assert (=> d!28817 (= lt!53958 lt!53960)))

(declare-fun lt!53962 () Unit!3232)

(assert (=> d!28817 (= lt!53962 e!68703)))

(declare-fun c!18327 () Bool)

(declare-fun e!68709 () Bool)

(assert (=> d!28817 (= c!18327 e!68709)))

(declare-fun res!52541 () Bool)

(assert (=> d!28817 (=> (not res!52541) (not e!68709))))

(assert (=> d!28817 (= res!52541 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!28817 (= lt!53960 e!68712)))

(declare-fun c!18329 () Bool)

(assert (=> d!28817 (= c!18329 (and (not (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28817 (validMask!0 (mask!6728 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!28817 (= (getCurrentListMap!489 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))) lt!53958)))

(declare-fun b!105502 () Bool)

(assert (=> b!105502 (= e!68708 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105503 () Bool)

(assert (=> b!105503 (= e!68714 (not call!11084))))

(declare-fun b!105504 () Bool)

(declare-fun e!68706 () ListLongMap!1575)

(assert (=> b!105504 (= e!68706 call!11082)))

(declare-fun b!105505 () Bool)

(declare-fun e!68705 () Bool)

(assert (=> b!105505 (= e!68705 (= (apply!98 lt!53958 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105505 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2319 (_values!2565 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> b!105505 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!105506 () Bool)

(assert (=> b!105506 (= e!68707 (= (apply!98 lt!53958 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun bm!11082 () Bool)

(assert (=> bm!11082 (= call!11080 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105507 () Bool)

(assert (=> b!105507 (= e!68712 e!68706)))

(declare-fun c!18332 () Bool)

(assert (=> b!105507 (= c!18332 (and (not (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105508 () Bool)

(declare-fun res!52536 () Bool)

(assert (=> b!105508 (=> (not res!52536) (not e!68702))))

(assert (=> b!105508 (= res!52536 e!68714)))

(declare-fun c!18331 () Bool)

(assert (=> b!105508 (= c!18331 (not (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105509 () Bool)

(declare-fun e!68704 () ListLongMap!1575)

(assert (=> b!105509 (= e!68704 call!11082)))

(declare-fun bm!11083 () Bool)

(assert (=> bm!11083 (= call!11085 (+!144 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086)) (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!105510 () Bool)

(declare-fun c!18328 () Bool)

(assert (=> b!105510 (= c!18328 (and (not (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!105510 (= e!68706 e!68704)))

(declare-fun b!105511 () Bool)

(assert (=> b!105511 (= e!68713 e!68710)))

(declare-fun res!52533 () Bool)

(assert (=> b!105511 (= res!52533 call!11083)))

(assert (=> b!105511 (=> (not res!52533) (not e!68710))))

(declare-fun b!105512 () Bool)

(assert (=> b!105512 (= e!68704 call!11086)))

(declare-fun b!105513 () Bool)

(assert (=> b!105513 (= e!68709 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105514 () Bool)

(assert (=> b!105514 (= e!68711 e!68705)))

(declare-fun res!52534 () Bool)

(assert (=> b!105514 (=> (not res!52534) (not e!68705))))

(assert (=> b!105514 (= res!52534 (contains!828 lt!53958 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105514 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28817 c!18329) b!105496))

(assert (= (and d!28817 (not c!18329)) b!105507))

(assert (= (and b!105507 c!18332) b!105504))

(assert (= (and b!105507 (not c!18332)) b!105510))

(assert (= (and b!105510 c!18328) b!105509))

(assert (= (and b!105510 (not c!18328)) b!105512))

(assert (= (or b!105509 b!105512) bm!11078))

(assert (= (or b!105504 bm!11078) bm!11079))

(assert (= (or b!105504 b!105509) bm!11081))

(assert (= (or b!105496 bm!11079) bm!11082))

(assert (= (or b!105496 bm!11081) bm!11083))

(assert (= (and d!28817 res!52541) b!105513))

(assert (= (and d!28817 c!18327) b!105494))

(assert (= (and d!28817 (not c!18327)) b!105499))

(assert (= (and d!28817 res!52538) b!105495))

(assert (= (and b!105495 res!52537) b!105502))

(assert (= (and b!105495 (not res!52540)) b!105514))

(assert (= (and b!105514 res!52534) b!105505))

(assert (= (and b!105495 res!52539) b!105508))

(assert (= (and b!105508 c!18331) b!105501))

(assert (= (and b!105508 (not c!18331)) b!105503))

(assert (= (and b!105501 res!52535) b!105506))

(assert (= (or b!105501 b!105503) bm!11080))

(assert (= (and b!105508 res!52536) b!105497))

(assert (= (and b!105497 c!18330) b!105511))

(assert (= (and b!105497 (not c!18330)) b!105500))

(assert (= (and b!105511 res!52533) b!105498))

(assert (= (or b!105511 b!105500) bm!11077))

(declare-fun b_lambda!4725 () Bool)

(assert (=> (not b_lambda!4725) (not b!105505)))

(assert (=> b!105505 t!5696))

(declare-fun b_and!6527 () Bool)

(assert (= b_and!6523 (and (=> t!5696 result!3449) b_and!6527)))

(assert (=> b!105505 t!5698))

(declare-fun b_and!6529 () Bool)

(assert (= b_and!6525 (and (=> t!5698 result!3453) b_and!6529)))

(assert (=> d!28817 m!117517))

(assert (=> b!105505 m!117601))

(declare-fun m!117709 () Bool)

(assert (=> b!105505 m!117709))

(assert (=> b!105505 m!117499))

(assert (=> b!105505 m!117619))

(assert (=> b!105505 m!117499))

(assert (=> b!105505 m!117621))

(assert (=> b!105505 m!117601))

(assert (=> b!105505 m!117619))

(declare-fun m!117711 () Bool)

(assert (=> b!105506 m!117711))

(declare-fun m!117713 () Bool)

(assert (=> bm!11080 m!117713))

(declare-fun m!117715 () Bool)

(assert (=> bm!11083 m!117715))

(declare-fun m!117717 () Bool)

(assert (=> b!105498 m!117717))

(assert (=> b!105502 m!117601))

(assert (=> b!105502 m!117601))

(assert (=> b!105502 m!117627))

(assert (=> bm!11082 m!117525))

(assert (=> b!105514 m!117601))

(assert (=> b!105514 m!117601))

(declare-fun m!117719 () Bool)

(assert (=> b!105514 m!117719))

(assert (=> b!105513 m!117601))

(assert (=> b!105513 m!117601))

(assert (=> b!105513 m!117627))

(declare-fun m!117721 () Bool)

(assert (=> b!105496 m!117721))

(declare-fun m!117723 () Bool)

(assert (=> bm!11077 m!117723))

(declare-fun m!117725 () Bool)

(assert (=> b!105494 m!117725))

(declare-fun m!117727 () Bool)

(assert (=> b!105494 m!117727))

(declare-fun m!117729 () Bool)

(assert (=> b!105494 m!117729))

(declare-fun m!117731 () Bool)

(assert (=> b!105494 m!117731))

(declare-fun m!117733 () Bool)

(assert (=> b!105494 m!117733))

(declare-fun m!117735 () Bool)

(assert (=> b!105494 m!117735))

(declare-fun m!117737 () Bool)

(assert (=> b!105494 m!117737))

(declare-fun m!117739 () Bool)

(assert (=> b!105494 m!117739))

(assert (=> b!105494 m!117525))

(declare-fun m!117741 () Bool)

(assert (=> b!105494 m!117741))

(declare-fun m!117743 () Bool)

(assert (=> b!105494 m!117743))

(declare-fun m!117745 () Bool)

(assert (=> b!105494 m!117745))

(assert (=> b!105494 m!117727))

(assert (=> b!105494 m!117601))

(assert (=> b!105494 m!117743))

(declare-fun m!117747 () Bool)

(assert (=> b!105494 m!117747))

(assert (=> b!105494 m!117731))

(declare-fun m!117749 () Bool)

(assert (=> b!105494 m!117749))

(assert (=> b!105494 m!117737))

(declare-fun m!117751 () Bool)

(assert (=> b!105494 m!117751))

(declare-fun m!117753 () Bool)

(assert (=> b!105494 m!117753))

(assert (=> b!105297 d!28817))

(declare-fun d!28819 () Bool)

(assert (=> d!28819 (= (array_inv!1299 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvsge (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!105285 d!28819))

(declare-fun d!28821 () Bool)

(assert (=> d!28821 (= (array_inv!1300 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvsge (size!2319 (_values!2565 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!105285 d!28821))

(declare-fun d!28823 () Bool)

(declare-fun e!68720 () Bool)

(assert (=> d!28823 e!68720))

(declare-fun res!52544 () Bool)

(assert (=> d!28823 (=> res!52544 e!68720)))

(declare-fun lt!53985 () Bool)

(assert (=> d!28823 (= res!52544 (not lt!53985))))

(declare-fun lt!53983 () Bool)

(assert (=> d!28823 (= lt!53985 lt!53983)))

(declare-fun lt!53984 () Unit!3232)

(declare-fun e!68719 () Unit!3232)

(assert (=> d!28823 (= lt!53984 e!68719)))

(declare-fun c!18335 () Bool)

(assert (=> d!28823 (= c!18335 lt!53983)))

(declare-fun containsKey!160 (List!1617 (_ BitVec 64)) Bool)

(assert (=> d!28823 (= lt!53983 (containsKey!160 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!28823 (= (contains!828 lt!53813 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!53985)))

(declare-fun b!105521 () Bool)

(declare-fun lt!53986 () Unit!3232)

(assert (=> b!105521 (= e!68719 lt!53986)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!108 (List!1617 (_ BitVec 64)) Unit!3232)

(assert (=> b!105521 (= lt!53986 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun isDefined!109 (Option!162) Bool)

(assert (=> b!105521 (isDefined!109 (getValueByKey!156 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105522 () Bool)

(declare-fun Unit!3241 () Unit!3232)

(assert (=> b!105522 (= e!68719 Unit!3241)))

(declare-fun b!105523 () Bool)

(assert (=> b!105523 (= e!68720 (isDefined!109 (getValueByKey!156 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (= (and d!28823 c!18335) b!105521))

(assert (= (and d!28823 (not c!18335)) b!105522))

(assert (= (and d!28823 (not res!52544)) b!105523))

(assert (=> d!28823 m!117489))

(declare-fun m!117755 () Bool)

(assert (=> d!28823 m!117755))

(assert (=> b!105521 m!117489))

(declare-fun m!117757 () Bool)

(assert (=> b!105521 m!117757))

(assert (=> b!105521 m!117489))

(declare-fun m!117759 () Bool)

(assert (=> b!105521 m!117759))

(assert (=> b!105521 m!117759))

(declare-fun m!117761 () Bool)

(assert (=> b!105521 m!117761))

(assert (=> b!105523 m!117489))

(assert (=> b!105523 m!117759))

(assert (=> b!105523 m!117759))

(assert (=> b!105523 m!117761))

(assert (=> b!105298 d!28823))

(declare-fun bm!11132 () Bool)

(declare-fun call!11142 () ListLongMap!1575)

(declare-fun call!11146 () ListLongMap!1575)

(assert (=> bm!11132 (= call!11142 call!11146)))

(declare-fun b!105604 () Bool)

(declare-fun e!68773 () Bool)

(declare-fun call!11145 () ListLongMap!1575)

(declare-fun call!11140 () ListLongMap!1575)

(assert (=> b!105604 (= e!68773 (= call!11145 call!11140))))

(declare-fun bm!11133 () Bool)

(declare-fun call!11157 () Bool)

(declare-fun call!11136 () Bool)

(assert (=> bm!11133 (= call!11157 call!11136)))

(declare-fun b!105606 () Bool)

(declare-fun e!68763 () tuple2!2412)

(declare-fun e!68766 () tuple2!2412)

(assert (=> b!105606 (= e!68763 e!68766)))

(declare-fun c!18364 () Bool)

(declare-datatypes ((SeekEntryResult!259 0))(
  ( (MissingZero!259 (index!3184 (_ BitVec 32))) (Found!259 (index!3185 (_ BitVec 32))) (Intermediate!259 (undefined!1071 Bool) (index!3186 (_ BitVec 32)) (x!13645 (_ BitVec 32))) (Undefined!259) (MissingVacant!259 (index!3187 (_ BitVec 32))) )
))
(declare-fun lt!54060 () SeekEntryResult!259)

(assert (=> b!105606 (= c!18364 ((_ is MissingZero!259) lt!54060))))

(declare-fun b!105607 () Bool)

(declare-fun e!68764 () Unit!3232)

(declare-fun lt!54061 () Unit!3232)

(assert (=> b!105607 (= e!68764 lt!54061)))

(declare-fun call!11148 () Unit!3232)

(assert (=> b!105607 (= lt!54061 call!11148)))

(declare-fun lt!54042 () SeekEntryResult!259)

(declare-fun call!11158 () SeekEntryResult!259)

(assert (=> b!105607 (= lt!54042 call!11158)))

(declare-fun c!18368 () Bool)

(assert (=> b!105607 (= c!18368 ((_ is MissingZero!259) lt!54042))))

(declare-fun e!68779 () Bool)

(assert (=> b!105607 e!68779))

(declare-fun c!18367 () Bool)

(declare-fun c!18365 () Bool)

(declare-fun c!18373 () Bool)

(declare-fun lt!54047 () SeekEntryResult!259)

(declare-fun c!18374 () Bool)

(declare-fun lt!54045 () SeekEntryResult!259)

(declare-fun lt!54066 () SeekEntryResult!259)

(declare-fun bm!11134 () Bool)

(declare-fun call!11143 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11134 (= call!11143 (inRange!0 (ite c!18367 (ite c!18373 (index!3185 lt!54047) (ite c!18368 (index!3184 lt!54042) (index!3187 lt!54042))) (ite c!18374 (index!3185 lt!54066) (ite c!18365 (index!3184 lt!54045) (index!3187 lt!54045)))) (mask!6728 newMap!16)))))

(declare-fun b!105608 () Bool)

(declare-fun res!52575 () Bool)

(declare-fun e!68778 () Bool)

(assert (=> b!105608 (=> (not res!52575) (not e!68778))))

(declare-fun call!11152 () Bool)

(assert (=> b!105608 (= res!52575 call!11152)))

(assert (=> b!105608 (= e!68779 e!68778)))

(declare-fun b!105609 () Bool)

(declare-fun res!52580 () Bool)

(declare-fun e!68781 () Bool)

(assert (=> b!105609 (=> (not res!52580) (not e!68781))))

(assert (=> b!105609 (= res!52580 call!11157)))

(declare-fun e!68769 () Bool)

(assert (=> b!105609 (= e!68769 e!68781)))

(declare-fun b!105610 () Bool)

(declare-fun e!68767 () Bool)

(declare-fun call!11155 () Bool)

(assert (=> b!105610 (= e!68767 (not call!11155))))

(declare-fun b!105611 () Bool)

(declare-fun lt!54054 () Unit!3232)

(declare-fun lt!54044 () Unit!3232)

(assert (=> b!105611 (= lt!54054 lt!54044)))

(declare-fun call!11137 () ListLongMap!1575)

(assert (=> b!105611 (= call!11142 call!11137)))

(declare-fun lt!54051 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 V!3219 Int) Unit!3232)

(assert (=> b!105611 (= lt!54044 (lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!54051 (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) lt!53807 (defaultEntry!2582 newMap!16)))))

(assert (=> b!105611 (= lt!54051 (bvor (extraKeys!2387 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!68768 () tuple2!2412)

(assert (=> b!105611 (= e!68768 (tuple2!2413 true (LongMapFixedSize!901 (defaultEntry!2582 newMap!16) (mask!6728 newMap!16) (bvor (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) (zeroValue!2457 newMap!16) lt!53807 (_size!499 newMap!16) (_keys!4288 newMap!16) (_values!2565 newMap!16) (_vacant!499 newMap!16))))))

(declare-fun b!105612 () Bool)

(declare-fun res!52577 () Bool)

(assert (=> b!105612 (= res!52577 call!11136)))

(declare-fun e!68776 () Bool)

(assert (=> b!105612 (=> (not res!52577) (not e!68776))))

(declare-fun b!105613 () Bool)

(declare-fun e!68770 () Bool)

(declare-fun e!68775 () Bool)

(assert (=> b!105613 (= e!68770 e!68775)))

(declare-fun res!52586 () Bool)

(assert (=> b!105613 (= res!52586 call!11157)))

(assert (=> b!105613 (=> (not res!52586) (not e!68775))))

(declare-fun bm!11135 () Bool)

(declare-fun lt!54050 () tuple2!2412)

(assert (=> bm!11135 (= call!11145 (map!1286 (_2!1217 lt!54050)))))

(declare-fun b!105614 () Bool)

(assert (=> b!105614 (= e!68778 (not call!11155))))

(declare-fun b!105615 () Bool)

(declare-fun res!52582 () Bool)

(assert (=> b!105615 (= res!52582 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3187 lt!54042)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105615 (=> (not res!52582) (not e!68767))))

(declare-fun bm!11136 () Bool)

(declare-fun call!11138 () Bool)

(assert (=> bm!11136 (= call!11138 call!11143)))

(declare-fun b!105616 () Bool)

(declare-fun e!68780 () Bool)

(assert (=> b!105616 (= e!68780 ((_ is Undefined!259) lt!54042))))

(declare-fun bm!11137 () Bool)

(declare-fun call!11153 () Bool)

(declare-fun call!11135 () Bool)

(assert (=> bm!11137 (= call!11153 call!11135)))

(declare-fun b!105617 () Bool)

(declare-fun lt!54065 () Unit!3232)

(declare-fun lt!54057 () Unit!3232)

(assert (=> b!105617 (= lt!54065 lt!54057)))

(declare-fun call!11150 () Bool)

(assert (=> b!105617 call!11150))

(declare-fun lt!54058 () array!4351)

(declare-fun lemmaValidKeyInArrayIsInListMap!108 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) Int) Unit!3232)

(assert (=> b!105617 (= lt!54057 (lemmaValidKeyInArrayIsInListMap!108 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3185 lt!54060) (defaultEntry!2582 newMap!16)))))

(assert (=> b!105617 (= lt!54058 (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))))

(declare-fun lt!54053 () Unit!3232)

(declare-fun lt!54055 () Unit!3232)

(assert (=> b!105617 (= lt!54053 lt!54055)))

(declare-fun call!11147 () ListLongMap!1575)

(assert (=> b!105617 (= call!11146 call!11147)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) (_ BitVec 64) V!3219 Int) Unit!3232)

(assert (=> b!105617 (= lt!54055 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3185 lt!54060) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54062 () Unit!3232)

(declare-fun e!68771 () Unit!3232)

(assert (=> b!105617 (= lt!54062 e!68771)))

(assert (=> b!105617 (= c!18374 (contains!828 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105617 (= e!68766 (tuple2!2413 true (LongMapFixedSize!901 (defaultEntry!2582 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (_size!499 newMap!16) (_keys!4288 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (_vacant!499 newMap!16))))))

(declare-fun bm!11138 () Bool)

(declare-fun call!11141 () ListLongMap!1575)

(assert (=> bm!11138 (= call!11150 (contains!828 call!11141 (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))

(declare-fun bm!11139 () Bool)

(assert (=> bm!11139 (= call!11152 call!11138)))

(declare-fun call!11144 () ListLongMap!1575)

(declare-fun e!68782 () ListLongMap!1575)

(declare-fun c!18363 () Bool)

(declare-fun b!105618 () Bool)

(assert (=> b!105618 (= e!68782 (ite c!18363 call!11137 call!11144))))

(declare-fun b!105619 () Bool)

(assert (=> b!105619 (= e!68775 (not call!11153))))

(declare-fun b!105620 () Bool)

(declare-fun e!68765 () tuple2!2412)

(assert (=> b!105620 (= e!68765 e!68768)))

(assert (=> b!105620 (= c!18363 (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105621 () Bool)

(declare-fun e!68783 () Bool)

(assert (=> b!105621 (= e!68773 e!68783)))

(declare-fun res!52581 () Bool)

(assert (=> b!105621 (= res!52581 (contains!828 call!11145 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105621 (=> (not res!52581) (not e!68783))))

(declare-fun bm!11140 () Bool)

(declare-fun call!11149 () SeekEntryResult!259)

(assert (=> bm!11140 (= call!11158 call!11149)))

(declare-fun bm!11141 () Bool)

(assert (=> bm!11141 (= call!11135 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!105622 () Bool)

(declare-fun lt!54064 () Unit!3232)

(declare-fun lt!54056 () Unit!3232)

(assert (=> b!105622 (= lt!54064 lt!54056)))

(assert (=> b!105622 (= call!11142 call!11144)))

(declare-fun lt!54041 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!47 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 V!3219 Int) Unit!3232)

(assert (=> b!105622 (= lt!54056 (lemmaChangeZeroKeyThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!54041 (zeroValue!2457 newMap!16) lt!53807 (minValue!2457 newMap!16) (defaultEntry!2582 newMap!16)))))

(assert (=> b!105622 (= lt!54041 (bvor (extraKeys!2387 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!105622 (= e!68768 (tuple2!2413 true (LongMapFixedSize!901 (defaultEntry!2582 newMap!16) (mask!6728 newMap!16) (bvor (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) lt!53807 (minValue!2457 newMap!16) (_size!499 newMap!16) (_keys!4288 newMap!16) (_values!2565 newMap!16) (_vacant!499 newMap!16))))))

(declare-fun b!105605 () Bool)

(declare-fun Unit!3242 () Unit!3232)

(assert (=> b!105605 (= e!68771 Unit!3242)))

(declare-fun lt!54067 () Unit!3232)

(assert (=> b!105605 (= lt!54067 call!11148)))

(declare-fun call!11139 () SeekEntryResult!259)

(assert (=> b!105605 (= lt!54045 call!11139)))

(assert (=> b!105605 (= c!18365 ((_ is MissingZero!259) lt!54045))))

(assert (=> b!105605 e!68769))

(declare-fun lt!54052 () Unit!3232)

(assert (=> b!105605 (= lt!54052 lt!54067)))

(assert (=> b!105605 false))

(declare-fun d!28825 () Bool)

(declare-fun e!68774 () Bool)

(assert (=> d!28825 e!68774))

(declare-fun res!52578 () Bool)

(assert (=> d!28825 (=> (not res!52578) (not e!68774))))

(assert (=> d!28825 (= res!52578 (valid!421 (_2!1217 lt!54050)))))

(assert (=> d!28825 (= lt!54050 e!68765)))

(declare-fun c!18369 () Bool)

(assert (=> d!28825 (= c!18369 (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvneg (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!28825 (valid!421 newMap!16)))

(assert (=> d!28825 (= (update!156 newMap!16 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807) lt!54050)))

(declare-fun b!105623 () Bool)

(assert (=> b!105623 (= e!68782 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!105624 () Bool)

(assert (=> b!105624 (= e!68770 ((_ is Undefined!259) lt!54045))))

(declare-fun bm!11142 () Bool)

(assert (=> bm!11142 (= call!11144 call!11147)))

(declare-fun bm!11143 () Bool)

(assert (=> bm!11143 (= call!11140 (map!1286 newMap!16))))

(declare-fun bm!11144 () Bool)

(assert (=> bm!11144 (= call!11155 call!11135)))

(declare-fun b!105625 () Bool)

(declare-fun lt!54049 () tuple2!2412)

(assert (=> b!105625 (= e!68763 (tuple2!2413 (_1!1217 lt!54049) (_2!1217 lt!54049)))))

(declare-fun call!11151 () tuple2!2412)

(assert (=> b!105625 (= lt!54049 call!11151)))

(declare-fun b!105626 () Bool)

(declare-fun res!52579 () Bool)

(assert (=> b!105626 (= res!52579 call!11138)))

(declare-fun e!68772 () Bool)

(assert (=> b!105626 (=> (not res!52579) (not e!68772))))

(declare-fun bm!11145 () Bool)

(declare-fun c!18370 () Bool)

(declare-fun updateHelperNewKey!47 (LongMapFixedSize!900 (_ BitVec 64) V!3219 (_ BitVec 32)) tuple2!2412)

(assert (=> bm!11145 (= call!11151 (updateHelperNewKey!47 newMap!16 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))))))

(declare-fun bm!11146 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) Int) Unit!3232)

(assert (=> bm!11146 (= call!11148 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(declare-fun b!105627 () Bool)

(assert (=> b!105627 (= e!68780 e!68767)))

(declare-fun res!52576 () Bool)

(assert (=> b!105627 (= res!52576 call!11152)))

(assert (=> b!105627 (=> (not res!52576) (not e!68767))))

(declare-fun b!105628 () Bool)

(declare-fun res!52585 () Bool)

(assert (=> b!105628 (=> (not res!52585) (not e!68781))))

(assert (=> b!105628 (= res!52585 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3184 lt!54045)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11147 () Bool)

(assert (=> bm!11147 (= call!11136 call!11143)))

(declare-fun b!105629 () Bool)

(assert (=> b!105629 (= e!68772 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54047)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun bm!11148 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4349 (_ BitVec 32)) SeekEntryResult!259)

(assert (=> bm!11148 (= call!11149 (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun bm!11149 () Bool)

(assert (=> bm!11149 (= call!11139 call!11149)))

(declare-fun b!105630 () Bool)

(declare-fun lt!54063 () Unit!3232)

(assert (=> b!105630 (= lt!54063 e!68764)))

(assert (=> b!105630 (= c!18373 call!11150)))

(declare-fun e!68777 () tuple2!2412)

(assert (=> b!105630 (= e!68777 (tuple2!2413 false newMap!16))))

(declare-fun bm!11150 () Bool)

(declare-fun call!11156 () ListLongMap!1575)

(assert (=> bm!11150 (= call!11156 (getCurrentListMap!489 (_keys!4288 newMap!16) (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058) (mask!6728 newMap!16) (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!105631 () Bool)

(assert (=> b!105631 (= e!68774 e!68773)))

(declare-fun c!18362 () Bool)

(assert (=> b!105631 (= c!18362 (_1!1217 lt!54050))))

(declare-fun bm!11151 () Bool)

(assert (=> bm!11151 (= call!11147 (getCurrentListMap!489 (_keys!4288 newMap!16) (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) (mask!6728 newMap!16) (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!105632 () Bool)

(declare-fun res!52583 () Bool)

(assert (=> b!105632 (=> (not res!52583) (not e!68778))))

(assert (=> b!105632 (= res!52583 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3184 lt!54042)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105633 () Bool)

(assert (=> b!105633 (= c!18370 ((_ is MissingVacant!259) lt!54060))))

(assert (=> b!105633 (= e!68777 e!68763)))

(declare-fun bm!11152 () Bool)

(assert (=> bm!11152 (= call!11137 call!11156)))

(declare-fun b!105634 () Bool)

(declare-fun lt!54059 () tuple2!2412)

(assert (=> b!105634 (= lt!54059 call!11151)))

(assert (=> b!105634 (= e!68766 (tuple2!2413 (_1!1217 lt!54059) (_2!1217 lt!54059)))))

(declare-fun b!105635 () Bool)

(declare-fun lt!54048 () Unit!3232)

(assert (=> b!105635 (= e!68771 lt!54048)))

(declare-fun call!11154 () Unit!3232)

(assert (=> b!105635 (= lt!54048 call!11154)))

(assert (=> b!105635 (= lt!54066 call!11139)))

(declare-fun res!52573 () Bool)

(assert (=> b!105635 (= res!52573 ((_ is Found!259) lt!54066))))

(assert (=> b!105635 (=> (not res!52573) (not e!68776))))

(assert (=> b!105635 e!68776))

(declare-fun bm!11153 () Bool)

(assert (=> bm!11153 (= call!11146 (+!144 e!68782 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun c!18371 () Bool)

(assert (=> bm!11153 (= c!18371 c!18369)))

(declare-fun bm!11154 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) Int) Unit!3232)

(assert (=> bm!11154 (= call!11154 (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(declare-fun b!105636 () Bool)

(assert (=> b!105636 (= e!68781 (not call!11153))))

(declare-fun b!105637 () Bool)

(assert (=> b!105637 (= e!68783 (= call!11145 (+!144 call!11140 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!105638 () Bool)

(declare-fun Unit!3243 () Unit!3232)

(assert (=> b!105638 (= e!68764 Unit!3243)))

(declare-fun lt!54043 () Unit!3232)

(assert (=> b!105638 (= lt!54043 call!11154)))

(assert (=> b!105638 (= lt!54047 call!11158)))

(declare-fun res!52584 () Bool)

(assert (=> b!105638 (= res!52584 ((_ is Found!259) lt!54047))))

(assert (=> b!105638 (=> (not res!52584) (not e!68772))))

(assert (=> b!105638 e!68772))

(declare-fun lt!54046 () Unit!3232)

(assert (=> b!105638 (= lt!54046 lt!54043)))

(assert (=> b!105638 false))

(declare-fun b!105639 () Bool)

(assert (=> b!105639 (= e!68765 e!68777)))

(assert (=> b!105639 (= lt!54060 (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(assert (=> b!105639 (= c!18367 ((_ is Undefined!259) lt!54060))))

(declare-fun b!105640 () Bool)

(declare-fun c!18372 () Bool)

(assert (=> b!105640 (= c!18372 ((_ is MissingVacant!259) lt!54045))))

(assert (=> b!105640 (= e!68769 e!68770)))

(declare-fun b!105641 () Bool)

(declare-fun res!52574 () Bool)

(assert (=> b!105641 (= res!52574 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3187 lt!54045)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105641 (=> (not res!52574) (not e!68775))))

(declare-fun b!105642 () Bool)

(declare-fun c!18366 () Bool)

(assert (=> b!105642 (= c!18366 ((_ is MissingVacant!259) lt!54042))))

(assert (=> b!105642 (= e!68779 e!68780)))

(declare-fun bm!11155 () Bool)

(assert (=> bm!11155 (= call!11141 call!11156)))

(declare-fun b!105643 () Bool)

(assert (=> b!105643 (= e!68776 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54066)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!28825 c!18369) b!105620))

(assert (= (and d!28825 (not c!18369)) b!105639))

(assert (= (and b!105620 c!18363) b!105622))

(assert (= (and b!105620 (not c!18363)) b!105611))

(assert (= (or b!105622 b!105611) bm!11142))

(assert (= (or b!105622 b!105611) bm!11152))

(assert (= (or b!105622 b!105611) bm!11132))

(assert (= (and b!105639 c!18367) b!105630))

(assert (= (and b!105639 (not c!18367)) b!105633))

(assert (= (and b!105630 c!18373) b!105638))

(assert (= (and b!105630 (not c!18373)) b!105607))

(assert (= (and b!105638 res!52584) b!105626))

(assert (= (and b!105626 res!52579) b!105629))

(assert (= (and b!105607 c!18368) b!105608))

(assert (= (and b!105607 (not c!18368)) b!105642))

(assert (= (and b!105608 res!52575) b!105632))

(assert (= (and b!105632 res!52583) b!105614))

(assert (= (and b!105642 c!18366) b!105627))

(assert (= (and b!105642 (not c!18366)) b!105616))

(assert (= (and b!105627 res!52576) b!105615))

(assert (= (and b!105615 res!52582) b!105610))

(assert (= (or b!105608 b!105627) bm!11139))

(assert (= (or b!105614 b!105610) bm!11144))

(assert (= (or b!105626 bm!11139) bm!11136))

(assert (= (or b!105638 b!105607) bm!11140))

(assert (= (and b!105633 c!18370) b!105625))

(assert (= (and b!105633 (not c!18370)) b!105606))

(assert (= (and b!105606 c!18364) b!105634))

(assert (= (and b!105606 (not c!18364)) b!105617))

(assert (= (and b!105617 c!18374) b!105635))

(assert (= (and b!105617 (not c!18374)) b!105605))

(assert (= (and b!105635 res!52573) b!105612))

(assert (= (and b!105612 res!52577) b!105643))

(assert (= (and b!105605 c!18365) b!105609))

(assert (= (and b!105605 (not c!18365)) b!105640))

(assert (= (and b!105609 res!52580) b!105628))

(assert (= (and b!105628 res!52585) b!105636))

(assert (= (and b!105640 c!18372) b!105613))

(assert (= (and b!105640 (not c!18372)) b!105624))

(assert (= (and b!105613 res!52586) b!105641))

(assert (= (and b!105641 res!52574) b!105619))

(assert (= (or b!105609 b!105613) bm!11133))

(assert (= (or b!105636 b!105619) bm!11137))

(assert (= (or b!105612 bm!11133) bm!11147))

(assert (= (or b!105635 b!105605) bm!11149))

(assert (= (or b!105625 b!105634) bm!11145))

(assert (= (or bm!11136 bm!11147) bm!11134))

(assert (= (or b!105630 b!105617) bm!11155))

(assert (= (or b!105638 b!105635) bm!11154))

(assert (= (or b!105607 b!105605) bm!11146))

(assert (= (or bm!11144 bm!11137) bm!11141))

(assert (= (or bm!11140 bm!11149) bm!11148))

(assert (= (or b!105630 b!105617) bm!11138))

(assert (= (or bm!11142 b!105617) bm!11151))

(assert (= (or bm!11152 bm!11155) bm!11150))

(assert (= (or bm!11132 b!105617) bm!11153))

(assert (= (and bm!11153 c!18371) b!105618))

(assert (= (and bm!11153 (not c!18371)) b!105623))

(assert (= (and d!28825 res!52578) b!105631))

(assert (= (and b!105631 c!18362) b!105621))

(assert (= (and b!105631 (not c!18362)) b!105604))

(assert (= (and b!105621 res!52581) b!105637))

(assert (= (or b!105621 b!105637 b!105604) bm!11135))

(assert (= (or b!105637 b!105604) bm!11143))

(assert (=> bm!11143 m!117507))

(declare-fun m!117763 () Bool)

(assert (=> bm!11150 m!117763))

(assert (=> bm!11145 m!117489))

(declare-fun m!117765 () Bool)

(assert (=> bm!11145 m!117765))

(assert (=> bm!11154 m!117489))

(declare-fun m!117767 () Bool)

(assert (=> bm!11154 m!117767))

(declare-fun m!117769 () Bool)

(assert (=> bm!11134 m!117769))

(declare-fun m!117771 () Bool)

(assert (=> b!105629 m!117771))

(declare-fun m!117773 () Bool)

(assert (=> b!105641 m!117773))

(assert (=> bm!11146 m!117489))

(declare-fun m!117775 () Bool)

(assert (=> bm!11146 m!117775))

(declare-fun m!117777 () Bool)

(assert (=> b!105628 m!117777))

(assert (=> bm!11148 m!117489))

(declare-fun m!117779 () Bool)

(assert (=> bm!11148 m!117779))

(declare-fun m!117781 () Bool)

(assert (=> bm!11153 m!117781))

(assert (=> b!105639 m!117489))

(assert (=> b!105639 m!117779))

(assert (=> b!105617 m!117707))

(declare-fun m!117783 () Bool)

(assert (=> b!105617 m!117783))

(assert (=> b!105617 m!117707))

(assert (=> b!105617 m!117489))

(declare-fun m!117785 () Bool)

(assert (=> b!105617 m!117785))

(declare-fun m!117787 () Bool)

(assert (=> b!105617 m!117787))

(assert (=> b!105617 m!117489))

(declare-fun m!117789 () Bool)

(assert (=> b!105617 m!117789))

(declare-fun m!117791 () Bool)

(assert (=> b!105622 m!117791))

(declare-fun m!117793 () Bool)

(assert (=> b!105611 m!117793))

(declare-fun m!117795 () Bool)

(assert (=> b!105615 m!117795))

(declare-fun m!117797 () Bool)

(assert (=> bm!11138 m!117797))

(declare-fun m!117799 () Bool)

(assert (=> bm!11138 m!117799))

(assert (=> b!105623 m!117707))

(assert (=> b!105621 m!117489))

(declare-fun m!117801 () Bool)

(assert (=> b!105621 m!117801))

(assert (=> bm!11141 m!117489))

(declare-fun m!117803 () Bool)

(assert (=> bm!11141 m!117803))

(declare-fun m!117805 () Bool)

(assert (=> d!28825 m!117805))

(assert (=> d!28825 m!117503))

(declare-fun m!117807 () Bool)

(assert (=> bm!11135 m!117807))

(assert (=> bm!11151 m!117787))

(declare-fun m!117809 () Bool)

(assert (=> bm!11151 m!117809))

(declare-fun m!117811 () Bool)

(assert (=> b!105632 m!117811))

(declare-fun m!117813 () Bool)

(assert (=> b!105637 m!117813))

(declare-fun m!117815 () Bool)

(assert (=> b!105643 m!117815))

(assert (=> b!105298 d!28825))

(declare-fun d!28827 () Bool)

(declare-fun c!18377 () Bool)

(assert (=> d!28827 (= c!18377 ((_ is ValueCellFull!996) (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!68786 () V!3219)

(assert (=> d!28827 (= (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68786)))

(declare-fun b!105648 () Bool)

(declare-fun get!1332 (ValueCell!996 V!3219) V!3219)

(assert (=> b!105648 (= e!68786 (get!1332 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105649 () Bool)

(declare-fun get!1333 (ValueCell!996 V!3219) V!3219)

(assert (=> b!105649 (= e!68786 (get!1333 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28827 c!18377) b!105648))

(assert (= (and d!28827 (not c!18377)) b!105649))

(assert (=> b!105648 m!117497))

(assert (=> b!105648 m!117499))

(declare-fun m!117817 () Bool)

(assert (=> b!105648 m!117817))

(assert (=> b!105649 m!117497))

(assert (=> b!105649 m!117499))

(declare-fun m!117819 () Bool)

(assert (=> b!105649 m!117819))

(assert (=> b!105300 d!28827))

(declare-fun mapNonEmpty!3939 () Bool)

(declare-fun mapRes!3939 () Bool)

(declare-fun tp!9915 () Bool)

(declare-fun e!68791 () Bool)

(assert (=> mapNonEmpty!3939 (= mapRes!3939 (and tp!9915 e!68791))))

(declare-fun mapKey!3939 () (_ BitVec 32))

(declare-fun mapValue!3939 () ValueCell!996)

(declare-fun mapRest!3939 () (Array (_ BitVec 32) ValueCell!996))

(assert (=> mapNonEmpty!3939 (= mapRest!3930 (store mapRest!3939 mapKey!3939 mapValue!3939))))

(declare-fun b!105656 () Bool)

(assert (=> b!105656 (= e!68791 tp_is_empty!2679)))

(declare-fun condMapEmpty!3939 () Bool)

(declare-fun mapDefault!3939 () ValueCell!996)

(assert (=> mapNonEmpty!3930 (= condMapEmpty!3939 (= mapRest!3930 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3939)))))

(declare-fun e!68792 () Bool)

(assert (=> mapNonEmpty!3930 (= tp!9898 (and e!68792 mapRes!3939))))

(declare-fun mapIsEmpty!3939 () Bool)

(assert (=> mapIsEmpty!3939 mapRes!3939))

(declare-fun b!105657 () Bool)

(assert (=> b!105657 (= e!68792 tp_is_empty!2679)))

(assert (= (and mapNonEmpty!3930 condMapEmpty!3939) mapIsEmpty!3939))

(assert (= (and mapNonEmpty!3930 (not condMapEmpty!3939)) mapNonEmpty!3939))

(assert (= (and mapNonEmpty!3939 ((_ is ValueCellFull!996) mapValue!3939)) b!105656))

(assert (= (and mapNonEmpty!3930 ((_ is ValueCellFull!996) mapDefault!3939)) b!105657))

(declare-fun m!117821 () Bool)

(assert (=> mapNonEmpty!3939 m!117821))

(declare-fun mapNonEmpty!3940 () Bool)

(declare-fun mapRes!3940 () Bool)

(declare-fun tp!9916 () Bool)

(declare-fun e!68793 () Bool)

(assert (=> mapNonEmpty!3940 (= mapRes!3940 (and tp!9916 e!68793))))

(declare-fun mapRest!3940 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapKey!3940 () (_ BitVec 32))

(declare-fun mapValue!3940 () ValueCell!996)

(assert (=> mapNonEmpty!3940 (= mapRest!3929 (store mapRest!3940 mapKey!3940 mapValue!3940))))

(declare-fun b!105658 () Bool)

(assert (=> b!105658 (= e!68793 tp_is_empty!2679)))

(declare-fun condMapEmpty!3940 () Bool)

(declare-fun mapDefault!3940 () ValueCell!996)

(assert (=> mapNonEmpty!3929 (= condMapEmpty!3940 (= mapRest!3929 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3940)))))

(declare-fun e!68794 () Bool)

(assert (=> mapNonEmpty!3929 (= tp!9897 (and e!68794 mapRes!3940))))

(declare-fun mapIsEmpty!3940 () Bool)

(assert (=> mapIsEmpty!3940 mapRes!3940))

(declare-fun b!105659 () Bool)

(assert (=> b!105659 (= e!68794 tp_is_empty!2679)))

(assert (= (and mapNonEmpty!3929 condMapEmpty!3940) mapIsEmpty!3940))

(assert (= (and mapNonEmpty!3929 (not condMapEmpty!3940)) mapNonEmpty!3940))

(assert (= (and mapNonEmpty!3940 ((_ is ValueCellFull!996) mapValue!3940)) b!105658))

(assert (= (and mapNonEmpty!3929 ((_ is ValueCellFull!996) mapDefault!3940)) b!105659))

(declare-fun m!117823 () Bool)

(assert (=> mapNonEmpty!3940 m!117823))

(declare-fun b_lambda!4727 () Bool)

(assert (= b_lambda!4723 (or (and b!105285 b_free!2525) (and b!105288 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))) b_lambda!4727)))

(declare-fun b_lambda!4729 () Bool)

(assert (= b_lambda!4725 (or (and b!105285 b_free!2525) (and b!105288 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))) b_lambda!4729)))

(declare-fun b_lambda!4731 () Bool)

(assert (= b_lambda!4721 (or (and b!105285 b_free!2525) (and b!105288 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))) b_lambda!4731)))

(check-sat (not b!105621) (not d!28815) (not b!105435) (not bm!11138) (not d!28809) tp_is_empty!2679 (not d!28801) (not b!105426) (not d!28825) (not b!105639) (not b!105421) (not b!105514) (not b!105449) (not mapNonEmpty!3939) (not b_lambda!4719) (not b!105649) (not bm!11153) (not d!28817) (not bm!11080) (not b!105523) (not d!28789) (not b!105419) (not b!105422) b_and!6527 (not b!105611) (not bm!11059) (not b!105637) (not b!105394) (not d!28805) (not b!105617) (not bm!11135) (not b!105428) (not b!105439) (not bm!11083) (not d!28795) (not b_next!2525) (not b!105429) (not b!105521) (not d!28807) (not bm!11151) (not b!105622) (not b_lambda!4729) (not b!105505) (not b!105436) (not b!105390) (not d!28799) (not b_lambda!4727) (not b!105441) (not bm!11062) (not d!28793) (not b!105423) (not b!105373) (not b!105498) (not bm!11134) (not bm!11145) (not b!105451) (not b!105378) (not bm!11148) (not b!105506) (not bm!11146) (not d!28785) (not b!105437) (not b!105450) (not b!105427) (not b!105513) (not d!28823) (not b_lambda!4731) (not b!105648) (not b!105442) (not b_next!2527) (not b!105623) (not d!28797) (not b!105494) (not b!105438) (not bm!11141) b_and!6529 (not mapNonEmpty!3940) (not b!105392) (not bm!11143) (not d!28783) (not bm!11154) (not b!105502) (not bm!11077) (not b!105440) (not bm!11082) (not b!105496) (not bm!11150))
(check-sat b_and!6527 b_and!6529 (not b_next!2525) (not b_next!2527))
(get-model)

(declare-fun d!28829 () Bool)

(declare-fun e!68795 () Bool)

(assert (=> d!28829 e!68795))

(declare-fun res!52587 () Bool)

(assert (=> d!28829 (=> (not res!52587) (not e!68795))))

(declare-fun lt!54069 () ListLongMap!1575)

(assert (=> d!28829 (= res!52587 (contains!828 lt!54069 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54071 () List!1617)

(assert (=> d!28829 (= lt!54069 (ListLongMap!1576 lt!54071))))

(declare-fun lt!54070 () Unit!3232)

(declare-fun lt!54068 () Unit!3232)

(assert (=> d!28829 (= lt!54070 lt!54068)))

(assert (=> d!28829 (= (getValueByKey!156 lt!54071 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28829 (= lt!54068 (lemmaContainsTupThenGetReturnValue!72 lt!54071 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28829 (= lt!54071 (insertStrictlySorted!75 (toList!803 lt!53971) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28829 (= (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54069)))

(declare-fun b!105660 () Bool)

(declare-fun res!52588 () Bool)

(assert (=> b!105660 (=> (not res!52588) (not e!68795))))

(assert (=> b!105660 (= res!52588 (= (getValueByKey!156 (toList!803 lt!54069) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105661 () Bool)

(assert (=> b!105661 (= e!68795 (contains!830 (toList!803 lt!54069) (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28829 res!52587) b!105660))

(assert (= (and b!105660 res!52588) b!105661))

(declare-fun m!117825 () Bool)

(assert (=> d!28829 m!117825))

(declare-fun m!117827 () Bool)

(assert (=> d!28829 m!117827))

(declare-fun m!117829 () Bool)

(assert (=> d!28829 m!117829))

(declare-fun m!117831 () Bool)

(assert (=> d!28829 m!117831))

(declare-fun m!117833 () Bool)

(assert (=> b!105660 m!117833))

(declare-fun m!117835 () Bool)

(assert (=> b!105661 m!117835))

(assert (=> b!105494 d!28829))

(declare-fun d!28831 () Bool)

(assert (=> d!28831 (= (apply!98 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53970) (apply!98 lt!53959 lt!53970))))

(declare-fun lt!54074 () Unit!3232)

(declare-fun choose!654 (ListLongMap!1575 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3232)

(assert (=> d!28831 (= lt!54074 (choose!654 lt!53959 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53970))))

(declare-fun e!68798 () Bool)

(assert (=> d!28831 e!68798))

(declare-fun res!52591 () Bool)

(assert (=> d!28831 (=> (not res!52591) (not e!68798))))

(assert (=> d!28831 (= res!52591 (contains!828 lt!53959 lt!53970))))

(assert (=> d!28831 (= (addApplyDifferent!74 lt!53959 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53970) lt!54074)))

(declare-fun b!105665 () Bool)

(assert (=> b!105665 (= e!68798 (not (= lt!53970 lt!53961)))))

(assert (= (and d!28831 res!52591) b!105665))

(declare-fun m!117837 () Bool)

(assert (=> d!28831 m!117837))

(assert (=> d!28831 m!117737))

(assert (=> d!28831 m!117751))

(assert (=> d!28831 m!117737))

(declare-fun m!117839 () Bool)

(assert (=> d!28831 m!117839))

(assert (=> d!28831 m!117735))

(assert (=> b!105494 d!28831))

(assert (=> b!105494 d!28795))

(declare-fun d!28833 () Bool)

(assert (=> d!28833 (contains!828 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53954)))

(declare-fun lt!54077 () Unit!3232)

(declare-fun choose!655 (ListLongMap!1575 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3232)

(assert (=> d!28833 (= lt!54077 (choose!655 lt!53956 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53954))))

(assert (=> d!28833 (contains!828 lt!53956 lt!53954)))

(assert (=> d!28833 (= (addStillContains!74 lt!53956 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53954) lt!54077)))

(declare-fun bs!4340 () Bool)

(assert (= bs!4340 d!28833))

(assert (=> bs!4340 m!117731))

(assert (=> bs!4340 m!117731))

(assert (=> bs!4340 m!117749))

(declare-fun m!117841 () Bool)

(assert (=> bs!4340 m!117841))

(declare-fun m!117843 () Bool)

(assert (=> bs!4340 m!117843))

(assert (=> b!105494 d!28833))

(declare-fun d!28835 () Bool)

(declare-fun e!68799 () Bool)

(assert (=> d!28835 e!68799))

(declare-fun res!52592 () Bool)

(assert (=> d!28835 (=> (not res!52592) (not e!68799))))

(declare-fun lt!54079 () ListLongMap!1575)

(assert (=> d!28835 (= res!52592 (contains!828 lt!54079 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54081 () List!1617)

(assert (=> d!28835 (= lt!54079 (ListLongMap!1576 lt!54081))))

(declare-fun lt!54080 () Unit!3232)

(declare-fun lt!54078 () Unit!3232)

(assert (=> d!28835 (= lt!54080 lt!54078)))

(assert (=> d!28835 (= (getValueByKey!156 lt!54081 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28835 (= lt!54078 (lemmaContainsTupThenGetReturnValue!72 lt!54081 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28835 (= lt!54081 (insertStrictlySorted!75 (toList!803 lt!53959) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28835 (= (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54079)))

(declare-fun b!105667 () Bool)

(declare-fun res!52593 () Bool)

(assert (=> b!105667 (=> (not res!52593) (not e!68799))))

(assert (=> b!105667 (= res!52593 (= (getValueByKey!156 (toList!803 lt!54079) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105668 () Bool)

(assert (=> b!105668 (= e!68799 (contains!830 (toList!803 lt!54079) (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28835 res!52592) b!105667))

(assert (= (and b!105667 res!52593) b!105668))

(declare-fun m!117845 () Bool)

(assert (=> d!28835 m!117845))

(declare-fun m!117847 () Bool)

(assert (=> d!28835 m!117847))

(declare-fun m!117849 () Bool)

(assert (=> d!28835 m!117849))

(declare-fun m!117851 () Bool)

(assert (=> d!28835 m!117851))

(declare-fun m!117853 () Bool)

(assert (=> b!105667 m!117853))

(declare-fun m!117855 () Bool)

(assert (=> b!105668 m!117855))

(assert (=> b!105494 d!28835))

(declare-fun d!28837 () Bool)

(declare-fun get!1334 (Option!162) V!3219)

(assert (=> d!28837 (= (apply!98 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53957) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53957)))))

(declare-fun bs!4341 () Bool)

(assert (= bs!4341 d!28837))

(declare-fun m!117857 () Bool)

(assert (=> bs!4341 m!117857))

(assert (=> bs!4341 m!117857))

(declare-fun m!117859 () Bool)

(assert (=> bs!4341 m!117859))

(assert (=> b!105494 d!28837))

(declare-fun d!28839 () Bool)

(declare-fun e!68800 () Bool)

(assert (=> d!28839 e!68800))

(declare-fun res!52594 () Bool)

(assert (=> d!28839 (=> (not res!52594) (not e!68800))))

(declare-fun lt!54083 () ListLongMap!1575)

(assert (=> d!28839 (= res!52594 (contains!828 lt!54083 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54085 () List!1617)

(assert (=> d!28839 (= lt!54083 (ListLongMap!1576 lt!54085))))

(declare-fun lt!54084 () Unit!3232)

(declare-fun lt!54082 () Unit!3232)

(assert (=> d!28839 (= lt!54084 lt!54082)))

(assert (=> d!28839 (= (getValueByKey!156 lt!54085 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28839 (= lt!54082 (lemmaContainsTupThenGetReturnValue!72 lt!54085 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28839 (= lt!54085 (insertStrictlySorted!75 (toList!803 lt!53963) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28839 (= (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54083)))

(declare-fun b!105669 () Bool)

(declare-fun res!52595 () Bool)

(assert (=> b!105669 (=> (not res!52595) (not e!68800))))

(assert (=> b!105669 (= res!52595 (= (getValueByKey!156 (toList!803 lt!54083) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105670 () Bool)

(assert (=> b!105670 (= e!68800 (contains!830 (toList!803 lt!54083) (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28839 res!52594) b!105669))

(assert (= (and b!105669 res!52595) b!105670))

(declare-fun m!117861 () Bool)

(assert (=> d!28839 m!117861))

(declare-fun m!117863 () Bool)

(assert (=> d!28839 m!117863))

(declare-fun m!117865 () Bool)

(assert (=> d!28839 m!117865))

(declare-fun m!117867 () Bool)

(assert (=> d!28839 m!117867))

(declare-fun m!117869 () Bool)

(assert (=> b!105669 m!117869))

(declare-fun m!117871 () Bool)

(assert (=> b!105670 m!117871))

(assert (=> b!105494 d!28839))

(declare-fun d!28841 () Bool)

(declare-fun e!68802 () Bool)

(assert (=> d!28841 e!68802))

(declare-fun res!52596 () Bool)

(assert (=> d!28841 (=> res!52596 e!68802)))

(declare-fun lt!54088 () Bool)

(assert (=> d!28841 (= res!52596 (not lt!54088))))

(declare-fun lt!54086 () Bool)

(assert (=> d!28841 (= lt!54088 lt!54086)))

(declare-fun lt!54087 () Unit!3232)

(declare-fun e!68801 () Unit!3232)

(assert (=> d!28841 (= lt!54087 e!68801)))

(declare-fun c!18378 () Bool)

(assert (=> d!28841 (= c!18378 lt!54086)))

(assert (=> d!28841 (= lt!54086 (containsKey!160 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954))))

(assert (=> d!28841 (= (contains!828 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53954) lt!54088)))

(declare-fun b!105671 () Bool)

(declare-fun lt!54089 () Unit!3232)

(assert (=> b!105671 (= e!68801 lt!54089)))

(assert (=> b!105671 (= lt!54089 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954))))

(assert (=> b!105671 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954))))

(declare-fun b!105672 () Bool)

(declare-fun Unit!3244 () Unit!3232)

(assert (=> b!105672 (= e!68801 Unit!3244)))

(declare-fun b!105673 () Bool)

(assert (=> b!105673 (= e!68802 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954)))))

(assert (= (and d!28841 c!18378) b!105671))

(assert (= (and d!28841 (not c!18378)) b!105672))

(assert (= (and d!28841 (not res!52596)) b!105673))

(declare-fun m!117873 () Bool)

(assert (=> d!28841 m!117873))

(declare-fun m!117875 () Bool)

(assert (=> b!105671 m!117875))

(declare-fun m!117877 () Bool)

(assert (=> b!105671 m!117877))

(assert (=> b!105671 m!117877))

(declare-fun m!117879 () Bool)

(assert (=> b!105671 m!117879))

(assert (=> b!105673 m!117877))

(assert (=> b!105673 m!117877))

(assert (=> b!105673 m!117879))

(assert (=> b!105494 d!28841))

(declare-fun d!28843 () Bool)

(assert (=> d!28843 (= (apply!98 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53957) (apply!98 lt!53963 lt!53957))))

(declare-fun lt!54090 () Unit!3232)

(assert (=> d!28843 (= lt!54090 (choose!654 lt!53963 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53957))))

(declare-fun e!68803 () Bool)

(assert (=> d!28843 e!68803))

(declare-fun res!52597 () Bool)

(assert (=> d!28843 (=> (not res!52597) (not e!68803))))

(assert (=> d!28843 (= res!52597 (contains!828 lt!53963 lt!53957))))

(assert (=> d!28843 (= (addApplyDifferent!74 lt!53963 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53957) lt!54090)))

(declare-fun b!105674 () Bool)

(assert (=> b!105674 (= e!68803 (not (= lt!53957 lt!53967)))))

(assert (= (and d!28843 res!52597) b!105674))

(declare-fun m!117881 () Bool)

(assert (=> d!28843 m!117881))

(assert (=> d!28843 m!117727))

(assert (=> d!28843 m!117729))

(assert (=> d!28843 m!117727))

(declare-fun m!117883 () Bool)

(assert (=> d!28843 m!117883))

(assert (=> d!28843 m!117741))

(assert (=> b!105494 d!28843))

(declare-fun d!28845 () Bool)

(assert (=> d!28845 (= (apply!98 lt!53963 lt!53957) (get!1334 (getValueByKey!156 (toList!803 lt!53963) lt!53957)))))

(declare-fun bs!4342 () Bool)

(assert (= bs!4342 d!28845))

(declare-fun m!117885 () Bool)

(assert (=> bs!4342 m!117885))

(assert (=> bs!4342 m!117885))

(declare-fun m!117887 () Bool)

(assert (=> bs!4342 m!117887))

(assert (=> b!105494 d!28845))

(declare-fun d!28847 () Bool)

(assert (=> d!28847 (= (apply!98 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53953) (apply!98 lt!53971 lt!53953))))

(declare-fun lt!54091 () Unit!3232)

(assert (=> d!28847 (= lt!54091 (choose!654 lt!53971 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53953))))

(declare-fun e!68804 () Bool)

(assert (=> d!28847 e!68804))

(declare-fun res!52598 () Bool)

(assert (=> d!28847 (=> (not res!52598) (not e!68804))))

(assert (=> d!28847 (= res!52598 (contains!828 lt!53971 lt!53953))))

(assert (=> d!28847 (= (addApplyDifferent!74 lt!53971 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53953) lt!54091)))

(declare-fun b!105675 () Bool)

(assert (=> b!105675 (= e!68804 (not (= lt!53953 lt!53955)))))

(assert (= (and d!28847 res!52598) b!105675))

(declare-fun m!117889 () Bool)

(assert (=> d!28847 m!117889))

(assert (=> d!28847 m!117743))

(assert (=> d!28847 m!117747))

(assert (=> d!28847 m!117743))

(declare-fun m!117891 () Bool)

(assert (=> d!28847 m!117891))

(assert (=> d!28847 m!117753))

(assert (=> b!105494 d!28847))

(declare-fun d!28849 () Bool)

(assert (=> d!28849 (= (apply!98 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53970) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53970)))))

(declare-fun bs!4343 () Bool)

(assert (= bs!4343 d!28849))

(declare-fun m!117893 () Bool)

(assert (=> bs!4343 m!117893))

(assert (=> bs!4343 m!117893))

(declare-fun m!117895 () Bool)

(assert (=> bs!4343 m!117895))

(assert (=> b!105494 d!28849))

(declare-fun d!28851 () Bool)

(declare-fun e!68805 () Bool)

(assert (=> d!28851 e!68805))

(declare-fun res!52599 () Bool)

(assert (=> d!28851 (=> (not res!52599) (not e!68805))))

(declare-fun lt!54093 () ListLongMap!1575)

(assert (=> d!28851 (= res!52599 (contains!828 lt!54093 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54095 () List!1617)

(assert (=> d!28851 (= lt!54093 (ListLongMap!1576 lt!54095))))

(declare-fun lt!54094 () Unit!3232)

(declare-fun lt!54092 () Unit!3232)

(assert (=> d!28851 (= lt!54094 lt!54092)))

(assert (=> d!28851 (= (getValueByKey!156 lt!54095 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28851 (= lt!54092 (lemmaContainsTupThenGetReturnValue!72 lt!54095 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28851 (= lt!54095 (insertStrictlySorted!75 (toList!803 lt!53956) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28851 (= (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54093)))

(declare-fun b!105676 () Bool)

(declare-fun res!52600 () Bool)

(assert (=> b!105676 (=> (not res!52600) (not e!68805))))

(assert (=> b!105676 (= res!52600 (= (getValueByKey!156 (toList!803 lt!54093) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105677 () Bool)

(assert (=> b!105677 (= e!68805 (contains!830 (toList!803 lt!54093) (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28851 res!52599) b!105676))

(assert (= (and b!105676 res!52600) b!105677))

(declare-fun m!117897 () Bool)

(assert (=> d!28851 m!117897))

(declare-fun m!117899 () Bool)

(assert (=> d!28851 m!117899))

(declare-fun m!117901 () Bool)

(assert (=> d!28851 m!117901))

(declare-fun m!117903 () Bool)

(assert (=> d!28851 m!117903))

(declare-fun m!117905 () Bool)

(assert (=> b!105676 m!117905))

(declare-fun m!117907 () Bool)

(assert (=> b!105677 m!117907))

(assert (=> b!105494 d!28851))

(declare-fun d!28853 () Bool)

(assert (=> d!28853 (= (apply!98 lt!53959 lt!53970) (get!1334 (getValueByKey!156 (toList!803 lt!53959) lt!53970)))))

(declare-fun bs!4344 () Bool)

(assert (= bs!4344 d!28853))

(declare-fun m!117909 () Bool)

(assert (=> bs!4344 m!117909))

(assert (=> bs!4344 m!117909))

(declare-fun m!117911 () Bool)

(assert (=> bs!4344 m!117911))

(assert (=> b!105494 d!28853))

(declare-fun d!28855 () Bool)

(assert (=> d!28855 (= (apply!98 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53953) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53953)))))

(declare-fun bs!4345 () Bool)

(assert (= bs!4345 d!28855))

(declare-fun m!117913 () Bool)

(assert (=> bs!4345 m!117913))

(assert (=> bs!4345 m!117913))

(declare-fun m!117915 () Bool)

(assert (=> bs!4345 m!117915))

(assert (=> b!105494 d!28855))

(declare-fun d!28857 () Bool)

(assert (=> d!28857 (= (apply!98 lt!53971 lt!53953) (get!1334 (getValueByKey!156 (toList!803 lt!53971) lt!53953)))))

(declare-fun bs!4346 () Bool)

(assert (= bs!4346 d!28857))

(declare-fun m!117917 () Bool)

(assert (=> bs!4346 m!117917))

(assert (=> bs!4346 m!117917))

(declare-fun m!117919 () Bool)

(assert (=> bs!4346 m!117919))

(assert (=> b!105494 d!28857))

(declare-fun b!105690 () Bool)

(declare-fun e!68813 () SeekEntryResult!259)

(declare-fun lt!54104 () SeekEntryResult!259)

(assert (=> b!105690 (= e!68813 (Found!259 (index!3186 lt!54104)))))

(declare-fun b!105691 () Bool)

(declare-fun e!68814 () SeekEntryResult!259)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4349 (_ BitVec 32)) SeekEntryResult!259)

(assert (=> b!105691 (= e!68814 (seekKeyOrZeroReturnVacant!0 (x!13645 lt!54104) (index!3186 lt!54104) (index!3186 lt!54104) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun d!28859 () Bool)

(declare-fun lt!54103 () SeekEntryResult!259)

(assert (=> d!28859 (and (or ((_ is Undefined!259) lt!54103) (not ((_ is Found!259) lt!54103)) (and (bvsge (index!3185 lt!54103) #b00000000000000000000000000000000) (bvslt (index!3185 lt!54103) (size!2318 (_keys!4288 newMap!16))))) (or ((_ is Undefined!259) lt!54103) ((_ is Found!259) lt!54103) (not ((_ is MissingZero!259) lt!54103)) (and (bvsge (index!3184 lt!54103) #b00000000000000000000000000000000) (bvslt (index!3184 lt!54103) (size!2318 (_keys!4288 newMap!16))))) (or ((_ is Undefined!259) lt!54103) ((_ is Found!259) lt!54103) ((_ is MissingZero!259) lt!54103) (not ((_ is MissingVacant!259) lt!54103)) (and (bvsge (index!3187 lt!54103) #b00000000000000000000000000000000) (bvslt (index!3187 lt!54103) (size!2318 (_keys!4288 newMap!16))))) (or ((_ is Undefined!259) lt!54103) (ite ((_ is Found!259) lt!54103) (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54103)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite ((_ is MissingZero!259) lt!54103) (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3184 lt!54103)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!259) lt!54103) (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3187 lt!54103)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!68812 () SeekEntryResult!259)

(assert (=> d!28859 (= lt!54103 e!68812)))

(declare-fun c!18387 () Bool)

(assert (=> d!28859 (= c!18387 (and ((_ is Intermediate!259) lt!54104) (undefined!1071 lt!54104)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4349 (_ BitVec 32)) SeekEntryResult!259)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!28859 (= lt!54104 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6728 newMap!16)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(assert (=> d!28859 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28859 (= (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)) lt!54103)))

(declare-fun b!105692 () Bool)

(assert (=> b!105692 (= e!68812 e!68813)))

(declare-fun lt!54102 () (_ BitVec 64))

(assert (=> b!105692 (= lt!54102 (select (arr!2063 (_keys!4288 newMap!16)) (index!3186 lt!54104)))))

(declare-fun c!18386 () Bool)

(assert (=> b!105692 (= c!18386 (= lt!54102 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105693 () Bool)

(assert (=> b!105693 (= e!68814 (MissingZero!259 (index!3186 lt!54104)))))

(declare-fun b!105694 () Bool)

(assert (=> b!105694 (= e!68812 Undefined!259)))

(declare-fun b!105695 () Bool)

(declare-fun c!18385 () Bool)

(assert (=> b!105695 (= c!18385 (= lt!54102 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105695 (= e!68813 e!68814)))

(assert (= (and d!28859 c!18387) b!105694))

(assert (= (and d!28859 (not c!18387)) b!105692))

(assert (= (and b!105692 c!18386) b!105690))

(assert (= (and b!105692 (not c!18386)) b!105695))

(assert (= (and b!105695 c!18385) b!105693))

(assert (= (and b!105695 (not c!18385)) b!105691))

(assert (=> b!105691 m!117489))

(declare-fun m!117921 () Bool)

(assert (=> b!105691 m!117921))

(declare-fun m!117923 () Bool)

(assert (=> d!28859 m!117923))

(declare-fun m!117925 () Bool)

(assert (=> d!28859 m!117925))

(declare-fun m!117927 () Bool)

(assert (=> d!28859 m!117927))

(assert (=> d!28859 m!117489))

(declare-fun m!117929 () Bool)

(assert (=> d!28859 m!117929))

(assert (=> d!28859 m!117929))

(assert (=> d!28859 m!117489))

(declare-fun m!117931 () Bool)

(assert (=> d!28859 m!117931))

(declare-fun m!117933 () Bool)

(assert (=> d!28859 m!117933))

(declare-fun m!117935 () Bool)

(assert (=> b!105692 m!117935))

(assert (=> b!105639 d!28859))

(declare-fun b!105712 () Bool)

(declare-fun lt!54110 () SeekEntryResult!259)

(assert (=> b!105712 (and (bvsge (index!3184 lt!54110) #b00000000000000000000000000000000) (bvslt (index!3184 lt!54110) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun res!52610 () Bool)

(assert (=> b!105712 (= res!52610 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3184 lt!54110)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68826 () Bool)

(assert (=> b!105712 (=> (not res!52610) (not e!68826))))

(declare-fun bm!11160 () Bool)

(declare-fun call!11164 () Bool)

(assert (=> bm!11160 (= call!11164 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!105713 () Bool)

(declare-fun e!68825 () Bool)

(declare-fun e!68824 () Bool)

(assert (=> b!105713 (= e!68825 e!68824)))

(declare-fun c!18392 () Bool)

(assert (=> b!105713 (= c!18392 ((_ is MissingVacant!259) lt!54110))))

(declare-fun b!105714 () Bool)

(assert (=> b!105714 (= e!68824 ((_ is Undefined!259) lt!54110))))

(declare-fun b!105715 () Bool)

(assert (=> b!105715 (= e!68825 e!68826)))

(declare-fun res!52611 () Bool)

(declare-fun call!11163 () Bool)

(assert (=> b!105715 (= res!52611 call!11163)))

(assert (=> b!105715 (=> (not res!52611) (not e!68826))))

(declare-fun b!105717 () Bool)

(declare-fun res!52612 () Bool)

(declare-fun e!68823 () Bool)

(assert (=> b!105717 (=> (not res!52612) (not e!68823))))

(assert (=> b!105717 (= res!52612 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3187 lt!54110)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105717 (and (bvsge (index!3187 lt!54110) #b00000000000000000000000000000000) (bvslt (index!3187 lt!54110) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!105718 () Bool)

(declare-fun res!52609 () Bool)

(assert (=> b!105718 (=> (not res!52609) (not e!68823))))

(assert (=> b!105718 (= res!52609 call!11163)))

(assert (=> b!105718 (= e!68824 e!68823)))

(declare-fun c!18393 () Bool)

(declare-fun bm!11161 () Bool)

(assert (=> bm!11161 (= call!11163 (inRange!0 (ite c!18393 (index!3184 lt!54110) (index!3187 lt!54110)) (mask!6728 newMap!16)))))

(declare-fun b!105719 () Bool)

(assert (=> b!105719 (= e!68823 (not call!11164))))

(declare-fun b!105716 () Bool)

(assert (=> b!105716 (= e!68826 (not call!11164))))

(declare-fun d!28861 () Bool)

(assert (=> d!28861 e!68825))

(assert (=> d!28861 (= c!18393 ((_ is MissingZero!259) lt!54110))))

(assert (=> d!28861 (= lt!54110 (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun lt!54109 () Unit!3232)

(declare-fun choose!656 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) Int) Unit!3232)

(assert (=> d!28861 (= lt!54109 (choose!656 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(assert (=> d!28861 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28861 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)) lt!54109)))

(assert (= (and d!28861 c!18393) b!105715))

(assert (= (and d!28861 (not c!18393)) b!105713))

(assert (= (and b!105715 res!52611) b!105712))

(assert (= (and b!105712 res!52610) b!105716))

(assert (= (and b!105713 c!18392) b!105718))

(assert (= (and b!105713 (not c!18392)) b!105714))

(assert (= (and b!105718 res!52609) b!105717))

(assert (= (and b!105717 res!52612) b!105719))

(assert (= (or b!105715 b!105718) bm!11161))

(assert (= (or b!105716 b!105719) bm!11160))

(declare-fun m!117937 () Bool)

(assert (=> bm!11161 m!117937))

(assert (=> bm!11160 m!117489))

(assert (=> bm!11160 m!117803))

(declare-fun m!117939 () Bool)

(assert (=> b!105717 m!117939))

(declare-fun m!117941 () Bool)

(assert (=> b!105712 m!117941))

(assert (=> d!28861 m!117489))

(assert (=> d!28861 m!117779))

(assert (=> d!28861 m!117489))

(declare-fun m!117943 () Bool)

(assert (=> d!28861 m!117943))

(assert (=> d!28861 m!117933))

(assert (=> bm!11146 d!28861))

(assert (=> d!28783 d!28787))

(declare-fun d!28863 () Bool)

(assert (=> d!28863 (not (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!28863 true))

(declare-fun _$68!106 () Unit!3232)

(assert (=> d!28863 (= (choose!68 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613)) _$68!106)))

(declare-fun bs!4347 () Bool)

(assert (= bs!4347 d!28863))

(assert (=> bs!4347 m!117489))

(assert (=> bs!4347 m!117493))

(assert (=> d!28783 d!28863))

(declare-fun d!28865 () Bool)

(declare-fun lt!54113 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!109 (List!1617) (InoxSet tuple2!2410))

(assert (=> d!28865 (= lt!54113 (select (content!109 (toList!803 lt!53891)) lt!53815))))

(declare-fun e!68832 () Bool)

(assert (=> d!28865 (= lt!54113 e!68832)))

(declare-fun res!52617 () Bool)

(assert (=> d!28865 (=> (not res!52617) (not e!68832))))

(assert (=> d!28865 (= res!52617 ((_ is Cons!1613) (toList!803 lt!53891)))))

(assert (=> d!28865 (= (contains!830 (toList!803 lt!53891) lt!53815) lt!54113)))

(declare-fun b!105724 () Bool)

(declare-fun e!68831 () Bool)

(assert (=> b!105724 (= e!68832 e!68831)))

(declare-fun res!52618 () Bool)

(assert (=> b!105724 (=> res!52618 e!68831)))

(assert (=> b!105724 (= res!52618 (= (h!2210 (toList!803 lt!53891)) lt!53815))))

(declare-fun b!105725 () Bool)

(assert (=> b!105725 (= e!68831 (contains!830 (t!5700 (toList!803 lt!53891)) lt!53815))))

(assert (= (and d!28865 res!52617) b!105724))

(assert (= (and b!105724 (not res!52618)) b!105725))

(declare-fun m!117945 () Bool)

(assert (=> d!28865 m!117945))

(declare-fun m!117947 () Bool)

(assert (=> d!28865 m!117947))

(declare-fun m!117949 () Bool)

(assert (=> b!105725 m!117949))

(assert (=> b!105436 d!28865))

(declare-fun d!28867 () Bool)

(declare-fun e!68834 () Bool)

(assert (=> d!28867 e!68834))

(declare-fun res!52619 () Bool)

(assert (=> d!28867 (=> res!52619 e!68834)))

(declare-fun lt!54116 () Bool)

(assert (=> d!28867 (= res!52619 (not lt!54116))))

(declare-fun lt!54114 () Bool)

(assert (=> d!28867 (= lt!54116 lt!54114)))

(declare-fun lt!54115 () Unit!3232)

(declare-fun e!68833 () Unit!3232)

(assert (=> d!28867 (= lt!54115 e!68833)))

(declare-fun c!18394 () Bool)

(assert (=> d!28867 (= c!18394 lt!54114)))

(assert (=> d!28867 (= lt!54114 (containsKey!160 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28867 (= (contains!828 lt!53958 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54116)))

(declare-fun b!105726 () Bool)

(declare-fun lt!54117 () Unit!3232)

(assert (=> b!105726 (= e!68833 lt!54117)))

(assert (=> b!105726 (= lt!54117 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105726 (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105727 () Bool)

(declare-fun Unit!3245 () Unit!3232)

(assert (=> b!105727 (= e!68833 Unit!3245)))

(declare-fun b!105728 () Bool)

(assert (=> b!105728 (= e!68834 (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28867 c!18394) b!105726))

(assert (= (and d!28867 (not c!18394)) b!105727))

(assert (= (and d!28867 (not res!52619)) b!105728))

(declare-fun m!117951 () Bool)

(assert (=> d!28867 m!117951))

(declare-fun m!117953 () Bool)

(assert (=> b!105726 m!117953))

(declare-fun m!117955 () Bool)

(assert (=> b!105726 m!117955))

(assert (=> b!105726 m!117955))

(declare-fun m!117957 () Bool)

(assert (=> b!105726 m!117957))

(assert (=> b!105728 m!117955))

(assert (=> b!105728 m!117955))

(assert (=> b!105728 m!117957))

(assert (=> bm!11080 d!28867))

(declare-fun d!28869 () Bool)

(declare-fun res!52620 () Bool)

(declare-fun e!68835 () Bool)

(assert (=> d!28869 (=> (not res!52620) (not e!68835))))

(assert (=> d!28869 (= res!52620 (simpleValid!74 (_2!1217 lt!54050)))))

(assert (=> d!28869 (= (valid!421 (_2!1217 lt!54050)) e!68835)))

(declare-fun b!105729 () Bool)

(declare-fun res!52621 () Bool)

(assert (=> b!105729 (=> (not res!52621) (not e!68835))))

(assert (=> b!105729 (= res!52621 (= (arrayCountValidKeys!0 (_keys!4288 (_2!1217 lt!54050)) #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))) (_size!499 (_2!1217 lt!54050))))))

(declare-fun b!105730 () Bool)

(declare-fun res!52622 () Bool)

(assert (=> b!105730 (=> (not res!52622) (not e!68835))))

(assert (=> b!105730 (= res!52622 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050))))))

(declare-fun b!105731 () Bool)

(assert (=> b!105731 (= e!68835 (arrayNoDuplicates!0 (_keys!4288 (_2!1217 lt!54050)) #b00000000000000000000000000000000 Nil!1613))))

(assert (= (and d!28869 res!52620) b!105729))

(assert (= (and b!105729 res!52621) b!105730))

(assert (= (and b!105730 res!52622) b!105731))

(declare-fun m!117959 () Bool)

(assert (=> d!28869 m!117959))

(declare-fun m!117961 () Bool)

(assert (=> b!105729 m!117961))

(declare-fun m!117963 () Bool)

(assert (=> b!105730 m!117963))

(declare-fun m!117965 () Bool)

(assert (=> b!105731 m!117965))

(assert (=> d!28825 d!28869))

(assert (=> d!28825 d!28809))

(declare-fun d!28871 () Bool)

(declare-fun e!68837 () Bool)

(assert (=> d!28871 e!68837))

(declare-fun res!52623 () Bool)

(assert (=> d!28871 (=> res!52623 e!68837)))

(declare-fun lt!54120 () Bool)

(assert (=> d!28871 (= res!52623 (not lt!54120))))

(declare-fun lt!54118 () Bool)

(assert (=> d!28871 (= lt!54120 lt!54118)))

(declare-fun lt!54119 () Unit!3232)

(declare-fun e!68836 () Unit!3232)

(assert (=> d!28871 (= lt!54119 e!68836)))

(declare-fun c!18395 () Bool)

(assert (=> d!28871 (= c!18395 lt!54118)))

(assert (=> d!28871 (= lt!54118 (containsKey!160 (toList!803 lt!53902) (_1!1216 lt!53815)))))

(assert (=> d!28871 (= (contains!828 lt!53902 (_1!1216 lt!53815)) lt!54120)))

(declare-fun b!105732 () Bool)

(declare-fun lt!54121 () Unit!3232)

(assert (=> b!105732 (= e!68836 lt!54121)))

(assert (=> b!105732 (= lt!54121 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53902) (_1!1216 lt!53815)))))

(assert (=> b!105732 (isDefined!109 (getValueByKey!156 (toList!803 lt!53902) (_1!1216 lt!53815)))))

(declare-fun b!105733 () Bool)

(declare-fun Unit!3246 () Unit!3232)

(assert (=> b!105733 (= e!68836 Unit!3246)))

(declare-fun b!105734 () Bool)

(assert (=> b!105734 (= e!68837 (isDefined!109 (getValueByKey!156 (toList!803 lt!53902) (_1!1216 lt!53815))))))

(assert (= (and d!28871 c!18395) b!105732))

(assert (= (and d!28871 (not c!18395)) b!105733))

(assert (= (and d!28871 (not res!52623)) b!105734))

(declare-fun m!117967 () Bool)

(assert (=> d!28871 m!117967))

(declare-fun m!117969 () Bool)

(assert (=> b!105732 m!117969))

(assert (=> b!105732 m!117683))

(assert (=> b!105732 m!117683))

(declare-fun m!117971 () Bool)

(assert (=> b!105732 m!117971))

(assert (=> b!105734 m!117683))

(assert (=> b!105734 m!117683))

(assert (=> b!105734 m!117971))

(assert (=> d!28805 d!28871))

(declare-fun b!105745 () Bool)

(declare-fun e!68843 () Option!162)

(assert (=> b!105745 (= e!68843 (getValueByKey!156 (t!5700 lt!53904) (_1!1216 lt!53815)))))

(declare-fun b!105743 () Bool)

(declare-fun e!68842 () Option!162)

(assert (=> b!105743 (= e!68842 (Some!161 (_2!1216 (h!2210 lt!53904))))))

(declare-fun d!28873 () Bool)

(declare-fun c!18400 () Bool)

(assert (=> d!28873 (= c!18400 (and ((_ is Cons!1613) lt!53904) (= (_1!1216 (h!2210 lt!53904)) (_1!1216 lt!53815))))))

(assert (=> d!28873 (= (getValueByKey!156 lt!53904 (_1!1216 lt!53815)) e!68842)))

(declare-fun b!105746 () Bool)

(assert (=> b!105746 (= e!68843 None!160)))

(declare-fun b!105744 () Bool)

(assert (=> b!105744 (= e!68842 e!68843)))

(declare-fun c!18401 () Bool)

(assert (=> b!105744 (= c!18401 (and ((_ is Cons!1613) lt!53904) (not (= (_1!1216 (h!2210 lt!53904)) (_1!1216 lt!53815)))))))

(assert (= (and d!28873 c!18400) b!105743))

(assert (= (and d!28873 (not c!18400)) b!105744))

(assert (= (and b!105744 c!18401) b!105745))

(assert (= (and b!105744 (not c!18401)) b!105746))

(declare-fun m!117973 () Bool)

(assert (=> b!105745 m!117973))

(assert (=> d!28805 d!28873))

(declare-fun d!28875 () Bool)

(assert (=> d!28875 (= (getValueByKey!156 lt!53904 (_1!1216 lt!53815)) (Some!161 (_2!1216 lt!53815)))))

(declare-fun lt!54124 () Unit!3232)

(declare-fun choose!657 (List!1617 (_ BitVec 64) V!3219) Unit!3232)

(assert (=> d!28875 (= lt!54124 (choose!657 lt!53904 (_1!1216 lt!53815) (_2!1216 lt!53815)))))

(declare-fun e!68846 () Bool)

(assert (=> d!28875 e!68846))

(declare-fun res!52628 () Bool)

(assert (=> d!28875 (=> (not res!52628) (not e!68846))))

(declare-fun isStrictlySorted!309 (List!1617) Bool)

(assert (=> d!28875 (= res!52628 (isStrictlySorted!309 lt!53904))))

(assert (=> d!28875 (= (lemmaContainsTupThenGetReturnValue!72 lt!53904 (_1!1216 lt!53815) (_2!1216 lt!53815)) lt!54124)))

(declare-fun b!105751 () Bool)

(declare-fun res!52629 () Bool)

(assert (=> b!105751 (=> (not res!52629) (not e!68846))))

(assert (=> b!105751 (= res!52629 (containsKey!160 lt!53904 (_1!1216 lt!53815)))))

(declare-fun b!105752 () Bool)

(assert (=> b!105752 (= e!68846 (contains!830 lt!53904 (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(assert (= (and d!28875 res!52628) b!105751))

(assert (= (and b!105751 res!52629) b!105752))

(assert (=> d!28875 m!117677))

(declare-fun m!117975 () Bool)

(assert (=> d!28875 m!117975))

(declare-fun m!117977 () Bool)

(assert (=> d!28875 m!117977))

(declare-fun m!117979 () Bool)

(assert (=> b!105751 m!117979))

(declare-fun m!117981 () Bool)

(assert (=> b!105752 m!117981))

(assert (=> d!28805 d!28875))

(declare-fun b!105773 () Bool)

(declare-fun e!68860 () List!1617)

(declare-fun e!68858 () List!1617)

(assert (=> b!105773 (= e!68860 e!68858)))

(declare-fun c!18411 () Bool)

(assert (=> b!105773 (= c!18411 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 lt!53814))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 lt!53814)))) (_1!1216 lt!53815))))))

(declare-fun b!105774 () Bool)

(declare-fun call!11171 () List!1617)

(assert (=> b!105774 (= e!68860 call!11171)))

(declare-fun b!105776 () Bool)

(declare-fun e!68861 () List!1617)

(declare-fun call!11173 () List!1617)

(assert (=> b!105776 (= e!68861 call!11173)))

(declare-fun c!18412 () Bool)

(declare-fun b!105777 () Bool)

(assert (=> b!105777 (= c!18412 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 lt!53814))) (bvsgt (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 lt!53814)))) (_1!1216 lt!53815))))))

(assert (=> b!105777 (= e!68858 e!68861)))

(declare-fun bm!11168 () Bool)

(declare-fun call!11172 () List!1617)

(assert (=> bm!11168 (= call!11173 call!11172)))

(declare-fun e!68859 () List!1617)

(declare-fun b!105778 () Bool)

(assert (=> b!105778 (= e!68859 (insertStrictlySorted!75 (t!5700 (toList!803 (+!144 lt!53805 lt!53814))) (_1!1216 lt!53815) (_2!1216 lt!53815)))))

(declare-fun b!105779 () Bool)

(assert (=> b!105779 (= e!68861 call!11173)))

(declare-fun b!105780 () Bool)

(declare-fun res!52635 () Bool)

(declare-fun e!68857 () Bool)

(assert (=> b!105780 (=> (not res!52635) (not e!68857))))

(declare-fun lt!54127 () List!1617)

(assert (=> b!105780 (= res!52635 (containsKey!160 lt!54127 (_1!1216 lt!53815)))))

(declare-fun b!105781 () Bool)

(assert (=> b!105781 (= e!68857 (contains!830 lt!54127 (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun b!105782 () Bool)

(assert (=> b!105782 (= e!68859 (ite c!18411 (t!5700 (toList!803 (+!144 lt!53805 lt!53814))) (ite c!18412 (Cons!1613 (h!2210 (toList!803 (+!144 lt!53805 lt!53814))) (t!5700 (toList!803 (+!144 lt!53805 lt!53814)))) Nil!1614)))))

(declare-fun d!28877 () Bool)

(assert (=> d!28877 e!68857))

(declare-fun res!52634 () Bool)

(assert (=> d!28877 (=> (not res!52634) (not e!68857))))

(assert (=> d!28877 (= res!52634 (isStrictlySorted!309 lt!54127))))

(assert (=> d!28877 (= lt!54127 e!68860)))

(declare-fun c!18410 () Bool)

(assert (=> d!28877 (= c!18410 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 lt!53814))) (bvslt (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 lt!53814)))) (_1!1216 lt!53815))))))

(assert (=> d!28877 (isStrictlySorted!309 (toList!803 (+!144 lt!53805 lt!53814)))))

(assert (=> d!28877 (= (insertStrictlySorted!75 (toList!803 (+!144 lt!53805 lt!53814)) (_1!1216 lt!53815) (_2!1216 lt!53815)) lt!54127)))

(declare-fun b!105775 () Bool)

(assert (=> b!105775 (= e!68858 call!11172)))

(declare-fun bm!11169 () Bool)

(declare-fun $colon$colon!81 (List!1617 tuple2!2410) List!1617)

(assert (=> bm!11169 (= call!11171 ($colon$colon!81 e!68859 (ite c!18410 (h!2210 (toList!803 (+!144 lt!53805 lt!53814))) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815)))))))

(declare-fun c!18413 () Bool)

(assert (=> bm!11169 (= c!18413 c!18410)))

(declare-fun bm!11170 () Bool)

(assert (=> bm!11170 (= call!11172 call!11171)))

(assert (= (and d!28877 c!18410) b!105774))

(assert (= (and d!28877 (not c!18410)) b!105773))

(assert (= (and b!105773 c!18411) b!105775))

(assert (= (and b!105773 (not c!18411)) b!105777))

(assert (= (and b!105777 c!18412) b!105779))

(assert (= (and b!105777 (not c!18412)) b!105776))

(assert (= (or b!105779 b!105776) bm!11168))

(assert (= (or b!105775 bm!11168) bm!11170))

(assert (= (or b!105774 bm!11170) bm!11169))

(assert (= (and bm!11169 c!18413) b!105778))

(assert (= (and bm!11169 (not c!18413)) b!105782))

(assert (= (and d!28877 res!52634) b!105780))

(assert (= (and b!105780 res!52635) b!105781))

(declare-fun m!117983 () Bool)

(assert (=> b!105778 m!117983))

(declare-fun m!117985 () Bool)

(assert (=> b!105781 m!117985))

(declare-fun m!117987 () Bool)

(assert (=> d!28877 m!117987))

(declare-fun m!117989 () Bool)

(assert (=> d!28877 m!117989))

(declare-fun m!117991 () Bool)

(assert (=> bm!11169 m!117991))

(declare-fun m!117993 () Bool)

(assert (=> b!105780 m!117993))

(assert (=> d!28805 d!28877))

(declare-fun d!28879 () Bool)

(declare-fun e!68863 () Bool)

(assert (=> d!28879 e!68863))

(declare-fun res!52636 () Bool)

(assert (=> d!28879 (=> res!52636 e!68863)))

(declare-fun lt!54130 () Bool)

(assert (=> d!28879 (= res!52636 (not lt!54130))))

(declare-fun lt!54128 () Bool)

(assert (=> d!28879 (= lt!54130 lt!54128)))

(declare-fun lt!54129 () Unit!3232)

(declare-fun e!68862 () Unit!3232)

(assert (=> d!28879 (= lt!54129 e!68862)))

(declare-fun c!18414 () Bool)

(assert (=> d!28879 (= c!18414 lt!54128)))

(assert (=> d!28879 (= lt!54128 (containsKey!160 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!28879 (= (contains!828 lt!53958 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54130)))

(declare-fun b!105783 () Bool)

(declare-fun lt!54131 () Unit!3232)

(assert (=> b!105783 (= e!68862 lt!54131)))

(assert (=> b!105783 (= lt!54131 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105783 (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105784 () Bool)

(declare-fun Unit!3247 () Unit!3232)

(assert (=> b!105784 (= e!68862 Unit!3247)))

(declare-fun b!105785 () Bool)

(assert (=> b!105785 (= e!68863 (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!28879 c!18414) b!105783))

(assert (= (and d!28879 (not c!18414)) b!105784))

(assert (= (and d!28879 (not res!52636)) b!105785))

(assert (=> d!28879 m!117601))

(declare-fun m!117995 () Bool)

(assert (=> d!28879 m!117995))

(assert (=> b!105783 m!117601))

(declare-fun m!117997 () Bool)

(assert (=> b!105783 m!117997))

(assert (=> b!105783 m!117601))

(declare-fun m!117999 () Bool)

(assert (=> b!105783 m!117999))

(assert (=> b!105783 m!117999))

(declare-fun m!118001 () Bool)

(assert (=> b!105783 m!118001))

(assert (=> b!105785 m!117601))

(assert (=> b!105785 m!117999))

(assert (=> b!105785 m!117999))

(assert (=> b!105785 m!118001))

(assert (=> b!105514 d!28879))

(declare-fun d!28881 () Bool)

(declare-fun e!68864 () Bool)

(assert (=> d!28881 e!68864))

(declare-fun res!52637 () Bool)

(assert (=> d!28881 (=> (not res!52637) (not e!68864))))

(declare-fun lt!54133 () ListLongMap!1575)

(assert (=> d!28881 (= res!52637 (contains!828 lt!54133 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54135 () List!1617)

(assert (=> d!28881 (= lt!54133 (ListLongMap!1576 lt!54135))))

(declare-fun lt!54134 () Unit!3232)

(declare-fun lt!54132 () Unit!3232)

(assert (=> d!28881 (= lt!54134 lt!54132)))

(assert (=> d!28881 (= (getValueByKey!156 lt!54135 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28881 (= lt!54132 (lemmaContainsTupThenGetReturnValue!72 lt!54135 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28881 (= lt!54135 (insertStrictlySorted!75 (toList!803 call!11085) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28881 (= (+!144 call!11085 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54133)))

(declare-fun b!105786 () Bool)

(declare-fun res!52638 () Bool)

(assert (=> b!105786 (=> (not res!52638) (not e!68864))))

(assert (=> b!105786 (= res!52638 (= (getValueByKey!156 (toList!803 lt!54133) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105787 () Bool)

(assert (=> b!105787 (= e!68864 (contains!830 (toList!803 lt!54133) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28881 res!52637) b!105786))

(assert (= (and b!105786 res!52638) b!105787))

(declare-fun m!118003 () Bool)

(assert (=> d!28881 m!118003))

(declare-fun m!118005 () Bool)

(assert (=> d!28881 m!118005))

(declare-fun m!118007 () Bool)

(assert (=> d!28881 m!118007))

(declare-fun m!118009 () Bool)

(assert (=> d!28881 m!118009))

(declare-fun m!118011 () Bool)

(assert (=> b!105786 m!118011))

(declare-fun m!118013 () Bool)

(assert (=> b!105787 m!118013))

(assert (=> b!105496 d!28881))

(declare-fun d!28883 () Bool)

(declare-fun lt!54136 () Bool)

(assert (=> d!28883 (= lt!54136 (select (content!109 (toList!803 lt!53895)) lt!53814))))

(declare-fun e!68866 () Bool)

(assert (=> d!28883 (= lt!54136 e!68866)))

(declare-fun res!52639 () Bool)

(assert (=> d!28883 (=> (not res!52639) (not e!68866))))

(assert (=> d!28883 (= res!52639 ((_ is Cons!1613) (toList!803 lt!53895)))))

(assert (=> d!28883 (= (contains!830 (toList!803 lt!53895) lt!53814) lt!54136)))

(declare-fun b!105788 () Bool)

(declare-fun e!68865 () Bool)

(assert (=> b!105788 (= e!68866 e!68865)))

(declare-fun res!52640 () Bool)

(assert (=> b!105788 (=> res!52640 e!68865)))

(assert (=> b!105788 (= res!52640 (= (h!2210 (toList!803 lt!53895)) lt!53814))))

(declare-fun b!105789 () Bool)

(assert (=> b!105789 (= e!68865 (contains!830 (t!5700 (toList!803 lt!53895)) lt!53814))))

(assert (= (and d!28883 res!52639) b!105788))

(assert (= (and b!105788 (not res!52640)) b!105789))

(declare-fun m!118015 () Bool)

(assert (=> d!28883 m!118015))

(declare-fun m!118017 () Bool)

(assert (=> d!28883 m!118017))

(declare-fun m!118019 () Bool)

(assert (=> b!105789 m!118019))

(assert (=> b!105438 d!28883))

(declare-fun d!28885 () Bool)

(declare-fun e!68868 () Bool)

(assert (=> d!28885 e!68868))

(declare-fun res!52641 () Bool)

(assert (=> d!28885 (=> res!52641 e!68868)))

(declare-fun lt!54139 () Bool)

(assert (=> d!28885 (= res!52641 (not lt!54139))))

(declare-fun lt!54137 () Bool)

(assert (=> d!28885 (= lt!54139 lt!54137)))

(declare-fun lt!54138 () Unit!3232)

(declare-fun e!68867 () Unit!3232)

(assert (=> d!28885 (= lt!54138 e!68867)))

(declare-fun c!18415 () Bool)

(assert (=> d!28885 (= c!18415 lt!54137)))

(assert (=> d!28885 (= lt!54137 (containsKey!160 (toList!803 lt!53906) (_1!1216 lt!53814)))))

(assert (=> d!28885 (= (contains!828 lt!53906 (_1!1216 lt!53814)) lt!54139)))

(declare-fun b!105790 () Bool)

(declare-fun lt!54140 () Unit!3232)

(assert (=> b!105790 (= e!68867 lt!54140)))

(assert (=> b!105790 (= lt!54140 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53906) (_1!1216 lt!53814)))))

(assert (=> b!105790 (isDefined!109 (getValueByKey!156 (toList!803 lt!53906) (_1!1216 lt!53814)))))

(declare-fun b!105791 () Bool)

(declare-fun Unit!3248 () Unit!3232)

(assert (=> b!105791 (= e!68867 Unit!3248)))

(declare-fun b!105792 () Bool)

(assert (=> b!105792 (= e!68868 (isDefined!109 (getValueByKey!156 (toList!803 lt!53906) (_1!1216 lt!53814))))))

(assert (= (and d!28885 c!18415) b!105790))

(assert (= (and d!28885 (not c!18415)) b!105791))

(assert (= (and d!28885 (not res!52641)) b!105792))

(declare-fun m!118021 () Bool)

(assert (=> d!28885 m!118021))

(declare-fun m!118023 () Bool)

(assert (=> b!105790 m!118023))

(assert (=> b!105790 m!117695))

(assert (=> b!105790 m!117695))

(declare-fun m!118025 () Bool)

(assert (=> b!105790 m!118025))

(assert (=> b!105792 m!117695))

(assert (=> b!105792 m!117695))

(assert (=> b!105792 m!118025))

(assert (=> d!28807 d!28885))

(declare-fun b!105795 () Bool)

(declare-fun e!68870 () Option!162)

(assert (=> b!105795 (= e!68870 (getValueByKey!156 (t!5700 lt!53908) (_1!1216 lt!53814)))))

(declare-fun b!105793 () Bool)

(declare-fun e!68869 () Option!162)

(assert (=> b!105793 (= e!68869 (Some!161 (_2!1216 (h!2210 lt!53908))))))

(declare-fun d!28887 () Bool)

(declare-fun c!18416 () Bool)

(assert (=> d!28887 (= c!18416 (and ((_ is Cons!1613) lt!53908) (= (_1!1216 (h!2210 lt!53908)) (_1!1216 lt!53814))))))

(assert (=> d!28887 (= (getValueByKey!156 lt!53908 (_1!1216 lt!53814)) e!68869)))

(declare-fun b!105796 () Bool)

(assert (=> b!105796 (= e!68870 None!160)))

(declare-fun b!105794 () Bool)

(assert (=> b!105794 (= e!68869 e!68870)))

(declare-fun c!18417 () Bool)

(assert (=> b!105794 (= c!18417 (and ((_ is Cons!1613) lt!53908) (not (= (_1!1216 (h!2210 lt!53908)) (_1!1216 lt!53814)))))))

(assert (= (and d!28887 c!18416) b!105793))

(assert (= (and d!28887 (not c!18416)) b!105794))

(assert (= (and b!105794 c!18417) b!105795))

(assert (= (and b!105794 (not c!18417)) b!105796))

(declare-fun m!118027 () Bool)

(assert (=> b!105795 m!118027))

(assert (=> d!28807 d!28887))

(declare-fun d!28889 () Bool)

(assert (=> d!28889 (= (getValueByKey!156 lt!53908 (_1!1216 lt!53814)) (Some!161 (_2!1216 lt!53814)))))

(declare-fun lt!54141 () Unit!3232)

(assert (=> d!28889 (= lt!54141 (choose!657 lt!53908 (_1!1216 lt!53814) (_2!1216 lt!53814)))))

(declare-fun e!68871 () Bool)

(assert (=> d!28889 e!68871))

(declare-fun res!52642 () Bool)

(assert (=> d!28889 (=> (not res!52642) (not e!68871))))

(assert (=> d!28889 (= res!52642 (isStrictlySorted!309 lt!53908))))

(assert (=> d!28889 (= (lemmaContainsTupThenGetReturnValue!72 lt!53908 (_1!1216 lt!53814) (_2!1216 lt!53814)) lt!54141)))

(declare-fun b!105797 () Bool)

(declare-fun res!52643 () Bool)

(assert (=> b!105797 (=> (not res!52643) (not e!68871))))

(assert (=> b!105797 (= res!52643 (containsKey!160 lt!53908 (_1!1216 lt!53814)))))

(declare-fun b!105798 () Bool)

(assert (=> b!105798 (= e!68871 (contains!830 lt!53908 (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(assert (= (and d!28889 res!52642) b!105797))

(assert (= (and b!105797 res!52643) b!105798))

(assert (=> d!28889 m!117689))

(declare-fun m!118029 () Bool)

(assert (=> d!28889 m!118029))

(declare-fun m!118031 () Bool)

(assert (=> d!28889 m!118031))

(declare-fun m!118033 () Bool)

(assert (=> b!105797 m!118033))

(declare-fun m!118035 () Bool)

(assert (=> b!105798 m!118035))

(assert (=> d!28807 d!28889))

(declare-fun b!105799 () Bool)

(declare-fun e!68875 () List!1617)

(declare-fun e!68873 () List!1617)

(assert (=> b!105799 (= e!68875 e!68873)))

(declare-fun c!18419 () Bool)

(assert (=> b!105799 (= c!18419 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 lt!53815))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 lt!53815)))) (_1!1216 lt!53814))))))

(declare-fun b!105800 () Bool)

(declare-fun call!11174 () List!1617)

(assert (=> b!105800 (= e!68875 call!11174)))

(declare-fun b!105802 () Bool)

(declare-fun e!68876 () List!1617)

(declare-fun call!11176 () List!1617)

(assert (=> b!105802 (= e!68876 call!11176)))

(declare-fun b!105803 () Bool)

(declare-fun c!18420 () Bool)

(assert (=> b!105803 (= c!18420 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 lt!53815))) (bvsgt (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 lt!53815)))) (_1!1216 lt!53814))))))

(assert (=> b!105803 (= e!68873 e!68876)))

(declare-fun bm!11171 () Bool)

(declare-fun call!11175 () List!1617)

(assert (=> bm!11171 (= call!11176 call!11175)))

(declare-fun b!105804 () Bool)

(declare-fun e!68874 () List!1617)

(assert (=> b!105804 (= e!68874 (insertStrictlySorted!75 (t!5700 (toList!803 (+!144 lt!53805 lt!53815))) (_1!1216 lt!53814) (_2!1216 lt!53814)))))

(declare-fun b!105805 () Bool)

(assert (=> b!105805 (= e!68876 call!11176)))

(declare-fun b!105806 () Bool)

(declare-fun res!52645 () Bool)

(declare-fun e!68872 () Bool)

(assert (=> b!105806 (=> (not res!52645) (not e!68872))))

(declare-fun lt!54142 () List!1617)

(assert (=> b!105806 (= res!52645 (containsKey!160 lt!54142 (_1!1216 lt!53814)))))

(declare-fun b!105807 () Bool)

(assert (=> b!105807 (= e!68872 (contains!830 lt!54142 (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun b!105808 () Bool)

(assert (=> b!105808 (= e!68874 (ite c!18419 (t!5700 (toList!803 (+!144 lt!53805 lt!53815))) (ite c!18420 (Cons!1613 (h!2210 (toList!803 (+!144 lt!53805 lt!53815))) (t!5700 (toList!803 (+!144 lt!53805 lt!53815)))) Nil!1614)))))

(declare-fun d!28891 () Bool)

(assert (=> d!28891 e!68872))

(declare-fun res!52644 () Bool)

(assert (=> d!28891 (=> (not res!52644) (not e!68872))))

(assert (=> d!28891 (= res!52644 (isStrictlySorted!309 lt!54142))))

(assert (=> d!28891 (= lt!54142 e!68875)))

(declare-fun c!18418 () Bool)

(assert (=> d!28891 (= c!18418 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 lt!53815))) (bvslt (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 lt!53815)))) (_1!1216 lt!53814))))))

(assert (=> d!28891 (isStrictlySorted!309 (toList!803 (+!144 lt!53805 lt!53815)))))

(assert (=> d!28891 (= (insertStrictlySorted!75 (toList!803 (+!144 lt!53805 lt!53815)) (_1!1216 lt!53814) (_2!1216 lt!53814)) lt!54142)))

(declare-fun b!105801 () Bool)

(assert (=> b!105801 (= e!68873 call!11175)))

(declare-fun bm!11172 () Bool)

(assert (=> bm!11172 (= call!11174 ($colon$colon!81 e!68874 (ite c!18418 (h!2210 (toList!803 (+!144 lt!53805 lt!53815))) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814)))))))

(declare-fun c!18421 () Bool)

(assert (=> bm!11172 (= c!18421 c!18418)))

(declare-fun bm!11173 () Bool)

(assert (=> bm!11173 (= call!11175 call!11174)))

(assert (= (and d!28891 c!18418) b!105800))

(assert (= (and d!28891 (not c!18418)) b!105799))

(assert (= (and b!105799 c!18419) b!105801))

(assert (= (and b!105799 (not c!18419)) b!105803))

(assert (= (and b!105803 c!18420) b!105805))

(assert (= (and b!105803 (not c!18420)) b!105802))

(assert (= (or b!105805 b!105802) bm!11171))

(assert (= (or b!105801 bm!11171) bm!11173))

(assert (= (or b!105800 bm!11173) bm!11172))

(assert (= (and bm!11172 c!18421) b!105804))

(assert (= (and bm!11172 (not c!18421)) b!105808))

(assert (= (and d!28891 res!52644) b!105806))

(assert (= (and b!105806 res!52645) b!105807))

(declare-fun m!118037 () Bool)

(assert (=> b!105804 m!118037))

(declare-fun m!118039 () Bool)

(assert (=> b!105807 m!118039))

(declare-fun m!118041 () Bool)

(assert (=> d!28891 m!118041))

(declare-fun m!118043 () Bool)

(assert (=> d!28891 m!118043))

(declare-fun m!118045 () Bool)

(assert (=> bm!11172 m!118045))

(declare-fun m!118047 () Bool)

(assert (=> b!105806 m!118047))

(assert (=> d!28807 d!28891))

(declare-fun d!28893 () Bool)

(declare-fun e!68878 () Bool)

(assert (=> d!28893 e!68878))

(declare-fun res!52646 () Bool)

(assert (=> d!28893 (=> res!52646 e!68878)))

(declare-fun lt!54145 () Bool)

(assert (=> d!28893 (= res!52646 (not lt!54145))))

(declare-fun lt!54143 () Bool)

(assert (=> d!28893 (= lt!54145 lt!54143)))

(declare-fun lt!54144 () Unit!3232)

(declare-fun e!68877 () Unit!3232)

(assert (=> d!28893 (= lt!54144 e!68877)))

(declare-fun c!18422 () Bool)

(assert (=> d!28893 (= c!18422 lt!54143)))

(assert (=> d!28893 (= lt!54143 (containsKey!160 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))

(assert (=> d!28893 (= (contains!828 call!11141 (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))) lt!54145)))

(declare-fun b!105809 () Bool)

(declare-fun lt!54146 () Unit!3232)

(assert (=> b!105809 (= e!68877 lt!54146)))

(assert (=> b!105809 (= lt!54146 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))

(assert (=> b!105809 (isDefined!109 (getValueByKey!156 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))

(declare-fun b!105810 () Bool)

(declare-fun Unit!3249 () Unit!3232)

(assert (=> b!105810 (= e!68877 Unit!3249)))

(declare-fun b!105811 () Bool)

(assert (=> b!105811 (= e!68878 (isDefined!109 (getValueByKey!156 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))))))))

(assert (= (and d!28893 c!18422) b!105809))

(assert (= (and d!28893 (not c!18422)) b!105810))

(assert (= (and d!28893 (not res!52646)) b!105811))

(declare-fun m!118049 () Bool)

(assert (=> d!28893 m!118049))

(declare-fun m!118051 () Bool)

(assert (=> b!105809 m!118051))

(declare-fun m!118053 () Bool)

(assert (=> b!105809 m!118053))

(assert (=> b!105809 m!118053))

(declare-fun m!118055 () Bool)

(assert (=> b!105809 m!118055))

(assert (=> b!105811 m!118053))

(assert (=> b!105811 m!118053))

(assert (=> b!105811 m!118055))

(assert (=> bm!11138 d!28893))

(declare-fun d!28895 () Bool)

(assert (=> d!28895 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54051 (zeroValue!2457 newMap!16) lt!53807 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54149 () Unit!3232)

(declare-fun choose!658 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 V!3219 Int) Unit!3232)

(assert (=> d!28895 (= lt!54149 (choose!658 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!54051 (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) lt!53807 (defaultEntry!2582 newMap!16)))))

(assert (=> d!28895 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28895 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!54051 (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) lt!53807 (defaultEntry!2582 newMap!16)) lt!54149)))

(declare-fun bs!4348 () Bool)

(assert (= bs!4348 d!28895))

(declare-fun m!118057 () Bool)

(assert (=> bs!4348 m!118057))

(assert (=> bs!4348 m!117707))

(assert (=> bs!4348 m!117707))

(declare-fun m!118059 () Bool)

(assert (=> bs!4348 m!118059))

(declare-fun m!118061 () Bool)

(assert (=> bs!4348 m!118061))

(assert (=> bs!4348 m!117933))

(assert (=> b!105611 d!28895))

(declare-fun d!28897 () Bool)

(declare-fun e!68881 () Bool)

(assert (=> d!28897 e!68881))

(declare-fun res!52651 () Bool)

(assert (=> d!28897 (=> (not res!52651) (not e!68881))))

(declare-fun lt!54155 () SeekEntryResult!259)

(assert (=> d!28897 (= res!52651 ((_ is Found!259) lt!54155))))

(assert (=> d!28897 (= lt!54155 (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun lt!54154 () Unit!3232)

(declare-fun choose!659 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) Int) Unit!3232)

(assert (=> d!28897 (= lt!54154 (choose!659 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(assert (=> d!28897 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28897 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)) lt!54154)))

(declare-fun b!105816 () Bool)

(declare-fun res!52652 () Bool)

(assert (=> b!105816 (=> (not res!52652) (not e!68881))))

(assert (=> b!105816 (= res!52652 (inRange!0 (index!3185 lt!54155) (mask!6728 newMap!16)))))

(declare-fun b!105817 () Bool)

(assert (=> b!105817 (= e!68881 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54155)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105817 (and (bvsge (index!3185 lt!54155) #b00000000000000000000000000000000) (bvslt (index!3185 lt!54155) (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!28897 res!52651) b!105816))

(assert (= (and b!105816 res!52652) b!105817))

(assert (=> d!28897 m!117489))

(assert (=> d!28897 m!117779))

(assert (=> d!28897 m!117489))

(declare-fun m!118063 () Bool)

(assert (=> d!28897 m!118063))

(assert (=> d!28897 m!117933))

(declare-fun m!118065 () Bool)

(assert (=> b!105816 m!118065))

(declare-fun m!118067 () Bool)

(assert (=> b!105817 m!118067))

(assert (=> bm!11154 d!28897))

(declare-fun d!28899 () Bool)

(declare-fun e!68883 () Bool)

(assert (=> d!28899 e!68883))

(declare-fun res!52653 () Bool)

(assert (=> d!28899 (=> res!52653 e!68883)))

(declare-fun lt!54158 () Bool)

(assert (=> d!28899 (= res!52653 (not lt!54158))))

(declare-fun lt!54156 () Bool)

(assert (=> d!28899 (= lt!54158 lt!54156)))

(declare-fun lt!54157 () Unit!3232)

(declare-fun e!68882 () Unit!3232)

(assert (=> d!28899 (= lt!54157 e!68882)))

(declare-fun c!18423 () Bool)

(assert (=> d!28899 (= c!18423 lt!54156)))

(assert (=> d!28899 (= lt!54156 (containsKey!160 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28899 (= (contains!828 lt!53958 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54158)))

(declare-fun b!105818 () Bool)

(declare-fun lt!54159 () Unit!3232)

(assert (=> b!105818 (= e!68882 lt!54159)))

(assert (=> b!105818 (= lt!54159 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105818 (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105819 () Bool)

(declare-fun Unit!3250 () Unit!3232)

(assert (=> b!105819 (= e!68882 Unit!3250)))

(declare-fun b!105820 () Bool)

(assert (=> b!105820 (= e!68883 (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28899 c!18423) b!105818))

(assert (= (and d!28899 (not c!18423)) b!105819))

(assert (= (and d!28899 (not res!52653)) b!105820))

(declare-fun m!118069 () Bool)

(assert (=> d!28899 m!118069))

(declare-fun m!118071 () Bool)

(assert (=> b!105818 m!118071))

(declare-fun m!118073 () Bool)

(assert (=> b!105818 m!118073))

(assert (=> b!105818 m!118073))

(declare-fun m!118075 () Bool)

(assert (=> b!105818 m!118075))

(assert (=> b!105820 m!118073))

(assert (=> b!105820 m!118073))

(assert (=> b!105820 m!118075))

(assert (=> bm!11077 d!28899))

(declare-fun d!28901 () Bool)

(declare-fun e!68884 () Bool)

(assert (=> d!28901 e!68884))

(declare-fun res!52654 () Bool)

(assert (=> d!28901 (=> (not res!52654) (not e!68884))))

(declare-fun lt!54161 () ListLongMap!1575)

(assert (=> d!28901 (= res!52654 (contains!828 lt!54161 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun lt!54163 () List!1617)

(assert (=> d!28901 (= lt!54161 (ListLongMap!1576 lt!54163))))

(declare-fun lt!54162 () Unit!3232)

(declare-fun lt!54160 () Unit!3232)

(assert (=> d!28901 (= lt!54162 lt!54160)))

(assert (=> d!28901 (= (getValueByKey!156 lt!54163 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!28901 (= lt!54160 (lemmaContainsTupThenGetReturnValue!72 lt!54163 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!28901 (= lt!54163 (insertStrictlySorted!75 (toList!803 call!11140) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!28901 (= (+!144 call!11140 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) lt!54161)))

(declare-fun b!105821 () Bool)

(declare-fun res!52655 () Bool)

(assert (=> b!105821 (=> (not res!52655) (not e!68884))))

(assert (=> b!105821 (= res!52655 (= (getValueByKey!156 (toList!803 lt!54161) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!105822 () Bool)

(assert (=> b!105822 (= e!68884 (contains!830 (toList!803 lt!54161) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(assert (= (and d!28901 res!52654) b!105821))

(assert (= (and b!105821 res!52655) b!105822))

(declare-fun m!118077 () Bool)

(assert (=> d!28901 m!118077))

(declare-fun m!118079 () Bool)

(assert (=> d!28901 m!118079))

(declare-fun m!118081 () Bool)

(assert (=> d!28901 m!118081))

(declare-fun m!118083 () Bool)

(assert (=> d!28901 m!118083))

(declare-fun m!118085 () Bool)

(assert (=> b!105821 m!118085))

(declare-fun m!118087 () Bool)

(assert (=> b!105822 m!118087))

(assert (=> b!105637 d!28901))

(declare-fun d!28903 () Bool)

(assert (=> d!28903 (= (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105502 d!28903))

(declare-fun d!28905 () Bool)

(assert (=> d!28905 (isDefined!109 (getValueByKey!156 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun lt!54166 () Unit!3232)

(declare-fun choose!660 (List!1617 (_ BitVec 64)) Unit!3232)

(assert (=> d!28905 (= lt!54166 (choose!660 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!68887 () Bool)

(assert (=> d!28905 e!68887))

(declare-fun res!52658 () Bool)

(assert (=> d!28905 (=> (not res!52658) (not e!68887))))

(assert (=> d!28905 (= res!52658 (isStrictlySorted!309 (toList!803 lt!53813)))))

(assert (=> d!28905 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54166)))

(declare-fun b!105825 () Bool)

(assert (=> b!105825 (= e!68887 (containsKey!160 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!28905 res!52658) b!105825))

(assert (=> d!28905 m!117489))

(assert (=> d!28905 m!117759))

(assert (=> d!28905 m!117759))

(assert (=> d!28905 m!117761))

(assert (=> d!28905 m!117489))

(declare-fun m!118089 () Bool)

(assert (=> d!28905 m!118089))

(declare-fun m!118091 () Bool)

(assert (=> d!28905 m!118091))

(assert (=> b!105825 m!117489))

(assert (=> b!105825 m!117755))

(assert (=> b!105521 d!28905))

(declare-fun d!28907 () Bool)

(declare-fun isEmpty!371 (Option!162) Bool)

(assert (=> d!28907 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(declare-fun bs!4349 () Bool)

(assert (= bs!4349 d!28907))

(assert (=> bs!4349 m!117759))

(declare-fun m!118093 () Bool)

(assert (=> bs!4349 m!118093))

(assert (=> b!105521 d!28907))

(declare-fun b!105828 () Bool)

(declare-fun e!68889 () Option!162)

(assert (=> b!105828 (= e!68889 (getValueByKey!156 (t!5700 (toList!803 lt!53813)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105826 () Bool)

(declare-fun e!68888 () Option!162)

(assert (=> b!105826 (= e!68888 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53813)))))))

(declare-fun d!28909 () Bool)

(declare-fun c!18424 () Bool)

(assert (=> d!28909 (= c!18424 (and ((_ is Cons!1613) (toList!803 lt!53813)) (= (_1!1216 (h!2210 (toList!803 lt!53813))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!28909 (= (getValueByKey!156 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) e!68888)))

(declare-fun b!105829 () Bool)

(assert (=> b!105829 (= e!68889 None!160)))

(declare-fun b!105827 () Bool)

(assert (=> b!105827 (= e!68888 e!68889)))

(declare-fun c!18425 () Bool)

(assert (=> b!105827 (= c!18425 (and ((_ is Cons!1613) (toList!803 lt!53813)) (not (= (_1!1216 (h!2210 (toList!803 lt!53813))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(assert (= (and d!28909 c!18424) b!105826))

(assert (= (and d!28909 (not c!18424)) b!105827))

(assert (= (and b!105827 c!18425) b!105828))

(assert (= (and b!105827 (not c!18425)) b!105829))

(assert (=> b!105828 m!117489))

(declare-fun m!118095 () Bool)

(assert (=> b!105828 m!118095))

(assert (=> b!105521 d!28909))

(declare-fun d!28911 () Bool)

(declare-fun lt!54167 () Bool)

(assert (=> d!28911 (= lt!54167 (select (content!109 (toList!803 lt!53902)) lt!53815))))

(declare-fun e!68891 () Bool)

(assert (=> d!28911 (= lt!54167 e!68891)))

(declare-fun res!52659 () Bool)

(assert (=> d!28911 (=> (not res!52659) (not e!68891))))

(assert (=> d!28911 (= res!52659 ((_ is Cons!1613) (toList!803 lt!53902)))))

(assert (=> d!28911 (= (contains!830 (toList!803 lt!53902) lt!53815) lt!54167)))

(declare-fun b!105830 () Bool)

(declare-fun e!68890 () Bool)

(assert (=> b!105830 (= e!68891 e!68890)))

(declare-fun res!52660 () Bool)

(assert (=> b!105830 (=> res!52660 e!68890)))

(assert (=> b!105830 (= res!52660 (= (h!2210 (toList!803 lt!53902)) lt!53815))))

(declare-fun b!105831 () Bool)

(assert (=> b!105831 (= e!68890 (contains!830 (t!5700 (toList!803 lt!53902)) lt!53815))))

(assert (= (and d!28911 res!52659) b!105830))

(assert (= (and b!105830 (not res!52660)) b!105831))

(declare-fun m!118097 () Bool)

(assert (=> d!28911 m!118097))

(declare-fun m!118099 () Bool)

(assert (=> d!28911 m!118099))

(declare-fun m!118101 () Bool)

(assert (=> b!105831 m!118101))

(assert (=> b!105440 d!28911))

(declare-fun d!28913 () Bool)

(declare-fun res!52661 () Bool)

(declare-fun e!68892 () Bool)

(assert (=> d!28913 (=> res!52661 e!68892)))

(assert (=> d!28913 (= res!52661 (= (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!28913 (= (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000) e!68892)))

(declare-fun b!105832 () Bool)

(declare-fun e!68893 () Bool)

(assert (=> b!105832 (= e!68892 e!68893)))

(declare-fun res!52662 () Bool)

(assert (=> b!105832 (=> (not res!52662) (not e!68893))))

(assert (=> b!105832 (= res!52662 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!105833 () Bool)

(assert (=> b!105833 (= e!68893 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28913 (not res!52661)) b!105832))

(assert (= (and b!105832 res!52662) b!105833))

(declare-fun m!118103 () Bool)

(assert (=> d!28913 m!118103))

(assert (=> b!105833 m!117489))

(declare-fun m!118105 () Bool)

(assert (=> b!105833 m!118105))

(assert (=> bm!11141 d!28913))

(declare-fun d!28915 () Bool)

(assert (=> d!28915 (= (get!1332 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2891 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105648 d!28915))

(declare-fun d!28917 () Bool)

(assert (=> d!28917 (= (inRange!0 (ite c!18367 (ite c!18373 (index!3185 lt!54047) (ite c!18368 (index!3184 lt!54042) (index!3187 lt!54042))) (ite c!18374 (index!3185 lt!54066) (ite c!18365 (index!3184 lt!54045) (index!3187 lt!54045)))) (mask!6728 newMap!16)) (and (bvsge (ite c!18367 (ite c!18373 (index!3185 lt!54047) (ite c!18368 (index!3184 lt!54042) (index!3187 lt!54042))) (ite c!18374 (index!3185 lt!54066) (ite c!18365 (index!3184 lt!54045) (index!3187 lt!54045)))) #b00000000000000000000000000000000) (bvslt (ite c!18367 (ite c!18373 (index!3185 lt!54047) (ite c!18368 (index!3184 lt!54042) (index!3187 lt!54042))) (ite c!18374 (index!3185 lt!54066) (ite c!18365 (index!3184 lt!54045) (index!3187 lt!54045)))) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11134 d!28917))

(declare-fun d!28919 () Bool)

(declare-fun e!68894 () Bool)

(assert (=> d!28919 e!68894))

(declare-fun res!52663 () Bool)

(assert (=> d!28919 (=> (not res!52663) (not e!68894))))

(declare-fun lt!54169 () ListLongMap!1575)

(assert (=> d!28919 (= res!52663 (contains!828 lt!54169 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!54171 () List!1617)

(assert (=> d!28919 (= lt!54169 (ListLongMap!1576 lt!54171))))

(declare-fun lt!54170 () Unit!3232)

(declare-fun lt!54168 () Unit!3232)

(assert (=> d!28919 (= lt!54170 lt!54168)))

(assert (=> d!28919 (= (getValueByKey!156 lt!54171 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28919 (= lt!54168 (lemmaContainsTupThenGetReturnValue!72 lt!54171 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28919 (= lt!54171 (insertStrictlySorted!75 (toList!803 call!11065) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28919 (= (+!144 call!11065 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!54169)))

(declare-fun b!105834 () Bool)

(declare-fun res!52664 () Bool)

(assert (=> b!105834 (=> (not res!52664) (not e!68894))))

(assert (=> b!105834 (= res!52664 (= (getValueByKey!156 (toList!803 lt!54169) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!105835 () Bool)

(assert (=> b!105835 (= e!68894 (contains!830 (toList!803 lt!54169) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28919 res!52663) b!105834))

(assert (= (and b!105834 res!52664) b!105835))

(declare-fun m!118107 () Bool)

(assert (=> d!28919 m!118107))

(declare-fun m!118109 () Bool)

(assert (=> d!28919 m!118109))

(declare-fun m!118111 () Bool)

(assert (=> d!28919 m!118111))

(declare-fun m!118113 () Bool)

(assert (=> d!28919 m!118113))

(declare-fun m!118115 () Bool)

(assert (=> b!105834 m!118115))

(declare-fun m!118117 () Bool)

(assert (=> b!105835 m!118117))

(assert (=> b!105426 d!28919))

(declare-fun d!28921 () Bool)

(declare-fun e!68895 () Bool)

(assert (=> d!28921 e!68895))

(declare-fun res!52665 () Bool)

(assert (=> d!28921 (=> (not res!52665) (not e!68895))))

(declare-fun lt!54173 () ListLongMap!1575)

(assert (=> d!28921 (= res!52665 (contains!828 lt!54173 (_1!1216 (tuple2!2411 lt!53879 lt!53875))))))

(declare-fun lt!54175 () List!1617)

(assert (=> d!28921 (= lt!54173 (ListLongMap!1576 lt!54175))))

(declare-fun lt!54174 () Unit!3232)

(declare-fun lt!54172 () Unit!3232)

(assert (=> d!28921 (= lt!54174 lt!54172)))

(assert (=> d!28921 (= (getValueByKey!156 lt!54175 (_1!1216 (tuple2!2411 lt!53879 lt!53875))) (Some!161 (_2!1216 (tuple2!2411 lt!53879 lt!53875))))))

(assert (=> d!28921 (= lt!54172 (lemmaContainsTupThenGetReturnValue!72 lt!54175 (_1!1216 (tuple2!2411 lt!53879 lt!53875)) (_2!1216 (tuple2!2411 lt!53879 lt!53875))))))

(assert (=> d!28921 (= lt!54175 (insertStrictlySorted!75 (toList!803 lt!53881) (_1!1216 (tuple2!2411 lt!53879 lt!53875)) (_2!1216 (tuple2!2411 lt!53879 lt!53875))))))

(assert (=> d!28921 (= (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)) lt!54173)))

(declare-fun b!105836 () Bool)

(declare-fun res!52666 () Bool)

(assert (=> b!105836 (=> (not res!52666) (not e!68895))))

(assert (=> b!105836 (= res!52666 (= (getValueByKey!156 (toList!803 lt!54173) (_1!1216 (tuple2!2411 lt!53879 lt!53875))) (Some!161 (_2!1216 (tuple2!2411 lt!53879 lt!53875)))))))

(declare-fun b!105837 () Bool)

(assert (=> b!105837 (= e!68895 (contains!830 (toList!803 lt!54173) (tuple2!2411 lt!53879 lt!53875)))))

(assert (= (and d!28921 res!52665) b!105836))

(assert (= (and b!105836 res!52666) b!105837))

(declare-fun m!118119 () Bool)

(assert (=> d!28921 m!118119))

(declare-fun m!118121 () Bool)

(assert (=> d!28921 m!118121))

(declare-fun m!118123 () Bool)

(assert (=> d!28921 m!118123))

(declare-fun m!118125 () Bool)

(assert (=> d!28921 m!118125))

(declare-fun m!118127 () Bool)

(assert (=> b!105836 m!118127))

(declare-fun m!118129 () Bool)

(assert (=> b!105837 m!118129))

(assert (=> b!105426 d!28921))

(declare-fun d!28923 () Bool)

(declare-fun e!68897 () Bool)

(assert (=> d!28923 e!68897))

(declare-fun res!52667 () Bool)

(assert (=> d!28923 (=> res!52667 e!68897)))

(declare-fun lt!54178 () Bool)

(assert (=> d!28923 (= res!52667 (not lt!54178))))

(declare-fun lt!54176 () Bool)

(assert (=> d!28923 (= lt!54178 lt!54176)))

(declare-fun lt!54177 () Unit!3232)

(declare-fun e!68896 () Unit!3232)

(assert (=> d!28923 (= lt!54177 e!68896)))

(declare-fun c!18426 () Bool)

(assert (=> d!28923 (= c!18426 lt!54176)))

(assert (=> d!28923 (= lt!54176 (containsKey!160 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880))))

(assert (=> d!28923 (= (contains!828 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)) lt!53880) lt!54178)))

(declare-fun b!105838 () Bool)

(declare-fun lt!54179 () Unit!3232)

(assert (=> b!105838 (= e!68896 lt!54179)))

(assert (=> b!105838 (= lt!54179 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880))))

(assert (=> b!105838 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880))))

(declare-fun b!105839 () Bool)

(declare-fun Unit!3251 () Unit!3232)

(assert (=> b!105839 (= e!68896 Unit!3251)))

(declare-fun b!105840 () Bool)

(assert (=> b!105840 (= e!68897 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880)))))

(assert (= (and d!28923 c!18426) b!105838))

(assert (= (and d!28923 (not c!18426)) b!105839))

(assert (= (and d!28923 (not res!52667)) b!105840))

(declare-fun m!118131 () Bool)

(assert (=> d!28923 m!118131))

(declare-fun m!118133 () Bool)

(assert (=> b!105838 m!118133))

(declare-fun m!118135 () Bool)

(assert (=> b!105838 m!118135))

(assert (=> b!105838 m!118135))

(declare-fun m!118137 () Bool)

(assert (=> b!105838 m!118137))

(assert (=> b!105840 m!118135))

(assert (=> b!105840 m!118135))

(assert (=> b!105840 m!118137))

(assert (=> b!105426 d!28923))

(declare-fun d!28925 () Bool)

(declare-fun c!18427 () Bool)

(assert (=> d!28925 (= c!18427 ((_ is ValueCellFull!996) (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!68898 () V!3219)

(assert (=> d!28925 (= (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68898)))

(declare-fun b!105841 () Bool)

(assert (=> b!105841 (= e!68898 (get!1332 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105842 () Bool)

(assert (=> b!105842 (= e!68898 (get!1333 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28925 c!18427) b!105841))

(assert (= (and d!28925 (not c!18427)) b!105842))

(assert (=> b!105841 m!117619))

(assert (=> b!105841 m!117499))

(declare-fun m!118139 () Bool)

(assert (=> b!105841 m!118139))

(assert (=> b!105842 m!117619))

(assert (=> b!105842 m!117499))

(declare-fun m!118141 () Bool)

(assert (=> b!105842 m!118141))

(assert (=> b!105426 d!28925))

(declare-fun d!28927 () Bool)

(assert (=> d!28927 (not (contains!828 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)) lt!53880))))

(declare-fun lt!54182 () Unit!3232)

(declare-fun choose!661 (ListLongMap!1575 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3232)

(assert (=> d!28927 (= lt!54182 (choose!661 lt!53881 lt!53879 lt!53875 lt!53880))))

(declare-fun e!68901 () Bool)

(assert (=> d!28927 e!68901))

(declare-fun res!52670 () Bool)

(assert (=> d!28927 (=> (not res!52670) (not e!68901))))

(assert (=> d!28927 (= res!52670 (not (contains!828 lt!53881 lt!53880)))))

(assert (=> d!28927 (= (addStillNotContains!46 lt!53881 lt!53879 lt!53875 lt!53880) lt!54182)))

(declare-fun b!105846 () Bool)

(assert (=> b!105846 (= e!68901 (not (= lt!53879 lt!53880)))))

(assert (= (and d!28927 res!52670) b!105846))

(assert (=> d!28927 m!117633))

(assert (=> d!28927 m!117633))

(assert (=> d!28927 m!117635))

(declare-fun m!118143 () Bool)

(assert (=> d!28927 m!118143))

(declare-fun m!118145 () Bool)

(assert (=> d!28927 m!118145))

(assert (=> b!105426 d!28927))

(assert (=> b!105523 d!28907))

(assert (=> b!105523 d!28909))

(declare-fun bm!11174 () Bool)

(declare-fun call!11180 () Bool)

(declare-fun lt!54188 () ListLongMap!1575)

(assert (=> bm!11174 (= call!11180 (contains!828 lt!54188 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11175 () Bool)

(declare-fun call!11183 () ListLongMap!1575)

(declare-fun call!11178 () ListLongMap!1575)

(assert (=> bm!11175 (= call!11183 call!11178)))

(declare-fun b!105847 () Bool)

(declare-fun e!68903 () Unit!3232)

(declare-fun lt!54204 () Unit!3232)

(assert (=> b!105847 (= e!68903 lt!54204)))

(declare-fun lt!54186 () ListLongMap!1575)

(assert (=> b!105847 (= lt!54186 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54196 () (_ BitVec 64))

(assert (=> b!105847 (= lt!54196 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54184 () (_ BitVec 64))

(assert (=> b!105847 (= lt!54184 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54199 () Unit!3232)

(assert (=> b!105847 (= lt!54199 (addStillContains!74 lt!54186 lt!54196 (zeroValue!2457 newMap!16) lt!54184))))

(assert (=> b!105847 (contains!828 (+!144 lt!54186 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16))) lt!54184)))

(declare-fun lt!54198 () Unit!3232)

(assert (=> b!105847 (= lt!54198 lt!54199)))

(declare-fun lt!54201 () ListLongMap!1575)

(assert (=> b!105847 (= lt!54201 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54185 () (_ BitVec 64))

(assert (=> b!105847 (= lt!54185 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54183 () (_ BitVec 64))

(assert (=> b!105847 (= lt!54183 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54202 () Unit!3232)

(assert (=> b!105847 (= lt!54202 (addApplyDifferent!74 lt!54201 lt!54185 (minValue!2457 newMap!16) lt!54183))))

(assert (=> b!105847 (= (apply!98 (+!144 lt!54201 (tuple2!2411 lt!54185 (minValue!2457 newMap!16))) lt!54183) (apply!98 lt!54201 lt!54183))))

(declare-fun lt!54195 () Unit!3232)

(assert (=> b!105847 (= lt!54195 lt!54202)))

(declare-fun lt!54193 () ListLongMap!1575)

(assert (=> b!105847 (= lt!54193 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54197 () (_ BitVec 64))

(assert (=> b!105847 (= lt!54197 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54187 () (_ BitVec 64))

(assert (=> b!105847 (= lt!54187 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54194 () Unit!3232)

(assert (=> b!105847 (= lt!54194 (addApplyDifferent!74 lt!54193 lt!54197 (zeroValue!2457 newMap!16) lt!54187))))

(assert (=> b!105847 (= (apply!98 (+!144 lt!54193 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16))) lt!54187) (apply!98 lt!54193 lt!54187))))

(declare-fun lt!54203 () Unit!3232)

(assert (=> b!105847 (= lt!54203 lt!54194)))

(declare-fun lt!54189 () ListLongMap!1575)

(assert (=> b!105847 (= lt!54189 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54191 () (_ BitVec 64))

(assert (=> b!105847 (= lt!54191 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54200 () (_ BitVec 64))

(assert (=> b!105847 (= lt!54200 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105847 (= lt!54204 (addApplyDifferent!74 lt!54189 lt!54191 (minValue!2457 newMap!16) lt!54200))))

(assert (=> b!105847 (= (apply!98 (+!144 lt!54189 (tuple2!2411 lt!54191 (minValue!2457 newMap!16))) lt!54200) (apply!98 lt!54189 lt!54200))))

(declare-fun bm!11176 () Bool)

(declare-fun call!11177 () ListLongMap!1575)

(assert (=> bm!11176 (= call!11178 call!11177)))

(declare-fun bm!11177 () Bool)

(declare-fun call!11181 () Bool)

(assert (=> bm!11177 (= call!11181 (contains!828 lt!54188 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105848 () Bool)

(declare-fun res!52677 () Bool)

(declare-fun e!68902 () Bool)

(assert (=> b!105848 (=> (not res!52677) (not e!68902))))

(declare-fun e!68911 () Bool)

(assert (=> b!105848 (= res!52677 e!68911)))

(declare-fun res!52678 () Bool)

(assert (=> b!105848 (=> res!52678 e!68911)))

(declare-fun e!68908 () Bool)

(assert (=> b!105848 (= res!52678 (not e!68908))))

(declare-fun res!52675 () Bool)

(assert (=> b!105848 (=> (not res!52675) (not e!68908))))

(assert (=> b!105848 (= res!52675 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!105849 () Bool)

(declare-fun e!68912 () ListLongMap!1575)

(declare-fun call!11182 () ListLongMap!1575)

(assert (=> b!105849 (= e!68912 (+!144 call!11182 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(declare-fun bm!11178 () Bool)

(declare-fun call!11179 () ListLongMap!1575)

(assert (=> bm!11178 (= call!11179 call!11182)))

(declare-fun b!105850 () Bool)

(declare-fun e!68913 () Bool)

(assert (=> b!105850 (= e!68902 e!68913)))

(declare-fun c!18431 () Bool)

(assert (=> b!105850 (= c!18431 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105851 () Bool)

(declare-fun e!68910 () Bool)

(assert (=> b!105851 (= e!68910 (= (apply!98 lt!54188 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!105852 () Bool)

(declare-fun Unit!3252 () Unit!3232)

(assert (=> b!105852 (= e!68903 Unit!3252)))

(declare-fun b!105853 () Bool)

(assert (=> b!105853 (= e!68913 (not call!11180))))

(declare-fun b!105854 () Bool)

(declare-fun e!68914 () Bool)

(declare-fun e!68907 () Bool)

(assert (=> b!105854 (= e!68914 e!68907)))

(declare-fun res!52673 () Bool)

(assert (=> b!105854 (= res!52673 call!11181)))

(assert (=> b!105854 (=> (not res!52673) (not e!68907))))

(declare-fun d!28929 () Bool)

(assert (=> d!28929 e!68902))

(declare-fun res!52676 () Bool)

(assert (=> d!28929 (=> (not res!52676) (not e!68902))))

(assert (=> d!28929 (= res!52676 (or (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))))

(declare-fun lt!54190 () ListLongMap!1575)

(assert (=> d!28929 (= lt!54188 lt!54190)))

(declare-fun lt!54192 () Unit!3232)

(assert (=> d!28929 (= lt!54192 e!68903)))

(declare-fun c!18428 () Bool)

(declare-fun e!68909 () Bool)

(assert (=> d!28929 (= c!18428 e!68909)))

(declare-fun res!52679 () Bool)

(assert (=> d!28929 (=> (not res!52679) (not e!68909))))

(assert (=> d!28929 (= res!52679 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!28929 (= lt!54190 e!68912)))

(declare-fun c!18430 () Bool)

(assert (=> d!28929 (= c!18430 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28929 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28929 (= (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54188)))

(declare-fun b!105855 () Bool)

(assert (=> b!105855 (= e!68908 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105856 () Bool)

(assert (=> b!105856 (= e!68914 (not call!11181))))

(declare-fun b!105857 () Bool)

(declare-fun e!68906 () ListLongMap!1575)

(assert (=> b!105857 (= e!68906 call!11179)))

(declare-fun b!105858 () Bool)

(declare-fun e!68905 () Bool)

(assert (=> b!105858 (= e!68905 (= (apply!98 lt!54188 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105858 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_values!2565 newMap!16))))))

(assert (=> b!105858 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!105859 () Bool)

(assert (=> b!105859 (= e!68907 (= (apply!98 lt!54188 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun bm!11179 () Bool)

(assert (=> bm!11179 (= call!11177 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!105860 () Bool)

(assert (=> b!105860 (= e!68912 e!68906)))

(declare-fun c!18433 () Bool)

(assert (=> b!105860 (= c!18433 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105861 () Bool)

(declare-fun res!52674 () Bool)

(assert (=> b!105861 (=> (not res!52674) (not e!68902))))

(assert (=> b!105861 (= res!52674 e!68914)))

(declare-fun c!18432 () Bool)

(assert (=> b!105861 (= c!18432 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105862 () Bool)

(declare-fun e!68904 () ListLongMap!1575)

(assert (=> b!105862 (= e!68904 call!11179)))

(declare-fun bm!11180 () Bool)

(assert (=> bm!11180 (= call!11182 (+!144 (ite c!18430 call!11177 (ite c!18433 call!11178 call!11183)) (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!105863 () Bool)

(declare-fun c!18429 () Bool)

(assert (=> b!105863 (= c!18429 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!105863 (= e!68906 e!68904)))

(declare-fun b!105864 () Bool)

(assert (=> b!105864 (= e!68913 e!68910)))

(declare-fun res!52671 () Bool)

(assert (=> b!105864 (= res!52671 call!11180)))

(assert (=> b!105864 (=> (not res!52671) (not e!68910))))

(declare-fun b!105865 () Bool)

(assert (=> b!105865 (= e!68904 call!11183)))

(declare-fun b!105866 () Bool)

(assert (=> b!105866 (= e!68909 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105867 () Bool)

(assert (=> b!105867 (= e!68911 e!68905)))

(declare-fun res!52672 () Bool)

(assert (=> b!105867 (=> (not res!52672) (not e!68905))))

(assert (=> b!105867 (= res!52672 (contains!828 lt!54188 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105867 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!28929 c!18430) b!105849))

(assert (= (and d!28929 (not c!18430)) b!105860))

(assert (= (and b!105860 c!18433) b!105857))

(assert (= (and b!105860 (not c!18433)) b!105863))

(assert (= (and b!105863 c!18429) b!105862))

(assert (= (and b!105863 (not c!18429)) b!105865))

(assert (= (or b!105862 b!105865) bm!11175))

(assert (= (or b!105857 bm!11175) bm!11176))

(assert (= (or b!105857 b!105862) bm!11178))

(assert (= (or b!105849 bm!11176) bm!11179))

(assert (= (or b!105849 bm!11178) bm!11180))

(assert (= (and d!28929 res!52679) b!105866))

(assert (= (and d!28929 c!18428) b!105847))

(assert (= (and d!28929 (not c!18428)) b!105852))

(assert (= (and d!28929 res!52676) b!105848))

(assert (= (and b!105848 res!52675) b!105855))

(assert (= (and b!105848 (not res!52678)) b!105867))

(assert (= (and b!105867 res!52672) b!105858))

(assert (= (and b!105848 res!52677) b!105861))

(assert (= (and b!105861 c!18432) b!105854))

(assert (= (and b!105861 (not c!18432)) b!105856))

(assert (= (and b!105854 res!52673) b!105859))

(assert (= (or b!105854 b!105856) bm!11177))

(assert (= (and b!105861 res!52674) b!105850))

(assert (= (and b!105850 c!18431) b!105864))

(assert (= (and b!105850 (not c!18431)) b!105853))

(assert (= (and b!105864 res!52671) b!105851))

(assert (= (or b!105864 b!105853) bm!11174))

(declare-fun b_lambda!4733 () Bool)

(assert (=> (not b_lambda!4733) (not b!105858)))

(declare-fun t!5708 () Bool)

(declare-fun tb!2057 () Bool)

(assert (=> (and b!105285 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16)) t!5708) tb!2057))

(declare-fun result!3463 () Bool)

(assert (=> tb!2057 (= result!3463 tp_is_empty!2679)))

(assert (=> b!105858 t!5708))

(declare-fun b_and!6531 () Bool)

(assert (= b_and!6527 (and (=> t!5708 result!3463) b_and!6531)))

(declare-fun t!5710 () Bool)

(declare-fun tb!2059 () Bool)

(assert (=> (and b!105288 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 newMap!16)) t!5710) tb!2059))

(declare-fun result!3465 () Bool)

(assert (= result!3465 result!3463))

(assert (=> b!105858 t!5710))

(declare-fun b_and!6533 () Bool)

(assert (= b_and!6529 (and (=> t!5710 result!3465) b_and!6533)))

(assert (=> d!28929 m!117933))

(assert (=> b!105858 m!118103))

(declare-fun m!118147 () Bool)

(assert (=> b!105858 m!118147))

(declare-fun m!118149 () Bool)

(assert (=> b!105858 m!118149))

(declare-fun m!118151 () Bool)

(assert (=> b!105858 m!118151))

(assert (=> b!105858 m!118149))

(declare-fun m!118153 () Bool)

(assert (=> b!105858 m!118153))

(assert (=> b!105858 m!118103))

(assert (=> b!105858 m!118151))

(declare-fun m!118155 () Bool)

(assert (=> b!105859 m!118155))

(declare-fun m!118157 () Bool)

(assert (=> bm!11177 m!118157))

(declare-fun m!118159 () Bool)

(assert (=> bm!11180 m!118159))

(declare-fun m!118161 () Bool)

(assert (=> b!105851 m!118161))

(assert (=> b!105855 m!118103))

(assert (=> b!105855 m!118103))

(declare-fun m!118163 () Bool)

(assert (=> b!105855 m!118163))

(declare-fun m!118165 () Bool)

(assert (=> bm!11179 m!118165))

(assert (=> b!105867 m!118103))

(assert (=> b!105867 m!118103))

(declare-fun m!118167 () Bool)

(assert (=> b!105867 m!118167))

(assert (=> b!105866 m!118103))

(assert (=> b!105866 m!118103))

(assert (=> b!105866 m!118163))

(declare-fun m!118169 () Bool)

(assert (=> b!105849 m!118169))

(declare-fun m!118171 () Bool)

(assert (=> bm!11174 m!118171))

(declare-fun m!118173 () Bool)

(assert (=> b!105847 m!118173))

(declare-fun m!118175 () Bool)

(assert (=> b!105847 m!118175))

(declare-fun m!118177 () Bool)

(assert (=> b!105847 m!118177))

(declare-fun m!118179 () Bool)

(assert (=> b!105847 m!118179))

(declare-fun m!118181 () Bool)

(assert (=> b!105847 m!118181))

(declare-fun m!118183 () Bool)

(assert (=> b!105847 m!118183))

(declare-fun m!118185 () Bool)

(assert (=> b!105847 m!118185))

(declare-fun m!118187 () Bool)

(assert (=> b!105847 m!118187))

(assert (=> b!105847 m!118165))

(declare-fun m!118189 () Bool)

(assert (=> b!105847 m!118189))

(declare-fun m!118191 () Bool)

(assert (=> b!105847 m!118191))

(declare-fun m!118193 () Bool)

(assert (=> b!105847 m!118193))

(assert (=> b!105847 m!118175))

(assert (=> b!105847 m!118103))

(assert (=> b!105847 m!118191))

(declare-fun m!118195 () Bool)

(assert (=> b!105847 m!118195))

(assert (=> b!105847 m!118179))

(declare-fun m!118197 () Bool)

(assert (=> b!105847 m!118197))

(assert (=> b!105847 m!118185))

(declare-fun m!118199 () Bool)

(assert (=> b!105847 m!118199))

(declare-fun m!118201 () Bool)

(assert (=> b!105847 m!118201))

(assert (=> b!105623 d!28929))

(declare-fun d!28931 () Bool)

(declare-fun lt!54205 () Bool)

(assert (=> d!28931 (= lt!54205 (select (content!109 (toList!803 lt!53906)) lt!53814))))

(declare-fun e!68916 () Bool)

(assert (=> d!28931 (= lt!54205 e!68916)))

(declare-fun res!52680 () Bool)

(assert (=> d!28931 (=> (not res!52680) (not e!68916))))

(assert (=> d!28931 (= res!52680 ((_ is Cons!1613) (toList!803 lt!53906)))))

(assert (=> d!28931 (= (contains!830 (toList!803 lt!53906) lt!53814) lt!54205)))

(declare-fun b!105868 () Bool)

(declare-fun e!68915 () Bool)

(assert (=> b!105868 (= e!68916 e!68915)))

(declare-fun res!52681 () Bool)

(assert (=> b!105868 (=> res!52681 e!68915)))

(assert (=> b!105868 (= res!52681 (= (h!2210 (toList!803 lt!53906)) lt!53814))))

(declare-fun b!105869 () Bool)

(assert (=> b!105869 (= e!68915 (contains!830 (t!5700 (toList!803 lt!53906)) lt!53814))))

(assert (= (and d!28931 res!52680) b!105868))

(assert (= (and b!105868 (not res!52681)) b!105869))

(declare-fun m!118203 () Bool)

(assert (=> d!28931 m!118203))

(declare-fun m!118205 () Bool)

(assert (=> d!28931 m!118205))

(declare-fun m!118207 () Bool)

(assert (=> b!105869 m!118207))

(assert (=> b!105442 d!28931))

(declare-fun d!28933 () Bool)

(declare-fun e!68918 () Bool)

(assert (=> d!28933 e!68918))

(declare-fun res!52682 () Bool)

(assert (=> d!28933 (=> res!52682 e!68918)))

(declare-fun lt!54208 () Bool)

(assert (=> d!28933 (= res!52682 (not lt!54208))))

(declare-fun lt!54206 () Bool)

(assert (=> d!28933 (= lt!54208 lt!54206)))

(declare-fun lt!54207 () Unit!3232)

(declare-fun e!68917 () Unit!3232)

(assert (=> d!28933 (= lt!54207 e!68917)))

(declare-fun c!18434 () Bool)

(assert (=> d!28933 (= c!18434 lt!54206)))

(assert (=> d!28933 (= lt!54206 (containsKey!160 (toList!803 lt!53891) (_1!1216 lt!53815)))))

(assert (=> d!28933 (= (contains!828 lt!53891 (_1!1216 lt!53815)) lt!54208)))

(declare-fun b!105870 () Bool)

(declare-fun lt!54209 () Unit!3232)

(assert (=> b!105870 (= e!68917 lt!54209)))

(assert (=> b!105870 (= lt!54209 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53891) (_1!1216 lt!53815)))))

(assert (=> b!105870 (isDefined!109 (getValueByKey!156 (toList!803 lt!53891) (_1!1216 lt!53815)))))

(declare-fun b!105871 () Bool)

(declare-fun Unit!3253 () Unit!3232)

(assert (=> b!105871 (= e!68917 Unit!3253)))

(declare-fun b!105872 () Bool)

(assert (=> b!105872 (= e!68918 (isDefined!109 (getValueByKey!156 (toList!803 lt!53891) (_1!1216 lt!53815))))))

(assert (= (and d!28933 c!18434) b!105870))

(assert (= (and d!28933 (not c!18434)) b!105871))

(assert (= (and d!28933 (not res!52682)) b!105872))

(declare-fun m!118209 () Bool)

(assert (=> d!28933 m!118209))

(declare-fun m!118211 () Bool)

(assert (=> b!105870 m!118211))

(assert (=> b!105870 m!117649))

(assert (=> b!105870 m!117649))

(declare-fun m!118213 () Bool)

(assert (=> b!105870 m!118213))

(assert (=> b!105872 m!117649))

(assert (=> b!105872 m!117649))

(assert (=> b!105872 m!118213))

(assert (=> d!28797 d!28933))

(declare-fun b!105875 () Bool)

(declare-fun e!68920 () Option!162)

(assert (=> b!105875 (= e!68920 (getValueByKey!156 (t!5700 lt!53893) (_1!1216 lt!53815)))))

(declare-fun b!105873 () Bool)

(declare-fun e!68919 () Option!162)

(assert (=> b!105873 (= e!68919 (Some!161 (_2!1216 (h!2210 lt!53893))))))

(declare-fun d!28935 () Bool)

(declare-fun c!18435 () Bool)

(assert (=> d!28935 (= c!18435 (and ((_ is Cons!1613) lt!53893) (= (_1!1216 (h!2210 lt!53893)) (_1!1216 lt!53815))))))

(assert (=> d!28935 (= (getValueByKey!156 lt!53893 (_1!1216 lt!53815)) e!68919)))

(declare-fun b!105876 () Bool)

(assert (=> b!105876 (= e!68920 None!160)))

(declare-fun b!105874 () Bool)

(assert (=> b!105874 (= e!68919 e!68920)))

(declare-fun c!18436 () Bool)

(assert (=> b!105874 (= c!18436 (and ((_ is Cons!1613) lt!53893) (not (= (_1!1216 (h!2210 lt!53893)) (_1!1216 lt!53815)))))))

(assert (= (and d!28935 c!18435) b!105873))

(assert (= (and d!28935 (not c!18435)) b!105874))

(assert (= (and b!105874 c!18436) b!105875))

(assert (= (and b!105874 (not c!18436)) b!105876))

(declare-fun m!118215 () Bool)

(assert (=> b!105875 m!118215))

(assert (=> d!28797 d!28935))

(declare-fun d!28937 () Bool)

(assert (=> d!28937 (= (getValueByKey!156 lt!53893 (_1!1216 lt!53815)) (Some!161 (_2!1216 lt!53815)))))

(declare-fun lt!54210 () Unit!3232)

(assert (=> d!28937 (= lt!54210 (choose!657 lt!53893 (_1!1216 lt!53815) (_2!1216 lt!53815)))))

(declare-fun e!68921 () Bool)

(assert (=> d!28937 e!68921))

(declare-fun res!52683 () Bool)

(assert (=> d!28937 (=> (not res!52683) (not e!68921))))

(assert (=> d!28937 (= res!52683 (isStrictlySorted!309 lt!53893))))

(assert (=> d!28937 (= (lemmaContainsTupThenGetReturnValue!72 lt!53893 (_1!1216 lt!53815) (_2!1216 lt!53815)) lt!54210)))

(declare-fun b!105877 () Bool)

(declare-fun res!52684 () Bool)

(assert (=> b!105877 (=> (not res!52684) (not e!68921))))

(assert (=> b!105877 (= res!52684 (containsKey!160 lt!53893 (_1!1216 lt!53815)))))

(declare-fun b!105878 () Bool)

(assert (=> b!105878 (= e!68921 (contains!830 lt!53893 (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(assert (= (and d!28937 res!52683) b!105877))

(assert (= (and b!105877 res!52684) b!105878))

(assert (=> d!28937 m!117643))

(declare-fun m!118217 () Bool)

(assert (=> d!28937 m!118217))

(declare-fun m!118219 () Bool)

(assert (=> d!28937 m!118219))

(declare-fun m!118221 () Bool)

(assert (=> b!105877 m!118221))

(declare-fun m!118223 () Bool)

(assert (=> b!105878 m!118223))

(assert (=> d!28797 d!28937))

(declare-fun b!105879 () Bool)

(declare-fun e!68925 () List!1617)

(declare-fun e!68923 () List!1617)

(assert (=> b!105879 (= e!68925 e!68923)))

(declare-fun c!18438 () Bool)

(assert (=> b!105879 (= c!18438 (and ((_ is Cons!1613) (toList!803 lt!53805)) (= (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 lt!53815))))))

(declare-fun b!105880 () Bool)

(declare-fun call!11184 () List!1617)

(assert (=> b!105880 (= e!68925 call!11184)))

(declare-fun b!105882 () Bool)

(declare-fun e!68926 () List!1617)

(declare-fun call!11186 () List!1617)

(assert (=> b!105882 (= e!68926 call!11186)))

(declare-fun b!105883 () Bool)

(declare-fun c!18439 () Bool)

(assert (=> b!105883 (= c!18439 (and ((_ is Cons!1613) (toList!803 lt!53805)) (bvsgt (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 lt!53815))))))

(assert (=> b!105883 (= e!68923 e!68926)))

(declare-fun bm!11181 () Bool)

(declare-fun call!11185 () List!1617)

(assert (=> bm!11181 (= call!11186 call!11185)))

(declare-fun b!105884 () Bool)

(declare-fun e!68924 () List!1617)

(assert (=> b!105884 (= e!68924 (insertStrictlySorted!75 (t!5700 (toList!803 lt!53805)) (_1!1216 lt!53815) (_2!1216 lt!53815)))))

(declare-fun b!105885 () Bool)

(assert (=> b!105885 (= e!68926 call!11186)))

(declare-fun b!105886 () Bool)

(declare-fun res!52686 () Bool)

(declare-fun e!68922 () Bool)

(assert (=> b!105886 (=> (not res!52686) (not e!68922))))

(declare-fun lt!54211 () List!1617)

(assert (=> b!105886 (= res!52686 (containsKey!160 lt!54211 (_1!1216 lt!53815)))))

(declare-fun b!105887 () Bool)

(assert (=> b!105887 (= e!68922 (contains!830 lt!54211 (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun b!105888 () Bool)

(assert (=> b!105888 (= e!68924 (ite c!18438 (t!5700 (toList!803 lt!53805)) (ite c!18439 (Cons!1613 (h!2210 (toList!803 lt!53805)) (t!5700 (toList!803 lt!53805))) Nil!1614)))))

(declare-fun d!28939 () Bool)

(assert (=> d!28939 e!68922))

(declare-fun res!52685 () Bool)

(assert (=> d!28939 (=> (not res!52685) (not e!68922))))

(assert (=> d!28939 (= res!52685 (isStrictlySorted!309 lt!54211))))

(assert (=> d!28939 (= lt!54211 e!68925)))

(declare-fun c!18437 () Bool)

(assert (=> d!28939 (= c!18437 (and ((_ is Cons!1613) (toList!803 lt!53805)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 lt!53815))))))

(assert (=> d!28939 (isStrictlySorted!309 (toList!803 lt!53805))))

(assert (=> d!28939 (= (insertStrictlySorted!75 (toList!803 lt!53805) (_1!1216 lt!53815) (_2!1216 lt!53815)) lt!54211)))

(declare-fun b!105881 () Bool)

(assert (=> b!105881 (= e!68923 call!11185)))

(declare-fun bm!11182 () Bool)

(assert (=> bm!11182 (= call!11184 ($colon$colon!81 e!68924 (ite c!18437 (h!2210 (toList!803 lt!53805)) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815)))))))

(declare-fun c!18440 () Bool)

(assert (=> bm!11182 (= c!18440 c!18437)))

(declare-fun bm!11183 () Bool)

(assert (=> bm!11183 (= call!11185 call!11184)))

(assert (= (and d!28939 c!18437) b!105880))

(assert (= (and d!28939 (not c!18437)) b!105879))

(assert (= (and b!105879 c!18438) b!105881))

(assert (= (and b!105879 (not c!18438)) b!105883))

(assert (= (and b!105883 c!18439) b!105885))

(assert (= (and b!105883 (not c!18439)) b!105882))

(assert (= (or b!105885 b!105882) bm!11181))

(assert (= (or b!105881 bm!11181) bm!11183))

(assert (= (or b!105880 bm!11183) bm!11182))

(assert (= (and bm!11182 c!18440) b!105884))

(assert (= (and bm!11182 (not c!18440)) b!105888))

(assert (= (and d!28939 res!52685) b!105886))

(assert (= (and b!105886 res!52686) b!105887))

(declare-fun m!118225 () Bool)

(assert (=> b!105884 m!118225))

(declare-fun m!118227 () Bool)

(assert (=> b!105887 m!118227))

(declare-fun m!118229 () Bool)

(assert (=> d!28939 m!118229))

(declare-fun m!118231 () Bool)

(assert (=> d!28939 m!118231))

(declare-fun m!118233 () Bool)

(assert (=> bm!11182 m!118233))

(declare-fun m!118235 () Bool)

(assert (=> b!105886 m!118235))

(assert (=> d!28797 d!28939))

(declare-fun d!28941 () Bool)

(declare-fun isEmpty!372 (List!1617) Bool)

(assert (=> d!28941 (= (isEmpty!370 lt!53878) (isEmpty!372 (toList!803 lt!53878)))))

(declare-fun bs!4350 () Bool)

(assert (= bs!4350 d!28941))

(declare-fun m!118237 () Bool)

(assert (=> bs!4350 m!118237))

(assert (=> b!105428 d!28941))

(declare-fun d!28943 () Bool)

(assert (=> d!28943 (= (apply!98 lt!53958 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1334 (getValueByKey!156 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4351 () Bool)

(assert (= bs!4351 d!28943))

(assert (=> bs!4351 m!117955))

(assert (=> bs!4351 m!117955))

(declare-fun m!118239 () Bool)

(assert (=> bs!4351 m!118239))

(assert (=> b!105506 d!28943))

(assert (=> bm!11148 d!28859))

(declare-fun d!28945 () Bool)

(assert (=> d!28945 (= (apply!98 lt!53878 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1334 (getValueByKey!156 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4352 () Bool)

(assert (= bs!4352 d!28945))

(assert (=> bs!4352 m!117601))

(declare-fun m!118241 () Bool)

(assert (=> bs!4352 m!118241))

(assert (=> bs!4352 m!118241))

(declare-fun m!118243 () Bool)

(assert (=> bs!4352 m!118243))

(assert (=> b!105421 d!28945))

(assert (=> b!105421 d!28925))

(declare-fun d!28947 () Bool)

(declare-fun lt!54214 () Bool)

(declare-fun content!110 (List!1616) (InoxSet (_ BitVec 64)))

(assert (=> d!28947 (= lt!54214 (select (content!110 Nil!1613) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!68932 () Bool)

(assert (=> d!28947 (= lt!54214 e!68932)))

(declare-fun res!52692 () Bool)

(assert (=> d!28947 (=> (not res!52692) (not e!68932))))

(assert (=> d!28947 (= res!52692 ((_ is Cons!1612) Nil!1613))))

(assert (=> d!28947 (= (contains!829 Nil!1613 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54214)))

(declare-fun b!105893 () Bool)

(declare-fun e!68931 () Bool)

(assert (=> b!105893 (= e!68932 e!68931)))

(declare-fun res!52691 () Bool)

(assert (=> b!105893 (=> res!52691 e!68931)))

(assert (=> b!105893 (= res!52691 (= (h!2209 Nil!1613) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105894 () Bool)

(assert (=> b!105894 (= e!68931 (contains!829 (t!5699 Nil!1613) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!28947 res!52692) b!105893))

(assert (= (and b!105893 (not res!52691)) b!105894))

(declare-fun m!118245 () Bool)

(assert (=> d!28947 m!118245))

(assert (=> d!28947 m!117489))

(declare-fun m!118247 () Bool)

(assert (=> d!28947 m!118247))

(assert (=> b!105894 m!117489))

(declare-fun m!118249 () Bool)

(assert (=> b!105894 m!118249))

(assert (=> b!105392 d!28947))

(declare-fun d!28949 () Bool)

(assert (=> d!28949 (= (apply!98 lt!53958 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1334 (getValueByKey!156 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4353 () Bool)

(assert (= bs!4353 d!28949))

(assert (=> bs!4353 m!118073))

(assert (=> bs!4353 m!118073))

(declare-fun m!118251 () Bool)

(assert (=> bs!4353 m!118251))

(assert (=> b!105498 d!28949))

(declare-fun b!105903 () Bool)

(declare-fun e!68938 () (_ BitVec 32))

(declare-fun call!11189 () (_ BitVec 32))

(assert (=> b!105903 (= e!68938 (bvadd #b00000000000000000000000000000001 call!11189))))

(declare-fun b!105904 () Bool)

(declare-fun e!68937 () (_ BitVec 32))

(assert (=> b!105904 (= e!68937 #b00000000000000000000000000000000)))

(declare-fun b!105905 () Bool)

(assert (=> b!105905 (= e!68938 call!11189)))

(declare-fun d!28951 () Bool)

(declare-fun lt!54217 () (_ BitVec 32))

(assert (=> d!28951 (and (bvsge lt!54217 #b00000000000000000000000000000000) (bvsle lt!54217 (bvsub (size!2318 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28951 (= lt!54217 e!68937)))

(declare-fun c!18445 () Bool)

(assert (=> d!28951 (= c!18445 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!28951 (and (bvsle #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2318 (_keys!4288 newMap!16)) (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!28951 (= (arrayCountValidKeys!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) lt!54217)))

(declare-fun bm!11186 () Bool)

(assert (=> bm!11186 (= call!11189 (arrayCountValidKeys!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!105906 () Bool)

(assert (=> b!105906 (= e!68937 e!68938)))

(declare-fun c!18446 () Bool)

(assert (=> b!105906 (= c!18446 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!28951 c!18445) b!105904))

(assert (= (and d!28951 (not c!18445)) b!105906))

(assert (= (and b!105906 c!18446) b!105903))

(assert (= (and b!105906 (not c!18446)) b!105905))

(assert (= (or b!105903 b!105905) bm!11186))

(declare-fun m!118253 () Bool)

(assert (=> bm!11186 m!118253))

(assert (=> b!105906 m!118103))

(assert (=> b!105906 m!118103))

(assert (=> b!105906 m!118163))

(assert (=> b!105449 d!28951))

(assert (=> b!105423 d!28903))

(declare-fun b!105907 () Bool)

(declare-fun e!68940 () Bool)

(declare-fun e!68941 () Bool)

(assert (=> b!105907 (= e!68940 e!68941)))

(declare-fun res!52695 () Bool)

(assert (=> b!105907 (=> (not res!52695) (not e!68941))))

(declare-fun e!68942 () Bool)

(assert (=> b!105907 (= res!52695 (not e!68942))))

(declare-fun res!52693 () Bool)

(assert (=> b!105907 (=> (not res!52693) (not e!68942))))

(assert (=> b!105907 (= res!52693 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105908 () Bool)

(declare-fun e!68939 () Bool)

(declare-fun call!11190 () Bool)

(assert (=> b!105908 (= e!68939 call!11190)))

(declare-fun b!105909 () Bool)

(assert (=> b!105909 (= e!68942 (contains!829 Nil!1613 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!28953 () Bool)

(declare-fun res!52694 () Bool)

(assert (=> d!28953 (=> res!52694 e!68940)))

(assert (=> d!28953 (= res!52694 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!28953 (= (arrayNoDuplicates!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 Nil!1613) e!68940)))

(declare-fun bm!11187 () Bool)

(declare-fun c!18447 () Bool)

(assert (=> bm!11187 (= call!11190 (arrayNoDuplicates!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18447 (Cons!1612 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) Nil!1613) Nil!1613)))))

(declare-fun b!105910 () Bool)

(assert (=> b!105910 (= e!68939 call!11190)))

(declare-fun b!105911 () Bool)

(assert (=> b!105911 (= e!68941 e!68939)))

(assert (=> b!105911 (= c!18447 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!28953 (not res!52694)) b!105907))

(assert (= (and b!105907 res!52693) b!105909))

(assert (= (and b!105907 res!52695) b!105911))

(assert (= (and b!105911 c!18447) b!105908))

(assert (= (and b!105911 (not c!18447)) b!105910))

(assert (= (or b!105908 b!105910) bm!11187))

(assert (=> b!105907 m!118103))

(assert (=> b!105907 m!118103))

(assert (=> b!105907 m!118163))

(assert (=> b!105909 m!118103))

(assert (=> b!105909 m!118103))

(declare-fun m!118255 () Bool)

(assert (=> b!105909 m!118255))

(assert (=> bm!11187 m!118103))

(declare-fun m!118257 () Bool)

(assert (=> bm!11187 m!118257))

(assert (=> b!105911 m!118103))

(assert (=> b!105911 m!118103))

(assert (=> b!105911 m!118163))

(assert (=> b!105451 d!28953))

(declare-fun d!28955 () Bool)

(declare-fun e!68944 () Bool)

(assert (=> d!28955 e!68944))

(declare-fun res!52696 () Bool)

(assert (=> d!28955 (=> res!52696 e!68944)))

(declare-fun lt!54220 () Bool)

(assert (=> d!28955 (= res!52696 (not lt!54220))))

(declare-fun lt!54218 () Bool)

(assert (=> d!28955 (= lt!54220 lt!54218)))

(declare-fun lt!54219 () Unit!3232)

(declare-fun e!68943 () Unit!3232)

(assert (=> d!28955 (= lt!54219 e!68943)))

(declare-fun c!18448 () Bool)

(assert (=> d!28955 (= c!18448 lt!54218)))

(assert (=> d!28955 (= lt!54218 (containsKey!160 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!28955 (= (contains!828 call!11145 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54220)))

(declare-fun b!105912 () Bool)

(declare-fun lt!54221 () Unit!3232)

(assert (=> b!105912 (= e!68943 lt!54221)))

(assert (=> b!105912 (= lt!54221 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105912 (isDefined!109 (getValueByKey!156 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105913 () Bool)

(declare-fun Unit!3254 () Unit!3232)

(assert (=> b!105913 (= e!68943 Unit!3254)))

(declare-fun b!105914 () Bool)

(assert (=> b!105914 (= e!68944 (isDefined!109 (getValueByKey!156 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (= (and d!28955 c!18448) b!105912))

(assert (= (and d!28955 (not c!18448)) b!105913))

(assert (= (and d!28955 (not res!52696)) b!105914))

(assert (=> d!28955 m!117489))

(declare-fun m!118259 () Bool)

(assert (=> d!28955 m!118259))

(assert (=> b!105912 m!117489))

(declare-fun m!118261 () Bool)

(assert (=> b!105912 m!118261))

(assert (=> b!105912 m!117489))

(declare-fun m!118263 () Bool)

(assert (=> b!105912 m!118263))

(assert (=> b!105912 m!118263))

(declare-fun m!118265 () Bool)

(assert (=> b!105912 m!118265))

(assert (=> b!105914 m!117489))

(assert (=> b!105914 m!118263))

(assert (=> b!105914 m!118263))

(assert (=> b!105914 m!118265))

(assert (=> b!105621 d!28955))

(declare-fun b!105917 () Bool)

(declare-fun e!68946 () Option!162)

(assert (=> b!105917 (= e!68946 (getValueByKey!156 (t!5700 (toList!803 lt!53891)) (_1!1216 lt!53815)))))

(declare-fun b!105915 () Bool)

(declare-fun e!68945 () Option!162)

(assert (=> b!105915 (= e!68945 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53891)))))))

(declare-fun d!28957 () Bool)

(declare-fun c!18449 () Bool)

(assert (=> d!28957 (= c!18449 (and ((_ is Cons!1613) (toList!803 lt!53891)) (= (_1!1216 (h!2210 (toList!803 lt!53891))) (_1!1216 lt!53815))))))

(assert (=> d!28957 (= (getValueByKey!156 (toList!803 lt!53891) (_1!1216 lt!53815)) e!68945)))

(declare-fun b!105918 () Bool)

(assert (=> b!105918 (= e!68946 None!160)))

(declare-fun b!105916 () Bool)

(assert (=> b!105916 (= e!68945 e!68946)))

(declare-fun c!18450 () Bool)

(assert (=> b!105916 (= c!18450 (and ((_ is Cons!1613) (toList!803 lt!53891)) (not (= (_1!1216 (h!2210 (toList!803 lt!53891))) (_1!1216 lt!53815)))))))

(assert (= (and d!28957 c!18449) b!105915))

(assert (= (and d!28957 (not c!18449)) b!105916))

(assert (= (and b!105916 c!18450) b!105917))

(assert (= (and b!105916 (not c!18450)) b!105918))

(declare-fun m!118267 () Bool)

(assert (=> b!105917 m!118267))

(assert (=> b!105435 d!28957))

(declare-fun b!105921 () Bool)

(declare-fun e!68948 () Option!162)

(assert (=> b!105921 (= e!68948 (getValueByKey!156 (t!5700 (toList!803 lt!53895)) (_1!1216 lt!53814)))))

(declare-fun b!105919 () Bool)

(declare-fun e!68947 () Option!162)

(assert (=> b!105919 (= e!68947 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53895)))))))

(declare-fun d!28959 () Bool)

(declare-fun c!18451 () Bool)

(assert (=> d!28959 (= c!18451 (and ((_ is Cons!1613) (toList!803 lt!53895)) (= (_1!1216 (h!2210 (toList!803 lt!53895))) (_1!1216 lt!53814))))))

(assert (=> d!28959 (= (getValueByKey!156 (toList!803 lt!53895) (_1!1216 lt!53814)) e!68947)))

(declare-fun b!105922 () Bool)

(assert (=> b!105922 (= e!68948 None!160)))

(declare-fun b!105920 () Bool)

(assert (=> b!105920 (= e!68947 e!68948)))

(declare-fun c!18452 () Bool)

(assert (=> b!105920 (= c!18452 (and ((_ is Cons!1613) (toList!803 lt!53895)) (not (= (_1!1216 (h!2210 (toList!803 lt!53895))) (_1!1216 lt!53814)))))))

(assert (= (and d!28959 c!18451) b!105919))

(assert (= (and d!28959 (not c!18451)) b!105920))

(assert (= (and b!105920 c!18452) b!105921))

(assert (= (and b!105920 (not c!18452)) b!105922))

(declare-fun m!118269 () Bool)

(assert (=> b!105921 m!118269))

(assert (=> b!105437 d!28959))

(assert (=> b!105513 d!28903))

(declare-fun d!28961 () Bool)

(declare-fun e!68950 () Bool)

(assert (=> d!28961 e!68950))

(declare-fun res!52697 () Bool)

(assert (=> d!28961 (=> res!52697 e!68950)))

(declare-fun lt!54224 () Bool)

(assert (=> d!28961 (= res!52697 (not lt!54224))))

(declare-fun lt!54222 () Bool)

(assert (=> d!28961 (= lt!54224 lt!54222)))

(declare-fun lt!54223 () Unit!3232)

(declare-fun e!68949 () Unit!3232)

(assert (=> d!28961 (= lt!54223 e!68949)))

(declare-fun c!18453 () Bool)

(assert (=> d!28961 (= c!18453 lt!54222)))

(assert (=> d!28961 (= lt!54222 (containsKey!160 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28961 (= (contains!828 lt!53878 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54224)))

(declare-fun b!105923 () Bool)

(declare-fun lt!54225 () Unit!3232)

(assert (=> b!105923 (= e!68949 lt!54225)))

(assert (=> b!105923 (= lt!54225 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105923 (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105924 () Bool)

(declare-fun Unit!3255 () Unit!3232)

(assert (=> b!105924 (= e!68949 Unit!3255)))

(declare-fun b!105925 () Bool)

(assert (=> b!105925 (= e!68950 (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28961 c!18453) b!105923))

(assert (= (and d!28961 (not c!18453)) b!105924))

(assert (= (and d!28961 (not res!52697)) b!105925))

(declare-fun m!118271 () Bool)

(assert (=> d!28961 m!118271))

(declare-fun m!118273 () Bool)

(assert (=> b!105923 m!118273))

(declare-fun m!118275 () Bool)

(assert (=> b!105923 m!118275))

(assert (=> b!105923 m!118275))

(declare-fun m!118277 () Bool)

(assert (=> b!105923 m!118277))

(assert (=> b!105925 m!118275))

(assert (=> b!105925 m!118275))

(assert (=> b!105925 m!118277))

(assert (=> d!28795 d!28961))

(assert (=> d!28795 d!28803))

(declare-fun d!28963 () Bool)

(declare-fun e!68953 () Bool)

(assert (=> d!28963 e!68953))

(declare-fun res!52700 () Bool)

(assert (=> d!28963 (=> (not res!52700) (not e!68953))))

(assert (=> d!28963 (= res!52700 (and (bvsge (index!3185 lt!54060) #b00000000000000000000000000000000) (bvslt (index!3185 lt!54060) (size!2318 (_keys!4288 newMap!16)))))))

(declare-fun lt!54228 () Unit!3232)

(declare-fun choose!662 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) Int) Unit!3232)

(assert (=> d!28963 (= lt!54228 (choose!662 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3185 lt!54060) (defaultEntry!2582 newMap!16)))))

(assert (=> d!28963 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28963 (= (lemmaValidKeyInArrayIsInListMap!108 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3185 lt!54060) (defaultEntry!2582 newMap!16)) lt!54228)))

(declare-fun b!105928 () Bool)

(assert (=> b!105928 (= e!68953 (contains!828 (getCurrentListMap!489 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))))))

(assert (= (and d!28963 res!52700) b!105928))

(declare-fun m!118279 () Bool)

(assert (=> d!28963 m!118279))

(assert (=> d!28963 m!117933))

(declare-fun m!118281 () Bool)

(assert (=> b!105928 m!118281))

(assert (=> b!105928 m!117797))

(assert (=> b!105928 m!118281))

(assert (=> b!105928 m!117797))

(declare-fun m!118283 () Bool)

(assert (=> b!105928 m!118283))

(assert (=> b!105617 d!28963))

(declare-fun d!28965 () Bool)

(declare-fun e!68956 () Bool)

(assert (=> d!28965 e!68956))

(declare-fun res!52703 () Bool)

(assert (=> d!28965 (=> (not res!52703) (not e!68956))))

(assert (=> d!28965 (= res!52703 (and (bvsge (index!3185 lt!54060) #b00000000000000000000000000000000) (bvslt (index!3185 lt!54060) (size!2319 (_values!2565 newMap!16)))))))

(declare-fun lt!54231 () Unit!3232)

(declare-fun choose!663 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) (_ BitVec 64) V!3219 Int) Unit!3232)

(assert (=> d!28965 (= lt!54231 (choose!663 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3185 lt!54060) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 (defaultEntry!2582 newMap!16)))))

(assert (=> d!28965 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28965 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3185 lt!54060) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 (defaultEntry!2582 newMap!16)) lt!54231)))

(declare-fun b!105931 () Bool)

(assert (=> b!105931 (= e!68956 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (getCurrentListMap!489 (_keys!4288 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))))))

(assert (= (and d!28965 res!52703) b!105931))

(assert (=> d!28965 m!117489))

(declare-fun m!118285 () Bool)

(assert (=> d!28965 m!118285))

(assert (=> d!28965 m!117933))

(assert (=> b!105931 m!117707))

(assert (=> b!105931 m!117707))

(declare-fun m!118287 () Bool)

(assert (=> b!105931 m!118287))

(assert (=> b!105931 m!117787))

(declare-fun m!118289 () Bool)

(assert (=> b!105931 m!118289))

(assert (=> b!105617 d!28965))

(declare-fun d!28967 () Bool)

(declare-fun e!68958 () Bool)

(assert (=> d!28967 e!68958))

(declare-fun res!52704 () Bool)

(assert (=> d!28967 (=> res!52704 e!68958)))

(declare-fun lt!54234 () Bool)

(assert (=> d!28967 (= res!52704 (not lt!54234))))

(declare-fun lt!54232 () Bool)

(assert (=> d!28967 (= lt!54234 lt!54232)))

(declare-fun lt!54233 () Unit!3232)

(declare-fun e!68957 () Unit!3232)

(assert (=> d!28967 (= lt!54233 e!68957)))

(declare-fun c!18454 () Bool)

(assert (=> d!28967 (= c!18454 lt!54232)))

(assert (=> d!28967 (= lt!54232 (containsKey!160 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!28967 (= (contains!828 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54234)))

(declare-fun b!105932 () Bool)

(declare-fun lt!54235 () Unit!3232)

(assert (=> b!105932 (= e!68957 lt!54235)))

(assert (=> b!105932 (= lt!54235 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!105932 (isDefined!109 (getValueByKey!156 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!105933 () Bool)

(declare-fun Unit!3256 () Unit!3232)

(assert (=> b!105933 (= e!68957 Unit!3256)))

(declare-fun b!105934 () Bool)

(assert (=> b!105934 (= e!68958 (isDefined!109 (getValueByKey!156 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (= (and d!28967 c!18454) b!105932))

(assert (= (and d!28967 (not c!18454)) b!105933))

(assert (= (and d!28967 (not res!52704)) b!105934))

(assert (=> d!28967 m!117489))

(declare-fun m!118291 () Bool)

(assert (=> d!28967 m!118291))

(assert (=> b!105932 m!117489))

(declare-fun m!118293 () Bool)

(assert (=> b!105932 m!118293))

(assert (=> b!105932 m!117489))

(declare-fun m!118295 () Bool)

(assert (=> b!105932 m!118295))

(assert (=> b!105932 m!118295))

(declare-fun m!118297 () Bool)

(assert (=> b!105932 m!118297))

(assert (=> b!105934 m!117489))

(assert (=> b!105934 m!118295))

(assert (=> b!105934 m!118295))

(assert (=> b!105934 m!118297))

(assert (=> b!105617 d!28967))

(assert (=> b!105617 d!28929))

(declare-fun d!28969 () Bool)

(declare-fun e!68960 () Bool)

(assert (=> d!28969 e!68960))

(declare-fun res!52705 () Bool)

(assert (=> d!28969 (=> res!52705 e!68960)))

(declare-fun lt!54238 () Bool)

(assert (=> d!28969 (= res!52705 (not lt!54238))))

(declare-fun lt!54236 () Bool)

(assert (=> d!28969 (= lt!54238 lt!54236)))

(declare-fun lt!54237 () Unit!3232)

(declare-fun e!68959 () Unit!3232)

(assert (=> d!28969 (= lt!54237 e!68959)))

(declare-fun c!18455 () Bool)

(assert (=> d!28969 (= c!18455 lt!54236)))

(assert (=> d!28969 (= lt!54236 (containsKey!160 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!28969 (= (contains!828 lt!53878 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54238)))

(declare-fun b!105935 () Bool)

(declare-fun lt!54239 () Unit!3232)

(assert (=> b!105935 (= e!68959 lt!54239)))

(assert (=> b!105935 (= lt!54239 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105935 (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105936 () Bool)

(declare-fun Unit!3257 () Unit!3232)

(assert (=> b!105936 (= e!68959 Unit!3257)))

(declare-fun b!105937 () Bool)

(assert (=> b!105937 (= e!68960 (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!28969 c!18455) b!105935))

(assert (= (and d!28969 (not c!18455)) b!105936))

(assert (= (and d!28969 (not res!52705)) b!105937))

(assert (=> d!28969 m!117601))

(declare-fun m!118299 () Bool)

(assert (=> d!28969 m!118299))

(assert (=> b!105935 m!117601))

(declare-fun m!118301 () Bool)

(assert (=> b!105935 m!118301))

(assert (=> b!105935 m!117601))

(assert (=> b!105935 m!118241))

(assert (=> b!105935 m!118241))

(declare-fun m!118303 () Bool)

(assert (=> b!105935 m!118303))

(assert (=> b!105937 m!117601))

(assert (=> b!105937 m!118241))

(assert (=> b!105937 m!118241))

(assert (=> b!105937 m!118303))

(assert (=> b!105419 d!28969))

(declare-fun d!28971 () Bool)

(assert (=> d!28971 (= (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (and (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105390 d!28971))

(declare-fun d!28973 () Bool)

(declare-fun e!68962 () Bool)

(assert (=> d!28973 e!68962))

(declare-fun res!52706 () Bool)

(assert (=> d!28973 (=> res!52706 e!68962)))

(declare-fun lt!54242 () Bool)

(assert (=> d!28973 (= res!52706 (not lt!54242))))

(declare-fun lt!54240 () Bool)

(assert (=> d!28973 (= lt!54242 lt!54240)))

(declare-fun lt!54241 () Unit!3232)

(declare-fun e!68961 () Unit!3232)

(assert (=> d!28973 (= lt!54241 e!68961)))

(declare-fun c!18456 () Bool)

(assert (=> d!28973 (= c!18456 lt!54240)))

(assert (=> d!28973 (= lt!54240 (containsKey!160 (toList!803 lt!53895) (_1!1216 lt!53814)))))

(assert (=> d!28973 (= (contains!828 lt!53895 (_1!1216 lt!53814)) lt!54242)))

(declare-fun b!105938 () Bool)

(declare-fun lt!54243 () Unit!3232)

(assert (=> b!105938 (= e!68961 lt!54243)))

(assert (=> b!105938 (= lt!54243 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53895) (_1!1216 lt!53814)))))

(assert (=> b!105938 (isDefined!109 (getValueByKey!156 (toList!803 lt!53895) (_1!1216 lt!53814)))))

(declare-fun b!105939 () Bool)

(declare-fun Unit!3258 () Unit!3232)

(assert (=> b!105939 (= e!68961 Unit!3258)))

(declare-fun b!105940 () Bool)

(assert (=> b!105940 (= e!68962 (isDefined!109 (getValueByKey!156 (toList!803 lt!53895) (_1!1216 lt!53814))))))

(assert (= (and d!28973 c!18456) b!105938))

(assert (= (and d!28973 (not c!18456)) b!105939))

(assert (= (and d!28973 (not res!52706)) b!105940))

(declare-fun m!118305 () Bool)

(assert (=> d!28973 m!118305))

(declare-fun m!118307 () Bool)

(assert (=> b!105938 m!118307))

(assert (=> b!105938 m!117661))

(assert (=> b!105938 m!117661))

(declare-fun m!118309 () Bool)

(assert (=> b!105938 m!118309))

(assert (=> b!105940 m!117661))

(assert (=> b!105940 m!117661))

(assert (=> b!105940 m!118309))

(assert (=> d!28799 d!28973))

(declare-fun b!105943 () Bool)

(declare-fun e!68964 () Option!162)

(assert (=> b!105943 (= e!68964 (getValueByKey!156 (t!5700 lt!53897) (_1!1216 lt!53814)))))

(declare-fun b!105941 () Bool)

(declare-fun e!68963 () Option!162)

(assert (=> b!105941 (= e!68963 (Some!161 (_2!1216 (h!2210 lt!53897))))))

(declare-fun d!28975 () Bool)

(declare-fun c!18457 () Bool)

(assert (=> d!28975 (= c!18457 (and ((_ is Cons!1613) lt!53897) (= (_1!1216 (h!2210 lt!53897)) (_1!1216 lt!53814))))))

(assert (=> d!28975 (= (getValueByKey!156 lt!53897 (_1!1216 lt!53814)) e!68963)))

(declare-fun b!105944 () Bool)

(assert (=> b!105944 (= e!68964 None!160)))

(declare-fun b!105942 () Bool)

(assert (=> b!105942 (= e!68963 e!68964)))

(declare-fun c!18458 () Bool)

(assert (=> b!105942 (= c!18458 (and ((_ is Cons!1613) lt!53897) (not (= (_1!1216 (h!2210 lt!53897)) (_1!1216 lt!53814)))))))

(assert (= (and d!28975 c!18457) b!105941))

(assert (= (and d!28975 (not c!18457)) b!105942))

(assert (= (and b!105942 c!18458) b!105943))

(assert (= (and b!105942 (not c!18458)) b!105944))

(declare-fun m!118311 () Bool)

(assert (=> b!105943 m!118311))

(assert (=> d!28799 d!28975))

(declare-fun d!28977 () Bool)

(assert (=> d!28977 (= (getValueByKey!156 lt!53897 (_1!1216 lt!53814)) (Some!161 (_2!1216 lt!53814)))))

(declare-fun lt!54244 () Unit!3232)

(assert (=> d!28977 (= lt!54244 (choose!657 lt!53897 (_1!1216 lt!53814) (_2!1216 lt!53814)))))

(declare-fun e!68965 () Bool)

(assert (=> d!28977 e!68965))

(declare-fun res!52707 () Bool)

(assert (=> d!28977 (=> (not res!52707) (not e!68965))))

(assert (=> d!28977 (= res!52707 (isStrictlySorted!309 lt!53897))))

(assert (=> d!28977 (= (lemmaContainsTupThenGetReturnValue!72 lt!53897 (_1!1216 lt!53814) (_2!1216 lt!53814)) lt!54244)))

(declare-fun b!105945 () Bool)

(declare-fun res!52708 () Bool)

(assert (=> b!105945 (=> (not res!52708) (not e!68965))))

(assert (=> b!105945 (= res!52708 (containsKey!160 lt!53897 (_1!1216 lt!53814)))))

(declare-fun b!105946 () Bool)

(assert (=> b!105946 (= e!68965 (contains!830 lt!53897 (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(assert (= (and d!28977 res!52707) b!105945))

(assert (= (and b!105945 res!52708) b!105946))

(assert (=> d!28977 m!117655))

(declare-fun m!118313 () Bool)

(assert (=> d!28977 m!118313))

(declare-fun m!118315 () Bool)

(assert (=> d!28977 m!118315))

(declare-fun m!118317 () Bool)

(assert (=> b!105945 m!118317))

(declare-fun m!118319 () Bool)

(assert (=> b!105946 m!118319))

(assert (=> d!28799 d!28977))

(declare-fun b!105947 () Bool)

(declare-fun e!68969 () List!1617)

(declare-fun e!68967 () List!1617)

(assert (=> b!105947 (= e!68969 e!68967)))

(declare-fun c!18460 () Bool)

(assert (=> b!105947 (= c!18460 (and ((_ is Cons!1613) (toList!803 lt!53805)) (= (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 lt!53814))))))

(declare-fun b!105948 () Bool)

(declare-fun call!11191 () List!1617)

(assert (=> b!105948 (= e!68969 call!11191)))

(declare-fun b!105950 () Bool)

(declare-fun e!68970 () List!1617)

(declare-fun call!11193 () List!1617)

(assert (=> b!105950 (= e!68970 call!11193)))

(declare-fun b!105951 () Bool)

(declare-fun c!18461 () Bool)

(assert (=> b!105951 (= c!18461 (and ((_ is Cons!1613) (toList!803 lt!53805)) (bvsgt (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 lt!53814))))))

(assert (=> b!105951 (= e!68967 e!68970)))

(declare-fun bm!11188 () Bool)

(declare-fun call!11192 () List!1617)

(assert (=> bm!11188 (= call!11193 call!11192)))

(declare-fun b!105952 () Bool)

(declare-fun e!68968 () List!1617)

(assert (=> b!105952 (= e!68968 (insertStrictlySorted!75 (t!5700 (toList!803 lt!53805)) (_1!1216 lt!53814) (_2!1216 lt!53814)))))

(declare-fun b!105953 () Bool)

(assert (=> b!105953 (= e!68970 call!11193)))

(declare-fun b!105954 () Bool)

(declare-fun res!52710 () Bool)

(declare-fun e!68966 () Bool)

(assert (=> b!105954 (=> (not res!52710) (not e!68966))))

(declare-fun lt!54245 () List!1617)

(assert (=> b!105954 (= res!52710 (containsKey!160 lt!54245 (_1!1216 lt!53814)))))

(declare-fun b!105955 () Bool)

(assert (=> b!105955 (= e!68966 (contains!830 lt!54245 (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun b!105956 () Bool)

(assert (=> b!105956 (= e!68968 (ite c!18460 (t!5700 (toList!803 lt!53805)) (ite c!18461 (Cons!1613 (h!2210 (toList!803 lt!53805)) (t!5700 (toList!803 lt!53805))) Nil!1614)))))

(declare-fun d!28979 () Bool)

(assert (=> d!28979 e!68966))

(declare-fun res!52709 () Bool)

(assert (=> d!28979 (=> (not res!52709) (not e!68966))))

(assert (=> d!28979 (= res!52709 (isStrictlySorted!309 lt!54245))))

(assert (=> d!28979 (= lt!54245 e!68969)))

(declare-fun c!18459 () Bool)

(assert (=> d!28979 (= c!18459 (and ((_ is Cons!1613) (toList!803 lt!53805)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 lt!53814))))))

(assert (=> d!28979 (isStrictlySorted!309 (toList!803 lt!53805))))

(assert (=> d!28979 (= (insertStrictlySorted!75 (toList!803 lt!53805) (_1!1216 lt!53814) (_2!1216 lt!53814)) lt!54245)))

(declare-fun b!105949 () Bool)

(assert (=> b!105949 (= e!68967 call!11192)))

(declare-fun bm!11189 () Bool)

(assert (=> bm!11189 (= call!11191 ($colon$colon!81 e!68968 (ite c!18459 (h!2210 (toList!803 lt!53805)) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814)))))))

(declare-fun c!18462 () Bool)

(assert (=> bm!11189 (= c!18462 c!18459)))

(declare-fun bm!11190 () Bool)

(assert (=> bm!11190 (= call!11192 call!11191)))

(assert (= (and d!28979 c!18459) b!105948))

(assert (= (and d!28979 (not c!18459)) b!105947))

(assert (= (and b!105947 c!18460) b!105949))

(assert (= (and b!105947 (not c!18460)) b!105951))

(assert (= (and b!105951 c!18461) b!105953))

(assert (= (and b!105951 (not c!18461)) b!105950))

(assert (= (or b!105953 b!105950) bm!11188))

(assert (= (or b!105949 bm!11188) bm!11190))

(assert (= (or b!105948 bm!11190) bm!11189))

(assert (= (and bm!11189 c!18462) b!105952))

(assert (= (and bm!11189 (not c!18462)) b!105956))

(assert (= (and d!28979 res!52709) b!105954))

(assert (= (and b!105954 res!52710) b!105955))

(declare-fun m!118321 () Bool)

(assert (=> b!105952 m!118321))

(declare-fun m!118323 () Bool)

(assert (=> b!105955 m!118323))

(declare-fun m!118325 () Bool)

(assert (=> d!28979 m!118325))

(assert (=> d!28979 m!118231))

(declare-fun m!118327 () Bool)

(assert (=> bm!11189 m!118327))

(declare-fun m!118329 () Bool)

(assert (=> b!105954 m!118329))

(assert (=> d!28799 d!28979))

(assert (=> bm!11082 d!28795))

(assert (=> d!28817 d!28803))

(declare-fun d!28981 () Bool)

(declare-fun e!68971 () Bool)

(assert (=> d!28981 e!68971))

(declare-fun res!52711 () Bool)

(assert (=> d!28981 (=> (not res!52711) (not e!68971))))

(declare-fun lt!54247 () ListLongMap!1575)

(assert (=> d!28981 (= res!52711 (contains!828 lt!54247 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun lt!54249 () List!1617)

(assert (=> d!28981 (= lt!54247 (ListLongMap!1576 lt!54249))))

(declare-fun lt!54248 () Unit!3232)

(declare-fun lt!54246 () Unit!3232)

(assert (=> d!28981 (= lt!54248 lt!54246)))

(assert (=> d!28981 (= (getValueByKey!156 lt!54249 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) (Some!161 (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!28981 (= lt!54246 (lemmaContainsTupThenGetReturnValue!72 lt!54249 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!28981 (= lt!54249 (insertStrictlySorted!75 (toList!803 e!68782) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!28981 (= (+!144 e!68782 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54247)))

(declare-fun b!105957 () Bool)

(declare-fun res!52712 () Bool)

(assert (=> b!105957 (=> (not res!52712) (not e!68971))))

(assert (=> b!105957 (= res!52712 (= (getValueByKey!156 (toList!803 lt!54247) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) (Some!161 (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(declare-fun b!105958 () Bool)

(assert (=> b!105958 (= e!68971 (contains!830 (toList!803 lt!54247) (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (= (and d!28981 res!52711) b!105957))

(assert (= (and b!105957 res!52712) b!105958))

(declare-fun m!118331 () Bool)

(assert (=> d!28981 m!118331))

(declare-fun m!118333 () Bool)

(assert (=> d!28981 m!118333))

(declare-fun m!118335 () Bool)

(assert (=> d!28981 m!118335))

(declare-fun m!118337 () Bool)

(assert (=> d!28981 m!118337))

(declare-fun m!118339 () Bool)

(assert (=> b!105957 m!118339))

(declare-fun m!118341 () Bool)

(assert (=> b!105958 m!118341))

(assert (=> bm!11153 d!28981))

(assert (=> bm!11143 d!28815))

(declare-fun d!28983 () Bool)

(declare-fun res!52713 () Bool)

(declare-fun e!68972 () Bool)

(assert (=> d!28983 (=> (not res!52713) (not e!68972))))

(assert (=> d!28983 (= res!52713 (simpleValid!74 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!28983 (= (valid!421 (v!2892 (underlying!361 thiss!992))) e!68972)))

(declare-fun b!105959 () Bool)

(declare-fun res!52714 () Bool)

(assert (=> b!105959 (=> (not res!52714) (not e!68972))))

(assert (=> b!105959 (= res!52714 (= (arrayCountValidKeys!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))) (_size!499 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105960 () Bool)

(declare-fun res!52715 () Bool)

(assert (=> b!105960 (=> (not res!52715) (not e!68972))))

(assert (=> b!105960 (= res!52715 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!105961 () Bool)

(assert (=> b!105961 (= e!68972 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 Nil!1613))))

(assert (= (and d!28983 res!52713) b!105959))

(assert (= (and b!105959 res!52714) b!105960))

(assert (= (and b!105960 res!52715) b!105961))

(declare-fun m!118343 () Bool)

(assert (=> d!28983 m!118343))

(declare-fun m!118345 () Bool)

(assert (=> b!105959 m!118345))

(declare-fun m!118347 () Bool)

(assert (=> b!105960 m!118347))

(declare-fun m!118349 () Bool)

(assert (=> b!105961 m!118349))

(assert (=> d!28793 d!28983))

(declare-fun d!28985 () Bool)

(declare-fun e!68973 () Bool)

(assert (=> d!28985 e!68973))

(declare-fun res!52716 () Bool)

(assert (=> d!28985 (=> (not res!52716) (not e!68973))))

(declare-fun lt!54251 () ListLongMap!1575)

(assert (=> d!28985 (= res!52716 (contains!828 lt!54251 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54253 () List!1617)

(assert (=> d!28985 (= lt!54251 (ListLongMap!1576 lt!54253))))

(declare-fun lt!54252 () Unit!3232)

(declare-fun lt!54250 () Unit!3232)

(assert (=> d!28985 (= lt!54252 lt!54250)))

(assert (=> d!28985 (= (getValueByKey!156 lt!54253 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28985 (= lt!54250 (lemmaContainsTupThenGetReturnValue!72 lt!54253 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28985 (= lt!54253 (insertStrictlySorted!75 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28985 (= (+!144 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54251)))

(declare-fun b!105962 () Bool)

(declare-fun res!52717 () Bool)

(assert (=> b!105962 (=> (not res!52717) (not e!68973))))

(assert (=> b!105962 (= res!52717 (= (getValueByKey!156 (toList!803 lt!54251) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105963 () Bool)

(assert (=> b!105963 (= e!68973 (contains!830 (toList!803 lt!54251) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28985 res!52716) b!105962))

(assert (= (and b!105962 res!52717) b!105963))

(declare-fun m!118351 () Bool)

(assert (=> d!28985 m!118351))

(declare-fun m!118353 () Bool)

(assert (=> d!28985 m!118353))

(declare-fun m!118355 () Bool)

(assert (=> d!28985 m!118355))

(declare-fun m!118357 () Bool)

(assert (=> d!28985 m!118357))

(declare-fun m!118359 () Bool)

(assert (=> b!105962 m!118359))

(declare-fun m!118361 () Bool)

(assert (=> b!105963 m!118361))

(assert (=> d!28801 d!28985))

(declare-fun d!28987 () Bool)

(declare-fun e!68974 () Bool)

(assert (=> d!28987 e!68974))

(declare-fun res!52718 () Bool)

(assert (=> d!28987 (=> (not res!52718) (not e!68974))))

(declare-fun lt!54255 () ListLongMap!1575)

(assert (=> d!28987 (= res!52718 (contains!828 lt!54255 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54257 () List!1617)

(assert (=> d!28987 (= lt!54255 (ListLongMap!1576 lt!54257))))

(declare-fun lt!54256 () Unit!3232)

(declare-fun lt!54254 () Unit!3232)

(assert (=> d!28987 (= lt!54256 lt!54254)))

(assert (=> d!28987 (= (getValueByKey!156 lt!54257 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28987 (= lt!54254 (lemmaContainsTupThenGetReturnValue!72 lt!54257 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28987 (= lt!54257 (insertStrictlySorted!75 (toList!803 lt!53805) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!28987 (= (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54255)))

(declare-fun b!105964 () Bool)

(declare-fun res!52719 () Bool)

(assert (=> b!105964 (=> (not res!52719) (not e!68974))))

(assert (=> b!105964 (= res!52719 (= (getValueByKey!156 (toList!803 lt!54255) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!105965 () Bool)

(assert (=> b!105965 (= e!68974 (contains!830 (toList!803 lt!54255) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!28987 res!52718) b!105964))

(assert (= (and b!105964 res!52719) b!105965))

(declare-fun m!118363 () Bool)

(assert (=> d!28987 m!118363))

(declare-fun m!118365 () Bool)

(assert (=> d!28987 m!118365))

(declare-fun m!118367 () Bool)

(assert (=> d!28987 m!118367))

(declare-fun m!118369 () Bool)

(assert (=> d!28987 m!118369))

(declare-fun m!118371 () Bool)

(assert (=> b!105964 m!118371))

(declare-fun m!118373 () Bool)

(assert (=> b!105965 m!118373))

(assert (=> d!28801 d!28987))

(declare-fun d!28989 () Bool)

(declare-fun e!68975 () Bool)

(assert (=> d!28989 e!68975))

(declare-fun res!52720 () Bool)

(assert (=> d!28989 (=> (not res!52720) (not e!68975))))

(declare-fun lt!54259 () ListLongMap!1575)

(assert (=> d!28989 (= res!52720 (contains!828 lt!54259 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun lt!54261 () List!1617)

(assert (=> d!28989 (= lt!54259 (ListLongMap!1576 lt!54261))))

(declare-fun lt!54260 () Unit!3232)

(declare-fun lt!54258 () Unit!3232)

(assert (=> d!28989 (= lt!54260 lt!54258)))

(assert (=> d!28989 (= (getValueByKey!156 lt!54261 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!28989 (= lt!54258 (lemmaContainsTupThenGetReturnValue!72 lt!54261 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!28989 (= lt!54261 (insertStrictlySorted!75 (toList!803 lt!53805) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!28989 (= (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) lt!54259)))

(declare-fun b!105966 () Bool)

(declare-fun res!52721 () Bool)

(assert (=> b!105966 (=> (not res!52721) (not e!68975))))

(assert (=> b!105966 (= res!52721 (= (getValueByKey!156 (toList!803 lt!54259) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!105967 () Bool)

(assert (=> b!105967 (= e!68975 (contains!830 (toList!803 lt!54259) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(assert (= (and d!28989 res!52720) b!105966))

(assert (= (and b!105966 res!52721) b!105967))

(declare-fun m!118375 () Bool)

(assert (=> d!28989 m!118375))

(declare-fun m!118377 () Bool)

(assert (=> d!28989 m!118377))

(declare-fun m!118379 () Bool)

(assert (=> d!28989 m!118379))

(declare-fun m!118381 () Bool)

(assert (=> d!28989 m!118381))

(declare-fun m!118383 () Bool)

(assert (=> b!105966 m!118383))

(declare-fun m!118385 () Bool)

(assert (=> b!105967 m!118385))

(assert (=> d!28801 d!28989))

(declare-fun d!28991 () Bool)

(declare-fun e!68976 () Bool)

(assert (=> d!28991 e!68976))

(declare-fun res!52722 () Bool)

(assert (=> d!28991 (=> (not res!52722) (not e!68976))))

(declare-fun lt!54263 () ListLongMap!1575)

(assert (=> d!28991 (= res!52722 (contains!828 lt!54263 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun lt!54265 () List!1617)

(assert (=> d!28991 (= lt!54263 (ListLongMap!1576 lt!54265))))

(declare-fun lt!54264 () Unit!3232)

(declare-fun lt!54262 () Unit!3232)

(assert (=> d!28991 (= lt!54264 lt!54262)))

(assert (=> d!28991 (= (getValueByKey!156 lt!54265 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!28991 (= lt!54262 (lemmaContainsTupThenGetReturnValue!72 lt!54265 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!28991 (= lt!54265 (insertStrictlySorted!75 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!28991 (= (+!144 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) lt!54263)))

(declare-fun b!105968 () Bool)

(declare-fun res!52723 () Bool)

(assert (=> b!105968 (=> (not res!52723) (not e!68976))))

(assert (=> b!105968 (= res!52723 (= (getValueByKey!156 (toList!803 lt!54263) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!105969 () Bool)

(assert (=> b!105969 (= e!68976 (contains!830 (toList!803 lt!54263) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(assert (= (and d!28991 res!52722) b!105968))

(assert (= (and b!105968 res!52723) b!105969))

(declare-fun m!118387 () Bool)

(assert (=> d!28991 m!118387))

(declare-fun m!118389 () Bool)

(assert (=> d!28991 m!118389))

(declare-fun m!118391 () Bool)

(assert (=> d!28991 m!118391))

(declare-fun m!118393 () Bool)

(assert (=> d!28991 m!118393))

(declare-fun m!118395 () Bool)

(assert (=> b!105968 m!118395))

(declare-fun m!118397 () Bool)

(assert (=> b!105969 m!118397))

(assert (=> d!28801 d!28991))

(declare-fun d!28993 () Bool)

(assert (=> d!28993 (= (+!144 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (+!144 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(assert (=> d!28993 true))

(declare-fun _$28!161 () Unit!3232)

(assert (=> d!28993 (= (choose!653 lt!53805 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) _$28!161)))

(declare-fun bs!4354 () Bool)

(assert (= bs!4354 d!28993))

(assert (=> bs!4354 m!117671))

(assert (=> bs!4354 m!117671))

(assert (=> bs!4354 m!117673))

(assert (=> bs!4354 m!117665))

(assert (=> bs!4354 m!117665))

(assert (=> bs!4354 m!117667))

(assert (=> d!28801 d!28993))

(assert (=> b!105378 d!28787))

(declare-fun d!28995 () Bool)

(declare-fun res!52728 () Bool)

(declare-fun e!68981 () Bool)

(assert (=> d!28995 (=> res!52728 e!68981)))

(assert (=> d!28995 (= res!52728 (and ((_ is Cons!1613) (toList!803 lt!53813)) (= (_1!1216 (h!2210 (toList!803 lt!53813))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!28995 (= (containsKey!160 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) e!68981)))

(declare-fun b!105974 () Bool)

(declare-fun e!68982 () Bool)

(assert (=> b!105974 (= e!68981 e!68982)))

(declare-fun res!52729 () Bool)

(assert (=> b!105974 (=> (not res!52729) (not e!68982))))

(assert (=> b!105974 (= res!52729 (and (or (not ((_ is Cons!1613) (toList!803 lt!53813))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53813))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))) ((_ is Cons!1613) (toList!803 lt!53813)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53813))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(declare-fun b!105975 () Bool)

(assert (=> b!105975 (= e!68982 (containsKey!160 (t!5700 (toList!803 lt!53813)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!28995 (not res!52728)) b!105974))

(assert (= (and b!105974 res!52729) b!105975))

(assert (=> b!105975 m!117489))

(declare-fun m!118399 () Bool)

(assert (=> b!105975 m!118399))

(assert (=> d!28823 d!28995))

(declare-fun d!28997 () Bool)

(assert (=> d!28997 (= (map!1286 (_2!1217 lt!54050)) (getCurrentListMap!489 (_keys!4288 (_2!1217 lt!54050)) (_values!2565 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050)) (extraKeys!2387 (_2!1217 lt!54050)) (zeroValue!2457 (_2!1217 lt!54050)) (minValue!2457 (_2!1217 lt!54050)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1217 lt!54050))))))

(declare-fun bs!4355 () Bool)

(assert (= bs!4355 d!28997))

(declare-fun m!118401 () Bool)

(assert (=> bs!4355 m!118401))

(assert (=> bm!11135 d!28997))

(declare-fun d!28999 () Bool)

(declare-fun e!68983 () Bool)

(assert (=> d!28999 e!68983))

(declare-fun res!52730 () Bool)

(assert (=> d!28999 (=> (not res!52730) (not e!68983))))

(declare-fun lt!54267 () ListLongMap!1575)

(assert (=> d!28999 (= res!52730 (contains!828 lt!54267 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun lt!54269 () List!1617)

(assert (=> d!28999 (= lt!54267 (ListLongMap!1576 lt!54269))))

(declare-fun lt!54268 () Unit!3232)

(declare-fun lt!54266 () Unit!3232)

(assert (=> d!28999 (= lt!54268 lt!54266)))

(assert (=> d!28999 (= (getValueByKey!156 lt!54269 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) (Some!161 (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!28999 (= lt!54266 (lemmaContainsTupThenGetReturnValue!72 lt!54269 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!28999 (= lt!54269 (insertStrictlySorted!75 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086))) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!28999 (= (+!144 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086)) (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54267)))

(declare-fun b!105976 () Bool)

(declare-fun res!52731 () Bool)

(assert (=> b!105976 (=> (not res!52731) (not e!68983))))

(assert (=> b!105976 (= res!52731 (= (getValueByKey!156 (toList!803 lt!54267) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) (Some!161 (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!105977 () Bool)

(assert (=> b!105977 (= e!68983 (contains!830 (toList!803 lt!54267) (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (= (and d!28999 res!52730) b!105976))

(assert (= (and b!105976 res!52731) b!105977))

(declare-fun m!118403 () Bool)

(assert (=> d!28999 m!118403))

(declare-fun m!118405 () Bool)

(assert (=> d!28999 m!118405))

(declare-fun m!118407 () Bool)

(assert (=> d!28999 m!118407))

(declare-fun m!118409 () Bool)

(assert (=> d!28999 m!118409))

(declare-fun m!118411 () Bool)

(assert (=> b!105976 m!118411))

(declare-fun m!118413 () Bool)

(assert (=> b!105977 m!118413))

(assert (=> bm!11083 d!28999))

(declare-fun bm!11199 () Bool)

(declare-fun call!11204 () Bool)

(declare-fun call!11202 () Bool)

(assert (=> bm!11199 (= call!11204 call!11202)))

(declare-fun b!106012 () Bool)

(declare-fun res!52750 () Bool)

(declare-fun e!69006 () Bool)

(assert (=> b!106012 (=> (not res!52750) (not e!69006))))

(declare-fun lt!54341 () tuple2!2412)

(assert (=> b!106012 (= res!52750 (contains!828 (map!1286 (_2!1217 lt!54341)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!106013 () Bool)

(assert (=> b!106013 (= e!69006 (= (map!1286 (_2!1217 lt!54341)) (+!144 (map!1286 newMap!16) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106014 () Bool)

(declare-fun c!18471 () Bool)

(declare-fun lt!54355 () SeekEntryResult!259)

(assert (=> b!106014 (= c!18471 ((_ is MissingVacant!259) lt!54355))))

(declare-fun e!69003 () Bool)

(declare-fun e!69007 () Bool)

(assert (=> b!106014 (= e!69003 e!69007)))

(declare-fun call!11205 () SeekEntryResult!259)

(declare-fun bm!11200 () Bool)

(assert (=> bm!11200 (= call!11205 (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!106015 () Bool)

(declare-fun e!69004 () Unit!3232)

(declare-fun Unit!3259 () Unit!3232)

(assert (=> b!106015 (= e!69004 Unit!3259)))

(declare-fun c!18472 () Bool)

(declare-fun c!18474 () Bool)

(declare-fun bm!11201 () Bool)

(declare-fun lt!54342 () SeekEntryResult!259)

(assert (=> bm!11201 (= call!11202 (inRange!0 (ite c!18474 (index!3185 lt!54342) (ite c!18472 (index!3184 lt!54355) (index!3187 lt!54355))) (mask!6728 newMap!16)))))

(declare-fun e!69005 () Bool)

(declare-fun b!106016 () Bool)

(assert (=> b!106016 (= e!69005 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54342)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun call!11203 () Bool)

(declare-fun bm!11202 () Bool)

(assert (=> bm!11202 (= call!11203 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!106018 () Bool)

(declare-fun res!52751 () Bool)

(assert (=> b!106018 (= res!52751 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3187 lt!54355)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69001 () Bool)

(assert (=> b!106018 (=> (not res!52751) (not e!69001))))

(declare-fun b!106019 () Bool)

(declare-fun Unit!3260 () Unit!3232)

(assert (=> b!106019 (= e!69004 Unit!3260)))

(declare-fun lt!54348 () Unit!3232)

(declare-fun lemmaArrayContainsKeyThenInListMap!30 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) (_ BitVec 32) Int) Unit!3232)

(assert (=> b!106019 (= lt!54348 (lemmaArrayContainsKeyThenInListMap!30 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(assert (=> b!106019 (contains!828 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))

(declare-fun lt!54359 () Unit!3232)

(assert (=> b!106019 (= lt!54359 lt!54348)))

(assert (=> b!106019 false))

(declare-fun b!106020 () Bool)

(assert (=> b!106020 (= e!69007 ((_ is Undefined!259) lt!54355))))

(declare-fun b!106021 () Bool)

(declare-fun res!52754 () Bool)

(assert (=> b!106021 (=> (not res!52754) (not e!69006))))

(assert (=> b!106021 (= res!52754 (valid!421 (_2!1217 lt!54341)))))

(declare-fun b!106022 () Bool)

(declare-fun e!69000 () Bool)

(assert (=> b!106022 (= e!69000 (not call!11203))))

(declare-fun b!106023 () Bool)

(declare-fun res!52755 () Bool)

(assert (=> b!106023 (= res!52755 call!11202)))

(assert (=> b!106023 (=> (not res!52755) (not e!69005))))

(declare-fun b!106024 () Bool)

(declare-fun e!69002 () Unit!3232)

(declare-fun lt!54343 () Unit!3232)

(assert (=> b!106024 (= e!69002 lt!54343)))

(assert (=> b!106024 (= lt!54343 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(assert (=> b!106024 (= lt!54355 call!11205)))

(assert (=> b!106024 (= c!18472 ((_ is MissingZero!259) lt!54355))))

(assert (=> b!106024 e!69003))

(declare-fun b!106025 () Bool)

(declare-fun res!52756 () Bool)

(assert (=> b!106025 (=> (not res!52756) (not e!69000))))

(assert (=> b!106025 (= res!52756 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3184 lt!54355)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106026 () Bool)

(assert (=> b!106026 (= e!69007 e!69001)))

(declare-fun res!52753 () Bool)

(assert (=> b!106026 (= res!52753 call!11204)))

(assert (=> b!106026 (=> (not res!52753) (not e!69001))))

(declare-fun b!106027 () Bool)

(declare-fun Unit!3261 () Unit!3232)

(assert (=> b!106027 (= e!69002 Unit!3261)))

(declare-fun lt!54338 () Unit!3232)

(assert (=> b!106027 (= lt!54338 (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(assert (=> b!106027 (= lt!54342 call!11205)))

(declare-fun res!52758 () Bool)

(assert (=> b!106027 (= res!52758 ((_ is Found!259) lt!54342))))

(assert (=> b!106027 (=> (not res!52758) (not e!69005))))

(assert (=> b!106027 e!69005))

(declare-fun lt!54357 () Unit!3232)

(assert (=> b!106027 (= lt!54357 lt!54338)))

(assert (=> b!106027 false))

(declare-fun b!106028 () Bool)

(declare-fun res!52757 () Bool)

(assert (=> b!106028 (=> (not res!52757) (not e!69000))))

(assert (=> b!106028 (= res!52757 call!11204)))

(assert (=> b!106028 (= e!69003 e!69000)))

(declare-fun b!106017 () Bool)

(assert (=> b!106017 (= e!69001 (not call!11203))))

(declare-fun d!29001 () Bool)

(assert (=> d!29001 e!69006))

(declare-fun res!52752 () Bool)

(assert (=> d!29001 (=> (not res!52752) (not e!69006))))

(assert (=> d!29001 (= res!52752 (_1!1217 lt!54341))))

(assert (=> d!29001 (= lt!54341 (tuple2!2413 true (LongMapFixedSize!901 (defaultEntry!2582 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (bvadd (_size!499 newMap!16) #b00000000000000000000000000000001) (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (_vacant!499 newMap!16))))))

(declare-fun lt!54344 () Unit!3232)

(declare-fun lt!54351 () Unit!3232)

(assert (=> d!29001 (= lt!54344 lt!54351)))

(declare-fun lt!54354 () array!4351)

(declare-fun lt!54331 () array!4349)

(assert (=> d!29001 (contains!828 (getCurrentListMap!489 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))))))

(assert (=> d!29001 (= lt!54351 (lemmaValidKeyInArrayIsInListMap!108 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (defaultEntry!2582 newMap!16)))))

(assert (=> d!29001 (= lt!54354 (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))))

(assert (=> d!29001 (= lt!54331 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun lt!54350 () Unit!3232)

(declare-fun lt!54334 () Unit!3232)

(assert (=> d!29001 (= lt!54350 lt!54334)))

(declare-fun lt!54335 () array!4349)

(assert (=> d!29001 (= (arrayCountValidKeys!0 lt!54335 (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (bvadd (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4349 (_ BitVec 32)) Unit!3232)

(assert (=> d!29001 (= lt!54334 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!54335 (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))))))

(assert (=> d!29001 (= lt!54335 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun lt!54353 () Unit!3232)

(declare-fun lt!54356 () Unit!3232)

(assert (=> d!29001 (= lt!54353 lt!54356)))

(declare-fun lt!54349 () array!4349)

(assert (=> d!29001 (arrayContainsKey!0 lt!54349 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4349 (_ BitVec 64) (_ BitVec 32)) Unit!3232)

(assert (=> d!29001 (= lt!54356 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!54349 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))))))

(assert (=> d!29001 (= lt!54349 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun lt!54352 () Unit!3232)

(declare-fun lt!54332 () Unit!3232)

(assert (=> d!29001 (= lt!54352 lt!54332)))

(assert (=> d!29001 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (getCurrentListMap!489 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!30 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) (_ BitVec 64) V!3219 Int) Unit!3232)

(assert (=> d!29001 (= lt!54332 (lemmaAddValidKeyToArrayThenAddPairToListMap!30 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54339 () Unit!3232)

(declare-fun lt!54333 () Unit!3232)

(assert (=> d!29001 (= lt!54339 lt!54333)))

(assert (=> d!29001 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (mask!6728 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4349 (_ BitVec 32) (_ BitVec 32)) Unit!3232)

(assert (=> d!29001 (= lt!54333 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (mask!6728 newMap!16)))))

(declare-fun lt!54330 () Unit!3232)

(declare-fun lt!54347 () Unit!3232)

(assert (=> d!29001 (= lt!54330 lt!54347)))

(assert (=> d!29001 (= (arrayCountValidKeys!0 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4349 (_ BitVec 32) (_ BitVec 64)) Unit!3232)

(assert (=> d!29001 (= lt!54347 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4288 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun lt!54358 () Unit!3232)

(declare-fun lt!54340 () Unit!3232)

(assert (=> d!29001 (= lt!54358 lt!54340)))

(declare-fun lt!54345 () List!1616)

(declare-fun lt!54346 () (_ BitVec 32))

(assert (=> d!29001 (arrayNoDuplicates!0 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) lt!54346 lt!54345)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4349 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1616) Unit!3232)

(assert (=> d!29001 (= lt!54340 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) lt!54346 lt!54345))))

(assert (=> d!29001 (= lt!54345 Nil!1613)))

(assert (=> d!29001 (= lt!54346 #b00000000000000000000000000000000)))

(declare-fun lt!54336 () Unit!3232)

(assert (=> d!29001 (= lt!54336 e!69004)))

(declare-fun c!18473 () Bool)

(assert (=> d!29001 (= c!18473 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!54337 () Unit!3232)

(assert (=> d!29001 (= lt!54337 e!69002)))

(assert (=> d!29001 (= c!18474 (contains!828 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29001 (valid!421 newMap!16)))

(assert (=> d!29001 (= (updateHelperNewKey!47 newMap!16 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))) lt!54341)))

(assert (= (and d!29001 c!18474) b!106027))

(assert (= (and d!29001 (not c!18474)) b!106024))

(assert (= (and b!106027 res!52758) b!106023))

(assert (= (and b!106023 res!52755) b!106016))

(assert (= (and b!106024 c!18472) b!106028))

(assert (= (and b!106024 (not c!18472)) b!106014))

(assert (= (and b!106028 res!52757) b!106025))

(assert (= (and b!106025 res!52756) b!106022))

(assert (= (and b!106014 c!18471) b!106026))

(assert (= (and b!106014 (not c!18471)) b!106020))

(assert (= (and b!106026 res!52753) b!106018))

(assert (= (and b!106018 res!52751) b!106017))

(assert (= (or b!106028 b!106026) bm!11199))

(assert (= (or b!106022 b!106017) bm!11202))

(assert (= (or b!106023 bm!11199) bm!11201))

(assert (= (or b!106027 b!106024) bm!11200))

(assert (= (and d!29001 c!18473) b!106019))

(assert (= (and d!29001 (not c!18473)) b!106015))

(assert (= (and d!29001 res!52752) b!106021))

(assert (= (and b!106021 res!52754) b!106012))

(assert (= (and b!106012 res!52750) b!106013))

(declare-fun m!118415 () Bool)

(assert (=> b!106016 m!118415))

(assert (=> bm!11200 m!117489))

(assert (=> bm!11200 m!117779))

(assert (=> b!106019 m!117489))

(declare-fun m!118417 () Bool)

(assert (=> b!106019 m!118417))

(assert (=> b!106019 m!117707))

(assert (=> b!106019 m!117707))

(assert (=> b!106019 m!117489))

(assert (=> b!106019 m!117785))

(declare-fun m!118419 () Bool)

(assert (=> b!106021 m!118419))

(declare-fun m!118421 () Bool)

(assert (=> b!106012 m!118421))

(assert (=> b!106012 m!118421))

(assert (=> b!106012 m!117489))

(declare-fun m!118423 () Bool)

(assert (=> b!106012 m!118423))

(assert (=> b!106013 m!118421))

(assert (=> b!106013 m!117507))

(assert (=> b!106013 m!117507))

(declare-fun m!118425 () Bool)

(assert (=> b!106013 m!118425))

(declare-fun m!118427 () Bool)

(assert (=> d!29001 m!118427))

(declare-fun m!118429 () Bool)

(assert (=> d!29001 m!118429))

(assert (=> d!29001 m!117489))

(declare-fun m!118431 () Bool)

(assert (=> d!29001 m!118431))

(assert (=> d!29001 m!117489))

(declare-fun m!118433 () Bool)

(assert (=> d!29001 m!118433))

(assert (=> d!29001 m!117489))

(declare-fun m!118435 () Bool)

(assert (=> d!29001 m!118435))

(declare-fun m!118437 () Bool)

(assert (=> d!29001 m!118437))

(assert (=> d!29001 m!117707))

(assert (=> d!29001 m!117489))

(assert (=> d!29001 m!117785))

(declare-fun m!118439 () Bool)

(assert (=> d!29001 m!118439))

(declare-fun m!118441 () Bool)

(assert (=> d!29001 m!118441))

(assert (=> d!29001 m!117707))

(assert (=> d!29001 m!117701))

(declare-fun m!118443 () Bool)

(assert (=> d!29001 m!118443))

(assert (=> d!29001 m!117503))

(declare-fun m!118445 () Bool)

(assert (=> d!29001 m!118445))

(declare-fun m!118447 () Bool)

(assert (=> d!29001 m!118447))

(declare-fun m!118449 () Bool)

(assert (=> d!29001 m!118449))

(assert (=> d!29001 m!117489))

(declare-fun m!118451 () Bool)

(assert (=> d!29001 m!118451))

(assert (=> d!29001 m!118447))

(assert (=> d!29001 m!118437))

(declare-fun m!118453 () Bool)

(assert (=> d!29001 m!118453))

(assert (=> d!29001 m!117707))

(assert (=> d!29001 m!118287))

(declare-fun m!118455 () Bool)

(assert (=> d!29001 m!118455))

(assert (=> d!29001 m!117489))

(declare-fun m!118457 () Bool)

(assert (=> d!29001 m!118457))

(declare-fun m!118459 () Bool)

(assert (=> d!29001 m!118459))

(assert (=> d!29001 m!117489))

(declare-fun m!118461 () Bool)

(assert (=> d!29001 m!118461))

(assert (=> d!29001 m!117489))

(assert (=> d!29001 m!117803))

(declare-fun m!118463 () Bool)

(assert (=> b!106025 m!118463))

(declare-fun m!118465 () Bool)

(assert (=> bm!11201 m!118465))

(assert (=> bm!11202 m!117489))

(assert (=> bm!11202 m!117803))

(assert (=> b!106027 m!117489))

(assert (=> b!106027 m!117767))

(assert (=> b!106024 m!117489))

(assert (=> b!106024 m!117775))

(declare-fun m!118467 () Bool)

(assert (=> b!106018 m!118467))

(assert (=> bm!11145 d!29001))

(declare-fun bm!11203 () Bool)

(declare-fun call!11209 () Bool)

(declare-fun lt!54365 () ListLongMap!1575)

(assert (=> bm!11203 (= call!11209 (contains!828 lt!54365 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11204 () Bool)

(declare-fun call!11212 () ListLongMap!1575)

(declare-fun call!11207 () ListLongMap!1575)

(assert (=> bm!11204 (= call!11212 call!11207)))

(declare-fun b!106029 () Bool)

(declare-fun e!69009 () Unit!3232)

(declare-fun lt!54381 () Unit!3232)

(assert (=> b!106029 (= e!69009 lt!54381)))

(declare-fun lt!54363 () ListLongMap!1575)

(assert (=> b!106029 (= lt!54363 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) (mask!6728 newMap!16) (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54373 () (_ BitVec 64))

(assert (=> b!106029 (= lt!54373 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54361 () (_ BitVec 64))

(assert (=> b!106029 (= lt!54361 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54376 () Unit!3232)

(assert (=> b!106029 (= lt!54376 (addStillContains!74 lt!54363 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) lt!54361))))

(assert (=> b!106029 (contains!828 (+!144 lt!54363 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) lt!54361)))

(declare-fun lt!54375 () Unit!3232)

(assert (=> b!106029 (= lt!54375 lt!54376)))

(declare-fun lt!54378 () ListLongMap!1575)

(assert (=> b!106029 (= lt!54378 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) (mask!6728 newMap!16) (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54362 () (_ BitVec 64))

(assert (=> b!106029 (= lt!54362 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54360 () (_ BitVec 64))

(assert (=> b!106029 (= lt!54360 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54379 () Unit!3232)

(assert (=> b!106029 (= lt!54379 (addApplyDifferent!74 lt!54378 lt!54362 (minValue!2457 newMap!16) lt!54360))))

(assert (=> b!106029 (= (apply!98 (+!144 lt!54378 (tuple2!2411 lt!54362 (minValue!2457 newMap!16))) lt!54360) (apply!98 lt!54378 lt!54360))))

(declare-fun lt!54372 () Unit!3232)

(assert (=> b!106029 (= lt!54372 lt!54379)))

(declare-fun lt!54370 () ListLongMap!1575)

(assert (=> b!106029 (= lt!54370 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) (mask!6728 newMap!16) (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54374 () (_ BitVec 64))

(assert (=> b!106029 (= lt!54374 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54364 () (_ BitVec 64))

(assert (=> b!106029 (= lt!54364 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54371 () Unit!3232)

(assert (=> b!106029 (= lt!54371 (addApplyDifferent!74 lt!54370 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) lt!54364))))

(assert (=> b!106029 (= (apply!98 (+!144 lt!54370 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) lt!54364) (apply!98 lt!54370 lt!54364))))

(declare-fun lt!54380 () Unit!3232)

(assert (=> b!106029 (= lt!54380 lt!54371)))

(declare-fun lt!54366 () ListLongMap!1575)

(assert (=> b!106029 (= lt!54366 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) (mask!6728 newMap!16) (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54368 () (_ BitVec 64))

(assert (=> b!106029 (= lt!54368 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54377 () (_ BitVec 64))

(assert (=> b!106029 (= lt!54377 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106029 (= lt!54381 (addApplyDifferent!74 lt!54366 lt!54368 (minValue!2457 newMap!16) lt!54377))))

(assert (=> b!106029 (= (apply!98 (+!144 lt!54366 (tuple2!2411 lt!54368 (minValue!2457 newMap!16))) lt!54377) (apply!98 lt!54366 lt!54377))))

(declare-fun bm!11205 () Bool)

(declare-fun call!11206 () ListLongMap!1575)

(assert (=> bm!11205 (= call!11207 call!11206)))

(declare-fun bm!11206 () Bool)

(declare-fun call!11210 () Bool)

(assert (=> bm!11206 (= call!11210 (contains!828 lt!54365 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106030 () Bool)

(declare-fun res!52765 () Bool)

(declare-fun e!69008 () Bool)

(assert (=> b!106030 (=> (not res!52765) (not e!69008))))

(declare-fun e!69017 () Bool)

(assert (=> b!106030 (= res!52765 e!69017)))

(declare-fun res!52766 () Bool)

(assert (=> b!106030 (=> res!52766 e!69017)))

(declare-fun e!69014 () Bool)

(assert (=> b!106030 (= res!52766 (not e!69014))))

(declare-fun res!52763 () Bool)

(assert (=> b!106030 (=> (not res!52763) (not e!69014))))

(assert (=> b!106030 (= res!52763 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106031 () Bool)

(declare-fun e!69018 () ListLongMap!1575)

(declare-fun call!11211 () ListLongMap!1575)

(assert (=> b!106031 (= e!69018 (+!144 call!11211 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(declare-fun bm!11207 () Bool)

(declare-fun call!11208 () ListLongMap!1575)

(assert (=> bm!11207 (= call!11208 call!11211)))

(declare-fun b!106032 () Bool)

(declare-fun e!69019 () Bool)

(assert (=> b!106032 (= e!69008 e!69019)))

(declare-fun c!18478 () Bool)

(assert (=> b!106032 (= c!18478 (not (= (bvand (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106033 () Bool)

(declare-fun e!69016 () Bool)

(assert (=> b!106033 (= e!69016 (= (apply!98 lt!54365 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!106034 () Bool)

(declare-fun Unit!3262 () Unit!3232)

(assert (=> b!106034 (= e!69009 Unit!3262)))

(declare-fun b!106035 () Bool)

(assert (=> b!106035 (= e!69019 (not call!11209))))

(declare-fun b!106036 () Bool)

(declare-fun e!69020 () Bool)

(declare-fun e!69013 () Bool)

(assert (=> b!106036 (= e!69020 e!69013)))

(declare-fun res!52761 () Bool)

(assert (=> b!106036 (= res!52761 call!11210)))

(assert (=> b!106036 (=> (not res!52761) (not e!69013))))

(declare-fun d!29003 () Bool)

(assert (=> d!29003 e!69008))

(declare-fun res!52764 () Bool)

(assert (=> d!29003 (=> (not res!52764) (not e!69008))))

(assert (=> d!29003 (= res!52764 (or (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))))

(declare-fun lt!54367 () ListLongMap!1575)

(assert (=> d!29003 (= lt!54365 lt!54367)))

(declare-fun lt!54369 () Unit!3232)

(assert (=> d!29003 (= lt!54369 e!69009)))

(declare-fun c!18475 () Bool)

(declare-fun e!69015 () Bool)

(assert (=> d!29003 (= c!18475 e!69015)))

(declare-fun res!52767 () Bool)

(assert (=> d!29003 (=> (not res!52767) (not e!69015))))

(assert (=> d!29003 (= res!52767 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29003 (= lt!54367 e!69018)))

(declare-fun c!18477 () Bool)

(assert (=> d!29003 (= c!18477 (and (not (= (bvand (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29003 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29003 (= (getCurrentListMap!489 (_keys!4288 newMap!16) (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) (mask!6728 newMap!16) (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54365)))

(declare-fun b!106037 () Bool)

(assert (=> b!106037 (= e!69014 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106038 () Bool)

(assert (=> b!106038 (= e!69020 (not call!11210))))

(declare-fun b!106039 () Bool)

(declare-fun e!69012 () ListLongMap!1575)

(assert (=> b!106039 (= e!69012 call!11208)))

(declare-fun b!106040 () Bool)

(declare-fun e!69011 () Bool)

(assert (=> b!106040 (= e!69011 (= (apply!98 lt!54365 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106040 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))))))))

(assert (=> b!106040 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106041 () Bool)

(assert (=> b!106041 (= e!69013 (= (apply!98 lt!54365 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))))

(declare-fun bm!11208 () Bool)

(assert (=> bm!11208 (= call!11206 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) (mask!6728 newMap!16) (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!106042 () Bool)

(assert (=> b!106042 (= e!69018 e!69012)))

(declare-fun c!18480 () Bool)

(assert (=> b!106042 (= c!18480 (and (not (= (bvand (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106043 () Bool)

(declare-fun res!52762 () Bool)

(assert (=> b!106043 (=> (not res!52762) (not e!69008))))

(assert (=> b!106043 (= res!52762 e!69020)))

(declare-fun c!18479 () Bool)

(assert (=> b!106043 (= c!18479 (not (= (bvand (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106044 () Bool)

(declare-fun e!69010 () ListLongMap!1575)

(assert (=> b!106044 (= e!69010 call!11208)))

(declare-fun bm!11209 () Bool)

(assert (=> bm!11209 (= call!11211 (+!144 (ite c!18477 call!11206 (ite c!18480 call!11207 call!11212)) (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!106045 () Bool)

(declare-fun c!18476 () Bool)

(assert (=> b!106045 (= c!18476 (and (not (= (bvand (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106045 (= e!69012 e!69010)))

(declare-fun b!106046 () Bool)

(assert (=> b!106046 (= e!69019 e!69016)))

(declare-fun res!52759 () Bool)

(assert (=> b!106046 (= res!52759 call!11209)))

(assert (=> b!106046 (=> (not res!52759) (not e!69016))))

(declare-fun b!106047 () Bool)

(assert (=> b!106047 (= e!69010 call!11212)))

(declare-fun b!106048 () Bool)

(assert (=> b!106048 (= e!69015 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106049 () Bool)

(assert (=> b!106049 (= e!69017 e!69011)))

(declare-fun res!52760 () Bool)

(assert (=> b!106049 (=> (not res!52760) (not e!69011))))

(assert (=> b!106049 (= res!52760 (contains!828 lt!54365 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106049 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!29003 c!18477) b!106031))

(assert (= (and d!29003 (not c!18477)) b!106042))

(assert (= (and b!106042 c!18480) b!106039))

(assert (= (and b!106042 (not c!18480)) b!106045))

(assert (= (and b!106045 c!18476) b!106044))

(assert (= (and b!106045 (not c!18476)) b!106047))

(assert (= (or b!106044 b!106047) bm!11204))

(assert (= (or b!106039 bm!11204) bm!11205))

(assert (= (or b!106039 b!106044) bm!11207))

(assert (= (or b!106031 bm!11205) bm!11208))

(assert (= (or b!106031 bm!11207) bm!11209))

(assert (= (and d!29003 res!52767) b!106048))

(assert (= (and d!29003 c!18475) b!106029))

(assert (= (and d!29003 (not c!18475)) b!106034))

(assert (= (and d!29003 res!52764) b!106030))

(assert (= (and b!106030 res!52763) b!106037))

(assert (= (and b!106030 (not res!52766)) b!106049))

(assert (= (and b!106049 res!52760) b!106040))

(assert (= (and b!106030 res!52765) b!106043))

(assert (= (and b!106043 c!18479) b!106036))

(assert (= (and b!106043 (not c!18479)) b!106038))

(assert (= (and b!106036 res!52761) b!106041))

(assert (= (or b!106036 b!106038) bm!11206))

(assert (= (and b!106043 res!52762) b!106032))

(assert (= (and b!106032 c!18478) b!106046))

(assert (= (and b!106032 (not c!18478)) b!106035))

(assert (= (and b!106046 res!52759) b!106033))

(assert (= (or b!106046 b!106035) bm!11203))

(declare-fun b_lambda!4735 () Bool)

(assert (=> (not b_lambda!4735) (not b!106040)))

(assert (=> b!106040 t!5708))

(declare-fun b_and!6535 () Bool)

(assert (= b_and!6531 (and (=> t!5708 result!3463) b_and!6535)))

(assert (=> b!106040 t!5710))

(declare-fun b_and!6537 () Bool)

(assert (= b_and!6533 (and (=> t!5710 result!3465) b_and!6537)))

(assert (=> d!29003 m!117933))

(assert (=> b!106040 m!118103))

(declare-fun m!118469 () Bool)

(assert (=> b!106040 m!118469))

(assert (=> b!106040 m!118149))

(declare-fun m!118471 () Bool)

(assert (=> b!106040 m!118471))

(assert (=> b!106040 m!118149))

(declare-fun m!118473 () Bool)

(assert (=> b!106040 m!118473))

(assert (=> b!106040 m!118103))

(assert (=> b!106040 m!118471))

(declare-fun m!118475 () Bool)

(assert (=> b!106041 m!118475))

(declare-fun m!118477 () Bool)

(assert (=> bm!11206 m!118477))

(declare-fun m!118479 () Bool)

(assert (=> bm!11209 m!118479))

(declare-fun m!118481 () Bool)

(assert (=> b!106033 m!118481))

(assert (=> b!106037 m!118103))

(assert (=> b!106037 m!118103))

(assert (=> b!106037 m!118163))

(declare-fun m!118483 () Bool)

(assert (=> bm!11208 m!118483))

(assert (=> b!106049 m!118103))

(assert (=> b!106049 m!118103))

(declare-fun m!118485 () Bool)

(assert (=> b!106049 m!118485))

(assert (=> b!106048 m!118103))

(assert (=> b!106048 m!118103))

(assert (=> b!106048 m!118163))

(declare-fun m!118487 () Bool)

(assert (=> b!106031 m!118487))

(declare-fun m!118489 () Bool)

(assert (=> bm!11203 m!118489))

(declare-fun m!118491 () Bool)

(assert (=> b!106029 m!118491))

(declare-fun m!118493 () Bool)

(assert (=> b!106029 m!118493))

(declare-fun m!118495 () Bool)

(assert (=> b!106029 m!118495))

(declare-fun m!118497 () Bool)

(assert (=> b!106029 m!118497))

(declare-fun m!118499 () Bool)

(assert (=> b!106029 m!118499))

(declare-fun m!118501 () Bool)

(assert (=> b!106029 m!118501))

(declare-fun m!118503 () Bool)

(assert (=> b!106029 m!118503))

(declare-fun m!118505 () Bool)

(assert (=> b!106029 m!118505))

(assert (=> b!106029 m!118483))

(declare-fun m!118507 () Bool)

(assert (=> b!106029 m!118507))

(declare-fun m!118509 () Bool)

(assert (=> b!106029 m!118509))

(declare-fun m!118511 () Bool)

(assert (=> b!106029 m!118511))

(assert (=> b!106029 m!118493))

(assert (=> b!106029 m!118103))

(assert (=> b!106029 m!118509))

(declare-fun m!118513 () Bool)

(assert (=> b!106029 m!118513))

(assert (=> b!106029 m!118497))

(declare-fun m!118515 () Bool)

(assert (=> b!106029 m!118515))

(assert (=> b!106029 m!118503))

(declare-fun m!118517 () Bool)

(assert (=> b!106029 m!118517))

(declare-fun m!118519 () Bool)

(assert (=> b!106029 m!118519))

(assert (=> bm!11151 d!29003))

(declare-fun b!106052 () Bool)

(declare-fun e!69022 () Option!162)

(assert (=> b!106052 (= e!69022 (getValueByKey!156 (t!5700 (toList!803 lt!53902)) (_1!1216 lt!53815)))))

(declare-fun b!106050 () Bool)

(declare-fun e!69021 () Option!162)

(assert (=> b!106050 (= e!69021 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53902)))))))

(declare-fun d!29005 () Bool)

(declare-fun c!18481 () Bool)

(assert (=> d!29005 (= c!18481 (and ((_ is Cons!1613) (toList!803 lt!53902)) (= (_1!1216 (h!2210 (toList!803 lt!53902))) (_1!1216 lt!53815))))))

(assert (=> d!29005 (= (getValueByKey!156 (toList!803 lt!53902) (_1!1216 lt!53815)) e!69021)))

(declare-fun b!106053 () Bool)

(assert (=> b!106053 (= e!69022 None!160)))

(declare-fun b!106051 () Bool)

(assert (=> b!106051 (= e!69021 e!69022)))

(declare-fun c!18482 () Bool)

(assert (=> b!106051 (= c!18482 (and ((_ is Cons!1613) (toList!803 lt!53902)) (not (= (_1!1216 (h!2210 (toList!803 lt!53902))) (_1!1216 lt!53815)))))))

(assert (= (and d!29005 c!18481) b!106050))

(assert (= (and d!29005 (not c!18481)) b!106051))

(assert (= (and b!106051 c!18482) b!106052))

(assert (= (and b!106051 (not c!18482)) b!106053))

(declare-fun m!118521 () Bool)

(assert (=> b!106052 m!118521))

(assert (=> b!105439 d!29005))

(declare-fun b!106056 () Bool)

(declare-fun e!69024 () Option!162)

(assert (=> b!106056 (= e!69024 (getValueByKey!156 (t!5700 (toList!803 lt!53906)) (_1!1216 lt!53814)))))

(declare-fun b!106054 () Bool)

(declare-fun e!69023 () Option!162)

(assert (=> b!106054 (= e!69023 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53906)))))))

(declare-fun d!29007 () Bool)

(declare-fun c!18483 () Bool)

(assert (=> d!29007 (= c!18483 (and ((_ is Cons!1613) (toList!803 lt!53906)) (= (_1!1216 (h!2210 (toList!803 lt!53906))) (_1!1216 lt!53814))))))

(assert (=> d!29007 (= (getValueByKey!156 (toList!803 lt!53906) (_1!1216 lt!53814)) e!69023)))

(declare-fun b!106057 () Bool)

(assert (=> b!106057 (= e!69024 None!160)))

(declare-fun b!106055 () Bool)

(assert (=> b!106055 (= e!69023 e!69024)))

(declare-fun c!18484 () Bool)

(assert (=> b!106055 (= c!18484 (and ((_ is Cons!1613) (toList!803 lt!53906)) (not (= (_1!1216 (h!2210 (toList!803 lt!53906))) (_1!1216 lt!53814)))))))

(assert (= (and d!29007 c!18483) b!106054))

(assert (= (and d!29007 (not c!18483)) b!106055))

(assert (= (and b!106055 c!18484) b!106056))

(assert (= (and b!106055 (not c!18484)) b!106057))

(declare-fun m!118523 () Bool)

(assert (=> b!106056 m!118523))

(assert (=> b!105441 d!29007))

(declare-fun d!29009 () Bool)

(assert (=> d!29009 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54041 lt!53807 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54384 () Unit!3232)

(declare-fun choose!664 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 V!3219 Int) Unit!3232)

(assert (=> d!29009 (= lt!54384 (choose!664 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!54041 (zeroValue!2457 newMap!16) lt!53807 (minValue!2457 newMap!16) (defaultEntry!2582 newMap!16)))))

(assert (=> d!29009 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29009 (= (lemmaChangeZeroKeyThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!54041 (zeroValue!2457 newMap!16) lt!53807 (minValue!2457 newMap!16) (defaultEntry!2582 newMap!16)) lt!54384)))

(declare-fun bs!4356 () Bool)

(assert (= bs!4356 d!29009))

(declare-fun m!118525 () Bool)

(assert (=> bs!4356 m!118525))

(assert (=> bs!4356 m!117933))

(declare-fun m!118527 () Bool)

(assert (=> bs!4356 m!118527))

(assert (=> bs!4356 m!117707))

(declare-fun m!118529 () Bool)

(assert (=> bs!4356 m!118529))

(assert (=> bs!4356 m!117707))

(assert (=> b!105622 d!29009))

(declare-fun d!29011 () Bool)

(declare-fun e!69026 () Bool)

(assert (=> d!29011 e!69026))

(declare-fun res!52768 () Bool)

(assert (=> d!29011 (=> res!52768 e!69026)))

(declare-fun lt!54387 () Bool)

(assert (=> d!29011 (= res!52768 (not lt!54387))))

(declare-fun lt!54385 () Bool)

(assert (=> d!29011 (= lt!54387 lt!54385)))

(declare-fun lt!54386 () Unit!3232)

(declare-fun e!69025 () Unit!3232)

(assert (=> d!29011 (= lt!54386 e!69025)))

(declare-fun c!18485 () Bool)

(assert (=> d!29011 (= c!18485 lt!54385)))

(assert (=> d!29011 (= lt!54385 (containsKey!160 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29011 (= (contains!828 lt!53878 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54387)))

(declare-fun b!106058 () Bool)

(declare-fun lt!54388 () Unit!3232)

(assert (=> b!106058 (= e!69025 lt!54388)))

(assert (=> b!106058 (= lt!54388 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106058 (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106059 () Bool)

(declare-fun Unit!3263 () Unit!3232)

(assert (=> b!106059 (= e!69025 Unit!3263)))

(declare-fun b!106060 () Bool)

(assert (=> b!106060 (= e!69026 (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29011 c!18485) b!106058))

(assert (= (and d!29011 (not c!18485)) b!106059))

(assert (= (and d!29011 (not res!52768)) b!106060))

(declare-fun m!118531 () Bool)

(assert (=> d!29011 m!118531))

(declare-fun m!118533 () Bool)

(assert (=> b!106058 m!118533))

(declare-fun m!118535 () Bool)

(assert (=> b!106058 m!118535))

(assert (=> b!106058 m!118535))

(declare-fun m!118537 () Bool)

(assert (=> b!106058 m!118537))

(assert (=> b!106060 m!118535))

(assert (=> b!106060 m!118535))

(assert (=> b!106060 m!118537))

(assert (=> b!105427 d!29011))

(declare-fun d!29013 () Bool)

(assert (=> d!29013 (= (get!1333 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) from!355) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105649 d!29013))

(declare-fun d!29015 () Bool)

(assert (=> d!29015 (= (apply!98 lt!53958 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1334 (getValueByKey!156 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4357 () Bool)

(assert (= bs!4357 d!29015))

(assert (=> bs!4357 m!117601))

(assert (=> bs!4357 m!117999))

(assert (=> bs!4357 m!117999))

(declare-fun m!118539 () Bool)

(assert (=> bs!4357 m!118539))

(assert (=> b!105505 d!29015))

(assert (=> b!105505 d!28925))

(declare-fun d!29017 () Bool)

(declare-fun e!69029 () Bool)

(assert (=> d!29017 e!69029))

(declare-fun c!18488 () Bool)

(assert (=> d!29017 (= c!18488 (and (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!29017 true))

(declare-fun _$29!141 () Unit!3232)

(assert (=> d!29017 (= (choose!652 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))) _$29!141)))

(declare-fun b!106065 () Bool)

(assert (=> b!106065 (= e!69029 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!106066 () Bool)

(assert (=> b!106066 (= e!69029 (ite (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!29017 c!18488) b!106065))

(assert (= (and d!29017 (not c!18488)) b!106066))

(assert (=> b!106065 m!117489))

(assert (=> b!106065 m!117493))

(assert (=> d!28789 d!29017))

(assert (=> d!28789 d!28803))

(assert (=> b!105429 d!28903))

(assert (=> d!28785 d!28791))

(declare-fun d!29019 () Bool)

(assert (=> d!29019 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) from!355 Nil!1613)))

(assert (=> d!29019 true))

(declare-fun _$71!147 () Unit!3232)

(assert (=> d!29019 (= (choose!39 (_keys!4288 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!147)))

(declare-fun bs!4358 () Bool)

(assert (= bs!4358 d!29019))

(assert (=> bs!4358 m!117487))

(assert (=> d!28785 d!29019))

(declare-fun b!106077 () Bool)

(declare-fun res!52777 () Bool)

(declare-fun e!69032 () Bool)

(assert (=> b!106077 (=> (not res!52777) (not e!69032))))

(declare-fun size!2322 (LongMapFixedSize!900) (_ BitVec 32))

(assert (=> b!106077 (= res!52777 (= (size!2322 newMap!16) (bvadd (_size!499 newMap!16) (bvsdiv (bvadd (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!106078 () Bool)

(assert (=> b!106078 (= e!69032 (and (bvsge (extraKeys!2387 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2387 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!499 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!29021 () Bool)

(declare-fun res!52778 () Bool)

(assert (=> d!29021 (=> (not res!52778) (not e!69032))))

(assert (=> d!29021 (= res!52778 (validMask!0 (mask!6728 newMap!16)))))

(assert (=> d!29021 (= (simpleValid!74 newMap!16) e!69032)))

(declare-fun b!106076 () Bool)

(declare-fun res!52780 () Bool)

(assert (=> b!106076 (=> (not res!52780) (not e!69032))))

(assert (=> b!106076 (= res!52780 (bvsge (size!2322 newMap!16) (_size!499 newMap!16)))))

(declare-fun b!106075 () Bool)

(declare-fun res!52779 () Bool)

(assert (=> b!106075 (=> (not res!52779) (not e!69032))))

(assert (=> b!106075 (= res!52779 (and (= (size!2319 (_values!2565 newMap!16)) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001)) (= (size!2318 (_keys!4288 newMap!16)) (size!2319 (_values!2565 newMap!16))) (bvsge (_size!499 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!499 newMap!16) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!29021 res!52778) b!106075))

(assert (= (and b!106075 res!52779) b!106076))

(assert (= (and b!106076 res!52780) b!106077))

(assert (= (and b!106077 res!52777) b!106078))

(declare-fun m!118541 () Bool)

(assert (=> b!106077 m!118541))

(assert (=> d!29021 m!117933))

(assert (=> b!106076 m!118541))

(assert (=> d!28809 d!29021))

(declare-fun b!106079 () Bool)

(declare-fun e!69038 () Bool)

(declare-fun e!69036 () Bool)

(assert (=> b!106079 (= e!69038 e!69036)))

(assert (=> b!106079 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun lt!54392 () ListLongMap!1575)

(declare-fun res!52782 () Bool)

(assert (=> b!106079 (= res!52782 (contains!828 lt!54392 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!106079 (=> (not res!52782) (not e!69036))))

(declare-fun b!106080 () Bool)

(declare-fun e!69037 () ListLongMap!1575)

(declare-fun call!11213 () ListLongMap!1575)

(assert (=> b!106080 (= e!69037 call!11213)))

(declare-fun d!29023 () Bool)

(declare-fun e!69034 () Bool)

(assert (=> d!29023 e!69034))

(declare-fun res!52781 () Bool)

(assert (=> d!29023 (=> (not res!52781) (not e!69034))))

(assert (=> d!29023 (= res!52781 (not (contains!828 lt!54392 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!69035 () ListLongMap!1575)

(assert (=> d!29023 (= lt!54392 e!69035)))

(declare-fun c!18492 () Bool)

(assert (=> d!29023 (= c!18492 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29023 (validMask!0 (mask!6728 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!29023 (= (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))) lt!54392)))

(declare-fun b!106081 () Bool)

(assert (=> b!106081 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> b!106081 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2319 (_values!2565 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> b!106081 (= e!69036 (= (apply!98 lt!54392 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106082 () Bool)

(declare-fun e!69033 () Bool)

(assert (=> b!106082 (= e!69033 (= lt!54392 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106083 () Bool)

(assert (=> b!106083 (= e!69035 e!69037)))

(declare-fun c!18490 () Bool)

(assert (=> b!106083 (= c!18490 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!11210 () Bool)

(assert (=> bm!11210 (= call!11213 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!106084 () Bool)

(assert (=> b!106084 (= e!69035 (ListLongMap!1576 Nil!1614))))

(declare-fun b!106085 () Bool)

(assert (=> b!106085 (= e!69038 e!69033)))

(declare-fun c!18489 () Bool)

(assert (=> b!106085 (= c!18489 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106086 () Bool)

(declare-fun lt!54391 () Unit!3232)

(declare-fun lt!54390 () Unit!3232)

(assert (=> b!106086 (= lt!54391 lt!54390)))

(declare-fun lt!54389 () V!3219)

(declare-fun lt!54395 () ListLongMap!1575)

(declare-fun lt!54393 () (_ BitVec 64))

(declare-fun lt!54394 () (_ BitVec 64))

(assert (=> b!106086 (not (contains!828 (+!144 lt!54395 (tuple2!2411 lt!54393 lt!54389)) lt!54394))))

(assert (=> b!106086 (= lt!54390 (addStillNotContains!46 lt!54395 lt!54393 lt!54389 lt!54394))))

(assert (=> b!106086 (= lt!54394 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106086 (= lt!54389 (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106086 (= lt!54393 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!106086 (= lt!54395 call!11213)))

(assert (=> b!106086 (= e!69037 (+!144 call!11213 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106087 () Bool)

(declare-fun res!52783 () Bool)

(assert (=> b!106087 (=> (not res!52783) (not e!69034))))

(assert (=> b!106087 (= res!52783 (not (contains!828 lt!54392 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106088 () Bool)

(assert (=> b!106088 (= e!69033 (isEmpty!370 lt!54392))))

(declare-fun b!106089 () Bool)

(declare-fun e!69039 () Bool)

(assert (=> b!106089 (= e!69039 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!106089 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!106090 () Bool)

(assert (=> b!106090 (= e!69034 e!69038)))

(declare-fun c!18491 () Bool)

(assert (=> b!106090 (= c!18491 e!69039)))

(declare-fun res!52784 () Bool)

(assert (=> b!106090 (=> (not res!52784) (not e!69039))))

(assert (=> b!106090 (= res!52784 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29023 c!18492) b!106084))

(assert (= (and d!29023 (not c!18492)) b!106083))

(assert (= (and b!106083 c!18490) b!106086))

(assert (= (and b!106083 (not c!18490)) b!106080))

(assert (= (or b!106086 b!106080) bm!11210))

(assert (= (and d!29023 res!52781) b!106087))

(assert (= (and b!106087 res!52783) b!106090))

(assert (= (and b!106090 res!52784) b!106089))

(assert (= (and b!106090 c!18491) b!106079))

(assert (= (and b!106090 (not c!18491)) b!106085))

(assert (= (and b!106079 res!52782) b!106081))

(assert (= (and b!106085 c!18489) b!106082))

(assert (= (and b!106085 (not c!18489)) b!106088))

(declare-fun b_lambda!4737 () Bool)

(assert (=> (not b_lambda!4737) (not b!106081)))

(assert (=> b!106081 t!5696))

(declare-fun b_and!6539 () Bool)

(assert (= b_and!6535 (and (=> t!5696 result!3449) b_and!6539)))

(assert (=> b!106081 t!5698))

(declare-fun b_and!6541 () Bool)

(assert (= b_and!6537 (and (=> t!5698 result!3453) b_and!6541)))

(declare-fun b_lambda!4739 () Bool)

(assert (=> (not b_lambda!4739) (not b!106086)))

(assert (=> b!106086 t!5696))

(declare-fun b_and!6543 () Bool)

(assert (= b_and!6539 (and (=> t!5696 result!3449) b_and!6543)))

(assert (=> b!106086 t!5698))

(declare-fun b_and!6545 () Bool)

(assert (= b_and!6541 (and (=> t!5698 result!3453) b_and!6545)))

(declare-fun m!118543 () Bool)

(assert (=> bm!11210 m!118543))

(declare-fun m!118545 () Bool)

(assert (=> b!106081 m!118545))

(declare-fun m!118547 () Bool)

(assert (=> b!106081 m!118547))

(declare-fun m!118549 () Bool)

(assert (=> b!106081 m!118549))

(assert (=> b!106081 m!118549))

(assert (=> b!106081 m!117499))

(declare-fun m!118551 () Bool)

(assert (=> b!106081 m!118551))

(assert (=> b!106081 m!117499))

(assert (=> b!106081 m!118545))

(assert (=> b!106079 m!118545))

(assert (=> b!106079 m!118545))

(declare-fun m!118553 () Bool)

(assert (=> b!106079 m!118553))

(declare-fun m!118555 () Bool)

(assert (=> b!106088 m!118555))

(assert (=> b!106083 m!118545))

(assert (=> b!106083 m!118545))

(declare-fun m!118557 () Bool)

(assert (=> b!106083 m!118557))

(declare-fun m!118559 () Bool)

(assert (=> d!29023 m!118559))

(assert (=> d!29023 m!117517))

(assert (=> b!106082 m!118543))

(assert (=> b!106089 m!118545))

(assert (=> b!106089 m!118545))

(assert (=> b!106089 m!118557))

(declare-fun m!118561 () Bool)

(assert (=> b!106087 m!118561))

(declare-fun m!118563 () Bool)

(assert (=> b!106086 m!118563))

(assert (=> b!106086 m!118563))

(declare-fun m!118565 () Bool)

(assert (=> b!106086 m!118565))

(assert (=> b!106086 m!118549))

(assert (=> b!106086 m!118549))

(assert (=> b!106086 m!117499))

(assert (=> b!106086 m!118551))

(assert (=> b!106086 m!117499))

(assert (=> b!106086 m!118545))

(declare-fun m!118567 () Bool)

(assert (=> b!106086 m!118567))

(declare-fun m!118569 () Bool)

(assert (=> b!106086 m!118569))

(assert (=> b!105422 d!29023))

(declare-fun b!106091 () Bool)

(declare-fun e!69041 () Bool)

(declare-fun e!69042 () Bool)

(assert (=> b!106091 (= e!69041 e!69042)))

(declare-fun res!52787 () Bool)

(assert (=> b!106091 (=> (not res!52787) (not e!69042))))

(declare-fun e!69043 () Bool)

(assert (=> b!106091 (= res!52787 (not e!69043))))

(declare-fun res!52785 () Bool)

(assert (=> b!106091 (=> (not res!52785) (not e!69043))))

(assert (=> b!106091 (= res!52785 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!106092 () Bool)

(declare-fun e!69040 () Bool)

(declare-fun call!11214 () Bool)

(assert (=> b!106092 (= e!69040 call!11214)))

(declare-fun b!106093 () Bool)

(assert (=> b!106093 (= e!69043 (contains!829 (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!29025 () Bool)

(declare-fun res!52786 () Bool)

(assert (=> d!29025 (=> res!52786 e!69041)))

(assert (=> d!29025 (= res!52786 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29025 (= (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)) e!69041)))

(declare-fun bm!11211 () Bool)

(declare-fun c!18493 () Bool)

(assert (=> bm!11211 (= call!11214 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18493 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613))))))

(declare-fun b!106094 () Bool)

(assert (=> b!106094 (= e!69040 call!11214)))

(declare-fun b!106095 () Bool)

(assert (=> b!106095 (= e!69042 e!69040)))

(assert (=> b!106095 (= c!18493 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!29025 (not res!52786)) b!106091))

(assert (= (and b!106091 res!52785) b!106093))

(assert (= (and b!106091 res!52787) b!106095))

(assert (= (and b!106095 c!18493) b!106092))

(assert (= (and b!106095 (not c!18493)) b!106094))

(assert (= (or b!106092 b!106094) bm!11211))

(declare-fun m!118571 () Bool)

(assert (=> b!106091 m!118571))

(assert (=> b!106091 m!118571))

(declare-fun m!118573 () Bool)

(assert (=> b!106091 m!118573))

(assert (=> b!106093 m!118571))

(assert (=> b!106093 m!118571))

(declare-fun m!118575 () Bool)

(assert (=> b!106093 m!118575))

(assert (=> bm!11211 m!118571))

(declare-fun m!118577 () Bool)

(assert (=> bm!11211 m!118577))

(assert (=> b!106095 m!118571))

(assert (=> b!106095 m!118571))

(assert (=> b!106095 m!118573))

(assert (=> bm!11059 d!29025))

(declare-fun bm!11214 () Bool)

(declare-fun call!11217 () Bool)

(assert (=> bm!11214 (= call!11217 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun d!29027 () Bool)

(declare-fun res!52793 () Bool)

(declare-fun e!69050 () Bool)

(assert (=> d!29027 (=> res!52793 e!69050)))

(assert (=> d!29027 (= res!52793 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29027 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 newMap!16) (mask!6728 newMap!16)) e!69050)))

(declare-fun b!106104 () Bool)

(declare-fun e!69051 () Bool)

(assert (=> b!106104 (= e!69051 call!11217)))

(declare-fun b!106105 () Bool)

(assert (=> b!106105 (= e!69050 e!69051)))

(declare-fun c!18496 () Bool)

(assert (=> b!106105 (= c!18496 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106106 () Bool)

(declare-fun e!69052 () Bool)

(assert (=> b!106106 (= e!69051 e!69052)))

(declare-fun lt!54402 () (_ BitVec 64))

(assert (=> b!106106 (= lt!54402 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54403 () Unit!3232)

(assert (=> b!106106 (= lt!54403 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4288 newMap!16) lt!54402 #b00000000000000000000000000000000))))

(assert (=> b!106106 (arrayContainsKey!0 (_keys!4288 newMap!16) lt!54402 #b00000000000000000000000000000000)))

(declare-fun lt!54404 () Unit!3232)

(assert (=> b!106106 (= lt!54404 lt!54403)))

(declare-fun res!52792 () Bool)

(assert (=> b!106106 (= res!52792 (= (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (_keys!4288 newMap!16) (mask!6728 newMap!16)) (Found!259 #b00000000000000000000000000000000)))))

(assert (=> b!106106 (=> (not res!52792) (not e!69052))))

(declare-fun b!106107 () Bool)

(assert (=> b!106107 (= e!69052 call!11217)))

(assert (= (and d!29027 (not res!52793)) b!106105))

(assert (= (and b!106105 c!18496) b!106106))

(assert (= (and b!106105 (not c!18496)) b!106104))

(assert (= (and b!106106 res!52792) b!106107))

(assert (= (or b!106107 b!106104) bm!11214))

(declare-fun m!118579 () Bool)

(assert (=> bm!11214 m!118579))

(assert (=> b!106105 m!118103))

(assert (=> b!106105 m!118103))

(assert (=> b!106105 m!118163))

(assert (=> b!106106 m!118103))

(declare-fun m!118581 () Bool)

(assert (=> b!106106 m!118581))

(declare-fun m!118583 () Bool)

(assert (=> b!106106 m!118583))

(assert (=> b!106106 m!118103))

(declare-fun m!118585 () Bool)

(assert (=> b!106106 m!118585))

(assert (=> b!105450 d!29027))

(assert (=> d!28815 d!28929))

(declare-fun d!29029 () Bool)

(declare-fun res!52794 () Bool)

(declare-fun e!69053 () Bool)

(assert (=> d!29029 (=> res!52794 e!69053)))

(assert (=> d!29029 (= res!52794 (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29029 (= (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!69053)))

(declare-fun b!106108 () Bool)

(declare-fun e!69054 () Bool)

(assert (=> b!106108 (= e!69053 e!69054)))

(declare-fun res!52795 () Bool)

(assert (=> b!106108 (=> (not res!52795) (not e!69054))))

(assert (=> b!106108 (= res!52795 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106109 () Bool)

(assert (=> b!106109 (= e!69054 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29029 (not res!52794)) b!106108))

(assert (= (and b!106108 res!52795) b!106109))

(assert (=> d!29029 m!118545))

(assert (=> b!106109 m!117489))

(declare-fun m!118587 () Bool)

(assert (=> b!106109 m!118587))

(assert (=> b!105373 d!29029))

(declare-fun bm!11215 () Bool)

(declare-fun call!11221 () Bool)

(declare-fun lt!54410 () ListLongMap!1575)

(assert (=> bm!11215 (= call!11221 (contains!828 lt!54410 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11216 () Bool)

(declare-fun call!11224 () ListLongMap!1575)

(declare-fun call!11219 () ListLongMap!1575)

(assert (=> bm!11216 (= call!11224 call!11219)))

(declare-fun b!106110 () Bool)

(declare-fun e!69056 () Unit!3232)

(declare-fun lt!54426 () Unit!3232)

(assert (=> b!106110 (= e!69056 lt!54426)))

(declare-fun lt!54408 () ListLongMap!1575)

(assert (=> b!106110 (= lt!54408 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058) (mask!6728 newMap!16) (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54418 () (_ BitVec 64))

(assert (=> b!106110 (= lt!54418 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54406 () (_ BitVec 64))

(assert (=> b!106110 (= lt!54406 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54421 () Unit!3232)

(assert (=> b!106110 (= lt!54421 (addStillContains!74 lt!54408 lt!54418 (zeroValue!2457 newMap!16) lt!54406))))

(assert (=> b!106110 (contains!828 (+!144 lt!54408 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16))) lt!54406)))

(declare-fun lt!54420 () Unit!3232)

(assert (=> b!106110 (= lt!54420 lt!54421)))

(declare-fun lt!54423 () ListLongMap!1575)

(assert (=> b!106110 (= lt!54423 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058) (mask!6728 newMap!16) (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54407 () (_ BitVec 64))

(assert (=> b!106110 (= lt!54407 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54405 () (_ BitVec 64))

(assert (=> b!106110 (= lt!54405 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54424 () Unit!3232)

(assert (=> b!106110 (= lt!54424 (addApplyDifferent!74 lt!54423 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) lt!54405))))

(assert (=> b!106110 (= (apply!98 (+!144 lt!54423 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) lt!54405) (apply!98 lt!54423 lt!54405))))

(declare-fun lt!54417 () Unit!3232)

(assert (=> b!106110 (= lt!54417 lt!54424)))

(declare-fun lt!54415 () ListLongMap!1575)

(assert (=> b!106110 (= lt!54415 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058) (mask!6728 newMap!16) (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54419 () (_ BitVec 64))

(assert (=> b!106110 (= lt!54419 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54409 () (_ BitVec 64))

(assert (=> b!106110 (= lt!54409 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54416 () Unit!3232)

(assert (=> b!106110 (= lt!54416 (addApplyDifferent!74 lt!54415 lt!54419 (zeroValue!2457 newMap!16) lt!54409))))

(assert (=> b!106110 (= (apply!98 (+!144 lt!54415 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16))) lt!54409) (apply!98 lt!54415 lt!54409))))

(declare-fun lt!54425 () Unit!3232)

(assert (=> b!106110 (= lt!54425 lt!54416)))

(declare-fun lt!54411 () ListLongMap!1575)

(assert (=> b!106110 (= lt!54411 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058) (mask!6728 newMap!16) (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54413 () (_ BitVec 64))

(assert (=> b!106110 (= lt!54413 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54422 () (_ BitVec 64))

(assert (=> b!106110 (= lt!54422 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106110 (= lt!54426 (addApplyDifferent!74 lt!54411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) lt!54422))))

(assert (=> b!106110 (= (apply!98 (+!144 lt!54411 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) lt!54422) (apply!98 lt!54411 lt!54422))))

(declare-fun bm!11217 () Bool)

(declare-fun call!11218 () ListLongMap!1575)

(assert (=> bm!11217 (= call!11219 call!11218)))

(declare-fun bm!11218 () Bool)

(declare-fun call!11222 () Bool)

(assert (=> bm!11218 (= call!11222 (contains!828 lt!54410 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106111 () Bool)

(declare-fun res!52802 () Bool)

(declare-fun e!69055 () Bool)

(assert (=> b!106111 (=> (not res!52802) (not e!69055))))

(declare-fun e!69064 () Bool)

(assert (=> b!106111 (= res!52802 e!69064)))

(declare-fun res!52803 () Bool)

(assert (=> b!106111 (=> res!52803 e!69064)))

(declare-fun e!69061 () Bool)

(assert (=> b!106111 (= res!52803 (not e!69061))))

(declare-fun res!52800 () Bool)

(assert (=> b!106111 (=> (not res!52800) (not e!69061))))

(assert (=> b!106111 (= res!52800 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun call!11223 () ListLongMap!1575)

(declare-fun b!106112 () Bool)

(declare-fun e!69065 () ListLongMap!1575)

(assert (=> b!106112 (= e!69065 (+!144 call!11223 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))

(declare-fun bm!11219 () Bool)

(declare-fun call!11220 () ListLongMap!1575)

(assert (=> bm!11219 (= call!11220 call!11223)))

(declare-fun b!106113 () Bool)

(declare-fun e!69066 () Bool)

(assert (=> b!106113 (= e!69055 e!69066)))

(declare-fun c!18500 () Bool)

(assert (=> b!106113 (= c!18500 (not (= (bvand (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106114 () Bool)

(declare-fun e!69063 () Bool)

(assert (=> b!106114 (= e!69063 (= (apply!98 lt!54410 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))

(declare-fun b!106115 () Bool)

(declare-fun Unit!3264 () Unit!3232)

(assert (=> b!106115 (= e!69056 Unit!3264)))

(declare-fun b!106116 () Bool)

(assert (=> b!106116 (= e!69066 (not call!11221))))

(declare-fun b!106117 () Bool)

(declare-fun e!69067 () Bool)

(declare-fun e!69060 () Bool)

(assert (=> b!106117 (= e!69067 e!69060)))

(declare-fun res!52798 () Bool)

(assert (=> b!106117 (= res!52798 call!11222)))

(assert (=> b!106117 (=> (not res!52798) (not e!69060))))

(declare-fun d!29031 () Bool)

(assert (=> d!29031 e!69055))

(declare-fun res!52801 () Bool)

(assert (=> d!29031 (=> (not res!52801) (not e!69055))))

(assert (=> d!29031 (= res!52801 (or (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))))

(declare-fun lt!54412 () ListLongMap!1575)

(assert (=> d!29031 (= lt!54410 lt!54412)))

(declare-fun lt!54414 () Unit!3232)

(assert (=> d!29031 (= lt!54414 e!69056)))

(declare-fun c!18497 () Bool)

(declare-fun e!69062 () Bool)

(assert (=> d!29031 (= c!18497 e!69062)))

(declare-fun res!52804 () Bool)

(assert (=> d!29031 (=> (not res!52804) (not e!69062))))

(assert (=> d!29031 (= res!52804 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29031 (= lt!54412 e!69065)))

(declare-fun c!18499 () Bool)

(assert (=> d!29031 (= c!18499 (and (not (= (bvand (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29031 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29031 (= (getCurrentListMap!489 (_keys!4288 newMap!16) (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058) (mask!6728 newMap!16) (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54410)))

(declare-fun b!106118 () Bool)

(assert (=> b!106118 (= e!69061 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106119 () Bool)

(assert (=> b!106119 (= e!69067 (not call!11222))))

(declare-fun b!106120 () Bool)

(declare-fun e!69059 () ListLongMap!1575)

(assert (=> b!106120 (= e!69059 call!11220)))

(declare-fun e!69058 () Bool)

(declare-fun b!106121 () Bool)

(assert (=> b!106121 (= e!69058 (= (apply!98 lt!54410 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106121 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058))))))

(assert (=> b!106121 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106122 () Bool)

(assert (=> b!106122 (= e!69060 (= (apply!98 lt!54410 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun bm!11220 () Bool)

(assert (=> bm!11220 (= call!11218 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058) (mask!6728 newMap!16) (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!106123 () Bool)

(assert (=> b!106123 (= e!69065 e!69059)))

(declare-fun c!18502 () Bool)

(assert (=> b!106123 (= c!18502 (and (not (= (bvand (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106124 () Bool)

(declare-fun res!52799 () Bool)

(assert (=> b!106124 (=> (not res!52799) (not e!69055))))

(assert (=> b!106124 (= res!52799 e!69067)))

(declare-fun c!18501 () Bool)

(assert (=> b!106124 (= c!18501 (not (= (bvand (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106125 () Bool)

(declare-fun e!69057 () ListLongMap!1575)

(assert (=> b!106125 (= e!69057 call!11220)))

(declare-fun bm!11221 () Bool)

(assert (=> bm!11221 (= call!11223 (+!144 (ite c!18499 call!11218 (ite c!18502 call!11219 call!11224)) (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(declare-fun c!18498 () Bool)

(declare-fun b!106126 () Bool)

(assert (=> b!106126 (= c!18498 (and (not (= (bvand (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106126 (= e!69059 e!69057)))

(declare-fun b!106127 () Bool)

(assert (=> b!106127 (= e!69066 e!69063)))

(declare-fun res!52796 () Bool)

(assert (=> b!106127 (= res!52796 call!11221)))

(assert (=> b!106127 (=> (not res!52796) (not e!69063))))

(declare-fun b!106128 () Bool)

(assert (=> b!106128 (= e!69057 call!11224)))

(declare-fun b!106129 () Bool)

(assert (=> b!106129 (= e!69062 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106130 () Bool)

(assert (=> b!106130 (= e!69064 e!69058)))

(declare-fun res!52797 () Bool)

(assert (=> b!106130 (=> (not res!52797) (not e!69058))))

(assert (=> b!106130 (= res!52797 (contains!828 lt!54410 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106130 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!29031 c!18499) b!106112))

(assert (= (and d!29031 (not c!18499)) b!106123))

(assert (= (and b!106123 c!18502) b!106120))

(assert (= (and b!106123 (not c!18502)) b!106126))

(assert (= (and b!106126 c!18498) b!106125))

(assert (= (and b!106126 (not c!18498)) b!106128))

(assert (= (or b!106125 b!106128) bm!11216))

(assert (= (or b!106120 bm!11216) bm!11217))

(assert (= (or b!106120 b!106125) bm!11219))

(assert (= (or b!106112 bm!11217) bm!11220))

(assert (= (or b!106112 bm!11219) bm!11221))

(assert (= (and d!29031 res!52804) b!106129))

(assert (= (and d!29031 c!18497) b!106110))

(assert (= (and d!29031 (not c!18497)) b!106115))

(assert (= (and d!29031 res!52801) b!106111))

(assert (= (and b!106111 res!52800) b!106118))

(assert (= (and b!106111 (not res!52803)) b!106130))

(assert (= (and b!106130 res!52797) b!106121))

(assert (= (and b!106111 res!52802) b!106124))

(assert (= (and b!106124 c!18501) b!106117))

(assert (= (and b!106124 (not c!18501)) b!106119))

(assert (= (and b!106117 res!52798) b!106122))

(assert (= (or b!106117 b!106119) bm!11218))

(assert (= (and b!106124 res!52799) b!106113))

(assert (= (and b!106113 c!18500) b!106127))

(assert (= (and b!106113 (not c!18500)) b!106116))

(assert (= (and b!106127 res!52796) b!106114))

(assert (= (or b!106127 b!106116) bm!11215))

(declare-fun b_lambda!4741 () Bool)

(assert (=> (not b_lambda!4741) (not b!106121)))

(assert (=> b!106121 t!5708))

(declare-fun b_and!6547 () Bool)

(assert (= b_and!6543 (and (=> t!5708 result!3463) b_and!6547)))

(assert (=> b!106121 t!5710))

(declare-fun b_and!6549 () Bool)

(assert (= b_and!6545 (and (=> t!5710 result!3465) b_and!6549)))

(assert (=> d!29031 m!117933))

(assert (=> b!106121 m!118103))

(declare-fun m!118589 () Bool)

(assert (=> b!106121 m!118589))

(assert (=> b!106121 m!118149))

(declare-fun m!118591 () Bool)

(assert (=> b!106121 m!118591))

(assert (=> b!106121 m!118149))

(declare-fun m!118593 () Bool)

(assert (=> b!106121 m!118593))

(assert (=> b!106121 m!118103))

(assert (=> b!106121 m!118591))

(declare-fun m!118595 () Bool)

(assert (=> b!106122 m!118595))

(declare-fun m!118597 () Bool)

(assert (=> bm!11218 m!118597))

(declare-fun m!118599 () Bool)

(assert (=> bm!11221 m!118599))

(declare-fun m!118601 () Bool)

(assert (=> b!106114 m!118601))

(assert (=> b!106118 m!118103))

(assert (=> b!106118 m!118103))

(assert (=> b!106118 m!118163))

(declare-fun m!118603 () Bool)

(assert (=> bm!11220 m!118603))

(assert (=> b!106130 m!118103))

(assert (=> b!106130 m!118103))

(declare-fun m!118605 () Bool)

(assert (=> b!106130 m!118605))

(assert (=> b!106129 m!118103))

(assert (=> b!106129 m!118103))

(assert (=> b!106129 m!118163))

(declare-fun m!118607 () Bool)

(assert (=> b!106112 m!118607))

(declare-fun m!118609 () Bool)

(assert (=> bm!11215 m!118609))

(declare-fun m!118611 () Bool)

(assert (=> b!106110 m!118611))

(declare-fun m!118613 () Bool)

(assert (=> b!106110 m!118613))

(declare-fun m!118615 () Bool)

(assert (=> b!106110 m!118615))

(declare-fun m!118617 () Bool)

(assert (=> b!106110 m!118617))

(declare-fun m!118619 () Bool)

(assert (=> b!106110 m!118619))

(declare-fun m!118621 () Bool)

(assert (=> b!106110 m!118621))

(declare-fun m!118623 () Bool)

(assert (=> b!106110 m!118623))

(declare-fun m!118625 () Bool)

(assert (=> b!106110 m!118625))

(assert (=> b!106110 m!118603))

(declare-fun m!118627 () Bool)

(assert (=> b!106110 m!118627))

(declare-fun m!118629 () Bool)

(assert (=> b!106110 m!118629))

(declare-fun m!118631 () Bool)

(assert (=> b!106110 m!118631))

(assert (=> b!106110 m!118613))

(assert (=> b!106110 m!118103))

(assert (=> b!106110 m!118629))

(declare-fun m!118633 () Bool)

(assert (=> b!106110 m!118633))

(assert (=> b!106110 m!118617))

(declare-fun m!118635 () Bool)

(assert (=> b!106110 m!118635))

(assert (=> b!106110 m!118623))

(declare-fun m!118637 () Bool)

(assert (=> b!106110 m!118637))

(declare-fun m!118639 () Bool)

(assert (=> b!106110 m!118639))

(assert (=> bm!11150 d!29031))

(assert (=> bm!11062 d!29023))

(assert (=> b!105394 d!28971))

(declare-fun mapNonEmpty!3941 () Bool)

(declare-fun mapRes!3941 () Bool)

(declare-fun tp!9917 () Bool)

(declare-fun e!69068 () Bool)

(assert (=> mapNonEmpty!3941 (= mapRes!3941 (and tp!9917 e!69068))))

(declare-fun mapKey!3941 () (_ BitVec 32))

(declare-fun mapValue!3941 () ValueCell!996)

(declare-fun mapRest!3941 () (Array (_ BitVec 32) ValueCell!996))

(assert (=> mapNonEmpty!3941 (= mapRest!3940 (store mapRest!3941 mapKey!3941 mapValue!3941))))

(declare-fun b!106131 () Bool)

(assert (=> b!106131 (= e!69068 tp_is_empty!2679)))

(declare-fun condMapEmpty!3941 () Bool)

(declare-fun mapDefault!3941 () ValueCell!996)

(assert (=> mapNonEmpty!3940 (= condMapEmpty!3941 (= mapRest!3940 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3941)))))

(declare-fun e!69069 () Bool)

(assert (=> mapNonEmpty!3940 (= tp!9916 (and e!69069 mapRes!3941))))

(declare-fun mapIsEmpty!3941 () Bool)

(assert (=> mapIsEmpty!3941 mapRes!3941))

(declare-fun b!106132 () Bool)

(assert (=> b!106132 (= e!69069 tp_is_empty!2679)))

(assert (= (and mapNonEmpty!3940 condMapEmpty!3941) mapIsEmpty!3941))

(assert (= (and mapNonEmpty!3940 (not condMapEmpty!3941)) mapNonEmpty!3941))

(assert (= (and mapNonEmpty!3941 ((_ is ValueCellFull!996) mapValue!3941)) b!106131))

(assert (= (and mapNonEmpty!3940 ((_ is ValueCellFull!996) mapDefault!3941)) b!106132))

(declare-fun m!118641 () Bool)

(assert (=> mapNonEmpty!3941 m!118641))

(declare-fun mapNonEmpty!3942 () Bool)

(declare-fun mapRes!3942 () Bool)

(declare-fun tp!9918 () Bool)

(declare-fun e!69070 () Bool)

(assert (=> mapNonEmpty!3942 (= mapRes!3942 (and tp!9918 e!69070))))

(declare-fun mapValue!3942 () ValueCell!996)

(declare-fun mapRest!3942 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapKey!3942 () (_ BitVec 32))

(assert (=> mapNonEmpty!3942 (= mapRest!3939 (store mapRest!3942 mapKey!3942 mapValue!3942))))

(declare-fun b!106133 () Bool)

(assert (=> b!106133 (= e!69070 tp_is_empty!2679)))

(declare-fun condMapEmpty!3942 () Bool)

(declare-fun mapDefault!3942 () ValueCell!996)

(assert (=> mapNonEmpty!3939 (= condMapEmpty!3942 (= mapRest!3939 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3942)))))

(declare-fun e!69071 () Bool)

(assert (=> mapNonEmpty!3939 (= tp!9915 (and e!69071 mapRes!3942))))

(declare-fun mapIsEmpty!3942 () Bool)

(assert (=> mapIsEmpty!3942 mapRes!3942))

(declare-fun b!106134 () Bool)

(assert (=> b!106134 (= e!69071 tp_is_empty!2679)))

(assert (= (and mapNonEmpty!3939 condMapEmpty!3942) mapIsEmpty!3942))

(assert (= (and mapNonEmpty!3939 (not condMapEmpty!3942)) mapNonEmpty!3942))

(assert (= (and mapNonEmpty!3942 ((_ is ValueCellFull!996) mapValue!3942)) b!106133))

(assert (= (and mapNonEmpty!3939 ((_ is ValueCellFull!996) mapDefault!3942)) b!106134))

(declare-fun m!118643 () Bool)

(assert (=> mapNonEmpty!3942 m!118643))

(declare-fun b_lambda!4743 () Bool)

(assert (= b_lambda!4741 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4743)))

(declare-fun b_lambda!4745 () Bool)

(assert (= b_lambda!4739 (or (and b!105285 b_free!2525) (and b!105288 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))) b_lambda!4745)))

(declare-fun b_lambda!4747 () Bool)

(assert (= b_lambda!4733 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4747)))

(declare-fun b_lambda!4749 () Bool)

(assert (= b_lambda!4735 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4749)))

(declare-fun b_lambda!4751 () Bool)

(assert (= b_lambda!4737 (or (and b!105285 b_free!2525) (and b!105288 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))) b_lambda!4751)))

(check-sat (not b!105834) (not b!106013) (not b_lambda!4743) (not d!28979) (not b!105837) (not b!105932) (not d!28875) (not d!28933) (not b!105906) (not d!28859) (not b!106129) (not b!105858) (not d!28899) (not b!105732) (not b!105976) (not b!105894) (not b!106118) (not b_lambda!4719) (not b!106033) (not b!106065) (not b!105821) (not b!105840) (not b!106024) (not d!29019) (not bm!11177) (not d!28897) (not bm!11208) (not d!28955) (not b!106086) (not b!106056) (not d!28847) (not b!105728) (not b!105673) (not b!105960) (not b!105849) (not d!28895) (not b_lambda!4749) (not b!105945) (not d!28845) (not b!105957) (not b!106079) (not bm!11220) (not b!105886) (not b!105804) (not b!106110) (not bm!11211) (not b!105816) (not d!28885) (not d!28997) (not b!105806) (not d!28851) (not bm!11189) (not b!105964) (not d!28983) (not d!29001) (not d!28987) (not bm!11221) (not b!105875) (not d!29023) (not b!105789) (not b!105935) (not bm!11180) (not b!105958) (not b!105841) (not bm!11202) (not d!28901) (not bm!11179) (not b!105798) (not b!106052) (not d!28843) (not b!106081) (not bm!11174) (not b!106058) (not b!105966) (not b!105833) (not b!105955) (not b!106091) (not d!28853) (not b!105781) (not b!105795) b_and!6547 (not b!105967) (not b!106095) (not b_next!2525) (not bm!11215) (not b!105661) (not b!105691) (not b!105726) (not b!106093) (not b!106130) (not bm!11206) (not b!105925) (not b!106037) (not b!105671) (not b!105731) (not b!105797) (not bm!11210) (not d!28869) (not d!28989) (not bm!11186) (not b!106082) (not d!28865) (not bm!11160) (not d!28919) (not b_lambda!4745) (not b!106076) (not b!105921) (not b!105968) (not bm!11187) (not d!28867) (not b!105952) (not d!28841) (not b!106114) (not d!29009) (not d!28891) (not d!28831) (not b_lambda!4729) (not d!28881) (not bm!11169) (not b!105934) (not d!28945) (not b!105938) (not d!28921) (not d!28855) (not b!105725) (not d!28905) (not b!105669) (not b!105670) (not b!106105) (not b!105928) (not d!28877) (not b!106031) (not b!105785) (not b!105946) (not b!106060) (not b!105668) (not b!105809) (not d!28967) (not d!28941) (not b_lambda!4727) (not b!105783) (not d!28883) (not b!106041) (not b!105745) (not mapNonEmpty!3941) (not b!106087) (not b!105751) (not b!105961) (not mapNonEmpty!3942) (not d!28835) (not b!105677) (not b!105866) (not d!28907) (not bm!11182) (not b!105931) (not bm!11214) (not d!28833) (not d!28839) (not b!105877) (not b!105869) (not b!105962) (not b!105807) (not b!106012) (not d!28937) (not b!105820) (not d!28927) (not b!105887) (not b!106088) (not b!106106) (not b!105917) (not b!105909) (not b!105811) (not bm!11172) (not d!28939) (not b!106027) (not d!28993) (not b!106049) (not b!105977) (not b!105825) (not b!105912) (not b!106122) (not b!106048) (not b!106121) (not b!105855) (not b!105937) (not bm!11200) (not d!28977) (not b!105975) (not d!28981) (not d!28923) (not d!29015) (not d!28963) (not b!105954) (not b!105790) (not d!29031) (not b!105872) (not b!105963) (not d!28991) (not d!29003) (not d!28949) (not b!105822) (not b!106089) (not b!105818) (not d!28931) (not b!105847) (not d!28893) (not b!105676) (not b!106029) (not b!105786) (not b!105914) (not d!28861) (not b!105911) (not b!106083) (not d!28943) (not b!106109) (not b!105867) (not b!105878) (not b_lambda!4731) (not d!28829) (not bm!11203) (not bm!11161) (not b!106021) (not d!28863) (not d!28857) (not b!105940) (not b!105838) (not b_next!2527) (not b!105959) (not b!105780) (not b!105729) (not d!28973) (not b!105787) (not b!105969) (not d!28999) (not b!105836) (not b!105792) (not d!28961) (not b_lambda!4751) (not d!28849) (not d!28911) (not b!106077) (not b_lambda!4747) (not d!28889) (not b!106040) (not d!28929) (not b!105923) (not b!105828) (not b!105884) (not d!28879) (not b!105870) (not b!105752) (not b!106112) (not b!105734) (not b!105859) (not b!106019) (not d!28985) (not d!28969) (not b!105835) (not bm!11201) (not bm!11209) (not bm!11218) (not b!105660) (not b!105730) (not b!105943) (not b!105907) (not d!29021) (not b!105851) (not d!28947) (not b!105831) (not d!28837) tp_is_empty!2679 (not d!28871) (not d!28965) (not b!105842) (not b!105965) b_and!6549 (not b!105778) (not b!105667) (not d!29011))
(check-sat b_and!6547 b_and!6549 (not b_next!2525) (not b_next!2527))
(get-model)

(declare-fun b!106135 () Bool)

(declare-fun e!69073 () Bool)

(declare-fun e!69074 () Bool)

(assert (=> b!106135 (= e!69073 e!69074)))

(declare-fun res!52807 () Bool)

(assert (=> b!106135 (=> (not res!52807) (not e!69074))))

(declare-fun e!69075 () Bool)

(assert (=> b!106135 (= res!52807 (not e!69075))))

(declare-fun res!52805 () Bool)

(assert (=> b!106135 (=> (not res!52805) (not e!69075))))

(assert (=> b!106135 (= res!52805 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000)))))

(declare-fun b!106136 () Bool)

(declare-fun e!69072 () Bool)

(declare-fun call!11225 () Bool)

(assert (=> b!106136 (= e!69072 call!11225)))

(declare-fun b!106137 () Bool)

(assert (=> b!106137 (= e!69075 (contains!829 Nil!1613 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000)))))

(declare-fun d!29033 () Bool)

(declare-fun res!52806 () Bool)

(assert (=> d!29033 (=> res!52806 e!69073)))

(assert (=> d!29033 (= res!52806 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))))))

(assert (=> d!29033 (= (arrayNoDuplicates!0 (_keys!4288 (_2!1217 lt!54050)) #b00000000000000000000000000000000 Nil!1613) e!69073)))

(declare-fun bm!11222 () Bool)

(declare-fun c!18503 () Bool)

(assert (=> bm!11222 (= call!11225 (arrayNoDuplicates!0 (_keys!4288 (_2!1217 lt!54050)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18503 (Cons!1612 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000) Nil!1613) Nil!1613)))))

(declare-fun b!106138 () Bool)

(assert (=> b!106138 (= e!69072 call!11225)))

(declare-fun b!106139 () Bool)

(assert (=> b!106139 (= e!69074 e!69072)))

(assert (=> b!106139 (= c!18503 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000)))))

(assert (= (and d!29033 (not res!52806)) b!106135))

(assert (= (and b!106135 res!52805) b!106137))

(assert (= (and b!106135 res!52807) b!106139))

(assert (= (and b!106139 c!18503) b!106136))

(assert (= (and b!106139 (not c!18503)) b!106138))

(assert (= (or b!106136 b!106138) bm!11222))

(declare-fun m!118645 () Bool)

(assert (=> b!106135 m!118645))

(assert (=> b!106135 m!118645))

(declare-fun m!118647 () Bool)

(assert (=> b!106135 m!118647))

(assert (=> b!106137 m!118645))

(assert (=> b!106137 m!118645))

(declare-fun m!118649 () Bool)

(assert (=> b!106137 m!118649))

(assert (=> bm!11222 m!118645))

(declare-fun m!118651 () Bool)

(assert (=> bm!11222 m!118651))

(assert (=> b!106139 m!118645))

(assert (=> b!106139 m!118645))

(assert (=> b!106139 m!118647))

(assert (=> b!105731 d!29033))

(declare-fun d!29035 () Bool)

(declare-fun e!69077 () Bool)

(assert (=> d!29035 e!69077))

(declare-fun res!52808 () Bool)

(assert (=> d!29035 (=> res!52808 e!69077)))

(declare-fun lt!54429 () Bool)

(assert (=> d!29035 (= res!52808 (not lt!54429))))

(declare-fun lt!54427 () Bool)

(assert (=> d!29035 (= lt!54429 lt!54427)))

(declare-fun lt!54428 () Unit!3232)

(declare-fun e!69076 () Unit!3232)

(assert (=> d!29035 (= lt!54428 e!69076)))

(declare-fun c!18504 () Bool)

(assert (=> d!29035 (= c!18504 lt!54427)))

(assert (=> d!29035 (= lt!54427 (containsKey!160 (toList!803 lt!54251) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29035 (= (contains!828 lt!54251 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54429)))

(declare-fun b!106140 () Bool)

(declare-fun lt!54430 () Unit!3232)

(assert (=> b!106140 (= e!69076 lt!54430)))

(assert (=> b!106140 (= lt!54430 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54251) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106140 (isDefined!109 (getValueByKey!156 (toList!803 lt!54251) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106141 () Bool)

(declare-fun Unit!3265 () Unit!3232)

(assert (=> b!106141 (= e!69076 Unit!3265)))

(declare-fun b!106142 () Bool)

(assert (=> b!106142 (= e!69077 (isDefined!109 (getValueByKey!156 (toList!803 lt!54251) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29035 c!18504) b!106140))

(assert (= (and d!29035 (not c!18504)) b!106141))

(assert (= (and d!29035 (not res!52808)) b!106142))

(declare-fun m!118653 () Bool)

(assert (=> d!29035 m!118653))

(declare-fun m!118655 () Bool)

(assert (=> b!106140 m!118655))

(assert (=> b!106140 m!118359))

(assert (=> b!106140 m!118359))

(declare-fun m!118657 () Bool)

(assert (=> b!106140 m!118657))

(assert (=> b!106142 m!118359))

(assert (=> b!106142 m!118359))

(assert (=> b!106142 m!118657))

(assert (=> d!28985 d!29035))

(declare-fun b!106145 () Bool)

(declare-fun e!69079 () Option!162)

(assert (=> b!106145 (= e!69079 (getValueByKey!156 (t!5700 lt!54253) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106143 () Bool)

(declare-fun e!69078 () Option!162)

(assert (=> b!106143 (= e!69078 (Some!161 (_2!1216 (h!2210 lt!54253))))))

(declare-fun d!29037 () Bool)

(declare-fun c!18505 () Bool)

(assert (=> d!29037 (= c!18505 (and ((_ is Cons!1613) lt!54253) (= (_1!1216 (h!2210 lt!54253)) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29037 (= (getValueByKey!156 lt!54253 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69078)))

(declare-fun b!106146 () Bool)

(assert (=> b!106146 (= e!69079 None!160)))

(declare-fun b!106144 () Bool)

(assert (=> b!106144 (= e!69078 e!69079)))

(declare-fun c!18506 () Bool)

(assert (=> b!106144 (= c!18506 (and ((_ is Cons!1613) lt!54253) (not (= (_1!1216 (h!2210 lt!54253)) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29037 c!18505) b!106143))

(assert (= (and d!29037 (not c!18505)) b!106144))

(assert (= (and b!106144 c!18506) b!106145))

(assert (= (and b!106144 (not c!18506)) b!106146))

(declare-fun m!118659 () Bool)

(assert (=> b!106145 m!118659))

(assert (=> d!28985 d!29037))

(declare-fun d!29039 () Bool)

(assert (=> d!29039 (= (getValueByKey!156 lt!54253 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54431 () Unit!3232)

(assert (=> d!29039 (= lt!54431 (choose!657 lt!54253 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69080 () Bool)

(assert (=> d!29039 e!69080))

(declare-fun res!52809 () Bool)

(assert (=> d!29039 (=> (not res!52809) (not e!69080))))

(assert (=> d!29039 (= res!52809 (isStrictlySorted!309 lt!54253))))

(assert (=> d!29039 (= (lemmaContainsTupThenGetReturnValue!72 lt!54253 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54431)))

(declare-fun b!106147 () Bool)

(declare-fun res!52810 () Bool)

(assert (=> b!106147 (=> (not res!52810) (not e!69080))))

(assert (=> b!106147 (= res!52810 (containsKey!160 lt!54253 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106148 () Bool)

(assert (=> b!106148 (= e!69080 (contains!830 lt!54253 (tuple2!2411 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29039 res!52809) b!106147))

(assert (= (and b!106147 res!52810) b!106148))

(assert (=> d!29039 m!118353))

(declare-fun m!118661 () Bool)

(assert (=> d!29039 m!118661))

(declare-fun m!118663 () Bool)

(assert (=> d!29039 m!118663))

(declare-fun m!118665 () Bool)

(assert (=> b!106147 m!118665))

(declare-fun m!118667 () Bool)

(assert (=> b!106148 m!118667))

(assert (=> d!28985 d!29039))

(declare-fun b!106149 () Bool)

(declare-fun e!69084 () List!1617)

(declare-fun e!69082 () List!1617)

(assert (=> b!106149 (= e!69084 e!69082)))

(declare-fun c!18508 () Bool)

(assert (=> b!106149 (= c!18508 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106150 () Bool)

(declare-fun call!11226 () List!1617)

(assert (=> b!106150 (= e!69084 call!11226)))

(declare-fun b!106152 () Bool)

(declare-fun e!69085 () List!1617)

(declare-fun call!11228 () List!1617)

(assert (=> b!106152 (= e!69085 call!11228)))

(declare-fun b!106153 () Bool)

(declare-fun c!18509 () Bool)

(assert (=> b!106153 (= c!18509 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) (bvsgt (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> b!106153 (= e!69082 e!69085)))

(declare-fun bm!11223 () Bool)

(declare-fun call!11227 () List!1617)

(assert (=> bm!11223 (= call!11228 call!11227)))

(declare-fun b!106154 () Bool)

(declare-fun e!69083 () List!1617)

(assert (=> b!106154 (= e!69083 (insertStrictlySorted!75 (t!5700 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106155 () Bool)

(assert (=> b!106155 (= e!69085 call!11228)))

(declare-fun b!106156 () Bool)

(declare-fun res!52812 () Bool)

(declare-fun e!69081 () Bool)

(assert (=> b!106156 (=> (not res!52812) (not e!69081))))

(declare-fun lt!54432 () List!1617)

(assert (=> b!106156 (= res!52812 (containsKey!160 lt!54432 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106157 () Bool)

(assert (=> b!106157 (= e!69081 (contains!830 lt!54432 (tuple2!2411 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106158 () Bool)

(assert (=> b!106158 (= e!69083 (ite c!18508 (t!5700 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) (ite c!18509 (Cons!1613 (h!2210 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) (t!5700 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))) Nil!1614)))))

(declare-fun d!29041 () Bool)

(assert (=> d!29041 e!69081))

(declare-fun res!52811 () Bool)

(assert (=> d!29041 (=> (not res!52811) (not e!69081))))

(assert (=> d!29041 (= res!52811 (isStrictlySorted!309 lt!54432))))

(assert (=> d!29041 (= lt!54432 e!69084)))

(declare-fun c!18507 () Bool)

(assert (=> d!29041 (= c!18507 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) (bvslt (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29041 (isStrictlySorted!309 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!29041 (= (insertStrictlySorted!75 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54432)))

(declare-fun b!106151 () Bool)

(assert (=> b!106151 (= e!69082 call!11227)))

(declare-fun bm!11224 () Bool)

(assert (=> bm!11224 (= call!11226 ($colon$colon!81 e!69083 (ite c!18507 (h!2210 (toList!803 (+!144 lt!53805 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) (tuple2!2411 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18510 () Bool)

(assert (=> bm!11224 (= c!18510 c!18507)))

(declare-fun bm!11225 () Bool)

(assert (=> bm!11225 (= call!11227 call!11226)))

(assert (= (and d!29041 c!18507) b!106150))

(assert (= (and d!29041 (not c!18507)) b!106149))

(assert (= (and b!106149 c!18508) b!106151))

(assert (= (and b!106149 (not c!18508)) b!106153))

(assert (= (and b!106153 c!18509) b!106155))

(assert (= (and b!106153 (not c!18509)) b!106152))

(assert (= (or b!106155 b!106152) bm!11223))

(assert (= (or b!106151 bm!11223) bm!11225))

(assert (= (or b!106150 bm!11225) bm!11224))

(assert (= (and bm!11224 c!18510) b!106154))

(assert (= (and bm!11224 (not c!18510)) b!106158))

(assert (= (and d!29041 res!52811) b!106156))

(assert (= (and b!106156 res!52812) b!106157))

(declare-fun m!118669 () Bool)

(assert (=> b!106154 m!118669))

(declare-fun m!118671 () Bool)

(assert (=> b!106157 m!118671))

(declare-fun m!118673 () Bool)

(assert (=> d!29041 m!118673))

(declare-fun m!118675 () Bool)

(assert (=> d!29041 m!118675))

(declare-fun m!118677 () Bool)

(assert (=> bm!11224 m!118677))

(declare-fun m!118679 () Bool)

(assert (=> b!106156 m!118679))

(assert (=> d!28985 d!29041))

(declare-fun d!29043 () Bool)

(declare-fun lt!54433 () Bool)

(assert (=> d!29043 (= lt!54433 (select (content!109 lt!53904) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun e!69087 () Bool)

(assert (=> d!29043 (= lt!54433 e!69087)))

(declare-fun res!52813 () Bool)

(assert (=> d!29043 (=> (not res!52813) (not e!69087))))

(assert (=> d!29043 (= res!52813 ((_ is Cons!1613) lt!53904))))

(assert (=> d!29043 (= (contains!830 lt!53904 (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))) lt!54433)))

(declare-fun b!106159 () Bool)

(declare-fun e!69086 () Bool)

(assert (=> b!106159 (= e!69087 e!69086)))

(declare-fun res!52814 () Bool)

(assert (=> b!106159 (=> res!52814 e!69086)))

(assert (=> b!106159 (= res!52814 (= (h!2210 lt!53904) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun b!106160 () Bool)

(assert (=> b!106160 (= e!69086 (contains!830 (t!5700 lt!53904) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(assert (= (and d!29043 res!52813) b!106159))

(assert (= (and b!106159 (not res!52814)) b!106160))

(declare-fun m!118681 () Bool)

(assert (=> d!29043 m!118681))

(declare-fun m!118683 () Bool)

(assert (=> d!29043 m!118683))

(declare-fun m!118685 () Bool)

(assert (=> b!106160 m!118685))

(assert (=> b!105752 d!29043))

(declare-fun d!29045 () Bool)

(declare-fun res!52815 () Bool)

(declare-fun e!69088 () Bool)

(assert (=> d!29045 (=> res!52815 e!69088)))

(assert (=> d!29045 (= res!52815 (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29045 (= (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!69088)))

(declare-fun b!106161 () Bool)

(declare-fun e!69089 () Bool)

(assert (=> b!106161 (= e!69088 e!69089)))

(declare-fun res!52816 () Bool)

(assert (=> b!106161 (=> (not res!52816) (not e!69089))))

(assert (=> b!106161 (= res!52816 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106162 () Bool)

(assert (=> b!106162 (= e!69089 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29045 (not res!52815)) b!106161))

(assert (= (and b!106161 res!52816) b!106162))

(declare-fun m!118687 () Bool)

(assert (=> d!29045 m!118687))

(assert (=> b!106162 m!117489))

(declare-fun m!118689 () Bool)

(assert (=> b!106162 m!118689))

(assert (=> b!106109 d!29045))

(assert (=> d!28993 d!28985))

(assert (=> d!28993 d!28989))

(assert (=> d!28993 d!28991))

(assert (=> d!28993 d!28987))

(declare-fun d!29047 () Bool)

(assert (=> d!29047 (= (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106095 d!29047))

(declare-fun d!29049 () Bool)

(assert (=> d!29049 (= (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105855 d!29049))

(declare-fun d!29051 () Bool)

(declare-fun e!69091 () Bool)

(assert (=> d!29051 e!69091))

(declare-fun res!52817 () Bool)

(assert (=> d!29051 (=> res!52817 e!69091)))

(declare-fun lt!54436 () Bool)

(assert (=> d!29051 (= res!52817 (not lt!54436))))

(declare-fun lt!54434 () Bool)

(assert (=> d!29051 (= lt!54436 lt!54434)))

(declare-fun lt!54435 () Unit!3232)

(declare-fun e!69090 () Unit!3232)

(assert (=> d!29051 (= lt!54435 e!69090)))

(declare-fun c!18511 () Bool)

(assert (=> d!29051 (= c!18511 lt!54434)))

(assert (=> d!29051 (= lt!54434 (containsKey!160 (toList!803 lt!54133) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29051 (= (contains!828 lt!54133 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54436)))

(declare-fun b!106163 () Bool)

(declare-fun lt!54437 () Unit!3232)

(assert (=> b!106163 (= e!69090 lt!54437)))

(assert (=> b!106163 (= lt!54437 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54133) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106163 (isDefined!109 (getValueByKey!156 (toList!803 lt!54133) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106164 () Bool)

(declare-fun Unit!3266 () Unit!3232)

(assert (=> b!106164 (= e!69090 Unit!3266)))

(declare-fun b!106165 () Bool)

(assert (=> b!106165 (= e!69091 (isDefined!109 (getValueByKey!156 (toList!803 lt!54133) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29051 c!18511) b!106163))

(assert (= (and d!29051 (not c!18511)) b!106164))

(assert (= (and d!29051 (not res!52817)) b!106165))

(declare-fun m!118691 () Bool)

(assert (=> d!29051 m!118691))

(declare-fun m!118693 () Bool)

(assert (=> b!106163 m!118693))

(assert (=> b!106163 m!118011))

(assert (=> b!106163 m!118011))

(declare-fun m!118695 () Bool)

(assert (=> b!106163 m!118695))

(assert (=> b!106165 m!118011))

(assert (=> b!106165 m!118011))

(assert (=> b!106165 m!118695))

(assert (=> d!28881 d!29051))

(declare-fun b!106168 () Bool)

(declare-fun e!69093 () Option!162)

(assert (=> b!106168 (= e!69093 (getValueByKey!156 (t!5700 lt!54135) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106166 () Bool)

(declare-fun e!69092 () Option!162)

(assert (=> b!106166 (= e!69092 (Some!161 (_2!1216 (h!2210 lt!54135))))))

(declare-fun d!29053 () Bool)

(declare-fun c!18512 () Bool)

(assert (=> d!29053 (= c!18512 (and ((_ is Cons!1613) lt!54135) (= (_1!1216 (h!2210 lt!54135)) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29053 (= (getValueByKey!156 lt!54135 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69092)))

(declare-fun b!106169 () Bool)

(assert (=> b!106169 (= e!69093 None!160)))

(declare-fun b!106167 () Bool)

(assert (=> b!106167 (= e!69092 e!69093)))

(declare-fun c!18513 () Bool)

(assert (=> b!106167 (= c!18513 (and ((_ is Cons!1613) lt!54135) (not (= (_1!1216 (h!2210 lt!54135)) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29053 c!18512) b!106166))

(assert (= (and d!29053 (not c!18512)) b!106167))

(assert (= (and b!106167 c!18513) b!106168))

(assert (= (and b!106167 (not c!18513)) b!106169))

(declare-fun m!118697 () Bool)

(assert (=> b!106168 m!118697))

(assert (=> d!28881 d!29053))

(declare-fun d!29055 () Bool)

(assert (=> d!29055 (= (getValueByKey!156 lt!54135 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54438 () Unit!3232)

(assert (=> d!29055 (= lt!54438 (choose!657 lt!54135 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69094 () Bool)

(assert (=> d!29055 e!69094))

(declare-fun res!52818 () Bool)

(assert (=> d!29055 (=> (not res!52818) (not e!69094))))

(assert (=> d!29055 (= res!52818 (isStrictlySorted!309 lt!54135))))

(assert (=> d!29055 (= (lemmaContainsTupThenGetReturnValue!72 lt!54135 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54438)))

(declare-fun b!106170 () Bool)

(declare-fun res!52819 () Bool)

(assert (=> b!106170 (=> (not res!52819) (not e!69094))))

(assert (=> b!106170 (= res!52819 (containsKey!160 lt!54135 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106171 () Bool)

(assert (=> b!106171 (= e!69094 (contains!830 lt!54135 (tuple2!2411 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29055 res!52818) b!106170))

(assert (= (and b!106170 res!52819) b!106171))

(assert (=> d!29055 m!118005))

(declare-fun m!118699 () Bool)

(assert (=> d!29055 m!118699))

(declare-fun m!118701 () Bool)

(assert (=> d!29055 m!118701))

(declare-fun m!118703 () Bool)

(assert (=> b!106170 m!118703))

(declare-fun m!118705 () Bool)

(assert (=> b!106171 m!118705))

(assert (=> d!28881 d!29055))

(declare-fun b!106172 () Bool)

(declare-fun e!69098 () List!1617)

(declare-fun e!69096 () List!1617)

(assert (=> b!106172 (= e!69098 e!69096)))

(declare-fun c!18515 () Bool)

(assert (=> b!106172 (= c!18515 (and ((_ is Cons!1613) (toList!803 call!11085)) (= (_1!1216 (h!2210 (toList!803 call!11085))) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106173 () Bool)

(declare-fun call!11229 () List!1617)

(assert (=> b!106173 (= e!69098 call!11229)))

(declare-fun b!106175 () Bool)

(declare-fun e!69099 () List!1617)

(declare-fun call!11231 () List!1617)

(assert (=> b!106175 (= e!69099 call!11231)))

(declare-fun b!106176 () Bool)

(declare-fun c!18516 () Bool)

(assert (=> b!106176 (= c!18516 (and ((_ is Cons!1613) (toList!803 call!11085)) (bvsgt (_1!1216 (h!2210 (toList!803 call!11085))) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> b!106176 (= e!69096 e!69099)))

(declare-fun bm!11226 () Bool)

(declare-fun call!11230 () List!1617)

(assert (=> bm!11226 (= call!11231 call!11230)))

(declare-fun b!106177 () Bool)

(declare-fun e!69097 () List!1617)

(assert (=> b!106177 (= e!69097 (insertStrictlySorted!75 (t!5700 (toList!803 call!11085)) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106178 () Bool)

(assert (=> b!106178 (= e!69099 call!11231)))

(declare-fun b!106179 () Bool)

(declare-fun res!52821 () Bool)

(declare-fun e!69095 () Bool)

(assert (=> b!106179 (=> (not res!52821) (not e!69095))))

(declare-fun lt!54439 () List!1617)

(assert (=> b!106179 (= res!52821 (containsKey!160 lt!54439 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106180 () Bool)

(assert (=> b!106180 (= e!69095 (contains!830 lt!54439 (tuple2!2411 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106181 () Bool)

(assert (=> b!106181 (= e!69097 (ite c!18515 (t!5700 (toList!803 call!11085)) (ite c!18516 (Cons!1613 (h!2210 (toList!803 call!11085)) (t!5700 (toList!803 call!11085))) Nil!1614)))))

(declare-fun d!29057 () Bool)

(assert (=> d!29057 e!69095))

(declare-fun res!52820 () Bool)

(assert (=> d!29057 (=> (not res!52820) (not e!69095))))

(assert (=> d!29057 (= res!52820 (isStrictlySorted!309 lt!54439))))

(assert (=> d!29057 (= lt!54439 e!69098)))

(declare-fun c!18514 () Bool)

(assert (=> d!29057 (= c!18514 (and ((_ is Cons!1613) (toList!803 call!11085)) (bvslt (_1!1216 (h!2210 (toList!803 call!11085))) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29057 (isStrictlySorted!309 (toList!803 call!11085))))

(assert (=> d!29057 (= (insertStrictlySorted!75 (toList!803 call!11085) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54439)))

(declare-fun b!106174 () Bool)

(assert (=> b!106174 (= e!69096 call!11230)))

(declare-fun bm!11227 () Bool)

(assert (=> bm!11227 (= call!11229 ($colon$colon!81 e!69097 (ite c!18514 (h!2210 (toList!803 call!11085)) (tuple2!2411 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18517 () Bool)

(assert (=> bm!11227 (= c!18517 c!18514)))

(declare-fun bm!11228 () Bool)

(assert (=> bm!11228 (= call!11230 call!11229)))

(assert (= (and d!29057 c!18514) b!106173))

(assert (= (and d!29057 (not c!18514)) b!106172))

(assert (= (and b!106172 c!18515) b!106174))

(assert (= (and b!106172 (not c!18515)) b!106176))

(assert (= (and b!106176 c!18516) b!106178))

(assert (= (and b!106176 (not c!18516)) b!106175))

(assert (= (or b!106178 b!106175) bm!11226))

(assert (= (or b!106174 bm!11226) bm!11228))

(assert (= (or b!106173 bm!11228) bm!11227))

(assert (= (and bm!11227 c!18517) b!106177))

(assert (= (and bm!11227 (not c!18517)) b!106181))

(assert (= (and d!29057 res!52820) b!106179))

(assert (= (and b!106179 res!52821) b!106180))

(declare-fun m!118707 () Bool)

(assert (=> b!106177 m!118707))

(declare-fun m!118709 () Bool)

(assert (=> b!106180 m!118709))

(declare-fun m!118711 () Bool)

(assert (=> d!29057 m!118711))

(declare-fun m!118713 () Bool)

(assert (=> d!29057 m!118713))

(declare-fun m!118715 () Bool)

(assert (=> bm!11227 m!118715))

(declare-fun m!118717 () Bool)

(assert (=> b!106179 m!118717))

(assert (=> d!28881 d!29057))

(declare-fun d!29059 () Bool)

(assert (=> d!29059 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4359 () Bool)

(assert (= bs!4359 d!29059))

(assert (=> bs!4359 m!117955))

(declare-fun m!118719 () Bool)

(assert (=> bs!4359 m!118719))

(assert (=> b!105728 d!29059))

(declare-fun b!106184 () Bool)

(declare-fun e!69101 () Option!162)

(assert (=> b!106184 (= e!69101 (getValueByKey!156 (t!5700 (toList!803 lt!53958)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106182 () Bool)

(declare-fun e!69100 () Option!162)

(assert (=> b!106182 (= e!69100 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53958)))))))

(declare-fun d!29061 () Bool)

(declare-fun c!18518 () Bool)

(assert (=> d!29061 (= c!18518 (and ((_ is Cons!1613) (toList!803 lt!53958)) (= (_1!1216 (h!2210 (toList!803 lt!53958))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29061 (= (getValueByKey!156 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000) e!69100)))

(declare-fun b!106185 () Bool)

(assert (=> b!106185 (= e!69101 None!160)))

(declare-fun b!106183 () Bool)

(assert (=> b!106183 (= e!69100 e!69101)))

(declare-fun c!18519 () Bool)

(assert (=> b!106183 (= c!18519 (and ((_ is Cons!1613) (toList!803 lt!53958)) (not (= (_1!1216 (h!2210 (toList!803 lt!53958))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!29061 c!18518) b!106182))

(assert (= (and d!29061 (not c!18518)) b!106183))

(assert (= (and b!106183 c!18519) b!106184))

(assert (= (and b!106183 (not c!18519)) b!106185))

(declare-fun m!118721 () Bool)

(assert (=> b!106184 m!118721))

(assert (=> b!105728 d!29061))

(declare-fun b!106188 () Bool)

(declare-fun e!69103 () Option!162)

(assert (=> b!106188 (= e!69103 (getValueByKey!156 (t!5700 (t!5700 lt!53897)) (_1!1216 lt!53814)))))

(declare-fun b!106186 () Bool)

(declare-fun e!69102 () Option!162)

(assert (=> b!106186 (= e!69102 (Some!161 (_2!1216 (h!2210 (t!5700 lt!53897)))))))

(declare-fun d!29063 () Bool)

(declare-fun c!18520 () Bool)

(assert (=> d!29063 (= c!18520 (and ((_ is Cons!1613) (t!5700 lt!53897)) (= (_1!1216 (h!2210 (t!5700 lt!53897))) (_1!1216 lt!53814))))))

(assert (=> d!29063 (= (getValueByKey!156 (t!5700 lt!53897) (_1!1216 lt!53814)) e!69102)))

(declare-fun b!106189 () Bool)

(assert (=> b!106189 (= e!69103 None!160)))

(declare-fun b!106187 () Bool)

(assert (=> b!106187 (= e!69102 e!69103)))

(declare-fun c!18521 () Bool)

(assert (=> b!106187 (= c!18521 (and ((_ is Cons!1613) (t!5700 lt!53897)) (not (= (_1!1216 (h!2210 (t!5700 lt!53897))) (_1!1216 lt!53814)))))))

(assert (= (and d!29063 c!18520) b!106186))

(assert (= (and d!29063 (not c!18520)) b!106187))

(assert (= (and b!106187 c!18521) b!106188))

(assert (= (and b!106187 (not c!18521)) b!106189))

(declare-fun m!118723 () Bool)

(assert (=> b!106188 m!118723))

(assert (=> b!105943 d!29063))

(declare-fun b!106192 () Bool)

(declare-fun res!52822 () Bool)

(declare-fun e!69104 () Bool)

(assert (=> b!106192 (=> (not res!52822) (not e!69104))))

(assert (=> b!106192 (= res!52822 (= (size!2322 (v!2892 (underlying!361 thiss!992))) (bvadd (_size!499 (v!2892 (underlying!361 thiss!992))) (bvsdiv (bvadd (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!106193 () Bool)

(assert (=> b!106193 (= e!69104 (and (bvsge (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!499 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!29065 () Bool)

(declare-fun res!52823 () Bool)

(assert (=> d!29065 (=> (not res!52823) (not e!69104))))

(assert (=> d!29065 (= res!52823 (validMask!0 (mask!6728 (v!2892 (underlying!361 thiss!992)))))))

(assert (=> d!29065 (= (simpleValid!74 (v!2892 (underlying!361 thiss!992))) e!69104)))

(declare-fun b!106191 () Bool)

(declare-fun res!52825 () Bool)

(assert (=> b!106191 (=> (not res!52825) (not e!69104))))

(assert (=> b!106191 (= res!52825 (bvsge (size!2322 (v!2892 (underlying!361 thiss!992))) (_size!499 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!106190 () Bool)

(declare-fun res!52824 () Bool)

(assert (=> b!106190 (=> (not res!52824) (not e!69104))))

(assert (=> b!106190 (= res!52824 (and (= (size!2319 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001)) (= (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (size!2319 (_values!2565 (v!2892 (underlying!361 thiss!992))))) (bvsge (_size!499 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!499 (v!2892 (underlying!361 thiss!992))) (bvadd (mask!6728 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!29065 res!52823) b!106190))

(assert (= (and b!106190 res!52824) b!106191))

(assert (= (and b!106191 res!52825) b!106192))

(assert (= (and b!106192 res!52822) b!106193))

(declare-fun m!118725 () Bool)

(assert (=> b!106192 m!118725))

(assert (=> d!29065 m!117517))

(assert (=> b!106191 m!118725))

(assert (=> d!28983 d!29065))

(declare-fun d!29067 () Bool)

(declare-fun e!69106 () Bool)

(assert (=> d!29067 e!69106))

(declare-fun res!52826 () Bool)

(assert (=> d!29067 (=> res!52826 e!69106)))

(declare-fun lt!54442 () Bool)

(assert (=> d!29067 (= res!52826 (not lt!54442))))

(declare-fun lt!54440 () Bool)

(assert (=> d!29067 (= lt!54442 lt!54440)))

(declare-fun lt!54441 () Unit!3232)

(declare-fun e!69105 () Unit!3232)

(assert (=> d!29067 (= lt!54441 e!69105)))

(declare-fun c!18522 () Bool)

(assert (=> d!29067 (= c!18522 lt!54440)))

(assert (=> d!29067 (= lt!54440 (containsKey!160 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))))))

(assert (=> d!29067 (= (contains!828 (getCurrentListMap!489 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))) lt!54442)))

(declare-fun b!106194 () Bool)

(declare-fun lt!54443 () Unit!3232)

(assert (=> b!106194 (= e!69105 lt!54443)))

(assert (=> b!106194 (= lt!54443 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))))))

(assert (=> b!106194 (isDefined!109 (getValueByKey!156 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))))))

(declare-fun b!106195 () Bool)

(declare-fun Unit!3267 () Unit!3232)

(assert (=> b!106195 (= e!69105 Unit!3267)))

(declare-fun b!106196 () Bool)

(assert (=> b!106196 (= e!69106 (isDefined!109 (getValueByKey!156 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))

(assert (= (and d!29067 c!18522) b!106194))

(assert (= (and d!29067 (not c!18522)) b!106195))

(assert (= (and d!29067 (not res!52826)) b!106196))

(assert (=> d!29067 m!117797))

(declare-fun m!118727 () Bool)

(assert (=> d!29067 m!118727))

(assert (=> b!106194 m!117797))

(declare-fun m!118729 () Bool)

(assert (=> b!106194 m!118729))

(assert (=> b!106194 m!117797))

(declare-fun m!118731 () Bool)

(assert (=> b!106194 m!118731))

(assert (=> b!106194 m!118731))

(declare-fun m!118733 () Bool)

(assert (=> b!106194 m!118733))

(assert (=> b!106196 m!117797))

(assert (=> b!106196 m!118731))

(assert (=> b!106196 m!118731))

(assert (=> b!106196 m!118733))

(assert (=> b!105928 d!29067))

(declare-fun bm!11229 () Bool)

(declare-fun call!11235 () Bool)

(declare-fun lt!54449 () ListLongMap!1575)

(assert (=> bm!11229 (= call!11235 (contains!828 lt!54449 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11230 () Bool)

(declare-fun call!11238 () ListLongMap!1575)

(declare-fun call!11233 () ListLongMap!1575)

(assert (=> bm!11230 (= call!11238 call!11233)))

(declare-fun b!106197 () Bool)

(declare-fun e!69108 () Unit!3232)

(declare-fun lt!54465 () Unit!3232)

(assert (=> b!106197 (= e!69108 lt!54465)))

(declare-fun lt!54447 () ListLongMap!1575)

(assert (=> b!106197 (= lt!54447 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54457 () (_ BitVec 64))

(assert (=> b!106197 (= lt!54457 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54445 () (_ BitVec 64))

(assert (=> b!106197 (= lt!54445 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54460 () Unit!3232)

(assert (=> b!106197 (= lt!54460 (addStillContains!74 lt!54447 lt!54457 (zeroValue!2457 newMap!16) lt!54445))))

(assert (=> b!106197 (contains!828 (+!144 lt!54447 (tuple2!2411 lt!54457 (zeroValue!2457 newMap!16))) lt!54445)))

(declare-fun lt!54459 () Unit!3232)

(assert (=> b!106197 (= lt!54459 lt!54460)))

(declare-fun lt!54462 () ListLongMap!1575)

(assert (=> b!106197 (= lt!54462 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54446 () (_ BitVec 64))

(assert (=> b!106197 (= lt!54446 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54444 () (_ BitVec 64))

(assert (=> b!106197 (= lt!54444 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54463 () Unit!3232)

(assert (=> b!106197 (= lt!54463 (addApplyDifferent!74 lt!54462 lt!54446 (minValue!2457 newMap!16) lt!54444))))

(assert (=> b!106197 (= (apply!98 (+!144 lt!54462 (tuple2!2411 lt!54446 (minValue!2457 newMap!16))) lt!54444) (apply!98 lt!54462 lt!54444))))

(declare-fun lt!54456 () Unit!3232)

(assert (=> b!106197 (= lt!54456 lt!54463)))

(declare-fun lt!54454 () ListLongMap!1575)

(assert (=> b!106197 (= lt!54454 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54458 () (_ BitVec 64))

(assert (=> b!106197 (= lt!54458 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54448 () (_ BitVec 64))

(assert (=> b!106197 (= lt!54448 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54455 () Unit!3232)

(assert (=> b!106197 (= lt!54455 (addApplyDifferent!74 lt!54454 lt!54458 (zeroValue!2457 newMap!16) lt!54448))))

(assert (=> b!106197 (= (apply!98 (+!144 lt!54454 (tuple2!2411 lt!54458 (zeroValue!2457 newMap!16))) lt!54448) (apply!98 lt!54454 lt!54448))))

(declare-fun lt!54464 () Unit!3232)

(assert (=> b!106197 (= lt!54464 lt!54455)))

(declare-fun lt!54450 () ListLongMap!1575)

(assert (=> b!106197 (= lt!54450 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54452 () (_ BitVec 64))

(assert (=> b!106197 (= lt!54452 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54461 () (_ BitVec 64))

(assert (=> b!106197 (= lt!54461 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106197 (= lt!54465 (addApplyDifferent!74 lt!54450 lt!54452 (minValue!2457 newMap!16) lt!54461))))

(assert (=> b!106197 (= (apply!98 (+!144 lt!54450 (tuple2!2411 lt!54452 (minValue!2457 newMap!16))) lt!54461) (apply!98 lt!54450 lt!54461))))

(declare-fun bm!11231 () Bool)

(declare-fun call!11232 () ListLongMap!1575)

(assert (=> bm!11231 (= call!11233 call!11232)))

(declare-fun bm!11232 () Bool)

(declare-fun call!11236 () Bool)

(assert (=> bm!11232 (= call!11236 (contains!828 lt!54449 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106198 () Bool)

(declare-fun res!52833 () Bool)

(declare-fun e!69107 () Bool)

(assert (=> b!106198 (=> (not res!52833) (not e!69107))))

(declare-fun e!69116 () Bool)

(assert (=> b!106198 (= res!52833 e!69116)))

(declare-fun res!52834 () Bool)

(assert (=> b!106198 (=> res!52834 e!69116)))

(declare-fun e!69113 () Bool)

(assert (=> b!106198 (= res!52834 (not e!69113))))

(declare-fun res!52831 () Bool)

(assert (=> b!106198 (=> (not res!52831) (not e!69113))))

(assert (=> b!106198 (= res!52831 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106199 () Bool)

(declare-fun e!69117 () ListLongMap!1575)

(declare-fun call!11237 () ListLongMap!1575)

(assert (=> b!106199 (= e!69117 (+!144 call!11237 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(declare-fun bm!11233 () Bool)

(declare-fun call!11234 () ListLongMap!1575)

(assert (=> bm!11233 (= call!11234 call!11237)))

(declare-fun b!106200 () Bool)

(declare-fun e!69118 () Bool)

(assert (=> b!106200 (= e!69107 e!69118)))

(declare-fun c!18526 () Bool)

(assert (=> b!106200 (= c!18526 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106201 () Bool)

(declare-fun e!69115 () Bool)

(assert (=> b!106201 (= e!69115 (= (apply!98 lt!54449 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!106202 () Bool)

(declare-fun Unit!3268 () Unit!3232)

(assert (=> b!106202 (= e!69108 Unit!3268)))

(declare-fun b!106203 () Bool)

(assert (=> b!106203 (= e!69118 (not call!11235))))

(declare-fun b!106204 () Bool)

(declare-fun e!69119 () Bool)

(declare-fun e!69112 () Bool)

(assert (=> b!106204 (= e!69119 e!69112)))

(declare-fun res!52829 () Bool)

(assert (=> b!106204 (= res!52829 call!11236)))

(assert (=> b!106204 (=> (not res!52829) (not e!69112))))

(declare-fun d!29069 () Bool)

(assert (=> d!29069 e!69107))

(declare-fun res!52832 () Bool)

(assert (=> d!29069 (=> (not res!52832) (not e!69107))))

(assert (=> d!29069 (= res!52832 (or (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))))

(declare-fun lt!54451 () ListLongMap!1575)

(assert (=> d!29069 (= lt!54449 lt!54451)))

(declare-fun lt!54453 () Unit!3232)

(assert (=> d!29069 (= lt!54453 e!69108)))

(declare-fun c!18523 () Bool)

(declare-fun e!69114 () Bool)

(assert (=> d!29069 (= c!18523 e!69114)))

(declare-fun res!52835 () Bool)

(assert (=> d!29069 (=> (not res!52835) (not e!69114))))

(assert (=> d!29069 (= res!52835 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29069 (= lt!54451 e!69117)))

(declare-fun c!18525 () Bool)

(assert (=> d!29069 (= c!18525 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29069 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29069 (= (getCurrentListMap!489 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54449)))

(declare-fun b!106205 () Bool)

(assert (=> b!106205 (= e!69113 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106206 () Bool)

(assert (=> b!106206 (= e!69119 (not call!11236))))

(declare-fun b!106207 () Bool)

(declare-fun e!69111 () ListLongMap!1575)

(assert (=> b!106207 (= e!69111 call!11234)))

(declare-fun b!106208 () Bool)

(declare-fun e!69110 () Bool)

(assert (=> b!106208 (= e!69110 (= (apply!98 lt!54449 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 lt!54058) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106208 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 lt!54058)))))

(assert (=> b!106208 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106209 () Bool)

(assert (=> b!106209 (= e!69112 (= (apply!98 lt!54449 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun bm!11234 () Bool)

(assert (=> bm!11234 (= call!11232 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!106210 () Bool)

(assert (=> b!106210 (= e!69117 e!69111)))

(declare-fun c!18528 () Bool)

(assert (=> b!106210 (= c!18528 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106211 () Bool)

(declare-fun res!52830 () Bool)

(assert (=> b!106211 (=> (not res!52830) (not e!69107))))

(assert (=> b!106211 (= res!52830 e!69119)))

(declare-fun c!18527 () Bool)

(assert (=> b!106211 (= c!18527 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106212 () Bool)

(declare-fun e!69109 () ListLongMap!1575)

(assert (=> b!106212 (= e!69109 call!11234)))

(declare-fun bm!11235 () Bool)

(assert (=> bm!11235 (= call!11237 (+!144 (ite c!18525 call!11232 (ite c!18528 call!11233 call!11238)) (ite (or c!18525 c!18528) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!106213 () Bool)

(declare-fun c!18524 () Bool)

(assert (=> b!106213 (= c!18524 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106213 (= e!69111 e!69109)))

(declare-fun b!106214 () Bool)

(assert (=> b!106214 (= e!69118 e!69115)))

(declare-fun res!52827 () Bool)

(assert (=> b!106214 (= res!52827 call!11235)))

(assert (=> b!106214 (=> (not res!52827) (not e!69115))))

(declare-fun b!106215 () Bool)

(assert (=> b!106215 (= e!69109 call!11238)))

(declare-fun b!106216 () Bool)

(assert (=> b!106216 (= e!69114 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106217 () Bool)

(assert (=> b!106217 (= e!69116 e!69110)))

(declare-fun res!52828 () Bool)

(assert (=> b!106217 (=> (not res!52828) (not e!69110))))

(assert (=> b!106217 (= res!52828 (contains!828 lt!54449 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106217 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!29069 c!18525) b!106199))

(assert (= (and d!29069 (not c!18525)) b!106210))

(assert (= (and b!106210 c!18528) b!106207))

(assert (= (and b!106210 (not c!18528)) b!106213))

(assert (= (and b!106213 c!18524) b!106212))

(assert (= (and b!106213 (not c!18524)) b!106215))

(assert (= (or b!106212 b!106215) bm!11230))

(assert (= (or b!106207 bm!11230) bm!11231))

(assert (= (or b!106207 b!106212) bm!11233))

(assert (= (or b!106199 bm!11231) bm!11234))

(assert (= (or b!106199 bm!11233) bm!11235))

(assert (= (and d!29069 res!52835) b!106216))

(assert (= (and d!29069 c!18523) b!106197))

(assert (= (and d!29069 (not c!18523)) b!106202))

(assert (= (and d!29069 res!52832) b!106198))

(assert (= (and b!106198 res!52831) b!106205))

(assert (= (and b!106198 (not res!52834)) b!106217))

(assert (= (and b!106217 res!52828) b!106208))

(assert (= (and b!106198 res!52833) b!106211))

(assert (= (and b!106211 c!18527) b!106204))

(assert (= (and b!106211 (not c!18527)) b!106206))

(assert (= (and b!106204 res!52829) b!106209))

(assert (= (or b!106204 b!106206) bm!11232))

(assert (= (and b!106211 res!52830) b!106200))

(assert (= (and b!106200 c!18526) b!106214))

(assert (= (and b!106200 (not c!18526)) b!106203))

(assert (= (and b!106214 res!52827) b!106201))

(assert (= (or b!106214 b!106203) bm!11229))

(declare-fun b_lambda!4753 () Bool)

(assert (=> (not b_lambda!4753) (not b!106208)))

(assert (=> b!106208 t!5708))

(declare-fun b_and!6551 () Bool)

(assert (= b_and!6547 (and (=> t!5708 result!3463) b_and!6551)))

(assert (=> b!106208 t!5710))

(declare-fun b_and!6553 () Bool)

(assert (= b_and!6549 (and (=> t!5710 result!3465) b_and!6553)))

(assert (=> d!29069 m!117933))

(assert (=> b!106208 m!118103))

(declare-fun m!118735 () Bool)

(assert (=> b!106208 m!118735))

(assert (=> b!106208 m!118149))

(declare-fun m!118737 () Bool)

(assert (=> b!106208 m!118737))

(assert (=> b!106208 m!118149))

(declare-fun m!118739 () Bool)

(assert (=> b!106208 m!118739))

(assert (=> b!106208 m!118103))

(assert (=> b!106208 m!118737))

(declare-fun m!118741 () Bool)

(assert (=> b!106209 m!118741))

(declare-fun m!118743 () Bool)

(assert (=> bm!11232 m!118743))

(declare-fun m!118745 () Bool)

(assert (=> bm!11235 m!118745))

(declare-fun m!118747 () Bool)

(assert (=> b!106201 m!118747))

(assert (=> b!106205 m!118103))

(assert (=> b!106205 m!118103))

(assert (=> b!106205 m!118163))

(declare-fun m!118749 () Bool)

(assert (=> bm!11234 m!118749))

(assert (=> b!106217 m!118103))

(assert (=> b!106217 m!118103))

(declare-fun m!118751 () Bool)

(assert (=> b!106217 m!118751))

(assert (=> b!106216 m!118103))

(assert (=> b!106216 m!118103))

(assert (=> b!106216 m!118163))

(declare-fun m!118753 () Bool)

(assert (=> b!106199 m!118753))

(declare-fun m!118755 () Bool)

(assert (=> bm!11229 m!118755))

(declare-fun m!118757 () Bool)

(assert (=> b!106197 m!118757))

(declare-fun m!118759 () Bool)

(assert (=> b!106197 m!118759))

(declare-fun m!118761 () Bool)

(assert (=> b!106197 m!118761))

(declare-fun m!118763 () Bool)

(assert (=> b!106197 m!118763))

(declare-fun m!118765 () Bool)

(assert (=> b!106197 m!118765))

(declare-fun m!118767 () Bool)

(assert (=> b!106197 m!118767))

(declare-fun m!118769 () Bool)

(assert (=> b!106197 m!118769))

(declare-fun m!118771 () Bool)

(assert (=> b!106197 m!118771))

(assert (=> b!106197 m!118749))

(declare-fun m!118773 () Bool)

(assert (=> b!106197 m!118773))

(declare-fun m!118775 () Bool)

(assert (=> b!106197 m!118775))

(declare-fun m!118777 () Bool)

(assert (=> b!106197 m!118777))

(assert (=> b!106197 m!118759))

(assert (=> b!106197 m!118103))

(assert (=> b!106197 m!118775))

(declare-fun m!118779 () Bool)

(assert (=> b!106197 m!118779))

(assert (=> b!106197 m!118763))

(declare-fun m!118781 () Bool)

(assert (=> b!106197 m!118781))

(assert (=> b!106197 m!118769))

(declare-fun m!118783 () Bool)

(assert (=> b!106197 m!118783))

(declare-fun m!118785 () Bool)

(assert (=> b!106197 m!118785))

(assert (=> b!105928 d!29069))

(declare-fun d!29071 () Bool)

(assert (=> d!29071 (= (apply!98 lt!54392 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1334 (getValueByKey!156 (toList!803 lt!54392) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4360 () Bool)

(assert (= bs!4360 d!29071))

(assert (=> bs!4360 m!118545))

(declare-fun m!118787 () Bool)

(assert (=> bs!4360 m!118787))

(assert (=> bs!4360 m!118787))

(declare-fun m!118789 () Bool)

(assert (=> bs!4360 m!118789))

(assert (=> b!106081 d!29071))

(declare-fun d!29073 () Bool)

(declare-fun c!18529 () Bool)

(assert (=> d!29073 (= c!18529 ((_ is ValueCellFull!996) (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!69120 () V!3219)

(assert (=> d!29073 (= (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69120)))

(declare-fun b!106218 () Bool)

(assert (=> b!106218 (= e!69120 (get!1332 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106219 () Bool)

(assert (=> b!106219 (= e!69120 (get!1333 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29073 c!18529) b!106218))

(assert (= (and d!29073 (not c!18529)) b!106219))

(assert (=> b!106218 m!118549))

(assert (=> b!106218 m!117499))

(declare-fun m!118791 () Bool)

(assert (=> b!106218 m!118791))

(assert (=> b!106219 m!118549))

(assert (=> b!106219 m!117499))

(declare-fun m!118793 () Bool)

(assert (=> b!106219 m!118793))

(assert (=> b!106081 d!29073))

(declare-fun d!29075 () Bool)

(assert (=> d!29075 (arrayContainsKey!0 (_keys!4288 newMap!16) lt!54402 #b00000000000000000000000000000000)))

(declare-fun lt!54468 () Unit!3232)

(declare-fun choose!13 (array!4349 (_ BitVec 64) (_ BitVec 32)) Unit!3232)

(assert (=> d!29075 (= lt!54468 (choose!13 (_keys!4288 newMap!16) lt!54402 #b00000000000000000000000000000000))))

(assert (=> d!29075 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!29075 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4288 newMap!16) lt!54402 #b00000000000000000000000000000000) lt!54468)))

(declare-fun bs!4361 () Bool)

(assert (= bs!4361 d!29075))

(assert (=> bs!4361 m!118583))

(declare-fun m!118795 () Bool)

(assert (=> bs!4361 m!118795))

(assert (=> b!106106 d!29075))

(declare-fun d!29077 () Bool)

(declare-fun res!52836 () Bool)

(declare-fun e!69121 () Bool)

(assert (=> d!29077 (=> res!52836 e!69121)))

(assert (=> d!29077 (= res!52836 (= (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) lt!54402))))

(assert (=> d!29077 (= (arrayContainsKey!0 (_keys!4288 newMap!16) lt!54402 #b00000000000000000000000000000000) e!69121)))

(declare-fun b!106220 () Bool)

(declare-fun e!69122 () Bool)

(assert (=> b!106220 (= e!69121 e!69122)))

(declare-fun res!52837 () Bool)

(assert (=> b!106220 (=> (not res!52837) (not e!69122))))

(assert (=> b!106220 (= res!52837 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106221 () Bool)

(assert (=> b!106221 (= e!69122 (arrayContainsKey!0 (_keys!4288 newMap!16) lt!54402 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!29077 (not res!52836)) b!106220))

(assert (= (and b!106220 res!52837) b!106221))

(assert (=> d!29077 m!118103))

(declare-fun m!118797 () Bool)

(assert (=> b!106221 m!118797))

(assert (=> b!106106 d!29077))

(declare-fun b!106222 () Bool)

(declare-fun e!69124 () SeekEntryResult!259)

(declare-fun lt!54471 () SeekEntryResult!259)

(assert (=> b!106222 (= e!69124 (Found!259 (index!3186 lt!54471)))))

(declare-fun b!106223 () Bool)

(declare-fun e!69125 () SeekEntryResult!259)

(assert (=> b!106223 (= e!69125 (seekKeyOrZeroReturnVacant!0 (x!13645 lt!54471) (index!3186 lt!54471) (index!3186 lt!54471) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun d!29079 () Bool)

(declare-fun lt!54470 () SeekEntryResult!259)

(assert (=> d!29079 (and (or ((_ is Undefined!259) lt!54470) (not ((_ is Found!259) lt!54470)) (and (bvsge (index!3185 lt!54470) #b00000000000000000000000000000000) (bvslt (index!3185 lt!54470) (size!2318 (_keys!4288 newMap!16))))) (or ((_ is Undefined!259) lt!54470) ((_ is Found!259) lt!54470) (not ((_ is MissingZero!259) lt!54470)) (and (bvsge (index!3184 lt!54470) #b00000000000000000000000000000000) (bvslt (index!3184 lt!54470) (size!2318 (_keys!4288 newMap!16))))) (or ((_ is Undefined!259) lt!54470) ((_ is Found!259) lt!54470) ((_ is MissingZero!259) lt!54470) (not ((_ is MissingVacant!259) lt!54470)) (and (bvsge (index!3187 lt!54470) #b00000000000000000000000000000000) (bvslt (index!3187 lt!54470) (size!2318 (_keys!4288 newMap!16))))) (or ((_ is Undefined!259) lt!54470) (ite ((_ is Found!259) lt!54470) (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54470)) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!259) lt!54470) (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3184 lt!54470)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!259) lt!54470) (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3187 lt!54470)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!69123 () SeekEntryResult!259)

(assert (=> d!29079 (= lt!54470 e!69123)))

(declare-fun c!18532 () Bool)

(assert (=> d!29079 (= c!18532 (and ((_ is Intermediate!259) lt!54471) (undefined!1071 lt!54471)))))

(assert (=> d!29079 (= lt!54471 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (mask!6728 newMap!16)) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(assert (=> d!29079 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29079 (= (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (_keys!4288 newMap!16) (mask!6728 newMap!16)) lt!54470)))

(declare-fun b!106224 () Bool)

(assert (=> b!106224 (= e!69123 e!69124)))

(declare-fun lt!54469 () (_ BitVec 64))

(assert (=> b!106224 (= lt!54469 (select (arr!2063 (_keys!4288 newMap!16)) (index!3186 lt!54471)))))

(declare-fun c!18531 () Bool)

(assert (=> b!106224 (= c!18531 (= lt!54469 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106225 () Bool)

(assert (=> b!106225 (= e!69125 (MissingZero!259 (index!3186 lt!54471)))))

(declare-fun b!106226 () Bool)

(assert (=> b!106226 (= e!69123 Undefined!259)))

(declare-fun b!106227 () Bool)

(declare-fun c!18530 () Bool)

(assert (=> b!106227 (= c!18530 (= lt!54469 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106227 (= e!69124 e!69125)))

(assert (= (and d!29079 c!18532) b!106226))

(assert (= (and d!29079 (not c!18532)) b!106224))

(assert (= (and b!106224 c!18531) b!106222))

(assert (= (and b!106224 (not c!18531)) b!106227))

(assert (= (and b!106227 c!18530) b!106225))

(assert (= (and b!106227 (not c!18530)) b!106223))

(assert (=> b!106223 m!118103))

(declare-fun m!118799 () Bool)

(assert (=> b!106223 m!118799))

(declare-fun m!118801 () Bool)

(assert (=> d!29079 m!118801))

(declare-fun m!118803 () Bool)

(assert (=> d!29079 m!118803))

(declare-fun m!118805 () Bool)

(assert (=> d!29079 m!118805))

(assert (=> d!29079 m!118103))

(declare-fun m!118807 () Bool)

(assert (=> d!29079 m!118807))

(assert (=> d!29079 m!118807))

(assert (=> d!29079 m!118103))

(declare-fun m!118809 () Bool)

(assert (=> d!29079 m!118809))

(assert (=> d!29079 m!117933))

(declare-fun m!118811 () Bool)

(assert (=> b!106224 m!118811))

(assert (=> b!106106 d!29079))

(declare-fun d!29081 () Bool)

(declare-fun res!52838 () Bool)

(declare-fun e!69126 () Bool)

(assert (=> d!29081 (=> res!52838 e!69126)))

(assert (=> d!29081 (= res!52838 (and ((_ is Cons!1613) (toList!803 lt!53958)) (= (_1!1216 (h!2210 (toList!803 lt!53958))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29081 (= (containsKey!160 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000) e!69126)))

(declare-fun b!106228 () Bool)

(declare-fun e!69127 () Bool)

(assert (=> b!106228 (= e!69126 e!69127)))

(declare-fun res!52839 () Bool)

(assert (=> b!106228 (=> (not res!52839) (not e!69127))))

(assert (=> b!106228 (= res!52839 (and (or (not ((_ is Cons!1613) (toList!803 lt!53958))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53958))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1613) (toList!803 lt!53958)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53958))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106229 () Bool)

(assert (=> b!106229 (= e!69127 (containsKey!160 (t!5700 (toList!803 lt!53958)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29081 (not res!52838)) b!106228))

(assert (= (and b!106228 res!52839) b!106229))

(declare-fun m!118813 () Bool)

(assert (=> b!106229 m!118813))

(assert (=> d!28899 d!29081))

(declare-fun d!29083 () Bool)

(assert (=> d!29083 (= (inRange!0 (ite c!18393 (index!3184 lt!54110) (index!3187 lt!54110)) (mask!6728 newMap!16)) (and (bvsge (ite c!18393 (index!3184 lt!54110) (index!3187 lt!54110)) #b00000000000000000000000000000000) (bvslt (ite c!18393 (index!3184 lt!54110) (index!3187 lt!54110)) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11161 d!29083))

(declare-fun d!29085 () Bool)

(declare-fun res!52840 () Bool)

(declare-fun e!69128 () Bool)

(assert (=> d!29085 (=> (not res!52840) (not e!69128))))

(assert (=> d!29085 (= res!52840 (simpleValid!74 (_2!1217 lt!54341)))))

(assert (=> d!29085 (= (valid!421 (_2!1217 lt!54341)) e!69128)))

(declare-fun b!106230 () Bool)

(declare-fun res!52841 () Bool)

(assert (=> b!106230 (=> (not res!52841) (not e!69128))))

(assert (=> b!106230 (= res!52841 (= (arrayCountValidKeys!0 (_keys!4288 (_2!1217 lt!54341)) #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54341)))) (_size!499 (_2!1217 lt!54341))))))

(declare-fun b!106231 () Bool)

(declare-fun res!52842 () Bool)

(assert (=> b!106231 (=> (not res!52842) (not e!69128))))

(assert (=> b!106231 (= res!52842 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 (_2!1217 lt!54341)) (mask!6728 (_2!1217 lt!54341))))))

(declare-fun b!106232 () Bool)

(assert (=> b!106232 (= e!69128 (arrayNoDuplicates!0 (_keys!4288 (_2!1217 lt!54341)) #b00000000000000000000000000000000 Nil!1613))))

(assert (= (and d!29085 res!52840) b!106230))

(assert (= (and b!106230 res!52841) b!106231))

(assert (= (and b!106231 res!52842) b!106232))

(declare-fun m!118815 () Bool)

(assert (=> d!29085 m!118815))

(declare-fun m!118817 () Bool)

(assert (=> b!106230 m!118817))

(declare-fun m!118819 () Bool)

(assert (=> b!106231 m!118819))

(declare-fun m!118821 () Bool)

(assert (=> b!106232 m!118821))

(assert (=> b!106021 d!29085))

(declare-fun d!29087 () Bool)

(declare-fun lt!54472 () Bool)

(assert (=> d!29087 (= lt!54472 (select (content!109 lt!54211) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun e!69130 () Bool)

(assert (=> d!29087 (= lt!54472 e!69130)))

(declare-fun res!52843 () Bool)

(assert (=> d!29087 (=> (not res!52843) (not e!69130))))

(assert (=> d!29087 (= res!52843 ((_ is Cons!1613) lt!54211))))

(assert (=> d!29087 (= (contains!830 lt!54211 (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))) lt!54472)))

(declare-fun b!106233 () Bool)

(declare-fun e!69129 () Bool)

(assert (=> b!106233 (= e!69130 e!69129)))

(declare-fun res!52844 () Bool)

(assert (=> b!106233 (=> res!52844 e!69129)))

(assert (=> b!106233 (= res!52844 (= (h!2210 lt!54211) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun b!106234 () Bool)

(assert (=> b!106234 (= e!69129 (contains!830 (t!5700 lt!54211) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(assert (= (and d!29087 res!52843) b!106233))

(assert (= (and b!106233 (not res!52844)) b!106234))

(declare-fun m!118823 () Bool)

(assert (=> d!29087 m!118823))

(declare-fun m!118825 () Bool)

(assert (=> d!29087 m!118825))

(declare-fun m!118827 () Bool)

(assert (=> b!106234 m!118827))

(assert (=> b!105887 d!29087))

(declare-fun d!29089 () Bool)

(assert (=> d!29089 (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54473 () Unit!3232)

(assert (=> d!29089 (= lt!54473 (choose!660 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69131 () Bool)

(assert (=> d!29089 e!69131))

(declare-fun res!52845 () Bool)

(assert (=> d!29089 (=> (not res!52845) (not e!69131))))

(assert (=> d!29089 (= res!52845 (isStrictlySorted!309 (toList!803 lt!53958)))))

(assert (=> d!29089 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000) lt!54473)))

(declare-fun b!106235 () Bool)

(assert (=> b!106235 (= e!69131 (containsKey!160 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29089 res!52845) b!106235))

(assert (=> d!29089 m!118073))

(assert (=> d!29089 m!118073))

(assert (=> d!29089 m!118075))

(declare-fun m!118829 () Bool)

(assert (=> d!29089 m!118829))

(declare-fun m!118831 () Bool)

(assert (=> d!29089 m!118831))

(assert (=> b!106235 m!118069))

(assert (=> b!105818 d!29089))

(declare-fun d!29091 () Bool)

(assert (=> d!29091 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4362 () Bool)

(assert (= bs!4362 d!29091))

(assert (=> bs!4362 m!118073))

(declare-fun m!118833 () Bool)

(assert (=> bs!4362 m!118833))

(assert (=> b!105818 d!29091))

(declare-fun b!106238 () Bool)

(declare-fun e!69133 () Option!162)

(assert (=> b!106238 (= e!69133 (getValueByKey!156 (t!5700 (toList!803 lt!53958)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106236 () Bool)

(declare-fun e!69132 () Option!162)

(assert (=> b!106236 (= e!69132 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53958)))))))

(declare-fun d!29093 () Bool)

(declare-fun c!18533 () Bool)

(assert (=> d!29093 (= c!18533 (and ((_ is Cons!1613) (toList!803 lt!53958)) (= (_1!1216 (h!2210 (toList!803 lt!53958))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29093 (= (getValueByKey!156 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000) e!69132)))

(declare-fun b!106239 () Bool)

(assert (=> b!106239 (= e!69133 None!160)))

(declare-fun b!106237 () Bool)

(assert (=> b!106237 (= e!69132 e!69133)))

(declare-fun c!18534 () Bool)

(assert (=> b!106237 (= c!18534 (and ((_ is Cons!1613) (toList!803 lt!53958)) (not (= (_1!1216 (h!2210 (toList!803 lt!53958))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!29093 c!18533) b!106236))

(assert (= (and d!29093 (not c!18533)) b!106237))

(assert (= (and b!106237 c!18534) b!106238))

(assert (= (and b!106237 (not c!18534)) b!106239))

(declare-fun m!118835 () Bool)

(assert (=> b!106238 m!118835))

(assert (=> b!105818 d!29093))

(declare-fun d!29095 () Bool)

(assert (=> d!29095 (= (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53957)) (v!2896 (getValueByKey!156 (toList!803 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53957)))))

(assert (=> d!28837 d!29095))

(declare-fun e!69135 () Option!162)

(declare-fun b!106242 () Bool)

(assert (=> b!106242 (= e!69135 (getValueByKey!156 (t!5700 (toList!803 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) lt!53957))))

(declare-fun e!69134 () Option!162)

(declare-fun b!106240 () Bool)

(assert (=> b!106240 (= e!69134 (Some!161 (_2!1216 (h!2210 (toList!803 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun d!29097 () Bool)

(declare-fun c!18535 () Bool)

(assert (=> d!29097 (= c!18535 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53957)))))

(assert (=> d!29097 (= (getValueByKey!156 (toList!803 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53957) e!69134)))

(declare-fun b!106243 () Bool)

(assert (=> b!106243 (= e!69135 None!160)))

(declare-fun b!106241 () Bool)

(assert (=> b!106241 (= e!69134 e!69135)))

(declare-fun c!18536 () Bool)

(assert (=> b!106241 (= c!18536 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (not (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53957))))))

(assert (= (and d!29097 c!18535) b!106240))

(assert (= (and d!29097 (not c!18535)) b!106241))

(assert (= (and b!106241 c!18536) b!106242))

(assert (= (and b!106241 (not c!18536)) b!106243))

(declare-fun m!118837 () Bool)

(assert (=> b!106242 m!118837))

(assert (=> d!28837 d!29097))

(declare-fun d!29099 () Bool)

(declare-fun lt!54474 () Bool)

(assert (=> d!29099 (= lt!54474 (select (content!109 lt!54142) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun e!69137 () Bool)

(assert (=> d!29099 (= lt!54474 e!69137)))

(declare-fun res!52846 () Bool)

(assert (=> d!29099 (=> (not res!52846) (not e!69137))))

(assert (=> d!29099 (= res!52846 ((_ is Cons!1613) lt!54142))))

(assert (=> d!29099 (= (contains!830 lt!54142 (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))) lt!54474)))

(declare-fun b!106244 () Bool)

(declare-fun e!69136 () Bool)

(assert (=> b!106244 (= e!69137 e!69136)))

(declare-fun res!52847 () Bool)

(assert (=> b!106244 (=> res!52847 e!69136)))

(assert (=> b!106244 (= res!52847 (= (h!2210 lt!54142) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun b!106245 () Bool)

(assert (=> b!106245 (= e!69136 (contains!830 (t!5700 lt!54142) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(assert (= (and d!29099 res!52846) b!106244))

(assert (= (and b!106244 (not res!52847)) b!106245))

(declare-fun m!118839 () Bool)

(assert (=> d!29099 m!118839))

(declare-fun m!118841 () Bool)

(assert (=> d!29099 m!118841))

(declare-fun m!118843 () Bool)

(assert (=> b!106245 m!118843))

(assert (=> b!105807 d!29099))

(declare-fun d!29101 () Bool)

(declare-fun lt!54475 () Bool)

(assert (=> d!29101 (= lt!54475 (select (content!109 (toList!803 lt!54251)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69139 () Bool)

(assert (=> d!29101 (= lt!54475 e!69139)))

(declare-fun res!52848 () Bool)

(assert (=> d!29101 (=> (not res!52848) (not e!69139))))

(assert (=> d!29101 (= res!52848 ((_ is Cons!1613) (toList!803 lt!54251)))))

(assert (=> d!29101 (= (contains!830 (toList!803 lt!54251) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54475)))

(declare-fun b!106246 () Bool)

(declare-fun e!69138 () Bool)

(assert (=> b!106246 (= e!69139 e!69138)))

(declare-fun res!52849 () Bool)

(assert (=> b!106246 (=> res!52849 e!69138)))

(assert (=> b!106246 (= res!52849 (= (h!2210 (toList!803 lt!54251)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106247 () Bool)

(assert (=> b!106247 (= e!69138 (contains!830 (t!5700 (toList!803 lt!54251)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29101 res!52848) b!106246))

(assert (= (and b!106246 (not res!52849)) b!106247))

(declare-fun m!118845 () Bool)

(assert (=> d!29101 m!118845))

(declare-fun m!118847 () Bool)

(assert (=> d!29101 m!118847))

(declare-fun m!118849 () Bool)

(assert (=> b!106247 m!118849))

(assert (=> b!105963 d!29101))

(declare-fun d!29103 () Bool)

(declare-fun res!52854 () Bool)

(declare-fun e!69144 () Bool)

(assert (=> d!29103 (=> res!52854 e!69144)))

(assert (=> d!29103 (= res!52854 (or ((_ is Nil!1614) lt!54211) ((_ is Nil!1614) (t!5700 lt!54211))))))

(assert (=> d!29103 (= (isStrictlySorted!309 lt!54211) e!69144)))

(declare-fun b!106252 () Bool)

(declare-fun e!69145 () Bool)

(assert (=> b!106252 (= e!69144 e!69145)))

(declare-fun res!52855 () Bool)

(assert (=> b!106252 (=> (not res!52855) (not e!69145))))

(assert (=> b!106252 (= res!52855 (bvslt (_1!1216 (h!2210 lt!54211)) (_1!1216 (h!2210 (t!5700 lt!54211)))))))

(declare-fun b!106253 () Bool)

(assert (=> b!106253 (= e!69145 (isStrictlySorted!309 (t!5700 lt!54211)))))

(assert (= (and d!29103 (not res!52854)) b!106252))

(assert (= (and b!106252 res!52855) b!106253))

(declare-fun m!118851 () Bool)

(assert (=> b!106253 m!118851))

(assert (=> d!28939 d!29103))

(declare-fun d!29105 () Bool)

(declare-fun res!52856 () Bool)

(declare-fun e!69146 () Bool)

(assert (=> d!29105 (=> res!52856 e!69146)))

(assert (=> d!29105 (= res!52856 (or ((_ is Nil!1614) (toList!803 lt!53805)) ((_ is Nil!1614) (t!5700 (toList!803 lt!53805)))))))

(assert (=> d!29105 (= (isStrictlySorted!309 (toList!803 lt!53805)) e!69146)))

(declare-fun b!106254 () Bool)

(declare-fun e!69147 () Bool)

(assert (=> b!106254 (= e!69146 e!69147)))

(declare-fun res!52857 () Bool)

(assert (=> b!106254 (=> (not res!52857) (not e!69147))))

(assert (=> b!106254 (= res!52857 (bvslt (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 (h!2210 (t!5700 (toList!803 lt!53805))))))))

(declare-fun b!106255 () Bool)

(assert (=> b!106255 (= e!69147 (isStrictlySorted!309 (t!5700 (toList!803 lt!53805))))))

(assert (= (and d!29105 (not res!52856)) b!106254))

(assert (= (and b!106254 res!52857) b!106255))

(declare-fun m!118853 () Bool)

(assert (=> b!106255 m!118853))

(assert (=> d!28939 d!29105))

(declare-fun b!106256 () Bool)

(declare-fun e!69151 () List!1617)

(declare-fun e!69149 () List!1617)

(assert (=> b!106256 (= e!69151 e!69149)))

(declare-fun c!18538 () Bool)

(assert (=> b!106256 (= c!18538 (and ((_ is Cons!1613) (t!5700 (toList!803 (+!144 lt!53805 lt!53814)))) (= (_1!1216 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53814))))) (_1!1216 lt!53815))))))

(declare-fun b!106257 () Bool)

(declare-fun call!11239 () List!1617)

(assert (=> b!106257 (= e!69151 call!11239)))

(declare-fun b!106259 () Bool)

(declare-fun e!69152 () List!1617)

(declare-fun call!11241 () List!1617)

(assert (=> b!106259 (= e!69152 call!11241)))

(declare-fun b!106260 () Bool)

(declare-fun c!18539 () Bool)

(assert (=> b!106260 (= c!18539 (and ((_ is Cons!1613) (t!5700 (toList!803 (+!144 lt!53805 lt!53814)))) (bvsgt (_1!1216 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53814))))) (_1!1216 lt!53815))))))

(assert (=> b!106260 (= e!69149 e!69152)))

(declare-fun bm!11236 () Bool)

(declare-fun call!11240 () List!1617)

(assert (=> bm!11236 (= call!11241 call!11240)))

(declare-fun e!69150 () List!1617)

(declare-fun b!106261 () Bool)

(assert (=> b!106261 (= e!69150 (insertStrictlySorted!75 (t!5700 (t!5700 (toList!803 (+!144 lt!53805 lt!53814)))) (_1!1216 lt!53815) (_2!1216 lt!53815)))))

(declare-fun b!106262 () Bool)

(assert (=> b!106262 (= e!69152 call!11241)))

(declare-fun b!106263 () Bool)

(declare-fun res!52859 () Bool)

(declare-fun e!69148 () Bool)

(assert (=> b!106263 (=> (not res!52859) (not e!69148))))

(declare-fun lt!54476 () List!1617)

(assert (=> b!106263 (= res!52859 (containsKey!160 lt!54476 (_1!1216 lt!53815)))))

(declare-fun b!106264 () Bool)

(assert (=> b!106264 (= e!69148 (contains!830 lt!54476 (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun b!106265 () Bool)

(assert (=> b!106265 (= e!69150 (ite c!18538 (t!5700 (t!5700 (toList!803 (+!144 lt!53805 lt!53814)))) (ite c!18539 (Cons!1613 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53814)))) (t!5700 (t!5700 (toList!803 (+!144 lt!53805 lt!53814))))) Nil!1614)))))

(declare-fun d!29107 () Bool)

(assert (=> d!29107 e!69148))

(declare-fun res!52858 () Bool)

(assert (=> d!29107 (=> (not res!52858) (not e!69148))))

(assert (=> d!29107 (= res!52858 (isStrictlySorted!309 lt!54476))))

(assert (=> d!29107 (= lt!54476 e!69151)))

(declare-fun c!18537 () Bool)

(assert (=> d!29107 (= c!18537 (and ((_ is Cons!1613) (t!5700 (toList!803 (+!144 lt!53805 lt!53814)))) (bvslt (_1!1216 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53814))))) (_1!1216 lt!53815))))))

(assert (=> d!29107 (isStrictlySorted!309 (t!5700 (toList!803 (+!144 lt!53805 lt!53814))))))

(assert (=> d!29107 (= (insertStrictlySorted!75 (t!5700 (toList!803 (+!144 lt!53805 lt!53814))) (_1!1216 lt!53815) (_2!1216 lt!53815)) lt!54476)))

(declare-fun b!106258 () Bool)

(assert (=> b!106258 (= e!69149 call!11240)))

(declare-fun bm!11237 () Bool)

(assert (=> bm!11237 (= call!11239 ($colon$colon!81 e!69150 (ite c!18537 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53814)))) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815)))))))

(declare-fun c!18540 () Bool)

(assert (=> bm!11237 (= c!18540 c!18537)))

(declare-fun bm!11238 () Bool)

(assert (=> bm!11238 (= call!11240 call!11239)))

(assert (= (and d!29107 c!18537) b!106257))

(assert (= (and d!29107 (not c!18537)) b!106256))

(assert (= (and b!106256 c!18538) b!106258))

(assert (= (and b!106256 (not c!18538)) b!106260))

(assert (= (and b!106260 c!18539) b!106262))

(assert (= (and b!106260 (not c!18539)) b!106259))

(assert (= (or b!106262 b!106259) bm!11236))

(assert (= (or b!106258 bm!11236) bm!11238))

(assert (= (or b!106257 bm!11238) bm!11237))

(assert (= (and bm!11237 c!18540) b!106261))

(assert (= (and bm!11237 (not c!18540)) b!106265))

(assert (= (and d!29107 res!52858) b!106263))

(assert (= (and b!106263 res!52859) b!106264))

(declare-fun m!118855 () Bool)

(assert (=> b!106261 m!118855))

(declare-fun m!118857 () Bool)

(assert (=> b!106264 m!118857))

(declare-fun m!118859 () Bool)

(assert (=> d!29107 m!118859))

(declare-fun m!118861 () Bool)

(assert (=> d!29107 m!118861))

(declare-fun m!118863 () Bool)

(assert (=> bm!11237 m!118863))

(declare-fun m!118865 () Bool)

(assert (=> b!106263 m!118865))

(assert (=> b!105778 d!29107))

(declare-fun d!29109 () Bool)

(assert (=> d!29109 (= (isEmpty!372 (toList!803 lt!53878)) ((_ is Nil!1614) (toList!803 lt!53878)))))

(assert (=> d!28941 d!29109))

(declare-fun d!29111 () Bool)

(declare-fun res!52860 () Bool)

(declare-fun e!69153 () Bool)

(assert (=> d!29111 (=> res!52860 e!69153)))

(assert (=> d!29111 (= res!52860 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53954)))))

(assert (=> d!29111 (= (containsKey!160 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954) e!69153)))

(declare-fun b!106266 () Bool)

(declare-fun e!69154 () Bool)

(assert (=> b!106266 (= e!69153 e!69154)))

(declare-fun res!52861 () Bool)

(assert (=> b!106266 (=> (not res!52861) (not e!69154))))

(assert (=> b!106266 (= res!52861 (and (or (not ((_ is Cons!1613) (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) (bvsle (_1!1216 (h!2210 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53954)) ((_ is Cons!1613) (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (bvslt (_1!1216 (h!2210 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53954)))))

(declare-fun b!106267 () Bool)

(assert (=> b!106267 (= e!69154 (containsKey!160 (t!5700 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) lt!53954))))

(assert (= (and d!29111 (not res!52860)) b!106266))

(assert (= (and b!106266 res!52861) b!106267))

(declare-fun m!118867 () Bool)

(assert (=> b!106267 m!118867))

(assert (=> d!28841 d!29111))

(declare-fun d!29113 () Bool)

(declare-fun e!69155 () Bool)

(assert (=> d!29113 e!69155))

(declare-fun res!52862 () Bool)

(assert (=> d!29113 (=> (not res!52862) (not e!69155))))

(declare-fun lt!54478 () ListLongMap!1575)

(assert (=> d!29113 (= res!52862 (contains!828 lt!54478 (_1!1216 (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))))

(declare-fun lt!54480 () List!1617)

(assert (=> d!29113 (= lt!54478 (ListLongMap!1576 lt!54480))))

(declare-fun lt!54479 () Unit!3232)

(declare-fun lt!54477 () Unit!3232)

(assert (=> d!29113 (= lt!54479 lt!54477)))

(assert (=> d!29113 (= (getValueByKey!156 lt!54480 (_1!1216 (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))) (Some!161 (_2!1216 (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))))

(assert (=> d!29113 (= lt!54477 (lemmaContainsTupThenGetReturnValue!72 lt!54480 (_1!1216 (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) (_2!1216 (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))))

(assert (=> d!29113 (= lt!54480 (insertStrictlySorted!75 (toList!803 (ite c!18499 call!11218 (ite c!18502 call!11219 call!11224))) (_1!1216 (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) (_2!1216 (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))))

(assert (=> d!29113 (= (+!144 (ite c!18499 call!11218 (ite c!18502 call!11219 call!11224)) (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) lt!54478)))

(declare-fun b!106268 () Bool)

(declare-fun res!52863 () Bool)

(assert (=> b!106268 (=> (not res!52863) (not e!69155))))

(assert (=> b!106268 (= res!52863 (= (getValueByKey!156 (toList!803 lt!54478) (_1!1216 (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))) (Some!161 (_2!1216 (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))))

(declare-fun b!106269 () Bool)

(assert (=> b!106269 (= e!69155 (contains!830 (toList!803 lt!54478) (ite (or c!18499 c!18502) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(assert (= (and d!29113 res!52862) b!106268))

(assert (= (and b!106268 res!52863) b!106269))

(declare-fun m!118869 () Bool)

(assert (=> d!29113 m!118869))

(declare-fun m!118871 () Bool)

(assert (=> d!29113 m!118871))

(declare-fun m!118873 () Bool)

(assert (=> d!29113 m!118873))

(declare-fun m!118875 () Bool)

(assert (=> d!29113 m!118875))

(declare-fun m!118877 () Bool)

(assert (=> b!106268 m!118877))

(declare-fun m!118879 () Bool)

(assert (=> b!106269 m!118879))

(assert (=> bm!11221 d!29113))

(declare-fun d!29115 () Bool)

(assert (=> d!29115 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880))))

(declare-fun lt!54481 () Unit!3232)

(assert (=> d!29115 (= lt!54481 (choose!660 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880))))

(declare-fun e!69156 () Bool)

(assert (=> d!29115 e!69156))

(declare-fun res!52864 () Bool)

(assert (=> d!29115 (=> (not res!52864) (not e!69156))))

(assert (=> d!29115 (= res!52864 (isStrictlySorted!309 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)))))))

(assert (=> d!29115 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880) lt!54481)))

(declare-fun b!106270 () Bool)

(assert (=> b!106270 (= e!69156 (containsKey!160 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880))))

(assert (= (and d!29115 res!52864) b!106270))

(assert (=> d!29115 m!118135))

(assert (=> d!29115 m!118135))

(assert (=> d!29115 m!118137))

(declare-fun m!118881 () Bool)

(assert (=> d!29115 m!118881))

(declare-fun m!118883 () Bool)

(assert (=> d!29115 m!118883))

(assert (=> b!106270 m!118131))

(assert (=> b!105838 d!29115))

(declare-fun d!29117 () Bool)

(assert (=> d!29117 (= (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880)) (not (isEmpty!371 (getValueByKey!156 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880))))))

(declare-fun bs!4363 () Bool)

(assert (= bs!4363 d!29117))

(assert (=> bs!4363 m!118135))

(declare-fun m!118885 () Bool)

(assert (=> bs!4363 m!118885))

(assert (=> b!105838 d!29117))

(declare-fun e!69158 () Option!162)

(declare-fun b!106273 () Bool)

(assert (=> b!106273 (= e!69158 (getValueByKey!156 (t!5700 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)))) lt!53880))))

(declare-fun b!106271 () Bool)

(declare-fun e!69157 () Option!162)

(assert (=> b!106271 (= e!69157 (Some!161 (_2!1216 (h!2210 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)))))))))

(declare-fun c!18541 () Bool)

(declare-fun d!29119 () Bool)

(assert (=> d!29119 (= c!18541 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))))) lt!53880)))))

(assert (=> d!29119 (= (getValueByKey!156 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880) e!69157)))

(declare-fun b!106274 () Bool)

(assert (=> b!106274 (= e!69158 None!160)))

(declare-fun b!106272 () Bool)

(assert (=> b!106272 (= e!69157 e!69158)))

(declare-fun c!18542 () Bool)

(assert (=> b!106272 (= c!18542 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)))) (not (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))))) lt!53880))))))

(assert (= (and d!29119 c!18541) b!106271))

(assert (= (and d!29119 (not c!18541)) b!106272))

(assert (= (and b!106272 c!18542) b!106273))

(assert (= (and b!106272 (not c!18542)) b!106274))

(declare-fun m!118887 () Bool)

(assert (=> b!106273 m!118887))

(assert (=> b!105838 d!29119))

(declare-fun d!29121 () Bool)

(declare-fun e!69159 () Bool)

(assert (=> d!29121 e!69159))

(declare-fun res!52865 () Bool)

(assert (=> d!29121 (=> (not res!52865) (not e!69159))))

(declare-fun lt!54483 () ListLongMap!1575)

(assert (=> d!29121 (= res!52865 (contains!828 lt!54483 (_1!1216 (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(declare-fun lt!54485 () List!1617)

(assert (=> d!29121 (= lt!54483 (ListLongMap!1576 lt!54485))))

(declare-fun lt!54484 () Unit!3232)

(declare-fun lt!54482 () Unit!3232)

(assert (=> d!29121 (= lt!54484 lt!54482)))

(assert (=> d!29121 (= (getValueByKey!156 lt!54485 (_1!1216 (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))) (Some!161 (_2!1216 (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29121 (= lt!54482 (lemmaContainsTupThenGetReturnValue!72 lt!54485 (_1!1216 (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (_2!1216 (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29121 (= lt!54485 (insertStrictlySorted!75 (toList!803 (ite c!18477 call!11206 (ite c!18480 call!11207 call!11212))) (_1!1216 (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (_2!1216 (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29121 (= (+!144 (ite c!18477 call!11206 (ite c!18480 call!11207 call!11212)) (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) lt!54483)))

(declare-fun b!106275 () Bool)

(declare-fun res!52866 () Bool)

(assert (=> b!106275 (=> (not res!52866) (not e!69159))))

(assert (=> b!106275 (= res!52866 (= (getValueByKey!156 (toList!803 lt!54483) (_1!1216 (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))) (Some!161 (_2!1216 (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))))

(declare-fun b!106276 () Bool)

(assert (=> b!106276 (= e!69159 (contains!830 (toList!803 lt!54483) (ite (or c!18477 c!18480) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (= (and d!29121 res!52865) b!106275))

(assert (= (and b!106275 res!52866) b!106276))

(declare-fun m!118889 () Bool)

(assert (=> d!29121 m!118889))

(declare-fun m!118891 () Bool)

(assert (=> d!29121 m!118891))

(declare-fun m!118893 () Bool)

(assert (=> d!29121 m!118893))

(declare-fun m!118895 () Bool)

(assert (=> d!29121 m!118895))

(declare-fun m!118897 () Bool)

(assert (=> b!106275 m!118897))

(declare-fun m!118899 () Bool)

(assert (=> b!106276 m!118899))

(assert (=> bm!11209 d!29121))

(declare-fun b!106279 () Bool)

(declare-fun e!69161 () Option!162)

(assert (=> b!106279 (= e!69161 (getValueByKey!156 (t!5700 (t!5700 (toList!803 lt!53906))) (_1!1216 lt!53814)))))

(declare-fun b!106277 () Bool)

(declare-fun e!69160 () Option!162)

(assert (=> b!106277 (= e!69160 (Some!161 (_2!1216 (h!2210 (t!5700 (toList!803 lt!53906))))))))

(declare-fun d!29123 () Bool)

(declare-fun c!18543 () Bool)

(assert (=> d!29123 (= c!18543 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53906))) (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53906)))) (_1!1216 lt!53814))))))

(assert (=> d!29123 (= (getValueByKey!156 (t!5700 (toList!803 lt!53906)) (_1!1216 lt!53814)) e!69160)))

(declare-fun b!106280 () Bool)

(assert (=> b!106280 (= e!69161 None!160)))

(declare-fun b!106278 () Bool)

(assert (=> b!106278 (= e!69160 e!69161)))

(declare-fun c!18544 () Bool)

(assert (=> b!106278 (= c!18544 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53906))) (not (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53906)))) (_1!1216 lt!53814)))))))

(assert (= (and d!29123 c!18543) b!106277))

(assert (= (and d!29123 (not c!18543)) b!106278))

(assert (= (and b!106278 c!18544) b!106279))

(assert (= (and b!106278 (not c!18544)) b!106280))

(declare-fun m!118901 () Bool)

(assert (=> b!106279 m!118901))

(assert (=> b!106056 d!29123))

(declare-fun d!29125 () Bool)

(assert (=> d!29125 (= (get!1334 (getValueByKey!156 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2896 (getValueByKey!156 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28943 d!29125))

(assert (=> d!28943 d!29061))

(declare-fun d!29127 () Bool)

(declare-fun e!69162 () Bool)

(assert (=> d!29127 e!69162))

(declare-fun res!52867 () Bool)

(assert (=> d!29127 (=> (not res!52867) (not e!69162))))

(declare-fun lt!54487 () ListLongMap!1575)

(assert (=> d!29127 (= res!52867 (contains!828 lt!54487 (_1!1216 (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(declare-fun lt!54489 () List!1617)

(assert (=> d!29127 (= lt!54487 (ListLongMap!1576 lt!54489))))

(declare-fun lt!54488 () Unit!3232)

(declare-fun lt!54486 () Unit!3232)

(assert (=> d!29127 (= lt!54488 lt!54486)))

(assert (=> d!29127 (= (getValueByKey!156 lt!54489 (_1!1216 (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))) (Some!161 (_2!1216 (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29127 (= lt!54486 (lemmaContainsTupThenGetReturnValue!72 lt!54489 (_1!1216 (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (_2!1216 (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29127 (= lt!54489 (insertStrictlySorted!75 (toList!803 (ite c!18430 call!11177 (ite c!18433 call!11178 call!11183))) (_1!1216 (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (_2!1216 (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29127 (= (+!144 (ite c!18430 call!11177 (ite c!18433 call!11178 call!11183)) (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) lt!54487)))

(declare-fun b!106281 () Bool)

(declare-fun res!52868 () Bool)

(assert (=> b!106281 (=> (not res!52868) (not e!69162))))

(assert (=> b!106281 (= res!52868 (= (getValueByKey!156 (toList!803 lt!54487) (_1!1216 (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))) (Some!161 (_2!1216 (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))))

(declare-fun b!106282 () Bool)

(assert (=> b!106282 (= e!69162 (contains!830 (toList!803 lt!54487) (ite (or c!18430 c!18433) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (= (and d!29127 res!52867) b!106281))

(assert (= (and b!106281 res!52868) b!106282))

(declare-fun m!118903 () Bool)

(assert (=> d!29127 m!118903))

(declare-fun m!118905 () Bool)

(assert (=> d!29127 m!118905))

(declare-fun m!118907 () Bool)

(assert (=> d!29127 m!118907))

(declare-fun m!118909 () Bool)

(assert (=> d!29127 m!118909))

(declare-fun m!118911 () Bool)

(assert (=> b!106281 m!118911))

(declare-fun m!118913 () Bool)

(assert (=> b!106282 m!118913))

(assert (=> bm!11180 d!29127))

(declare-fun d!29129 () Bool)

(declare-fun lt!54490 () Bool)

(assert (=> d!29129 (= lt!54490 (select (content!109 (toList!803 lt!54133)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69164 () Bool)

(assert (=> d!29129 (= lt!54490 e!69164)))

(declare-fun res!52869 () Bool)

(assert (=> d!29129 (=> (not res!52869) (not e!69164))))

(assert (=> d!29129 (= res!52869 ((_ is Cons!1613) (toList!803 lt!54133)))))

(assert (=> d!29129 (= (contains!830 (toList!803 lt!54133) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54490)))

(declare-fun b!106283 () Bool)

(declare-fun e!69163 () Bool)

(assert (=> b!106283 (= e!69164 e!69163)))

(declare-fun res!52870 () Bool)

(assert (=> b!106283 (=> res!52870 e!69163)))

(assert (=> b!106283 (= res!52870 (= (h!2210 (toList!803 lt!54133)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106284 () Bool)

(assert (=> b!106284 (= e!69163 (contains!830 (t!5700 (toList!803 lt!54133)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29129 res!52869) b!106283))

(assert (= (and b!106283 (not res!52870)) b!106284))

(declare-fun m!118915 () Bool)

(assert (=> d!29129 m!118915))

(declare-fun m!118917 () Bool)

(assert (=> d!29129 m!118917))

(declare-fun m!118919 () Bool)

(assert (=> b!106284 m!118919))

(assert (=> b!105787 d!29129))

(declare-fun d!29131 () Bool)

(assert (=> d!29131 (= (get!1334 (getValueByKey!156 (toList!803 lt!53971) lt!53953)) (v!2896 (getValueByKey!156 (toList!803 lt!53971) lt!53953)))))

(assert (=> d!28857 d!29131))

(declare-fun b!106287 () Bool)

(declare-fun e!69166 () Option!162)

(assert (=> b!106287 (= e!69166 (getValueByKey!156 (t!5700 (toList!803 lt!53971)) lt!53953))))

(declare-fun b!106285 () Bool)

(declare-fun e!69165 () Option!162)

(assert (=> b!106285 (= e!69165 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53971)))))))

(declare-fun d!29133 () Bool)

(declare-fun c!18545 () Bool)

(assert (=> d!29133 (= c!18545 (and ((_ is Cons!1613) (toList!803 lt!53971)) (= (_1!1216 (h!2210 (toList!803 lt!53971))) lt!53953)))))

(assert (=> d!29133 (= (getValueByKey!156 (toList!803 lt!53971) lt!53953) e!69165)))

(declare-fun b!106288 () Bool)

(assert (=> b!106288 (= e!69166 None!160)))

(declare-fun b!106286 () Bool)

(assert (=> b!106286 (= e!69165 e!69166)))

(declare-fun c!18546 () Bool)

(assert (=> b!106286 (= c!18546 (and ((_ is Cons!1613) (toList!803 lt!53971)) (not (= (_1!1216 (h!2210 (toList!803 lt!53971))) lt!53953))))))

(assert (= (and d!29133 c!18545) b!106285))

(assert (= (and d!29133 (not c!18545)) b!106286))

(assert (= (and b!106286 c!18546) b!106287))

(assert (= (and b!106286 (not c!18546)) b!106288))

(declare-fun m!118921 () Bool)

(assert (=> b!106287 m!118921))

(assert (=> d!28857 d!29133))

(declare-fun d!29135 () Bool)

(assert (=> d!29135 (= (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106089 d!29135))

(assert (=> b!106105 d!29049))

(declare-fun d!29137 () Bool)

(declare-fun res!52871 () Bool)

(declare-fun e!69167 () Bool)

(assert (=> d!29137 (=> res!52871 e!69167)))

(assert (=> d!29137 (= res!52871 (and ((_ is Cons!1613) (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))) (= (_1!1216 (h!2210 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29137 (= (containsKey!160 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69167)))

(declare-fun b!106289 () Bool)

(declare-fun e!69168 () Bool)

(assert (=> b!106289 (= e!69167 e!69168)))

(declare-fun res!52872 () Bool)

(assert (=> b!106289 (=> (not res!52872) (not e!69168))))

(assert (=> b!106289 (= res!52872 (and (or (not ((_ is Cons!1613) (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))))) (bvsle (_1!1216 (h!2210 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))) ((_ is Cons!1613) (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))) (bvslt (_1!1216 (h!2210 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(declare-fun b!106290 () Bool)

(assert (=> b!106290 (= e!69168 (containsKey!160 (t!5700 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29137 (not res!52871)) b!106289))

(assert (= (and b!106289 res!52872) b!106290))

(assert (=> b!106290 m!117489))

(declare-fun m!118923 () Bool)

(assert (=> b!106290 m!118923))

(assert (=> d!28967 d!29137))

(declare-fun d!29139 () Bool)

(declare-fun lt!54491 () Bool)

(assert (=> d!29139 (= lt!54491 (select (content!109 (toList!803 lt!54069)) (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69170 () Bool)

(assert (=> d!29139 (= lt!54491 e!69170)))

(declare-fun res!52873 () Bool)

(assert (=> d!29139 (=> (not res!52873) (not e!69170))))

(assert (=> d!29139 (= res!52873 ((_ is Cons!1613) (toList!803 lt!54069)))))

(assert (=> d!29139 (= (contains!830 (toList!803 lt!54069) (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54491)))

(declare-fun b!106291 () Bool)

(declare-fun e!69169 () Bool)

(assert (=> b!106291 (= e!69170 e!69169)))

(declare-fun res!52874 () Bool)

(assert (=> b!106291 (=> res!52874 e!69169)))

(assert (=> b!106291 (= res!52874 (= (h!2210 (toList!803 lt!54069)) (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106292 () Bool)

(assert (=> b!106292 (= e!69169 (contains!830 (t!5700 (toList!803 lt!54069)) (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29139 res!52873) b!106291))

(assert (= (and b!106291 (not res!52874)) b!106292))

(declare-fun m!118925 () Bool)

(assert (=> d!29139 m!118925))

(declare-fun m!118927 () Bool)

(assert (=> d!29139 m!118927))

(declare-fun m!118929 () Bool)

(assert (=> b!106292 m!118929))

(assert (=> b!105661 d!29139))

(declare-fun d!29141 () Bool)

(declare-fun res!52875 () Bool)

(declare-fun e!69171 () Bool)

(assert (=> d!29141 (=> res!52875 e!69171)))

(assert (=> d!29141 (= res!52875 (and ((_ is Cons!1613) (toList!803 lt!53895)) (= (_1!1216 (h!2210 (toList!803 lt!53895))) (_1!1216 lt!53814))))))

(assert (=> d!29141 (= (containsKey!160 (toList!803 lt!53895) (_1!1216 lt!53814)) e!69171)))

(declare-fun b!106293 () Bool)

(declare-fun e!69172 () Bool)

(assert (=> b!106293 (= e!69171 e!69172)))

(declare-fun res!52876 () Bool)

(assert (=> b!106293 (=> (not res!52876) (not e!69172))))

(assert (=> b!106293 (= res!52876 (and (or (not ((_ is Cons!1613) (toList!803 lt!53895))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53895))) (_1!1216 lt!53814))) ((_ is Cons!1613) (toList!803 lt!53895)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53895))) (_1!1216 lt!53814))))))

(declare-fun b!106294 () Bool)

(assert (=> b!106294 (= e!69172 (containsKey!160 (t!5700 (toList!803 lt!53895)) (_1!1216 lt!53814)))))

(assert (= (and d!29141 (not res!52875)) b!106293))

(assert (= (and b!106293 res!52876) b!106294))

(declare-fun m!118931 () Bool)

(assert (=> b!106294 m!118931))

(assert (=> d!28973 d!29141))

(declare-fun d!29143 () Bool)

(declare-fun e!69174 () Bool)

(assert (=> d!29143 e!69174))

(declare-fun res!52877 () Bool)

(assert (=> d!29143 (=> res!52877 e!69174)))

(declare-fun lt!54494 () Bool)

(assert (=> d!29143 (= res!52877 (not lt!54494))))

(declare-fun lt!54492 () Bool)

(assert (=> d!29143 (= lt!54494 lt!54492)))

(declare-fun lt!54493 () Unit!3232)

(declare-fun e!69173 () Unit!3232)

(assert (=> d!29143 (= lt!54493 e!69173)))

(declare-fun c!18547 () Bool)

(assert (=> d!29143 (= c!18547 lt!54492)))

(assert (=> d!29143 (= lt!54492 (containsKey!160 (toList!803 lt!54410) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29143 (= (contains!828 lt!54410 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54494)))

(declare-fun b!106295 () Bool)

(declare-fun lt!54495 () Unit!3232)

(assert (=> b!106295 (= e!69173 lt!54495)))

(assert (=> b!106295 (= lt!54495 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54410) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106295 (isDefined!109 (getValueByKey!156 (toList!803 lt!54410) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106296 () Bool)

(declare-fun Unit!3269 () Unit!3232)

(assert (=> b!106296 (= e!69173 Unit!3269)))

(declare-fun b!106297 () Bool)

(assert (=> b!106297 (= e!69174 (isDefined!109 (getValueByKey!156 (toList!803 lt!54410) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29143 c!18547) b!106295))

(assert (= (and d!29143 (not c!18547)) b!106296))

(assert (= (and d!29143 (not res!52877)) b!106297))

(declare-fun m!118933 () Bool)

(assert (=> d!29143 m!118933))

(declare-fun m!118935 () Bool)

(assert (=> b!106295 m!118935))

(declare-fun m!118937 () Bool)

(assert (=> b!106295 m!118937))

(assert (=> b!106295 m!118937))

(declare-fun m!118939 () Bool)

(assert (=> b!106295 m!118939))

(assert (=> b!106297 m!118937))

(assert (=> b!106297 m!118937))

(assert (=> b!106297 m!118939))

(assert (=> bm!11218 d!29143))

(declare-fun bm!11239 () Bool)

(declare-fun call!11242 () Bool)

(assert (=> bm!11239 (= call!11242 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4288 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050))))))

(declare-fun d!29145 () Bool)

(declare-fun res!52879 () Bool)

(declare-fun e!69175 () Bool)

(assert (=> d!29145 (=> res!52879 e!69175)))

(assert (=> d!29145 (= res!52879 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))))))

(assert (=> d!29145 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050))) e!69175)))

(declare-fun b!106298 () Bool)

(declare-fun e!69176 () Bool)

(assert (=> b!106298 (= e!69176 call!11242)))

(declare-fun b!106299 () Bool)

(assert (=> b!106299 (= e!69175 e!69176)))

(declare-fun c!18548 () Bool)

(assert (=> b!106299 (= c!18548 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000)))))

(declare-fun b!106300 () Bool)

(declare-fun e!69177 () Bool)

(assert (=> b!106300 (= e!69176 e!69177)))

(declare-fun lt!54496 () (_ BitVec 64))

(assert (=> b!106300 (= lt!54496 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000))))

(declare-fun lt!54497 () Unit!3232)

(assert (=> b!106300 (= lt!54497 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4288 (_2!1217 lt!54050)) lt!54496 #b00000000000000000000000000000000))))

(assert (=> b!106300 (arrayContainsKey!0 (_keys!4288 (_2!1217 lt!54050)) lt!54496 #b00000000000000000000000000000000)))

(declare-fun lt!54498 () Unit!3232)

(assert (=> b!106300 (= lt!54498 lt!54497)))

(declare-fun res!52878 () Bool)

(assert (=> b!106300 (= res!52878 (= (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000) (_keys!4288 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050))) (Found!259 #b00000000000000000000000000000000)))))

(assert (=> b!106300 (=> (not res!52878) (not e!69177))))

(declare-fun b!106301 () Bool)

(assert (=> b!106301 (= e!69177 call!11242)))

(assert (= (and d!29145 (not res!52879)) b!106299))

(assert (= (and b!106299 c!18548) b!106300))

(assert (= (and b!106299 (not c!18548)) b!106298))

(assert (= (and b!106300 res!52878) b!106301))

(assert (= (or b!106301 b!106298) bm!11239))

(declare-fun m!118941 () Bool)

(assert (=> bm!11239 m!118941))

(assert (=> b!106299 m!118645))

(assert (=> b!106299 m!118645))

(assert (=> b!106299 m!118647))

(assert (=> b!106300 m!118645))

(declare-fun m!118943 () Bool)

(assert (=> b!106300 m!118943))

(declare-fun m!118945 () Bool)

(assert (=> b!106300 m!118945))

(assert (=> b!106300 m!118645))

(declare-fun m!118947 () Bool)

(assert (=> b!106300 m!118947))

(assert (=> b!105730 d!29145))

(declare-fun d!29147 () Bool)

(declare-fun e!69179 () Bool)

(assert (=> d!29147 e!69179))

(declare-fun res!52880 () Bool)

(assert (=> d!29147 (=> res!52880 e!69179)))

(declare-fun lt!54501 () Bool)

(assert (=> d!29147 (= res!52880 (not lt!54501))))

(declare-fun lt!54499 () Bool)

(assert (=> d!29147 (= lt!54501 lt!54499)))

(declare-fun lt!54500 () Unit!3232)

(declare-fun e!69178 () Unit!3232)

(assert (=> d!29147 (= lt!54500 e!69178)))

(declare-fun c!18549 () Bool)

(assert (=> d!29147 (= c!18549 lt!54499)))

(assert (=> d!29147 (= lt!54499 (containsKey!160 (toList!803 lt!54392) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29147 (= (contains!828 lt!54392 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54501)))

(declare-fun b!106302 () Bool)

(declare-fun lt!54502 () Unit!3232)

(assert (=> b!106302 (= e!69178 lt!54502)))

(assert (=> b!106302 (= lt!54502 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54392) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106302 (isDefined!109 (getValueByKey!156 (toList!803 lt!54392) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106303 () Bool)

(declare-fun Unit!3270 () Unit!3232)

(assert (=> b!106303 (= e!69178 Unit!3270)))

(declare-fun b!106304 () Bool)

(assert (=> b!106304 (= e!69179 (isDefined!109 (getValueByKey!156 (toList!803 lt!54392) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29147 c!18549) b!106302))

(assert (= (and d!29147 (not c!18549)) b!106303))

(assert (= (and d!29147 (not res!52880)) b!106304))

(declare-fun m!118949 () Bool)

(assert (=> d!29147 m!118949))

(declare-fun m!118951 () Bool)

(assert (=> b!106302 m!118951))

(declare-fun m!118953 () Bool)

(assert (=> b!106302 m!118953))

(assert (=> b!106302 m!118953))

(declare-fun m!118955 () Bool)

(assert (=> b!106302 m!118955))

(assert (=> b!106304 m!118953))

(assert (=> b!106304 m!118953))

(assert (=> b!106304 m!118955))

(assert (=> d!29023 d!29147))

(assert (=> d!29023 d!28803))

(declare-fun b!106323 () Bool)

(declare-fun e!69193 () SeekEntryResult!259)

(assert (=> b!106323 (= e!69193 (Intermediate!259 false (toIndex!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6728 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!106324 () Bool)

(declare-fun e!69194 () Bool)

(declare-fun e!69191 () Bool)

(assert (=> b!106324 (= e!69194 e!69191)))

(declare-fun res!52888 () Bool)

(declare-fun lt!54507 () SeekEntryResult!259)

(assert (=> b!106324 (= res!52888 (and ((_ is Intermediate!259) lt!54507) (not (undefined!1071 lt!54507)) (bvslt (x!13645 lt!54507) #b01111111111111111111111111111110) (bvsge (x!13645 lt!54507) #b00000000000000000000000000000000) (bvsge (x!13645 lt!54507) #b00000000000000000000000000000000)))))

(assert (=> b!106324 (=> (not res!52888) (not e!69191))))

(declare-fun b!106325 () Bool)

(declare-fun e!69190 () SeekEntryResult!259)

(assert (=> b!106325 (= e!69190 e!69193)))

(declare-fun c!18558 () Bool)

(declare-fun lt!54508 () (_ BitVec 64))

(assert (=> b!106325 (= c!18558 (or (= lt!54508 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (= (bvadd lt!54508 lt!54508) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106326 () Bool)

(assert (=> b!106326 (= e!69190 (Intermediate!259 true (toIndex!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6728 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!106327 () Bool)

(assert (=> b!106327 (and (bvsge (index!3186 lt!54507) #b00000000000000000000000000000000) (bvslt (index!3186 lt!54507) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun res!52887 () Bool)

(assert (=> b!106327 (= res!52887 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3186 lt!54507)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69192 () Bool)

(assert (=> b!106327 (=> res!52887 e!69192)))

(declare-fun b!106328 () Bool)

(assert (=> b!106328 (and (bvsge (index!3186 lt!54507) #b00000000000000000000000000000000) (bvslt (index!3186 lt!54507) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun res!52889 () Bool)

(assert (=> b!106328 (= res!52889 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3186 lt!54507)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!106328 (=> res!52889 e!69192)))

(assert (=> b!106328 (= e!69191 e!69192)))

(declare-fun b!106329 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!106329 (= e!69193 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6728 newMap!16)) #b00000000000000000000000000000000 (mask!6728 newMap!16)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun d!29149 () Bool)

(assert (=> d!29149 e!69194))

(declare-fun c!18557 () Bool)

(assert (=> d!29149 (= c!18557 (and ((_ is Intermediate!259) lt!54507) (undefined!1071 lt!54507)))))

(assert (=> d!29149 (= lt!54507 e!69190)))

(declare-fun c!18556 () Bool)

(assert (=> d!29149 (= c!18556 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!29149 (= lt!54508 (select (arr!2063 (_keys!4288 newMap!16)) (toIndex!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6728 newMap!16))))))

(assert (=> d!29149 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29149 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6728 newMap!16)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)) lt!54507)))

(declare-fun b!106330 () Bool)

(assert (=> b!106330 (and (bvsge (index!3186 lt!54507) #b00000000000000000000000000000000) (bvslt (index!3186 lt!54507) (size!2318 (_keys!4288 newMap!16))))))

(assert (=> b!106330 (= e!69192 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3186 lt!54507)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106331 () Bool)

(assert (=> b!106331 (= e!69194 (bvsge (x!13645 lt!54507) #b01111111111111111111111111111110))))

(assert (= (and d!29149 c!18556) b!106326))

(assert (= (and d!29149 (not c!18556)) b!106325))

(assert (= (and b!106325 c!18558) b!106323))

(assert (= (and b!106325 (not c!18558)) b!106329))

(assert (= (and d!29149 c!18557) b!106331))

(assert (= (and d!29149 (not c!18557)) b!106324))

(assert (= (and b!106324 res!52888) b!106328))

(assert (= (and b!106328 (not res!52889)) b!106327))

(assert (= (and b!106327 (not res!52887)) b!106330))

(assert (=> d!29149 m!117929))

(declare-fun m!118957 () Bool)

(assert (=> d!29149 m!118957))

(assert (=> d!29149 m!117933))

(declare-fun m!118959 () Bool)

(assert (=> b!106328 m!118959))

(assert (=> b!106327 m!118959))

(assert (=> b!106329 m!117929))

(declare-fun m!118961 () Bool)

(assert (=> b!106329 m!118961))

(assert (=> b!106329 m!118961))

(assert (=> b!106329 m!117489))

(declare-fun m!118963 () Bool)

(assert (=> b!106329 m!118963))

(assert (=> b!106330 m!118959))

(assert (=> d!28859 d!29149))

(declare-fun d!29151 () Bool)

(declare-fun lt!54514 () (_ BitVec 32))

(declare-fun lt!54513 () (_ BitVec 32))

(assert (=> d!29151 (= lt!54514 (bvmul (bvxor lt!54513 (bvlshr lt!54513 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!29151 (= lt!54513 ((_ extract 31 0) (bvand (bvxor (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvlshr (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!29151 (and (bvsge (mask!6728 newMap!16) #b00000000000000000000000000000000) (let ((res!52890 (let ((h!2213 ((_ extract 31 0) (bvand (bvxor (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvlshr (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13747 (bvmul (bvxor h!2213 (bvlshr h!2213 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13747 (bvlshr x!13747 #b00000000000000000000000000001101)) (mask!6728 newMap!16)))))) (and (bvslt res!52890 (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001)) (bvsge res!52890 #b00000000000000000000000000000000))))))

(assert (=> d!29151 (= (toIndex!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (mask!6728 newMap!16)) (bvand (bvxor lt!54514 (bvlshr lt!54514 #b00000000000000000000000000001101)) (mask!6728 newMap!16)))))

(assert (=> d!28859 d!29151))

(declare-fun d!29153 () Bool)

(assert (=> d!29153 (= (validMask!0 (mask!6728 newMap!16)) (and (or (= (mask!6728 newMap!16) #b00000000000000000000000000000111) (= (mask!6728 newMap!16) #b00000000000000000000000000001111) (= (mask!6728 newMap!16) #b00000000000000000000000000011111) (= (mask!6728 newMap!16) #b00000000000000000000000000111111) (= (mask!6728 newMap!16) #b00000000000000000000000001111111) (= (mask!6728 newMap!16) #b00000000000000000000000011111111) (= (mask!6728 newMap!16) #b00000000000000000000000111111111) (= (mask!6728 newMap!16) #b00000000000000000000001111111111) (= (mask!6728 newMap!16) #b00000000000000000000011111111111) (= (mask!6728 newMap!16) #b00000000000000000000111111111111) (= (mask!6728 newMap!16) #b00000000000000000001111111111111) (= (mask!6728 newMap!16) #b00000000000000000011111111111111) (= (mask!6728 newMap!16) #b00000000000000000111111111111111) (= (mask!6728 newMap!16) #b00000000000000001111111111111111) (= (mask!6728 newMap!16) #b00000000000000011111111111111111) (= (mask!6728 newMap!16) #b00000000000000111111111111111111) (= (mask!6728 newMap!16) #b00000000000001111111111111111111) (= (mask!6728 newMap!16) #b00000000000011111111111111111111) (= (mask!6728 newMap!16) #b00000000000111111111111111111111) (= (mask!6728 newMap!16) #b00000000001111111111111111111111) (= (mask!6728 newMap!16) #b00000000011111111111111111111111) (= (mask!6728 newMap!16) #b00000000111111111111111111111111) (= (mask!6728 newMap!16) #b00000001111111111111111111111111) (= (mask!6728 newMap!16) #b00000011111111111111111111111111) (= (mask!6728 newMap!16) #b00000111111111111111111111111111) (= (mask!6728 newMap!16) #b00001111111111111111111111111111) (= (mask!6728 newMap!16) #b00011111111111111111111111111111) (= (mask!6728 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6728 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!28859 d!29153))

(declare-fun d!29155 () Bool)

(declare-fun res!52891 () Bool)

(declare-fun e!69195 () Bool)

(assert (=> d!29155 (=> res!52891 e!69195)))

(assert (=> d!29155 (= res!52891 (and ((_ is Cons!1613) lt!53904) (= (_1!1216 (h!2210 lt!53904)) (_1!1216 lt!53815))))))

(assert (=> d!29155 (= (containsKey!160 lt!53904 (_1!1216 lt!53815)) e!69195)))

(declare-fun b!106332 () Bool)

(declare-fun e!69196 () Bool)

(assert (=> b!106332 (= e!69195 e!69196)))

(declare-fun res!52892 () Bool)

(assert (=> b!106332 (=> (not res!52892) (not e!69196))))

(assert (=> b!106332 (= res!52892 (and (or (not ((_ is Cons!1613) lt!53904)) (bvsle (_1!1216 (h!2210 lt!53904)) (_1!1216 lt!53815))) ((_ is Cons!1613) lt!53904) (bvslt (_1!1216 (h!2210 lt!53904)) (_1!1216 lt!53815))))))

(declare-fun b!106333 () Bool)

(assert (=> b!106333 (= e!69196 (containsKey!160 (t!5700 lt!53904) (_1!1216 lt!53815)))))

(assert (= (and d!29155 (not res!52891)) b!106332))

(assert (= (and b!106332 res!52892) b!106333))

(declare-fun m!118965 () Bool)

(assert (=> b!106333 m!118965))

(assert (=> b!105751 d!29155))

(declare-fun d!29157 () Bool)

(declare-fun e!69198 () Bool)

(assert (=> d!29157 e!69198))

(declare-fun res!52893 () Bool)

(assert (=> d!29157 (=> res!52893 e!69198)))

(declare-fun lt!54517 () Bool)

(assert (=> d!29157 (= res!52893 (not lt!54517))))

(declare-fun lt!54515 () Bool)

(assert (=> d!29157 (= lt!54517 lt!54515)))

(declare-fun lt!54516 () Unit!3232)

(declare-fun e!69197 () Unit!3232)

(assert (=> d!29157 (= lt!54516 e!69197)))

(declare-fun c!18559 () Bool)

(assert (=> d!29157 (= c!18559 lt!54515)))

(assert (=> d!29157 (= lt!54515 (containsKey!160 (toList!803 lt!54365) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29157 (= (contains!828 lt!54365 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54517)))

(declare-fun b!106334 () Bool)

(declare-fun lt!54518 () Unit!3232)

(assert (=> b!106334 (= e!69197 lt!54518)))

(assert (=> b!106334 (= lt!54518 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54365) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106334 (isDefined!109 (getValueByKey!156 (toList!803 lt!54365) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106335 () Bool)

(declare-fun Unit!3271 () Unit!3232)

(assert (=> b!106335 (= e!69197 Unit!3271)))

(declare-fun b!106336 () Bool)

(assert (=> b!106336 (= e!69198 (isDefined!109 (getValueByKey!156 (toList!803 lt!54365) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29157 c!18559) b!106334))

(assert (= (and d!29157 (not c!18559)) b!106335))

(assert (= (and d!29157 (not res!52893)) b!106336))

(declare-fun m!118967 () Bool)

(assert (=> d!29157 m!118967))

(declare-fun m!118969 () Bool)

(assert (=> b!106334 m!118969))

(declare-fun m!118971 () Bool)

(assert (=> b!106334 m!118971))

(assert (=> b!106334 m!118971))

(declare-fun m!118973 () Bool)

(assert (=> b!106334 m!118973))

(assert (=> b!106336 m!118971))

(assert (=> b!106336 m!118971))

(assert (=> b!106336 m!118973))

(assert (=> bm!11206 d!29157))

(declare-fun d!29159 () Bool)

(declare-fun lt!54519 () Bool)

(assert (=> d!29159 (= lt!54519 (select (content!109 lt!53893) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun e!69200 () Bool)

(assert (=> d!29159 (= lt!54519 e!69200)))

(declare-fun res!52894 () Bool)

(assert (=> d!29159 (=> (not res!52894) (not e!69200))))

(assert (=> d!29159 (= res!52894 ((_ is Cons!1613) lt!53893))))

(assert (=> d!29159 (= (contains!830 lt!53893 (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))) lt!54519)))

(declare-fun b!106337 () Bool)

(declare-fun e!69199 () Bool)

(assert (=> b!106337 (= e!69200 e!69199)))

(declare-fun res!52895 () Bool)

(assert (=> b!106337 (=> res!52895 e!69199)))

(assert (=> b!106337 (= res!52895 (= (h!2210 lt!53893) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun b!106338 () Bool)

(assert (=> b!106338 (= e!69199 (contains!830 (t!5700 lt!53893) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(assert (= (and d!29159 res!52894) b!106337))

(assert (= (and b!106337 (not res!52895)) b!106338))

(declare-fun m!118975 () Bool)

(assert (=> d!29159 m!118975))

(declare-fun m!118977 () Bool)

(assert (=> d!29159 m!118977))

(declare-fun m!118979 () Bool)

(assert (=> b!106338 m!118979))

(assert (=> b!105878 d!29159))

(declare-fun d!29161 () Bool)

(declare-fun e!69202 () Bool)

(assert (=> d!29161 e!69202))

(declare-fun res!52896 () Bool)

(assert (=> d!29161 (=> res!52896 e!69202)))

(declare-fun lt!54522 () Bool)

(assert (=> d!29161 (= res!52896 (not lt!54522))))

(declare-fun lt!54520 () Bool)

(assert (=> d!29161 (= lt!54522 lt!54520)))

(declare-fun lt!54521 () Unit!3232)

(declare-fun e!69201 () Unit!3232)

(assert (=> d!29161 (= lt!54521 e!69201)))

(declare-fun c!18560 () Bool)

(assert (=> d!29161 (= c!18560 lt!54520)))

(assert (=> d!29161 (= lt!54520 (containsKey!160 (toList!803 lt!54188) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29161 (= (contains!828 lt!54188 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54522)))

(declare-fun b!106339 () Bool)

(declare-fun lt!54523 () Unit!3232)

(assert (=> b!106339 (= e!69201 lt!54523)))

(assert (=> b!106339 (= lt!54523 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54188) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106339 (isDefined!109 (getValueByKey!156 (toList!803 lt!54188) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106340 () Bool)

(declare-fun Unit!3272 () Unit!3232)

(assert (=> b!106340 (= e!69201 Unit!3272)))

(declare-fun b!106341 () Bool)

(assert (=> b!106341 (= e!69202 (isDefined!109 (getValueByKey!156 (toList!803 lt!54188) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29161 c!18560) b!106339))

(assert (= (and d!29161 (not c!18560)) b!106340))

(assert (= (and d!29161 (not res!52896)) b!106341))

(declare-fun m!118981 () Bool)

(assert (=> d!29161 m!118981))

(declare-fun m!118983 () Bool)

(assert (=> b!106339 m!118983))

(declare-fun m!118985 () Bool)

(assert (=> b!106339 m!118985))

(assert (=> b!106339 m!118985))

(declare-fun m!118987 () Bool)

(assert (=> b!106339 m!118987))

(assert (=> b!106341 m!118985))

(assert (=> b!106341 m!118985))

(assert (=> b!106341 m!118987))

(assert (=> bm!11177 d!29161))

(declare-fun d!29163 () Bool)

(declare-fun res!52897 () Bool)

(declare-fun e!69203 () Bool)

(assert (=> d!29163 (=> res!52897 e!69203)))

(assert (=> d!29163 (= res!52897 (and ((_ is Cons!1613) (toList!803 lt!53878)) (= (_1!1216 (h!2210 (toList!803 lt!53878))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29163 (= (containsKey!160 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000) e!69203)))

(declare-fun b!106342 () Bool)

(declare-fun e!69204 () Bool)

(assert (=> b!106342 (= e!69203 e!69204)))

(declare-fun res!52898 () Bool)

(assert (=> b!106342 (=> (not res!52898) (not e!69204))))

(assert (=> b!106342 (= res!52898 (and (or (not ((_ is Cons!1613) (toList!803 lt!53878))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53878))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1613) (toList!803 lt!53878)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53878))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106343 () Bool)

(assert (=> b!106343 (= e!69204 (containsKey!160 (t!5700 (toList!803 lt!53878)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29163 (not res!52897)) b!106342))

(assert (= (and b!106342 res!52898) b!106343))

(declare-fun m!118989 () Bool)

(assert (=> b!106343 m!118989))

(assert (=> d!28961 d!29163))

(declare-fun d!29165 () Bool)

(assert (=> d!29165 (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54524 () Unit!3232)

(assert (=> d!29165 (= lt!54524 (choose!660 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69205 () Bool)

(assert (=> d!29165 e!69205))

(declare-fun res!52899 () Bool)

(assert (=> d!29165 (=> (not res!52899) (not e!69205))))

(assert (=> d!29165 (= res!52899 (isStrictlySorted!309 (toList!803 lt!53878)))))

(assert (=> d!29165 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000) lt!54524)))

(declare-fun b!106344 () Bool)

(assert (=> b!106344 (= e!69205 (containsKey!160 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29165 res!52899) b!106344))

(assert (=> d!29165 m!118275))

(assert (=> d!29165 m!118275))

(assert (=> d!29165 m!118277))

(declare-fun m!118991 () Bool)

(assert (=> d!29165 m!118991))

(declare-fun m!118993 () Bool)

(assert (=> d!29165 m!118993))

(assert (=> b!106344 m!118271))

(assert (=> b!105923 d!29165))

(declare-fun d!29167 () Bool)

(assert (=> d!29167 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4364 () Bool)

(assert (= bs!4364 d!29167))

(assert (=> bs!4364 m!118275))

(declare-fun m!118995 () Bool)

(assert (=> bs!4364 m!118995))

(assert (=> b!105923 d!29167))

(declare-fun b!106347 () Bool)

(declare-fun e!69207 () Option!162)

(assert (=> b!106347 (= e!69207 (getValueByKey!156 (t!5700 (toList!803 lt!53878)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106345 () Bool)

(declare-fun e!69206 () Option!162)

(assert (=> b!106345 (= e!69206 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53878)))))))

(declare-fun d!29169 () Bool)

(declare-fun c!18561 () Bool)

(assert (=> d!29169 (= c!18561 (and ((_ is Cons!1613) (toList!803 lt!53878)) (= (_1!1216 (h!2210 (toList!803 lt!53878))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29169 (= (getValueByKey!156 (toList!803 lt!53878) #b0000000000000000000000000000000000000000000000000000000000000000) e!69206)))

(declare-fun b!106348 () Bool)

(assert (=> b!106348 (= e!69207 None!160)))

(declare-fun b!106346 () Bool)

(assert (=> b!106346 (= e!69206 e!69207)))

(declare-fun c!18562 () Bool)

(assert (=> b!106346 (= c!18562 (and ((_ is Cons!1613) (toList!803 lt!53878)) (not (= (_1!1216 (h!2210 (toList!803 lt!53878))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!29169 c!18561) b!106345))

(assert (= (and d!29169 (not c!18561)) b!106346))

(assert (= (and b!106346 c!18562) b!106347))

(assert (= (and b!106346 (not c!18562)) b!106348))

(declare-fun m!118997 () Bool)

(assert (=> b!106347 m!118997))

(assert (=> b!105923 d!29169))

(declare-fun d!29171 () Bool)

(assert (=> d!29171 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (getCurrentListMap!489 (_keys!4288 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(assert (=> d!29171 true))

(declare-fun _$5!110 () Unit!3232)

(assert (=> d!29171 (= (choose!663 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3185 lt!54060) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 (defaultEntry!2582 newMap!16)) _$5!110)))

(declare-fun bs!4365 () Bool)

(assert (= bs!4365 d!29171))

(assert (=> bs!4365 m!117707))

(assert (=> bs!4365 m!117707))

(assert (=> bs!4365 m!118287))

(assert (=> bs!4365 m!117787))

(assert (=> bs!4365 m!118289))

(assert (=> d!28965 d!29171))

(assert (=> d!28965 d!29153))

(declare-fun d!29173 () Bool)

(assert (=> d!29173 (= (get!1333 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105842 d!29173))

(declare-fun d!29175 () Bool)

(assert (=> d!29175 (= (isEmpty!370 lt!54392) (isEmpty!372 (toList!803 lt!54392)))))

(declare-fun bs!4366 () Bool)

(assert (= bs!4366 d!29175))

(declare-fun m!118999 () Bool)

(assert (=> bs!4366 m!118999))

(assert (=> b!106088 d!29175))

(declare-fun d!29177 () Bool)

(assert (=> d!29177 (isDefined!109 (getValueByKey!156 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun lt!54525 () Unit!3232)

(assert (=> d!29177 (= lt!54525 (choose!660 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!69208 () Bool)

(assert (=> d!29177 e!69208))

(declare-fun res!52900 () Bool)

(assert (=> d!29177 (=> (not res!52900) (not e!69208))))

(assert (=> d!29177 (= res!52900 (isStrictlySorted!309 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))))

(assert (=> d!29177 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54525)))

(declare-fun b!106349 () Bool)

(assert (=> b!106349 (= e!69208 (containsKey!160 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29177 res!52900) b!106349))

(assert (=> d!29177 m!117489))

(assert (=> d!29177 m!118295))

(assert (=> d!29177 m!118295))

(assert (=> d!29177 m!118297))

(assert (=> d!29177 m!117489))

(declare-fun m!119001 () Bool)

(assert (=> d!29177 m!119001))

(declare-fun m!119003 () Bool)

(assert (=> d!29177 m!119003))

(assert (=> b!106349 m!117489))

(assert (=> b!106349 m!118291))

(assert (=> b!105932 d!29177))

(declare-fun d!29179 () Bool)

(assert (=> d!29179 (= (isDefined!109 (getValueByKey!156 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))) (not (isEmpty!371 (getValueByKey!156 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(declare-fun bs!4367 () Bool)

(assert (= bs!4367 d!29179))

(assert (=> bs!4367 m!118295))

(declare-fun m!119005 () Bool)

(assert (=> bs!4367 m!119005))

(assert (=> b!105932 d!29179))

(declare-fun b!106352 () Bool)

(declare-fun e!69210 () Option!162)

(assert (=> b!106352 (= e!69210 (getValueByKey!156 (t!5700 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!106350 () Bool)

(declare-fun e!69209 () Option!162)

(assert (=> b!106350 (= e!69209 (Some!161 (_2!1216 (h!2210 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))))))

(declare-fun d!29181 () Bool)

(declare-fun c!18563 () Bool)

(assert (=> d!29181 (= c!18563 (and ((_ is Cons!1613) (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))) (= (_1!1216 (h!2210 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29181 (= (getValueByKey!156 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69209)))

(declare-fun b!106353 () Bool)

(assert (=> b!106353 (= e!69210 None!160)))

(declare-fun b!106351 () Bool)

(assert (=> b!106351 (= e!69209 e!69210)))

(declare-fun c!18564 () Bool)

(assert (=> b!106351 (= c!18564 (and ((_ is Cons!1613) (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))) (not (= (_1!1216 (h!2210 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(assert (= (and d!29181 c!18563) b!106350))

(assert (= (and d!29181 (not c!18563)) b!106351))

(assert (= (and b!106351 c!18564) b!106352))

(assert (= (and b!106351 (not c!18564)) b!106353))

(assert (=> b!106352 m!117489))

(declare-fun m!119007 () Bool)

(assert (=> b!106352 m!119007))

(assert (=> b!105932 d!29181))

(declare-fun d!29183 () Bool)

(declare-fun res!52901 () Bool)

(declare-fun e!69211 () Bool)

(assert (=> d!29183 (=> res!52901 e!69211)))

(assert (=> d!29183 (= res!52901 (and ((_ is Cons!1613) lt!54211) (= (_1!1216 (h!2210 lt!54211)) (_1!1216 lt!53815))))))

(assert (=> d!29183 (= (containsKey!160 lt!54211 (_1!1216 lt!53815)) e!69211)))

(declare-fun b!106354 () Bool)

(declare-fun e!69212 () Bool)

(assert (=> b!106354 (= e!69211 e!69212)))

(declare-fun res!52902 () Bool)

(assert (=> b!106354 (=> (not res!52902) (not e!69212))))

(assert (=> b!106354 (= res!52902 (and (or (not ((_ is Cons!1613) lt!54211)) (bvsle (_1!1216 (h!2210 lt!54211)) (_1!1216 lt!53815))) ((_ is Cons!1613) lt!54211) (bvslt (_1!1216 (h!2210 lt!54211)) (_1!1216 lt!53815))))))

(declare-fun b!106355 () Bool)

(assert (=> b!106355 (= e!69212 (containsKey!160 (t!5700 lt!54211) (_1!1216 lt!53815)))))

(assert (= (and d!29183 (not res!52901)) b!106354))

(assert (= (and b!106354 res!52902) b!106355))

(declare-fun m!119009 () Bool)

(assert (=> b!106355 m!119009))

(assert (=> b!105886 d!29183))

(declare-fun d!29185 () Bool)

(assert (=> d!29185 (isDefined!109 (getValueByKey!156 (toList!803 lt!53895) (_1!1216 lt!53814)))))

(declare-fun lt!54526 () Unit!3232)

(assert (=> d!29185 (= lt!54526 (choose!660 (toList!803 lt!53895) (_1!1216 lt!53814)))))

(declare-fun e!69213 () Bool)

(assert (=> d!29185 e!69213))

(declare-fun res!52903 () Bool)

(assert (=> d!29185 (=> (not res!52903) (not e!69213))))

(assert (=> d!29185 (= res!52903 (isStrictlySorted!309 (toList!803 lt!53895)))))

(assert (=> d!29185 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53895) (_1!1216 lt!53814)) lt!54526)))

(declare-fun b!106356 () Bool)

(assert (=> b!106356 (= e!69213 (containsKey!160 (toList!803 lt!53895) (_1!1216 lt!53814)))))

(assert (= (and d!29185 res!52903) b!106356))

(assert (=> d!29185 m!117661))

(assert (=> d!29185 m!117661))

(assert (=> d!29185 m!118309))

(declare-fun m!119011 () Bool)

(assert (=> d!29185 m!119011))

(declare-fun m!119013 () Bool)

(assert (=> d!29185 m!119013))

(assert (=> b!106356 m!118305))

(assert (=> b!105938 d!29185))

(declare-fun d!29187 () Bool)

(assert (=> d!29187 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53895) (_1!1216 lt!53814))) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53895) (_1!1216 lt!53814)))))))

(declare-fun bs!4368 () Bool)

(assert (= bs!4368 d!29187))

(assert (=> bs!4368 m!117661))

(declare-fun m!119015 () Bool)

(assert (=> bs!4368 m!119015))

(assert (=> b!105938 d!29187))

(assert (=> b!105938 d!28959))

(declare-fun b!106357 () Bool)

(declare-fun e!69215 () (_ BitVec 32))

(declare-fun call!11243 () (_ BitVec 32))

(assert (=> b!106357 (= e!69215 (bvadd #b00000000000000000000000000000001 call!11243))))

(declare-fun b!106358 () Bool)

(declare-fun e!69214 () (_ BitVec 32))

(assert (=> b!106358 (= e!69214 #b00000000000000000000000000000000)))

(declare-fun b!106359 () Bool)

(assert (=> b!106359 (= e!69215 call!11243)))

(declare-fun lt!54527 () (_ BitVec 32))

(declare-fun d!29189 () Bool)

(assert (=> d!29189 (and (bvsge lt!54527 #b00000000000000000000000000000000) (bvsle lt!54527 (bvsub (size!2318 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!29189 (= lt!54527 e!69214)))

(declare-fun c!18565 () Bool)

(assert (=> d!29189 (= c!18565 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29189 (and (bvsle #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2318 (_keys!4288 newMap!16)) (size!2318 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))))

(assert (=> d!29189 (= (arrayCountValidKeys!0 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) lt!54527)))

(declare-fun bm!11240 () Bool)

(assert (=> bm!11240 (= call!11243 (arrayCountValidKeys!0 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106360 () Bool)

(assert (=> b!106360 (= e!69214 e!69215)))

(declare-fun c!18566 () Bool)

(assert (=> b!106360 (= c!18566 (validKeyInArray!0 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!29189 c!18565) b!106358))

(assert (= (and d!29189 (not c!18565)) b!106360))

(assert (= (and b!106360 c!18566) b!106357))

(assert (= (and b!106360 (not c!18566)) b!106359))

(assert (= (or b!106357 b!106359) bm!11240))

(declare-fun m!119017 () Bool)

(assert (=> bm!11240 m!119017))

(declare-fun m!119019 () Bool)

(assert (=> b!106360 m!119019))

(assert (=> b!106360 m!119019))

(declare-fun m!119021 () Bool)

(assert (=> b!106360 m!119021))

(assert (=> d!29001 d!29189))

(declare-fun d!29191 () Bool)

(assert (=> d!29191 (arrayContainsKey!0 lt!54349 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!54528 () Unit!3232)

(assert (=> d!29191 (= lt!54528 (choose!13 lt!54349 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))))))

(assert (=> d!29191 (bvsge (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000000)))

(assert (=> d!29191 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!54349 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))) lt!54528)))

(declare-fun bs!4369 () Bool)

(assert (= bs!4369 d!29191))

(assert (=> bs!4369 m!117489))

(assert (=> bs!4369 m!118451))

(assert (=> bs!4369 m!117489))

(declare-fun m!119023 () Bool)

(assert (=> bs!4369 m!119023))

(assert (=> d!29001 d!29191))

(declare-fun d!29193 () Bool)

(declare-fun e!69218 () Bool)

(assert (=> d!29193 e!69218))

(declare-fun res!52906 () Bool)

(assert (=> d!29193 (=> (not res!52906) (not e!69218))))

(assert (=> d!29193 (= res!52906 (and (bvsge (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000000) (bvslt (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (size!2318 (_keys!4288 newMap!16))) (bvslt (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (size!2319 (_values!2565 newMap!16)))))))

(declare-fun lt!54531 () Unit!3232)

(declare-fun choose!665 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) (_ BitVec 64) V!3219 Int) Unit!3232)

(assert (=> d!29193 (= lt!54531 (choose!665 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 (defaultEntry!2582 newMap!16)))))

(assert (=> d!29193 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29193 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!30 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807 (defaultEntry!2582 newMap!16)) lt!54531)))

(declare-fun b!106363 () Bool)

(assert (=> b!106363 (= e!69218 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (getCurrentListMap!489 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))))))

(assert (= (and d!29193 res!52906) b!106363))

(assert (=> d!29193 m!117489))

(declare-fun m!119025 () Bool)

(assert (=> d!29193 m!119025))

(assert (=> d!29193 m!117933))

(assert (=> b!106363 m!117707))

(assert (=> b!106363 m!118287))

(assert (=> b!106363 m!118449))

(assert (=> b!106363 m!118429))

(assert (=> b!106363 m!118459))

(assert (=> b!106363 m!117707))

(assert (=> d!29001 d!29193))

(declare-fun d!29195 () Bool)

(declare-fun res!52907 () Bool)

(declare-fun e!69219 () Bool)

(assert (=> d!29195 (=> res!52907 e!69219)))

(assert (=> d!29195 (= res!52907 (= (select (arr!2063 lt!54349) #b00000000000000000000000000000000) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29195 (= (arrayContainsKey!0 lt!54349 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000) e!69219)))

(declare-fun b!106364 () Bool)

(declare-fun e!69220 () Bool)

(assert (=> b!106364 (= e!69219 e!69220)))

(declare-fun res!52908 () Bool)

(assert (=> b!106364 (=> (not res!52908) (not e!69220))))

(assert (=> b!106364 (= res!52908 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 lt!54349)))))

(declare-fun b!106365 () Bool)

(assert (=> b!106365 (= e!69220 (arrayContainsKey!0 lt!54349 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!29195 (not res!52907)) b!106364))

(assert (= (and b!106364 res!52908) b!106365))

(declare-fun m!119027 () Bool)

(assert (=> d!29195 m!119027))

(assert (=> b!106365 m!117489))

(declare-fun m!119029 () Bool)

(assert (=> b!106365 m!119029))

(assert (=> d!29001 d!29195))

(assert (=> d!29001 d!28967))

(assert (=> d!29001 d!28929))

(assert (=> d!29001 d!28809))

(assert (=> d!29001 d!28951))

(declare-fun d!29197 () Bool)

(declare-fun e!69221 () Bool)

(assert (=> d!29197 e!69221))

(declare-fun res!52909 () Bool)

(assert (=> d!29197 (=> (not res!52909) (not e!69221))))

(assert (=> d!29197 (= res!52909 (and (bvsge (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000000) (bvslt (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (size!2318 lt!54331))))))

(declare-fun lt!54532 () Unit!3232)

(assert (=> d!29197 (= lt!54532 (choose!662 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (defaultEntry!2582 newMap!16)))))

(assert (=> d!29197 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29197 (= (lemmaValidKeyInArrayIsInListMap!108 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (defaultEntry!2582 newMap!16)) lt!54532)))

(declare-fun b!106366 () Bool)

(assert (=> b!106366 (= e!69221 (contains!828 (getCurrentListMap!489 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2063 lt!54331) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)))))))

(assert (= (and d!29197 res!52909) b!106366))

(declare-fun m!119031 () Bool)

(assert (=> d!29197 m!119031))

(assert (=> d!29197 m!117933))

(assert (=> b!106366 m!118447))

(declare-fun m!119033 () Bool)

(assert (=> b!106366 m!119033))

(assert (=> b!106366 m!118447))

(assert (=> b!106366 m!119033))

(declare-fun m!119035 () Bool)

(assert (=> b!106366 m!119035))

(assert (=> d!29001 d!29197))

(declare-fun d!29199 () Bool)

(declare-fun e!69224 () Bool)

(assert (=> d!29199 e!69224))

(declare-fun res!52912 () Bool)

(assert (=> d!29199 (=> (not res!52912) (not e!69224))))

(assert (=> d!29199 (= res!52912 (and (bvsge (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000000) (bvslt (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (size!2318 (_keys!4288 newMap!16)))))))

(declare-fun lt!54535 () Unit!3232)

(declare-fun choose!102 ((_ BitVec 64) array!4349 (_ BitVec 32) (_ BitVec 32)) Unit!3232)

(assert (=> d!29199 (= lt!54535 (choose!102 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (mask!6728 newMap!16)))))

(assert (=> d!29199 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29199 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (mask!6728 newMap!16)) lt!54535)))

(declare-fun b!106369 () Bool)

(assert (=> b!106369 (= e!69224 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (mask!6728 newMap!16)))))

(assert (= (and d!29199 res!52912) b!106369))

(assert (=> d!29199 m!117489))

(declare-fun m!119037 () Bool)

(assert (=> d!29199 m!119037))

(assert (=> d!29199 m!117933))

(assert (=> b!106369 m!118429))

(assert (=> b!106369 m!118441))

(assert (=> d!29001 d!29199))

(declare-fun d!29201 () Bool)

(declare-fun e!69227 () Bool)

(assert (=> d!29201 e!69227))

(declare-fun res!52915 () Bool)

(assert (=> d!29201 (=> (not res!52915) (not e!69227))))

(assert (=> d!29201 (= res!52915 (and (bvsge (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000000) (bvslt (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (size!2318 (_keys!4288 newMap!16)))))))

(declare-fun lt!54538 () Unit!3232)

(declare-fun choose!41 (array!4349 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1616) Unit!3232)

(assert (=> d!29201 (= lt!54538 (choose!41 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) lt!54346 lt!54345))))

(assert (=> d!29201 (bvslt (size!2318 (_keys!4288 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!29201 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) lt!54346 lt!54345) lt!54538)))

(declare-fun b!106372 () Bool)

(assert (=> b!106372 (= e!69227 (arrayNoDuplicates!0 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) lt!54346 lt!54345))))

(assert (= (and d!29201 res!52915) b!106372))

(assert (=> d!29201 m!117489))

(declare-fun m!119039 () Bool)

(assert (=> d!29201 m!119039))

(assert (=> b!106372 m!118429))

(assert (=> b!106372 m!118455))

(assert (=> d!29001 d!29201))

(declare-fun b!106381 () Bool)

(declare-fun res!52927 () Bool)

(declare-fun e!69233 () Bool)

(assert (=> b!106381 (=> (not res!52927) (not e!69233))))

(assert (=> b!106381 (= res!52927 (not (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))))))))

(declare-fun d!29203 () Bool)

(declare-fun e!69232 () Bool)

(assert (=> d!29203 e!69232))

(declare-fun res!52924 () Bool)

(assert (=> d!29203 (=> (not res!52924) (not e!69232))))

(assert (=> d!29203 (= res!52924 (and (bvsge (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000000) (bvslt (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (size!2318 (_keys!4288 newMap!16)))))))

(declare-fun lt!54541 () Unit!3232)

(declare-fun choose!1 (array!4349 (_ BitVec 32) (_ BitVec 64)) Unit!3232)

(assert (=> d!29203 (= lt!54541 (choose!1 (_keys!4288 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29203 e!69233))

(declare-fun res!52925 () Bool)

(assert (=> d!29203 (=> (not res!52925) (not e!69233))))

(assert (=> d!29203 (= res!52925 (and (bvsge (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000000) (bvslt (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (size!2318 (_keys!4288 newMap!16)))))))

(assert (=> d!29203 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4288 newMap!16) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54541)))

(declare-fun b!106383 () Bool)

(assert (=> b!106383 (= e!69233 (bvslt (size!2318 (_keys!4288 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!106382 () Bool)

(declare-fun res!52926 () Bool)

(assert (=> b!106382 (=> (not res!52926) (not e!69233))))

(assert (=> b!106382 (= res!52926 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!106384 () Bool)

(assert (=> b!106384 (= e!69232 (= (arrayCountValidKeys!0 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!29203 res!52925) b!106381))

(assert (= (and b!106381 res!52927) b!106382))

(assert (= (and b!106382 res!52926) b!106383))

(assert (= (and d!29203 res!52924) b!106384))

(declare-fun m!119041 () Bool)

(assert (=> b!106381 m!119041))

(assert (=> b!106381 m!119041))

(declare-fun m!119043 () Bool)

(assert (=> b!106381 m!119043))

(assert (=> d!29203 m!117489))

(declare-fun m!119045 () Bool)

(assert (=> d!29203 m!119045))

(assert (=> b!106382 m!117489))

(assert (=> b!106382 m!117607))

(assert (=> b!106384 m!118429))

(assert (=> b!106384 m!118443))

(assert (=> b!106384 m!117701))

(assert (=> d!29001 d!29203))

(assert (=> d!29001 d!28913))

(declare-fun call!11244 () Bool)

(declare-fun bm!11241 () Bool)

(assert (=> bm!11241 (= call!11244 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (mask!6728 newMap!16)))))

(declare-fun d!29205 () Bool)

(declare-fun res!52929 () Bool)

(declare-fun e!69234 () Bool)

(assert (=> d!29205 (=> res!52929 e!69234)))

(assert (=> d!29205 (= res!52929 (bvsge #b00000000000000000000000000000000 (size!2318 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))))

(assert (=> d!29205 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (mask!6728 newMap!16)) e!69234)))

(declare-fun b!106385 () Bool)

(declare-fun e!69235 () Bool)

(assert (=> b!106385 (= e!69235 call!11244)))

(declare-fun b!106386 () Bool)

(assert (=> b!106386 (= e!69234 e!69235)))

(declare-fun c!18567 () Bool)

(assert (=> b!106386 (= c!18567 (validKeyInArray!0 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!106387 () Bool)

(declare-fun e!69236 () Bool)

(assert (=> b!106387 (= e!69235 e!69236)))

(declare-fun lt!54542 () (_ BitVec 64))

(assert (=> b!106387 (= lt!54542 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54543 () Unit!3232)

(assert (=> b!106387 (= lt!54543 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) lt!54542 #b00000000000000000000000000000000))))

(assert (=> b!106387 (arrayContainsKey!0 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) lt!54542 #b00000000000000000000000000000000)))

(declare-fun lt!54544 () Unit!3232)

(assert (=> b!106387 (= lt!54544 lt!54543)))

(declare-fun res!52928 () Bool)

(assert (=> b!106387 (= res!52928 (= (seekEntryOrOpen!0 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000) (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (mask!6728 newMap!16)) (Found!259 #b00000000000000000000000000000000)))))

(assert (=> b!106387 (=> (not res!52928) (not e!69236))))

(declare-fun b!106388 () Bool)

(assert (=> b!106388 (= e!69236 call!11244)))

(assert (= (and d!29205 (not res!52929)) b!106386))

(assert (= (and b!106386 c!18567) b!106387))

(assert (= (and b!106386 (not c!18567)) b!106385))

(assert (= (and b!106387 res!52928) b!106388))

(assert (= (or b!106388 b!106385) bm!11241))

(declare-fun m!119047 () Bool)

(assert (=> bm!11241 m!119047))

(assert (=> b!106386 m!119019))

(assert (=> b!106386 m!119019))

(assert (=> b!106386 m!119021))

(assert (=> b!106387 m!119019))

(declare-fun m!119049 () Bool)

(assert (=> b!106387 m!119049))

(declare-fun m!119051 () Bool)

(assert (=> b!106387 m!119051))

(assert (=> b!106387 m!119019))

(declare-fun m!119053 () Bool)

(assert (=> b!106387 m!119053))

(assert (=> d!29001 d!29205))

(declare-fun d!29207 () Bool)

(declare-fun e!69237 () Bool)

(assert (=> d!29207 e!69237))

(declare-fun res!52930 () Bool)

(assert (=> d!29207 (=> (not res!52930) (not e!69237))))

(declare-fun lt!54546 () ListLongMap!1575)

(assert (=> d!29207 (= res!52930 (contains!828 lt!54546 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun lt!54548 () List!1617)

(assert (=> d!29207 (= lt!54546 (ListLongMap!1576 lt!54548))))

(declare-fun lt!54547 () Unit!3232)

(declare-fun lt!54545 () Unit!3232)

(assert (=> d!29207 (= lt!54547 lt!54545)))

(assert (=> d!29207 (= (getValueByKey!156 lt!54548 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!29207 (= lt!54545 (lemmaContainsTupThenGetReturnValue!72 lt!54548 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!29207 (= lt!54548 (insertStrictlySorted!75 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!29207 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) lt!54546)))

(declare-fun b!106389 () Bool)

(declare-fun res!52931 () Bool)

(assert (=> b!106389 (=> (not res!52931) (not e!69237))))

(assert (=> b!106389 (= res!52931 (= (getValueByKey!156 (toList!803 lt!54546) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!106390 () Bool)

(assert (=> b!106390 (= e!69237 (contains!830 (toList!803 lt!54546) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(assert (= (and d!29207 res!52930) b!106389))

(assert (= (and b!106389 res!52931) b!106390))

(declare-fun m!119055 () Bool)

(assert (=> d!29207 m!119055))

(declare-fun m!119057 () Bool)

(assert (=> d!29207 m!119057))

(declare-fun m!119059 () Bool)

(assert (=> d!29207 m!119059))

(declare-fun m!119061 () Bool)

(assert (=> d!29207 m!119061))

(declare-fun m!119063 () Bool)

(assert (=> b!106389 m!119063))

(declare-fun m!119065 () Bool)

(assert (=> b!106390 m!119065))

(assert (=> d!29001 d!29207))

(declare-fun bm!11242 () Bool)

(declare-fun call!11248 () Bool)

(declare-fun lt!54554 () ListLongMap!1575)

(assert (=> bm!11242 (= call!11248 (contains!828 lt!54554 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11243 () Bool)

(declare-fun call!11251 () ListLongMap!1575)

(declare-fun call!11246 () ListLongMap!1575)

(assert (=> bm!11243 (= call!11251 call!11246)))

(declare-fun b!106391 () Bool)

(declare-fun e!69239 () Unit!3232)

(declare-fun lt!54570 () Unit!3232)

(assert (=> b!106391 (= e!69239 lt!54570)))

(declare-fun lt!54552 () ListLongMap!1575)

(assert (=> b!106391 (= lt!54552 (getCurrentListMapNoExtraKeys!110 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54562 () (_ BitVec 64))

(assert (=> b!106391 (= lt!54562 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54550 () (_ BitVec 64))

(assert (=> b!106391 (= lt!54550 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54565 () Unit!3232)

(assert (=> b!106391 (= lt!54565 (addStillContains!74 lt!54552 lt!54562 (zeroValue!2457 newMap!16) lt!54550))))

(assert (=> b!106391 (contains!828 (+!144 lt!54552 (tuple2!2411 lt!54562 (zeroValue!2457 newMap!16))) lt!54550)))

(declare-fun lt!54564 () Unit!3232)

(assert (=> b!106391 (= lt!54564 lt!54565)))

(declare-fun lt!54567 () ListLongMap!1575)

(assert (=> b!106391 (= lt!54567 (getCurrentListMapNoExtraKeys!110 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54551 () (_ BitVec 64))

(assert (=> b!106391 (= lt!54551 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54549 () (_ BitVec 64))

(assert (=> b!106391 (= lt!54549 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54568 () Unit!3232)

(assert (=> b!106391 (= lt!54568 (addApplyDifferent!74 lt!54567 lt!54551 (minValue!2457 newMap!16) lt!54549))))

(assert (=> b!106391 (= (apply!98 (+!144 lt!54567 (tuple2!2411 lt!54551 (minValue!2457 newMap!16))) lt!54549) (apply!98 lt!54567 lt!54549))))

(declare-fun lt!54561 () Unit!3232)

(assert (=> b!106391 (= lt!54561 lt!54568)))

(declare-fun lt!54559 () ListLongMap!1575)

(assert (=> b!106391 (= lt!54559 (getCurrentListMapNoExtraKeys!110 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54563 () (_ BitVec 64))

(assert (=> b!106391 (= lt!54563 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54553 () (_ BitVec 64))

(assert (=> b!106391 (= lt!54553 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54560 () Unit!3232)

(assert (=> b!106391 (= lt!54560 (addApplyDifferent!74 lt!54559 lt!54563 (zeroValue!2457 newMap!16) lt!54553))))

(assert (=> b!106391 (= (apply!98 (+!144 lt!54559 (tuple2!2411 lt!54563 (zeroValue!2457 newMap!16))) lt!54553) (apply!98 lt!54559 lt!54553))))

(declare-fun lt!54569 () Unit!3232)

(assert (=> b!106391 (= lt!54569 lt!54560)))

(declare-fun lt!54555 () ListLongMap!1575)

(assert (=> b!106391 (= lt!54555 (getCurrentListMapNoExtraKeys!110 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54557 () (_ BitVec 64))

(assert (=> b!106391 (= lt!54557 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54566 () (_ BitVec 64))

(assert (=> b!106391 (= lt!54566 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!106391 (= lt!54570 (addApplyDifferent!74 lt!54555 lt!54557 (minValue!2457 newMap!16) lt!54566))))

(assert (=> b!106391 (= (apply!98 (+!144 lt!54555 (tuple2!2411 lt!54557 (minValue!2457 newMap!16))) lt!54566) (apply!98 lt!54555 lt!54566))))

(declare-fun bm!11244 () Bool)

(declare-fun call!11245 () ListLongMap!1575)

(assert (=> bm!11244 (= call!11246 call!11245)))

(declare-fun bm!11245 () Bool)

(declare-fun call!11249 () Bool)

(assert (=> bm!11245 (= call!11249 (contains!828 lt!54554 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106392 () Bool)

(declare-fun res!52938 () Bool)

(declare-fun e!69238 () Bool)

(assert (=> b!106392 (=> (not res!52938) (not e!69238))))

(declare-fun e!69247 () Bool)

(assert (=> b!106392 (= res!52938 e!69247)))

(declare-fun res!52939 () Bool)

(assert (=> b!106392 (=> res!52939 e!69247)))

(declare-fun e!69244 () Bool)

(assert (=> b!106392 (= res!52939 (not e!69244))))

(declare-fun res!52936 () Bool)

(assert (=> b!106392 (=> (not res!52936) (not e!69244))))

(assert (=> b!106392 (= res!52936 (bvslt #b00000000000000000000000000000000 (size!2318 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))))

(declare-fun b!106393 () Bool)

(declare-fun e!69248 () ListLongMap!1575)

(declare-fun call!11250 () ListLongMap!1575)

(assert (=> b!106393 (= e!69248 (+!144 call!11250 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(declare-fun bm!11246 () Bool)

(declare-fun call!11247 () ListLongMap!1575)

(assert (=> bm!11246 (= call!11247 call!11250)))

(declare-fun b!106394 () Bool)

(declare-fun e!69249 () Bool)

(assert (=> b!106394 (= e!69238 e!69249)))

(declare-fun c!18571 () Bool)

(assert (=> b!106394 (= c!18571 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106395 () Bool)

(declare-fun e!69246 () Bool)

(assert (=> b!106395 (= e!69246 (= (apply!98 lt!54554 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!106396 () Bool)

(declare-fun Unit!3273 () Unit!3232)

(assert (=> b!106396 (= e!69239 Unit!3273)))

(declare-fun b!106397 () Bool)

(assert (=> b!106397 (= e!69249 (not call!11248))))

(declare-fun b!106398 () Bool)

(declare-fun e!69250 () Bool)

(declare-fun e!69243 () Bool)

(assert (=> b!106398 (= e!69250 e!69243)))

(declare-fun res!52934 () Bool)

(assert (=> b!106398 (= res!52934 call!11249)))

(assert (=> b!106398 (=> (not res!52934) (not e!69243))))

(declare-fun d!29209 () Bool)

(assert (=> d!29209 e!69238))

(declare-fun res!52937 () Bool)

(assert (=> d!29209 (=> (not res!52937) (not e!69238))))

(assert (=> d!29209 (= res!52937 (or (bvsge #b00000000000000000000000000000000 (size!2318 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))))))

(declare-fun lt!54556 () ListLongMap!1575)

(assert (=> d!29209 (= lt!54554 lt!54556)))

(declare-fun lt!54558 () Unit!3232)

(assert (=> d!29209 (= lt!54558 e!69239)))

(declare-fun c!18568 () Bool)

(declare-fun e!69245 () Bool)

(assert (=> d!29209 (= c!18568 e!69245)))

(declare-fun res!52940 () Bool)

(assert (=> d!29209 (=> (not res!52940) (not e!69245))))

(assert (=> d!29209 (= res!52940 (bvslt #b00000000000000000000000000000000 (size!2318 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))))

(assert (=> d!29209 (= lt!54556 e!69248)))

(declare-fun c!18570 () Bool)

(assert (=> d!29209 (= c!18570 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29209 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29209 (= (getCurrentListMap!489 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54554)))

(declare-fun b!106399 () Bool)

(assert (=> b!106399 (= e!69244 (validKeyInArray!0 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!106400 () Bool)

(assert (=> b!106400 (= e!69250 (not call!11249))))

(declare-fun b!106401 () Bool)

(declare-fun e!69242 () ListLongMap!1575)

(assert (=> b!106401 (= e!69242 call!11247)))

(declare-fun b!106402 () Bool)

(declare-fun e!69241 () Bool)

(assert (=> b!106402 (= e!69241 (= (apply!98 lt!54554 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))))))

(assert (=> b!106402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))))

(declare-fun b!106403 () Bool)

(assert (=> b!106403 (= e!69243 (= (apply!98 lt!54554 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun bm!11247 () Bool)

(assert (=> bm!11247 (= call!11245 (getCurrentListMapNoExtraKeys!110 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!106404 () Bool)

(assert (=> b!106404 (= e!69248 e!69242)))

(declare-fun c!18573 () Bool)

(assert (=> b!106404 (= c!18573 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106405 () Bool)

(declare-fun res!52935 () Bool)

(assert (=> b!106405 (=> (not res!52935) (not e!69238))))

(assert (=> b!106405 (= res!52935 e!69250)))

(declare-fun c!18572 () Bool)

(assert (=> b!106405 (= c!18572 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106406 () Bool)

(declare-fun e!69240 () ListLongMap!1575)

(assert (=> b!106406 (= e!69240 call!11247)))

(declare-fun bm!11248 () Bool)

(assert (=> bm!11248 (= call!11250 (+!144 (ite c!18570 call!11245 (ite c!18573 call!11246 call!11251)) (ite (or c!18570 c!18573) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!106407 () Bool)

(declare-fun c!18569 () Bool)

(assert (=> b!106407 (= c!18569 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106407 (= e!69242 e!69240)))

(declare-fun b!106408 () Bool)

(assert (=> b!106408 (= e!69249 e!69246)))

(declare-fun res!52932 () Bool)

(assert (=> b!106408 (= res!52932 call!11248)))

(assert (=> b!106408 (=> (not res!52932) (not e!69246))))

(declare-fun b!106409 () Bool)

(assert (=> b!106409 (= e!69240 call!11251)))

(declare-fun b!106410 () Bool)

(assert (=> b!106410 (= e!69245 (validKeyInArray!0 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!106411 () Bool)

(assert (=> b!106411 (= e!69247 e!69241)))

(declare-fun res!52933 () Bool)

(assert (=> b!106411 (=> (not res!52933) (not e!69241))))

(assert (=> b!106411 (= res!52933 (contains!828 lt!54554 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!106411 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))))

(assert (= (and d!29209 c!18570) b!106393))

(assert (= (and d!29209 (not c!18570)) b!106404))

(assert (= (and b!106404 c!18573) b!106401))

(assert (= (and b!106404 (not c!18573)) b!106407))

(assert (= (and b!106407 c!18569) b!106406))

(assert (= (and b!106407 (not c!18569)) b!106409))

(assert (= (or b!106406 b!106409) bm!11243))

(assert (= (or b!106401 bm!11243) bm!11244))

(assert (= (or b!106401 b!106406) bm!11246))

(assert (= (or b!106393 bm!11244) bm!11247))

(assert (= (or b!106393 bm!11246) bm!11248))

(assert (= (and d!29209 res!52940) b!106410))

(assert (= (and d!29209 c!18568) b!106391))

(assert (= (and d!29209 (not c!18568)) b!106396))

(assert (= (and d!29209 res!52937) b!106392))

(assert (= (and b!106392 res!52936) b!106399))

(assert (= (and b!106392 (not res!52939)) b!106411))

(assert (= (and b!106411 res!52933) b!106402))

(assert (= (and b!106392 res!52938) b!106405))

(assert (= (and b!106405 c!18572) b!106398))

(assert (= (and b!106405 (not c!18572)) b!106400))

(assert (= (and b!106398 res!52934) b!106403))

(assert (= (or b!106398 b!106400) bm!11245))

(assert (= (and b!106405 res!52935) b!106394))

(assert (= (and b!106394 c!18571) b!106408))

(assert (= (and b!106394 (not c!18571)) b!106397))

(assert (= (and b!106408 res!52932) b!106395))

(assert (= (or b!106408 b!106397) bm!11242))

(declare-fun b_lambda!4755 () Bool)

(assert (=> (not b_lambda!4755) (not b!106402)))

(assert (=> b!106402 t!5708))

(declare-fun b_and!6555 () Bool)

(assert (= b_and!6551 (and (=> t!5708 result!3463) b_and!6555)))

(assert (=> b!106402 t!5710))

(declare-fun b_and!6557 () Bool)

(assert (= b_and!6553 (and (=> t!5710 result!3465) b_and!6557)))

(assert (=> d!29209 m!117933))

(assert (=> b!106402 m!119019))

(declare-fun m!119067 () Bool)

(assert (=> b!106402 m!119067))

(assert (=> b!106402 m!118149))

(declare-fun m!119069 () Bool)

(assert (=> b!106402 m!119069))

(assert (=> b!106402 m!118149))

(declare-fun m!119071 () Bool)

(assert (=> b!106402 m!119071))

(assert (=> b!106402 m!119019))

(assert (=> b!106402 m!119069))

(declare-fun m!119073 () Bool)

(assert (=> b!106403 m!119073))

(declare-fun m!119075 () Bool)

(assert (=> bm!11245 m!119075))

(declare-fun m!119077 () Bool)

(assert (=> bm!11248 m!119077))

(declare-fun m!119079 () Bool)

(assert (=> b!106395 m!119079))

(assert (=> b!106399 m!119019))

(assert (=> b!106399 m!119019))

(assert (=> b!106399 m!119021))

(declare-fun m!119081 () Bool)

(assert (=> bm!11247 m!119081))

(assert (=> b!106411 m!119019))

(assert (=> b!106411 m!119019))

(declare-fun m!119083 () Bool)

(assert (=> b!106411 m!119083))

(assert (=> b!106410 m!119019))

(assert (=> b!106410 m!119019))

(assert (=> b!106410 m!119021))

(declare-fun m!119085 () Bool)

(assert (=> b!106393 m!119085))

(declare-fun m!119087 () Bool)

(assert (=> bm!11242 m!119087))

(declare-fun m!119089 () Bool)

(assert (=> b!106391 m!119089))

(declare-fun m!119091 () Bool)

(assert (=> b!106391 m!119091))

(declare-fun m!119093 () Bool)

(assert (=> b!106391 m!119093))

(declare-fun m!119095 () Bool)

(assert (=> b!106391 m!119095))

(declare-fun m!119097 () Bool)

(assert (=> b!106391 m!119097))

(declare-fun m!119099 () Bool)

(assert (=> b!106391 m!119099))

(declare-fun m!119101 () Bool)

(assert (=> b!106391 m!119101))

(declare-fun m!119103 () Bool)

(assert (=> b!106391 m!119103))

(assert (=> b!106391 m!119081))

(declare-fun m!119105 () Bool)

(assert (=> b!106391 m!119105))

(declare-fun m!119107 () Bool)

(assert (=> b!106391 m!119107))

(declare-fun m!119109 () Bool)

(assert (=> b!106391 m!119109))

(assert (=> b!106391 m!119091))

(assert (=> b!106391 m!119019))

(assert (=> b!106391 m!119107))

(declare-fun m!119111 () Bool)

(assert (=> b!106391 m!119111))

(assert (=> b!106391 m!119095))

(declare-fun m!119113 () Bool)

(assert (=> b!106391 m!119113))

(assert (=> b!106391 m!119101))

(declare-fun m!119115 () Bool)

(assert (=> b!106391 m!119115))

(declare-fun m!119117 () Bool)

(assert (=> b!106391 m!119117))

(assert (=> d!29001 d!29209))

(declare-fun d!29211 () Bool)

(declare-fun e!69252 () Bool)

(assert (=> d!29211 e!69252))

(declare-fun res!52941 () Bool)

(assert (=> d!29211 (=> res!52941 e!69252)))

(declare-fun lt!54573 () Bool)

(assert (=> d!29211 (= res!52941 (not lt!54573))))

(declare-fun lt!54571 () Bool)

(assert (=> d!29211 (= lt!54573 lt!54571)))

(declare-fun lt!54572 () Unit!3232)

(declare-fun e!69251 () Unit!3232)

(assert (=> d!29211 (= lt!54572 e!69251)))

(declare-fun c!18574 () Bool)

(assert (=> d!29211 (= c!18574 lt!54571)))

(assert (=> d!29211 (= lt!54571 (containsKey!160 (toList!803 (getCurrentListMap!489 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)))))))

(assert (=> d!29211 (= (contains!828 (getCurrentListMap!489 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)))) lt!54573)))

(declare-fun b!106412 () Bool)

(declare-fun lt!54574 () Unit!3232)

(assert (=> b!106412 (= e!69251 lt!54574)))

(assert (=> b!106412 (= lt!54574 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (getCurrentListMap!489 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)))))))

(assert (=> b!106412 (isDefined!109 (getValueByKey!156 (toList!803 (getCurrentListMap!489 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)))))))

(declare-fun b!106413 () Bool)

(declare-fun Unit!3274 () Unit!3232)

(assert (=> b!106413 (= e!69251 Unit!3274)))

(declare-fun b!106414 () Bool)

(assert (=> b!106414 (= e!69252 (isDefined!109 (getValueByKey!156 (toList!803 (getCurrentListMap!489 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))))))))

(assert (= (and d!29211 c!18574) b!106412))

(assert (= (and d!29211 (not c!18574)) b!106413))

(assert (= (and d!29211 (not res!52941)) b!106414))

(assert (=> d!29211 m!118437))

(declare-fun m!119119 () Bool)

(assert (=> d!29211 m!119119))

(assert (=> b!106412 m!118437))

(declare-fun m!119121 () Bool)

(assert (=> b!106412 m!119121))

(assert (=> b!106412 m!118437))

(declare-fun m!119123 () Bool)

(assert (=> b!106412 m!119123))

(assert (=> b!106412 m!119123))

(declare-fun m!119125 () Bool)

(assert (=> b!106412 m!119125))

(assert (=> b!106414 m!118437))

(assert (=> b!106414 m!119123))

(assert (=> b!106414 m!119123))

(assert (=> b!106414 m!119125))

(assert (=> d!29001 d!29211))

(declare-fun bm!11249 () Bool)

(declare-fun call!11255 () Bool)

(declare-fun lt!54580 () ListLongMap!1575)

(assert (=> bm!11249 (= call!11255 (contains!828 lt!54580 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11250 () Bool)

(declare-fun call!11258 () ListLongMap!1575)

(declare-fun call!11253 () ListLongMap!1575)

(assert (=> bm!11250 (= call!11258 call!11253)))

(declare-fun b!106415 () Bool)

(declare-fun e!69254 () Unit!3232)

(declare-fun lt!54596 () Unit!3232)

(assert (=> b!106415 (= e!69254 lt!54596)))

(declare-fun lt!54578 () ListLongMap!1575)

(assert (=> b!106415 (= lt!54578 (getCurrentListMapNoExtraKeys!110 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54588 () (_ BitVec 64))

(assert (=> b!106415 (= lt!54588 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54576 () (_ BitVec 64))

(assert (=> b!106415 (= lt!54576 (select (arr!2063 lt!54331) #b00000000000000000000000000000000))))

(declare-fun lt!54591 () Unit!3232)

(assert (=> b!106415 (= lt!54591 (addStillContains!74 lt!54578 lt!54588 (zeroValue!2457 newMap!16) lt!54576))))

(assert (=> b!106415 (contains!828 (+!144 lt!54578 (tuple2!2411 lt!54588 (zeroValue!2457 newMap!16))) lt!54576)))

(declare-fun lt!54590 () Unit!3232)

(assert (=> b!106415 (= lt!54590 lt!54591)))

(declare-fun lt!54593 () ListLongMap!1575)

(assert (=> b!106415 (= lt!54593 (getCurrentListMapNoExtraKeys!110 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54577 () (_ BitVec 64))

(assert (=> b!106415 (= lt!54577 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54575 () (_ BitVec 64))

(assert (=> b!106415 (= lt!54575 (select (arr!2063 lt!54331) #b00000000000000000000000000000000))))

(declare-fun lt!54594 () Unit!3232)

(assert (=> b!106415 (= lt!54594 (addApplyDifferent!74 lt!54593 lt!54577 (minValue!2457 newMap!16) lt!54575))))

(assert (=> b!106415 (= (apply!98 (+!144 lt!54593 (tuple2!2411 lt!54577 (minValue!2457 newMap!16))) lt!54575) (apply!98 lt!54593 lt!54575))))

(declare-fun lt!54587 () Unit!3232)

(assert (=> b!106415 (= lt!54587 lt!54594)))

(declare-fun lt!54585 () ListLongMap!1575)

(assert (=> b!106415 (= lt!54585 (getCurrentListMapNoExtraKeys!110 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54589 () (_ BitVec 64))

(assert (=> b!106415 (= lt!54589 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54579 () (_ BitVec 64))

(assert (=> b!106415 (= lt!54579 (select (arr!2063 lt!54331) #b00000000000000000000000000000000))))

(declare-fun lt!54586 () Unit!3232)

(assert (=> b!106415 (= lt!54586 (addApplyDifferent!74 lt!54585 lt!54589 (zeroValue!2457 newMap!16) lt!54579))))

(assert (=> b!106415 (= (apply!98 (+!144 lt!54585 (tuple2!2411 lt!54589 (zeroValue!2457 newMap!16))) lt!54579) (apply!98 lt!54585 lt!54579))))

(declare-fun lt!54595 () Unit!3232)

(assert (=> b!106415 (= lt!54595 lt!54586)))

(declare-fun lt!54581 () ListLongMap!1575)

(assert (=> b!106415 (= lt!54581 (getCurrentListMapNoExtraKeys!110 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54583 () (_ BitVec 64))

(assert (=> b!106415 (= lt!54583 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54592 () (_ BitVec 64))

(assert (=> b!106415 (= lt!54592 (select (arr!2063 lt!54331) #b00000000000000000000000000000000))))

(assert (=> b!106415 (= lt!54596 (addApplyDifferent!74 lt!54581 lt!54583 (minValue!2457 newMap!16) lt!54592))))

(assert (=> b!106415 (= (apply!98 (+!144 lt!54581 (tuple2!2411 lt!54583 (minValue!2457 newMap!16))) lt!54592) (apply!98 lt!54581 lt!54592))))

(declare-fun bm!11251 () Bool)

(declare-fun call!11252 () ListLongMap!1575)

(assert (=> bm!11251 (= call!11253 call!11252)))

(declare-fun bm!11252 () Bool)

(declare-fun call!11256 () Bool)

(assert (=> bm!11252 (= call!11256 (contains!828 lt!54580 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106416 () Bool)

(declare-fun res!52948 () Bool)

(declare-fun e!69253 () Bool)

(assert (=> b!106416 (=> (not res!52948) (not e!69253))))

(declare-fun e!69262 () Bool)

(assert (=> b!106416 (= res!52948 e!69262)))

(declare-fun res!52949 () Bool)

(assert (=> b!106416 (=> res!52949 e!69262)))

(declare-fun e!69259 () Bool)

(assert (=> b!106416 (= res!52949 (not e!69259))))

(declare-fun res!52946 () Bool)

(assert (=> b!106416 (=> (not res!52946) (not e!69259))))

(assert (=> b!106416 (= res!52946 (bvslt #b00000000000000000000000000000000 (size!2318 lt!54331)))))

(declare-fun b!106417 () Bool)

(declare-fun e!69263 () ListLongMap!1575)

(declare-fun call!11257 () ListLongMap!1575)

(assert (=> b!106417 (= e!69263 (+!144 call!11257 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(declare-fun bm!11253 () Bool)

(declare-fun call!11254 () ListLongMap!1575)

(assert (=> bm!11253 (= call!11254 call!11257)))

(declare-fun b!106418 () Bool)

(declare-fun e!69264 () Bool)

(assert (=> b!106418 (= e!69253 e!69264)))

(declare-fun c!18578 () Bool)

(assert (=> b!106418 (= c!18578 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106419 () Bool)

(declare-fun e!69261 () Bool)

(assert (=> b!106419 (= e!69261 (= (apply!98 lt!54580 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!106420 () Bool)

(declare-fun Unit!3275 () Unit!3232)

(assert (=> b!106420 (= e!69254 Unit!3275)))

(declare-fun b!106421 () Bool)

(assert (=> b!106421 (= e!69264 (not call!11255))))

(declare-fun b!106422 () Bool)

(declare-fun e!69265 () Bool)

(declare-fun e!69258 () Bool)

(assert (=> b!106422 (= e!69265 e!69258)))

(declare-fun res!52944 () Bool)

(assert (=> b!106422 (= res!52944 call!11256)))

(assert (=> b!106422 (=> (not res!52944) (not e!69258))))

(declare-fun d!29213 () Bool)

(assert (=> d!29213 e!69253))

(declare-fun res!52947 () Bool)

(assert (=> d!29213 (=> (not res!52947) (not e!69253))))

(assert (=> d!29213 (= res!52947 (or (bvsge #b00000000000000000000000000000000 (size!2318 lt!54331)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 lt!54331)))))))

(declare-fun lt!54582 () ListLongMap!1575)

(assert (=> d!29213 (= lt!54580 lt!54582)))

(declare-fun lt!54584 () Unit!3232)

(assert (=> d!29213 (= lt!54584 e!69254)))

(declare-fun c!18575 () Bool)

(declare-fun e!69260 () Bool)

(assert (=> d!29213 (= c!18575 e!69260)))

(declare-fun res!52950 () Bool)

(assert (=> d!29213 (=> (not res!52950) (not e!69260))))

(assert (=> d!29213 (= res!52950 (bvslt #b00000000000000000000000000000000 (size!2318 lt!54331)))))

(assert (=> d!29213 (= lt!54582 e!69263)))

(declare-fun c!18577 () Bool)

(assert (=> d!29213 (= c!18577 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29213 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29213 (= (getCurrentListMap!489 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54580)))

(declare-fun b!106423 () Bool)

(assert (=> b!106423 (= e!69259 (validKeyInArray!0 (select (arr!2063 lt!54331) #b00000000000000000000000000000000)))))

(declare-fun b!106424 () Bool)

(assert (=> b!106424 (= e!69265 (not call!11256))))

(declare-fun b!106425 () Bool)

(declare-fun e!69257 () ListLongMap!1575)

(assert (=> b!106425 (= e!69257 call!11254)))

(declare-fun b!106426 () Bool)

(declare-fun e!69256 () Bool)

(assert (=> b!106426 (= e!69256 (= (apply!98 lt!54580 (select (arr!2063 lt!54331) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 lt!54354) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106426 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 lt!54354)))))

(assert (=> b!106426 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 lt!54331)))))

(declare-fun b!106427 () Bool)

(assert (=> b!106427 (= e!69258 (= (apply!98 lt!54580 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun bm!11254 () Bool)

(assert (=> bm!11254 (= call!11252 (getCurrentListMapNoExtraKeys!110 lt!54331 lt!54354 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!106428 () Bool)

(assert (=> b!106428 (= e!69263 e!69257)))

(declare-fun c!18580 () Bool)

(assert (=> b!106428 (= c!18580 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106429 () Bool)

(declare-fun res!52945 () Bool)

(assert (=> b!106429 (=> (not res!52945) (not e!69253))))

(assert (=> b!106429 (= res!52945 e!69265)))

(declare-fun c!18579 () Bool)

(assert (=> b!106429 (= c!18579 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106430 () Bool)

(declare-fun e!69255 () ListLongMap!1575)

(assert (=> b!106430 (= e!69255 call!11254)))

(declare-fun bm!11255 () Bool)

(assert (=> bm!11255 (= call!11257 (+!144 (ite c!18577 call!11252 (ite c!18580 call!11253 call!11258)) (ite (or c!18577 c!18580) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!106431 () Bool)

(declare-fun c!18576 () Bool)

(assert (=> b!106431 (= c!18576 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106431 (= e!69257 e!69255)))

(declare-fun b!106432 () Bool)

(assert (=> b!106432 (= e!69264 e!69261)))

(declare-fun res!52942 () Bool)

(assert (=> b!106432 (= res!52942 call!11255)))

(assert (=> b!106432 (=> (not res!52942) (not e!69261))))

(declare-fun b!106433 () Bool)

(assert (=> b!106433 (= e!69255 call!11258)))

(declare-fun b!106434 () Bool)

(assert (=> b!106434 (= e!69260 (validKeyInArray!0 (select (arr!2063 lt!54331) #b00000000000000000000000000000000)))))

(declare-fun b!106435 () Bool)

(assert (=> b!106435 (= e!69262 e!69256)))

(declare-fun res!52943 () Bool)

(assert (=> b!106435 (=> (not res!52943) (not e!69256))))

(assert (=> b!106435 (= res!52943 (contains!828 lt!54580 (select (arr!2063 lt!54331) #b00000000000000000000000000000000)))))

(assert (=> b!106435 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 lt!54331)))))

(assert (= (and d!29213 c!18577) b!106417))

(assert (= (and d!29213 (not c!18577)) b!106428))

(assert (= (and b!106428 c!18580) b!106425))

(assert (= (and b!106428 (not c!18580)) b!106431))

(assert (= (and b!106431 c!18576) b!106430))

(assert (= (and b!106431 (not c!18576)) b!106433))

(assert (= (or b!106430 b!106433) bm!11250))

(assert (= (or b!106425 bm!11250) bm!11251))

(assert (= (or b!106425 b!106430) bm!11253))

(assert (= (or b!106417 bm!11251) bm!11254))

(assert (= (or b!106417 bm!11253) bm!11255))

(assert (= (and d!29213 res!52950) b!106434))

(assert (= (and d!29213 c!18575) b!106415))

(assert (= (and d!29213 (not c!18575)) b!106420))

(assert (= (and d!29213 res!52947) b!106416))

(assert (= (and b!106416 res!52946) b!106423))

(assert (= (and b!106416 (not res!52949)) b!106435))

(assert (= (and b!106435 res!52943) b!106426))

(assert (= (and b!106416 res!52948) b!106429))

(assert (= (and b!106429 c!18579) b!106422))

(assert (= (and b!106429 (not c!18579)) b!106424))

(assert (= (and b!106422 res!52944) b!106427))

(assert (= (or b!106422 b!106424) bm!11252))

(assert (= (and b!106429 res!52945) b!106418))

(assert (= (and b!106418 c!18578) b!106432))

(assert (= (and b!106418 (not c!18578)) b!106421))

(assert (= (and b!106432 res!52942) b!106419))

(assert (= (or b!106432 b!106421) bm!11249))

(declare-fun b_lambda!4757 () Bool)

(assert (=> (not b_lambda!4757) (not b!106426)))

(assert (=> b!106426 t!5708))

(declare-fun b_and!6559 () Bool)

(assert (= b_and!6555 (and (=> t!5708 result!3463) b_and!6559)))

(assert (=> b!106426 t!5710))

(declare-fun b_and!6561 () Bool)

(assert (= b_and!6557 (and (=> t!5710 result!3465) b_and!6561)))

(assert (=> d!29213 m!117933))

(declare-fun m!119127 () Bool)

(assert (=> b!106426 m!119127))

(declare-fun m!119129 () Bool)

(assert (=> b!106426 m!119129))

(assert (=> b!106426 m!118149))

(declare-fun m!119131 () Bool)

(assert (=> b!106426 m!119131))

(assert (=> b!106426 m!118149))

(declare-fun m!119133 () Bool)

(assert (=> b!106426 m!119133))

(assert (=> b!106426 m!119127))

(assert (=> b!106426 m!119131))

(declare-fun m!119135 () Bool)

(assert (=> b!106427 m!119135))

(declare-fun m!119137 () Bool)

(assert (=> bm!11252 m!119137))

(declare-fun m!119139 () Bool)

(assert (=> bm!11255 m!119139))

(declare-fun m!119141 () Bool)

(assert (=> b!106419 m!119141))

(assert (=> b!106423 m!119127))

(assert (=> b!106423 m!119127))

(declare-fun m!119143 () Bool)

(assert (=> b!106423 m!119143))

(declare-fun m!119145 () Bool)

(assert (=> bm!11254 m!119145))

(assert (=> b!106435 m!119127))

(assert (=> b!106435 m!119127))

(declare-fun m!119147 () Bool)

(assert (=> b!106435 m!119147))

(assert (=> b!106434 m!119127))

(assert (=> b!106434 m!119127))

(assert (=> b!106434 m!119143))

(declare-fun m!119149 () Bool)

(assert (=> b!106417 m!119149))

(declare-fun m!119151 () Bool)

(assert (=> bm!11249 m!119151))

(declare-fun m!119153 () Bool)

(assert (=> b!106415 m!119153))

(declare-fun m!119155 () Bool)

(assert (=> b!106415 m!119155))

(declare-fun m!119157 () Bool)

(assert (=> b!106415 m!119157))

(declare-fun m!119159 () Bool)

(assert (=> b!106415 m!119159))

(declare-fun m!119161 () Bool)

(assert (=> b!106415 m!119161))

(declare-fun m!119163 () Bool)

(assert (=> b!106415 m!119163))

(declare-fun m!119165 () Bool)

(assert (=> b!106415 m!119165))

(declare-fun m!119167 () Bool)

(assert (=> b!106415 m!119167))

(assert (=> b!106415 m!119145))

(declare-fun m!119169 () Bool)

(assert (=> b!106415 m!119169))

(declare-fun m!119171 () Bool)

(assert (=> b!106415 m!119171))

(declare-fun m!119173 () Bool)

(assert (=> b!106415 m!119173))

(assert (=> b!106415 m!119155))

(assert (=> b!106415 m!119127))

(assert (=> b!106415 m!119171))

(declare-fun m!119175 () Bool)

(assert (=> b!106415 m!119175))

(assert (=> b!106415 m!119159))

(declare-fun m!119177 () Bool)

(assert (=> b!106415 m!119177))

(assert (=> b!106415 m!119165))

(declare-fun m!119179 () Bool)

(assert (=> b!106415 m!119179))

(declare-fun m!119181 () Bool)

(assert (=> b!106415 m!119181))

(assert (=> d!29001 d!29213))

(declare-fun b!106436 () Bool)

(declare-fun e!69267 () Bool)

(declare-fun e!69268 () Bool)

(assert (=> b!106436 (= e!69267 e!69268)))

(declare-fun res!52953 () Bool)

(assert (=> b!106436 (=> (not res!52953) (not e!69268))))

(declare-fun e!69269 () Bool)

(assert (=> b!106436 (= res!52953 (not e!69269))))

(declare-fun res!52951 () Bool)

(assert (=> b!106436 (=> (not res!52951) (not e!69269))))

(assert (=> b!106436 (= res!52951 (validKeyInArray!0 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) lt!54346)))))

(declare-fun b!106437 () Bool)

(declare-fun e!69266 () Bool)

(declare-fun call!11259 () Bool)

(assert (=> b!106437 (= e!69266 call!11259)))

(declare-fun b!106438 () Bool)

(assert (=> b!106438 (= e!69269 (contains!829 lt!54345 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) lt!54346)))))

(declare-fun d!29215 () Bool)

(declare-fun res!52952 () Bool)

(assert (=> d!29215 (=> res!52952 e!69267)))

(assert (=> d!29215 (= res!52952 (bvsge lt!54346 (size!2318 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))))))))

(assert (=> d!29215 (= (arrayNoDuplicates!0 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) lt!54346 lt!54345) e!69267)))

(declare-fun bm!11256 () Bool)

(declare-fun c!18581 () Bool)

(assert (=> bm!11256 (= call!11259 (arrayNoDuplicates!0 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16))) (bvadd lt!54346 #b00000000000000000000000000000001) (ite c!18581 (Cons!1612 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) lt!54346) lt!54345) lt!54345)))))

(declare-fun b!106439 () Bool)

(assert (=> b!106439 (= e!69266 call!11259)))

(declare-fun b!106440 () Bool)

(assert (=> b!106440 (= e!69268 e!69266)))

(assert (=> b!106440 (= c!18581 (validKeyInArray!0 (select (arr!2063 (array!4350 (store (arr!2063 (_keys!4288 newMap!16)) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (size!2318 (_keys!4288 newMap!16)))) lt!54346)))))

(assert (= (and d!29215 (not res!52952)) b!106436))

(assert (= (and b!106436 res!52951) b!106438))

(assert (= (and b!106436 res!52953) b!106440))

(assert (= (and b!106440 c!18581) b!106437))

(assert (= (and b!106440 (not c!18581)) b!106439))

(assert (= (or b!106437 b!106439) bm!11256))

(declare-fun m!119183 () Bool)

(assert (=> b!106436 m!119183))

(assert (=> b!106436 m!119183))

(declare-fun m!119185 () Bool)

(assert (=> b!106436 m!119185))

(assert (=> b!106438 m!119183))

(assert (=> b!106438 m!119183))

(declare-fun m!119187 () Bool)

(assert (=> b!106438 m!119187))

(assert (=> bm!11256 m!119183))

(declare-fun m!119189 () Bool)

(assert (=> bm!11256 m!119189))

(assert (=> b!106440 m!119183))

(assert (=> b!106440 m!119183))

(assert (=> b!106440 m!119185))

(assert (=> d!29001 d!29215))

(declare-fun d!29217 () Bool)

(assert (=> d!29217 (= (arrayCountValidKeys!0 lt!54335 (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (bvadd (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!54599 () Unit!3232)

(declare-fun choose!2 (array!4349 (_ BitVec 32)) Unit!3232)

(assert (=> d!29217 (= lt!54599 (choose!2 lt!54335 (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))))))

(declare-fun e!69272 () Bool)

(assert (=> d!29217 e!69272))

(declare-fun res!52958 () Bool)

(assert (=> d!29217 (=> (not res!52958) (not e!69272))))

(assert (=> d!29217 (= res!52958 (and (bvsge (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000000) (bvslt (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (size!2318 lt!54335))))))

(assert (=> d!29217 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!54335 (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060))) lt!54599)))

(declare-fun b!106445 () Bool)

(declare-fun res!52959 () Bool)

(assert (=> b!106445 (=> (not res!52959) (not e!69272))))

(assert (=> b!106445 (= res!52959 (validKeyInArray!0 (select (arr!2063 lt!54335) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)))))))

(declare-fun b!106446 () Bool)

(assert (=> b!106446 (= e!69272 (bvslt (size!2318 lt!54335) #b01111111111111111111111111111111))))

(assert (= (and d!29217 res!52958) b!106445))

(assert (= (and b!106445 res!52959) b!106446))

(assert (=> d!29217 m!118427))

(declare-fun m!119191 () Bool)

(assert (=> d!29217 m!119191))

(declare-fun m!119193 () Bool)

(assert (=> b!106445 m!119193))

(assert (=> b!106445 m!119193))

(declare-fun m!119195 () Bool)

(assert (=> b!106445 m!119195))

(assert (=> d!29001 d!29217))

(declare-fun b!106447 () Bool)

(declare-fun e!69274 () (_ BitVec 32))

(declare-fun call!11260 () (_ BitVec 32))

(assert (=> b!106447 (= e!69274 (bvadd #b00000000000000000000000000000001 call!11260))))

(declare-fun b!106448 () Bool)

(declare-fun e!69273 () (_ BitVec 32))

(assert (=> b!106448 (= e!69273 #b00000000000000000000000000000000)))

(declare-fun b!106449 () Bool)

(assert (=> b!106449 (= e!69274 call!11260)))

(declare-fun d!29219 () Bool)

(declare-fun lt!54600 () (_ BitVec 32))

(assert (=> d!29219 (and (bvsge lt!54600 #b00000000000000000000000000000000) (bvsle lt!54600 (bvsub (size!2318 lt!54335) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)))))))

(assert (=> d!29219 (= lt!54600 e!69273)))

(declare-fun c!18582 () Bool)

(assert (=> d!29219 (= c!18582 (bvsge (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (bvadd (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000001)))))

(assert (=> d!29219 (and (bvsle (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (bvadd (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000001)) (bvsge (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000001) (size!2318 lt!54335)))))

(assert (=> d!29219 (= (arrayCountValidKeys!0 lt!54335 (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) (bvadd (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000001)) lt!54600)))

(declare-fun bm!11257 () Bool)

(assert (=> bm!11257 (= call!11260 (arrayCountValidKeys!0 lt!54335 (bvadd (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000001) (bvadd (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)) #b00000000000000000000000000000001)))))

(declare-fun b!106450 () Bool)

(assert (=> b!106450 (= e!69273 e!69274)))

(declare-fun c!18583 () Bool)

(assert (=> b!106450 (= c!18583 (validKeyInArray!0 (select (arr!2063 lt!54335) (ite c!18370 (index!3187 lt!54060) (index!3184 lt!54060)))))))

(assert (= (and d!29219 c!18582) b!106448))

(assert (= (and d!29219 (not c!18582)) b!106450))

(assert (= (and b!106450 c!18583) b!106447))

(assert (= (and b!106450 (not c!18583)) b!106449))

(assert (= (or b!106447 b!106449) bm!11257))

(declare-fun m!119197 () Bool)

(assert (=> bm!11257 m!119197))

(assert (=> b!106450 m!119193))

(assert (=> b!106450 m!119193))

(assert (=> b!106450 m!119195))

(assert (=> d!29001 d!29219))

(assert (=> b!106118 d!29049))

(assert (=> b!106037 d!29049))

(declare-fun b!106453 () Bool)

(declare-fun e!69276 () Option!162)

(assert (=> b!106453 (= e!69276 (getValueByKey!156 (t!5700 (toList!803 lt!54251)) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106451 () Bool)

(declare-fun e!69275 () Option!162)

(assert (=> b!106451 (= e!69275 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54251)))))))

(declare-fun d!29221 () Bool)

(declare-fun c!18584 () Bool)

(assert (=> d!29221 (= c!18584 (and ((_ is Cons!1613) (toList!803 lt!54251)) (= (_1!1216 (h!2210 (toList!803 lt!54251))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29221 (= (getValueByKey!156 (toList!803 lt!54251) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69275)))

(declare-fun b!106454 () Bool)

(assert (=> b!106454 (= e!69276 None!160)))

(declare-fun b!106452 () Bool)

(assert (=> b!106452 (= e!69275 e!69276)))

(declare-fun c!18585 () Bool)

(assert (=> b!106452 (= c!18585 (and ((_ is Cons!1613) (toList!803 lt!54251)) (not (= (_1!1216 (h!2210 (toList!803 lt!54251))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29221 c!18584) b!106451))

(assert (= (and d!29221 (not c!18584)) b!106452))

(assert (= (and b!106452 c!18585) b!106453))

(assert (= (and b!106452 (not c!18585)) b!106454))

(declare-fun m!119199 () Bool)

(assert (=> b!106453 m!119199))

(assert (=> b!105962 d!29221))

(declare-fun d!29223 () Bool)

(declare-fun res!52960 () Bool)

(declare-fun e!69277 () Bool)

(assert (=> d!29223 (=> res!52960 e!69277)))

(assert (=> d!29223 (= res!52960 (and ((_ is Cons!1613) lt!54142) (= (_1!1216 (h!2210 lt!54142)) (_1!1216 lt!53814))))))

(assert (=> d!29223 (= (containsKey!160 lt!54142 (_1!1216 lt!53814)) e!69277)))

(declare-fun b!106455 () Bool)

(declare-fun e!69278 () Bool)

(assert (=> b!106455 (= e!69277 e!69278)))

(declare-fun res!52961 () Bool)

(assert (=> b!106455 (=> (not res!52961) (not e!69278))))

(assert (=> b!106455 (= res!52961 (and (or (not ((_ is Cons!1613) lt!54142)) (bvsle (_1!1216 (h!2210 lt!54142)) (_1!1216 lt!53814))) ((_ is Cons!1613) lt!54142) (bvslt (_1!1216 (h!2210 lt!54142)) (_1!1216 lt!53814))))))

(declare-fun b!106456 () Bool)

(assert (=> b!106456 (= e!69278 (containsKey!160 (t!5700 lt!54142) (_1!1216 lt!53814)))))

(assert (= (and d!29223 (not res!52960)) b!106455))

(assert (= (and b!106455 res!52961) b!106456))

(declare-fun m!119201 () Bool)

(assert (=> b!106456 m!119201))

(assert (=> b!105806 d!29223))

(declare-fun d!29225 () Bool)

(declare-fun res!52962 () Bool)

(declare-fun e!69279 () Bool)

(assert (=> d!29225 (=> res!52962 e!69279)))

(assert (=> d!29225 (= res!52962 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))))) lt!53880)))))

(assert (=> d!29225 (= (containsKey!160 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))) lt!53880) e!69279)))

(declare-fun b!106457 () Bool)

(declare-fun e!69280 () Bool)

(assert (=> b!106457 (= e!69279 e!69280)))

(declare-fun res!52963 () Bool)

(assert (=> b!106457 (=> (not res!52963) (not e!69280))))

(assert (=> b!106457 (= res!52963 (and (or (not ((_ is Cons!1613) (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))))) (bvsle (_1!1216 (h!2210 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))))) lt!53880)) ((_ is Cons!1613) (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)))) (bvslt (_1!1216 (h!2210 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875))))) lt!53880)))))

(declare-fun b!106458 () Bool)

(assert (=> b!106458 (= e!69280 (containsKey!160 (t!5700 (toList!803 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)))) lt!53880))))

(assert (= (and d!29225 (not res!52962)) b!106457))

(assert (= (and b!106457 res!52963) b!106458))

(declare-fun m!119203 () Bool)

(assert (=> b!106458 m!119203))

(assert (=> d!28923 d!29225))

(declare-fun d!29227 () Bool)

(declare-fun lt!54601 () Bool)

(assert (=> d!29227 (= lt!54601 (select (content!109 lt!53908) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun e!69282 () Bool)

(assert (=> d!29227 (= lt!54601 e!69282)))

(declare-fun res!52964 () Bool)

(assert (=> d!29227 (=> (not res!52964) (not e!69282))))

(assert (=> d!29227 (= res!52964 ((_ is Cons!1613) lt!53908))))

(assert (=> d!29227 (= (contains!830 lt!53908 (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))) lt!54601)))

(declare-fun b!106459 () Bool)

(declare-fun e!69281 () Bool)

(assert (=> b!106459 (= e!69282 e!69281)))

(declare-fun res!52965 () Bool)

(assert (=> b!106459 (=> res!52965 e!69281)))

(assert (=> b!106459 (= res!52965 (= (h!2210 lt!53908) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun b!106460 () Bool)

(assert (=> b!106460 (= e!69281 (contains!830 (t!5700 lt!53908) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(assert (= (and d!29227 res!52964) b!106459))

(assert (= (and b!106459 (not res!52965)) b!106460))

(declare-fun m!119205 () Bool)

(assert (=> d!29227 m!119205))

(declare-fun m!119207 () Bool)

(assert (=> d!29227 m!119207))

(declare-fun m!119209 () Bool)

(assert (=> b!106460 m!119209))

(assert (=> b!105798 d!29227))

(declare-fun d!29229 () Bool)

(assert (=> d!29229 (= (inRange!0 (index!3185 lt!54155) (mask!6728 newMap!16)) (and (bvsge (index!3185 lt!54155) #b00000000000000000000000000000000) (bvslt (index!3185 lt!54155) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!105816 d!29229))

(assert (=> b!105931 d!29207))

(assert (=> b!105931 d!28929))

(declare-fun bm!11258 () Bool)

(declare-fun call!11264 () Bool)

(declare-fun lt!54607 () ListLongMap!1575)

(assert (=> bm!11258 (= call!11264 (contains!828 lt!54607 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11259 () Bool)

(declare-fun call!11267 () ListLongMap!1575)

(declare-fun call!11262 () ListLongMap!1575)

(assert (=> bm!11259 (= call!11267 call!11262)))

(declare-fun b!106461 () Bool)

(declare-fun e!69284 () Unit!3232)

(declare-fun lt!54623 () Unit!3232)

(assert (=> b!106461 (= e!69284 lt!54623)))

(declare-fun lt!54605 () ListLongMap!1575)

(assert (=> b!106461 (= lt!54605 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54615 () (_ BitVec 64))

(assert (=> b!106461 (= lt!54615 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54603 () (_ BitVec 64))

(assert (=> b!106461 (= lt!54603 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54618 () Unit!3232)

(assert (=> b!106461 (= lt!54618 (addStillContains!74 lt!54605 lt!54615 (zeroValue!2457 newMap!16) lt!54603))))

(assert (=> b!106461 (contains!828 (+!144 lt!54605 (tuple2!2411 lt!54615 (zeroValue!2457 newMap!16))) lt!54603)))

(declare-fun lt!54617 () Unit!3232)

(assert (=> b!106461 (= lt!54617 lt!54618)))

(declare-fun lt!54620 () ListLongMap!1575)

(assert (=> b!106461 (= lt!54620 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54604 () (_ BitVec 64))

(assert (=> b!106461 (= lt!54604 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54602 () (_ BitVec 64))

(assert (=> b!106461 (= lt!54602 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54621 () Unit!3232)

(assert (=> b!106461 (= lt!54621 (addApplyDifferent!74 lt!54620 lt!54604 (minValue!2457 newMap!16) lt!54602))))

(assert (=> b!106461 (= (apply!98 (+!144 lt!54620 (tuple2!2411 lt!54604 (minValue!2457 newMap!16))) lt!54602) (apply!98 lt!54620 lt!54602))))

(declare-fun lt!54614 () Unit!3232)

(assert (=> b!106461 (= lt!54614 lt!54621)))

(declare-fun lt!54612 () ListLongMap!1575)

(assert (=> b!106461 (= lt!54612 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54616 () (_ BitVec 64))

(assert (=> b!106461 (= lt!54616 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54606 () (_ BitVec 64))

(assert (=> b!106461 (= lt!54606 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54613 () Unit!3232)

(assert (=> b!106461 (= lt!54613 (addApplyDifferent!74 lt!54612 lt!54616 (zeroValue!2457 newMap!16) lt!54606))))

(assert (=> b!106461 (= (apply!98 (+!144 lt!54612 (tuple2!2411 lt!54616 (zeroValue!2457 newMap!16))) lt!54606) (apply!98 lt!54612 lt!54606))))

(declare-fun lt!54622 () Unit!3232)

(assert (=> b!106461 (= lt!54622 lt!54613)))

(declare-fun lt!54608 () ListLongMap!1575)

(assert (=> b!106461 (= lt!54608 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54610 () (_ BitVec 64))

(assert (=> b!106461 (= lt!54610 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54619 () (_ BitVec 64))

(assert (=> b!106461 (= lt!54619 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106461 (= lt!54623 (addApplyDifferent!74 lt!54608 lt!54610 (minValue!2457 newMap!16) lt!54619))))

(assert (=> b!106461 (= (apply!98 (+!144 lt!54608 (tuple2!2411 lt!54610 (minValue!2457 newMap!16))) lt!54619) (apply!98 lt!54608 lt!54619))))

(declare-fun bm!11260 () Bool)

(declare-fun call!11261 () ListLongMap!1575)

(assert (=> bm!11260 (= call!11262 call!11261)))

(declare-fun bm!11261 () Bool)

(declare-fun call!11265 () Bool)

(assert (=> bm!11261 (= call!11265 (contains!828 lt!54607 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106462 () Bool)

(declare-fun res!52972 () Bool)

(declare-fun e!69283 () Bool)

(assert (=> b!106462 (=> (not res!52972) (not e!69283))))

(declare-fun e!69292 () Bool)

(assert (=> b!106462 (= res!52972 e!69292)))

(declare-fun res!52973 () Bool)

(assert (=> b!106462 (=> res!52973 e!69292)))

(declare-fun e!69289 () Bool)

(assert (=> b!106462 (= res!52973 (not e!69289))))

(declare-fun res!52970 () Bool)

(assert (=> b!106462 (=> (not res!52970) (not e!69289))))

(assert (=> b!106462 (= res!52970 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106463 () Bool)

(declare-fun e!69293 () ListLongMap!1575)

(declare-fun call!11266 () ListLongMap!1575)

(assert (=> b!106463 (= e!69293 (+!144 call!11266 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(declare-fun bm!11262 () Bool)

(declare-fun call!11263 () ListLongMap!1575)

(assert (=> bm!11262 (= call!11263 call!11266)))

(declare-fun b!106464 () Bool)

(declare-fun e!69294 () Bool)

(assert (=> b!106464 (= e!69283 e!69294)))

(declare-fun c!18589 () Bool)

(assert (=> b!106464 (= c!18589 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106465 () Bool)

(declare-fun e!69291 () Bool)

(assert (=> b!106465 (= e!69291 (= (apply!98 lt!54607 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!106466 () Bool)

(declare-fun Unit!3276 () Unit!3232)

(assert (=> b!106466 (= e!69284 Unit!3276)))

(declare-fun b!106467 () Bool)

(assert (=> b!106467 (= e!69294 (not call!11264))))

(declare-fun b!106468 () Bool)

(declare-fun e!69295 () Bool)

(declare-fun e!69288 () Bool)

(assert (=> b!106468 (= e!69295 e!69288)))

(declare-fun res!52968 () Bool)

(assert (=> b!106468 (= res!52968 call!11265)))

(assert (=> b!106468 (=> (not res!52968) (not e!69288))))

(declare-fun d!29231 () Bool)

(assert (=> d!29231 e!69283))

(declare-fun res!52971 () Bool)

(assert (=> d!29231 (=> (not res!52971) (not e!69283))))

(assert (=> d!29231 (= res!52971 (or (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))))

(declare-fun lt!54609 () ListLongMap!1575)

(assert (=> d!29231 (= lt!54607 lt!54609)))

(declare-fun lt!54611 () Unit!3232)

(assert (=> d!29231 (= lt!54611 e!69284)))

(declare-fun c!18586 () Bool)

(declare-fun e!69290 () Bool)

(assert (=> d!29231 (= c!18586 e!69290)))

(declare-fun res!52974 () Bool)

(assert (=> d!29231 (=> (not res!52974) (not e!69290))))

(assert (=> d!29231 (= res!52974 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29231 (= lt!54609 e!69293)))

(declare-fun c!18588 () Bool)

(assert (=> d!29231 (= c!18588 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29231 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29231 (= (getCurrentListMap!489 (_keys!4288 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54607)))

(declare-fun b!106469 () Bool)

(assert (=> b!106469 (= e!69289 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106470 () Bool)

(assert (=> b!106470 (= e!69295 (not call!11265))))

(declare-fun b!106471 () Bool)

(declare-fun e!69287 () ListLongMap!1575)

(assert (=> b!106471 (= e!69287 call!11263)))

(declare-fun e!69286 () Bool)

(declare-fun b!106472 () Bool)

(assert (=> b!106472 (= e!69286 (= (apply!98 lt!54607 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106472 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))))))

(assert (=> b!106472 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106473 () Bool)

(assert (=> b!106473 (= e!69288 (= (apply!98 lt!54607 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun bm!11263 () Bool)

(assert (=> bm!11263 (= call!11261 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!106474 () Bool)

(assert (=> b!106474 (= e!69293 e!69287)))

(declare-fun c!18591 () Bool)

(assert (=> b!106474 (= c!18591 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106475 () Bool)

(declare-fun res!52969 () Bool)

(assert (=> b!106475 (=> (not res!52969) (not e!69283))))

(assert (=> b!106475 (= res!52969 e!69295)))

(declare-fun c!18590 () Bool)

(assert (=> b!106475 (= c!18590 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106476 () Bool)

(declare-fun e!69285 () ListLongMap!1575)

(assert (=> b!106476 (= e!69285 call!11263)))

(declare-fun bm!11264 () Bool)

(assert (=> bm!11264 (= call!11266 (+!144 (ite c!18588 call!11261 (ite c!18591 call!11262 call!11267)) (ite (or c!18588 c!18591) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!106477 () Bool)

(declare-fun c!18587 () Bool)

(assert (=> b!106477 (= c!18587 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106477 (= e!69287 e!69285)))

(declare-fun b!106478 () Bool)

(assert (=> b!106478 (= e!69294 e!69291)))

(declare-fun res!52966 () Bool)

(assert (=> b!106478 (= res!52966 call!11264)))

(assert (=> b!106478 (=> (not res!52966) (not e!69291))))

(declare-fun b!106479 () Bool)

(assert (=> b!106479 (= e!69285 call!11267)))

(declare-fun b!106480 () Bool)

(assert (=> b!106480 (= e!69290 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106481 () Bool)

(assert (=> b!106481 (= e!69292 e!69286)))

(declare-fun res!52967 () Bool)

(assert (=> b!106481 (=> (not res!52967) (not e!69286))))

(assert (=> b!106481 (= res!52967 (contains!828 lt!54607 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106481 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!29231 c!18588) b!106463))

(assert (= (and d!29231 (not c!18588)) b!106474))

(assert (= (and b!106474 c!18591) b!106471))

(assert (= (and b!106474 (not c!18591)) b!106477))

(assert (= (and b!106477 c!18587) b!106476))

(assert (= (and b!106477 (not c!18587)) b!106479))

(assert (= (or b!106476 b!106479) bm!11259))

(assert (= (or b!106471 bm!11259) bm!11260))

(assert (= (or b!106471 b!106476) bm!11262))

(assert (= (or b!106463 bm!11260) bm!11263))

(assert (= (or b!106463 bm!11262) bm!11264))

(assert (= (and d!29231 res!52974) b!106480))

(assert (= (and d!29231 c!18586) b!106461))

(assert (= (and d!29231 (not c!18586)) b!106466))

(assert (= (and d!29231 res!52971) b!106462))

(assert (= (and b!106462 res!52970) b!106469))

(assert (= (and b!106462 (not res!52973)) b!106481))

(assert (= (and b!106481 res!52967) b!106472))

(assert (= (and b!106462 res!52972) b!106475))

(assert (= (and b!106475 c!18590) b!106468))

(assert (= (and b!106475 (not c!18590)) b!106470))

(assert (= (and b!106468 res!52968) b!106473))

(assert (= (or b!106468 b!106470) bm!11261))

(assert (= (and b!106475 res!52969) b!106464))

(assert (= (and b!106464 c!18589) b!106478))

(assert (= (and b!106464 (not c!18589)) b!106467))

(assert (= (and b!106478 res!52966) b!106465))

(assert (= (or b!106478 b!106467) bm!11258))

(declare-fun b_lambda!4759 () Bool)

(assert (=> (not b_lambda!4759) (not b!106472)))

(assert (=> b!106472 t!5708))

(declare-fun b_and!6563 () Bool)

(assert (= b_and!6559 (and (=> t!5708 result!3463) b_and!6563)))

(assert (=> b!106472 t!5710))

(declare-fun b_and!6565 () Bool)

(assert (= b_and!6561 (and (=> t!5710 result!3465) b_and!6565)))

(assert (=> d!29231 m!117933))

(assert (=> b!106472 m!118103))

(declare-fun m!119211 () Bool)

(assert (=> b!106472 m!119211))

(assert (=> b!106472 m!118149))

(declare-fun m!119213 () Bool)

(assert (=> b!106472 m!119213))

(assert (=> b!106472 m!118149))

(declare-fun m!119215 () Bool)

(assert (=> b!106472 m!119215))

(assert (=> b!106472 m!118103))

(assert (=> b!106472 m!119213))

(declare-fun m!119217 () Bool)

(assert (=> b!106473 m!119217))

(declare-fun m!119219 () Bool)

(assert (=> bm!11261 m!119219))

(declare-fun m!119221 () Bool)

(assert (=> bm!11264 m!119221))

(declare-fun m!119223 () Bool)

(assert (=> b!106465 m!119223))

(assert (=> b!106469 m!118103))

(assert (=> b!106469 m!118103))

(assert (=> b!106469 m!118163))

(declare-fun m!119225 () Bool)

(assert (=> bm!11263 m!119225))

(assert (=> b!106481 m!118103))

(assert (=> b!106481 m!118103))

(declare-fun m!119227 () Bool)

(assert (=> b!106481 m!119227))

(assert (=> b!106480 m!118103))

(assert (=> b!106480 m!118103))

(assert (=> b!106480 m!118163))

(declare-fun m!119229 () Bool)

(assert (=> b!106463 m!119229))

(declare-fun m!119231 () Bool)

(assert (=> bm!11258 m!119231))

(declare-fun m!119233 () Bool)

(assert (=> b!106461 m!119233))

(declare-fun m!119235 () Bool)

(assert (=> b!106461 m!119235))

(declare-fun m!119237 () Bool)

(assert (=> b!106461 m!119237))

(declare-fun m!119239 () Bool)

(assert (=> b!106461 m!119239))

(declare-fun m!119241 () Bool)

(assert (=> b!106461 m!119241))

(declare-fun m!119243 () Bool)

(assert (=> b!106461 m!119243))

(declare-fun m!119245 () Bool)

(assert (=> b!106461 m!119245))

(declare-fun m!119247 () Bool)

(assert (=> b!106461 m!119247))

(assert (=> b!106461 m!119225))

(declare-fun m!119249 () Bool)

(assert (=> b!106461 m!119249))

(declare-fun m!119251 () Bool)

(assert (=> b!106461 m!119251))

(declare-fun m!119253 () Bool)

(assert (=> b!106461 m!119253))

(assert (=> b!106461 m!119235))

(assert (=> b!106461 m!118103))

(assert (=> b!106461 m!119251))

(declare-fun m!119255 () Bool)

(assert (=> b!106461 m!119255))

(assert (=> b!106461 m!119239))

(declare-fun m!119257 () Bool)

(assert (=> b!106461 m!119257))

(assert (=> b!106461 m!119245))

(declare-fun m!119259 () Bool)

(assert (=> b!106461 m!119259))

(declare-fun m!119261 () Bool)

(assert (=> b!106461 m!119261))

(assert (=> b!105931 d!29231))

(assert (=> bm!11200 d!28859))

(declare-fun b!106484 () Bool)

(declare-fun e!69297 () Option!162)

(assert (=> b!106484 (= e!69297 (getValueByKey!156 (t!5700 (toList!803 lt!54133)) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106482 () Bool)

(declare-fun e!69296 () Option!162)

(assert (=> b!106482 (= e!69296 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54133)))))))

(declare-fun d!29233 () Bool)

(declare-fun c!18592 () Bool)

(assert (=> d!29233 (= c!18592 (and ((_ is Cons!1613) (toList!803 lt!54133)) (= (_1!1216 (h!2210 (toList!803 lt!54133))) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29233 (= (getValueByKey!156 (toList!803 lt!54133) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69296)))

(declare-fun b!106485 () Bool)

(assert (=> b!106485 (= e!69297 None!160)))

(declare-fun b!106483 () Bool)

(assert (=> b!106483 (= e!69296 e!69297)))

(declare-fun c!18593 () Bool)

(assert (=> b!106483 (= c!18593 (and ((_ is Cons!1613) (toList!803 lt!54133)) (not (= (_1!1216 (h!2210 (toList!803 lt!54133))) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29233 c!18592) b!106482))

(assert (= (and d!29233 (not c!18592)) b!106483))

(assert (= (and b!106483 c!18593) b!106484))

(assert (= (and b!106483 (not c!18593)) b!106485))

(declare-fun m!119263 () Bool)

(assert (=> b!106484 m!119263))

(assert (=> b!105786 d!29233))

(declare-fun e!69299 () Option!162)

(declare-fun b!106488 () Bool)

(assert (=> b!106488 (= e!69299 (getValueByKey!156 (t!5700 (toList!803 lt!54069)) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106486 () Bool)

(declare-fun e!69298 () Option!162)

(assert (=> b!106486 (= e!69298 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54069)))))))

(declare-fun c!18594 () Bool)

(declare-fun d!29235 () Bool)

(assert (=> d!29235 (= c!18594 (and ((_ is Cons!1613) (toList!803 lt!54069)) (= (_1!1216 (h!2210 (toList!803 lt!54069))) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29235 (= (getValueByKey!156 (toList!803 lt!54069) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69298)))

(declare-fun b!106489 () Bool)

(assert (=> b!106489 (= e!69299 None!160)))

(declare-fun b!106487 () Bool)

(assert (=> b!106487 (= e!69298 e!69299)))

(declare-fun c!18595 () Bool)

(assert (=> b!106487 (= c!18595 (and ((_ is Cons!1613) (toList!803 lt!54069)) (not (= (_1!1216 (h!2210 (toList!803 lt!54069))) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29235 c!18594) b!106486))

(assert (= (and d!29235 (not c!18594)) b!106487))

(assert (= (and b!106487 c!18595) b!106488))

(assert (= (and b!106487 (not c!18595)) b!106489))

(declare-fun m!119265 () Bool)

(assert (=> b!106488 m!119265))

(assert (=> b!105660 d!29235))

(declare-fun d!29237 () Bool)

(declare-fun e!69301 () Bool)

(assert (=> d!29237 e!69301))

(declare-fun res!52975 () Bool)

(assert (=> d!29237 (=> res!52975 e!69301)))

(declare-fun lt!54626 () Bool)

(assert (=> d!29237 (= res!52975 (not lt!54626))))

(declare-fun lt!54624 () Bool)

(assert (=> d!29237 (= lt!54626 lt!54624)))

(declare-fun lt!54625 () Unit!3232)

(declare-fun e!69300 () Unit!3232)

(assert (=> d!29237 (= lt!54625 e!69300)))

(declare-fun c!18596 () Bool)

(assert (=> d!29237 (= c!18596 lt!54624)))

(assert (=> d!29237 (= lt!54624 (containsKey!160 (toList!803 lt!54255) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29237 (= (contains!828 lt!54255 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54626)))

(declare-fun b!106490 () Bool)

(declare-fun lt!54627 () Unit!3232)

(assert (=> b!106490 (= e!69300 lt!54627)))

(assert (=> b!106490 (= lt!54627 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54255) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106490 (isDefined!109 (getValueByKey!156 (toList!803 lt!54255) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106491 () Bool)

(declare-fun Unit!3277 () Unit!3232)

(assert (=> b!106491 (= e!69300 Unit!3277)))

(declare-fun b!106492 () Bool)

(assert (=> b!106492 (= e!69301 (isDefined!109 (getValueByKey!156 (toList!803 lt!54255) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29237 c!18596) b!106490))

(assert (= (and d!29237 (not c!18596)) b!106491))

(assert (= (and d!29237 (not res!52975)) b!106492))

(declare-fun m!119267 () Bool)

(assert (=> d!29237 m!119267))

(declare-fun m!119269 () Bool)

(assert (=> b!106490 m!119269))

(assert (=> b!106490 m!118371))

(assert (=> b!106490 m!118371))

(declare-fun m!119271 () Bool)

(assert (=> b!106490 m!119271))

(assert (=> b!106492 m!118371))

(assert (=> b!106492 m!118371))

(assert (=> b!106492 m!119271))

(assert (=> d!28987 d!29237))

(declare-fun b!106495 () Bool)

(declare-fun e!69303 () Option!162)

(assert (=> b!106495 (= e!69303 (getValueByKey!156 (t!5700 lt!54257) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106493 () Bool)

(declare-fun e!69302 () Option!162)

(assert (=> b!106493 (= e!69302 (Some!161 (_2!1216 (h!2210 lt!54257))))))

(declare-fun d!29239 () Bool)

(declare-fun c!18597 () Bool)

(assert (=> d!29239 (= c!18597 (and ((_ is Cons!1613) lt!54257) (= (_1!1216 (h!2210 lt!54257)) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29239 (= (getValueByKey!156 lt!54257 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69302)))

(declare-fun b!106496 () Bool)

(assert (=> b!106496 (= e!69303 None!160)))

(declare-fun b!106494 () Bool)

(assert (=> b!106494 (= e!69302 e!69303)))

(declare-fun c!18598 () Bool)

(assert (=> b!106494 (= c!18598 (and ((_ is Cons!1613) lt!54257) (not (= (_1!1216 (h!2210 lt!54257)) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29239 c!18597) b!106493))

(assert (= (and d!29239 (not c!18597)) b!106494))

(assert (= (and b!106494 c!18598) b!106495))

(assert (= (and b!106494 (not c!18598)) b!106496))

(declare-fun m!119273 () Bool)

(assert (=> b!106495 m!119273))

(assert (=> d!28987 d!29239))

(declare-fun d!29241 () Bool)

(assert (=> d!29241 (= (getValueByKey!156 lt!54257 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54628 () Unit!3232)

(assert (=> d!29241 (= lt!54628 (choose!657 lt!54257 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69304 () Bool)

(assert (=> d!29241 e!69304))

(declare-fun res!52976 () Bool)

(assert (=> d!29241 (=> (not res!52976) (not e!69304))))

(assert (=> d!29241 (= res!52976 (isStrictlySorted!309 lt!54257))))

(assert (=> d!29241 (= (lemmaContainsTupThenGetReturnValue!72 lt!54257 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54628)))

(declare-fun b!106497 () Bool)

(declare-fun res!52977 () Bool)

(assert (=> b!106497 (=> (not res!52977) (not e!69304))))

(assert (=> b!106497 (= res!52977 (containsKey!160 lt!54257 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106498 () Bool)

(assert (=> b!106498 (= e!69304 (contains!830 lt!54257 (tuple2!2411 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29241 res!52976) b!106497))

(assert (= (and b!106497 res!52977) b!106498))

(assert (=> d!29241 m!118365))

(declare-fun m!119275 () Bool)

(assert (=> d!29241 m!119275))

(declare-fun m!119277 () Bool)

(assert (=> d!29241 m!119277))

(declare-fun m!119279 () Bool)

(assert (=> b!106497 m!119279))

(declare-fun m!119281 () Bool)

(assert (=> b!106498 m!119281))

(assert (=> d!28987 d!29241))

(declare-fun b!106499 () Bool)

(declare-fun e!69308 () List!1617)

(declare-fun e!69306 () List!1617)

(assert (=> b!106499 (= e!69308 e!69306)))

(declare-fun c!18600 () Bool)

(assert (=> b!106499 (= c!18600 (and ((_ is Cons!1613) (toList!803 lt!53805)) (= (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106500 () Bool)

(declare-fun call!11268 () List!1617)

(assert (=> b!106500 (= e!69308 call!11268)))

(declare-fun b!106502 () Bool)

(declare-fun e!69309 () List!1617)

(declare-fun call!11270 () List!1617)

(assert (=> b!106502 (= e!69309 call!11270)))

(declare-fun b!106503 () Bool)

(declare-fun c!18601 () Bool)

(assert (=> b!106503 (= c!18601 (and ((_ is Cons!1613) (toList!803 lt!53805)) (bvsgt (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> b!106503 (= e!69306 e!69309)))

(declare-fun bm!11265 () Bool)

(declare-fun call!11269 () List!1617)

(assert (=> bm!11265 (= call!11270 call!11269)))

(declare-fun b!106504 () Bool)

(declare-fun e!69307 () List!1617)

(assert (=> b!106504 (= e!69307 (insertStrictlySorted!75 (t!5700 (toList!803 lt!53805)) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106505 () Bool)

(assert (=> b!106505 (= e!69309 call!11270)))

(declare-fun b!106506 () Bool)

(declare-fun res!52979 () Bool)

(declare-fun e!69305 () Bool)

(assert (=> b!106506 (=> (not res!52979) (not e!69305))))

(declare-fun lt!54629 () List!1617)

(assert (=> b!106506 (= res!52979 (containsKey!160 lt!54629 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106507 () Bool)

(assert (=> b!106507 (= e!69305 (contains!830 lt!54629 (tuple2!2411 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106508 () Bool)

(assert (=> b!106508 (= e!69307 (ite c!18600 (t!5700 (toList!803 lt!53805)) (ite c!18601 (Cons!1613 (h!2210 (toList!803 lt!53805)) (t!5700 (toList!803 lt!53805))) Nil!1614)))))

(declare-fun d!29243 () Bool)

(assert (=> d!29243 e!69305))

(declare-fun res!52978 () Bool)

(assert (=> d!29243 (=> (not res!52978) (not e!69305))))

(assert (=> d!29243 (= res!52978 (isStrictlySorted!309 lt!54629))))

(assert (=> d!29243 (= lt!54629 e!69308)))

(declare-fun c!18599 () Bool)

(assert (=> d!29243 (= c!18599 (and ((_ is Cons!1613) (toList!803 lt!53805)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29243 (isStrictlySorted!309 (toList!803 lt!53805))))

(assert (=> d!29243 (= (insertStrictlySorted!75 (toList!803 lt!53805) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54629)))

(declare-fun b!106501 () Bool)

(assert (=> b!106501 (= e!69306 call!11269)))

(declare-fun bm!11266 () Bool)

(assert (=> bm!11266 (= call!11268 ($colon$colon!81 e!69307 (ite c!18599 (h!2210 (toList!803 lt!53805)) (tuple2!2411 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18602 () Bool)

(assert (=> bm!11266 (= c!18602 c!18599)))

(declare-fun bm!11267 () Bool)

(assert (=> bm!11267 (= call!11269 call!11268)))

(assert (= (and d!29243 c!18599) b!106500))

(assert (= (and d!29243 (not c!18599)) b!106499))

(assert (= (and b!106499 c!18600) b!106501))

(assert (= (and b!106499 (not c!18600)) b!106503))

(assert (= (and b!106503 c!18601) b!106505))

(assert (= (and b!106503 (not c!18601)) b!106502))

(assert (= (or b!106505 b!106502) bm!11265))

(assert (= (or b!106501 bm!11265) bm!11267))

(assert (= (or b!106500 bm!11267) bm!11266))

(assert (= (and bm!11266 c!18602) b!106504))

(assert (= (and bm!11266 (not c!18602)) b!106508))

(assert (= (and d!29243 res!52978) b!106506))

(assert (= (and b!106506 res!52979) b!106507))

(declare-fun m!119283 () Bool)

(assert (=> b!106504 m!119283))

(declare-fun m!119285 () Bool)

(assert (=> b!106507 m!119285))

(declare-fun m!119287 () Bool)

(assert (=> d!29243 m!119287))

(assert (=> d!29243 m!118231))

(declare-fun m!119289 () Bool)

(assert (=> bm!11266 m!119289))

(declare-fun m!119291 () Bool)

(assert (=> b!106506 m!119291))

(assert (=> d!28987 d!29243))

(declare-fun d!29245 () Bool)

(assert (=> d!29245 (contains!828 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))

(declare-fun lt!54632 () Unit!3232)

(declare-fun choose!666 (array!4349 array!4351 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) (_ BitVec 32) Int) Unit!3232)

(assert (=> d!29245 (= lt!54632 (choose!666 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(assert (=> d!29245 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29245 (= (lemmaArrayContainsKeyThenInListMap!30 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54632)))

(declare-fun bs!4370 () Bool)

(assert (= bs!4370 d!29245))

(assert (=> bs!4370 m!117707))

(assert (=> bs!4370 m!117707))

(assert (=> bs!4370 m!117489))

(assert (=> bs!4370 m!117785))

(assert (=> bs!4370 m!117489))

(declare-fun m!119293 () Bool)

(assert (=> bs!4370 m!119293))

(assert (=> bs!4370 m!117933))

(assert (=> b!106019 d!29245))

(assert (=> b!106019 d!28967))

(assert (=> b!106019 d!28929))

(declare-fun b!106509 () Bool)

(declare-fun e!69311 () (_ BitVec 32))

(declare-fun call!11271 () (_ BitVec 32))

(assert (=> b!106509 (= e!69311 (bvadd #b00000000000000000000000000000001 call!11271))))

(declare-fun b!106510 () Bool)

(declare-fun e!69310 () (_ BitVec 32))

(assert (=> b!106510 (= e!69310 #b00000000000000000000000000000000)))

(declare-fun b!106511 () Bool)

(assert (=> b!106511 (= e!69311 call!11271)))

(declare-fun d!29247 () Bool)

(declare-fun lt!54633 () (_ BitVec 32))

(assert (=> d!29247 (and (bvsge lt!54633 #b00000000000000000000000000000000) (bvsle lt!54633 (bvsub (size!2318 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000)))))

(assert (=> d!29247 (= lt!54633 e!69310)))

(declare-fun c!18603 () Bool)

(assert (=> d!29247 (= c!18603 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))))))

(assert (=> d!29247 (and (bvsle #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2318 (_keys!4288 (_2!1217 lt!54050))) (size!2318 (_keys!4288 (_2!1217 lt!54050)))))))

(assert (=> d!29247 (= (arrayCountValidKeys!0 (_keys!4288 (_2!1217 lt!54050)) #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))) lt!54633)))

(declare-fun bm!11268 () Bool)

(assert (=> bm!11268 (= call!11271 (arrayCountValidKeys!0 (_keys!4288 (_2!1217 lt!54050)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (_2!1217 lt!54050)))))))

(declare-fun b!106512 () Bool)

(assert (=> b!106512 (= e!69310 e!69311)))

(declare-fun c!18604 () Bool)

(assert (=> b!106512 (= c!18604 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000)))))

(assert (= (and d!29247 c!18603) b!106510))

(assert (= (and d!29247 (not c!18603)) b!106512))

(assert (= (and b!106512 c!18604) b!106509))

(assert (= (and b!106512 (not c!18604)) b!106511))

(assert (= (or b!106509 b!106511) bm!11268))

(declare-fun m!119295 () Bool)

(assert (=> bm!11268 m!119295))

(assert (=> b!106512 m!118645))

(assert (=> b!106512 m!118645))

(assert (=> b!106512 m!118647))

(assert (=> b!105729 d!29247))

(declare-fun d!29249 () Bool)

(declare-fun res!52980 () Bool)

(declare-fun e!69312 () Bool)

(assert (=> d!29249 (=> res!52980 e!69312)))

(assert (=> d!29249 (= res!52980 (and ((_ is Cons!1613) lt!53893) (= (_1!1216 (h!2210 lt!53893)) (_1!1216 lt!53815))))))

(assert (=> d!29249 (= (containsKey!160 lt!53893 (_1!1216 lt!53815)) e!69312)))

(declare-fun b!106513 () Bool)

(declare-fun e!69313 () Bool)

(assert (=> b!106513 (= e!69312 e!69313)))

(declare-fun res!52981 () Bool)

(assert (=> b!106513 (=> (not res!52981) (not e!69313))))

(assert (=> b!106513 (= res!52981 (and (or (not ((_ is Cons!1613) lt!53893)) (bvsle (_1!1216 (h!2210 lt!53893)) (_1!1216 lt!53815))) ((_ is Cons!1613) lt!53893) (bvslt (_1!1216 (h!2210 lt!53893)) (_1!1216 lt!53815))))))

(declare-fun b!106514 () Bool)

(assert (=> b!106514 (= e!69313 (containsKey!160 (t!5700 lt!53893) (_1!1216 lt!53815)))))

(assert (= (and d!29249 (not res!52980)) b!106513))

(assert (= (and b!106513 res!52981) b!106514))

(declare-fun m!119297 () Bool)

(assert (=> b!106514 m!119297))

(assert (=> b!105877 d!29249))

(declare-fun b!106515 () Bool)

(declare-fun e!69317 () List!1617)

(declare-fun e!69315 () List!1617)

(assert (=> b!106515 (= e!69317 e!69315)))

(declare-fun c!18606 () Bool)

(assert (=> b!106515 (= c!18606 (and ((_ is Cons!1613) (t!5700 (toList!803 (+!144 lt!53805 lt!53815)))) (= (_1!1216 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53815))))) (_1!1216 lt!53814))))))

(declare-fun b!106516 () Bool)

(declare-fun call!11272 () List!1617)

(assert (=> b!106516 (= e!69317 call!11272)))

(declare-fun b!106518 () Bool)

(declare-fun e!69318 () List!1617)

(declare-fun call!11274 () List!1617)

(assert (=> b!106518 (= e!69318 call!11274)))

(declare-fun c!18607 () Bool)

(declare-fun b!106519 () Bool)

(assert (=> b!106519 (= c!18607 (and ((_ is Cons!1613) (t!5700 (toList!803 (+!144 lt!53805 lt!53815)))) (bvsgt (_1!1216 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53815))))) (_1!1216 lt!53814))))))

(assert (=> b!106519 (= e!69315 e!69318)))

(declare-fun bm!11269 () Bool)

(declare-fun call!11273 () List!1617)

(assert (=> bm!11269 (= call!11274 call!11273)))

(declare-fun b!106520 () Bool)

(declare-fun e!69316 () List!1617)

(assert (=> b!106520 (= e!69316 (insertStrictlySorted!75 (t!5700 (t!5700 (toList!803 (+!144 lt!53805 lt!53815)))) (_1!1216 lt!53814) (_2!1216 lt!53814)))))

(declare-fun b!106521 () Bool)

(assert (=> b!106521 (= e!69318 call!11274)))

(declare-fun b!106522 () Bool)

(declare-fun res!52983 () Bool)

(declare-fun e!69314 () Bool)

(assert (=> b!106522 (=> (not res!52983) (not e!69314))))

(declare-fun lt!54634 () List!1617)

(assert (=> b!106522 (= res!52983 (containsKey!160 lt!54634 (_1!1216 lt!53814)))))

(declare-fun b!106523 () Bool)

(assert (=> b!106523 (= e!69314 (contains!830 lt!54634 (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun b!106524 () Bool)

(assert (=> b!106524 (= e!69316 (ite c!18606 (t!5700 (t!5700 (toList!803 (+!144 lt!53805 lt!53815)))) (ite c!18607 (Cons!1613 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53815)))) (t!5700 (t!5700 (toList!803 (+!144 lt!53805 lt!53815))))) Nil!1614)))))

(declare-fun d!29251 () Bool)

(assert (=> d!29251 e!69314))

(declare-fun res!52982 () Bool)

(assert (=> d!29251 (=> (not res!52982) (not e!69314))))

(assert (=> d!29251 (= res!52982 (isStrictlySorted!309 lt!54634))))

(assert (=> d!29251 (= lt!54634 e!69317)))

(declare-fun c!18605 () Bool)

(assert (=> d!29251 (= c!18605 (and ((_ is Cons!1613) (t!5700 (toList!803 (+!144 lt!53805 lt!53815)))) (bvslt (_1!1216 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53815))))) (_1!1216 lt!53814))))))

(assert (=> d!29251 (isStrictlySorted!309 (t!5700 (toList!803 (+!144 lt!53805 lt!53815))))))

(assert (=> d!29251 (= (insertStrictlySorted!75 (t!5700 (toList!803 (+!144 lt!53805 lt!53815))) (_1!1216 lt!53814) (_2!1216 lt!53814)) lt!54634)))

(declare-fun b!106517 () Bool)

(assert (=> b!106517 (= e!69315 call!11273)))

(declare-fun bm!11270 () Bool)

(assert (=> bm!11270 (= call!11272 ($colon$colon!81 e!69316 (ite c!18605 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53815)))) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814)))))))

(declare-fun c!18608 () Bool)

(assert (=> bm!11270 (= c!18608 c!18605)))

(declare-fun bm!11271 () Bool)

(assert (=> bm!11271 (= call!11273 call!11272)))

(assert (= (and d!29251 c!18605) b!106516))

(assert (= (and d!29251 (not c!18605)) b!106515))

(assert (= (and b!106515 c!18606) b!106517))

(assert (= (and b!106515 (not c!18606)) b!106519))

(assert (= (and b!106519 c!18607) b!106521))

(assert (= (and b!106519 (not c!18607)) b!106518))

(assert (= (or b!106521 b!106518) bm!11269))

(assert (= (or b!106517 bm!11269) bm!11271))

(assert (= (or b!106516 bm!11271) bm!11270))

(assert (= (and bm!11270 c!18608) b!106520))

(assert (= (and bm!11270 (not c!18608)) b!106524))

(assert (= (and d!29251 res!52982) b!106522))

(assert (= (and b!106522 res!52983) b!106523))

(declare-fun m!119299 () Bool)

(assert (=> b!106520 m!119299))

(declare-fun m!119301 () Bool)

(assert (=> b!106523 m!119301))

(declare-fun m!119303 () Bool)

(assert (=> d!29251 m!119303))

(declare-fun m!119305 () Bool)

(assert (=> d!29251 m!119305))

(declare-fun m!119307 () Bool)

(assert (=> bm!11270 m!119307))

(declare-fun m!119309 () Bool)

(assert (=> b!106522 m!119309))

(assert (=> b!105804 d!29251))

(declare-fun b!106537 () Bool)

(declare-fun e!69326 () SeekEntryResult!259)

(assert (=> b!106537 (= e!69326 Undefined!259)))

(declare-fun d!29253 () Bool)

(declare-fun lt!54639 () SeekEntryResult!259)

(assert (=> d!29253 (and (or ((_ is Undefined!259) lt!54639) (not ((_ is Found!259) lt!54639)) (and (bvsge (index!3185 lt!54639) #b00000000000000000000000000000000) (bvslt (index!3185 lt!54639) (size!2318 (_keys!4288 newMap!16))))) (or ((_ is Undefined!259) lt!54639) ((_ is Found!259) lt!54639) (not ((_ is MissingVacant!259) lt!54639)) (not (= (index!3187 lt!54639) (index!3186 lt!54104))) (and (bvsge (index!3187 lt!54639) #b00000000000000000000000000000000) (bvslt (index!3187 lt!54639) (size!2318 (_keys!4288 newMap!16))))) (or ((_ is Undefined!259) lt!54639) (ite ((_ is Found!259) lt!54639) (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54639)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) (and ((_ is MissingVacant!259) lt!54639) (= (index!3187 lt!54639) (index!3186 lt!54104)) (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3187 lt!54639)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!29253 (= lt!54639 e!69326)))

(declare-fun c!18617 () Bool)

(assert (=> d!29253 (= c!18617 (bvsge (x!13645 lt!54104) #b01111111111111111111111111111110))))

(declare-fun lt!54640 () (_ BitVec 64))

(assert (=> d!29253 (= lt!54640 (select (arr!2063 (_keys!4288 newMap!16)) (index!3186 lt!54104)))))

(assert (=> d!29253 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29253 (= (seekKeyOrZeroReturnVacant!0 (x!13645 lt!54104) (index!3186 lt!54104) (index!3186 lt!54104) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)) lt!54639)))

(declare-fun b!106538 () Bool)

(declare-fun e!69325 () SeekEntryResult!259)

(assert (=> b!106538 (= e!69326 e!69325)))

(declare-fun c!18616 () Bool)

(assert (=> b!106538 (= c!18616 (= lt!54640 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!106539 () Bool)

(assert (=> b!106539 (= e!69325 (Found!259 (index!3186 lt!54104)))))

(declare-fun e!69327 () SeekEntryResult!259)

(declare-fun b!106540 () Bool)

(assert (=> b!106540 (= e!69327 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13645 lt!54104) #b00000000000000000000000000000001) (nextIndex!0 (index!3186 lt!54104) (x!13645 lt!54104) (mask!6728 newMap!16)) (index!3186 lt!54104) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!106541 () Bool)

(declare-fun c!18615 () Bool)

(assert (=> b!106541 (= c!18615 (= lt!54640 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106541 (= e!69325 e!69327)))

(declare-fun b!106542 () Bool)

(assert (=> b!106542 (= e!69327 (MissingVacant!259 (index!3186 lt!54104)))))

(assert (= (and d!29253 c!18617) b!106537))

(assert (= (and d!29253 (not c!18617)) b!106538))

(assert (= (and b!106538 c!18616) b!106539))

(assert (= (and b!106538 (not c!18616)) b!106541))

(assert (= (and b!106541 c!18615) b!106542))

(assert (= (and b!106541 (not c!18615)) b!106540))

(declare-fun m!119311 () Bool)

(assert (=> d!29253 m!119311))

(declare-fun m!119313 () Bool)

(assert (=> d!29253 m!119313))

(assert (=> d!29253 m!117935))

(assert (=> d!29253 m!117933))

(declare-fun m!119315 () Bool)

(assert (=> b!106540 m!119315))

(assert (=> b!106540 m!119315))

(assert (=> b!106540 m!117489))

(declare-fun m!119317 () Bool)

(assert (=> b!106540 m!119317))

(assert (=> b!105691 d!29253))

(declare-fun b!106543 () Bool)

(declare-fun e!69329 () Bool)

(declare-fun e!69330 () Bool)

(assert (=> b!106543 (= e!69329 e!69330)))

(declare-fun res!52986 () Bool)

(assert (=> b!106543 (=> (not res!52986) (not e!69330))))

(declare-fun e!69331 () Bool)

(assert (=> b!106543 (= res!52986 (not e!69331))))

(declare-fun res!52984 () Bool)

(assert (=> b!106543 (=> (not res!52984) (not e!69331))))

(assert (=> b!106543 (= res!52984 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!106544 () Bool)

(declare-fun e!69328 () Bool)

(declare-fun call!11275 () Bool)

(assert (=> b!106544 (= e!69328 call!11275)))

(declare-fun b!106545 () Bool)

(assert (=> b!106545 (= e!69331 (contains!829 (ite c!18493 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!29255 () Bool)

(declare-fun res!52985 () Bool)

(assert (=> d!29255 (=> res!52985 e!69329)))

(assert (=> d!29255 (= res!52985 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29255 (= (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18493 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613))) e!69329)))

(declare-fun bm!11272 () Bool)

(declare-fun c!18618 () Bool)

(assert (=> bm!11272 (= call!11275 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18618 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!18493 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613))) (ite c!18493 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)))))))

(declare-fun b!106546 () Bool)

(assert (=> b!106546 (= e!69328 call!11275)))

(declare-fun b!106547 () Bool)

(assert (=> b!106547 (= e!69330 e!69328)))

(assert (=> b!106547 (= c!18618 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!29255 (not res!52985)) b!106543))

(assert (= (and b!106543 res!52984) b!106545))

(assert (= (and b!106543 res!52986) b!106547))

(assert (= (and b!106547 c!18618) b!106544))

(assert (= (and b!106547 (not c!18618)) b!106546))

(assert (= (or b!106544 b!106546) bm!11272))

(declare-fun m!119319 () Bool)

(assert (=> b!106543 m!119319))

(assert (=> b!106543 m!119319))

(declare-fun m!119321 () Bool)

(assert (=> b!106543 m!119321))

(assert (=> b!106545 m!119319))

(assert (=> b!106545 m!119319))

(declare-fun m!119323 () Bool)

(assert (=> b!106545 m!119323))

(assert (=> bm!11272 m!119319))

(declare-fun m!119325 () Bool)

(assert (=> bm!11272 m!119325))

(assert (=> b!106547 m!119319))

(assert (=> b!106547 m!119319))

(assert (=> b!106547 m!119321))

(assert (=> bm!11211 d!29255))

(declare-fun d!29257 () Bool)

(declare-fun c!18621 () Bool)

(assert (=> d!29257 (= c!18621 ((_ is Nil!1614) (toList!803 lt!53891)))))

(declare-fun e!69334 () (InoxSet tuple2!2410))

(assert (=> d!29257 (= (content!109 (toList!803 lt!53891)) e!69334)))

(declare-fun b!106552 () Bool)

(assert (=> b!106552 (= e!69334 ((as const (Array tuple2!2410 Bool)) false))))

(declare-fun b!106553 () Bool)

(assert (=> b!106553 (= e!69334 ((_ map or) (store ((as const (Array tuple2!2410 Bool)) false) (h!2210 (toList!803 lt!53891)) true) (content!109 (t!5700 (toList!803 lt!53891)))))))

(assert (= (and d!29257 c!18621) b!106552))

(assert (= (and d!29257 (not c!18621)) b!106553))

(declare-fun m!119327 () Bool)

(assert (=> b!106553 m!119327))

(declare-fun m!119329 () Bool)

(assert (=> b!106553 m!119329))

(assert (=> d!28865 d!29257))

(assert (=> b!105825 d!28995))

(declare-fun d!29259 () Bool)

(assert (=> d!29259 (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54641 () Unit!3232)

(assert (=> d!29259 (= lt!54641 (choose!660 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69335 () Bool)

(assert (=> d!29259 e!69335))

(declare-fun res!52987 () Bool)

(assert (=> d!29259 (=> (not res!52987) (not e!69335))))

(assert (=> d!29259 (= res!52987 (isStrictlySorted!309 (toList!803 lt!53958)))))

(assert (=> d!29259 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000) lt!54641)))

(declare-fun b!106554 () Bool)

(assert (=> b!106554 (= e!69335 (containsKey!160 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29259 res!52987) b!106554))

(assert (=> d!29259 m!117955))

(assert (=> d!29259 m!117955))

(assert (=> d!29259 m!117957))

(declare-fun m!119331 () Bool)

(assert (=> d!29259 m!119331))

(assert (=> d!29259 m!118831))

(assert (=> b!106554 m!117951))

(assert (=> b!105726 d!29259))

(assert (=> b!105726 d!29059))

(assert (=> b!105726 d!29061))

(declare-fun d!29261 () Bool)

(declare-fun e!69337 () Bool)

(assert (=> d!29261 e!69337))

(declare-fun res!52988 () Bool)

(assert (=> d!29261 (=> res!52988 e!69337)))

(declare-fun lt!54644 () Bool)

(assert (=> d!29261 (= res!52988 (not lt!54644))))

(declare-fun lt!54642 () Bool)

(assert (=> d!29261 (= lt!54644 lt!54642)))

(declare-fun lt!54643 () Unit!3232)

(declare-fun e!69336 () Unit!3232)

(assert (=> d!29261 (= lt!54643 e!69336)))

(declare-fun c!18622 () Bool)

(assert (=> d!29261 (= c!18622 lt!54642)))

(assert (=> d!29261 (= lt!54642 (containsKey!160 (toList!803 lt!54392) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!29261 (= (contains!828 lt!54392 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!54644)))

(declare-fun b!106555 () Bool)

(declare-fun lt!54645 () Unit!3232)

(assert (=> b!106555 (= e!69336 lt!54645)))

(assert (=> b!106555 (= lt!54645 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54392) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!106555 (isDefined!109 (getValueByKey!156 (toList!803 lt!54392) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!106556 () Bool)

(declare-fun Unit!3278 () Unit!3232)

(assert (=> b!106556 (= e!69336 Unit!3278)))

(declare-fun b!106557 () Bool)

(assert (=> b!106557 (= e!69337 (isDefined!109 (getValueByKey!156 (toList!803 lt!54392) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!29261 c!18622) b!106555))

(assert (= (and d!29261 (not c!18622)) b!106556))

(assert (= (and d!29261 (not res!52988)) b!106557))

(assert (=> d!29261 m!118545))

(declare-fun m!119333 () Bool)

(assert (=> d!29261 m!119333))

(assert (=> b!106555 m!118545))

(declare-fun m!119335 () Bool)

(assert (=> b!106555 m!119335))

(assert (=> b!106555 m!118545))

(assert (=> b!106555 m!118787))

(assert (=> b!106555 m!118787))

(declare-fun m!119337 () Bool)

(assert (=> b!106555 m!119337))

(assert (=> b!106557 m!118545))

(assert (=> b!106557 m!118787))

(assert (=> b!106557 m!118787))

(assert (=> b!106557 m!119337))

(assert (=> b!106079 d!29261))

(declare-fun d!29263 () Bool)

(assert (=> d!29263 (= (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53970)) (v!2896 (getValueByKey!156 (toList!803 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53970)))))

(assert (=> d!28849 d!29263))

(declare-fun e!69339 () Option!162)

(declare-fun b!106560 () Bool)

(assert (=> b!106560 (= e!69339 (getValueByKey!156 (t!5700 (toList!803 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) lt!53970))))

(declare-fun b!106558 () Bool)

(declare-fun e!69338 () Option!162)

(assert (=> b!106558 (= e!69338 (Some!161 (_2!1216 (h!2210 (toList!803 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun c!18623 () Bool)

(declare-fun d!29265 () Bool)

(assert (=> d!29265 (= c!18623 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53970)))))

(assert (=> d!29265 (= (getValueByKey!156 (toList!803 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53970) e!69338)))

(declare-fun b!106561 () Bool)

(assert (=> b!106561 (= e!69339 None!160)))

(declare-fun b!106559 () Bool)

(assert (=> b!106559 (= e!69338 e!69339)))

(declare-fun c!18624 () Bool)

(assert (=> b!106559 (= c!18624 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) (not (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53970))))))

(assert (= (and d!29265 c!18623) b!106558))

(assert (= (and d!29265 (not c!18623)) b!106559))

(assert (= (and b!106559 c!18624) b!106560))

(assert (= (and b!106559 (not c!18624)) b!106561))

(declare-fun m!119339 () Bool)

(assert (=> b!106560 m!119339))

(assert (=> d!28849 d!29265))

(declare-fun d!29267 () Bool)

(assert (=> d!29267 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53906) (_1!1216 lt!53814))) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53906) (_1!1216 lt!53814)))))))

(declare-fun bs!4371 () Bool)

(assert (= bs!4371 d!29267))

(assert (=> bs!4371 m!117695))

(declare-fun m!119341 () Bool)

(assert (=> bs!4371 m!119341))

(assert (=> b!105792 d!29267))

(assert (=> b!105792 d!29007))

(declare-fun b!106562 () Bool)

(declare-fun e!69341 () Bool)

(declare-fun e!69342 () Bool)

(assert (=> b!106562 (= e!69341 e!69342)))

(declare-fun res!52991 () Bool)

(assert (=> b!106562 (=> (not res!52991) (not e!69342))))

(declare-fun e!69343 () Bool)

(assert (=> b!106562 (= res!52991 (not e!69343))))

(declare-fun res!52989 () Bool)

(assert (=> b!106562 (=> (not res!52989) (not e!69343))))

(assert (=> b!106562 (= res!52989 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!106563 () Bool)

(declare-fun e!69340 () Bool)

(declare-fun call!11276 () Bool)

(assert (=> b!106563 (= e!69340 call!11276)))

(declare-fun b!106564 () Bool)

(assert (=> b!106564 (= e!69343 (contains!829 Nil!1613 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!29269 () Bool)

(declare-fun res!52990 () Bool)

(assert (=> d!29269 (=> res!52990 e!69341)))

(assert (=> d!29269 (= res!52990 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29269 (= (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 Nil!1613) e!69341)))

(declare-fun bm!11273 () Bool)

(declare-fun c!18625 () Bool)

(assert (=> bm!11273 (= call!11276 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18625 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000) Nil!1613) Nil!1613)))))

(declare-fun b!106565 () Bool)

(assert (=> b!106565 (= e!69340 call!11276)))

(declare-fun b!106566 () Bool)

(assert (=> b!106566 (= e!69342 e!69340)))

(assert (=> b!106566 (= c!18625 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!29269 (not res!52990)) b!106562))

(assert (= (and b!106562 res!52989) b!106564))

(assert (= (and b!106562 res!52991) b!106566))

(assert (= (and b!106566 c!18625) b!106563))

(assert (= (and b!106566 (not c!18625)) b!106565))

(assert (= (or b!106563 b!106565) bm!11273))

(declare-fun m!119343 () Bool)

(assert (=> b!106562 m!119343))

(assert (=> b!106562 m!119343))

(declare-fun m!119345 () Bool)

(assert (=> b!106562 m!119345))

(assert (=> b!106564 m!119343))

(assert (=> b!106564 m!119343))

(declare-fun m!119347 () Bool)

(assert (=> b!106564 m!119347))

(assert (=> bm!11273 m!119343))

(declare-fun m!119349 () Bool)

(assert (=> bm!11273 m!119349))

(assert (=> b!106566 m!119343))

(assert (=> b!106566 m!119343))

(assert (=> b!106566 m!119345))

(assert (=> b!105961 d!29269))

(declare-fun d!29271 () Bool)

(assert (=> d!29271 (= (isDefined!109 (getValueByKey!156 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))) (not (isEmpty!371 (getValueByKey!156 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(declare-fun bs!4372 () Bool)

(assert (= bs!4372 d!29271))

(assert (=> bs!4372 m!118263))

(declare-fun m!119351 () Bool)

(assert (=> bs!4372 m!119351))

(assert (=> b!105914 d!29271))

(declare-fun b!106569 () Bool)

(declare-fun e!69345 () Option!162)

(assert (=> b!106569 (= e!69345 (getValueByKey!156 (t!5700 (toList!803 call!11145)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!106567 () Bool)

(declare-fun e!69344 () Option!162)

(assert (=> b!106567 (= e!69344 (Some!161 (_2!1216 (h!2210 (toList!803 call!11145)))))))

(declare-fun c!18626 () Bool)

(declare-fun d!29273 () Bool)

(assert (=> d!29273 (= c!18626 (and ((_ is Cons!1613) (toList!803 call!11145)) (= (_1!1216 (h!2210 (toList!803 call!11145))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29273 (= (getValueByKey!156 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69344)))

(declare-fun b!106570 () Bool)

(assert (=> b!106570 (= e!69345 None!160)))

(declare-fun b!106568 () Bool)

(assert (=> b!106568 (= e!69344 e!69345)))

(declare-fun c!18627 () Bool)

(assert (=> b!106568 (= c!18627 (and ((_ is Cons!1613) (toList!803 call!11145)) (not (= (_1!1216 (h!2210 (toList!803 call!11145))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(assert (= (and d!29273 c!18626) b!106567))

(assert (= (and d!29273 (not c!18626)) b!106568))

(assert (= (and b!106568 c!18627) b!106569))

(assert (= (and b!106568 (not c!18627)) b!106570))

(assert (=> b!106569 m!117489))

(declare-fun m!119353 () Bool)

(assert (=> b!106569 m!119353))

(assert (=> b!105914 d!29273))

(declare-fun d!29275 () Bool)

(declare-fun lt!54646 () Bool)

(assert (=> d!29275 (= lt!54646 (select (content!109 (toList!803 lt!54255)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69347 () Bool)

(assert (=> d!29275 (= lt!54646 e!69347)))

(declare-fun res!52992 () Bool)

(assert (=> d!29275 (=> (not res!52992) (not e!69347))))

(assert (=> d!29275 (= res!52992 ((_ is Cons!1613) (toList!803 lt!54255)))))

(assert (=> d!29275 (= (contains!830 (toList!803 lt!54255) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54646)))

(declare-fun b!106571 () Bool)

(declare-fun e!69346 () Bool)

(assert (=> b!106571 (= e!69347 e!69346)))

(declare-fun res!52993 () Bool)

(assert (=> b!106571 (=> res!52993 e!69346)))

(assert (=> b!106571 (= res!52993 (= (h!2210 (toList!803 lt!54255)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106572 () Bool)

(assert (=> b!106572 (= e!69346 (contains!830 (t!5700 (toList!803 lt!54255)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29275 res!52992) b!106571))

(assert (= (and b!106571 (not res!52993)) b!106572))

(declare-fun m!119355 () Bool)

(assert (=> d!29275 m!119355))

(declare-fun m!119357 () Bool)

(assert (=> d!29275 m!119357))

(declare-fun m!119359 () Bool)

(assert (=> b!106572 m!119359))

(assert (=> b!105965 d!29275))

(declare-fun d!29277 () Bool)

(assert (=> d!29277 (= (get!1332 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2891 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105841 d!29277))

(declare-fun d!29279 () Bool)

(declare-fun e!69349 () Bool)

(assert (=> d!29279 e!69349))

(declare-fun res!52994 () Bool)

(assert (=> d!29279 (=> res!52994 e!69349)))

(declare-fun lt!54649 () Bool)

(assert (=> d!29279 (= res!52994 (not lt!54649))))

(declare-fun lt!54647 () Bool)

(assert (=> d!29279 (= lt!54649 lt!54647)))

(declare-fun lt!54648 () Unit!3232)

(declare-fun e!69348 () Unit!3232)

(assert (=> d!29279 (= lt!54648 e!69348)))

(declare-fun c!18628 () Bool)

(assert (=> d!29279 (= c!18628 lt!54647)))

(assert (=> d!29279 (= lt!54647 (containsKey!160 (toList!803 lt!54392) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29279 (= (contains!828 lt!54392 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54649)))

(declare-fun b!106573 () Bool)

(declare-fun lt!54650 () Unit!3232)

(assert (=> b!106573 (= e!69348 lt!54650)))

(assert (=> b!106573 (= lt!54650 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54392) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106573 (isDefined!109 (getValueByKey!156 (toList!803 lt!54392) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106574 () Bool)

(declare-fun Unit!3279 () Unit!3232)

(assert (=> b!106574 (= e!69348 Unit!3279)))

(declare-fun b!106575 () Bool)

(assert (=> b!106575 (= e!69349 (isDefined!109 (getValueByKey!156 (toList!803 lt!54392) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29279 c!18628) b!106573))

(assert (= (and d!29279 (not c!18628)) b!106574))

(assert (= (and d!29279 (not res!52994)) b!106575))

(declare-fun m!119361 () Bool)

(assert (=> d!29279 m!119361))

(declare-fun m!119363 () Bool)

(assert (=> b!106573 m!119363))

(declare-fun m!119365 () Bool)

(assert (=> b!106573 m!119365))

(assert (=> b!106573 m!119365))

(declare-fun m!119367 () Bool)

(assert (=> b!106573 m!119367))

(assert (=> b!106575 m!119365))

(assert (=> b!106575 m!119365))

(assert (=> b!106575 m!119367))

(assert (=> b!106087 d!29279))

(declare-fun d!29281 () Bool)

(declare-fun e!69351 () Bool)

(assert (=> d!29281 e!69351))

(declare-fun res!52995 () Bool)

(assert (=> d!29281 (=> res!52995 e!69351)))

(declare-fun lt!54653 () Bool)

(assert (=> d!29281 (= res!52995 (not lt!54653))))

(declare-fun lt!54651 () Bool)

(assert (=> d!29281 (= lt!54653 lt!54651)))

(declare-fun lt!54652 () Unit!3232)

(declare-fun e!69350 () Unit!3232)

(assert (=> d!29281 (= lt!54652 e!69350)))

(declare-fun c!18629 () Bool)

(assert (=> d!29281 (= c!18629 lt!54651)))

(assert (=> d!29281 (= lt!54651 (containsKey!160 (toList!803 lt!54069) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29281 (= (contains!828 lt!54069 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54653)))

(declare-fun b!106576 () Bool)

(declare-fun lt!54654 () Unit!3232)

(assert (=> b!106576 (= e!69350 lt!54654)))

(assert (=> b!106576 (= lt!54654 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54069) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106576 (isDefined!109 (getValueByKey!156 (toList!803 lt!54069) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106577 () Bool)

(declare-fun Unit!3280 () Unit!3232)

(assert (=> b!106577 (= e!69350 Unit!3280)))

(declare-fun b!106578 () Bool)

(assert (=> b!106578 (= e!69351 (isDefined!109 (getValueByKey!156 (toList!803 lt!54069) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29281 c!18629) b!106576))

(assert (= (and d!29281 (not c!18629)) b!106577))

(assert (= (and d!29281 (not res!52995)) b!106578))

(declare-fun m!119369 () Bool)

(assert (=> d!29281 m!119369))

(declare-fun m!119371 () Bool)

(assert (=> b!106576 m!119371))

(assert (=> b!106576 m!117833))

(assert (=> b!106576 m!117833))

(declare-fun m!119373 () Bool)

(assert (=> b!106576 m!119373))

(assert (=> b!106578 m!117833))

(assert (=> b!106578 m!117833))

(assert (=> b!106578 m!119373))

(assert (=> d!28829 d!29281))

(declare-fun b!106581 () Bool)

(declare-fun e!69353 () Option!162)

(assert (=> b!106581 (= e!69353 (getValueByKey!156 (t!5700 lt!54071) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106579 () Bool)

(declare-fun e!69352 () Option!162)

(assert (=> b!106579 (= e!69352 (Some!161 (_2!1216 (h!2210 lt!54071))))))

(declare-fun c!18630 () Bool)

(declare-fun d!29283 () Bool)

(assert (=> d!29283 (= c!18630 (and ((_ is Cons!1613) lt!54071) (= (_1!1216 (h!2210 lt!54071)) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29283 (= (getValueByKey!156 lt!54071 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69352)))

(declare-fun b!106582 () Bool)

(assert (=> b!106582 (= e!69353 None!160)))

(declare-fun b!106580 () Bool)

(assert (=> b!106580 (= e!69352 e!69353)))

(declare-fun c!18631 () Bool)

(assert (=> b!106580 (= c!18631 (and ((_ is Cons!1613) lt!54071) (not (= (_1!1216 (h!2210 lt!54071)) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29283 c!18630) b!106579))

(assert (= (and d!29283 (not c!18630)) b!106580))

(assert (= (and b!106580 c!18631) b!106581))

(assert (= (and b!106580 (not c!18631)) b!106582))

(declare-fun m!119375 () Bool)

(assert (=> b!106581 m!119375))

(assert (=> d!28829 d!29283))

(declare-fun d!29285 () Bool)

(assert (=> d!29285 (= (getValueByKey!156 lt!54071 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54655 () Unit!3232)

(assert (=> d!29285 (= lt!54655 (choose!657 lt!54071 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69354 () Bool)

(assert (=> d!29285 e!69354))

(declare-fun res!52996 () Bool)

(assert (=> d!29285 (=> (not res!52996) (not e!69354))))

(assert (=> d!29285 (= res!52996 (isStrictlySorted!309 lt!54071))))

(assert (=> d!29285 (= (lemmaContainsTupThenGetReturnValue!72 lt!54071 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54655)))

(declare-fun b!106583 () Bool)

(declare-fun res!52997 () Bool)

(assert (=> b!106583 (=> (not res!52997) (not e!69354))))

(assert (=> b!106583 (= res!52997 (containsKey!160 lt!54071 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106584 () Bool)

(assert (=> b!106584 (= e!69354 (contains!830 lt!54071 (tuple2!2411 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29285 res!52996) b!106583))

(assert (= (and b!106583 res!52997) b!106584))

(assert (=> d!29285 m!117827))

(declare-fun m!119377 () Bool)

(assert (=> d!29285 m!119377))

(declare-fun m!119379 () Bool)

(assert (=> d!29285 m!119379))

(declare-fun m!119381 () Bool)

(assert (=> b!106583 m!119381))

(declare-fun m!119383 () Bool)

(assert (=> b!106584 m!119383))

(assert (=> d!28829 d!29285))

(declare-fun b!106585 () Bool)

(declare-fun e!69358 () List!1617)

(declare-fun e!69356 () List!1617)

(assert (=> b!106585 (= e!69358 e!69356)))

(declare-fun c!18633 () Bool)

(assert (=> b!106585 (= c!18633 (and ((_ is Cons!1613) (toList!803 lt!53971)) (= (_1!1216 (h!2210 (toList!803 lt!53971))) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106586 () Bool)

(declare-fun call!11277 () List!1617)

(assert (=> b!106586 (= e!69358 call!11277)))

(declare-fun b!106588 () Bool)

(declare-fun e!69359 () List!1617)

(declare-fun call!11279 () List!1617)

(assert (=> b!106588 (= e!69359 call!11279)))

(declare-fun b!106589 () Bool)

(declare-fun c!18634 () Bool)

(assert (=> b!106589 (= c!18634 (and ((_ is Cons!1613) (toList!803 lt!53971)) (bvsgt (_1!1216 (h!2210 (toList!803 lt!53971))) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> b!106589 (= e!69356 e!69359)))

(declare-fun bm!11274 () Bool)

(declare-fun call!11278 () List!1617)

(assert (=> bm!11274 (= call!11279 call!11278)))

(declare-fun e!69357 () List!1617)

(declare-fun b!106590 () Bool)

(assert (=> b!106590 (= e!69357 (insertStrictlySorted!75 (t!5700 (toList!803 lt!53971)) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106591 () Bool)

(assert (=> b!106591 (= e!69359 call!11279)))

(declare-fun b!106592 () Bool)

(declare-fun res!52999 () Bool)

(declare-fun e!69355 () Bool)

(assert (=> b!106592 (=> (not res!52999) (not e!69355))))

(declare-fun lt!54656 () List!1617)

(assert (=> b!106592 (= res!52999 (containsKey!160 lt!54656 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106593 () Bool)

(assert (=> b!106593 (= e!69355 (contains!830 lt!54656 (tuple2!2411 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106594 () Bool)

(assert (=> b!106594 (= e!69357 (ite c!18633 (t!5700 (toList!803 lt!53971)) (ite c!18634 (Cons!1613 (h!2210 (toList!803 lt!53971)) (t!5700 (toList!803 lt!53971))) Nil!1614)))))

(declare-fun d!29287 () Bool)

(assert (=> d!29287 e!69355))

(declare-fun res!52998 () Bool)

(assert (=> d!29287 (=> (not res!52998) (not e!69355))))

(assert (=> d!29287 (= res!52998 (isStrictlySorted!309 lt!54656))))

(assert (=> d!29287 (= lt!54656 e!69358)))

(declare-fun c!18632 () Bool)

(assert (=> d!29287 (= c!18632 (and ((_ is Cons!1613) (toList!803 lt!53971)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53971))) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29287 (isStrictlySorted!309 (toList!803 lt!53971))))

(assert (=> d!29287 (= (insertStrictlySorted!75 (toList!803 lt!53971) (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54656)))

(declare-fun b!106587 () Bool)

(assert (=> b!106587 (= e!69356 call!11278)))

(declare-fun bm!11275 () Bool)

(assert (=> bm!11275 (= call!11277 ($colon$colon!81 e!69357 (ite c!18632 (h!2210 (toList!803 lt!53971)) (tuple2!2411 (_1!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18635 () Bool)

(assert (=> bm!11275 (= c!18635 c!18632)))

(declare-fun bm!11276 () Bool)

(assert (=> bm!11276 (= call!11278 call!11277)))

(assert (= (and d!29287 c!18632) b!106586))

(assert (= (and d!29287 (not c!18632)) b!106585))

(assert (= (and b!106585 c!18633) b!106587))

(assert (= (and b!106585 (not c!18633)) b!106589))

(assert (= (and b!106589 c!18634) b!106591))

(assert (= (and b!106589 (not c!18634)) b!106588))

(assert (= (or b!106591 b!106588) bm!11274))

(assert (= (or b!106587 bm!11274) bm!11276))

(assert (= (or b!106586 bm!11276) bm!11275))

(assert (= (and bm!11275 c!18635) b!106590))

(assert (= (and bm!11275 (not c!18635)) b!106594))

(assert (= (and d!29287 res!52998) b!106592))

(assert (= (and b!106592 res!52999) b!106593))

(declare-fun m!119385 () Bool)

(assert (=> b!106590 m!119385))

(declare-fun m!119387 () Bool)

(assert (=> b!106593 m!119387))

(declare-fun m!119389 () Bool)

(assert (=> d!29287 m!119389))

(declare-fun m!119391 () Bool)

(assert (=> d!29287 m!119391))

(declare-fun m!119393 () Bool)

(assert (=> bm!11275 m!119393))

(declare-fun m!119395 () Bool)

(assert (=> b!106592 m!119395))

(assert (=> d!28829 d!29287))

(assert (=> d!28905 d!28907))

(assert (=> d!28905 d!28909))

(declare-fun d!29289 () Bool)

(assert (=> d!29289 (isDefined!109 (getValueByKey!156 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29289 true))

(declare-fun _$12!353 () Unit!3232)

(assert (=> d!29289 (= (choose!660 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) _$12!353)))

(declare-fun bs!4373 () Bool)

(assert (= bs!4373 d!29289))

(assert (=> bs!4373 m!117489))

(assert (=> bs!4373 m!117759))

(assert (=> bs!4373 m!117759))

(assert (=> bs!4373 m!117761))

(assert (=> d!28905 d!29289))

(declare-fun d!29291 () Bool)

(declare-fun res!53000 () Bool)

(declare-fun e!69360 () Bool)

(assert (=> d!29291 (=> res!53000 e!69360)))

(assert (=> d!29291 (= res!53000 (or ((_ is Nil!1614) (toList!803 lt!53813)) ((_ is Nil!1614) (t!5700 (toList!803 lt!53813)))))))

(assert (=> d!29291 (= (isStrictlySorted!309 (toList!803 lt!53813)) e!69360)))

(declare-fun b!106595 () Bool)

(declare-fun e!69361 () Bool)

(assert (=> b!106595 (= e!69360 e!69361)))

(declare-fun res!53001 () Bool)

(assert (=> b!106595 (=> (not res!53001) (not e!69361))))

(assert (=> b!106595 (= res!53001 (bvslt (_1!1216 (h!2210 (toList!803 lt!53813))) (_1!1216 (h!2210 (t!5700 (toList!803 lt!53813))))))))

(declare-fun b!106596 () Bool)

(assert (=> b!106596 (= e!69361 (isStrictlySorted!309 (t!5700 (toList!803 lt!53813))))))

(assert (= (and d!29291 (not res!53000)) b!106595))

(assert (= (and b!106595 res!53001) b!106596))

(declare-fun m!119397 () Bool)

(assert (=> b!106596 m!119397))

(assert (=> d!28905 d!29291))

(declare-fun d!29293 () Bool)

(assert (=> d!29293 (= (get!1334 (getValueByKey!156 (toList!803 lt!53963) lt!53957)) (v!2896 (getValueByKey!156 (toList!803 lt!53963) lt!53957)))))

(assert (=> d!28845 d!29293))

(declare-fun b!106599 () Bool)

(declare-fun e!69363 () Option!162)

(assert (=> b!106599 (= e!69363 (getValueByKey!156 (t!5700 (toList!803 lt!53963)) lt!53957))))

(declare-fun b!106597 () Bool)

(declare-fun e!69362 () Option!162)

(assert (=> b!106597 (= e!69362 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53963)))))))

(declare-fun d!29295 () Bool)

(declare-fun c!18636 () Bool)

(assert (=> d!29295 (= c!18636 (and ((_ is Cons!1613) (toList!803 lt!53963)) (= (_1!1216 (h!2210 (toList!803 lt!53963))) lt!53957)))))

(assert (=> d!29295 (= (getValueByKey!156 (toList!803 lt!53963) lt!53957) e!69362)))

(declare-fun b!106600 () Bool)

(assert (=> b!106600 (= e!69363 None!160)))

(declare-fun b!106598 () Bool)

(assert (=> b!106598 (= e!69362 e!69363)))

(declare-fun c!18637 () Bool)

(assert (=> b!106598 (= c!18637 (and ((_ is Cons!1613) (toList!803 lt!53963)) (not (= (_1!1216 (h!2210 (toList!803 lt!53963))) lt!53957))))))

(assert (= (and d!29295 c!18636) b!106597))

(assert (= (and d!29295 (not c!18636)) b!106598))

(assert (= (and b!106598 c!18637) b!106599))

(assert (= (and b!106598 (not c!18637)) b!106600))

(declare-fun m!119399 () Bool)

(assert (=> b!106599 m!119399))

(assert (=> d!28845 d!29295))

(declare-fun d!29297 () Bool)

(declare-fun c!18638 () Bool)

(assert (=> d!29297 (= c!18638 ((_ is Nil!1614) (toList!803 lt!53902)))))

(declare-fun e!69364 () (InoxSet tuple2!2410))

(assert (=> d!29297 (= (content!109 (toList!803 lt!53902)) e!69364)))

(declare-fun b!106601 () Bool)

(assert (=> b!106601 (= e!69364 ((as const (Array tuple2!2410 Bool)) false))))

(declare-fun b!106602 () Bool)

(assert (=> b!106602 (= e!69364 ((_ map or) (store ((as const (Array tuple2!2410 Bool)) false) (h!2210 (toList!803 lt!53902)) true) (content!109 (t!5700 (toList!803 lt!53902)))))))

(assert (= (and d!29297 c!18638) b!106601))

(assert (= (and d!29297 (not c!18638)) b!106602))

(declare-fun m!119401 () Bool)

(assert (=> b!106602 m!119401))

(declare-fun m!119403 () Bool)

(assert (=> b!106602 m!119403))

(assert (=> d!28911 d!29297))

(declare-fun b!106605 () Bool)

(declare-fun e!69366 () Option!162)

(assert (=> b!106605 (= e!69366 (getValueByKey!156 (t!5700 (t!5700 (toList!803 lt!53891))) (_1!1216 lt!53815)))))

(declare-fun b!106603 () Bool)

(declare-fun e!69365 () Option!162)

(assert (=> b!106603 (= e!69365 (Some!161 (_2!1216 (h!2210 (t!5700 (toList!803 lt!53891))))))))

(declare-fun d!29299 () Bool)

(declare-fun c!18639 () Bool)

(assert (=> d!29299 (= c!18639 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53891))) (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53891)))) (_1!1216 lt!53815))))))

(assert (=> d!29299 (= (getValueByKey!156 (t!5700 (toList!803 lt!53891)) (_1!1216 lt!53815)) e!69365)))

(declare-fun b!106606 () Bool)

(assert (=> b!106606 (= e!69366 None!160)))

(declare-fun b!106604 () Bool)

(assert (=> b!106604 (= e!69365 e!69366)))

(declare-fun c!18640 () Bool)

(assert (=> b!106604 (= c!18640 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53891))) (not (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53891)))) (_1!1216 lt!53815)))))))

(assert (= (and d!29299 c!18639) b!106603))

(assert (= (and d!29299 (not c!18639)) b!106604))

(assert (= (and b!106604 c!18640) b!106605))

(assert (= (and b!106604 (not c!18640)) b!106606))

(declare-fun m!119405 () Bool)

(assert (=> b!106605 m!119405))

(assert (=> b!105917 d!29299))

(assert (=> d!29021 d!29153))

(declare-fun d!29301 () Bool)

(assert (=> d!29301 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4374 () Bool)

(assert (= bs!4374 d!29301))

(assert (=> bs!4374 m!117999))

(declare-fun m!119407 () Bool)

(assert (=> bs!4374 m!119407))

(assert (=> b!105785 d!29301))

(declare-fun e!69368 () Option!162)

(declare-fun b!106609 () Bool)

(assert (=> b!106609 (= e!69368 (getValueByKey!156 (t!5700 (toList!803 lt!53958)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!106607 () Bool)

(declare-fun e!69367 () Option!162)

(assert (=> b!106607 (= e!69367 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53958)))))))

(declare-fun d!29303 () Bool)

(declare-fun c!18641 () Bool)

(assert (=> d!29303 (= c!18641 (and ((_ is Cons!1613) (toList!803 lt!53958)) (= (_1!1216 (h!2210 (toList!803 lt!53958))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29303 (= (getValueByKey!156 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69367)))

(declare-fun b!106610 () Bool)

(assert (=> b!106610 (= e!69368 None!160)))

(declare-fun b!106608 () Bool)

(assert (=> b!106608 (= e!69367 e!69368)))

(declare-fun c!18642 () Bool)

(assert (=> b!106608 (= c!18642 (and ((_ is Cons!1613) (toList!803 lt!53958)) (not (= (_1!1216 (h!2210 (toList!803 lt!53958))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!29303 c!18641) b!106607))

(assert (= (and d!29303 (not c!18641)) b!106608))

(assert (= (and b!106608 c!18642) b!106609))

(assert (= (and b!106608 (not c!18642)) b!106610))

(assert (=> b!106609 m!117601))

(declare-fun m!119409 () Bool)

(assert (=> b!106609 m!119409))

(assert (=> b!105785 d!29303))

(assert (=> b!105911 d!29049))

(declare-fun d!29305 () Bool)

(declare-fun res!53002 () Bool)

(declare-fun e!69369 () Bool)

(assert (=> d!29305 (=> res!53002 e!69369)))

(assert (=> d!29305 (= res!53002 (and ((_ is Cons!1613) lt!53908) (= (_1!1216 (h!2210 lt!53908)) (_1!1216 lt!53814))))))

(assert (=> d!29305 (= (containsKey!160 lt!53908 (_1!1216 lt!53814)) e!69369)))

(declare-fun b!106611 () Bool)

(declare-fun e!69370 () Bool)

(assert (=> b!106611 (= e!69369 e!69370)))

(declare-fun res!53003 () Bool)

(assert (=> b!106611 (=> (not res!53003) (not e!69370))))

(assert (=> b!106611 (= res!53003 (and (or (not ((_ is Cons!1613) lt!53908)) (bvsle (_1!1216 (h!2210 lt!53908)) (_1!1216 lt!53814))) ((_ is Cons!1613) lt!53908) (bvslt (_1!1216 (h!2210 lt!53908)) (_1!1216 lt!53814))))))

(declare-fun b!106612 () Bool)

(assert (=> b!106612 (= e!69370 (containsKey!160 (t!5700 lt!53908) (_1!1216 lt!53814)))))

(assert (= (and d!29305 (not res!53002)) b!106611))

(assert (= (and b!106611 res!53003) b!106612))

(declare-fun m!119411 () Bool)

(assert (=> b!106612 m!119411))

(assert (=> b!105797 d!29305))

(declare-fun d!29307 () Bool)

(assert (=> d!29307 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53891) (_1!1216 lt!53815))) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53891) (_1!1216 lt!53815)))))))

(declare-fun bs!4375 () Bool)

(assert (= bs!4375 d!29307))

(assert (=> bs!4375 m!117649))

(declare-fun m!119413 () Bool)

(assert (=> bs!4375 m!119413))

(assert (=> b!105872 d!29307))

(assert (=> b!105872 d!28957))

(declare-fun d!29309 () Bool)

(declare-fun e!69372 () Bool)

(assert (=> d!29309 e!69372))

(declare-fun res!53004 () Bool)

(assert (=> d!29309 (=> res!53004 e!69372)))

(declare-fun lt!54659 () Bool)

(assert (=> d!29309 (= res!53004 (not lt!54659))))

(declare-fun lt!54657 () Bool)

(assert (=> d!29309 (= lt!54659 lt!54657)))

(declare-fun lt!54658 () Unit!3232)

(declare-fun e!69371 () Unit!3232)

(assert (=> d!29309 (= lt!54658 e!69371)))

(declare-fun c!18643 () Bool)

(assert (=> d!29309 (= c!18643 lt!54657)))

(assert (=> d!29309 (= lt!54657 (containsKey!160 (toList!803 lt!54365) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29309 (= (contains!828 lt!54365 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) lt!54659)))

(declare-fun b!106613 () Bool)

(declare-fun lt!54660 () Unit!3232)

(assert (=> b!106613 (= e!69371 lt!54660)))

(assert (=> b!106613 (= lt!54660 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54365) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106613 (isDefined!109 (getValueByKey!156 (toList!803 lt!54365) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106614 () Bool)

(declare-fun Unit!3281 () Unit!3232)

(assert (=> b!106614 (= e!69371 Unit!3281)))

(declare-fun b!106615 () Bool)

(assert (=> b!106615 (= e!69372 (isDefined!109 (getValueByKey!156 (toList!803 lt!54365) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29309 c!18643) b!106613))

(assert (= (and d!29309 (not c!18643)) b!106614))

(assert (= (and d!29309 (not res!53004)) b!106615))

(assert (=> d!29309 m!118103))

(declare-fun m!119415 () Bool)

(assert (=> d!29309 m!119415))

(assert (=> b!106613 m!118103))

(declare-fun m!119417 () Bool)

(assert (=> b!106613 m!119417))

(assert (=> b!106613 m!118103))

(declare-fun m!119419 () Bool)

(assert (=> b!106613 m!119419))

(assert (=> b!106613 m!119419))

(declare-fun m!119421 () Bool)

(assert (=> b!106613 m!119421))

(assert (=> b!106615 m!118103))

(assert (=> b!106615 m!119419))

(assert (=> b!106615 m!119419))

(assert (=> b!106615 m!119421))

(assert (=> b!106049 d!29309))

(assert (=> d!28847 d!28829))

(declare-fun d!29311 () Bool)

(declare-fun e!69374 () Bool)

(assert (=> d!29311 e!69374))

(declare-fun res!53005 () Bool)

(assert (=> d!29311 (=> res!53005 e!69374)))

(declare-fun lt!54663 () Bool)

(assert (=> d!29311 (= res!53005 (not lt!54663))))

(declare-fun lt!54661 () Bool)

(assert (=> d!29311 (= lt!54663 lt!54661)))

(declare-fun lt!54662 () Unit!3232)

(declare-fun e!69373 () Unit!3232)

(assert (=> d!29311 (= lt!54662 e!69373)))

(declare-fun c!18644 () Bool)

(assert (=> d!29311 (= c!18644 lt!54661)))

(assert (=> d!29311 (= lt!54661 (containsKey!160 (toList!803 lt!53971) lt!53953))))

(assert (=> d!29311 (= (contains!828 lt!53971 lt!53953) lt!54663)))

(declare-fun b!106616 () Bool)

(declare-fun lt!54664 () Unit!3232)

(assert (=> b!106616 (= e!69373 lt!54664)))

(assert (=> b!106616 (= lt!54664 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53971) lt!53953))))

(assert (=> b!106616 (isDefined!109 (getValueByKey!156 (toList!803 lt!53971) lt!53953))))

(declare-fun b!106617 () Bool)

(declare-fun Unit!3282 () Unit!3232)

(assert (=> b!106617 (= e!69373 Unit!3282)))

(declare-fun b!106618 () Bool)

(assert (=> b!106618 (= e!69374 (isDefined!109 (getValueByKey!156 (toList!803 lt!53971) lt!53953)))))

(assert (= (and d!29311 c!18644) b!106616))

(assert (= (and d!29311 (not c!18644)) b!106617))

(assert (= (and d!29311 (not res!53005)) b!106618))

(declare-fun m!119423 () Bool)

(assert (=> d!29311 m!119423))

(declare-fun m!119425 () Bool)

(assert (=> b!106616 m!119425))

(assert (=> b!106616 m!117917))

(assert (=> b!106616 m!117917))

(declare-fun m!119427 () Bool)

(assert (=> b!106616 m!119427))

(assert (=> b!106618 m!117917))

(assert (=> b!106618 m!117917))

(assert (=> b!106618 m!119427))

(assert (=> d!28847 d!29311))

(declare-fun d!29313 () Bool)

(assert (=> d!29313 (= (apply!98 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53953) (apply!98 lt!53971 lt!53953))))

(assert (=> d!29313 true))

(declare-fun _$34!887 () Unit!3232)

(assert (=> d!29313 (= (choose!654 lt!53971 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53953) _$34!887)))

(declare-fun bs!4376 () Bool)

(assert (= bs!4376 d!29313))

(assert (=> bs!4376 m!117743))

(assert (=> bs!4376 m!117743))

(assert (=> bs!4376 m!117747))

(assert (=> bs!4376 m!117753))

(assert (=> d!28847 d!29313))

(assert (=> d!28847 d!28855))

(assert (=> d!28847 d!28857))

(declare-fun d!29315 () Bool)

(declare-fun e!69376 () Bool)

(assert (=> d!29315 e!69376))

(declare-fun res!53006 () Bool)

(assert (=> d!29315 (=> res!53006 e!69376)))

(declare-fun lt!54667 () Bool)

(assert (=> d!29315 (= res!53006 (not lt!54667))))

(declare-fun lt!54665 () Bool)

(assert (=> d!29315 (= lt!54667 lt!54665)))

(declare-fun lt!54666 () Unit!3232)

(declare-fun e!69375 () Unit!3232)

(assert (=> d!29315 (= lt!54666 e!69375)))

(declare-fun c!18645 () Bool)

(assert (=> d!29315 (= c!18645 lt!54665)))

(assert (=> d!29315 (= lt!54665 (containsKey!160 (toList!803 lt!54410) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29315 (= (contains!828 lt!54410 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) lt!54667)))

(declare-fun b!106620 () Bool)

(declare-fun lt!54668 () Unit!3232)

(assert (=> b!106620 (= e!69375 lt!54668)))

(assert (=> b!106620 (= lt!54668 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54410) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106620 (isDefined!109 (getValueByKey!156 (toList!803 lt!54410) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106621 () Bool)

(declare-fun Unit!3283 () Unit!3232)

(assert (=> b!106621 (= e!69375 Unit!3283)))

(declare-fun b!106622 () Bool)

(assert (=> b!106622 (= e!69376 (isDefined!109 (getValueByKey!156 (toList!803 lt!54410) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29315 c!18645) b!106620))

(assert (= (and d!29315 (not c!18645)) b!106621))

(assert (= (and d!29315 (not res!53006)) b!106622))

(assert (=> d!29315 m!118103))

(declare-fun m!119429 () Bool)

(assert (=> d!29315 m!119429))

(assert (=> b!106620 m!118103))

(declare-fun m!119431 () Bool)

(assert (=> b!106620 m!119431))

(assert (=> b!106620 m!118103))

(declare-fun m!119433 () Bool)

(assert (=> b!106620 m!119433))

(assert (=> b!106620 m!119433))

(declare-fun m!119435 () Bool)

(assert (=> b!106620 m!119435))

(assert (=> b!106622 m!118103))

(assert (=> b!106622 m!119433))

(assert (=> b!106622 m!119433))

(assert (=> b!106622 m!119435))

(assert (=> b!106130 d!29315))

(assert (=> d!29009 d!28929))

(declare-fun d!29317 () Bool)

(declare-fun e!69377 () Bool)

(assert (=> d!29317 e!69377))

(declare-fun res!53007 () Bool)

(assert (=> d!29317 (=> (not res!53007) (not e!69377))))

(declare-fun lt!54670 () ListLongMap!1575)

(assert (=> d!29317 (= res!53007 (contains!828 lt!54670 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807))))))

(declare-fun lt!54672 () List!1617)

(assert (=> d!29317 (= lt!54670 (ListLongMap!1576 lt!54672))))

(declare-fun lt!54671 () Unit!3232)

(declare-fun lt!54669 () Unit!3232)

(assert (=> d!29317 (= lt!54671 lt!54669)))

(assert (=> d!29317 (= (getValueByKey!156 lt!54672 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807))) (Some!161 (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807))))))

(assert (=> d!29317 (= lt!54669 (lemmaContainsTupThenGetReturnValue!72 lt!54672 (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807))))))

(assert (=> d!29317 (= lt!54672 (insertStrictlySorted!75 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807))))))

(assert (=> d!29317 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807)) lt!54670)))

(declare-fun b!106623 () Bool)

(declare-fun res!53008 () Bool)

(assert (=> b!106623 (=> (not res!53008) (not e!69377))))

(assert (=> b!106623 (= res!53008 (= (getValueByKey!156 (toList!803 lt!54670) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807))) (Some!161 (_2!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807)))))))

(declare-fun b!106624 () Bool)

(assert (=> b!106624 (= e!69377 (contains!830 (toList!803 lt!54670) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807)))))

(assert (= (and d!29317 res!53007) b!106623))

(assert (= (and b!106623 res!53008) b!106624))

(declare-fun m!119437 () Bool)

(assert (=> d!29317 m!119437))

(declare-fun m!119439 () Bool)

(assert (=> d!29317 m!119439))

(declare-fun m!119441 () Bool)

(assert (=> d!29317 m!119441))

(declare-fun m!119443 () Bool)

(assert (=> d!29317 m!119443))

(declare-fun m!119445 () Bool)

(assert (=> b!106623 m!119445))

(declare-fun m!119447 () Bool)

(assert (=> b!106624 m!119447))

(assert (=> d!29009 d!29317))

(declare-fun d!29319 () Bool)

(assert (=> d!29319 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54041 lt!53807 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(assert (=> d!29319 true))

(declare-fun _$7!92 () Unit!3232)

(assert (=> d!29319 (= (choose!664 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!54041 (zeroValue!2457 newMap!16) lt!53807 (minValue!2457 newMap!16) (defaultEntry!2582 newMap!16)) _$7!92)))

(declare-fun bs!4377 () Bool)

(assert (= bs!4377 d!29319))

(assert (=> bs!4377 m!117707))

(assert (=> bs!4377 m!117707))

(assert (=> bs!4377 m!118529))

(assert (=> bs!4377 m!118525))

(assert (=> d!29009 d!29319))

(declare-fun bm!11277 () Bool)

(declare-fun call!11283 () Bool)

(declare-fun lt!54678 () ListLongMap!1575)

(assert (=> bm!11277 (= call!11283 (contains!828 lt!54678 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11278 () Bool)

(declare-fun call!11286 () ListLongMap!1575)

(declare-fun call!11281 () ListLongMap!1575)

(assert (=> bm!11278 (= call!11286 call!11281)))

(declare-fun b!106625 () Bool)

(declare-fun e!69379 () Unit!3232)

(declare-fun lt!54694 () Unit!3232)

(assert (=> b!106625 (= e!69379 lt!54694)))

(declare-fun lt!54676 () ListLongMap!1575)

(assert (=> b!106625 (= lt!54676 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54041 lt!53807 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54686 () (_ BitVec 64))

(assert (=> b!106625 (= lt!54686 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54674 () (_ BitVec 64))

(assert (=> b!106625 (= lt!54674 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54689 () Unit!3232)

(assert (=> b!106625 (= lt!54689 (addStillContains!74 lt!54676 lt!54686 lt!53807 lt!54674))))

(assert (=> b!106625 (contains!828 (+!144 lt!54676 (tuple2!2411 lt!54686 lt!53807)) lt!54674)))

(declare-fun lt!54688 () Unit!3232)

(assert (=> b!106625 (= lt!54688 lt!54689)))

(declare-fun lt!54691 () ListLongMap!1575)

(assert (=> b!106625 (= lt!54691 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54041 lt!53807 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54675 () (_ BitVec 64))

(assert (=> b!106625 (= lt!54675 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54673 () (_ BitVec 64))

(assert (=> b!106625 (= lt!54673 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54692 () Unit!3232)

(assert (=> b!106625 (= lt!54692 (addApplyDifferent!74 lt!54691 lt!54675 (minValue!2457 newMap!16) lt!54673))))

(assert (=> b!106625 (= (apply!98 (+!144 lt!54691 (tuple2!2411 lt!54675 (minValue!2457 newMap!16))) lt!54673) (apply!98 lt!54691 lt!54673))))

(declare-fun lt!54685 () Unit!3232)

(assert (=> b!106625 (= lt!54685 lt!54692)))

(declare-fun lt!54683 () ListLongMap!1575)

(assert (=> b!106625 (= lt!54683 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54041 lt!53807 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54687 () (_ BitVec 64))

(assert (=> b!106625 (= lt!54687 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54677 () (_ BitVec 64))

(assert (=> b!106625 (= lt!54677 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54684 () Unit!3232)

(assert (=> b!106625 (= lt!54684 (addApplyDifferent!74 lt!54683 lt!54687 lt!53807 lt!54677))))

(assert (=> b!106625 (= (apply!98 (+!144 lt!54683 (tuple2!2411 lt!54687 lt!53807)) lt!54677) (apply!98 lt!54683 lt!54677))))

(declare-fun lt!54693 () Unit!3232)

(assert (=> b!106625 (= lt!54693 lt!54684)))

(declare-fun lt!54679 () ListLongMap!1575)

(assert (=> b!106625 (= lt!54679 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54041 lt!53807 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54681 () (_ BitVec 64))

(assert (=> b!106625 (= lt!54681 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54690 () (_ BitVec 64))

(assert (=> b!106625 (= lt!54690 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106625 (= lt!54694 (addApplyDifferent!74 lt!54679 lt!54681 (minValue!2457 newMap!16) lt!54690))))

(assert (=> b!106625 (= (apply!98 (+!144 lt!54679 (tuple2!2411 lt!54681 (minValue!2457 newMap!16))) lt!54690) (apply!98 lt!54679 lt!54690))))

(declare-fun bm!11279 () Bool)

(declare-fun call!11280 () ListLongMap!1575)

(assert (=> bm!11279 (= call!11281 call!11280)))

(declare-fun bm!11280 () Bool)

(declare-fun call!11284 () Bool)

(assert (=> bm!11280 (= call!11284 (contains!828 lt!54678 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106626 () Bool)

(declare-fun res!53015 () Bool)

(declare-fun e!69378 () Bool)

(assert (=> b!106626 (=> (not res!53015) (not e!69378))))

(declare-fun e!69387 () Bool)

(assert (=> b!106626 (= res!53015 e!69387)))

(declare-fun res!53016 () Bool)

(assert (=> b!106626 (=> res!53016 e!69387)))

(declare-fun e!69384 () Bool)

(assert (=> b!106626 (= res!53016 (not e!69384))))

(declare-fun res!53013 () Bool)

(assert (=> b!106626 (=> (not res!53013) (not e!69384))))

(assert (=> b!106626 (= res!53013 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106627 () Bool)

(declare-fun e!69388 () ListLongMap!1575)

(declare-fun call!11285 () ListLongMap!1575)

(assert (=> b!106627 (= e!69388 (+!144 call!11285 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(declare-fun bm!11281 () Bool)

(declare-fun call!11282 () ListLongMap!1575)

(assert (=> bm!11281 (= call!11282 call!11285)))

(declare-fun b!106628 () Bool)

(declare-fun e!69389 () Bool)

(assert (=> b!106628 (= e!69378 e!69389)))

(declare-fun c!18649 () Bool)

(assert (=> b!106628 (= c!18649 (not (= (bvand lt!54041 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106629 () Bool)

(declare-fun e!69386 () Bool)

(assert (=> b!106629 (= e!69386 (= (apply!98 lt!54678 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!106630 () Bool)

(declare-fun Unit!3284 () Unit!3232)

(assert (=> b!106630 (= e!69379 Unit!3284)))

(declare-fun b!106631 () Bool)

(assert (=> b!106631 (= e!69389 (not call!11283))))

(declare-fun b!106632 () Bool)

(declare-fun e!69390 () Bool)

(declare-fun e!69383 () Bool)

(assert (=> b!106632 (= e!69390 e!69383)))

(declare-fun res!53011 () Bool)

(assert (=> b!106632 (= res!53011 call!11284)))

(assert (=> b!106632 (=> (not res!53011) (not e!69383))))

(declare-fun d!29321 () Bool)

(assert (=> d!29321 e!69378))

(declare-fun res!53014 () Bool)

(assert (=> d!29321 (=> (not res!53014) (not e!69378))))

(assert (=> d!29321 (= res!53014 (or (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))))

(declare-fun lt!54680 () ListLongMap!1575)

(assert (=> d!29321 (= lt!54678 lt!54680)))

(declare-fun lt!54682 () Unit!3232)

(assert (=> d!29321 (= lt!54682 e!69379)))

(declare-fun c!18646 () Bool)

(declare-fun e!69385 () Bool)

(assert (=> d!29321 (= c!18646 e!69385)))

(declare-fun res!53017 () Bool)

(assert (=> d!29321 (=> (not res!53017) (not e!69385))))

(assert (=> d!29321 (= res!53017 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29321 (= lt!54680 e!69388)))

(declare-fun c!18648 () Bool)

(assert (=> d!29321 (= c!18648 (and (not (= (bvand lt!54041 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!54041 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29321 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29321 (= (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54041 lt!53807 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54678)))

(declare-fun b!106633 () Bool)

(assert (=> b!106633 (= e!69384 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106634 () Bool)

(assert (=> b!106634 (= e!69390 (not call!11284))))

(declare-fun b!106635 () Bool)

(declare-fun e!69382 () ListLongMap!1575)

(assert (=> b!106635 (= e!69382 call!11282)))

(declare-fun b!106636 () Bool)

(declare-fun e!69381 () Bool)

(assert (=> b!106636 (= e!69381 (= (apply!98 lt!54678 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106636 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_values!2565 newMap!16))))))

(assert (=> b!106636 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106637 () Bool)

(assert (=> b!106637 (= e!69383 (= (apply!98 lt!54678 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53807))))

(declare-fun bm!11282 () Bool)

(assert (=> bm!11282 (= call!11280 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54041 lt!53807 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!106638 () Bool)

(assert (=> b!106638 (= e!69388 e!69382)))

(declare-fun c!18651 () Bool)

(assert (=> b!106638 (= c!18651 (and (not (= (bvand lt!54041 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!54041 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106639 () Bool)

(declare-fun res!53012 () Bool)

(assert (=> b!106639 (=> (not res!53012) (not e!69378))))

(assert (=> b!106639 (= res!53012 e!69390)))

(declare-fun c!18650 () Bool)

(assert (=> b!106639 (= c!18650 (not (= (bvand lt!54041 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106640 () Bool)

(declare-fun e!69380 () ListLongMap!1575)

(assert (=> b!106640 (= e!69380 call!11282)))

(declare-fun bm!11283 () Bool)

(assert (=> bm!11283 (= call!11285 (+!144 (ite c!18648 call!11280 (ite c!18651 call!11281 call!11286)) (ite (or c!18648 c!18651) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!106641 () Bool)

(declare-fun c!18647 () Bool)

(assert (=> b!106641 (= c!18647 (and (not (= (bvand lt!54041 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!54041 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106641 (= e!69382 e!69380)))

(declare-fun b!106642 () Bool)

(assert (=> b!106642 (= e!69389 e!69386)))

(declare-fun res!53009 () Bool)

(assert (=> b!106642 (= res!53009 call!11283)))

(assert (=> b!106642 (=> (not res!53009) (not e!69386))))

(declare-fun b!106643 () Bool)

(assert (=> b!106643 (= e!69380 call!11286)))

(declare-fun b!106644 () Bool)

(assert (=> b!106644 (= e!69385 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106645 () Bool)

(assert (=> b!106645 (= e!69387 e!69381)))

(declare-fun res!53010 () Bool)

(assert (=> b!106645 (=> (not res!53010) (not e!69381))))

(assert (=> b!106645 (= res!53010 (contains!828 lt!54678 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106645 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!29321 c!18648) b!106627))

(assert (= (and d!29321 (not c!18648)) b!106638))

(assert (= (and b!106638 c!18651) b!106635))

(assert (= (and b!106638 (not c!18651)) b!106641))

(assert (= (and b!106641 c!18647) b!106640))

(assert (= (and b!106641 (not c!18647)) b!106643))

(assert (= (or b!106640 b!106643) bm!11278))

(assert (= (or b!106635 bm!11278) bm!11279))

(assert (= (or b!106635 b!106640) bm!11281))

(assert (= (or b!106627 bm!11279) bm!11282))

(assert (= (or b!106627 bm!11281) bm!11283))

(assert (= (and d!29321 res!53017) b!106644))

(assert (= (and d!29321 c!18646) b!106625))

(assert (= (and d!29321 (not c!18646)) b!106630))

(assert (= (and d!29321 res!53014) b!106626))

(assert (= (and b!106626 res!53013) b!106633))

(assert (= (and b!106626 (not res!53016)) b!106645))

(assert (= (and b!106645 res!53010) b!106636))

(assert (= (and b!106626 res!53015) b!106639))

(assert (= (and b!106639 c!18650) b!106632))

(assert (= (and b!106639 (not c!18650)) b!106634))

(assert (= (and b!106632 res!53011) b!106637))

(assert (= (or b!106632 b!106634) bm!11280))

(assert (= (and b!106639 res!53012) b!106628))

(assert (= (and b!106628 c!18649) b!106642))

(assert (= (and b!106628 (not c!18649)) b!106631))

(assert (= (and b!106642 res!53009) b!106629))

(assert (= (or b!106642 b!106631) bm!11277))

(declare-fun b_lambda!4761 () Bool)

(assert (=> (not b_lambda!4761) (not b!106636)))

(assert (=> b!106636 t!5708))

(declare-fun b_and!6567 () Bool)

(assert (= b_and!6563 (and (=> t!5708 result!3463) b_and!6567)))

(assert (=> b!106636 t!5710))

(declare-fun b_and!6569 () Bool)

(assert (= b_and!6565 (and (=> t!5710 result!3465) b_and!6569)))

(assert (=> d!29321 m!117933))

(assert (=> b!106636 m!118103))

(declare-fun m!119449 () Bool)

(assert (=> b!106636 m!119449))

(assert (=> b!106636 m!118149))

(assert (=> b!106636 m!118151))

(assert (=> b!106636 m!118149))

(assert (=> b!106636 m!118153))

(assert (=> b!106636 m!118103))

(assert (=> b!106636 m!118151))

(declare-fun m!119451 () Bool)

(assert (=> b!106637 m!119451))

(declare-fun m!119453 () Bool)

(assert (=> bm!11280 m!119453))

(declare-fun m!119455 () Bool)

(assert (=> bm!11283 m!119455))

(declare-fun m!119457 () Bool)

(assert (=> b!106629 m!119457))

(assert (=> b!106633 m!118103))

(assert (=> b!106633 m!118103))

(assert (=> b!106633 m!118163))

(declare-fun m!119459 () Bool)

(assert (=> bm!11282 m!119459))

(assert (=> b!106645 m!118103))

(assert (=> b!106645 m!118103))

(declare-fun m!119461 () Bool)

(assert (=> b!106645 m!119461))

(assert (=> b!106644 m!118103))

(assert (=> b!106644 m!118103))

(assert (=> b!106644 m!118163))

(declare-fun m!119463 () Bool)

(assert (=> b!106627 m!119463))

(declare-fun m!119465 () Bool)

(assert (=> bm!11277 m!119465))

(declare-fun m!119467 () Bool)

(assert (=> b!106625 m!119467))

(declare-fun m!119469 () Bool)

(assert (=> b!106625 m!119469))

(declare-fun m!119471 () Bool)

(assert (=> b!106625 m!119471))

(declare-fun m!119473 () Bool)

(assert (=> b!106625 m!119473))

(declare-fun m!119475 () Bool)

(assert (=> b!106625 m!119475))

(declare-fun m!119477 () Bool)

(assert (=> b!106625 m!119477))

(declare-fun m!119479 () Bool)

(assert (=> b!106625 m!119479))

(declare-fun m!119481 () Bool)

(assert (=> b!106625 m!119481))

(assert (=> b!106625 m!119459))

(declare-fun m!119483 () Bool)

(assert (=> b!106625 m!119483))

(declare-fun m!119485 () Bool)

(assert (=> b!106625 m!119485))

(declare-fun m!119487 () Bool)

(assert (=> b!106625 m!119487))

(assert (=> b!106625 m!119469))

(assert (=> b!106625 m!118103))

(assert (=> b!106625 m!119485))

(declare-fun m!119489 () Bool)

(assert (=> b!106625 m!119489))

(assert (=> b!106625 m!119473))

(declare-fun m!119491 () Bool)

(assert (=> b!106625 m!119491))

(assert (=> b!106625 m!119479))

(declare-fun m!119493 () Bool)

(assert (=> b!106625 m!119493))

(declare-fun m!119495 () Bool)

(assert (=> b!106625 m!119495))

(assert (=> d!29009 d!29321))

(assert (=> d!29009 d!29153))

(declare-fun d!29323 () Bool)

(assert (=> d!29323 (= (get!1334 (getValueByKey!156 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2896 (getValueByKey!156 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28945 d!29323))

(declare-fun b!106648 () Bool)

(declare-fun e!69392 () Option!162)

(assert (=> b!106648 (= e!69392 (getValueByKey!156 (t!5700 (toList!803 lt!53878)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!106646 () Bool)

(declare-fun e!69391 () Option!162)

(assert (=> b!106646 (= e!69391 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53878)))))))

(declare-fun c!18652 () Bool)

(declare-fun d!29325 () Bool)

(assert (=> d!29325 (= c!18652 (and ((_ is Cons!1613) (toList!803 lt!53878)) (= (_1!1216 (h!2210 (toList!803 lt!53878))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29325 (= (getValueByKey!156 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69391)))

(declare-fun b!106649 () Bool)

(assert (=> b!106649 (= e!69392 None!160)))

(declare-fun b!106647 () Bool)

(assert (=> b!106647 (= e!69391 e!69392)))

(declare-fun c!18653 () Bool)

(assert (=> b!106647 (= c!18653 (and ((_ is Cons!1613) (toList!803 lt!53878)) (not (= (_1!1216 (h!2210 (toList!803 lt!53878))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!29325 c!18652) b!106646))

(assert (= (and d!29325 (not c!18652)) b!106647))

(assert (= (and b!106647 c!18653) b!106648))

(assert (= (and b!106647 (not c!18653)) b!106649))

(assert (=> b!106648 m!117601))

(declare-fun m!119497 () Bool)

(assert (=> b!106648 m!119497))

(assert (=> d!28945 d!29325))

(declare-fun d!29327 () Bool)

(declare-fun e!69394 () Bool)

(assert (=> d!29327 e!69394))

(declare-fun res!53018 () Bool)

(assert (=> d!29327 (=> res!53018 e!69394)))

(declare-fun lt!54697 () Bool)

(assert (=> d!29327 (= res!53018 (not lt!54697))))

(declare-fun lt!54695 () Bool)

(assert (=> d!29327 (= lt!54697 lt!54695)))

(declare-fun lt!54696 () Unit!3232)

(declare-fun e!69393 () Unit!3232)

(assert (=> d!29327 (= lt!54696 e!69393)))

(declare-fun c!18654 () Bool)

(assert (=> d!29327 (= c!18654 lt!54695)))

(assert (=> d!29327 (= lt!54695 (containsKey!160 (toList!803 lt!54188) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29327 (= (contains!828 lt!54188 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) lt!54697)))

(declare-fun b!106650 () Bool)

(declare-fun lt!54698 () Unit!3232)

(assert (=> b!106650 (= e!69393 lt!54698)))

(assert (=> b!106650 (= lt!54698 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54188) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106650 (isDefined!109 (getValueByKey!156 (toList!803 lt!54188) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106651 () Bool)

(declare-fun Unit!3285 () Unit!3232)

(assert (=> b!106651 (= e!69393 Unit!3285)))

(declare-fun b!106652 () Bool)

(assert (=> b!106652 (= e!69394 (isDefined!109 (getValueByKey!156 (toList!803 lt!54188) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29327 c!18654) b!106650))

(assert (= (and d!29327 (not c!18654)) b!106651))

(assert (= (and d!29327 (not res!53018)) b!106652))

(assert (=> d!29327 m!118103))

(declare-fun m!119499 () Bool)

(assert (=> d!29327 m!119499))

(assert (=> b!106650 m!118103))

(declare-fun m!119501 () Bool)

(assert (=> b!106650 m!119501))

(assert (=> b!106650 m!118103))

(declare-fun m!119503 () Bool)

(assert (=> b!106650 m!119503))

(assert (=> b!106650 m!119503))

(declare-fun m!119505 () Bool)

(assert (=> b!106650 m!119505))

(assert (=> b!106652 m!118103))

(assert (=> b!106652 m!119503))

(assert (=> b!106652 m!119503))

(assert (=> b!106652 m!119505))

(assert (=> b!105867 d!29327))

(declare-fun bm!11284 () Bool)

(declare-fun call!11287 () Bool)

(assert (=> bm!11284 (= call!11287 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun d!29329 () Bool)

(declare-fun res!53020 () Bool)

(declare-fun e!69395 () Bool)

(assert (=> d!29329 (=> res!53020 e!69395)))

(assert (=> d!29329 (= res!53020 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29329 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4288 newMap!16) (mask!6728 newMap!16)) e!69395)))

(declare-fun b!106653 () Bool)

(declare-fun e!69396 () Bool)

(assert (=> b!106653 (= e!69396 call!11287)))

(declare-fun b!106654 () Bool)

(assert (=> b!106654 (= e!69395 e!69396)))

(declare-fun c!18655 () Bool)

(assert (=> b!106654 (= c!18655 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!106655 () Bool)

(declare-fun e!69397 () Bool)

(assert (=> b!106655 (= e!69396 e!69397)))

(declare-fun lt!54699 () (_ BitVec 64))

(assert (=> b!106655 (= lt!54699 (select (arr!2063 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!54700 () Unit!3232)

(assert (=> b!106655 (= lt!54700 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4288 newMap!16) lt!54699 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!106655 (arrayContainsKey!0 (_keys!4288 newMap!16) lt!54699 #b00000000000000000000000000000000)))

(declare-fun lt!54701 () Unit!3232)

(assert (=> b!106655 (= lt!54701 lt!54700)))

(declare-fun res!53019 () Bool)

(assert (=> b!106655 (= res!53019 (= (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4288 newMap!16) (mask!6728 newMap!16)) (Found!259 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!106655 (=> (not res!53019) (not e!69397))))

(declare-fun b!106656 () Bool)

(assert (=> b!106656 (= e!69397 call!11287)))

(assert (= (and d!29329 (not res!53020)) b!106654))

(assert (= (and b!106654 c!18655) b!106655))

(assert (= (and b!106654 (not c!18655)) b!106653))

(assert (= (and b!106655 res!53019) b!106656))

(assert (= (or b!106656 b!106653) bm!11284))

(declare-fun m!119507 () Bool)

(assert (=> bm!11284 m!119507))

(declare-fun m!119509 () Bool)

(assert (=> b!106654 m!119509))

(assert (=> b!106654 m!119509))

(declare-fun m!119511 () Bool)

(assert (=> b!106654 m!119511))

(assert (=> b!106655 m!119509))

(declare-fun m!119513 () Bool)

(assert (=> b!106655 m!119513))

(declare-fun m!119515 () Bool)

(assert (=> b!106655 m!119515))

(assert (=> b!106655 m!119509))

(declare-fun m!119517 () Bool)

(assert (=> b!106655 m!119517))

(assert (=> bm!11214 d!29329))

(declare-fun d!29331 () Bool)

(declare-fun e!69398 () Bool)

(assert (=> d!29331 e!69398))

(declare-fun res!53021 () Bool)

(assert (=> d!29331 (=> (not res!53021) (not e!69398))))

(declare-fun lt!54703 () ListLongMap!1575)

(assert (=> d!29331 (= res!53021 (contains!828 lt!54703 (_1!1216 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16)))))))

(declare-fun lt!54705 () List!1617)

(assert (=> d!29331 (= lt!54703 (ListLongMap!1576 lt!54705))))

(declare-fun lt!54704 () Unit!3232)

(declare-fun lt!54702 () Unit!3232)

(assert (=> d!29331 (= lt!54704 lt!54702)))

(assert (=> d!29331 (= (getValueByKey!156 lt!54705 (_1!1216 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29331 (= lt!54702 (lemmaContainsTupThenGetReturnValue!72 lt!54705 (_1!1216 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29331 (= lt!54705 (insertStrictlySorted!75 (toList!803 lt!54408) (_1!1216 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29331 (= (+!144 lt!54408 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16))) lt!54703)))

(declare-fun b!106657 () Bool)

(declare-fun res!53022 () Bool)

(assert (=> b!106657 (=> (not res!53022) (not e!69398))))

(assert (=> b!106657 (= res!53022 (= (getValueByKey!156 (toList!803 lt!54703) (_1!1216 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16))))))))

(declare-fun b!106658 () Bool)

(assert (=> b!106658 (= e!69398 (contains!830 (toList!803 lt!54703) (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16))))))

(assert (= (and d!29331 res!53021) b!106657))

(assert (= (and b!106657 res!53022) b!106658))

(declare-fun m!119519 () Bool)

(assert (=> d!29331 m!119519))

(declare-fun m!119521 () Bool)

(assert (=> d!29331 m!119521))

(declare-fun m!119523 () Bool)

(assert (=> d!29331 m!119523))

(declare-fun m!119525 () Bool)

(assert (=> d!29331 m!119525))

(declare-fun m!119527 () Bool)

(assert (=> b!106657 m!119527))

(declare-fun m!119529 () Bool)

(assert (=> b!106658 m!119529))

(assert (=> b!106110 d!29331))

(declare-fun d!29333 () Bool)

(declare-fun e!69399 () Bool)

(assert (=> d!29333 e!69399))

(declare-fun res!53023 () Bool)

(assert (=> d!29333 (=> (not res!53023) (not e!69399))))

(declare-fun lt!54707 () ListLongMap!1575)

(assert (=> d!29333 (= res!53023 (contains!828 lt!54707 (_1!1216 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16)))))))

(declare-fun lt!54709 () List!1617)

(assert (=> d!29333 (= lt!54707 (ListLongMap!1576 lt!54709))))

(declare-fun lt!54708 () Unit!3232)

(declare-fun lt!54706 () Unit!3232)

(assert (=> d!29333 (= lt!54708 lt!54706)))

(assert (=> d!29333 (= (getValueByKey!156 lt!54709 (_1!1216 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29333 (= lt!54706 (lemmaContainsTupThenGetReturnValue!72 lt!54709 (_1!1216 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29333 (= lt!54709 (insertStrictlySorted!75 (toList!803 lt!54415) (_1!1216 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29333 (= (+!144 lt!54415 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16))) lt!54707)))

(declare-fun b!106659 () Bool)

(declare-fun res!53024 () Bool)

(assert (=> b!106659 (=> (not res!53024) (not e!69399))))

(assert (=> b!106659 (= res!53024 (= (getValueByKey!156 (toList!803 lt!54707) (_1!1216 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16))))))))

(declare-fun b!106660 () Bool)

(assert (=> b!106660 (= e!69399 (contains!830 (toList!803 lt!54707) (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16))))))

(assert (= (and d!29333 res!53023) b!106659))

(assert (= (and b!106659 res!53024) b!106660))

(declare-fun m!119531 () Bool)

(assert (=> d!29333 m!119531))

(declare-fun m!119533 () Bool)

(assert (=> d!29333 m!119533))

(declare-fun m!119535 () Bool)

(assert (=> d!29333 m!119535))

(declare-fun m!119537 () Bool)

(assert (=> d!29333 m!119537))

(declare-fun m!119539 () Bool)

(assert (=> b!106659 m!119539))

(declare-fun m!119541 () Bool)

(assert (=> b!106660 m!119541))

(assert (=> b!106110 d!29333))

(declare-fun d!29335 () Bool)

(assert (=> d!29335 (= (apply!98 (+!144 lt!54423 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) lt!54405) (apply!98 lt!54423 lt!54405))))

(declare-fun lt!54710 () Unit!3232)

(assert (=> d!29335 (= lt!54710 (choose!654 lt!54423 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) lt!54405))))

(declare-fun e!69400 () Bool)

(assert (=> d!29335 e!69400))

(declare-fun res!53025 () Bool)

(assert (=> d!29335 (=> (not res!53025) (not e!69400))))

(assert (=> d!29335 (= res!53025 (contains!828 lt!54423 lt!54405))))

(assert (=> d!29335 (= (addApplyDifferent!74 lt!54423 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) lt!54405) lt!54710)))

(declare-fun b!106661 () Bool)

(assert (=> b!106661 (= e!69400 (not (= lt!54405 lt!54407)))))

(assert (= (and d!29335 res!53025) b!106661))

(declare-fun m!119543 () Bool)

(assert (=> d!29335 m!119543))

(assert (=> d!29335 m!118629))

(assert (=> d!29335 m!118633))

(assert (=> d!29335 m!118629))

(declare-fun m!119545 () Bool)

(assert (=> d!29335 m!119545))

(assert (=> d!29335 m!118639))

(assert (=> b!106110 d!29335))

(declare-fun d!29337 () Bool)

(assert (=> d!29337 (= (apply!98 lt!54415 lt!54409) (get!1334 (getValueByKey!156 (toList!803 lt!54415) lt!54409)))))

(declare-fun bs!4378 () Bool)

(assert (= bs!4378 d!29337))

(declare-fun m!119547 () Bool)

(assert (=> bs!4378 m!119547))

(assert (=> bs!4378 m!119547))

(declare-fun m!119549 () Bool)

(assert (=> bs!4378 m!119549))

(assert (=> b!106110 d!29337))

(declare-fun d!29339 () Bool)

(assert (=> d!29339 (= (apply!98 (+!144 lt!54415 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16))) lt!54409) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!54415 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16)))) lt!54409)))))

(declare-fun bs!4379 () Bool)

(assert (= bs!4379 d!29339))

(declare-fun m!119551 () Bool)

(assert (=> bs!4379 m!119551))

(assert (=> bs!4379 m!119551))

(declare-fun m!119553 () Bool)

(assert (=> bs!4379 m!119553))

(assert (=> b!106110 d!29339))

(declare-fun d!29341 () Bool)

(declare-fun e!69401 () Bool)

(assert (=> d!29341 e!69401))

(declare-fun res!53026 () Bool)

(assert (=> d!29341 (=> (not res!53026) (not e!69401))))

(declare-fun lt!54712 () ListLongMap!1575)

(assert (=> d!29341 (= res!53026 (contains!828 lt!54712 (_1!1216 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(declare-fun lt!54714 () List!1617)

(assert (=> d!29341 (= lt!54712 (ListLongMap!1576 lt!54714))))

(declare-fun lt!54713 () Unit!3232)

(declare-fun lt!54711 () Unit!3232)

(assert (=> d!29341 (= lt!54713 lt!54711)))

(assert (=> d!29341 (= (getValueByKey!156 lt!54714 (_1!1216 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) (Some!161 (_2!1216 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(assert (=> d!29341 (= lt!54711 (lemmaContainsTupThenGetReturnValue!72 lt!54714 (_1!1216 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) (_2!1216 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(assert (=> d!29341 (= lt!54714 (insertStrictlySorted!75 (toList!803 lt!54411) (_1!1216 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) (_2!1216 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(assert (=> d!29341 (= (+!144 lt!54411 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) lt!54712)))

(declare-fun b!106662 () Bool)

(declare-fun res!53027 () Bool)

(assert (=> b!106662 (=> (not res!53027) (not e!69401))))

(assert (=> b!106662 (= res!53027 (= (getValueByKey!156 (toList!803 lt!54712) (_1!1216 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) (Some!161 (_2!1216 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))))

(declare-fun b!106663 () Bool)

(assert (=> b!106663 (= e!69401 (contains!830 (toList!803 lt!54712) (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))

(assert (= (and d!29341 res!53026) b!106662))

(assert (= (and b!106662 res!53027) b!106663))

(declare-fun m!119555 () Bool)

(assert (=> d!29341 m!119555))

(declare-fun m!119557 () Bool)

(assert (=> d!29341 m!119557))

(declare-fun m!119559 () Bool)

(assert (=> d!29341 m!119559))

(declare-fun m!119561 () Bool)

(assert (=> d!29341 m!119561))

(declare-fun m!119563 () Bool)

(assert (=> b!106662 m!119563))

(declare-fun m!119565 () Bool)

(assert (=> b!106663 m!119565))

(assert (=> b!106110 d!29341))

(declare-fun d!29343 () Bool)

(assert (=> d!29343 (contains!828 (+!144 lt!54408 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16))) lt!54406)))

(declare-fun lt!54715 () Unit!3232)

(assert (=> d!29343 (= lt!54715 (choose!655 lt!54408 lt!54418 (zeroValue!2457 newMap!16) lt!54406))))

(assert (=> d!29343 (contains!828 lt!54408 lt!54406)))

(assert (=> d!29343 (= (addStillContains!74 lt!54408 lt!54418 (zeroValue!2457 newMap!16) lt!54406) lt!54715)))

(declare-fun bs!4380 () Bool)

(assert (= bs!4380 d!29343))

(assert (=> bs!4380 m!118617))

(assert (=> bs!4380 m!118617))

(assert (=> bs!4380 m!118635))

(declare-fun m!119567 () Bool)

(assert (=> bs!4380 m!119567))

(declare-fun m!119569 () Bool)

(assert (=> bs!4380 m!119569))

(assert (=> b!106110 d!29343))

(declare-fun d!29345 () Bool)

(assert (=> d!29345 (= (apply!98 (+!144 lt!54423 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) lt!54405) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!54423 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) lt!54405)))))

(declare-fun bs!4381 () Bool)

(assert (= bs!4381 d!29345))

(declare-fun m!119571 () Bool)

(assert (=> bs!4381 m!119571))

(assert (=> bs!4381 m!119571))

(declare-fun m!119573 () Bool)

(assert (=> bs!4381 m!119573))

(assert (=> b!106110 d!29345))

(declare-fun d!29347 () Bool)

(declare-fun e!69402 () Bool)

(assert (=> d!29347 e!69402))

(declare-fun res!53028 () Bool)

(assert (=> d!29347 (=> (not res!53028) (not e!69402))))

(declare-fun lt!54717 () ListLongMap!1575)

(assert (=> d!29347 (= res!53028 (contains!828 lt!54717 (_1!1216 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(declare-fun lt!54719 () List!1617)

(assert (=> d!29347 (= lt!54717 (ListLongMap!1576 lt!54719))))

(declare-fun lt!54718 () Unit!3232)

(declare-fun lt!54716 () Unit!3232)

(assert (=> d!29347 (= lt!54718 lt!54716)))

(assert (=> d!29347 (= (getValueByKey!156 lt!54719 (_1!1216 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) (Some!161 (_2!1216 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(assert (=> d!29347 (= lt!54716 (lemmaContainsTupThenGetReturnValue!72 lt!54719 (_1!1216 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) (_2!1216 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(assert (=> d!29347 (= lt!54719 (insertStrictlySorted!75 (toList!803 lt!54423) (_1!1216 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) (_2!1216 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(assert (=> d!29347 (= (+!144 lt!54423 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) lt!54717)))

(declare-fun b!106664 () Bool)

(declare-fun res!53029 () Bool)

(assert (=> b!106664 (=> (not res!53029) (not e!69402))))

(assert (=> b!106664 (= res!53029 (= (getValueByKey!156 (toList!803 lt!54717) (_1!1216 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) (Some!161 (_2!1216 (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))))

(declare-fun b!106665 () Bool)

(assert (=> b!106665 (= e!69402 (contains!830 (toList!803 lt!54717) (tuple2!2411 lt!54407 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))

(assert (= (and d!29347 res!53028) b!106664))

(assert (= (and b!106664 res!53029) b!106665))

(declare-fun m!119575 () Bool)

(assert (=> d!29347 m!119575))

(declare-fun m!119577 () Bool)

(assert (=> d!29347 m!119577))

(declare-fun m!119579 () Bool)

(assert (=> d!29347 m!119579))

(declare-fun m!119581 () Bool)

(assert (=> d!29347 m!119581))

(declare-fun m!119583 () Bool)

(assert (=> b!106664 m!119583))

(declare-fun m!119585 () Bool)

(assert (=> b!106665 m!119585))

(assert (=> b!106110 d!29347))

(declare-fun d!29349 () Bool)

(assert (=> d!29349 (= (apply!98 (+!144 lt!54411 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) lt!54422) (apply!98 lt!54411 lt!54422))))

(declare-fun lt!54720 () Unit!3232)

(assert (=> d!29349 (= lt!54720 (choose!654 lt!54411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) lt!54422))))

(declare-fun e!69403 () Bool)

(assert (=> d!29349 e!69403))

(declare-fun res!53030 () Bool)

(assert (=> d!29349 (=> (not res!53030) (not e!69403))))

(assert (=> d!29349 (= res!53030 (contains!828 lt!54411 lt!54422))))

(assert (=> d!29349 (= (addApplyDifferent!74 lt!54411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) lt!54422) lt!54720)))

(declare-fun b!106666 () Bool)

(assert (=> b!106666 (= e!69403 (not (= lt!54422 lt!54413)))))

(assert (= (and d!29349 res!53030) b!106666))

(declare-fun m!119587 () Bool)

(assert (=> d!29349 m!119587))

(assert (=> d!29349 m!118623))

(assert (=> d!29349 m!118637))

(assert (=> d!29349 m!118623))

(declare-fun m!119589 () Bool)

(assert (=> d!29349 m!119589))

(assert (=> d!29349 m!118621))

(assert (=> b!106110 d!29349))

(declare-fun d!29351 () Bool)

(declare-fun e!69405 () Bool)

(assert (=> d!29351 e!69405))

(declare-fun res!53031 () Bool)

(assert (=> d!29351 (=> res!53031 e!69405)))

(declare-fun lt!54723 () Bool)

(assert (=> d!29351 (= res!53031 (not lt!54723))))

(declare-fun lt!54721 () Bool)

(assert (=> d!29351 (= lt!54723 lt!54721)))

(declare-fun lt!54722 () Unit!3232)

(declare-fun e!69404 () Unit!3232)

(assert (=> d!29351 (= lt!54722 e!69404)))

(declare-fun c!18656 () Bool)

(assert (=> d!29351 (= c!18656 lt!54721)))

(assert (=> d!29351 (= lt!54721 (containsKey!160 (toList!803 (+!144 lt!54408 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16)))) lt!54406))))

(assert (=> d!29351 (= (contains!828 (+!144 lt!54408 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16))) lt!54406) lt!54723)))

(declare-fun b!106667 () Bool)

(declare-fun lt!54724 () Unit!3232)

(assert (=> b!106667 (= e!69404 lt!54724)))

(assert (=> b!106667 (= lt!54724 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (+!144 lt!54408 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16)))) lt!54406))))

(assert (=> b!106667 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!54408 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16)))) lt!54406))))

(declare-fun b!106668 () Bool)

(declare-fun Unit!3286 () Unit!3232)

(assert (=> b!106668 (= e!69404 Unit!3286)))

(declare-fun b!106669 () Bool)

(assert (=> b!106669 (= e!69405 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!54408 (tuple2!2411 lt!54418 (zeroValue!2457 newMap!16)))) lt!54406)))))

(assert (= (and d!29351 c!18656) b!106667))

(assert (= (and d!29351 (not c!18656)) b!106668))

(assert (= (and d!29351 (not res!53031)) b!106669))

(declare-fun m!119591 () Bool)

(assert (=> d!29351 m!119591))

(declare-fun m!119593 () Bool)

(assert (=> b!106667 m!119593))

(declare-fun m!119595 () Bool)

(assert (=> b!106667 m!119595))

(assert (=> b!106667 m!119595))

(declare-fun m!119597 () Bool)

(assert (=> b!106667 m!119597))

(assert (=> b!106669 m!119595))

(assert (=> b!106669 m!119595))

(assert (=> b!106669 m!119597))

(assert (=> b!106110 d!29351))

(declare-fun d!29353 () Bool)

(assert (=> d!29353 (= (apply!98 lt!54411 lt!54422) (get!1334 (getValueByKey!156 (toList!803 lt!54411) lt!54422)))))

(declare-fun bs!4382 () Bool)

(assert (= bs!4382 d!29353))

(declare-fun m!119599 () Bool)

(assert (=> bs!4382 m!119599))

(assert (=> bs!4382 m!119599))

(declare-fun m!119601 () Bool)

(assert (=> bs!4382 m!119601))

(assert (=> b!106110 d!29353))

(declare-fun b!106670 () Bool)

(declare-fun e!69411 () Bool)

(declare-fun e!69409 () Bool)

(assert (=> b!106670 (= e!69411 e!69409)))

(assert (=> b!106670 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun res!53033 () Bool)

(declare-fun lt!54728 () ListLongMap!1575)

(assert (=> b!106670 (= res!53033 (contains!828 lt!54728 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106670 (=> (not res!53033) (not e!69409))))

(declare-fun b!106671 () Bool)

(declare-fun e!69410 () ListLongMap!1575)

(declare-fun call!11288 () ListLongMap!1575)

(assert (=> b!106671 (= e!69410 call!11288)))

(declare-fun d!29355 () Bool)

(declare-fun e!69407 () Bool)

(assert (=> d!29355 e!69407))

(declare-fun res!53032 () Bool)

(assert (=> d!29355 (=> (not res!53032) (not e!69407))))

(assert (=> d!29355 (= res!53032 (not (contains!828 lt!54728 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!69408 () ListLongMap!1575)

(assert (=> d!29355 (= lt!54728 e!69408)))

(declare-fun c!18660 () Bool)

(assert (=> d!29355 (= c!18660 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29355 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29355 (= (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058) (mask!6728 newMap!16) (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54728)))

(declare-fun b!106672 () Bool)

(assert (=> b!106672 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> b!106672 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058))))))

(assert (=> b!106672 (= e!69409 (= (apply!98 lt!54728 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!69406 () Bool)

(declare-fun b!106673 () Bool)

(assert (=> b!106673 (= e!69406 (= lt!54728 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058) (mask!6728 newMap!16) (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16))))))

(declare-fun b!106674 () Bool)

(assert (=> b!106674 (= e!69408 e!69410)))

(declare-fun c!18658 () Bool)

(assert (=> b!106674 (= c!18658 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11285 () Bool)

(assert (=> bm!11285 (= call!11288 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058) (mask!6728 newMap!16) (ite c!18369 (ite c!18363 (extraKeys!2387 newMap!16) lt!54051) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16)))))

(declare-fun b!106675 () Bool)

(assert (=> b!106675 (= e!69408 (ListLongMap!1576 Nil!1614))))

(declare-fun b!106676 () Bool)

(assert (=> b!106676 (= e!69411 e!69406)))

(declare-fun c!18657 () Bool)

(assert (=> b!106676 (= c!18657 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106677 () Bool)

(declare-fun lt!54727 () Unit!3232)

(declare-fun lt!54726 () Unit!3232)

(assert (=> b!106677 (= lt!54727 lt!54726)))

(declare-fun lt!54730 () (_ BitVec 64))

(declare-fun lt!54729 () (_ BitVec 64))

(declare-fun lt!54725 () V!3219)

(declare-fun lt!54731 () ListLongMap!1575)

(assert (=> b!106677 (not (contains!828 (+!144 lt!54731 (tuple2!2411 lt!54729 lt!54725)) lt!54730))))

(assert (=> b!106677 (= lt!54726 (addStillNotContains!46 lt!54731 lt!54729 lt!54725 lt!54730))))

(assert (=> b!106677 (= lt!54730 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106677 (= lt!54725 (get!1330 (select (arr!2064 (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106677 (= lt!54729 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106677 (= lt!54731 call!11288)))

(assert (=> b!106677 (= e!69410 (+!144 call!11288 (tuple2!2411 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (get!1330 (select (arr!2064 (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106678 () Bool)

(declare-fun res!53034 () Bool)

(assert (=> b!106678 (=> (not res!53034) (not e!69407))))

(assert (=> b!106678 (= res!53034 (not (contains!828 lt!54728 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106679 () Bool)

(assert (=> b!106679 (= e!69406 (isEmpty!370 lt!54728))))

(declare-fun b!106680 () Bool)

(declare-fun e!69412 () Bool)

(assert (=> b!106680 (= e!69412 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106680 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!106681 () Bool)

(assert (=> b!106681 (= e!69407 e!69411)))

(declare-fun c!18659 () Bool)

(assert (=> b!106681 (= c!18659 e!69412)))

(declare-fun res!53035 () Bool)

(assert (=> b!106681 (=> (not res!53035) (not e!69412))))

(assert (=> b!106681 (= res!53035 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!29355 c!18660) b!106675))

(assert (= (and d!29355 (not c!18660)) b!106674))

(assert (= (and b!106674 c!18658) b!106677))

(assert (= (and b!106674 (not c!18658)) b!106671))

(assert (= (or b!106677 b!106671) bm!11285))

(assert (= (and d!29355 res!53032) b!106678))

(assert (= (and b!106678 res!53034) b!106681))

(assert (= (and b!106681 res!53035) b!106680))

(assert (= (and b!106681 c!18659) b!106670))

(assert (= (and b!106681 (not c!18659)) b!106676))

(assert (= (and b!106670 res!53033) b!106672))

(assert (= (and b!106676 c!18657) b!106673))

(assert (= (and b!106676 (not c!18657)) b!106679))

(declare-fun b_lambda!4763 () Bool)

(assert (=> (not b_lambda!4763) (not b!106672)))

(assert (=> b!106672 t!5708))

(declare-fun b_and!6571 () Bool)

(assert (= b_and!6567 (and (=> t!5708 result!3463) b_and!6571)))

(assert (=> b!106672 t!5710))

(declare-fun b_and!6573 () Bool)

(assert (= b_and!6569 (and (=> t!5710 result!3465) b_and!6573)))

(declare-fun b_lambda!4765 () Bool)

(assert (=> (not b_lambda!4765) (not b!106677)))

(assert (=> b!106677 t!5708))

(declare-fun b_and!6575 () Bool)

(assert (= b_and!6571 (and (=> t!5708 result!3463) b_and!6575)))

(assert (=> b!106677 t!5710))

(declare-fun b_and!6577 () Bool)

(assert (= b_and!6573 (and (=> t!5710 result!3465) b_and!6577)))

(declare-fun m!119603 () Bool)

(assert (=> bm!11285 m!119603))

(assert (=> b!106672 m!118103))

(declare-fun m!119605 () Bool)

(assert (=> b!106672 m!119605))

(assert (=> b!106672 m!118591))

(assert (=> b!106672 m!118591))

(assert (=> b!106672 m!118149))

(assert (=> b!106672 m!118593))

(assert (=> b!106672 m!118149))

(assert (=> b!106672 m!118103))

(assert (=> b!106670 m!118103))

(assert (=> b!106670 m!118103))

(declare-fun m!119607 () Bool)

(assert (=> b!106670 m!119607))

(declare-fun m!119609 () Bool)

(assert (=> b!106679 m!119609))

(assert (=> b!106674 m!118103))

(assert (=> b!106674 m!118103))

(assert (=> b!106674 m!118163))

(declare-fun m!119611 () Bool)

(assert (=> d!29355 m!119611))

(assert (=> d!29355 m!117933))

(assert (=> b!106673 m!119603))

(assert (=> b!106680 m!118103))

(assert (=> b!106680 m!118103))

(assert (=> b!106680 m!118163))

(declare-fun m!119613 () Bool)

(assert (=> b!106678 m!119613))

(declare-fun m!119615 () Bool)

(assert (=> b!106677 m!119615))

(assert (=> b!106677 m!119615))

(declare-fun m!119617 () Bool)

(assert (=> b!106677 m!119617))

(assert (=> b!106677 m!118591))

(assert (=> b!106677 m!118591))

(assert (=> b!106677 m!118149))

(assert (=> b!106677 m!118593))

(assert (=> b!106677 m!118149))

(assert (=> b!106677 m!118103))

(declare-fun m!119619 () Bool)

(assert (=> b!106677 m!119619))

(declare-fun m!119621 () Bool)

(assert (=> b!106677 m!119621))

(assert (=> b!106110 d!29355))

(declare-fun d!29357 () Bool)

(assert (=> d!29357 (= (apply!98 (+!144 lt!54411 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) lt!54422) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!54411 (tuple2!2411 lt!54413 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) lt!54422)))))

(declare-fun bs!4383 () Bool)

(assert (= bs!4383 d!29357))

(declare-fun m!119623 () Bool)

(assert (=> bs!4383 m!119623))

(assert (=> bs!4383 m!119623))

(declare-fun m!119625 () Bool)

(assert (=> bs!4383 m!119625))

(assert (=> b!106110 d!29357))

(declare-fun d!29359 () Bool)

(assert (=> d!29359 (= (apply!98 lt!54423 lt!54405) (get!1334 (getValueByKey!156 (toList!803 lt!54423) lt!54405)))))

(declare-fun bs!4384 () Bool)

(assert (= bs!4384 d!29359))

(declare-fun m!119627 () Bool)

(assert (=> bs!4384 m!119627))

(assert (=> bs!4384 m!119627))

(declare-fun m!119629 () Bool)

(assert (=> bs!4384 m!119629))

(assert (=> b!106110 d!29359))

(declare-fun d!29361 () Bool)

(assert (=> d!29361 (= (apply!98 (+!144 lt!54415 (tuple2!2411 lt!54419 (zeroValue!2457 newMap!16))) lt!54409) (apply!98 lt!54415 lt!54409))))

(declare-fun lt!54732 () Unit!3232)

(assert (=> d!29361 (= lt!54732 (choose!654 lt!54415 lt!54419 (zeroValue!2457 newMap!16) lt!54409))))

(declare-fun e!69413 () Bool)

(assert (=> d!29361 e!69413))

(declare-fun res!53036 () Bool)

(assert (=> d!29361 (=> (not res!53036) (not e!69413))))

(assert (=> d!29361 (= res!53036 (contains!828 lt!54415 lt!54409))))

(assert (=> d!29361 (= (addApplyDifferent!74 lt!54415 lt!54419 (zeroValue!2457 newMap!16) lt!54409) lt!54732)))

(declare-fun b!106682 () Bool)

(assert (=> b!106682 (= e!69413 (not (= lt!54409 lt!54419)))))

(assert (= (and d!29361 res!53036) b!106682))

(declare-fun m!119631 () Bool)

(assert (=> d!29361 m!119631))

(assert (=> d!29361 m!118613))

(assert (=> d!29361 m!118615))

(assert (=> d!29361 m!118613))

(declare-fun m!119633 () Bool)

(assert (=> d!29361 m!119633))

(assert (=> d!29361 m!118627))

(assert (=> b!106110 d!29361))

(assert (=> d!28843 d!28845))

(assert (=> d!28843 d!28837))

(assert (=> d!28843 d!28839))

(declare-fun d!29363 () Bool)

(declare-fun e!69415 () Bool)

(assert (=> d!29363 e!69415))

(declare-fun res!53037 () Bool)

(assert (=> d!29363 (=> res!53037 e!69415)))

(declare-fun lt!54735 () Bool)

(assert (=> d!29363 (= res!53037 (not lt!54735))))

(declare-fun lt!54733 () Bool)

(assert (=> d!29363 (= lt!54735 lt!54733)))

(declare-fun lt!54734 () Unit!3232)

(declare-fun e!69414 () Unit!3232)

(assert (=> d!29363 (= lt!54734 e!69414)))

(declare-fun c!18661 () Bool)

(assert (=> d!29363 (= c!18661 lt!54733)))

(assert (=> d!29363 (= lt!54733 (containsKey!160 (toList!803 lt!53963) lt!53957))))

(assert (=> d!29363 (= (contains!828 lt!53963 lt!53957) lt!54735)))

(declare-fun b!106683 () Bool)

(declare-fun lt!54736 () Unit!3232)

(assert (=> b!106683 (= e!69414 lt!54736)))

(assert (=> b!106683 (= lt!54736 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53963) lt!53957))))

(assert (=> b!106683 (isDefined!109 (getValueByKey!156 (toList!803 lt!53963) lt!53957))))

(declare-fun b!106684 () Bool)

(declare-fun Unit!3287 () Unit!3232)

(assert (=> b!106684 (= e!69414 Unit!3287)))

(declare-fun b!106685 () Bool)

(assert (=> b!106685 (= e!69415 (isDefined!109 (getValueByKey!156 (toList!803 lt!53963) lt!53957)))))

(assert (= (and d!29363 c!18661) b!106683))

(assert (= (and d!29363 (not c!18661)) b!106684))

(assert (= (and d!29363 (not res!53037)) b!106685))

(declare-fun m!119635 () Bool)

(assert (=> d!29363 m!119635))

(declare-fun m!119637 () Bool)

(assert (=> b!106683 m!119637))

(assert (=> b!106683 m!117885))

(assert (=> b!106683 m!117885))

(declare-fun m!119639 () Bool)

(assert (=> b!106683 m!119639))

(assert (=> b!106685 m!117885))

(assert (=> b!106685 m!117885))

(assert (=> b!106685 m!119639))

(assert (=> d!28843 d!29363))

(declare-fun d!29365 () Bool)

(assert (=> d!29365 (= (apply!98 (+!144 lt!53963 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53957) (apply!98 lt!53963 lt!53957))))

(assert (=> d!29365 true))

(declare-fun _$34!888 () Unit!3232)

(assert (=> d!29365 (= (choose!654 lt!53963 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53957) _$34!888)))

(declare-fun bs!4385 () Bool)

(assert (= bs!4385 d!29365))

(assert (=> bs!4385 m!117727))

(assert (=> bs!4385 m!117727))

(assert (=> bs!4385 m!117729))

(assert (=> bs!4385 m!117741))

(assert (=> d!28843 d!29365))

(declare-fun d!29367 () Bool)

(assert (=> d!29367 (= (apply!98 (+!144 lt!54378 (tuple2!2411 lt!54362 (minValue!2457 newMap!16))) lt!54360) (apply!98 lt!54378 lt!54360))))

(declare-fun lt!54737 () Unit!3232)

(assert (=> d!29367 (= lt!54737 (choose!654 lt!54378 lt!54362 (minValue!2457 newMap!16) lt!54360))))

(declare-fun e!69416 () Bool)

(assert (=> d!29367 e!69416))

(declare-fun res!53038 () Bool)

(assert (=> d!29367 (=> (not res!53038) (not e!69416))))

(assert (=> d!29367 (= res!53038 (contains!828 lt!54378 lt!54360))))

(assert (=> d!29367 (= (addApplyDifferent!74 lt!54378 lt!54362 (minValue!2457 newMap!16) lt!54360) lt!54737)))

(declare-fun b!106686 () Bool)

(assert (=> b!106686 (= e!69416 (not (= lt!54360 lt!54362)))))

(assert (= (and d!29367 res!53038) b!106686))

(declare-fun m!119641 () Bool)

(assert (=> d!29367 m!119641))

(assert (=> d!29367 m!118509))

(assert (=> d!29367 m!118513))

(assert (=> d!29367 m!118509))

(declare-fun m!119643 () Bool)

(assert (=> d!29367 m!119643))

(assert (=> d!29367 m!118519))

(assert (=> b!106029 d!29367))

(declare-fun d!29369 () Bool)

(assert (=> d!29369 (= (apply!98 lt!54370 lt!54364) (get!1334 (getValueByKey!156 (toList!803 lt!54370) lt!54364)))))

(declare-fun bs!4386 () Bool)

(assert (= bs!4386 d!29369))

(declare-fun m!119645 () Bool)

(assert (=> bs!4386 m!119645))

(assert (=> bs!4386 m!119645))

(declare-fun m!119647 () Bool)

(assert (=> bs!4386 m!119647))

(assert (=> b!106029 d!29369))

(declare-fun d!29371 () Bool)

(assert (=> d!29371 (= (apply!98 (+!144 lt!54366 (tuple2!2411 lt!54368 (minValue!2457 newMap!16))) lt!54377) (apply!98 lt!54366 lt!54377))))

(declare-fun lt!54738 () Unit!3232)

(assert (=> d!29371 (= lt!54738 (choose!654 lt!54366 lt!54368 (minValue!2457 newMap!16) lt!54377))))

(declare-fun e!69417 () Bool)

(assert (=> d!29371 e!69417))

(declare-fun res!53039 () Bool)

(assert (=> d!29371 (=> (not res!53039) (not e!69417))))

(assert (=> d!29371 (= res!53039 (contains!828 lt!54366 lt!54377))))

(assert (=> d!29371 (= (addApplyDifferent!74 lt!54366 lt!54368 (minValue!2457 newMap!16) lt!54377) lt!54738)))

(declare-fun b!106687 () Bool)

(assert (=> b!106687 (= e!69417 (not (= lt!54377 lt!54368)))))

(assert (= (and d!29371 res!53039) b!106687))

(declare-fun m!119649 () Bool)

(assert (=> d!29371 m!119649))

(assert (=> d!29371 m!118503))

(assert (=> d!29371 m!118517))

(assert (=> d!29371 m!118503))

(declare-fun m!119651 () Bool)

(assert (=> d!29371 m!119651))

(assert (=> d!29371 m!118501))

(assert (=> b!106029 d!29371))

(declare-fun d!29373 () Bool)

(declare-fun e!69418 () Bool)

(assert (=> d!29373 e!69418))

(declare-fun res!53040 () Bool)

(assert (=> d!29373 (=> (not res!53040) (not e!69418))))

(declare-fun lt!54740 () ListLongMap!1575)

(assert (=> d!29373 (= res!53040 (contains!828 lt!54740 (_1!1216 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))))))

(declare-fun lt!54742 () List!1617)

(assert (=> d!29373 (= lt!54740 (ListLongMap!1576 lt!54742))))

(declare-fun lt!54741 () Unit!3232)

(declare-fun lt!54739 () Unit!3232)

(assert (=> d!29373 (= lt!54741 lt!54739)))

(assert (=> d!29373 (= (getValueByKey!156 lt!54742 (_1!1216 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))) (Some!161 (_2!1216 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29373 (= lt!54739 (lemmaContainsTupThenGetReturnValue!72 lt!54742 (_1!1216 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) (_2!1216 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29373 (= lt!54742 (insertStrictlySorted!75 (toList!803 lt!54370) (_1!1216 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) (_2!1216 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29373 (= (+!144 lt!54370 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) lt!54740)))

(declare-fun b!106688 () Bool)

(declare-fun res!53041 () Bool)

(assert (=> b!106688 (=> (not res!53041) (not e!69418))))

(assert (=> b!106688 (= res!53041 (= (getValueByKey!156 (toList!803 lt!54740) (_1!1216 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))) (Some!161 (_2!1216 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))))))))

(declare-fun b!106689 () Bool)

(assert (=> b!106689 (= e!69418 (contains!830 (toList!803 lt!54740) (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))))))

(assert (= (and d!29373 res!53040) b!106688))

(assert (= (and b!106688 res!53041) b!106689))

(declare-fun m!119653 () Bool)

(assert (=> d!29373 m!119653))

(declare-fun m!119655 () Bool)

(assert (=> d!29373 m!119655))

(declare-fun m!119657 () Bool)

(assert (=> d!29373 m!119657))

(declare-fun m!119659 () Bool)

(assert (=> d!29373 m!119659))

(declare-fun m!119661 () Bool)

(assert (=> b!106688 m!119661))

(declare-fun m!119663 () Bool)

(assert (=> b!106689 m!119663))

(assert (=> b!106029 d!29373))

(declare-fun d!29375 () Bool)

(declare-fun e!69419 () Bool)

(assert (=> d!29375 e!69419))

(declare-fun res!53042 () Bool)

(assert (=> d!29375 (=> (not res!53042) (not e!69419))))

(declare-fun lt!54744 () ListLongMap!1575)

(assert (=> d!29375 (= res!53042 (contains!828 lt!54744 (_1!1216 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))))))

(declare-fun lt!54746 () List!1617)

(assert (=> d!29375 (= lt!54744 (ListLongMap!1576 lt!54746))))

(declare-fun lt!54745 () Unit!3232)

(declare-fun lt!54743 () Unit!3232)

(assert (=> d!29375 (= lt!54745 lt!54743)))

(assert (=> d!29375 (= (getValueByKey!156 lt!54746 (_1!1216 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))) (Some!161 (_2!1216 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29375 (= lt!54743 (lemmaContainsTupThenGetReturnValue!72 lt!54746 (_1!1216 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) (_2!1216 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29375 (= lt!54746 (insertStrictlySorted!75 (toList!803 lt!54363) (_1!1216 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) (_2!1216 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29375 (= (+!144 lt!54363 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) lt!54744)))

(declare-fun b!106690 () Bool)

(declare-fun res!53043 () Bool)

(assert (=> b!106690 (=> (not res!53043) (not e!69419))))

(assert (=> b!106690 (= res!53043 (= (getValueByKey!156 (toList!803 lt!54744) (_1!1216 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))) (Some!161 (_2!1216 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))))))))

(declare-fun b!106691 () Bool)

(assert (=> b!106691 (= e!69419 (contains!830 (toList!803 lt!54744) (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))))))

(assert (= (and d!29375 res!53042) b!106690))

(assert (= (and b!106690 res!53043) b!106691))

(declare-fun m!119665 () Bool)

(assert (=> d!29375 m!119665))

(declare-fun m!119667 () Bool)

(assert (=> d!29375 m!119667))

(declare-fun m!119669 () Bool)

(assert (=> d!29375 m!119669))

(declare-fun m!119671 () Bool)

(assert (=> d!29375 m!119671))

(declare-fun m!119673 () Bool)

(assert (=> b!106690 m!119673))

(declare-fun m!119675 () Bool)

(assert (=> b!106691 m!119675))

(assert (=> b!106029 d!29375))

(declare-fun d!29377 () Bool)

(assert (=> d!29377 (= (apply!98 (+!144 lt!54378 (tuple2!2411 lt!54362 (minValue!2457 newMap!16))) lt!54360) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!54378 (tuple2!2411 lt!54362 (minValue!2457 newMap!16)))) lt!54360)))))

(declare-fun bs!4387 () Bool)

(assert (= bs!4387 d!29377))

(declare-fun m!119677 () Bool)

(assert (=> bs!4387 m!119677))

(assert (=> bs!4387 m!119677))

(declare-fun m!119679 () Bool)

(assert (=> bs!4387 m!119679))

(assert (=> b!106029 d!29377))

(declare-fun d!29379 () Bool)

(declare-fun e!69420 () Bool)

(assert (=> d!29379 e!69420))

(declare-fun res!53044 () Bool)

(assert (=> d!29379 (=> (not res!53044) (not e!69420))))

(declare-fun lt!54748 () ListLongMap!1575)

(assert (=> d!29379 (= res!53044 (contains!828 lt!54748 (_1!1216 (tuple2!2411 lt!54368 (minValue!2457 newMap!16)))))))

(declare-fun lt!54750 () List!1617)

(assert (=> d!29379 (= lt!54748 (ListLongMap!1576 lt!54750))))

(declare-fun lt!54749 () Unit!3232)

(declare-fun lt!54747 () Unit!3232)

(assert (=> d!29379 (= lt!54749 lt!54747)))

(assert (=> d!29379 (= (getValueByKey!156 lt!54750 (_1!1216 (tuple2!2411 lt!54368 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54368 (minValue!2457 newMap!16)))))))

(assert (=> d!29379 (= lt!54747 (lemmaContainsTupThenGetReturnValue!72 lt!54750 (_1!1216 (tuple2!2411 lt!54368 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54368 (minValue!2457 newMap!16)))))))

(assert (=> d!29379 (= lt!54750 (insertStrictlySorted!75 (toList!803 lt!54366) (_1!1216 (tuple2!2411 lt!54368 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54368 (minValue!2457 newMap!16)))))))

(assert (=> d!29379 (= (+!144 lt!54366 (tuple2!2411 lt!54368 (minValue!2457 newMap!16))) lt!54748)))

(declare-fun b!106692 () Bool)

(declare-fun res!53045 () Bool)

(assert (=> b!106692 (=> (not res!53045) (not e!69420))))

(assert (=> b!106692 (= res!53045 (= (getValueByKey!156 (toList!803 lt!54748) (_1!1216 (tuple2!2411 lt!54368 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54368 (minValue!2457 newMap!16))))))))

(declare-fun b!106693 () Bool)

(assert (=> b!106693 (= e!69420 (contains!830 (toList!803 lt!54748) (tuple2!2411 lt!54368 (minValue!2457 newMap!16))))))

(assert (= (and d!29379 res!53044) b!106692))

(assert (= (and b!106692 res!53045) b!106693))

(declare-fun m!119681 () Bool)

(assert (=> d!29379 m!119681))

(declare-fun m!119683 () Bool)

(assert (=> d!29379 m!119683))

(declare-fun m!119685 () Bool)

(assert (=> d!29379 m!119685))

(declare-fun m!119687 () Bool)

(assert (=> d!29379 m!119687))

(declare-fun m!119689 () Bool)

(assert (=> b!106692 m!119689))

(declare-fun m!119691 () Bool)

(assert (=> b!106693 m!119691))

(assert (=> b!106029 d!29379))

(declare-fun d!29381 () Bool)

(declare-fun e!69422 () Bool)

(assert (=> d!29381 e!69422))

(declare-fun res!53046 () Bool)

(assert (=> d!29381 (=> res!53046 e!69422)))

(declare-fun lt!54753 () Bool)

(assert (=> d!29381 (= res!53046 (not lt!54753))))

(declare-fun lt!54751 () Bool)

(assert (=> d!29381 (= lt!54753 lt!54751)))

(declare-fun lt!54752 () Unit!3232)

(declare-fun e!69421 () Unit!3232)

(assert (=> d!29381 (= lt!54752 e!69421)))

(declare-fun c!18662 () Bool)

(assert (=> d!29381 (= c!18662 lt!54751)))

(assert (=> d!29381 (= lt!54751 (containsKey!160 (toList!803 (+!144 lt!54363 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))) lt!54361))))

(assert (=> d!29381 (= (contains!828 (+!144 lt!54363 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) lt!54361) lt!54753)))

(declare-fun b!106694 () Bool)

(declare-fun lt!54754 () Unit!3232)

(assert (=> b!106694 (= e!69421 lt!54754)))

(assert (=> b!106694 (= lt!54754 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (+!144 lt!54363 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))) lt!54361))))

(assert (=> b!106694 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!54363 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))) lt!54361))))

(declare-fun b!106695 () Bool)

(declare-fun Unit!3288 () Unit!3232)

(assert (=> b!106695 (= e!69421 Unit!3288)))

(declare-fun b!106696 () Bool)

(assert (=> b!106696 (= e!69422 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!54363 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))) lt!54361)))))

(assert (= (and d!29381 c!18662) b!106694))

(assert (= (and d!29381 (not c!18662)) b!106695))

(assert (= (and d!29381 (not res!53046)) b!106696))

(declare-fun m!119693 () Bool)

(assert (=> d!29381 m!119693))

(declare-fun m!119695 () Bool)

(assert (=> b!106694 m!119695))

(declare-fun m!119697 () Bool)

(assert (=> b!106694 m!119697))

(assert (=> b!106694 m!119697))

(declare-fun m!119699 () Bool)

(assert (=> b!106694 m!119699))

(assert (=> b!106696 m!119697))

(assert (=> b!106696 m!119697))

(assert (=> b!106696 m!119699))

(assert (=> b!106029 d!29381))

(declare-fun d!29383 () Bool)

(assert (=> d!29383 (= (apply!98 (+!144 lt!54370 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) lt!54364) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!54370 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16))))) lt!54364)))))

(declare-fun bs!4388 () Bool)

(assert (= bs!4388 d!29383))

(declare-fun m!119701 () Bool)

(assert (=> bs!4388 m!119701))

(assert (=> bs!4388 m!119701))

(declare-fun m!119703 () Bool)

(assert (=> bs!4388 m!119703))

(assert (=> b!106029 d!29383))

(declare-fun d!29385 () Bool)

(declare-fun e!69423 () Bool)

(assert (=> d!29385 e!69423))

(declare-fun res!53047 () Bool)

(assert (=> d!29385 (=> (not res!53047) (not e!69423))))

(declare-fun lt!54756 () ListLongMap!1575)

(assert (=> d!29385 (= res!53047 (contains!828 lt!54756 (_1!1216 (tuple2!2411 lt!54362 (minValue!2457 newMap!16)))))))

(declare-fun lt!54758 () List!1617)

(assert (=> d!29385 (= lt!54756 (ListLongMap!1576 lt!54758))))

(declare-fun lt!54757 () Unit!3232)

(declare-fun lt!54755 () Unit!3232)

(assert (=> d!29385 (= lt!54757 lt!54755)))

(assert (=> d!29385 (= (getValueByKey!156 lt!54758 (_1!1216 (tuple2!2411 lt!54362 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54362 (minValue!2457 newMap!16)))))))

(assert (=> d!29385 (= lt!54755 (lemmaContainsTupThenGetReturnValue!72 lt!54758 (_1!1216 (tuple2!2411 lt!54362 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54362 (minValue!2457 newMap!16)))))))

(assert (=> d!29385 (= lt!54758 (insertStrictlySorted!75 (toList!803 lt!54378) (_1!1216 (tuple2!2411 lt!54362 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54362 (minValue!2457 newMap!16)))))))

(assert (=> d!29385 (= (+!144 lt!54378 (tuple2!2411 lt!54362 (minValue!2457 newMap!16))) lt!54756)))

(declare-fun b!106697 () Bool)

(declare-fun res!53048 () Bool)

(assert (=> b!106697 (=> (not res!53048) (not e!69423))))

(assert (=> b!106697 (= res!53048 (= (getValueByKey!156 (toList!803 lt!54756) (_1!1216 (tuple2!2411 lt!54362 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54362 (minValue!2457 newMap!16))))))))

(declare-fun b!106698 () Bool)

(assert (=> b!106698 (= e!69423 (contains!830 (toList!803 lt!54756) (tuple2!2411 lt!54362 (minValue!2457 newMap!16))))))

(assert (= (and d!29385 res!53047) b!106697))

(assert (= (and b!106697 res!53048) b!106698))

(declare-fun m!119705 () Bool)

(assert (=> d!29385 m!119705))

(declare-fun m!119707 () Bool)

(assert (=> d!29385 m!119707))

(declare-fun m!119709 () Bool)

(assert (=> d!29385 m!119709))

(declare-fun m!119711 () Bool)

(assert (=> d!29385 m!119711))

(declare-fun m!119713 () Bool)

(assert (=> b!106697 m!119713))

(declare-fun m!119715 () Bool)

(assert (=> b!106698 m!119715))

(assert (=> b!106029 d!29385))

(declare-fun d!29387 () Bool)

(assert (=> d!29387 (contains!828 (+!144 lt!54363 (tuple2!2411 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) lt!54361)))

(declare-fun lt!54759 () Unit!3232)

(assert (=> d!29387 (= lt!54759 (choose!655 lt!54363 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) lt!54361))))

(assert (=> d!29387 (contains!828 lt!54363 lt!54361)))

(assert (=> d!29387 (= (addStillContains!74 lt!54363 lt!54373 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) lt!54361) lt!54759)))

(declare-fun bs!4389 () Bool)

(assert (= bs!4389 d!29387))

(assert (=> bs!4389 m!118497))

(assert (=> bs!4389 m!118497))

(assert (=> bs!4389 m!118515))

(declare-fun m!119717 () Bool)

(assert (=> bs!4389 m!119717))

(declare-fun m!119719 () Bool)

(assert (=> bs!4389 m!119719))

(assert (=> b!106029 d!29387))

(declare-fun d!29389 () Bool)

(assert (=> d!29389 (= (apply!98 (+!144 lt!54366 (tuple2!2411 lt!54368 (minValue!2457 newMap!16))) lt!54377) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!54366 (tuple2!2411 lt!54368 (minValue!2457 newMap!16)))) lt!54377)))))

(declare-fun bs!4390 () Bool)

(assert (= bs!4390 d!29389))

(declare-fun m!119721 () Bool)

(assert (=> bs!4390 m!119721))

(assert (=> bs!4390 m!119721))

(declare-fun m!119723 () Bool)

(assert (=> bs!4390 m!119723))

(assert (=> b!106029 d!29389))

(declare-fun b!106699 () Bool)

(declare-fun e!69429 () Bool)

(declare-fun e!69427 () Bool)

(assert (=> b!106699 (= e!69429 e!69427)))

(assert (=> b!106699 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun res!53050 () Bool)

(declare-fun lt!54763 () ListLongMap!1575)

(assert (=> b!106699 (= res!53050 (contains!828 lt!54763 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106699 (=> (not res!53050) (not e!69427))))

(declare-fun b!106700 () Bool)

(declare-fun e!69428 () ListLongMap!1575)

(declare-fun call!11289 () ListLongMap!1575)

(assert (=> b!106700 (= e!69428 call!11289)))

(declare-fun d!29391 () Bool)

(declare-fun e!69425 () Bool)

(assert (=> d!29391 e!69425))

(declare-fun res!53049 () Bool)

(assert (=> d!29391 (=> (not res!53049) (not e!69425))))

(assert (=> d!29391 (= res!53049 (not (contains!828 lt!54763 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!69426 () ListLongMap!1575)

(assert (=> d!29391 (= lt!54763 e!69426)))

(declare-fun c!18666 () Bool)

(assert (=> d!29391 (= c!18666 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29391 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29391 (= (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) (mask!6728 newMap!16) (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54763)))

(declare-fun b!106701 () Bool)

(assert (=> b!106701 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> b!106701 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))))))))

(assert (=> b!106701 (= e!69427 (= (apply!98 lt!54763 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106702 () Bool)

(declare-fun e!69424 () Bool)

(assert (=> b!106702 (= e!69424 (= lt!54763 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) (mask!6728 newMap!16) (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16))))))

(declare-fun b!106703 () Bool)

(assert (=> b!106703 (= e!69426 e!69428)))

(declare-fun c!18664 () Bool)

(assert (=> b!106703 (= c!18664 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11286 () Bool)

(assert (=> bm!11286 (= call!11289 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16)))) (mask!6728 newMap!16) (ite (and c!18369 c!18363) lt!54041 (extraKeys!2387 newMap!16)) (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16)))))

(declare-fun b!106704 () Bool)

(assert (=> b!106704 (= e!69426 (ListLongMap!1576 Nil!1614))))

(declare-fun b!106705 () Bool)

(assert (=> b!106705 (= e!69429 e!69424)))

(declare-fun c!18663 () Bool)

(assert (=> b!106705 (= c!18663 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106706 () Bool)

(declare-fun lt!54762 () Unit!3232)

(declare-fun lt!54761 () Unit!3232)

(assert (=> b!106706 (= lt!54762 lt!54761)))

(declare-fun lt!54760 () V!3219)

(declare-fun lt!54766 () ListLongMap!1575)

(declare-fun lt!54764 () (_ BitVec 64))

(declare-fun lt!54765 () (_ BitVec 64))

(assert (=> b!106706 (not (contains!828 (+!144 lt!54766 (tuple2!2411 lt!54764 lt!54760)) lt!54765))))

(assert (=> b!106706 (= lt!54761 (addStillNotContains!46 lt!54766 lt!54764 lt!54760 lt!54765))))

(assert (=> b!106706 (= lt!54765 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106706 (= lt!54760 (get!1330 (select (arr!2064 (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106706 (= lt!54764 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106706 (= lt!54766 call!11289)))

(assert (=> b!106706 (= e!69428 (+!144 call!11289 (tuple2!2411 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (get!1330 (select (arr!2064 (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106707 () Bool)

(declare-fun res!53051 () Bool)

(assert (=> b!106707 (=> (not res!53051) (not e!69425))))

(assert (=> b!106707 (= res!53051 (not (contains!828 lt!54763 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106708 () Bool)

(assert (=> b!106708 (= e!69424 (isEmpty!370 lt!54763))))

(declare-fun b!106709 () Bool)

(declare-fun e!69430 () Bool)

(assert (=> b!106709 (= e!69430 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106709 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!106710 () Bool)

(assert (=> b!106710 (= e!69425 e!69429)))

(declare-fun c!18665 () Bool)

(assert (=> b!106710 (= c!18665 e!69430)))

(declare-fun res!53052 () Bool)

(assert (=> b!106710 (=> (not res!53052) (not e!69430))))

(assert (=> b!106710 (= res!53052 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!29391 c!18666) b!106704))

(assert (= (and d!29391 (not c!18666)) b!106703))

(assert (= (and b!106703 c!18664) b!106706))

(assert (= (and b!106703 (not c!18664)) b!106700))

(assert (= (or b!106706 b!106700) bm!11286))

(assert (= (and d!29391 res!53049) b!106707))

(assert (= (and b!106707 res!53051) b!106710))

(assert (= (and b!106710 res!53052) b!106709))

(assert (= (and b!106710 c!18665) b!106699))

(assert (= (and b!106710 (not c!18665)) b!106705))

(assert (= (and b!106699 res!53050) b!106701))

(assert (= (and b!106705 c!18663) b!106702))

(assert (= (and b!106705 (not c!18663)) b!106708))

(declare-fun b_lambda!4767 () Bool)

(assert (=> (not b_lambda!4767) (not b!106701)))

(assert (=> b!106701 t!5708))

(declare-fun b_and!6579 () Bool)

(assert (= b_and!6575 (and (=> t!5708 result!3463) b_and!6579)))

(assert (=> b!106701 t!5710))

(declare-fun b_and!6581 () Bool)

(assert (= b_and!6577 (and (=> t!5710 result!3465) b_and!6581)))

(declare-fun b_lambda!4769 () Bool)

(assert (=> (not b_lambda!4769) (not b!106706)))

(assert (=> b!106706 t!5708))

(declare-fun b_and!6583 () Bool)

(assert (= b_and!6579 (and (=> t!5708 result!3463) b_and!6583)))

(assert (=> b!106706 t!5710))

(declare-fun b_and!6585 () Bool)

(assert (= b_and!6581 (and (=> t!5710 result!3465) b_and!6585)))

(declare-fun m!119725 () Bool)

(assert (=> bm!11286 m!119725))

(assert (=> b!106701 m!118103))

(declare-fun m!119727 () Bool)

(assert (=> b!106701 m!119727))

(assert (=> b!106701 m!118471))

(assert (=> b!106701 m!118471))

(assert (=> b!106701 m!118149))

(assert (=> b!106701 m!118473))

(assert (=> b!106701 m!118149))

(assert (=> b!106701 m!118103))

(assert (=> b!106699 m!118103))

(assert (=> b!106699 m!118103))

(declare-fun m!119729 () Bool)

(assert (=> b!106699 m!119729))

(declare-fun m!119731 () Bool)

(assert (=> b!106708 m!119731))

(assert (=> b!106703 m!118103))

(assert (=> b!106703 m!118103))

(assert (=> b!106703 m!118163))

(declare-fun m!119733 () Bool)

(assert (=> d!29391 m!119733))

(assert (=> d!29391 m!117933))

(assert (=> b!106702 m!119725))

(assert (=> b!106709 m!118103))

(assert (=> b!106709 m!118103))

(assert (=> b!106709 m!118163))

(declare-fun m!119735 () Bool)

(assert (=> b!106707 m!119735))

(declare-fun m!119737 () Bool)

(assert (=> b!106706 m!119737))

(assert (=> b!106706 m!119737))

(declare-fun m!119739 () Bool)

(assert (=> b!106706 m!119739))

(assert (=> b!106706 m!118471))

(assert (=> b!106706 m!118471))

(assert (=> b!106706 m!118149))

(assert (=> b!106706 m!118473))

(assert (=> b!106706 m!118149))

(assert (=> b!106706 m!118103))

(declare-fun m!119741 () Bool)

(assert (=> b!106706 m!119741))

(declare-fun m!119743 () Bool)

(assert (=> b!106706 m!119743))

(assert (=> b!106029 d!29391))

(declare-fun d!29393 () Bool)

(assert (=> d!29393 (= (apply!98 lt!54378 lt!54360) (get!1334 (getValueByKey!156 (toList!803 lt!54378) lt!54360)))))

(declare-fun bs!4391 () Bool)

(assert (= bs!4391 d!29393))

(declare-fun m!119745 () Bool)

(assert (=> bs!4391 m!119745))

(assert (=> bs!4391 m!119745))

(declare-fun m!119747 () Bool)

(assert (=> bs!4391 m!119747))

(assert (=> b!106029 d!29393))

(declare-fun d!29395 () Bool)

(assert (=> d!29395 (= (apply!98 (+!144 lt!54370 (tuple2!2411 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)))) lt!54364) (apply!98 lt!54370 lt!54364))))

(declare-fun lt!54767 () Unit!3232)

(assert (=> d!29395 (= lt!54767 (choose!654 lt!54370 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) lt!54364))))

(declare-fun e!69431 () Bool)

(assert (=> d!29395 e!69431))

(declare-fun res!53053 () Bool)

(assert (=> d!29395 (=> (not res!53053) (not e!69431))))

(assert (=> d!29395 (= res!53053 (contains!828 lt!54370 lt!54364))))

(assert (=> d!29395 (= (addApplyDifferent!74 lt!54370 lt!54374 (ite (and c!18369 c!18363) lt!53807 (zeroValue!2457 newMap!16)) lt!54364) lt!54767)))

(declare-fun b!106711 () Bool)

(assert (=> b!106711 (= e!69431 (not (= lt!54364 lt!54374)))))

(assert (= (and d!29395 res!53053) b!106711))

(declare-fun m!119749 () Bool)

(assert (=> d!29395 m!119749))

(assert (=> d!29395 m!118493))

(assert (=> d!29395 m!118495))

(assert (=> d!29395 m!118493))

(declare-fun m!119751 () Bool)

(assert (=> d!29395 m!119751))

(assert (=> d!29395 m!118507))

(assert (=> b!106029 d!29395))

(declare-fun d!29397 () Bool)

(assert (=> d!29397 (= (apply!98 lt!54366 lt!54377) (get!1334 (getValueByKey!156 (toList!803 lt!54366) lt!54377)))))

(declare-fun bs!4392 () Bool)

(assert (= bs!4392 d!29397))

(declare-fun m!119753 () Bool)

(assert (=> bs!4392 m!119753))

(assert (=> bs!4392 m!119753))

(declare-fun m!119755 () Bool)

(assert (=> bs!4392 m!119755))

(assert (=> b!106029 d!29397))

(declare-fun e!69433 () Option!162)

(declare-fun b!106714 () Bool)

(assert (=> b!106714 (= e!69433 (getValueByKey!156 (t!5700 (toList!803 lt!54093)) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106712 () Bool)

(declare-fun e!69432 () Option!162)

(assert (=> b!106712 (= e!69432 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54093)))))))

(declare-fun c!18667 () Bool)

(declare-fun d!29399 () Bool)

(assert (=> d!29399 (= c!18667 (and ((_ is Cons!1613) (toList!803 lt!54093)) (= (_1!1216 (h!2210 (toList!803 lt!54093))) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29399 (= (getValueByKey!156 (toList!803 lt!54093) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69432)))

(declare-fun b!106715 () Bool)

(assert (=> b!106715 (= e!69433 None!160)))

(declare-fun b!106713 () Bool)

(assert (=> b!106713 (= e!69432 e!69433)))

(declare-fun c!18668 () Bool)

(assert (=> b!106713 (= c!18668 (and ((_ is Cons!1613) (toList!803 lt!54093)) (not (= (_1!1216 (h!2210 (toList!803 lt!54093))) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29399 c!18667) b!106712))

(assert (= (and d!29399 (not c!18667)) b!106713))

(assert (= (and b!106713 c!18668) b!106714))

(assert (= (and b!106713 (not c!18668)) b!106715))

(declare-fun m!119757 () Bool)

(assert (=> b!106714 m!119757))

(assert (=> b!105676 d!29399))

(declare-fun d!29401 () Bool)

(assert (=> d!29401 (= (get!1334 (getValueByKey!156 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2896 (getValueByKey!156 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29015 d!29401))

(assert (=> d!29015 d!29303))

(declare-fun b!106718 () Bool)

(declare-fun e!69435 () Option!162)

(assert (=> b!106718 (= e!69435 (getValueByKey!156 (t!5700 (t!5700 lt!53908)) (_1!1216 lt!53814)))))

(declare-fun b!106716 () Bool)

(declare-fun e!69434 () Option!162)

(assert (=> b!106716 (= e!69434 (Some!161 (_2!1216 (h!2210 (t!5700 lt!53908)))))))

(declare-fun d!29403 () Bool)

(declare-fun c!18669 () Bool)

(assert (=> d!29403 (= c!18669 (and ((_ is Cons!1613) (t!5700 lt!53908)) (= (_1!1216 (h!2210 (t!5700 lt!53908))) (_1!1216 lt!53814))))))

(assert (=> d!29403 (= (getValueByKey!156 (t!5700 lt!53908) (_1!1216 lt!53814)) e!69434)))

(declare-fun b!106719 () Bool)

(assert (=> b!106719 (= e!69435 None!160)))

(declare-fun b!106717 () Bool)

(assert (=> b!106717 (= e!69434 e!69435)))

(declare-fun c!18670 () Bool)

(assert (=> b!106717 (= c!18670 (and ((_ is Cons!1613) (t!5700 lt!53908)) (not (= (_1!1216 (h!2210 (t!5700 lt!53908))) (_1!1216 lt!53814)))))))

(assert (= (and d!29403 c!18669) b!106716))

(assert (= (and d!29403 (not c!18669)) b!106717))

(assert (= (and b!106717 c!18670) b!106718))

(assert (= (and b!106717 (not c!18670)) b!106719))

(declare-fun m!119759 () Bool)

(assert (=> b!106718 m!119759))

(assert (=> b!105795 d!29403))

(declare-fun d!29405 () Bool)

(declare-fun e!69437 () Bool)

(assert (=> d!29405 e!69437))

(declare-fun res!53054 () Bool)

(assert (=> d!29405 (=> res!53054 e!69437)))

(declare-fun lt!54770 () Bool)

(assert (=> d!29405 (= res!53054 (not lt!54770))))

(declare-fun lt!54768 () Bool)

(assert (=> d!29405 (= lt!54770 lt!54768)))

(declare-fun lt!54769 () Unit!3232)

(declare-fun e!69436 () Unit!3232)

(assert (=> d!29405 (= lt!54769 e!69436)))

(declare-fun c!18671 () Bool)

(assert (=> d!29405 (= c!18671 lt!54768)))

(assert (=> d!29405 (= lt!54768 (containsKey!160 (toList!803 lt!54093) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29405 (= (contains!828 lt!54093 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54770)))

(declare-fun b!106720 () Bool)

(declare-fun lt!54771 () Unit!3232)

(assert (=> b!106720 (= e!69436 lt!54771)))

(assert (=> b!106720 (= lt!54771 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54093) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106720 (isDefined!109 (getValueByKey!156 (toList!803 lt!54093) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106721 () Bool)

(declare-fun Unit!3289 () Unit!3232)

(assert (=> b!106721 (= e!69436 Unit!3289)))

(declare-fun b!106722 () Bool)

(assert (=> b!106722 (= e!69437 (isDefined!109 (getValueByKey!156 (toList!803 lt!54093) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29405 c!18671) b!106720))

(assert (= (and d!29405 (not c!18671)) b!106721))

(assert (= (and d!29405 (not res!53054)) b!106722))

(declare-fun m!119761 () Bool)

(assert (=> d!29405 m!119761))

(declare-fun m!119763 () Bool)

(assert (=> b!106720 m!119763))

(assert (=> b!106720 m!117905))

(assert (=> b!106720 m!117905))

(declare-fun m!119765 () Bool)

(assert (=> b!106720 m!119765))

(assert (=> b!106722 m!117905))

(assert (=> b!106722 m!117905))

(assert (=> b!106722 m!119765))

(assert (=> d!28851 d!29405))

(declare-fun b!106725 () Bool)

(declare-fun e!69439 () Option!162)

(assert (=> b!106725 (= e!69439 (getValueByKey!156 (t!5700 lt!54095) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106723 () Bool)

(declare-fun e!69438 () Option!162)

(assert (=> b!106723 (= e!69438 (Some!161 (_2!1216 (h!2210 lt!54095))))))

(declare-fun c!18672 () Bool)

(declare-fun d!29407 () Bool)

(assert (=> d!29407 (= c!18672 (and ((_ is Cons!1613) lt!54095) (= (_1!1216 (h!2210 lt!54095)) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29407 (= (getValueByKey!156 lt!54095 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69438)))

(declare-fun b!106726 () Bool)

(assert (=> b!106726 (= e!69439 None!160)))

(declare-fun b!106724 () Bool)

(assert (=> b!106724 (= e!69438 e!69439)))

(declare-fun c!18673 () Bool)

(assert (=> b!106724 (= c!18673 (and ((_ is Cons!1613) lt!54095) (not (= (_1!1216 (h!2210 lt!54095)) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29407 c!18672) b!106723))

(assert (= (and d!29407 (not c!18672)) b!106724))

(assert (= (and b!106724 c!18673) b!106725))

(assert (= (and b!106724 (not c!18673)) b!106726))

(declare-fun m!119767 () Bool)

(assert (=> b!106725 m!119767))

(assert (=> d!28851 d!29407))

(declare-fun d!29409 () Bool)

(assert (=> d!29409 (= (getValueByKey!156 lt!54095 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54772 () Unit!3232)

(assert (=> d!29409 (= lt!54772 (choose!657 lt!54095 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69440 () Bool)

(assert (=> d!29409 e!69440))

(declare-fun res!53055 () Bool)

(assert (=> d!29409 (=> (not res!53055) (not e!69440))))

(assert (=> d!29409 (= res!53055 (isStrictlySorted!309 lt!54095))))

(assert (=> d!29409 (= (lemmaContainsTupThenGetReturnValue!72 lt!54095 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54772)))

(declare-fun b!106727 () Bool)

(declare-fun res!53056 () Bool)

(assert (=> b!106727 (=> (not res!53056) (not e!69440))))

(assert (=> b!106727 (= res!53056 (containsKey!160 lt!54095 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106728 () Bool)

(assert (=> b!106728 (= e!69440 (contains!830 lt!54095 (tuple2!2411 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29409 res!53055) b!106727))

(assert (= (and b!106727 res!53056) b!106728))

(assert (=> d!29409 m!117899))

(declare-fun m!119769 () Bool)

(assert (=> d!29409 m!119769))

(declare-fun m!119771 () Bool)

(assert (=> d!29409 m!119771))

(declare-fun m!119773 () Bool)

(assert (=> b!106727 m!119773))

(declare-fun m!119775 () Bool)

(assert (=> b!106728 m!119775))

(assert (=> d!28851 d!29409))

(declare-fun b!106729 () Bool)

(declare-fun e!69444 () List!1617)

(declare-fun e!69442 () List!1617)

(assert (=> b!106729 (= e!69444 e!69442)))

(declare-fun c!18675 () Bool)

(assert (=> b!106729 (= c!18675 (and ((_ is Cons!1613) (toList!803 lt!53956)) (= (_1!1216 (h!2210 (toList!803 lt!53956))) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106730 () Bool)

(declare-fun call!11290 () List!1617)

(assert (=> b!106730 (= e!69444 call!11290)))

(declare-fun b!106732 () Bool)

(declare-fun e!69445 () List!1617)

(declare-fun call!11292 () List!1617)

(assert (=> b!106732 (= e!69445 call!11292)))

(declare-fun c!18676 () Bool)

(declare-fun b!106733 () Bool)

(assert (=> b!106733 (= c!18676 (and ((_ is Cons!1613) (toList!803 lt!53956)) (bvsgt (_1!1216 (h!2210 (toList!803 lt!53956))) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> b!106733 (= e!69442 e!69445)))

(declare-fun bm!11287 () Bool)

(declare-fun call!11291 () List!1617)

(assert (=> bm!11287 (= call!11292 call!11291)))

(declare-fun e!69443 () List!1617)

(declare-fun b!106734 () Bool)

(assert (=> b!106734 (= e!69443 (insertStrictlySorted!75 (t!5700 (toList!803 lt!53956)) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106735 () Bool)

(assert (=> b!106735 (= e!69445 call!11292)))

(declare-fun b!106736 () Bool)

(declare-fun res!53058 () Bool)

(declare-fun e!69441 () Bool)

(assert (=> b!106736 (=> (not res!53058) (not e!69441))))

(declare-fun lt!54773 () List!1617)

(assert (=> b!106736 (= res!53058 (containsKey!160 lt!54773 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106737 () Bool)

(assert (=> b!106737 (= e!69441 (contains!830 lt!54773 (tuple2!2411 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106738 () Bool)

(assert (=> b!106738 (= e!69443 (ite c!18675 (t!5700 (toList!803 lt!53956)) (ite c!18676 (Cons!1613 (h!2210 (toList!803 lt!53956)) (t!5700 (toList!803 lt!53956))) Nil!1614)))))

(declare-fun d!29411 () Bool)

(assert (=> d!29411 e!69441))

(declare-fun res!53057 () Bool)

(assert (=> d!29411 (=> (not res!53057) (not e!69441))))

(assert (=> d!29411 (= res!53057 (isStrictlySorted!309 lt!54773))))

(assert (=> d!29411 (= lt!54773 e!69444)))

(declare-fun c!18674 () Bool)

(assert (=> d!29411 (= c!18674 (and ((_ is Cons!1613) (toList!803 lt!53956)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53956))) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29411 (isStrictlySorted!309 (toList!803 lt!53956))))

(assert (=> d!29411 (= (insertStrictlySorted!75 (toList!803 lt!53956) (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54773)))

(declare-fun b!106731 () Bool)

(assert (=> b!106731 (= e!69442 call!11291)))

(declare-fun bm!11288 () Bool)

(assert (=> bm!11288 (= call!11290 ($colon$colon!81 e!69443 (ite c!18674 (h!2210 (toList!803 lt!53956)) (tuple2!2411 (_1!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18677 () Bool)

(assert (=> bm!11288 (= c!18677 c!18674)))

(declare-fun bm!11289 () Bool)

(assert (=> bm!11289 (= call!11291 call!11290)))

(assert (= (and d!29411 c!18674) b!106730))

(assert (= (and d!29411 (not c!18674)) b!106729))

(assert (= (and b!106729 c!18675) b!106731))

(assert (= (and b!106729 (not c!18675)) b!106733))

(assert (= (and b!106733 c!18676) b!106735))

(assert (= (and b!106733 (not c!18676)) b!106732))

(assert (= (or b!106735 b!106732) bm!11287))

(assert (= (or b!106731 bm!11287) bm!11289))

(assert (= (or b!106730 bm!11289) bm!11288))

(assert (= (and bm!11288 c!18677) b!106734))

(assert (= (and bm!11288 (not c!18677)) b!106738))

(assert (= (and d!29411 res!53057) b!106736))

(assert (= (and b!106736 res!53058) b!106737))

(declare-fun m!119777 () Bool)

(assert (=> b!106734 m!119777))

(declare-fun m!119779 () Bool)

(assert (=> b!106737 m!119779))

(declare-fun m!119781 () Bool)

(assert (=> d!29411 m!119781))

(declare-fun m!119783 () Bool)

(assert (=> d!29411 m!119783))

(declare-fun m!119785 () Bool)

(assert (=> bm!11288 m!119785))

(declare-fun m!119787 () Bool)

(assert (=> b!106736 m!119787))

(assert (=> d!28851 d!29411))

(declare-fun bm!11290 () Bool)

(declare-fun call!11296 () Bool)

(declare-fun lt!54779 () ListLongMap!1575)

(assert (=> bm!11290 (= call!11296 (contains!828 lt!54779 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11291 () Bool)

(declare-fun call!11299 () ListLongMap!1575)

(declare-fun call!11294 () ListLongMap!1575)

(assert (=> bm!11291 (= call!11299 call!11294)))

(declare-fun b!106739 () Bool)

(declare-fun e!69447 () Unit!3232)

(declare-fun lt!54795 () Unit!3232)

(assert (=> b!106739 (= e!69447 lt!54795)))

(declare-fun lt!54777 () ListLongMap!1575)

(assert (=> b!106739 (= lt!54777 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54051 (zeroValue!2457 newMap!16) lt!53807 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54787 () (_ BitVec 64))

(assert (=> b!106739 (= lt!54787 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54775 () (_ BitVec 64))

(assert (=> b!106739 (= lt!54775 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54790 () Unit!3232)

(assert (=> b!106739 (= lt!54790 (addStillContains!74 lt!54777 lt!54787 (zeroValue!2457 newMap!16) lt!54775))))

(assert (=> b!106739 (contains!828 (+!144 lt!54777 (tuple2!2411 lt!54787 (zeroValue!2457 newMap!16))) lt!54775)))

(declare-fun lt!54789 () Unit!3232)

(assert (=> b!106739 (= lt!54789 lt!54790)))

(declare-fun lt!54792 () ListLongMap!1575)

(assert (=> b!106739 (= lt!54792 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54051 (zeroValue!2457 newMap!16) lt!53807 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54776 () (_ BitVec 64))

(assert (=> b!106739 (= lt!54776 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54774 () (_ BitVec 64))

(assert (=> b!106739 (= lt!54774 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54793 () Unit!3232)

(assert (=> b!106739 (= lt!54793 (addApplyDifferent!74 lt!54792 lt!54776 lt!53807 lt!54774))))

(assert (=> b!106739 (= (apply!98 (+!144 lt!54792 (tuple2!2411 lt!54776 lt!53807)) lt!54774) (apply!98 lt!54792 lt!54774))))

(declare-fun lt!54786 () Unit!3232)

(assert (=> b!106739 (= lt!54786 lt!54793)))

(declare-fun lt!54784 () ListLongMap!1575)

(assert (=> b!106739 (= lt!54784 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54051 (zeroValue!2457 newMap!16) lt!53807 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54788 () (_ BitVec 64))

(assert (=> b!106739 (= lt!54788 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54778 () (_ BitVec 64))

(assert (=> b!106739 (= lt!54778 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54785 () Unit!3232)

(assert (=> b!106739 (= lt!54785 (addApplyDifferent!74 lt!54784 lt!54788 (zeroValue!2457 newMap!16) lt!54778))))

(assert (=> b!106739 (= (apply!98 (+!144 lt!54784 (tuple2!2411 lt!54788 (zeroValue!2457 newMap!16))) lt!54778) (apply!98 lt!54784 lt!54778))))

(declare-fun lt!54794 () Unit!3232)

(assert (=> b!106739 (= lt!54794 lt!54785)))

(declare-fun lt!54780 () ListLongMap!1575)

(assert (=> b!106739 (= lt!54780 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54051 (zeroValue!2457 newMap!16) lt!53807 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54782 () (_ BitVec 64))

(assert (=> b!106739 (= lt!54782 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54791 () (_ BitVec 64))

(assert (=> b!106739 (= lt!54791 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106739 (= lt!54795 (addApplyDifferent!74 lt!54780 lt!54782 lt!53807 lt!54791))))

(assert (=> b!106739 (= (apply!98 (+!144 lt!54780 (tuple2!2411 lt!54782 lt!53807)) lt!54791) (apply!98 lt!54780 lt!54791))))

(declare-fun bm!11292 () Bool)

(declare-fun call!11293 () ListLongMap!1575)

(assert (=> bm!11292 (= call!11294 call!11293)))

(declare-fun bm!11293 () Bool)

(declare-fun call!11297 () Bool)

(assert (=> bm!11293 (= call!11297 (contains!828 lt!54779 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106740 () Bool)

(declare-fun res!53065 () Bool)

(declare-fun e!69446 () Bool)

(assert (=> b!106740 (=> (not res!53065) (not e!69446))))

(declare-fun e!69455 () Bool)

(assert (=> b!106740 (= res!53065 e!69455)))

(declare-fun res!53066 () Bool)

(assert (=> b!106740 (=> res!53066 e!69455)))

(declare-fun e!69452 () Bool)

(assert (=> b!106740 (= res!53066 (not e!69452))))

(declare-fun res!53063 () Bool)

(assert (=> b!106740 (=> (not res!53063) (not e!69452))))

(assert (=> b!106740 (= res!53063 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106741 () Bool)

(declare-fun e!69456 () ListLongMap!1575)

(declare-fun call!11298 () ListLongMap!1575)

(assert (=> b!106741 (= e!69456 (+!144 call!11298 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)))))

(declare-fun bm!11294 () Bool)

(declare-fun call!11295 () ListLongMap!1575)

(assert (=> bm!11294 (= call!11295 call!11298)))

(declare-fun b!106742 () Bool)

(declare-fun e!69457 () Bool)

(assert (=> b!106742 (= e!69446 e!69457)))

(declare-fun c!18681 () Bool)

(assert (=> b!106742 (= c!18681 (not (= (bvand lt!54051 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106743 () Bool)

(declare-fun e!69454 () Bool)

(assert (=> b!106743 (= e!69454 (= (apply!98 lt!54779 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53807))))

(declare-fun b!106744 () Bool)

(declare-fun Unit!3290 () Unit!3232)

(assert (=> b!106744 (= e!69447 Unit!3290)))

(declare-fun b!106745 () Bool)

(assert (=> b!106745 (= e!69457 (not call!11296))))

(declare-fun b!106746 () Bool)

(declare-fun e!69458 () Bool)

(declare-fun e!69451 () Bool)

(assert (=> b!106746 (= e!69458 e!69451)))

(declare-fun res!53061 () Bool)

(assert (=> b!106746 (= res!53061 call!11297)))

(assert (=> b!106746 (=> (not res!53061) (not e!69451))))

(declare-fun d!29413 () Bool)

(assert (=> d!29413 e!69446))

(declare-fun res!53064 () Bool)

(assert (=> d!29413 (=> (not res!53064) (not e!69446))))

(assert (=> d!29413 (= res!53064 (or (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))))

(declare-fun lt!54781 () ListLongMap!1575)

(assert (=> d!29413 (= lt!54779 lt!54781)))

(declare-fun lt!54783 () Unit!3232)

(assert (=> d!29413 (= lt!54783 e!69447)))

(declare-fun c!18678 () Bool)

(declare-fun e!69453 () Bool)

(assert (=> d!29413 (= c!18678 e!69453)))

(declare-fun res!53067 () Bool)

(assert (=> d!29413 (=> (not res!53067) (not e!69453))))

(assert (=> d!29413 (= res!53067 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29413 (= lt!54781 e!69456)))

(declare-fun c!18680 () Bool)

(assert (=> d!29413 (= c!18680 (and (not (= (bvand lt!54051 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!54051 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29413 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29413 (= (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54051 (zeroValue!2457 newMap!16) lt!53807 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54779)))

(declare-fun b!106747 () Bool)

(assert (=> b!106747 (= e!69452 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106748 () Bool)

(assert (=> b!106748 (= e!69458 (not call!11297))))

(declare-fun b!106749 () Bool)

(declare-fun e!69450 () ListLongMap!1575)

(assert (=> b!106749 (= e!69450 call!11295)))

(declare-fun b!106750 () Bool)

(declare-fun e!69449 () Bool)

(assert (=> b!106750 (= e!69449 (= (apply!98 lt!54779 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106750 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_values!2565 newMap!16))))))

(assert (=> b!106750 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106751 () Bool)

(assert (=> b!106751 (= e!69451 (= (apply!98 lt!54779 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun bm!11295 () Bool)

(assert (=> bm!11295 (= call!11293 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54051 (zeroValue!2457 newMap!16) lt!53807 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!106752 () Bool)

(assert (=> b!106752 (= e!69456 e!69450)))

(declare-fun c!18683 () Bool)

(assert (=> b!106752 (= c!18683 (and (not (= (bvand lt!54051 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!54051 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106753 () Bool)

(declare-fun res!53062 () Bool)

(assert (=> b!106753 (=> (not res!53062) (not e!69446))))

(assert (=> b!106753 (= res!53062 e!69458)))

(declare-fun c!18682 () Bool)

(assert (=> b!106753 (= c!18682 (not (= (bvand lt!54051 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106754 () Bool)

(declare-fun e!69448 () ListLongMap!1575)

(assert (=> b!106754 (= e!69448 call!11295)))

(declare-fun bm!11296 () Bool)

(assert (=> bm!11296 (= call!11298 (+!144 (ite c!18680 call!11293 (ite c!18683 call!11294 call!11299)) (ite (or c!18680 c!18683) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807))))))

(declare-fun b!106755 () Bool)

(declare-fun c!18679 () Bool)

(assert (=> b!106755 (= c!18679 (and (not (= (bvand lt!54051 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!54051 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106755 (= e!69450 e!69448)))

(declare-fun b!106756 () Bool)

(assert (=> b!106756 (= e!69457 e!69454)))

(declare-fun res!53059 () Bool)

(assert (=> b!106756 (= res!53059 call!11296)))

(assert (=> b!106756 (=> (not res!53059) (not e!69454))))

(declare-fun b!106757 () Bool)

(assert (=> b!106757 (= e!69448 call!11299)))

(declare-fun b!106758 () Bool)

(assert (=> b!106758 (= e!69453 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106759 () Bool)

(assert (=> b!106759 (= e!69455 e!69449)))

(declare-fun res!53060 () Bool)

(assert (=> b!106759 (=> (not res!53060) (not e!69449))))

(assert (=> b!106759 (= res!53060 (contains!828 lt!54779 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106759 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!29413 c!18680) b!106741))

(assert (= (and d!29413 (not c!18680)) b!106752))

(assert (= (and b!106752 c!18683) b!106749))

(assert (= (and b!106752 (not c!18683)) b!106755))

(assert (= (and b!106755 c!18679) b!106754))

(assert (= (and b!106755 (not c!18679)) b!106757))

(assert (= (or b!106754 b!106757) bm!11291))

(assert (= (or b!106749 bm!11291) bm!11292))

(assert (= (or b!106749 b!106754) bm!11294))

(assert (= (or b!106741 bm!11292) bm!11295))

(assert (= (or b!106741 bm!11294) bm!11296))

(assert (= (and d!29413 res!53067) b!106758))

(assert (= (and d!29413 c!18678) b!106739))

(assert (= (and d!29413 (not c!18678)) b!106744))

(assert (= (and d!29413 res!53064) b!106740))

(assert (= (and b!106740 res!53063) b!106747))

(assert (= (and b!106740 (not res!53066)) b!106759))

(assert (= (and b!106759 res!53060) b!106750))

(assert (= (and b!106740 res!53065) b!106753))

(assert (= (and b!106753 c!18682) b!106746))

(assert (= (and b!106753 (not c!18682)) b!106748))

(assert (= (and b!106746 res!53061) b!106751))

(assert (= (or b!106746 b!106748) bm!11293))

(assert (= (and b!106753 res!53062) b!106742))

(assert (= (and b!106742 c!18681) b!106756))

(assert (= (and b!106742 (not c!18681)) b!106745))

(assert (= (and b!106756 res!53059) b!106743))

(assert (= (or b!106756 b!106745) bm!11290))

(declare-fun b_lambda!4771 () Bool)

(assert (=> (not b_lambda!4771) (not b!106750)))

(assert (=> b!106750 t!5708))

(declare-fun b_and!6587 () Bool)

(assert (= b_and!6583 (and (=> t!5708 result!3463) b_and!6587)))

(assert (=> b!106750 t!5710))

(declare-fun b_and!6589 () Bool)

(assert (= b_and!6585 (and (=> t!5710 result!3465) b_and!6589)))

(assert (=> d!29413 m!117933))

(assert (=> b!106750 m!118103))

(declare-fun m!119789 () Bool)

(assert (=> b!106750 m!119789))

(assert (=> b!106750 m!118149))

(assert (=> b!106750 m!118151))

(assert (=> b!106750 m!118149))

(assert (=> b!106750 m!118153))

(assert (=> b!106750 m!118103))

(assert (=> b!106750 m!118151))

(declare-fun m!119791 () Bool)

(assert (=> b!106751 m!119791))

(declare-fun m!119793 () Bool)

(assert (=> bm!11293 m!119793))

(declare-fun m!119795 () Bool)

(assert (=> bm!11296 m!119795))

(declare-fun m!119797 () Bool)

(assert (=> b!106743 m!119797))

(assert (=> b!106747 m!118103))

(assert (=> b!106747 m!118103))

(assert (=> b!106747 m!118163))

(declare-fun m!119799 () Bool)

(assert (=> bm!11295 m!119799))

(assert (=> b!106759 m!118103))

(assert (=> b!106759 m!118103))

(declare-fun m!119801 () Bool)

(assert (=> b!106759 m!119801))

(assert (=> b!106758 m!118103))

(assert (=> b!106758 m!118103))

(assert (=> b!106758 m!118163))

(declare-fun m!119803 () Bool)

(assert (=> b!106741 m!119803))

(declare-fun m!119805 () Bool)

(assert (=> bm!11290 m!119805))

(declare-fun m!119807 () Bool)

(assert (=> b!106739 m!119807))

(declare-fun m!119809 () Bool)

(assert (=> b!106739 m!119809))

(declare-fun m!119811 () Bool)

(assert (=> b!106739 m!119811))

(declare-fun m!119813 () Bool)

(assert (=> b!106739 m!119813))

(declare-fun m!119815 () Bool)

(assert (=> b!106739 m!119815))

(declare-fun m!119817 () Bool)

(assert (=> b!106739 m!119817))

(declare-fun m!119819 () Bool)

(assert (=> b!106739 m!119819))

(declare-fun m!119821 () Bool)

(assert (=> b!106739 m!119821))

(assert (=> b!106739 m!119799))

(declare-fun m!119823 () Bool)

(assert (=> b!106739 m!119823))

(declare-fun m!119825 () Bool)

(assert (=> b!106739 m!119825))

(declare-fun m!119827 () Bool)

(assert (=> b!106739 m!119827))

(assert (=> b!106739 m!119809))

(assert (=> b!106739 m!118103))

(assert (=> b!106739 m!119825))

(declare-fun m!119829 () Bool)

(assert (=> b!106739 m!119829))

(assert (=> b!106739 m!119813))

(declare-fun m!119831 () Bool)

(assert (=> b!106739 m!119831))

(assert (=> b!106739 m!119819))

(declare-fun m!119833 () Bool)

(assert (=> b!106739 m!119833))

(declare-fun m!119835 () Bool)

(assert (=> b!106739 m!119835))

(assert (=> d!28895 d!29413))

(declare-fun d!29415 () Bool)

(declare-fun e!69459 () Bool)

(assert (=> d!29415 e!69459))

(declare-fun res!53068 () Bool)

(assert (=> d!29415 (=> (not res!53068) (not e!69459))))

(declare-fun lt!54797 () ListLongMap!1575)

(assert (=> d!29415 (= res!53068 (contains!828 lt!54797 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807))))))

(declare-fun lt!54799 () List!1617)

(assert (=> d!29415 (= lt!54797 (ListLongMap!1576 lt!54799))))

(declare-fun lt!54798 () Unit!3232)

(declare-fun lt!54796 () Unit!3232)

(assert (=> d!29415 (= lt!54798 lt!54796)))

(assert (=> d!29415 (= (getValueByKey!156 lt!54799 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807))))))

(assert (=> d!29415 (= lt!54796 (lemmaContainsTupThenGetReturnValue!72 lt!54799 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807))))))

(assert (=> d!29415 (= lt!54799 (insertStrictlySorted!75 (toList!803 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807))))))

(assert (=> d!29415 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) lt!54797)))

(declare-fun b!106760 () Bool)

(declare-fun res!53069 () Bool)

(assert (=> b!106760 (=> (not res!53069) (not e!69459))))

(assert (=> b!106760 (= res!53069 (= (getValueByKey!156 (toList!803 lt!54797) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)))))))

(declare-fun b!106761 () Bool)

(assert (=> b!106761 (= e!69459 (contains!830 (toList!803 lt!54797) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)))))

(assert (= (and d!29415 res!53068) b!106760))

(assert (= (and b!106760 res!53069) b!106761))

(declare-fun m!119837 () Bool)

(assert (=> d!29415 m!119837))

(declare-fun m!119839 () Bool)

(assert (=> d!29415 m!119839))

(declare-fun m!119841 () Bool)

(assert (=> d!29415 m!119841))

(declare-fun m!119843 () Bool)

(assert (=> d!29415 m!119843))

(declare-fun m!119845 () Bool)

(assert (=> b!106760 m!119845))

(declare-fun m!119847 () Bool)

(assert (=> b!106761 m!119847))

(assert (=> d!28895 d!29415))

(assert (=> d!28895 d!28929))

(assert (=> d!28895 d!29153))

(declare-fun d!29417 () Bool)

(assert (=> d!29417 (= (+!144 (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (getCurrentListMap!489 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!54051 (zeroValue!2457 newMap!16) lt!53807 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(assert (=> d!29417 true))

(declare-fun _$8!94 () Unit!3232)

(assert (=> d!29417 (= (choose!658 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!54051 (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) lt!53807 (defaultEntry!2582 newMap!16)) _$8!94)))

(declare-fun bs!4393 () Bool)

(assert (= bs!4393 d!29417))

(assert (=> bs!4393 m!117707))

(assert (=> bs!4393 m!117707))

(assert (=> bs!4393 m!118059))

(assert (=> bs!4393 m!118061))

(assert (=> d!28895 d!29417))

(declare-fun b!106764 () Bool)

(declare-fun e!69461 () Option!162)

(assert (=> b!106764 (= e!69461 (getValueByKey!156 (t!5700 (t!5700 (toList!803 lt!53902))) (_1!1216 lt!53815)))))

(declare-fun b!106762 () Bool)

(declare-fun e!69460 () Option!162)

(assert (=> b!106762 (= e!69460 (Some!161 (_2!1216 (h!2210 (t!5700 (toList!803 lt!53902))))))))

(declare-fun d!29419 () Bool)

(declare-fun c!18684 () Bool)

(assert (=> d!29419 (= c!18684 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53902))) (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53902)))) (_1!1216 lt!53815))))))

(assert (=> d!29419 (= (getValueByKey!156 (t!5700 (toList!803 lt!53902)) (_1!1216 lt!53815)) e!69460)))

(declare-fun b!106765 () Bool)

(assert (=> b!106765 (= e!69461 None!160)))

(declare-fun b!106763 () Bool)

(assert (=> b!106763 (= e!69460 e!69461)))

(declare-fun c!18685 () Bool)

(assert (=> b!106763 (= c!18685 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53902))) (not (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53902)))) (_1!1216 lt!53815)))))))

(assert (= (and d!29419 c!18684) b!106762))

(assert (= (and d!29419 (not c!18684)) b!106763))

(assert (= (and b!106763 c!18685) b!106764))

(assert (= (and b!106763 (not c!18685)) b!106765))

(declare-fun m!119849 () Bool)

(assert (=> b!106764 m!119849))

(assert (=> b!106052 d!29419))

(declare-fun d!29421 () Bool)

(declare-fun lt!54800 () Bool)

(assert (=> d!29421 (= lt!54800 (select (content!110 (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!69463 () Bool)

(assert (=> d!29421 (= lt!54800 e!69463)))

(declare-fun res!53071 () Bool)

(assert (=> d!29421 (=> (not res!53071) (not e!69463))))

(assert (=> d!29421 (= res!53071 ((_ is Cons!1612) (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)))))

(assert (=> d!29421 (= (contains!829 (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!54800)))

(declare-fun b!106766 () Bool)

(declare-fun e!69462 () Bool)

(assert (=> b!106766 (= e!69463 e!69462)))

(declare-fun res!53070 () Bool)

(assert (=> b!106766 (=> res!53070 e!69462)))

(assert (=> b!106766 (= res!53070 (= (h!2209 (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!106767 () Bool)

(assert (=> b!106767 (= e!69462 (contains!829 (t!5699 (ite c!18302 (Cons!1612 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) Nil!1613) Nil!1613)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!29421 res!53071) b!106766))

(assert (= (and b!106766 (not res!53070)) b!106767))

(declare-fun m!119851 () Bool)

(assert (=> d!29421 m!119851))

(assert (=> d!29421 m!118571))

(declare-fun m!119853 () Bool)

(assert (=> d!29421 m!119853))

(assert (=> b!106767 m!118571))

(declare-fun m!119855 () Bool)

(assert (=> b!106767 m!119855))

(assert (=> b!106093 d!29421))

(declare-fun bm!11297 () Bool)

(declare-fun call!11303 () Bool)

(declare-fun lt!54806 () ListLongMap!1575)

(assert (=> bm!11297 (= call!11303 (contains!828 lt!54806 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11298 () Bool)

(declare-fun call!11306 () ListLongMap!1575)

(declare-fun call!11301 () ListLongMap!1575)

(assert (=> bm!11298 (= call!11306 call!11301)))

(declare-fun b!106768 () Bool)

(declare-fun e!69465 () Unit!3232)

(declare-fun lt!54822 () Unit!3232)

(assert (=> b!106768 (= e!69465 lt!54822)))

(declare-fun lt!54804 () ListLongMap!1575)

(assert (=> b!106768 (= lt!54804 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (_2!1217 lt!54050)) (_values!2565 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050)) (extraKeys!2387 (_2!1217 lt!54050)) (zeroValue!2457 (_2!1217 lt!54050)) (minValue!2457 (_2!1217 lt!54050)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1217 lt!54050))))))

(declare-fun lt!54814 () (_ BitVec 64))

(assert (=> b!106768 (= lt!54814 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54802 () (_ BitVec 64))

(assert (=> b!106768 (= lt!54802 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000))))

(declare-fun lt!54817 () Unit!3232)

(assert (=> b!106768 (= lt!54817 (addStillContains!74 lt!54804 lt!54814 (zeroValue!2457 (_2!1217 lt!54050)) lt!54802))))

(assert (=> b!106768 (contains!828 (+!144 lt!54804 (tuple2!2411 lt!54814 (zeroValue!2457 (_2!1217 lt!54050)))) lt!54802)))

(declare-fun lt!54816 () Unit!3232)

(assert (=> b!106768 (= lt!54816 lt!54817)))

(declare-fun lt!54819 () ListLongMap!1575)

(assert (=> b!106768 (= lt!54819 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (_2!1217 lt!54050)) (_values!2565 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050)) (extraKeys!2387 (_2!1217 lt!54050)) (zeroValue!2457 (_2!1217 lt!54050)) (minValue!2457 (_2!1217 lt!54050)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1217 lt!54050))))))

(declare-fun lt!54803 () (_ BitVec 64))

(assert (=> b!106768 (= lt!54803 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54801 () (_ BitVec 64))

(assert (=> b!106768 (= lt!54801 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000))))

(declare-fun lt!54820 () Unit!3232)

(assert (=> b!106768 (= lt!54820 (addApplyDifferent!74 lt!54819 lt!54803 (minValue!2457 (_2!1217 lt!54050)) lt!54801))))

(assert (=> b!106768 (= (apply!98 (+!144 lt!54819 (tuple2!2411 lt!54803 (minValue!2457 (_2!1217 lt!54050)))) lt!54801) (apply!98 lt!54819 lt!54801))))

(declare-fun lt!54813 () Unit!3232)

(assert (=> b!106768 (= lt!54813 lt!54820)))

(declare-fun lt!54811 () ListLongMap!1575)

(assert (=> b!106768 (= lt!54811 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (_2!1217 lt!54050)) (_values!2565 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050)) (extraKeys!2387 (_2!1217 lt!54050)) (zeroValue!2457 (_2!1217 lt!54050)) (minValue!2457 (_2!1217 lt!54050)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1217 lt!54050))))))

(declare-fun lt!54815 () (_ BitVec 64))

(assert (=> b!106768 (= lt!54815 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54805 () (_ BitVec 64))

(assert (=> b!106768 (= lt!54805 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000))))

(declare-fun lt!54812 () Unit!3232)

(assert (=> b!106768 (= lt!54812 (addApplyDifferent!74 lt!54811 lt!54815 (zeroValue!2457 (_2!1217 lt!54050)) lt!54805))))

(assert (=> b!106768 (= (apply!98 (+!144 lt!54811 (tuple2!2411 lt!54815 (zeroValue!2457 (_2!1217 lt!54050)))) lt!54805) (apply!98 lt!54811 lt!54805))))

(declare-fun lt!54821 () Unit!3232)

(assert (=> b!106768 (= lt!54821 lt!54812)))

(declare-fun lt!54807 () ListLongMap!1575)

(assert (=> b!106768 (= lt!54807 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (_2!1217 lt!54050)) (_values!2565 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050)) (extraKeys!2387 (_2!1217 lt!54050)) (zeroValue!2457 (_2!1217 lt!54050)) (minValue!2457 (_2!1217 lt!54050)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1217 lt!54050))))))

(declare-fun lt!54809 () (_ BitVec 64))

(assert (=> b!106768 (= lt!54809 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54818 () (_ BitVec 64))

(assert (=> b!106768 (= lt!54818 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000))))

(assert (=> b!106768 (= lt!54822 (addApplyDifferent!74 lt!54807 lt!54809 (minValue!2457 (_2!1217 lt!54050)) lt!54818))))

(assert (=> b!106768 (= (apply!98 (+!144 lt!54807 (tuple2!2411 lt!54809 (minValue!2457 (_2!1217 lt!54050)))) lt!54818) (apply!98 lt!54807 lt!54818))))

(declare-fun bm!11299 () Bool)

(declare-fun call!11300 () ListLongMap!1575)

(assert (=> bm!11299 (= call!11301 call!11300)))

(declare-fun bm!11300 () Bool)

(declare-fun call!11304 () Bool)

(assert (=> bm!11300 (= call!11304 (contains!828 lt!54806 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106769 () Bool)

(declare-fun res!53078 () Bool)

(declare-fun e!69464 () Bool)

(assert (=> b!106769 (=> (not res!53078) (not e!69464))))

(declare-fun e!69473 () Bool)

(assert (=> b!106769 (= res!53078 e!69473)))

(declare-fun res!53079 () Bool)

(assert (=> b!106769 (=> res!53079 e!69473)))

(declare-fun e!69470 () Bool)

(assert (=> b!106769 (= res!53079 (not e!69470))))

(declare-fun res!53076 () Bool)

(assert (=> b!106769 (=> (not res!53076) (not e!69470))))

(assert (=> b!106769 (= res!53076 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))))))

(declare-fun b!106770 () Bool)

(declare-fun e!69474 () ListLongMap!1575)

(declare-fun call!11305 () ListLongMap!1575)

(assert (=> b!106770 (= e!69474 (+!144 call!11305 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (_2!1217 lt!54050)))))))

(declare-fun bm!11301 () Bool)

(declare-fun call!11302 () ListLongMap!1575)

(assert (=> bm!11301 (= call!11302 call!11305)))

(declare-fun b!106771 () Bool)

(declare-fun e!69475 () Bool)

(assert (=> b!106771 (= e!69464 e!69475)))

(declare-fun c!18689 () Bool)

(assert (=> b!106771 (= c!18689 (not (= (bvand (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106772 () Bool)

(declare-fun e!69472 () Bool)

(assert (=> b!106772 (= e!69472 (= (apply!98 lt!54806 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 (_2!1217 lt!54050))))))

(declare-fun b!106773 () Bool)

(declare-fun Unit!3291 () Unit!3232)

(assert (=> b!106773 (= e!69465 Unit!3291)))

(declare-fun b!106774 () Bool)

(assert (=> b!106774 (= e!69475 (not call!11303))))

(declare-fun b!106775 () Bool)

(declare-fun e!69476 () Bool)

(declare-fun e!69469 () Bool)

(assert (=> b!106775 (= e!69476 e!69469)))

(declare-fun res!53074 () Bool)

(assert (=> b!106775 (= res!53074 call!11304)))

(assert (=> b!106775 (=> (not res!53074) (not e!69469))))

(declare-fun d!29423 () Bool)

(assert (=> d!29423 e!69464))

(declare-fun res!53077 () Bool)

(assert (=> d!29423 (=> (not res!53077) (not e!69464))))

(assert (=> d!29423 (= res!53077 (or (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))))))))

(declare-fun lt!54808 () ListLongMap!1575)

(assert (=> d!29423 (= lt!54806 lt!54808)))

(declare-fun lt!54810 () Unit!3232)

(assert (=> d!29423 (= lt!54810 e!69465)))

(declare-fun c!18686 () Bool)

(declare-fun e!69471 () Bool)

(assert (=> d!29423 (= c!18686 e!69471)))

(declare-fun res!53080 () Bool)

(assert (=> d!29423 (=> (not res!53080) (not e!69471))))

(assert (=> d!29423 (= res!53080 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))))))

(assert (=> d!29423 (= lt!54808 e!69474)))

(declare-fun c!18688 () Bool)

(assert (=> d!29423 (= c!18688 (and (not (= (bvand (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29423 (validMask!0 (mask!6728 (_2!1217 lt!54050)))))

(assert (=> d!29423 (= (getCurrentListMap!489 (_keys!4288 (_2!1217 lt!54050)) (_values!2565 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050)) (extraKeys!2387 (_2!1217 lt!54050)) (zeroValue!2457 (_2!1217 lt!54050)) (minValue!2457 (_2!1217 lt!54050)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1217 lt!54050))) lt!54806)))

(declare-fun b!106776 () Bool)

(assert (=> b!106776 (= e!69470 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000)))))

(declare-fun b!106777 () Bool)

(assert (=> b!106777 (= e!69476 (not call!11304))))

(declare-fun b!106778 () Bool)

(declare-fun e!69468 () ListLongMap!1575)

(assert (=> b!106778 (= e!69468 call!11302)))

(declare-fun b!106779 () Bool)

(declare-fun e!69467 () Bool)

(assert (=> b!106779 (= e!69467 (= (apply!98 lt!54806 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (_values!2565 (_2!1217 lt!54050))) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 (_2!1217 lt!54050)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106779 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_values!2565 (_2!1217 lt!54050)))))))

(assert (=> b!106779 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))))))

(declare-fun b!106780 () Bool)

(assert (=> b!106780 (= e!69469 (= (apply!98 lt!54806 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 (_2!1217 lt!54050))))))

(declare-fun bm!11302 () Bool)

(assert (=> bm!11302 (= call!11300 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (_2!1217 lt!54050)) (_values!2565 (_2!1217 lt!54050)) (mask!6728 (_2!1217 lt!54050)) (extraKeys!2387 (_2!1217 lt!54050)) (zeroValue!2457 (_2!1217 lt!54050)) (minValue!2457 (_2!1217 lt!54050)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1217 lt!54050))))))

(declare-fun b!106781 () Bool)

(assert (=> b!106781 (= e!69474 e!69468)))

(declare-fun c!18691 () Bool)

(assert (=> b!106781 (= c!18691 (and (not (= (bvand (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106782 () Bool)

(declare-fun res!53075 () Bool)

(assert (=> b!106782 (=> (not res!53075) (not e!69464))))

(assert (=> b!106782 (= res!53075 e!69476)))

(declare-fun c!18690 () Bool)

(assert (=> b!106782 (= c!18690 (not (= (bvand (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106783 () Bool)

(declare-fun e!69466 () ListLongMap!1575)

(assert (=> b!106783 (= e!69466 call!11302)))

(declare-fun bm!11303 () Bool)

(assert (=> bm!11303 (= call!11305 (+!144 (ite c!18688 call!11300 (ite c!18691 call!11301 call!11306)) (ite (or c!18688 c!18691) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (_2!1217 lt!54050))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (_2!1217 lt!54050))))))))

(declare-fun b!106784 () Bool)

(declare-fun c!18687 () Bool)

(assert (=> b!106784 (= c!18687 (and (not (= (bvand (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!106784 (= e!69468 e!69466)))

(declare-fun b!106785 () Bool)

(assert (=> b!106785 (= e!69475 e!69472)))

(declare-fun res!53072 () Bool)

(assert (=> b!106785 (= res!53072 call!11303)))

(assert (=> b!106785 (=> (not res!53072) (not e!69472))))

(declare-fun b!106786 () Bool)

(assert (=> b!106786 (= e!69466 call!11306)))

(declare-fun b!106787 () Bool)

(assert (=> b!106787 (= e!69471 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000)))))

(declare-fun b!106788 () Bool)

(assert (=> b!106788 (= e!69473 e!69467)))

(declare-fun res!53073 () Bool)

(assert (=> b!106788 (=> (not res!53073) (not e!69467))))

(assert (=> b!106788 (= res!53073 (contains!828 lt!54806 (select (arr!2063 (_keys!4288 (_2!1217 lt!54050))) #b00000000000000000000000000000000)))))

(assert (=> b!106788 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 (_2!1217 lt!54050)))))))

(assert (= (and d!29423 c!18688) b!106770))

(assert (= (and d!29423 (not c!18688)) b!106781))

(assert (= (and b!106781 c!18691) b!106778))

(assert (= (and b!106781 (not c!18691)) b!106784))

(assert (= (and b!106784 c!18687) b!106783))

(assert (= (and b!106784 (not c!18687)) b!106786))

(assert (= (or b!106783 b!106786) bm!11298))

(assert (= (or b!106778 bm!11298) bm!11299))

(assert (= (or b!106778 b!106783) bm!11301))

(assert (= (or b!106770 bm!11299) bm!11302))

(assert (= (or b!106770 bm!11301) bm!11303))

(assert (= (and d!29423 res!53080) b!106787))

(assert (= (and d!29423 c!18686) b!106768))

(assert (= (and d!29423 (not c!18686)) b!106773))

(assert (= (and d!29423 res!53077) b!106769))

(assert (= (and b!106769 res!53076) b!106776))

(assert (= (and b!106769 (not res!53079)) b!106788))

(assert (= (and b!106788 res!53073) b!106779))

(assert (= (and b!106769 res!53078) b!106782))

(assert (= (and b!106782 c!18690) b!106775))

(assert (= (and b!106782 (not c!18690)) b!106777))

(assert (= (and b!106775 res!53074) b!106780))

(assert (= (or b!106775 b!106777) bm!11300))

(assert (= (and b!106782 res!53075) b!106771))

(assert (= (and b!106771 c!18689) b!106785))

(assert (= (and b!106771 (not c!18689)) b!106774))

(assert (= (and b!106785 res!53072) b!106772))

(assert (= (or b!106785 b!106774) bm!11297))

(declare-fun b_lambda!4773 () Bool)

(assert (=> (not b_lambda!4773) (not b!106779)))

(declare-fun tb!2061 () Bool)

(declare-fun t!5712 () Bool)

(assert (=> (and b!105285 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 (_2!1217 lt!54050))) t!5712) tb!2061))

(declare-fun result!3467 () Bool)

(assert (=> tb!2061 (= result!3467 tp_is_empty!2679)))

(assert (=> b!106779 t!5712))

(declare-fun b_and!6591 () Bool)

(assert (= b_and!6587 (and (=> t!5712 result!3467) b_and!6591)))

(declare-fun t!5714 () Bool)

(declare-fun tb!2063 () Bool)

(assert (=> (and b!105288 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (_2!1217 lt!54050))) t!5714) tb!2063))

(declare-fun result!3469 () Bool)

(assert (= result!3469 result!3467))

(assert (=> b!106779 t!5714))

(declare-fun b_and!6593 () Bool)

(assert (= b_and!6589 (and (=> t!5714 result!3469) b_and!6593)))

(declare-fun m!119857 () Bool)

(assert (=> d!29423 m!119857))

(assert (=> b!106779 m!118645))

(declare-fun m!119859 () Bool)

(assert (=> b!106779 m!119859))

(declare-fun m!119861 () Bool)

(assert (=> b!106779 m!119861))

(declare-fun m!119863 () Bool)

(assert (=> b!106779 m!119863))

(assert (=> b!106779 m!119861))

(declare-fun m!119865 () Bool)

(assert (=> b!106779 m!119865))

(assert (=> b!106779 m!118645))

(assert (=> b!106779 m!119863))

(declare-fun m!119867 () Bool)

(assert (=> b!106780 m!119867))

(declare-fun m!119869 () Bool)

(assert (=> bm!11300 m!119869))

(declare-fun m!119871 () Bool)

(assert (=> bm!11303 m!119871))

(declare-fun m!119873 () Bool)

(assert (=> b!106772 m!119873))

(assert (=> b!106776 m!118645))

(assert (=> b!106776 m!118645))

(assert (=> b!106776 m!118647))

(declare-fun m!119875 () Bool)

(assert (=> bm!11302 m!119875))

(assert (=> b!106788 m!118645))

(assert (=> b!106788 m!118645))

(declare-fun m!119877 () Bool)

(assert (=> b!106788 m!119877))

(assert (=> b!106787 m!118645))

(assert (=> b!106787 m!118645))

(assert (=> b!106787 m!118647))

(declare-fun m!119879 () Bool)

(assert (=> b!106770 m!119879))

(declare-fun m!119881 () Bool)

(assert (=> bm!11297 m!119881))

(declare-fun m!119883 () Bool)

(assert (=> b!106768 m!119883))

(declare-fun m!119885 () Bool)

(assert (=> b!106768 m!119885))

(declare-fun m!119887 () Bool)

(assert (=> b!106768 m!119887))

(declare-fun m!119889 () Bool)

(assert (=> b!106768 m!119889))

(declare-fun m!119891 () Bool)

(assert (=> b!106768 m!119891))

(declare-fun m!119893 () Bool)

(assert (=> b!106768 m!119893))

(declare-fun m!119895 () Bool)

(assert (=> b!106768 m!119895))

(declare-fun m!119897 () Bool)

(assert (=> b!106768 m!119897))

(assert (=> b!106768 m!119875))

(declare-fun m!119899 () Bool)

(assert (=> b!106768 m!119899))

(declare-fun m!119901 () Bool)

(assert (=> b!106768 m!119901))

(declare-fun m!119903 () Bool)

(assert (=> b!106768 m!119903))

(assert (=> b!106768 m!119885))

(assert (=> b!106768 m!118645))

(assert (=> b!106768 m!119901))

(declare-fun m!119905 () Bool)

(assert (=> b!106768 m!119905))

(assert (=> b!106768 m!119889))

(declare-fun m!119907 () Bool)

(assert (=> b!106768 m!119907))

(assert (=> b!106768 m!119895))

(declare-fun m!119909 () Bool)

(assert (=> b!106768 m!119909))

(declare-fun m!119911 () Bool)

(assert (=> b!106768 m!119911))

(assert (=> d!28997 d!29423))

(declare-fun d!29425 () Bool)

(assert (=> d!29425 (= ($colon$colon!81 e!68859 (ite c!18410 (h!2210 (toList!803 (+!144 lt!53805 lt!53814))) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815)))) (Cons!1613 (ite c!18410 (h!2210 (toList!803 (+!144 lt!53805 lt!53814))) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))) e!68859))))

(assert (=> bm!11169 d!29425))

(declare-fun d!29427 () Bool)

(assert (=> d!29427 (= (map!1286 (_2!1217 lt!54341)) (getCurrentListMap!489 (_keys!4288 (_2!1217 lt!54341)) (_values!2565 (_2!1217 lt!54341)) (mask!6728 (_2!1217 lt!54341)) (extraKeys!2387 (_2!1217 lt!54341)) (zeroValue!2457 (_2!1217 lt!54341)) (minValue!2457 (_2!1217 lt!54341)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1217 lt!54341))))))

(declare-fun bs!4394 () Bool)

(assert (= bs!4394 d!29427))

(declare-fun m!119913 () Bool)

(assert (=> bs!4394 m!119913))

(assert (=> b!106013 d!29427))

(declare-fun d!29429 () Bool)

(declare-fun e!69477 () Bool)

(assert (=> d!29429 e!69477))

(declare-fun res!53081 () Bool)

(assert (=> d!29429 (=> (not res!53081) (not e!69477))))

(declare-fun lt!54824 () ListLongMap!1575)

(assert (=> d!29429 (= res!53081 (contains!828 lt!54824 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun lt!54826 () List!1617)

(assert (=> d!29429 (= lt!54824 (ListLongMap!1576 lt!54826))))

(declare-fun lt!54825 () Unit!3232)

(declare-fun lt!54823 () Unit!3232)

(assert (=> d!29429 (= lt!54825 lt!54823)))

(assert (=> d!29429 (= (getValueByKey!156 lt!54826 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!29429 (= lt!54823 (lemmaContainsTupThenGetReturnValue!72 lt!54826 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!29429 (= lt!54826 (insertStrictlySorted!75 (toList!803 (map!1286 newMap!16)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!29429 (= (+!144 (map!1286 newMap!16) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) lt!54824)))

(declare-fun b!106789 () Bool)

(declare-fun res!53082 () Bool)

(assert (=> b!106789 (=> (not res!53082) (not e!69477))))

(assert (=> b!106789 (= res!53082 (= (getValueByKey!156 (toList!803 lt!54824) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!106790 () Bool)

(assert (=> b!106790 (= e!69477 (contains!830 (toList!803 lt!54824) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(assert (= (and d!29429 res!53081) b!106789))

(assert (= (and b!106789 res!53082) b!106790))

(declare-fun m!119915 () Bool)

(assert (=> d!29429 m!119915))

(declare-fun m!119917 () Bool)

(assert (=> d!29429 m!119917))

(declare-fun m!119919 () Bool)

(assert (=> d!29429 m!119919))

(declare-fun m!119921 () Bool)

(assert (=> d!29429 m!119921))

(declare-fun m!119923 () Bool)

(assert (=> b!106789 m!119923))

(declare-fun m!119925 () Bool)

(assert (=> b!106790 m!119925))

(assert (=> b!106013 d!29429))

(assert (=> b!106013 d!28815))

(declare-fun d!29431 () Bool)

(assert (=> d!29431 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4395 () Bool)

(assert (= bs!4395 d!29431))

(assert (=> bs!4395 m!118241))

(declare-fun m!119927 () Bool)

(assert (=> bs!4395 m!119927))

(assert (=> b!105937 d!29431))

(assert (=> b!105937 d!29325))

(declare-fun d!29433 () Bool)

(assert (=> d!29433 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4396 () Bool)

(assert (= bs!4396 d!29433))

(assert (=> bs!4396 m!118535))

(declare-fun m!119929 () Bool)

(assert (=> bs!4396 m!119929))

(assert (=> b!106060 d!29433))

(declare-fun b!106793 () Bool)

(declare-fun e!69479 () Option!162)

(assert (=> b!106793 (= e!69479 (getValueByKey!156 (t!5700 (toList!803 lt!53878)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106791 () Bool)

(declare-fun e!69478 () Option!162)

(assert (=> b!106791 (= e!69478 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53878)))))))

(declare-fun d!29435 () Bool)

(declare-fun c!18692 () Bool)

(assert (=> d!29435 (= c!18692 (and ((_ is Cons!1613) (toList!803 lt!53878)) (= (_1!1216 (h!2210 (toList!803 lt!53878))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29435 (= (getValueByKey!156 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000) e!69478)))

(declare-fun b!106794 () Bool)

(assert (=> b!106794 (= e!69479 None!160)))

(declare-fun b!106792 () Bool)

(assert (=> b!106792 (= e!69478 e!69479)))

(declare-fun c!18693 () Bool)

(assert (=> b!106792 (= c!18693 (and ((_ is Cons!1613) (toList!803 lt!53878)) (not (= (_1!1216 (h!2210 (toList!803 lt!53878))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!29435 c!18692) b!106791))

(assert (= (and d!29435 (not c!18692)) b!106792))

(assert (= (and b!106792 c!18693) b!106793))

(assert (= (and b!106792 (not c!18693)) b!106794))

(declare-fun m!119931 () Bool)

(assert (=> b!106793 m!119931))

(assert (=> b!106060 d!29435))

(declare-fun d!29437 () Bool)

(assert (=> d!29437 (= ($colon$colon!81 e!68968 (ite c!18459 (h!2210 (toList!803 lt!53805)) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814)))) (Cons!1613 (ite c!18459 (h!2210 (toList!803 lt!53805)) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))) e!68968))))

(assert (=> bm!11189 d!29437))

(assert (=> b!106086 d!29073))

(declare-fun d!29439 () Bool)

(declare-fun e!69480 () Bool)

(assert (=> d!29439 e!69480))

(declare-fun res!53083 () Bool)

(assert (=> d!29439 (=> (not res!53083) (not e!69480))))

(declare-fun lt!54828 () ListLongMap!1575)

(assert (=> d!29439 (= res!53083 (contains!828 lt!54828 (_1!1216 (tuple2!2411 lt!54393 lt!54389))))))

(declare-fun lt!54830 () List!1617)

(assert (=> d!29439 (= lt!54828 (ListLongMap!1576 lt!54830))))

(declare-fun lt!54829 () Unit!3232)

(declare-fun lt!54827 () Unit!3232)

(assert (=> d!29439 (= lt!54829 lt!54827)))

(assert (=> d!29439 (= (getValueByKey!156 lt!54830 (_1!1216 (tuple2!2411 lt!54393 lt!54389))) (Some!161 (_2!1216 (tuple2!2411 lt!54393 lt!54389))))))

(assert (=> d!29439 (= lt!54827 (lemmaContainsTupThenGetReturnValue!72 lt!54830 (_1!1216 (tuple2!2411 lt!54393 lt!54389)) (_2!1216 (tuple2!2411 lt!54393 lt!54389))))))

(assert (=> d!29439 (= lt!54830 (insertStrictlySorted!75 (toList!803 lt!54395) (_1!1216 (tuple2!2411 lt!54393 lt!54389)) (_2!1216 (tuple2!2411 lt!54393 lt!54389))))))

(assert (=> d!29439 (= (+!144 lt!54395 (tuple2!2411 lt!54393 lt!54389)) lt!54828)))

(declare-fun b!106795 () Bool)

(declare-fun res!53084 () Bool)

(assert (=> b!106795 (=> (not res!53084) (not e!69480))))

(assert (=> b!106795 (= res!53084 (= (getValueByKey!156 (toList!803 lt!54828) (_1!1216 (tuple2!2411 lt!54393 lt!54389))) (Some!161 (_2!1216 (tuple2!2411 lt!54393 lt!54389)))))))

(declare-fun b!106796 () Bool)

(assert (=> b!106796 (= e!69480 (contains!830 (toList!803 lt!54828) (tuple2!2411 lt!54393 lt!54389)))))

(assert (= (and d!29439 res!53083) b!106795))

(assert (= (and b!106795 res!53084) b!106796))

(declare-fun m!119933 () Bool)

(assert (=> d!29439 m!119933))

(declare-fun m!119935 () Bool)

(assert (=> d!29439 m!119935))

(declare-fun m!119937 () Bool)

(assert (=> d!29439 m!119937))

(declare-fun m!119939 () Bool)

(assert (=> d!29439 m!119939))

(declare-fun m!119941 () Bool)

(assert (=> b!106795 m!119941))

(declare-fun m!119943 () Bool)

(assert (=> b!106796 m!119943))

(assert (=> b!106086 d!29439))

(declare-fun d!29441 () Bool)

(declare-fun e!69481 () Bool)

(assert (=> d!29441 e!69481))

(declare-fun res!53085 () Bool)

(assert (=> d!29441 (=> (not res!53085) (not e!69481))))

(declare-fun lt!54832 () ListLongMap!1575)

(assert (=> d!29441 (= res!53085 (contains!828 lt!54832 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!54834 () List!1617)

(assert (=> d!29441 (= lt!54832 (ListLongMap!1576 lt!54834))))

(declare-fun lt!54833 () Unit!3232)

(declare-fun lt!54831 () Unit!3232)

(assert (=> d!29441 (= lt!54833 lt!54831)))

(assert (=> d!29441 (= (getValueByKey!156 lt!54834 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29441 (= lt!54831 (lemmaContainsTupThenGetReturnValue!72 lt!54834 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29441 (= lt!54834 (insertStrictlySorted!75 (toList!803 call!11213) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29441 (= (+!144 call!11213 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!54832)))

(declare-fun b!106797 () Bool)

(declare-fun res!53086 () Bool)

(assert (=> b!106797 (=> (not res!53086) (not e!69481))))

(assert (=> b!106797 (= res!53086 (= (getValueByKey!156 (toList!803 lt!54832) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!106798 () Bool)

(assert (=> b!106798 (= e!69481 (contains!830 (toList!803 lt!54832) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29441 res!53085) b!106797))

(assert (= (and b!106797 res!53086) b!106798))

(declare-fun m!119945 () Bool)

(assert (=> d!29441 m!119945))

(declare-fun m!119947 () Bool)

(assert (=> d!29441 m!119947))

(declare-fun m!119949 () Bool)

(assert (=> d!29441 m!119949))

(declare-fun m!119951 () Bool)

(assert (=> d!29441 m!119951))

(declare-fun m!119953 () Bool)

(assert (=> b!106797 m!119953))

(declare-fun m!119955 () Bool)

(assert (=> b!106798 m!119955))

(assert (=> b!106086 d!29441))

(declare-fun d!29443 () Bool)

(assert (=> d!29443 (not (contains!828 (+!144 lt!54395 (tuple2!2411 lt!54393 lt!54389)) lt!54394))))

(declare-fun lt!54835 () Unit!3232)

(assert (=> d!29443 (= lt!54835 (choose!661 lt!54395 lt!54393 lt!54389 lt!54394))))

(declare-fun e!69482 () Bool)

(assert (=> d!29443 e!69482))

(declare-fun res!53087 () Bool)

(assert (=> d!29443 (=> (not res!53087) (not e!69482))))

(assert (=> d!29443 (= res!53087 (not (contains!828 lt!54395 lt!54394)))))

(assert (=> d!29443 (= (addStillNotContains!46 lt!54395 lt!54393 lt!54389 lt!54394) lt!54835)))

(declare-fun b!106799 () Bool)

(assert (=> b!106799 (= e!69482 (not (= lt!54393 lt!54394)))))

(assert (= (and d!29443 res!53087) b!106799))

(assert (=> d!29443 m!118563))

(assert (=> d!29443 m!118563))

(assert (=> d!29443 m!118565))

(declare-fun m!119957 () Bool)

(assert (=> d!29443 m!119957))

(declare-fun m!119959 () Bool)

(assert (=> d!29443 m!119959))

(assert (=> b!106086 d!29443))

(declare-fun d!29445 () Bool)

(declare-fun e!69484 () Bool)

(assert (=> d!29445 e!69484))

(declare-fun res!53088 () Bool)

(assert (=> d!29445 (=> res!53088 e!69484)))

(declare-fun lt!54838 () Bool)

(assert (=> d!29445 (= res!53088 (not lt!54838))))

(declare-fun lt!54836 () Bool)

(assert (=> d!29445 (= lt!54838 lt!54836)))

(declare-fun lt!54837 () Unit!3232)

(declare-fun e!69483 () Unit!3232)

(assert (=> d!29445 (= lt!54837 e!69483)))

(declare-fun c!18694 () Bool)

(assert (=> d!29445 (= c!18694 lt!54836)))

(assert (=> d!29445 (= lt!54836 (containsKey!160 (toList!803 (+!144 lt!54395 (tuple2!2411 lt!54393 lt!54389))) lt!54394))))

(assert (=> d!29445 (= (contains!828 (+!144 lt!54395 (tuple2!2411 lt!54393 lt!54389)) lt!54394) lt!54838)))

(declare-fun b!106800 () Bool)

(declare-fun lt!54839 () Unit!3232)

(assert (=> b!106800 (= e!69483 lt!54839)))

(assert (=> b!106800 (= lt!54839 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (+!144 lt!54395 (tuple2!2411 lt!54393 lt!54389))) lt!54394))))

(assert (=> b!106800 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!54395 (tuple2!2411 lt!54393 lt!54389))) lt!54394))))

(declare-fun b!106801 () Bool)

(declare-fun Unit!3292 () Unit!3232)

(assert (=> b!106801 (= e!69483 Unit!3292)))

(declare-fun b!106802 () Bool)

(assert (=> b!106802 (= e!69484 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!54395 (tuple2!2411 lt!54393 lt!54389))) lt!54394)))))

(assert (= (and d!29445 c!18694) b!106800))

(assert (= (and d!29445 (not c!18694)) b!106801))

(assert (= (and d!29445 (not res!53088)) b!106802))

(declare-fun m!119961 () Bool)

(assert (=> d!29445 m!119961))

(declare-fun m!119963 () Bool)

(assert (=> b!106800 m!119963))

(declare-fun m!119965 () Bool)

(assert (=> b!106800 m!119965))

(assert (=> b!106800 m!119965))

(declare-fun m!119967 () Bool)

(assert (=> b!106800 m!119967))

(assert (=> b!106802 m!119965))

(assert (=> b!106802 m!119965))

(assert (=> b!106802 m!119967))

(assert (=> b!106086 d!29445))

(declare-fun bm!11304 () Bool)

(declare-fun call!11307 () Bool)

(assert (=> bm!11304 (= call!11307 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4288 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun d!29447 () Bool)

(declare-fun res!53090 () Bool)

(declare-fun e!69485 () Bool)

(assert (=> d!29447 (=> res!53090 e!69485)))

(assert (=> d!29447 (= res!53090 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29447 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992)))) e!69485)))

(declare-fun b!106803 () Bool)

(declare-fun e!69486 () Bool)

(assert (=> b!106803 (= e!69486 call!11307)))

(declare-fun b!106804 () Bool)

(assert (=> b!106804 (= e!69485 e!69486)))

(declare-fun c!18695 () Bool)

(assert (=> b!106804 (= c!18695 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!106805 () Bool)

(declare-fun e!69487 () Bool)

(assert (=> b!106805 (= e!69486 e!69487)))

(declare-fun lt!54840 () (_ BitVec 64))

(assert (=> b!106805 (= lt!54840 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!54841 () Unit!3232)

(assert (=> b!106805 (= lt!54841 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) lt!54840 #b00000000000000000000000000000000))))

(assert (=> b!106805 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) lt!54840 #b00000000000000000000000000000000)))

(declare-fun lt!54842 () Unit!3232)

(assert (=> b!106805 (= lt!54842 lt!54841)))

(declare-fun res!53089 () Bool)

(assert (=> b!106805 (= res!53089 (= (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000) (_keys!4288 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992)))) (Found!259 #b00000000000000000000000000000000)))))

(assert (=> b!106805 (=> (not res!53089) (not e!69487))))

(declare-fun b!106806 () Bool)

(assert (=> b!106806 (= e!69487 call!11307)))

(assert (= (and d!29447 (not res!53090)) b!106804))

(assert (= (and b!106804 c!18695) b!106805))

(assert (= (and b!106804 (not c!18695)) b!106803))

(assert (= (and b!106805 res!53089) b!106806))

(assert (= (or b!106806 b!106803) bm!11304))

(declare-fun m!119969 () Bool)

(assert (=> bm!11304 m!119969))

(assert (=> b!106804 m!119343))

(assert (=> b!106804 m!119343))

(assert (=> b!106804 m!119345))

(assert (=> b!106805 m!119343))

(declare-fun m!119971 () Bool)

(assert (=> b!106805 m!119971))

(declare-fun m!119973 () Bool)

(assert (=> b!106805 m!119973))

(assert (=> b!106805 m!119343))

(declare-fun m!119975 () Bool)

(assert (=> b!106805 m!119975))

(assert (=> b!105960 d!29447))

(declare-fun d!29449 () Bool)

(declare-fun c!18696 () Bool)

(assert (=> d!29449 (= c!18696 ((_ is Nil!1614) (toList!803 lt!53906)))))

(declare-fun e!69488 () (InoxSet tuple2!2410))

(assert (=> d!29449 (= (content!109 (toList!803 lt!53906)) e!69488)))

(declare-fun b!106807 () Bool)

(assert (=> b!106807 (= e!69488 ((as const (Array tuple2!2410 Bool)) false))))

(declare-fun b!106808 () Bool)

(assert (=> b!106808 (= e!69488 ((_ map or) (store ((as const (Array tuple2!2410 Bool)) false) (h!2210 (toList!803 lt!53906)) true) (content!109 (t!5700 (toList!803 lt!53906)))))))

(assert (= (and d!29449 c!18696) b!106807))

(assert (= (and d!29449 (not c!18696)) b!106808))

(declare-fun m!119977 () Bool)

(assert (=> b!106808 m!119977))

(declare-fun m!119979 () Bool)

(assert (=> b!106808 m!119979))

(assert (=> d!28931 d!29449))

(declare-fun b!106811 () Bool)

(declare-fun e!69490 () Option!162)

(assert (=> b!106811 (= e!69490 (getValueByKey!156 (t!5700 (toList!803 lt!54255)) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106809 () Bool)

(declare-fun e!69489 () Option!162)

(assert (=> b!106809 (= e!69489 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54255)))))))

(declare-fun d!29451 () Bool)

(declare-fun c!18697 () Bool)

(assert (=> d!29451 (= c!18697 (and ((_ is Cons!1613) (toList!803 lt!54255)) (= (_1!1216 (h!2210 (toList!803 lt!54255))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29451 (= (getValueByKey!156 (toList!803 lt!54255) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69489)))

(declare-fun b!106812 () Bool)

(assert (=> b!106812 (= e!69490 None!160)))

(declare-fun b!106810 () Bool)

(assert (=> b!106810 (= e!69489 e!69490)))

(declare-fun c!18698 () Bool)

(assert (=> b!106810 (= c!18698 (and ((_ is Cons!1613) (toList!803 lt!54255)) (not (= (_1!1216 (h!2210 (toList!803 lt!54255))) (_1!1216 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29451 c!18697) b!106809))

(assert (= (and d!29451 (not c!18697)) b!106810))

(assert (= (and b!106810 c!18698) b!106811))

(assert (= (and b!106810 (not c!18698)) b!106812))

(declare-fun m!119981 () Bool)

(assert (=> b!106811 m!119981))

(assert (=> b!105964 d!29451))

(declare-fun b!106813 () Bool)

(declare-fun e!69494 () List!1617)

(declare-fun e!69492 () List!1617)

(assert (=> b!106813 (= e!69494 e!69492)))

(declare-fun c!18700 () Bool)

(assert (=> b!106813 (= c!18700 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53805))) (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53805)))) (_1!1216 lt!53815))))))

(declare-fun b!106814 () Bool)

(declare-fun call!11308 () List!1617)

(assert (=> b!106814 (= e!69494 call!11308)))

(declare-fun b!106816 () Bool)

(declare-fun e!69495 () List!1617)

(declare-fun call!11310 () List!1617)

(assert (=> b!106816 (= e!69495 call!11310)))

(declare-fun b!106817 () Bool)

(declare-fun c!18701 () Bool)

(assert (=> b!106817 (= c!18701 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53805))) (bvsgt (_1!1216 (h!2210 (t!5700 (toList!803 lt!53805)))) (_1!1216 lt!53815))))))

(assert (=> b!106817 (= e!69492 e!69495)))

(declare-fun bm!11305 () Bool)

(declare-fun call!11309 () List!1617)

(assert (=> bm!11305 (= call!11310 call!11309)))

(declare-fun b!106818 () Bool)

(declare-fun e!69493 () List!1617)

(assert (=> b!106818 (= e!69493 (insertStrictlySorted!75 (t!5700 (t!5700 (toList!803 lt!53805))) (_1!1216 lt!53815) (_2!1216 lt!53815)))))

(declare-fun b!106819 () Bool)

(assert (=> b!106819 (= e!69495 call!11310)))

(declare-fun b!106820 () Bool)

(declare-fun res!53092 () Bool)

(declare-fun e!69491 () Bool)

(assert (=> b!106820 (=> (not res!53092) (not e!69491))))

(declare-fun lt!54843 () List!1617)

(assert (=> b!106820 (= res!53092 (containsKey!160 lt!54843 (_1!1216 lt!53815)))))

(declare-fun b!106821 () Bool)

(assert (=> b!106821 (= e!69491 (contains!830 lt!54843 (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun b!106822 () Bool)

(assert (=> b!106822 (= e!69493 (ite c!18700 (t!5700 (t!5700 (toList!803 lt!53805))) (ite c!18701 (Cons!1613 (h!2210 (t!5700 (toList!803 lt!53805))) (t!5700 (t!5700 (toList!803 lt!53805)))) Nil!1614)))))

(declare-fun d!29453 () Bool)

(assert (=> d!29453 e!69491))

(declare-fun res!53091 () Bool)

(assert (=> d!29453 (=> (not res!53091) (not e!69491))))

(assert (=> d!29453 (= res!53091 (isStrictlySorted!309 lt!54843))))

(assert (=> d!29453 (= lt!54843 e!69494)))

(declare-fun c!18699 () Bool)

(assert (=> d!29453 (= c!18699 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53805))) (bvslt (_1!1216 (h!2210 (t!5700 (toList!803 lt!53805)))) (_1!1216 lt!53815))))))

(assert (=> d!29453 (isStrictlySorted!309 (t!5700 (toList!803 lt!53805)))))

(assert (=> d!29453 (= (insertStrictlySorted!75 (t!5700 (toList!803 lt!53805)) (_1!1216 lt!53815) (_2!1216 lt!53815)) lt!54843)))

(declare-fun b!106815 () Bool)

(assert (=> b!106815 (= e!69492 call!11309)))

(declare-fun bm!11306 () Bool)

(assert (=> bm!11306 (= call!11308 ($colon$colon!81 e!69493 (ite c!18699 (h!2210 (t!5700 (toList!803 lt!53805))) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815)))))))

(declare-fun c!18702 () Bool)

(assert (=> bm!11306 (= c!18702 c!18699)))

(declare-fun bm!11307 () Bool)

(assert (=> bm!11307 (= call!11309 call!11308)))

(assert (= (and d!29453 c!18699) b!106814))

(assert (= (and d!29453 (not c!18699)) b!106813))

(assert (= (and b!106813 c!18700) b!106815))

(assert (= (and b!106813 (not c!18700)) b!106817))

(assert (= (and b!106817 c!18701) b!106819))

(assert (= (and b!106817 (not c!18701)) b!106816))

(assert (= (or b!106819 b!106816) bm!11305))

(assert (= (or b!106815 bm!11305) bm!11307))

(assert (= (or b!106814 bm!11307) bm!11306))

(assert (= (and bm!11306 c!18702) b!106818))

(assert (= (and bm!11306 (not c!18702)) b!106822))

(assert (= (and d!29453 res!53091) b!106820))

(assert (= (and b!106820 res!53092) b!106821))

(declare-fun m!119983 () Bool)

(assert (=> b!106818 m!119983))

(declare-fun m!119985 () Bool)

(assert (=> b!106821 m!119985))

(declare-fun m!119987 () Bool)

(assert (=> d!29453 m!119987))

(assert (=> d!29453 m!118853))

(declare-fun m!119989 () Bool)

(assert (=> bm!11306 m!119989))

(declare-fun m!119991 () Bool)

(assert (=> b!106820 m!119991))

(assert (=> b!105884 d!29453))

(assert (=> b!106027 d!28897))

(declare-fun d!29455 () Bool)

(declare-fun lt!54844 () Bool)

(assert (=> d!29455 (= lt!54844 (select (content!109 (t!5700 (toList!803 lt!53891))) lt!53815))))

(declare-fun e!69497 () Bool)

(assert (=> d!29455 (= lt!54844 e!69497)))

(declare-fun res!53093 () Bool)

(assert (=> d!29455 (=> (not res!53093) (not e!69497))))

(assert (=> d!29455 (= res!53093 ((_ is Cons!1613) (t!5700 (toList!803 lt!53891))))))

(assert (=> d!29455 (= (contains!830 (t!5700 (toList!803 lt!53891)) lt!53815) lt!54844)))

(declare-fun b!106823 () Bool)

(declare-fun e!69496 () Bool)

(assert (=> b!106823 (= e!69497 e!69496)))

(declare-fun res!53094 () Bool)

(assert (=> b!106823 (=> res!53094 e!69496)))

(assert (=> b!106823 (= res!53094 (= (h!2210 (t!5700 (toList!803 lt!53891))) lt!53815))))

(declare-fun b!106824 () Bool)

(assert (=> b!106824 (= e!69496 (contains!830 (t!5700 (t!5700 (toList!803 lt!53891))) lt!53815))))

(assert (= (and d!29455 res!53093) b!106823))

(assert (= (and b!106823 (not res!53094)) b!106824))

(assert (=> d!29455 m!119329))

(declare-fun m!119993 () Bool)

(assert (=> d!29455 m!119993))

(declare-fun m!119995 () Bool)

(assert (=> b!106824 m!119995))

(assert (=> b!105725 d!29455))

(declare-fun d!29457 () Bool)

(declare-fun c!18703 () Bool)

(assert (=> d!29457 (= c!18703 ((_ is Nil!1614) (toList!803 lt!53895)))))

(declare-fun e!69498 () (InoxSet tuple2!2410))

(assert (=> d!29457 (= (content!109 (toList!803 lt!53895)) e!69498)))

(declare-fun b!106825 () Bool)

(assert (=> b!106825 (= e!69498 ((as const (Array tuple2!2410 Bool)) false))))

(declare-fun b!106826 () Bool)

(assert (=> b!106826 (= e!69498 ((_ map or) (store ((as const (Array tuple2!2410 Bool)) false) (h!2210 (toList!803 lt!53895)) true) (content!109 (t!5700 (toList!803 lt!53895)))))))

(assert (= (and d!29457 c!18703) b!106825))

(assert (= (and d!29457 (not c!18703)) b!106826))

(declare-fun m!119997 () Bool)

(assert (=> b!106826 m!119997))

(declare-fun m!119999 () Bool)

(assert (=> b!106826 m!119999))

(assert (=> d!28883 d!29457))

(declare-fun d!29459 () Bool)

(declare-fun lt!54845 () Bool)

(assert (=> d!29459 (= lt!54845 (select (content!109 (toList!803 lt!54093)) (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69500 () Bool)

(assert (=> d!29459 (= lt!54845 e!69500)))

(declare-fun res!53095 () Bool)

(assert (=> d!29459 (=> (not res!53095) (not e!69500))))

(assert (=> d!29459 (= res!53095 ((_ is Cons!1613) (toList!803 lt!54093)))))

(assert (=> d!29459 (= (contains!830 (toList!803 lt!54093) (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54845)))

(declare-fun b!106827 () Bool)

(declare-fun e!69499 () Bool)

(assert (=> b!106827 (= e!69500 e!69499)))

(declare-fun res!53096 () Bool)

(assert (=> b!106827 (=> res!53096 e!69499)))

(assert (=> b!106827 (= res!53096 (= (h!2210 (toList!803 lt!54093)) (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106828 () Bool)

(assert (=> b!106828 (= e!69499 (contains!830 (t!5700 (toList!803 lt!54093)) (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29459 res!53095) b!106827))

(assert (= (and b!106827 (not res!53096)) b!106828))

(declare-fun m!120001 () Bool)

(assert (=> d!29459 m!120001))

(declare-fun m!120003 () Bool)

(assert (=> d!29459 m!120003))

(declare-fun m!120005 () Bool)

(assert (=> b!106828 m!120005))

(assert (=> b!105677 d!29459))

(assert (=> d!28927 d!28923))

(assert (=> d!28927 d!28921))

(declare-fun d!29461 () Bool)

(assert (=> d!29461 (not (contains!828 (+!144 lt!53881 (tuple2!2411 lt!53879 lt!53875)) lt!53880))))

(assert (=> d!29461 true))

(declare-fun _$36!319 () Unit!3232)

(assert (=> d!29461 (= (choose!661 lt!53881 lt!53879 lt!53875 lt!53880) _$36!319)))

(declare-fun bs!4397 () Bool)

(assert (= bs!4397 d!29461))

(assert (=> bs!4397 m!117633))

(assert (=> bs!4397 m!117633))

(assert (=> bs!4397 m!117635))

(assert (=> d!28927 d!29461))

(declare-fun d!29463 () Bool)

(declare-fun e!69502 () Bool)

(assert (=> d!29463 e!69502))

(declare-fun res!53097 () Bool)

(assert (=> d!29463 (=> res!53097 e!69502)))

(declare-fun lt!54848 () Bool)

(assert (=> d!29463 (= res!53097 (not lt!54848))))

(declare-fun lt!54846 () Bool)

(assert (=> d!29463 (= lt!54848 lt!54846)))

(declare-fun lt!54847 () Unit!3232)

(declare-fun e!69501 () Unit!3232)

(assert (=> d!29463 (= lt!54847 e!69501)))

(declare-fun c!18704 () Bool)

(assert (=> d!29463 (= c!18704 lt!54846)))

(assert (=> d!29463 (= lt!54846 (containsKey!160 (toList!803 lt!53881) lt!53880))))

(assert (=> d!29463 (= (contains!828 lt!53881 lt!53880) lt!54848)))

(declare-fun b!106830 () Bool)

(declare-fun lt!54849 () Unit!3232)

(assert (=> b!106830 (= e!69501 lt!54849)))

(assert (=> b!106830 (= lt!54849 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53881) lt!53880))))

(assert (=> b!106830 (isDefined!109 (getValueByKey!156 (toList!803 lt!53881) lt!53880))))

(declare-fun b!106831 () Bool)

(declare-fun Unit!3293 () Unit!3232)

(assert (=> b!106831 (= e!69501 Unit!3293)))

(declare-fun b!106832 () Bool)

(assert (=> b!106832 (= e!69502 (isDefined!109 (getValueByKey!156 (toList!803 lt!53881) lt!53880)))))

(assert (= (and d!29463 c!18704) b!106830))

(assert (= (and d!29463 (not c!18704)) b!106831))

(assert (= (and d!29463 (not res!53097)) b!106832))

(declare-fun m!120007 () Bool)

(assert (=> d!29463 m!120007))

(declare-fun m!120009 () Bool)

(assert (=> b!106830 m!120009))

(declare-fun m!120011 () Bool)

(assert (=> b!106830 m!120011))

(assert (=> b!106830 m!120011))

(declare-fun m!120013 () Bool)

(assert (=> b!106830 m!120013))

(assert (=> b!106832 m!120011))

(assert (=> b!106832 m!120011))

(assert (=> b!106832 m!120013))

(assert (=> d!28927 d!29463))

(declare-fun d!29465 () Bool)

(assert (=> d!29465 (= (apply!98 lt!54193 lt!54187) (get!1334 (getValueByKey!156 (toList!803 lt!54193) lt!54187)))))

(declare-fun bs!4398 () Bool)

(assert (= bs!4398 d!29465))

(declare-fun m!120015 () Bool)

(assert (=> bs!4398 m!120015))

(assert (=> bs!4398 m!120015))

(declare-fun m!120017 () Bool)

(assert (=> bs!4398 m!120017))

(assert (=> b!105847 d!29465))

(declare-fun d!29467 () Bool)

(assert (=> d!29467 (= (apply!98 lt!54189 lt!54200) (get!1334 (getValueByKey!156 (toList!803 lt!54189) lt!54200)))))

(declare-fun bs!4399 () Bool)

(assert (= bs!4399 d!29467))

(declare-fun m!120019 () Bool)

(assert (=> bs!4399 m!120019))

(assert (=> bs!4399 m!120019))

(declare-fun m!120021 () Bool)

(assert (=> bs!4399 m!120021))

(assert (=> b!105847 d!29467))

(declare-fun d!29469 () Bool)

(assert (=> d!29469 (= (apply!98 (+!144 lt!54189 (tuple2!2411 lt!54191 (minValue!2457 newMap!16))) lt!54200) (apply!98 lt!54189 lt!54200))))

(declare-fun lt!54850 () Unit!3232)

(assert (=> d!29469 (= lt!54850 (choose!654 lt!54189 lt!54191 (minValue!2457 newMap!16) lt!54200))))

(declare-fun e!69503 () Bool)

(assert (=> d!29469 e!69503))

(declare-fun res!53098 () Bool)

(assert (=> d!29469 (=> (not res!53098) (not e!69503))))

(assert (=> d!29469 (= res!53098 (contains!828 lt!54189 lt!54200))))

(assert (=> d!29469 (= (addApplyDifferent!74 lt!54189 lt!54191 (minValue!2457 newMap!16) lt!54200) lt!54850)))

(declare-fun b!106833 () Bool)

(assert (=> b!106833 (= e!69503 (not (= lt!54200 lt!54191)))))

(assert (= (and d!29469 res!53098) b!106833))

(declare-fun m!120023 () Bool)

(assert (=> d!29469 m!120023))

(assert (=> d!29469 m!118185))

(assert (=> d!29469 m!118199))

(assert (=> d!29469 m!118185))

(declare-fun m!120025 () Bool)

(assert (=> d!29469 m!120025))

(assert (=> d!29469 m!118183))

(assert (=> b!105847 d!29469))

(declare-fun d!29471 () Bool)

(assert (=> d!29471 (= (apply!98 (+!144 lt!54189 (tuple2!2411 lt!54191 (minValue!2457 newMap!16))) lt!54200) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!54189 (tuple2!2411 lt!54191 (minValue!2457 newMap!16)))) lt!54200)))))

(declare-fun bs!4400 () Bool)

(assert (= bs!4400 d!29471))

(declare-fun m!120027 () Bool)

(assert (=> bs!4400 m!120027))

(assert (=> bs!4400 m!120027))

(declare-fun m!120029 () Bool)

(assert (=> bs!4400 m!120029))

(assert (=> b!105847 d!29471))

(declare-fun d!29473 () Bool)

(declare-fun e!69504 () Bool)

(assert (=> d!29473 e!69504))

(declare-fun res!53099 () Bool)

(assert (=> d!29473 (=> (not res!53099) (not e!69504))))

(declare-fun lt!54852 () ListLongMap!1575)

(assert (=> d!29473 (= res!53099 (contains!828 lt!54852 (_1!1216 (tuple2!2411 lt!54191 (minValue!2457 newMap!16)))))))

(declare-fun lt!54854 () List!1617)

(assert (=> d!29473 (= lt!54852 (ListLongMap!1576 lt!54854))))

(declare-fun lt!54853 () Unit!3232)

(declare-fun lt!54851 () Unit!3232)

(assert (=> d!29473 (= lt!54853 lt!54851)))

(assert (=> d!29473 (= (getValueByKey!156 lt!54854 (_1!1216 (tuple2!2411 lt!54191 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54191 (minValue!2457 newMap!16)))))))

(assert (=> d!29473 (= lt!54851 (lemmaContainsTupThenGetReturnValue!72 lt!54854 (_1!1216 (tuple2!2411 lt!54191 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54191 (minValue!2457 newMap!16)))))))

(assert (=> d!29473 (= lt!54854 (insertStrictlySorted!75 (toList!803 lt!54189) (_1!1216 (tuple2!2411 lt!54191 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54191 (minValue!2457 newMap!16)))))))

(assert (=> d!29473 (= (+!144 lt!54189 (tuple2!2411 lt!54191 (minValue!2457 newMap!16))) lt!54852)))

(declare-fun b!106834 () Bool)

(declare-fun res!53100 () Bool)

(assert (=> b!106834 (=> (not res!53100) (not e!69504))))

(assert (=> b!106834 (= res!53100 (= (getValueByKey!156 (toList!803 lt!54852) (_1!1216 (tuple2!2411 lt!54191 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54191 (minValue!2457 newMap!16))))))))

(declare-fun b!106835 () Bool)

(assert (=> b!106835 (= e!69504 (contains!830 (toList!803 lt!54852) (tuple2!2411 lt!54191 (minValue!2457 newMap!16))))))

(assert (= (and d!29473 res!53099) b!106834))

(assert (= (and b!106834 res!53100) b!106835))

(declare-fun m!120031 () Bool)

(assert (=> d!29473 m!120031))

(declare-fun m!120033 () Bool)

(assert (=> d!29473 m!120033))

(declare-fun m!120035 () Bool)

(assert (=> d!29473 m!120035))

(declare-fun m!120037 () Bool)

(assert (=> d!29473 m!120037))

(declare-fun m!120039 () Bool)

(assert (=> b!106834 m!120039))

(declare-fun m!120041 () Bool)

(assert (=> b!106835 m!120041))

(assert (=> b!105847 d!29473))

(declare-fun d!29475 () Bool)

(declare-fun e!69505 () Bool)

(assert (=> d!29475 e!69505))

(declare-fun res!53101 () Bool)

(assert (=> d!29475 (=> (not res!53101) (not e!69505))))

(declare-fun lt!54856 () ListLongMap!1575)

(assert (=> d!29475 (= res!53101 (contains!828 lt!54856 (_1!1216 (tuple2!2411 lt!54185 (minValue!2457 newMap!16)))))))

(declare-fun lt!54858 () List!1617)

(assert (=> d!29475 (= lt!54856 (ListLongMap!1576 lt!54858))))

(declare-fun lt!54857 () Unit!3232)

(declare-fun lt!54855 () Unit!3232)

(assert (=> d!29475 (= lt!54857 lt!54855)))

(assert (=> d!29475 (= (getValueByKey!156 lt!54858 (_1!1216 (tuple2!2411 lt!54185 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54185 (minValue!2457 newMap!16)))))))

(assert (=> d!29475 (= lt!54855 (lemmaContainsTupThenGetReturnValue!72 lt!54858 (_1!1216 (tuple2!2411 lt!54185 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54185 (minValue!2457 newMap!16)))))))

(assert (=> d!29475 (= lt!54858 (insertStrictlySorted!75 (toList!803 lt!54201) (_1!1216 (tuple2!2411 lt!54185 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54185 (minValue!2457 newMap!16)))))))

(assert (=> d!29475 (= (+!144 lt!54201 (tuple2!2411 lt!54185 (minValue!2457 newMap!16))) lt!54856)))

(declare-fun b!106836 () Bool)

(declare-fun res!53102 () Bool)

(assert (=> b!106836 (=> (not res!53102) (not e!69505))))

(assert (=> b!106836 (= res!53102 (= (getValueByKey!156 (toList!803 lt!54856) (_1!1216 (tuple2!2411 lt!54185 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54185 (minValue!2457 newMap!16))))))))

(declare-fun b!106837 () Bool)

(assert (=> b!106837 (= e!69505 (contains!830 (toList!803 lt!54856) (tuple2!2411 lt!54185 (minValue!2457 newMap!16))))))

(assert (= (and d!29475 res!53101) b!106836))

(assert (= (and b!106836 res!53102) b!106837))

(declare-fun m!120043 () Bool)

(assert (=> d!29475 m!120043))

(declare-fun m!120045 () Bool)

(assert (=> d!29475 m!120045))

(declare-fun m!120047 () Bool)

(assert (=> d!29475 m!120047))

(declare-fun m!120049 () Bool)

(assert (=> d!29475 m!120049))

(declare-fun m!120051 () Bool)

(assert (=> b!106836 m!120051))

(declare-fun m!120053 () Bool)

(assert (=> b!106837 m!120053))

(assert (=> b!105847 d!29475))

(declare-fun b!106838 () Bool)

(declare-fun e!69511 () Bool)

(declare-fun e!69509 () Bool)

(assert (=> b!106838 (= e!69511 e!69509)))

(assert (=> b!106838 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun res!53104 () Bool)

(declare-fun lt!54862 () ListLongMap!1575)

(assert (=> b!106838 (= res!53104 (contains!828 lt!54862 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106838 (=> (not res!53104) (not e!69509))))

(declare-fun b!106839 () Bool)

(declare-fun e!69510 () ListLongMap!1575)

(declare-fun call!11311 () ListLongMap!1575)

(assert (=> b!106839 (= e!69510 call!11311)))

(declare-fun d!29477 () Bool)

(declare-fun e!69507 () Bool)

(assert (=> d!29477 e!69507))

(declare-fun res!53103 () Bool)

(assert (=> d!29477 (=> (not res!53103) (not e!69507))))

(assert (=> d!29477 (= res!53103 (not (contains!828 lt!54862 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!69508 () ListLongMap!1575)

(assert (=> d!29477 (= lt!54862 e!69508)))

(declare-fun c!18708 () Bool)

(assert (=> d!29477 (= c!18708 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29477 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29477 (= (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54862)))

(declare-fun b!106840 () Bool)

(assert (=> b!106840 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (=> b!106840 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2319 (_values!2565 newMap!16))))))

(assert (=> b!106840 (= e!69509 (= (apply!98 lt!54862 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1330 (select (arr!2064 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106841 () Bool)

(declare-fun e!69506 () Bool)

(assert (=> b!106841 (= e!69506 (= lt!54862 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16))))))

(declare-fun b!106842 () Bool)

(assert (=> b!106842 (= e!69508 e!69510)))

(declare-fun c!18706 () Bool)

(assert (=> b!106842 (= c!18706 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11308 () Bool)

(assert (=> bm!11308 (= call!11311 (getCurrentListMapNoExtraKeys!110 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16)))))

(declare-fun b!106843 () Bool)

(assert (=> b!106843 (= e!69508 (ListLongMap!1576 Nil!1614))))

(declare-fun b!106844 () Bool)

(assert (=> b!106844 (= e!69511 e!69506)))

(declare-fun c!18705 () Bool)

(assert (=> b!106844 (= c!18705 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!106845 () Bool)

(declare-fun lt!54861 () Unit!3232)

(declare-fun lt!54860 () Unit!3232)

(assert (=> b!106845 (= lt!54861 lt!54860)))

(declare-fun lt!54863 () (_ BitVec 64))

(declare-fun lt!54865 () ListLongMap!1575)

(declare-fun lt!54859 () V!3219)

(declare-fun lt!54864 () (_ BitVec 64))

(assert (=> b!106845 (not (contains!828 (+!144 lt!54865 (tuple2!2411 lt!54863 lt!54859)) lt!54864))))

(assert (=> b!106845 (= lt!54860 (addStillNotContains!46 lt!54865 lt!54863 lt!54859 lt!54864))))

(assert (=> b!106845 (= lt!54864 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106845 (= lt!54859 (get!1330 (select (arr!2064 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106845 (= lt!54863 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106845 (= lt!54865 call!11311)))

(assert (=> b!106845 (= e!69510 (+!144 call!11311 (tuple2!2411 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (get!1330 (select (arr!2064 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106846 () Bool)

(declare-fun res!53105 () Bool)

(assert (=> b!106846 (=> (not res!53105) (not e!69507))))

(assert (=> b!106846 (= res!53105 (not (contains!828 lt!54862 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106847 () Bool)

(assert (=> b!106847 (= e!69506 (isEmpty!370 lt!54862))))

(declare-fun b!106848 () Bool)

(declare-fun e!69512 () Bool)

(assert (=> b!106848 (= e!69512 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106848 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!106849 () Bool)

(assert (=> b!106849 (= e!69507 e!69511)))

(declare-fun c!18707 () Bool)

(assert (=> b!106849 (= c!18707 e!69512)))

(declare-fun res!53106 () Bool)

(assert (=> b!106849 (=> (not res!53106) (not e!69512))))

(assert (=> b!106849 (= res!53106 (bvslt #b00000000000000000000000000000000 (size!2318 (_keys!4288 newMap!16))))))

(assert (= (and d!29477 c!18708) b!106843))

(assert (= (and d!29477 (not c!18708)) b!106842))

(assert (= (and b!106842 c!18706) b!106845))

(assert (= (and b!106842 (not c!18706)) b!106839))

(assert (= (or b!106845 b!106839) bm!11308))

(assert (= (and d!29477 res!53103) b!106846))

(assert (= (and b!106846 res!53105) b!106849))

(assert (= (and b!106849 res!53106) b!106848))

(assert (= (and b!106849 c!18707) b!106838))

(assert (= (and b!106849 (not c!18707)) b!106844))

(assert (= (and b!106838 res!53104) b!106840))

(assert (= (and b!106844 c!18705) b!106841))

(assert (= (and b!106844 (not c!18705)) b!106847))

(declare-fun b_lambda!4775 () Bool)

(assert (=> (not b_lambda!4775) (not b!106840)))

(assert (=> b!106840 t!5708))

(declare-fun b_and!6595 () Bool)

(assert (= b_and!6591 (and (=> t!5708 result!3463) b_and!6595)))

(assert (=> b!106840 t!5710))

(declare-fun b_and!6597 () Bool)

(assert (= b_and!6593 (and (=> t!5710 result!3465) b_and!6597)))

(declare-fun b_lambda!4777 () Bool)

(assert (=> (not b_lambda!4777) (not b!106845)))

(assert (=> b!106845 t!5708))

(declare-fun b_and!6599 () Bool)

(assert (= b_and!6595 (and (=> t!5708 result!3463) b_and!6599)))

(assert (=> b!106845 t!5710))

(declare-fun b_and!6601 () Bool)

(assert (= b_and!6597 (and (=> t!5710 result!3465) b_and!6601)))

(declare-fun m!120055 () Bool)

(assert (=> bm!11308 m!120055))

(assert (=> b!106840 m!118103))

(declare-fun m!120057 () Bool)

(assert (=> b!106840 m!120057))

(assert (=> b!106840 m!118151))

(assert (=> b!106840 m!118151))

(assert (=> b!106840 m!118149))

(assert (=> b!106840 m!118153))

(assert (=> b!106840 m!118149))

(assert (=> b!106840 m!118103))

(assert (=> b!106838 m!118103))

(assert (=> b!106838 m!118103))

(declare-fun m!120059 () Bool)

(assert (=> b!106838 m!120059))

(declare-fun m!120061 () Bool)

(assert (=> b!106847 m!120061))

(assert (=> b!106842 m!118103))

(assert (=> b!106842 m!118103))

(assert (=> b!106842 m!118163))

(declare-fun m!120063 () Bool)

(assert (=> d!29477 m!120063))

(assert (=> d!29477 m!117933))

(assert (=> b!106841 m!120055))

(assert (=> b!106848 m!118103))

(assert (=> b!106848 m!118103))

(assert (=> b!106848 m!118163))

(declare-fun m!120065 () Bool)

(assert (=> b!106846 m!120065))

(declare-fun m!120067 () Bool)

(assert (=> b!106845 m!120067))

(assert (=> b!106845 m!120067))

(declare-fun m!120069 () Bool)

(assert (=> b!106845 m!120069))

(assert (=> b!106845 m!118151))

(assert (=> b!106845 m!118151))

(assert (=> b!106845 m!118149))

(assert (=> b!106845 m!118153))

(assert (=> b!106845 m!118149))

(assert (=> b!106845 m!118103))

(declare-fun m!120071 () Bool)

(assert (=> b!106845 m!120071))

(declare-fun m!120073 () Bool)

(assert (=> b!106845 m!120073))

(assert (=> b!105847 d!29477))

(declare-fun d!29479 () Bool)

(assert (=> d!29479 (= (apply!98 (+!144 lt!54193 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16))) lt!54187) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!54193 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16)))) lt!54187)))))

(declare-fun bs!4401 () Bool)

(assert (= bs!4401 d!29479))

(declare-fun m!120075 () Bool)

(assert (=> bs!4401 m!120075))

(assert (=> bs!4401 m!120075))

(declare-fun m!120077 () Bool)

(assert (=> bs!4401 m!120077))

(assert (=> b!105847 d!29479))

(declare-fun d!29481 () Bool)

(declare-fun e!69514 () Bool)

(assert (=> d!29481 e!69514))

(declare-fun res!53107 () Bool)

(assert (=> d!29481 (=> res!53107 e!69514)))

(declare-fun lt!54868 () Bool)

(assert (=> d!29481 (= res!53107 (not lt!54868))))

(declare-fun lt!54866 () Bool)

(assert (=> d!29481 (= lt!54868 lt!54866)))

(declare-fun lt!54867 () Unit!3232)

(declare-fun e!69513 () Unit!3232)

(assert (=> d!29481 (= lt!54867 e!69513)))

(declare-fun c!18709 () Bool)

(assert (=> d!29481 (= c!18709 lt!54866)))

(assert (=> d!29481 (= lt!54866 (containsKey!160 (toList!803 (+!144 lt!54186 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16)))) lt!54184))))

(assert (=> d!29481 (= (contains!828 (+!144 lt!54186 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16))) lt!54184) lt!54868)))

(declare-fun b!106850 () Bool)

(declare-fun lt!54869 () Unit!3232)

(assert (=> b!106850 (= e!69513 lt!54869)))

(assert (=> b!106850 (= lt!54869 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (+!144 lt!54186 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16)))) lt!54184))))

(assert (=> b!106850 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!54186 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16)))) lt!54184))))

(declare-fun b!106851 () Bool)

(declare-fun Unit!3294 () Unit!3232)

(assert (=> b!106851 (= e!69513 Unit!3294)))

(declare-fun b!106852 () Bool)

(assert (=> b!106852 (= e!69514 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!54186 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16)))) lt!54184)))))

(assert (= (and d!29481 c!18709) b!106850))

(assert (= (and d!29481 (not c!18709)) b!106851))

(assert (= (and d!29481 (not res!53107)) b!106852))

(declare-fun m!120079 () Bool)

(assert (=> d!29481 m!120079))

(declare-fun m!120081 () Bool)

(assert (=> b!106850 m!120081))

(declare-fun m!120083 () Bool)

(assert (=> b!106850 m!120083))

(assert (=> b!106850 m!120083))

(declare-fun m!120085 () Bool)

(assert (=> b!106850 m!120085))

(assert (=> b!106852 m!120083))

(assert (=> b!106852 m!120083))

(assert (=> b!106852 m!120085))

(assert (=> b!105847 d!29481))

(declare-fun d!29483 () Bool)

(assert (=> d!29483 (= (apply!98 (+!144 lt!54193 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16))) lt!54187) (apply!98 lt!54193 lt!54187))))

(declare-fun lt!54870 () Unit!3232)

(assert (=> d!29483 (= lt!54870 (choose!654 lt!54193 lt!54197 (zeroValue!2457 newMap!16) lt!54187))))

(declare-fun e!69515 () Bool)

(assert (=> d!29483 e!69515))

(declare-fun res!53108 () Bool)

(assert (=> d!29483 (=> (not res!53108) (not e!69515))))

(assert (=> d!29483 (= res!53108 (contains!828 lt!54193 lt!54187))))

(assert (=> d!29483 (= (addApplyDifferent!74 lt!54193 lt!54197 (zeroValue!2457 newMap!16) lt!54187) lt!54870)))

(declare-fun b!106853 () Bool)

(assert (=> b!106853 (= e!69515 (not (= lt!54187 lt!54197)))))

(assert (= (and d!29483 res!53108) b!106853))

(declare-fun m!120087 () Bool)

(assert (=> d!29483 m!120087))

(assert (=> d!29483 m!118175))

(assert (=> d!29483 m!118177))

(assert (=> d!29483 m!118175))

(declare-fun m!120089 () Bool)

(assert (=> d!29483 m!120089))

(assert (=> d!29483 m!118189))

(assert (=> b!105847 d!29483))

(declare-fun d!29485 () Bool)

(assert (=> d!29485 (= (apply!98 lt!54201 lt!54183) (get!1334 (getValueByKey!156 (toList!803 lt!54201) lt!54183)))))

(declare-fun bs!4402 () Bool)

(assert (= bs!4402 d!29485))

(declare-fun m!120091 () Bool)

(assert (=> bs!4402 m!120091))

(assert (=> bs!4402 m!120091))

(declare-fun m!120093 () Bool)

(assert (=> bs!4402 m!120093))

(assert (=> b!105847 d!29485))

(declare-fun d!29487 () Bool)

(assert (=> d!29487 (contains!828 (+!144 lt!54186 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16))) lt!54184)))

(declare-fun lt!54871 () Unit!3232)

(assert (=> d!29487 (= lt!54871 (choose!655 lt!54186 lt!54196 (zeroValue!2457 newMap!16) lt!54184))))

(assert (=> d!29487 (contains!828 lt!54186 lt!54184)))

(assert (=> d!29487 (= (addStillContains!74 lt!54186 lt!54196 (zeroValue!2457 newMap!16) lt!54184) lt!54871)))

(declare-fun bs!4403 () Bool)

(assert (= bs!4403 d!29487))

(assert (=> bs!4403 m!118179))

(assert (=> bs!4403 m!118179))

(assert (=> bs!4403 m!118197))

(declare-fun m!120095 () Bool)

(assert (=> bs!4403 m!120095))

(declare-fun m!120097 () Bool)

(assert (=> bs!4403 m!120097))

(assert (=> b!105847 d!29487))

(declare-fun d!29489 () Bool)

(assert (=> d!29489 (= (apply!98 (+!144 lt!54201 (tuple2!2411 lt!54185 (minValue!2457 newMap!16))) lt!54183) (apply!98 lt!54201 lt!54183))))

(declare-fun lt!54872 () Unit!3232)

(assert (=> d!29489 (= lt!54872 (choose!654 lt!54201 lt!54185 (minValue!2457 newMap!16) lt!54183))))

(declare-fun e!69516 () Bool)

(assert (=> d!29489 e!69516))

(declare-fun res!53109 () Bool)

(assert (=> d!29489 (=> (not res!53109) (not e!69516))))

(assert (=> d!29489 (= res!53109 (contains!828 lt!54201 lt!54183))))

(assert (=> d!29489 (= (addApplyDifferent!74 lt!54201 lt!54185 (minValue!2457 newMap!16) lt!54183) lt!54872)))

(declare-fun b!106854 () Bool)

(assert (=> b!106854 (= e!69516 (not (= lt!54183 lt!54185)))))

(assert (= (and d!29489 res!53109) b!106854))

(declare-fun m!120099 () Bool)

(assert (=> d!29489 m!120099))

(assert (=> d!29489 m!118191))

(assert (=> d!29489 m!118195))

(assert (=> d!29489 m!118191))

(declare-fun m!120101 () Bool)

(assert (=> d!29489 m!120101))

(assert (=> d!29489 m!118201))

(assert (=> b!105847 d!29489))

(declare-fun d!29491 () Bool)

(declare-fun e!69517 () Bool)

(assert (=> d!29491 e!69517))

(declare-fun res!53110 () Bool)

(assert (=> d!29491 (=> (not res!53110) (not e!69517))))

(declare-fun lt!54874 () ListLongMap!1575)

(assert (=> d!29491 (= res!53110 (contains!828 lt!54874 (_1!1216 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16)))))))

(declare-fun lt!54876 () List!1617)

(assert (=> d!29491 (= lt!54874 (ListLongMap!1576 lt!54876))))

(declare-fun lt!54875 () Unit!3232)

(declare-fun lt!54873 () Unit!3232)

(assert (=> d!29491 (= lt!54875 lt!54873)))

(assert (=> d!29491 (= (getValueByKey!156 lt!54876 (_1!1216 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29491 (= lt!54873 (lemmaContainsTupThenGetReturnValue!72 lt!54876 (_1!1216 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29491 (= lt!54876 (insertStrictlySorted!75 (toList!803 lt!54186) (_1!1216 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29491 (= (+!144 lt!54186 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16))) lt!54874)))

(declare-fun b!106855 () Bool)

(declare-fun res!53111 () Bool)

(assert (=> b!106855 (=> (not res!53111) (not e!69517))))

(assert (=> b!106855 (= res!53111 (= (getValueByKey!156 (toList!803 lt!54874) (_1!1216 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16))))))))

(declare-fun b!106856 () Bool)

(assert (=> b!106856 (= e!69517 (contains!830 (toList!803 lt!54874) (tuple2!2411 lt!54196 (zeroValue!2457 newMap!16))))))

(assert (= (and d!29491 res!53110) b!106855))

(assert (= (and b!106855 res!53111) b!106856))

(declare-fun m!120103 () Bool)

(assert (=> d!29491 m!120103))

(declare-fun m!120105 () Bool)

(assert (=> d!29491 m!120105))

(declare-fun m!120107 () Bool)

(assert (=> d!29491 m!120107))

(declare-fun m!120109 () Bool)

(assert (=> d!29491 m!120109))

(declare-fun m!120111 () Bool)

(assert (=> b!106855 m!120111))

(declare-fun m!120113 () Bool)

(assert (=> b!106856 m!120113))

(assert (=> b!105847 d!29491))

(declare-fun d!29493 () Bool)

(assert (=> d!29493 (= (apply!98 (+!144 lt!54201 (tuple2!2411 lt!54185 (minValue!2457 newMap!16))) lt!54183) (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!54201 (tuple2!2411 lt!54185 (minValue!2457 newMap!16)))) lt!54183)))))

(declare-fun bs!4404 () Bool)

(assert (= bs!4404 d!29493))

(declare-fun m!120115 () Bool)

(assert (=> bs!4404 m!120115))

(assert (=> bs!4404 m!120115))

(declare-fun m!120117 () Bool)

(assert (=> bs!4404 m!120117))

(assert (=> b!105847 d!29493))

(declare-fun d!29495 () Bool)

(declare-fun e!69518 () Bool)

(assert (=> d!29495 e!69518))

(declare-fun res!53112 () Bool)

(assert (=> d!29495 (=> (not res!53112) (not e!69518))))

(declare-fun lt!54878 () ListLongMap!1575)

(assert (=> d!29495 (= res!53112 (contains!828 lt!54878 (_1!1216 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16)))))))

(declare-fun lt!54880 () List!1617)

(assert (=> d!29495 (= lt!54878 (ListLongMap!1576 lt!54880))))

(declare-fun lt!54879 () Unit!3232)

(declare-fun lt!54877 () Unit!3232)

(assert (=> d!29495 (= lt!54879 lt!54877)))

(assert (=> d!29495 (= (getValueByKey!156 lt!54880 (_1!1216 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29495 (= lt!54877 (lemmaContainsTupThenGetReturnValue!72 lt!54880 (_1!1216 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29495 (= lt!54880 (insertStrictlySorted!75 (toList!803 lt!54193) (_1!1216 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16))) (_2!1216 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29495 (= (+!144 lt!54193 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16))) lt!54878)))

(declare-fun b!106857 () Bool)

(declare-fun res!53113 () Bool)

(assert (=> b!106857 (=> (not res!53113) (not e!69518))))

(assert (=> b!106857 (= res!53113 (= (getValueByKey!156 (toList!803 lt!54878) (_1!1216 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16))))))))

(declare-fun b!106858 () Bool)

(assert (=> b!106858 (= e!69518 (contains!830 (toList!803 lt!54878) (tuple2!2411 lt!54197 (zeroValue!2457 newMap!16))))))

(assert (= (and d!29495 res!53112) b!106857))

(assert (= (and b!106857 res!53113) b!106858))

(declare-fun m!120119 () Bool)

(assert (=> d!29495 m!120119))

(declare-fun m!120121 () Bool)

(assert (=> d!29495 m!120121))

(declare-fun m!120123 () Bool)

(assert (=> d!29495 m!120123))

(declare-fun m!120125 () Bool)

(assert (=> d!29495 m!120125))

(declare-fun m!120127 () Bool)

(assert (=> b!106857 m!120127))

(declare-fun m!120129 () Bool)

(assert (=> b!106858 m!120129))

(assert (=> b!105847 d!29495))

(declare-fun d!29497 () Bool)

(declare-fun res!53114 () Bool)

(declare-fun e!69519 () Bool)

(assert (=> d!29497 (=> res!53114 e!69519)))

(assert (=> d!29497 (= res!53114 (and ((_ is Cons!1613) (toList!803 lt!53958)) (= (_1!1216 (h!2210 (toList!803 lt!53958))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29497 (= (containsKey!160 (toList!803 lt!53958) #b0000000000000000000000000000000000000000000000000000000000000000) e!69519)))

(declare-fun b!106859 () Bool)

(declare-fun e!69520 () Bool)

(assert (=> b!106859 (= e!69519 e!69520)))

(declare-fun res!53115 () Bool)

(assert (=> b!106859 (=> (not res!53115) (not e!69520))))

(assert (=> b!106859 (= res!53115 (and (or (not ((_ is Cons!1613) (toList!803 lt!53958))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53958))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1613) (toList!803 lt!53958)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53958))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106860 () Bool)

(assert (=> b!106860 (= e!69520 (containsKey!160 (t!5700 (toList!803 lt!53958)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29497 (not res!53114)) b!106859))

(assert (= (and b!106859 res!53115) b!106860))

(declare-fun m!120131 () Bool)

(assert (=> b!106860 m!120131))

(assert (=> d!28867 d!29497))

(declare-fun d!29499 () Bool)

(declare-fun lt!54881 () Bool)

(assert (=> d!29499 (= lt!54881 (select (content!109 (t!5700 (toList!803 lt!53902))) lt!53815))))

(declare-fun e!69522 () Bool)

(assert (=> d!29499 (= lt!54881 e!69522)))

(declare-fun res!53116 () Bool)

(assert (=> d!29499 (=> (not res!53116) (not e!69522))))

(assert (=> d!29499 (= res!53116 ((_ is Cons!1613) (t!5700 (toList!803 lt!53902))))))

(assert (=> d!29499 (= (contains!830 (t!5700 (toList!803 lt!53902)) lt!53815) lt!54881)))

(declare-fun b!106861 () Bool)

(declare-fun e!69521 () Bool)

(assert (=> b!106861 (= e!69522 e!69521)))

(declare-fun res!53117 () Bool)

(assert (=> b!106861 (=> res!53117 e!69521)))

(assert (=> b!106861 (= res!53117 (= (h!2210 (t!5700 (toList!803 lt!53902))) lt!53815))))

(declare-fun b!106862 () Bool)

(assert (=> b!106862 (= e!69521 (contains!830 (t!5700 (t!5700 (toList!803 lt!53902))) lt!53815))))

(assert (= (and d!29499 res!53116) b!106861))

(assert (= (and b!106861 (not res!53117)) b!106862))

(assert (=> d!29499 m!119403))

(declare-fun m!120133 () Bool)

(assert (=> d!29499 m!120133))

(declare-fun m!120135 () Bool)

(assert (=> b!106862 m!120135))

(assert (=> b!105831 d!29499))

(declare-fun b!106865 () Bool)

(declare-fun e!69524 () Option!162)

(assert (=> b!106865 (= e!69524 (getValueByKey!156 (t!5700 (t!5700 lt!53904)) (_1!1216 lt!53815)))))

(declare-fun b!106863 () Bool)

(declare-fun e!69523 () Option!162)

(assert (=> b!106863 (= e!69523 (Some!161 (_2!1216 (h!2210 (t!5700 lt!53904)))))))

(declare-fun d!29501 () Bool)

(declare-fun c!18710 () Bool)

(assert (=> d!29501 (= c!18710 (and ((_ is Cons!1613) (t!5700 lt!53904)) (= (_1!1216 (h!2210 (t!5700 lt!53904))) (_1!1216 lt!53815))))))

(assert (=> d!29501 (= (getValueByKey!156 (t!5700 lt!53904) (_1!1216 lt!53815)) e!69523)))

(declare-fun b!106866 () Bool)

(assert (=> b!106866 (= e!69524 None!160)))

(declare-fun b!106864 () Bool)

(assert (=> b!106864 (= e!69523 e!69524)))

(declare-fun c!18711 () Bool)

(assert (=> b!106864 (= c!18711 (and ((_ is Cons!1613) (t!5700 lt!53904)) (not (= (_1!1216 (h!2210 (t!5700 lt!53904))) (_1!1216 lt!53815)))))))

(assert (= (and d!29501 c!18710) b!106863))

(assert (= (and d!29501 (not c!18710)) b!106864))

(assert (= (and b!106864 c!18711) b!106865))

(assert (= (and b!106864 (not c!18711)) b!106866))

(declare-fun m!120137 () Bool)

(assert (=> b!106865 m!120137))

(assert (=> b!105745 d!29501))

(declare-fun d!29503 () Bool)

(assert (=> d!29503 (= (apply!98 lt!54188 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1334 (getValueByKey!156 (toList!803 lt!54188) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4405 () Bool)

(assert (= bs!4405 d!29503))

(declare-fun m!120139 () Bool)

(assert (=> bs!4405 m!120139))

(assert (=> bs!4405 m!120139))

(declare-fun m!120141 () Bool)

(assert (=> bs!4405 m!120141))

(assert (=> b!105851 d!29503))

(declare-fun d!29505 () Bool)

(declare-fun res!53118 () Bool)

(declare-fun e!69525 () Bool)

(assert (=> d!29505 (=> res!53118 e!69525)))

(assert (=> d!29505 (= res!53118 (and ((_ is Cons!1613) (toList!803 lt!53906)) (= (_1!1216 (h!2210 (toList!803 lt!53906))) (_1!1216 lt!53814))))))

(assert (=> d!29505 (= (containsKey!160 (toList!803 lt!53906) (_1!1216 lt!53814)) e!69525)))

(declare-fun b!106867 () Bool)

(declare-fun e!69526 () Bool)

(assert (=> b!106867 (= e!69525 e!69526)))

(declare-fun res!53119 () Bool)

(assert (=> b!106867 (=> (not res!53119) (not e!69526))))

(assert (=> b!106867 (= res!53119 (and (or (not ((_ is Cons!1613) (toList!803 lt!53906))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53906))) (_1!1216 lt!53814))) ((_ is Cons!1613) (toList!803 lt!53906)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53906))) (_1!1216 lt!53814))))))

(declare-fun b!106868 () Bool)

(assert (=> b!106868 (= e!69526 (containsKey!160 (t!5700 (toList!803 lt!53906)) (_1!1216 lt!53814)))))

(assert (= (and d!29505 (not res!53118)) b!106867))

(assert (= (and b!106867 res!53119) b!106868))

(declare-fun m!120143 () Bool)

(assert (=> b!106868 m!120143))

(assert (=> d!28885 d!29505))

(declare-fun d!29507 () Bool)

(declare-fun res!53120 () Bool)

(declare-fun e!69527 () Bool)

(assert (=> d!29507 (=> res!53120 e!69527)))

(assert (=> d!29507 (= res!53120 (and ((_ is Cons!1613) (toList!803 call!11145)) (= (_1!1216 (h!2210 (toList!803 call!11145))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29507 (= (containsKey!160 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69527)))

(declare-fun b!106869 () Bool)

(declare-fun e!69528 () Bool)

(assert (=> b!106869 (= e!69527 e!69528)))

(declare-fun res!53121 () Bool)

(assert (=> b!106869 (=> (not res!53121) (not e!69528))))

(assert (=> b!106869 (= res!53121 (and (or (not ((_ is Cons!1613) (toList!803 call!11145))) (bvsle (_1!1216 (h!2210 (toList!803 call!11145))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))) ((_ is Cons!1613) (toList!803 call!11145)) (bvslt (_1!1216 (h!2210 (toList!803 call!11145))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(declare-fun b!106870 () Bool)

(assert (=> b!106870 (= e!69528 (containsKey!160 (t!5700 (toList!803 call!11145)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29507 (not res!53120)) b!106869))

(assert (= (and b!106869 res!53121) b!106870))

(assert (=> b!106870 m!117489))

(declare-fun m!120145 () Bool)

(assert (=> b!106870 m!120145))

(assert (=> d!28955 d!29507))

(assert (=> d!29031 d!29153))

(declare-fun d!29509 () Bool)

(assert (=> d!29509 (= (isDefined!109 (getValueByKey!156 (toList!803 lt!53902) (_1!1216 lt!53815))) (not (isEmpty!371 (getValueByKey!156 (toList!803 lt!53902) (_1!1216 lt!53815)))))))

(declare-fun bs!4406 () Bool)

(assert (= bs!4406 d!29509))

(assert (=> bs!4406 m!117683))

(declare-fun m!120147 () Bool)

(assert (=> bs!4406 m!120147))

(assert (=> b!105734 d!29509))

(assert (=> b!105734 d!29005))

(assert (=> d!29003 d!29153))

(assert (=> b!106129 d!29049))

(assert (=> b!106048 d!29049))

(assert (=> d!28929 d!29153))

(assert (=> bm!11202 d!28913))

(assert (=> d!29019 d!28791))

(assert (=> b!105866 d!29049))

(assert (=> b!105906 d!29049))

(declare-fun d!29511 () Bool)

(declare-fun res!53122 () Bool)

(declare-fun e!69529 () Bool)

(assert (=> d!29511 (=> res!53122 e!69529)))

(assert (=> d!29511 (= res!53122 (and ((_ is Cons!1613) (toList!803 lt!53958)) (= (_1!1216 (h!2210 (toList!803 lt!53958))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29511 (= (containsKey!160 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69529)))

(declare-fun b!106871 () Bool)

(declare-fun e!69530 () Bool)

(assert (=> b!106871 (= e!69529 e!69530)))

(declare-fun res!53123 () Bool)

(assert (=> b!106871 (=> (not res!53123) (not e!69530))))

(assert (=> b!106871 (= res!53123 (and (or (not ((_ is Cons!1613) (toList!803 lt!53958))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53958))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1613) (toList!803 lt!53958)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53958))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!106872 () Bool)

(assert (=> b!106872 (= e!69530 (containsKey!160 (t!5700 (toList!803 lt!53958)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29511 (not res!53122)) b!106871))

(assert (= (and b!106871 res!53123) b!106872))

(assert (=> b!106872 m!117601))

(declare-fun m!120149 () Bool)

(assert (=> b!106872 m!120149))

(assert (=> d!28879 d!29511))

(declare-fun d!29513 () Bool)

(assert (=> d!29513 (= (content!110 Nil!1613) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!28947 d!29513))

(declare-fun d!29515 () Bool)

(declare-fun res!53124 () Bool)

(declare-fun e!69531 () Bool)

(assert (=> d!29515 (=> res!53124 e!69531)))

(assert (=> d!29515 (= res!53124 (or ((_ is Nil!1614) lt!54245) ((_ is Nil!1614) (t!5700 lt!54245))))))

(assert (=> d!29515 (= (isStrictlySorted!309 lt!54245) e!69531)))

(declare-fun b!106873 () Bool)

(declare-fun e!69532 () Bool)

(assert (=> b!106873 (= e!69531 e!69532)))

(declare-fun res!53125 () Bool)

(assert (=> b!106873 (=> (not res!53125) (not e!69532))))

(assert (=> b!106873 (= res!53125 (bvslt (_1!1216 (h!2210 lt!54245)) (_1!1216 (h!2210 (t!5700 lt!54245)))))))

(declare-fun b!106874 () Bool)

(assert (=> b!106874 (= e!69532 (isStrictlySorted!309 (t!5700 lt!54245)))))

(assert (= (and d!29515 (not res!53124)) b!106873))

(assert (= (and b!106873 res!53125) b!106874))

(declare-fun m!120151 () Bool)

(assert (=> b!106874 m!120151))

(assert (=> d!28979 d!29515))

(assert (=> d!28979 d!29105))

(declare-fun d!29517 () Bool)

(assert (=> d!29517 (= (apply!98 lt!54410 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1334 (getValueByKey!156 (toList!803 lt!54410) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4407 () Bool)

(assert (= bs!4407 d!29517))

(declare-fun m!120153 () Bool)

(assert (=> bs!4407 m!120153))

(assert (=> bs!4407 m!120153))

(declare-fun m!120155 () Bool)

(assert (=> bs!4407 m!120155))

(assert (=> b!106114 d!29517))

(declare-fun d!29519 () Bool)

(declare-fun e!69534 () Bool)

(assert (=> d!29519 e!69534))

(declare-fun res!53126 () Bool)

(assert (=> d!29519 (=> res!53126 e!69534)))

(declare-fun lt!54884 () Bool)

(assert (=> d!29519 (= res!53126 (not lt!54884))))

(declare-fun lt!54882 () Bool)

(assert (=> d!29519 (= lt!54884 lt!54882)))

(declare-fun lt!54883 () Unit!3232)

(declare-fun e!69533 () Unit!3232)

(assert (=> d!29519 (= lt!54883 e!69533)))

(declare-fun c!18712 () Bool)

(assert (=> d!29519 (= c!18712 lt!54882)))

(assert (=> d!29519 (= lt!54882 (containsKey!160 (toList!803 lt!54169) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29519 (= (contains!828 lt!54169 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!54884)))

(declare-fun b!106875 () Bool)

(declare-fun lt!54885 () Unit!3232)

(assert (=> b!106875 (= e!69533 lt!54885)))

(assert (=> b!106875 (= lt!54885 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54169) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!106875 (isDefined!109 (getValueByKey!156 (toList!803 lt!54169) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106876 () Bool)

(declare-fun Unit!3295 () Unit!3232)

(assert (=> b!106876 (= e!69533 Unit!3295)))

(declare-fun b!106877 () Bool)

(assert (=> b!106877 (= e!69534 (isDefined!109 (getValueByKey!156 (toList!803 lt!54169) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!29519 c!18712) b!106875))

(assert (= (and d!29519 (not c!18712)) b!106876))

(assert (= (and d!29519 (not res!53126)) b!106877))

(declare-fun m!120157 () Bool)

(assert (=> d!29519 m!120157))

(declare-fun m!120159 () Bool)

(assert (=> b!106875 m!120159))

(assert (=> b!106875 m!118115))

(assert (=> b!106875 m!118115))

(declare-fun m!120161 () Bool)

(assert (=> b!106875 m!120161))

(assert (=> b!106877 m!118115))

(assert (=> b!106877 m!118115))

(assert (=> b!106877 m!120161))

(assert (=> d!28919 d!29519))

(declare-fun e!69536 () Option!162)

(declare-fun b!106880 () Bool)

(assert (=> b!106880 (= e!69536 (getValueByKey!156 (t!5700 lt!54171) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106878 () Bool)

(declare-fun e!69535 () Option!162)

(assert (=> b!106878 (= e!69535 (Some!161 (_2!1216 (h!2210 lt!54171))))))

(declare-fun c!18713 () Bool)

(declare-fun d!29521 () Bool)

(assert (=> d!29521 (= c!18713 (and ((_ is Cons!1613) lt!54171) (= (_1!1216 (h!2210 lt!54171)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29521 (= (getValueByKey!156 lt!54171 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!69535)))

(declare-fun b!106881 () Bool)

(assert (=> b!106881 (= e!69536 None!160)))

(declare-fun b!106879 () Bool)

(assert (=> b!106879 (= e!69535 e!69536)))

(declare-fun c!18714 () Bool)

(assert (=> b!106879 (= c!18714 (and ((_ is Cons!1613) lt!54171) (not (= (_1!1216 (h!2210 lt!54171)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!29521 c!18713) b!106878))

(assert (= (and d!29521 (not c!18713)) b!106879))

(assert (= (and b!106879 c!18714) b!106880))

(assert (= (and b!106879 (not c!18714)) b!106881))

(declare-fun m!120163 () Bool)

(assert (=> b!106880 m!120163))

(assert (=> d!28919 d!29521))

(declare-fun d!29523 () Bool)

(assert (=> d!29523 (= (getValueByKey!156 lt!54171 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!54886 () Unit!3232)

(assert (=> d!29523 (= lt!54886 (choose!657 lt!54171 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!69537 () Bool)

(assert (=> d!29523 e!69537))

(declare-fun res!53127 () Bool)

(assert (=> d!29523 (=> (not res!53127) (not e!69537))))

(assert (=> d!29523 (= res!53127 (isStrictlySorted!309 lt!54171))))

(assert (=> d!29523 (= (lemmaContainsTupThenGetReturnValue!72 lt!54171 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!54886)))

(declare-fun b!106882 () Bool)

(declare-fun res!53128 () Bool)

(assert (=> b!106882 (=> (not res!53128) (not e!69537))))

(assert (=> b!106882 (= res!53128 (containsKey!160 lt!54171 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106883 () Bool)

(assert (=> b!106883 (= e!69537 (contains!830 lt!54171 (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!29523 res!53127) b!106882))

(assert (= (and b!106882 res!53128) b!106883))

(assert (=> d!29523 m!118109))

(declare-fun m!120165 () Bool)

(assert (=> d!29523 m!120165))

(declare-fun m!120167 () Bool)

(assert (=> d!29523 m!120167))

(declare-fun m!120169 () Bool)

(assert (=> b!106882 m!120169))

(declare-fun m!120171 () Bool)

(assert (=> b!106883 m!120171))

(assert (=> d!28919 d!29523))

(declare-fun b!106884 () Bool)

(declare-fun e!69541 () List!1617)

(declare-fun e!69539 () List!1617)

(assert (=> b!106884 (= e!69541 e!69539)))

(declare-fun c!18716 () Bool)

(assert (=> b!106884 (= c!18716 (and ((_ is Cons!1613) (toList!803 call!11065)) (= (_1!1216 (h!2210 (toList!803 call!11065))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!106885 () Bool)

(declare-fun call!11312 () List!1617)

(assert (=> b!106885 (= e!69541 call!11312)))

(declare-fun b!106887 () Bool)

(declare-fun e!69542 () List!1617)

(declare-fun call!11314 () List!1617)

(assert (=> b!106887 (= e!69542 call!11314)))

(declare-fun c!18717 () Bool)

(declare-fun b!106888 () Bool)

(assert (=> b!106888 (= c!18717 (and ((_ is Cons!1613) (toList!803 call!11065)) (bvsgt (_1!1216 (h!2210 (toList!803 call!11065))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!106888 (= e!69539 e!69542)))

(declare-fun bm!11309 () Bool)

(declare-fun call!11313 () List!1617)

(assert (=> bm!11309 (= call!11314 call!11313)))

(declare-fun b!106889 () Bool)

(declare-fun e!69540 () List!1617)

(assert (=> b!106889 (= e!69540 (insertStrictlySorted!75 (t!5700 (toList!803 call!11065)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106890 () Bool)

(assert (=> b!106890 (= e!69542 call!11314)))

(declare-fun b!106891 () Bool)

(declare-fun res!53130 () Bool)

(declare-fun e!69538 () Bool)

(assert (=> b!106891 (=> (not res!53130) (not e!69538))))

(declare-fun lt!54887 () List!1617)

(assert (=> b!106891 (= res!53130 (containsKey!160 lt!54887 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106892 () Bool)

(assert (=> b!106892 (= e!69538 (contains!830 lt!54887 (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!106893 () Bool)

(assert (=> b!106893 (= e!69540 (ite c!18716 (t!5700 (toList!803 call!11065)) (ite c!18717 (Cons!1613 (h!2210 (toList!803 call!11065)) (t!5700 (toList!803 call!11065))) Nil!1614)))))

(declare-fun d!29525 () Bool)

(assert (=> d!29525 e!69538))

(declare-fun res!53129 () Bool)

(assert (=> d!29525 (=> (not res!53129) (not e!69538))))

(assert (=> d!29525 (= res!53129 (isStrictlySorted!309 lt!54887))))

(assert (=> d!29525 (= lt!54887 e!69541)))

(declare-fun c!18715 () Bool)

(assert (=> d!29525 (= c!18715 (and ((_ is Cons!1613) (toList!803 call!11065)) (bvslt (_1!1216 (h!2210 (toList!803 call!11065))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29525 (isStrictlySorted!309 (toList!803 call!11065))))

(assert (=> d!29525 (= (insertStrictlySorted!75 (toList!803 call!11065) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!54887)))

(declare-fun b!106886 () Bool)

(assert (=> b!106886 (= e!69539 call!11313)))

(declare-fun bm!11310 () Bool)

(assert (=> bm!11310 (= call!11312 ($colon$colon!81 e!69540 (ite c!18715 (h!2210 (toList!803 call!11065)) (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!18718 () Bool)

(assert (=> bm!11310 (= c!18718 c!18715)))

(declare-fun bm!11311 () Bool)

(assert (=> bm!11311 (= call!11313 call!11312)))

(assert (= (and d!29525 c!18715) b!106885))

(assert (= (and d!29525 (not c!18715)) b!106884))

(assert (= (and b!106884 c!18716) b!106886))

(assert (= (and b!106884 (not c!18716)) b!106888))

(assert (= (and b!106888 c!18717) b!106890))

(assert (= (and b!106888 (not c!18717)) b!106887))

(assert (= (or b!106890 b!106887) bm!11309))

(assert (= (or b!106886 bm!11309) bm!11311))

(assert (= (or b!106885 bm!11311) bm!11310))

(assert (= (and bm!11310 c!18718) b!106889))

(assert (= (and bm!11310 (not c!18718)) b!106893))

(assert (= (and d!29525 res!53129) b!106891))

(assert (= (and b!106891 res!53130) b!106892))

(declare-fun m!120173 () Bool)

(assert (=> b!106889 m!120173))

(declare-fun m!120175 () Bool)

(assert (=> b!106892 m!120175))

(declare-fun m!120177 () Bool)

(assert (=> d!29525 m!120177))

(declare-fun m!120179 () Bool)

(assert (=> d!29525 m!120179))

(declare-fun m!120181 () Bool)

(assert (=> bm!11310 m!120181))

(declare-fun m!120183 () Bool)

(assert (=> b!106891 m!120183))

(assert (=> d!28919 d!29525))

(declare-fun d!29527 () Bool)

(assert (=> d!29527 (= (apply!98 lt!54365 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1334 (getValueByKey!156 (toList!803 lt!54365) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4408 () Bool)

(assert (= bs!4408 d!29527))

(declare-fun m!120185 () Bool)

(assert (=> bs!4408 m!120185))

(assert (=> bs!4408 m!120185))

(declare-fun m!120187 () Bool)

(assert (=> bs!4408 m!120187))

(assert (=> b!106033 d!29527))

(declare-fun d!29529 () Bool)

(declare-fun res!53131 () Bool)

(declare-fun e!69543 () Bool)

(assert (=> d!29529 (=> res!53131 e!69543)))

(assert (=> d!29529 (= res!53131 (and ((_ is Cons!1613) (toList!803 lt!53891)) (= (_1!1216 (h!2210 (toList!803 lt!53891))) (_1!1216 lt!53815))))))

(assert (=> d!29529 (= (containsKey!160 (toList!803 lt!53891) (_1!1216 lt!53815)) e!69543)))

(declare-fun b!106894 () Bool)

(declare-fun e!69544 () Bool)

(assert (=> b!106894 (= e!69543 e!69544)))

(declare-fun res!53132 () Bool)

(assert (=> b!106894 (=> (not res!53132) (not e!69544))))

(assert (=> b!106894 (= res!53132 (and (or (not ((_ is Cons!1613) (toList!803 lt!53891))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53891))) (_1!1216 lt!53815))) ((_ is Cons!1613) (toList!803 lt!53891)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53891))) (_1!1216 lt!53815))))))

(declare-fun b!106895 () Bool)

(assert (=> b!106895 (= e!69544 (containsKey!160 (t!5700 (toList!803 lt!53891)) (_1!1216 lt!53815)))))

(assert (= (and d!29529 (not res!53131)) b!106894))

(assert (= (and b!106894 res!53132) b!106895))

(declare-fun m!120189 () Bool)

(assert (=> b!106895 m!120189))

(assert (=> d!28933 d!29529))

(declare-fun d!29531 () Bool)

(declare-fun e!69546 () Bool)

(assert (=> d!29531 e!69546))

(declare-fun res!53133 () Bool)

(assert (=> d!29531 (=> res!53133 e!69546)))

(declare-fun lt!54890 () Bool)

(assert (=> d!29531 (= res!53133 (not lt!54890))))

(declare-fun lt!54888 () Bool)

(assert (=> d!29531 (= lt!54890 lt!54888)))

(declare-fun lt!54889 () Unit!3232)

(declare-fun e!69545 () Unit!3232)

(assert (=> d!29531 (= lt!54889 e!69545)))

(declare-fun c!18719 () Bool)

(assert (=> d!29531 (= c!18719 lt!54888)))

(assert (=> d!29531 (= lt!54888 (containsKey!160 (toList!803 lt!54259) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!29531 (= (contains!828 lt!54259 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54890)))

(declare-fun b!106896 () Bool)

(declare-fun lt!54891 () Unit!3232)

(assert (=> b!106896 (= e!69545 lt!54891)))

(assert (=> b!106896 (= lt!54891 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54259) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> b!106896 (isDefined!109 (getValueByKey!156 (toList!803 lt!54259) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106897 () Bool)

(declare-fun Unit!3296 () Unit!3232)

(assert (=> b!106897 (= e!69545 Unit!3296)))

(declare-fun b!106898 () Bool)

(assert (=> b!106898 (= e!69546 (isDefined!109 (getValueByKey!156 (toList!803 lt!54259) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (= (and d!29531 c!18719) b!106896))

(assert (= (and d!29531 (not c!18719)) b!106897))

(assert (= (and d!29531 (not res!53133)) b!106898))

(declare-fun m!120191 () Bool)

(assert (=> d!29531 m!120191))

(declare-fun m!120193 () Bool)

(assert (=> b!106896 m!120193))

(assert (=> b!106896 m!118383))

(assert (=> b!106896 m!118383))

(declare-fun m!120195 () Bool)

(assert (=> b!106896 m!120195))

(assert (=> b!106898 m!118383))

(assert (=> b!106898 m!118383))

(assert (=> b!106898 m!120195))

(assert (=> d!28989 d!29531))

(declare-fun b!106901 () Bool)

(declare-fun e!69548 () Option!162)

(assert (=> b!106901 (= e!69548 (getValueByKey!156 (t!5700 lt!54261) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106899 () Bool)

(declare-fun e!69547 () Option!162)

(assert (=> b!106899 (= e!69547 (Some!161 (_2!1216 (h!2210 lt!54261))))))

(declare-fun d!29533 () Bool)

(declare-fun c!18720 () Bool)

(assert (=> d!29533 (= c!18720 (and ((_ is Cons!1613) lt!54261) (= (_1!1216 (h!2210 lt!54261)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!29533 (= (getValueByKey!156 lt!54261 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) e!69547)))

(declare-fun b!106902 () Bool)

(assert (=> b!106902 (= e!69548 None!160)))

(declare-fun b!106900 () Bool)

(assert (=> b!106900 (= e!69547 e!69548)))

(declare-fun c!18721 () Bool)

(assert (=> b!106900 (= c!18721 (and ((_ is Cons!1613) lt!54261) (not (= (_1!1216 (h!2210 lt!54261)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (= (and d!29533 c!18720) b!106899))

(assert (= (and d!29533 (not c!18720)) b!106900))

(assert (= (and b!106900 c!18721) b!106901))

(assert (= (and b!106900 (not c!18721)) b!106902))

(declare-fun m!120197 () Bool)

(assert (=> b!106901 m!120197))

(assert (=> d!28989 d!29533))

(declare-fun d!29535 () Bool)

(assert (=> d!29535 (= (getValueByKey!156 lt!54261 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun lt!54892 () Unit!3232)

(assert (=> d!29535 (= lt!54892 (choose!657 lt!54261 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun e!69549 () Bool)

(assert (=> d!29535 e!69549))

(declare-fun res!53134 () Bool)

(assert (=> d!29535 (=> (not res!53134) (not e!69549))))

(assert (=> d!29535 (= res!53134 (isStrictlySorted!309 lt!54261))))

(assert (=> d!29535 (= (lemmaContainsTupThenGetReturnValue!72 lt!54261 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54892)))

(declare-fun b!106903 () Bool)

(declare-fun res!53135 () Bool)

(assert (=> b!106903 (=> (not res!53135) (not e!69549))))

(assert (=> b!106903 (= res!53135 (containsKey!160 lt!54261 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106904 () Bool)

(assert (=> b!106904 (= e!69549 (contains!830 lt!54261 (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (= (and d!29535 res!53134) b!106903))

(assert (= (and b!106903 res!53135) b!106904))

(assert (=> d!29535 m!118377))

(declare-fun m!120199 () Bool)

(assert (=> d!29535 m!120199))

(declare-fun m!120201 () Bool)

(assert (=> d!29535 m!120201))

(declare-fun m!120203 () Bool)

(assert (=> b!106903 m!120203))

(declare-fun m!120205 () Bool)

(assert (=> b!106904 m!120205))

(assert (=> d!28989 d!29535))

(declare-fun b!106905 () Bool)

(declare-fun e!69553 () List!1617)

(declare-fun e!69551 () List!1617)

(assert (=> b!106905 (= e!69553 e!69551)))

(declare-fun c!18723 () Bool)

(assert (=> b!106905 (= c!18723 (and ((_ is Cons!1613) (toList!803 lt!53805)) (= (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!106906 () Bool)

(declare-fun call!11315 () List!1617)

(assert (=> b!106906 (= e!69553 call!11315)))

(declare-fun b!106908 () Bool)

(declare-fun e!69554 () List!1617)

(declare-fun call!11317 () List!1617)

(assert (=> b!106908 (= e!69554 call!11317)))

(declare-fun b!106909 () Bool)

(declare-fun c!18724 () Bool)

(assert (=> b!106909 (= c!18724 (and ((_ is Cons!1613) (toList!803 lt!53805)) (bvsgt (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> b!106909 (= e!69551 e!69554)))

(declare-fun bm!11312 () Bool)

(declare-fun call!11316 () List!1617)

(assert (=> bm!11312 (= call!11317 call!11316)))

(declare-fun e!69552 () List!1617)

(declare-fun b!106910 () Bool)

(assert (=> b!106910 (= e!69552 (insertStrictlySorted!75 (t!5700 (toList!803 lt!53805)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106911 () Bool)

(assert (=> b!106911 (= e!69554 call!11317)))

(declare-fun b!106912 () Bool)

(declare-fun res!53137 () Bool)

(declare-fun e!69550 () Bool)

(assert (=> b!106912 (=> (not res!53137) (not e!69550))))

(declare-fun lt!54893 () List!1617)

(assert (=> b!106912 (= res!53137 (containsKey!160 lt!54893 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106913 () Bool)

(assert (=> b!106913 (= e!69550 (contains!830 lt!54893 (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!106914 () Bool)

(assert (=> b!106914 (= e!69552 (ite c!18723 (t!5700 (toList!803 lt!53805)) (ite c!18724 (Cons!1613 (h!2210 (toList!803 lt!53805)) (t!5700 (toList!803 lt!53805))) Nil!1614)))))

(declare-fun d!29537 () Bool)

(assert (=> d!29537 e!69550))

(declare-fun res!53136 () Bool)

(assert (=> d!29537 (=> (not res!53136) (not e!69550))))

(assert (=> d!29537 (= res!53136 (isStrictlySorted!309 lt!54893))))

(assert (=> d!29537 (= lt!54893 e!69553)))

(declare-fun c!18722 () Bool)

(assert (=> d!29537 (= c!18722 (and ((_ is Cons!1613) (toList!803 lt!53805)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53805))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!29537 (isStrictlySorted!309 (toList!803 lt!53805))))

(assert (=> d!29537 (= (insertStrictlySorted!75 (toList!803 lt!53805) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54893)))

(declare-fun b!106907 () Bool)

(assert (=> b!106907 (= e!69551 call!11316)))

(declare-fun bm!11313 () Bool)

(assert (=> bm!11313 (= call!11315 ($colon$colon!81 e!69552 (ite c!18722 (h!2210 (toList!803 lt!53805)) (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(declare-fun c!18725 () Bool)

(assert (=> bm!11313 (= c!18725 c!18722)))

(declare-fun bm!11314 () Bool)

(assert (=> bm!11314 (= call!11316 call!11315)))

(assert (= (and d!29537 c!18722) b!106906))

(assert (= (and d!29537 (not c!18722)) b!106905))

(assert (= (and b!106905 c!18723) b!106907))

(assert (= (and b!106905 (not c!18723)) b!106909))

(assert (= (and b!106909 c!18724) b!106911))

(assert (= (and b!106909 (not c!18724)) b!106908))

(assert (= (or b!106911 b!106908) bm!11312))

(assert (= (or b!106907 bm!11312) bm!11314))

(assert (= (or b!106906 bm!11314) bm!11313))

(assert (= (and bm!11313 c!18725) b!106910))

(assert (= (and bm!11313 (not c!18725)) b!106914))

(assert (= (and d!29537 res!53136) b!106912))

(assert (= (and b!106912 res!53137) b!106913))

(declare-fun m!120207 () Bool)

(assert (=> b!106910 m!120207))

(declare-fun m!120209 () Bool)

(assert (=> b!106913 m!120209))

(declare-fun m!120211 () Bool)

(assert (=> d!29537 m!120211))

(assert (=> d!29537 m!118231))

(declare-fun m!120213 () Bool)

(assert (=> bm!11313 m!120213))

(declare-fun m!120215 () Bool)

(assert (=> b!106912 m!120215))

(assert (=> d!28989 d!29537))

(declare-fun d!29539 () Bool)

(declare-fun e!69556 () Bool)

(assert (=> d!29539 e!69556))

(declare-fun res!53138 () Bool)

(assert (=> d!29539 (=> res!53138 e!69556)))

(declare-fun lt!54896 () Bool)

(assert (=> d!29539 (= res!53138 (not lt!54896))))

(declare-fun lt!54894 () Bool)

(assert (=> d!29539 (= lt!54896 lt!54894)))

(declare-fun lt!54895 () Unit!3232)

(declare-fun e!69555 () Unit!3232)

(assert (=> d!29539 (= lt!54895 e!69555)))

(declare-fun c!18726 () Bool)

(assert (=> d!29539 (= c!18726 lt!54894)))

(assert (=> d!29539 (= lt!54894 (containsKey!160 (toList!803 lt!54161) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!29539 (= (contains!828 lt!54161 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54896)))

(declare-fun b!106915 () Bool)

(declare-fun lt!54897 () Unit!3232)

(assert (=> b!106915 (= e!69555 lt!54897)))

(assert (=> b!106915 (= lt!54897 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54161) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> b!106915 (isDefined!109 (getValueByKey!156 (toList!803 lt!54161) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106916 () Bool)

(declare-fun Unit!3297 () Unit!3232)

(assert (=> b!106916 (= e!69555 Unit!3297)))

(declare-fun b!106917 () Bool)

(assert (=> b!106917 (= e!69556 (isDefined!109 (getValueByKey!156 (toList!803 lt!54161) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (= (and d!29539 c!18726) b!106915))

(assert (= (and d!29539 (not c!18726)) b!106916))

(assert (= (and d!29539 (not res!53138)) b!106917))

(declare-fun m!120217 () Bool)

(assert (=> d!29539 m!120217))

(declare-fun m!120219 () Bool)

(assert (=> b!106915 m!120219))

(assert (=> b!106915 m!118085))

(assert (=> b!106915 m!118085))

(declare-fun m!120221 () Bool)

(assert (=> b!106915 m!120221))

(assert (=> b!106917 m!118085))

(assert (=> b!106917 m!118085))

(assert (=> b!106917 m!120221))

(assert (=> d!28901 d!29539))

(declare-fun e!69558 () Option!162)

(declare-fun b!106920 () Bool)

(assert (=> b!106920 (= e!69558 (getValueByKey!156 (t!5700 lt!54163) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106918 () Bool)

(declare-fun e!69557 () Option!162)

(assert (=> b!106918 (= e!69557 (Some!161 (_2!1216 (h!2210 lt!54163))))))

(declare-fun d!29541 () Bool)

(declare-fun c!18727 () Bool)

(assert (=> d!29541 (= c!18727 (and ((_ is Cons!1613) lt!54163) (= (_1!1216 (h!2210 lt!54163)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!29541 (= (getValueByKey!156 lt!54163 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) e!69557)))

(declare-fun b!106921 () Bool)

(assert (=> b!106921 (= e!69558 None!160)))

(declare-fun b!106919 () Bool)

(assert (=> b!106919 (= e!69557 e!69558)))

(declare-fun c!18728 () Bool)

(assert (=> b!106919 (= c!18728 (and ((_ is Cons!1613) lt!54163) (not (= (_1!1216 (h!2210 lt!54163)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (= (and d!29541 c!18727) b!106918))

(assert (= (and d!29541 (not c!18727)) b!106919))

(assert (= (and b!106919 c!18728) b!106920))

(assert (= (and b!106919 (not c!18728)) b!106921))

(declare-fun m!120223 () Bool)

(assert (=> b!106920 m!120223))

(assert (=> d!28901 d!29541))

(declare-fun d!29543 () Bool)

(assert (=> d!29543 (= (getValueByKey!156 lt!54163 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun lt!54898 () Unit!3232)

(assert (=> d!29543 (= lt!54898 (choose!657 lt!54163 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun e!69559 () Bool)

(assert (=> d!29543 e!69559))

(declare-fun res!53139 () Bool)

(assert (=> d!29543 (=> (not res!53139) (not e!69559))))

(assert (=> d!29543 (= res!53139 (isStrictlySorted!309 lt!54163))))

(assert (=> d!29543 (= (lemmaContainsTupThenGetReturnValue!72 lt!54163 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54898)))

(declare-fun b!106922 () Bool)

(declare-fun res!53140 () Bool)

(assert (=> b!106922 (=> (not res!53140) (not e!69559))))

(assert (=> b!106922 (= res!53140 (containsKey!160 lt!54163 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106923 () Bool)

(assert (=> b!106923 (= e!69559 (contains!830 lt!54163 (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (= (and d!29543 res!53139) b!106922))

(assert (= (and b!106922 res!53140) b!106923))

(assert (=> d!29543 m!118079))

(declare-fun m!120225 () Bool)

(assert (=> d!29543 m!120225))

(declare-fun m!120227 () Bool)

(assert (=> d!29543 m!120227))

(declare-fun m!120229 () Bool)

(assert (=> b!106922 m!120229))

(declare-fun m!120231 () Bool)

(assert (=> b!106923 m!120231))

(assert (=> d!28901 d!29543))

(declare-fun b!106924 () Bool)

(declare-fun e!69563 () List!1617)

(declare-fun e!69561 () List!1617)

(assert (=> b!106924 (= e!69563 e!69561)))

(declare-fun c!18730 () Bool)

(assert (=> b!106924 (= c!18730 (and ((_ is Cons!1613) (toList!803 call!11140)) (= (_1!1216 (h!2210 (toList!803 call!11140))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!106925 () Bool)

(declare-fun call!11318 () List!1617)

(assert (=> b!106925 (= e!69563 call!11318)))

(declare-fun b!106927 () Bool)

(declare-fun e!69564 () List!1617)

(declare-fun call!11320 () List!1617)

(assert (=> b!106927 (= e!69564 call!11320)))

(declare-fun c!18731 () Bool)

(declare-fun b!106928 () Bool)

(assert (=> b!106928 (= c!18731 (and ((_ is Cons!1613) (toList!803 call!11140)) (bvsgt (_1!1216 (h!2210 (toList!803 call!11140))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> b!106928 (= e!69561 e!69564)))

(declare-fun bm!11315 () Bool)

(declare-fun call!11319 () List!1617)

(assert (=> bm!11315 (= call!11320 call!11319)))

(declare-fun e!69562 () List!1617)

(declare-fun b!106929 () Bool)

(assert (=> b!106929 (= e!69562 (insertStrictlySorted!75 (t!5700 (toList!803 call!11140)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106930 () Bool)

(assert (=> b!106930 (= e!69564 call!11320)))

(declare-fun b!106931 () Bool)

(declare-fun res!53142 () Bool)

(declare-fun e!69560 () Bool)

(assert (=> b!106931 (=> (not res!53142) (not e!69560))))

(declare-fun lt!54899 () List!1617)

(assert (=> b!106931 (= res!53142 (containsKey!160 lt!54899 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!106932 () Bool)

(assert (=> b!106932 (= e!69560 (contains!830 lt!54899 (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!106933 () Bool)

(assert (=> b!106933 (= e!69562 (ite c!18730 (t!5700 (toList!803 call!11140)) (ite c!18731 (Cons!1613 (h!2210 (toList!803 call!11140)) (t!5700 (toList!803 call!11140))) Nil!1614)))))

(declare-fun d!29545 () Bool)

(assert (=> d!29545 e!69560))

(declare-fun res!53141 () Bool)

(assert (=> d!29545 (=> (not res!53141) (not e!69560))))

(assert (=> d!29545 (= res!53141 (isStrictlySorted!309 lt!54899))))

(assert (=> d!29545 (= lt!54899 e!69563)))

(declare-fun c!18729 () Bool)

(assert (=> d!29545 (= c!18729 (and ((_ is Cons!1613) (toList!803 call!11140)) (bvslt (_1!1216 (h!2210 (toList!803 call!11140))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!29545 (isStrictlySorted!309 (toList!803 call!11140))))

(assert (=> d!29545 (= (insertStrictlySorted!75 (toList!803 call!11140) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54899)))

(declare-fun b!106926 () Bool)

(assert (=> b!106926 (= e!69561 call!11319)))

(declare-fun bm!11316 () Bool)

(assert (=> bm!11316 (= call!11318 ($colon$colon!81 e!69562 (ite c!18729 (h!2210 (toList!803 call!11140)) (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(declare-fun c!18732 () Bool)

(assert (=> bm!11316 (= c!18732 c!18729)))

(declare-fun bm!11317 () Bool)

(assert (=> bm!11317 (= call!11319 call!11318)))

(assert (= (and d!29545 c!18729) b!106925))

(assert (= (and d!29545 (not c!18729)) b!106924))

(assert (= (and b!106924 c!18730) b!106926))

(assert (= (and b!106924 (not c!18730)) b!106928))

(assert (= (and b!106928 c!18731) b!106930))

(assert (= (and b!106928 (not c!18731)) b!106927))

(assert (= (or b!106930 b!106927) bm!11315))

(assert (= (or b!106926 bm!11315) bm!11317))

(assert (= (or b!106925 bm!11317) bm!11316))

(assert (= (and bm!11316 c!18732) b!106929))

(assert (= (and bm!11316 (not c!18732)) b!106933))

(assert (= (and d!29545 res!53141) b!106931))

(assert (= (and b!106931 res!53142) b!106932))

(declare-fun m!120233 () Bool)

(assert (=> b!106929 m!120233))

(declare-fun m!120235 () Bool)

(assert (=> b!106932 m!120235))

(declare-fun m!120237 () Bool)

(assert (=> d!29545 m!120237))

(declare-fun m!120239 () Bool)

(assert (=> d!29545 m!120239))

(declare-fun m!120241 () Bool)

(assert (=> bm!11316 m!120241))

(declare-fun m!120243 () Bool)

(assert (=> b!106931 m!120243))

(assert (=> d!28901 d!29545))

(declare-fun lt!54900 () Bool)

(declare-fun d!29547 () Bool)

(assert (=> d!29547 (= lt!54900 (select (content!109 (toList!803 lt!54259)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(declare-fun e!69566 () Bool)

(assert (=> d!29547 (= lt!54900 e!69566)))

(declare-fun res!53143 () Bool)

(assert (=> d!29547 (=> (not res!53143) (not e!69566))))

(assert (=> d!29547 (= res!53143 ((_ is Cons!1613) (toList!803 lt!54259)))))

(assert (=> d!29547 (= (contains!830 (toList!803 lt!54259) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) lt!54900)))

(declare-fun b!106934 () Bool)

(declare-fun e!69565 () Bool)

(assert (=> b!106934 (= e!69566 e!69565)))

(declare-fun res!53144 () Bool)

(assert (=> b!106934 (=> res!53144 e!69565)))

(assert (=> b!106934 (= res!53144 (= (h!2210 (toList!803 lt!54259)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(declare-fun b!106935 () Bool)

(assert (=> b!106935 (= e!69565 (contains!830 (t!5700 (toList!803 lt!54259)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(assert (= (and d!29547 res!53143) b!106934))

(assert (= (and b!106934 (not res!53144)) b!106935))

(declare-fun m!120245 () Bool)

(assert (=> d!29547 m!120245))

(declare-fun m!120247 () Bool)

(assert (=> d!29547 m!120247))

(declare-fun m!120249 () Bool)

(assert (=> b!106935 m!120249))

(assert (=> b!105967 d!29547))

(declare-fun d!29549 () Bool)

(declare-fun e!69568 () Bool)

(assert (=> d!29549 e!69568))

(declare-fun res!53145 () Bool)

(assert (=> d!29549 (=> res!53145 e!69568)))

(declare-fun lt!54903 () Bool)

(assert (=> d!29549 (= res!53145 (not lt!54903))))

(declare-fun lt!54901 () Bool)

(assert (=> d!29549 (= lt!54903 lt!54901)))

(declare-fun lt!54902 () Unit!3232)

(declare-fun e!69567 () Unit!3232)

(assert (=> d!29549 (= lt!54902 e!69567)))

(declare-fun c!18733 () Bool)

(assert (=> d!29549 (= c!18733 lt!54901)))

(assert (=> d!29549 (= lt!54901 (containsKey!160 (toList!803 (map!1286 (_2!1217 lt!54341))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29549 (= (contains!828 (map!1286 (_2!1217 lt!54341)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54903)))

(declare-fun b!106936 () Bool)

(declare-fun lt!54904 () Unit!3232)

(assert (=> b!106936 (= e!69567 lt!54904)))

(assert (=> b!106936 (= lt!54904 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (map!1286 (_2!1217 lt!54341))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> b!106936 (isDefined!109 (getValueByKey!156 (toList!803 (map!1286 (_2!1217 lt!54341))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!106937 () Bool)

(declare-fun Unit!3298 () Unit!3232)

(assert (=> b!106937 (= e!69567 Unit!3298)))

(declare-fun b!106938 () Bool)

(assert (=> b!106938 (= e!69568 (isDefined!109 (getValueByKey!156 (toList!803 (map!1286 (_2!1217 lt!54341))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (= (and d!29549 c!18733) b!106936))

(assert (= (and d!29549 (not c!18733)) b!106937))

(assert (= (and d!29549 (not res!53145)) b!106938))

(assert (=> d!29549 m!117489))

(declare-fun m!120251 () Bool)

(assert (=> d!29549 m!120251))

(assert (=> b!106936 m!117489))

(declare-fun m!120253 () Bool)

(assert (=> b!106936 m!120253))

(assert (=> b!106936 m!117489))

(declare-fun m!120255 () Bool)

(assert (=> b!106936 m!120255))

(assert (=> b!106936 m!120255))

(declare-fun m!120257 () Bool)

(assert (=> b!106936 m!120257))

(assert (=> b!106938 m!117489))

(assert (=> b!106938 m!120255))

(assert (=> b!106938 m!120255))

(assert (=> b!106938 m!120257))

(assert (=> b!106012 d!29549))

(assert (=> b!106012 d!29427))

(declare-fun d!29551 () Bool)

(declare-fun lt!54905 () Bool)

(assert (=> d!29551 (= lt!54905 (select (content!109 (toList!803 lt!54161)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(declare-fun e!69570 () Bool)

(assert (=> d!29551 (= lt!54905 e!69570)))

(declare-fun res!53146 () Bool)

(assert (=> d!29551 (=> (not res!53146) (not e!69570))))

(assert (=> d!29551 (= res!53146 ((_ is Cons!1613) (toList!803 lt!54161)))))

(assert (=> d!29551 (= (contains!830 (toList!803 lt!54161) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) lt!54905)))

(declare-fun b!106939 () Bool)

(declare-fun e!69569 () Bool)

(assert (=> b!106939 (= e!69570 e!69569)))

(declare-fun res!53147 () Bool)

(assert (=> b!106939 (=> res!53147 e!69569)))

(assert (=> b!106939 (= res!53147 (= (h!2210 (toList!803 lt!54161)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(declare-fun b!106940 () Bool)

(assert (=> b!106940 (= e!69569 (contains!830 (t!5700 (toList!803 lt!54161)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(assert (= (and d!29551 res!53146) b!106939))

(assert (= (and b!106939 (not res!53147)) b!106940))

(declare-fun m!120259 () Bool)

(assert (=> d!29551 m!120259))

(declare-fun m!120261 () Bool)

(assert (=> d!29551 m!120261))

(declare-fun m!120263 () Bool)

(assert (=> b!106940 m!120263))

(assert (=> b!105822 d!29551))

(assert (=> d!28977 d!28975))

(declare-fun d!29553 () Bool)

(assert (=> d!29553 (= (getValueByKey!156 lt!53897 (_1!1216 lt!53814)) (Some!161 (_2!1216 lt!53814)))))

(assert (=> d!29553 true))

(declare-fun _$22!433 () Unit!3232)

(assert (=> d!29553 (= (choose!657 lt!53897 (_1!1216 lt!53814) (_2!1216 lt!53814)) _$22!433)))

(declare-fun bs!4409 () Bool)

(assert (= bs!4409 d!29553))

(assert (=> bs!4409 m!117655))

(assert (=> d!28977 d!29553))

(declare-fun d!29555 () Bool)

(declare-fun res!53148 () Bool)

(declare-fun e!69571 () Bool)

(assert (=> d!29555 (=> res!53148 e!69571)))

(assert (=> d!29555 (= res!53148 (or ((_ is Nil!1614) lt!53897) ((_ is Nil!1614) (t!5700 lt!53897))))))

(assert (=> d!29555 (= (isStrictlySorted!309 lt!53897) e!69571)))

(declare-fun b!106941 () Bool)

(declare-fun e!69572 () Bool)

(assert (=> b!106941 (= e!69571 e!69572)))

(declare-fun res!53149 () Bool)

(assert (=> b!106941 (=> (not res!53149) (not e!69572))))

(assert (=> b!106941 (= res!53149 (bvslt (_1!1216 (h!2210 lt!53897)) (_1!1216 (h!2210 (t!5700 lt!53897)))))))

(declare-fun b!106942 () Bool)

(assert (=> b!106942 (= e!69572 (isStrictlySorted!309 (t!5700 lt!53897)))))

(assert (= (and d!29555 (not res!53148)) b!106941))

(assert (= (and b!106941 res!53149) b!106942))

(declare-fun m!120265 () Bool)

(assert (=> b!106942 m!120265))

(assert (=> d!28977 d!29555))

(assert (=> bm!11179 d!29477))

(declare-fun d!29557 () Bool)

(assert (=> d!29557 (isDefined!109 (getValueByKey!156 (toList!803 lt!53906) (_1!1216 lt!53814)))))

(declare-fun lt!54906 () Unit!3232)

(assert (=> d!29557 (= lt!54906 (choose!660 (toList!803 lt!53906) (_1!1216 lt!53814)))))

(declare-fun e!69573 () Bool)

(assert (=> d!29557 e!69573))

(declare-fun res!53150 () Bool)

(assert (=> d!29557 (=> (not res!53150) (not e!69573))))

(assert (=> d!29557 (= res!53150 (isStrictlySorted!309 (toList!803 lt!53906)))))

(assert (=> d!29557 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53906) (_1!1216 lt!53814)) lt!54906)))

(declare-fun b!106943 () Bool)

(assert (=> b!106943 (= e!69573 (containsKey!160 (toList!803 lt!53906) (_1!1216 lt!53814)))))

(assert (= (and d!29557 res!53150) b!106943))

(assert (=> d!29557 m!117695))

(assert (=> d!29557 m!117695))

(assert (=> d!29557 m!118025))

(declare-fun m!120267 () Bool)

(assert (=> d!29557 m!120267))

(declare-fun m!120269 () Bool)

(assert (=> d!29557 m!120269))

(assert (=> b!106943 m!118021))

(assert (=> b!105790 d!29557))

(assert (=> b!105790 d!29267))

(assert (=> b!105790 d!29007))

(declare-fun b!106944 () Bool)

(declare-fun e!69575 () (_ BitVec 32))

(declare-fun call!11321 () (_ BitVec 32))

(assert (=> b!106944 (= e!69575 (bvadd #b00000000000000000000000000000001 call!11321))))

(declare-fun b!106945 () Bool)

(declare-fun e!69574 () (_ BitVec 32))

(assert (=> b!106945 (= e!69574 #b00000000000000000000000000000000)))

(declare-fun b!106946 () Bool)

(assert (=> b!106946 (= e!69575 call!11321)))

(declare-fun d!29559 () Bool)

(declare-fun lt!54907 () (_ BitVec 32))

(assert (=> d!29559 (and (bvsge lt!54907 #b00000000000000000000000000000000) (bvsle lt!54907 (bvsub (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!29559 (= lt!54907 e!69574)))

(declare-fun c!18734 () Bool)

(assert (=> d!29559 (= c!18734 (bvsge #b00000000000000000000000000000000 (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29559 (and (bvsle #b00000000000000000000000000000000 (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29559 (= (arrayCountValidKeys!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) #b00000000000000000000000000000000 (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))) lt!54907)))

(declare-fun bm!11318 () Bool)

(assert (=> bm!11318 (= call!11321 (arrayCountValidKeys!0 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106947 () Bool)

(assert (=> b!106947 (= e!69574 e!69575)))

(declare-fun c!18735 () Bool)

(assert (=> b!106947 (= c!18735 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!29559 c!18734) b!106945))

(assert (= (and d!29559 (not c!18734)) b!106947))

(assert (= (and b!106947 c!18735) b!106944))

(assert (= (and b!106947 (not c!18735)) b!106946))

(assert (= (or b!106944 b!106946) bm!11318))

(declare-fun m!120271 () Bool)

(assert (=> bm!11318 m!120271))

(assert (=> b!106947 m!119343))

(assert (=> b!106947 m!119343))

(assert (=> b!106947 m!119345))

(assert (=> b!105959 d!29559))

(declare-fun d!29561 () Bool)

(assert (=> d!29561 (isDefined!109 (getValueByKey!156 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun lt!54908 () Unit!3232)

(assert (=> d!29561 (= lt!54908 (choose!660 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun e!69576 () Bool)

(assert (=> d!29561 e!69576))

(declare-fun res!53151 () Bool)

(assert (=> d!29561 (=> (not res!53151) (not e!69576))))

(assert (=> d!29561 (= res!53151 (isStrictlySorted!309 (toList!803 call!11145)))))

(assert (=> d!29561 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) lt!54908)))

(declare-fun b!106948 () Bool)

(assert (=> b!106948 (= e!69576 (containsKey!160 (toList!803 call!11145) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29561 res!53151) b!106948))

(assert (=> d!29561 m!117489))

(assert (=> d!29561 m!118263))

(assert (=> d!29561 m!118263))

(assert (=> d!29561 m!118265))

(assert (=> d!29561 m!117489))

(declare-fun m!120273 () Bool)

(assert (=> d!29561 m!120273))

(declare-fun m!120275 () Bool)

(assert (=> d!29561 m!120275))

(assert (=> b!106948 m!117489))

(assert (=> b!106948 m!118259))

(assert (=> b!105912 d!29561))

(assert (=> b!105912 d!29271))

(assert (=> b!105912 d!29273))

(declare-fun b!106951 () Bool)

(declare-fun e!69578 () Option!162)

(assert (=> b!106951 (= e!69578 (getValueByKey!156 (t!5700 (t!5700 lt!53893)) (_1!1216 lt!53815)))))

(declare-fun b!106949 () Bool)

(declare-fun e!69577 () Option!162)

(assert (=> b!106949 (= e!69577 (Some!161 (_2!1216 (h!2210 (t!5700 lt!53893)))))))

(declare-fun d!29563 () Bool)

(declare-fun c!18736 () Bool)

(assert (=> d!29563 (= c!18736 (and ((_ is Cons!1613) (t!5700 lt!53893)) (= (_1!1216 (h!2210 (t!5700 lt!53893))) (_1!1216 lt!53815))))))

(assert (=> d!29563 (= (getValueByKey!156 (t!5700 lt!53893) (_1!1216 lt!53815)) e!69577)))

(declare-fun b!106952 () Bool)

(assert (=> b!106952 (= e!69578 None!160)))

(declare-fun b!106950 () Bool)

(assert (=> b!106950 (= e!69577 e!69578)))

(declare-fun c!18737 () Bool)

(assert (=> b!106950 (= c!18737 (and ((_ is Cons!1613) (t!5700 lt!53893)) (not (= (_1!1216 (h!2210 (t!5700 lt!53893))) (_1!1216 lt!53815)))))))

(assert (= (and d!29563 c!18736) b!106949))

(assert (= (and d!29563 (not c!18736)) b!106950))

(assert (= (and b!106950 c!18737) b!106951))

(assert (= (and b!106950 (not c!18737)) b!106952))

(declare-fun m!120277 () Bool)

(assert (=> b!106951 m!120277))

(assert (=> b!105875 d!29563))

(assert (=> d!28831 d!28849))

(declare-fun d!29565 () Bool)

(assert (=> d!29565 (= (apply!98 (+!144 lt!53959 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53970) (apply!98 lt!53959 lt!53970))))

(assert (=> d!29565 true))

(declare-fun _$34!889 () Unit!3232)

(assert (=> d!29565 (= (choose!654 lt!53959 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53970) _$34!889)))

(declare-fun bs!4410 () Bool)

(assert (= bs!4410 d!29565))

(assert (=> bs!4410 m!117737))

(assert (=> bs!4410 m!117737))

(assert (=> bs!4410 m!117751))

(assert (=> bs!4410 m!117735))

(assert (=> d!28831 d!29565))

(assert (=> d!28831 d!28853))

(declare-fun d!29567 () Bool)

(declare-fun e!69580 () Bool)

(assert (=> d!29567 e!69580))

(declare-fun res!53152 () Bool)

(assert (=> d!29567 (=> res!53152 e!69580)))

(declare-fun lt!54911 () Bool)

(assert (=> d!29567 (= res!53152 (not lt!54911))))

(declare-fun lt!54909 () Bool)

(assert (=> d!29567 (= lt!54911 lt!54909)))

(declare-fun lt!54910 () Unit!3232)

(declare-fun e!69579 () Unit!3232)

(assert (=> d!29567 (= lt!54910 e!69579)))

(declare-fun c!18738 () Bool)

(assert (=> d!29567 (= c!18738 lt!54909)))

(assert (=> d!29567 (= lt!54909 (containsKey!160 (toList!803 lt!53959) lt!53970))))

(assert (=> d!29567 (= (contains!828 lt!53959 lt!53970) lt!54911)))

(declare-fun b!106953 () Bool)

(declare-fun lt!54912 () Unit!3232)

(assert (=> b!106953 (= e!69579 lt!54912)))

(assert (=> b!106953 (= lt!54912 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53959) lt!53970))))

(assert (=> b!106953 (isDefined!109 (getValueByKey!156 (toList!803 lt!53959) lt!53970))))

(declare-fun b!106954 () Bool)

(declare-fun Unit!3299 () Unit!3232)

(assert (=> b!106954 (= e!69579 Unit!3299)))

(declare-fun b!106955 () Bool)

(assert (=> b!106955 (= e!69580 (isDefined!109 (getValueByKey!156 (toList!803 lt!53959) lt!53970)))))

(assert (= (and d!29567 c!18738) b!106953))

(assert (= (and d!29567 (not c!18738)) b!106954))

(assert (= (and d!29567 (not res!53152)) b!106955))

(declare-fun m!120279 () Bool)

(assert (=> d!29567 m!120279))

(declare-fun m!120281 () Bool)

(assert (=> b!106953 m!120281))

(assert (=> b!106953 m!117909))

(assert (=> b!106953 m!117909))

(declare-fun m!120283 () Bool)

(assert (=> b!106953 m!120283))

(assert (=> b!106955 m!117909))

(assert (=> b!106955 m!117909))

(assert (=> b!106955 m!120283))

(assert (=> d!28831 d!29567))

(assert (=> d!28831 d!28835))

(declare-fun d!29569 () Bool)

(declare-fun lt!54913 () Bool)

(assert (=> d!29569 (= lt!54913 (select (content!109 (t!5700 (toList!803 lt!53906))) lt!53814))))

(declare-fun e!69582 () Bool)

(assert (=> d!29569 (= lt!54913 e!69582)))

(declare-fun res!53153 () Bool)

(assert (=> d!29569 (=> (not res!53153) (not e!69582))))

(assert (=> d!29569 (= res!53153 ((_ is Cons!1613) (t!5700 (toList!803 lt!53906))))))

(assert (=> d!29569 (= (contains!830 (t!5700 (toList!803 lt!53906)) lt!53814) lt!54913)))

(declare-fun b!106956 () Bool)

(declare-fun e!69581 () Bool)

(assert (=> b!106956 (= e!69582 e!69581)))

(declare-fun res!53154 () Bool)

(assert (=> b!106956 (=> res!53154 e!69581)))

(assert (=> b!106956 (= res!53154 (= (h!2210 (t!5700 (toList!803 lt!53906))) lt!53814))))

(declare-fun b!106957 () Bool)

(assert (=> b!106957 (= e!69581 (contains!830 (t!5700 (t!5700 (toList!803 lt!53906))) lt!53814))))

(assert (= (and d!29569 res!53153) b!106956))

(assert (= (and b!106956 (not res!53154)) b!106957))

(assert (=> d!29569 m!119979))

(declare-fun m!120285 () Bool)

(assert (=> d!29569 m!120285))

(declare-fun m!120287 () Bool)

(assert (=> b!106957 m!120287))

(assert (=> b!105869 d!29569))

(declare-fun d!29571 () Bool)

(assert (=> d!29571 (isDefined!109 (getValueByKey!156 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!54914 () Unit!3232)

(assert (=> d!29571 (= lt!54914 (choose!660 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!69583 () Bool)

(assert (=> d!29571 e!69583))

(declare-fun res!53155 () Bool)

(assert (=> d!29571 (=> (not res!53155) (not e!69583))))

(assert (=> d!29571 (= res!53155 (isStrictlySorted!309 (toList!803 lt!53958)))))

(assert (=> d!29571 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54914)))

(declare-fun b!106958 () Bool)

(assert (=> b!106958 (= e!69583 (containsKey!160 (toList!803 lt!53958) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29571 res!53155) b!106958))

(assert (=> d!29571 m!117601))

(assert (=> d!29571 m!117999))

(assert (=> d!29571 m!117999))

(assert (=> d!29571 m!118001))

(assert (=> d!29571 m!117601))

(declare-fun m!120289 () Bool)

(assert (=> d!29571 m!120289))

(assert (=> d!29571 m!118831))

(assert (=> b!106958 m!117601))

(assert (=> b!106958 m!117995))

(assert (=> b!105783 d!29571))

(assert (=> b!105783 d!29301))

(assert (=> b!105783 d!29303))

(declare-fun d!29573 () Bool)

(declare-fun lt!54915 () Bool)

(assert (=> d!29573 (= lt!54915 (select (content!109 (t!5700 (toList!803 lt!53895))) lt!53814))))

(declare-fun e!69585 () Bool)

(assert (=> d!29573 (= lt!54915 e!69585)))

(declare-fun res!53156 () Bool)

(assert (=> d!29573 (=> (not res!53156) (not e!69585))))

(assert (=> d!29573 (= res!53156 ((_ is Cons!1613) (t!5700 (toList!803 lt!53895))))))

(assert (=> d!29573 (= (contains!830 (t!5700 (toList!803 lt!53895)) lt!53814) lt!54915)))

(declare-fun b!106959 () Bool)

(declare-fun e!69584 () Bool)

(assert (=> b!106959 (= e!69585 e!69584)))

(declare-fun res!53157 () Bool)

(assert (=> b!106959 (=> res!53157 e!69584)))

(assert (=> b!106959 (= res!53157 (= (h!2210 (t!5700 (toList!803 lt!53895))) lt!53814))))

(declare-fun b!106960 () Bool)

(assert (=> b!106960 (= e!69584 (contains!830 (t!5700 (t!5700 (toList!803 lt!53895))) lt!53814))))

(assert (= (and d!29573 res!53156) b!106959))

(assert (= (and b!106959 (not res!53157)) b!106960))

(assert (=> d!29573 m!119999))

(declare-fun m!120291 () Bool)

(assert (=> d!29573 m!120291))

(declare-fun m!120293 () Bool)

(assert (=> b!106960 m!120293))

(assert (=> b!105789 d!29573))

(declare-fun b!106961 () Bool)

(declare-fun e!69587 () Bool)

(declare-fun e!69588 () Bool)

(assert (=> b!106961 (= e!69587 e!69588)))

(declare-fun res!53160 () Bool)

(assert (=> b!106961 (=> (not res!53160) (not e!69588))))

(declare-fun e!69589 () Bool)

(assert (=> b!106961 (= res!53160 (not e!69589))))

(declare-fun res!53158 () Bool)

(assert (=> b!106961 (=> (not res!53158) (not e!69589))))

(assert (=> b!106961 (= res!53158 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!106962 () Bool)

(declare-fun e!69586 () Bool)

(declare-fun call!11322 () Bool)

(assert (=> b!106962 (= e!69586 call!11322)))

(declare-fun b!106963 () Bool)

(assert (=> b!106963 (= e!69589 (contains!829 (ite c!18447 (Cons!1612 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) Nil!1613) Nil!1613) (select (arr!2063 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!29575 () Bool)

(declare-fun res!53159 () Bool)

(assert (=> d!29575 (=> res!53159 e!69587)))

(assert (=> d!29575 (= res!53159 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29575 (= (arrayNoDuplicates!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18447 (Cons!1612 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) Nil!1613) Nil!1613)) e!69587)))

(declare-fun c!18739 () Bool)

(declare-fun bm!11319 () Bool)

(assert (=> bm!11319 (= call!11322 (arrayNoDuplicates!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18739 (Cons!1612 (select (arr!2063 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!18447 (Cons!1612 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) Nil!1613) Nil!1613)) (ite c!18447 (Cons!1612 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) Nil!1613) Nil!1613))))))

(declare-fun b!106964 () Bool)

(assert (=> b!106964 (= e!69586 call!11322)))

(declare-fun b!106965 () Bool)

(assert (=> b!106965 (= e!69588 e!69586)))

(assert (=> b!106965 (= c!18739 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!29575 (not res!53159)) b!106961))

(assert (= (and b!106961 res!53158) b!106963))

(assert (= (and b!106961 res!53160) b!106965))

(assert (= (and b!106965 c!18739) b!106962))

(assert (= (and b!106965 (not c!18739)) b!106964))

(assert (= (or b!106962 b!106964) bm!11319))

(assert (=> b!106961 m!119509))

(assert (=> b!106961 m!119509))

(assert (=> b!106961 m!119511))

(assert (=> b!106963 m!119509))

(assert (=> b!106963 m!119509))

(declare-fun m!120295 () Bool)

(assert (=> b!106963 m!120295))

(assert (=> bm!11319 m!119509))

(declare-fun m!120297 () Bool)

(assert (=> bm!11319 m!120297))

(assert (=> b!106965 m!119509))

(assert (=> b!106965 m!119509))

(assert (=> b!106965 m!119511))

(assert (=> bm!11187 d!29575))

(declare-fun lt!54916 () Bool)

(declare-fun d!29577 () Bool)

(assert (=> d!29577 (= lt!54916 (select (content!109 (toList!803 lt!54169)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!69591 () Bool)

(assert (=> d!29577 (= lt!54916 e!69591)))

(declare-fun res!53161 () Bool)

(assert (=> d!29577 (=> (not res!53161) (not e!69591))))

(assert (=> d!29577 (= res!53161 ((_ is Cons!1613) (toList!803 lt!54169)))))

(assert (=> d!29577 (= (contains!830 (toList!803 lt!54169) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!54916)))

(declare-fun b!106966 () Bool)

(declare-fun e!69590 () Bool)

(assert (=> b!106966 (= e!69591 e!69590)))

(declare-fun res!53162 () Bool)

(assert (=> b!106966 (=> res!53162 e!69590)))

(assert (=> b!106966 (= res!53162 (= (h!2210 (toList!803 lt!54169)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106967 () Bool)

(assert (=> b!106967 (= e!69590 (contains!830 (t!5700 (toList!803 lt!54169)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29577 res!53161) b!106966))

(assert (= (and b!106966 (not res!53162)) b!106967))

(declare-fun m!120299 () Bool)

(assert (=> d!29577 m!120299))

(declare-fun m!120301 () Bool)

(assert (=> d!29577 m!120301))

(declare-fun m!120303 () Bool)

(assert (=> b!106967 m!120303))

(assert (=> b!105835 d!29577))

(assert (=> bm!11220 d!29355))

(assert (=> bm!11208 d!29391))

(declare-fun d!29579 () Bool)

(assert (=> d!29579 (isDefined!109 (getValueByKey!156 (toList!803 lt!53891) (_1!1216 lt!53815)))))

(declare-fun lt!54917 () Unit!3232)

(assert (=> d!29579 (= lt!54917 (choose!660 (toList!803 lt!53891) (_1!1216 lt!53815)))))

(declare-fun e!69592 () Bool)

(assert (=> d!29579 e!69592))

(declare-fun res!53163 () Bool)

(assert (=> d!29579 (=> (not res!53163) (not e!69592))))

(assert (=> d!29579 (= res!53163 (isStrictlySorted!309 (toList!803 lt!53891)))))

(assert (=> d!29579 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53891) (_1!1216 lt!53815)) lt!54917)))

(declare-fun b!106968 () Bool)

(assert (=> b!106968 (= e!69592 (containsKey!160 (toList!803 lt!53891) (_1!1216 lt!53815)))))

(assert (= (and d!29579 res!53163) b!106968))

(assert (=> d!29579 m!117649))

(assert (=> d!29579 m!117649))

(assert (=> d!29579 m!118213))

(declare-fun m!120305 () Bool)

(assert (=> d!29579 m!120305))

(declare-fun m!120307 () Bool)

(assert (=> d!29579 m!120307))

(assert (=> b!106968 m!118209))

(assert (=> b!105870 d!29579))

(assert (=> b!105870 d!29307))

(assert (=> b!105870 d!28957))

(declare-fun lt!54918 () Bool)

(declare-fun d!29581 () Bool)

(assert (=> d!29581 (= lt!54918 (select (content!109 (toList!803 lt!54079)) (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69594 () Bool)

(assert (=> d!29581 (= lt!54918 e!69594)))

(declare-fun res!53164 () Bool)

(assert (=> d!29581 (=> (not res!53164) (not e!69594))))

(assert (=> d!29581 (= res!53164 ((_ is Cons!1613) (toList!803 lt!54079)))))

(assert (=> d!29581 (= (contains!830 (toList!803 lt!54079) (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54918)))

(declare-fun b!106969 () Bool)

(declare-fun e!69593 () Bool)

(assert (=> b!106969 (= e!69594 e!69593)))

(declare-fun res!53165 () Bool)

(assert (=> b!106969 (=> res!53165 e!69593)))

(assert (=> b!106969 (= res!53165 (= (h!2210 (toList!803 lt!54079)) (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!106970 () Bool)

(assert (=> b!106970 (= e!69593 (contains!830 (t!5700 (toList!803 lt!54079)) (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29581 res!53164) b!106969))

(assert (= (and b!106969 (not res!53165)) b!106970))

(declare-fun m!120309 () Bool)

(assert (=> d!29581 m!120309))

(declare-fun m!120311 () Bool)

(assert (=> d!29581 m!120311))

(declare-fun m!120313 () Bool)

(assert (=> b!106970 m!120313))

(assert (=> b!105668 d!29581))

(declare-fun d!29583 () Bool)

(declare-fun res!53166 () Bool)

(declare-fun e!69595 () Bool)

(assert (=> d!29583 (=> res!53166 e!69595)))

(assert (=> d!29583 (= res!53166 (and ((_ is Cons!1613) (toList!803 lt!53878)) (= (_1!1216 (h!2210 (toList!803 lt!53878))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29583 (= (containsKey!160 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69595)))

(declare-fun b!106971 () Bool)

(declare-fun e!69596 () Bool)

(assert (=> b!106971 (= e!69595 e!69596)))

(declare-fun res!53167 () Bool)

(assert (=> b!106971 (=> (not res!53167) (not e!69596))))

(assert (=> b!106971 (= res!53167 (and (or (not ((_ is Cons!1613) (toList!803 lt!53878))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53878))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1613) (toList!803 lt!53878)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53878))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!106972 () Bool)

(assert (=> b!106972 (= e!69596 (containsKey!160 (t!5700 (toList!803 lt!53878)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29583 (not res!53166)) b!106971))

(assert (= (and b!106971 res!53167) b!106972))

(assert (=> b!106972 m!117601))

(declare-fun m!120315 () Bool)

(assert (=> b!106972 m!120315))

(assert (=> d!28969 d!29583))

(declare-fun d!29585 () Bool)

(declare-fun res!53168 () Bool)

(declare-fun e!69597 () Bool)

(assert (=> d!29585 (=> res!53168 e!69597)))

(assert (=> d!29585 (= res!53168 (and ((_ is Cons!1613) (toList!803 lt!53878)) (= (_1!1216 (h!2210 (toList!803 lt!53878))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29585 (= (containsKey!160 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000) e!69597)))

(declare-fun b!106973 () Bool)

(declare-fun e!69598 () Bool)

(assert (=> b!106973 (= e!69597 e!69598)))

(declare-fun res!53169 () Bool)

(assert (=> b!106973 (=> (not res!53169) (not e!69598))))

(assert (=> b!106973 (= res!53169 (and (or (not ((_ is Cons!1613) (toList!803 lt!53878))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53878))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1613) (toList!803 lt!53878)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53878))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106974 () Bool)

(assert (=> b!106974 (= e!69598 (containsKey!160 (t!5700 (toList!803 lt!53878)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29585 (not res!53168)) b!106973))

(assert (= (and b!106973 res!53169) b!106974))

(declare-fun m!120317 () Bool)

(assert (=> b!106974 m!120317))

(assert (=> d!29011 d!29585))

(declare-fun d!29587 () Bool)

(assert (=> d!29587 (= (get!1334 (getValueByKey!156 (toList!803 lt!53959) lt!53970)) (v!2896 (getValueByKey!156 (toList!803 lt!53959) lt!53970)))))

(assert (=> d!28853 d!29587))

(declare-fun b!106977 () Bool)

(declare-fun e!69600 () Option!162)

(assert (=> b!106977 (= e!69600 (getValueByKey!156 (t!5700 (toList!803 lt!53959)) lt!53970))))

(declare-fun b!106975 () Bool)

(declare-fun e!69599 () Option!162)

(assert (=> b!106975 (= e!69599 (Some!161 (_2!1216 (h!2210 (toList!803 lt!53959)))))))

(declare-fun d!29589 () Bool)

(declare-fun c!18740 () Bool)

(assert (=> d!29589 (= c!18740 (and ((_ is Cons!1613) (toList!803 lt!53959)) (= (_1!1216 (h!2210 (toList!803 lt!53959))) lt!53970)))))

(assert (=> d!29589 (= (getValueByKey!156 (toList!803 lt!53959) lt!53970) e!69599)))

(declare-fun b!106978 () Bool)

(assert (=> b!106978 (= e!69600 None!160)))

(declare-fun b!106976 () Bool)

(assert (=> b!106976 (= e!69599 e!69600)))

(declare-fun c!18741 () Bool)

(assert (=> b!106976 (= c!18741 (and ((_ is Cons!1613) (toList!803 lt!53959)) (not (= (_1!1216 (h!2210 (toList!803 lt!53959))) lt!53970))))))

(assert (= (and d!29589 c!18740) b!106975))

(assert (= (and d!29589 (not c!18740)) b!106976))

(assert (= (and b!106976 c!18741) b!106977))

(assert (= (and b!106976 (not c!18741)) b!106978))

(declare-fun m!120319 () Bool)

(assert (=> b!106977 m!120319))

(assert (=> d!28853 d!29589))

(declare-fun d!29591 () Bool)

(declare-fun e!69602 () Bool)

(assert (=> d!29591 e!69602))

(declare-fun res!53170 () Bool)

(assert (=> d!29591 (=> res!53170 e!69602)))

(declare-fun lt!54921 () Bool)

(assert (=> d!29591 (= res!53170 (not lt!54921))))

(declare-fun lt!54919 () Bool)

(assert (=> d!29591 (= lt!54921 lt!54919)))

(declare-fun lt!54920 () Unit!3232)

(declare-fun e!69601 () Unit!3232)

(assert (=> d!29591 (= lt!54920 e!69601)))

(declare-fun c!18742 () Bool)

(assert (=> d!29591 (= c!18742 lt!54919)))

(assert (=> d!29591 (= lt!54919 (containsKey!160 (toList!803 lt!54083) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29591 (= (contains!828 lt!54083 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54921)))

(declare-fun b!106979 () Bool)

(declare-fun lt!54922 () Unit!3232)

(assert (=> b!106979 (= e!69601 lt!54922)))

(assert (=> b!106979 (= lt!54922 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54083) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!106979 (isDefined!109 (getValueByKey!156 (toList!803 lt!54083) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106980 () Bool)

(declare-fun Unit!3300 () Unit!3232)

(assert (=> b!106980 (= e!69601 Unit!3300)))

(declare-fun b!106981 () Bool)

(assert (=> b!106981 (= e!69602 (isDefined!109 (getValueByKey!156 (toList!803 lt!54083) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29591 c!18742) b!106979))

(assert (= (and d!29591 (not c!18742)) b!106980))

(assert (= (and d!29591 (not res!53170)) b!106981))

(declare-fun m!120321 () Bool)

(assert (=> d!29591 m!120321))

(declare-fun m!120323 () Bool)

(assert (=> b!106979 m!120323))

(assert (=> b!106979 m!117869))

(assert (=> b!106979 m!117869))

(declare-fun m!120325 () Bool)

(assert (=> b!106979 m!120325))

(assert (=> b!106981 m!117869))

(assert (=> b!106981 m!117869))

(assert (=> b!106981 m!120325))

(assert (=> d!28839 d!29591))

(declare-fun b!106984 () Bool)

(declare-fun e!69604 () Option!162)

(assert (=> b!106984 (= e!69604 (getValueByKey!156 (t!5700 lt!54085) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106982 () Bool)

(declare-fun e!69603 () Option!162)

(assert (=> b!106982 (= e!69603 (Some!161 (_2!1216 (h!2210 lt!54085))))))

(declare-fun d!29593 () Bool)

(declare-fun c!18743 () Bool)

(assert (=> d!29593 (= c!18743 (and ((_ is Cons!1613) lt!54085) (= (_1!1216 (h!2210 lt!54085)) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29593 (= (getValueByKey!156 lt!54085 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69603)))

(declare-fun b!106985 () Bool)

(assert (=> b!106985 (= e!69604 None!160)))

(declare-fun b!106983 () Bool)

(assert (=> b!106983 (= e!69603 e!69604)))

(declare-fun c!18744 () Bool)

(assert (=> b!106983 (= c!18744 (and ((_ is Cons!1613) lt!54085) (not (= (_1!1216 (h!2210 lt!54085)) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29593 c!18743) b!106982))

(assert (= (and d!29593 (not c!18743)) b!106983))

(assert (= (and b!106983 c!18744) b!106984))

(assert (= (and b!106983 (not c!18744)) b!106985))

(declare-fun m!120327 () Bool)

(assert (=> b!106984 m!120327))

(assert (=> d!28839 d!29593))

(declare-fun d!29595 () Bool)

(assert (=> d!29595 (= (getValueByKey!156 lt!54085 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54923 () Unit!3232)

(assert (=> d!29595 (= lt!54923 (choose!657 lt!54085 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69605 () Bool)

(assert (=> d!29595 e!69605))

(declare-fun res!53171 () Bool)

(assert (=> d!29595 (=> (not res!53171) (not e!69605))))

(assert (=> d!29595 (= res!53171 (isStrictlySorted!309 lt!54085))))

(assert (=> d!29595 (= (lemmaContainsTupThenGetReturnValue!72 lt!54085 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54923)))

(declare-fun b!106986 () Bool)

(declare-fun res!53172 () Bool)

(assert (=> b!106986 (=> (not res!53172) (not e!69605))))

(assert (=> b!106986 (= res!53172 (containsKey!160 lt!54085 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106987 () Bool)

(assert (=> b!106987 (= e!69605 (contains!830 lt!54085 (tuple2!2411 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29595 res!53171) b!106986))

(assert (= (and b!106986 res!53172) b!106987))

(assert (=> d!29595 m!117863))

(declare-fun m!120329 () Bool)

(assert (=> d!29595 m!120329))

(declare-fun m!120331 () Bool)

(assert (=> d!29595 m!120331))

(declare-fun m!120333 () Bool)

(assert (=> b!106986 m!120333))

(declare-fun m!120335 () Bool)

(assert (=> b!106987 m!120335))

(assert (=> d!28839 d!29595))

(declare-fun b!106988 () Bool)

(declare-fun e!69609 () List!1617)

(declare-fun e!69607 () List!1617)

(assert (=> b!106988 (= e!69609 e!69607)))

(declare-fun c!18746 () Bool)

(assert (=> b!106988 (= c!18746 (and ((_ is Cons!1613) (toList!803 lt!53963)) (= (_1!1216 (h!2210 (toList!803 lt!53963))) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106989 () Bool)

(declare-fun call!11323 () List!1617)

(assert (=> b!106989 (= e!69609 call!11323)))

(declare-fun b!106991 () Bool)

(declare-fun e!69610 () List!1617)

(declare-fun call!11325 () List!1617)

(assert (=> b!106991 (= e!69610 call!11325)))

(declare-fun c!18747 () Bool)

(declare-fun b!106992 () Bool)

(assert (=> b!106992 (= c!18747 (and ((_ is Cons!1613) (toList!803 lt!53963)) (bvsgt (_1!1216 (h!2210 (toList!803 lt!53963))) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> b!106992 (= e!69607 e!69610)))

(declare-fun bm!11320 () Bool)

(declare-fun call!11324 () List!1617)

(assert (=> bm!11320 (= call!11325 call!11324)))

(declare-fun e!69608 () List!1617)

(declare-fun b!106993 () Bool)

(assert (=> b!106993 (= e!69608 (insertStrictlySorted!75 (t!5700 (toList!803 lt!53963)) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106994 () Bool)

(assert (=> b!106994 (= e!69610 call!11325)))

(declare-fun b!106995 () Bool)

(declare-fun res!53174 () Bool)

(declare-fun e!69606 () Bool)

(assert (=> b!106995 (=> (not res!53174) (not e!69606))))

(declare-fun lt!54924 () List!1617)

(assert (=> b!106995 (= res!53174 (containsKey!160 lt!54924 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!106996 () Bool)

(assert (=> b!106996 (= e!69606 (contains!830 lt!54924 (tuple2!2411 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!106997 () Bool)

(assert (=> b!106997 (= e!69608 (ite c!18746 (t!5700 (toList!803 lt!53963)) (ite c!18747 (Cons!1613 (h!2210 (toList!803 lt!53963)) (t!5700 (toList!803 lt!53963))) Nil!1614)))))

(declare-fun d!29597 () Bool)

(assert (=> d!29597 e!69606))

(declare-fun res!53173 () Bool)

(assert (=> d!29597 (=> (not res!53173) (not e!69606))))

(assert (=> d!29597 (= res!53173 (isStrictlySorted!309 lt!54924))))

(assert (=> d!29597 (= lt!54924 e!69609)))

(declare-fun c!18745 () Bool)

(assert (=> d!29597 (= c!18745 (and ((_ is Cons!1613) (toList!803 lt!53963)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53963))) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29597 (isStrictlySorted!309 (toList!803 lt!53963))))

(assert (=> d!29597 (= (insertStrictlySorted!75 (toList!803 lt!53963) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54924)))

(declare-fun b!106990 () Bool)

(assert (=> b!106990 (= e!69607 call!11324)))

(declare-fun bm!11321 () Bool)

(assert (=> bm!11321 (= call!11323 ($colon$colon!81 e!69608 (ite c!18745 (h!2210 (toList!803 lt!53963)) (tuple2!2411 (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18748 () Bool)

(assert (=> bm!11321 (= c!18748 c!18745)))

(declare-fun bm!11322 () Bool)

(assert (=> bm!11322 (= call!11324 call!11323)))

(assert (= (and d!29597 c!18745) b!106989))

(assert (= (and d!29597 (not c!18745)) b!106988))

(assert (= (and b!106988 c!18746) b!106990))

(assert (= (and b!106988 (not c!18746)) b!106992))

(assert (= (and b!106992 c!18747) b!106994))

(assert (= (and b!106992 (not c!18747)) b!106991))

(assert (= (or b!106994 b!106991) bm!11320))

(assert (= (or b!106990 bm!11320) bm!11322))

(assert (= (or b!106989 bm!11322) bm!11321))

(assert (= (and bm!11321 c!18748) b!106993))

(assert (= (and bm!11321 (not c!18748)) b!106997))

(assert (= (and d!29597 res!53173) b!106995))

(assert (= (and b!106995 res!53174) b!106996))

(declare-fun m!120337 () Bool)

(assert (=> b!106993 m!120337))

(declare-fun m!120339 () Bool)

(assert (=> b!106996 m!120339))

(declare-fun m!120341 () Bool)

(assert (=> d!29597 m!120341))

(declare-fun m!120343 () Bool)

(assert (=> d!29597 m!120343))

(declare-fun m!120345 () Bool)

(assert (=> bm!11321 m!120345))

(declare-fun m!120347 () Bool)

(assert (=> b!106995 m!120347))

(assert (=> d!28839 d!29597))

(declare-fun d!29599 () Bool)

(assert (=> d!29599 (= (get!1334 (getValueByKey!156 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2896 (getValueByKey!156 (toList!803 lt!53958) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28949 d!29599))

(assert (=> d!28949 d!29093))

(declare-fun d!29601 () Bool)

(assert (=> d!29601 (= (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954)) (not (isEmpty!371 (getValueByKey!156 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954))))))

(declare-fun bs!4411 () Bool)

(assert (= bs!4411 d!29601))

(assert (=> bs!4411 m!117877))

(declare-fun m!120349 () Bool)

(assert (=> bs!4411 m!120349))

(assert (=> b!105673 d!29601))

(declare-fun b!107000 () Bool)

(declare-fun e!69612 () Option!162)

(assert (=> b!107000 (= e!69612 (getValueByKey!156 (t!5700 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) lt!53954))))

(declare-fun b!106998 () Bool)

(declare-fun e!69611 () Option!162)

(assert (=> b!106998 (= e!69611 (Some!161 (_2!1216 (h!2210 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun c!18749 () Bool)

(declare-fun d!29603 () Bool)

(assert (=> d!29603 (= c!18749 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53954)))))

(assert (=> d!29603 (= (getValueByKey!156 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954) e!69611)))

(declare-fun b!107001 () Bool)

(assert (=> b!107001 (= e!69612 None!160)))

(declare-fun b!106999 () Bool)

(assert (=> b!106999 (= e!69611 e!69612)))

(declare-fun c!18750 () Bool)

(assert (=> b!106999 (= c!18750 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (not (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53954))))))

(assert (= (and d!29603 c!18749) b!106998))

(assert (= (and d!29603 (not c!18749)) b!106999))

(assert (= (and b!106999 c!18750) b!107000))

(assert (= (and b!106999 (not c!18750)) b!107001))

(declare-fun m!120351 () Bool)

(assert (=> b!107000 m!120351))

(assert (=> b!105673 d!29603))

(assert (=> d!28861 d!28859))

(declare-fun d!29605 () Bool)

(declare-fun e!69624 () Bool)

(assert (=> d!29605 e!69624))

(declare-fun c!18755 () Bool)

(declare-fun lt!54927 () SeekEntryResult!259)

(assert (=> d!29605 (= c!18755 ((_ is MissingZero!259) lt!54927))))

(assert (=> d!29605 (= lt!54927 (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(assert (=> d!29605 true))

(declare-fun _$34!892 () Unit!3232)

(assert (=> d!29605 (= (choose!656 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)) _$34!892)))

(declare-fun b!107018 () Bool)

(declare-fun res!53185 () Bool)

(declare-fun e!69622 () Bool)

(assert (=> b!107018 (=> (not res!53185) (not e!69622))))

(declare-fun call!11331 () Bool)

(assert (=> b!107018 (= res!53185 call!11331)))

(declare-fun e!69623 () Bool)

(assert (=> b!107018 (= e!69623 e!69622)))

(declare-fun b!107019 () Bool)

(declare-fun res!53186 () Bool)

(assert (=> b!107019 (= res!53186 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3184 lt!54927)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69621 () Bool)

(assert (=> b!107019 (=> (not res!53186) (not e!69621))))

(declare-fun b!107020 () Bool)

(assert (=> b!107020 (= e!69623 ((_ is Undefined!259) lt!54927))))

(declare-fun b!107021 () Bool)

(declare-fun call!11330 () Bool)

(assert (=> b!107021 (= e!69622 (not call!11330))))

(declare-fun b!107022 () Bool)

(assert (=> b!107022 (= e!69624 e!69623)))

(declare-fun c!18756 () Bool)

(assert (=> b!107022 (= c!18756 ((_ is MissingVacant!259) lt!54927))))

(declare-fun bm!11327 () Bool)

(assert (=> bm!11327 (= call!11331 (inRange!0 (ite c!18755 (index!3184 lt!54927) (index!3187 lt!54927)) (mask!6728 newMap!16)))))

(declare-fun bm!11328 () Bool)

(assert (=> bm!11328 (= call!11330 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!107023 () Bool)

(assert (=> b!107023 (= e!69624 e!69621)))

(declare-fun res!53183 () Bool)

(assert (=> b!107023 (= res!53183 call!11331)))

(assert (=> b!107023 (=> (not res!53183) (not e!69621))))

(declare-fun b!107024 () Bool)

(declare-fun res!53184 () Bool)

(assert (=> b!107024 (=> (not res!53184) (not e!69622))))

(assert (=> b!107024 (= res!53184 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3187 lt!54927)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107025 () Bool)

(assert (=> b!107025 (= e!69621 (not call!11330))))

(assert (= (and d!29605 c!18755) b!107023))

(assert (= (and d!29605 (not c!18755)) b!107022))

(assert (= (and b!107023 res!53183) b!107019))

(assert (= (and b!107019 res!53186) b!107025))

(assert (= (and b!107022 c!18756) b!107018))

(assert (= (and b!107022 (not c!18756)) b!107020))

(assert (= (and b!107018 res!53185) b!107024))

(assert (= (and b!107024 res!53184) b!107021))

(assert (= (or b!107023 b!107018) bm!11327))

(assert (= (or b!107025 b!107021) bm!11328))

(assert (=> bm!11328 m!117489))

(assert (=> bm!11328 m!117803))

(declare-fun m!120353 () Bool)

(assert (=> b!107019 m!120353))

(assert (=> d!29605 m!117489))

(assert (=> d!29605 m!117779))

(declare-fun m!120355 () Bool)

(assert (=> bm!11327 m!120355))

(declare-fun m!120357 () Bool)

(assert (=> b!107024 m!120357))

(assert (=> d!28861 d!29605))

(assert (=> d!28861 d!29153))

(declare-fun b!107026 () Bool)

(declare-fun e!69630 () Bool)

(declare-fun e!69628 () Bool)

(assert (=> b!107026 (= e!69630 e!69628)))

(assert (=> b!107026 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun lt!54931 () ListLongMap!1575)

(declare-fun res!53188 () Bool)

(assert (=> b!107026 (= res!53188 (contains!828 lt!54931 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!107026 (=> (not res!53188) (not e!69628))))

(declare-fun b!107027 () Bool)

(declare-fun e!69629 () ListLongMap!1575)

(declare-fun call!11332 () ListLongMap!1575)

(assert (=> b!107027 (= e!69629 call!11332)))

(declare-fun d!29607 () Bool)

(declare-fun e!69626 () Bool)

(assert (=> d!29607 e!69626))

(declare-fun res!53187 () Bool)

(assert (=> d!29607 (=> (not res!53187) (not e!69626))))

(assert (=> d!29607 (= res!53187 (not (contains!828 lt!54931 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!69627 () ListLongMap!1575)

(assert (=> d!29607 (= lt!54931 e!69627)))

(declare-fun c!18760 () Bool)

(assert (=> d!29607 (= c!18760 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> d!29607 (validMask!0 (mask!6728 (v!2892 (underlying!361 thiss!992))))))

(assert (=> d!29607 (= (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))) lt!54931)))

(declare-fun b!107028 () Bool)

(assert (=> b!107028 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> b!107028 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2319 (_values!2565 (v!2892 (underlying!361 thiss!992))))))))

(assert (=> b!107028 (= e!69628 (= (apply!98 lt!54931 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!107029 () Bool)

(declare-fun e!69625 () Bool)

(assert (=> b!107029 (= e!69625 (= lt!54931 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!107030 () Bool)

(assert (=> b!107030 (= e!69627 e!69629)))

(declare-fun c!18758 () Bool)

(assert (=> b!107030 (= c!18758 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!11329 () Bool)

(assert (=> bm!11329 (= call!11332 (getCurrentListMapNoExtraKeys!110 (_keys!4288 (v!2892 (underlying!361 thiss!992))) (_values!2565 (v!2892 (underlying!361 thiss!992))) (mask!6728 (v!2892 (underlying!361 thiss!992))) (extraKeys!2387 (v!2892 (underlying!361 thiss!992))) (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) (minValue!2457 (v!2892 (underlying!361 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992)))))))

(declare-fun b!107031 () Bool)

(assert (=> b!107031 (= e!69627 (ListLongMap!1576 Nil!1614))))

(declare-fun b!107032 () Bool)

(assert (=> b!107032 (= e!69630 e!69625)))

(declare-fun c!18757 () Bool)

(assert (=> b!107032 (= c!18757 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!107033 () Bool)

(declare-fun lt!54930 () Unit!3232)

(declare-fun lt!54929 () Unit!3232)

(assert (=> b!107033 (= lt!54930 lt!54929)))

(declare-fun lt!54932 () (_ BitVec 64))

(declare-fun lt!54934 () ListLongMap!1575)

(declare-fun lt!54928 () V!3219)

(declare-fun lt!54933 () (_ BitVec 64))

(assert (=> b!107033 (not (contains!828 (+!144 lt!54934 (tuple2!2411 lt!54932 lt!54928)) lt!54933))))

(assert (=> b!107033 (= lt!54929 (addStillNotContains!46 lt!54934 lt!54932 lt!54928 lt!54933))))

(assert (=> b!107033 (= lt!54933 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!107033 (= lt!54928 (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!107033 (= lt!54932 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!107033 (= lt!54934 call!11332)))

(assert (=> b!107033 (= e!69629 (+!144 call!11332 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!107034 () Bool)

(declare-fun res!53189 () Bool)

(assert (=> b!107034 (=> (not res!53189) (not e!69626))))

(assert (=> b!107034 (= res!53189 (not (contains!828 lt!54931 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107035 () Bool)

(assert (=> b!107035 (= e!69625 (isEmpty!370 lt!54931))))

(declare-fun b!107036 () Bool)

(declare-fun e!69631 () Bool)

(assert (=> b!107036 (= e!69631 (validKeyInArray!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!107036 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!107037 () Bool)

(assert (=> b!107037 (= e!69626 e!69630)))

(declare-fun c!18759 () Bool)

(assert (=> b!107037 (= c!18759 e!69631)))

(declare-fun res!53190 () Bool)

(assert (=> b!107037 (=> (not res!53190) (not e!69631))))

(assert (=> b!107037 (= res!53190 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_keys!4288 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29607 c!18760) b!107031))

(assert (= (and d!29607 (not c!18760)) b!107030))

(assert (= (and b!107030 c!18758) b!107033))

(assert (= (and b!107030 (not c!18758)) b!107027))

(assert (= (or b!107033 b!107027) bm!11329))

(assert (= (and d!29607 res!53187) b!107034))

(assert (= (and b!107034 res!53189) b!107037))

(assert (= (and b!107037 res!53190) b!107036))

(assert (= (and b!107037 c!18759) b!107026))

(assert (= (and b!107037 (not c!18759)) b!107032))

(assert (= (and b!107026 res!53188) b!107028))

(assert (= (and b!107032 c!18757) b!107029))

(assert (= (and b!107032 (not c!18757)) b!107035))

(declare-fun b_lambda!4779 () Bool)

(assert (=> (not b_lambda!4779) (not b!107028)))

(assert (=> b!107028 t!5696))

(declare-fun b_and!6603 () Bool)

(assert (= b_and!6599 (and (=> t!5696 result!3449) b_and!6603)))

(assert (=> b!107028 t!5698))

(declare-fun b_and!6605 () Bool)

(assert (= b_and!6601 (and (=> t!5698 result!3453) b_and!6605)))

(declare-fun b_lambda!4781 () Bool)

(assert (=> (not b_lambda!4781) (not b!107033)))

(assert (=> b!107033 t!5696))

(declare-fun b_and!6607 () Bool)

(assert (= b_and!6603 (and (=> t!5696 result!3449) b_and!6607)))

(assert (=> b!107033 t!5698))

(declare-fun b_and!6609 () Bool)

(assert (= b_and!6605 (and (=> t!5698 result!3453) b_and!6609)))

(declare-fun m!120359 () Bool)

(assert (=> bm!11329 m!120359))

(assert (=> b!107028 m!118687))

(declare-fun m!120361 () Bool)

(assert (=> b!107028 m!120361))

(declare-fun m!120363 () Bool)

(assert (=> b!107028 m!120363))

(assert (=> b!107028 m!120363))

(assert (=> b!107028 m!117499))

(declare-fun m!120365 () Bool)

(assert (=> b!107028 m!120365))

(assert (=> b!107028 m!117499))

(assert (=> b!107028 m!118687))

(assert (=> b!107026 m!118687))

(assert (=> b!107026 m!118687))

(declare-fun m!120367 () Bool)

(assert (=> b!107026 m!120367))

(declare-fun m!120369 () Bool)

(assert (=> b!107035 m!120369))

(assert (=> b!107030 m!118687))

(assert (=> b!107030 m!118687))

(declare-fun m!120371 () Bool)

(assert (=> b!107030 m!120371))

(declare-fun m!120373 () Bool)

(assert (=> d!29607 m!120373))

(assert (=> d!29607 m!117517))

(assert (=> b!107029 m!120359))

(assert (=> b!107036 m!118687))

(assert (=> b!107036 m!118687))

(assert (=> b!107036 m!120371))

(declare-fun m!120375 () Bool)

(assert (=> b!107034 m!120375))

(declare-fun m!120377 () Bool)

(assert (=> b!107033 m!120377))

(assert (=> b!107033 m!120377))

(declare-fun m!120379 () Bool)

(assert (=> b!107033 m!120379))

(assert (=> b!107033 m!120363))

(assert (=> b!107033 m!120363))

(assert (=> b!107033 m!117499))

(assert (=> b!107033 m!120365))

(assert (=> b!107033 m!117499))

(assert (=> b!107033 m!118687))

(declare-fun m!120381 () Bool)

(assert (=> b!107033 m!120381))

(declare-fun m!120383 () Bool)

(assert (=> b!107033 m!120383))

(assert (=> bm!11210 d!29607))

(assert (=> d!28897 d!28859))

(declare-fun d!29609 () Bool)

(declare-fun e!69634 () Bool)

(assert (=> d!29609 e!69634))

(declare-fun res!53195 () Bool)

(assert (=> d!29609 (=> (not res!53195) (not e!69634))))

(declare-fun lt!54937 () SeekEntryResult!259)

(assert (=> d!29609 (= res!53195 ((_ is Found!259) lt!54937))))

(assert (=> d!29609 (= lt!54937 (seekEntryOrOpen!0 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(assert (=> d!29609 true))

(declare-fun _$33!90 () Unit!3232)

(assert (=> d!29609 (= (choose!659 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)) _$33!90)))

(declare-fun b!107042 () Bool)

(declare-fun res!53196 () Bool)

(assert (=> b!107042 (=> (not res!53196) (not e!69634))))

(assert (=> b!107042 (= res!53196 (inRange!0 (index!3185 lt!54937) (mask!6728 newMap!16)))))

(declare-fun b!107043 () Bool)

(assert (=> b!107043 (= e!69634 (= (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54937)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29609 res!53195) b!107042))

(assert (= (and b!107042 res!53196) b!107043))

(assert (=> d!29609 m!117489))

(assert (=> d!29609 m!117779))

(declare-fun m!120385 () Bool)

(assert (=> b!107042 m!120385))

(declare-fun m!120387 () Bool)

(assert (=> b!107043 m!120387))

(assert (=> d!28897 d!29609))

(assert (=> d!28897 d!29153))

(assert (=> d!28833 d!28841))

(assert (=> d!28833 d!28851))

(declare-fun d!29611 () Bool)

(assert (=> d!29611 (contains!828 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!53954)))

(assert (=> d!29611 true))

(declare-fun _$35!348 () Unit!3232)

(assert (=> d!29611 (= (choose!655 lt!53956 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))) lt!53954) _$35!348)))

(declare-fun bs!4412 () Bool)

(assert (= bs!4412 d!29611))

(assert (=> bs!4412 m!117731))

(assert (=> bs!4412 m!117731))

(assert (=> bs!4412 m!117749))

(assert (=> d!28833 d!29611))

(declare-fun d!29613 () Bool)

(declare-fun e!69636 () Bool)

(assert (=> d!29613 e!69636))

(declare-fun res!53197 () Bool)

(assert (=> d!29613 (=> res!53197 e!69636)))

(declare-fun lt!54940 () Bool)

(assert (=> d!29613 (= res!53197 (not lt!54940))))

(declare-fun lt!54938 () Bool)

(assert (=> d!29613 (= lt!54940 lt!54938)))

(declare-fun lt!54939 () Unit!3232)

(declare-fun e!69635 () Unit!3232)

(assert (=> d!29613 (= lt!54939 e!69635)))

(declare-fun c!18761 () Bool)

(assert (=> d!29613 (= c!18761 lt!54938)))

(assert (=> d!29613 (= lt!54938 (containsKey!160 (toList!803 lt!53956) lt!53954))))

(assert (=> d!29613 (= (contains!828 lt!53956 lt!53954) lt!54940)))

(declare-fun b!107045 () Bool)

(declare-fun lt!54941 () Unit!3232)

(assert (=> b!107045 (= e!69635 lt!54941)))

(assert (=> b!107045 (= lt!54941 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53956) lt!53954))))

(assert (=> b!107045 (isDefined!109 (getValueByKey!156 (toList!803 lt!53956) lt!53954))))

(declare-fun b!107046 () Bool)

(declare-fun Unit!3301 () Unit!3232)

(assert (=> b!107046 (= e!69635 Unit!3301)))

(declare-fun b!107047 () Bool)

(assert (=> b!107047 (= e!69636 (isDefined!109 (getValueByKey!156 (toList!803 lt!53956) lt!53954)))))

(assert (= (and d!29613 c!18761) b!107045))

(assert (= (and d!29613 (not c!18761)) b!107046))

(assert (= (and d!29613 (not res!53197)) b!107047))

(declare-fun m!120389 () Bool)

(assert (=> d!29613 m!120389))

(declare-fun m!120391 () Bool)

(assert (=> b!107045 m!120391))

(declare-fun m!120393 () Bool)

(assert (=> b!107045 m!120393))

(assert (=> b!107045 m!120393))

(declare-fun m!120395 () Bool)

(assert (=> b!107045 m!120395))

(assert (=> b!107047 m!120393))

(assert (=> b!107047 m!120393))

(assert (=> b!107047 m!120395))

(assert (=> d!28833 d!29613))

(assert (=> b!106024 d!28861))

(declare-fun d!29615 () Bool)

(assert (=> d!29615 (contains!828 (getCurrentListMap!489 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))

(assert (=> d!29615 true))

(declare-fun _$16!126 () Unit!3232)

(assert (=> d!29615 (= (choose!662 (_keys!4288 newMap!16) lt!54058 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3185 lt!54060) (defaultEntry!2582 newMap!16)) _$16!126)))

(declare-fun bs!4413 () Bool)

(assert (= bs!4413 d!29615))

(assert (=> bs!4413 m!118281))

(assert (=> bs!4413 m!117797))

(assert (=> bs!4413 m!118281))

(assert (=> bs!4413 m!117797))

(assert (=> bs!4413 m!118283))

(assert (=> d!28963 d!29615))

(assert (=> d!28963 d!29153))

(assert (=> b!106091 d!29047))

(declare-fun e!69638 () Option!162)

(declare-fun b!107050 () Bool)

(assert (=> b!107050 (= e!69638 (getValueByKey!156 (t!5700 (toList!803 lt!54169)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!107048 () Bool)

(declare-fun e!69637 () Option!162)

(assert (=> b!107048 (= e!69637 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54169)))))))

(declare-fun d!29617 () Bool)

(declare-fun c!18762 () Bool)

(assert (=> d!29617 (= c!18762 (and ((_ is Cons!1613) (toList!803 lt!54169)) (= (_1!1216 (h!2210 (toList!803 lt!54169))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29617 (= (getValueByKey!156 (toList!803 lt!54169) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!69637)))

(declare-fun b!107051 () Bool)

(assert (=> b!107051 (= e!69638 None!160)))

(declare-fun b!107049 () Bool)

(assert (=> b!107049 (= e!69637 e!69638)))

(declare-fun c!18763 () Bool)

(assert (=> b!107049 (= c!18763 (and ((_ is Cons!1613) (toList!803 lt!54169)) (not (= (_1!1216 (h!2210 (toList!803 lt!54169))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1330 (select (arr!2064 (_values!2565 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!385 (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!29617 c!18762) b!107048))

(assert (= (and d!29617 (not c!18762)) b!107049))

(assert (= (and b!107049 c!18763) b!107050))

(assert (= (and b!107049 (not c!18763)) b!107051))

(declare-fun m!120397 () Bool)

(assert (=> b!107050 m!120397))

(assert (=> b!105834 d!29617))

(declare-fun d!29619 () Bool)

(assert (=> d!29619 (= (apply!98 lt!54365 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1334 (getValueByKey!156 (toList!803 lt!54365) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4414 () Bool)

(assert (= bs!4414 d!29619))

(assert (=> bs!4414 m!118971))

(assert (=> bs!4414 m!118971))

(declare-fun m!120399 () Bool)

(assert (=> bs!4414 m!120399))

(assert (=> b!106041 d!29619))

(declare-fun b!107054 () Bool)

(declare-fun e!69640 () Option!162)

(assert (=> b!107054 (= e!69640 (getValueByKey!156 (t!5700 (toList!803 lt!54259)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!107052 () Bool)

(declare-fun e!69639 () Option!162)

(assert (=> b!107052 (= e!69639 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54259)))))))

(declare-fun d!29621 () Bool)

(declare-fun c!18764 () Bool)

(assert (=> d!29621 (= c!18764 (and ((_ is Cons!1613) (toList!803 lt!54259)) (= (_1!1216 (h!2210 (toList!803 lt!54259))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!29621 (= (getValueByKey!156 (toList!803 lt!54259) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) e!69639)))

(declare-fun b!107055 () Bool)

(assert (=> b!107055 (= e!69640 None!160)))

(declare-fun b!107053 () Bool)

(assert (=> b!107053 (= e!69639 e!69640)))

(declare-fun c!18765 () Bool)

(assert (=> b!107053 (= c!18765 (and ((_ is Cons!1613) (toList!803 lt!54259)) (not (= (_1!1216 (h!2210 (toList!803 lt!54259))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (= (and d!29621 c!18764) b!107052))

(assert (= (and d!29621 (not c!18764)) b!107053))

(assert (= (and b!107053 c!18765) b!107054))

(assert (= (and b!107053 (not c!18765)) b!107055))

(declare-fun m!120401 () Bool)

(assert (=> b!107054 m!120401))

(assert (=> b!105966 d!29621))

(declare-fun d!29623 () Bool)

(assert (=> d!29623 (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54942 () Unit!3232)

(assert (=> d!29623 (= lt!54942 (choose!660 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69641 () Bool)

(assert (=> d!29623 e!69641))

(declare-fun res!53198 () Bool)

(assert (=> d!29623 (=> (not res!53198) (not e!69641))))

(assert (=> d!29623 (= res!53198 (isStrictlySorted!309 (toList!803 lt!53878)))))

(assert (=> d!29623 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000) lt!54942)))

(declare-fun b!107056 () Bool)

(assert (=> b!107056 (= e!69641 (containsKey!160 (toList!803 lt!53878) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29623 res!53198) b!107056))

(assert (=> d!29623 m!118535))

(assert (=> d!29623 m!118535))

(assert (=> d!29623 m!118537))

(declare-fun m!120403 () Bool)

(assert (=> d!29623 m!120403))

(assert (=> d!29623 m!118993))

(assert (=> b!107056 m!118531))

(assert (=> b!106058 d!29623))

(assert (=> b!106058 d!29433))

(assert (=> b!106058 d!29435))

(declare-fun lt!54943 () Bool)

(declare-fun d!29625 () Bool)

(assert (=> d!29625 (= lt!54943 (select (content!109 (toList!803 lt!54083)) (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun e!69643 () Bool)

(assert (=> d!29625 (= lt!54943 e!69643)))

(declare-fun res!53199 () Bool)

(assert (=> d!29625 (=> (not res!53199) (not e!69643))))

(assert (=> d!29625 (= res!53199 ((_ is Cons!1613) (toList!803 lt!54083)))))

(assert (=> d!29625 (= (contains!830 (toList!803 lt!54083) (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))) lt!54943)))

(declare-fun b!107057 () Bool)

(declare-fun e!69642 () Bool)

(assert (=> b!107057 (= e!69643 e!69642)))

(declare-fun res!53200 () Bool)

(assert (=> b!107057 (=> res!53200 e!69642)))

(assert (=> b!107057 (= res!53200 (= (h!2210 (toList!803 lt!54083)) (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(declare-fun b!107058 () Bool)

(assert (=> b!107058 (= e!69642 (contains!830 (t!5700 (toList!803 lt!54083)) (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))

(assert (= (and d!29625 res!53199) b!107057))

(assert (= (and b!107057 (not res!53200)) b!107058))

(declare-fun m!120405 () Bool)

(assert (=> d!29625 m!120405))

(declare-fun m!120407 () Bool)

(assert (=> d!29625 m!120407))

(declare-fun m!120409 () Bool)

(assert (=> b!107058 m!120409))

(assert (=> b!105670 d!29625))

(declare-fun d!29627 () Bool)

(declare-fun lt!54944 () Bool)

(assert (=> d!29627 (= lt!54944 (select (content!109 lt!54127) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun e!69645 () Bool)

(assert (=> d!29627 (= lt!54944 e!69645)))

(declare-fun res!53201 () Bool)

(assert (=> d!29627 (=> (not res!53201) (not e!69645))))

(assert (=> d!29627 (= res!53201 ((_ is Cons!1613) lt!54127))))

(assert (=> d!29627 (= (contains!830 lt!54127 (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))) lt!54944)))

(declare-fun b!107059 () Bool)

(declare-fun e!69644 () Bool)

(assert (=> b!107059 (= e!69645 e!69644)))

(declare-fun res!53202 () Bool)

(assert (=> b!107059 (=> res!53202 e!69644)))

(assert (=> b!107059 (= res!53202 (= (h!2210 lt!54127) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(declare-fun b!107060 () Bool)

(assert (=> b!107060 (= e!69644 (contains!830 (t!5700 lt!54127) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))))))

(assert (= (and d!29627 res!53201) b!107059))

(assert (= (and b!107059 (not res!53202)) b!107060))

(declare-fun m!120411 () Bool)

(assert (=> d!29627 m!120411))

(declare-fun m!120413 () Bool)

(assert (=> d!29627 m!120413))

(declare-fun m!120415 () Bool)

(assert (=> b!107060 m!120415))

(assert (=> b!105781 d!29627))

(declare-fun d!29629 () Bool)

(assert (not d!29629))

(assert (=> b!105894 d!29629))

(declare-fun b!107063 () Bool)

(declare-fun e!69647 () Option!162)

(assert (=> b!107063 (= e!69647 (getValueByKey!156 (t!5700 (toList!803 lt!54161)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!107061 () Bool)

(declare-fun e!69646 () Option!162)

(assert (=> b!107061 (= e!69646 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54161)))))))

(declare-fun c!18766 () Bool)

(declare-fun d!29631 () Bool)

(assert (=> d!29631 (= c!18766 (and ((_ is Cons!1613) (toList!803 lt!54161)) (= (_1!1216 (h!2210 (toList!803 lt!54161))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!29631 (= (getValueByKey!156 (toList!803 lt!54161) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) e!69646)))

(declare-fun b!107064 () Bool)

(assert (=> b!107064 (= e!69647 None!160)))

(declare-fun b!107062 () Bool)

(assert (=> b!107062 (= e!69646 e!69647)))

(declare-fun c!18767 () Bool)

(assert (=> b!107062 (= c!18767 (and ((_ is Cons!1613) (toList!803 lt!54161)) (not (= (_1!1216 (h!2210 (toList!803 lt!54161))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (= (and d!29631 c!18766) b!107061))

(assert (= (and d!29631 (not c!18766)) b!107062))

(assert (= (and b!107062 c!18767) b!107063))

(assert (= (and b!107062 (not c!18767)) b!107064))

(declare-fun m!120417 () Bool)

(assert (=> b!107063 m!120417))

(assert (=> b!105821 d!29631))

(declare-fun d!29633 () Bool)

(assert (=> d!29633 (isDefined!109 (getValueByKey!156 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!54945 () Unit!3232)

(assert (=> d!29633 (= lt!54945 (choose!660 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!69648 () Bool)

(assert (=> d!29633 e!69648))

(declare-fun res!53203 () Bool)

(assert (=> d!29633 (=> (not res!53203) (not e!69648))))

(assert (=> d!29633 (= res!53203 (isStrictlySorted!309 (toList!803 lt!53878)))))

(assert (=> d!29633 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54945)))

(declare-fun b!107065 () Bool)

(assert (=> b!107065 (= e!69648 (containsKey!160 (toList!803 lt!53878) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29633 res!53203) b!107065))

(assert (=> d!29633 m!117601))

(assert (=> d!29633 m!118241))

(assert (=> d!29633 m!118241))

(assert (=> d!29633 m!118303))

(assert (=> d!29633 m!117601))

(declare-fun m!120419 () Bool)

(assert (=> d!29633 m!120419))

(assert (=> d!29633 m!118993))

(assert (=> b!107065 m!117601))

(assert (=> b!107065 m!118299))

(assert (=> b!105935 d!29633))

(assert (=> b!105935 d!29431))

(assert (=> b!105935 d!29325))

(declare-fun d!29635 () Bool)

(assert (=> d!29635 (= (apply!98 lt!54188 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1334 (getValueByKey!156 (toList!803 lt!54188) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4415 () Bool)

(assert (= bs!4415 d!29635))

(assert (=> bs!4415 m!118985))

(assert (=> bs!4415 m!118985))

(declare-fun m!120421 () Bool)

(assert (=> bs!4415 m!120421))

(assert (=> b!105859 d!29635))

(declare-fun d!29637 () Bool)

(assert (=> d!29637 (= (isEmpty!371 (getValueByKey!156 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))) (not ((_ is Some!161) (getValueByKey!156 (toList!803 lt!53813) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(assert (=> d!28907 d!29637))

(declare-fun d!29639 () Bool)

(declare-fun lt!54946 () Bool)

(assert (=> d!29639 (= lt!54946 (select (content!109 lt!54245) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun e!69650 () Bool)

(assert (=> d!29639 (= lt!54946 e!69650)))

(declare-fun res!53204 () Bool)

(assert (=> d!29639 (=> (not res!53204) (not e!69650))))

(assert (=> d!29639 (= res!53204 ((_ is Cons!1613) lt!54245))))

(assert (=> d!29639 (= (contains!830 lt!54245 (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))) lt!54946)))

(declare-fun b!107066 () Bool)

(declare-fun e!69649 () Bool)

(assert (=> b!107066 (= e!69650 e!69649)))

(declare-fun res!53205 () Bool)

(assert (=> b!107066 (=> res!53205 e!69649)))

(assert (=> b!107066 (= res!53205 (= (h!2210 lt!54245) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun b!107067 () Bool)

(assert (=> b!107067 (= e!69649 (contains!830 (t!5700 lt!54245) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(assert (= (and d!29639 res!53204) b!107066))

(assert (= (and b!107066 (not res!53205)) b!107067))

(declare-fun m!120423 () Bool)

(assert (=> d!29639 m!120423))

(declare-fun m!120425 () Bool)

(assert (=> d!29639 m!120425))

(declare-fun m!120427 () Bool)

(assert (=> b!107067 m!120427))

(assert (=> b!105955 d!29639))

(declare-fun b!107068 () Bool)

(declare-fun e!69652 () (_ BitVec 32))

(declare-fun call!11333 () (_ BitVec 32))

(assert (=> b!107068 (= e!69652 (bvadd #b00000000000000000000000000000001 call!11333))))

(declare-fun b!107069 () Bool)

(declare-fun e!69651 () (_ BitVec 32))

(assert (=> b!107069 (= e!69651 #b00000000000000000000000000000000)))

(declare-fun b!107070 () Bool)

(assert (=> b!107070 (= e!69652 call!11333)))

(declare-fun d!29641 () Bool)

(declare-fun lt!54947 () (_ BitVec 32))

(assert (=> d!29641 (and (bvsge lt!54947 #b00000000000000000000000000000000) (bvsle lt!54947 (bvsub (size!2318 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!29641 (= lt!54947 e!69651)))

(declare-fun c!18768 () Bool)

(assert (=> d!29641 (= c!18768 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29641 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2318 (_keys!4288 newMap!16)) (size!2318 (_keys!4288 newMap!16))))))

(assert (=> d!29641 (= (arrayCountValidKeys!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))) lt!54947)))

(declare-fun bm!11330 () Bool)

(assert (=> bm!11330 (= call!11333 (arrayCountValidKeys!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!107071 () Bool)

(assert (=> b!107071 (= e!69651 e!69652)))

(declare-fun c!18769 () Bool)

(assert (=> b!107071 (= c!18769 (validKeyInArray!0 (select (arr!2063 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!29641 c!18768) b!107069))

(assert (= (and d!29641 (not c!18768)) b!107071))

(assert (= (and b!107071 c!18769) b!107068))

(assert (= (and b!107071 (not c!18769)) b!107070))

(assert (= (or b!107068 b!107070) bm!11330))

(declare-fun m!120429 () Bool)

(assert (=> bm!11330 m!120429))

(assert (=> b!107071 m!119509))

(assert (=> b!107071 m!119509))

(assert (=> b!107071 m!119511))

(assert (=> bm!11186 d!29641))

(declare-fun d!29643 () Bool)

(declare-fun e!69654 () Bool)

(assert (=> d!29643 e!69654))

(declare-fun res!53206 () Bool)

(assert (=> d!29643 (=> res!53206 e!69654)))

(declare-fun lt!54950 () Bool)

(assert (=> d!29643 (= res!53206 (not lt!54950))))

(declare-fun lt!54948 () Bool)

(assert (=> d!29643 (= lt!54950 lt!54948)))

(declare-fun lt!54949 () Unit!3232)

(declare-fun e!69653 () Unit!3232)

(assert (=> d!29643 (= lt!54949 e!69653)))

(declare-fun c!18770 () Bool)

(assert (=> d!29643 (= c!18770 lt!54948)))

(assert (=> d!29643 (= lt!54948 (containsKey!160 (toList!803 lt!54410) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29643 (= (contains!828 lt!54410 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54950)))

(declare-fun b!107072 () Bool)

(declare-fun lt!54951 () Unit!3232)

(assert (=> b!107072 (= e!69653 lt!54951)))

(assert (=> b!107072 (= lt!54951 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54410) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107072 (isDefined!109 (getValueByKey!156 (toList!803 lt!54410) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107073 () Bool)

(declare-fun Unit!3302 () Unit!3232)

(assert (=> b!107073 (= e!69653 Unit!3302)))

(declare-fun b!107074 () Bool)

(assert (=> b!107074 (= e!69654 (isDefined!109 (getValueByKey!156 (toList!803 lt!54410) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29643 c!18770) b!107072))

(assert (= (and d!29643 (not c!18770)) b!107073))

(assert (= (and d!29643 (not res!53206)) b!107074))

(declare-fun m!120431 () Bool)

(assert (=> d!29643 m!120431))

(declare-fun m!120433 () Bool)

(assert (=> b!107072 m!120433))

(assert (=> b!107072 m!120153))

(assert (=> b!107072 m!120153))

(declare-fun m!120435 () Bool)

(assert (=> b!107072 m!120435))

(assert (=> b!107074 m!120153))

(assert (=> b!107074 m!120153))

(assert (=> b!107074 m!120435))

(assert (=> bm!11215 d!29643))

(declare-fun d!29645 () Bool)

(declare-fun e!69656 () Bool)

(assert (=> d!29645 e!69656))

(declare-fun res!53207 () Bool)

(assert (=> d!29645 (=> res!53207 e!69656)))

(declare-fun lt!54954 () Bool)

(assert (=> d!29645 (= res!53207 (not lt!54954))))

(declare-fun lt!54952 () Bool)

(assert (=> d!29645 (= lt!54954 lt!54952)))

(declare-fun lt!54953 () Unit!3232)

(declare-fun e!69655 () Unit!3232)

(assert (=> d!29645 (= lt!54953 e!69655)))

(declare-fun c!18771 () Bool)

(assert (=> d!29645 (= c!18771 lt!54952)))

(assert (=> d!29645 (= lt!54952 (containsKey!160 (toList!803 lt!54365) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29645 (= (contains!828 lt!54365 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54954)))

(declare-fun b!107075 () Bool)

(declare-fun lt!54955 () Unit!3232)

(assert (=> b!107075 (= e!69655 lt!54955)))

(assert (=> b!107075 (= lt!54955 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54365) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107075 (isDefined!109 (getValueByKey!156 (toList!803 lt!54365) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107076 () Bool)

(declare-fun Unit!3303 () Unit!3232)

(assert (=> b!107076 (= e!69655 Unit!3303)))

(declare-fun b!107077 () Bool)

(assert (=> b!107077 (= e!69656 (isDefined!109 (getValueByKey!156 (toList!803 lt!54365) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29645 c!18771) b!107075))

(assert (= (and d!29645 (not c!18771)) b!107076))

(assert (= (and d!29645 (not res!53207)) b!107077))

(declare-fun m!120437 () Bool)

(assert (=> d!29645 m!120437))

(declare-fun m!120439 () Bool)

(assert (=> b!107075 m!120439))

(assert (=> b!107075 m!120185))

(assert (=> b!107075 m!120185))

(declare-fun m!120441 () Bool)

(assert (=> b!107075 m!120441))

(assert (=> b!107077 m!120185))

(assert (=> b!107077 m!120185))

(assert (=> b!107077 m!120441))

(assert (=> bm!11203 d!29645))

(declare-fun d!29647 () Bool)

(assert (=> d!29647 (= (isDefined!109 (getValueByKey!156 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))))) (not (isEmpty!371 (getValueByKey!156 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))))

(declare-fun bs!4416 () Bool)

(assert (= bs!4416 d!29647))

(assert (=> bs!4416 m!118053))

(declare-fun m!120443 () Bool)

(assert (=> bs!4416 m!120443))

(assert (=> b!105811 d!29647))

(declare-fun e!69658 () Option!162)

(declare-fun b!107080 () Bool)

(assert (=> b!107080 (= e!69658 (getValueByKey!156 (t!5700 (toList!803 call!11141)) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))

(declare-fun b!107078 () Bool)

(declare-fun e!69657 () Option!162)

(assert (=> b!107078 (= e!69657 (Some!161 (_2!1216 (h!2210 (toList!803 call!11141)))))))

(declare-fun d!29649 () Bool)

(declare-fun c!18772 () Bool)

(assert (=> d!29649 (= c!18772 (and ((_ is Cons!1613) (toList!803 call!11141)) (= (_1!1216 (h!2210 (toList!803 call!11141))) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))))))))

(assert (=> d!29649 (= (getValueByKey!156 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))) e!69657)))

(declare-fun b!107081 () Bool)

(assert (=> b!107081 (= e!69658 None!160)))

(declare-fun b!107079 () Bool)

(assert (=> b!107079 (= e!69657 e!69658)))

(declare-fun c!18773 () Bool)

(assert (=> b!107079 (= c!18773 (and ((_ is Cons!1613) (toList!803 call!11141)) (not (= (_1!1216 (h!2210 (toList!803 call!11141))) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))))

(assert (= (and d!29649 c!18772) b!107078))

(assert (= (and d!29649 (not c!18772)) b!107079))

(assert (= (and b!107079 c!18773) b!107080))

(assert (= (and b!107079 (not c!18773)) b!107081))

(declare-fun m!120445 () Bool)

(assert (=> b!107080 m!120445))

(assert (=> b!105811 d!29649))

(declare-fun d!29651 () Bool)

(declare-fun e!69660 () Bool)

(assert (=> d!29651 e!69660))

(declare-fun res!53208 () Bool)

(assert (=> d!29651 (=> res!53208 e!69660)))

(declare-fun lt!54958 () Bool)

(assert (=> d!29651 (= res!53208 (not lt!54958))))

(declare-fun lt!54956 () Bool)

(assert (=> d!29651 (= lt!54958 lt!54956)))

(declare-fun lt!54957 () Unit!3232)

(declare-fun e!69659 () Unit!3232)

(assert (=> d!29651 (= lt!54957 e!69659)))

(declare-fun c!18774 () Bool)

(assert (=> d!29651 (= c!18774 lt!54956)))

(assert (=> d!29651 (= lt!54956 (containsKey!160 (toList!803 lt!54188) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29651 (= (contains!828 lt!54188 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54958)))

(declare-fun b!107082 () Bool)

(declare-fun lt!54959 () Unit!3232)

(assert (=> b!107082 (= e!69659 lt!54959)))

(assert (=> b!107082 (= lt!54959 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54188) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107082 (isDefined!109 (getValueByKey!156 (toList!803 lt!54188) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107083 () Bool)

(declare-fun Unit!3304 () Unit!3232)

(assert (=> b!107083 (= e!69659 Unit!3304)))

(declare-fun b!107084 () Bool)

(assert (=> b!107084 (= e!69660 (isDefined!109 (getValueByKey!156 (toList!803 lt!54188) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29651 c!18774) b!107082))

(assert (= (and d!29651 (not c!18774)) b!107083))

(assert (= (and d!29651 (not res!53208)) b!107084))

(declare-fun m!120447 () Bool)

(assert (=> d!29651 m!120447))

(declare-fun m!120449 () Bool)

(assert (=> b!107082 m!120449))

(assert (=> b!107082 m!120139))

(assert (=> b!107082 m!120139))

(declare-fun m!120451 () Bool)

(assert (=> b!107082 m!120451))

(assert (=> b!107084 m!120139))

(assert (=> b!107084 m!120139))

(assert (=> b!107084 m!120451))

(assert (=> bm!11174 d!29651))

(declare-fun d!29653 () Bool)

(assert (=> d!29653 (= (apply!98 lt!54410 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1334 (getValueByKey!156 (toList!803 lt!54410) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4417 () Bool)

(assert (= bs!4417 d!29653))

(assert (=> bs!4417 m!118937))

(assert (=> bs!4417 m!118937))

(declare-fun m!120453 () Bool)

(assert (=> bs!4417 m!120453))

(assert (=> b!106122 d!29653))

(declare-fun d!29655 () Bool)

(declare-fun lt!54960 () Bool)

(assert (=> d!29655 (= lt!54960 (select (content!110 Nil!1613) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!69662 () Bool)

(assert (=> d!29655 (= lt!54960 e!69662)))

(declare-fun res!53210 () Bool)

(assert (=> d!29655 (=> (not res!53210) (not e!69662))))

(assert (=> d!29655 (= res!53210 ((_ is Cons!1612) Nil!1613))))

(assert (=> d!29655 (= (contains!829 Nil!1613 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) lt!54960)))

(declare-fun b!107085 () Bool)

(declare-fun e!69661 () Bool)

(assert (=> b!107085 (= e!69662 e!69661)))

(declare-fun res!53209 () Bool)

(assert (=> b!107085 (=> res!53209 e!69661)))

(assert (=> b!107085 (= res!53209 (= (h!2209 Nil!1613) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107086 () Bool)

(assert (=> b!107086 (= e!69661 (contains!829 (t!5699 Nil!1613) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!29655 res!53210) b!107085))

(assert (= (and b!107085 (not res!53209)) b!107086))

(assert (=> d!29655 m!118245))

(assert (=> d!29655 m!118103))

(declare-fun m!120455 () Bool)

(assert (=> d!29655 m!120455))

(assert (=> b!107086 m!118103))

(declare-fun m!120457 () Bool)

(assert (=> b!107086 m!120457))

(assert (=> b!105909 d!29655))

(declare-fun d!29657 () Bool)

(assert (=> d!29657 (isDefined!109 (getValueByKey!156 (toList!803 lt!53902) (_1!1216 lt!53815)))))

(declare-fun lt!54961 () Unit!3232)

(assert (=> d!29657 (= lt!54961 (choose!660 (toList!803 lt!53902) (_1!1216 lt!53815)))))

(declare-fun e!69663 () Bool)

(assert (=> d!29657 e!69663))

(declare-fun res!53211 () Bool)

(assert (=> d!29657 (=> (not res!53211) (not e!69663))))

(assert (=> d!29657 (= res!53211 (isStrictlySorted!309 (toList!803 lt!53902)))))

(assert (=> d!29657 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!53902) (_1!1216 lt!53815)) lt!54961)))

(declare-fun b!107087 () Bool)

(assert (=> b!107087 (= e!69663 (containsKey!160 (toList!803 lt!53902) (_1!1216 lt!53815)))))

(assert (= (and d!29657 res!53211) b!107087))

(assert (=> d!29657 m!117683))

(assert (=> d!29657 m!117683))

(assert (=> d!29657 m!117971))

(declare-fun m!120459 () Bool)

(assert (=> d!29657 m!120459))

(declare-fun m!120461 () Bool)

(assert (=> d!29657 m!120461))

(assert (=> b!107087 m!117967))

(assert (=> b!105732 d!29657))

(assert (=> b!105732 d!29509))

(assert (=> b!105732 d!29005))

(declare-fun b!107090 () Bool)

(declare-fun e!69665 () Option!162)

(assert (=> b!107090 (= e!69665 (getValueByKey!156 (t!5700 (t!5700 (toList!803 lt!53895))) (_1!1216 lt!53814)))))

(declare-fun b!107088 () Bool)

(declare-fun e!69664 () Option!162)

(assert (=> b!107088 (= e!69664 (Some!161 (_2!1216 (h!2210 (t!5700 (toList!803 lt!53895))))))))

(declare-fun d!29659 () Bool)

(declare-fun c!18775 () Bool)

(assert (=> d!29659 (= c!18775 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53895))) (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53895)))) (_1!1216 lt!53814))))))

(assert (=> d!29659 (= (getValueByKey!156 (t!5700 (toList!803 lt!53895)) (_1!1216 lt!53814)) e!69664)))

(declare-fun b!107091 () Bool)

(assert (=> b!107091 (= e!69665 None!160)))

(declare-fun b!107089 () Bool)

(assert (=> b!107089 (= e!69664 e!69665)))

(declare-fun c!18776 () Bool)

(assert (=> b!107089 (= c!18776 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53895))) (not (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53895)))) (_1!1216 lt!53814)))))))

(assert (= (and d!29659 c!18775) b!107088))

(assert (= (and d!29659 (not c!18775)) b!107089))

(assert (= (and b!107089 c!18776) b!107090))

(assert (= (and b!107089 (not c!18776)) b!107091))

(declare-fun m!120463 () Bool)

(assert (=> b!107090 m!120463))

(assert (=> b!105921 d!29659))

(assert (=> d!28875 d!28873))

(declare-fun d!29661 () Bool)

(assert (=> d!29661 (= (getValueByKey!156 lt!53904 (_1!1216 lt!53815)) (Some!161 (_2!1216 lt!53815)))))

(assert (=> d!29661 true))

(declare-fun _$22!434 () Unit!3232)

(assert (=> d!29661 (= (choose!657 lt!53904 (_1!1216 lt!53815) (_2!1216 lt!53815)) _$22!434)))

(declare-fun bs!4418 () Bool)

(assert (= bs!4418 d!29661))

(assert (=> bs!4418 m!117677))

(assert (=> d!28875 d!29661))

(declare-fun d!29663 () Bool)

(declare-fun res!53212 () Bool)

(declare-fun e!69666 () Bool)

(assert (=> d!29663 (=> res!53212 e!69666)))

(assert (=> d!29663 (= res!53212 (or ((_ is Nil!1614) lt!53904) ((_ is Nil!1614) (t!5700 lt!53904))))))

(assert (=> d!29663 (= (isStrictlySorted!309 lt!53904) e!69666)))

(declare-fun b!107092 () Bool)

(declare-fun e!69667 () Bool)

(assert (=> b!107092 (= e!69666 e!69667)))

(declare-fun res!53213 () Bool)

(assert (=> b!107092 (=> (not res!53213) (not e!69667))))

(assert (=> b!107092 (= res!53213 (bvslt (_1!1216 (h!2210 lt!53904)) (_1!1216 (h!2210 (t!5700 lt!53904)))))))

(declare-fun b!107093 () Bool)

(assert (=> b!107093 (= e!69667 (isStrictlySorted!309 (t!5700 lt!53904)))))

(assert (= (and d!29663 (not res!53212)) b!107092))

(assert (= (and b!107092 res!53213) b!107093))

(declare-fun m!120465 () Bool)

(assert (=> b!107093 m!120465))

(assert (=> d!28875 d!29663))

(assert (=> b!105840 d!29117))

(assert (=> b!105840 d!29119))

(declare-fun d!29665 () Bool)

(assert (=> d!29665 (= (get!1334 (getValueByKey!156 (toList!803 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53953)) (v!2896 (getValueByKey!156 (toList!803 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53953)))))

(assert (=> d!28855 d!29665))

(declare-fun b!107096 () Bool)

(declare-fun e!69669 () Option!162)

(assert (=> b!107096 (= e!69669 (getValueByKey!156 (t!5700 (toList!803 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) lt!53953))))

(declare-fun e!69668 () Option!162)

(declare-fun b!107094 () Bool)

(assert (=> b!107094 (= e!69668 (Some!161 (_2!1216 (h!2210 (toList!803 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun d!29667 () Bool)

(declare-fun c!18777 () Bool)

(assert (=> d!29667 (= c!18777 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53953)))))

(assert (=> d!29667 (= (getValueByKey!156 (toList!803 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53953) e!69668)))

(declare-fun b!107097 () Bool)

(assert (=> b!107097 (= e!69669 None!160)))

(declare-fun b!107095 () Bool)

(assert (=> b!107095 (= e!69668 e!69669)))

(declare-fun c!18778 () Bool)

(assert (=> b!107095 (= c!18778 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) (not (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53971 (tuple2!2411 lt!53955 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))) lt!53953))))))

(assert (= (and d!29667 c!18777) b!107094))

(assert (= (and d!29667 (not c!18777)) b!107095))

(assert (= (and b!107095 c!18778) b!107096))

(assert (= (and b!107095 (not c!18778)) b!107097))

(declare-fun m!120467 () Bool)

(assert (=> b!107096 m!120467))

(assert (=> d!28855 d!29667))

(assert (=> b!106083 d!29135))

(declare-fun d!29669 () Bool)

(declare-fun e!69671 () Bool)

(assert (=> d!29669 e!69671))

(declare-fun res!53214 () Bool)

(assert (=> d!29669 (=> res!53214 e!69671)))

(declare-fun lt!54964 () Bool)

(assert (=> d!29669 (= res!53214 (not lt!54964))))

(declare-fun lt!54962 () Bool)

(assert (=> d!29669 (= lt!54964 lt!54962)))

(declare-fun lt!54963 () Unit!3232)

(declare-fun e!69670 () Unit!3232)

(assert (=> d!29669 (= lt!54963 e!69670)))

(declare-fun c!18779 () Bool)

(assert (=> d!29669 (= c!18779 lt!54962)))

(assert (=> d!29669 (= lt!54962 (containsKey!160 (toList!803 lt!54173) (_1!1216 (tuple2!2411 lt!53879 lt!53875))))))

(assert (=> d!29669 (= (contains!828 lt!54173 (_1!1216 (tuple2!2411 lt!53879 lt!53875))) lt!54964)))

(declare-fun b!107098 () Bool)

(declare-fun lt!54965 () Unit!3232)

(assert (=> b!107098 (= e!69670 lt!54965)))

(assert (=> b!107098 (= lt!54965 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54173) (_1!1216 (tuple2!2411 lt!53879 lt!53875))))))

(assert (=> b!107098 (isDefined!109 (getValueByKey!156 (toList!803 lt!54173) (_1!1216 (tuple2!2411 lt!53879 lt!53875))))))

(declare-fun b!107099 () Bool)

(declare-fun Unit!3305 () Unit!3232)

(assert (=> b!107099 (= e!69670 Unit!3305)))

(declare-fun b!107100 () Bool)

(assert (=> b!107100 (= e!69671 (isDefined!109 (getValueByKey!156 (toList!803 lt!54173) (_1!1216 (tuple2!2411 lt!53879 lt!53875)))))))

(assert (= (and d!29669 c!18779) b!107098))

(assert (= (and d!29669 (not c!18779)) b!107099))

(assert (= (and d!29669 (not res!53214)) b!107100))

(declare-fun m!120469 () Bool)

(assert (=> d!29669 m!120469))

(declare-fun m!120471 () Bool)

(assert (=> b!107098 m!120471))

(assert (=> b!107098 m!118127))

(assert (=> b!107098 m!118127))

(declare-fun m!120473 () Bool)

(assert (=> b!107098 m!120473))

(assert (=> b!107100 m!118127))

(assert (=> b!107100 m!118127))

(assert (=> b!107100 m!120473))

(assert (=> d!28921 d!29669))

(declare-fun e!69673 () Option!162)

(declare-fun b!107103 () Bool)

(assert (=> b!107103 (= e!69673 (getValueByKey!156 (t!5700 lt!54175) (_1!1216 (tuple2!2411 lt!53879 lt!53875))))))

(declare-fun b!107101 () Bool)

(declare-fun e!69672 () Option!162)

(assert (=> b!107101 (= e!69672 (Some!161 (_2!1216 (h!2210 lt!54175))))))

(declare-fun c!18780 () Bool)

(declare-fun d!29671 () Bool)

(assert (=> d!29671 (= c!18780 (and ((_ is Cons!1613) lt!54175) (= (_1!1216 (h!2210 lt!54175)) (_1!1216 (tuple2!2411 lt!53879 lt!53875)))))))

(assert (=> d!29671 (= (getValueByKey!156 lt!54175 (_1!1216 (tuple2!2411 lt!53879 lt!53875))) e!69672)))

(declare-fun b!107104 () Bool)

(assert (=> b!107104 (= e!69673 None!160)))

(declare-fun b!107102 () Bool)

(assert (=> b!107102 (= e!69672 e!69673)))

(declare-fun c!18781 () Bool)

(assert (=> b!107102 (= c!18781 (and ((_ is Cons!1613) lt!54175) (not (= (_1!1216 (h!2210 lt!54175)) (_1!1216 (tuple2!2411 lt!53879 lt!53875))))))))

(assert (= (and d!29671 c!18780) b!107101))

(assert (= (and d!29671 (not c!18780)) b!107102))

(assert (= (and b!107102 c!18781) b!107103))

(assert (= (and b!107102 (not c!18781)) b!107104))

(declare-fun m!120475 () Bool)

(assert (=> b!107103 m!120475))

(assert (=> d!28921 d!29671))

(declare-fun d!29673 () Bool)

(assert (=> d!29673 (= (getValueByKey!156 lt!54175 (_1!1216 (tuple2!2411 lt!53879 lt!53875))) (Some!161 (_2!1216 (tuple2!2411 lt!53879 lt!53875))))))

(declare-fun lt!54966 () Unit!3232)

(assert (=> d!29673 (= lt!54966 (choose!657 lt!54175 (_1!1216 (tuple2!2411 lt!53879 lt!53875)) (_2!1216 (tuple2!2411 lt!53879 lt!53875))))))

(declare-fun e!69674 () Bool)

(assert (=> d!29673 e!69674))

(declare-fun res!53215 () Bool)

(assert (=> d!29673 (=> (not res!53215) (not e!69674))))

(assert (=> d!29673 (= res!53215 (isStrictlySorted!309 lt!54175))))

(assert (=> d!29673 (= (lemmaContainsTupThenGetReturnValue!72 lt!54175 (_1!1216 (tuple2!2411 lt!53879 lt!53875)) (_2!1216 (tuple2!2411 lt!53879 lt!53875))) lt!54966)))

(declare-fun b!107105 () Bool)

(declare-fun res!53216 () Bool)

(assert (=> b!107105 (=> (not res!53216) (not e!69674))))

(assert (=> b!107105 (= res!53216 (containsKey!160 lt!54175 (_1!1216 (tuple2!2411 lt!53879 lt!53875))))))

(declare-fun b!107106 () Bool)

(assert (=> b!107106 (= e!69674 (contains!830 lt!54175 (tuple2!2411 (_1!1216 (tuple2!2411 lt!53879 lt!53875)) (_2!1216 (tuple2!2411 lt!53879 lt!53875)))))))

(assert (= (and d!29673 res!53215) b!107105))

(assert (= (and b!107105 res!53216) b!107106))

(assert (=> d!29673 m!118121))

(declare-fun m!120477 () Bool)

(assert (=> d!29673 m!120477))

(declare-fun m!120479 () Bool)

(assert (=> d!29673 m!120479))

(declare-fun m!120481 () Bool)

(assert (=> b!107105 m!120481))

(declare-fun m!120483 () Bool)

(assert (=> b!107106 m!120483))

(assert (=> d!28921 d!29673))

(declare-fun b!107107 () Bool)

(declare-fun e!69678 () List!1617)

(declare-fun e!69676 () List!1617)

(assert (=> b!107107 (= e!69678 e!69676)))

(declare-fun c!18783 () Bool)

(assert (=> b!107107 (= c!18783 (and ((_ is Cons!1613) (toList!803 lt!53881)) (= (_1!1216 (h!2210 (toList!803 lt!53881))) (_1!1216 (tuple2!2411 lt!53879 lt!53875)))))))

(declare-fun b!107108 () Bool)

(declare-fun call!11334 () List!1617)

(assert (=> b!107108 (= e!69678 call!11334)))

(declare-fun b!107110 () Bool)

(declare-fun e!69679 () List!1617)

(declare-fun call!11336 () List!1617)

(assert (=> b!107110 (= e!69679 call!11336)))

(declare-fun c!18784 () Bool)

(declare-fun b!107111 () Bool)

(assert (=> b!107111 (= c!18784 (and ((_ is Cons!1613) (toList!803 lt!53881)) (bvsgt (_1!1216 (h!2210 (toList!803 lt!53881))) (_1!1216 (tuple2!2411 lt!53879 lt!53875)))))))

(assert (=> b!107111 (= e!69676 e!69679)))

(declare-fun bm!11331 () Bool)

(declare-fun call!11335 () List!1617)

(assert (=> bm!11331 (= call!11336 call!11335)))

(declare-fun b!107112 () Bool)

(declare-fun e!69677 () List!1617)

(assert (=> b!107112 (= e!69677 (insertStrictlySorted!75 (t!5700 (toList!803 lt!53881)) (_1!1216 (tuple2!2411 lt!53879 lt!53875)) (_2!1216 (tuple2!2411 lt!53879 lt!53875))))))

(declare-fun b!107113 () Bool)

(assert (=> b!107113 (= e!69679 call!11336)))

(declare-fun b!107114 () Bool)

(declare-fun res!53218 () Bool)

(declare-fun e!69675 () Bool)

(assert (=> b!107114 (=> (not res!53218) (not e!69675))))

(declare-fun lt!54967 () List!1617)

(assert (=> b!107114 (= res!53218 (containsKey!160 lt!54967 (_1!1216 (tuple2!2411 lt!53879 lt!53875))))))

(declare-fun b!107115 () Bool)

(assert (=> b!107115 (= e!69675 (contains!830 lt!54967 (tuple2!2411 (_1!1216 (tuple2!2411 lt!53879 lt!53875)) (_2!1216 (tuple2!2411 lt!53879 lt!53875)))))))

(declare-fun b!107116 () Bool)

(assert (=> b!107116 (= e!69677 (ite c!18783 (t!5700 (toList!803 lt!53881)) (ite c!18784 (Cons!1613 (h!2210 (toList!803 lt!53881)) (t!5700 (toList!803 lt!53881))) Nil!1614)))))

(declare-fun d!29675 () Bool)

(assert (=> d!29675 e!69675))

(declare-fun res!53217 () Bool)

(assert (=> d!29675 (=> (not res!53217) (not e!69675))))

(assert (=> d!29675 (= res!53217 (isStrictlySorted!309 lt!54967))))

(assert (=> d!29675 (= lt!54967 e!69678)))

(declare-fun c!18782 () Bool)

(assert (=> d!29675 (= c!18782 (and ((_ is Cons!1613) (toList!803 lt!53881)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53881))) (_1!1216 (tuple2!2411 lt!53879 lt!53875)))))))

(assert (=> d!29675 (isStrictlySorted!309 (toList!803 lt!53881))))

(assert (=> d!29675 (= (insertStrictlySorted!75 (toList!803 lt!53881) (_1!1216 (tuple2!2411 lt!53879 lt!53875)) (_2!1216 (tuple2!2411 lt!53879 lt!53875))) lt!54967)))

(declare-fun b!107109 () Bool)

(assert (=> b!107109 (= e!69676 call!11335)))

(declare-fun bm!11332 () Bool)

(assert (=> bm!11332 (= call!11334 ($colon$colon!81 e!69677 (ite c!18782 (h!2210 (toList!803 lt!53881)) (tuple2!2411 (_1!1216 (tuple2!2411 lt!53879 lt!53875)) (_2!1216 (tuple2!2411 lt!53879 lt!53875))))))))

(declare-fun c!18785 () Bool)

(assert (=> bm!11332 (= c!18785 c!18782)))

(declare-fun bm!11333 () Bool)

(assert (=> bm!11333 (= call!11335 call!11334)))

(assert (= (and d!29675 c!18782) b!107108))

(assert (= (and d!29675 (not c!18782)) b!107107))

(assert (= (and b!107107 c!18783) b!107109))

(assert (= (and b!107107 (not c!18783)) b!107111))

(assert (= (and b!107111 c!18784) b!107113))

(assert (= (and b!107111 (not c!18784)) b!107110))

(assert (= (or b!107113 b!107110) bm!11331))

(assert (= (or b!107109 bm!11331) bm!11333))

(assert (= (or b!107108 bm!11333) bm!11332))

(assert (= (and bm!11332 c!18785) b!107112))

(assert (= (and bm!11332 (not c!18785)) b!107116))

(assert (= (and d!29675 res!53217) b!107114))

(assert (= (and b!107114 res!53218) b!107115))

(declare-fun m!120485 () Bool)

(assert (=> b!107112 m!120485))

(declare-fun m!120487 () Bool)

(assert (=> b!107115 m!120487))

(declare-fun m!120489 () Bool)

(assert (=> d!29675 m!120489))

(declare-fun m!120491 () Bool)

(assert (=> d!29675 m!120491))

(declare-fun m!120493 () Bool)

(assert (=> bm!11332 m!120493))

(declare-fun m!120495 () Bool)

(assert (=> b!107114 m!120495))

(assert (=> d!28921 d!29675))

(declare-fun d!29677 () Bool)

(declare-fun e!69681 () Bool)

(assert (=> d!29677 e!69681))

(declare-fun res!53219 () Bool)

(assert (=> d!29677 (=> res!53219 e!69681)))

(declare-fun lt!54970 () Bool)

(assert (=> d!29677 (= res!53219 (not lt!54970))))

(declare-fun lt!54968 () Bool)

(assert (=> d!29677 (= lt!54970 lt!54968)))

(declare-fun lt!54969 () Unit!3232)

(declare-fun e!69680 () Unit!3232)

(assert (=> d!29677 (= lt!54969 e!69680)))

(declare-fun c!18786 () Bool)

(assert (=> d!29677 (= c!18786 lt!54968)))

(assert (=> d!29677 (= lt!54968 (containsKey!160 (toList!803 lt!54263) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> d!29677 (= (contains!828 lt!54263 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54970)))

(declare-fun b!107117 () Bool)

(declare-fun lt!54971 () Unit!3232)

(assert (=> b!107117 (= e!69680 lt!54971)))

(assert (=> b!107117 (= lt!54971 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54263) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (=> b!107117 (isDefined!109 (getValueByKey!156 (toList!803 lt!54263) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!107118 () Bool)

(declare-fun Unit!3306 () Unit!3232)

(assert (=> b!107118 (= e!69680 Unit!3306)))

(declare-fun b!107119 () Bool)

(assert (=> b!107119 (= e!69681 (isDefined!109 (getValueByKey!156 (toList!803 lt!54263) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (= (and d!29677 c!18786) b!107117))

(assert (= (and d!29677 (not c!18786)) b!107118))

(assert (= (and d!29677 (not res!53219)) b!107119))

(declare-fun m!120497 () Bool)

(assert (=> d!29677 m!120497))

(declare-fun m!120499 () Bool)

(assert (=> b!107117 m!120499))

(assert (=> b!107117 m!118395))

(assert (=> b!107117 m!118395))

(declare-fun m!120501 () Bool)

(assert (=> b!107117 m!120501))

(assert (=> b!107119 m!118395))

(assert (=> b!107119 m!118395))

(assert (=> b!107119 m!120501))

(assert (=> d!28991 d!29677))

(declare-fun e!69683 () Option!162)

(declare-fun b!107122 () Bool)

(assert (=> b!107122 (= e!69683 (getValueByKey!156 (t!5700 lt!54265) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!107120 () Bool)

(declare-fun e!69682 () Option!162)

(assert (=> b!107120 (= e!69682 (Some!161 (_2!1216 (h!2210 lt!54265))))))

(declare-fun c!18787 () Bool)

(declare-fun d!29679 () Bool)

(assert (=> d!29679 (= c!18787 (and ((_ is Cons!1613) lt!54265) (= (_1!1216 (h!2210 lt!54265)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!29679 (= (getValueByKey!156 lt!54265 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) e!69682)))

(declare-fun b!107123 () Bool)

(assert (=> b!107123 (= e!69683 None!160)))

(declare-fun b!107121 () Bool)

(assert (=> b!107121 (= e!69682 e!69683)))

(declare-fun c!18788 () Bool)

(assert (=> b!107121 (= c!18788 (and ((_ is Cons!1613) lt!54265) (not (= (_1!1216 (h!2210 lt!54265)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (= (and d!29679 c!18787) b!107120))

(assert (= (and d!29679 (not c!18787)) b!107121))

(assert (= (and b!107121 c!18788) b!107122))

(assert (= (and b!107121 (not c!18788)) b!107123))

(declare-fun m!120503 () Bool)

(assert (=> b!107122 m!120503))

(assert (=> d!28991 d!29679))

(declare-fun d!29681 () Bool)

(assert (=> d!29681 (= (getValueByKey!156 lt!54265 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (Some!161 (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun lt!54972 () Unit!3232)

(assert (=> d!29681 (= lt!54972 (choose!657 lt!54265 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun e!69684 () Bool)

(assert (=> d!29681 e!69684))

(declare-fun res!53220 () Bool)

(assert (=> d!29681 (=> (not res!53220) (not e!69684))))

(assert (=> d!29681 (= res!53220 (isStrictlySorted!309 lt!54265))))

(assert (=> d!29681 (= (lemmaContainsTupThenGetReturnValue!72 lt!54265 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54972)))

(declare-fun b!107124 () Bool)

(declare-fun res!53221 () Bool)

(assert (=> b!107124 (=> (not res!53221) (not e!69684))))

(assert (=> b!107124 (= res!53221 (containsKey!160 lt!54265 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!107125 () Bool)

(assert (=> b!107125 (= e!69684 (contains!830 lt!54265 (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (= (and d!29681 res!53220) b!107124))

(assert (= (and b!107124 res!53221) b!107125))

(assert (=> d!29681 m!118389))

(declare-fun m!120505 () Bool)

(assert (=> d!29681 m!120505))

(declare-fun m!120507 () Bool)

(assert (=> d!29681 m!120507))

(declare-fun m!120509 () Bool)

(assert (=> b!107124 m!120509))

(declare-fun m!120511 () Bool)

(assert (=> b!107125 m!120511))

(assert (=> d!28991 d!29681))

(declare-fun b!107126 () Bool)

(declare-fun e!69688 () List!1617)

(declare-fun e!69686 () List!1617)

(assert (=> b!107126 (= e!69688 e!69686)))

(declare-fun c!18790 () Bool)

(assert (=> b!107126 (= c!18790 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (= (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!107127 () Bool)

(declare-fun call!11337 () List!1617)

(assert (=> b!107127 (= e!69688 call!11337)))

(declare-fun b!107129 () Bool)

(declare-fun e!69689 () List!1617)

(declare-fun call!11339 () List!1617)

(assert (=> b!107129 (= e!69689 call!11339)))

(declare-fun b!107130 () Bool)

(declare-fun c!18791 () Bool)

(assert (=> b!107130 (= c!18791 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (bvsgt (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> b!107130 (= e!69686 e!69689)))

(declare-fun bm!11334 () Bool)

(declare-fun call!11338 () List!1617)

(assert (=> bm!11334 (= call!11339 call!11338)))

(declare-fun b!107131 () Bool)

(declare-fun e!69687 () List!1617)

(assert (=> b!107131 (= e!69687 (insertStrictlySorted!75 (t!5700 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!107132 () Bool)

(assert (=> b!107132 (= e!69689 call!11339)))

(declare-fun b!107133 () Bool)

(declare-fun res!53223 () Bool)

(declare-fun e!69685 () Bool)

(assert (=> b!107133 (=> (not res!53223) (not e!69685))))

(declare-fun lt!54973 () List!1617)

(assert (=> b!107133 (= res!53223 (containsKey!160 lt!54973 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!107134 () Bool)

(assert (=> b!107134 (= e!69685 (contains!830 lt!54973 (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!107135 () Bool)

(assert (=> b!107135 (= e!69687 (ite c!18790 (t!5700 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (ite c!18791 (Cons!1613 (h!2210 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (t!5700 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) Nil!1614)))))

(declare-fun d!29683 () Bool)

(assert (=> d!29683 e!69685))

(declare-fun res!53222 () Bool)

(assert (=> d!29683 (=> (not res!53222) (not e!69685))))

(assert (=> d!29683 (= res!53222 (isStrictlySorted!309 lt!54973))))

(assert (=> d!29683 (= lt!54973 e!69688)))

(declare-fun c!18789 () Bool)

(assert (=> d!29683 (= c!18789 (and ((_ is Cons!1613) (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (bvslt (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!29683 (isStrictlySorted!309 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29683 (= (insertStrictlySorted!75 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54973)))

(declare-fun b!107128 () Bool)

(assert (=> b!107128 (= e!69686 call!11338)))

(declare-fun bm!11335 () Bool)

(assert (=> bm!11335 (= call!11337 ($colon$colon!81 e!69687 (ite c!18789 (h!2210 (toList!803 (+!144 lt!53805 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))) (tuple2!2411 (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) (_2!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(declare-fun c!18792 () Bool)

(assert (=> bm!11335 (= c!18792 c!18789)))

(declare-fun bm!11336 () Bool)

(assert (=> bm!11336 (= call!11338 call!11337)))

(assert (= (and d!29683 c!18789) b!107127))

(assert (= (and d!29683 (not c!18789)) b!107126))

(assert (= (and b!107126 c!18790) b!107128))

(assert (= (and b!107126 (not c!18790)) b!107130))

(assert (= (and b!107130 c!18791) b!107132))

(assert (= (and b!107130 (not c!18791)) b!107129))

(assert (= (or b!107132 b!107129) bm!11334))

(assert (= (or b!107128 bm!11334) bm!11336))

(assert (= (or b!107127 bm!11336) bm!11335))

(assert (= (and bm!11335 c!18792) b!107131))

(assert (= (and bm!11335 (not c!18792)) b!107135))

(assert (= (and d!29683 res!53222) b!107133))

(assert (= (and b!107133 res!53223) b!107134))

(declare-fun m!120513 () Bool)

(assert (=> b!107131 m!120513))

(declare-fun m!120515 () Bool)

(assert (=> b!107134 m!120515))

(declare-fun m!120517 () Bool)

(assert (=> d!29683 m!120517))

(declare-fun m!120519 () Bool)

(assert (=> d!29683 m!120519))

(declare-fun m!120521 () Bool)

(assert (=> bm!11335 m!120521))

(declare-fun m!120523 () Bool)

(assert (=> b!107133 m!120523))

(assert (=> d!28991 d!29683))

(declare-fun e!69691 () Option!162)

(declare-fun b!107138 () Bool)

(assert (=> b!107138 (= e!69691 (getValueByKey!156 (t!5700 (t!5700 (toList!803 lt!53813))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(declare-fun b!107136 () Bool)

(declare-fun e!69690 () Option!162)

(assert (=> b!107136 (= e!69690 (Some!161 (_2!1216 (h!2210 (t!5700 (toList!803 lt!53813))))))))

(declare-fun c!18793 () Bool)

(declare-fun d!29685 () Bool)

(assert (=> d!29685 (= c!18793 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53813))) (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53813)))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29685 (= (getValueByKey!156 (t!5700 (toList!803 lt!53813)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69690)))

(declare-fun b!107139 () Bool)

(assert (=> b!107139 (= e!69691 None!160)))

(declare-fun b!107137 () Bool)

(assert (=> b!107137 (= e!69690 e!69691)))

(declare-fun c!18794 () Bool)

(assert (=> b!107137 (= c!18794 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53813))) (not (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53813)))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))))

(assert (= (and d!29685 c!18793) b!107136))

(assert (= (and d!29685 (not c!18793)) b!107137))

(assert (= (and b!107137 c!18794) b!107138))

(assert (= (and b!107137 (not c!18794)) b!107139))

(assert (=> b!107138 m!117489))

(declare-fun m!120525 () Bool)

(assert (=> b!107138 m!120525))

(assert (=> b!105828 d!29685))

(declare-fun d!29687 () Bool)

(declare-fun e!69693 () Bool)

(assert (=> d!29687 e!69693))

(declare-fun res!53224 () Bool)

(assert (=> d!29687 (=> res!53224 e!69693)))

(declare-fun lt!54976 () Bool)

(assert (=> d!29687 (= res!53224 (not lt!54976))))

(declare-fun lt!54974 () Bool)

(assert (=> d!29687 (= lt!54976 lt!54974)))

(declare-fun lt!54975 () Unit!3232)

(declare-fun e!69692 () Unit!3232)

(assert (=> d!29687 (= lt!54975 e!69692)))

(declare-fun c!18795 () Bool)

(assert (=> d!29687 (= c!18795 lt!54974)))

(assert (=> d!29687 (= lt!54974 (containsKey!160 (toList!803 lt!54247) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!29687 (= (contains!828 lt!54247 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) lt!54976)))

(declare-fun b!107140 () Bool)

(declare-fun lt!54977 () Unit!3232)

(assert (=> b!107140 (= e!69692 lt!54977)))

(assert (=> b!107140 (= lt!54977 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54247) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> b!107140 (isDefined!109 (getValueByKey!156 (toList!803 lt!54247) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!107141 () Bool)

(declare-fun Unit!3307 () Unit!3232)

(assert (=> b!107141 (= e!69692 Unit!3307)))

(declare-fun b!107142 () Bool)

(assert (=> b!107142 (= e!69693 (isDefined!109 (getValueByKey!156 (toList!803 lt!54247) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (= (and d!29687 c!18795) b!107140))

(assert (= (and d!29687 (not c!18795)) b!107141))

(assert (= (and d!29687 (not res!53224)) b!107142))

(declare-fun m!120527 () Bool)

(assert (=> d!29687 m!120527))

(declare-fun m!120529 () Bool)

(assert (=> b!107140 m!120529))

(assert (=> b!107140 m!118339))

(assert (=> b!107140 m!118339))

(declare-fun m!120531 () Bool)

(assert (=> b!107140 m!120531))

(assert (=> b!107142 m!118339))

(assert (=> b!107142 m!118339))

(assert (=> b!107142 m!120531))

(assert (=> d!28981 d!29687))

(declare-fun b!107145 () Bool)

(declare-fun e!69695 () Option!162)

(assert (=> b!107145 (= e!69695 (getValueByKey!156 (t!5700 lt!54249) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!107143 () Bool)

(declare-fun e!69694 () Option!162)

(assert (=> b!107143 (= e!69694 (Some!161 (_2!1216 (h!2210 lt!54249))))))

(declare-fun d!29689 () Bool)

(declare-fun c!18796 () Bool)

(assert (=> d!29689 (= c!18796 (and ((_ is Cons!1613) lt!54249) (= (_1!1216 (h!2210 lt!54249)) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (=> d!29689 (= (getValueByKey!156 lt!54249 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) e!69694)))

(declare-fun b!107146 () Bool)

(assert (=> b!107146 (= e!69695 None!160)))

(declare-fun b!107144 () Bool)

(assert (=> b!107144 (= e!69694 e!69695)))

(declare-fun c!18797 () Bool)

(assert (=> b!107144 (= c!18797 (and ((_ is Cons!1613) lt!54249) (not (= (_1!1216 (h!2210 lt!54249)) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))))

(assert (= (and d!29689 c!18796) b!107143))

(assert (= (and d!29689 (not c!18796)) b!107144))

(assert (= (and b!107144 c!18797) b!107145))

(assert (= (and b!107144 (not c!18797)) b!107146))

(declare-fun m!120533 () Bool)

(assert (=> b!107145 m!120533))

(assert (=> d!28981 d!29689))

(declare-fun d!29691 () Bool)

(assert (=> d!29691 (= (getValueByKey!156 lt!54249 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) (Some!161 (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun lt!54978 () Unit!3232)

(assert (=> d!29691 (= lt!54978 (choose!657 lt!54249 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun e!69696 () Bool)

(assert (=> d!29691 e!69696))

(declare-fun res!53225 () Bool)

(assert (=> d!29691 (=> (not res!53225) (not e!69696))))

(assert (=> d!29691 (= res!53225 (isStrictlySorted!309 lt!54249))))

(assert (=> d!29691 (= (lemmaContainsTupThenGetReturnValue!72 lt!54249 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) lt!54978)))

(declare-fun b!107147 () Bool)

(declare-fun res!53226 () Bool)

(assert (=> b!107147 (=> (not res!53226) (not e!69696))))

(assert (=> b!107147 (= res!53226 (containsKey!160 lt!54249 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!107148 () Bool)

(assert (=> b!107148 (= e!69696 (contains!830 lt!54249 (tuple2!2411 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (= (and d!29691 res!53225) b!107147))

(assert (= (and b!107147 res!53226) b!107148))

(assert (=> d!29691 m!118333))

(declare-fun m!120535 () Bool)

(assert (=> d!29691 m!120535))

(declare-fun m!120537 () Bool)

(assert (=> d!29691 m!120537))

(declare-fun m!120539 () Bool)

(assert (=> b!107147 m!120539))

(declare-fun m!120541 () Bool)

(assert (=> b!107148 m!120541))

(assert (=> d!28981 d!29691))

(declare-fun b!107149 () Bool)

(declare-fun e!69700 () List!1617)

(declare-fun e!69698 () List!1617)

(assert (=> b!107149 (= e!69700 e!69698)))

(declare-fun c!18799 () Bool)

(assert (=> b!107149 (= c!18799 (and ((_ is Cons!1613) (toList!803 e!68782)) (= (_1!1216 (h!2210 (toList!803 e!68782))) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(declare-fun b!107150 () Bool)

(declare-fun call!11340 () List!1617)

(assert (=> b!107150 (= e!69700 call!11340)))

(declare-fun b!107152 () Bool)

(declare-fun e!69701 () List!1617)

(declare-fun call!11342 () List!1617)

(assert (=> b!107152 (= e!69701 call!11342)))

(declare-fun c!18800 () Bool)

(declare-fun b!107153 () Bool)

(assert (=> b!107153 (= c!18800 (and ((_ is Cons!1613) (toList!803 e!68782)) (bvsgt (_1!1216 (h!2210 (toList!803 e!68782))) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (=> b!107153 (= e!69698 e!69701)))

(declare-fun bm!11337 () Bool)

(declare-fun call!11341 () List!1617)

(assert (=> bm!11337 (= call!11342 call!11341)))

(declare-fun e!69699 () List!1617)

(declare-fun b!107154 () Bool)

(assert (=> b!107154 (= e!69699 (insertStrictlySorted!75 (t!5700 (toList!803 e!68782)) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!107155 () Bool)

(assert (=> b!107155 (= e!69701 call!11342)))

(declare-fun b!107156 () Bool)

(declare-fun res!53228 () Bool)

(declare-fun e!69697 () Bool)

(assert (=> b!107156 (=> (not res!53228) (not e!69697))))

(declare-fun lt!54979 () List!1617)

(assert (=> b!107156 (= res!53228 (containsKey!160 lt!54979 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!107157 () Bool)

(assert (=> b!107157 (= e!69697 (contains!830 lt!54979 (tuple2!2411 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(declare-fun b!107158 () Bool)

(assert (=> b!107158 (= e!69699 (ite c!18799 (t!5700 (toList!803 e!68782)) (ite c!18800 (Cons!1613 (h!2210 (toList!803 e!68782)) (t!5700 (toList!803 e!68782))) Nil!1614)))))

(declare-fun d!29693 () Bool)

(assert (=> d!29693 e!69697))

(declare-fun res!53227 () Bool)

(assert (=> d!29693 (=> (not res!53227) (not e!69697))))

(assert (=> d!29693 (= res!53227 (isStrictlySorted!309 lt!54979))))

(assert (=> d!29693 (= lt!54979 e!69700)))

(declare-fun c!18798 () Bool)

(assert (=> d!29693 (= c!18798 (and ((_ is Cons!1613) (toList!803 e!68782)) (bvslt (_1!1216 (h!2210 (toList!803 e!68782))) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (=> d!29693 (isStrictlySorted!309 (toList!803 e!68782))))

(assert (=> d!29693 (= (insertStrictlySorted!75 (toList!803 e!68782) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) lt!54979)))

(declare-fun b!107151 () Bool)

(assert (=> b!107151 (= e!69698 call!11341)))

(declare-fun bm!11338 () Bool)

(assert (=> bm!11338 (= call!11340 ($colon$colon!81 e!69699 (ite c!18798 (h!2210 (toList!803 e!68782)) (tuple2!2411 (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) (_2!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))))

(declare-fun c!18801 () Bool)

(assert (=> bm!11338 (= c!18801 c!18798)))

(declare-fun bm!11339 () Bool)

(assert (=> bm!11339 (= call!11341 call!11340)))

(assert (= (and d!29693 c!18798) b!107150))

(assert (= (and d!29693 (not c!18798)) b!107149))

(assert (= (and b!107149 c!18799) b!107151))

(assert (= (and b!107149 (not c!18799)) b!107153))

(assert (= (and b!107153 c!18800) b!107155))

(assert (= (and b!107153 (not c!18800)) b!107152))

(assert (= (or b!107155 b!107152) bm!11337))

(assert (= (or b!107151 bm!11337) bm!11339))

(assert (= (or b!107150 bm!11339) bm!11338))

(assert (= (and bm!11338 c!18801) b!107154))

(assert (= (and bm!11338 (not c!18801)) b!107158))

(assert (= (and d!29693 res!53227) b!107156))

(assert (= (and b!107156 res!53228) b!107157))

(declare-fun m!120543 () Bool)

(assert (=> b!107154 m!120543))

(declare-fun m!120545 () Bool)

(assert (=> b!107157 m!120545))

(declare-fun m!120547 () Bool)

(assert (=> d!29693 m!120547))

(declare-fun m!120549 () Bool)

(assert (=> d!29693 m!120549))

(declare-fun m!120551 () Bool)

(assert (=> bm!11338 m!120551))

(declare-fun m!120553 () Bool)

(assert (=> b!107156 m!120553))

(assert (=> d!28981 d!29693))

(declare-fun e!69703 () Option!162)

(declare-fun b!107161 () Bool)

(assert (=> b!107161 (= e!69703 (getValueByKey!156 (t!5700 (toList!803 lt!54079)) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107159 () Bool)

(declare-fun e!69702 () Option!162)

(assert (=> b!107159 (= e!69702 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54079)))))))

(declare-fun c!18802 () Bool)

(declare-fun d!29695 () Bool)

(assert (=> d!29695 (= c!18802 (and ((_ is Cons!1613) (toList!803 lt!54079)) (= (_1!1216 (h!2210 (toList!803 lt!54079))) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29695 (= (getValueByKey!156 (toList!803 lt!54079) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69702)))

(declare-fun b!107162 () Bool)

(assert (=> b!107162 (= e!69703 None!160)))

(declare-fun b!107160 () Bool)

(assert (=> b!107160 (= e!69702 e!69703)))

(declare-fun c!18803 () Bool)

(assert (=> b!107160 (= c!18803 (and ((_ is Cons!1613) (toList!803 lt!54079)) (not (= (_1!1216 (h!2210 (toList!803 lt!54079))) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29695 c!18802) b!107159))

(assert (= (and d!29695 (not c!18802)) b!107160))

(assert (= (and b!107160 c!18803) b!107161))

(assert (= (and b!107160 (not c!18803)) b!107162))

(declare-fun m!120555 () Bool)

(assert (=> b!107161 m!120555))

(assert (=> b!105667 d!29695))

(declare-fun d!29697 () Bool)

(assert (=> d!29697 (= (apply!98 lt!54410 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (getValueByKey!156 (toList!803 lt!54410) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4419 () Bool)

(assert (= bs!4419 d!29697))

(assert (=> bs!4419 m!118103))

(assert (=> bs!4419 m!119433))

(assert (=> bs!4419 m!119433))

(declare-fun m!120557 () Bool)

(assert (=> bs!4419 m!120557))

(assert (=> b!106121 d!29697))

(declare-fun d!29699 () Bool)

(declare-fun c!18804 () Bool)

(assert (=> d!29699 (= c!18804 ((_ is ValueCellFull!996) (select (arr!2064 (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058)) #b00000000000000000000000000000000)))))

(declare-fun e!69704 () V!3219)

(assert (=> d!29699 (= (get!1330 (select (arr!2064 (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69704)))

(declare-fun b!107163 () Bool)

(assert (=> b!107163 (= e!69704 (get!1332 (select (arr!2064 (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107164 () Bool)

(assert (=> b!107164 (= e!69704 (get!1333 (select (arr!2064 (ite (or c!18369 c!18367) (_values!2565 newMap!16) lt!54058)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29699 c!18804) b!107163))

(assert (= (and d!29699 (not c!18804)) b!107164))

(assert (=> b!107163 m!118591))

(assert (=> b!107163 m!118149))

(declare-fun m!120559 () Bool)

(assert (=> b!107163 m!120559))

(assert (=> b!107164 m!118591))

(assert (=> b!107164 m!118149))

(declare-fun m!120561 () Bool)

(assert (=> b!107164 m!120561))

(assert (=> b!106121 d!29699))

(declare-fun b!107167 () Bool)

(declare-fun e!69706 () Option!162)

(assert (=> b!107167 (= e!69706 (getValueByKey!156 (t!5700 (toList!803 lt!54083)) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107165 () Bool)

(declare-fun e!69705 () Option!162)

(assert (=> b!107165 (= e!69705 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54083)))))))

(declare-fun d!29701 () Bool)

(declare-fun c!18805 () Bool)

(assert (=> d!29701 (= c!18805 (and ((_ is Cons!1613) (toList!803 lt!54083)) (= (_1!1216 (h!2210 (toList!803 lt!54083))) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29701 (= (getValueByKey!156 (toList!803 lt!54083) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69705)))

(declare-fun b!107168 () Bool)

(assert (=> b!107168 (= e!69706 None!160)))

(declare-fun b!107166 () Bool)

(assert (=> b!107166 (= e!69705 e!69706)))

(declare-fun c!18806 () Bool)

(assert (=> b!107166 (= c!18806 (and ((_ is Cons!1613) (toList!803 lt!54083)) (not (= (_1!1216 (h!2210 (toList!803 lt!54083))) (_1!1216 (tuple2!2411 lt!53967 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29701 c!18805) b!107165))

(assert (= (and d!29701 (not c!18805)) b!107166))

(assert (= (and b!107166 c!18806) b!107167))

(assert (= (and b!107166 (not c!18806)) b!107168))

(declare-fun m!120563 () Bool)

(assert (=> b!107167 m!120563))

(assert (=> b!105669 d!29701))

(declare-fun lt!54980 () Bool)

(declare-fun d!29703 () Bool)

(assert (=> d!29703 (= lt!54980 (select (content!109 (toList!803 lt!54247)) (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun e!69708 () Bool)

(assert (=> d!29703 (= lt!54980 e!69708)))

(declare-fun res!53229 () Bool)

(assert (=> d!29703 (=> (not res!53229) (not e!69708))))

(assert (=> d!29703 (= res!53229 ((_ is Cons!1613) (toList!803 lt!54247)))))

(assert (=> d!29703 (= (contains!830 (toList!803 lt!54247) (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) lt!54980)))

(declare-fun b!107169 () Bool)

(declare-fun e!69707 () Bool)

(assert (=> b!107169 (= e!69708 e!69707)))

(declare-fun res!53230 () Bool)

(assert (=> b!107169 (=> res!53230 e!69707)))

(assert (=> b!107169 (= res!53230 (= (h!2210 (toList!803 lt!54247)) (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!107170 () Bool)

(assert (=> b!107170 (= e!69707 (contains!830 (t!5700 (toList!803 lt!54247)) (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(assert (= (and d!29703 res!53229) b!107169))

(assert (= (and b!107169 (not res!53230)) b!107170))

(declare-fun m!120565 () Bool)

(assert (=> d!29703 m!120565))

(declare-fun m!120567 () Bool)

(assert (=> d!29703 m!120567))

(declare-fun m!120569 () Bool)

(assert (=> b!107170 m!120569))

(assert (=> b!105958 d!29703))

(declare-fun d!29705 () Bool)

(assert (=> d!29705 (= ($colon$colon!81 e!68874 (ite c!18418 (h!2210 (toList!803 (+!144 lt!53805 lt!53815))) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814)))) (Cons!1613 (ite c!18418 (h!2210 (toList!803 (+!144 lt!53805 lt!53815))) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))) e!68874))))

(assert (=> bm!11172 d!29705))

(declare-fun d!29707 () Bool)

(declare-fun e!69710 () Bool)

(assert (=> d!29707 e!69710))

(declare-fun res!53231 () Bool)

(assert (=> d!29707 (=> res!53231 e!69710)))

(declare-fun lt!54983 () Bool)

(assert (=> d!29707 (= res!53231 (not lt!54983))))

(declare-fun lt!54981 () Bool)

(assert (=> d!29707 (= lt!54983 lt!54981)))

(declare-fun lt!54982 () Unit!3232)

(declare-fun e!69709 () Unit!3232)

(assert (=> d!29707 (= lt!54982 e!69709)))

(declare-fun c!18807 () Bool)

(assert (=> d!29707 (= c!18807 lt!54981)))

(assert (=> d!29707 (= lt!54981 (containsKey!160 (toList!803 lt!54079) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> d!29707 (= (contains!828 lt!54079 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54983)))

(declare-fun b!107171 () Bool)

(declare-fun lt!54984 () Unit!3232)

(assert (=> b!107171 (= e!69709 lt!54984)))

(assert (=> b!107171 (= lt!54984 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54079) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (=> b!107171 (isDefined!109 (getValueByKey!156 (toList!803 lt!54079) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107172 () Bool)

(declare-fun Unit!3308 () Unit!3232)

(assert (=> b!107172 (= e!69709 Unit!3308)))

(declare-fun b!107173 () Bool)

(assert (=> b!107173 (= e!69710 (isDefined!109 (getValueByKey!156 (toList!803 lt!54079) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29707 c!18807) b!107171))

(assert (= (and d!29707 (not c!18807)) b!107172))

(assert (= (and d!29707 (not res!53231)) b!107173))

(declare-fun m!120571 () Bool)

(assert (=> d!29707 m!120571))

(declare-fun m!120573 () Bool)

(assert (=> b!107171 m!120573))

(assert (=> b!107171 m!117853))

(assert (=> b!107171 m!117853))

(declare-fun m!120575 () Bool)

(assert (=> b!107171 m!120575))

(assert (=> b!107173 m!117853))

(assert (=> b!107173 m!117853))

(assert (=> b!107173 m!120575))

(assert (=> d!28835 d!29707))

(declare-fun e!69712 () Option!162)

(declare-fun b!107176 () Bool)

(assert (=> b!107176 (= e!69712 (getValueByKey!156 (t!5700 lt!54081) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107174 () Bool)

(declare-fun e!69711 () Option!162)

(assert (=> b!107174 (= e!69711 (Some!161 (_2!1216 (h!2210 lt!54081))))))

(declare-fun d!29709 () Bool)

(declare-fun c!18808 () Bool)

(assert (=> d!29709 (= c!18808 (and ((_ is Cons!1613) lt!54081) (= (_1!1216 (h!2210 lt!54081)) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29709 (= (getValueByKey!156 lt!54081 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) e!69711)))

(declare-fun b!107177 () Bool)

(assert (=> b!107177 (= e!69712 None!160)))

(declare-fun b!107175 () Bool)

(assert (=> b!107175 (= e!69711 e!69712)))

(declare-fun c!18809 () Bool)

(assert (=> b!107175 (= c!18809 (and ((_ is Cons!1613) lt!54081) (not (= (_1!1216 (h!2210 lt!54081)) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29709 c!18808) b!107174))

(assert (= (and d!29709 (not c!18808)) b!107175))

(assert (= (and b!107175 c!18809) b!107176))

(assert (= (and b!107175 (not c!18809)) b!107177))

(declare-fun m!120577 () Bool)

(assert (=> b!107176 m!120577))

(assert (=> d!28835 d!29709))

(declare-fun d!29711 () Bool)

(assert (=> d!29711 (= (getValueByKey!156 lt!54081 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (Some!161 (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun lt!54985 () Unit!3232)

(assert (=> d!29711 (= lt!54985 (choose!657 lt!54081 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69713 () Bool)

(assert (=> d!29711 e!69713))

(declare-fun res!53232 () Bool)

(assert (=> d!29711 (=> (not res!53232) (not e!69713))))

(assert (=> d!29711 (= res!53232 (isStrictlySorted!309 lt!54081))))

(assert (=> d!29711 (= (lemmaContainsTupThenGetReturnValue!72 lt!54081 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54985)))

(declare-fun b!107178 () Bool)

(declare-fun res!53233 () Bool)

(assert (=> b!107178 (=> (not res!53233) (not e!69713))))

(assert (=> b!107178 (= res!53233 (containsKey!160 lt!54081 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107179 () Bool)

(assert (=> b!107179 (= e!69713 (contains!830 lt!54081 (tuple2!2411 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (= (and d!29711 res!53232) b!107178))

(assert (= (and b!107178 res!53233) b!107179))

(assert (=> d!29711 m!117847))

(declare-fun m!120579 () Bool)

(assert (=> d!29711 m!120579))

(declare-fun m!120581 () Bool)

(assert (=> d!29711 m!120581))

(declare-fun m!120583 () Bool)

(assert (=> b!107178 m!120583))

(declare-fun m!120585 () Bool)

(assert (=> b!107179 m!120585))

(assert (=> d!28835 d!29711))

(declare-fun b!107180 () Bool)

(declare-fun e!69717 () List!1617)

(declare-fun e!69715 () List!1617)

(assert (=> b!107180 (= e!69717 e!69715)))

(declare-fun c!18811 () Bool)

(assert (=> b!107180 (= c!18811 (and ((_ is Cons!1613) (toList!803 lt!53959)) (= (_1!1216 (h!2210 (toList!803 lt!53959))) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107181 () Bool)

(declare-fun call!11343 () List!1617)

(assert (=> b!107181 (= e!69717 call!11343)))

(declare-fun b!107183 () Bool)

(declare-fun e!69718 () List!1617)

(declare-fun call!11345 () List!1617)

(assert (=> b!107183 (= e!69718 call!11345)))

(declare-fun b!107184 () Bool)

(declare-fun c!18812 () Bool)

(assert (=> b!107184 (= c!18812 (and ((_ is Cons!1613) (toList!803 lt!53959)) (bvsgt (_1!1216 (h!2210 (toList!803 lt!53959))) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> b!107184 (= e!69715 e!69718)))

(declare-fun bm!11340 () Bool)

(declare-fun call!11344 () List!1617)

(assert (=> bm!11340 (= call!11345 call!11344)))

(declare-fun e!69716 () List!1617)

(declare-fun b!107185 () Bool)

(assert (=> b!107185 (= e!69716 (insertStrictlySorted!75 (t!5700 (toList!803 lt!53959)) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107186 () Bool)

(assert (=> b!107186 (= e!69718 call!11345)))

(declare-fun b!107187 () Bool)

(declare-fun res!53235 () Bool)

(declare-fun e!69714 () Bool)

(assert (=> b!107187 (=> (not res!53235) (not e!69714))))

(declare-fun lt!54986 () List!1617)

(assert (=> b!107187 (= res!53235 (containsKey!160 lt!54986 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107188 () Bool)

(assert (=> b!107188 (= e!69714 (contains!830 lt!54986 (tuple2!2411 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107189 () Bool)

(assert (=> b!107189 (= e!69716 (ite c!18811 (t!5700 (toList!803 lt!53959)) (ite c!18812 (Cons!1613 (h!2210 (toList!803 lt!53959)) (t!5700 (toList!803 lt!53959))) Nil!1614)))))

(declare-fun d!29713 () Bool)

(assert (=> d!29713 e!69714))

(declare-fun res!53234 () Bool)

(assert (=> d!29713 (=> (not res!53234) (not e!69714))))

(assert (=> d!29713 (= res!53234 (isStrictlySorted!309 lt!54986))))

(assert (=> d!29713 (= lt!54986 e!69717)))

(declare-fun c!18810 () Bool)

(assert (=> d!29713 (= c!18810 (and ((_ is Cons!1613) (toList!803 lt!53959)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53959))) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29713 (isStrictlySorted!309 (toList!803 lt!53959))))

(assert (=> d!29713 (= (insertStrictlySorted!75 (toList!803 lt!53959) (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54986)))

(declare-fun b!107182 () Bool)

(assert (=> b!107182 (= e!69715 call!11344)))

(declare-fun bm!11341 () Bool)

(assert (=> bm!11341 (= call!11343 ($colon$colon!81 e!69716 (ite c!18810 (h!2210 (toList!803 lt!53959)) (tuple2!2411 (_1!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992))))) (_2!1216 (tuple2!2411 lt!53961 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun c!18813 () Bool)

(assert (=> bm!11341 (= c!18813 c!18810)))

(declare-fun bm!11342 () Bool)

(assert (=> bm!11342 (= call!11344 call!11343)))

(assert (= (and d!29713 c!18810) b!107181))

(assert (= (and d!29713 (not c!18810)) b!107180))

(assert (= (and b!107180 c!18811) b!107182))

(assert (= (and b!107180 (not c!18811)) b!107184))

(assert (= (and b!107184 c!18812) b!107186))

(assert (= (and b!107184 (not c!18812)) b!107183))

(assert (= (or b!107186 b!107183) bm!11340))

(assert (= (or b!107182 bm!11340) bm!11342))

(assert (= (or b!107181 bm!11342) bm!11341))

(assert (= (and bm!11341 c!18813) b!107185))

(assert (= (and bm!11341 (not c!18813)) b!107189))

(assert (= (and d!29713 res!53234) b!107187))

(assert (= (and b!107187 res!53235) b!107188))

(declare-fun m!120587 () Bool)

(assert (=> b!107185 m!120587))

(declare-fun m!120589 () Bool)

(assert (=> b!107188 m!120589))

(declare-fun m!120591 () Bool)

(assert (=> d!29713 m!120591))

(declare-fun m!120593 () Bool)

(assert (=> d!29713 m!120593))

(declare-fun m!120595 () Bool)

(assert (=> bm!11341 m!120595))

(declare-fun m!120597 () Bool)

(assert (=> b!107187 m!120597))

(assert (=> d!28835 d!29713))

(declare-fun d!29715 () Bool)

(assert (=> d!29715 (= (apply!98 lt!54365 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (getValueByKey!156 (toList!803 lt!54365) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4420 () Bool)

(assert (= bs!4420 d!29715))

(assert (=> bs!4420 m!118103))

(assert (=> bs!4420 m!119419))

(assert (=> bs!4420 m!119419))

(declare-fun m!120599 () Bool)

(assert (=> bs!4420 m!120599))

(assert (=> b!106040 d!29715))

(declare-fun d!29717 () Bool)

(declare-fun c!18814 () Bool)

(assert (=> d!29717 (= c!18814 ((_ is ValueCellFull!996) (select (arr!2064 (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!69719 () V!3219)

(assert (=> d!29717 (= (get!1330 (select (arr!2064 (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69719)))

(declare-fun b!107190 () Bool)

(assert (=> b!107190 (= e!69719 (get!1332 (select (arr!2064 (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107191 () Bool)

(assert (=> b!107191 (= e!69719 (get!1333 (select (arr!2064 (ite c!18369 (_values!2565 newMap!16) (array!4352 (store (arr!2064 (_values!2565 newMap!16)) (index!3185 lt!54060) (ValueCellFull!996 lt!53807)) (size!2319 (_values!2565 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29717 c!18814) b!107190))

(assert (= (and d!29717 (not c!18814)) b!107191))

(assert (=> b!107190 m!118471))

(assert (=> b!107190 m!118149))

(declare-fun m!120601 () Bool)

(assert (=> b!107190 m!120601))

(assert (=> b!107191 m!118471))

(assert (=> b!107191 m!118149))

(declare-fun m!120603 () Bool)

(assert (=> b!107191 m!120603))

(assert (=> b!106040 d!29717))

(declare-fun d!29719 () Bool)

(declare-fun res!53236 () Bool)

(declare-fun e!69720 () Bool)

(assert (=> d!29719 (=> res!53236 e!69720)))

(assert (=> d!29719 (= res!53236 (and ((_ is Cons!1613) lt!54127) (= (_1!1216 (h!2210 lt!54127)) (_1!1216 lt!53815))))))

(assert (=> d!29719 (= (containsKey!160 lt!54127 (_1!1216 lt!53815)) e!69720)))

(declare-fun b!107192 () Bool)

(declare-fun e!69721 () Bool)

(assert (=> b!107192 (= e!69720 e!69721)))

(declare-fun res!53237 () Bool)

(assert (=> b!107192 (=> (not res!53237) (not e!69721))))

(assert (=> b!107192 (= res!53237 (and (or (not ((_ is Cons!1613) lt!54127)) (bvsle (_1!1216 (h!2210 lt!54127)) (_1!1216 lt!53815))) ((_ is Cons!1613) lt!54127) (bvslt (_1!1216 (h!2210 lt!54127)) (_1!1216 lt!53815))))))

(declare-fun b!107193 () Bool)

(assert (=> b!107193 (= e!69721 (containsKey!160 (t!5700 lt!54127) (_1!1216 lt!53815)))))

(assert (= (and d!29719 (not res!53236)) b!107192))

(assert (= (and b!107192 res!53237) b!107193))

(declare-fun m!120605 () Bool)

(assert (=> b!107193 m!120605))

(assert (=> b!105780 d!29719))

(declare-fun d!29721 () Bool)

(assert (=> d!29721 (= (apply!98 lt!54188 (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1334 (getValueByKey!156 (toList!803 lt!54188) (select (arr!2063 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4421 () Bool)

(assert (= bs!4421 d!29721))

(assert (=> bs!4421 m!118103))

(assert (=> bs!4421 m!119503))

(assert (=> bs!4421 m!119503))

(declare-fun m!120607 () Bool)

(assert (=> bs!4421 m!120607))

(assert (=> b!105858 d!29721))

(declare-fun d!29723 () Bool)

(declare-fun c!18815 () Bool)

(assert (=> d!29723 (= c!18815 ((_ is ValueCellFull!996) (select (arr!2064 (_values!2565 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!69722 () V!3219)

(assert (=> d!29723 (= (get!1330 (select (arr!2064 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69722)))

(declare-fun b!107194 () Bool)

(assert (=> b!107194 (= e!69722 (get!1332 (select (arr!2064 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107195 () Bool)

(assert (=> b!107195 (= e!69722 (get!1333 (select (arr!2064 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!385 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29723 c!18815) b!107194))

(assert (= (and d!29723 (not c!18815)) b!107195))

(assert (=> b!107194 m!118151))

(assert (=> b!107194 m!118149))

(declare-fun m!120609 () Bool)

(assert (=> b!107194 m!120609))

(assert (=> b!107195 m!118151))

(assert (=> b!107195 m!118149))

(declare-fun m!120611 () Bool)

(assert (=> b!107195 m!120611))

(assert (=> b!105858 d!29723))

(declare-fun d!29725 () Bool)

(declare-fun res!53238 () Bool)

(declare-fun e!69723 () Bool)

(assert (=> d!29725 (=> res!53238 e!69723)))

(assert (=> d!29725 (= res!53238 (and ((_ is Cons!1613) lt!54245) (= (_1!1216 (h!2210 lt!54245)) (_1!1216 lt!53814))))))

(assert (=> d!29725 (= (containsKey!160 lt!54245 (_1!1216 lt!53814)) e!69723)))

(declare-fun b!107196 () Bool)

(declare-fun e!69724 () Bool)

(assert (=> b!107196 (= e!69723 e!69724)))

(declare-fun res!53239 () Bool)

(assert (=> b!107196 (=> (not res!53239) (not e!69724))))

(assert (=> b!107196 (= res!53239 (and (or (not ((_ is Cons!1613) lt!54245)) (bvsle (_1!1216 (h!2210 lt!54245)) (_1!1216 lt!53814))) ((_ is Cons!1613) lt!54245) (bvslt (_1!1216 (h!2210 lt!54245)) (_1!1216 lt!53814))))))

(declare-fun b!107197 () Bool)

(assert (=> b!107197 (= e!69724 (containsKey!160 (t!5700 lt!54245) (_1!1216 lt!53814)))))

(assert (= (and d!29725 (not res!53238)) b!107196))

(assert (= (and b!107196 res!53239) b!107197))

(declare-fun m!120613 () Bool)

(assert (=> b!107197 m!120613))

(assert (=> b!105954 d!29725))

(declare-fun d!29727 () Bool)

(declare-fun res!53240 () Bool)

(declare-fun e!69725 () Bool)

(assert (=> d!29727 (=> res!53240 e!69725)))

(assert (=> d!29727 (= res!53240 (= (select (arr!2063 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (=> d!29727 (= (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!69725)))

(declare-fun b!107198 () Bool)

(declare-fun e!69726 () Bool)

(assert (=> b!107198 (= e!69725 e!69726)))

(declare-fun res!53241 () Bool)

(assert (=> b!107198 (=> (not res!53241) (not e!69726))))

(assert (=> b!107198 (= res!53241 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_keys!4288 newMap!16))))))

(declare-fun b!107199 () Bool)

(assert (=> b!107199 (= e!69726 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29727 (not res!53240)) b!107198))

(assert (= (and b!107198 res!53241) b!107199))

(assert (=> d!29727 m!119509))

(assert (=> b!107199 m!117489))

(declare-fun m!120615 () Bool)

(assert (=> b!107199 m!120615))

(assert (=> b!105833 d!29727))

(declare-fun d!29729 () Bool)

(declare-fun lt!54987 () Bool)

(assert (=> d!29729 (= lt!54987 (select (content!109 lt!53897) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun e!69728 () Bool)

(assert (=> d!29729 (= lt!54987 e!69728)))

(declare-fun res!53242 () Bool)

(assert (=> d!29729 (=> (not res!53242) (not e!69728))))

(assert (=> d!29729 (= res!53242 ((_ is Cons!1613) lt!53897))))

(assert (=> d!29729 (= (contains!830 lt!53897 (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))) lt!54987)))

(declare-fun b!107200 () Bool)

(declare-fun e!69727 () Bool)

(assert (=> b!107200 (= e!69728 e!69727)))

(declare-fun res!53243 () Bool)

(assert (=> b!107200 (=> res!53243 e!69727)))

(assert (=> b!107200 (= res!53243 (= (h!2210 lt!53897) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun b!107201 () Bool)

(assert (=> b!107201 (= e!69727 (contains!830 (t!5700 lt!53897) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(assert (= (and d!29729 res!53242) b!107200))

(assert (= (and b!107200 (not res!53243)) b!107201))

(declare-fun m!120617 () Bool)

(assert (=> d!29729 m!120617))

(declare-fun m!120619 () Bool)

(assert (=> d!29729 m!120619))

(declare-fun m!120621 () Bool)

(assert (=> b!107201 m!120621))

(assert (=> b!105946 d!29729))

(declare-fun lt!54988 () Bool)

(declare-fun d!29731 () Bool)

(assert (=> d!29731 (= lt!54988 (select (content!109 (toList!803 lt!54267)) (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun e!69730 () Bool)

(assert (=> d!29731 (= lt!54988 e!69730)))

(declare-fun res!53244 () Bool)

(assert (=> d!29731 (=> (not res!53244) (not e!69730))))

(assert (=> d!29731 (= res!53244 ((_ is Cons!1613) (toList!803 lt!54267)))))

(assert (=> d!29731 (= (contains!830 (toList!803 lt!54267) (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!54988)))

(declare-fun b!107202 () Bool)

(declare-fun e!69729 () Bool)

(assert (=> b!107202 (= e!69730 e!69729)))

(declare-fun res!53245 () Bool)

(assert (=> b!107202 (=> res!53245 e!69729)))

(assert (=> b!107202 (= res!53245 (= (h!2210 (toList!803 lt!54267)) (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(declare-fun b!107203 () Bool)

(assert (=> b!107203 (= e!69729 (contains!830 (t!5700 (toList!803 lt!54267)) (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))

(assert (= (and d!29731 res!53244) b!107202))

(assert (= (and b!107202 (not res!53245)) b!107203))

(declare-fun m!120623 () Bool)

(assert (=> d!29731 m!120623))

(declare-fun m!120625 () Bool)

(assert (=> d!29731 m!120625))

(declare-fun m!120627 () Bool)

(assert (=> b!107203 m!120627))

(assert (=> b!105977 d!29731))

(declare-fun d!29733 () Bool)

(assert (=> d!29733 (= (size!2322 newMap!16) (bvadd (_size!499 newMap!16) (bvsdiv (bvadd (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!106077 d!29733))

(declare-fun lt!54989 () Bool)

(declare-fun d!29735 () Bool)

(assert (=> d!29735 (= lt!54989 (select (content!109 (toList!803 lt!54173)) (tuple2!2411 lt!53879 lt!53875)))))

(declare-fun e!69732 () Bool)

(assert (=> d!29735 (= lt!54989 e!69732)))

(declare-fun res!53246 () Bool)

(assert (=> d!29735 (=> (not res!53246) (not e!69732))))

(assert (=> d!29735 (= res!53246 ((_ is Cons!1613) (toList!803 lt!54173)))))

(assert (=> d!29735 (= (contains!830 (toList!803 lt!54173) (tuple2!2411 lt!53879 lt!53875)) lt!54989)))

(declare-fun b!107204 () Bool)

(declare-fun e!69731 () Bool)

(assert (=> b!107204 (= e!69732 e!69731)))

(declare-fun res!53247 () Bool)

(assert (=> b!107204 (=> res!53247 e!69731)))

(assert (=> b!107204 (= res!53247 (= (h!2210 (toList!803 lt!54173)) (tuple2!2411 lt!53879 lt!53875)))))

(declare-fun b!107205 () Bool)

(assert (=> b!107205 (= e!69731 (contains!830 (t!5700 (toList!803 lt!54173)) (tuple2!2411 lt!53879 lt!53875)))))

(assert (= (and d!29735 res!53246) b!107204))

(assert (= (and b!107204 (not res!53247)) b!107205))

(declare-fun m!120629 () Bool)

(assert (=> d!29735 m!120629))

(declare-fun m!120631 () Bool)

(assert (=> d!29735 m!120631))

(declare-fun m!120633 () Bool)

(assert (=> b!107205 m!120633))

(assert (=> b!105837 d!29735))

(declare-fun lt!54990 () Bool)

(declare-fun d!29737 () Bool)

(assert (=> d!29737 (= lt!54990 (select (content!109 (toList!803 lt!54263)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(declare-fun e!69734 () Bool)

(assert (=> d!29737 (= lt!54990 e!69734)))

(declare-fun res!53248 () Bool)

(assert (=> d!29737 (=> (not res!53248) (not e!69734))))

(assert (=> d!29737 (= res!53248 ((_ is Cons!1613) (toList!803 lt!54263)))))

(assert (=> d!29737 (= (contains!830 (toList!803 lt!54263) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)) lt!54990)))

(declare-fun b!107206 () Bool)

(declare-fun e!69733 () Bool)

(assert (=> b!107206 (= e!69734 e!69733)))

(declare-fun res!53249 () Bool)

(assert (=> b!107206 (=> res!53249 e!69733)))

(assert (=> b!107206 (= res!53249 (= (h!2210 (toList!803 lt!54263)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(declare-fun b!107207 () Bool)

(assert (=> b!107207 (= e!69733 (contains!830 (t!5700 (toList!803 lt!54263)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))

(assert (= (and d!29737 res!53248) b!107206))

(assert (= (and b!107206 (not res!53249)) b!107207))

(declare-fun m!120635 () Bool)

(assert (=> d!29737 m!120635))

(declare-fun m!120637 () Bool)

(assert (=> d!29737 m!120637))

(declare-fun m!120639 () Bool)

(assert (=> b!107207 m!120639))

(assert (=> b!105969 d!29737))

(declare-fun d!29739 () Bool)

(assert (=> d!29739 (= ($colon$colon!81 e!68924 (ite c!18437 (h!2210 (toList!803 lt!53805)) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815)))) (Cons!1613 (ite c!18437 (h!2210 (toList!803 lt!53805)) (tuple2!2411 (_1!1216 lt!53815) (_2!1216 lt!53815))) e!68924))))

(assert (=> bm!11182 d!29739))

(assert (=> b!105820 d!29091))

(assert (=> b!105820 d!29093))

(assert (=> d!28863 d!28787))

(declare-fun d!29741 () Bool)

(declare-fun e!69735 () Bool)

(assert (=> d!29741 e!69735))

(declare-fun res!53250 () Bool)

(assert (=> d!29741 (=> (not res!53250) (not e!69735))))

(declare-fun lt!54992 () ListLongMap!1575)

(assert (=> d!29741 (= res!53250 (contains!828 lt!54992 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(declare-fun lt!54994 () List!1617)

(assert (=> d!29741 (= lt!54992 (ListLongMap!1576 lt!54994))))

(declare-fun lt!54993 () Unit!3232)

(declare-fun lt!54991 () Unit!3232)

(assert (=> d!29741 (= lt!54993 lt!54991)))

(assert (=> d!29741 (= (getValueByKey!156 lt!54994 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(assert (=> d!29741 (= lt!54991 (lemmaContainsTupThenGetReturnValue!72 lt!54994 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(assert (=> d!29741 (= lt!54994 (insertStrictlySorted!75 (toList!803 call!11223) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))))))

(assert (=> d!29741 (= (+!144 call!11223 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))) lt!54992)))

(declare-fun b!107208 () Bool)

(declare-fun res!53251 () Bool)

(assert (=> b!107208 (=> (not res!53251) (not e!69735))))

(assert (=> b!107208 (= res!53251 (= (getValueByKey!156 (toList!803 lt!54992) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16))))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))))

(declare-fun b!107209 () Bool)

(assert (=> b!107209 (= e!69735 (contains!830 (toList!803 lt!54992) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18369 (ite c!18363 (minValue!2457 newMap!16) lt!53807) (minValue!2457 newMap!16)))))))

(assert (= (and d!29741 res!53250) b!107208))

(assert (= (and b!107208 res!53251) b!107209))

(declare-fun m!120641 () Bool)

(assert (=> d!29741 m!120641))

(declare-fun m!120643 () Bool)

(assert (=> d!29741 m!120643))

(declare-fun m!120645 () Bool)

(assert (=> d!29741 m!120645))

(declare-fun m!120647 () Bool)

(assert (=> d!29741 m!120647))

(declare-fun m!120649 () Bool)

(assert (=> b!107208 m!120649))

(declare-fun m!120651 () Bool)

(assert (=> b!107209 m!120651))

(assert (=> b!106112 d!29741))

(declare-fun d!29743 () Bool)

(declare-fun e!69736 () Bool)

(assert (=> d!29743 e!69736))

(declare-fun res!53252 () Bool)

(assert (=> d!29743 (=> (not res!53252) (not e!69736))))

(declare-fun lt!54996 () ListLongMap!1575)

(assert (=> d!29743 (= res!53252 (contains!828 lt!54996 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun lt!54998 () List!1617)

(assert (=> d!29743 (= lt!54996 (ListLongMap!1576 lt!54998))))

(declare-fun lt!54997 () Unit!3232)

(declare-fun lt!54995 () Unit!3232)

(assert (=> d!29743 (= lt!54997 lt!54995)))

(assert (=> d!29743 (= (getValueByKey!156 lt!54998 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29743 (= lt!54995 (lemmaContainsTupThenGetReturnValue!72 lt!54998 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29743 (= lt!54998 (insertStrictlySorted!75 (toList!803 call!11211) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29743 (= (+!144 call!11211 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) lt!54996)))

(declare-fun b!107210 () Bool)

(declare-fun res!53253 () Bool)

(assert (=> b!107210 (=> (not res!53253) (not e!69736))))

(assert (=> b!107210 (= res!53253 (= (getValueByKey!156 (toList!803 lt!54996) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(declare-fun b!107211 () Bool)

(assert (=> b!107211 (= e!69736 (contains!830 (toList!803 lt!54996) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!29743 res!53252) b!107210))

(assert (= (and b!107210 res!53253) b!107211))

(declare-fun m!120653 () Bool)

(assert (=> d!29743 m!120653))

(declare-fun m!120655 () Bool)

(assert (=> d!29743 m!120655))

(declare-fun m!120657 () Bool)

(assert (=> d!29743 m!120657))

(declare-fun m!120659 () Bool)

(assert (=> d!29743 m!120659))

(declare-fun m!120661 () Bool)

(assert (=> b!107210 m!120661))

(declare-fun m!120663 () Bool)

(assert (=> b!107211 m!120663))

(assert (=> b!106031 d!29743))

(declare-fun d!29745 () Bool)

(declare-fun e!69737 () Bool)

(assert (=> d!29745 e!69737))

(declare-fun res!53254 () Bool)

(assert (=> d!29745 (=> (not res!53254) (not e!69737))))

(declare-fun lt!55000 () ListLongMap!1575)

(assert (=> d!29745 (= res!53254 (contains!828 lt!55000 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun lt!55002 () List!1617)

(assert (=> d!29745 (= lt!55000 (ListLongMap!1576 lt!55002))))

(declare-fun lt!55001 () Unit!3232)

(declare-fun lt!54999 () Unit!3232)

(assert (=> d!29745 (= lt!55001 lt!54999)))

(assert (=> d!29745 (= (getValueByKey!156 lt!55002 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29745 (= lt!54999 (lemmaContainsTupThenGetReturnValue!72 lt!55002 (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29745 (= lt!55002 (insertStrictlySorted!75 (toList!803 call!11182) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29745 (= (+!144 call!11182 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) lt!55000)))

(declare-fun b!107212 () Bool)

(declare-fun res!53255 () Bool)

(assert (=> b!107212 (=> (not res!53255) (not e!69737))))

(assert (=> b!107212 (= res!53255 (= (getValueByKey!156 (toList!803 lt!55000) (_1!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (Some!161 (_2!1216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(declare-fun b!107213 () Bool)

(assert (=> b!107213 (= e!69737 (contains!830 (toList!803 lt!55000) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!29745 res!53254) b!107212))

(assert (= (and b!107212 res!53255) b!107213))

(declare-fun m!120665 () Bool)

(assert (=> d!29745 m!120665))

(declare-fun m!120667 () Bool)

(assert (=> d!29745 m!120667))

(declare-fun m!120669 () Bool)

(assert (=> d!29745 m!120669))

(declare-fun m!120671 () Bool)

(assert (=> d!29745 m!120671))

(declare-fun m!120673 () Bool)

(assert (=> b!107212 m!120673))

(declare-fun m!120675 () Bool)

(assert (=> b!107213 m!120675))

(assert (=> b!105849 d!29745))

(declare-fun d!29747 () Bool)

(declare-fun res!53256 () Bool)

(declare-fun e!69738 () Bool)

(assert (=> d!29747 (=> res!53256 e!69738)))

(assert (=> d!29747 (= res!53256 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53813))) (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53813)))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(assert (=> d!29747 (= (containsKey!160 (t!5700 (toList!803 lt!53813)) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)) e!69738)))

(declare-fun b!107214 () Bool)

(declare-fun e!69739 () Bool)

(assert (=> b!107214 (= e!69738 e!69739)))

(declare-fun res!53257 () Bool)

(assert (=> b!107214 (=> (not res!53257) (not e!69739))))

(assert (=> b!107214 (= res!53257 (and (or (not ((_ is Cons!1613) (t!5700 (toList!803 lt!53813)))) (bvsle (_1!1216 (h!2210 (t!5700 (toList!803 lt!53813)))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))) ((_ is Cons!1613) (t!5700 (toList!803 lt!53813))) (bvslt (_1!1216 (h!2210 (t!5700 (toList!803 lt!53813)))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355))))))

(declare-fun b!107215 () Bool)

(assert (=> b!107215 (= e!69739 (containsKey!160 (t!5700 (t!5700 (toList!803 lt!53813))) (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355)))))

(assert (= (and d!29747 (not res!53256)) b!107214))

(assert (= (and b!107214 res!53257) b!107215))

(assert (=> b!107215 m!117489))

(declare-fun m!120677 () Bool)

(assert (=> b!107215 m!120677))

(assert (=> b!105975 d!29747))

(declare-fun b!107216 () Bool)

(declare-fun e!69743 () List!1617)

(declare-fun e!69741 () List!1617)

(assert (=> b!107216 (= e!69743 e!69741)))

(declare-fun c!18817 () Bool)

(assert (=> b!107216 (= c!18817 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53805))) (= (_1!1216 (h!2210 (t!5700 (toList!803 lt!53805)))) (_1!1216 lt!53814))))))

(declare-fun b!107217 () Bool)

(declare-fun call!11346 () List!1617)

(assert (=> b!107217 (= e!69743 call!11346)))

(declare-fun b!107219 () Bool)

(declare-fun e!69744 () List!1617)

(declare-fun call!11348 () List!1617)

(assert (=> b!107219 (= e!69744 call!11348)))

(declare-fun b!107220 () Bool)

(declare-fun c!18818 () Bool)

(assert (=> b!107220 (= c!18818 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53805))) (bvsgt (_1!1216 (h!2210 (t!5700 (toList!803 lt!53805)))) (_1!1216 lt!53814))))))

(assert (=> b!107220 (= e!69741 e!69744)))

(declare-fun bm!11343 () Bool)

(declare-fun call!11347 () List!1617)

(assert (=> bm!11343 (= call!11348 call!11347)))

(declare-fun b!107221 () Bool)

(declare-fun e!69742 () List!1617)

(assert (=> b!107221 (= e!69742 (insertStrictlySorted!75 (t!5700 (t!5700 (toList!803 lt!53805))) (_1!1216 lt!53814) (_2!1216 lt!53814)))))

(declare-fun b!107222 () Bool)

(assert (=> b!107222 (= e!69744 call!11348)))

(declare-fun b!107223 () Bool)

(declare-fun res!53259 () Bool)

(declare-fun e!69740 () Bool)

(assert (=> b!107223 (=> (not res!53259) (not e!69740))))

(declare-fun lt!55003 () List!1617)

(assert (=> b!107223 (= res!53259 (containsKey!160 lt!55003 (_1!1216 lt!53814)))))

(declare-fun b!107224 () Bool)

(assert (=> b!107224 (= e!69740 (contains!830 lt!55003 (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814))))))

(declare-fun b!107225 () Bool)

(assert (=> b!107225 (= e!69742 (ite c!18817 (t!5700 (t!5700 (toList!803 lt!53805))) (ite c!18818 (Cons!1613 (h!2210 (t!5700 (toList!803 lt!53805))) (t!5700 (t!5700 (toList!803 lt!53805)))) Nil!1614)))))

(declare-fun d!29749 () Bool)

(assert (=> d!29749 e!69740))

(declare-fun res!53258 () Bool)

(assert (=> d!29749 (=> (not res!53258) (not e!69740))))

(assert (=> d!29749 (= res!53258 (isStrictlySorted!309 lt!55003))))

(assert (=> d!29749 (= lt!55003 e!69743)))

(declare-fun c!18816 () Bool)

(assert (=> d!29749 (= c!18816 (and ((_ is Cons!1613) (t!5700 (toList!803 lt!53805))) (bvslt (_1!1216 (h!2210 (t!5700 (toList!803 lt!53805)))) (_1!1216 lt!53814))))))

(assert (=> d!29749 (isStrictlySorted!309 (t!5700 (toList!803 lt!53805)))))

(assert (=> d!29749 (= (insertStrictlySorted!75 (t!5700 (toList!803 lt!53805)) (_1!1216 lt!53814) (_2!1216 lt!53814)) lt!55003)))

(declare-fun b!107218 () Bool)

(assert (=> b!107218 (= e!69741 call!11347)))

(declare-fun bm!11344 () Bool)

(assert (=> bm!11344 (= call!11346 ($colon$colon!81 e!69742 (ite c!18816 (h!2210 (t!5700 (toList!803 lt!53805))) (tuple2!2411 (_1!1216 lt!53814) (_2!1216 lt!53814)))))))

(declare-fun c!18819 () Bool)

(assert (=> bm!11344 (= c!18819 c!18816)))

(declare-fun bm!11345 () Bool)

(assert (=> bm!11345 (= call!11347 call!11346)))

(assert (= (and d!29749 c!18816) b!107217))

(assert (= (and d!29749 (not c!18816)) b!107216))

(assert (= (and b!107216 c!18817) b!107218))

(assert (= (and b!107216 (not c!18817)) b!107220))

(assert (= (and b!107220 c!18818) b!107222))

(assert (= (and b!107220 (not c!18818)) b!107219))

(assert (= (or b!107222 b!107219) bm!11343))

(assert (= (or b!107218 bm!11343) bm!11345))

(assert (= (or b!107217 bm!11345) bm!11344))

(assert (= (and bm!11344 c!18819) b!107221))

(assert (= (and bm!11344 (not c!18819)) b!107225))

(assert (= (and d!29749 res!53258) b!107223))

(assert (= (and b!107223 res!53259) b!107224))

(declare-fun m!120679 () Bool)

(assert (=> b!107221 m!120679))

(declare-fun m!120681 () Bool)

(assert (=> b!107224 m!120681))

(declare-fun m!120683 () Bool)

(assert (=> d!29749 m!120683))

(assert (=> d!29749 m!118853))

(declare-fun m!120685 () Bool)

(assert (=> bm!11344 m!120685))

(declare-fun m!120687 () Bool)

(assert (=> b!107223 m!120687))

(assert (=> b!105952 d!29749))

(assert (=> b!106082 d!29607))

(declare-fun d!29751 () Bool)

(declare-fun res!53260 () Bool)

(declare-fun e!69745 () Bool)

(assert (=> d!29751 (=> res!53260 e!69745)))

(assert (=> d!29751 (= res!53260 (or ((_ is Nil!1614) lt!54142) ((_ is Nil!1614) (t!5700 lt!54142))))))

(assert (=> d!29751 (= (isStrictlySorted!309 lt!54142) e!69745)))

(declare-fun b!107226 () Bool)

(declare-fun e!69746 () Bool)

(assert (=> b!107226 (= e!69745 e!69746)))

(declare-fun res!53261 () Bool)

(assert (=> b!107226 (=> (not res!53261) (not e!69746))))

(assert (=> b!107226 (= res!53261 (bvslt (_1!1216 (h!2210 lt!54142)) (_1!1216 (h!2210 (t!5700 lt!54142)))))))

(declare-fun b!107227 () Bool)

(assert (=> b!107227 (= e!69746 (isStrictlySorted!309 (t!5700 lt!54142)))))

(assert (= (and d!29751 (not res!53260)) b!107226))

(assert (= (and b!107226 res!53261) b!107227))

(declare-fun m!120689 () Bool)

(assert (=> b!107227 m!120689))

(assert (=> d!28891 d!29751))

(declare-fun d!29753 () Bool)

(declare-fun res!53262 () Bool)

(declare-fun e!69747 () Bool)

(assert (=> d!29753 (=> res!53262 e!69747)))

(assert (=> d!29753 (= res!53262 (or ((_ is Nil!1614) (toList!803 (+!144 lt!53805 lt!53815))) ((_ is Nil!1614) (t!5700 (toList!803 (+!144 lt!53805 lt!53815))))))))

(assert (=> d!29753 (= (isStrictlySorted!309 (toList!803 (+!144 lt!53805 lt!53815))) e!69747)))

(declare-fun b!107228 () Bool)

(declare-fun e!69748 () Bool)

(assert (=> b!107228 (= e!69747 e!69748)))

(declare-fun res!53263 () Bool)

(assert (=> b!107228 (=> (not res!53263) (not e!69748))))

(assert (=> b!107228 (= res!53263 (bvslt (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 lt!53815)))) (_1!1216 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53815)))))))))

(declare-fun b!107229 () Bool)

(assert (=> b!107229 (= e!69748 (isStrictlySorted!309 (t!5700 (toList!803 (+!144 lt!53805 lt!53815)))))))

(assert (= (and d!29753 (not res!53262)) b!107228))

(assert (= (and b!107228 res!53263) b!107229))

(assert (=> b!107229 m!119305))

(assert (=> d!28891 d!29753))

(declare-fun d!29755 () Bool)

(declare-fun res!53264 () Bool)

(declare-fun e!69749 () Bool)

(assert (=> d!29755 (=> res!53264 e!69749)))

(assert (=> d!29755 (= res!53264 (and ((_ is Cons!1613) (toList!803 call!11141)) (= (_1!1216 (h!2210 (toList!803 call!11141))) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))))))))

(assert (=> d!29755 (= (containsKey!160 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))) e!69749)))

(declare-fun b!107230 () Bool)

(declare-fun e!69750 () Bool)

(assert (=> b!107230 (= e!69749 e!69750)))

(declare-fun res!53265 () Bool)

(assert (=> b!107230 (=> (not res!53265) (not e!69750))))

(assert (=> b!107230 (= res!53265 (and (or (not ((_ is Cons!1613) (toList!803 call!11141))) (bvsle (_1!1216 (h!2210 (toList!803 call!11141))) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))))) ((_ is Cons!1613) (toList!803 call!11141)) (bvslt (_1!1216 (h!2210 (toList!803 call!11141))) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060))))))))

(declare-fun b!107231 () Bool)

(assert (=> b!107231 (= e!69750 (containsKey!160 (t!5700 (toList!803 call!11141)) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))

(assert (= (and d!29755 (not res!53264)) b!107230))

(assert (= (and b!107230 res!53265) b!107231))

(declare-fun m!120691 () Bool)

(assert (=> b!107231 m!120691))

(assert (=> d!28893 d!29755))

(assert (=> b!105940 d!29187))

(assert (=> b!105940 d!28959))

(declare-fun d!29757 () Bool)

(declare-fun res!53266 () Bool)

(declare-fun e!69751 () Bool)

(assert (=> d!29757 (=> res!53266 e!69751)))

(assert (=> d!29757 (= res!53266 (and ((_ is Cons!1613) (toList!803 lt!53902)) (= (_1!1216 (h!2210 (toList!803 lt!53902))) (_1!1216 lt!53815))))))

(assert (=> d!29757 (= (containsKey!160 (toList!803 lt!53902) (_1!1216 lt!53815)) e!69751)))

(declare-fun b!107232 () Bool)

(declare-fun e!69752 () Bool)

(assert (=> b!107232 (= e!69751 e!69752)))

(declare-fun res!53267 () Bool)

(assert (=> b!107232 (=> (not res!53267) (not e!69752))))

(assert (=> b!107232 (= res!53267 (and (or (not ((_ is Cons!1613) (toList!803 lt!53902))) (bvsle (_1!1216 (h!2210 (toList!803 lt!53902))) (_1!1216 lt!53815))) ((_ is Cons!1613) (toList!803 lt!53902)) (bvslt (_1!1216 (h!2210 (toList!803 lt!53902))) (_1!1216 lt!53815))))))

(declare-fun b!107233 () Bool)

(assert (=> b!107233 (= e!69752 (containsKey!160 (t!5700 (toList!803 lt!53902)) (_1!1216 lt!53815)))))

(assert (= (and d!29757 (not res!53266)) b!107232))

(assert (= (and b!107232 res!53267) b!107233))

(declare-fun m!120693 () Bool)

(assert (=> b!107233 m!120693))

(assert (=> d!28871 d!29757))

(declare-fun b!107236 () Bool)

(declare-fun e!69754 () Option!162)

(assert (=> b!107236 (= e!69754 (getValueByKey!156 (t!5700 (toList!803 lt!54247)) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(declare-fun b!107234 () Bool)

(declare-fun e!69753 () Option!162)

(assert (=> b!107234 (= e!69753 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54247)))))))

(declare-fun d!29759 () Bool)

(declare-fun c!18820 () Bool)

(assert (=> d!29759 (= c!18820 (and ((_ is Cons!1613) (toList!803 lt!54247)) (= (_1!1216 (h!2210 (toList!803 lt!54247))) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (=> d!29759 (= (getValueByKey!156 (toList!803 lt!54247) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))) e!69753)))

(declare-fun b!107237 () Bool)

(assert (=> b!107237 (= e!69754 None!160)))

(declare-fun b!107235 () Bool)

(assert (=> b!107235 (= e!69753 e!69754)))

(declare-fun c!18821 () Bool)

(assert (=> b!107235 (= c!18821 (and ((_ is Cons!1613) (toList!803 lt!54247)) (not (= (_1!1216 (h!2210 (toList!803 lt!54247))) (_1!1216 (ite c!18369 (ite c!18363 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53807) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53807)) (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))))

(assert (= (and d!29759 c!18820) b!107234))

(assert (= (and d!29759 (not c!18820)) b!107235))

(assert (= (and b!107235 c!18821) b!107236))

(assert (= (and b!107235 (not c!18821)) b!107237))

(declare-fun m!120695 () Bool)

(assert (=> b!107236 m!120695))

(assert (=> b!105957 d!29759))

(assert (=> d!28889 d!28887))

(declare-fun d!29761 () Bool)

(assert (=> d!29761 (= (getValueByKey!156 lt!53908 (_1!1216 lt!53814)) (Some!161 (_2!1216 lt!53814)))))

(assert (=> d!29761 true))

(declare-fun _$22!435 () Unit!3232)

(assert (=> d!29761 (= (choose!657 lt!53908 (_1!1216 lt!53814) (_2!1216 lt!53814)) _$22!435)))

(declare-fun bs!4422 () Bool)

(assert (= bs!4422 d!29761))

(assert (=> bs!4422 m!117689))

(assert (=> d!28889 d!29761))

(declare-fun d!29763 () Bool)

(declare-fun res!53268 () Bool)

(declare-fun e!69755 () Bool)

(assert (=> d!29763 (=> res!53268 e!69755)))

(assert (=> d!29763 (= res!53268 (or ((_ is Nil!1614) lt!53908) ((_ is Nil!1614) (t!5700 lt!53908))))))

(assert (=> d!29763 (= (isStrictlySorted!309 lt!53908) e!69755)))

(declare-fun b!107238 () Bool)

(declare-fun e!69756 () Bool)

(assert (=> b!107238 (= e!69755 e!69756)))

(declare-fun res!53269 () Bool)

(assert (=> b!107238 (=> (not res!53269) (not e!69756))))

(assert (=> b!107238 (= res!53269 (bvslt (_1!1216 (h!2210 lt!53908)) (_1!1216 (h!2210 (t!5700 lt!53908)))))))

(declare-fun b!107239 () Bool)

(assert (=> b!107239 (= e!69756 (isStrictlySorted!309 (t!5700 lt!53908)))))

(assert (= (and d!29763 (not res!53268)) b!107238))

(assert (= (and b!107238 res!53269) b!107239))

(declare-fun m!120697 () Bool)

(assert (=> b!107239 m!120697))

(assert (=> d!28889 d!29763))

(assert (=> b!105907 d!29049))

(declare-fun d!29765 () Bool)

(declare-fun res!53270 () Bool)

(declare-fun e!69757 () Bool)

(assert (=> d!29765 (=> res!53270 e!69757)))

(assert (=> d!29765 (= res!53270 (or ((_ is Nil!1614) lt!54127) ((_ is Nil!1614) (t!5700 lt!54127))))))

(assert (=> d!29765 (= (isStrictlySorted!309 lt!54127) e!69757)))

(declare-fun b!107240 () Bool)

(declare-fun e!69758 () Bool)

(assert (=> b!107240 (= e!69757 e!69758)))

(declare-fun res!53271 () Bool)

(assert (=> b!107240 (=> (not res!53271) (not e!69758))))

(assert (=> b!107240 (= res!53271 (bvslt (_1!1216 (h!2210 lt!54127)) (_1!1216 (h!2210 (t!5700 lt!54127)))))))

(declare-fun b!107241 () Bool)

(assert (=> b!107241 (= e!69758 (isStrictlySorted!309 (t!5700 lt!54127)))))

(assert (= (and d!29765 (not res!53270)) b!107240))

(assert (= (and b!107240 res!53271) b!107241))

(declare-fun m!120699 () Bool)

(assert (=> b!107241 m!120699))

(assert (=> d!28877 d!29765))

(declare-fun d!29767 () Bool)

(declare-fun res!53272 () Bool)

(declare-fun e!69759 () Bool)

(assert (=> d!29767 (=> res!53272 e!69759)))

(assert (=> d!29767 (= res!53272 (or ((_ is Nil!1614) (toList!803 (+!144 lt!53805 lt!53814))) ((_ is Nil!1614) (t!5700 (toList!803 (+!144 lt!53805 lt!53814))))))))

(assert (=> d!29767 (= (isStrictlySorted!309 (toList!803 (+!144 lt!53805 lt!53814))) e!69759)))

(declare-fun b!107242 () Bool)

(declare-fun e!69760 () Bool)

(assert (=> b!107242 (= e!69759 e!69760)))

(declare-fun res!53273 () Bool)

(assert (=> b!107242 (=> (not res!53273) (not e!69760))))

(assert (=> b!107242 (= res!53273 (bvslt (_1!1216 (h!2210 (toList!803 (+!144 lt!53805 lt!53814)))) (_1!1216 (h!2210 (t!5700 (toList!803 (+!144 lt!53805 lt!53814)))))))))

(declare-fun b!107243 () Bool)

(assert (=> b!107243 (= e!69760 (isStrictlySorted!309 (t!5700 (toList!803 (+!144 lt!53805 lt!53814)))))))

(assert (= (and d!29767 (not res!53272)) b!107242))

(assert (= (and b!107242 res!53273) b!107243))

(assert (=> b!107243 m!118861))

(assert (=> d!28877 d!29767))

(declare-fun d!29769 () Bool)

(assert (=> d!29769 (isDefined!109 (getValueByKey!156 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954))))

(declare-fun lt!55004 () Unit!3232)

(assert (=> d!29769 (= lt!55004 (choose!660 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954))))

(declare-fun e!69761 () Bool)

(assert (=> d!29769 e!69761))

(declare-fun res!53274 () Bool)

(assert (=> d!29769 (=> (not res!53274) (not e!69761))))

(assert (=> d!29769 (= res!53274 (isStrictlySorted!309 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29769 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954) lt!55004)))

(declare-fun b!107244 () Bool)

(assert (=> b!107244 (= e!69761 (containsKey!160 (toList!803 (+!144 lt!53956 (tuple2!2411 lt!53966 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))))) lt!53954))))

(assert (= (and d!29769 res!53274) b!107244))

(assert (=> d!29769 m!117877))

(assert (=> d!29769 m!117877))

(assert (=> d!29769 m!117879))

(declare-fun m!120701 () Bool)

(assert (=> d!29769 m!120701))

(declare-fun m!120703 () Bool)

(assert (=> d!29769 m!120703))

(assert (=> b!107244 m!117873))

(assert (=> b!105671 d!29769))

(assert (=> b!105671 d!29601))

(assert (=> b!105671 d!29603))

(declare-fun d!29771 () Bool)

(declare-fun e!69763 () Bool)

(assert (=> d!29771 e!69763))

(declare-fun res!53275 () Bool)

(assert (=> d!29771 (=> res!53275 e!69763)))

(declare-fun lt!55007 () Bool)

(assert (=> d!29771 (= res!53275 (not lt!55007))))

(declare-fun lt!55005 () Bool)

(assert (=> d!29771 (= lt!55007 lt!55005)))

(declare-fun lt!55006 () Unit!3232)

(declare-fun e!69762 () Unit!3232)

(assert (=> d!29771 (= lt!55006 e!69762)))

(declare-fun c!18822 () Bool)

(assert (=> d!29771 (= c!18822 lt!55005)))

(assert (=> d!29771 (= lt!55005 (containsKey!160 (toList!803 lt!54267) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> d!29771 (= (contains!828 lt!54267 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) lt!55007)))

(declare-fun b!107245 () Bool)

(declare-fun lt!55008 () Unit!3232)

(assert (=> b!107245 (= e!69762 lt!55008)))

(assert (=> b!107245 (= lt!55008 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 lt!54267) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(assert (=> b!107245 (isDefined!109 (getValueByKey!156 (toList!803 lt!54267) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107246 () Bool)

(declare-fun Unit!3309 () Unit!3232)

(assert (=> b!107246 (= e!69762 Unit!3309)))

(declare-fun b!107247 () Bool)

(assert (=> b!107247 (= e!69763 (isDefined!109 (getValueByKey!156 (toList!803 lt!54267) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29771 c!18822) b!107245))

(assert (= (and d!29771 (not c!18822)) b!107246))

(assert (= (and d!29771 (not res!53275)) b!107247))

(declare-fun m!120705 () Bool)

(assert (=> d!29771 m!120705))

(declare-fun m!120707 () Bool)

(assert (=> b!107245 m!120707))

(assert (=> b!107245 m!118411))

(assert (=> b!107245 m!118411))

(declare-fun m!120709 () Bool)

(assert (=> b!107245 m!120709))

(assert (=> b!107247 m!118411))

(assert (=> b!107247 m!118411))

(assert (=> b!107247 m!120709))

(assert (=> d!28999 d!29771))

(declare-fun e!69765 () Option!162)

(declare-fun b!107250 () Bool)

(assert (=> b!107250 (= e!69765 (getValueByKey!156 (t!5700 lt!54269) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107248 () Bool)

(declare-fun e!69764 () Option!162)

(assert (=> b!107248 (= e!69764 (Some!161 (_2!1216 (h!2210 lt!54269))))))

(declare-fun d!29773 () Bool)

(declare-fun c!18823 () Bool)

(assert (=> d!29773 (= c!18823 (and ((_ is Cons!1613) lt!54269) (= (_1!1216 (h!2210 lt!54269)) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (=> d!29773 (= (getValueByKey!156 lt!54269 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) e!69764)))

(declare-fun b!107251 () Bool)

(assert (=> b!107251 (= e!69765 None!160)))

(declare-fun b!107249 () Bool)

(assert (=> b!107249 (= e!69764 e!69765)))

(declare-fun c!18824 () Bool)

(assert (=> b!107249 (= c!18824 (and ((_ is Cons!1613) lt!54269) (not (= (_1!1216 (h!2210 lt!54269)) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))))

(assert (= (and d!29773 c!18823) b!107248))

(assert (= (and d!29773 (not c!18823)) b!107249))

(assert (= (and b!107249 c!18824) b!107250))

(assert (= (and b!107249 (not c!18824)) b!107251))

(declare-fun m!120711 () Bool)

(assert (=> b!107250 m!120711))

(assert (=> d!28999 d!29773))

(declare-fun d!29775 () Bool)

(assert (=> d!29775 (= (getValueByKey!156 lt!54269 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) (Some!161 (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun lt!55009 () Unit!3232)

(assert (=> d!29775 (= lt!55009 (choose!657 lt!54269 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun e!69766 () Bool)

(assert (=> d!29775 e!69766))

(declare-fun res!53276 () Bool)

(assert (=> d!29775 (=> (not res!53276) (not e!69766))))

(assert (=> d!29775 (= res!53276 (isStrictlySorted!309 lt!54269))))

(assert (=> d!29775 (= (lemmaContainsTupThenGetReturnValue!72 lt!54269 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) lt!55009)))

(declare-fun b!107252 () Bool)

(declare-fun res!53277 () Bool)

(assert (=> b!107252 (=> (not res!53277) (not e!69766))))

(assert (=> b!107252 (= res!53277 (containsKey!160 lt!54269 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107253 () Bool)

(assert (=> b!107253 (= e!69766 (contains!830 lt!54269 (tuple2!2411 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (= (and d!29775 res!53276) b!107252))

(assert (= (and b!107252 res!53277) b!107253))

(assert (=> d!29775 m!118405))

(declare-fun m!120713 () Bool)

(assert (=> d!29775 m!120713))

(declare-fun m!120715 () Bool)

(assert (=> d!29775 m!120715))

(declare-fun m!120717 () Bool)

(assert (=> b!107252 m!120717))

(declare-fun m!120719 () Bool)

(assert (=> b!107253 m!120719))

(assert (=> d!28999 d!29775))

(declare-fun b!107254 () Bool)

(declare-fun e!69770 () List!1617)

(declare-fun e!69768 () List!1617)

(assert (=> b!107254 (= e!69770 e!69768)))

(declare-fun c!18826 () Bool)

(assert (=> b!107254 (= c!18826 (and ((_ is Cons!1613) (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086)))) (= (_1!1216 (h!2210 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086))))) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!107255 () Bool)

(declare-fun call!11349 () List!1617)

(assert (=> b!107255 (= e!69770 call!11349)))

(declare-fun b!107257 () Bool)

(declare-fun e!69771 () List!1617)

(declare-fun call!11351 () List!1617)

(assert (=> b!107257 (= e!69771 call!11351)))

(declare-fun b!107258 () Bool)

(declare-fun c!18827 () Bool)

(assert (=> b!107258 (= c!18827 (and ((_ is Cons!1613) (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086)))) (bvsgt (_1!1216 (h!2210 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086))))) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (=> b!107258 (= e!69768 e!69771)))

(declare-fun bm!11346 () Bool)

(declare-fun call!11350 () List!1617)

(assert (=> bm!11346 (= call!11351 call!11350)))

(declare-fun e!69769 () List!1617)

(declare-fun b!107259 () Bool)

(assert (=> b!107259 (= e!69769 (insertStrictlySorted!75 (t!5700 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086)))) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107260 () Bool)

(assert (=> b!107260 (= e!69771 call!11351)))

(declare-fun b!107261 () Bool)

(declare-fun res!53279 () Bool)

(declare-fun e!69767 () Bool)

(assert (=> b!107261 (=> (not res!53279) (not e!69767))))

(declare-fun lt!55010 () List!1617)

(assert (=> b!107261 (= res!53279 (containsKey!160 lt!55010 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107262 () Bool)

(assert (=> b!107262 (= e!69767 (contains!830 lt!55010 (tuple2!2411 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(declare-fun b!107263 () Bool)

(assert (=> b!107263 (= e!69769 (ite c!18826 (t!5700 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086)))) (ite c!18827 (Cons!1613 (h!2210 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086)))) (t!5700 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086))))) Nil!1614)))))

(declare-fun d!29777 () Bool)

(assert (=> d!29777 e!69767))

(declare-fun res!53278 () Bool)

(assert (=> d!29777 (=> (not res!53278) (not e!69767))))

(assert (=> d!29777 (= res!53278 (isStrictlySorted!309 lt!55010))))

(assert (=> d!29777 (= lt!55010 e!69770)))

(declare-fun c!18825 () Bool)

(assert (=> d!29777 (= c!18825 (and ((_ is Cons!1613) (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086)))) (bvslt (_1!1216 (h!2210 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086))))) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (=> d!29777 (isStrictlySorted!309 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086))))))

(assert (=> d!29777 (= (insertStrictlySorted!75 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086))) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) lt!55010)))

(declare-fun b!107256 () Bool)

(assert (=> b!107256 (= e!69768 call!11350)))

(declare-fun bm!11347 () Bool)

(assert (=> bm!11347 (= call!11349 ($colon$colon!81 e!69769 (ite c!18825 (h!2210 (toList!803 (ite c!18329 call!11080 (ite c!18332 call!11081 call!11086)))) (tuple2!2411 (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))) (_2!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))))

(declare-fun c!18828 () Bool)

(assert (=> bm!11347 (= c!18828 c!18825)))

(declare-fun bm!11348 () Bool)

(assert (=> bm!11348 (= call!11350 call!11349)))

(assert (= (and d!29777 c!18825) b!107255))

(assert (= (and d!29777 (not c!18825)) b!107254))

(assert (= (and b!107254 c!18826) b!107256))

(assert (= (and b!107254 (not c!18826)) b!107258))

(assert (= (and b!107258 c!18827) b!107260))

(assert (= (and b!107258 (not c!18827)) b!107257))

(assert (= (or b!107260 b!107257) bm!11346))

(assert (= (or b!107256 bm!11346) bm!11348))

(assert (= (or b!107255 bm!11348) bm!11347))

(assert (= (and bm!11347 c!18828) b!107259))

(assert (= (and bm!11347 (not c!18828)) b!107263))

(assert (= (and d!29777 res!53278) b!107261))

(assert (= (and b!107261 res!53279) b!107262))

(declare-fun m!120721 () Bool)

(assert (=> b!107259 m!120721))

(declare-fun m!120723 () Bool)

(assert (=> b!107262 m!120723))

(declare-fun m!120725 () Bool)

(assert (=> d!29777 m!120725))

(declare-fun m!120727 () Bool)

(assert (=> d!29777 m!120727))

(declare-fun m!120729 () Bool)

(assert (=> bm!11347 m!120729))

(declare-fun m!120731 () Bool)

(assert (=> b!107261 m!120731))

(assert (=> d!28999 d!29777))

(assert (=> bm!11160 d!28913))

(declare-fun b!107266 () Bool)

(declare-fun e!69773 () Option!162)

(assert (=> b!107266 (= e!69773 (getValueByKey!156 (t!5700 (toList!803 lt!54267)) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))

(declare-fun b!107264 () Bool)

(declare-fun e!69772 () Option!162)

(assert (=> b!107264 (= e!69772 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54267)))))))

(declare-fun d!29779 () Bool)

(declare-fun c!18829 () Bool)

(assert (=> d!29779 (= c!18829 (and ((_ is Cons!1613) (toList!803 lt!54267)) (= (_1!1216 (h!2210 (toList!803 lt!54267))) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992)))))))))))

(assert (=> d!29779 (= (getValueByKey!156 (toList!803 lt!54267) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))) e!69772)))

(declare-fun b!107267 () Bool)

(assert (=> b!107267 (= e!69773 None!160)))

(declare-fun b!107265 () Bool)

(assert (=> b!107265 (= e!69772 e!69773)))

(declare-fun c!18830 () Bool)

(assert (=> b!107265 (= c!18830 (and ((_ is Cons!1613) (toList!803 lt!54267)) (not (= (_1!1216 (h!2210 (toList!803 lt!54267))) (_1!1216 (ite (or c!18329 c!18332) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!361 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!361 thiss!992))))))))))))

(assert (= (and d!29779 c!18829) b!107264))

(assert (= (and d!29779 (not c!18829)) b!107265))

(assert (= (and b!107265 c!18830) b!107266))

(assert (= (and b!107265 (not c!18830)) b!107267))

(declare-fun m!120733 () Bool)

(assert (=> b!107266 m!120733))

(assert (=> b!105976 d!29779))

(declare-fun d!29781 () Bool)

(assert (=> d!29781 (= (inRange!0 (ite c!18474 (index!3185 lt!54342) (ite c!18472 (index!3184 lt!54355) (index!3187 lt!54355))) (mask!6728 newMap!16)) (and (bvsge (ite c!18474 (index!3185 lt!54342) (ite c!18472 (index!3184 lt!54355) (index!3187 lt!54355))) #b00000000000000000000000000000000) (bvslt (ite c!18474 (index!3185 lt!54342) (ite c!18472 (index!3184 lt!54355) (index!3187 lt!54355))) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11201 d!29781))

(assert (=> b!106065 d!28787))

(declare-fun b!107270 () Bool)

(declare-fun res!53280 () Bool)

(declare-fun e!69774 () Bool)

(assert (=> b!107270 (=> (not res!53280) (not e!69774))))

(assert (=> b!107270 (= res!53280 (= (size!2322 (_2!1217 lt!54050)) (bvadd (_size!499 (_2!1217 lt!54050)) (bvsdiv (bvadd (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!107271 () Bool)

(assert (=> b!107271 (= e!69774 (and (bvsge (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000000) (bvsle (extraKeys!2387 (_2!1217 lt!54050)) #b00000000000000000000000000000011) (bvsge (_vacant!499 (_2!1217 lt!54050)) #b00000000000000000000000000000000)))))

(declare-fun d!29783 () Bool)

(declare-fun res!53281 () Bool)

(assert (=> d!29783 (=> (not res!53281) (not e!69774))))

(assert (=> d!29783 (= res!53281 (validMask!0 (mask!6728 (_2!1217 lt!54050))))))

(assert (=> d!29783 (= (simpleValid!74 (_2!1217 lt!54050)) e!69774)))

(declare-fun b!107269 () Bool)

(declare-fun res!53283 () Bool)

(assert (=> b!107269 (=> (not res!53283) (not e!69774))))

(assert (=> b!107269 (= res!53283 (bvsge (size!2322 (_2!1217 lt!54050)) (_size!499 (_2!1217 lt!54050))))))

(declare-fun b!107268 () Bool)

(declare-fun res!53282 () Bool)

(assert (=> b!107268 (=> (not res!53282) (not e!69774))))

(assert (=> b!107268 (= res!53282 (and (= (size!2319 (_values!2565 (_2!1217 lt!54050))) (bvadd (mask!6728 (_2!1217 lt!54050)) #b00000000000000000000000000000001)) (= (size!2318 (_keys!4288 (_2!1217 lt!54050))) (size!2319 (_values!2565 (_2!1217 lt!54050)))) (bvsge (_size!499 (_2!1217 lt!54050)) #b00000000000000000000000000000000) (bvsle (_size!499 (_2!1217 lt!54050)) (bvadd (mask!6728 (_2!1217 lt!54050)) #b00000000000000000000000000000001))))))

(assert (= (and d!29783 res!53281) b!107268))

(assert (= (and b!107268 res!53282) b!107269))

(assert (= (and b!107269 res!53283) b!107270))

(assert (= (and b!107270 res!53280) b!107271))

(declare-fun m!120735 () Bool)

(assert (=> b!107270 m!120735))

(assert (=> d!29783 m!119857))

(assert (=> b!107269 m!120735))

(assert (=> d!28869 d!29783))

(declare-fun d!29785 () Bool)

(declare-fun res!53284 () Bool)

(declare-fun e!69775 () Bool)

(assert (=> d!29785 (=> res!53284 e!69775)))

(assert (=> d!29785 (= res!53284 (and ((_ is Cons!1613) lt!53897) (= (_1!1216 (h!2210 lt!53897)) (_1!1216 lt!53814))))))

(assert (=> d!29785 (= (containsKey!160 lt!53897 (_1!1216 lt!53814)) e!69775)))

(declare-fun b!107272 () Bool)

(declare-fun e!69776 () Bool)

(assert (=> b!107272 (= e!69775 e!69776)))

(declare-fun res!53285 () Bool)

(assert (=> b!107272 (=> (not res!53285) (not e!69776))))

(assert (=> b!107272 (= res!53285 (and (or (not ((_ is Cons!1613) lt!53897)) (bvsle (_1!1216 (h!2210 lt!53897)) (_1!1216 lt!53814))) ((_ is Cons!1613) lt!53897) (bvslt (_1!1216 (h!2210 lt!53897)) (_1!1216 lt!53814))))))

(declare-fun b!107273 () Bool)

(assert (=> b!107273 (= e!69776 (containsKey!160 (t!5700 lt!53897) (_1!1216 lt!53814)))))

(assert (= (and d!29785 (not res!53284)) b!107272))

(assert (= (and b!107272 res!53285) b!107273))

(declare-fun m!120737 () Bool)

(assert (=> b!107273 m!120737))

(assert (=> b!105945 d!29785))

(assert (=> b!105925 d!29167))

(assert (=> b!105925 d!29169))

(declare-fun e!69778 () Option!162)

(declare-fun b!107276 () Bool)

(assert (=> b!107276 (= e!69778 (getValueByKey!156 (t!5700 (toList!803 lt!54173)) (_1!1216 (tuple2!2411 lt!53879 lt!53875))))))

(declare-fun b!107274 () Bool)

(declare-fun e!69777 () Option!162)

(assert (=> b!107274 (= e!69777 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54173)))))))

(declare-fun c!18831 () Bool)

(declare-fun d!29787 () Bool)

(assert (=> d!29787 (= c!18831 (and ((_ is Cons!1613) (toList!803 lt!54173)) (= (_1!1216 (h!2210 (toList!803 lt!54173))) (_1!1216 (tuple2!2411 lt!53879 lt!53875)))))))

(assert (=> d!29787 (= (getValueByKey!156 (toList!803 lt!54173) (_1!1216 (tuple2!2411 lt!53879 lt!53875))) e!69777)))

(declare-fun b!107277 () Bool)

(assert (=> b!107277 (= e!69778 None!160)))

(declare-fun b!107275 () Bool)

(assert (=> b!107275 (= e!69777 e!69778)))

(declare-fun c!18832 () Bool)

(assert (=> b!107275 (= c!18832 (and ((_ is Cons!1613) (toList!803 lt!54173)) (not (= (_1!1216 (h!2210 (toList!803 lt!54173))) (_1!1216 (tuple2!2411 lt!53879 lt!53875))))))))

(assert (= (and d!29787 c!18831) b!107274))

(assert (= (and d!29787 (not c!18831)) b!107275))

(assert (= (and b!107275 c!18832) b!107276))

(assert (= (and b!107275 (not c!18832)) b!107277))

(declare-fun m!120739 () Bool)

(assert (=> b!107276 m!120739))

(assert (=> b!105836 d!29787))

(assert (=> b!106076 d!29733))

(declare-fun d!29789 () Bool)

(assert (=> d!29789 (isDefined!109 (getValueByKey!156 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))

(declare-fun lt!55011 () Unit!3232)

(assert (=> d!29789 (= lt!55011 (choose!660 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))

(declare-fun e!69779 () Bool)

(assert (=> d!29789 e!69779))

(declare-fun res!53286 () Bool)

(assert (=> d!29789 (=> (not res!53286) (not e!69779))))

(assert (=> d!29789 (= res!53286 (isStrictlySorted!309 (toList!803 call!11141)))))

(assert (=> d!29789 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))) lt!55011)))

(declare-fun b!107278 () Bool)

(assert (=> b!107278 (= e!69779 (containsKey!160 (toList!803 call!11141) (ite c!18367 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) (select (arr!2063 (_keys!4288 newMap!16)) (index!3185 lt!54060)))))))

(assert (= (and d!29789 res!53286) b!107278))

(assert (=> d!29789 m!118053))

(assert (=> d!29789 m!118053))

(assert (=> d!29789 m!118055))

(declare-fun m!120741 () Bool)

(assert (=> d!29789 m!120741))

(declare-fun m!120743 () Bool)

(assert (=> d!29789 m!120743))

(assert (=> b!107278 m!118049))

(assert (=> b!105809 d!29789))

(assert (=> b!105809 d!29647))

(assert (=> b!105809 d!29649))

(assert (=> d!28937 d!28935))

(declare-fun d!29791 () Bool)

(assert (=> d!29791 (= (getValueByKey!156 lt!53893 (_1!1216 lt!53815)) (Some!161 (_2!1216 lt!53815)))))

(assert (=> d!29791 true))

(declare-fun _$22!436 () Unit!3232)

(assert (=> d!29791 (= (choose!657 lt!53893 (_1!1216 lt!53815) (_2!1216 lt!53815)) _$22!436)))

(declare-fun bs!4423 () Bool)

(assert (= bs!4423 d!29791))

(assert (=> bs!4423 m!117643))

(assert (=> d!28937 d!29791))

(declare-fun d!29793 () Bool)

(declare-fun res!53287 () Bool)

(declare-fun e!69780 () Bool)

(assert (=> d!29793 (=> res!53287 e!69780)))

(assert (=> d!29793 (= res!53287 (or ((_ is Nil!1614) lt!53893) ((_ is Nil!1614) (t!5700 lt!53893))))))

(assert (=> d!29793 (= (isStrictlySorted!309 lt!53893) e!69780)))

(declare-fun b!107279 () Bool)

(declare-fun e!69781 () Bool)

(assert (=> b!107279 (= e!69780 e!69781)))

(declare-fun res!53288 () Bool)

(assert (=> b!107279 (=> (not res!53288) (not e!69781))))

(assert (=> b!107279 (= res!53288 (bvslt (_1!1216 (h!2210 lt!53893)) (_1!1216 (h!2210 (t!5700 lt!53893)))))))

(declare-fun b!107280 () Bool)

(assert (=> b!107280 (= e!69781 (isStrictlySorted!309 (t!5700 lt!53893)))))

(assert (= (and d!29793 (not res!53287)) b!107279))

(assert (= (and b!107279 res!53288) b!107280))

(declare-fun m!120745 () Bool)

(assert (=> b!107280 m!120745))

(assert (=> d!28937 d!29793))

(assert (=> b!105934 d!29179))

(assert (=> b!105934 d!29181))

(declare-fun b!107283 () Bool)

(declare-fun e!69783 () Option!162)

(assert (=> b!107283 (= e!69783 (getValueByKey!156 (t!5700 (toList!803 lt!54263)) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))

(declare-fun b!107281 () Bool)

(declare-fun e!69782 () Option!162)

(assert (=> b!107281 (= e!69782 (Some!161 (_2!1216 (h!2210 (toList!803 lt!54263)))))))

(declare-fun c!18833 () Bool)

(declare-fun d!29795 () Bool)

(assert (=> d!29795 (= c!18833 (and ((_ is Cons!1613) (toList!803 lt!54263)) (= (_1!1216 (h!2210 (toList!803 lt!54263))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807)))))))

(assert (=> d!29795 (= (getValueByKey!156 (toList!803 lt!54263) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))) e!69782)))

(declare-fun b!107284 () Bool)

(assert (=> b!107284 (= e!69783 None!160)))

(declare-fun b!107282 () Bool)

(assert (=> b!107282 (= e!69782 e!69783)))

(declare-fun c!18834 () Bool)

(assert (=> b!107282 (= c!18834 (and ((_ is Cons!1613) (toList!803 lt!54263)) (not (= (_1!1216 (h!2210 (toList!803 lt!54263))) (_1!1216 (tuple2!2411 (select (arr!2063 (_keys!4288 (v!2892 (underlying!361 thiss!992)))) from!355) lt!53807))))))))

(assert (= (and d!29795 c!18833) b!107281))

(assert (= (and d!29795 (not c!18833)) b!107282))

(assert (= (and b!107282 c!18834) b!107283))

(assert (= (and b!107282 (not c!18834)) b!107284))

(declare-fun m!120747 () Bool)

(assert (=> b!107283 m!120747))

(assert (=> b!105968 d!29795))

(declare-fun mapNonEmpty!3943 () Bool)

(declare-fun mapRes!3943 () Bool)

(declare-fun tp!9919 () Bool)

(declare-fun e!69784 () Bool)

(assert (=> mapNonEmpty!3943 (= mapRes!3943 (and tp!9919 e!69784))))

(declare-fun mapValue!3943 () ValueCell!996)

(declare-fun mapKey!3943 () (_ BitVec 32))

(declare-fun mapRest!3943 () (Array (_ BitVec 32) ValueCell!996))

(assert (=> mapNonEmpty!3943 (= mapRest!3941 (store mapRest!3943 mapKey!3943 mapValue!3943))))

(declare-fun b!107285 () Bool)

(assert (=> b!107285 (= e!69784 tp_is_empty!2679)))

(declare-fun condMapEmpty!3943 () Bool)

(declare-fun mapDefault!3943 () ValueCell!996)

(assert (=> mapNonEmpty!3941 (= condMapEmpty!3943 (= mapRest!3941 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3943)))))

(declare-fun e!69785 () Bool)

(assert (=> mapNonEmpty!3941 (= tp!9917 (and e!69785 mapRes!3943))))

(declare-fun mapIsEmpty!3943 () Bool)

(assert (=> mapIsEmpty!3943 mapRes!3943))

(declare-fun b!107286 () Bool)

(assert (=> b!107286 (= e!69785 tp_is_empty!2679)))

(assert (= (and mapNonEmpty!3941 condMapEmpty!3943) mapIsEmpty!3943))

(assert (= (and mapNonEmpty!3941 (not condMapEmpty!3943)) mapNonEmpty!3943))

(assert (= (and mapNonEmpty!3943 ((_ is ValueCellFull!996) mapValue!3943)) b!107285))

(assert (= (and mapNonEmpty!3941 ((_ is ValueCellFull!996) mapDefault!3943)) b!107286))

(declare-fun m!120749 () Bool)

(assert (=> mapNonEmpty!3943 m!120749))

(declare-fun mapNonEmpty!3944 () Bool)

(declare-fun mapRes!3944 () Bool)

(declare-fun tp!9920 () Bool)

(declare-fun e!69786 () Bool)

(assert (=> mapNonEmpty!3944 (= mapRes!3944 (and tp!9920 e!69786))))

(declare-fun mapKey!3944 () (_ BitVec 32))

(declare-fun mapRest!3944 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapValue!3944 () ValueCell!996)

(assert (=> mapNonEmpty!3944 (= mapRest!3942 (store mapRest!3944 mapKey!3944 mapValue!3944))))

(declare-fun b!107287 () Bool)

(assert (=> b!107287 (= e!69786 tp_is_empty!2679)))

(declare-fun condMapEmpty!3944 () Bool)

(declare-fun mapDefault!3944 () ValueCell!996)

(assert (=> mapNonEmpty!3942 (= condMapEmpty!3944 (= mapRest!3942 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3944)))))

(declare-fun e!69787 () Bool)

(assert (=> mapNonEmpty!3942 (= tp!9918 (and e!69787 mapRes!3944))))

(declare-fun mapIsEmpty!3944 () Bool)

(assert (=> mapIsEmpty!3944 mapRes!3944))

(declare-fun b!107288 () Bool)

(assert (=> b!107288 (= e!69787 tp_is_empty!2679)))

(assert (= (and mapNonEmpty!3942 condMapEmpty!3944) mapIsEmpty!3944))

(assert (= (and mapNonEmpty!3942 (not condMapEmpty!3944)) mapNonEmpty!3944))

(assert (= (and mapNonEmpty!3944 ((_ is ValueCellFull!996) mapValue!3944)) b!107287))

(assert (= (and mapNonEmpty!3942 ((_ is ValueCellFull!996) mapDefault!3944)) b!107288))

(declare-fun m!120751 () Bool)

(assert (=> mapNonEmpty!3944 m!120751))

(declare-fun b_lambda!4783 () Bool)

(assert (= b_lambda!4759 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4783)))

(declare-fun b_lambda!4785 () Bool)

(assert (= b_lambda!4761 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4785)))

(declare-fun b_lambda!4787 () Bool)

(assert (= b_lambda!4781 (or (and b!105285 b_free!2525) (and b!105288 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))) b_lambda!4787)))

(declare-fun b_lambda!4789 () Bool)

(assert (= b_lambda!4767 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4789)))

(declare-fun b_lambda!4791 () Bool)

(assert (= b_lambda!4757 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4791)))

(declare-fun b_lambda!4793 () Bool)

(assert (= b_lambda!4753 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4793)))

(declare-fun b_lambda!4795 () Bool)

(assert (= b_lambda!4771 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4795)))

(declare-fun b_lambda!4797 () Bool)

(assert (= b_lambda!4765 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4797)))

(declare-fun b_lambda!4799 () Bool)

(assert (= b_lambda!4779 (or (and b!105285 b_free!2525) (and b!105288 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))))) b_lambda!4799)))

(declare-fun b_lambda!4801 () Bool)

(assert (= b_lambda!4769 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4801)))

(declare-fun b_lambda!4803 () Bool)

(assert (= b_lambda!4755 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4803)))

(declare-fun b_lambda!4805 () Bool)

(assert (= b_lambda!4775 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4805)))

(declare-fun b_lambda!4807 () Bool)

(assert (= b_lambda!4777 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4807)))

(declare-fun b_lambda!4809 () Bool)

(assert (= b_lambda!4763 (or (and b!105285 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!361 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105288 b_free!2527) b_lambda!4809)))

(check-sat (not d!29427) (not d!29703) (not d!29129) (not b!106702) (not b!106238) (not d!29579) (not b!106701) (not b!107252) (not d!29113) (not b!106453) (not b!107054) (not b!107033) (not d!29743) (not b!107063) (not b!106699) (not b!106490) (not b_lambda!4743) (not b!106381) (not b!106275) (not b!106685) (not b!106612) (not b!106484) (not d!29545) (not d!29623) (not bm!11258) (not d!29777) (not d!29357) (not b!106736) (not d!29635) (not b!107171) (not b!106845) (not b_lambda!4805) (not bm!11304) (not b!106137) (not b!106523) (not b!106842) (not d!29075) (not b!107124) (not b!106363) (not b_lambda!4787) (not b!106706) (not d!29115) (not b!106986) (not mapNonEmpty!3943) (not b!106492) (not b!107243) (not b!107209) (not b!106184) (not b!106349) (not b!107210) (not d!29057) (not d!29531) (not d!29499) (not d!29443) (not b_lambda!4801) (not b!106693) (not b!107170) (not d!29655) (not b!107197) (not d!29557) (not b!107154) (not d!29431) (not b!106874) (not b!107221) (not b!106707) (not b!107140) (not b!106625) (not b!106877) (not b!106948) (not d!29191) (not b_lambda!4719) (not b!106722) (not d!29175) (not d!29741) (not d!29657) (not d!29201) (not d!29565) (not b!106403) (not bm!11347) (not b!106882) (not b!107112) (not b!106690) (not d!29387) (not bm!11321) (not b!106747) (not d!29039) (not b!106140) (not d!29143) (not bm!11235) (not d!29339) (not b!106660) (not b!106553) (not b!106399) (not b_lambda!4749) (not bm!11275) (not bm!11232) (not b!107188) (not d!29661) (not bm!11252) (not d!29409) (not b!106504) (not b!107205) (not d!29035) (not bm!11248) (not b!106821) (not d!29271) (not d!29645) (not b!106940) (not b!106622) (not d!29159) (not b!107179) (not d!29607) (not b!106281) (not b!106895) (not b!106645) (not d!29287) (not b!107047) (not b!106618) (not b!106267) (not b!106764) (not b!106855) (not d!29193) (not b!106974) (not bm!11254) (not b!106789) (not b!106440) (not b!106562) (not d!29259) (not d!29459) (not d!29519) (not d!29397) (not b!106192) (not b!106780) (not b!107060) (not b!107176) (not d!29091) (not b_lambda!4809) (not b!106230) (not b!106366) (not b!106145) (not b!107117) (not bm!11286) (not b!106868) (not d!29211) (not b!106958) (not b!107148) (not b!106654) (not b!107157) (not b!107106) (not d!29433) (not b!107105) (not b!106456) (not b!106968) (not b!107058) (not b!106221) (not b!106356) (not d!29605) (not b!106835) (not b!106302) (not b!107093) (not bm!11327) (not bm!11329) (not b!107164) (not b!106972) (not b!106848) (not b!107082) (not b!106714) (not d!29199) (not b!106692) (not b!107074) (not b!107253) (not d!29349) (not d!29241) (not b!106545) (not b!106627) (not d!29535) (not b!107036) (not b!106488) (not b!107103) (not d!29261) (not b!106901) (not b!106355) (not d!29481) (not b!106658) (not b!106788) (not b!106201) (not d!29353) (not b_lambda!4783) (not b!107077) (not b!106832) (not b!107191) (not b!106264) (not b!106679) (not b!106384) (not b!106797) (not b!106689) (not d!29321) (not b!106936) (not b!106938) (not b!106329) (not d!29079) (not d!29693) (not b!106995) (not b!106481) (not bm!11227) (not b!106435) (not bm!11344) (not b!106667) (not b!106417) (not b_lambda!4789) (not b!107156) (not d!29791) (not bm!11249) (not d!29613) (not d!29377) (not b!106469) (not d!29311) (not b!106386) (not b!106135) (not bm!11270) (not d!29735) (not b!106229) (not b!106761) (not b!107147) (not bm!11280) (not b!106674) (not b!106555) (not b!106245) (not bm!11268) (not d!29651) (not b!107134) (not bm!11240) (not d!29477) (not b!106599) (not b!106261) (not bm!11285) (not d!29469) (not d!29059) (not b_lambda!4807) (not bm!11318) (not d!29483) (not b!107145) (not d!29393) (not d!29625) (not d!29595) (not b!106688) (not d!29673) (not b!107203) (not d!29441) (not b!106194) (not b!106870) (not b!107239) (not b!106856) (not d!29127) (not d!29423) (not bm!11290) (not d!29139) (not b!106663) (not d!29337) (not b!106677) (not b!106160) (not d!29253) (not b!106750) (not d!29361) (not b!106837) (not b!107250) (not d!29237) (not b!106269) (not b!106709) (not d!29161) (not b!106461) (not b!107245) (not b!106929) (not b!106633) (not b!106344) (not b!107247) (not bm!11335) (not d!29463) (not bm!11241) (not d!29721) (not bm!11277) (not b!106343) (not b!106834) (not d!29551) (not d!29561) (not b_next!2525) (not b!107050) (not b!106838) (not b!106942) (not b!106445) (not b!106613) (not b!106514) (not d!29677) (not d!29245) (not d!29711) (not b!106557) (not d!29315) (not b!106650) (not b!106495) (not d!29549) (not b!106636) (not b!107280) (not b!106458) (not b!106852) (not d!29537) (not b!106955) (not b!106824) (not d!29495) (not b_lambda!4793) (not b!106920) (not d!29413) (not d!29713) (not b!107201) (not d!29089) (not d!29055) (not b!106947) (not d!29455) (not b!107072) (not b!106242) (not d!29745) (not b_lambda!4773) (not d!29285) (not d!29087) (not d!29633) (not b!107173) (not b!106967) (not b!106284) (not b!106191) (not bm!11239) (not b!107266) (not d!29363) (not b!106637) (not b!106903) (not b!106847) (not b!106917) (not d!29041) (not b!106522) (not b!106460) (not b!107065) (not b!106979) (not b!106669) (not b_lambda!4745) (not b!107244) (not b!107215) (not b!107195) (not d!29569) (not b!106737) (not b!106411) (not d!29647) (not d!29071) (not b!107233) (not b!106142) (not d!29577) (not b!106836) (not d!29065) (not b!107034) (not b!106993) (not b!106472) (not b!106739) (not b!106179) (not d!29439) (not bm!11237) (not b!107193) (not b!106581) (not b!106497) (not d!29525) (not b!106197) (not b!106402) (not d!29319) (not b!106961) (not b!107026) (not d!29149) (not b!107231) (not b!106915) (not bm!11266) (not b!106157) (not b!106798) (not b!106168) (not bm!11302) (not bm!11255) (not b!106219) (not b!107138) (not b!106180) (not b!106295) (not d!29553) (not d!29355) (not bm!11296) (not d!29365) (not d!29771) (not b!107229) (not b_lambda!4729) (not b!106665) (not d!29567) (not d!29675) (not b!106605) (not b!107125) (not d!29653) (not b!107028) (not d!29487) (not b!106165) (not bm!11338) (not d!29367) (not b!106554) (not d!29165) (not b!106170) (not b!106963) (not b!106841) (not b!106162) (not b!106957) (not b!106804) (not d!29289) (not b!107080) (not d!29343) (not b!106620) (not b!107276) (not b!106547) (not b!106569) (not bm!11264) (not b!106898) (not b!107259) (not b!106480) (not d!29275) (not b!106828) (not d!29067) (not b!106857) (not b!106234) (not b!106282) (not d!29069) (not b!107236) (not bm!11295) (not d!29301) (not b!107098) (not d!29445) (not b!106830) (not d!29227) (not bm!11256) (not b!106465) (not b!106171) (not b_lambda!4727) (not b!106659) (not bm!11310) (not b!106147) (not b!106290) (not d!29043) (not b!106800) (not d!29597) (not bm!11283) (not b!106188) (not b_lambda!4799) (not b!106276) (not b!106664) (not b!107269) (not b!106683) (not b!106862) (not bm!11284) (not b!106268) (not d!29171) (not b!107087) (not bm!11247) (not b!106889) (not b!106728) (not b!106776) (not b!106583) (not b!106584) (not d!29347) (not b!107224) (not b!106923) (not b!107283) (not b!106352) (not b!106540) (not d!29185) (not b!106427) (not b!107213) (not b!106148) (not bm!11297) (not b!106616) (not d!29281) (not b!106629) (not bm!11328) (not b!106177) (not b!106953) (not d!29179) (not b!106609) (not d!29731) (not d!29639) (not b!106615) (not d!29051) b_and!6609 (not b!107278) (not b!106463) (not b!106850) (not b!106891) (not d!29749) (not b!106858) (not b!106772) (not d!29609) (not d!29475) (not b!106602) (not b!107270) (not b!106253) (not b!106338) (not d!29217) (not b!106875) (not d!29729) (not b!106696) (not b!106279) (not bm!11263) (not b!107090) (not b!106199) (not b!106564) (not b!106896) (not b!106913) (not b!106341) (not d!29389) (not b!106648) (not bm!11261) (not b!106718) (not b!106507) (not d!29373) (not b!106247) (not b!106593) (not b!106235) (not bm!11332) (not bm!11224) (not d!29209) (not bm!11245) (not b!107115) (not b!107227) (not b!107000) (not b!107185) (not bm!11242) (not b!106163) (not b!106725) (not b!106796) (not b!106419) (not b!106808) (not b!107119) (not b!106572) (not b!107167) (not d!29783) (not d!29687) (not b!106389) (not b!106139) (not b!106860) (not b!106960) (not d!29279) (not d!29421) (not b!106498) (not d!29415) (not b!106932) (not b!106691) (not d!29101) (not b!106644) (not b!106770) (not b!107190) (not d!29509) (not bm!11306) (not bm!11330) (not b!106299) (not b!106196) (not d!29489) (not bm!11222) (not b!106339) (not d!29467) (not b!106154) (not b!106981) (not d!29523) (not d!29691) (not d!29371) (not b!106872) (not b!106217) (not b!106734) (not d!29335) (not b!106624) (not bm!11319) (not d!29331) (not b!107273) (not d!29251) (not b!107114) (not b!106662) (not d!29485) (not b!106922) (not b!106697) (not b!106596) (not b!106292) (not b!106703) (not d!29333) (not d!29491) (not b!107071) (not bm!11234) (not d!29517) (not bm!11272) (not b!106694) (not b!106793) (not d!29737) (not b!106393) (not b!107161) (not b!106743) (not d!29375) (not d!29789) (not b!106758) (not b!106673) (not b!106811) (not b!106391) (not b!107131) (not bm!11257) (not b!106543) (not d!29761) (not b!107035) (not b!106623) (not b!106698) (not b!107045) (not bm!11313) (not d!29207) (not d!29471) (not d!29187) (not d!29581) (not b!106943) (not b!106787) (not b!106294) (not d!29395) (not d!29543) (not d!29627) (not b_lambda!4785) (not d!29213) (not b!107084) (not b!106231) (not d!29167) (not b!106779) (not b!106840) (not b!106334) (not b!107207) (not d!29461) (not b!106369) (not b!106818) b_and!6607 (not b!106657) (not b_lambda!4791) (not b_lambda!4731) (not b!106708) (not d!29769) (not b!107212) (not d!29157) (not b!106720) (not b!106372) (not b!106297) (not d!29405) (not d!29391) (not b!106931) (not d!29177) (not d!29573) (not b!106520) (not b!106255) (not b!107262) (not b!107178) (not b!106820) (not b!106680) (not d!29611) (not d!29345) (not b!106751) (not bm!11303) (not b!106410) (not b!106880) (not b!107056) (not b!106910) (not d!29473) (not b!106805) (not b!107096) (not b!106205) (not d!29715) (not d!29383) (not b!106768) (not b!106336) (not b!106652) (not b!106304) (not b!106576) (not b!107142) (not b!107223) (not b_next!2527) (not b!106156) (not b!106795) (not d!29307) (not b!106415) (not b!106846) (not b!106912) (not b!107086) (not b!106208) (not b!107100) (not b!106270) (not b!106996) (not b_lambda!4751) (not d!29359) (not b!107029) (not b!106790) (not d!29411) (not b_lambda!4747) (not d!29615) (not d!29121) (not bm!11288) (not b!106273) (not d!29231) (not b!106438) (not b!107122) (not b!106414) (not b!106826) (not d!29591) (not d!29775) (not b!106678) (not b!106578) (not b!106434) (not b!106984) (not b!106365) (not bm!11316) (not d!29681) (not b!106970) (not b!106892) (not d!29351) (not b!106904) (not b!106333) (not d!29697) (not bm!11300) (not d!29107) (not bm!11229) (not d!29099) (not mapNonEmpty!3944) (not b!106883) (not d!29203) (not d!29341) (not d!29267) (not d!29327) (not d!29369) (not b!106672) (not b!107163) (not b!106566) (not b!106506) (not b!106390) (not d!29085) (not bm!11293) (not b!107133) (not b!107199) (not b!106426) (not d!29539) (not d!29619) (not b!107030) (not b!107075) (not bm!11341) (not b!106951) (not bm!11282) (not d!29453) (not d!29527) (not b!106209) (not b!106987) (not b!106395) (not b!106741) (not b!106590) (not d!29197) (not d!29669) (not d!29465) (not b!106727) (not b!107241) (not d!29707) (not d!29117) (not d!29309) (not b!106263) (not b_lambda!4803) (not b!107187) (not d!29571) (not b!106575) (not d!29479) (not d!29429) (not b_lambda!4795) (not b!107261) (not b!106360) (not b!106767) (not b!106512) tp_is_empty!2679 (not b!106223) (not b!106232) (not d!29317) (not b!106287) (not b!107208) (not b!106573) (not bm!11308) (not b!106218) (not b!107194) (not b!106473) (not b!106760) (not b!107042) (not b!107067) (not d!29417) (not b!106216) (not b!106300) (not d!29147) (not d!29243) (not b_lambda!4797) (not d!29381) (not bm!11273) (not b!106592) (not b!106382) (not b!106436) (not b!106412) (not b!106387) (not b!106977) (not b!106759) (not b!107211) (not b!106865) (not b!106802) (not b!106965) (not d!29643) (not d!29379) (not b!106655) (not d!29547) (not b!106670) (not b!106450) (not d!29683) (not d!29493) (not b!106560) (not d!29313) (not d!29503) (not d!29601) (not b!106935) (not d!29385) (not b!106423) (not b!106347))
(check-sat b_and!6607 b_and!6609 (not b_next!2525) (not b_next!2527))
