; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!71732 () Bool)

(assert start!71732)

(declare-fun res!567058 () Bool)

(declare-fun e!465306 () Bool)

(assert (=> start!71732 (=> (not res!567058) (not e!465306))))

(declare-fun oldMask!5 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!71732 (= res!567058 (validMask!0 oldMask!5))))

(assert (=> start!71732 e!465306))

(assert (=> start!71732 true))

(declare-fun b!834007 () Bool)

(declare-fun res!567059 () Bool)

(assert (=> b!834007 (=> (not res!567059) (not e!465306))))

(declare-fun m!52 () (_ BitVec 32))

(declare-fun _vacant!10 () (_ BitVec 32))

(declare-fun _size!10 () (_ BitVec 32))

(assert (=> b!834007 (= res!567059 (and (bvsge _size!10 #b00000000000000000000000000000000) (bvsle _size!10 (bvadd #b00000000000000000000000000000001 oldMask!5)) (bvsge _vacant!10 #b00000000000000000000000000000000) (bvsgt m!52 #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 _size!10) m!52) (bvsge (bvadd #b00000000000000000000000000000001 (bvand (bvashr m!52 #b00000000000000000000000000000001) #b00111111111111111111111111111111)) _size!10) (bvsgt (bvlshr m!52 #b00000000000000000000000000000001) #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 _size!10) (bvlshr m!52 #b00000000000000000000000000000001)) (bvsge (bvadd #b00000000000000000000000000000001 (bvand (bvashr (bvlshr m!52 #b00000000000000000000000000000001) #b00000000000000000000000000000001) #b00111111111111111111111111111111)) _size!10)))))

(declare-fun b!834008 () Bool)

(declare-datatypes ((Unit!28636 0))(
  ( (Unit!28637) )
))
(declare-datatypes ((tuple2!10194 0))(
  ( (tuple2!10195 (_1!5108 Unit!28636) (_2!5108 (_ BitVec 32))) )
))
(declare-fun lt!378742 () tuple2!10194)

(assert (=> b!834008 (= e!465306 (and (bvsgt (_2!5108 lt!378742) #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 _size!10) (_2!5108 lt!378742)) (bvsge (bvadd #b00000000000000000000000000000001 (bvand (bvashr (_2!5108 lt!378742) #b00000000000000000000000000000001) #b00111111111111111111111111111111)) _size!10)))))

(declare-fun computeNewMaskWhile!22 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) tuple2!10194)

(assert (=> b!834008 (= lt!378742 (computeNewMaskWhile!22 _size!10 _vacant!10 oldMask!5 (bvlshr m!52 #b00000000000000000000000000000001)))))

(assert (= (and start!71732 res!567058) b!834007))

(assert (= (and b!834007 res!567059) b!834008))

(declare-fun m!778950 () Bool)

(assert (=> start!71732 m!778950))

(declare-fun m!778952 () Bool)

(assert (=> b!834008 m!778952))

(push 1)

(assert (not start!71732))

(assert (not b!834008))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!107457 () Bool)

(assert (=> d!107457 (= (validMask!0 oldMask!5) (and (or (= oldMask!5 #b00000000000000000000000000000111) (= oldMask!5 #b00000000000000000000000000001111) (= oldMask!5 #b00000000000000000000000000011111) (= oldMask!5 #b00000000000000000000000000111111) (= oldMask!5 #b00000000000000000000000001111111) (= oldMask!5 #b00000000000000000000000011111111) (= oldMask!5 #b00000000000000000000000111111111) (= oldMask!5 #b00000000000000000000001111111111) (= oldMask!5 #b00000000000000000000011111111111) (= oldMask!5 #b00000000000000000000111111111111) (= oldMask!5 #b00000000000000000001111111111111) (= oldMask!5 #b00000000000000000011111111111111) (= oldMask!5 #b00000000000000000111111111111111) (= oldMask!5 #b00000000000000001111111111111111) (= oldMask!5 #b00000000000000011111111111111111) (= oldMask!5 #b00000000000000111111111111111111) (= oldMask!5 #b00000000000001111111111111111111) (= oldMask!5 #b00000000000011111111111111111111) (= oldMask!5 #b00000000000111111111111111111111) (= oldMask!5 #b00000000001111111111111111111111) (= oldMask!5 #b00000000011111111111111111111111) (= oldMask!5 #b00000000111111111111111111111111) (= oldMask!5 #b00000001111111111111111111111111) (= oldMask!5 #b00000011111111111111111111111111) (= oldMask!5 #b00000111111111111111111111111111) (= oldMask!5 #b00001111111111111111111111111111) (= oldMask!5 #b00011111111111111111111111111111) (= oldMask!5 #b00111111111111111111111111111111)) (bvsle oldMask!5 #b00111111111111111111111111111111)))))

(assert (=> start!71732 d!107457))

(declare-fun d!107459 () Bool)

(declare-fun lt!378759 () tuple2!10194)

(assert (=> d!107459 (or (bvsle (_2!5108 lt!378759) #b00000000000000000000000000001000) (bvsge (bvmul #b00000000000000000000000000001000 _size!10) (_2!5108 lt!378759)) (bvslt (bvadd (bvand (bvashr (_2!5108 lt!378759) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) _size!10))))

(declare-fun e!465315 () tuple2!10194)

(assert (=> d!107459 (= lt!378759 e!465315)))

(declare-fun c!90878 () Bool)

(declare-fun lt!378760 () (_ BitVec 32))

(assert (=> d!107459 (= c!90878 (and (bvsgt lt!378760 #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 _size!10) lt!378760) (bvsge (bvadd (bvand (bvashr lt!378760 #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) _size!10)))))

(assert (=> d!107459 (= lt!378760 (bvlshr (bvlshr m!52 #b00000000000000000000000000000001) #b00000000000000000000000000000001))))

(assert (=> d!107459 (and (bvsgt (bvlshr m!52 #b00000000000000000000000000000001) #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 _size!10) (bvlshr m!52 #b00000000000000000000000000000001)) (bvsge (bvadd (bvand (bvashr (bvlshr m!52 #b00000000000000000000000000000001) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) _size!10))))

(assert (=> d!107459 (= (computeNewMaskWhile!22 _size!10 _vacant!10 oldMask!5 (bvlshr m!52 #b00000000000000000000000000000001)) lt!378759)))

(declare-fun b!834025 () Bool)

(assert (=> b!834025 (= e!465315 (computeNewMaskWhile!22 _size!10 _vacant!10 oldMask!5 lt!378760))))

(declare-fun b!834026 () Bool)

(declare-fun Unit!28640 () Unit!28636)

(assert (=> b!834026 (= e!465315 (tuple2!10195 Unit!28640 lt!378760))))

(assert (= (and d!107459 c!90878) b!834025))

(assert (= (and d!107459 (not c!90878)) b!834026))

(declare-fun m!778961 () Bool)

(assert (=> b!834025 m!778961))

(assert (=> b!834008 d!107459))

(push 1)

(assert (not b!834025))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

