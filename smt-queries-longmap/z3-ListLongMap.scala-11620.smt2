; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!135538 () Bool)

(assert start!135538)

(declare-fun res!1075624 () Bool)

(declare-fun e!877879 () Bool)

(assert (=> start!135538 (=> (not res!1075624) (not e!877879))))

(declare-fun mask!898 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!135538 (= res!1075624 (validMask!0 mask!898))))

(assert (=> start!135538 e!877879))

(assert (=> start!135538 true))

(declare-datatypes ((array!105194 0))(
  ( (array!105195 (arr!50744 (Array (_ BitVec 32) (_ BitVec 64))) (size!51296 (_ BitVec 32))) )
))
(declare-fun _keys!605 () array!105194)

(declare-fun array_inv!39680 (array!105194) Bool)

(assert (=> start!135538 (array_inv!39680 _keys!605)))

(declare-fun b!1574148 () Bool)

(declare-fun res!1075626 () Bool)

(assert (=> b!1574148 (=> (not res!1075626) (not e!877879))))

(assert (=> b!1574148 (= res!1075626 (and (bvsge mask!898 #b00000000000000000000000000000000) (= (size!51296 _keys!605) (bvadd #b00000000000000000000000000000001 mask!898))))))

(declare-fun b!1574149 () Bool)

(declare-fun res!1075625 () Bool)

(assert (=> b!1574149 (=> (not res!1075625) (not e!877879))))

(declare-fun k0!761 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1574149 (= res!1075625 (validKeyInArray!0 k0!761))))

(declare-fun b!1574150 () Bool)

(declare-fun lt!674520 () (_ BitVec 32))

(assert (=> b!1574150 (= e!877879 (or (bvslt lt!674520 #b00000000000000000000000000000000) (bvsge lt!674520 (bvadd #b00000000000000000000000000000001 mask!898))))))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1574150 (= lt!674520 (toIndex!0 k0!761 mask!898))))

(assert (= (and start!135538 res!1075624) b!1574148))

(assert (= (and b!1574148 res!1075626) b!1574149))

(assert (= (and b!1574149 res!1075625) b!1574150))

(declare-fun m!1446801 () Bool)

(assert (=> start!135538 m!1446801))

(declare-fun m!1446803 () Bool)

(assert (=> start!135538 m!1446803))

(declare-fun m!1446805 () Bool)

(assert (=> b!1574149 m!1446805))

(declare-fun m!1446807 () Bool)

(assert (=> b!1574150 m!1446807))

(check-sat (not b!1574149) (not b!1574150) (not start!135538))
(check-sat)
(get-model)

(declare-fun d!164975 () Bool)

(assert (=> d!164975 (= (validKeyInArray!0 k0!761) (and (not (= k0!761 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k0!761 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1574149 d!164975))

(declare-fun d!164977 () Bool)

(declare-fun lt!674532 () (_ BitVec 32))

(declare-fun lt!674531 () (_ BitVec 32))

(assert (=> d!164977 (= lt!674532 (bvmul (bvxor lt!674531 (bvlshr lt!674531 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!164977 (= lt!674531 ((_ extract 31 0) (bvand (bvxor k0!761 (bvlshr k0!761 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!164977 (and (bvsge mask!898 #b00000000000000000000000000000000) (let ((res!1075645 (let ((h!38291 ((_ extract 31 0) (bvand (bvxor k0!761 (bvlshr k0!761 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141931 (bvmul (bvxor h!38291 (bvlshr h!38291 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141931 (bvlshr x!141931 #b00000000000000000000000000001101)) mask!898))))) (and (bvslt res!1075645 (bvadd mask!898 #b00000000000000000000000000000001)) (bvsge res!1075645 #b00000000000000000000000000000000))))))

(assert (=> d!164977 (= (toIndex!0 k0!761 mask!898) (bvand (bvxor lt!674532 (bvlshr lt!674532 #b00000000000000000000000000001101)) mask!898))))

(assert (=> b!1574150 d!164977))

(declare-fun d!164981 () Bool)

(assert (=> d!164981 (= (validMask!0 mask!898) (and (or (= mask!898 #b00000000000000000000000000000111) (= mask!898 #b00000000000000000000000000001111) (= mask!898 #b00000000000000000000000000011111) (= mask!898 #b00000000000000000000000000111111) (= mask!898 #b00000000000000000000000001111111) (= mask!898 #b00000000000000000000000011111111) (= mask!898 #b00000000000000000000000111111111) (= mask!898 #b00000000000000000000001111111111) (= mask!898 #b00000000000000000000011111111111) (= mask!898 #b00000000000000000000111111111111) (= mask!898 #b00000000000000000001111111111111) (= mask!898 #b00000000000000000011111111111111) (= mask!898 #b00000000000000000111111111111111) (= mask!898 #b00000000000000001111111111111111) (= mask!898 #b00000000000000011111111111111111) (= mask!898 #b00000000000000111111111111111111) (= mask!898 #b00000000000001111111111111111111) (= mask!898 #b00000000000011111111111111111111) (= mask!898 #b00000000000111111111111111111111) (= mask!898 #b00000000001111111111111111111111) (= mask!898 #b00000000011111111111111111111111) (= mask!898 #b00000000111111111111111111111111) (= mask!898 #b00000001111111111111111111111111) (= mask!898 #b00000011111111111111111111111111) (= mask!898 #b00000111111111111111111111111111) (= mask!898 #b00001111111111111111111111111111) (= mask!898 #b00011111111111111111111111111111) (= mask!898 #b00111111111111111111111111111111)) (bvsle mask!898 #b00111111111111111111111111111111)))))

(assert (=> start!135538 d!164981))

(declare-fun d!164991 () Bool)

(assert (=> d!164991 (= (array_inv!39680 _keys!605) (bvsge (size!51296 _keys!605) #b00000000000000000000000000000000))))

(assert (=> start!135538 d!164991))

(check-sat)
