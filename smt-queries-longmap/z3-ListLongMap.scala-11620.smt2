; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!135578 () Bool)

(assert start!135578)

(declare-fun res!1075762 () Bool)

(declare-fun e!878084 () Bool)

(assert (=> start!135578 (=> (not res!1075762) (not e!878084))))

(declare-fun mask!898 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!135578 (= res!1075762 (validMask!0 mask!898))))

(assert (=> start!135578 e!878084))

(assert (=> start!135578 true))

(declare-datatypes ((array!105266 0))(
  ( (array!105267 (arr!50780 (Array (_ BitVec 32) (_ BitVec 64))) (size!51330 (_ BitVec 32))) )
))
(declare-fun _keys!605 () array!105266)

(declare-fun array_inv!39507 (array!105266) Bool)

(assert (=> start!135578 (array_inv!39507 _keys!605)))

(declare-fun b!1574470 () Bool)

(declare-fun res!1075763 () Bool)

(assert (=> b!1574470 (=> (not res!1075763) (not e!878084))))

(assert (=> b!1574470 (= res!1075763 (and (bvsge mask!898 #b00000000000000000000000000000000) (= (size!51330 _keys!605) (bvadd #b00000000000000000000000000000001 mask!898))))))

(declare-fun b!1574471 () Bool)

(declare-fun res!1075764 () Bool)

(assert (=> b!1574471 (=> (not res!1075764) (not e!878084))))

(declare-fun k0!761 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1574471 (= res!1075764 (validKeyInArray!0 k0!761))))

(declare-fun b!1574472 () Bool)

(declare-fun lt!674809 () (_ BitVec 32))

(assert (=> b!1574472 (= e!878084 (or (bvslt lt!674809 #b00000000000000000000000000000000) (bvsge lt!674809 (bvadd #b00000000000000000000000000000001 mask!898))))))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1574472 (= lt!674809 (toIndex!0 k0!761 mask!898))))

(assert (= (and start!135578 res!1075762) b!1574470))

(assert (= (and b!1574470 res!1075763) b!1574471))

(assert (= (and b!1574471 res!1075764) b!1574472))

(declare-fun m!1447701 () Bool)

(assert (=> start!135578 m!1447701))

(declare-fun m!1447703 () Bool)

(assert (=> start!135578 m!1447703))

(declare-fun m!1447705 () Bool)

(assert (=> b!1574471 m!1447705))

(declare-fun m!1447707 () Bool)

(assert (=> b!1574472 m!1447707))

(check-sat (not b!1574471) (not b!1574472) (not start!135578))
(check-sat)
(get-model)

(declare-fun d!165217 () Bool)

(assert (=> d!165217 (= (validKeyInArray!0 k0!761) (and (not (= k0!761 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k0!761 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1574471 d!165217))

(declare-fun d!165219 () Bool)

(declare-fun lt!674818 () (_ BitVec 32))

(declare-fun lt!674817 () (_ BitVec 32))

(assert (=> d!165219 (= lt!674818 (bvmul (bvxor lt!674817 (bvlshr lt!674817 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!165219 (= lt!674817 ((_ extract 31 0) (bvand (bvxor k0!761 (bvlshr k0!761 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!165219 (and (bvsge mask!898 #b00000000000000000000000000000000) (let ((res!1075774 (let ((h!38249 ((_ extract 31 0) (bvand (bvxor k0!761 (bvlshr k0!761 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141936 (bvmul (bvxor h!38249 (bvlshr h!38249 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141936 (bvlshr x!141936 #b00000000000000000000000000001101)) mask!898))))) (and (bvslt res!1075774 (bvadd mask!898 #b00000000000000000000000000000001)) (bvsge res!1075774 #b00000000000000000000000000000000))))))

(assert (=> d!165219 (= (toIndex!0 k0!761 mask!898) (bvand (bvxor lt!674818 (bvlshr lt!674818 #b00000000000000000000000000001101)) mask!898))))

(assert (=> b!1574472 d!165219))

(declare-fun d!165223 () Bool)

(assert (=> d!165223 (= (validMask!0 mask!898) (and (or (= mask!898 #b00000000000000000000000000000111) (= mask!898 #b00000000000000000000000000001111) (= mask!898 #b00000000000000000000000000011111) (= mask!898 #b00000000000000000000000000111111) (= mask!898 #b00000000000000000000000001111111) (= mask!898 #b00000000000000000000000011111111) (= mask!898 #b00000000000000000000000111111111) (= mask!898 #b00000000000000000000001111111111) (= mask!898 #b00000000000000000000011111111111) (= mask!898 #b00000000000000000000111111111111) (= mask!898 #b00000000000000000001111111111111) (= mask!898 #b00000000000000000011111111111111) (= mask!898 #b00000000000000000111111111111111) (= mask!898 #b00000000000000001111111111111111) (= mask!898 #b00000000000000011111111111111111) (= mask!898 #b00000000000000111111111111111111) (= mask!898 #b00000000000001111111111111111111) (= mask!898 #b00000000000011111111111111111111) (= mask!898 #b00000000000111111111111111111111) (= mask!898 #b00000000001111111111111111111111) (= mask!898 #b00000000011111111111111111111111) (= mask!898 #b00000000111111111111111111111111) (= mask!898 #b00000001111111111111111111111111) (= mask!898 #b00000011111111111111111111111111) (= mask!898 #b00000111111111111111111111111111) (= mask!898 #b00001111111111111111111111111111) (= mask!898 #b00011111111111111111111111111111) (= mask!898 #b00111111111111111111111111111111)) (bvsle mask!898 #b00111111111111111111111111111111)))))

(assert (=> start!135578 d!165223))

(declare-fun d!165229 () Bool)

(assert (=> d!165229 (= (array_inv!39507 _keys!605) (bvsge (size!51330 _keys!605) #b00000000000000000000000000000000))))

(assert (=> start!135578 d!165229))

(check-sat)
