; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!136000 () Bool)

(assert start!136000)

(declare-fun res!1076615 () Bool)

(declare-fun e!879587 () Bool)

(assert (=> start!136000 (=> (not res!1076615) (not e!879587))))

(declare-fun mask!898 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!136000 (= res!1076615 (validMask!0 mask!898))))

(assert (=> start!136000 e!879587))

(assert (=> start!136000 true))

(declare-datatypes ((array!105389 0))(
  ( (array!105390 (arr!50833 (Array (_ BitVec 32) (_ BitVec 64))) (size!51384 (_ BitVec 32))) )
))
(declare-fun _keys!605 () array!105389)

(declare-fun array_inv!39788 (array!105389) Bool)

(assert (=> start!136000 (array_inv!39788 _keys!605)))

(declare-fun b!1576897 () Bool)

(declare-fun res!1076614 () Bool)

(assert (=> b!1576897 (=> (not res!1076614) (not e!879587))))

(assert (=> b!1576897 (= res!1076614 (and (bvsge mask!898 #b00000000000000000000000000000000) (= (size!51384 _keys!605) (bvadd #b00000000000000000000000000000001 mask!898))))))

(declare-fun b!1576898 () Bool)

(declare-fun res!1076613 () Bool)

(assert (=> b!1576898 (=> (not res!1076613) (not e!879587))))

(declare-fun k0!761 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1576898 (= res!1076613 (validKeyInArray!0 k0!761))))

(declare-fun b!1576899 () Bool)

(declare-fun lt!675714 () (_ BitVec 32))

(assert (=> b!1576899 (= e!879587 (or (bvslt lt!675714 #b00000000000000000000000000000000) (bvsge lt!675714 (bvadd #b00000000000000000000000000000001 mask!898))))))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1576899 (= lt!675714 (toIndex!0 k0!761 mask!898))))

(assert (= (and start!136000 res!1076615) b!1576897))

(assert (= (and b!1576897 res!1076614) b!1576898))

(assert (= (and b!1576898 res!1076613) b!1576899))

(declare-fun m!1449951 () Bool)

(assert (=> start!136000 m!1449951))

(declare-fun m!1449953 () Bool)

(assert (=> start!136000 m!1449953))

(declare-fun m!1449955 () Bool)

(assert (=> b!1576898 m!1449955))

(declare-fun m!1449957 () Bool)

(assert (=> b!1576899 m!1449957))

(check-sat (not b!1576898) (not start!136000) (not b!1576899))
(check-sat)
(get-model)

(declare-fun d!165931 () Bool)

(assert (=> d!165931 (= (validKeyInArray!0 k0!761) (and (not (= k0!761 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k0!761 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1576898 d!165931))

(declare-fun d!165933 () Bool)

(assert (=> d!165933 (= (validMask!0 mask!898) (and (or (= mask!898 #b00000000000000000000000000000111) (= mask!898 #b00000000000000000000000000001111) (= mask!898 #b00000000000000000000000000011111) (= mask!898 #b00000000000000000000000000111111) (= mask!898 #b00000000000000000000000001111111) (= mask!898 #b00000000000000000000000011111111) (= mask!898 #b00000000000000000000000111111111) (= mask!898 #b00000000000000000000001111111111) (= mask!898 #b00000000000000000000011111111111) (= mask!898 #b00000000000000000000111111111111) (= mask!898 #b00000000000000000001111111111111) (= mask!898 #b00000000000000000011111111111111) (= mask!898 #b00000000000000000111111111111111) (= mask!898 #b00000000000000001111111111111111) (= mask!898 #b00000000000000011111111111111111) (= mask!898 #b00000000000000111111111111111111) (= mask!898 #b00000000000001111111111111111111) (= mask!898 #b00000000000011111111111111111111) (= mask!898 #b00000000000111111111111111111111) (= mask!898 #b00000000001111111111111111111111) (= mask!898 #b00000000011111111111111111111111) (= mask!898 #b00000000111111111111111111111111) (= mask!898 #b00000001111111111111111111111111) (= mask!898 #b00000011111111111111111111111111) (= mask!898 #b00000111111111111111111111111111) (= mask!898 #b00001111111111111111111111111111) (= mask!898 #b00011111111111111111111111111111) (= mask!898 #b00111111111111111111111111111111)) (bvsle mask!898 #b00111111111111111111111111111111)))))

(assert (=> start!136000 d!165933))

(declare-fun d!165943 () Bool)

(assert (=> d!165943 (= (array_inv!39788 _keys!605) (bvsge (size!51384 _keys!605) #b00000000000000000000000000000000))))

(assert (=> start!136000 d!165943))

(declare-fun d!165945 () Bool)

(declare-fun lt!675732 () (_ BitVec 32))

(declare-fun lt!675731 () (_ BitVec 32))

(assert (=> d!165945 (= lt!675732 (bvmul (bvxor lt!675731 (bvlshr lt!675731 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!165945 (= lt!675731 ((_ extract 31 0) (bvand (bvxor k0!761 (bvlshr k0!761 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!165945 (and (bvsge mask!898 #b00000000000000000000000000000000) (let ((res!1076635 (let ((h!38300 ((_ extract 31 0) (bvand (bvxor k0!761 (bvlshr k0!761 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141936 (bvmul (bvxor h!38300 (bvlshr h!38300 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141936 (bvlshr x!141936 #b00000000000000000000000000001101)) mask!898))))) (and (bvslt res!1076635 (bvadd mask!898 #b00000000000000000000000000000001)) (bvsge res!1076635 #b00000000000000000000000000000000))))))

(assert (=> d!165945 (= (toIndex!0 k0!761 mask!898) (bvand (bvxor lt!675732 (bvlshr lt!675732 #b00000000000000000000000000001101)) mask!898))))

(assert (=> b!1576899 d!165945))

(check-sat)
