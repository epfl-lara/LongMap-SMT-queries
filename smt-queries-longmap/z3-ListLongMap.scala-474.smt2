; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9426 () Bool)

(assert start!9426)

(declare-fun b!68389 () Bool)

(declare-fun b_free!2077 () Bool)

(declare-fun b_next!2077 () Bool)

(assert (=> b!68389 (= b_free!2077 (not b_next!2077))))

(declare-fun tp!8393 () Bool)

(declare-fun b_and!4213 () Bool)

(assert (=> b!68389 (= tp!8393 b_and!4213)))

(declare-fun b!68379 () Bool)

(declare-fun b_free!2079 () Bool)

(declare-fun b_next!2079 () Bool)

(assert (=> b!68379 (= b_free!2079 (not b_next!2079))))

(declare-fun tp!8394 () Bool)

(declare-fun b_and!4215 () Bool)

(assert (=> b!68379 (= tp!8394 b_and!4215)))

(declare-fun tp_is_empty!2455 () Bool)

(declare-fun e!44800 () Bool)

(declare-fun e!44796 () Bool)

(declare-datatypes ((V!2921 0))(
  ( (V!2922 (val!1272 Int)) )
))
(declare-datatypes ((array!3837 0))(
  ( (array!3838 (arr!1832 (Array (_ BitVec 32) (_ BitVec 64))) (size!2068 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!884 0))(
  ( (ValueCellFull!884 (v!2493 V!2921)) (EmptyCell!884) )
))
(declare-datatypes ((array!3839 0))(
  ( (array!3840 (arr!1833 (Array (_ BitVec 32) ValueCell!884)) (size!2069 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!676 0))(
  ( (LongMapFixedSize!677 (defaultEntry!2167 Int) (mask!6112 (_ BitVec 32)) (extraKeys!2034 (_ BitVec 32)) (zeroValue!2073 V!2921) (minValue!2073 V!2921) (_size!387 (_ BitVec 32)) (_keys!3811 array!3837) (_values!2150 array!3839) (_vacant!387 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!676)

(declare-fun array_inv!1127 (array!3837) Bool)

(declare-fun array_inv!1128 (array!3839) Bool)

(assert (=> b!68379 (= e!44800 (and tp!8394 tp_is_empty!2455 (array_inv!1127 (_keys!3811 newMap!16)) (array_inv!1128 (_values!2150 newMap!16)) e!44796))))

(declare-fun b!68380 () Bool)

(declare-fun e!44805 () Bool)

(declare-fun e!44795 () Bool)

(assert (=> b!68380 (= e!44805 e!44795)))

(declare-fun res!36810 () Bool)

(assert (=> b!68380 (=> (not res!36810) (not e!44795))))

(declare-datatypes ((tuple2!2092 0))(
  ( (tuple2!2093 (_1!1057 (_ BitVec 64)) (_2!1057 V!2921)) )
))
(declare-datatypes ((List!1459 0))(
  ( (Nil!1456) (Cons!1455 (h!2040 tuple2!2092) (t!4954 List!1459)) )
))
(declare-datatypes ((ListLongMap!1385 0))(
  ( (ListLongMap!1386 (toList!708 List!1459)) )
))
(declare-fun lt!29847 () ListLongMap!1385)

(declare-fun lt!29848 () ListLongMap!1385)

(assert (=> b!68380 (= res!36810 (= lt!29847 lt!29848))))

(declare-fun map!1146 (LongMapFixedSize!676) ListLongMap!1385)

(assert (=> b!68380 (= lt!29848 (map!1146 newMap!16))))

(declare-datatypes ((Cell!484 0))(
  ( (Cell!485 (v!2494 LongMapFixedSize!676)) )
))
(declare-datatypes ((LongMap!484 0))(
  ( (LongMap!485 (underlying!253 Cell!484)) )
))
(declare-fun thiss!992 () LongMap!484)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun getCurrentListMap!406 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) Int) ListLongMap!1385)

(assert (=> b!68380 (= lt!29847 (getCurrentListMap!406 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68381 () Bool)

(declare-fun e!44803 () Bool)

(declare-fun e!44802 () Bool)

(assert (=> b!68381 (= e!44803 e!44802)))

(declare-fun b!68382 () Bool)

(declare-fun e!44808 () Bool)

(declare-fun mapRes!3096 () Bool)

(assert (=> b!68382 (= e!44796 (and e!44808 mapRes!3096))))

(declare-fun condMapEmpty!3096 () Bool)

(declare-fun mapDefault!3096 () ValueCell!884)

(assert (=> b!68382 (= condMapEmpty!3096 (= (arr!1833 (_values!2150 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3096)))))

(declare-fun mapNonEmpty!3095 () Bool)

(declare-fun mapRes!3095 () Bool)

(declare-fun tp!8391 () Bool)

(declare-fun e!44806 () Bool)

(assert (=> mapNonEmpty!3095 (= mapRes!3095 (and tp!8391 e!44806))))

(declare-fun mapValue!3096 () ValueCell!884)

(declare-fun mapRest!3095 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapKey!3095 () (_ BitVec 32))

(assert (=> mapNonEmpty!3095 (= (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (store mapRest!3095 mapKey!3095 mapValue!3096))))

(declare-fun mapIsEmpty!3095 () Bool)

(assert (=> mapIsEmpty!3095 mapRes!3096))

(declare-fun res!36808 () Bool)

(assert (=> start!9426 (=> (not res!36808) (not e!44805))))

(declare-fun valid!291 (LongMap!484) Bool)

(assert (=> start!9426 (= res!36808 (valid!291 thiss!992))))

(assert (=> start!9426 e!44805))

(assert (=> start!9426 e!44803))

(assert (=> start!9426 true))

(assert (=> start!9426 e!44800))

(declare-fun b!68383 () Bool)

(declare-fun e!44792 () Bool)

(assert (=> b!68383 (= e!44792 (or (not (= (size!2069 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6112 (v!2494 (underlying!253 thiss!992)))))) (= (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (size!2069 (_values!2150 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!68384 () Bool)

(assert (=> b!68384 (= e!44808 tp_is_empty!2455)))

(declare-fun b!68385 () Bool)

(declare-fun res!36805 () Bool)

(assert (=> b!68385 (=> (not res!36805) (not e!44805))))

(assert (=> b!68385 (= res!36805 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6112 newMap!16)) (_size!387 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68386 () Bool)

(declare-datatypes ((Unit!1909 0))(
  ( (Unit!1910) )
))
(declare-fun e!44804 () Unit!1909)

(declare-fun Unit!1911 () Unit!1909)

(assert (=> b!68386 (= e!44804 Unit!1911)))

(declare-fun lt!29842 () Unit!1909)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!38 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) (_ BitVec 32) Int) Unit!1909)

(assert (=> b!68386 (= lt!29842 (lemmaListMapContainsThenArrayContainsFrom!38 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3837 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!68386 (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!29843 () Unit!1909)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3837 (_ BitVec 32) (_ BitVec 32)) Unit!1909)

(assert (=> b!68386 (= lt!29843 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1460 0))(
  ( (Nil!1457) (Cons!1456 (h!2041 (_ BitVec 64)) (t!4955 List!1460)) )
))
(declare-fun arrayNoDuplicates!0 (array!3837 (_ BitVec 32) List!1460) Bool)

(assert (=> b!68386 (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) from!355 Nil!1457)))

(declare-fun lt!29841 () Unit!1909)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3837 (_ BitVec 32) (_ BitVec 64) List!1460) Unit!1909)

(assert (=> b!68386 (= lt!29841 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457)))))

(assert (=> b!68386 false))

(declare-fun b!68387 () Bool)

(declare-fun e!44807 () Bool)

(assert (=> b!68387 (= e!44802 e!44807)))

(declare-fun b!68388 () Bool)

(declare-fun Unit!1912 () Unit!1909)

(assert (=> b!68388 (= e!44804 Unit!1912)))

(declare-fun e!44794 () Bool)

(assert (=> b!68389 (= e!44807 (and tp!8393 tp_is_empty!2455 (array_inv!1127 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (array_inv!1128 (_values!2150 (v!2494 (underlying!253 thiss!992)))) e!44794))))

(declare-fun b!68390 () Bool)

(declare-fun res!36809 () Bool)

(assert (=> b!68390 (=> (not res!36809) (not e!44805))))

(assert (=> b!68390 (= res!36809 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!68391 () Bool)

(declare-fun e!44809 () Bool)

(assert (=> b!68391 (= e!44809 tp_is_empty!2455)))

(declare-fun b!68392 () Bool)

(declare-fun e!44797 () Bool)

(declare-fun e!44801 () Bool)

(assert (=> b!68392 (= e!44797 e!44801)))

(declare-fun res!36807 () Bool)

(assert (=> b!68392 (=> (not res!36807) (not e!44801))))

(declare-datatypes ((tuple2!2094 0))(
  ( (tuple2!2095 (_1!1058 Bool) (_2!1058 LongMapFixedSize!676)) )
))
(declare-fun lt!29852 () tuple2!2094)

(assert (=> b!68392 (= res!36807 (and (_1!1058 lt!29852) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!29851 () Unit!1909)

(assert (=> b!68392 (= lt!29851 e!44804)))

(declare-fun c!9672 () Bool)

(declare-fun contains!710 (ListLongMap!1385 (_ BitVec 64)) Bool)

(assert (=> b!68392 (= c!9672 (contains!710 lt!29848 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!29849 () V!2921)

(declare-fun update!104 (LongMapFixedSize!676 (_ BitVec 64) V!2921) tuple2!2094)

(assert (=> b!68392 (= lt!29852 (update!104 newMap!16 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))

(declare-fun b!68393 () Bool)

(declare-fun res!36811 () Bool)

(assert (=> b!68393 (=> (not res!36811) (not e!44805))))

(declare-fun valid!292 (LongMapFixedSize!676) Bool)

(assert (=> b!68393 (= res!36811 (valid!292 newMap!16))))

(declare-fun mapIsEmpty!3096 () Bool)

(assert (=> mapIsEmpty!3096 mapRes!3095))

(declare-fun b!68394 () Bool)

(assert (=> b!68394 (= e!44794 (and e!44809 mapRes!3095))))

(declare-fun condMapEmpty!3095 () Bool)

(declare-fun mapDefault!3095 () ValueCell!884)

(assert (=> b!68394 (= condMapEmpty!3095 (= (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3095)))))

(declare-fun mapNonEmpty!3096 () Bool)

(declare-fun tp!8392 () Bool)

(declare-fun e!44793 () Bool)

(assert (=> mapNonEmpty!3096 (= mapRes!3096 (and tp!8392 e!44793))))

(declare-fun mapRest!3096 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapValue!3095 () ValueCell!884)

(declare-fun mapKey!3096 () (_ BitVec 32))

(assert (=> mapNonEmpty!3096 (= (arr!1833 (_values!2150 newMap!16)) (store mapRest!3096 mapKey!3096 mapValue!3095))))

(declare-fun b!68395 () Bool)

(assert (=> b!68395 (= e!44795 e!44797)))

(declare-fun res!36812 () Bool)

(assert (=> b!68395 (=> (not res!36812) (not e!44797))))

(assert (=> b!68395 (= res!36812 (and (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1130 (ValueCell!884 V!2921) V!2921)

(declare-fun dynLambda!322 (Int (_ BitVec 64)) V!2921)

(assert (=> b!68395 (= lt!29849 (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68396 () Bool)

(assert (=> b!68396 (= e!44806 tp_is_empty!2455)))

(declare-fun b!68397 () Bool)

(assert (=> b!68397 (= e!44793 tp_is_empty!2455)))

(declare-fun b!68398 () Bool)

(assert (=> b!68398 (= e!44801 (not e!44792))))

(declare-fun res!36806 () Bool)

(assert (=> b!68398 (=> res!36806 e!44792)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!68398 (= res!36806 (not (validMask!0 (mask!6112 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun lt!29844 () ListLongMap!1385)

(declare-fun lt!29850 () tuple2!2092)

(declare-fun lt!29846 () tuple2!2092)

(declare-fun +!88 (ListLongMap!1385 tuple2!2092) ListLongMap!1385)

(assert (=> b!68398 (= (+!88 (+!88 lt!29844 lt!29850) lt!29846) (+!88 (+!88 lt!29844 lt!29846) lt!29850))))

(assert (=> b!68398 (= lt!29846 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))

(assert (=> b!68398 (= lt!29850 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))

(declare-fun lt!29845 () Unit!1909)

(declare-fun addCommutativeForDiffKeys!8 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64) V!2921) Unit!1909)

(assert (=> b!68398 (= lt!29845 (addCommutativeForDiffKeys!8 lt!29844 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!53 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) Int) ListLongMap!1385)

(assert (=> b!68398 (= lt!29844 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(assert (= (and start!9426 res!36808) b!68390))

(assert (= (and b!68390 res!36809) b!68393))

(assert (= (and b!68393 res!36811) b!68385))

(assert (= (and b!68385 res!36805) b!68380))

(assert (= (and b!68380 res!36810) b!68395))

(assert (= (and b!68395 res!36812) b!68392))

(assert (= (and b!68392 c!9672) b!68386))

(assert (= (and b!68392 (not c!9672)) b!68388))

(assert (= (and b!68392 res!36807) b!68398))

(assert (= (and b!68398 (not res!36806)) b!68383))

(assert (= (and b!68394 condMapEmpty!3095) mapIsEmpty!3096))

(assert (= (and b!68394 (not condMapEmpty!3095)) mapNonEmpty!3095))

(get-info :version)

(assert (= (and mapNonEmpty!3095 ((_ is ValueCellFull!884) mapValue!3096)) b!68396))

(assert (= (and b!68394 ((_ is ValueCellFull!884) mapDefault!3095)) b!68391))

(assert (= b!68389 b!68394))

(assert (= b!68387 b!68389))

(assert (= b!68381 b!68387))

(assert (= start!9426 b!68381))

(assert (= (and b!68382 condMapEmpty!3096) mapIsEmpty!3095))

(assert (= (and b!68382 (not condMapEmpty!3096)) mapNonEmpty!3096))

(assert (= (and mapNonEmpty!3096 ((_ is ValueCellFull!884) mapValue!3095)) b!68397))

(assert (= (and b!68382 ((_ is ValueCellFull!884) mapDefault!3096)) b!68384))

(assert (= b!68379 b!68382))

(assert (= start!9426 b!68379))

(declare-fun b_lambda!3077 () Bool)

(assert (=> (not b_lambda!3077) (not b!68395)))

(declare-fun t!4951 () Bool)

(declare-fun tb!1469 () Bool)

(assert (=> (and b!68389 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))) t!4951) tb!1469))

(declare-fun result!2595 () Bool)

(assert (=> tb!1469 (= result!2595 tp_is_empty!2455)))

(assert (=> b!68395 t!4951))

(declare-fun b_and!4217 () Bool)

(assert (= b_and!4213 (and (=> t!4951 result!2595) b_and!4217)))

(declare-fun t!4953 () Bool)

(declare-fun tb!1471 () Bool)

(assert (=> (and b!68379 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))) t!4953) tb!1471))

(declare-fun result!2599 () Bool)

(assert (= result!2599 result!2595))

(assert (=> b!68395 t!4953))

(declare-fun b_and!4219 () Bool)

(assert (= b_and!4215 (and (=> t!4953 result!2599) b_and!4219)))

(declare-fun m!64327 () Bool)

(assert (=> mapNonEmpty!3095 m!64327))

(declare-fun m!64329 () Bool)

(assert (=> b!68392 m!64329))

(assert (=> b!68392 m!64329))

(declare-fun m!64331 () Bool)

(assert (=> b!68392 m!64331))

(assert (=> b!68392 m!64329))

(declare-fun m!64333 () Bool)

(assert (=> b!68392 m!64333))

(declare-fun m!64335 () Bool)

(assert (=> start!9426 m!64335))

(declare-fun m!64337 () Bool)

(assert (=> b!68379 m!64337))

(declare-fun m!64339 () Bool)

(assert (=> b!68379 m!64339))

(declare-fun m!64341 () Bool)

(assert (=> b!68393 m!64341))

(declare-fun m!64343 () Bool)

(assert (=> mapNonEmpty!3096 m!64343))

(declare-fun m!64345 () Bool)

(assert (=> b!68380 m!64345))

(declare-fun m!64347 () Bool)

(assert (=> b!68380 m!64347))

(declare-fun m!64349 () Bool)

(assert (=> b!68398 m!64349))

(declare-fun m!64351 () Bool)

(assert (=> b!68398 m!64351))

(assert (=> b!68398 m!64329))

(declare-fun m!64353 () Bool)

(assert (=> b!68398 m!64353))

(assert (=> b!68398 m!64353))

(declare-fun m!64355 () Bool)

(assert (=> b!68398 m!64355))

(assert (=> b!68398 m!64329))

(declare-fun m!64357 () Bool)

(assert (=> b!68398 m!64357))

(assert (=> b!68398 m!64351))

(declare-fun m!64359 () Bool)

(assert (=> b!68398 m!64359))

(declare-fun m!64361 () Bool)

(assert (=> b!68398 m!64361))

(declare-fun m!64363 () Bool)

(assert (=> b!68389 m!64363))

(declare-fun m!64365 () Bool)

(assert (=> b!68389 m!64365))

(declare-fun m!64367 () Bool)

(assert (=> b!68386 m!64367))

(declare-fun m!64369 () Bool)

(assert (=> b!68386 m!64369))

(assert (=> b!68386 m!64329))

(declare-fun m!64371 () Bool)

(assert (=> b!68386 m!64371))

(assert (=> b!68386 m!64329))

(assert (=> b!68386 m!64329))

(declare-fun m!64373 () Bool)

(assert (=> b!68386 m!64373))

(assert (=> b!68386 m!64329))

(declare-fun m!64375 () Bool)

(assert (=> b!68386 m!64375))

(assert (=> b!68395 m!64329))

(declare-fun m!64377 () Bool)

(assert (=> b!68395 m!64377))

(declare-fun m!64379 () Bool)

(assert (=> b!68395 m!64379))

(assert (=> b!68395 m!64377))

(assert (=> b!68395 m!64379))

(declare-fun m!64381 () Bool)

(assert (=> b!68395 m!64381))

(check-sat (not b!68386) (not b!68395) (not b_next!2079) (not mapNonEmpty!3095) (not b!68389) (not mapNonEmpty!3096) tp_is_empty!2455 (not b!68380) b_and!4217 (not b_lambda!3077) (not b_next!2077) (not b!68379) b_and!4219 (not b!68398) (not b!68392) (not start!9426) (not b!68393))
(check-sat b_and!4217 b_and!4219 (not b_next!2077) (not b_next!2079))
(get-model)

(declare-fun b_lambda!3083 () Bool)

(assert (= b_lambda!3077 (or (and b!68389 b_free!2077) (and b!68379 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))) b_lambda!3083)))

(check-sat (not b!68386) (not b!68395) (not b_next!2079) (not mapNonEmpty!3095) (not b!68389) (not mapNonEmpty!3096) tp_is_empty!2455 (not b!68380) b_and!4217 (not b_lambda!3083) (not b_next!2077) (not b!68379) b_and!4219 (not b!68398) (not b!68392) (not start!9426) (not b!68393))
(check-sat b_and!4217 b_and!4219 (not b_next!2077) (not b_next!2079))
(get-model)

(declare-fun d!14809 () Bool)

(assert (=> d!14809 (= (valid!291 thiss!992) (valid!292 (v!2494 (underlying!253 thiss!992))))))

(declare-fun bs!2963 () Bool)

(assert (= bs!2963 d!14809))

(declare-fun m!64495 () Bool)

(assert (=> bs!2963 m!64495))

(assert (=> start!9426 d!14809))

(declare-fun d!14811 () Bool)

(assert (=> d!14811 (not (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29927 () Unit!1909)

(declare-fun choose!68 (array!3837 (_ BitVec 32) (_ BitVec 64) List!1460) Unit!1909)

(assert (=> d!14811 (= lt!29927 (choose!68 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457)))))

(assert (=> d!14811 (bvslt (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!14811 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457)) lt!29927)))

(declare-fun bs!2964 () Bool)

(assert (= bs!2964 d!14811))

(assert (=> bs!2964 m!64329))

(assert (=> bs!2964 m!64373))

(assert (=> bs!2964 m!64329))

(declare-fun m!64497 () Bool)

(assert (=> bs!2964 m!64497))

(assert (=> b!68386 d!14811))

(declare-fun d!14813 () Bool)

(assert (=> d!14813 (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) from!355 Nil!1457)))

(declare-fun lt!29930 () Unit!1909)

(declare-fun choose!39 (array!3837 (_ BitVec 32) (_ BitVec 32)) Unit!1909)

(assert (=> d!14813 (= lt!29930 (choose!39 (_keys!3811 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!14813 (bvslt (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!14813 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355) lt!29930)))

(declare-fun bs!2965 () Bool)

(assert (= bs!2965 d!14813))

(assert (=> bs!2965 m!64369))

(declare-fun m!64499 () Bool)

(assert (=> bs!2965 m!64499))

(assert (=> b!68386 d!14813))

(declare-fun d!14815 () Bool)

(declare-fun res!36865 () Bool)

(declare-fun e!44922 () Bool)

(assert (=> d!14815 (=> res!36865 e!44922)))

(assert (=> d!14815 (= res!36865 (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14815 (= (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!44922)))

(declare-fun b!68529 () Bool)

(declare-fun e!44923 () Bool)

(assert (=> b!68529 (= e!44922 e!44923)))

(declare-fun res!36866 () Bool)

(assert (=> b!68529 (=> (not res!36866) (not e!44923))))

(assert (=> b!68529 (= res!36866 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68530 () Bool)

(assert (=> b!68530 (= e!44923 (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!14815 (not res!36865)) b!68529))

(assert (= (and b!68529 res!36866) b!68530))

(declare-fun m!64501 () Bool)

(assert (=> d!14815 m!64501))

(assert (=> b!68530 m!64329))

(declare-fun m!64503 () Bool)

(assert (=> b!68530 m!64503))

(assert (=> b!68386 d!14815))

(declare-fun d!14817 () Bool)

(declare-fun e!44926 () Bool)

(assert (=> d!14817 e!44926))

(declare-fun c!9681 () Bool)

(assert (=> d!14817 (= c!9681 (and (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!29933 () Unit!1909)

(declare-fun choose!387 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) (_ BitVec 32) Int) Unit!1909)

(assert (=> d!14817 (= lt!29933 (choose!387 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(assert (=> d!14817 (validMask!0 (mask!6112 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!14817 (= (lemmaListMapContainsThenArrayContainsFrom!38 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))) lt!29933)))

(declare-fun b!68535 () Bool)

(assert (=> b!68535 (= e!44926 (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!68536 () Bool)

(assert (=> b!68536 (= e!44926 (ite (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!14817 c!9681) b!68535))

(assert (= (and d!14817 (not c!9681)) b!68536))

(assert (=> d!14817 m!64329))

(declare-fun m!64505 () Bool)

(assert (=> d!14817 m!64505))

(assert (=> d!14817 m!64349))

(assert (=> b!68535 m!64329))

(assert (=> b!68535 m!64373))

(assert (=> b!68386 d!14817))

(declare-fun b!68547 () Bool)

(declare-fun e!44936 () Bool)

(declare-fun e!44935 () Bool)

(assert (=> b!68547 (= e!44936 e!44935)))

(declare-fun c!9684 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!68547 (= c!9684 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68548 () Bool)

(declare-fun call!5750 () Bool)

(assert (=> b!68548 (= e!44935 call!5750)))

(declare-fun d!14819 () Bool)

(declare-fun res!36875 () Bool)

(declare-fun e!44937 () Bool)

(assert (=> d!14819 (=> res!36875 e!44937)))

(assert (=> d!14819 (= res!36875 (bvsge from!355 (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!14819 (= (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) from!355 Nil!1457) e!44937)))

(declare-fun b!68549 () Bool)

(assert (=> b!68549 (= e!44937 e!44936)))

(declare-fun res!36873 () Bool)

(assert (=> b!68549 (=> (not res!36873) (not e!44936))))

(declare-fun e!44938 () Bool)

(assert (=> b!68549 (= res!36873 (not e!44938))))

(declare-fun res!36874 () Bool)

(assert (=> b!68549 (=> (not res!36874) (not e!44938))))

(assert (=> b!68549 (= res!36874 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun bm!5747 () Bool)

(assert (=> bm!5747 (= call!5750 (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)))))

(declare-fun b!68550 () Bool)

(declare-fun contains!712 (List!1460 (_ BitVec 64)) Bool)

(assert (=> b!68550 (= e!44938 (contains!712 Nil!1457 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68551 () Bool)

(assert (=> b!68551 (= e!44935 call!5750)))

(assert (= (and d!14819 (not res!36875)) b!68549))

(assert (= (and b!68549 res!36874) b!68550))

(assert (= (and b!68549 res!36873) b!68547))

(assert (= (and b!68547 c!9684) b!68548))

(assert (= (and b!68547 (not c!9684)) b!68551))

(assert (= (or b!68548 b!68551) bm!5747))

(assert (=> b!68547 m!64329))

(assert (=> b!68547 m!64329))

(declare-fun m!64507 () Bool)

(assert (=> b!68547 m!64507))

(assert (=> b!68549 m!64329))

(assert (=> b!68549 m!64329))

(assert (=> b!68549 m!64507))

(assert (=> bm!5747 m!64329))

(declare-fun m!64509 () Bool)

(assert (=> bm!5747 m!64509))

(assert (=> b!68550 m!64329))

(assert (=> b!68550 m!64329))

(declare-fun m!64511 () Bool)

(assert (=> b!68550 m!64511))

(assert (=> b!68386 d!14819))

(declare-fun d!14821 () Bool)

(declare-fun c!9687 () Bool)

(assert (=> d!14821 (= c!9687 ((_ is ValueCellFull!884) (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!44941 () V!2921)

(assert (=> d!14821 (= (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44941)))

(declare-fun b!68556 () Bool)

(declare-fun get!1132 (ValueCell!884 V!2921) V!2921)

(assert (=> b!68556 (= e!44941 (get!1132 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68557 () Bool)

(declare-fun get!1133 (ValueCell!884 V!2921) V!2921)

(assert (=> b!68557 (= e!44941 (get!1133 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14821 c!9687) b!68556))

(assert (= (and d!14821 (not c!9687)) b!68557))

(assert (=> b!68556 m!64377))

(assert (=> b!68556 m!64379))

(declare-fun m!64513 () Bool)

(assert (=> b!68556 m!64513))

(assert (=> b!68557 m!64377))

(assert (=> b!68557 m!64379))

(declare-fun m!64515 () Bool)

(assert (=> b!68557 m!64515))

(assert (=> b!68395 d!14821))

(declare-fun d!14823 () Bool)

(declare-fun e!44947 () Bool)

(assert (=> d!14823 e!44947))

(declare-fun res!36878 () Bool)

(assert (=> d!14823 (=> res!36878 e!44947)))

(declare-fun lt!29945 () Bool)

(assert (=> d!14823 (= res!36878 (not lt!29945))))

(declare-fun lt!29944 () Bool)

(assert (=> d!14823 (= lt!29945 lt!29944)))

(declare-fun lt!29942 () Unit!1909)

(declare-fun e!44946 () Unit!1909)

(assert (=> d!14823 (= lt!29942 e!44946)))

(declare-fun c!9690 () Bool)

(assert (=> d!14823 (= c!9690 lt!29944)))

(declare-fun containsKey!135 (List!1459 (_ BitVec 64)) Bool)

(assert (=> d!14823 (= lt!29944 (containsKey!135 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14823 (= (contains!710 lt!29848 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!29945)))

(declare-fun b!68564 () Bool)

(declare-fun lt!29943 () Unit!1909)

(assert (=> b!68564 (= e!44946 lt!29943)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!83 (List!1459 (_ BitVec 64)) Unit!1909)

(assert (=> b!68564 (= lt!29943 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-datatypes ((Option!138 0))(
  ( (Some!137 (v!2500 V!2921)) (None!136) )
))
(declare-fun isDefined!84 (Option!138) Bool)

(declare-fun getValueByKey!132 (List!1459 (_ BitVec 64)) Option!138)

(assert (=> b!68564 (isDefined!84 (getValueByKey!132 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68565 () Bool)

(declare-fun Unit!1917 () Unit!1909)

(assert (=> b!68565 (= e!44946 Unit!1917)))

(declare-fun b!68566 () Bool)

(assert (=> b!68566 (= e!44947 (isDefined!84 (getValueByKey!132 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!14823 c!9690) b!68564))

(assert (= (and d!14823 (not c!9690)) b!68565))

(assert (= (and d!14823 (not res!36878)) b!68566))

(assert (=> d!14823 m!64329))

(declare-fun m!64517 () Bool)

(assert (=> d!14823 m!64517))

(assert (=> b!68564 m!64329))

(declare-fun m!64519 () Bool)

(assert (=> b!68564 m!64519))

(assert (=> b!68564 m!64329))

(declare-fun m!64521 () Bool)

(assert (=> b!68564 m!64521))

(assert (=> b!68564 m!64521))

(declare-fun m!64523 () Bool)

(assert (=> b!68564 m!64523))

(assert (=> b!68566 m!64329))

(assert (=> b!68566 m!64521))

(assert (=> b!68566 m!64521))

(assert (=> b!68566 m!64523))

(assert (=> b!68392 d!14823))

(declare-fun b!68651 () Bool)

(declare-fun e!44999 () Bool)

(declare-datatypes ((SeekEntryResult!228 0))(
  ( (MissingZero!228 (index!3041 (_ BitVec 32))) (Found!228 (index!3042 (_ BitVec 32))) (Intermediate!228 (undefined!1040 Bool) (index!3043 (_ BitVec 32)) (x!10842 (_ BitVec 32))) (Undefined!228) (MissingVacant!228 (index!3044 (_ BitVec 32))) )
))
(declare-fun lt!30022 () SeekEntryResult!228)

(assert (=> b!68651 (= e!44999 ((_ is Undefined!228) lt!30022))))

(declare-fun bm!5796 () Bool)

(declare-fun call!5799 () Bool)

(declare-fun call!5808 () Bool)

(assert (=> bm!5796 (= call!5799 call!5808)))

(declare-fun bm!5797 () Bool)

(declare-fun call!5814 () ListLongMap!1385)

(declare-fun call!5819 () ListLongMap!1385)

(assert (=> bm!5797 (= call!5814 call!5819)))

(declare-fun e!45009 () Bool)

(declare-fun lt!30011 () SeekEntryResult!228)

(declare-fun b!68652 () Bool)

(assert (=> b!68652 (= e!45009 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30011)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68653 () Bool)

(declare-fun e!45012 () Unit!1909)

(declare-fun lt!30005 () Unit!1909)

(assert (=> b!68653 (= e!45012 lt!30005)))

(declare-fun call!5813 () Unit!1909)

(assert (=> b!68653 (= lt!30005 call!5813)))

(declare-fun call!5805 () SeekEntryResult!228)

(assert (=> b!68653 (= lt!30011 call!5805)))

(declare-fun res!36916 () Bool)

(assert (=> b!68653 (= res!36916 ((_ is Found!228) lt!30011))))

(assert (=> b!68653 (=> (not res!36916) (not e!45009))))

(assert (=> b!68653 e!45009))

(declare-fun b!68654 () Bool)

(declare-fun e!45001 () ListLongMap!1385)

(declare-fun call!5821 () ListLongMap!1385)

(assert (=> b!68654 (= e!45001 call!5821)))

(declare-fun bm!5799 () Bool)

(declare-fun call!5801 () ListLongMap!1385)

(assert (=> bm!5799 (= call!5801 call!5819)))

(declare-fun bm!5800 () Bool)

(declare-fun call!5822 () SeekEntryResult!228)

(assert (=> bm!5800 (= call!5805 call!5822)))

(declare-fun b!68655 () Bool)

(declare-fun e!45008 () Unit!1909)

(declare-fun lt!30012 () Unit!1909)

(assert (=> b!68655 (= e!45008 lt!30012)))

(declare-fun call!5815 () Unit!1909)

(assert (=> b!68655 (= lt!30012 call!5815)))

(declare-fun lt!30026 () SeekEntryResult!228)

(declare-fun call!5812 () SeekEntryResult!228)

(assert (=> b!68655 (= lt!30026 call!5812)))

(declare-fun c!9725 () Bool)

(assert (=> b!68655 (= c!9725 ((_ is MissingZero!228) lt!30026))))

(declare-fun e!44995 () Bool)

(assert (=> b!68655 e!44995))

(declare-fun b!68656 () Bool)

(declare-fun e!45003 () Bool)

(declare-fun call!5806 () Bool)

(assert (=> b!68656 (= e!45003 (not call!5806))))

(declare-fun b!68657 () Bool)

(declare-fun res!36913 () Bool)

(declare-fun e!44992 () Bool)

(assert (=> b!68657 (=> (not res!36913) (not e!44992))))

(declare-fun call!5804 () Bool)

(assert (=> b!68657 (= res!36913 call!5804)))

(assert (=> b!68657 (= e!44995 e!44992)))

(declare-fun b!68658 () Bool)

(declare-fun e!45002 () Bool)

(declare-fun e!44993 () Bool)

(assert (=> b!68658 (= e!45002 e!44993)))

(declare-fun res!36910 () Bool)

(declare-fun call!5809 () ListLongMap!1385)

(assert (=> b!68658 (= res!36910 (contains!710 call!5809 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!68658 (=> (not res!36910) (not e!44993))))

(declare-fun b!68659 () Bool)

(declare-fun res!36920 () Bool)

(declare-fun e!45007 () Bool)

(assert (=> b!68659 (=> (not res!36920) (not e!45007))))

(assert (=> b!68659 (= res!36920 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3041 lt!30022)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68660 () Bool)

(declare-fun e!45013 () Bool)

(assert (=> b!68660 (= e!45013 ((_ is Undefined!228) lt!30026))))

(declare-fun bm!5801 () Bool)

(assert (=> bm!5801 (= call!5812 call!5822)))

(declare-fun bm!5802 () Bool)

(declare-fun call!5811 () Bool)

(assert (=> bm!5802 (= call!5804 call!5811)))

(declare-fun b!68661 () Bool)

(declare-fun e!44998 () Bool)

(assert (=> b!68661 (= e!44999 e!44998)))

(declare-fun res!36918 () Bool)

(declare-fun call!5810 () Bool)

(assert (=> b!68661 (= res!36918 call!5810)))

(assert (=> b!68661 (=> (not res!36918) (not e!44998))))

(declare-fun bm!5803 () Bool)

(declare-fun lt!30004 () SeekEntryResult!228)

(declare-fun c!9731 () Bool)

(declare-fun c!9719 () Bool)

(declare-fun c!9724 () Bool)

(declare-fun c!9732 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!5803 (= call!5808 (inRange!0 (ite c!9732 (ite c!9731 (index!3042 lt!30004) (ite c!9725 (index!3041 lt!30026) (index!3044 lt!30026))) (ite c!9719 (index!3042 lt!30011) (ite c!9724 (index!3041 lt!30022) (index!3044 lt!30022)))) (mask!6112 newMap!16)))))

(declare-fun b!68662 () Bool)

(declare-fun Unit!1918 () Unit!1909)

(assert (=> b!68662 (= e!45012 Unit!1918)))

(declare-fun lt!30018 () Unit!1909)

(assert (=> b!68662 (= lt!30018 call!5815)))

(assert (=> b!68662 (= lt!30022 call!5805)))

(assert (=> b!68662 (= c!9724 ((_ is MissingZero!228) lt!30022))))

(declare-fun e!44997 () Bool)

(assert (=> b!68662 e!44997))

(declare-fun lt!30007 () Unit!1909)

(assert (=> b!68662 (= lt!30007 lt!30018)))

(assert (=> b!68662 false))

(declare-fun b!68663 () Bool)

(declare-fun res!36917 () Bool)

(assert (=> b!68663 (= res!36917 call!5799)))

(assert (=> b!68663 (=> (not res!36917) (not e!45009))))

(declare-fun b!68664 () Bool)

(declare-fun res!36919 () Bool)

(assert (=> b!68664 (= res!36919 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3044 lt!30022)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68664 (=> (not res!36919) (not e!44998))))

(declare-fun b!68665 () Bool)

(declare-fun c!9720 () Bool)

(assert (=> b!68665 (= c!9720 ((_ is MissingVacant!228) lt!30022))))

(assert (=> b!68665 (= e!44997 e!44999)))

(declare-fun b!68666 () Bool)

(declare-fun lt!30001 () Unit!1909)

(assert (=> b!68666 (= lt!30001 e!45008)))

(declare-fun call!5807 () Bool)

(assert (=> b!68666 (= c!9731 call!5807)))

(declare-fun e!45011 () tuple2!2094)

(assert (=> b!68666 (= e!45011 (tuple2!2095 false newMap!16))))

(declare-fun b!68667 () Bool)

(declare-fun res!36911 () Bool)

(assert (=> b!68667 (= res!36911 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3044 lt!30026)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68667 (=> (not res!36911) (not e!45003))))

(declare-fun b!68668 () Bool)

(declare-fun e!44994 () ListLongMap!1385)

(declare-fun call!5816 () ListLongMap!1385)

(assert (=> b!68668 (= e!44994 call!5816)))

(declare-fun b!68669 () Bool)

(declare-fun lt!30015 () Unit!1909)

(declare-fun lt!30006 () Unit!1909)

(assert (=> b!68669 (= lt!30015 lt!30006)))

(assert (=> b!68669 call!5807))

(declare-fun lt!30013 () array!3839)

(declare-fun lt!30008 () SeekEntryResult!228)

(declare-fun lemmaValidKeyInArrayIsInListMap!82 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) Int) Unit!1909)

(assert (=> b!68669 (= lt!30006 (lemmaValidKeyInArrayIsInListMap!82 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3042 lt!30008) (defaultEntry!2167 newMap!16)))))

(assert (=> b!68669 (= lt!30013 (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))))

(declare-fun lt!30003 () Unit!1909)

(declare-fun lt!30009 () Unit!1909)

(assert (=> b!68669 (= lt!30003 lt!30009)))

(declare-fun call!5800 () ListLongMap!1385)

(assert (=> b!68669 (= call!5800 call!5801)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) (_ BitVec 64) V!2921 Int) Unit!1909)

(assert (=> b!68669 (= lt!30009 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3042 lt!30008) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30017 () Unit!1909)

(assert (=> b!68669 (= lt!30017 e!45012)))

(assert (=> b!68669 (= c!9719 (contains!710 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!45010 () tuple2!2094)

(assert (=> b!68669 (= e!45010 (tuple2!2095 true (LongMapFixedSize!677 (defaultEntry!2167 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (_size!387 newMap!16) (_keys!3811 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (_vacant!387 newMap!16))))))

(declare-fun b!68670 () Bool)

(declare-fun c!9722 () Bool)

(assert (=> b!68670 (= c!9722 ((_ is MissingVacant!228) lt!30026))))

(assert (=> b!68670 (= e!44995 e!45013)))

(declare-fun b!68671 () Bool)

(declare-fun call!5820 () Bool)

(assert (=> b!68671 (= e!45007 (not call!5820))))

(declare-fun b!68672 () Bool)

(assert (=> b!68672 (= e!44994 call!5801)))

(declare-fun bm!5804 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) Int) Unit!1909)

(assert (=> bm!5804 (= call!5815 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(declare-fun c!9727 () Bool)

(declare-fun c!9730 () Bool)

(declare-fun bm!5805 () Bool)

(assert (=> bm!5805 (= call!5800 (+!88 e!45001 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun c!9726 () Bool)

(assert (=> bm!5805 (= c!9726 c!9730)))

(declare-fun bm!5806 () Bool)

(declare-fun call!5818 () Bool)

(assert (=> bm!5806 (= call!5806 call!5818)))

(declare-fun b!68673 () Bool)

(declare-fun lt!30019 () tuple2!2094)

(declare-fun call!5802 () tuple2!2094)

(assert (=> b!68673 (= lt!30019 call!5802)))

(assert (=> b!68673 (= e!45010 (tuple2!2095 (_1!1058 lt!30019) (_2!1058 lt!30019)))))

(declare-fun b!68674 () Bool)

(assert (=> b!68674 (= e!45001 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!68675 () Bool)

(declare-fun lt!30014 () Unit!1909)

(declare-fun lt!30000 () Unit!1909)

(assert (=> b!68675 (= lt!30014 lt!30000)))

(declare-fun call!5817 () ListLongMap!1385)

(assert (=> b!68675 (= call!5817 call!5814)))

(declare-fun lt!30025 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!22 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 V!2921 Int) Unit!1909)

(assert (=> b!68675 (= lt!30000 (lemmaChangeZeroKeyThenAddPairToListMap!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) lt!30025 (zeroValue!2073 newMap!16) lt!29849 (minValue!2073 newMap!16) (defaultEntry!2167 newMap!16)))))

(assert (=> b!68675 (= lt!30025 (bvor (extraKeys!2034 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!45006 () tuple2!2094)

(assert (=> b!68675 (= e!45006 (tuple2!2095 true (LongMapFixedSize!677 (defaultEntry!2167 newMap!16) (mask!6112 newMap!16) (bvor (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) lt!29849 (minValue!2073 newMap!16) (_size!387 newMap!16) (_keys!3811 newMap!16) (_values!2150 newMap!16) (_vacant!387 newMap!16))))))

(declare-fun bm!5798 () Bool)

(assert (=> bm!5798 (= call!5818 (arrayContainsKey!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!14825 () Bool)

(declare-fun e!45004 () Bool)

(assert (=> d!14825 e!45004))

(declare-fun res!36915 () Bool)

(assert (=> d!14825 (=> (not res!36915) (not e!45004))))

(declare-fun lt!30016 () tuple2!2094)

(assert (=> d!14825 (= res!36915 (valid!292 (_2!1058 lt!30016)))))

(declare-fun e!44996 () tuple2!2094)

(assert (=> d!14825 (= lt!30016 e!44996)))

(assert (=> d!14825 (= c!9730 (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvneg (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!14825 (valid!292 newMap!16)))

(assert (=> d!14825 (= (update!104 newMap!16 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849) lt!30016)))

(declare-fun b!68676 () Bool)

(assert (=> b!68676 (= e!44996 e!45011)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3837 (_ BitVec 32)) SeekEntryResult!228)

(assert (=> b!68676 (= lt!30008 (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(assert (=> b!68676 (= c!9732 ((_ is Undefined!228) lt!30008))))

(declare-fun bm!5807 () Bool)

(assert (=> bm!5807 (= call!5821 call!5816)))

(declare-fun bm!5808 () Bool)

(assert (=> bm!5808 (= call!5810 call!5799)))

(declare-fun bm!5809 () Bool)

(assert (=> bm!5809 (= call!5822 (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun bm!5810 () Bool)

(assert (=> bm!5810 (= call!5809 (map!1146 (_2!1058 lt!30016)))))

(declare-fun b!68677 () Bool)

(declare-fun c!9729 () Bool)

(assert (=> b!68677 (= c!9729 ((_ is MissingVacant!228) lt!30008))))

(declare-fun e!45005 () tuple2!2094)

(assert (=> b!68677 (= e!45011 e!45005)))

(declare-fun bm!5811 () Bool)

(assert (=> bm!5811 (= call!5817 call!5800)))

(declare-fun b!68678 () Bool)

(assert (=> b!68678 (= e!45013 e!45003)))

(declare-fun res!36908 () Bool)

(assert (=> b!68678 (= res!36908 call!5804)))

(assert (=> b!68678 (=> (not res!36908) (not e!45003))))

(declare-fun b!68679 () Bool)

(declare-fun res!36914 () Bool)

(assert (=> b!68679 (=> (not res!36914) (not e!44992))))

(assert (=> b!68679 (= res!36914 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3041 lt!30026)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68680 () Bool)

(declare-fun res!36909 () Bool)

(assert (=> b!68680 (=> (not res!36909) (not e!45007))))

(assert (=> b!68680 (= res!36909 call!5810)))

(assert (=> b!68680 (= e!44997 e!45007)))

(declare-fun b!68681 () Bool)

(declare-fun e!45000 () Bool)

(assert (=> b!68681 (= e!45000 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30004)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68682 () Bool)

(assert (=> b!68682 (= e!44996 e!45006)))

(assert (=> b!68682 (= c!9727 (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68683 () Bool)

(assert (=> b!68683 (= e!45005 e!45010)))

(declare-fun c!9728 () Bool)

(assert (=> b!68683 (= c!9728 ((_ is MissingZero!228) lt!30008))))

(declare-fun b!68684 () Bool)

(assert (=> b!68684 (= e!44992 (not call!5806))))

(declare-fun bm!5812 () Bool)

(declare-fun c!9721 () Bool)

(assert (=> bm!5812 (= c!9721 c!9732)))

(assert (=> bm!5812 (= call!5807 (contains!710 e!44994 (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))

(declare-fun bm!5813 () Bool)

(declare-fun updateHelperNewKey!22 (LongMapFixedSize!676 (_ BitVec 64) V!2921 (_ BitVec 32)) tuple2!2094)

(assert (=> bm!5813 (= call!5802 (updateHelperNewKey!22 newMap!16 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))))))

(declare-fun bm!5814 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) Int) Unit!1909)

(assert (=> bm!5814 (= call!5813 (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(declare-fun b!68685 () Bool)

(declare-fun Unit!1919 () Unit!1909)

(assert (=> b!68685 (= e!45008 Unit!1919)))

(declare-fun lt!30021 () Unit!1909)

(assert (=> b!68685 (= lt!30021 call!5813)))

(assert (=> b!68685 (= lt!30004 call!5812)))

(declare-fun res!36912 () Bool)

(assert (=> b!68685 (= res!36912 ((_ is Found!228) lt!30004))))

(assert (=> b!68685 (=> (not res!36912) (not e!45000))))

(assert (=> b!68685 e!45000))

(declare-fun lt!30020 () Unit!1909)

(assert (=> b!68685 (= lt!30020 lt!30021)))

(assert (=> b!68685 false))

(declare-fun bm!5815 () Bool)

(assert (=> bm!5815 (= call!5811 call!5808)))

(declare-fun b!68686 () Bool)

(declare-fun res!36907 () Bool)

(assert (=> b!68686 (= res!36907 call!5811)))

(assert (=> b!68686 (=> (not res!36907) (not e!45000))))

(declare-fun bm!5816 () Bool)

(declare-fun call!5803 () ListLongMap!1385)

(assert (=> bm!5816 (= call!5803 (map!1146 newMap!16))))

(declare-fun b!68687 () Bool)

(assert (=> b!68687 (= e!45002 (= call!5809 call!5803))))

(declare-fun bm!5817 () Bool)

(declare-fun lt!30024 () (_ BitVec 32))

(assert (=> bm!5817 (= call!5819 (getCurrentListMap!406 (_keys!3811 newMap!16) (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) (mask!6112 newMap!16) (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!68688 () Bool)

(assert (=> b!68688 (= e!45004 e!45002)))

(declare-fun c!9723 () Bool)

(assert (=> b!68688 (= c!9723 (_1!1058 lt!30016))))

(declare-fun bm!5818 () Bool)

(assert (=> bm!5818 (= call!5820 call!5818)))

(declare-fun bm!5819 () Bool)

(assert (=> bm!5819 (= call!5816 (getCurrentListMap!406 (_keys!3811 newMap!16) (ite c!9730 (_values!2150 newMap!16) lt!30013) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!68689 () Bool)

(declare-fun lt!30010 () Unit!1909)

(declare-fun lt!30002 () Unit!1909)

(assert (=> b!68689 (= lt!30010 lt!30002)))

(assert (=> b!68689 (= call!5817 call!5814)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 V!2921 Int) Unit!1909)

(assert (=> b!68689 (= lt!30002 (lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) lt!30024 (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) lt!29849 (defaultEntry!2167 newMap!16)))))

(assert (=> b!68689 (= lt!30024 (bvor (extraKeys!2034 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!68689 (= e!45006 (tuple2!2095 true (LongMapFixedSize!677 (defaultEntry!2167 newMap!16) (mask!6112 newMap!16) (bvor (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) (zeroValue!2073 newMap!16) lt!29849 (_size!387 newMap!16) (_keys!3811 newMap!16) (_values!2150 newMap!16) (_vacant!387 newMap!16))))))

(declare-fun b!68690 () Bool)

(declare-fun lt!30023 () tuple2!2094)

(assert (=> b!68690 (= e!45005 (tuple2!2095 (_1!1058 lt!30023) (_2!1058 lt!30023)))))

(assert (=> b!68690 (= lt!30023 call!5802)))

(declare-fun b!68691 () Bool)

(assert (=> b!68691 (= e!44998 (not call!5820))))

(declare-fun b!68692 () Bool)

(assert (=> b!68692 (= e!44993 (= call!5809 (+!88 call!5803 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (= (and d!14825 c!9730) b!68682))

(assert (= (and d!14825 (not c!9730)) b!68676))

(assert (= (and b!68682 c!9727) b!68675))

(assert (= (and b!68682 (not c!9727)) b!68689))

(assert (= (or b!68675 b!68689) bm!5797))

(assert (= (or b!68675 b!68689) bm!5807))

(assert (= (or b!68675 b!68689) bm!5811))

(assert (= (and b!68676 c!9732) b!68666))

(assert (= (and b!68676 (not c!9732)) b!68677))

(assert (= (and b!68666 c!9731) b!68685))

(assert (= (and b!68666 (not c!9731)) b!68655))

(assert (= (and b!68685 res!36912) b!68686))

(assert (= (and b!68686 res!36907) b!68681))

(assert (= (and b!68655 c!9725) b!68657))

(assert (= (and b!68655 (not c!9725)) b!68670))

(assert (= (and b!68657 res!36913) b!68679))

(assert (= (and b!68679 res!36914) b!68684))

(assert (= (and b!68670 c!9722) b!68678))

(assert (= (and b!68670 (not c!9722)) b!68660))

(assert (= (and b!68678 res!36908) b!68667))

(assert (= (and b!68667 res!36911) b!68656))

(assert (= (or b!68657 b!68678) bm!5802))

(assert (= (or b!68684 b!68656) bm!5806))

(assert (= (or b!68686 bm!5802) bm!5815))

(assert (= (or b!68685 b!68655) bm!5801))

(assert (= (and b!68677 c!9729) b!68690))

(assert (= (and b!68677 (not c!9729)) b!68683))

(assert (= (and b!68683 c!9728) b!68673))

(assert (= (and b!68683 (not c!9728)) b!68669))

(assert (= (and b!68669 c!9719) b!68653))

(assert (= (and b!68669 (not c!9719)) b!68662))

(assert (= (and b!68653 res!36916) b!68663))

(assert (= (and b!68663 res!36917) b!68652))

(assert (= (and b!68662 c!9724) b!68680))

(assert (= (and b!68662 (not c!9724)) b!68665))

(assert (= (and b!68680 res!36909) b!68659))

(assert (= (and b!68659 res!36920) b!68671))

(assert (= (and b!68665 c!9720) b!68661))

(assert (= (and b!68665 (not c!9720)) b!68651))

(assert (= (and b!68661 res!36918) b!68664))

(assert (= (and b!68664 res!36919) b!68691))

(assert (= (or b!68680 b!68661) bm!5808))

(assert (= (or b!68671 b!68691) bm!5818))

(assert (= (or b!68663 bm!5808) bm!5796))

(assert (= (or b!68653 b!68662) bm!5800))

(assert (= (or b!68690 b!68673) bm!5813))

(assert (= (or b!68655 b!68662) bm!5804))

(assert (= (or b!68666 b!68669) bm!5799))

(assert (= (or bm!5801 bm!5800) bm!5809))

(assert (= (or bm!5806 bm!5818) bm!5798))

(assert (= (or bm!5815 bm!5796) bm!5803))

(assert (= (or b!68685 b!68653) bm!5814))

(assert (= (or b!68666 b!68669) bm!5812))

(assert (= (and bm!5812 c!9721) b!68672))

(assert (= (and bm!5812 (not c!9721)) b!68668))

(assert (= (or bm!5797 bm!5799) bm!5817))

(assert (= (or bm!5807 b!68668) bm!5819))

(assert (= (or bm!5811 b!68669) bm!5805))

(assert (= (and bm!5805 c!9726) b!68654))

(assert (= (and bm!5805 (not c!9726)) b!68674))

(assert (= (and d!14825 res!36915) b!68688))

(assert (= (and b!68688 c!9723) b!68658))

(assert (= (and b!68688 (not c!9723)) b!68687))

(assert (= (and b!68658 res!36910) b!68692))

(assert (= (or b!68658 b!68692 b!68687) bm!5810))

(assert (= (or b!68692 b!68687) bm!5816))

(declare-fun m!64525 () Bool)

(assert (=> b!68674 m!64525))

(declare-fun m!64527 () Bool)

(assert (=> b!68681 m!64527))

(declare-fun m!64529 () Bool)

(assert (=> b!68679 m!64529))

(declare-fun m!64531 () Bool)

(assert (=> b!68664 m!64531))

(declare-fun m!64533 () Bool)

(assert (=> bm!5812 m!64533))

(declare-fun m!64535 () Bool)

(assert (=> bm!5812 m!64535))

(assert (=> b!68676 m!64329))

(declare-fun m!64537 () Bool)

(assert (=> b!68676 m!64537))

(declare-fun m!64539 () Bool)

(assert (=> b!68675 m!64539))

(declare-fun m!64541 () Bool)

(assert (=> d!14825 m!64541))

(assert (=> d!14825 m!64341))

(assert (=> bm!5813 m!64329))

(declare-fun m!64543 () Bool)

(assert (=> bm!5813 m!64543))

(assert (=> bm!5816 m!64345))

(declare-fun m!64545 () Bool)

(assert (=> bm!5817 m!64545))

(declare-fun m!64547 () Bool)

(assert (=> bm!5817 m!64547))

(assert (=> b!68669 m!64525))

(assert (=> b!68669 m!64329))

(declare-fun m!64549 () Bool)

(assert (=> b!68669 m!64549))

(assert (=> b!68669 m!64545))

(assert (=> b!68669 m!64329))

(declare-fun m!64551 () Bool)

(assert (=> b!68669 m!64551))

(declare-fun m!64553 () Bool)

(assert (=> b!68669 m!64553))

(assert (=> b!68669 m!64525))

(assert (=> b!68658 m!64329))

(declare-fun m!64555 () Bool)

(assert (=> b!68658 m!64555))

(declare-fun m!64557 () Bool)

(assert (=> bm!5803 m!64557))

(assert (=> bm!5814 m!64329))

(declare-fun m!64559 () Bool)

(assert (=> bm!5814 m!64559))

(declare-fun m!64561 () Bool)

(assert (=> b!68659 m!64561))

(declare-fun m!64563 () Bool)

(assert (=> b!68667 m!64563))

(assert (=> bm!5798 m!64329))

(declare-fun m!64565 () Bool)

(assert (=> bm!5798 m!64565))

(declare-fun m!64567 () Bool)

(assert (=> bm!5810 m!64567))

(assert (=> bm!5809 m!64329))

(assert (=> bm!5809 m!64537))

(declare-fun m!64569 () Bool)

(assert (=> bm!5805 m!64569))

(assert (=> bm!5804 m!64329))

(declare-fun m!64571 () Bool)

(assert (=> bm!5804 m!64571))

(declare-fun m!64573 () Bool)

(assert (=> b!68689 m!64573))

(declare-fun m!64575 () Bool)

(assert (=> bm!5819 m!64575))

(declare-fun m!64577 () Bool)

(assert (=> b!68652 m!64577))

(declare-fun m!64579 () Bool)

(assert (=> b!68692 m!64579))

(assert (=> b!68392 d!14825))

(declare-fun d!14827 () Bool)

(assert (=> d!14827 (= (array_inv!1127 (_keys!3811 newMap!16)) (bvsge (size!2068 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68379 d!14827))

(declare-fun d!14829 () Bool)

(assert (=> d!14829 (= (array_inv!1128 (_values!2150 newMap!16)) (bvsge (size!2069 (_values!2150 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68379 d!14829))

(declare-fun d!14831 () Bool)

(declare-fun res!36927 () Bool)

(declare-fun e!45016 () Bool)

(assert (=> d!14831 (=> (not res!36927) (not e!45016))))

(declare-fun simpleValid!49 (LongMapFixedSize!676) Bool)

(assert (=> d!14831 (= res!36927 (simpleValid!49 newMap!16))))

(assert (=> d!14831 (= (valid!292 newMap!16) e!45016)))

(declare-fun b!68699 () Bool)

(declare-fun res!36928 () Bool)

(assert (=> b!68699 (=> (not res!36928) (not e!45016))))

(declare-fun arrayCountValidKeys!0 (array!3837 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!68699 (= res!36928 (= (arrayCountValidKeys!0 (_keys!3811 newMap!16) #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (_size!387 newMap!16)))))

(declare-fun b!68700 () Bool)

(declare-fun res!36929 () Bool)

(assert (=> b!68700 (=> (not res!36929) (not e!45016))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3837 (_ BitVec 32)) Bool)

(assert (=> b!68700 (= res!36929 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun b!68701 () Bool)

(assert (=> b!68701 (= e!45016 (arrayNoDuplicates!0 (_keys!3811 newMap!16) #b00000000000000000000000000000000 Nil!1457))))

(assert (= (and d!14831 res!36927) b!68699))

(assert (= (and b!68699 res!36928) b!68700))

(assert (= (and b!68700 res!36929) b!68701))

(declare-fun m!64581 () Bool)

(assert (=> d!14831 m!64581))

(declare-fun m!64583 () Bool)

(assert (=> b!68699 m!64583))

(declare-fun m!64585 () Bool)

(assert (=> b!68700 m!64585))

(declare-fun m!64587 () Bool)

(assert (=> b!68701 m!64587))

(assert (=> b!68393 d!14831))

(declare-fun d!14833 () Bool)

(assert (=> d!14833 (= (map!1146 newMap!16) (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun bs!2966 () Bool)

(assert (= bs!2966 d!14833))

(assert (=> bs!2966 m!64525))

(assert (=> b!68380 d!14833))

(declare-fun b!68744 () Bool)

(declare-fun e!45043 () Bool)

(declare-fun lt!30085 () ListLongMap!1385)

(declare-fun apply!73 (ListLongMap!1385 (_ BitVec 64)) V!2921)

(assert (=> b!68744 (= e!45043 (= (apply!73 lt!30085 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68745 () Bool)

(declare-fun e!45045 () Unit!1909)

(declare-fun lt!30082 () Unit!1909)

(assert (=> b!68745 (= e!45045 lt!30082)))

(declare-fun lt!30072 () ListLongMap!1385)

(assert (=> b!68745 (= lt!30072 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun lt!30088 () (_ BitVec 64))

(assert (=> b!68745 (= lt!30088 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30077 () (_ BitVec 64))

(assert (=> b!68745 (= lt!30077 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!30076 () Unit!1909)

(declare-fun addStillContains!49 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1909)

(assert (=> b!68745 (= lt!30076 (addStillContains!49 lt!30072 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30077))))

(assert (=> b!68745 (contains!710 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30077)))

(declare-fun lt!30086 () Unit!1909)

(assert (=> b!68745 (= lt!30086 lt!30076)))

(declare-fun lt!30083 () ListLongMap!1385)

(assert (=> b!68745 (= lt!30083 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun lt!30073 () (_ BitVec 64))

(assert (=> b!68745 (= lt!30073 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30092 () (_ BitVec 64))

(assert (=> b!68745 (= lt!30092 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!30080 () Unit!1909)

(declare-fun addApplyDifferent!49 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1909)

(assert (=> b!68745 (= lt!30080 (addApplyDifferent!49 lt!30083 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30092))))

(assert (=> b!68745 (= (apply!73 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30092) (apply!73 lt!30083 lt!30092))))

(declare-fun lt!30074 () Unit!1909)

(assert (=> b!68745 (= lt!30074 lt!30080)))

(declare-fun lt!30090 () ListLongMap!1385)

(assert (=> b!68745 (= lt!30090 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun lt!30091 () (_ BitVec 64))

(assert (=> b!68745 (= lt!30091 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30084 () (_ BitVec 64))

(assert (=> b!68745 (= lt!30084 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!30089 () Unit!1909)

(assert (=> b!68745 (= lt!30089 (addApplyDifferent!49 lt!30090 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30084))))

(assert (=> b!68745 (= (apply!73 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30084) (apply!73 lt!30090 lt!30084))))

(declare-fun lt!30075 () Unit!1909)

(assert (=> b!68745 (= lt!30075 lt!30089)))

(declare-fun lt!30087 () ListLongMap!1385)

(assert (=> b!68745 (= lt!30087 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun lt!30079 () (_ BitVec 64))

(assert (=> b!68745 (= lt!30079 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30071 () (_ BitVec 64))

(assert (=> b!68745 (= lt!30071 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!68745 (= lt!30082 (addApplyDifferent!49 lt!30087 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30071))))

(assert (=> b!68745 (= (apply!73 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30071) (apply!73 lt!30087 lt!30071))))

(declare-fun bm!5834 () Bool)

(declare-fun call!5842 () ListLongMap!1385)

(declare-fun call!5843 () ListLongMap!1385)

(assert (=> bm!5834 (= call!5842 call!5843)))

(declare-fun b!68746 () Bool)

(declare-fun e!45049 () Bool)

(assert (=> b!68746 (= e!45049 (= (apply!73 lt!30085 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68746 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_values!2150 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!68746 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun bm!5835 () Bool)

(declare-fun call!5841 () ListLongMap!1385)

(assert (=> bm!5835 (= call!5841 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68747 () Bool)

(declare-fun e!45047 () Bool)

(assert (=> b!68747 (= e!45047 e!45049)))

(declare-fun res!36956 () Bool)

(assert (=> b!68747 (=> (not res!36956) (not e!45049))))

(assert (=> b!68747 (= res!36956 (contains!710 lt!30085 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68747 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68748 () Bool)

(declare-fun e!45053 () ListLongMap!1385)

(assert (=> b!68748 (= e!45053 call!5842)))

(declare-fun b!68749 () Bool)

(declare-fun e!45048 () ListLongMap!1385)

(declare-fun call!5839 () ListLongMap!1385)

(assert (=> b!68749 (= e!45048 call!5839)))

(declare-fun b!68750 () Bool)

(declare-fun res!36951 () Bool)

(declare-fun e!45051 () Bool)

(assert (=> b!68750 (=> (not res!36951) (not e!45051))))

(declare-fun e!45046 () Bool)

(assert (=> b!68750 (= res!36951 e!45046)))

(declare-fun c!9747 () Bool)

(assert (=> b!68750 (= c!9747 (not (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!14835 () Bool)

(assert (=> d!14835 e!45051))

(declare-fun res!36955 () Bool)

(assert (=> d!14835 (=> (not res!36955) (not e!45051))))

(assert (=> d!14835 (= res!36955 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun lt!30078 () ListLongMap!1385)

(assert (=> d!14835 (= lt!30085 lt!30078)))

(declare-fun lt!30081 () Unit!1909)

(assert (=> d!14835 (= lt!30081 e!45045)))

(declare-fun c!9749 () Bool)

(declare-fun e!45050 () Bool)

(assert (=> d!14835 (= c!9749 e!45050)))

(declare-fun res!36953 () Bool)

(assert (=> d!14835 (=> (not res!36953) (not e!45050))))

(assert (=> d!14835 (= res!36953 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45054 () ListLongMap!1385)

(assert (=> d!14835 (= lt!30078 e!45054)))

(declare-fun c!9745 () Bool)

(assert (=> d!14835 (= c!9745 (and (not (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14835 (validMask!0 (mask!6112 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!14835 (= (getCurrentListMap!406 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))) lt!30085)))

(declare-fun bm!5836 () Bool)

(declare-fun call!5840 () Bool)

(assert (=> bm!5836 (= call!5840 (contains!710 lt!30085 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5837 () Bool)

(declare-fun call!5837 () Bool)

(assert (=> bm!5837 (= call!5837 (contains!710 lt!30085 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68751 () Bool)

(declare-fun e!45052 () Bool)

(assert (=> b!68751 (= e!45052 e!45043)))

(declare-fun res!36950 () Bool)

(assert (=> b!68751 (= res!36950 call!5840)))

(assert (=> b!68751 (=> (not res!36950) (not e!45043))))

(declare-fun bm!5838 () Bool)

(declare-fun call!5838 () ListLongMap!1385)

(assert (=> bm!5838 (= call!5839 call!5838)))

(declare-fun b!68752 () Bool)

(declare-fun e!45055 () Bool)

(assert (=> b!68752 (= e!45055 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68753 () Bool)

(assert (=> b!68753 (= e!45054 e!45053)))

(declare-fun c!9748 () Bool)

(assert (=> b!68753 (= c!9748 (and (not (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68754 () Bool)

(assert (=> b!68754 (= e!45054 (+!88 call!5843 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68755 () Bool)

(assert (=> b!68755 (= e!45050 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68756 () Bool)

(declare-fun e!45044 () Bool)

(assert (=> b!68756 (= e!45044 (= (apply!73 lt!30085 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68757 () Bool)

(assert (=> b!68757 (= e!45051 e!45052)))

(declare-fun c!9750 () Bool)

(assert (=> b!68757 (= c!9750 (not (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68758 () Bool)

(declare-fun c!9746 () Bool)

(assert (=> b!68758 (= c!9746 (and (not (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68758 (= e!45053 e!45048)))

(declare-fun bm!5839 () Bool)

(assert (=> bm!5839 (= call!5843 (+!88 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839)) (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!68759 () Bool)

(assert (=> b!68759 (= e!45052 (not call!5840))))

(declare-fun b!68760 () Bool)

(assert (=> b!68760 (= e!45046 (not call!5837))))

(declare-fun b!68761 () Bool)

(declare-fun res!36954 () Bool)

(assert (=> b!68761 (=> (not res!36954) (not e!45051))))

(assert (=> b!68761 (= res!36954 e!45047)))

(declare-fun res!36952 () Bool)

(assert (=> b!68761 (=> res!36952 e!45047)))

(assert (=> b!68761 (= res!36952 (not e!45055))))

(declare-fun res!36949 () Bool)

(assert (=> b!68761 (=> (not res!36949) (not e!45055))))

(assert (=> b!68761 (= res!36949 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68762 () Bool)

(assert (=> b!68762 (= e!45046 e!45044)))

(declare-fun res!36948 () Bool)

(assert (=> b!68762 (= res!36948 call!5837)))

(assert (=> b!68762 (=> (not res!36948) (not e!45044))))

(declare-fun b!68763 () Bool)

(assert (=> b!68763 (= e!45048 call!5842)))

(declare-fun bm!5840 () Bool)

(assert (=> bm!5840 (= call!5838 call!5841)))

(declare-fun b!68764 () Bool)

(declare-fun Unit!1920 () Unit!1909)

(assert (=> b!68764 (= e!45045 Unit!1920)))

(assert (= (and d!14835 c!9745) b!68754))

(assert (= (and d!14835 (not c!9745)) b!68753))

(assert (= (and b!68753 c!9748) b!68748))

(assert (= (and b!68753 (not c!9748)) b!68758))

(assert (= (and b!68758 c!9746) b!68763))

(assert (= (and b!68758 (not c!9746)) b!68749))

(assert (= (or b!68763 b!68749) bm!5838))

(assert (= (or b!68748 bm!5838) bm!5840))

(assert (= (or b!68748 b!68763) bm!5834))

(assert (= (or b!68754 bm!5840) bm!5835))

(assert (= (or b!68754 bm!5834) bm!5839))

(assert (= (and d!14835 res!36953) b!68755))

(assert (= (and d!14835 c!9749) b!68745))

(assert (= (and d!14835 (not c!9749)) b!68764))

(assert (= (and d!14835 res!36955) b!68761))

(assert (= (and b!68761 res!36949) b!68752))

(assert (= (and b!68761 (not res!36952)) b!68747))

(assert (= (and b!68747 res!36956) b!68746))

(assert (= (and b!68761 res!36954) b!68750))

(assert (= (and b!68750 c!9747) b!68762))

(assert (= (and b!68750 (not c!9747)) b!68760))

(assert (= (and b!68762 res!36948) b!68756))

(assert (= (or b!68762 b!68760) bm!5837))

(assert (= (and b!68750 res!36951) b!68757))

(assert (= (and b!68757 c!9750) b!68751))

(assert (= (and b!68757 (not c!9750)) b!68759))

(assert (= (and b!68751 res!36950) b!68744))

(assert (= (or b!68751 b!68759) bm!5836))

(declare-fun b_lambda!3085 () Bool)

(assert (=> (not b_lambda!3085) (not b!68746)))

(assert (=> b!68746 t!4951))

(declare-fun b_and!4237 () Bool)

(assert (= b_and!4217 (and (=> t!4951 result!2595) b_and!4237)))

(assert (=> b!68746 t!4953))

(declare-fun b_and!4239 () Bool)

(assert (= b_and!4219 (and (=> t!4953 result!2599) b_and!4239)))

(assert (=> b!68752 m!64501))

(assert (=> b!68752 m!64501))

(declare-fun m!64589 () Bool)

(assert (=> b!68752 m!64589))

(declare-fun m!64591 () Bool)

(assert (=> b!68756 m!64591))

(declare-fun m!64593 () Bool)

(assert (=> b!68754 m!64593))

(declare-fun m!64595 () Bool)

(assert (=> b!68746 m!64595))

(assert (=> b!68746 m!64501))

(assert (=> b!68746 m!64501))

(declare-fun m!64597 () Bool)

(assert (=> b!68746 m!64597))

(assert (=> b!68746 m!64595))

(assert (=> b!68746 m!64379))

(declare-fun m!64599 () Bool)

(assert (=> b!68746 m!64599))

(assert (=> b!68746 m!64379))

(declare-fun m!64601 () Bool)

(assert (=> bm!5837 m!64601))

(assert (=> d!14835 m!64349))

(declare-fun m!64603 () Bool)

(assert (=> b!68745 m!64603))

(declare-fun m!64605 () Bool)

(assert (=> b!68745 m!64605))

(declare-fun m!64607 () Bool)

(assert (=> b!68745 m!64607))

(declare-fun m!64609 () Bool)

(assert (=> b!68745 m!64609))

(declare-fun m!64611 () Bool)

(assert (=> b!68745 m!64611))

(declare-fun m!64613 () Bool)

(assert (=> b!68745 m!64613))

(declare-fun m!64615 () Bool)

(assert (=> b!68745 m!64615))

(assert (=> b!68745 m!64607))

(declare-fun m!64617 () Bool)

(assert (=> b!68745 m!64617))

(assert (=> b!68745 m!64609))

(declare-fun m!64619 () Bool)

(assert (=> b!68745 m!64619))

(declare-fun m!64621 () Bool)

(assert (=> b!68745 m!64621))

(declare-fun m!64623 () Bool)

(assert (=> b!68745 m!64623))

(assert (=> b!68745 m!64603))

(declare-fun m!64625 () Bool)

(assert (=> b!68745 m!64625))

(declare-fun m!64627 () Bool)

(assert (=> b!68745 m!64627))

(assert (=> b!68745 m!64619))

(assert (=> b!68745 m!64361))

(assert (=> b!68745 m!64501))

(declare-fun m!64629 () Bool)

(assert (=> b!68745 m!64629))

(declare-fun m!64631 () Bool)

(assert (=> b!68745 m!64631))

(assert (=> bm!5835 m!64361))

(assert (=> b!68747 m!64501))

(assert (=> b!68747 m!64501))

(declare-fun m!64633 () Bool)

(assert (=> b!68747 m!64633))

(assert (=> b!68755 m!64501))

(assert (=> b!68755 m!64501))

(assert (=> b!68755 m!64589))

(declare-fun m!64635 () Bool)

(assert (=> bm!5839 m!64635))

(declare-fun m!64637 () Bool)

(assert (=> b!68744 m!64637))

(declare-fun m!64639 () Bool)

(assert (=> bm!5836 m!64639))

(assert (=> b!68380 d!14835))

(declare-fun d!14837 () Bool)

(assert (=> d!14837 (= (array_inv!1127 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvsge (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!68389 d!14837))

(declare-fun d!14839 () Bool)

(assert (=> d!14839 (= (array_inv!1128 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvsge (size!2069 (_values!2150 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!68389 d!14839))

(declare-fun b!68789 () Bool)

(declare-fun e!45075 () Bool)

(declare-fun e!45070 () Bool)

(assert (=> b!68789 (= e!45075 e!45070)))

(declare-fun c!9759 () Bool)

(declare-fun e!45074 () Bool)

(assert (=> b!68789 (= c!9759 e!45074)))

(declare-fun res!36966 () Bool)

(assert (=> b!68789 (=> (not res!36966) (not e!45074))))

(assert (=> b!68789 (= res!36966 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68790 () Bool)

(declare-fun e!45072 () Bool)

(declare-fun lt!30109 () ListLongMap!1385)

(declare-fun isEmpty!316 (ListLongMap!1385) Bool)

(assert (=> b!68790 (= e!45072 (isEmpty!316 lt!30109))))

(declare-fun bm!5843 () Bool)

(declare-fun call!5846 () ListLongMap!1385)

(assert (=> bm!5843 (= call!5846 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68791 () Bool)

(declare-fun res!36967 () Bool)

(assert (=> b!68791 (=> (not res!36967) (not e!45075))))

(assert (=> b!68791 (= res!36967 (not (contains!710 lt!30109 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68792 () Bool)

(declare-fun lt!30112 () Unit!1909)

(declare-fun lt!30111 () Unit!1909)

(assert (=> b!68792 (= lt!30112 lt!30111)))

(declare-fun lt!30110 () ListLongMap!1385)

(declare-fun lt!30107 () (_ BitVec 64))

(declare-fun lt!30108 () (_ BitVec 64))

(declare-fun lt!30113 () V!2921)

(assert (=> b!68792 (not (contains!710 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)) lt!30107))))

(declare-fun addStillNotContains!24 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1909)

(assert (=> b!68792 (= lt!30111 (addStillNotContains!24 lt!30110 lt!30108 lt!30113 lt!30107))))

(assert (=> b!68792 (= lt!30107 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!68792 (= lt!30113 (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!68792 (= lt!30108 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!68792 (= lt!30110 call!5846)))

(declare-fun e!45076 () ListLongMap!1385)

(assert (=> b!68792 (= e!45076 (+!88 call!5846 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!68793 () Bool)

(assert (=> b!68793 (= e!45076 call!5846)))

(declare-fun b!68795 () Bool)

(assert (=> b!68795 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!68795 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_values!2150 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45073 () Bool)

(assert (=> b!68795 (= e!45073 (= (apply!73 lt!30109 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!68796 () Bool)

(declare-fun e!45071 () ListLongMap!1385)

(assert (=> b!68796 (= e!45071 (ListLongMap!1386 Nil!1456))))

(declare-fun b!68797 () Bool)

(assert (=> b!68797 (= e!45070 e!45073)))

(assert (=> b!68797 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun res!36968 () Bool)

(assert (=> b!68797 (= res!36968 (contains!710 lt!30109 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68797 (=> (not res!36968) (not e!45073))))

(declare-fun b!68798 () Bool)

(assert (=> b!68798 (= e!45074 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68798 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!68799 () Bool)

(assert (=> b!68799 (= e!45071 e!45076)))

(declare-fun c!9762 () Bool)

(assert (=> b!68799 (= c!9762 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68800 () Bool)

(assert (=> b!68800 (= e!45072 (= lt!30109 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68794 () Bool)

(assert (=> b!68794 (= e!45070 e!45072)))

(declare-fun c!9761 () Bool)

(assert (=> b!68794 (= c!9761 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun d!14841 () Bool)

(assert (=> d!14841 e!45075))

(declare-fun res!36965 () Bool)

(assert (=> d!14841 (=> (not res!36965) (not e!45075))))

(assert (=> d!14841 (= res!36965 (not (contains!710 lt!30109 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14841 (= lt!30109 e!45071)))

(declare-fun c!9760 () Bool)

(assert (=> d!14841 (= c!9760 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!14841 (validMask!0 (mask!6112 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!14841 (= (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))) lt!30109)))

(assert (= (and d!14841 c!9760) b!68796))

(assert (= (and d!14841 (not c!9760)) b!68799))

(assert (= (and b!68799 c!9762) b!68792))

(assert (= (and b!68799 (not c!9762)) b!68793))

(assert (= (or b!68792 b!68793) bm!5843))

(assert (= (and d!14841 res!36965) b!68791))

(assert (= (and b!68791 res!36967) b!68789))

(assert (= (and b!68789 res!36966) b!68798))

(assert (= (and b!68789 c!9759) b!68797))

(assert (= (and b!68789 (not c!9759)) b!68794))

(assert (= (and b!68797 res!36968) b!68795))

(assert (= (and b!68794 c!9761) b!68800))

(assert (= (and b!68794 (not c!9761)) b!68790))

(declare-fun b_lambda!3087 () Bool)

(assert (=> (not b_lambda!3087) (not b!68792)))

(assert (=> b!68792 t!4951))

(declare-fun b_and!4241 () Bool)

(assert (= b_and!4237 (and (=> t!4951 result!2595) b_and!4241)))

(assert (=> b!68792 t!4953))

(declare-fun b_and!4243 () Bool)

(assert (= b_and!4239 (and (=> t!4953 result!2599) b_and!4243)))

(declare-fun b_lambda!3089 () Bool)

(assert (=> (not b_lambda!3089) (not b!68795)))

(assert (=> b!68795 t!4951))

(declare-fun b_and!4245 () Bool)

(assert (= b_and!4241 (and (=> t!4951 result!2595) b_and!4245)))

(assert (=> b!68795 t!4953))

(declare-fun b_and!4247 () Bool)

(assert (= b_and!4243 (and (=> t!4953 result!2599) b_and!4247)))

(declare-fun m!64641 () Bool)

(assert (=> b!68800 m!64641))

(declare-fun m!64643 () Bool)

(assert (=> b!68790 m!64643))

(assert (=> b!68797 m!64501))

(assert (=> b!68797 m!64501))

(declare-fun m!64645 () Bool)

(assert (=> b!68797 m!64645))

(assert (=> bm!5843 m!64641))

(assert (=> b!68798 m!64501))

(assert (=> b!68798 m!64501))

(assert (=> b!68798 m!64589))

(assert (=> b!68795 m!64501))

(declare-fun m!64647 () Bool)

(assert (=> b!68795 m!64647))

(assert (=> b!68795 m!64595))

(assert (=> b!68795 m!64501))

(assert (=> b!68795 m!64379))

(assert (=> b!68795 m!64595))

(assert (=> b!68795 m!64379))

(assert (=> b!68795 m!64599))

(assert (=> b!68792 m!64595))

(declare-fun m!64649 () Bool)

(assert (=> b!68792 m!64649))

(declare-fun m!64651 () Bool)

(assert (=> b!68792 m!64651))

(assert (=> b!68792 m!64651))

(declare-fun m!64653 () Bool)

(assert (=> b!68792 m!64653))

(assert (=> b!68792 m!64501))

(declare-fun m!64655 () Bool)

(assert (=> b!68792 m!64655))

(assert (=> b!68792 m!64379))

(assert (=> b!68792 m!64595))

(assert (=> b!68792 m!64379))

(assert (=> b!68792 m!64599))

(assert (=> b!68799 m!64501))

(assert (=> b!68799 m!64501))

(assert (=> b!68799 m!64589))

(declare-fun m!64657 () Bool)

(assert (=> b!68791 m!64657))

(declare-fun m!64659 () Bool)

(assert (=> d!14841 m!64659))

(assert (=> d!14841 m!64349))

(assert (=> b!68398 d!14841))

(declare-fun d!14843 () Bool)

(declare-fun e!45079 () Bool)

(assert (=> d!14843 e!45079))

(declare-fun res!36973 () Bool)

(assert (=> d!14843 (=> (not res!36973) (not e!45079))))

(declare-fun lt!30124 () ListLongMap!1385)

(assert (=> d!14843 (= res!36973 (contains!710 lt!30124 (_1!1057 lt!29850)))))

(declare-fun lt!30122 () List!1459)

(assert (=> d!14843 (= lt!30124 (ListLongMap!1386 lt!30122))))

(declare-fun lt!30125 () Unit!1909)

(declare-fun lt!30123 () Unit!1909)

(assert (=> d!14843 (= lt!30125 lt!30123)))

(assert (=> d!14843 (= (getValueByKey!132 lt!30122 (_1!1057 lt!29850)) (Some!137 (_2!1057 lt!29850)))))

(declare-fun lemmaContainsTupThenGetReturnValue!49 (List!1459 (_ BitVec 64) V!2921) Unit!1909)

(assert (=> d!14843 (= lt!30123 (lemmaContainsTupThenGetReturnValue!49 lt!30122 (_1!1057 lt!29850) (_2!1057 lt!29850)))))

(declare-fun insertStrictlySorted!52 (List!1459 (_ BitVec 64) V!2921) List!1459)

(assert (=> d!14843 (= lt!30122 (insertStrictlySorted!52 (toList!708 (+!88 lt!29844 lt!29846)) (_1!1057 lt!29850) (_2!1057 lt!29850)))))

(assert (=> d!14843 (= (+!88 (+!88 lt!29844 lt!29846) lt!29850) lt!30124)))

(declare-fun b!68805 () Bool)

(declare-fun res!36974 () Bool)

(assert (=> b!68805 (=> (not res!36974) (not e!45079))))

(assert (=> b!68805 (= res!36974 (= (getValueByKey!132 (toList!708 lt!30124) (_1!1057 lt!29850)) (Some!137 (_2!1057 lt!29850))))))

(declare-fun b!68806 () Bool)

(declare-fun contains!713 (List!1459 tuple2!2092) Bool)

(assert (=> b!68806 (= e!45079 (contains!713 (toList!708 lt!30124) lt!29850))))

(assert (= (and d!14843 res!36973) b!68805))

(assert (= (and b!68805 res!36974) b!68806))

(declare-fun m!64661 () Bool)

(assert (=> d!14843 m!64661))

(declare-fun m!64663 () Bool)

(assert (=> d!14843 m!64663))

(declare-fun m!64665 () Bool)

(assert (=> d!14843 m!64665))

(declare-fun m!64667 () Bool)

(assert (=> d!14843 m!64667))

(declare-fun m!64669 () Bool)

(assert (=> b!68805 m!64669))

(declare-fun m!64671 () Bool)

(assert (=> b!68806 m!64671))

(assert (=> b!68398 d!14843))

(declare-fun d!14845 () Bool)

(declare-fun e!45080 () Bool)

(assert (=> d!14845 e!45080))

(declare-fun res!36975 () Bool)

(assert (=> d!14845 (=> (not res!36975) (not e!45080))))

(declare-fun lt!30128 () ListLongMap!1385)

(assert (=> d!14845 (= res!36975 (contains!710 lt!30128 (_1!1057 lt!29846)))))

(declare-fun lt!30126 () List!1459)

(assert (=> d!14845 (= lt!30128 (ListLongMap!1386 lt!30126))))

(declare-fun lt!30129 () Unit!1909)

(declare-fun lt!30127 () Unit!1909)

(assert (=> d!14845 (= lt!30129 lt!30127)))

(assert (=> d!14845 (= (getValueByKey!132 lt!30126 (_1!1057 lt!29846)) (Some!137 (_2!1057 lt!29846)))))

(assert (=> d!14845 (= lt!30127 (lemmaContainsTupThenGetReturnValue!49 lt!30126 (_1!1057 lt!29846) (_2!1057 lt!29846)))))

(assert (=> d!14845 (= lt!30126 (insertStrictlySorted!52 (toList!708 (+!88 lt!29844 lt!29850)) (_1!1057 lt!29846) (_2!1057 lt!29846)))))

(assert (=> d!14845 (= (+!88 (+!88 lt!29844 lt!29850) lt!29846) lt!30128)))

(declare-fun b!68807 () Bool)

(declare-fun res!36976 () Bool)

(assert (=> b!68807 (=> (not res!36976) (not e!45080))))

(assert (=> b!68807 (= res!36976 (= (getValueByKey!132 (toList!708 lt!30128) (_1!1057 lt!29846)) (Some!137 (_2!1057 lt!29846))))))

(declare-fun b!68808 () Bool)

(assert (=> b!68808 (= e!45080 (contains!713 (toList!708 lt!30128) lt!29846))))

(assert (= (and d!14845 res!36975) b!68807))

(assert (= (and b!68807 res!36976) b!68808))

(declare-fun m!64673 () Bool)

(assert (=> d!14845 m!64673))

(declare-fun m!64675 () Bool)

(assert (=> d!14845 m!64675))

(declare-fun m!64677 () Bool)

(assert (=> d!14845 m!64677))

(declare-fun m!64679 () Bool)

(assert (=> d!14845 m!64679))

(declare-fun m!64681 () Bool)

(assert (=> b!68807 m!64681))

(declare-fun m!64683 () Bool)

(assert (=> b!68808 m!64683))

(assert (=> b!68398 d!14845))

(declare-fun d!14847 () Bool)

(declare-fun e!45081 () Bool)

(assert (=> d!14847 e!45081))

(declare-fun res!36977 () Bool)

(assert (=> d!14847 (=> (not res!36977) (not e!45081))))

(declare-fun lt!30132 () ListLongMap!1385)

(assert (=> d!14847 (= res!36977 (contains!710 lt!30132 (_1!1057 lt!29846)))))

(declare-fun lt!30130 () List!1459)

(assert (=> d!14847 (= lt!30132 (ListLongMap!1386 lt!30130))))

(declare-fun lt!30133 () Unit!1909)

(declare-fun lt!30131 () Unit!1909)

(assert (=> d!14847 (= lt!30133 lt!30131)))

(assert (=> d!14847 (= (getValueByKey!132 lt!30130 (_1!1057 lt!29846)) (Some!137 (_2!1057 lt!29846)))))

(assert (=> d!14847 (= lt!30131 (lemmaContainsTupThenGetReturnValue!49 lt!30130 (_1!1057 lt!29846) (_2!1057 lt!29846)))))

(assert (=> d!14847 (= lt!30130 (insertStrictlySorted!52 (toList!708 lt!29844) (_1!1057 lt!29846) (_2!1057 lt!29846)))))

(assert (=> d!14847 (= (+!88 lt!29844 lt!29846) lt!30132)))

(declare-fun b!68809 () Bool)

(declare-fun res!36978 () Bool)

(assert (=> b!68809 (=> (not res!36978) (not e!45081))))

(assert (=> b!68809 (= res!36978 (= (getValueByKey!132 (toList!708 lt!30132) (_1!1057 lt!29846)) (Some!137 (_2!1057 lt!29846))))))

(declare-fun b!68810 () Bool)

(assert (=> b!68810 (= e!45081 (contains!713 (toList!708 lt!30132) lt!29846))))

(assert (= (and d!14847 res!36977) b!68809))

(assert (= (and b!68809 res!36978) b!68810))

(declare-fun m!64685 () Bool)

(assert (=> d!14847 m!64685))

(declare-fun m!64687 () Bool)

(assert (=> d!14847 m!64687))

(declare-fun m!64689 () Bool)

(assert (=> d!14847 m!64689))

(declare-fun m!64691 () Bool)

(assert (=> d!14847 m!64691))

(declare-fun m!64693 () Bool)

(assert (=> b!68809 m!64693))

(declare-fun m!64695 () Bool)

(assert (=> b!68810 m!64695))

(assert (=> b!68398 d!14847))

(declare-fun d!14849 () Bool)

(assert (=> d!14849 (= (validMask!0 (mask!6112 (v!2494 (underlying!253 thiss!992)))) (and (or (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000001111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000011111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000001111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000011111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000001111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000011111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000001111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000011111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000001111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000011111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000001111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000011111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000111111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000001111111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000011111111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000111111111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000001111111111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000011111111111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000111111111111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00001111111111111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00011111111111111111111111111111) (= (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!68398 d!14849))

(declare-fun d!14851 () Bool)

(declare-fun e!45082 () Bool)

(assert (=> d!14851 e!45082))

(declare-fun res!36979 () Bool)

(assert (=> d!14851 (=> (not res!36979) (not e!45082))))

(declare-fun lt!30136 () ListLongMap!1385)

(assert (=> d!14851 (= res!36979 (contains!710 lt!30136 (_1!1057 lt!29850)))))

(declare-fun lt!30134 () List!1459)

(assert (=> d!14851 (= lt!30136 (ListLongMap!1386 lt!30134))))

(declare-fun lt!30137 () Unit!1909)

(declare-fun lt!30135 () Unit!1909)

(assert (=> d!14851 (= lt!30137 lt!30135)))

(assert (=> d!14851 (= (getValueByKey!132 lt!30134 (_1!1057 lt!29850)) (Some!137 (_2!1057 lt!29850)))))

(assert (=> d!14851 (= lt!30135 (lemmaContainsTupThenGetReturnValue!49 lt!30134 (_1!1057 lt!29850) (_2!1057 lt!29850)))))

(assert (=> d!14851 (= lt!30134 (insertStrictlySorted!52 (toList!708 lt!29844) (_1!1057 lt!29850) (_2!1057 lt!29850)))))

(assert (=> d!14851 (= (+!88 lt!29844 lt!29850) lt!30136)))

(declare-fun b!68811 () Bool)

(declare-fun res!36980 () Bool)

(assert (=> b!68811 (=> (not res!36980) (not e!45082))))

(assert (=> b!68811 (= res!36980 (= (getValueByKey!132 (toList!708 lt!30136) (_1!1057 lt!29850)) (Some!137 (_2!1057 lt!29850))))))

(declare-fun b!68812 () Bool)

(assert (=> b!68812 (= e!45082 (contains!713 (toList!708 lt!30136) lt!29850))))

(assert (= (and d!14851 res!36979) b!68811))

(assert (= (and b!68811 res!36980) b!68812))

(declare-fun m!64697 () Bool)

(assert (=> d!14851 m!64697))

(declare-fun m!64699 () Bool)

(assert (=> d!14851 m!64699))

(declare-fun m!64701 () Bool)

(assert (=> d!14851 m!64701))

(declare-fun m!64703 () Bool)

(assert (=> d!14851 m!64703))

(declare-fun m!64705 () Bool)

(assert (=> b!68811 m!64705))

(declare-fun m!64707 () Bool)

(assert (=> b!68812 m!64707))

(assert (=> b!68398 d!14851))

(declare-fun d!14853 () Bool)

(assert (=> d!14853 (= (+!88 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (+!88 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(declare-fun lt!30140 () Unit!1909)

(declare-fun choose!388 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64) V!2921) Unit!1909)

(assert (=> d!14853 (= lt!30140 (choose!388 lt!29844 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))

(assert (=> d!14853 (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14853 (= (addCommutativeForDiffKeys!8 lt!29844 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) lt!30140)))

(declare-fun bs!2967 () Bool)

(assert (= bs!2967 d!14853))

(assert (=> bs!2967 m!64329))

(declare-fun m!64709 () Bool)

(assert (=> bs!2967 m!64709))

(declare-fun m!64711 () Bool)

(assert (=> bs!2967 m!64711))

(declare-fun m!64713 () Bool)

(assert (=> bs!2967 m!64713))

(declare-fun m!64715 () Bool)

(assert (=> bs!2967 m!64715))

(declare-fun m!64717 () Bool)

(assert (=> bs!2967 m!64717))

(assert (=> bs!2967 m!64711))

(assert (=> bs!2967 m!64715))

(assert (=> b!68398 d!14853))

(declare-fun b!68820 () Bool)

(declare-fun e!45088 () Bool)

(assert (=> b!68820 (= e!45088 tp_is_empty!2455)))

(declare-fun mapNonEmpty!3111 () Bool)

(declare-fun mapRes!3111 () Bool)

(declare-fun tp!8421 () Bool)

(declare-fun e!45087 () Bool)

(assert (=> mapNonEmpty!3111 (= mapRes!3111 (and tp!8421 e!45087))))

(declare-fun mapKey!3111 () (_ BitVec 32))

(declare-fun mapRest!3111 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapValue!3111 () ValueCell!884)

(assert (=> mapNonEmpty!3111 (= mapRest!3096 (store mapRest!3111 mapKey!3111 mapValue!3111))))

(declare-fun mapIsEmpty!3111 () Bool)

(assert (=> mapIsEmpty!3111 mapRes!3111))

(declare-fun b!68819 () Bool)

(assert (=> b!68819 (= e!45087 tp_is_empty!2455)))

(declare-fun condMapEmpty!3111 () Bool)

(declare-fun mapDefault!3111 () ValueCell!884)

(assert (=> mapNonEmpty!3096 (= condMapEmpty!3111 (= mapRest!3096 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3111)))))

(assert (=> mapNonEmpty!3096 (= tp!8392 (and e!45088 mapRes!3111))))

(assert (= (and mapNonEmpty!3096 condMapEmpty!3111) mapIsEmpty!3111))

(assert (= (and mapNonEmpty!3096 (not condMapEmpty!3111)) mapNonEmpty!3111))

(assert (= (and mapNonEmpty!3111 ((_ is ValueCellFull!884) mapValue!3111)) b!68819))

(assert (= (and mapNonEmpty!3096 ((_ is ValueCellFull!884) mapDefault!3111)) b!68820))

(declare-fun m!64719 () Bool)

(assert (=> mapNonEmpty!3111 m!64719))

(declare-fun b!68822 () Bool)

(declare-fun e!45090 () Bool)

(assert (=> b!68822 (= e!45090 tp_is_empty!2455)))

(declare-fun mapNonEmpty!3112 () Bool)

(declare-fun mapRes!3112 () Bool)

(declare-fun tp!8422 () Bool)

(declare-fun e!45089 () Bool)

(assert (=> mapNonEmpty!3112 (= mapRes!3112 (and tp!8422 e!45089))))

(declare-fun mapRest!3112 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapValue!3112 () ValueCell!884)

(declare-fun mapKey!3112 () (_ BitVec 32))

(assert (=> mapNonEmpty!3112 (= mapRest!3095 (store mapRest!3112 mapKey!3112 mapValue!3112))))

(declare-fun mapIsEmpty!3112 () Bool)

(assert (=> mapIsEmpty!3112 mapRes!3112))

(declare-fun b!68821 () Bool)

(assert (=> b!68821 (= e!45089 tp_is_empty!2455)))

(declare-fun condMapEmpty!3112 () Bool)

(declare-fun mapDefault!3112 () ValueCell!884)

(assert (=> mapNonEmpty!3095 (= condMapEmpty!3112 (= mapRest!3095 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3112)))))

(assert (=> mapNonEmpty!3095 (= tp!8391 (and e!45090 mapRes!3112))))

(assert (= (and mapNonEmpty!3095 condMapEmpty!3112) mapIsEmpty!3112))

(assert (= (and mapNonEmpty!3095 (not condMapEmpty!3112)) mapNonEmpty!3112))

(assert (= (and mapNonEmpty!3112 ((_ is ValueCellFull!884) mapValue!3112)) b!68821))

(assert (= (and mapNonEmpty!3095 ((_ is ValueCellFull!884) mapDefault!3112)) b!68822))

(declare-fun m!64721 () Bool)

(assert (=> mapNonEmpty!3112 m!64721))

(declare-fun b_lambda!3091 () Bool)

(assert (= b_lambda!3085 (or (and b!68389 b_free!2077) (and b!68379 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))) b_lambda!3091)))

(declare-fun b_lambda!3093 () Bool)

(assert (= b_lambda!3087 (or (and b!68389 b_free!2077) (and b!68379 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))) b_lambda!3093)))

(declare-fun b_lambda!3095 () Bool)

(assert (= b_lambda!3089 (or (and b!68389 b_free!2077) (and b!68379 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))) b_lambda!3095)))

(check-sat (not bm!5803) (not bm!5819) (not bm!5813) (not b!68557) (not b!68564) b_and!4247 (not b!68669) (not b!68807) (not b!68756) (not b!68674) (not bm!5839) (not bm!5805) (not b!68547) tp_is_empty!2455 (not b!68692) (not b!68747) (not b!68701) (not b!68549) (not bm!5816) (not b_lambda!3083) (not b!68811) (not mapNonEmpty!3111) (not bm!5817) (not b_next!2077) (not d!14853) (not b!68792) (not bm!5814) (not b!68676) (not b!68754) (not b!68699) (not d!14809) (not d!14835) (not b!68556) (not b!68658) (not b!68795) (not b!68798) (not b!68809) (not b!68808) (not b!68810) (not bm!5810) (not b!68530) (not d!14847) (not b_lambda!3095) (not b!68689) (not d!14851) (not d!14813) (not b_next!2079) (not b!68700) (not b!68566) (not d!14817) (not b!68791) (not b_lambda!3093) (not b!68746) (not b!68755) (not b!68805) (not d!14833) (not d!14845) (not b!68799) (not d!14831) (not bm!5798) (not bm!5836) (not bm!5835) (not b!68790) (not d!14823) (not d!14841) (not bm!5837) (not b_lambda!3091) (not bm!5809) (not b!68745) b_and!4245 (not d!14843) (not bm!5747) (not b!68812) (not bm!5812) (not mapNonEmpty!3112) (not d!14811) (not b!68675) (not b!68535) (not bm!5804) (not b!68806) (not b!68752) (not b!68550) (not b!68744) (not bm!5843) (not b!68800) (not b!68797) (not d!14825))
(check-sat b_and!4245 b_and!4247 (not b_next!2077) (not b_next!2079))
(get-model)

(declare-fun d!14855 () Bool)

(declare-fun e!45093 () Bool)

(assert (=> d!14855 e!45093))

(declare-fun res!36983 () Bool)

(assert (=> d!14855 (=> (not res!36983) (not e!45093))))

(assert (=> d!14855 (= res!36983 (and (bvsge (index!3042 lt!30008) #b00000000000000000000000000000000) (bvslt (index!3042 lt!30008) (size!2068 (_keys!3811 newMap!16)))))))

(declare-fun lt!30143 () Unit!1909)

(declare-fun choose!389 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) Int) Unit!1909)

(assert (=> d!14855 (= lt!30143 (choose!389 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3042 lt!30008) (defaultEntry!2167 newMap!16)))))

(assert (=> d!14855 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!14855 (= (lemmaValidKeyInArrayIsInListMap!82 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3042 lt!30008) (defaultEntry!2167 newMap!16)) lt!30143)))

(declare-fun b!68825 () Bool)

(assert (=> b!68825 (= e!45093 (contains!710 (getCurrentListMap!406 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))))))

(assert (= (and d!14855 res!36983) b!68825))

(declare-fun m!64723 () Bool)

(assert (=> d!14855 m!64723))

(declare-fun m!64725 () Bool)

(assert (=> d!14855 m!64725))

(declare-fun m!64727 () Bool)

(assert (=> b!68825 m!64727))

(assert (=> b!68825 m!64533))

(assert (=> b!68825 m!64727))

(assert (=> b!68825 m!64533))

(declare-fun m!64729 () Bool)

(assert (=> b!68825 m!64729))

(assert (=> b!68669 d!14855))

(declare-fun d!14857 () Bool)

(declare-fun e!45096 () Bool)

(assert (=> d!14857 e!45096))

(declare-fun res!36986 () Bool)

(assert (=> d!14857 (=> (not res!36986) (not e!45096))))

(assert (=> d!14857 (= res!36986 (and (bvsge (index!3042 lt!30008) #b00000000000000000000000000000000) (bvslt (index!3042 lt!30008) (size!2069 (_values!2150 newMap!16)))))))

(declare-fun lt!30146 () Unit!1909)

(declare-fun choose!390 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) (_ BitVec 64) V!2921 Int) Unit!1909)

(assert (=> d!14857 (= lt!30146 (choose!390 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3042 lt!30008) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 (defaultEntry!2167 newMap!16)))))

(assert (=> d!14857 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!14857 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3042 lt!30008) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 (defaultEntry!2167 newMap!16)) lt!30146)))

(declare-fun b!68828 () Bool)

(assert (=> b!68828 (= e!45096 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (getCurrentListMap!406 (_keys!3811 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))))))

(assert (= (and d!14857 res!36986) b!68828))

(assert (=> d!14857 m!64329))

(declare-fun m!64731 () Bool)

(assert (=> d!14857 m!64731))

(assert (=> d!14857 m!64725))

(assert (=> b!68828 m!64525))

(assert (=> b!68828 m!64525))

(declare-fun m!64733 () Bool)

(assert (=> b!68828 m!64733))

(assert (=> b!68828 m!64545))

(declare-fun m!64735 () Bool)

(assert (=> b!68828 m!64735))

(assert (=> b!68669 d!14857))

(declare-fun d!14859 () Bool)

(declare-fun e!45098 () Bool)

(assert (=> d!14859 e!45098))

(declare-fun res!36987 () Bool)

(assert (=> d!14859 (=> res!36987 e!45098)))

(declare-fun lt!30150 () Bool)

(assert (=> d!14859 (= res!36987 (not lt!30150))))

(declare-fun lt!30149 () Bool)

(assert (=> d!14859 (= lt!30150 lt!30149)))

(declare-fun lt!30147 () Unit!1909)

(declare-fun e!45097 () Unit!1909)

(assert (=> d!14859 (= lt!30147 e!45097)))

(declare-fun c!9763 () Bool)

(assert (=> d!14859 (= c!9763 lt!30149)))

(assert (=> d!14859 (= lt!30149 (containsKey!135 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14859 (= (contains!710 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30150)))

(declare-fun b!68829 () Bool)

(declare-fun lt!30148 () Unit!1909)

(assert (=> b!68829 (= e!45097 lt!30148)))

(assert (=> b!68829 (= lt!30148 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!68829 (isDefined!84 (getValueByKey!132 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68830 () Bool)

(declare-fun Unit!1921 () Unit!1909)

(assert (=> b!68830 (= e!45097 Unit!1921)))

(declare-fun b!68831 () Bool)

(assert (=> b!68831 (= e!45098 (isDefined!84 (getValueByKey!132 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!14859 c!9763) b!68829))

(assert (= (and d!14859 (not c!9763)) b!68830))

(assert (= (and d!14859 (not res!36987)) b!68831))

(assert (=> d!14859 m!64329))

(declare-fun m!64737 () Bool)

(assert (=> d!14859 m!64737))

(assert (=> b!68829 m!64329))

(declare-fun m!64739 () Bool)

(assert (=> b!68829 m!64739))

(assert (=> b!68829 m!64329))

(declare-fun m!64741 () Bool)

(assert (=> b!68829 m!64741))

(assert (=> b!68829 m!64741))

(declare-fun m!64743 () Bool)

(assert (=> b!68829 m!64743))

(assert (=> b!68831 m!64329))

(assert (=> b!68831 m!64741))

(assert (=> b!68831 m!64741))

(assert (=> b!68831 m!64743))

(assert (=> b!68669 d!14859))

(declare-fun b!68832 () Bool)

(declare-fun e!45099 () Bool)

(declare-fun lt!30165 () ListLongMap!1385)

(assert (=> b!68832 (= e!45099 (= (apply!73 lt!30165 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!68833 () Bool)

(declare-fun e!45101 () Unit!1909)

(declare-fun lt!30162 () Unit!1909)

(assert (=> b!68833 (= e!45101 lt!30162)))

(declare-fun lt!30152 () ListLongMap!1385)

(assert (=> b!68833 (= lt!30152 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30168 () (_ BitVec 64))

(assert (=> b!68833 (= lt!30168 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30157 () (_ BitVec 64))

(assert (=> b!68833 (= lt!30157 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30156 () Unit!1909)

(assert (=> b!68833 (= lt!30156 (addStillContains!49 lt!30152 lt!30168 (zeroValue!2073 newMap!16) lt!30157))))

(assert (=> b!68833 (contains!710 (+!88 lt!30152 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16))) lt!30157)))

(declare-fun lt!30166 () Unit!1909)

(assert (=> b!68833 (= lt!30166 lt!30156)))

(declare-fun lt!30163 () ListLongMap!1385)

(assert (=> b!68833 (= lt!30163 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30153 () (_ BitVec 64))

(assert (=> b!68833 (= lt!30153 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30172 () (_ BitVec 64))

(assert (=> b!68833 (= lt!30172 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30160 () Unit!1909)

(assert (=> b!68833 (= lt!30160 (addApplyDifferent!49 lt!30163 lt!30153 (minValue!2073 newMap!16) lt!30172))))

(assert (=> b!68833 (= (apply!73 (+!88 lt!30163 (tuple2!2093 lt!30153 (minValue!2073 newMap!16))) lt!30172) (apply!73 lt!30163 lt!30172))))

(declare-fun lt!30154 () Unit!1909)

(assert (=> b!68833 (= lt!30154 lt!30160)))

(declare-fun lt!30170 () ListLongMap!1385)

(assert (=> b!68833 (= lt!30170 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30171 () (_ BitVec 64))

(assert (=> b!68833 (= lt!30171 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30164 () (_ BitVec 64))

(assert (=> b!68833 (= lt!30164 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30169 () Unit!1909)

(assert (=> b!68833 (= lt!30169 (addApplyDifferent!49 lt!30170 lt!30171 (zeroValue!2073 newMap!16) lt!30164))))

(assert (=> b!68833 (= (apply!73 (+!88 lt!30170 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16))) lt!30164) (apply!73 lt!30170 lt!30164))))

(declare-fun lt!30155 () Unit!1909)

(assert (=> b!68833 (= lt!30155 lt!30169)))

(declare-fun lt!30167 () ListLongMap!1385)

(assert (=> b!68833 (= lt!30167 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30159 () (_ BitVec 64))

(assert (=> b!68833 (= lt!30159 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30151 () (_ BitVec 64))

(assert (=> b!68833 (= lt!30151 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68833 (= lt!30162 (addApplyDifferent!49 lt!30167 lt!30159 (minValue!2073 newMap!16) lt!30151))))

(assert (=> b!68833 (= (apply!73 (+!88 lt!30167 (tuple2!2093 lt!30159 (minValue!2073 newMap!16))) lt!30151) (apply!73 lt!30167 lt!30151))))

(declare-fun bm!5844 () Bool)

(declare-fun call!5852 () ListLongMap!1385)

(declare-fun call!5853 () ListLongMap!1385)

(assert (=> bm!5844 (= call!5852 call!5853)))

(declare-fun b!68834 () Bool)

(declare-fun e!45105 () Bool)

(assert (=> b!68834 (= e!45105 (= (apply!73 lt!30165 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68834 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_values!2150 newMap!16))))))

(assert (=> b!68834 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun bm!5845 () Bool)

(declare-fun call!5851 () ListLongMap!1385)

(assert (=> bm!5845 (= call!5851 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!68835 () Bool)

(declare-fun e!45103 () Bool)

(assert (=> b!68835 (= e!45103 e!45105)))

(declare-fun res!36996 () Bool)

(assert (=> b!68835 (=> (not res!36996) (not e!45105))))

(assert (=> b!68835 (= res!36996 (contains!710 lt!30165 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68835 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!68836 () Bool)

(declare-fun e!45109 () ListLongMap!1385)

(assert (=> b!68836 (= e!45109 call!5852)))

(declare-fun b!68837 () Bool)

(declare-fun e!45104 () ListLongMap!1385)

(declare-fun call!5849 () ListLongMap!1385)

(assert (=> b!68837 (= e!45104 call!5849)))

(declare-fun b!68838 () Bool)

(declare-fun res!36991 () Bool)

(declare-fun e!45107 () Bool)

(assert (=> b!68838 (=> (not res!36991) (not e!45107))))

(declare-fun e!45102 () Bool)

(assert (=> b!68838 (= res!36991 e!45102)))

(declare-fun c!9766 () Bool)

(assert (=> b!68838 (= c!9766 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!14861 () Bool)

(assert (=> d!14861 e!45107))

(declare-fun res!36995 () Bool)

(assert (=> d!14861 (=> (not res!36995) (not e!45107))))

(assert (=> d!14861 (= res!36995 (or (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun lt!30158 () ListLongMap!1385)

(assert (=> d!14861 (= lt!30165 lt!30158)))

(declare-fun lt!30161 () Unit!1909)

(assert (=> d!14861 (= lt!30161 e!45101)))

(declare-fun c!9768 () Bool)

(declare-fun e!45106 () Bool)

(assert (=> d!14861 (= c!9768 e!45106)))

(declare-fun res!36993 () Bool)

(assert (=> d!14861 (=> (not res!36993) (not e!45106))))

(assert (=> d!14861 (= res!36993 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun e!45110 () ListLongMap!1385)

(assert (=> d!14861 (= lt!30158 e!45110)))

(declare-fun c!9764 () Bool)

(assert (=> d!14861 (= c!9764 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14861 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!14861 (= (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30165)))

(declare-fun bm!5846 () Bool)

(declare-fun call!5850 () Bool)

(assert (=> bm!5846 (= call!5850 (contains!710 lt!30165 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5847 () Bool)

(declare-fun call!5847 () Bool)

(assert (=> bm!5847 (= call!5847 (contains!710 lt!30165 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68839 () Bool)

(declare-fun e!45108 () Bool)

(assert (=> b!68839 (= e!45108 e!45099)))

(declare-fun res!36990 () Bool)

(assert (=> b!68839 (= res!36990 call!5850)))

(assert (=> b!68839 (=> (not res!36990) (not e!45099))))

(declare-fun bm!5848 () Bool)

(declare-fun call!5848 () ListLongMap!1385)

(assert (=> bm!5848 (= call!5849 call!5848)))

(declare-fun b!68840 () Bool)

(declare-fun e!45111 () Bool)

(assert (=> b!68840 (= e!45111 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68841 () Bool)

(assert (=> b!68841 (= e!45110 e!45109)))

(declare-fun c!9767 () Bool)

(assert (=> b!68841 (= c!9767 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68842 () Bool)

(assert (=> b!68842 (= e!45110 (+!88 call!5853 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!68843 () Bool)

(assert (=> b!68843 (= e!45106 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68844 () Bool)

(declare-fun e!45100 () Bool)

(assert (=> b!68844 (= e!45100 (= (apply!73 lt!30165 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun b!68845 () Bool)

(assert (=> b!68845 (= e!45107 e!45108)))

(declare-fun c!9769 () Bool)

(assert (=> b!68845 (= c!9769 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68846 () Bool)

(declare-fun c!9765 () Bool)

(assert (=> b!68846 (= c!9765 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68846 (= e!45109 e!45104)))

(declare-fun bm!5849 () Bool)

(assert (=> bm!5849 (= call!5853 (+!88 (ite c!9764 call!5851 (ite c!9767 call!5848 call!5849)) (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!68847 () Bool)

(assert (=> b!68847 (= e!45108 (not call!5850))))

(declare-fun b!68848 () Bool)

(assert (=> b!68848 (= e!45102 (not call!5847))))

(declare-fun b!68849 () Bool)

(declare-fun res!36994 () Bool)

(assert (=> b!68849 (=> (not res!36994) (not e!45107))))

(assert (=> b!68849 (= res!36994 e!45103)))

(declare-fun res!36992 () Bool)

(assert (=> b!68849 (=> res!36992 e!45103)))

(assert (=> b!68849 (= res!36992 (not e!45111))))

(declare-fun res!36989 () Bool)

(assert (=> b!68849 (=> (not res!36989) (not e!45111))))

(assert (=> b!68849 (= res!36989 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!68850 () Bool)

(assert (=> b!68850 (= e!45102 e!45100)))

(declare-fun res!36988 () Bool)

(assert (=> b!68850 (= res!36988 call!5847)))

(assert (=> b!68850 (=> (not res!36988) (not e!45100))))

(declare-fun b!68851 () Bool)

(assert (=> b!68851 (= e!45104 call!5852)))

(declare-fun bm!5850 () Bool)

(assert (=> bm!5850 (= call!5848 call!5851)))

(declare-fun b!68852 () Bool)

(declare-fun Unit!1922 () Unit!1909)

(assert (=> b!68852 (= e!45101 Unit!1922)))

(assert (= (and d!14861 c!9764) b!68842))

(assert (= (and d!14861 (not c!9764)) b!68841))

(assert (= (and b!68841 c!9767) b!68836))

(assert (= (and b!68841 (not c!9767)) b!68846))

(assert (= (and b!68846 c!9765) b!68851))

(assert (= (and b!68846 (not c!9765)) b!68837))

(assert (= (or b!68851 b!68837) bm!5848))

(assert (= (or b!68836 bm!5848) bm!5850))

(assert (= (or b!68836 b!68851) bm!5844))

(assert (= (or b!68842 bm!5850) bm!5845))

(assert (= (or b!68842 bm!5844) bm!5849))

(assert (= (and d!14861 res!36993) b!68843))

(assert (= (and d!14861 c!9768) b!68833))

(assert (= (and d!14861 (not c!9768)) b!68852))

(assert (= (and d!14861 res!36995) b!68849))

(assert (= (and b!68849 res!36989) b!68840))

(assert (= (and b!68849 (not res!36992)) b!68835))

(assert (= (and b!68835 res!36996) b!68834))

(assert (= (and b!68849 res!36994) b!68838))

(assert (= (and b!68838 c!9766) b!68850))

(assert (= (and b!68838 (not c!9766)) b!68848))

(assert (= (and b!68850 res!36988) b!68844))

(assert (= (or b!68850 b!68848) bm!5847))

(assert (= (and b!68838 res!36991) b!68845))

(assert (= (and b!68845 c!9769) b!68839))

(assert (= (and b!68845 (not c!9769)) b!68847))

(assert (= (and b!68839 res!36990) b!68832))

(assert (= (or b!68839 b!68847) bm!5846))

(declare-fun b_lambda!3097 () Bool)

(assert (=> (not b_lambda!3097) (not b!68834)))

(declare-fun tb!1481 () Bool)

(declare-fun t!4967 () Bool)

(assert (=> (and b!68389 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16)) t!4967) tb!1481))

(declare-fun result!2615 () Bool)

(assert (=> tb!1481 (= result!2615 tp_is_empty!2455)))

(assert (=> b!68834 t!4967))

(declare-fun b_and!4249 () Bool)

(assert (= b_and!4245 (and (=> t!4967 result!2615) b_and!4249)))

(declare-fun t!4969 () Bool)

(declare-fun tb!1483 () Bool)

(assert (=> (and b!68379 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 newMap!16)) t!4969) tb!1483))

(declare-fun result!2617 () Bool)

(assert (= result!2617 result!2615))

(assert (=> b!68834 t!4969))

(declare-fun b_and!4251 () Bool)

(assert (= b_and!4247 (and (=> t!4969 result!2617) b_and!4251)))

(declare-fun m!64745 () Bool)

(assert (=> b!68840 m!64745))

(assert (=> b!68840 m!64745))

(declare-fun m!64747 () Bool)

(assert (=> b!68840 m!64747))

(declare-fun m!64749 () Bool)

(assert (=> b!68844 m!64749))

(declare-fun m!64751 () Bool)

(assert (=> b!68842 m!64751))

(declare-fun m!64753 () Bool)

(assert (=> b!68834 m!64753))

(assert (=> b!68834 m!64745))

(assert (=> b!68834 m!64745))

(declare-fun m!64755 () Bool)

(assert (=> b!68834 m!64755))

(assert (=> b!68834 m!64753))

(declare-fun m!64757 () Bool)

(assert (=> b!68834 m!64757))

(declare-fun m!64759 () Bool)

(assert (=> b!68834 m!64759))

(assert (=> b!68834 m!64757))

(declare-fun m!64761 () Bool)

(assert (=> bm!5847 m!64761))

(assert (=> d!14861 m!64725))

(declare-fun m!64763 () Bool)

(assert (=> b!68833 m!64763))

(declare-fun m!64765 () Bool)

(assert (=> b!68833 m!64765))

(declare-fun m!64767 () Bool)

(assert (=> b!68833 m!64767))

(declare-fun m!64769 () Bool)

(assert (=> b!68833 m!64769))

(declare-fun m!64771 () Bool)

(assert (=> b!68833 m!64771))

(declare-fun m!64773 () Bool)

(assert (=> b!68833 m!64773))

(declare-fun m!64775 () Bool)

(assert (=> b!68833 m!64775))

(assert (=> b!68833 m!64767))

(declare-fun m!64777 () Bool)

(assert (=> b!68833 m!64777))

(assert (=> b!68833 m!64769))

(declare-fun m!64779 () Bool)

(assert (=> b!68833 m!64779))

(declare-fun m!64781 () Bool)

(assert (=> b!68833 m!64781))

(declare-fun m!64783 () Bool)

(assert (=> b!68833 m!64783))

(assert (=> b!68833 m!64763))

(declare-fun m!64785 () Bool)

(assert (=> b!68833 m!64785))

(declare-fun m!64787 () Bool)

(assert (=> b!68833 m!64787))

(assert (=> b!68833 m!64779))

(declare-fun m!64789 () Bool)

(assert (=> b!68833 m!64789))

(assert (=> b!68833 m!64745))

(declare-fun m!64791 () Bool)

(assert (=> b!68833 m!64791))

(declare-fun m!64793 () Bool)

(assert (=> b!68833 m!64793))

(assert (=> bm!5845 m!64789))

(assert (=> b!68835 m!64745))

(assert (=> b!68835 m!64745))

(declare-fun m!64795 () Bool)

(assert (=> b!68835 m!64795))

(assert (=> b!68843 m!64745))

(assert (=> b!68843 m!64745))

(assert (=> b!68843 m!64747))

(declare-fun m!64797 () Bool)

(assert (=> bm!5849 m!64797))

(declare-fun m!64799 () Bool)

(assert (=> b!68832 m!64799))

(declare-fun m!64801 () Bool)

(assert (=> bm!5846 m!64801))

(assert (=> b!68669 d!14861))

(declare-fun d!14863 () Bool)

(declare-fun e!45112 () Bool)

(assert (=> d!14863 e!45112))

(declare-fun res!36997 () Bool)

(assert (=> d!14863 (=> (not res!36997) (not e!45112))))

(declare-fun lt!30175 () ListLongMap!1385)

(assert (=> d!14863 (= res!36997 (contains!710 lt!30175 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun lt!30173 () List!1459)

(assert (=> d!14863 (= lt!30175 (ListLongMap!1386 lt!30173))))

(declare-fun lt!30176 () Unit!1909)

(declare-fun lt!30174 () Unit!1909)

(assert (=> d!14863 (= lt!30176 lt!30174)))

(assert (=> d!14863 (= (getValueByKey!132 lt!30173 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) (Some!137 (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!14863 (= lt!30174 (lemmaContainsTupThenGetReturnValue!49 lt!30173 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!14863 (= lt!30173 (insertStrictlySorted!52 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839))) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!14863 (= (+!88 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839)) (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30175)))

(declare-fun b!68853 () Bool)

(declare-fun res!36998 () Bool)

(assert (=> b!68853 (=> (not res!36998) (not e!45112))))

(assert (=> b!68853 (= res!36998 (= (getValueByKey!132 (toList!708 lt!30175) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) (Some!137 (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!68854 () Bool)

(assert (=> b!68854 (= e!45112 (contains!713 (toList!708 lt!30175) (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (= (and d!14863 res!36997) b!68853))

(assert (= (and b!68853 res!36998) b!68854))

(declare-fun m!64803 () Bool)

(assert (=> d!14863 m!64803))

(declare-fun m!64805 () Bool)

(assert (=> d!14863 m!64805))

(declare-fun m!64807 () Bool)

(assert (=> d!14863 m!64807))

(declare-fun m!64809 () Bool)

(assert (=> d!14863 m!64809))

(declare-fun m!64811 () Bool)

(assert (=> b!68853 m!64811))

(declare-fun m!64813 () Bool)

(assert (=> b!68854 m!64813))

(assert (=> bm!5839 d!14863))

(declare-fun b!68866 () Bool)

(declare-fun e!45118 () Option!138)

(assert (=> b!68866 (= e!45118 None!136)))

(declare-fun b!68865 () Bool)

(assert (=> b!68865 (= e!45118 (getValueByKey!132 (t!4954 (toList!708 lt!30128)) (_1!1057 lt!29846)))))

(declare-fun b!68863 () Bool)

(declare-fun e!45117 () Option!138)

(assert (=> b!68863 (= e!45117 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30128)))))))

(declare-fun d!14865 () Bool)

(declare-fun c!9774 () Bool)

(assert (=> d!14865 (= c!9774 (and ((_ is Cons!1455) (toList!708 lt!30128)) (= (_1!1057 (h!2040 (toList!708 lt!30128))) (_1!1057 lt!29846))))))

(assert (=> d!14865 (= (getValueByKey!132 (toList!708 lt!30128) (_1!1057 lt!29846)) e!45117)))

(declare-fun b!68864 () Bool)

(assert (=> b!68864 (= e!45117 e!45118)))

(declare-fun c!9775 () Bool)

(assert (=> b!68864 (= c!9775 (and ((_ is Cons!1455) (toList!708 lt!30128)) (not (= (_1!1057 (h!2040 (toList!708 lt!30128))) (_1!1057 lt!29846)))))))

(assert (= (and d!14865 c!9774) b!68863))

(assert (= (and d!14865 (not c!9774)) b!68864))

(assert (= (and b!68864 c!9775) b!68865))

(assert (= (and b!68864 (not c!9775)) b!68866))

(declare-fun m!64815 () Bool)

(assert (=> b!68865 m!64815))

(assert (=> b!68807 d!14865))

(declare-fun d!14867 () Bool)

(declare-fun res!37003 () Bool)

(declare-fun e!45123 () Bool)

(assert (=> d!14867 (=> res!37003 e!45123)))

(assert (=> d!14867 (= res!37003 (and ((_ is Cons!1455) (toList!708 lt!29848)) (= (_1!1057 (h!2040 (toList!708 lt!29848))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!14867 (= (containsKey!135 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45123)))

(declare-fun b!68871 () Bool)

(declare-fun e!45124 () Bool)

(assert (=> b!68871 (= e!45123 e!45124)))

(declare-fun res!37004 () Bool)

(assert (=> b!68871 (=> (not res!37004) (not e!45124))))

(assert (=> b!68871 (= res!37004 (and (or (not ((_ is Cons!1455) (toList!708 lt!29848))) (bvsle (_1!1057 (h!2040 (toList!708 lt!29848))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1455) (toList!708 lt!29848)) (bvslt (_1!1057 (h!2040 (toList!708 lt!29848))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!68872 () Bool)

(assert (=> b!68872 (= e!45124 (containsKey!135 (t!4954 (toList!708 lt!29848)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!14867 (not res!37003)) b!68871))

(assert (= (and b!68871 res!37004) b!68872))

(assert (=> b!68872 m!64329))

(declare-fun m!64817 () Bool)

(assert (=> b!68872 m!64817))

(assert (=> d!14823 d!14867))

(declare-fun b!68876 () Bool)

(declare-fun e!45126 () Option!138)

(assert (=> b!68876 (= e!45126 None!136)))

(declare-fun b!68875 () Bool)

(assert (=> b!68875 (= e!45126 (getValueByKey!132 (t!4954 (toList!708 lt!30124)) (_1!1057 lt!29850)))))

(declare-fun b!68873 () Bool)

(declare-fun e!45125 () Option!138)

(assert (=> b!68873 (= e!45125 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30124)))))))

(declare-fun d!14869 () Bool)

(declare-fun c!9776 () Bool)

(assert (=> d!14869 (= c!9776 (and ((_ is Cons!1455) (toList!708 lt!30124)) (= (_1!1057 (h!2040 (toList!708 lt!30124))) (_1!1057 lt!29850))))))

(assert (=> d!14869 (= (getValueByKey!132 (toList!708 lt!30124) (_1!1057 lt!29850)) e!45125)))

(declare-fun b!68874 () Bool)

(assert (=> b!68874 (= e!45125 e!45126)))

(declare-fun c!9777 () Bool)

(assert (=> b!68874 (= c!9777 (and ((_ is Cons!1455) (toList!708 lt!30124)) (not (= (_1!1057 (h!2040 (toList!708 lt!30124))) (_1!1057 lt!29850)))))))

(assert (= (and d!14869 c!9776) b!68873))

(assert (= (and d!14869 (not c!9776)) b!68874))

(assert (= (and b!68874 c!9777) b!68875))

(assert (= (and b!68874 (not c!9777)) b!68876))

(declare-fun m!64819 () Bool)

(assert (=> b!68875 m!64819))

(assert (=> b!68805 d!14869))

(assert (=> d!14835 d!14849))

(assert (=> d!14811 d!14815))

(declare-fun d!14871 () Bool)

(assert (=> d!14871 (not (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!14871 true))

(declare-fun _$68!49 () Unit!1909)

(assert (=> d!14871 (= (choose!68 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457)) _$68!49)))

(declare-fun bs!2968 () Bool)

(assert (= bs!2968 d!14871))

(assert (=> bs!2968 m!64329))

(assert (=> bs!2968 m!64373))

(assert (=> d!14811 d!14871))

(declare-fun b!68885 () Bool)

(declare-fun e!45135 () Bool)

(declare-fun call!5856 () Bool)

(assert (=> b!68885 (= e!45135 call!5856)))

(declare-fun b!68886 () Bool)

(declare-fun e!45133 () Bool)

(declare-fun e!45134 () Bool)

(assert (=> b!68886 (= e!45133 e!45134)))

(declare-fun c!9780 () Bool)

(assert (=> b!68886 (= c!9780 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!14873 () Bool)

(declare-fun res!37010 () Bool)

(assert (=> d!14873 (=> res!37010 e!45133)))

(assert (=> d!14873 (= res!37010 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!14873 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3811 newMap!16) (mask!6112 newMap!16)) e!45133)))

(declare-fun bm!5853 () Bool)

(assert (=> bm!5853 (= call!5856 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun b!68887 () Bool)

(assert (=> b!68887 (= e!45134 call!5856)))

(declare-fun b!68888 () Bool)

(assert (=> b!68888 (= e!45134 e!45135)))

(declare-fun lt!30184 () (_ BitVec 64))

(assert (=> b!68888 (= lt!30184 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30185 () Unit!1909)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3837 (_ BitVec 64) (_ BitVec 32)) Unit!1909)

(assert (=> b!68888 (= lt!30185 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3811 newMap!16) lt!30184 #b00000000000000000000000000000000))))

(assert (=> b!68888 (arrayContainsKey!0 (_keys!3811 newMap!16) lt!30184 #b00000000000000000000000000000000)))

(declare-fun lt!30183 () Unit!1909)

(assert (=> b!68888 (= lt!30183 lt!30185)))

(declare-fun res!37009 () Bool)

(assert (=> b!68888 (= res!37009 (= (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) (_keys!3811 newMap!16) (mask!6112 newMap!16)) (Found!228 #b00000000000000000000000000000000)))))

(assert (=> b!68888 (=> (not res!37009) (not e!45135))))

(assert (= (and d!14873 (not res!37010)) b!68886))

(assert (= (and b!68886 c!9780) b!68888))

(assert (= (and b!68886 (not c!9780)) b!68887))

(assert (= (and b!68888 res!37009) b!68885))

(assert (= (or b!68885 b!68887) bm!5853))

(assert (=> b!68886 m!64745))

(assert (=> b!68886 m!64745))

(assert (=> b!68886 m!64747))

(declare-fun m!64821 () Bool)

(assert (=> bm!5853 m!64821))

(assert (=> b!68888 m!64745))

(declare-fun m!64823 () Bool)

(assert (=> b!68888 m!64823))

(declare-fun m!64825 () Bool)

(assert (=> b!68888 m!64825))

(assert (=> b!68888 m!64745))

(declare-fun m!64827 () Bool)

(assert (=> b!68888 m!64827))

(assert (=> b!68700 d!14873))

(declare-fun d!14875 () Bool)

(declare-fun e!45136 () Bool)

(assert (=> d!14875 e!45136))

(declare-fun res!37011 () Bool)

(assert (=> d!14875 (=> (not res!37011) (not e!45136))))

(declare-fun lt!30188 () ListLongMap!1385)

(assert (=> d!14875 (= res!37011 (contains!710 lt!30188 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30186 () List!1459)

(assert (=> d!14875 (= lt!30188 (ListLongMap!1386 lt!30186))))

(declare-fun lt!30189 () Unit!1909)

(declare-fun lt!30187 () Unit!1909)

(assert (=> d!14875 (= lt!30189 lt!30187)))

(assert (=> d!14875 (= (getValueByKey!132 lt!30186 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14875 (= lt!30187 (lemmaContainsTupThenGetReturnValue!49 lt!30186 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14875 (= lt!30186 (insertStrictlySorted!52 (toList!708 lt!30087) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14875 (= (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30188)))

(declare-fun b!68889 () Bool)

(declare-fun res!37012 () Bool)

(assert (=> b!68889 (=> (not res!37012) (not e!45136))))

(assert (=> b!68889 (= res!37012 (= (getValueByKey!132 (toList!708 lt!30188) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!68890 () Bool)

(assert (=> b!68890 (= e!45136 (contains!713 (toList!708 lt!30188) (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14875 res!37011) b!68889))

(assert (= (and b!68889 res!37012) b!68890))

(declare-fun m!64829 () Bool)

(assert (=> d!14875 m!64829))

(declare-fun m!64831 () Bool)

(assert (=> d!14875 m!64831))

(declare-fun m!64833 () Bool)

(assert (=> d!14875 m!64833))

(declare-fun m!64835 () Bool)

(assert (=> d!14875 m!64835))

(declare-fun m!64837 () Bool)

(assert (=> b!68889 m!64837))

(declare-fun m!64839 () Bool)

(assert (=> b!68890 m!64839))

(assert (=> b!68745 d!14875))

(declare-fun d!14877 () Bool)

(declare-fun get!1134 (Option!138) V!2921)

(assert (=> d!14877 (= (apply!73 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30092) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30092)))))

(declare-fun bs!2969 () Bool)

(assert (= bs!2969 d!14877))

(declare-fun m!64841 () Bool)

(assert (=> bs!2969 m!64841))

(assert (=> bs!2969 m!64841))

(declare-fun m!64843 () Bool)

(assert (=> bs!2969 m!64843))

(assert (=> b!68745 d!14877))

(declare-fun d!14879 () Bool)

(assert (=> d!14879 (= (apply!73 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30084) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30084)))))

(declare-fun bs!2970 () Bool)

(assert (= bs!2970 d!14879))

(declare-fun m!64845 () Bool)

(assert (=> bs!2970 m!64845))

(assert (=> bs!2970 m!64845))

(declare-fun m!64847 () Bool)

(assert (=> bs!2970 m!64847))

(assert (=> b!68745 d!14879))

(declare-fun d!14881 () Bool)

(assert (=> d!14881 (= (apply!73 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30071) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30071)))))

(declare-fun bs!2971 () Bool)

(assert (= bs!2971 d!14881))

(declare-fun m!64849 () Bool)

(assert (=> bs!2971 m!64849))

(assert (=> bs!2971 m!64849))

(declare-fun m!64851 () Bool)

(assert (=> bs!2971 m!64851))

(assert (=> b!68745 d!14881))

(declare-fun d!14883 () Bool)

(declare-fun e!45137 () Bool)

(assert (=> d!14883 e!45137))

(declare-fun res!37013 () Bool)

(assert (=> d!14883 (=> (not res!37013) (not e!45137))))

(declare-fun lt!30192 () ListLongMap!1385)

(assert (=> d!14883 (= res!37013 (contains!710 lt!30192 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30190 () List!1459)

(assert (=> d!14883 (= lt!30192 (ListLongMap!1386 lt!30190))))

(declare-fun lt!30193 () Unit!1909)

(declare-fun lt!30191 () Unit!1909)

(assert (=> d!14883 (= lt!30193 lt!30191)))

(assert (=> d!14883 (= (getValueByKey!132 lt!30190 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14883 (= lt!30191 (lemmaContainsTupThenGetReturnValue!49 lt!30190 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14883 (= lt!30190 (insertStrictlySorted!52 (toList!708 lt!30090) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14883 (= (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30192)))

(declare-fun b!68891 () Bool)

(declare-fun res!37014 () Bool)

(assert (=> b!68891 (=> (not res!37014) (not e!45137))))

(assert (=> b!68891 (= res!37014 (= (getValueByKey!132 (toList!708 lt!30192) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!68892 () Bool)

(assert (=> b!68892 (= e!45137 (contains!713 (toList!708 lt!30192) (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14883 res!37013) b!68891))

(assert (= (and b!68891 res!37014) b!68892))

(declare-fun m!64853 () Bool)

(assert (=> d!14883 m!64853))

(declare-fun m!64855 () Bool)

(assert (=> d!14883 m!64855))

(declare-fun m!64857 () Bool)

(assert (=> d!14883 m!64857))

(declare-fun m!64859 () Bool)

(assert (=> d!14883 m!64859))

(declare-fun m!64861 () Bool)

(assert (=> b!68891 m!64861))

(declare-fun m!64863 () Bool)

(assert (=> b!68892 m!64863))

(assert (=> b!68745 d!14883))

(declare-fun d!14885 () Bool)

(assert (=> d!14885 (= (apply!73 lt!30090 lt!30084) (get!1134 (getValueByKey!132 (toList!708 lt!30090) lt!30084)))))

(declare-fun bs!2972 () Bool)

(assert (= bs!2972 d!14885))

(declare-fun m!64865 () Bool)

(assert (=> bs!2972 m!64865))

(assert (=> bs!2972 m!64865))

(declare-fun m!64867 () Bool)

(assert (=> bs!2972 m!64867))

(assert (=> b!68745 d!14885))

(declare-fun d!14887 () Bool)

(declare-fun e!45139 () Bool)

(assert (=> d!14887 e!45139))

(declare-fun res!37015 () Bool)

(assert (=> d!14887 (=> res!37015 e!45139)))

(declare-fun lt!30197 () Bool)

(assert (=> d!14887 (= res!37015 (not lt!30197))))

(declare-fun lt!30196 () Bool)

(assert (=> d!14887 (= lt!30197 lt!30196)))

(declare-fun lt!30194 () Unit!1909)

(declare-fun e!45138 () Unit!1909)

(assert (=> d!14887 (= lt!30194 e!45138)))

(declare-fun c!9781 () Bool)

(assert (=> d!14887 (= c!9781 lt!30196)))

(assert (=> d!14887 (= lt!30196 (containsKey!135 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077))))

(assert (=> d!14887 (= (contains!710 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30077) lt!30197)))

(declare-fun b!68893 () Bool)

(declare-fun lt!30195 () Unit!1909)

(assert (=> b!68893 (= e!45138 lt!30195)))

(assert (=> b!68893 (= lt!30195 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077))))

(assert (=> b!68893 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077))))

(declare-fun b!68894 () Bool)

(declare-fun Unit!1923 () Unit!1909)

(assert (=> b!68894 (= e!45138 Unit!1923)))

(declare-fun b!68895 () Bool)

(assert (=> b!68895 (= e!45139 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077)))))

(assert (= (and d!14887 c!9781) b!68893))

(assert (= (and d!14887 (not c!9781)) b!68894))

(assert (= (and d!14887 (not res!37015)) b!68895))

(declare-fun m!64869 () Bool)

(assert (=> d!14887 m!64869))

(declare-fun m!64871 () Bool)

(assert (=> b!68893 m!64871))

(declare-fun m!64873 () Bool)

(assert (=> b!68893 m!64873))

(assert (=> b!68893 m!64873))

(declare-fun m!64875 () Bool)

(assert (=> b!68893 m!64875))

(assert (=> b!68895 m!64873))

(assert (=> b!68895 m!64873))

(assert (=> b!68895 m!64875))

(assert (=> b!68745 d!14887))

(declare-fun d!14889 () Bool)

(assert (=> d!14889 (contains!710 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30077)))

(declare-fun lt!30200 () Unit!1909)

(declare-fun choose!391 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1909)

(assert (=> d!14889 (= lt!30200 (choose!391 lt!30072 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30077))))

(assert (=> d!14889 (contains!710 lt!30072 lt!30077)))

(assert (=> d!14889 (= (addStillContains!49 lt!30072 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30077) lt!30200)))

(declare-fun bs!2973 () Bool)

(assert (= bs!2973 d!14889))

(assert (=> bs!2973 m!64607))

(assert (=> bs!2973 m!64607))

(assert (=> bs!2973 m!64617))

(declare-fun m!64877 () Bool)

(assert (=> bs!2973 m!64877))

(declare-fun m!64879 () Bool)

(assert (=> bs!2973 m!64879))

(assert (=> b!68745 d!14889))

(declare-fun d!14891 () Bool)

(assert (=> d!14891 (= (apply!73 lt!30083 lt!30092) (get!1134 (getValueByKey!132 (toList!708 lt!30083) lt!30092)))))

(declare-fun bs!2974 () Bool)

(assert (= bs!2974 d!14891))

(declare-fun m!64881 () Bool)

(assert (=> bs!2974 m!64881))

(assert (=> bs!2974 m!64881))

(declare-fun m!64883 () Bool)

(assert (=> bs!2974 m!64883))

(assert (=> b!68745 d!14891))

(declare-fun d!14893 () Bool)

(assert (=> d!14893 (= (apply!73 lt!30087 lt!30071) (get!1134 (getValueByKey!132 (toList!708 lt!30087) lt!30071)))))

(declare-fun bs!2975 () Bool)

(assert (= bs!2975 d!14893))

(declare-fun m!64885 () Bool)

(assert (=> bs!2975 m!64885))

(assert (=> bs!2975 m!64885))

(declare-fun m!64887 () Bool)

(assert (=> bs!2975 m!64887))

(assert (=> b!68745 d!14893))

(declare-fun d!14895 () Bool)

(assert (=> d!14895 (= (apply!73 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30084) (apply!73 lt!30090 lt!30084))))

(declare-fun lt!30203 () Unit!1909)

(declare-fun choose!392 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1909)

(assert (=> d!14895 (= lt!30203 (choose!392 lt!30090 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30084))))

(declare-fun e!45142 () Bool)

(assert (=> d!14895 e!45142))

(declare-fun res!37018 () Bool)

(assert (=> d!14895 (=> (not res!37018) (not e!45142))))

(assert (=> d!14895 (= res!37018 (contains!710 lt!30090 lt!30084))))

(assert (=> d!14895 (= (addApplyDifferent!49 lt!30090 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30084) lt!30203)))

(declare-fun b!68900 () Bool)

(assert (=> b!68900 (= e!45142 (not (= lt!30084 lt!30091)))))

(assert (= (and d!14895 res!37018) b!68900))

(declare-fun m!64889 () Bool)

(assert (=> d!14895 m!64889))

(assert (=> d!14895 m!64609))

(assert (=> d!14895 m!64611))

(assert (=> d!14895 m!64609))

(declare-fun m!64891 () Bool)

(assert (=> d!14895 m!64891))

(assert (=> d!14895 m!64613))

(assert (=> b!68745 d!14895))

(declare-fun d!14897 () Bool)

(assert (=> d!14897 (= (apply!73 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30071) (apply!73 lt!30087 lt!30071))))

(declare-fun lt!30204 () Unit!1909)

(assert (=> d!14897 (= lt!30204 (choose!392 lt!30087 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30071))))

(declare-fun e!45143 () Bool)

(assert (=> d!14897 e!45143))

(declare-fun res!37019 () Bool)

(assert (=> d!14897 (=> (not res!37019) (not e!45143))))

(assert (=> d!14897 (= res!37019 (contains!710 lt!30087 lt!30071))))

(assert (=> d!14897 (= (addApplyDifferent!49 lt!30087 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30071) lt!30204)))

(declare-fun b!68901 () Bool)

(assert (=> b!68901 (= e!45143 (not (= lt!30071 lt!30079)))))

(assert (= (and d!14897 res!37019) b!68901))

(declare-fun m!64893 () Bool)

(assert (=> d!14897 m!64893))

(assert (=> d!14897 m!64603))

(assert (=> d!14897 m!64605))

(assert (=> d!14897 m!64603))

(declare-fun m!64895 () Bool)

(assert (=> d!14897 m!64895))

(assert (=> d!14897 m!64627))

(assert (=> b!68745 d!14897))

(declare-fun d!14899 () Bool)

(assert (=> d!14899 (= (apply!73 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30092) (apply!73 lt!30083 lt!30092))))

(declare-fun lt!30205 () Unit!1909)

(assert (=> d!14899 (= lt!30205 (choose!392 lt!30083 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30092))))

(declare-fun e!45144 () Bool)

(assert (=> d!14899 e!45144))

(declare-fun res!37020 () Bool)

(assert (=> d!14899 (=> (not res!37020) (not e!45144))))

(assert (=> d!14899 (= res!37020 (contains!710 lt!30083 lt!30092))))

(assert (=> d!14899 (= (addApplyDifferent!49 lt!30083 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30092) lt!30205)))

(declare-fun b!68902 () Bool)

(assert (=> b!68902 (= e!45144 (not (= lt!30092 lt!30073)))))

(assert (= (and d!14899 res!37020) b!68902))

(declare-fun m!64897 () Bool)

(assert (=> d!14899 m!64897))

(assert (=> d!14899 m!64619))

(assert (=> d!14899 m!64621))

(assert (=> d!14899 m!64619))

(declare-fun m!64899 () Bool)

(assert (=> d!14899 m!64899))

(assert (=> d!14899 m!64631))

(assert (=> b!68745 d!14899))

(declare-fun d!14901 () Bool)

(declare-fun e!45145 () Bool)

(assert (=> d!14901 e!45145))

(declare-fun res!37021 () Bool)

(assert (=> d!14901 (=> (not res!37021) (not e!45145))))

(declare-fun lt!30208 () ListLongMap!1385)

(assert (=> d!14901 (= res!37021 (contains!710 lt!30208 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30206 () List!1459)

(assert (=> d!14901 (= lt!30208 (ListLongMap!1386 lt!30206))))

(declare-fun lt!30209 () Unit!1909)

(declare-fun lt!30207 () Unit!1909)

(assert (=> d!14901 (= lt!30209 lt!30207)))

(assert (=> d!14901 (= (getValueByKey!132 lt!30206 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14901 (= lt!30207 (lemmaContainsTupThenGetReturnValue!49 lt!30206 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14901 (= lt!30206 (insertStrictlySorted!52 (toList!708 lt!30072) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14901 (= (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30208)))

(declare-fun b!68903 () Bool)

(declare-fun res!37022 () Bool)

(assert (=> b!68903 (=> (not res!37022) (not e!45145))))

(assert (=> b!68903 (= res!37022 (= (getValueByKey!132 (toList!708 lt!30208) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!68904 () Bool)

(assert (=> b!68904 (= e!45145 (contains!713 (toList!708 lt!30208) (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14901 res!37021) b!68903))

(assert (= (and b!68903 res!37022) b!68904))

(declare-fun m!64901 () Bool)

(assert (=> d!14901 m!64901))

(declare-fun m!64903 () Bool)

(assert (=> d!14901 m!64903))

(declare-fun m!64905 () Bool)

(assert (=> d!14901 m!64905))

(declare-fun m!64907 () Bool)

(assert (=> d!14901 m!64907))

(declare-fun m!64909 () Bool)

(assert (=> b!68903 m!64909))

(declare-fun m!64911 () Bool)

(assert (=> b!68904 m!64911))

(assert (=> b!68745 d!14901))

(declare-fun d!14903 () Bool)

(declare-fun e!45146 () Bool)

(assert (=> d!14903 e!45146))

(declare-fun res!37023 () Bool)

(assert (=> d!14903 (=> (not res!37023) (not e!45146))))

(declare-fun lt!30212 () ListLongMap!1385)

(assert (=> d!14903 (= res!37023 (contains!710 lt!30212 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30210 () List!1459)

(assert (=> d!14903 (= lt!30212 (ListLongMap!1386 lt!30210))))

(declare-fun lt!30213 () Unit!1909)

(declare-fun lt!30211 () Unit!1909)

(assert (=> d!14903 (= lt!30213 lt!30211)))

(assert (=> d!14903 (= (getValueByKey!132 lt!30210 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14903 (= lt!30211 (lemmaContainsTupThenGetReturnValue!49 lt!30210 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14903 (= lt!30210 (insertStrictlySorted!52 (toList!708 lt!30083) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14903 (= (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30212)))

(declare-fun b!68905 () Bool)

(declare-fun res!37024 () Bool)

(assert (=> b!68905 (=> (not res!37024) (not e!45146))))

(assert (=> b!68905 (= res!37024 (= (getValueByKey!132 (toList!708 lt!30212) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!68906 () Bool)

(assert (=> b!68906 (= e!45146 (contains!713 (toList!708 lt!30212) (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14903 res!37023) b!68905))

(assert (= (and b!68905 res!37024) b!68906))

(declare-fun m!64913 () Bool)

(assert (=> d!14903 m!64913))

(declare-fun m!64915 () Bool)

(assert (=> d!14903 m!64915))

(declare-fun m!64917 () Bool)

(assert (=> d!14903 m!64917))

(declare-fun m!64919 () Bool)

(assert (=> d!14903 m!64919))

(declare-fun m!64921 () Bool)

(assert (=> b!68905 m!64921))

(declare-fun m!64923 () Bool)

(assert (=> b!68906 m!64923))

(assert (=> b!68745 d!14903))

(assert (=> b!68745 d!14841))

(declare-fun b!68910 () Bool)

(declare-fun e!45148 () Option!138)

(assert (=> b!68910 (= e!45148 None!136)))

(declare-fun b!68909 () Bool)

(assert (=> b!68909 (= e!45148 (getValueByKey!132 (t!4954 (toList!708 lt!30132)) (_1!1057 lt!29846)))))

(declare-fun b!68907 () Bool)

(declare-fun e!45147 () Option!138)

(assert (=> b!68907 (= e!45147 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30132)))))))

(declare-fun d!14905 () Bool)

(declare-fun c!9782 () Bool)

(assert (=> d!14905 (= c!9782 (and ((_ is Cons!1455) (toList!708 lt!30132)) (= (_1!1057 (h!2040 (toList!708 lt!30132))) (_1!1057 lt!29846))))))

(assert (=> d!14905 (= (getValueByKey!132 (toList!708 lt!30132) (_1!1057 lt!29846)) e!45147)))

(declare-fun b!68908 () Bool)

(assert (=> b!68908 (= e!45147 e!45148)))

(declare-fun c!9783 () Bool)

(assert (=> b!68908 (= c!9783 (and ((_ is Cons!1455) (toList!708 lt!30132)) (not (= (_1!1057 (h!2040 (toList!708 lt!30132))) (_1!1057 lt!29846)))))))

(assert (= (and d!14905 c!9782) b!68907))

(assert (= (and d!14905 (not c!9782)) b!68908))

(assert (= (and b!68908 c!9783) b!68909))

(assert (= (and b!68908 (not c!9783)) b!68910))

(declare-fun m!64925 () Bool)

(assert (=> b!68909 m!64925))

(assert (=> b!68809 d!14905))

(declare-fun b!68921 () Bool)

(declare-fun res!37035 () Bool)

(declare-fun e!45151 () Bool)

(assert (=> b!68921 (=> (not res!37035) (not e!45151))))

(declare-fun size!2074 (LongMapFixedSize!676) (_ BitVec 32))

(assert (=> b!68921 (= res!37035 (= (size!2074 newMap!16) (bvadd (_size!387 newMap!16) (bvsdiv (bvadd (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!68920 () Bool)

(declare-fun res!37036 () Bool)

(assert (=> b!68920 (=> (not res!37036) (not e!45151))))

(assert (=> b!68920 (= res!37036 (bvsge (size!2074 newMap!16) (_size!387 newMap!16)))))

(declare-fun d!14907 () Bool)

(declare-fun res!37033 () Bool)

(assert (=> d!14907 (=> (not res!37033) (not e!45151))))

(assert (=> d!14907 (= res!37033 (validMask!0 (mask!6112 newMap!16)))))

(assert (=> d!14907 (= (simpleValid!49 newMap!16) e!45151)))

(declare-fun b!68919 () Bool)

(declare-fun res!37034 () Bool)

(assert (=> b!68919 (=> (not res!37034) (not e!45151))))

(assert (=> b!68919 (= res!37034 (and (= (size!2069 (_values!2150 newMap!16)) (bvadd (mask!6112 newMap!16) #b00000000000000000000000000000001)) (= (size!2068 (_keys!3811 newMap!16)) (size!2069 (_values!2150 newMap!16))) (bvsge (_size!387 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!387 newMap!16) (bvadd (mask!6112 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!68922 () Bool)

(assert (=> b!68922 (= e!45151 (and (bvsge (extraKeys!2034 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2034 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!387 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!14907 res!37033) b!68919))

(assert (= (and b!68919 res!37034) b!68920))

(assert (= (and b!68920 res!37036) b!68921))

(assert (= (and b!68921 res!37035) b!68922))

(declare-fun m!64927 () Bool)

(assert (=> b!68921 m!64927))

(assert (=> b!68920 m!64927))

(assert (=> d!14907 m!64725))

(assert (=> d!14831 d!14907))

(declare-fun lt!30218 () SeekEntryResult!228)

(declare-fun c!9788 () Bool)

(declare-fun call!5861 () Bool)

(declare-fun bm!5858 () Bool)

(assert (=> bm!5858 (= call!5861 (inRange!0 (ite c!9788 (index!3041 lt!30218) (index!3044 lt!30218)) (mask!6112 newMap!16)))))

(declare-fun b!68939 () Bool)

(declare-fun e!45160 () Bool)

(declare-fun call!5862 () Bool)

(assert (=> b!68939 (= e!45160 (not call!5862))))

(declare-fun b!68940 () Bool)

(declare-fun e!45161 () Bool)

(declare-fun e!45163 () Bool)

(assert (=> b!68940 (= e!45161 e!45163)))

(declare-fun c!9789 () Bool)

(assert (=> b!68940 (= c!9789 ((_ is MissingVacant!228) lt!30218))))

(declare-fun b!68941 () Bool)

(declare-fun res!37047 () Bool)

(declare-fun e!45162 () Bool)

(assert (=> b!68941 (=> (not res!37047) (not e!45162))))

(assert (=> b!68941 (= res!37047 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3044 lt!30218)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68941 (and (bvsge (index!3044 lt!30218) #b00000000000000000000000000000000) (bvslt (index!3044 lt!30218) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun bm!5859 () Bool)

(assert (=> bm!5859 (= call!5862 (arrayContainsKey!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!68942 () Bool)

(assert (=> b!68942 (= e!45163 ((_ is Undefined!228) lt!30218))))

(declare-fun b!68943 () Bool)

(assert (=> b!68943 (= e!45161 e!45160)))

(declare-fun res!37046 () Bool)

(assert (=> b!68943 (= res!37046 call!5861)))

(assert (=> b!68943 (=> (not res!37046) (not e!45160))))

(declare-fun b!68944 () Bool)

(assert (=> b!68944 (and (bvsge (index!3041 lt!30218) #b00000000000000000000000000000000) (bvslt (index!3041 lt!30218) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun res!37045 () Bool)

(assert (=> b!68944 (= res!37045 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3041 lt!30218)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68944 (=> (not res!37045) (not e!45160))))

(declare-fun b!68946 () Bool)

(assert (=> b!68946 (= e!45162 (not call!5862))))

(declare-fun b!68945 () Bool)

(declare-fun res!37048 () Bool)

(assert (=> b!68945 (=> (not res!37048) (not e!45162))))

(assert (=> b!68945 (= res!37048 call!5861)))

(assert (=> b!68945 (= e!45163 e!45162)))

(declare-fun d!14909 () Bool)

(assert (=> d!14909 e!45161))

(assert (=> d!14909 (= c!9788 ((_ is MissingZero!228) lt!30218))))

(assert (=> d!14909 (= lt!30218 (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun lt!30219 () Unit!1909)

(declare-fun choose!393 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) Int) Unit!1909)

(assert (=> d!14909 (= lt!30219 (choose!393 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(assert (=> d!14909 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!14909 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)) lt!30219)))

(assert (= (and d!14909 c!9788) b!68943))

(assert (= (and d!14909 (not c!9788)) b!68940))

(assert (= (and b!68943 res!37046) b!68944))

(assert (= (and b!68944 res!37045) b!68939))

(assert (= (and b!68940 c!9789) b!68945))

(assert (= (and b!68940 (not c!9789)) b!68942))

(assert (= (and b!68945 res!37048) b!68941))

(assert (= (and b!68941 res!37047) b!68946))

(assert (= (or b!68943 b!68945) bm!5858))

(assert (= (or b!68939 b!68946) bm!5859))

(declare-fun m!64929 () Bool)

(assert (=> b!68944 m!64929))

(declare-fun m!64931 () Bool)

(assert (=> b!68941 m!64931))

(declare-fun m!64933 () Bool)

(assert (=> bm!5858 m!64933))

(assert (=> bm!5859 m!64329))

(assert (=> bm!5859 m!64565))

(assert (=> d!14909 m!64329))

(assert (=> d!14909 m!64537))

(assert (=> d!14909 m!64329))

(declare-fun m!64935 () Bool)

(assert (=> d!14909 m!64935))

(assert (=> d!14909 m!64725))

(assert (=> bm!5804 d!14909))

(declare-fun b!68981 () Bool)

(declare-fun e!45185 () Unit!1909)

(declare-fun Unit!1924 () Unit!1909)

(assert (=> b!68981 (= e!45185 Unit!1924)))

(declare-fun lt!30294 () Unit!1909)

(declare-fun lemmaArrayContainsKeyThenInListMap!11 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) (_ BitVec 32) Int) Unit!1909)

(assert (=> b!68981 (= lt!30294 (lemmaArrayContainsKeyThenInListMap!11 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(assert (=> b!68981 (contains!710 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))

(declare-fun lt!30307 () Unit!1909)

(assert (=> b!68981 (= lt!30307 lt!30294)))

(assert (=> b!68981 false))

(declare-fun lt!30302 () SeekEntryResult!228)

(declare-fun lt!30287 () SeekEntryResult!228)

(declare-fun bm!5868 () Bool)

(declare-fun c!9800 () Bool)

(declare-fun call!5871 () Bool)

(declare-fun c!9801 () Bool)

(assert (=> bm!5868 (= call!5871 (inRange!0 (ite c!9800 (index!3042 lt!30287) (ite c!9801 (index!3041 lt!30302) (index!3044 lt!30302))) (mask!6112 newMap!16)))))

(declare-fun bm!5869 () Bool)

(declare-fun call!5872 () Bool)

(assert (=> bm!5869 (= call!5872 call!5871)))

(declare-fun b!68982 () Bool)

(declare-fun e!45182 () Unit!1909)

(declare-fun lt!30309 () Unit!1909)

(assert (=> b!68982 (= e!45182 lt!30309)))

(assert (=> b!68982 (= lt!30309 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(declare-fun call!5874 () SeekEntryResult!228)

(assert (=> b!68982 (= lt!30302 call!5874)))

(assert (=> b!68982 (= c!9801 ((_ is MissingZero!228) lt!30302))))

(declare-fun e!45184 () Bool)

(assert (=> b!68982 e!45184))

(declare-fun b!68983 () Bool)

(declare-fun res!37070 () Bool)

(assert (=> b!68983 (= res!37070 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3044 lt!30302)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45187 () Bool)

(assert (=> b!68983 (=> (not res!37070) (not e!45187))))

(declare-fun b!68984 () Bool)

(declare-fun e!45180 () Bool)

(assert (=> b!68984 (= e!45180 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30287)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68985 () Bool)

(declare-fun res!37069 () Bool)

(declare-fun e!45186 () Bool)

(assert (=> b!68985 (=> (not res!37069) (not e!45186))))

(declare-fun lt!30308 () tuple2!2094)

(assert (=> b!68985 (= res!37069 (valid!292 (_2!1058 lt!30308)))))

(declare-fun b!68987 () Bool)

(declare-fun call!5873 () Bool)

(assert (=> b!68987 (= e!45187 (not call!5873))))

(declare-fun b!68988 () Bool)

(declare-fun c!9799 () Bool)

(assert (=> b!68988 (= c!9799 ((_ is MissingVacant!228) lt!30302))))

(declare-fun e!45183 () Bool)

(assert (=> b!68988 (= e!45184 e!45183)))

(declare-fun bm!5870 () Bool)

(assert (=> bm!5870 (= call!5874 (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun b!68989 () Bool)

(declare-fun res!37075 () Bool)

(declare-fun e!45181 () Bool)

(assert (=> b!68989 (=> (not res!37075) (not e!45181))))

(assert (=> b!68989 (= res!37075 call!5872)))

(assert (=> b!68989 (= e!45184 e!45181)))

(declare-fun b!68990 () Bool)

(assert (=> b!68990 (= e!45183 e!45187)))

(declare-fun res!37071 () Bool)

(assert (=> b!68990 (= res!37071 call!5872)))

(assert (=> b!68990 (=> (not res!37071) (not e!45187))))

(declare-fun bm!5871 () Bool)

(assert (=> bm!5871 (= call!5873 (arrayContainsKey!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!68991 () Bool)

(declare-fun Unit!1925 () Unit!1909)

(assert (=> b!68991 (= e!45185 Unit!1925)))

(declare-fun b!68986 () Bool)

(declare-fun res!37073 () Bool)

(assert (=> b!68986 (= res!37073 call!5871)))

(assert (=> b!68986 (=> (not res!37073) (not e!45180))))

(declare-fun d!14911 () Bool)

(assert (=> d!14911 e!45186))

(declare-fun res!37072 () Bool)

(assert (=> d!14911 (=> (not res!37072) (not e!45186))))

(assert (=> d!14911 (= res!37072 (_1!1058 lt!30308))))

(assert (=> d!14911 (= lt!30308 (tuple2!2095 true (LongMapFixedSize!677 (defaultEntry!2167 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd (_size!387 newMap!16) #b00000000000000000000000000000001) (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (_vacant!387 newMap!16))))))

(declare-fun lt!30286 () Unit!1909)

(declare-fun lt!30306 () Unit!1909)

(assert (=> d!14911 (= lt!30286 lt!30306)))

(declare-fun lt!30297 () array!3837)

(declare-fun lt!30298 () array!3839)

(assert (=> d!14911 (contains!710 (getCurrentListMap!406 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))))))

(assert (=> d!14911 (= lt!30306 (lemmaValidKeyInArrayIsInListMap!82 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (defaultEntry!2167 newMap!16)))))

(assert (=> d!14911 (= lt!30298 (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))))

(assert (=> d!14911 (= lt!30297 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun lt!30304 () Unit!1909)

(declare-fun lt!30293 () Unit!1909)

(assert (=> d!14911 (= lt!30304 lt!30293)))

(declare-fun lt!30292 () array!3837)

(assert (=> d!14911 (= (arrayCountValidKeys!0 lt!30292 (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (bvadd (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3837 (_ BitVec 32)) Unit!1909)

(assert (=> d!14911 (= lt!30293 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!30292 (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))))))

(assert (=> d!14911 (= lt!30292 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun lt!30285 () Unit!1909)

(declare-fun lt!30300 () Unit!1909)

(assert (=> d!14911 (= lt!30285 lt!30300)))

(declare-fun lt!30296 () array!3837)

(assert (=> d!14911 (arrayContainsKey!0 lt!30296 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!14911 (= lt!30300 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!30296 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))))))

(assert (=> d!14911 (= lt!30296 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun lt!30289 () Unit!1909)

(declare-fun lt!30280 () Unit!1909)

(assert (=> d!14911 (= lt!30289 lt!30280)))

(assert (=> d!14911 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (getCurrentListMap!406 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!11 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) (_ BitVec 64) V!2921 Int) Unit!1909)

(assert (=> d!14911 (= lt!30280 (lemmaAddValidKeyToArrayThenAddPairToListMap!11 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30301 () Unit!1909)

(declare-fun lt!30281 () Unit!1909)

(assert (=> d!14911 (= lt!30301 lt!30281)))

(assert (=> d!14911 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (mask!6112 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3837 (_ BitVec 32) (_ BitVec 32)) Unit!1909)

(assert (=> d!14911 (= lt!30281 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (mask!6112 newMap!16)))))

(declare-fun lt!30283 () Unit!1909)

(declare-fun lt!30284 () Unit!1909)

(assert (=> d!14911 (= lt!30283 lt!30284)))

(assert (=> d!14911 (= (arrayCountValidKeys!0 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3811 newMap!16) #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3837 (_ BitVec 32) (_ BitVec 64)) Unit!1909)

(assert (=> d!14911 (= lt!30284 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3811 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!30290 () Unit!1909)

(declare-fun lt!30282 () Unit!1909)

(assert (=> d!14911 (= lt!30290 lt!30282)))

(declare-fun lt!30295 () (_ BitVec 32))

(declare-fun lt!30303 () List!1460)

(assert (=> d!14911 (arrayNoDuplicates!0 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) lt!30295 lt!30303)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3837 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1460) Unit!1909)

(assert (=> d!14911 (= lt!30282 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) lt!30295 lt!30303))))

(assert (=> d!14911 (= lt!30303 Nil!1457)))

(assert (=> d!14911 (= lt!30295 #b00000000000000000000000000000000)))

(declare-fun lt!30288 () Unit!1909)

(assert (=> d!14911 (= lt!30288 e!45185)))

(declare-fun c!9798 () Bool)

(assert (=> d!14911 (= c!9798 (arrayContainsKey!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!30305 () Unit!1909)

(assert (=> d!14911 (= lt!30305 e!45182)))

(assert (=> d!14911 (= c!9800 (contains!710 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14911 (valid!292 newMap!16)))

(assert (=> d!14911 (= (updateHelperNewKey!22 newMap!16 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))) lt!30308)))

(declare-fun b!68992 () Bool)

(assert (=> b!68992 (= e!45181 (not call!5873))))

(declare-fun b!68993 () Bool)

(declare-fun Unit!1926 () Unit!1909)

(assert (=> b!68993 (= e!45182 Unit!1926)))

(declare-fun lt!30291 () Unit!1909)

(assert (=> b!68993 (= lt!30291 (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(assert (=> b!68993 (= lt!30287 call!5874)))

(declare-fun res!37074 () Bool)

(assert (=> b!68993 (= res!37074 ((_ is Found!228) lt!30287))))

(assert (=> b!68993 (=> (not res!37074) (not e!45180))))

(assert (=> b!68993 e!45180))

(declare-fun lt!30299 () Unit!1909)

(assert (=> b!68993 (= lt!30299 lt!30291)))

(assert (=> b!68993 false))

(declare-fun b!68994 () Bool)

(assert (=> b!68994 (= e!45186 (= (map!1146 (_2!1058 lt!30308)) (+!88 (map!1146 newMap!16) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!68995 () Bool)

(assert (=> b!68995 (= e!45183 ((_ is Undefined!228) lt!30302))))

(declare-fun b!68996 () Bool)

(declare-fun res!37067 () Bool)

(assert (=> b!68996 (=> (not res!37067) (not e!45181))))

(assert (=> b!68996 (= res!37067 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3041 lt!30302)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68997 () Bool)

(declare-fun res!37068 () Bool)

(assert (=> b!68997 (=> (not res!37068) (not e!45186))))

(assert (=> b!68997 (= res!37068 (contains!710 (map!1146 (_2!1058 lt!30308)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!14911 c!9800) b!68993))

(assert (= (and d!14911 (not c!9800)) b!68982))

(assert (= (and b!68993 res!37074) b!68986))

(assert (= (and b!68986 res!37073) b!68984))

(assert (= (and b!68982 c!9801) b!68989))

(assert (= (and b!68982 (not c!9801)) b!68988))

(assert (= (and b!68989 res!37075) b!68996))

(assert (= (and b!68996 res!37067) b!68992))

(assert (= (and b!68988 c!9799) b!68990))

(assert (= (and b!68988 (not c!9799)) b!68995))

(assert (= (and b!68990 res!37071) b!68983))

(assert (= (and b!68983 res!37070) b!68987))

(assert (= (or b!68989 b!68990) bm!5869))

(assert (= (or b!68992 b!68987) bm!5871))

(assert (= (or b!68986 bm!5869) bm!5868))

(assert (= (or b!68993 b!68982) bm!5870))

(assert (= (and d!14911 c!9798) b!68981))

(assert (= (and d!14911 (not c!9798)) b!68991))

(assert (= (and d!14911 res!37072) b!68985))

(assert (= (and b!68985 res!37069) b!68997))

(assert (= (and b!68997 res!37068) b!68994))

(assert (=> b!68982 m!64329))

(assert (=> b!68982 m!64571))

(declare-fun m!64937 () Bool)

(assert (=> b!68983 m!64937))

(declare-fun m!64939 () Bool)

(assert (=> b!68997 m!64939))

(assert (=> b!68997 m!64939))

(assert (=> b!68997 m!64329))

(declare-fun m!64941 () Bool)

(assert (=> b!68997 m!64941))

(assert (=> bm!5871 m!64329))

(assert (=> bm!5871 m!64565))

(assert (=> b!68981 m!64329))

(declare-fun m!64943 () Bool)

(assert (=> b!68981 m!64943))

(assert (=> b!68981 m!64525))

(assert (=> b!68981 m!64525))

(assert (=> b!68981 m!64329))

(assert (=> b!68981 m!64549))

(assert (=> b!68993 m!64329))

(assert (=> b!68993 m!64559))

(assert (=> b!68994 m!64939))

(assert (=> b!68994 m!64345))

(assert (=> b!68994 m!64345))

(declare-fun m!64945 () Bool)

(assert (=> b!68994 m!64945))

(declare-fun m!64947 () Bool)

(assert (=> b!68985 m!64947))

(declare-fun m!64949 () Bool)

(assert (=> b!68984 m!64949))

(assert (=> bm!5870 m!64329))

(assert (=> bm!5870 m!64537))

(declare-fun m!64951 () Bool)

(assert (=> b!68996 m!64951))

(assert (=> d!14911 m!64329))

(declare-fun m!64953 () Bool)

(assert (=> d!14911 m!64953))

(declare-fun m!64955 () Bool)

(assert (=> d!14911 m!64955))

(assert (=> d!14911 m!64525))

(assert (=> d!14911 m!64329))

(assert (=> d!14911 m!64549))

(assert (=> d!14911 m!64525))

(declare-fun m!64957 () Bool)

(assert (=> d!14911 m!64957))

(assert (=> d!14911 m!64957))

(assert (=> d!14911 m!64955))

(declare-fun m!64959 () Bool)

(assert (=> d!14911 m!64959))

(assert (=> d!14911 m!64329))

(declare-fun m!64961 () Bool)

(assert (=> d!14911 m!64961))

(declare-fun m!64963 () Bool)

(assert (=> d!14911 m!64963))

(declare-fun m!64965 () Bool)

(assert (=> d!14911 m!64965))

(declare-fun m!64967 () Bool)

(assert (=> d!14911 m!64967))

(assert (=> d!14911 m!64583))

(assert (=> d!14911 m!64329))

(assert (=> d!14911 m!64565))

(assert (=> d!14911 m!64525))

(assert (=> d!14911 m!64733))

(assert (=> d!14911 m!64329))

(declare-fun m!64969 () Bool)

(assert (=> d!14911 m!64969))

(declare-fun m!64971 () Bool)

(assert (=> d!14911 m!64971))

(declare-fun m!64973 () Bool)

(assert (=> d!14911 m!64973))

(declare-fun m!64975 () Bool)

(assert (=> d!14911 m!64975))

(assert (=> d!14911 m!64329))

(declare-fun m!64977 () Bool)

(assert (=> d!14911 m!64977))

(assert (=> d!14911 m!64329))

(declare-fun m!64979 () Bool)

(assert (=> d!14911 m!64979))

(assert (=> d!14911 m!64341))

(declare-fun m!64981 () Bool)

(assert (=> d!14911 m!64981))

(declare-fun m!64983 () Bool)

(assert (=> d!14911 m!64983))

(assert (=> d!14911 m!64329))

(declare-fun m!64985 () Bool)

(assert (=> d!14911 m!64985))

(declare-fun m!64987 () Bool)

(assert (=> d!14911 m!64987))

(declare-fun m!64989 () Bool)

(assert (=> bm!5868 m!64989))

(assert (=> bm!5813 d!14911))

(declare-fun d!14913 () Bool)

(assert (=> d!14913 (= (apply!73 lt!30085 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1134 (getValueByKey!132 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2976 () Bool)

(assert (= bs!2976 d!14913))

(assert (=> bs!2976 m!64501))

(declare-fun m!64991 () Bool)

(assert (=> bs!2976 m!64991))

(assert (=> bs!2976 m!64991))

(declare-fun m!64993 () Bool)

(assert (=> bs!2976 m!64993))

(assert (=> b!68746 d!14913))

(declare-fun d!14915 () Bool)

(declare-fun c!9802 () Bool)

(assert (=> d!14915 (= c!9802 ((_ is ValueCellFull!884) (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45188 () V!2921)

(assert (=> d!14915 (= (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45188)))

(declare-fun b!68998 () Bool)

(assert (=> b!68998 (= e!45188 (get!1132 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68999 () Bool)

(assert (=> b!68999 (= e!45188 (get!1133 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14915 c!9802) b!68998))

(assert (= (and d!14915 (not c!9802)) b!68999))

(assert (=> b!68998 m!64595))

(assert (=> b!68998 m!64379))

(declare-fun m!64995 () Bool)

(assert (=> b!68998 m!64995))

(assert (=> b!68999 m!64595))

(assert (=> b!68999 m!64379))

(declare-fun m!64997 () Bool)

(assert (=> b!68999 m!64997))

(assert (=> b!68746 d!14915))

(assert (=> b!68674 d!14861))

(declare-fun d!14917 () Bool)

(declare-fun e!45190 () Bool)

(assert (=> d!14917 e!45190))

(declare-fun res!37076 () Bool)

(assert (=> d!14917 (=> res!37076 e!45190)))

(declare-fun lt!30313 () Bool)

(assert (=> d!14917 (= res!37076 (not lt!30313))))

(declare-fun lt!30312 () Bool)

(assert (=> d!14917 (= lt!30313 lt!30312)))

(declare-fun lt!30310 () Unit!1909)

(declare-fun e!45189 () Unit!1909)

(assert (=> d!14917 (= lt!30310 e!45189)))

(declare-fun c!9803 () Bool)

(assert (=> d!14917 (= c!9803 lt!30312)))

(assert (=> d!14917 (= lt!30312 (containsKey!135 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14917 (= (contains!710 lt!30109 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30313)))

(declare-fun b!69000 () Bool)

(declare-fun lt!30311 () Unit!1909)

(assert (=> b!69000 (= e!45189 lt!30311)))

(assert (=> b!69000 (= lt!30311 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69000 (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69001 () Bool)

(declare-fun Unit!1927 () Unit!1909)

(assert (=> b!69001 (= e!45189 Unit!1927)))

(declare-fun b!69002 () Bool)

(assert (=> b!69002 (= e!45190 (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14917 c!9803) b!69000))

(assert (= (and d!14917 (not c!9803)) b!69001))

(assert (= (and d!14917 (not res!37076)) b!69002))

(declare-fun m!64999 () Bool)

(assert (=> d!14917 m!64999))

(declare-fun m!65001 () Bool)

(assert (=> b!69000 m!65001))

(declare-fun m!65003 () Bool)

(assert (=> b!69000 m!65003))

(assert (=> b!69000 m!65003))

(declare-fun m!65005 () Bool)

(assert (=> b!69000 m!65005))

(assert (=> b!69002 m!65003))

(assert (=> b!69002 m!65003))

(assert (=> b!69002 m!65005))

(assert (=> d!14841 d!14917))

(assert (=> d!14841 d!14849))

(declare-fun d!14919 () Bool)

(declare-fun e!45192 () Bool)

(assert (=> d!14919 e!45192))

(declare-fun res!37077 () Bool)

(assert (=> d!14919 (=> res!37077 e!45192)))

(declare-fun lt!30317 () Bool)

(assert (=> d!14919 (= res!37077 (not lt!30317))))

(declare-fun lt!30316 () Bool)

(assert (=> d!14919 (= lt!30317 lt!30316)))

(declare-fun lt!30314 () Unit!1909)

(declare-fun e!45191 () Unit!1909)

(assert (=> d!14919 (= lt!30314 e!45191)))

(declare-fun c!9804 () Bool)

(assert (=> d!14919 (= c!9804 lt!30316)))

(assert (=> d!14919 (= lt!30316 (containsKey!135 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!14919 (= (contains!710 lt!30085 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30317)))

(declare-fun b!69003 () Bool)

(declare-fun lt!30315 () Unit!1909)

(assert (=> b!69003 (= e!45191 lt!30315)))

(assert (=> b!69003 (= lt!30315 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!69003 (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69004 () Bool)

(declare-fun Unit!1928 () Unit!1909)

(assert (=> b!69004 (= e!45191 Unit!1928)))

(declare-fun b!69005 () Bool)

(assert (=> b!69005 (= e!45192 (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!14919 c!9804) b!69003))

(assert (= (and d!14919 (not c!9804)) b!69004))

(assert (= (and d!14919 (not res!37077)) b!69005))

(assert (=> d!14919 m!64501))

(declare-fun m!65007 () Bool)

(assert (=> d!14919 m!65007))

(assert (=> b!69003 m!64501))

(declare-fun m!65009 () Bool)

(assert (=> b!69003 m!65009))

(assert (=> b!69003 m!64501))

(assert (=> b!69003 m!64991))

(assert (=> b!69003 m!64991))

(declare-fun m!65011 () Bool)

(assert (=> b!69003 m!65011))

(assert (=> b!69005 m!64501))

(assert (=> b!69005 m!64991))

(assert (=> b!69005 m!64991))

(assert (=> b!69005 m!65011))

(assert (=> b!68747 d!14919))

(declare-fun d!14921 () Bool)

(declare-fun e!45194 () Bool)

(assert (=> d!14921 e!45194))

(declare-fun res!37078 () Bool)

(assert (=> d!14921 (=> res!37078 e!45194)))

(declare-fun lt!30321 () Bool)

(assert (=> d!14921 (= res!37078 (not lt!30321))))

(declare-fun lt!30320 () Bool)

(assert (=> d!14921 (= lt!30321 lt!30320)))

(declare-fun lt!30318 () Unit!1909)

(declare-fun e!45193 () Unit!1909)

(assert (=> d!14921 (= lt!30318 e!45193)))

(declare-fun c!9805 () Bool)

(assert (=> d!14921 (= c!9805 lt!30320)))

(assert (=> d!14921 (= lt!30320 (containsKey!135 (toList!708 lt!30124) (_1!1057 lt!29850)))))

(assert (=> d!14921 (= (contains!710 lt!30124 (_1!1057 lt!29850)) lt!30321)))

(declare-fun b!69006 () Bool)

(declare-fun lt!30319 () Unit!1909)

(assert (=> b!69006 (= e!45193 lt!30319)))

(assert (=> b!69006 (= lt!30319 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30124) (_1!1057 lt!29850)))))

(assert (=> b!69006 (isDefined!84 (getValueByKey!132 (toList!708 lt!30124) (_1!1057 lt!29850)))))

(declare-fun b!69007 () Bool)

(declare-fun Unit!1929 () Unit!1909)

(assert (=> b!69007 (= e!45193 Unit!1929)))

(declare-fun b!69008 () Bool)

(assert (=> b!69008 (= e!45194 (isDefined!84 (getValueByKey!132 (toList!708 lt!30124) (_1!1057 lt!29850))))))

(assert (= (and d!14921 c!9805) b!69006))

(assert (= (and d!14921 (not c!9805)) b!69007))

(assert (= (and d!14921 (not res!37078)) b!69008))

(declare-fun m!65013 () Bool)

(assert (=> d!14921 m!65013))

(declare-fun m!65015 () Bool)

(assert (=> b!69006 m!65015))

(assert (=> b!69006 m!64669))

(assert (=> b!69006 m!64669))

(declare-fun m!65017 () Bool)

(assert (=> b!69006 m!65017))

(assert (=> b!69008 m!64669))

(assert (=> b!69008 m!64669))

(assert (=> b!69008 m!65017))

(assert (=> d!14843 d!14921))

(declare-fun b!69012 () Bool)

(declare-fun e!45196 () Option!138)

(assert (=> b!69012 (= e!45196 None!136)))

(declare-fun b!69011 () Bool)

(assert (=> b!69011 (= e!45196 (getValueByKey!132 (t!4954 lt!30122) (_1!1057 lt!29850)))))

(declare-fun b!69009 () Bool)

(declare-fun e!45195 () Option!138)

(assert (=> b!69009 (= e!45195 (Some!137 (_2!1057 (h!2040 lt!30122))))))

(declare-fun d!14923 () Bool)

(declare-fun c!9806 () Bool)

(assert (=> d!14923 (= c!9806 (and ((_ is Cons!1455) lt!30122) (= (_1!1057 (h!2040 lt!30122)) (_1!1057 lt!29850))))))

(assert (=> d!14923 (= (getValueByKey!132 lt!30122 (_1!1057 lt!29850)) e!45195)))

(declare-fun b!69010 () Bool)

(assert (=> b!69010 (= e!45195 e!45196)))

(declare-fun c!9807 () Bool)

(assert (=> b!69010 (= c!9807 (and ((_ is Cons!1455) lt!30122) (not (= (_1!1057 (h!2040 lt!30122)) (_1!1057 lt!29850)))))))

(assert (= (and d!14923 c!9806) b!69009))

(assert (= (and d!14923 (not c!9806)) b!69010))

(assert (= (and b!69010 c!9807) b!69011))

(assert (= (and b!69010 (not c!9807)) b!69012))

(declare-fun m!65019 () Bool)

(assert (=> b!69011 m!65019))

(assert (=> d!14843 d!14923))

(declare-fun d!14925 () Bool)

(assert (=> d!14925 (= (getValueByKey!132 lt!30122 (_1!1057 lt!29850)) (Some!137 (_2!1057 lt!29850)))))

(declare-fun lt!30324 () Unit!1909)

(declare-fun choose!394 (List!1459 (_ BitVec 64) V!2921) Unit!1909)

(assert (=> d!14925 (= lt!30324 (choose!394 lt!30122 (_1!1057 lt!29850) (_2!1057 lt!29850)))))

(declare-fun e!45199 () Bool)

(assert (=> d!14925 e!45199))

(declare-fun res!37083 () Bool)

(assert (=> d!14925 (=> (not res!37083) (not e!45199))))

(declare-fun isStrictlySorted!277 (List!1459) Bool)

(assert (=> d!14925 (= res!37083 (isStrictlySorted!277 lt!30122))))

(assert (=> d!14925 (= (lemmaContainsTupThenGetReturnValue!49 lt!30122 (_1!1057 lt!29850) (_2!1057 lt!29850)) lt!30324)))

(declare-fun b!69017 () Bool)

(declare-fun res!37084 () Bool)

(assert (=> b!69017 (=> (not res!37084) (not e!45199))))

(assert (=> b!69017 (= res!37084 (containsKey!135 lt!30122 (_1!1057 lt!29850)))))

(declare-fun b!69018 () Bool)

(assert (=> b!69018 (= e!45199 (contains!713 lt!30122 (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(assert (= (and d!14925 res!37083) b!69017))

(assert (= (and b!69017 res!37084) b!69018))

(assert (=> d!14925 m!64663))

(declare-fun m!65021 () Bool)

(assert (=> d!14925 m!65021))

(declare-fun m!65023 () Bool)

(assert (=> d!14925 m!65023))

(declare-fun m!65025 () Bool)

(assert (=> b!69017 m!65025))

(declare-fun m!65027 () Bool)

(assert (=> b!69018 m!65027))

(assert (=> d!14843 d!14925))

(declare-fun b!69039 () Bool)

(declare-fun e!45212 () List!1459)

(declare-fun call!5882 () List!1459)

(assert (=> b!69039 (= e!45212 call!5882)))

(declare-fun b!69040 () Bool)

(declare-fun e!45210 () List!1459)

(assert (=> b!69040 (= e!45210 (insertStrictlySorted!52 (t!4954 (toList!708 (+!88 lt!29844 lt!29846))) (_1!1057 lt!29850) (_2!1057 lt!29850)))))

(declare-fun b!69041 () Bool)

(declare-fun e!45213 () List!1459)

(declare-fun call!5881 () List!1459)

(assert (=> b!69041 (= e!45213 call!5881)))

(declare-fun b!69042 () Bool)

(assert (=> b!69042 (= e!45213 call!5881)))

(declare-fun c!9819 () Bool)

(declare-fun b!69043 () Bool)

(assert (=> b!69043 (= c!9819 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 lt!29846))) (bvsgt (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 lt!29846)))) (_1!1057 lt!29850))))))

(assert (=> b!69043 (= e!45212 e!45213)))

(declare-fun b!69044 () Bool)

(declare-fun res!37090 () Bool)

(declare-fun e!45211 () Bool)

(assert (=> b!69044 (=> (not res!37090) (not e!45211))))

(declare-fun lt!30327 () List!1459)

(assert (=> b!69044 (= res!37090 (containsKey!135 lt!30327 (_1!1057 lt!29850)))))

(declare-fun bm!5879 () Bool)

(declare-fun call!5883 () List!1459)

(declare-fun c!9816 () Bool)

(declare-fun $colon$colon!63 (List!1459 tuple2!2092) List!1459)

(assert (=> bm!5879 (= call!5883 ($colon$colon!63 e!45210 (ite c!9816 (h!2040 (toList!708 (+!88 lt!29844 lt!29846))) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850)))))))

(declare-fun c!9817 () Bool)

(assert (=> bm!5879 (= c!9817 c!9816)))

(declare-fun b!69045 () Bool)

(declare-fun e!45214 () List!1459)

(assert (=> b!69045 (= e!45214 e!45212)))

(declare-fun c!9818 () Bool)

(assert (=> b!69045 (= c!9818 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 lt!29846))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 lt!29846)))) (_1!1057 lt!29850))))))

(declare-fun b!69046 () Bool)

(assert (=> b!69046 (= e!45210 (ite c!9818 (t!4954 (toList!708 (+!88 lt!29844 lt!29846))) (ite c!9819 (Cons!1455 (h!2040 (toList!708 (+!88 lt!29844 lt!29846))) (t!4954 (toList!708 (+!88 lt!29844 lt!29846)))) Nil!1456)))))

(declare-fun b!69047 () Bool)

(assert (=> b!69047 (= e!45214 call!5883)))

(declare-fun bm!5878 () Bool)

(assert (=> bm!5878 (= call!5882 call!5883)))

(declare-fun d!14927 () Bool)

(assert (=> d!14927 e!45211))

(declare-fun res!37089 () Bool)

(assert (=> d!14927 (=> (not res!37089) (not e!45211))))

(assert (=> d!14927 (= res!37089 (isStrictlySorted!277 lt!30327))))

(assert (=> d!14927 (= lt!30327 e!45214)))

(assert (=> d!14927 (= c!9816 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 lt!29846))) (bvslt (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 lt!29846)))) (_1!1057 lt!29850))))))

(assert (=> d!14927 (isStrictlySorted!277 (toList!708 (+!88 lt!29844 lt!29846)))))

(assert (=> d!14927 (= (insertStrictlySorted!52 (toList!708 (+!88 lt!29844 lt!29846)) (_1!1057 lt!29850) (_2!1057 lt!29850)) lt!30327)))

(declare-fun b!69048 () Bool)

(assert (=> b!69048 (= e!45211 (contains!713 lt!30327 (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun bm!5880 () Bool)

(assert (=> bm!5880 (= call!5881 call!5882)))

(assert (= (and d!14927 c!9816) b!69047))

(assert (= (and d!14927 (not c!9816)) b!69045))

(assert (= (and b!69045 c!9818) b!69039))

(assert (= (and b!69045 (not c!9818)) b!69043))

(assert (= (and b!69043 c!9819) b!69042))

(assert (= (and b!69043 (not c!9819)) b!69041))

(assert (= (or b!69042 b!69041) bm!5880))

(assert (= (or b!69039 bm!5880) bm!5878))

(assert (= (or b!69047 bm!5878) bm!5879))

(assert (= (and bm!5879 c!9817) b!69040))

(assert (= (and bm!5879 (not c!9817)) b!69046))

(assert (= (and d!14927 res!37089) b!69044))

(assert (= (and b!69044 res!37090) b!69048))

(declare-fun m!65029 () Bool)

(assert (=> d!14927 m!65029))

(declare-fun m!65031 () Bool)

(assert (=> d!14927 m!65031))

(declare-fun m!65033 () Bool)

(assert (=> bm!5879 m!65033))

(declare-fun m!65035 () Bool)

(assert (=> b!69048 m!65035))

(declare-fun m!65037 () Bool)

(assert (=> b!69044 m!65037))

(declare-fun m!65039 () Bool)

(assert (=> b!69040 m!65039))

(assert (=> d!14843 d!14927))

(declare-fun b!69061 () Bool)

(declare-fun c!9826 () Bool)

(declare-fun lt!30336 () (_ BitVec 64))

(assert (=> b!69061 (= c!9826 (= lt!30336 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45222 () SeekEntryResult!228)

(declare-fun e!45223 () SeekEntryResult!228)

(assert (=> b!69061 (= e!45222 e!45223)))

(declare-fun b!69062 () Bool)

(declare-fun lt!30334 () SeekEntryResult!228)

(assert (=> b!69062 (= e!45223 (MissingZero!228 (index!3043 lt!30334)))))

(declare-fun b!69063 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3837 (_ BitVec 32)) SeekEntryResult!228)

(assert (=> b!69063 (= e!45223 (seekKeyOrZeroReturnVacant!0 (x!10842 lt!30334) (index!3043 lt!30334) (index!3043 lt!30334) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun b!69064 () Bool)

(declare-fun e!45221 () SeekEntryResult!228)

(assert (=> b!69064 (= e!45221 e!45222)))

(assert (=> b!69064 (= lt!30336 (select (arr!1832 (_keys!3811 newMap!16)) (index!3043 lt!30334)))))

(declare-fun c!9827 () Bool)

(assert (=> b!69064 (= c!9827 (= lt!30336 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!30335 () SeekEntryResult!228)

(declare-fun d!14929 () Bool)

(assert (=> d!14929 (and (or ((_ is Undefined!228) lt!30335) (not ((_ is Found!228) lt!30335)) (and (bvsge (index!3042 lt!30335) #b00000000000000000000000000000000) (bvslt (index!3042 lt!30335) (size!2068 (_keys!3811 newMap!16))))) (or ((_ is Undefined!228) lt!30335) ((_ is Found!228) lt!30335) (not ((_ is MissingZero!228) lt!30335)) (and (bvsge (index!3041 lt!30335) #b00000000000000000000000000000000) (bvslt (index!3041 lt!30335) (size!2068 (_keys!3811 newMap!16))))) (or ((_ is Undefined!228) lt!30335) ((_ is Found!228) lt!30335) ((_ is MissingZero!228) lt!30335) (not ((_ is MissingVacant!228) lt!30335)) (and (bvsge (index!3044 lt!30335) #b00000000000000000000000000000000) (bvslt (index!3044 lt!30335) (size!2068 (_keys!3811 newMap!16))))) (or ((_ is Undefined!228) lt!30335) (ite ((_ is Found!228) lt!30335) (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30335)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite ((_ is MissingZero!228) lt!30335) (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3041 lt!30335)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!228) lt!30335) (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3044 lt!30335)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14929 (= lt!30335 e!45221)))

(declare-fun c!9828 () Bool)

(assert (=> d!14929 (= c!9828 (and ((_ is Intermediate!228) lt!30334) (undefined!1040 lt!30334)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3837 (_ BitVec 32)) SeekEntryResult!228)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!14929 (= lt!30334 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6112 newMap!16)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(assert (=> d!14929 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!14929 (= (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)) lt!30335)))

(declare-fun b!69065 () Bool)

(assert (=> b!69065 (= e!45221 Undefined!228)))

(declare-fun b!69066 () Bool)

(assert (=> b!69066 (= e!45222 (Found!228 (index!3043 lt!30334)))))

(assert (= (and d!14929 c!9828) b!69065))

(assert (= (and d!14929 (not c!9828)) b!69064))

(assert (= (and b!69064 c!9827) b!69066))

(assert (= (and b!69064 (not c!9827)) b!69061))

(assert (= (and b!69061 c!9826) b!69062))

(assert (= (and b!69061 (not c!9826)) b!69063))

(assert (=> b!69063 m!64329))

(declare-fun m!65041 () Bool)

(assert (=> b!69063 m!65041))

(declare-fun m!65043 () Bool)

(assert (=> b!69064 m!65043))

(assert (=> d!14929 m!64725))

(declare-fun m!65045 () Bool)

(assert (=> d!14929 m!65045))

(assert (=> d!14929 m!64329))

(declare-fun m!65047 () Bool)

(assert (=> d!14929 m!65047))

(assert (=> d!14929 m!64329))

(assert (=> d!14929 m!65045))

(declare-fun m!65049 () Bool)

(assert (=> d!14929 m!65049))

(declare-fun m!65051 () Bool)

(assert (=> d!14929 m!65051))

(declare-fun m!65053 () Bool)

(assert (=> d!14929 m!65053))

(assert (=> b!68676 d!14929))

(declare-fun d!14931 () Bool)

(declare-fun res!37091 () Bool)

(declare-fun e!45224 () Bool)

(assert (=> d!14931 (=> res!37091 e!45224)))

(assert (=> d!14931 (= res!37091 (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14931 (= (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!45224)))

(declare-fun b!69067 () Bool)

(declare-fun e!45225 () Bool)

(assert (=> b!69067 (= e!45224 e!45225)))

(declare-fun res!37092 () Bool)

(assert (=> b!69067 (=> (not res!37092) (not e!45225))))

(assert (=> b!69067 (= res!37092 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69068 () Bool)

(assert (=> b!69068 (= e!45225 (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14931 (not res!37091)) b!69067))

(assert (= (and b!69067 res!37092) b!69068))

(declare-fun m!65055 () Bool)

(assert (=> d!14931 m!65055))

(assert (=> b!69068 m!64329))

(declare-fun m!65057 () Bool)

(assert (=> b!69068 m!65057))

(assert (=> b!68530 d!14931))

(declare-fun d!14933 () Bool)

(declare-fun e!45227 () Bool)

(assert (=> d!14933 e!45227))

(declare-fun res!37093 () Bool)

(assert (=> d!14933 (=> res!37093 e!45227)))

(declare-fun lt!30340 () Bool)

(assert (=> d!14933 (= res!37093 (not lt!30340))))

(declare-fun lt!30339 () Bool)

(assert (=> d!14933 (= lt!30340 lt!30339)))

(declare-fun lt!30337 () Unit!1909)

(declare-fun e!45226 () Unit!1909)

(assert (=> d!14933 (= lt!30337 e!45226)))

(declare-fun c!9829 () Bool)

(assert (=> d!14933 (= c!9829 lt!30339)))

(assert (=> d!14933 (= lt!30339 (containsKey!135 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14933 (= (contains!710 lt!30085 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30340)))

(declare-fun b!69069 () Bool)

(declare-fun lt!30338 () Unit!1909)

(assert (=> b!69069 (= e!45226 lt!30338)))

(assert (=> b!69069 (= lt!30338 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69069 (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69070 () Bool)

(declare-fun Unit!1930 () Unit!1909)

(assert (=> b!69070 (= e!45226 Unit!1930)))

(declare-fun b!69071 () Bool)

(assert (=> b!69071 (= e!45227 (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14933 c!9829) b!69069))

(assert (= (and d!14933 (not c!9829)) b!69070))

(assert (= (and d!14933 (not res!37093)) b!69071))

(declare-fun m!65059 () Bool)

(assert (=> d!14933 m!65059))

(declare-fun m!65061 () Bool)

(assert (=> b!69069 m!65061))

(declare-fun m!65063 () Bool)

(assert (=> b!69069 m!65063))

(assert (=> b!69069 m!65063))

(declare-fun m!65065 () Bool)

(assert (=> b!69069 m!65065))

(assert (=> b!69071 m!65063))

(assert (=> b!69071 m!65063))

(assert (=> b!69071 m!65065))

(assert (=> bm!5836 d!14933))

(declare-fun b!69072 () Bool)

(declare-fun e!45233 () Bool)

(declare-fun e!45228 () Bool)

(assert (=> b!69072 (= e!45233 e!45228)))

(declare-fun c!9830 () Bool)

(declare-fun e!45232 () Bool)

(assert (=> b!69072 (= c!9830 e!45232)))

(declare-fun res!37095 () Bool)

(assert (=> b!69072 (=> (not res!37095) (not e!45232))))

(assert (=> b!69072 (= res!37095 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69073 () Bool)

(declare-fun e!45230 () Bool)

(declare-fun lt!30343 () ListLongMap!1385)

(assert (=> b!69073 (= e!45230 (isEmpty!316 lt!30343))))

(declare-fun bm!5881 () Bool)

(declare-fun call!5884 () ListLongMap!1385)

(assert (=> bm!5881 (= call!5884 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!69074 () Bool)

(declare-fun res!37096 () Bool)

(assert (=> b!69074 (=> (not res!37096) (not e!45233))))

(assert (=> b!69074 (= res!37096 (not (contains!710 lt!30343 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69075 () Bool)

(declare-fun lt!30346 () Unit!1909)

(declare-fun lt!30345 () Unit!1909)

(assert (=> b!69075 (= lt!30346 lt!30345)))

(declare-fun lt!30342 () (_ BitVec 64))

(declare-fun lt!30347 () V!2921)

(declare-fun lt!30344 () ListLongMap!1385)

(declare-fun lt!30341 () (_ BitVec 64))

(assert (=> b!69075 (not (contains!710 (+!88 lt!30344 (tuple2!2093 lt!30342 lt!30347)) lt!30341))))

(assert (=> b!69075 (= lt!30345 (addStillNotContains!24 lt!30344 lt!30342 lt!30347 lt!30341))))

(assert (=> b!69075 (= lt!30341 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69075 (= lt!30347 (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69075 (= lt!30342 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!69075 (= lt!30344 call!5884)))

(declare-fun e!45234 () ListLongMap!1385)

(assert (=> b!69075 (= e!45234 (+!88 call!5884 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69076 () Bool)

(assert (=> b!69076 (= e!45234 call!5884)))

(declare-fun b!69078 () Bool)

(assert (=> b!69078 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!69078 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2069 (_values!2150 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45231 () Bool)

(assert (=> b!69078 (= e!45231 (= (apply!73 lt!30343 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69079 () Bool)

(declare-fun e!45229 () ListLongMap!1385)

(assert (=> b!69079 (= e!45229 (ListLongMap!1386 Nil!1456))))

(declare-fun b!69080 () Bool)

(assert (=> b!69080 (= e!45228 e!45231)))

(assert (=> b!69080 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun res!37097 () Bool)

(assert (=> b!69080 (= res!37097 (contains!710 lt!30343 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!69080 (=> (not res!37097) (not e!45231))))

(declare-fun b!69081 () Bool)

(assert (=> b!69081 (= e!45232 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!69081 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!69082 () Bool)

(assert (=> b!69082 (= e!45229 e!45234)))

(declare-fun c!9833 () Bool)

(assert (=> b!69082 (= c!9833 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69083 () Bool)

(assert (=> b!69083 (= e!45230 (= lt!30343 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69077 () Bool)

(assert (=> b!69077 (= e!45228 e!45230)))

(declare-fun c!9832 () Bool)

(assert (=> b!69077 (= c!9832 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun d!14935 () Bool)

(assert (=> d!14935 e!45233))

(declare-fun res!37094 () Bool)

(assert (=> d!14935 (=> (not res!37094) (not e!45233))))

(assert (=> d!14935 (= res!37094 (not (contains!710 lt!30343 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14935 (= lt!30343 e!45229)))

(declare-fun c!9831 () Bool)

(assert (=> d!14935 (= c!9831 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!14935 (validMask!0 (mask!6112 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!14935 (= (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))) lt!30343)))

(assert (= (and d!14935 c!9831) b!69079))

(assert (= (and d!14935 (not c!9831)) b!69082))

(assert (= (and b!69082 c!9833) b!69075))

(assert (= (and b!69082 (not c!9833)) b!69076))

(assert (= (or b!69075 b!69076) bm!5881))

(assert (= (and d!14935 res!37094) b!69074))

(assert (= (and b!69074 res!37096) b!69072))

(assert (= (and b!69072 res!37095) b!69081))

(assert (= (and b!69072 c!9830) b!69080))

(assert (= (and b!69072 (not c!9830)) b!69077))

(assert (= (and b!69080 res!37097) b!69078))

(assert (= (and b!69077 c!9832) b!69083))

(assert (= (and b!69077 (not c!9832)) b!69073))

(declare-fun b_lambda!3099 () Bool)

(assert (=> (not b_lambda!3099) (not b!69075)))

(assert (=> b!69075 t!4951))

(declare-fun b_and!4253 () Bool)

(assert (= b_and!4249 (and (=> t!4951 result!2595) b_and!4253)))

(assert (=> b!69075 t!4953))

(declare-fun b_and!4255 () Bool)

(assert (= b_and!4251 (and (=> t!4953 result!2599) b_and!4255)))

(declare-fun b_lambda!3101 () Bool)

(assert (=> (not b_lambda!3101) (not b!69078)))

(assert (=> b!69078 t!4951))

(declare-fun b_and!4257 () Bool)

(assert (= b_and!4253 (and (=> t!4951 result!2595) b_and!4257)))

(assert (=> b!69078 t!4953))

(declare-fun b_and!4259 () Bool)

(assert (= b_and!4255 (and (=> t!4953 result!2599) b_and!4259)))

(declare-fun m!65067 () Bool)

(assert (=> b!69083 m!65067))

(declare-fun m!65069 () Bool)

(assert (=> b!69073 m!65069))

(assert (=> b!69080 m!65055))

(assert (=> b!69080 m!65055))

(declare-fun m!65071 () Bool)

(assert (=> b!69080 m!65071))

(assert (=> bm!5881 m!65067))

(assert (=> b!69081 m!65055))

(assert (=> b!69081 m!65055))

(declare-fun m!65073 () Bool)

(assert (=> b!69081 m!65073))

(assert (=> b!69078 m!65055))

(declare-fun m!65075 () Bool)

(assert (=> b!69078 m!65075))

(declare-fun m!65077 () Bool)

(assert (=> b!69078 m!65077))

(assert (=> b!69078 m!65055))

(assert (=> b!69078 m!64379))

(assert (=> b!69078 m!65077))

(assert (=> b!69078 m!64379))

(declare-fun m!65079 () Bool)

(assert (=> b!69078 m!65079))

(assert (=> b!69075 m!65077))

(declare-fun m!65081 () Bool)

(assert (=> b!69075 m!65081))

(declare-fun m!65083 () Bool)

(assert (=> b!69075 m!65083))

(assert (=> b!69075 m!65083))

(declare-fun m!65085 () Bool)

(assert (=> b!69075 m!65085))

(assert (=> b!69075 m!65055))

(declare-fun m!65087 () Bool)

(assert (=> b!69075 m!65087))

(assert (=> b!69075 m!64379))

(assert (=> b!69075 m!65077))

(assert (=> b!69075 m!64379))

(assert (=> b!69075 m!65079))

(assert (=> b!69082 m!65055))

(assert (=> b!69082 m!65055))

(assert (=> b!69082 m!65073))

(declare-fun m!65089 () Bool)

(assert (=> b!69074 m!65089))

(declare-fun m!65091 () Bool)

(assert (=> d!14935 m!65091))

(assert (=> d!14935 m!64349))

(assert (=> bm!5843 d!14935))

(declare-fun b!69084 () Bool)

(declare-fun e!45236 () Bool)

(declare-fun e!45235 () Bool)

(assert (=> b!69084 (= e!45236 e!45235)))

(declare-fun c!9834 () Bool)

(assert (=> b!69084 (= c!9834 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69085 () Bool)

(declare-fun call!5885 () Bool)

(assert (=> b!69085 (= e!45235 call!5885)))

(declare-fun d!14937 () Bool)

(declare-fun res!37100 () Bool)

(declare-fun e!45237 () Bool)

(assert (=> d!14937 (=> res!37100 e!45237)))

(assert (=> d!14937 (= res!37100 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!14937 (= (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)) e!45237)))

(declare-fun b!69086 () Bool)

(assert (=> b!69086 (= e!45237 e!45236)))

(declare-fun res!37098 () Bool)

(assert (=> b!69086 (=> (not res!37098) (not e!45236))))

(declare-fun e!45238 () Bool)

(assert (=> b!69086 (= res!37098 (not e!45238))))

(declare-fun res!37099 () Bool)

(assert (=> b!69086 (=> (not res!37099) (not e!45238))))

(assert (=> b!69086 (= res!37099 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!5882 () Bool)

(assert (=> bm!5882 (= call!5885 (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9834 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457))))))

(declare-fun b!69087 () Bool)

(assert (=> b!69087 (= e!45238 (contains!712 (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69088 () Bool)

(assert (=> b!69088 (= e!45235 call!5885)))

(assert (= (and d!14937 (not res!37100)) b!69086))

(assert (= (and b!69086 res!37099) b!69087))

(assert (= (and b!69086 res!37098) b!69084))

(assert (= (and b!69084 c!9834) b!69085))

(assert (= (and b!69084 (not c!9834)) b!69088))

(assert (= (or b!69085 b!69088) bm!5882))

(declare-fun m!65093 () Bool)

(assert (=> b!69084 m!65093))

(assert (=> b!69084 m!65093))

(declare-fun m!65095 () Bool)

(assert (=> b!69084 m!65095))

(assert (=> b!69086 m!65093))

(assert (=> b!69086 m!65093))

(assert (=> b!69086 m!65095))

(assert (=> bm!5882 m!65093))

(declare-fun m!65097 () Bool)

(assert (=> bm!5882 m!65097))

(assert (=> b!69087 m!65093))

(assert (=> b!69087 m!65093))

(declare-fun m!65099 () Bool)

(assert (=> b!69087 m!65099))

(assert (=> bm!5747 d!14937))

(declare-fun d!14939 () Bool)

(declare-fun lt!30350 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!74 (List!1459) (InoxSet tuple2!2092))

(assert (=> d!14939 (= lt!30350 (select (content!74 (toList!708 lt!30136)) lt!29850))))

(declare-fun e!45243 () Bool)

(assert (=> d!14939 (= lt!30350 e!45243)))

(declare-fun res!37105 () Bool)

(assert (=> d!14939 (=> (not res!37105) (not e!45243))))

(assert (=> d!14939 (= res!37105 ((_ is Cons!1455) (toList!708 lt!30136)))))

(assert (=> d!14939 (= (contains!713 (toList!708 lt!30136) lt!29850) lt!30350)))

(declare-fun b!69093 () Bool)

(declare-fun e!45244 () Bool)

(assert (=> b!69093 (= e!45243 e!45244)))

(declare-fun res!37106 () Bool)

(assert (=> b!69093 (=> res!37106 e!45244)))

(assert (=> b!69093 (= res!37106 (= (h!2040 (toList!708 lt!30136)) lt!29850))))

(declare-fun b!69094 () Bool)

(assert (=> b!69094 (= e!45244 (contains!713 (t!4954 (toList!708 lt!30136)) lt!29850))))

(assert (= (and d!14939 res!37105) b!69093))

(assert (= (and b!69093 (not res!37106)) b!69094))

(declare-fun m!65101 () Bool)

(assert (=> d!14939 m!65101))

(declare-fun m!65103 () Bool)

(assert (=> d!14939 m!65103))

(declare-fun m!65105 () Bool)

(assert (=> b!69094 m!65105))

(assert (=> b!68812 d!14939))

(declare-fun d!14941 () Bool)

(assert (=> d!14941 (= (get!1132 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2493 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!68556 d!14941))

(declare-fun d!14943 () Bool)

(assert (=> d!14943 (isDefined!84 (getValueByKey!132 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!30353 () Unit!1909)

(declare-fun choose!395 (List!1459 (_ BitVec 64)) Unit!1909)

(assert (=> d!14943 (= lt!30353 (choose!395 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!45247 () Bool)

(assert (=> d!14943 e!45247))

(declare-fun res!37109 () Bool)

(assert (=> d!14943 (=> (not res!37109) (not e!45247))))

(assert (=> d!14943 (= res!37109 (isStrictlySorted!277 (toList!708 lt!29848)))))

(assert (=> d!14943 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30353)))

(declare-fun b!69097 () Bool)

(assert (=> b!69097 (= e!45247 (containsKey!135 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!14943 res!37109) b!69097))

(assert (=> d!14943 m!64329))

(assert (=> d!14943 m!64521))

(assert (=> d!14943 m!64521))

(assert (=> d!14943 m!64523))

(assert (=> d!14943 m!64329))

(declare-fun m!65107 () Bool)

(assert (=> d!14943 m!65107))

(declare-fun m!65109 () Bool)

(assert (=> d!14943 m!65109))

(assert (=> b!69097 m!64329))

(assert (=> b!69097 m!64517))

(assert (=> b!68564 d!14943))

(declare-fun d!14945 () Bool)

(declare-fun isEmpty!317 (Option!138) Bool)

(assert (=> d!14945 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun bs!2977 () Bool)

(assert (= bs!2977 d!14945))

(assert (=> bs!2977 m!64521))

(declare-fun m!65111 () Bool)

(assert (=> bs!2977 m!65111))

(assert (=> b!68564 d!14945))

(declare-fun b!69101 () Bool)

(declare-fun e!45249 () Option!138)

(assert (=> b!69101 (= e!45249 None!136)))

(declare-fun b!69100 () Bool)

(assert (=> b!69100 (= e!45249 (getValueByKey!132 (t!4954 (toList!708 lt!29848)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69098 () Bool)

(declare-fun e!45248 () Option!138)

(assert (=> b!69098 (= e!45248 (Some!137 (_2!1057 (h!2040 (toList!708 lt!29848)))))))

(declare-fun c!9835 () Bool)

(declare-fun d!14947 () Bool)

(assert (=> d!14947 (= c!9835 (and ((_ is Cons!1455) (toList!708 lt!29848)) (= (_1!1057 (h!2040 (toList!708 lt!29848))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!14947 (= (getValueByKey!132 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45248)))

(declare-fun b!69099 () Bool)

(assert (=> b!69099 (= e!45248 e!45249)))

(declare-fun c!9836 () Bool)

(assert (=> b!69099 (= c!9836 (and ((_ is Cons!1455) (toList!708 lt!29848)) (not (= (_1!1057 (h!2040 (toList!708 lt!29848))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(assert (= (and d!14947 c!9835) b!69098))

(assert (= (and d!14947 (not c!9835)) b!69099))

(assert (= (and b!69099 c!9836) b!69100))

(assert (= (and b!69099 (not c!9836)) b!69101))

(assert (=> b!69100 m!64329))

(declare-fun m!65113 () Bool)

(assert (=> b!69100 m!65113))

(assert (=> b!68564 d!14947))

(assert (=> b!68792 d!14915))

(declare-fun d!14949 () Bool)

(assert (=> d!14949 (not (contains!710 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)) lt!30107))))

(declare-fun lt!30356 () Unit!1909)

(declare-fun choose!396 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1909)

(assert (=> d!14949 (= lt!30356 (choose!396 lt!30110 lt!30108 lt!30113 lt!30107))))

(declare-fun e!45252 () Bool)

(assert (=> d!14949 e!45252))

(declare-fun res!37112 () Bool)

(assert (=> d!14949 (=> (not res!37112) (not e!45252))))

(assert (=> d!14949 (= res!37112 (not (contains!710 lt!30110 lt!30107)))))

(assert (=> d!14949 (= (addStillNotContains!24 lt!30110 lt!30108 lt!30113 lt!30107) lt!30356)))

(declare-fun b!69105 () Bool)

(assert (=> b!69105 (= e!45252 (not (= lt!30108 lt!30107)))))

(assert (= (and d!14949 res!37112) b!69105))

(assert (=> d!14949 m!64651))

(assert (=> d!14949 m!64651))

(assert (=> d!14949 m!64653))

(declare-fun m!65115 () Bool)

(assert (=> d!14949 m!65115))

(declare-fun m!65117 () Bool)

(assert (=> d!14949 m!65117))

(assert (=> b!68792 d!14949))

(declare-fun d!14951 () Bool)

(declare-fun e!45254 () Bool)

(assert (=> d!14951 e!45254))

(declare-fun res!37113 () Bool)

(assert (=> d!14951 (=> res!37113 e!45254)))

(declare-fun lt!30360 () Bool)

(assert (=> d!14951 (= res!37113 (not lt!30360))))

(declare-fun lt!30359 () Bool)

(assert (=> d!14951 (= lt!30360 lt!30359)))

(declare-fun lt!30357 () Unit!1909)

(declare-fun e!45253 () Unit!1909)

(assert (=> d!14951 (= lt!30357 e!45253)))

(declare-fun c!9837 () Bool)

(assert (=> d!14951 (= c!9837 lt!30359)))

(assert (=> d!14951 (= lt!30359 (containsKey!135 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107))))

(assert (=> d!14951 (= (contains!710 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)) lt!30107) lt!30360)))

(declare-fun b!69106 () Bool)

(declare-fun lt!30358 () Unit!1909)

(assert (=> b!69106 (= e!45253 lt!30358)))

(assert (=> b!69106 (= lt!30358 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107))))

(assert (=> b!69106 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107))))

(declare-fun b!69107 () Bool)

(declare-fun Unit!1931 () Unit!1909)

(assert (=> b!69107 (= e!45253 Unit!1931)))

(declare-fun b!69108 () Bool)

(assert (=> b!69108 (= e!45254 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107)))))

(assert (= (and d!14951 c!9837) b!69106))

(assert (= (and d!14951 (not c!9837)) b!69107))

(assert (= (and d!14951 (not res!37113)) b!69108))

(declare-fun m!65119 () Bool)

(assert (=> d!14951 m!65119))

(declare-fun m!65121 () Bool)

(assert (=> b!69106 m!65121))

(declare-fun m!65123 () Bool)

(assert (=> b!69106 m!65123))

(assert (=> b!69106 m!65123))

(declare-fun m!65125 () Bool)

(assert (=> b!69106 m!65125))

(assert (=> b!69108 m!65123))

(assert (=> b!69108 m!65123))

(assert (=> b!69108 m!65125))

(assert (=> b!68792 d!14951))

(declare-fun d!14953 () Bool)

(declare-fun e!45255 () Bool)

(assert (=> d!14953 e!45255))

(declare-fun res!37114 () Bool)

(assert (=> d!14953 (=> (not res!37114) (not e!45255))))

(declare-fun lt!30363 () ListLongMap!1385)

(assert (=> d!14953 (= res!37114 (contains!710 lt!30363 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!30361 () List!1459)

(assert (=> d!14953 (= lt!30363 (ListLongMap!1386 lt!30361))))

(declare-fun lt!30364 () Unit!1909)

(declare-fun lt!30362 () Unit!1909)

(assert (=> d!14953 (= lt!30364 lt!30362)))

(assert (=> d!14953 (= (getValueByKey!132 lt!30361 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14953 (= lt!30362 (lemmaContainsTupThenGetReturnValue!49 lt!30361 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14953 (= lt!30361 (insertStrictlySorted!52 (toList!708 call!5846) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14953 (= (+!88 call!5846 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30363)))

(declare-fun b!69109 () Bool)

(declare-fun res!37115 () Bool)

(assert (=> b!69109 (=> (not res!37115) (not e!45255))))

(assert (=> b!69109 (= res!37115 (= (getValueByKey!132 (toList!708 lt!30363) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!69110 () Bool)

(assert (=> b!69110 (= e!45255 (contains!713 (toList!708 lt!30363) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14953 res!37114) b!69109))

(assert (= (and b!69109 res!37115) b!69110))

(declare-fun m!65127 () Bool)

(assert (=> d!14953 m!65127))

(declare-fun m!65129 () Bool)

(assert (=> d!14953 m!65129))

(declare-fun m!65131 () Bool)

(assert (=> d!14953 m!65131))

(declare-fun m!65133 () Bool)

(assert (=> d!14953 m!65133))

(declare-fun m!65135 () Bool)

(assert (=> b!69109 m!65135))

(declare-fun m!65137 () Bool)

(assert (=> b!69110 m!65137))

(assert (=> b!68792 d!14953))

(declare-fun d!14955 () Bool)

(declare-fun e!45256 () Bool)

(assert (=> d!14955 e!45256))

(declare-fun res!37116 () Bool)

(assert (=> d!14955 (=> (not res!37116) (not e!45256))))

(declare-fun lt!30367 () ListLongMap!1385)

(assert (=> d!14955 (= res!37116 (contains!710 lt!30367 (_1!1057 (tuple2!2093 lt!30108 lt!30113))))))

(declare-fun lt!30365 () List!1459)

(assert (=> d!14955 (= lt!30367 (ListLongMap!1386 lt!30365))))

(declare-fun lt!30368 () Unit!1909)

(declare-fun lt!30366 () Unit!1909)

(assert (=> d!14955 (= lt!30368 lt!30366)))

(assert (=> d!14955 (= (getValueByKey!132 lt!30365 (_1!1057 (tuple2!2093 lt!30108 lt!30113))) (Some!137 (_2!1057 (tuple2!2093 lt!30108 lt!30113))))))

(assert (=> d!14955 (= lt!30366 (lemmaContainsTupThenGetReturnValue!49 lt!30365 (_1!1057 (tuple2!2093 lt!30108 lt!30113)) (_2!1057 (tuple2!2093 lt!30108 lt!30113))))))

(assert (=> d!14955 (= lt!30365 (insertStrictlySorted!52 (toList!708 lt!30110) (_1!1057 (tuple2!2093 lt!30108 lt!30113)) (_2!1057 (tuple2!2093 lt!30108 lt!30113))))))

(assert (=> d!14955 (= (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)) lt!30367)))

(declare-fun b!69111 () Bool)

(declare-fun res!37117 () Bool)

(assert (=> b!69111 (=> (not res!37117) (not e!45256))))

(assert (=> b!69111 (= res!37117 (= (getValueByKey!132 (toList!708 lt!30367) (_1!1057 (tuple2!2093 lt!30108 lt!30113))) (Some!137 (_2!1057 (tuple2!2093 lt!30108 lt!30113)))))))

(declare-fun b!69112 () Bool)

(assert (=> b!69112 (= e!45256 (contains!713 (toList!708 lt!30367) (tuple2!2093 lt!30108 lt!30113)))))

(assert (= (and d!14955 res!37116) b!69111))

(assert (= (and b!69111 res!37117) b!69112))

(declare-fun m!65139 () Bool)

(assert (=> d!14955 m!65139))

(declare-fun m!65141 () Bool)

(assert (=> d!14955 m!65141))

(declare-fun m!65143 () Bool)

(assert (=> d!14955 m!65143))

(declare-fun m!65145 () Bool)

(assert (=> d!14955 m!65145))

(declare-fun m!65147 () Bool)

(assert (=> b!69111 m!65147))

(declare-fun m!65149 () Bool)

(assert (=> b!69112 m!65149))

(assert (=> b!68792 d!14955))

(declare-fun d!14957 () Bool)

(declare-fun e!45259 () Bool)

(assert (=> d!14957 e!45259))

(declare-fun c!9840 () Bool)

(assert (=> d!14957 (= c!9840 (and (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!14957 true))

(declare-fun _$29!84 () Unit!1909)

(assert (=> d!14957 (= (choose!387 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))) _$29!84)))

(declare-fun b!69117 () Bool)

(assert (=> b!69117 (= e!45259 (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!69118 () Bool)

(assert (=> b!69118 (= e!45259 (ite (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!14957 c!9840) b!69117))

(assert (= (and d!14957 (not c!9840)) b!69118))

(assert (=> b!69117 m!64329))

(assert (=> b!69117 m!64373))

(assert (=> d!14817 d!14957))

(assert (=> d!14817 d!14849))

(declare-fun d!14959 () Bool)

(declare-fun e!45260 () Bool)

(assert (=> d!14959 e!45260))

(declare-fun res!37118 () Bool)

(assert (=> d!14959 (=> (not res!37118) (not e!45260))))

(declare-fun lt!30371 () ListLongMap!1385)

(assert (=> d!14959 (= res!37118 (contains!710 lt!30371 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30369 () List!1459)

(assert (=> d!14959 (= lt!30371 (ListLongMap!1386 lt!30369))))

(declare-fun lt!30372 () Unit!1909)

(declare-fun lt!30370 () Unit!1909)

(assert (=> d!14959 (= lt!30372 lt!30370)))

(assert (=> d!14959 (= (getValueByKey!132 lt!30369 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14959 (= lt!30370 (lemmaContainsTupThenGetReturnValue!49 lt!30369 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14959 (= lt!30369 (insertStrictlySorted!52 (toList!708 call!5843) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14959 (= (+!88 call!5843 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30371)))

(declare-fun b!69119 () Bool)

(declare-fun res!37119 () Bool)

(assert (=> b!69119 (=> (not res!37119) (not e!45260))))

(assert (=> b!69119 (= res!37119 (= (getValueByKey!132 (toList!708 lt!30371) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69120 () Bool)

(assert (=> b!69120 (= e!45260 (contains!713 (toList!708 lt!30371) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14959 res!37118) b!69119))

(assert (= (and b!69119 res!37119) b!69120))

(declare-fun m!65151 () Bool)

(assert (=> d!14959 m!65151))

(declare-fun m!65153 () Bool)

(assert (=> d!14959 m!65153))

(declare-fun m!65155 () Bool)

(assert (=> d!14959 m!65155))

(declare-fun m!65157 () Bool)

(assert (=> d!14959 m!65157))

(declare-fun m!65159 () Bool)

(assert (=> b!69119 m!65159))

(declare-fun m!65161 () Bool)

(assert (=> b!69120 m!65161))

(assert (=> b!68754 d!14959))

(declare-fun d!14961 () Bool)

(assert (=> d!14961 (= (map!1146 (_2!1058 lt!30016)) (getCurrentListMap!406 (_keys!3811 (_2!1058 lt!30016)) (_values!2150 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016)) (extraKeys!2034 (_2!1058 lt!30016)) (zeroValue!2073 (_2!1058 lt!30016)) (minValue!2073 (_2!1058 lt!30016)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1058 lt!30016))))))

(declare-fun bs!2978 () Bool)

(assert (= bs!2978 d!14961))

(declare-fun m!65163 () Bool)

(assert (=> bs!2978 m!65163))

(assert (=> bm!5810 d!14961))

(declare-fun b!69121 () Bool)

(declare-fun e!45261 () Bool)

(declare-fun lt!30387 () ListLongMap!1385)

(assert (=> b!69121 (= e!45261 (= (apply!73 lt!30387 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!69122 () Bool)

(declare-fun e!45263 () Unit!1909)

(declare-fun lt!30384 () Unit!1909)

(assert (=> b!69122 (= e!45263 lt!30384)))

(declare-fun lt!30374 () ListLongMap!1385)

(assert (=> b!69122 (= lt!30374 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite c!9730 (_values!2150 newMap!16) lt!30013) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30390 () (_ BitVec 64))

(assert (=> b!69122 (= lt!30390 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30379 () (_ BitVec 64))

(assert (=> b!69122 (= lt!30379 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30378 () Unit!1909)

(assert (=> b!69122 (= lt!30378 (addStillContains!49 lt!30374 lt!30390 (zeroValue!2073 newMap!16) lt!30379))))

(assert (=> b!69122 (contains!710 (+!88 lt!30374 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16))) lt!30379)))

(declare-fun lt!30388 () Unit!1909)

(assert (=> b!69122 (= lt!30388 lt!30378)))

(declare-fun lt!30385 () ListLongMap!1385)

(assert (=> b!69122 (= lt!30385 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite c!9730 (_values!2150 newMap!16) lt!30013) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30375 () (_ BitVec 64))

(assert (=> b!69122 (= lt!30375 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30394 () (_ BitVec 64))

(assert (=> b!69122 (= lt!30394 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30382 () Unit!1909)

(assert (=> b!69122 (= lt!30382 (addApplyDifferent!49 lt!30385 lt!30375 (minValue!2073 newMap!16) lt!30394))))

(assert (=> b!69122 (= (apply!73 (+!88 lt!30385 (tuple2!2093 lt!30375 (minValue!2073 newMap!16))) lt!30394) (apply!73 lt!30385 lt!30394))))

(declare-fun lt!30376 () Unit!1909)

(assert (=> b!69122 (= lt!30376 lt!30382)))

(declare-fun lt!30392 () ListLongMap!1385)

(assert (=> b!69122 (= lt!30392 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite c!9730 (_values!2150 newMap!16) lt!30013) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30393 () (_ BitVec 64))

(assert (=> b!69122 (= lt!30393 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30386 () (_ BitVec 64))

(assert (=> b!69122 (= lt!30386 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30391 () Unit!1909)

(assert (=> b!69122 (= lt!30391 (addApplyDifferent!49 lt!30392 lt!30393 (zeroValue!2073 newMap!16) lt!30386))))

(assert (=> b!69122 (= (apply!73 (+!88 lt!30392 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16))) lt!30386) (apply!73 lt!30392 lt!30386))))

(declare-fun lt!30377 () Unit!1909)

(assert (=> b!69122 (= lt!30377 lt!30391)))

(declare-fun lt!30389 () ListLongMap!1385)

(assert (=> b!69122 (= lt!30389 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite c!9730 (_values!2150 newMap!16) lt!30013) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30381 () (_ BitVec 64))

(assert (=> b!69122 (= lt!30381 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30373 () (_ BitVec 64))

(assert (=> b!69122 (= lt!30373 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69122 (= lt!30384 (addApplyDifferent!49 lt!30389 lt!30381 (minValue!2073 newMap!16) lt!30373))))

(assert (=> b!69122 (= (apply!73 (+!88 lt!30389 (tuple2!2093 lt!30381 (minValue!2073 newMap!16))) lt!30373) (apply!73 lt!30389 lt!30373))))

(declare-fun bm!5883 () Bool)

(declare-fun call!5891 () ListLongMap!1385)

(declare-fun call!5892 () ListLongMap!1385)

(assert (=> bm!5883 (= call!5891 call!5892)))

(declare-fun b!69123 () Bool)

(declare-fun e!45267 () Bool)

(assert (=> b!69123 (= e!45267 (= (apply!73 lt!30387 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (ite c!9730 (_values!2150 newMap!16) lt!30013)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69123 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (ite c!9730 (_values!2150 newMap!16) lt!30013))))))

(assert (=> b!69123 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun bm!5884 () Bool)

(declare-fun call!5890 () ListLongMap!1385)

(assert (=> bm!5884 (= call!5890 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite c!9730 (_values!2150 newMap!16) lt!30013) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69124 () Bool)

(declare-fun e!45265 () Bool)

(assert (=> b!69124 (= e!45265 e!45267)))

(declare-fun res!37128 () Bool)

(assert (=> b!69124 (=> (not res!37128) (not e!45267))))

(assert (=> b!69124 (= res!37128 (contains!710 lt!30387 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69124 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69125 () Bool)

(declare-fun e!45271 () ListLongMap!1385)

(assert (=> b!69125 (= e!45271 call!5891)))

(declare-fun b!69126 () Bool)

(declare-fun e!45266 () ListLongMap!1385)

(declare-fun call!5888 () ListLongMap!1385)

(assert (=> b!69126 (= e!45266 call!5888)))

(declare-fun b!69127 () Bool)

(declare-fun res!37123 () Bool)

(declare-fun e!45269 () Bool)

(assert (=> b!69127 (=> (not res!37123) (not e!45269))))

(declare-fun e!45264 () Bool)

(assert (=> b!69127 (= res!37123 e!45264)))

(declare-fun c!9843 () Bool)

(assert (=> b!69127 (= c!9843 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!14963 () Bool)

(assert (=> d!14963 e!45269))

(declare-fun res!37127 () Bool)

(assert (=> d!14963 (=> (not res!37127) (not e!45269))))

(assert (=> d!14963 (= res!37127 (or (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun lt!30380 () ListLongMap!1385)

(assert (=> d!14963 (= lt!30387 lt!30380)))

(declare-fun lt!30383 () Unit!1909)

(assert (=> d!14963 (= lt!30383 e!45263)))

(declare-fun c!9845 () Bool)

(declare-fun e!45268 () Bool)

(assert (=> d!14963 (= c!9845 e!45268)))

(declare-fun res!37125 () Bool)

(assert (=> d!14963 (=> (not res!37125) (not e!45268))))

(assert (=> d!14963 (= res!37125 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun e!45272 () ListLongMap!1385)

(assert (=> d!14963 (= lt!30380 e!45272)))

(declare-fun c!9841 () Bool)

(assert (=> d!14963 (= c!9841 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14963 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!14963 (= (getCurrentListMap!406 (_keys!3811 newMap!16) (ite c!9730 (_values!2150 newMap!16) lt!30013) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30387)))

(declare-fun bm!5885 () Bool)

(declare-fun call!5889 () Bool)

(assert (=> bm!5885 (= call!5889 (contains!710 lt!30387 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5886 () Bool)

(declare-fun call!5886 () Bool)

(assert (=> bm!5886 (= call!5886 (contains!710 lt!30387 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69128 () Bool)

(declare-fun e!45270 () Bool)

(assert (=> b!69128 (= e!45270 e!45261)))

(declare-fun res!37122 () Bool)

(assert (=> b!69128 (= res!37122 call!5889)))

(assert (=> b!69128 (=> (not res!37122) (not e!45261))))

(declare-fun bm!5887 () Bool)

(declare-fun call!5887 () ListLongMap!1385)

(assert (=> bm!5887 (= call!5888 call!5887)))

(declare-fun b!69129 () Bool)

(declare-fun e!45273 () Bool)

(assert (=> b!69129 (= e!45273 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69130 () Bool)

(assert (=> b!69130 (= e!45272 e!45271)))

(declare-fun c!9844 () Bool)

(assert (=> b!69130 (= c!9844 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69131 () Bool)

(assert (=> b!69131 (= e!45272 (+!88 call!5892 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69132 () Bool)

(assert (=> b!69132 (= e!45268 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69133 () Bool)

(declare-fun e!45262 () Bool)

(assert (=> b!69133 (= e!45262 (= (apply!73 lt!30387 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun b!69134 () Bool)

(assert (=> b!69134 (= e!45269 e!45270)))

(declare-fun c!9846 () Bool)

(assert (=> b!69134 (= c!9846 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69135 () Bool)

(declare-fun c!9842 () Bool)

(assert (=> b!69135 (= c!9842 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69135 (= e!45271 e!45266)))

(declare-fun bm!5888 () Bool)

(assert (=> bm!5888 (= call!5892 (+!88 (ite c!9841 call!5890 (ite c!9844 call!5887 call!5888)) (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!69136 () Bool)

(assert (=> b!69136 (= e!45270 (not call!5889))))

(declare-fun b!69137 () Bool)

(assert (=> b!69137 (= e!45264 (not call!5886))))

(declare-fun b!69138 () Bool)

(declare-fun res!37126 () Bool)

(assert (=> b!69138 (=> (not res!37126) (not e!45269))))

(assert (=> b!69138 (= res!37126 e!45265)))

(declare-fun res!37124 () Bool)

(assert (=> b!69138 (=> res!37124 e!45265)))

(assert (=> b!69138 (= res!37124 (not e!45273))))

(declare-fun res!37121 () Bool)

(assert (=> b!69138 (=> (not res!37121) (not e!45273))))

(assert (=> b!69138 (= res!37121 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69139 () Bool)

(assert (=> b!69139 (= e!45264 e!45262)))

(declare-fun res!37120 () Bool)

(assert (=> b!69139 (= res!37120 call!5886)))

(assert (=> b!69139 (=> (not res!37120) (not e!45262))))

(declare-fun b!69140 () Bool)

(assert (=> b!69140 (= e!45266 call!5891)))

(declare-fun bm!5889 () Bool)

(assert (=> bm!5889 (= call!5887 call!5890)))

(declare-fun b!69141 () Bool)

(declare-fun Unit!1932 () Unit!1909)

(assert (=> b!69141 (= e!45263 Unit!1932)))

(assert (= (and d!14963 c!9841) b!69131))

(assert (= (and d!14963 (not c!9841)) b!69130))

(assert (= (and b!69130 c!9844) b!69125))

(assert (= (and b!69130 (not c!9844)) b!69135))

(assert (= (and b!69135 c!9842) b!69140))

(assert (= (and b!69135 (not c!9842)) b!69126))

(assert (= (or b!69140 b!69126) bm!5887))

(assert (= (or b!69125 bm!5887) bm!5889))

(assert (= (or b!69125 b!69140) bm!5883))

(assert (= (or b!69131 bm!5889) bm!5884))

(assert (= (or b!69131 bm!5883) bm!5888))

(assert (= (and d!14963 res!37125) b!69132))

(assert (= (and d!14963 c!9845) b!69122))

(assert (= (and d!14963 (not c!9845)) b!69141))

(assert (= (and d!14963 res!37127) b!69138))

(assert (= (and b!69138 res!37121) b!69129))

(assert (= (and b!69138 (not res!37124)) b!69124))

(assert (= (and b!69124 res!37128) b!69123))

(assert (= (and b!69138 res!37126) b!69127))

(assert (= (and b!69127 c!9843) b!69139))

(assert (= (and b!69127 (not c!9843)) b!69137))

(assert (= (and b!69139 res!37120) b!69133))

(assert (= (or b!69139 b!69137) bm!5886))

(assert (= (and b!69127 res!37123) b!69134))

(assert (= (and b!69134 c!9846) b!69128))

(assert (= (and b!69134 (not c!9846)) b!69136))

(assert (= (and b!69128 res!37122) b!69121))

(assert (= (or b!69128 b!69136) bm!5885))

(declare-fun b_lambda!3103 () Bool)

(assert (=> (not b_lambda!3103) (not b!69123)))

(assert (=> b!69123 t!4967))

(declare-fun b_and!4261 () Bool)

(assert (= b_and!4257 (and (=> t!4967 result!2615) b_and!4261)))

(assert (=> b!69123 t!4969))

(declare-fun b_and!4263 () Bool)

(assert (= b_and!4259 (and (=> t!4969 result!2617) b_and!4263)))

(assert (=> b!69129 m!64745))

(assert (=> b!69129 m!64745))

(assert (=> b!69129 m!64747))

(declare-fun m!65165 () Bool)

(assert (=> b!69133 m!65165))

(declare-fun m!65167 () Bool)

(assert (=> b!69131 m!65167))

(declare-fun m!65169 () Bool)

(assert (=> b!69123 m!65169))

(assert (=> b!69123 m!64745))

(assert (=> b!69123 m!64745))

(declare-fun m!65171 () Bool)

(assert (=> b!69123 m!65171))

(assert (=> b!69123 m!65169))

(assert (=> b!69123 m!64757))

(declare-fun m!65173 () Bool)

(assert (=> b!69123 m!65173))

(assert (=> b!69123 m!64757))

(declare-fun m!65175 () Bool)

(assert (=> bm!5886 m!65175))

(assert (=> d!14963 m!64725))

(declare-fun m!65177 () Bool)

(assert (=> b!69122 m!65177))

(declare-fun m!65179 () Bool)

(assert (=> b!69122 m!65179))

(declare-fun m!65181 () Bool)

(assert (=> b!69122 m!65181))

(declare-fun m!65183 () Bool)

(assert (=> b!69122 m!65183))

(declare-fun m!65185 () Bool)

(assert (=> b!69122 m!65185))

(declare-fun m!65187 () Bool)

(assert (=> b!69122 m!65187))

(declare-fun m!65189 () Bool)

(assert (=> b!69122 m!65189))

(assert (=> b!69122 m!65181))

(declare-fun m!65191 () Bool)

(assert (=> b!69122 m!65191))

(assert (=> b!69122 m!65183))

(declare-fun m!65193 () Bool)

(assert (=> b!69122 m!65193))

(declare-fun m!65195 () Bool)

(assert (=> b!69122 m!65195))

(declare-fun m!65197 () Bool)

(assert (=> b!69122 m!65197))

(assert (=> b!69122 m!65177))

(declare-fun m!65199 () Bool)

(assert (=> b!69122 m!65199))

(declare-fun m!65201 () Bool)

(assert (=> b!69122 m!65201))

(assert (=> b!69122 m!65193))

(declare-fun m!65203 () Bool)

(assert (=> b!69122 m!65203))

(assert (=> b!69122 m!64745))

(declare-fun m!65205 () Bool)

(assert (=> b!69122 m!65205))

(declare-fun m!65207 () Bool)

(assert (=> b!69122 m!65207))

(assert (=> bm!5884 m!65203))

(assert (=> b!69124 m!64745))

(assert (=> b!69124 m!64745))

(declare-fun m!65209 () Bool)

(assert (=> b!69124 m!65209))

(assert (=> b!69132 m!64745))

(assert (=> b!69132 m!64745))

(assert (=> b!69132 m!64747))

(declare-fun m!65211 () Bool)

(assert (=> bm!5888 m!65211))

(declare-fun m!65213 () Bool)

(assert (=> b!69121 m!65213))

(declare-fun m!65215 () Bool)

(assert (=> bm!5885 m!65215))

(assert (=> bm!5819 d!14963))

(assert (=> b!68566 d!14945))

(assert (=> b!68566 d!14947))

(declare-fun d!14965 () Bool)

(assert (=> d!14965 (= (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68752 d!14965))

(declare-fun d!14967 () Bool)

(declare-fun e!45274 () Bool)

(assert (=> d!14967 e!45274))

(declare-fun res!37129 () Bool)

(assert (=> d!14967 (=> (not res!37129) (not e!45274))))

(declare-fun lt!30397 () ListLongMap!1385)

(assert (=> d!14967 (= res!37129 (contains!710 lt!30397 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun lt!30395 () List!1459)

(assert (=> d!14967 (= lt!30397 (ListLongMap!1386 lt!30395))))

(declare-fun lt!30398 () Unit!1909)

(declare-fun lt!30396 () Unit!1909)

(assert (=> d!14967 (= lt!30398 lt!30396)))

(assert (=> d!14967 (= (getValueByKey!132 lt!30395 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!14967 (= lt!30396 (lemmaContainsTupThenGetReturnValue!49 lt!30395 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!14967 (= lt!30395 (insertStrictlySorted!52 (toList!708 call!5803) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!14967 (= (+!88 call!5803 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) lt!30397)))

(declare-fun b!69142 () Bool)

(declare-fun res!37130 () Bool)

(assert (=> b!69142 (=> (not res!37130) (not e!45274))))

(assert (=> b!69142 (= res!37130 (= (getValueByKey!132 (toList!708 lt!30397) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!69143 () Bool)

(assert (=> b!69143 (= e!45274 (contains!713 (toList!708 lt!30397) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(assert (= (and d!14967 res!37129) b!69142))

(assert (= (and b!69142 res!37130) b!69143))

(declare-fun m!65217 () Bool)

(assert (=> d!14967 m!65217))

(declare-fun m!65219 () Bool)

(assert (=> d!14967 m!65219))

(declare-fun m!65221 () Bool)

(assert (=> d!14967 m!65221))

(declare-fun m!65223 () Bool)

(assert (=> d!14967 m!65223))

(declare-fun m!65225 () Bool)

(assert (=> b!69142 m!65225))

(declare-fun m!65227 () Bool)

(assert (=> b!69143 m!65227))

(assert (=> b!68692 d!14967))

(declare-fun d!14969 () Bool)

(assert (=> d!14969 (= (apply!73 lt!30085 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1134 (getValueByKey!132 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2979 () Bool)

(assert (= bs!2979 d!14969))

(declare-fun m!65229 () Bool)

(assert (=> bs!2979 m!65229))

(assert (=> bs!2979 m!65229))

(declare-fun m!65231 () Bool)

(assert (=> bs!2979 m!65231))

(assert (=> b!68756 d!14969))

(assert (=> b!68798 d!14965))

(assert (=> d!14813 d!14819))

(declare-fun d!14971 () Bool)

(assert (=> d!14971 (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) from!355 Nil!1457)))

(assert (=> d!14971 true))

(declare-fun _$71!90 () Unit!1909)

(assert (=> d!14971 (= (choose!39 (_keys!3811 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!90)))

(declare-fun bs!2980 () Bool)

(assert (= bs!2980 d!14971))

(assert (=> bs!2980 m!64369))

(assert (=> d!14813 d!14971))

(declare-fun d!14973 () Bool)

(declare-fun e!45276 () Bool)

(assert (=> d!14973 e!45276))

(declare-fun res!37131 () Bool)

(assert (=> d!14973 (=> res!37131 e!45276)))

(declare-fun lt!30402 () Bool)

(assert (=> d!14973 (= res!37131 (not lt!30402))))

(declare-fun lt!30401 () Bool)

(assert (=> d!14973 (= lt!30402 lt!30401)))

(declare-fun lt!30399 () Unit!1909)

(declare-fun e!45275 () Unit!1909)

(assert (=> d!14973 (= lt!30399 e!45275)))

(declare-fun c!9847 () Bool)

(assert (=> d!14973 (= c!9847 lt!30401)))

(assert (=> d!14973 (= lt!30401 (containsKey!135 (toList!708 lt!30136) (_1!1057 lt!29850)))))

(assert (=> d!14973 (= (contains!710 lt!30136 (_1!1057 lt!29850)) lt!30402)))

(declare-fun b!69144 () Bool)

(declare-fun lt!30400 () Unit!1909)

(assert (=> b!69144 (= e!45275 lt!30400)))

(assert (=> b!69144 (= lt!30400 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30136) (_1!1057 lt!29850)))))

(assert (=> b!69144 (isDefined!84 (getValueByKey!132 (toList!708 lt!30136) (_1!1057 lt!29850)))))

(declare-fun b!69145 () Bool)

(declare-fun Unit!1933 () Unit!1909)

(assert (=> b!69145 (= e!45275 Unit!1933)))

(declare-fun b!69146 () Bool)

(assert (=> b!69146 (= e!45276 (isDefined!84 (getValueByKey!132 (toList!708 lt!30136) (_1!1057 lt!29850))))))

(assert (= (and d!14973 c!9847) b!69144))

(assert (= (and d!14973 (not c!9847)) b!69145))

(assert (= (and d!14973 (not res!37131)) b!69146))

(declare-fun m!65233 () Bool)

(assert (=> d!14973 m!65233))

(declare-fun m!65235 () Bool)

(assert (=> b!69144 m!65235))

(assert (=> b!69144 m!64705))

(assert (=> b!69144 m!64705))

(declare-fun m!65237 () Bool)

(assert (=> b!69144 m!65237))

(assert (=> b!69146 m!64705))

(assert (=> b!69146 m!64705))

(assert (=> b!69146 m!65237))

(assert (=> d!14851 d!14973))

(declare-fun b!69150 () Bool)

(declare-fun e!45278 () Option!138)

(assert (=> b!69150 (= e!45278 None!136)))

(declare-fun b!69149 () Bool)

(assert (=> b!69149 (= e!45278 (getValueByKey!132 (t!4954 lt!30134) (_1!1057 lt!29850)))))

(declare-fun b!69147 () Bool)

(declare-fun e!45277 () Option!138)

(assert (=> b!69147 (= e!45277 (Some!137 (_2!1057 (h!2040 lt!30134))))))

(declare-fun d!14975 () Bool)

(declare-fun c!9848 () Bool)

(assert (=> d!14975 (= c!9848 (and ((_ is Cons!1455) lt!30134) (= (_1!1057 (h!2040 lt!30134)) (_1!1057 lt!29850))))))

(assert (=> d!14975 (= (getValueByKey!132 lt!30134 (_1!1057 lt!29850)) e!45277)))

(declare-fun b!69148 () Bool)

(assert (=> b!69148 (= e!45277 e!45278)))

(declare-fun c!9849 () Bool)

(assert (=> b!69148 (= c!9849 (and ((_ is Cons!1455) lt!30134) (not (= (_1!1057 (h!2040 lt!30134)) (_1!1057 lt!29850)))))))

(assert (= (and d!14975 c!9848) b!69147))

(assert (= (and d!14975 (not c!9848)) b!69148))

(assert (= (and b!69148 c!9849) b!69149))

(assert (= (and b!69148 (not c!9849)) b!69150))

(declare-fun m!65239 () Bool)

(assert (=> b!69149 m!65239))

(assert (=> d!14851 d!14975))

(declare-fun d!14977 () Bool)

(assert (=> d!14977 (= (getValueByKey!132 lt!30134 (_1!1057 lt!29850)) (Some!137 (_2!1057 lt!29850)))))

(declare-fun lt!30403 () Unit!1909)

(assert (=> d!14977 (= lt!30403 (choose!394 lt!30134 (_1!1057 lt!29850) (_2!1057 lt!29850)))))

(declare-fun e!45279 () Bool)

(assert (=> d!14977 e!45279))

(declare-fun res!37132 () Bool)

(assert (=> d!14977 (=> (not res!37132) (not e!45279))))

(assert (=> d!14977 (= res!37132 (isStrictlySorted!277 lt!30134))))

(assert (=> d!14977 (= (lemmaContainsTupThenGetReturnValue!49 lt!30134 (_1!1057 lt!29850) (_2!1057 lt!29850)) lt!30403)))

(declare-fun b!69151 () Bool)

(declare-fun res!37133 () Bool)

(assert (=> b!69151 (=> (not res!37133) (not e!45279))))

(assert (=> b!69151 (= res!37133 (containsKey!135 lt!30134 (_1!1057 lt!29850)))))

(declare-fun b!69152 () Bool)

(assert (=> b!69152 (= e!45279 (contains!713 lt!30134 (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(assert (= (and d!14977 res!37132) b!69151))

(assert (= (and b!69151 res!37133) b!69152))

(assert (=> d!14977 m!64699))

(declare-fun m!65241 () Bool)

(assert (=> d!14977 m!65241))

(declare-fun m!65243 () Bool)

(assert (=> d!14977 m!65243))

(declare-fun m!65245 () Bool)

(assert (=> b!69151 m!65245))

(declare-fun m!65247 () Bool)

(assert (=> b!69152 m!65247))

(assert (=> d!14851 d!14977))

(declare-fun b!69153 () Bool)

(declare-fun e!45282 () List!1459)

(declare-fun call!5894 () List!1459)

(assert (=> b!69153 (= e!45282 call!5894)))

(declare-fun b!69154 () Bool)

(declare-fun e!45280 () List!1459)

(assert (=> b!69154 (= e!45280 (insertStrictlySorted!52 (t!4954 (toList!708 lt!29844)) (_1!1057 lt!29850) (_2!1057 lt!29850)))))

(declare-fun b!69155 () Bool)

(declare-fun e!45283 () List!1459)

(declare-fun call!5893 () List!1459)

(assert (=> b!69155 (= e!45283 call!5893)))

(declare-fun b!69156 () Bool)

(assert (=> b!69156 (= e!45283 call!5893)))

(declare-fun b!69157 () Bool)

(declare-fun c!9853 () Bool)

(assert (=> b!69157 (= c!9853 (and ((_ is Cons!1455) (toList!708 lt!29844)) (bvsgt (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 lt!29850))))))

(assert (=> b!69157 (= e!45282 e!45283)))

(declare-fun b!69158 () Bool)

(declare-fun res!37135 () Bool)

(declare-fun e!45281 () Bool)

(assert (=> b!69158 (=> (not res!37135) (not e!45281))))

(declare-fun lt!30404 () List!1459)

(assert (=> b!69158 (= res!37135 (containsKey!135 lt!30404 (_1!1057 lt!29850)))))

(declare-fun bm!5891 () Bool)

(declare-fun c!9850 () Bool)

(declare-fun call!5895 () List!1459)

(assert (=> bm!5891 (= call!5895 ($colon$colon!63 e!45280 (ite c!9850 (h!2040 (toList!708 lt!29844)) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850)))))))

(declare-fun c!9851 () Bool)

(assert (=> bm!5891 (= c!9851 c!9850)))

(declare-fun b!69159 () Bool)

(declare-fun e!45284 () List!1459)

(assert (=> b!69159 (= e!45284 e!45282)))

(declare-fun c!9852 () Bool)

(assert (=> b!69159 (= c!9852 (and ((_ is Cons!1455) (toList!708 lt!29844)) (= (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 lt!29850))))))

(declare-fun b!69160 () Bool)

(assert (=> b!69160 (= e!45280 (ite c!9852 (t!4954 (toList!708 lt!29844)) (ite c!9853 (Cons!1455 (h!2040 (toList!708 lt!29844)) (t!4954 (toList!708 lt!29844))) Nil!1456)))))

(declare-fun b!69161 () Bool)

(assert (=> b!69161 (= e!45284 call!5895)))

(declare-fun bm!5890 () Bool)

(assert (=> bm!5890 (= call!5894 call!5895)))

(declare-fun d!14979 () Bool)

(assert (=> d!14979 e!45281))

(declare-fun res!37134 () Bool)

(assert (=> d!14979 (=> (not res!37134) (not e!45281))))

(assert (=> d!14979 (= res!37134 (isStrictlySorted!277 lt!30404))))

(assert (=> d!14979 (= lt!30404 e!45284)))

(assert (=> d!14979 (= c!9850 (and ((_ is Cons!1455) (toList!708 lt!29844)) (bvslt (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 lt!29850))))))

(assert (=> d!14979 (isStrictlySorted!277 (toList!708 lt!29844))))

(assert (=> d!14979 (= (insertStrictlySorted!52 (toList!708 lt!29844) (_1!1057 lt!29850) (_2!1057 lt!29850)) lt!30404)))

(declare-fun b!69162 () Bool)

(assert (=> b!69162 (= e!45281 (contains!713 lt!30404 (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun bm!5892 () Bool)

(assert (=> bm!5892 (= call!5893 call!5894)))

(assert (= (and d!14979 c!9850) b!69161))

(assert (= (and d!14979 (not c!9850)) b!69159))

(assert (= (and b!69159 c!9852) b!69153))

(assert (= (and b!69159 (not c!9852)) b!69157))

(assert (= (and b!69157 c!9853) b!69156))

(assert (= (and b!69157 (not c!9853)) b!69155))

(assert (= (or b!69156 b!69155) bm!5892))

(assert (= (or b!69153 bm!5892) bm!5890))

(assert (= (or b!69161 bm!5890) bm!5891))

(assert (= (and bm!5891 c!9851) b!69154))

(assert (= (and bm!5891 (not c!9851)) b!69160))

(assert (= (and d!14979 res!37134) b!69158))

(assert (= (and b!69158 res!37135) b!69162))

(declare-fun m!65249 () Bool)

(assert (=> d!14979 m!65249))

(declare-fun m!65251 () Bool)

(assert (=> d!14979 m!65251))

(declare-fun m!65253 () Bool)

(assert (=> bm!5891 m!65253))

(declare-fun m!65255 () Bool)

(assert (=> b!69162 m!65255))

(declare-fun m!65257 () Bool)

(assert (=> b!69158 m!65257))

(declare-fun m!65259 () Bool)

(assert (=> b!69154 m!65259))

(assert (=> d!14851 d!14979))

(declare-fun d!14981 () Bool)

(declare-fun res!37136 () Bool)

(declare-fun e!45285 () Bool)

(assert (=> d!14981 (=> res!37136 e!45285)))

(assert (=> d!14981 (= res!37136 (= (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14981 (= (arrayContainsKey!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000) e!45285)))

(declare-fun b!69163 () Bool)

(declare-fun e!45286 () Bool)

(assert (=> b!69163 (= e!45285 e!45286)))

(declare-fun res!37137 () Bool)

(assert (=> b!69163 (=> (not res!37137) (not e!45286))))

(assert (=> b!69163 (= res!37137 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69164 () Bool)

(assert (=> b!69164 (= e!45286 (arrayContainsKey!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!14981 (not res!37136)) b!69163))

(assert (= (and b!69163 res!37137) b!69164))

(assert (=> d!14981 m!64745))

(assert (=> b!69164 m!64329))

(declare-fun m!65261 () Bool)

(assert (=> b!69164 m!65261))

(assert (=> bm!5798 d!14981))

(assert (=> b!68535 d!14815))

(declare-fun d!14983 () Bool)

(declare-fun lt!30405 () Bool)

(assert (=> d!14983 (= lt!30405 (select (content!74 (toList!708 lt!30124)) lt!29850))))

(declare-fun e!45287 () Bool)

(assert (=> d!14983 (= lt!30405 e!45287)))

(declare-fun res!37138 () Bool)

(assert (=> d!14983 (=> (not res!37138) (not e!45287))))

(assert (=> d!14983 (= res!37138 ((_ is Cons!1455) (toList!708 lt!30124)))))

(assert (=> d!14983 (= (contains!713 (toList!708 lt!30124) lt!29850) lt!30405)))

(declare-fun b!69165 () Bool)

(declare-fun e!45288 () Bool)

(assert (=> b!69165 (= e!45287 e!45288)))

(declare-fun res!37139 () Bool)

(assert (=> b!69165 (=> res!37139 e!45288)))

(assert (=> b!69165 (= res!37139 (= (h!2040 (toList!708 lt!30124)) lt!29850))))

(declare-fun b!69166 () Bool)

(assert (=> b!69166 (= e!45288 (contains!713 (t!4954 (toList!708 lt!30124)) lt!29850))))

(assert (= (and d!14983 res!37138) b!69165))

(assert (= (and b!69165 (not res!37139)) b!69166))

(declare-fun m!65263 () Bool)

(assert (=> d!14983 m!65263))

(declare-fun m!65265 () Bool)

(assert (=> d!14983 m!65265))

(declare-fun m!65267 () Bool)

(assert (=> b!69166 m!65267))

(assert (=> b!68806 d!14983))

(assert (=> b!68800 d!14935))

(declare-fun d!14985 () Bool)

(declare-fun e!45290 () Bool)

(assert (=> d!14985 e!45290))

(declare-fun res!37140 () Bool)

(assert (=> d!14985 (=> res!37140 e!45290)))

(declare-fun lt!30409 () Bool)

(assert (=> d!14985 (= res!37140 (not lt!30409))))

(declare-fun lt!30408 () Bool)

(assert (=> d!14985 (= lt!30409 lt!30408)))

(declare-fun lt!30406 () Unit!1909)

(declare-fun e!45289 () Unit!1909)

(assert (=> d!14985 (= lt!30406 e!45289)))

(declare-fun c!9854 () Bool)

(assert (=> d!14985 (= c!9854 lt!30408)))

(assert (=> d!14985 (= lt!30408 (containsKey!135 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))

(assert (=> d!14985 (= (contains!710 e!44994 (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))) lt!30409)))

(declare-fun b!69167 () Bool)

(declare-fun lt!30407 () Unit!1909)

(assert (=> b!69167 (= e!45289 lt!30407)))

(assert (=> b!69167 (= lt!30407 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))

(assert (=> b!69167 (isDefined!84 (getValueByKey!132 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))

(declare-fun b!69168 () Bool)

(declare-fun Unit!1934 () Unit!1909)

(assert (=> b!69168 (= e!45289 Unit!1934)))

(declare-fun b!69169 () Bool)

(assert (=> b!69169 (= e!45290 (isDefined!84 (getValueByKey!132 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))))))))

(assert (= (and d!14985 c!9854) b!69167))

(assert (= (and d!14985 (not c!9854)) b!69168))

(assert (= (and d!14985 (not res!37140)) b!69169))

(declare-fun m!65269 () Bool)

(assert (=> d!14985 m!65269))

(declare-fun m!65271 () Bool)

(assert (=> b!69167 m!65271))

(declare-fun m!65273 () Bool)

(assert (=> b!69167 m!65273))

(assert (=> b!69167 m!65273))

(declare-fun m!65275 () Bool)

(assert (=> b!69167 m!65275))

(assert (=> b!69169 m!65273))

(assert (=> b!69169 m!65273))

(assert (=> b!69169 m!65275))

(assert (=> bm!5812 d!14985))

(declare-fun d!14987 () Bool)

(declare-fun res!37141 () Bool)

(declare-fun e!45291 () Bool)

(assert (=> d!14987 (=> (not res!37141) (not e!45291))))

(assert (=> d!14987 (= res!37141 (simpleValid!49 (_2!1058 lt!30016)))))

(assert (=> d!14987 (= (valid!292 (_2!1058 lt!30016)) e!45291)))

(declare-fun b!69170 () Bool)

(declare-fun res!37142 () Bool)

(assert (=> b!69170 (=> (not res!37142) (not e!45291))))

(assert (=> b!69170 (= res!37142 (= (arrayCountValidKeys!0 (_keys!3811 (_2!1058 lt!30016)) #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))) (_size!387 (_2!1058 lt!30016))))))

(declare-fun b!69171 () Bool)

(declare-fun res!37143 () Bool)

(assert (=> b!69171 (=> (not res!37143) (not e!45291))))

(assert (=> b!69171 (= res!37143 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3811 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016))))))

(declare-fun b!69172 () Bool)

(assert (=> b!69172 (= e!45291 (arrayNoDuplicates!0 (_keys!3811 (_2!1058 lt!30016)) #b00000000000000000000000000000000 Nil!1457))))

(assert (= (and d!14987 res!37141) b!69170))

(assert (= (and b!69170 res!37142) b!69171))

(assert (= (and b!69171 res!37143) b!69172))

(declare-fun m!65277 () Bool)

(assert (=> d!14987 m!65277))

(declare-fun m!65279 () Bool)

(assert (=> b!69170 m!65279))

(declare-fun m!65281 () Bool)

(assert (=> b!69171 m!65281))

(declare-fun m!65283 () Bool)

(assert (=> b!69172 m!65283))

(assert (=> d!14825 d!14987))

(assert (=> d!14825 d!14831))

(declare-fun d!14989 () Bool)

(declare-fun lt!30410 () Bool)

(assert (=> d!14989 (= lt!30410 (select (content!74 (toList!708 lt!30132)) lt!29846))))

(declare-fun e!45292 () Bool)

(assert (=> d!14989 (= lt!30410 e!45292)))

(declare-fun res!37144 () Bool)

(assert (=> d!14989 (=> (not res!37144) (not e!45292))))

(assert (=> d!14989 (= res!37144 ((_ is Cons!1455) (toList!708 lt!30132)))))

(assert (=> d!14989 (= (contains!713 (toList!708 lt!30132) lt!29846) lt!30410)))

(declare-fun b!69173 () Bool)

(declare-fun e!45293 () Bool)

(assert (=> b!69173 (= e!45292 e!45293)))

(declare-fun res!37145 () Bool)

(assert (=> b!69173 (=> res!37145 e!45293)))

(assert (=> b!69173 (= res!37145 (= (h!2040 (toList!708 lt!30132)) lt!29846))))

(declare-fun b!69174 () Bool)

(assert (=> b!69174 (= e!45293 (contains!713 (t!4954 (toList!708 lt!30132)) lt!29846))))

(assert (= (and d!14989 res!37144) b!69173))

(assert (= (and b!69173 (not res!37145)) b!69174))

(declare-fun m!65285 () Bool)

(assert (=> d!14989 m!65285))

(declare-fun m!65287 () Bool)

(assert (=> d!14989 m!65287))

(declare-fun m!65289 () Bool)

(assert (=> b!69174 m!65289))

(assert (=> b!68810 d!14989))

(declare-fun d!14991 () Bool)

(assert (=> d!14991 (= (apply!73 lt!30085 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1134 (getValueByKey!132 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2981 () Bool)

(assert (= bs!2981 d!14991))

(assert (=> bs!2981 m!65063))

(assert (=> bs!2981 m!65063))

(declare-fun m!65291 () Bool)

(assert (=> bs!2981 m!65291))

(assert (=> b!68744 d!14991))

(declare-fun b!69183 () Bool)

(declare-fun e!45298 () (_ BitVec 32))

(declare-fun call!5898 () (_ BitVec 32))

(assert (=> b!69183 (= e!45298 call!5898)))

(declare-fun b!69184 () Bool)

(assert (=> b!69184 (= e!45298 (bvadd #b00000000000000000000000000000001 call!5898))))

(declare-fun d!14993 () Bool)

(declare-fun lt!30413 () (_ BitVec 32))

(assert (=> d!14993 (and (bvsge lt!30413 #b00000000000000000000000000000000) (bvsle lt!30413 (bvsub (size!2068 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!45299 () (_ BitVec 32))

(assert (=> d!14993 (= lt!30413 e!45299)))

(declare-fun c!9859 () Bool)

(assert (=> d!14993 (= c!9859 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!14993 (and (bvsle #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2068 (_keys!3811 newMap!16)) (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!14993 (= (arrayCountValidKeys!0 (_keys!3811 newMap!16) #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) lt!30413)))

(declare-fun b!69185 () Bool)

(assert (=> b!69185 (= e!45299 e!45298)))

(declare-fun c!9860 () Bool)

(assert (=> b!69185 (= c!9860 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5895 () Bool)

(assert (=> bm!5895 (= call!5898 (arrayCountValidKeys!0 (_keys!3811 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69186 () Bool)

(assert (=> b!69186 (= e!45299 #b00000000000000000000000000000000)))

(assert (= (and d!14993 c!9859) b!69186))

(assert (= (and d!14993 (not c!9859)) b!69185))

(assert (= (and b!69185 c!9860) b!69184))

(assert (= (and b!69185 (not c!9860)) b!69183))

(assert (= (or b!69184 b!69183) bm!5895))

(assert (=> b!69185 m!64745))

(assert (=> b!69185 m!64745))

(assert (=> b!69185 m!64747))

(declare-fun m!65293 () Bool)

(assert (=> bm!5895 m!65293))

(assert (=> b!68699 d!14993))

(declare-fun d!14995 () Bool)

(declare-fun e!45300 () Bool)

(assert (=> d!14995 e!45300))

(declare-fun res!37146 () Bool)

(assert (=> d!14995 (=> (not res!37146) (not e!45300))))

(declare-fun lt!30416 () ListLongMap!1385)

(assert (=> d!14995 (= res!37146 (contains!710 lt!30416 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun lt!30414 () List!1459)

(assert (=> d!14995 (= lt!30416 (ListLongMap!1386 lt!30414))))

(declare-fun lt!30417 () Unit!1909)

(declare-fun lt!30415 () Unit!1909)

(assert (=> d!14995 (= lt!30417 lt!30415)))

(assert (=> d!14995 (= (getValueByKey!132 lt!30414 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!14995 (= lt!30415 (lemmaContainsTupThenGetReturnValue!49 lt!30414 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!14995 (= lt!30414 (insertStrictlySorted!52 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!14995 (= (+!88 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) lt!30416)))

(declare-fun b!69187 () Bool)

(declare-fun res!37147 () Bool)

(assert (=> b!69187 (=> (not res!37147) (not e!45300))))

(assert (=> b!69187 (= res!37147 (= (getValueByKey!132 (toList!708 lt!30416) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!69188 () Bool)

(assert (=> b!69188 (= e!45300 (contains!713 (toList!708 lt!30416) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(assert (= (and d!14995 res!37146) b!69187))

(assert (= (and b!69187 res!37147) b!69188))

(declare-fun m!65295 () Bool)

(assert (=> d!14995 m!65295))

(declare-fun m!65297 () Bool)

(assert (=> d!14995 m!65297))

(declare-fun m!65299 () Bool)

(assert (=> d!14995 m!65299))

(declare-fun m!65301 () Bool)

(assert (=> d!14995 m!65301))

(declare-fun m!65303 () Bool)

(assert (=> b!69187 m!65303))

(declare-fun m!65305 () Bool)

(assert (=> b!69188 m!65305))

(assert (=> d!14853 d!14995))

(declare-fun d!14997 () Bool)

(declare-fun e!45301 () Bool)

(assert (=> d!14997 e!45301))

(declare-fun res!37148 () Bool)

(assert (=> d!14997 (=> (not res!37148) (not e!45301))))

(declare-fun lt!30420 () ListLongMap!1385)

(assert (=> d!14997 (= res!37148 (contains!710 lt!30420 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30418 () List!1459)

(assert (=> d!14997 (= lt!30420 (ListLongMap!1386 lt!30418))))

(declare-fun lt!30421 () Unit!1909)

(declare-fun lt!30419 () Unit!1909)

(assert (=> d!14997 (= lt!30421 lt!30419)))

(assert (=> d!14997 (= (getValueByKey!132 lt!30418 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14997 (= lt!30419 (lemmaContainsTupThenGetReturnValue!49 lt!30418 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14997 (= lt!30418 (insertStrictlySorted!52 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14997 (= (+!88 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30420)))

(declare-fun b!69189 () Bool)

(declare-fun res!37149 () Bool)

(assert (=> b!69189 (=> (not res!37149) (not e!45301))))

(assert (=> b!69189 (= res!37149 (= (getValueByKey!132 (toList!708 lt!30420) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69190 () Bool)

(assert (=> b!69190 (= e!45301 (contains!713 (toList!708 lt!30420) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14997 res!37148) b!69189))

(assert (= (and b!69189 res!37149) b!69190))

(declare-fun m!65307 () Bool)

(assert (=> d!14997 m!65307))

(declare-fun m!65309 () Bool)

(assert (=> d!14997 m!65309))

(declare-fun m!65311 () Bool)

(assert (=> d!14997 m!65311))

(declare-fun m!65313 () Bool)

(assert (=> d!14997 m!65313))

(declare-fun m!65315 () Bool)

(assert (=> b!69189 m!65315))

(declare-fun m!65317 () Bool)

(assert (=> b!69190 m!65317))

(assert (=> d!14853 d!14997))

(declare-fun d!14999 () Bool)

(declare-fun e!45302 () Bool)

(assert (=> d!14999 e!45302))

(declare-fun res!37150 () Bool)

(assert (=> d!14999 (=> (not res!37150) (not e!45302))))

(declare-fun lt!30424 () ListLongMap!1385)

(assert (=> d!14999 (= res!37150 (contains!710 lt!30424 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30422 () List!1459)

(assert (=> d!14999 (= lt!30424 (ListLongMap!1386 lt!30422))))

(declare-fun lt!30425 () Unit!1909)

(declare-fun lt!30423 () Unit!1909)

(assert (=> d!14999 (= lt!30425 lt!30423)))

(assert (=> d!14999 (= (getValueByKey!132 lt!30422 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14999 (= lt!30423 (lemmaContainsTupThenGetReturnValue!49 lt!30422 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14999 (= lt!30422 (insertStrictlySorted!52 (toList!708 lt!29844) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14999 (= (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30424)))

(declare-fun b!69191 () Bool)

(declare-fun res!37151 () Bool)

(assert (=> b!69191 (=> (not res!37151) (not e!45302))))

(assert (=> b!69191 (= res!37151 (= (getValueByKey!132 (toList!708 lt!30424) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69192 () Bool)

(assert (=> b!69192 (= e!45302 (contains!713 (toList!708 lt!30424) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14999 res!37150) b!69191))

(assert (= (and b!69191 res!37151) b!69192))

(declare-fun m!65319 () Bool)

(assert (=> d!14999 m!65319))

(declare-fun m!65321 () Bool)

(assert (=> d!14999 m!65321))

(declare-fun m!65323 () Bool)

(assert (=> d!14999 m!65323))

(declare-fun m!65325 () Bool)

(assert (=> d!14999 m!65325))

(declare-fun m!65327 () Bool)

(assert (=> b!69191 m!65327))

(declare-fun m!65329 () Bool)

(assert (=> b!69192 m!65329))

(assert (=> d!14853 d!14999))

(declare-fun d!15001 () Bool)

(assert (=> d!15001 (= (+!88 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (+!88 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(assert (=> d!15001 true))

(declare-fun _$28!115 () Unit!1909)

(assert (=> d!15001 (= (choose!388 lt!29844 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) _$28!115)))

(declare-fun bs!2982 () Bool)

(assert (= bs!2982 d!15001))

(assert (=> bs!2982 m!64715))

(assert (=> bs!2982 m!64715))

(assert (=> bs!2982 m!64717))

(assert (=> bs!2982 m!64711))

(assert (=> bs!2982 m!64711))

(assert (=> bs!2982 m!64713))

(assert (=> d!14853 d!15001))

(declare-fun d!15003 () Bool)

(declare-fun e!45303 () Bool)

(assert (=> d!15003 e!45303))

(declare-fun res!37152 () Bool)

(assert (=> d!15003 (=> (not res!37152) (not e!45303))))

(declare-fun lt!30428 () ListLongMap!1385)

(assert (=> d!15003 (= res!37152 (contains!710 lt!30428 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun lt!30426 () List!1459)

(assert (=> d!15003 (= lt!30428 (ListLongMap!1386 lt!30426))))

(declare-fun lt!30429 () Unit!1909)

(declare-fun lt!30427 () Unit!1909)

(assert (=> d!15003 (= lt!30429 lt!30427)))

(assert (=> d!15003 (= (getValueByKey!132 lt!30426 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15003 (= lt!30427 (lemmaContainsTupThenGetReturnValue!49 lt!30426 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15003 (= lt!30426 (insertStrictlySorted!52 (toList!708 lt!29844) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15003 (= (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) lt!30428)))

(declare-fun b!69193 () Bool)

(declare-fun res!37153 () Bool)

(assert (=> b!69193 (=> (not res!37153) (not e!45303))))

(assert (=> b!69193 (= res!37153 (= (getValueByKey!132 (toList!708 lt!30428) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!69194 () Bool)

(assert (=> b!69194 (= e!45303 (contains!713 (toList!708 lt!30428) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(assert (= (and d!15003 res!37152) b!69193))

(assert (= (and b!69193 res!37153) b!69194))

(declare-fun m!65331 () Bool)

(assert (=> d!15003 m!65331))

(declare-fun m!65333 () Bool)

(assert (=> d!15003 m!65333))

(declare-fun m!65335 () Bool)

(assert (=> d!15003 m!65335))

(declare-fun m!65337 () Bool)

(assert (=> d!15003 m!65337))

(declare-fun m!65339 () Bool)

(assert (=> b!69193 m!65339))

(declare-fun m!65341 () Bool)

(assert (=> b!69194 m!65341))

(assert (=> d!14853 d!15003))

(declare-fun d!15005 () Bool)

(declare-fun lt!30430 () Bool)

(assert (=> d!15005 (= lt!30430 (select (content!74 (toList!708 lt!30128)) lt!29846))))

(declare-fun e!45304 () Bool)

(assert (=> d!15005 (= lt!30430 e!45304)))

(declare-fun res!37154 () Bool)

(assert (=> d!15005 (=> (not res!37154) (not e!45304))))

(assert (=> d!15005 (= res!37154 ((_ is Cons!1455) (toList!708 lt!30128)))))

(assert (=> d!15005 (= (contains!713 (toList!708 lt!30128) lt!29846) lt!30430)))

(declare-fun b!69195 () Bool)

(declare-fun e!45305 () Bool)

(assert (=> b!69195 (= e!45304 e!45305)))

(declare-fun res!37155 () Bool)

(assert (=> b!69195 (=> res!37155 e!45305)))

(assert (=> b!69195 (= res!37155 (= (h!2040 (toList!708 lt!30128)) lt!29846))))

(declare-fun b!69196 () Bool)

(assert (=> b!69196 (= e!45305 (contains!713 (t!4954 (toList!708 lt!30128)) lt!29846))))

(assert (= (and d!15005 res!37154) b!69195))

(assert (= (and b!69195 (not res!37155)) b!69196))

(declare-fun m!65343 () Bool)

(assert (=> d!15005 m!65343))

(declare-fun m!65345 () Bool)

(assert (=> d!15005 m!65345))

(declare-fun m!65347 () Bool)

(assert (=> b!69196 m!65347))

(assert (=> b!68808 d!15005))

(assert (=> bm!5835 d!14841))

(declare-fun d!15007 () Bool)

(declare-fun e!45306 () Bool)

(assert (=> d!15007 e!45306))

(declare-fun res!37156 () Bool)

(assert (=> d!15007 (=> (not res!37156) (not e!45306))))

(declare-fun lt!30433 () ListLongMap!1385)

(assert (=> d!15007 (= res!37156 (contains!710 lt!30433 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun lt!30431 () List!1459)

(assert (=> d!15007 (= lt!30433 (ListLongMap!1386 lt!30431))))

(declare-fun lt!30434 () Unit!1909)

(declare-fun lt!30432 () Unit!1909)

(assert (=> d!15007 (= lt!30434 lt!30432)))

(assert (=> d!15007 (= (getValueByKey!132 lt!30431 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) (Some!137 (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15007 (= lt!30432 (lemmaContainsTupThenGetReturnValue!49 lt!30431 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15007 (= lt!30431 (insertStrictlySorted!52 (toList!708 e!45001) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15007 (= (+!88 e!45001 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!30433)))

(declare-fun b!69197 () Bool)

(declare-fun res!37157 () Bool)

(assert (=> b!69197 (=> (not res!37157) (not e!45306))))

(assert (=> b!69197 (= res!37157 (= (getValueByKey!132 (toList!708 lt!30433) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) (Some!137 (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(declare-fun b!69198 () Bool)

(assert (=> b!69198 (= e!45306 (contains!713 (toList!708 lt!30433) (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (= (and d!15007 res!37156) b!69197))

(assert (= (and b!69197 res!37157) b!69198))

(declare-fun m!65349 () Bool)

(assert (=> d!15007 m!65349))

(declare-fun m!65351 () Bool)

(assert (=> d!15007 m!65351))

(declare-fun m!65353 () Bool)

(assert (=> d!15007 m!65353))

(declare-fun m!65355 () Bool)

(assert (=> d!15007 m!65355))

(declare-fun m!65357 () Bool)

(assert (=> b!69197 m!65357))

(declare-fun m!65359 () Bool)

(assert (=> b!69198 m!65359))

(assert (=> bm!5805 d!15007))

(declare-fun d!15009 () Bool)

(declare-fun e!45309 () Bool)

(assert (=> d!15009 e!45309))

(declare-fun res!37163 () Bool)

(assert (=> d!15009 (=> (not res!37163) (not e!45309))))

(declare-fun lt!30439 () SeekEntryResult!228)

(assert (=> d!15009 (= res!37163 ((_ is Found!228) lt!30439))))

(assert (=> d!15009 (= lt!30439 (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun lt!30440 () Unit!1909)

(declare-fun choose!397 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) Int) Unit!1909)

(assert (=> d!15009 (= lt!30440 (choose!397 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(assert (=> d!15009 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15009 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)) lt!30440)))

(declare-fun b!69203 () Bool)

(declare-fun res!37162 () Bool)

(assert (=> b!69203 (=> (not res!37162) (not e!45309))))

(assert (=> b!69203 (= res!37162 (inRange!0 (index!3042 lt!30439) (mask!6112 newMap!16)))))

(declare-fun b!69204 () Bool)

(assert (=> b!69204 (= e!45309 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30439)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!69204 (and (bvsge (index!3042 lt!30439) #b00000000000000000000000000000000) (bvslt (index!3042 lt!30439) (size!2068 (_keys!3811 newMap!16))))))

(assert (= (and d!15009 res!37163) b!69203))

(assert (= (and b!69203 res!37162) b!69204))

(assert (=> d!15009 m!64329))

(assert (=> d!15009 m!64537))

(assert (=> d!15009 m!64329))

(declare-fun m!65361 () Bool)

(assert (=> d!15009 m!65361))

(assert (=> d!15009 m!64725))

(declare-fun m!65363 () Bool)

(assert (=> b!69203 m!65363))

(declare-fun m!65365 () Bool)

(assert (=> b!69204 m!65365))

(assert (=> bm!5814 d!15009))

(declare-fun b!69205 () Bool)

(declare-fun e!45311 () Bool)

(declare-fun e!45310 () Bool)

(assert (=> b!69205 (= e!45311 e!45310)))

(declare-fun c!9861 () Bool)

(assert (=> b!69205 (= c!9861 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69206 () Bool)

(declare-fun call!5899 () Bool)

(assert (=> b!69206 (= e!45310 call!5899)))

(declare-fun d!15011 () Bool)

(declare-fun res!37166 () Bool)

(declare-fun e!45312 () Bool)

(assert (=> d!15011 (=> res!37166 e!45312)))

(assert (=> d!15011 (= res!37166 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!15011 (= (arrayNoDuplicates!0 (_keys!3811 newMap!16) #b00000000000000000000000000000000 Nil!1457) e!45312)))

(declare-fun b!69207 () Bool)

(assert (=> b!69207 (= e!45312 e!45311)))

(declare-fun res!37164 () Bool)

(assert (=> b!69207 (=> (not res!37164) (not e!45311))))

(declare-fun e!45313 () Bool)

(assert (=> b!69207 (= res!37164 (not e!45313))))

(declare-fun res!37165 () Bool)

(assert (=> b!69207 (=> (not res!37165) (not e!45313))))

(assert (=> b!69207 (= res!37165 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5896 () Bool)

(assert (=> bm!5896 (= call!5899 (arrayNoDuplicates!0 (_keys!3811 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9861 (Cons!1456 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) Nil!1457) Nil!1457)))))

(declare-fun b!69208 () Bool)

(assert (=> b!69208 (= e!45313 (contains!712 Nil!1457 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69209 () Bool)

(assert (=> b!69209 (= e!45310 call!5899)))

(assert (= (and d!15011 (not res!37166)) b!69207))

(assert (= (and b!69207 res!37165) b!69208))

(assert (= (and b!69207 res!37164) b!69205))

(assert (= (and b!69205 c!9861) b!69206))

(assert (= (and b!69205 (not c!9861)) b!69209))

(assert (= (or b!69206 b!69209) bm!5896))

(assert (=> b!69205 m!64745))

(assert (=> b!69205 m!64745))

(assert (=> b!69205 m!64747))

(assert (=> b!69207 m!64745))

(assert (=> b!69207 m!64745))

(assert (=> b!69207 m!64747))

(assert (=> bm!5896 m!64745))

(declare-fun m!65367 () Bool)

(assert (=> bm!5896 m!65367))

(assert (=> b!69208 m!64745))

(assert (=> b!69208 m!64745))

(declare-fun m!65369 () Bool)

(assert (=> b!69208 m!65369))

(assert (=> b!68701 d!15011))

(declare-fun b!69213 () Bool)

(declare-fun e!45315 () Option!138)

(assert (=> b!69213 (= e!45315 None!136)))

(declare-fun b!69212 () Bool)

(assert (=> b!69212 (= e!45315 (getValueByKey!132 (t!4954 (toList!708 lt!30136)) (_1!1057 lt!29850)))))

(declare-fun b!69210 () Bool)

(declare-fun e!45314 () Option!138)

(assert (=> b!69210 (= e!45314 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30136)))))))

(declare-fun d!15013 () Bool)

(declare-fun c!9862 () Bool)

(assert (=> d!15013 (= c!9862 (and ((_ is Cons!1455) (toList!708 lt!30136)) (= (_1!1057 (h!2040 (toList!708 lt!30136))) (_1!1057 lt!29850))))))

(assert (=> d!15013 (= (getValueByKey!132 (toList!708 lt!30136) (_1!1057 lt!29850)) e!45314)))

(declare-fun b!69211 () Bool)

(assert (=> b!69211 (= e!45314 e!45315)))

(declare-fun c!9863 () Bool)

(assert (=> b!69211 (= c!9863 (and ((_ is Cons!1455) (toList!708 lt!30136)) (not (= (_1!1057 (h!2040 (toList!708 lt!30136))) (_1!1057 lt!29850)))))))

(assert (= (and d!15013 c!9862) b!69210))

(assert (= (and d!15013 (not c!9862)) b!69211))

(assert (= (and b!69211 c!9863) b!69212))

(assert (= (and b!69211 (not c!9863)) b!69213))

(declare-fun m!65371 () Bool)

(assert (=> b!69212 m!65371))

(assert (=> b!68811 d!15013))

(declare-fun d!15015 () Bool)

(assert (=> d!15015 (= (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (and (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68549 d!15015))

(declare-fun d!15017 () Bool)

(declare-fun isEmpty!318 (List!1459) Bool)

(assert (=> d!15017 (= (isEmpty!316 lt!30109) (isEmpty!318 (toList!708 lt!30109)))))

(declare-fun bs!2983 () Bool)

(assert (= bs!2983 d!15017))

(declare-fun m!65373 () Bool)

(assert (=> bs!2983 m!65373))

(assert (=> b!68790 d!15017))

(declare-fun d!15019 () Bool)

(declare-fun e!45317 () Bool)

(assert (=> d!15019 e!45317))

(declare-fun res!37167 () Bool)

(assert (=> d!15019 (=> res!37167 e!45317)))

(declare-fun lt!30444 () Bool)

(assert (=> d!15019 (= res!37167 (not lt!30444))))

(declare-fun lt!30443 () Bool)

(assert (=> d!15019 (= lt!30444 lt!30443)))

(declare-fun lt!30441 () Unit!1909)

(declare-fun e!45316 () Unit!1909)

(assert (=> d!15019 (= lt!30441 e!45316)))

(declare-fun c!9864 () Bool)

(assert (=> d!15019 (= c!9864 lt!30443)))

(assert (=> d!15019 (= lt!30443 (containsKey!135 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15019 (= (contains!710 call!5809 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30444)))

(declare-fun b!69214 () Bool)

(declare-fun lt!30442 () Unit!1909)

(assert (=> b!69214 (= e!45316 lt!30442)))

(assert (=> b!69214 (= lt!30442 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!69214 (isDefined!84 (getValueByKey!132 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69215 () Bool)

(declare-fun Unit!1935 () Unit!1909)

(assert (=> b!69215 (= e!45316 Unit!1935)))

(declare-fun b!69216 () Bool)

(assert (=> b!69216 (= e!45317 (isDefined!84 (getValueByKey!132 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!15019 c!9864) b!69214))

(assert (= (and d!15019 (not c!9864)) b!69215))

(assert (= (and d!15019 (not res!37167)) b!69216))

(assert (=> d!15019 m!64329))

(declare-fun m!65375 () Bool)

(assert (=> d!15019 m!65375))

(assert (=> b!69214 m!64329))

(declare-fun m!65377 () Bool)

(assert (=> b!69214 m!65377))

(assert (=> b!69214 m!64329))

(declare-fun m!65379 () Bool)

(assert (=> b!69214 m!65379))

(assert (=> b!69214 m!65379))

(declare-fun m!65381 () Bool)

(assert (=> b!69214 m!65381))

(assert (=> b!69216 m!64329))

(assert (=> b!69216 m!65379))

(assert (=> b!69216 m!65379))

(assert (=> b!69216 m!65381))

(assert (=> b!68658 d!15019))

(assert (=> b!68547 d!15015))

(declare-fun lt!30459 () ListLongMap!1385)

(declare-fun e!45318 () Bool)

(declare-fun b!69217 () Bool)

(assert (=> b!69217 (= e!45318 (= (apply!73 lt!30459 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))

(declare-fun b!69218 () Bool)

(declare-fun e!45320 () Unit!1909)

(declare-fun lt!30456 () Unit!1909)

(assert (=> b!69218 (= e!45320 lt!30456)))

(declare-fun lt!30446 () ListLongMap!1385)

(assert (=> b!69218 (= lt!30446 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) (mask!6112 newMap!16) (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30462 () (_ BitVec 64))

(assert (=> b!69218 (= lt!30462 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30451 () (_ BitVec 64))

(assert (=> b!69218 (= lt!30451 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30450 () Unit!1909)

(assert (=> b!69218 (= lt!30450 (addStillContains!49 lt!30446 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) lt!30451))))

(assert (=> b!69218 (contains!710 (+!88 lt!30446 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) lt!30451)))

(declare-fun lt!30460 () Unit!1909)

(assert (=> b!69218 (= lt!30460 lt!30450)))

(declare-fun lt!30457 () ListLongMap!1385)

(assert (=> b!69218 (= lt!30457 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) (mask!6112 newMap!16) (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30447 () (_ BitVec 64))

(assert (=> b!69218 (= lt!30447 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30466 () (_ BitVec 64))

(assert (=> b!69218 (= lt!30466 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30454 () Unit!1909)

(assert (=> b!69218 (= lt!30454 (addApplyDifferent!49 lt!30457 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) lt!30466))))

(assert (=> b!69218 (= (apply!73 (+!88 lt!30457 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) lt!30466) (apply!73 lt!30457 lt!30466))))

(declare-fun lt!30448 () Unit!1909)

(assert (=> b!69218 (= lt!30448 lt!30454)))

(declare-fun lt!30464 () ListLongMap!1385)

(assert (=> b!69218 (= lt!30464 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) (mask!6112 newMap!16) (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30465 () (_ BitVec 64))

(assert (=> b!69218 (= lt!30465 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30458 () (_ BitVec 64))

(assert (=> b!69218 (= lt!30458 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30463 () Unit!1909)

(assert (=> b!69218 (= lt!30463 (addApplyDifferent!49 lt!30464 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) lt!30458))))

(assert (=> b!69218 (= (apply!73 (+!88 lt!30464 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) lt!30458) (apply!73 lt!30464 lt!30458))))

(declare-fun lt!30449 () Unit!1909)

(assert (=> b!69218 (= lt!30449 lt!30463)))

(declare-fun lt!30461 () ListLongMap!1385)

(assert (=> b!69218 (= lt!30461 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) (mask!6112 newMap!16) (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30453 () (_ BitVec 64))

(assert (=> b!69218 (= lt!30453 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30445 () (_ BitVec 64))

(assert (=> b!69218 (= lt!30445 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69218 (= lt!30456 (addApplyDifferent!49 lt!30461 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) lt!30445))))

(assert (=> b!69218 (= (apply!73 (+!88 lt!30461 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) lt!30445) (apply!73 lt!30461 lt!30445))))

(declare-fun bm!5897 () Bool)

(declare-fun call!5905 () ListLongMap!1385)

(declare-fun call!5906 () ListLongMap!1385)

(assert (=> bm!5897 (= call!5905 call!5906)))

(declare-fun b!69219 () Bool)

(declare-fun e!45324 () Bool)

(assert (=> b!69219 (= e!45324 (= (apply!73 lt!30459 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69219 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))))))))

(assert (=> b!69219 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun call!5904 () ListLongMap!1385)

(declare-fun bm!5898 () Bool)

(assert (=> bm!5898 (= call!5904 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) (mask!6112 newMap!16) (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69220 () Bool)

(declare-fun e!45322 () Bool)

(assert (=> b!69220 (= e!45322 e!45324)))

(declare-fun res!37176 () Bool)

(assert (=> b!69220 (=> (not res!37176) (not e!45324))))

(assert (=> b!69220 (= res!37176 (contains!710 lt!30459 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69220 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69221 () Bool)

(declare-fun e!45328 () ListLongMap!1385)

(assert (=> b!69221 (= e!45328 call!5905)))

(declare-fun b!69222 () Bool)

(declare-fun e!45323 () ListLongMap!1385)

(declare-fun call!5902 () ListLongMap!1385)

(assert (=> b!69222 (= e!45323 call!5902)))

(declare-fun b!69223 () Bool)

(declare-fun res!37171 () Bool)

(declare-fun e!45326 () Bool)

(assert (=> b!69223 (=> (not res!37171) (not e!45326))))

(declare-fun e!45321 () Bool)

(assert (=> b!69223 (= res!37171 e!45321)))

(declare-fun c!9867 () Bool)

(assert (=> b!69223 (= c!9867 (not (= (bvand (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!15021 () Bool)

(assert (=> d!15021 e!45326))

(declare-fun res!37175 () Bool)

(assert (=> d!15021 (=> (not res!37175) (not e!45326))))

(assert (=> d!15021 (= res!37175 (or (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun lt!30452 () ListLongMap!1385)

(assert (=> d!15021 (= lt!30459 lt!30452)))

(declare-fun lt!30455 () Unit!1909)

(assert (=> d!15021 (= lt!30455 e!45320)))

(declare-fun c!9869 () Bool)

(declare-fun e!45325 () Bool)

(assert (=> d!15021 (= c!9869 e!45325)))

(declare-fun res!37173 () Bool)

(assert (=> d!15021 (=> (not res!37173) (not e!45325))))

(assert (=> d!15021 (= res!37173 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun e!45329 () ListLongMap!1385)

(assert (=> d!15021 (= lt!30452 e!45329)))

(declare-fun c!9865 () Bool)

(assert (=> d!15021 (= c!9865 (and (not (= (bvand (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15021 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15021 (= (getCurrentListMap!406 (_keys!3811 newMap!16) (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) (mask!6112 newMap!16) (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30459)))

(declare-fun bm!5899 () Bool)

(declare-fun call!5903 () Bool)

(assert (=> bm!5899 (= call!5903 (contains!710 lt!30459 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5900 () Bool)

(declare-fun call!5900 () Bool)

(assert (=> bm!5900 (= call!5900 (contains!710 lt!30459 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69224 () Bool)

(declare-fun e!45327 () Bool)

(assert (=> b!69224 (= e!45327 e!45318)))

(declare-fun res!37170 () Bool)

(assert (=> b!69224 (= res!37170 call!5903)))

(assert (=> b!69224 (=> (not res!37170) (not e!45318))))

(declare-fun bm!5901 () Bool)

(declare-fun call!5901 () ListLongMap!1385)

(assert (=> bm!5901 (= call!5902 call!5901)))

(declare-fun b!69225 () Bool)

(declare-fun e!45330 () Bool)

(assert (=> b!69225 (= e!45330 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69226 () Bool)

(assert (=> b!69226 (= e!45329 e!45328)))

(declare-fun c!9868 () Bool)

(assert (=> b!69226 (= c!9868 (and (not (= (bvand (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69227 () Bool)

(assert (=> b!69227 (= e!45329 (+!88 call!5906 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))

(declare-fun b!69228 () Bool)

(assert (=> b!69228 (= e!45325 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69229 () Bool)

(declare-fun e!45319 () Bool)

(assert (=> b!69229 (= e!45319 (= (apply!73 lt!30459 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))))

(declare-fun b!69230 () Bool)

(assert (=> b!69230 (= e!45326 e!45327)))

(declare-fun c!9870 () Bool)

(assert (=> b!69230 (= c!9870 (not (= (bvand (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!9866 () Bool)

(declare-fun b!69231 () Bool)

(assert (=> b!69231 (= c!9866 (and (not (= (bvand (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69231 (= e!45328 e!45323)))

(declare-fun bm!5902 () Bool)

(assert (=> bm!5902 (= call!5906 (+!88 (ite c!9865 call!5904 (ite c!9868 call!5901 call!5902)) (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(declare-fun b!69232 () Bool)

(assert (=> b!69232 (= e!45327 (not call!5903))))

(declare-fun b!69233 () Bool)

(assert (=> b!69233 (= e!45321 (not call!5900))))

(declare-fun b!69234 () Bool)

(declare-fun res!37174 () Bool)

(assert (=> b!69234 (=> (not res!37174) (not e!45326))))

(assert (=> b!69234 (= res!37174 e!45322)))

(declare-fun res!37172 () Bool)

(assert (=> b!69234 (=> res!37172 e!45322)))

(assert (=> b!69234 (= res!37172 (not e!45330))))

(declare-fun res!37169 () Bool)

(assert (=> b!69234 (=> (not res!37169) (not e!45330))))

(assert (=> b!69234 (= res!37169 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69235 () Bool)

(assert (=> b!69235 (= e!45321 e!45319)))

(declare-fun res!37168 () Bool)

(assert (=> b!69235 (= res!37168 call!5900)))

(assert (=> b!69235 (=> (not res!37168) (not e!45319))))

(declare-fun b!69236 () Bool)

(assert (=> b!69236 (= e!45323 call!5905)))

(declare-fun bm!5903 () Bool)

(assert (=> bm!5903 (= call!5901 call!5904)))

(declare-fun b!69237 () Bool)

(declare-fun Unit!1936 () Unit!1909)

(assert (=> b!69237 (= e!45320 Unit!1936)))

(assert (= (and d!15021 c!9865) b!69227))

(assert (= (and d!15021 (not c!9865)) b!69226))

(assert (= (and b!69226 c!9868) b!69221))

(assert (= (and b!69226 (not c!9868)) b!69231))

(assert (= (and b!69231 c!9866) b!69236))

(assert (= (and b!69231 (not c!9866)) b!69222))

(assert (= (or b!69236 b!69222) bm!5901))

(assert (= (or b!69221 bm!5901) bm!5903))

(assert (= (or b!69221 b!69236) bm!5897))

(assert (= (or b!69227 bm!5903) bm!5898))

(assert (= (or b!69227 bm!5897) bm!5902))

(assert (= (and d!15021 res!37173) b!69228))

(assert (= (and d!15021 c!9869) b!69218))

(assert (= (and d!15021 (not c!9869)) b!69237))

(assert (= (and d!15021 res!37175) b!69234))

(assert (= (and b!69234 res!37169) b!69225))

(assert (= (and b!69234 (not res!37172)) b!69220))

(assert (= (and b!69220 res!37176) b!69219))

(assert (= (and b!69234 res!37174) b!69223))

(assert (= (and b!69223 c!9867) b!69235))

(assert (= (and b!69223 (not c!9867)) b!69233))

(assert (= (and b!69235 res!37168) b!69229))

(assert (= (or b!69235 b!69233) bm!5900))

(assert (= (and b!69223 res!37171) b!69230))

(assert (= (and b!69230 c!9870) b!69224))

(assert (= (and b!69230 (not c!9870)) b!69232))

(assert (= (and b!69224 res!37170) b!69217))

(assert (= (or b!69224 b!69232) bm!5899))

(declare-fun b_lambda!3105 () Bool)

(assert (=> (not b_lambda!3105) (not b!69219)))

(assert (=> b!69219 t!4967))

(declare-fun b_and!4265 () Bool)

(assert (= b_and!4261 (and (=> t!4967 result!2615) b_and!4265)))

(assert (=> b!69219 t!4969))

(declare-fun b_and!4267 () Bool)

(assert (= b_and!4263 (and (=> t!4969 result!2617) b_and!4267)))

(assert (=> b!69225 m!64745))

(assert (=> b!69225 m!64745))

(assert (=> b!69225 m!64747))

(declare-fun m!65383 () Bool)

(assert (=> b!69229 m!65383))

(declare-fun m!65385 () Bool)

(assert (=> b!69227 m!65385))

(declare-fun m!65387 () Bool)

(assert (=> b!69219 m!65387))

(assert (=> b!69219 m!64745))

(assert (=> b!69219 m!64745))

(declare-fun m!65389 () Bool)

(assert (=> b!69219 m!65389))

(assert (=> b!69219 m!65387))

(assert (=> b!69219 m!64757))

(declare-fun m!65391 () Bool)

(assert (=> b!69219 m!65391))

(assert (=> b!69219 m!64757))

(declare-fun m!65393 () Bool)

(assert (=> bm!5900 m!65393))

(assert (=> d!15021 m!64725))

(declare-fun m!65395 () Bool)

(assert (=> b!69218 m!65395))

(declare-fun m!65397 () Bool)

(assert (=> b!69218 m!65397))

(declare-fun m!65399 () Bool)

(assert (=> b!69218 m!65399))

(declare-fun m!65401 () Bool)

(assert (=> b!69218 m!65401))

(declare-fun m!65403 () Bool)

(assert (=> b!69218 m!65403))

(declare-fun m!65405 () Bool)

(assert (=> b!69218 m!65405))

(declare-fun m!65407 () Bool)

(assert (=> b!69218 m!65407))

(assert (=> b!69218 m!65399))

(declare-fun m!65409 () Bool)

(assert (=> b!69218 m!65409))

(assert (=> b!69218 m!65401))

(declare-fun m!65411 () Bool)

(assert (=> b!69218 m!65411))

(declare-fun m!65413 () Bool)

(assert (=> b!69218 m!65413))

(declare-fun m!65415 () Bool)

(assert (=> b!69218 m!65415))

(assert (=> b!69218 m!65395))

(declare-fun m!65417 () Bool)

(assert (=> b!69218 m!65417))

(declare-fun m!65419 () Bool)

(assert (=> b!69218 m!65419))

(assert (=> b!69218 m!65411))

(declare-fun m!65421 () Bool)

(assert (=> b!69218 m!65421))

(assert (=> b!69218 m!64745))

(declare-fun m!65423 () Bool)

(assert (=> b!69218 m!65423))

(declare-fun m!65425 () Bool)

(assert (=> b!69218 m!65425))

(assert (=> bm!5898 m!65421))

(assert (=> b!69220 m!64745))

(assert (=> b!69220 m!64745))

(declare-fun m!65427 () Bool)

(assert (=> b!69220 m!65427))

(assert (=> b!69228 m!64745))

(assert (=> b!69228 m!64745))

(assert (=> b!69228 m!64747))

(declare-fun m!65429 () Bool)

(assert (=> bm!5902 m!65429))

(declare-fun m!65431 () Bool)

(assert (=> b!69217 m!65431))

(declare-fun m!65433 () Bool)

(assert (=> bm!5899 m!65433))

(assert (=> bm!5817 d!15021))

(declare-fun d!15023 () Bool)

(declare-fun lt!30469 () Bool)

(declare-fun content!75 (List!1460) (InoxSet (_ BitVec 64)))

(assert (=> d!15023 (= lt!30469 (select (content!75 Nil!1457) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!45336 () Bool)

(assert (=> d!15023 (= lt!30469 e!45336)))

(declare-fun res!37181 () Bool)

(assert (=> d!15023 (=> (not res!37181) (not e!45336))))

(assert (=> d!15023 (= res!37181 ((_ is Cons!1456) Nil!1457))))

(assert (=> d!15023 (= (contains!712 Nil!1457 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30469)))

(declare-fun b!69242 () Bool)

(declare-fun e!45335 () Bool)

(assert (=> b!69242 (= e!45336 e!45335)))

(declare-fun res!37182 () Bool)

(assert (=> b!69242 (=> res!37182 e!45335)))

(assert (=> b!69242 (= res!37182 (= (h!2041 Nil!1457) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69243 () Bool)

(assert (=> b!69243 (= e!45335 (contains!712 (t!4955 Nil!1457) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15023 res!37181) b!69242))

(assert (= (and b!69242 (not res!37182)) b!69243))

(declare-fun m!65435 () Bool)

(assert (=> d!15023 m!65435))

(assert (=> d!15023 m!64329))

(declare-fun m!65437 () Bool)

(assert (=> d!15023 m!65437))

(assert (=> b!69243 m!64329))

(declare-fun m!65439 () Bool)

(assert (=> b!69243 m!65439))

(assert (=> b!68550 d!15023))

(declare-fun d!15025 () Bool)

(declare-fun e!45338 () Bool)

(assert (=> d!15025 e!45338))

(declare-fun res!37183 () Bool)

(assert (=> d!15025 (=> res!37183 e!45338)))

(declare-fun lt!30473 () Bool)

(assert (=> d!15025 (= res!37183 (not lt!30473))))

(declare-fun lt!30472 () Bool)

(assert (=> d!15025 (= lt!30473 lt!30472)))

(declare-fun lt!30470 () Unit!1909)

(declare-fun e!45337 () Unit!1909)

(assert (=> d!15025 (= lt!30470 e!45337)))

(declare-fun c!9871 () Bool)

(assert (=> d!15025 (= c!9871 lt!30472)))

(assert (=> d!15025 (= lt!30472 (containsKey!135 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15025 (= (contains!710 lt!30109 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30473)))

(declare-fun b!69244 () Bool)

(declare-fun lt!30471 () Unit!1909)

(assert (=> b!69244 (= e!45337 lt!30471)))

(assert (=> b!69244 (= lt!30471 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69244 (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69245 () Bool)

(declare-fun Unit!1937 () Unit!1909)

(assert (=> b!69245 (= e!45337 Unit!1937)))

(declare-fun b!69246 () Bool)

(assert (=> b!69246 (= e!45338 (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15025 c!9871) b!69244))

(assert (= (and d!15025 (not c!9871)) b!69245))

(assert (= (and d!15025 (not res!37183)) b!69246))

(declare-fun m!65441 () Bool)

(assert (=> d!15025 m!65441))

(declare-fun m!65443 () Bool)

(assert (=> b!69244 m!65443))

(declare-fun m!65445 () Bool)

(assert (=> b!69244 m!65445))

(assert (=> b!69244 m!65445))

(declare-fun m!65447 () Bool)

(assert (=> b!69244 m!65447))

(assert (=> b!69246 m!65445))

(assert (=> b!69246 m!65445))

(assert (=> b!69246 m!65447))

(assert (=> b!68791 d!15025))

(declare-fun d!15027 () Bool)

(assert (=> d!15027 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30025 lt!29849 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30476 () Unit!1909)

(declare-fun choose!398 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 V!2921 Int) Unit!1909)

(assert (=> d!15027 (= lt!30476 (choose!398 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) lt!30025 (zeroValue!2073 newMap!16) lt!29849 (minValue!2073 newMap!16) (defaultEntry!2167 newMap!16)))))

(assert (=> d!15027 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15027 (= (lemmaChangeZeroKeyThenAddPairToListMap!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) lt!30025 (zeroValue!2073 newMap!16) lt!29849 (minValue!2073 newMap!16) (defaultEntry!2167 newMap!16)) lt!30476)))

(declare-fun bs!2984 () Bool)

(assert (= bs!2984 d!15027))

(declare-fun m!65449 () Bool)

(assert (=> bs!2984 m!65449))

(assert (=> bs!2984 m!64525))

(declare-fun m!65451 () Bool)

(assert (=> bs!2984 m!65451))

(assert (=> bs!2984 m!64525))

(assert (=> bs!2984 m!64725))

(declare-fun m!65453 () Bool)

(assert (=> bs!2984 m!65453))

(assert (=> b!68675 d!15027))

(assert (=> bm!5816 d!14833))

(declare-fun d!15029 () Bool)

(assert (=> d!15029 (= (inRange!0 (ite c!9732 (ite c!9731 (index!3042 lt!30004) (ite c!9725 (index!3041 lt!30026) (index!3044 lt!30026))) (ite c!9719 (index!3042 lt!30011) (ite c!9724 (index!3041 lt!30022) (index!3044 lt!30022)))) (mask!6112 newMap!16)) (and (bvsge (ite c!9732 (ite c!9731 (index!3042 lt!30004) (ite c!9725 (index!3041 lt!30026) (index!3044 lt!30026))) (ite c!9719 (index!3042 lt!30011) (ite c!9724 (index!3041 lt!30022) (index!3044 lt!30022)))) #b00000000000000000000000000000000) (bvslt (ite c!9732 (ite c!9731 (index!3042 lt!30004) (ite c!9725 (index!3041 lt!30026) (index!3044 lt!30026))) (ite c!9719 (index!3042 lt!30011) (ite c!9724 (index!3041 lt!30022) (index!3044 lt!30022)))) (bvadd (mask!6112 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5803 d!15029))

(declare-fun d!15031 () Bool)

(assert (=> d!15031 (= (get!1133 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68557 d!15031))

(assert (=> d!14833 d!14861))

(assert (=> bm!5809 d!14929))

(declare-fun d!15033 () Bool)

(declare-fun e!45340 () Bool)

(assert (=> d!15033 e!45340))

(declare-fun res!37184 () Bool)

(assert (=> d!15033 (=> res!37184 e!45340)))

(declare-fun lt!30480 () Bool)

(assert (=> d!15033 (= res!37184 (not lt!30480))))

(declare-fun lt!30479 () Bool)

(assert (=> d!15033 (= lt!30480 lt!30479)))

(declare-fun lt!30477 () Unit!1909)

(declare-fun e!45339 () Unit!1909)

(assert (=> d!15033 (= lt!30477 e!45339)))

(declare-fun c!9872 () Bool)

(assert (=> d!15033 (= c!9872 lt!30479)))

(assert (=> d!15033 (= lt!30479 (containsKey!135 (toList!708 lt!30128) (_1!1057 lt!29846)))))

(assert (=> d!15033 (= (contains!710 lt!30128 (_1!1057 lt!29846)) lt!30480)))

(declare-fun b!69247 () Bool)

(declare-fun lt!30478 () Unit!1909)

(assert (=> b!69247 (= e!45339 lt!30478)))

(assert (=> b!69247 (= lt!30478 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30128) (_1!1057 lt!29846)))))

(assert (=> b!69247 (isDefined!84 (getValueByKey!132 (toList!708 lt!30128) (_1!1057 lt!29846)))))

(declare-fun b!69248 () Bool)

(declare-fun Unit!1938 () Unit!1909)

(assert (=> b!69248 (= e!45339 Unit!1938)))

(declare-fun b!69249 () Bool)

(assert (=> b!69249 (= e!45340 (isDefined!84 (getValueByKey!132 (toList!708 lt!30128) (_1!1057 lt!29846))))))

(assert (= (and d!15033 c!9872) b!69247))

(assert (= (and d!15033 (not c!9872)) b!69248))

(assert (= (and d!15033 (not res!37184)) b!69249))

(declare-fun m!65455 () Bool)

(assert (=> d!15033 m!65455))

(declare-fun m!65457 () Bool)

(assert (=> b!69247 m!65457))

(assert (=> b!69247 m!64681))

(assert (=> b!69247 m!64681))

(declare-fun m!65459 () Bool)

(assert (=> b!69247 m!65459))

(assert (=> b!69249 m!64681))

(assert (=> b!69249 m!64681))

(assert (=> b!69249 m!65459))

(assert (=> d!14845 d!15033))

(declare-fun b!69253 () Bool)

(declare-fun e!45342 () Option!138)

(assert (=> b!69253 (= e!45342 None!136)))

(declare-fun b!69252 () Bool)

(assert (=> b!69252 (= e!45342 (getValueByKey!132 (t!4954 lt!30126) (_1!1057 lt!29846)))))

(declare-fun b!69250 () Bool)

(declare-fun e!45341 () Option!138)

(assert (=> b!69250 (= e!45341 (Some!137 (_2!1057 (h!2040 lt!30126))))))

(declare-fun d!15035 () Bool)

(declare-fun c!9873 () Bool)

(assert (=> d!15035 (= c!9873 (and ((_ is Cons!1455) lt!30126) (= (_1!1057 (h!2040 lt!30126)) (_1!1057 lt!29846))))))

(assert (=> d!15035 (= (getValueByKey!132 lt!30126 (_1!1057 lt!29846)) e!45341)))

(declare-fun b!69251 () Bool)

(assert (=> b!69251 (= e!45341 e!45342)))

(declare-fun c!9874 () Bool)

(assert (=> b!69251 (= c!9874 (and ((_ is Cons!1455) lt!30126) (not (= (_1!1057 (h!2040 lt!30126)) (_1!1057 lt!29846)))))))

(assert (= (and d!15035 c!9873) b!69250))

(assert (= (and d!15035 (not c!9873)) b!69251))

(assert (= (and b!69251 c!9874) b!69252))

(assert (= (and b!69251 (not c!9874)) b!69253))

(declare-fun m!65461 () Bool)

(assert (=> b!69252 m!65461))

(assert (=> d!14845 d!15035))

(declare-fun d!15037 () Bool)

(assert (=> d!15037 (= (getValueByKey!132 lt!30126 (_1!1057 lt!29846)) (Some!137 (_2!1057 lt!29846)))))

(declare-fun lt!30481 () Unit!1909)

(assert (=> d!15037 (= lt!30481 (choose!394 lt!30126 (_1!1057 lt!29846) (_2!1057 lt!29846)))))

(declare-fun e!45343 () Bool)

(assert (=> d!15037 e!45343))

(declare-fun res!37185 () Bool)

(assert (=> d!15037 (=> (not res!37185) (not e!45343))))

(assert (=> d!15037 (= res!37185 (isStrictlySorted!277 lt!30126))))

(assert (=> d!15037 (= (lemmaContainsTupThenGetReturnValue!49 lt!30126 (_1!1057 lt!29846) (_2!1057 lt!29846)) lt!30481)))

(declare-fun b!69254 () Bool)

(declare-fun res!37186 () Bool)

(assert (=> b!69254 (=> (not res!37186) (not e!45343))))

(assert (=> b!69254 (= res!37186 (containsKey!135 lt!30126 (_1!1057 lt!29846)))))

(declare-fun b!69255 () Bool)

(assert (=> b!69255 (= e!45343 (contains!713 lt!30126 (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(assert (= (and d!15037 res!37185) b!69254))

(assert (= (and b!69254 res!37186) b!69255))

(assert (=> d!15037 m!64675))

(declare-fun m!65463 () Bool)

(assert (=> d!15037 m!65463))

(declare-fun m!65465 () Bool)

(assert (=> d!15037 m!65465))

(declare-fun m!65467 () Bool)

(assert (=> b!69254 m!65467))

(declare-fun m!65469 () Bool)

(assert (=> b!69255 m!65469))

(assert (=> d!14845 d!15037))

(declare-fun b!69256 () Bool)

(declare-fun e!45346 () List!1459)

(declare-fun call!5908 () List!1459)

(assert (=> b!69256 (= e!45346 call!5908)))

(declare-fun e!45344 () List!1459)

(declare-fun b!69257 () Bool)

(assert (=> b!69257 (= e!45344 (insertStrictlySorted!52 (t!4954 (toList!708 (+!88 lt!29844 lt!29850))) (_1!1057 lt!29846) (_2!1057 lt!29846)))))

(declare-fun b!69258 () Bool)

(declare-fun e!45347 () List!1459)

(declare-fun call!5907 () List!1459)

(assert (=> b!69258 (= e!45347 call!5907)))

(declare-fun b!69259 () Bool)

(assert (=> b!69259 (= e!45347 call!5907)))

(declare-fun b!69260 () Bool)

(declare-fun c!9878 () Bool)

(assert (=> b!69260 (= c!9878 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 lt!29850))) (bvsgt (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 lt!29850)))) (_1!1057 lt!29846))))))

(assert (=> b!69260 (= e!45346 e!45347)))

(declare-fun b!69261 () Bool)

(declare-fun res!37188 () Bool)

(declare-fun e!45345 () Bool)

(assert (=> b!69261 (=> (not res!37188) (not e!45345))))

(declare-fun lt!30482 () List!1459)

(assert (=> b!69261 (= res!37188 (containsKey!135 lt!30482 (_1!1057 lt!29846)))))

(declare-fun c!9875 () Bool)

(declare-fun call!5909 () List!1459)

(declare-fun bm!5905 () Bool)

(assert (=> bm!5905 (= call!5909 ($colon$colon!63 e!45344 (ite c!9875 (h!2040 (toList!708 (+!88 lt!29844 lt!29850))) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846)))))))

(declare-fun c!9876 () Bool)

(assert (=> bm!5905 (= c!9876 c!9875)))

(declare-fun b!69262 () Bool)

(declare-fun e!45348 () List!1459)

(assert (=> b!69262 (= e!45348 e!45346)))

(declare-fun c!9877 () Bool)

(assert (=> b!69262 (= c!9877 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 lt!29850))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 lt!29850)))) (_1!1057 lt!29846))))))

(declare-fun b!69263 () Bool)

(assert (=> b!69263 (= e!45344 (ite c!9877 (t!4954 (toList!708 (+!88 lt!29844 lt!29850))) (ite c!9878 (Cons!1455 (h!2040 (toList!708 (+!88 lt!29844 lt!29850))) (t!4954 (toList!708 (+!88 lt!29844 lt!29850)))) Nil!1456)))))

(declare-fun b!69264 () Bool)

(assert (=> b!69264 (= e!45348 call!5909)))

(declare-fun bm!5904 () Bool)

(assert (=> bm!5904 (= call!5908 call!5909)))

(declare-fun d!15039 () Bool)

(assert (=> d!15039 e!45345))

(declare-fun res!37187 () Bool)

(assert (=> d!15039 (=> (not res!37187) (not e!45345))))

(assert (=> d!15039 (= res!37187 (isStrictlySorted!277 lt!30482))))

(assert (=> d!15039 (= lt!30482 e!45348)))

(assert (=> d!15039 (= c!9875 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 lt!29850))) (bvslt (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 lt!29850)))) (_1!1057 lt!29846))))))

(assert (=> d!15039 (isStrictlySorted!277 (toList!708 (+!88 lt!29844 lt!29850)))))

(assert (=> d!15039 (= (insertStrictlySorted!52 (toList!708 (+!88 lt!29844 lt!29850)) (_1!1057 lt!29846) (_2!1057 lt!29846)) lt!30482)))

(declare-fun b!69265 () Bool)

(assert (=> b!69265 (= e!45345 (contains!713 lt!30482 (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun bm!5906 () Bool)

(assert (=> bm!5906 (= call!5907 call!5908)))

(assert (= (and d!15039 c!9875) b!69264))

(assert (= (and d!15039 (not c!9875)) b!69262))

(assert (= (and b!69262 c!9877) b!69256))

(assert (= (and b!69262 (not c!9877)) b!69260))

(assert (= (and b!69260 c!9878) b!69259))

(assert (= (and b!69260 (not c!9878)) b!69258))

(assert (= (or b!69259 b!69258) bm!5906))

(assert (= (or b!69256 bm!5906) bm!5904))

(assert (= (or b!69264 bm!5904) bm!5905))

(assert (= (and bm!5905 c!9876) b!69257))

(assert (= (and bm!5905 (not c!9876)) b!69263))

(assert (= (and d!15039 res!37187) b!69261))

(assert (= (and b!69261 res!37188) b!69265))

(declare-fun m!65471 () Bool)

(assert (=> d!15039 m!65471))

(declare-fun m!65473 () Bool)

(assert (=> d!15039 m!65473))

(declare-fun m!65475 () Bool)

(assert (=> bm!5905 m!65475))

(declare-fun m!65477 () Bool)

(assert (=> b!69265 m!65477))

(declare-fun m!65479 () Bool)

(assert (=> b!69261 m!65479))

(declare-fun m!65481 () Bool)

(assert (=> b!69257 m!65481))

(assert (=> d!14845 d!15039))

(declare-fun d!15041 () Bool)

(declare-fun e!45350 () Bool)

(assert (=> d!15041 e!45350))

(declare-fun res!37189 () Bool)

(assert (=> d!15041 (=> res!37189 e!45350)))

(declare-fun lt!30486 () Bool)

(assert (=> d!15041 (= res!37189 (not lt!30486))))

(declare-fun lt!30485 () Bool)

(assert (=> d!15041 (= lt!30486 lt!30485)))

(declare-fun lt!30483 () Unit!1909)

(declare-fun e!45349 () Unit!1909)

(assert (=> d!15041 (= lt!30483 e!45349)))

(declare-fun c!9879 () Bool)

(assert (=> d!15041 (= c!9879 lt!30485)))

(assert (=> d!15041 (= lt!30485 (containsKey!135 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15041 (= (contains!710 lt!30085 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30486)))

(declare-fun b!69266 () Bool)

(declare-fun lt!30484 () Unit!1909)

(assert (=> b!69266 (= e!45349 lt!30484)))

(assert (=> b!69266 (= lt!30484 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69266 (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69267 () Bool)

(declare-fun Unit!1939 () Unit!1909)

(assert (=> b!69267 (= e!45349 Unit!1939)))

(declare-fun b!69268 () Bool)

(assert (=> b!69268 (= e!45350 (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15041 c!9879) b!69266))

(assert (= (and d!15041 (not c!9879)) b!69267))

(assert (= (and d!15041 (not res!37189)) b!69268))

(declare-fun m!65483 () Bool)

(assert (=> d!15041 m!65483))

(declare-fun m!65485 () Bool)

(assert (=> b!69266 m!65485))

(assert (=> b!69266 m!65229))

(assert (=> b!69266 m!65229))

(declare-fun m!65487 () Bool)

(assert (=> b!69266 m!65487))

(assert (=> b!69268 m!65229))

(assert (=> b!69268 m!65229))

(assert (=> b!69268 m!65487))

(assert (=> bm!5837 d!15041))

(declare-fun d!15043 () Bool)

(declare-fun res!37190 () Bool)

(declare-fun e!45351 () Bool)

(assert (=> d!15043 (=> (not res!37190) (not e!45351))))

(assert (=> d!15043 (= res!37190 (simpleValid!49 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!15043 (= (valid!292 (v!2494 (underlying!253 thiss!992))) e!45351)))

(declare-fun b!69269 () Bool)

(declare-fun res!37191 () Bool)

(assert (=> b!69269 (=> (not res!37191) (not e!45351))))

(assert (=> b!69269 (= res!37191 (= (arrayCountValidKeys!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))) (_size!387 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!69270 () Bool)

(declare-fun res!37192 () Bool)

(assert (=> b!69270 (=> (not res!37192) (not e!45351))))

(assert (=> b!69270 (= res!37192 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!69271 () Bool)

(assert (=> b!69271 (= e!45351 (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 Nil!1457))))

(assert (= (and d!15043 res!37190) b!69269))

(assert (= (and b!69269 res!37191) b!69270))

(assert (= (and b!69270 res!37192) b!69271))

(declare-fun m!65489 () Bool)

(assert (=> d!15043 m!65489))

(declare-fun m!65491 () Bool)

(assert (=> b!69269 m!65491))

(declare-fun m!65493 () Bool)

(assert (=> b!69270 m!65493))

(declare-fun m!65495 () Bool)

(assert (=> b!69271 m!65495))

(assert (=> d!14809 d!15043))

(declare-fun d!15045 () Bool)

(declare-fun e!45353 () Bool)

(assert (=> d!15045 e!45353))

(declare-fun res!37193 () Bool)

(assert (=> d!15045 (=> res!37193 e!45353)))

(declare-fun lt!30490 () Bool)

(assert (=> d!15045 (= res!37193 (not lt!30490))))

(declare-fun lt!30489 () Bool)

(assert (=> d!15045 (= lt!30490 lt!30489)))

(declare-fun lt!30487 () Unit!1909)

(declare-fun e!45352 () Unit!1909)

(assert (=> d!15045 (= lt!30487 e!45352)))

(declare-fun c!9880 () Bool)

(assert (=> d!15045 (= c!9880 lt!30489)))

(assert (=> d!15045 (= lt!30489 (containsKey!135 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!15045 (= (contains!710 lt!30109 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30490)))

(declare-fun b!69272 () Bool)

(declare-fun lt!30488 () Unit!1909)

(assert (=> b!69272 (= e!45352 lt!30488)))

(assert (=> b!69272 (= lt!30488 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!69272 (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69273 () Bool)

(declare-fun Unit!1940 () Unit!1909)

(assert (=> b!69273 (= e!45352 Unit!1940)))

(declare-fun b!69274 () Bool)

(assert (=> b!69274 (= e!45353 (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!15045 c!9880) b!69272))

(assert (= (and d!15045 (not c!9880)) b!69273))

(assert (= (and d!15045 (not res!37193)) b!69274))

(assert (=> d!15045 m!64501))

(declare-fun m!65497 () Bool)

(assert (=> d!15045 m!65497))

(assert (=> b!69272 m!64501))

(declare-fun m!65499 () Bool)

(assert (=> b!69272 m!65499))

(assert (=> b!69272 m!64501))

(declare-fun m!65501 () Bool)

(assert (=> b!69272 m!65501))

(assert (=> b!69272 m!65501))

(declare-fun m!65503 () Bool)

(assert (=> b!69272 m!65503))

(assert (=> b!69274 m!64501))

(assert (=> b!69274 m!65501))

(assert (=> b!69274 m!65501))

(assert (=> b!69274 m!65503))

(assert (=> b!68797 d!15045))

(declare-fun d!15047 () Bool)

(assert (=> d!15047 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30024 (zeroValue!2073 newMap!16) lt!29849 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30493 () Unit!1909)

(declare-fun choose!399 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 V!2921 Int) Unit!1909)

(assert (=> d!15047 (= lt!30493 (choose!399 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) lt!30024 (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) lt!29849 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15047 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15047 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) lt!30024 (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) lt!29849 (defaultEntry!2167 newMap!16)) lt!30493)))

(declare-fun bs!2985 () Bool)

(assert (= bs!2985 d!15047))

(assert (=> bs!2985 m!64525))

(declare-fun m!65505 () Bool)

(assert (=> bs!2985 m!65505))

(assert (=> bs!2985 m!64525))

(declare-fun m!65507 () Bool)

(assert (=> bs!2985 m!65507))

(declare-fun m!65509 () Bool)

(assert (=> bs!2985 m!65509))

(assert (=> bs!2985 m!64725))

(assert (=> b!68689 d!15047))

(declare-fun d!15049 () Bool)

(declare-fun e!45355 () Bool)

(assert (=> d!15049 e!45355))

(declare-fun res!37194 () Bool)

(assert (=> d!15049 (=> res!37194 e!45355)))

(declare-fun lt!30497 () Bool)

(assert (=> d!15049 (= res!37194 (not lt!30497))))

(declare-fun lt!30496 () Bool)

(assert (=> d!15049 (= lt!30497 lt!30496)))

(declare-fun lt!30494 () Unit!1909)

(declare-fun e!45354 () Unit!1909)

(assert (=> d!15049 (= lt!30494 e!45354)))

(declare-fun c!9881 () Bool)

(assert (=> d!15049 (= c!9881 lt!30496)))

(assert (=> d!15049 (= lt!30496 (containsKey!135 (toList!708 lt!30132) (_1!1057 lt!29846)))))

(assert (=> d!15049 (= (contains!710 lt!30132 (_1!1057 lt!29846)) lt!30497)))

(declare-fun b!69275 () Bool)

(declare-fun lt!30495 () Unit!1909)

(assert (=> b!69275 (= e!45354 lt!30495)))

(assert (=> b!69275 (= lt!30495 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30132) (_1!1057 lt!29846)))))

(assert (=> b!69275 (isDefined!84 (getValueByKey!132 (toList!708 lt!30132) (_1!1057 lt!29846)))))

(declare-fun b!69276 () Bool)

(declare-fun Unit!1941 () Unit!1909)

(assert (=> b!69276 (= e!45354 Unit!1941)))

(declare-fun b!69277 () Bool)

(assert (=> b!69277 (= e!45355 (isDefined!84 (getValueByKey!132 (toList!708 lt!30132) (_1!1057 lt!29846))))))

(assert (= (and d!15049 c!9881) b!69275))

(assert (= (and d!15049 (not c!9881)) b!69276))

(assert (= (and d!15049 (not res!37194)) b!69277))

(declare-fun m!65511 () Bool)

(assert (=> d!15049 m!65511))

(declare-fun m!65513 () Bool)

(assert (=> b!69275 m!65513))

(assert (=> b!69275 m!64693))

(assert (=> b!69275 m!64693))

(declare-fun m!65515 () Bool)

(assert (=> b!69275 m!65515))

(assert (=> b!69277 m!64693))

(assert (=> b!69277 m!64693))

(assert (=> b!69277 m!65515))

(assert (=> d!14847 d!15049))

(declare-fun b!69281 () Bool)

(declare-fun e!45357 () Option!138)

(assert (=> b!69281 (= e!45357 None!136)))

(declare-fun b!69280 () Bool)

(assert (=> b!69280 (= e!45357 (getValueByKey!132 (t!4954 lt!30130) (_1!1057 lt!29846)))))

(declare-fun b!69278 () Bool)

(declare-fun e!45356 () Option!138)

(assert (=> b!69278 (= e!45356 (Some!137 (_2!1057 (h!2040 lt!30130))))))

(declare-fun d!15051 () Bool)

(declare-fun c!9882 () Bool)

(assert (=> d!15051 (= c!9882 (and ((_ is Cons!1455) lt!30130) (= (_1!1057 (h!2040 lt!30130)) (_1!1057 lt!29846))))))

(assert (=> d!15051 (= (getValueByKey!132 lt!30130 (_1!1057 lt!29846)) e!45356)))

(declare-fun b!69279 () Bool)

(assert (=> b!69279 (= e!45356 e!45357)))

(declare-fun c!9883 () Bool)

(assert (=> b!69279 (= c!9883 (and ((_ is Cons!1455) lt!30130) (not (= (_1!1057 (h!2040 lt!30130)) (_1!1057 lt!29846)))))))

(assert (= (and d!15051 c!9882) b!69278))

(assert (= (and d!15051 (not c!9882)) b!69279))

(assert (= (and b!69279 c!9883) b!69280))

(assert (= (and b!69279 (not c!9883)) b!69281))

(declare-fun m!65517 () Bool)

(assert (=> b!69280 m!65517))

(assert (=> d!14847 d!15051))

(declare-fun d!15053 () Bool)

(assert (=> d!15053 (= (getValueByKey!132 lt!30130 (_1!1057 lt!29846)) (Some!137 (_2!1057 lt!29846)))))

(declare-fun lt!30498 () Unit!1909)

(assert (=> d!15053 (= lt!30498 (choose!394 lt!30130 (_1!1057 lt!29846) (_2!1057 lt!29846)))))

(declare-fun e!45358 () Bool)

(assert (=> d!15053 e!45358))

(declare-fun res!37195 () Bool)

(assert (=> d!15053 (=> (not res!37195) (not e!45358))))

(assert (=> d!15053 (= res!37195 (isStrictlySorted!277 lt!30130))))

(assert (=> d!15053 (= (lemmaContainsTupThenGetReturnValue!49 lt!30130 (_1!1057 lt!29846) (_2!1057 lt!29846)) lt!30498)))

(declare-fun b!69282 () Bool)

(declare-fun res!37196 () Bool)

(assert (=> b!69282 (=> (not res!37196) (not e!45358))))

(assert (=> b!69282 (= res!37196 (containsKey!135 lt!30130 (_1!1057 lt!29846)))))

(declare-fun b!69283 () Bool)

(assert (=> b!69283 (= e!45358 (contains!713 lt!30130 (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(assert (= (and d!15053 res!37195) b!69282))

(assert (= (and b!69282 res!37196) b!69283))

(assert (=> d!15053 m!64687))

(declare-fun m!65519 () Bool)

(assert (=> d!15053 m!65519))

(declare-fun m!65521 () Bool)

(assert (=> d!15053 m!65521))

(declare-fun m!65523 () Bool)

(assert (=> b!69282 m!65523))

(declare-fun m!65525 () Bool)

(assert (=> b!69283 m!65525))

(assert (=> d!14847 d!15053))

(declare-fun b!69284 () Bool)

(declare-fun e!45361 () List!1459)

(declare-fun call!5911 () List!1459)

(assert (=> b!69284 (= e!45361 call!5911)))

(declare-fun b!69285 () Bool)

(declare-fun e!45359 () List!1459)

(assert (=> b!69285 (= e!45359 (insertStrictlySorted!52 (t!4954 (toList!708 lt!29844)) (_1!1057 lt!29846) (_2!1057 lt!29846)))))

(declare-fun b!69286 () Bool)

(declare-fun e!45362 () List!1459)

(declare-fun call!5910 () List!1459)

(assert (=> b!69286 (= e!45362 call!5910)))

(declare-fun b!69287 () Bool)

(assert (=> b!69287 (= e!45362 call!5910)))

(declare-fun b!69288 () Bool)

(declare-fun c!9887 () Bool)

(assert (=> b!69288 (= c!9887 (and ((_ is Cons!1455) (toList!708 lt!29844)) (bvsgt (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 lt!29846))))))

(assert (=> b!69288 (= e!45361 e!45362)))

(declare-fun b!69289 () Bool)

(declare-fun res!37198 () Bool)

(declare-fun e!45360 () Bool)

(assert (=> b!69289 (=> (not res!37198) (not e!45360))))

(declare-fun lt!30499 () List!1459)

(assert (=> b!69289 (= res!37198 (containsKey!135 lt!30499 (_1!1057 lt!29846)))))

(declare-fun bm!5908 () Bool)

(declare-fun c!9884 () Bool)

(declare-fun call!5912 () List!1459)

(assert (=> bm!5908 (= call!5912 ($colon$colon!63 e!45359 (ite c!9884 (h!2040 (toList!708 lt!29844)) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846)))))))

(declare-fun c!9885 () Bool)

(assert (=> bm!5908 (= c!9885 c!9884)))

(declare-fun b!69290 () Bool)

(declare-fun e!45363 () List!1459)

(assert (=> b!69290 (= e!45363 e!45361)))

(declare-fun c!9886 () Bool)

(assert (=> b!69290 (= c!9886 (and ((_ is Cons!1455) (toList!708 lt!29844)) (= (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 lt!29846))))))

(declare-fun b!69291 () Bool)

(assert (=> b!69291 (= e!45359 (ite c!9886 (t!4954 (toList!708 lt!29844)) (ite c!9887 (Cons!1455 (h!2040 (toList!708 lt!29844)) (t!4954 (toList!708 lt!29844))) Nil!1456)))))

(declare-fun b!69292 () Bool)

(assert (=> b!69292 (= e!45363 call!5912)))

(declare-fun bm!5907 () Bool)

(assert (=> bm!5907 (= call!5911 call!5912)))

(declare-fun d!15055 () Bool)

(assert (=> d!15055 e!45360))

(declare-fun res!37197 () Bool)

(assert (=> d!15055 (=> (not res!37197) (not e!45360))))

(assert (=> d!15055 (= res!37197 (isStrictlySorted!277 lt!30499))))

(assert (=> d!15055 (= lt!30499 e!45363)))

(assert (=> d!15055 (= c!9884 (and ((_ is Cons!1455) (toList!708 lt!29844)) (bvslt (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 lt!29846))))))

(assert (=> d!15055 (isStrictlySorted!277 (toList!708 lt!29844))))

(assert (=> d!15055 (= (insertStrictlySorted!52 (toList!708 lt!29844) (_1!1057 lt!29846) (_2!1057 lt!29846)) lt!30499)))

(declare-fun b!69293 () Bool)

(assert (=> b!69293 (= e!45360 (contains!713 lt!30499 (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun bm!5909 () Bool)

(assert (=> bm!5909 (= call!5910 call!5911)))

(assert (= (and d!15055 c!9884) b!69292))

(assert (= (and d!15055 (not c!9884)) b!69290))

(assert (= (and b!69290 c!9886) b!69284))

(assert (= (and b!69290 (not c!9886)) b!69288))

(assert (= (and b!69288 c!9887) b!69287))

(assert (= (and b!69288 (not c!9887)) b!69286))

(assert (= (or b!69287 b!69286) bm!5909))

(assert (= (or b!69284 bm!5909) bm!5907))

(assert (= (or b!69292 bm!5907) bm!5908))

(assert (= (and bm!5908 c!9885) b!69285))

(assert (= (and bm!5908 (not c!9885)) b!69291))

(assert (= (and d!15055 res!37197) b!69289))

(assert (= (and b!69289 res!37198) b!69293))

(declare-fun m!65527 () Bool)

(assert (=> d!15055 m!65527))

(assert (=> d!15055 m!65251))

(declare-fun m!65529 () Bool)

(assert (=> bm!5908 m!65529))

(declare-fun m!65531 () Bool)

(assert (=> b!69293 m!65531))

(declare-fun m!65533 () Bool)

(assert (=> b!69289 m!65533))

(declare-fun m!65535 () Bool)

(assert (=> b!69285 m!65535))

(assert (=> d!14847 d!15055))

(declare-fun d!15057 () Bool)

(assert (=> d!15057 (= (apply!73 lt!30109 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1134 (getValueByKey!132 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2986 () Bool)

(assert (= bs!2986 d!15057))

(assert (=> bs!2986 m!64501))

(assert (=> bs!2986 m!65501))

(assert (=> bs!2986 m!65501))

(declare-fun m!65537 () Bool)

(assert (=> bs!2986 m!65537))

(assert (=> b!68795 d!15057))

(assert (=> b!68795 d!14915))

(assert (=> b!68799 d!14965))

(assert (=> b!68755 d!14965))

(declare-fun b!69295 () Bool)

(declare-fun e!45365 () Bool)

(assert (=> b!69295 (= e!45365 tp_is_empty!2455)))

(declare-fun mapNonEmpty!3113 () Bool)

(declare-fun mapRes!3113 () Bool)

(declare-fun tp!8423 () Bool)

(declare-fun e!45364 () Bool)

(assert (=> mapNonEmpty!3113 (= mapRes!3113 (and tp!8423 e!45364))))

(declare-fun mapValue!3113 () ValueCell!884)

(declare-fun mapRest!3113 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapKey!3113 () (_ BitVec 32))

(assert (=> mapNonEmpty!3113 (= mapRest!3111 (store mapRest!3113 mapKey!3113 mapValue!3113))))

(declare-fun mapIsEmpty!3113 () Bool)

(assert (=> mapIsEmpty!3113 mapRes!3113))

(declare-fun b!69294 () Bool)

(assert (=> b!69294 (= e!45364 tp_is_empty!2455)))

(declare-fun condMapEmpty!3113 () Bool)

(declare-fun mapDefault!3113 () ValueCell!884)

(assert (=> mapNonEmpty!3111 (= condMapEmpty!3113 (= mapRest!3111 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3113)))))

(assert (=> mapNonEmpty!3111 (= tp!8421 (and e!45365 mapRes!3113))))

(assert (= (and mapNonEmpty!3111 condMapEmpty!3113) mapIsEmpty!3113))

(assert (= (and mapNonEmpty!3111 (not condMapEmpty!3113)) mapNonEmpty!3113))

(assert (= (and mapNonEmpty!3113 ((_ is ValueCellFull!884) mapValue!3113)) b!69294))

(assert (= (and mapNonEmpty!3111 ((_ is ValueCellFull!884) mapDefault!3113)) b!69295))

(declare-fun m!65539 () Bool)

(assert (=> mapNonEmpty!3113 m!65539))

(declare-fun b!69297 () Bool)

(declare-fun e!45367 () Bool)

(assert (=> b!69297 (= e!45367 tp_is_empty!2455)))

(declare-fun mapNonEmpty!3114 () Bool)

(declare-fun mapRes!3114 () Bool)

(declare-fun tp!8424 () Bool)

(declare-fun e!45366 () Bool)

(assert (=> mapNonEmpty!3114 (= mapRes!3114 (and tp!8424 e!45366))))

(declare-fun mapValue!3114 () ValueCell!884)

(declare-fun mapRest!3114 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapKey!3114 () (_ BitVec 32))

(assert (=> mapNonEmpty!3114 (= mapRest!3112 (store mapRest!3114 mapKey!3114 mapValue!3114))))

(declare-fun mapIsEmpty!3114 () Bool)

(assert (=> mapIsEmpty!3114 mapRes!3114))

(declare-fun b!69296 () Bool)

(assert (=> b!69296 (= e!45366 tp_is_empty!2455)))

(declare-fun condMapEmpty!3114 () Bool)

(declare-fun mapDefault!3114 () ValueCell!884)

(assert (=> mapNonEmpty!3112 (= condMapEmpty!3114 (= mapRest!3112 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3114)))))

(assert (=> mapNonEmpty!3112 (= tp!8422 (and e!45367 mapRes!3114))))

(assert (= (and mapNonEmpty!3112 condMapEmpty!3114) mapIsEmpty!3114))

(assert (= (and mapNonEmpty!3112 (not condMapEmpty!3114)) mapNonEmpty!3114))

(assert (= (and mapNonEmpty!3114 ((_ is ValueCellFull!884) mapValue!3114)) b!69296))

(assert (= (and mapNonEmpty!3112 ((_ is ValueCellFull!884) mapDefault!3114)) b!69297))

(declare-fun m!65541 () Bool)

(assert (=> mapNonEmpty!3114 m!65541))

(declare-fun b_lambda!3107 () Bool)

(assert (= b_lambda!3099 (or (and b!68389 b_free!2077) (and b!68379 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))) b_lambda!3107)))

(declare-fun b_lambda!3109 () Bool)

(assert (= b_lambda!3097 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3109)))

(declare-fun b_lambda!3111 () Bool)

(assert (= b_lambda!3103 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3111)))

(declare-fun b_lambda!3113 () Bool)

(assert (= b_lambda!3105 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3113)))

(declare-fun b_lambda!3115 () Bool)

(assert (= b_lambda!3101 (or (and b!68389 b_free!2077) (and b!68379 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))) b_lambda!3115)))

(check-sat (not b!69207) (not b!69225) (not b!68904) (not d!14977) (not b!69274) (not bm!5898) (not b_lambda!3113) (not bm!5868) (not b!68834) (not b!69244) tp_is_empty!2455 (not bm!5885) (not d!14903) (not d!14943) (not bm!5882) (not d!14917) (not d!14885) (not b!68829) (not b!69131) (not b!68889) (not b!68843) (not d!14991) (not b!69193) (not b!68985) (not b!69123) (not b!68854) (not d!15007) (not b!69109) (not d!15027) (not b!69269) (not b!69265) (not b!69194) (not d!15005) (not b!69172) (not b!69229) (not b!68872) (not bm!5896) (not bm!5891) (not d!15009) (not b!69275) (not d!15021) (not b_lambda!3083) (not b!69071) (not b!69285) (not d!14879) (not b!68835) (not b!69133) (not b_next!2077) (not d!14861) (not d!14891) (not d!14921) (not b!68982) (not b!69048) (not d!14959) (not b!69073) (not b!69154) (not bm!5886) (not b!69162) (not bm!5888) (not b!68999) (not d!14887) (not d!14877) (not b!69112) (not b!69277) (not b!69261) (not d!14971) (not b!69249) (not d!14927) (not b!69097) (not b!68920) (not d!14859) (not d!14987) (not d!14911) (not bm!5895) (not b!69257) (not b!69217) (not d!14999) (not b!69124) (not d!14983) (not d!14863) (not b!69188) (not b_lambda!3111) (not b!69094) (not b!69254) (not b!69187) (not d!14901) (not b!69170) (not b!69208) (not d!15045) (not d!15039) (not bm!5899) (not b!69272) (not d!14925) (not b!69129) (not b!69086) (not b!68842) (not d!14857) (not b!69068) (not b!69196) (not b!68833) (not d!14895) (not d!14889) (not d!14953) (not b!68840) (not b!68853) (not b!69100) (not mapNonEmpty!3114) (not d!14899) (not b!69044) (not b!69081) (not b!69080) (not bm!5881) (not b!68895) (not d!14955) (not b_lambda!3095) (not b!69268) (not bm!5905) (not b!69149) (not b!69008) (not d!14997) (not b_next!2079) (not b!69084) (not d!14985) (not b!69167) (not d!15019) (not b!69005) (not b!69082) (not b!69203) (not d!15055) (not d!14945) (not d!14897) (not b!69270) (not d!14871) (not b_lambda!3109) (not b_lambda!3093) (not d!14909) (not b!69283) b_and!4267 (not b!69003) (not d!14875) (not b!69218) (not b!69122) b_and!4265 (not b!69266) (not b_lambda!3107) (not b!68888) (not d!14883) (not b!69289) (not bm!5908) (not b!68906) (not d!14995) (not b!69255) (not bm!5900) (not b!69110) (not b!68903) (not bm!5853) (not b!69117) (not b!68891) (not b!69108) (not b!69011) (not bm!5870) (not d!15043) (not b!69280) (not b!69078) (not b!69212) (not b!69174) (not b!69219) (not b!68832) (not b!69083) (not d!14989) (not b!69152) (not b!68890) (not b!68875) (not bm!5849) (not b!69189) (not b!69198) (not b!69132) (not b!68994) (not b!69120) (not d!15049) (not b!69111) (not b!69164) (not d!14963) (not b!68865) (not b!68905) (not b!69247) (not b!69018) (not d!14979) (not b!68981) (not bm!5902) (not b_lambda!3091) (not d!15041) (not bm!5879) (not d!15053) (not d!15057) (not b!69171) (not d!15003) (not b!68831) (not d!14929) (not d!15033) (not d!14961) (not b!69017) (not d!14939) (not b!69252) (not b!69282) (not b!69192) (not b!68893) (not b!69166) (not b!69106) (not b!69006) (not b!69121) (not d!14893) (not b!69216) (not b!68909) (not b!68892) (not b!69040) (not b!69205) (not b!68844) (not d!14973) (not b!69271) (not b!69144) (not d!15001) (not b!69119) (not b!69063) (not b!69220) (not b!69197) (not mapNonEmpty!3113) (not d!15037) (not b!69227) (not d!14881) (not d!14967) (not b!69143) (not b!69142) (not b!69002) (not b!69293) (not d!14969) (not b!69214) (not d!15023) (not b!69074) (not b_lambda!3115) (not b!69191) (not d!14935) (not bm!5847) (not bm!5845) (not b!68997) (not b!69158) (not b!68998) (not d!14949) (not b!68921) (not b!69190) (not b!68828) (not b!69151) (not d!14919) (not b!69075) (not d!15047) (not d!14933) (not bm!5871) (not b!69000) (not d!15025) (not b!68825) (not b!69246) (not d!14913) (not bm!5884) (not b!69069) (not b!68886) (not bm!5858) (not b!69228) (not b!68993) (not d!14855) (not b!69087) (not b!69146) (not b!69243) (not b!69169) (not d!14907) (not d!14951) (not b!69185) (not bm!5859) (not d!15017) (not bm!5846))
(check-sat b_and!4265 b_and!4267 (not b_next!2077) (not b_next!2079))
(get-model)

(declare-fun b!69301 () Bool)

(declare-fun e!45369 () Option!138)

(assert (=> b!69301 (= e!45369 None!136)))

(declare-fun b!69300 () Bool)

(assert (=> b!69300 (= e!45369 (getValueByKey!132 (t!4954 (toList!708 lt!30363)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!69298 () Bool)

(declare-fun e!45368 () Option!138)

(assert (=> b!69298 (= e!45368 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30363)))))))

(declare-fun c!9888 () Bool)

(declare-fun d!15059 () Bool)

(assert (=> d!15059 (= c!9888 (and ((_ is Cons!1455) (toList!708 lt!30363)) (= (_1!1057 (h!2040 (toList!708 lt!30363))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!15059 (= (getValueByKey!132 (toList!708 lt!30363) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!45368)))

(declare-fun b!69299 () Bool)

(assert (=> b!69299 (= e!45368 e!45369)))

(declare-fun c!9889 () Bool)

(assert (=> b!69299 (= c!9889 (and ((_ is Cons!1455) (toList!708 lt!30363)) (not (= (_1!1057 (h!2040 (toList!708 lt!30363))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!15059 c!9888) b!69298))

(assert (= (and d!15059 (not c!9888)) b!69299))

(assert (= (and b!69299 c!9889) b!69300))

(assert (= (and b!69299 (not c!9889)) b!69301))

(declare-fun m!65543 () Bool)

(assert (=> b!69300 m!65543))

(assert (=> b!69109 d!15059))

(declare-fun d!15061 () Bool)

(assert (=> d!15061 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2987 () Bool)

(assert (= bs!2987 d!15061))

(assert (=> bs!2987 m!64991))

(declare-fun m!65545 () Bool)

(assert (=> bs!2987 m!65545))

(assert (=> b!69005 d!15061))

(declare-fun b!69305 () Bool)

(declare-fun e!45371 () Option!138)

(assert (=> b!69305 (= e!45371 None!136)))

(declare-fun b!69304 () Bool)

(assert (=> b!69304 (= e!45371 (getValueByKey!132 (t!4954 (toList!708 lt!30085)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69302 () Bool)

(declare-fun e!45370 () Option!138)

(assert (=> b!69302 (= e!45370 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30085)))))))

(declare-fun d!15063 () Bool)

(declare-fun c!9890 () Bool)

(assert (=> d!15063 (= c!9890 (and ((_ is Cons!1455) (toList!708 lt!30085)) (= (_1!1057 (h!2040 (toList!708 lt!30085))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15063 (= (getValueByKey!132 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45370)))

(declare-fun b!69303 () Bool)

(assert (=> b!69303 (= e!45370 e!45371)))

(declare-fun c!9891 () Bool)

(assert (=> b!69303 (= c!9891 (and ((_ is Cons!1455) (toList!708 lt!30085)) (not (= (_1!1057 (h!2040 (toList!708 lt!30085))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!15063 c!9890) b!69302))

(assert (= (and d!15063 (not c!9890)) b!69303))

(assert (= (and b!69303 c!9891) b!69304))

(assert (= (and b!69303 (not c!9891)) b!69305))

(assert (=> b!69304 m!64501))

(declare-fun m!65547 () Bool)

(assert (=> b!69304 m!65547))

(assert (=> b!69005 d!15063))

(declare-fun d!15065 () Bool)

(assert (=> d!15065 (= (validMask!0 (mask!6112 newMap!16)) (and (or (= (mask!6112 newMap!16) #b00000000000000000000000000000111) (= (mask!6112 newMap!16) #b00000000000000000000000000001111) (= (mask!6112 newMap!16) #b00000000000000000000000000011111) (= (mask!6112 newMap!16) #b00000000000000000000000000111111) (= (mask!6112 newMap!16) #b00000000000000000000000001111111) (= (mask!6112 newMap!16) #b00000000000000000000000011111111) (= (mask!6112 newMap!16) #b00000000000000000000000111111111) (= (mask!6112 newMap!16) #b00000000000000000000001111111111) (= (mask!6112 newMap!16) #b00000000000000000000011111111111) (= (mask!6112 newMap!16) #b00000000000000000000111111111111) (= (mask!6112 newMap!16) #b00000000000000000001111111111111) (= (mask!6112 newMap!16) #b00000000000000000011111111111111) (= (mask!6112 newMap!16) #b00000000000000000111111111111111) (= (mask!6112 newMap!16) #b00000000000000001111111111111111) (= (mask!6112 newMap!16) #b00000000000000011111111111111111) (= (mask!6112 newMap!16) #b00000000000000111111111111111111) (= (mask!6112 newMap!16) #b00000000000001111111111111111111) (= (mask!6112 newMap!16) #b00000000000011111111111111111111) (= (mask!6112 newMap!16) #b00000000000111111111111111111111) (= (mask!6112 newMap!16) #b00000000001111111111111111111111) (= (mask!6112 newMap!16) #b00000000011111111111111111111111) (= (mask!6112 newMap!16) #b00000000111111111111111111111111) (= (mask!6112 newMap!16) #b00000001111111111111111111111111) (= (mask!6112 newMap!16) #b00000011111111111111111111111111) (= (mask!6112 newMap!16) #b00000111111111111111111111111111) (= (mask!6112 newMap!16) #b00001111111111111111111111111111) (= (mask!6112 newMap!16) #b00011111111111111111111111111111) (= (mask!6112 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6112 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!14861 d!15065))

(declare-fun d!15067 () Bool)

(assert (=> d!15067 (= ($colon$colon!63 e!45344 (ite c!9875 (h!2040 (toList!708 (+!88 lt!29844 lt!29850))) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846)))) (Cons!1455 (ite c!9875 (h!2040 (toList!708 (+!88 lt!29844 lt!29850))) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))) e!45344))))

(assert (=> bm!5905 d!15067))

(declare-fun d!15069 () Bool)

(declare-fun e!45373 () Bool)

(assert (=> d!15069 e!45373))

(declare-fun res!37199 () Bool)

(assert (=> d!15069 (=> res!37199 e!45373)))

(declare-fun lt!30503 () Bool)

(assert (=> d!15069 (= res!37199 (not lt!30503))))

(declare-fun lt!30502 () Bool)

(assert (=> d!15069 (= lt!30503 lt!30502)))

(declare-fun lt!30500 () Unit!1909)

(declare-fun e!45372 () Unit!1909)

(assert (=> d!15069 (= lt!30500 e!45372)))

(declare-fun c!9892 () Bool)

(assert (=> d!15069 (= c!9892 lt!30502)))

(assert (=> d!15069 (= lt!30502 (containsKey!135 (toList!708 lt!30165) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15069 (= (contains!710 lt!30165 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30503)))

(declare-fun b!69306 () Bool)

(declare-fun lt!30501 () Unit!1909)

(assert (=> b!69306 (= e!45372 lt!30501)))

(assert (=> b!69306 (= lt!30501 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30165) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69306 (isDefined!84 (getValueByKey!132 (toList!708 lt!30165) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69307 () Bool)

(declare-fun Unit!1942 () Unit!1909)

(assert (=> b!69307 (= e!45372 Unit!1942)))

(declare-fun b!69308 () Bool)

(assert (=> b!69308 (= e!45373 (isDefined!84 (getValueByKey!132 (toList!708 lt!30165) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15069 c!9892) b!69306))

(assert (= (and d!15069 (not c!9892)) b!69307))

(assert (= (and d!15069 (not res!37199)) b!69308))

(declare-fun m!65549 () Bool)

(assert (=> d!15069 m!65549))

(declare-fun m!65551 () Bool)

(assert (=> b!69306 m!65551))

(declare-fun m!65553 () Bool)

(assert (=> b!69306 m!65553))

(assert (=> b!69306 m!65553))

(declare-fun m!65555 () Bool)

(assert (=> b!69306 m!65555))

(assert (=> b!69308 m!65553))

(assert (=> b!69308 m!65553))

(assert (=> b!69308 m!65555))

(assert (=> bm!5846 d!15069))

(declare-fun d!15071 () Bool)

(assert (=> d!15071 (= (isEmpty!316 lt!30343) (isEmpty!318 (toList!708 lt!30343)))))

(declare-fun bs!2988 () Bool)

(assert (= bs!2988 d!15071))

(declare-fun m!65557 () Bool)

(assert (=> bs!2988 m!65557))

(assert (=> b!69073 d!15071))

(declare-fun d!15073 () Bool)

(declare-fun c!9895 () Bool)

(assert (=> d!15073 (= c!9895 ((_ is Nil!1456) (toList!708 lt!30128)))))

(declare-fun e!45376 () (InoxSet tuple2!2092))

(assert (=> d!15073 (= (content!74 (toList!708 lt!30128)) e!45376)))

(declare-fun b!69313 () Bool)

(assert (=> b!69313 (= e!45376 ((as const (Array tuple2!2092 Bool)) false))))

(declare-fun b!69314 () Bool)

(assert (=> b!69314 (= e!45376 ((_ map or) (store ((as const (Array tuple2!2092 Bool)) false) (h!2040 (toList!708 lt!30128)) true) (content!74 (t!4954 (toList!708 lt!30128)))))))

(assert (= (and d!15073 c!9895) b!69313))

(assert (= (and d!15073 (not c!9895)) b!69314))

(declare-fun m!65559 () Bool)

(assert (=> b!69314 m!65559))

(declare-fun m!65561 () Bool)

(assert (=> b!69314 m!65561))

(assert (=> d!15005 d!15073))

(declare-fun d!15075 () Bool)

(declare-fun res!37200 () Bool)

(declare-fun e!45377 () Bool)

(assert (=> d!15075 (=> res!37200 e!45377)))

(assert (=> d!15075 (= res!37200 (and ((_ is Cons!1455) (toList!708 lt!30109)) (= (_1!1057 (h!2040 (toList!708 lt!30109))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15075 (= (containsKey!135 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000) e!45377)))

(declare-fun b!69315 () Bool)

(declare-fun e!45378 () Bool)

(assert (=> b!69315 (= e!45377 e!45378)))

(declare-fun res!37201 () Bool)

(assert (=> b!69315 (=> (not res!37201) (not e!45378))))

(assert (=> b!69315 (= res!37201 (and (or (not ((_ is Cons!1455) (toList!708 lt!30109))) (bvsle (_1!1057 (h!2040 (toList!708 lt!30109))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1455) (toList!708 lt!30109)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30109))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69316 () Bool)

(assert (=> b!69316 (= e!45378 (containsKey!135 (t!4954 (toList!708 lt!30109)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15075 (not res!37200)) b!69315))

(assert (= (and b!69315 res!37201) b!69316))

(declare-fun m!65563 () Bool)

(assert (=> b!69316 m!65563))

(assert (=> d!15025 d!15075))

(declare-fun d!15077 () Bool)

(declare-fun res!37202 () Bool)

(declare-fun e!45379 () Bool)

(assert (=> d!15077 (=> res!37202 e!45379)))

(assert (=> d!15077 (= res!37202 (and ((_ is Cons!1455) (toList!708 lt!30136)) (= (_1!1057 (h!2040 (toList!708 lt!30136))) (_1!1057 lt!29850))))))

(assert (=> d!15077 (= (containsKey!135 (toList!708 lt!30136) (_1!1057 lt!29850)) e!45379)))

(declare-fun b!69317 () Bool)

(declare-fun e!45380 () Bool)

(assert (=> b!69317 (= e!45379 e!45380)))

(declare-fun res!37203 () Bool)

(assert (=> b!69317 (=> (not res!37203) (not e!45380))))

(assert (=> b!69317 (= res!37203 (and (or (not ((_ is Cons!1455) (toList!708 lt!30136))) (bvsle (_1!1057 (h!2040 (toList!708 lt!30136))) (_1!1057 lt!29850))) ((_ is Cons!1455) (toList!708 lt!30136)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30136))) (_1!1057 lt!29850))))))

(declare-fun b!69318 () Bool)

(assert (=> b!69318 (= e!45380 (containsKey!135 (t!4954 (toList!708 lt!30136)) (_1!1057 lt!29850)))))

(assert (= (and d!15077 (not res!37202)) b!69317))

(assert (= (and b!69317 res!37203) b!69318))

(declare-fun m!65565 () Bool)

(assert (=> b!69318 m!65565))

(assert (=> d!14973 d!15077))

(declare-fun d!15079 () Bool)

(assert (=> d!15079 (= (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30071)) (v!2500 (getValueByKey!132 (toList!708 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30071)))))

(assert (=> d!14881 d!15079))

(declare-fun b!69322 () Bool)

(declare-fun e!45382 () Option!138)

(assert (=> b!69322 (= e!45382 None!136)))

(declare-fun b!69321 () Bool)

(assert (=> b!69321 (= e!45382 (getValueByKey!132 (t!4954 (toList!708 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) lt!30071))))

(declare-fun b!69319 () Bool)

(declare-fun e!45381 () Option!138)

(assert (=> b!69319 (= e!45381 (Some!137 (_2!1057 (h!2040 (toList!708 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun d!15081 () Bool)

(declare-fun c!9896 () Bool)

(assert (=> d!15081 (= c!9896 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30071)))))

(assert (=> d!15081 (= (getValueByKey!132 (toList!708 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30071) e!45381)))

(declare-fun b!69320 () Bool)

(assert (=> b!69320 (= e!45381 e!45382)))

(declare-fun c!9897 () Bool)

(assert (=> b!69320 (= c!9897 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) (not (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30071))))))

(assert (= (and d!15081 c!9896) b!69319))

(assert (= (and d!15081 (not c!9896)) b!69320))

(assert (= (and b!69320 c!9897) b!69321))

(assert (= (and b!69320 (not c!9897)) b!69322))

(declare-fun m!65567 () Bool)

(assert (=> b!69321 m!65567))

(assert (=> d!14881 d!15081))

(declare-fun d!15083 () Bool)

(assert (=> d!15083 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!30128) (_1!1057 lt!29846))) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!30128) (_1!1057 lt!29846)))))))

(declare-fun bs!2989 () Bool)

(assert (= bs!2989 d!15083))

(assert (=> bs!2989 m!64681))

(declare-fun m!65569 () Bool)

(assert (=> bs!2989 m!65569))

(assert (=> b!69249 d!15083))

(assert (=> b!69249 d!14865))

(declare-fun d!15085 () Bool)

(declare-fun res!37204 () Bool)

(declare-fun e!45383 () Bool)

(assert (=> d!15085 (=> res!37204 e!45383)))

(assert (=> d!15085 (= res!37204 (and ((_ is Cons!1455) (toList!708 lt!30124)) (= (_1!1057 (h!2040 (toList!708 lt!30124))) (_1!1057 lt!29850))))))

(assert (=> d!15085 (= (containsKey!135 (toList!708 lt!30124) (_1!1057 lt!29850)) e!45383)))

(declare-fun b!69323 () Bool)

(declare-fun e!45384 () Bool)

(assert (=> b!69323 (= e!45383 e!45384)))

(declare-fun res!37205 () Bool)

(assert (=> b!69323 (=> (not res!37205) (not e!45384))))

(assert (=> b!69323 (= res!37205 (and (or (not ((_ is Cons!1455) (toList!708 lt!30124))) (bvsle (_1!1057 (h!2040 (toList!708 lt!30124))) (_1!1057 lt!29850))) ((_ is Cons!1455) (toList!708 lt!30124)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30124))) (_1!1057 lt!29850))))))

(declare-fun b!69324 () Bool)

(assert (=> b!69324 (= e!45384 (containsKey!135 (t!4954 (toList!708 lt!30124)) (_1!1057 lt!29850)))))

(assert (= (and d!15085 (not res!37204)) b!69323))

(assert (= (and b!69323 res!37205) b!69324))

(declare-fun m!65571 () Bool)

(assert (=> b!69324 m!65571))

(assert (=> d!14921 d!15085))

(declare-fun d!15087 () Bool)

(assert (=> d!15087 (= (size!2074 newMap!16) (bvadd (_size!387 newMap!16) (bvsdiv (bvadd (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!68920 d!15087))

(declare-fun d!15089 () Bool)

(declare-fun lt!30504 () Bool)

(assert (=> d!15089 (= lt!30504 (select (content!74 (toList!708 lt!30371)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45385 () Bool)

(assert (=> d!15089 (= lt!30504 e!45385)))

(declare-fun res!37206 () Bool)

(assert (=> d!15089 (=> (not res!37206) (not e!45385))))

(assert (=> d!15089 (= res!37206 ((_ is Cons!1455) (toList!708 lt!30371)))))

(assert (=> d!15089 (= (contains!713 (toList!708 lt!30371) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30504)))

(declare-fun b!69325 () Bool)

(declare-fun e!45386 () Bool)

(assert (=> b!69325 (= e!45385 e!45386)))

(declare-fun res!37207 () Bool)

(assert (=> b!69325 (=> res!37207 e!45386)))

(assert (=> b!69325 (= res!37207 (= (h!2040 (toList!708 lt!30371)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69326 () Bool)

(assert (=> b!69326 (= e!45386 (contains!713 (t!4954 (toList!708 lt!30371)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15089 res!37206) b!69325))

(assert (= (and b!69325 (not res!37207)) b!69326))

(declare-fun m!65573 () Bool)

(assert (=> d!15089 m!65573))

(declare-fun m!65575 () Bool)

(assert (=> d!15089 m!65575))

(declare-fun m!65577 () Bool)

(assert (=> b!69326 m!65577))

(assert (=> b!69120 d!15089))

(declare-fun d!15091 () Bool)

(declare-fun res!37208 () Bool)

(declare-fun e!45387 () Bool)

(assert (=> d!15091 (=> res!37208 e!45387)))

(assert (=> d!15091 (= res!37208 (and ((_ is Cons!1455) lt!30126) (= (_1!1057 (h!2040 lt!30126)) (_1!1057 lt!29846))))))

(assert (=> d!15091 (= (containsKey!135 lt!30126 (_1!1057 lt!29846)) e!45387)))

(declare-fun b!69327 () Bool)

(declare-fun e!45388 () Bool)

(assert (=> b!69327 (= e!45387 e!45388)))

(declare-fun res!37209 () Bool)

(assert (=> b!69327 (=> (not res!37209) (not e!45388))))

(assert (=> b!69327 (= res!37209 (and (or (not ((_ is Cons!1455) lt!30126)) (bvsle (_1!1057 (h!2040 lt!30126)) (_1!1057 lt!29846))) ((_ is Cons!1455) lt!30126) (bvslt (_1!1057 (h!2040 lt!30126)) (_1!1057 lt!29846))))))

(declare-fun b!69328 () Bool)

(assert (=> b!69328 (= e!45388 (containsKey!135 (t!4954 lt!30126) (_1!1057 lt!29846)))))

(assert (= (and d!15091 (not res!37208)) b!69327))

(assert (= (and b!69327 res!37209) b!69328))

(declare-fun m!65579 () Bool)

(assert (=> b!69328 m!65579))

(assert (=> b!69254 d!15091))

(declare-fun d!15093 () Bool)

(assert (=> d!15093 (= (apply!73 lt!30165 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1134 (getValueByKey!132 (toList!708 lt!30165) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2990 () Bool)

(assert (= bs!2990 d!15093))

(declare-fun m!65581 () Bool)

(assert (=> bs!2990 m!65581))

(assert (=> bs!2990 m!65581))

(declare-fun m!65583 () Bool)

(assert (=> bs!2990 m!65583))

(assert (=> b!68844 d!15093))

(declare-fun d!15095 () Bool)

(declare-fun e!45390 () Bool)

(assert (=> d!15095 e!45390))

(declare-fun res!37210 () Bool)

(assert (=> d!15095 (=> res!37210 e!45390)))

(declare-fun lt!30508 () Bool)

(assert (=> d!15095 (= res!37210 (not lt!30508))))

(declare-fun lt!30507 () Bool)

(assert (=> d!15095 (= lt!30508 lt!30507)))

(declare-fun lt!30505 () Unit!1909)

(declare-fun e!45389 () Unit!1909)

(assert (=> d!15095 (= lt!30505 e!45389)))

(declare-fun c!9898 () Bool)

(assert (=> d!15095 (= c!9898 lt!30507)))

(assert (=> d!15095 (= lt!30507 (containsKey!135 (toList!708 lt!30343) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!15095 (= (contains!710 lt!30343 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!30508)))

(declare-fun b!69329 () Bool)

(declare-fun lt!30506 () Unit!1909)

(assert (=> b!69329 (= e!45389 lt!30506)))

(assert (=> b!69329 (= lt!30506 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30343) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!69329 (isDefined!84 (getValueByKey!132 (toList!708 lt!30343) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69330 () Bool)

(declare-fun Unit!1943 () Unit!1909)

(assert (=> b!69330 (= e!45389 Unit!1943)))

(declare-fun b!69331 () Bool)

(assert (=> b!69331 (= e!45390 (isDefined!84 (getValueByKey!132 (toList!708 lt!30343) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!15095 c!9898) b!69329))

(assert (= (and d!15095 (not c!9898)) b!69330))

(assert (= (and d!15095 (not res!37210)) b!69331))

(assert (=> d!15095 m!65055))

(declare-fun m!65585 () Bool)

(assert (=> d!15095 m!65585))

(assert (=> b!69329 m!65055))

(declare-fun m!65587 () Bool)

(assert (=> b!69329 m!65587))

(assert (=> b!69329 m!65055))

(declare-fun m!65589 () Bool)

(assert (=> b!69329 m!65589))

(assert (=> b!69329 m!65589))

(declare-fun m!65591 () Bool)

(assert (=> b!69329 m!65591))

(assert (=> b!69331 m!65055))

(assert (=> b!69331 m!65589))

(assert (=> b!69331 m!65589))

(assert (=> b!69331 m!65591))

(assert (=> b!69080 d!15095))

(declare-fun d!15097 () Bool)

(declare-fun e!45392 () Bool)

(assert (=> d!15097 e!45392))

(declare-fun res!37211 () Bool)

(assert (=> d!15097 (=> res!37211 e!45392)))

(declare-fun lt!30512 () Bool)

(assert (=> d!15097 (= res!37211 (not lt!30512))))

(declare-fun lt!30511 () Bool)

(assert (=> d!15097 (= lt!30512 lt!30511)))

(declare-fun lt!30509 () Unit!1909)

(declare-fun e!45391 () Unit!1909)

(assert (=> d!15097 (= lt!30509 e!45391)))

(declare-fun c!9899 () Bool)

(assert (=> d!15097 (= c!9899 lt!30511)))

(assert (=> d!15097 (= lt!30511 (containsKey!135 (toList!708 lt!30424) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15097 (= (contains!710 lt!30424 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30512)))

(declare-fun b!69332 () Bool)

(declare-fun lt!30510 () Unit!1909)

(assert (=> b!69332 (= e!45391 lt!30510)))

(assert (=> b!69332 (= lt!30510 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30424) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!69332 (isDefined!84 (getValueByKey!132 (toList!708 lt!30424) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69333 () Bool)

(declare-fun Unit!1944 () Unit!1909)

(assert (=> b!69333 (= e!45391 Unit!1944)))

(declare-fun b!69334 () Bool)

(assert (=> b!69334 (= e!45392 (isDefined!84 (getValueByKey!132 (toList!708 lt!30424) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15097 c!9899) b!69332))

(assert (= (and d!15097 (not c!9899)) b!69333))

(assert (= (and d!15097 (not res!37211)) b!69334))

(declare-fun m!65593 () Bool)

(assert (=> d!15097 m!65593))

(declare-fun m!65595 () Bool)

(assert (=> b!69332 m!65595))

(assert (=> b!69332 m!65327))

(assert (=> b!69332 m!65327))

(declare-fun m!65597 () Bool)

(assert (=> b!69332 m!65597))

(assert (=> b!69334 m!65327))

(assert (=> b!69334 m!65327))

(assert (=> b!69334 m!65597))

(assert (=> d!14999 d!15097))

(declare-fun b!69338 () Bool)

(declare-fun e!45394 () Option!138)

(assert (=> b!69338 (= e!45394 None!136)))

(declare-fun b!69337 () Bool)

(assert (=> b!69337 (= e!45394 (getValueByKey!132 (t!4954 lt!30422) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69335 () Bool)

(declare-fun e!45393 () Option!138)

(assert (=> b!69335 (= e!45393 (Some!137 (_2!1057 (h!2040 lt!30422))))))

(declare-fun d!15099 () Bool)

(declare-fun c!9900 () Bool)

(assert (=> d!15099 (= c!9900 (and ((_ is Cons!1455) lt!30422) (= (_1!1057 (h!2040 lt!30422)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15099 (= (getValueByKey!132 lt!30422 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45393)))

(declare-fun b!69336 () Bool)

(assert (=> b!69336 (= e!45393 e!45394)))

(declare-fun c!9901 () Bool)

(assert (=> b!69336 (= c!9901 (and ((_ is Cons!1455) lt!30422) (not (= (_1!1057 (h!2040 lt!30422)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15099 c!9900) b!69335))

(assert (= (and d!15099 (not c!9900)) b!69336))

(assert (= (and b!69336 c!9901) b!69337))

(assert (= (and b!69336 (not c!9901)) b!69338))

(declare-fun m!65599 () Bool)

(assert (=> b!69337 m!65599))

(assert (=> d!14999 d!15099))

(declare-fun d!15101 () Bool)

(assert (=> d!15101 (= (getValueByKey!132 lt!30422 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30513 () Unit!1909)

(assert (=> d!15101 (= lt!30513 (choose!394 lt!30422 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45395 () Bool)

(assert (=> d!15101 e!45395))

(declare-fun res!37212 () Bool)

(assert (=> d!15101 (=> (not res!37212) (not e!45395))))

(assert (=> d!15101 (= res!37212 (isStrictlySorted!277 lt!30422))))

(assert (=> d!15101 (= (lemmaContainsTupThenGetReturnValue!49 lt!30422 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30513)))

(declare-fun b!69339 () Bool)

(declare-fun res!37213 () Bool)

(assert (=> b!69339 (=> (not res!37213) (not e!45395))))

(assert (=> b!69339 (= res!37213 (containsKey!135 lt!30422 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69340 () Bool)

(assert (=> b!69340 (= e!45395 (contains!713 lt!30422 (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15101 res!37212) b!69339))

(assert (= (and b!69339 res!37213) b!69340))

(assert (=> d!15101 m!65321))

(declare-fun m!65601 () Bool)

(assert (=> d!15101 m!65601))

(declare-fun m!65603 () Bool)

(assert (=> d!15101 m!65603))

(declare-fun m!65605 () Bool)

(assert (=> b!69339 m!65605))

(declare-fun m!65607 () Bool)

(assert (=> b!69340 m!65607))

(assert (=> d!14999 d!15101))

(declare-fun b!69341 () Bool)

(declare-fun e!45398 () List!1459)

(declare-fun call!5914 () List!1459)

(assert (=> b!69341 (= e!45398 call!5914)))

(declare-fun b!69342 () Bool)

(declare-fun e!45396 () List!1459)

(assert (=> b!69342 (= e!45396 (insertStrictlySorted!52 (t!4954 (toList!708 lt!29844)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69343 () Bool)

(declare-fun e!45399 () List!1459)

(declare-fun call!5913 () List!1459)

(assert (=> b!69343 (= e!45399 call!5913)))

(declare-fun b!69344 () Bool)

(assert (=> b!69344 (= e!45399 call!5913)))

(declare-fun b!69345 () Bool)

(declare-fun c!9905 () Bool)

(assert (=> b!69345 (= c!9905 (and ((_ is Cons!1455) (toList!708 lt!29844)) (bvsgt (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!69345 (= e!45398 e!45399)))

(declare-fun b!69346 () Bool)

(declare-fun res!37215 () Bool)

(declare-fun e!45397 () Bool)

(assert (=> b!69346 (=> (not res!37215) (not e!45397))))

(declare-fun lt!30514 () List!1459)

(assert (=> b!69346 (= res!37215 (containsKey!135 lt!30514 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun bm!5911 () Bool)

(declare-fun call!5915 () List!1459)

(declare-fun c!9902 () Bool)

(assert (=> bm!5911 (= call!5915 ($colon$colon!63 e!45396 (ite c!9902 (h!2040 (toList!708 lt!29844)) (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!9903 () Bool)

(assert (=> bm!5911 (= c!9903 c!9902)))

(declare-fun b!69347 () Bool)

(declare-fun e!45400 () List!1459)

(assert (=> b!69347 (= e!45400 e!45398)))

(declare-fun c!9904 () Bool)

(assert (=> b!69347 (= c!9904 (and ((_ is Cons!1455) (toList!708 lt!29844)) (= (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69348 () Bool)

(assert (=> b!69348 (= e!45396 (ite c!9904 (t!4954 (toList!708 lt!29844)) (ite c!9905 (Cons!1455 (h!2040 (toList!708 lt!29844)) (t!4954 (toList!708 lt!29844))) Nil!1456)))))

(declare-fun b!69349 () Bool)

(assert (=> b!69349 (= e!45400 call!5915)))

(declare-fun bm!5910 () Bool)

(assert (=> bm!5910 (= call!5914 call!5915)))

(declare-fun d!15103 () Bool)

(assert (=> d!15103 e!45397))

(declare-fun res!37214 () Bool)

(assert (=> d!15103 (=> (not res!37214) (not e!45397))))

(assert (=> d!15103 (= res!37214 (isStrictlySorted!277 lt!30514))))

(assert (=> d!15103 (= lt!30514 e!45400)))

(assert (=> d!15103 (= c!9902 (and ((_ is Cons!1455) (toList!708 lt!29844)) (bvslt (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15103 (isStrictlySorted!277 (toList!708 lt!29844))))

(assert (=> d!15103 (= (insertStrictlySorted!52 (toList!708 lt!29844) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30514)))

(declare-fun b!69350 () Bool)

(assert (=> b!69350 (= e!45397 (contains!713 lt!30514 (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun bm!5912 () Bool)

(assert (=> bm!5912 (= call!5913 call!5914)))

(assert (= (and d!15103 c!9902) b!69349))

(assert (= (and d!15103 (not c!9902)) b!69347))

(assert (= (and b!69347 c!9904) b!69341))

(assert (= (and b!69347 (not c!9904)) b!69345))

(assert (= (and b!69345 c!9905) b!69344))

(assert (= (and b!69345 (not c!9905)) b!69343))

(assert (= (or b!69344 b!69343) bm!5912))

(assert (= (or b!69341 bm!5912) bm!5910))

(assert (= (or b!69349 bm!5910) bm!5911))

(assert (= (and bm!5911 c!9903) b!69342))

(assert (= (and bm!5911 (not c!9903)) b!69348))

(assert (= (and d!15103 res!37214) b!69346))

(assert (= (and b!69346 res!37215) b!69350))

(declare-fun m!65609 () Bool)

(assert (=> d!15103 m!65609))

(assert (=> d!15103 m!65251))

(declare-fun m!65611 () Bool)

(assert (=> bm!5911 m!65611))

(declare-fun m!65613 () Bool)

(assert (=> b!69350 m!65613))

(declare-fun m!65615 () Bool)

(assert (=> b!69346 m!65615))

(declare-fun m!65617 () Bool)

(assert (=> b!69342 m!65617))

(assert (=> d!14999 d!15103))

(declare-fun d!15105 () Bool)

(assert (=> d!15105 (= (apply!73 lt!30165 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1134 (getValueByKey!132 (toList!708 lt!30165) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2991 () Bool)

(assert (= bs!2991 d!15105))

(assert (=> bs!2991 m!65553))

(assert (=> bs!2991 m!65553))

(declare-fun m!65619 () Bool)

(assert (=> bs!2991 m!65619))

(assert (=> b!68832 d!15105))

(declare-fun d!15107 () Bool)

(declare-fun lt!30515 () Bool)

(assert (=> d!15107 (= lt!30515 (select (content!74 (t!4954 (toList!708 lt!30132))) lt!29846))))

(declare-fun e!45401 () Bool)

(assert (=> d!15107 (= lt!30515 e!45401)))

(declare-fun res!37216 () Bool)

(assert (=> d!15107 (=> (not res!37216) (not e!45401))))

(assert (=> d!15107 (= res!37216 ((_ is Cons!1455) (t!4954 (toList!708 lt!30132))))))

(assert (=> d!15107 (= (contains!713 (t!4954 (toList!708 lt!30132)) lt!29846) lt!30515)))

(declare-fun b!69351 () Bool)

(declare-fun e!45402 () Bool)

(assert (=> b!69351 (= e!45401 e!45402)))

(declare-fun res!37217 () Bool)

(assert (=> b!69351 (=> res!37217 e!45402)))

(assert (=> b!69351 (= res!37217 (= (h!2040 (t!4954 (toList!708 lt!30132))) lt!29846))))

(declare-fun b!69352 () Bool)

(assert (=> b!69352 (= e!45402 (contains!713 (t!4954 (t!4954 (toList!708 lt!30132))) lt!29846))))

(assert (= (and d!15107 res!37216) b!69351))

(assert (= (and b!69351 (not res!37217)) b!69352))

(declare-fun m!65621 () Bool)

(assert (=> d!15107 m!65621))

(declare-fun m!65623 () Bool)

(assert (=> d!15107 m!65623))

(declare-fun m!65625 () Bool)

(assert (=> b!69352 m!65625))

(assert (=> b!69174 d!15107))

(declare-fun d!15109 () Bool)

(declare-fun e!45403 () Bool)

(assert (=> d!15109 e!45403))

(declare-fun res!37218 () Bool)

(assert (=> d!15109 (=> (not res!37218) (not e!45403))))

(declare-fun lt!30518 () ListLongMap!1385)

(assert (=> d!15109 (= res!37218 (contains!710 lt!30518 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun lt!30516 () List!1459)

(assert (=> d!15109 (= lt!30518 (ListLongMap!1386 lt!30516))))

(declare-fun lt!30519 () Unit!1909)

(declare-fun lt!30517 () Unit!1909)

(assert (=> d!15109 (= lt!30519 lt!30517)))

(assert (=> d!15109 (= (getValueByKey!132 lt!30516 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15109 (= lt!30517 (lemmaContainsTupThenGetReturnValue!49 lt!30516 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15109 (= lt!30516 (insertStrictlySorted!52 (toList!708 call!5892) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15109 (= (+!88 call!5892 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) lt!30518)))

(declare-fun b!69353 () Bool)

(declare-fun res!37219 () Bool)

(assert (=> b!69353 (=> (not res!37219) (not e!45403))))

(assert (=> b!69353 (= res!37219 (= (getValueByKey!132 (toList!708 lt!30518) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(declare-fun b!69354 () Bool)

(assert (=> b!69354 (= e!45403 (contains!713 (toList!708 lt!30518) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(assert (= (and d!15109 res!37218) b!69353))

(assert (= (and b!69353 res!37219) b!69354))

(declare-fun m!65627 () Bool)

(assert (=> d!15109 m!65627))

(declare-fun m!65629 () Bool)

(assert (=> d!15109 m!65629))

(declare-fun m!65631 () Bool)

(assert (=> d!15109 m!65631))

(declare-fun m!65633 () Bool)

(assert (=> d!15109 m!65633))

(declare-fun m!65635 () Bool)

(assert (=> b!69353 m!65635))

(declare-fun m!65637 () Bool)

(assert (=> b!69354 m!65637))

(assert (=> b!69131 d!15109))

(declare-fun b!69358 () Bool)

(declare-fun e!45405 () Option!138)

(assert (=> b!69358 (= e!45405 None!136)))

(declare-fun b!69357 () Bool)

(assert (=> b!69357 (= e!45405 (getValueByKey!132 (t!4954 (t!4954 (toList!708 lt!30124))) (_1!1057 lt!29850)))))

(declare-fun b!69355 () Bool)

(declare-fun e!45404 () Option!138)

(assert (=> b!69355 (= e!45404 (Some!137 (_2!1057 (h!2040 (t!4954 (toList!708 lt!30124))))))))

(declare-fun d!15111 () Bool)

(declare-fun c!9906 () Bool)

(assert (=> d!15111 (= c!9906 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!30124))) (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!30124)))) (_1!1057 lt!29850))))))

(assert (=> d!15111 (= (getValueByKey!132 (t!4954 (toList!708 lt!30124)) (_1!1057 lt!29850)) e!45404)))

(declare-fun b!69356 () Bool)

(assert (=> b!69356 (= e!45404 e!45405)))

(declare-fun c!9907 () Bool)

(assert (=> b!69356 (= c!9907 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!30124))) (not (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!30124)))) (_1!1057 lt!29850)))))))

(assert (= (and d!15111 c!9906) b!69355))

(assert (= (and d!15111 (not c!9906)) b!69356))

(assert (= (and b!69356 c!9907) b!69357))

(assert (= (and b!69356 (not c!9907)) b!69358))

(declare-fun m!65639 () Bool)

(assert (=> b!69357 m!65639))

(assert (=> b!68875 d!15111))

(declare-fun d!15113 () Bool)

(assert (=> d!15113 (arrayContainsKey!0 (_keys!3811 newMap!16) lt!30184 #b00000000000000000000000000000000)))

(declare-fun lt!30522 () Unit!1909)

(declare-fun choose!13 (array!3837 (_ BitVec 64) (_ BitVec 32)) Unit!1909)

(assert (=> d!15113 (= lt!30522 (choose!13 (_keys!3811 newMap!16) lt!30184 #b00000000000000000000000000000000))))

(assert (=> d!15113 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!15113 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3811 newMap!16) lt!30184 #b00000000000000000000000000000000) lt!30522)))

(declare-fun bs!2992 () Bool)

(assert (= bs!2992 d!15113))

(assert (=> bs!2992 m!64825))

(declare-fun m!65641 () Bool)

(assert (=> bs!2992 m!65641))

(assert (=> b!68888 d!15113))

(declare-fun d!15115 () Bool)

(declare-fun res!37220 () Bool)

(declare-fun e!45406 () Bool)

(assert (=> d!15115 (=> res!37220 e!45406)))

(assert (=> d!15115 (= res!37220 (= (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) lt!30184))))

(assert (=> d!15115 (= (arrayContainsKey!0 (_keys!3811 newMap!16) lt!30184 #b00000000000000000000000000000000) e!45406)))

(declare-fun b!69359 () Bool)

(declare-fun e!45407 () Bool)

(assert (=> b!69359 (= e!45406 e!45407)))

(declare-fun res!37221 () Bool)

(assert (=> b!69359 (=> (not res!37221) (not e!45407))))

(assert (=> b!69359 (= res!37221 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69360 () Bool)

(assert (=> b!69360 (= e!45407 (arrayContainsKey!0 (_keys!3811 newMap!16) lt!30184 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!15115 (not res!37220)) b!69359))

(assert (= (and b!69359 res!37221) b!69360))

(assert (=> d!15115 m!64745))

(declare-fun m!65643 () Bool)

(assert (=> b!69360 m!65643))

(assert (=> b!68888 d!15115))

(declare-fun b!69361 () Bool)

(declare-fun c!9908 () Bool)

(declare-fun lt!30525 () (_ BitVec 64))

(assert (=> b!69361 (= c!9908 (= lt!30525 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45409 () SeekEntryResult!228)

(declare-fun e!45410 () SeekEntryResult!228)

(assert (=> b!69361 (= e!45409 e!45410)))

(declare-fun b!69362 () Bool)

(declare-fun lt!30523 () SeekEntryResult!228)

(assert (=> b!69362 (= e!45410 (MissingZero!228 (index!3043 lt!30523)))))

(declare-fun b!69363 () Bool)

(assert (=> b!69363 (= e!45410 (seekKeyOrZeroReturnVacant!0 (x!10842 lt!30523) (index!3043 lt!30523) (index!3043 lt!30523) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun b!69364 () Bool)

(declare-fun e!45408 () SeekEntryResult!228)

(assert (=> b!69364 (= e!45408 e!45409)))

(assert (=> b!69364 (= lt!30525 (select (arr!1832 (_keys!3811 newMap!16)) (index!3043 lt!30523)))))

(declare-fun c!9909 () Bool)

(assert (=> b!69364 (= c!9909 (= lt!30525 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!15117 () Bool)

(declare-fun lt!30524 () SeekEntryResult!228)

(assert (=> d!15117 (and (or ((_ is Undefined!228) lt!30524) (not ((_ is Found!228) lt!30524)) (and (bvsge (index!3042 lt!30524) #b00000000000000000000000000000000) (bvslt (index!3042 lt!30524) (size!2068 (_keys!3811 newMap!16))))) (or ((_ is Undefined!228) lt!30524) ((_ is Found!228) lt!30524) (not ((_ is MissingZero!228) lt!30524)) (and (bvsge (index!3041 lt!30524) #b00000000000000000000000000000000) (bvslt (index!3041 lt!30524) (size!2068 (_keys!3811 newMap!16))))) (or ((_ is Undefined!228) lt!30524) ((_ is Found!228) lt!30524) ((_ is MissingZero!228) lt!30524) (not ((_ is MissingVacant!228) lt!30524)) (and (bvsge (index!3044 lt!30524) #b00000000000000000000000000000000) (bvslt (index!3044 lt!30524) (size!2068 (_keys!3811 newMap!16))))) (or ((_ is Undefined!228) lt!30524) (ite ((_ is Found!228) lt!30524) (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30524)) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!228) lt!30524) (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3041 lt!30524)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!228) lt!30524) (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3044 lt!30524)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15117 (= lt!30524 e!45408)))

(declare-fun c!9910 () Bool)

(assert (=> d!15117 (= c!9910 (and ((_ is Intermediate!228) lt!30523) (undefined!1040 lt!30523)))))

(assert (=> d!15117 (= lt!30523 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) (mask!6112 newMap!16)) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(assert (=> d!15117 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15117 (= (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) (_keys!3811 newMap!16) (mask!6112 newMap!16)) lt!30524)))

(declare-fun b!69365 () Bool)

(assert (=> b!69365 (= e!45408 Undefined!228)))

(declare-fun b!69366 () Bool)

(assert (=> b!69366 (= e!45409 (Found!228 (index!3043 lt!30523)))))

(assert (= (and d!15117 c!9910) b!69365))

(assert (= (and d!15117 (not c!9910)) b!69364))

(assert (= (and b!69364 c!9909) b!69366))

(assert (= (and b!69364 (not c!9909)) b!69361))

(assert (= (and b!69361 c!9908) b!69362))

(assert (= (and b!69361 (not c!9908)) b!69363))

(assert (=> b!69363 m!64745))

(declare-fun m!65645 () Bool)

(assert (=> b!69363 m!65645))

(declare-fun m!65647 () Bool)

(assert (=> b!69364 m!65647))

(assert (=> d!15117 m!64725))

(declare-fun m!65649 () Bool)

(assert (=> d!15117 m!65649))

(assert (=> d!15117 m!64745))

(declare-fun m!65651 () Bool)

(assert (=> d!15117 m!65651))

(assert (=> d!15117 m!64745))

(assert (=> d!15117 m!65649))

(declare-fun m!65653 () Bool)

(assert (=> d!15117 m!65653))

(declare-fun m!65655 () Bool)

(assert (=> d!15117 m!65655))

(declare-fun m!65657 () Bool)

(assert (=> d!15117 m!65657))

(assert (=> b!68888 d!15117))

(declare-fun b!69370 () Bool)

(declare-fun e!45412 () Option!138)

(assert (=> b!69370 (= e!45412 None!136)))

(declare-fun b!69369 () Bool)

(assert (=> b!69369 (= e!45412 (getValueByKey!132 (t!4954 (toList!708 lt!30424)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69367 () Bool)

(declare-fun e!45411 () Option!138)

(assert (=> b!69367 (= e!45411 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30424)))))))

(declare-fun d!15119 () Bool)

(declare-fun c!9911 () Bool)

(assert (=> d!15119 (= c!9911 (and ((_ is Cons!1455) (toList!708 lt!30424)) (= (_1!1057 (h!2040 (toList!708 lt!30424))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15119 (= (getValueByKey!132 (toList!708 lt!30424) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45411)))

(declare-fun b!69368 () Bool)

(assert (=> b!69368 (= e!45411 e!45412)))

(declare-fun c!9912 () Bool)

(assert (=> b!69368 (= c!9912 (and ((_ is Cons!1455) (toList!708 lt!30424)) (not (= (_1!1057 (h!2040 (toList!708 lt!30424))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15119 c!9911) b!69367))

(assert (= (and d!15119 (not c!9911)) b!69368))

(assert (= (and b!69368 c!9912) b!69369))

(assert (= (and b!69368 (not c!9912)) b!69370))

(declare-fun m!65659 () Bool)

(assert (=> b!69369 m!65659))

(assert (=> b!69191 d!15119))

(declare-fun b!69374 () Bool)

(declare-fun e!45414 () Option!138)

(assert (=> b!69374 (= e!45414 None!136)))

(declare-fun b!69373 () Bool)

(assert (=> b!69373 (= e!45414 (getValueByKey!132 (t!4954 (t!4954 lt!30130)) (_1!1057 lt!29846)))))

(declare-fun b!69371 () Bool)

(declare-fun e!45413 () Option!138)

(assert (=> b!69371 (= e!45413 (Some!137 (_2!1057 (h!2040 (t!4954 lt!30130)))))))

(declare-fun d!15121 () Bool)

(declare-fun c!9913 () Bool)

(assert (=> d!15121 (= c!9913 (and ((_ is Cons!1455) (t!4954 lt!30130)) (= (_1!1057 (h!2040 (t!4954 lt!30130))) (_1!1057 lt!29846))))))

(assert (=> d!15121 (= (getValueByKey!132 (t!4954 lt!30130) (_1!1057 lt!29846)) e!45413)))

(declare-fun b!69372 () Bool)

(assert (=> b!69372 (= e!45413 e!45414)))

(declare-fun c!9914 () Bool)

(assert (=> b!69372 (= c!9914 (and ((_ is Cons!1455) (t!4954 lt!30130)) (not (= (_1!1057 (h!2040 (t!4954 lt!30130))) (_1!1057 lt!29846)))))))

(assert (= (and d!15121 c!9913) b!69371))

(assert (= (and d!15121 (not c!9913)) b!69372))

(assert (= (and b!69372 c!9914) b!69373))

(assert (= (and b!69372 (not c!9914)) b!69374))

(declare-fun m!65661 () Bool)

(assert (=> b!69373 m!65661))

(assert (=> b!69280 d!15121))

(declare-fun d!15123 () Bool)

(declare-fun e!45416 () Bool)

(assert (=> d!15123 e!45416))

(declare-fun res!37222 () Bool)

(assert (=> d!15123 (=> res!37222 e!45416)))

(declare-fun lt!30529 () Bool)

(assert (=> d!15123 (= res!37222 (not lt!30529))))

(declare-fun lt!30528 () Bool)

(assert (=> d!15123 (= lt!30529 lt!30528)))

(declare-fun lt!30526 () Unit!1909)

(declare-fun e!45415 () Unit!1909)

(assert (=> d!15123 (= lt!30526 e!45415)))

(declare-fun c!9915 () Bool)

(assert (=> d!15123 (= c!9915 lt!30528)))

(assert (=> d!15123 (= lt!30528 (containsKey!135 (toList!708 lt!30371) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15123 (= (contains!710 lt!30371 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30529)))

(declare-fun b!69375 () Bool)

(declare-fun lt!30527 () Unit!1909)

(assert (=> b!69375 (= e!45415 lt!30527)))

(assert (=> b!69375 (= lt!30527 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30371) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!69375 (isDefined!84 (getValueByKey!132 (toList!708 lt!30371) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69376 () Bool)

(declare-fun Unit!1945 () Unit!1909)

(assert (=> b!69376 (= e!45415 Unit!1945)))

(declare-fun b!69377 () Bool)

(assert (=> b!69377 (= e!45416 (isDefined!84 (getValueByKey!132 (toList!708 lt!30371) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15123 c!9915) b!69375))

(assert (= (and d!15123 (not c!9915)) b!69376))

(assert (= (and d!15123 (not res!37222)) b!69377))

(declare-fun m!65663 () Bool)

(assert (=> d!15123 m!65663))

(declare-fun m!65665 () Bool)

(assert (=> b!69375 m!65665))

(assert (=> b!69375 m!65159))

(assert (=> b!69375 m!65159))

(declare-fun m!65667 () Bool)

(assert (=> b!69375 m!65667))

(assert (=> b!69377 m!65159))

(assert (=> b!69377 m!65159))

(assert (=> b!69377 m!65667))

(assert (=> d!14959 d!15123))

(declare-fun b!69381 () Bool)

(declare-fun e!45418 () Option!138)

(assert (=> b!69381 (= e!45418 None!136)))

(declare-fun b!69380 () Bool)

(assert (=> b!69380 (= e!45418 (getValueByKey!132 (t!4954 lt!30369) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69378 () Bool)

(declare-fun e!45417 () Option!138)

(assert (=> b!69378 (= e!45417 (Some!137 (_2!1057 (h!2040 lt!30369))))))

(declare-fun d!15125 () Bool)

(declare-fun c!9916 () Bool)

(assert (=> d!15125 (= c!9916 (and ((_ is Cons!1455) lt!30369) (= (_1!1057 (h!2040 lt!30369)) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15125 (= (getValueByKey!132 lt!30369 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45417)))

(declare-fun b!69379 () Bool)

(assert (=> b!69379 (= e!45417 e!45418)))

(declare-fun c!9917 () Bool)

(assert (=> b!69379 (= c!9917 (and ((_ is Cons!1455) lt!30369) (not (= (_1!1057 (h!2040 lt!30369)) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15125 c!9916) b!69378))

(assert (= (and d!15125 (not c!9916)) b!69379))

(assert (= (and b!69379 c!9917) b!69380))

(assert (= (and b!69379 (not c!9917)) b!69381))

(declare-fun m!65669 () Bool)

(assert (=> b!69380 m!65669))

(assert (=> d!14959 d!15125))

(declare-fun d!15127 () Bool)

(assert (=> d!15127 (= (getValueByKey!132 lt!30369 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30530 () Unit!1909)

(assert (=> d!15127 (= lt!30530 (choose!394 lt!30369 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45419 () Bool)

(assert (=> d!15127 e!45419))

(declare-fun res!37223 () Bool)

(assert (=> d!15127 (=> (not res!37223) (not e!45419))))

(assert (=> d!15127 (= res!37223 (isStrictlySorted!277 lt!30369))))

(assert (=> d!15127 (= (lemmaContainsTupThenGetReturnValue!49 lt!30369 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30530)))

(declare-fun b!69382 () Bool)

(declare-fun res!37224 () Bool)

(assert (=> b!69382 (=> (not res!37224) (not e!45419))))

(assert (=> b!69382 (= res!37224 (containsKey!135 lt!30369 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69383 () Bool)

(assert (=> b!69383 (= e!45419 (contains!713 lt!30369 (tuple2!2093 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15127 res!37223) b!69382))

(assert (= (and b!69382 res!37224) b!69383))

(assert (=> d!15127 m!65153))

(declare-fun m!65671 () Bool)

(assert (=> d!15127 m!65671))

(declare-fun m!65673 () Bool)

(assert (=> d!15127 m!65673))

(declare-fun m!65675 () Bool)

(assert (=> b!69382 m!65675))

(declare-fun m!65677 () Bool)

(assert (=> b!69383 m!65677))

(assert (=> d!14959 d!15127))

(declare-fun b!69384 () Bool)

(declare-fun e!45422 () List!1459)

(declare-fun call!5917 () List!1459)

(assert (=> b!69384 (= e!45422 call!5917)))

(declare-fun b!69385 () Bool)

(declare-fun e!45420 () List!1459)

(assert (=> b!69385 (= e!45420 (insertStrictlySorted!52 (t!4954 (toList!708 call!5843)) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69386 () Bool)

(declare-fun e!45423 () List!1459)

(declare-fun call!5916 () List!1459)

(assert (=> b!69386 (= e!45423 call!5916)))

(declare-fun b!69387 () Bool)

(assert (=> b!69387 (= e!45423 call!5916)))

(declare-fun b!69388 () Bool)

(declare-fun c!9921 () Bool)

(assert (=> b!69388 (= c!9921 (and ((_ is Cons!1455) (toList!708 call!5843)) (bvsgt (_1!1057 (h!2040 (toList!708 call!5843))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!69388 (= e!45422 e!45423)))

(declare-fun b!69389 () Bool)

(declare-fun res!37226 () Bool)

(declare-fun e!45421 () Bool)

(assert (=> b!69389 (=> (not res!37226) (not e!45421))))

(declare-fun lt!30531 () List!1459)

(assert (=> b!69389 (= res!37226 (containsKey!135 lt!30531 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun c!9918 () Bool)

(declare-fun call!5918 () List!1459)

(declare-fun bm!5914 () Bool)

(assert (=> bm!5914 (= call!5918 ($colon$colon!63 e!45420 (ite c!9918 (h!2040 (toList!708 call!5843)) (tuple2!2093 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!9919 () Bool)

(assert (=> bm!5914 (= c!9919 c!9918)))

(declare-fun b!69390 () Bool)

(declare-fun e!45424 () List!1459)

(assert (=> b!69390 (= e!45424 e!45422)))

(declare-fun c!9920 () Bool)

(assert (=> b!69390 (= c!9920 (and ((_ is Cons!1455) (toList!708 call!5843)) (= (_1!1057 (h!2040 (toList!708 call!5843))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69391 () Bool)

(assert (=> b!69391 (= e!45420 (ite c!9920 (t!4954 (toList!708 call!5843)) (ite c!9921 (Cons!1455 (h!2040 (toList!708 call!5843)) (t!4954 (toList!708 call!5843))) Nil!1456)))))

(declare-fun b!69392 () Bool)

(assert (=> b!69392 (= e!45424 call!5918)))

(declare-fun bm!5913 () Bool)

(assert (=> bm!5913 (= call!5917 call!5918)))

(declare-fun d!15129 () Bool)

(assert (=> d!15129 e!45421))

(declare-fun res!37225 () Bool)

(assert (=> d!15129 (=> (not res!37225) (not e!45421))))

(assert (=> d!15129 (= res!37225 (isStrictlySorted!277 lt!30531))))

(assert (=> d!15129 (= lt!30531 e!45424)))

(assert (=> d!15129 (= c!9918 (and ((_ is Cons!1455) (toList!708 call!5843)) (bvslt (_1!1057 (h!2040 (toList!708 call!5843))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15129 (isStrictlySorted!277 (toList!708 call!5843))))

(assert (=> d!15129 (= (insertStrictlySorted!52 (toList!708 call!5843) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30531)))

(declare-fun b!69393 () Bool)

(assert (=> b!69393 (= e!45421 (contains!713 lt!30531 (tuple2!2093 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun bm!5915 () Bool)

(assert (=> bm!5915 (= call!5916 call!5917)))

(assert (= (and d!15129 c!9918) b!69392))

(assert (= (and d!15129 (not c!9918)) b!69390))

(assert (= (and b!69390 c!9920) b!69384))

(assert (= (and b!69390 (not c!9920)) b!69388))

(assert (= (and b!69388 c!9921) b!69387))

(assert (= (and b!69388 (not c!9921)) b!69386))

(assert (= (or b!69387 b!69386) bm!5915))

(assert (= (or b!69384 bm!5915) bm!5913))

(assert (= (or b!69392 bm!5913) bm!5914))

(assert (= (and bm!5914 c!9919) b!69385))

(assert (= (and bm!5914 (not c!9919)) b!69391))

(assert (= (and d!15129 res!37225) b!69389))

(assert (= (and b!69389 res!37226) b!69393))

(declare-fun m!65679 () Bool)

(assert (=> d!15129 m!65679))

(declare-fun m!65681 () Bool)

(assert (=> d!15129 m!65681))

(declare-fun m!65683 () Bool)

(assert (=> bm!5914 m!65683))

(declare-fun m!65685 () Bool)

(assert (=> b!69393 m!65685))

(declare-fun m!65687 () Bool)

(assert (=> b!69389 m!65687))

(declare-fun m!65689 () Bool)

(assert (=> b!69385 m!65689))

(assert (=> d!14959 d!15129))

(declare-fun d!15131 () Bool)

(declare-fun e!45426 () Bool)

(assert (=> d!15131 e!45426))

(declare-fun res!37227 () Bool)

(assert (=> d!15131 (=> res!37227 e!45426)))

(declare-fun lt!30535 () Bool)

(assert (=> d!15131 (= res!37227 (not lt!30535))))

(declare-fun lt!30534 () Bool)

(assert (=> d!15131 (= lt!30535 lt!30534)))

(declare-fun lt!30532 () Unit!1909)

(declare-fun e!45425 () Unit!1909)

(assert (=> d!15131 (= lt!30532 e!45425)))

(declare-fun c!9922 () Bool)

(assert (=> d!15131 (= c!9922 lt!30534)))

(assert (=> d!15131 (= lt!30534 (containsKey!135 (toList!708 lt!30459) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15131 (= (contains!710 lt!30459 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30535)))

(declare-fun b!69394 () Bool)

(declare-fun lt!30533 () Unit!1909)

(assert (=> b!69394 (= e!45425 lt!30533)))

(assert (=> b!69394 (= lt!30533 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30459) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69394 (isDefined!84 (getValueByKey!132 (toList!708 lt!30459) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69395 () Bool)

(declare-fun Unit!1946 () Unit!1909)

(assert (=> b!69395 (= e!45425 Unit!1946)))

(declare-fun b!69396 () Bool)

(assert (=> b!69396 (= e!45426 (isDefined!84 (getValueByKey!132 (toList!708 lt!30459) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15131 c!9922) b!69394))

(assert (= (and d!15131 (not c!9922)) b!69395))

(assert (= (and d!15131 (not res!37227)) b!69396))

(declare-fun m!65691 () Bool)

(assert (=> d!15131 m!65691))

(declare-fun m!65693 () Bool)

(assert (=> b!69394 m!65693))

(declare-fun m!65695 () Bool)

(assert (=> b!69394 m!65695))

(assert (=> b!69394 m!65695))

(declare-fun m!65697 () Bool)

(assert (=> b!69394 m!65697))

(assert (=> b!69396 m!65695))

(assert (=> b!69396 m!65695))

(assert (=> b!69396 m!65697))

(assert (=> bm!5900 d!15131))

(declare-fun d!15133 () Bool)

(declare-fun res!37228 () Bool)

(declare-fun e!45427 () Bool)

(assert (=> d!15133 (=> res!37228 e!45427)))

(assert (=> d!15133 (= res!37228 (and ((_ is Cons!1455) lt!30499) (= (_1!1057 (h!2040 lt!30499)) (_1!1057 lt!29846))))))

(assert (=> d!15133 (= (containsKey!135 lt!30499 (_1!1057 lt!29846)) e!45427)))

(declare-fun b!69397 () Bool)

(declare-fun e!45428 () Bool)

(assert (=> b!69397 (= e!45427 e!45428)))

(declare-fun res!37229 () Bool)

(assert (=> b!69397 (=> (not res!37229) (not e!45428))))

(assert (=> b!69397 (= res!37229 (and (or (not ((_ is Cons!1455) lt!30499)) (bvsle (_1!1057 (h!2040 lt!30499)) (_1!1057 lt!29846))) ((_ is Cons!1455) lt!30499) (bvslt (_1!1057 (h!2040 lt!30499)) (_1!1057 lt!29846))))))

(declare-fun b!69398 () Bool)

(assert (=> b!69398 (= e!45428 (containsKey!135 (t!4954 lt!30499) (_1!1057 lt!29846)))))

(assert (= (and d!15133 (not res!37228)) b!69397))

(assert (= (and b!69397 res!37229) b!69398))

(declare-fun m!65699 () Bool)

(assert (=> b!69398 m!65699))

(assert (=> b!69289 d!15133))

(assert (=> d!14889 d!14887))

(assert (=> d!14889 d!14901))

(declare-fun d!15135 () Bool)

(assert (=> d!15135 (contains!710 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30077)))

(assert (=> d!15135 true))

(declare-fun _$35!312 () Unit!1909)

(assert (=> d!15135 (= (choose!391 lt!30072 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30077) _$35!312)))

(declare-fun bs!2993 () Bool)

(assert (= bs!2993 d!15135))

(assert (=> bs!2993 m!64607))

(assert (=> bs!2993 m!64607))

(assert (=> bs!2993 m!64617))

(assert (=> d!14889 d!15135))

(declare-fun d!15137 () Bool)

(declare-fun e!45430 () Bool)

(assert (=> d!15137 e!45430))

(declare-fun res!37230 () Bool)

(assert (=> d!15137 (=> res!37230 e!45430)))

(declare-fun lt!30539 () Bool)

(assert (=> d!15137 (= res!37230 (not lt!30539))))

(declare-fun lt!30538 () Bool)

(assert (=> d!15137 (= lt!30539 lt!30538)))

(declare-fun lt!30536 () Unit!1909)

(declare-fun e!45429 () Unit!1909)

(assert (=> d!15137 (= lt!30536 e!45429)))

(declare-fun c!9923 () Bool)

(assert (=> d!15137 (= c!9923 lt!30538)))

(assert (=> d!15137 (= lt!30538 (containsKey!135 (toList!708 lt!30072) lt!30077))))

(assert (=> d!15137 (= (contains!710 lt!30072 lt!30077) lt!30539)))

(declare-fun b!69400 () Bool)

(declare-fun lt!30537 () Unit!1909)

(assert (=> b!69400 (= e!45429 lt!30537)))

(assert (=> b!69400 (= lt!30537 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30072) lt!30077))))

(assert (=> b!69400 (isDefined!84 (getValueByKey!132 (toList!708 lt!30072) lt!30077))))

(declare-fun b!69401 () Bool)

(declare-fun Unit!1947 () Unit!1909)

(assert (=> b!69401 (= e!45429 Unit!1947)))

(declare-fun b!69402 () Bool)

(assert (=> b!69402 (= e!45430 (isDefined!84 (getValueByKey!132 (toList!708 lt!30072) lt!30077)))))

(assert (= (and d!15137 c!9923) b!69400))

(assert (= (and d!15137 (not c!9923)) b!69401))

(assert (= (and d!15137 (not res!37230)) b!69402))

(declare-fun m!65701 () Bool)

(assert (=> d!15137 m!65701))

(declare-fun m!65703 () Bool)

(assert (=> b!69400 m!65703))

(declare-fun m!65705 () Bool)

(assert (=> b!69400 m!65705))

(assert (=> b!69400 m!65705))

(declare-fun m!65707 () Bool)

(assert (=> b!69400 m!65707))

(assert (=> b!69402 m!65705))

(assert (=> b!69402 m!65705))

(assert (=> b!69402 m!65707))

(assert (=> d!14889 d!15137))

(declare-fun b!69403 () Bool)

(declare-fun e!45432 () Bool)

(declare-fun e!45431 () Bool)

(assert (=> b!69403 (= e!45432 e!45431)))

(declare-fun c!9924 () Bool)

(assert (=> b!69403 (= c!9924 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000)))))

(declare-fun b!69404 () Bool)

(declare-fun call!5919 () Bool)

(assert (=> b!69404 (= e!45431 call!5919)))

(declare-fun d!15139 () Bool)

(declare-fun res!37233 () Bool)

(declare-fun e!45433 () Bool)

(assert (=> d!15139 (=> res!37233 e!45433)))

(assert (=> d!15139 (= res!37233 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))))))

(assert (=> d!15139 (= (arrayNoDuplicates!0 (_keys!3811 (_2!1058 lt!30016)) #b00000000000000000000000000000000 Nil!1457) e!45433)))

(declare-fun b!69405 () Bool)

(assert (=> b!69405 (= e!45433 e!45432)))

(declare-fun res!37231 () Bool)

(assert (=> b!69405 (=> (not res!37231) (not e!45432))))

(declare-fun e!45434 () Bool)

(assert (=> b!69405 (= res!37231 (not e!45434))))

(declare-fun res!37232 () Bool)

(assert (=> b!69405 (=> (not res!37232) (not e!45434))))

(assert (=> b!69405 (= res!37232 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000)))))

(declare-fun bm!5916 () Bool)

(assert (=> bm!5916 (= call!5919 (arrayNoDuplicates!0 (_keys!3811 (_2!1058 lt!30016)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9924 (Cons!1456 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000) Nil!1457) Nil!1457)))))

(declare-fun b!69406 () Bool)

(assert (=> b!69406 (= e!45434 (contains!712 Nil!1457 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000)))))

(declare-fun b!69407 () Bool)

(assert (=> b!69407 (= e!45431 call!5919)))

(assert (= (and d!15139 (not res!37233)) b!69405))

(assert (= (and b!69405 res!37232) b!69406))

(assert (= (and b!69405 res!37231) b!69403))

(assert (= (and b!69403 c!9924) b!69404))

(assert (= (and b!69403 (not c!9924)) b!69407))

(assert (= (or b!69404 b!69407) bm!5916))

(declare-fun m!65709 () Bool)

(assert (=> b!69403 m!65709))

(assert (=> b!69403 m!65709))

(declare-fun m!65711 () Bool)

(assert (=> b!69403 m!65711))

(assert (=> b!69405 m!65709))

(assert (=> b!69405 m!65709))

(assert (=> b!69405 m!65711))

(assert (=> bm!5916 m!65709))

(declare-fun m!65713 () Bool)

(assert (=> bm!5916 m!65713))

(assert (=> b!69406 m!65709))

(assert (=> b!69406 m!65709))

(declare-fun m!65715 () Bool)

(assert (=> b!69406 m!65715))

(assert (=> b!69172 d!15139))

(declare-fun lt!30540 () Bool)

(declare-fun d!15141 () Bool)

(assert (=> d!15141 (= lt!30540 (select (content!74 (toList!708 lt!30192)) (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45435 () Bool)

(assert (=> d!15141 (= lt!30540 e!45435)))

(declare-fun res!37234 () Bool)

(assert (=> d!15141 (=> (not res!37234) (not e!45435))))

(assert (=> d!15141 (= res!37234 ((_ is Cons!1455) (toList!708 lt!30192)))))

(assert (=> d!15141 (= (contains!713 (toList!708 lt!30192) (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30540)))

(declare-fun b!69408 () Bool)

(declare-fun e!45436 () Bool)

(assert (=> b!69408 (= e!45435 e!45436)))

(declare-fun res!37235 () Bool)

(assert (=> b!69408 (=> res!37235 e!45436)))

(assert (=> b!69408 (= res!37235 (= (h!2040 (toList!708 lt!30192)) (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69409 () Bool)

(assert (=> b!69409 (= e!45436 (contains!713 (t!4954 (toList!708 lt!30192)) (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15141 res!37234) b!69408))

(assert (= (and b!69408 (not res!37235)) b!69409))

(declare-fun m!65717 () Bool)

(assert (=> d!15141 m!65717))

(declare-fun m!65719 () Bool)

(assert (=> d!15141 m!65719))

(declare-fun m!65721 () Bool)

(assert (=> b!69409 m!65721))

(assert (=> b!68892 d!15141))

(declare-fun b!69410 () Bool)

(declare-fun e!45439 () List!1459)

(declare-fun call!5921 () List!1459)

(assert (=> b!69410 (= e!45439 call!5921)))

(declare-fun b!69411 () Bool)

(declare-fun e!45437 () List!1459)

(assert (=> b!69411 (= e!45437 (insertStrictlySorted!52 (t!4954 (t!4954 (toList!708 (+!88 lt!29844 lt!29846)))) (_1!1057 lt!29850) (_2!1057 lt!29850)))))

(declare-fun b!69412 () Bool)

(declare-fun e!45440 () List!1459)

(declare-fun call!5920 () List!1459)

(assert (=> b!69412 (= e!45440 call!5920)))

(declare-fun b!69413 () Bool)

(assert (=> b!69413 (= e!45440 call!5920)))

(declare-fun c!9928 () Bool)

(declare-fun b!69414 () Bool)

(assert (=> b!69414 (= c!9928 (and ((_ is Cons!1455) (t!4954 (toList!708 (+!88 lt!29844 lt!29846)))) (bvsgt (_1!1057 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29846))))) (_1!1057 lt!29850))))))

(assert (=> b!69414 (= e!45439 e!45440)))

(declare-fun b!69415 () Bool)

(declare-fun res!37237 () Bool)

(declare-fun e!45438 () Bool)

(assert (=> b!69415 (=> (not res!37237) (not e!45438))))

(declare-fun lt!30541 () List!1459)

(assert (=> b!69415 (= res!37237 (containsKey!135 lt!30541 (_1!1057 lt!29850)))))

(declare-fun call!5922 () List!1459)

(declare-fun c!9925 () Bool)

(declare-fun bm!5918 () Bool)

(assert (=> bm!5918 (= call!5922 ($colon$colon!63 e!45437 (ite c!9925 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29846)))) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850)))))))

(declare-fun c!9926 () Bool)

(assert (=> bm!5918 (= c!9926 c!9925)))

(declare-fun b!69416 () Bool)

(declare-fun e!45441 () List!1459)

(assert (=> b!69416 (= e!45441 e!45439)))

(declare-fun c!9927 () Bool)

(assert (=> b!69416 (= c!9927 (and ((_ is Cons!1455) (t!4954 (toList!708 (+!88 lt!29844 lt!29846)))) (= (_1!1057 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29846))))) (_1!1057 lt!29850))))))

(declare-fun b!69417 () Bool)

(assert (=> b!69417 (= e!45437 (ite c!9927 (t!4954 (t!4954 (toList!708 (+!88 lt!29844 lt!29846)))) (ite c!9928 (Cons!1455 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29846)))) (t!4954 (t!4954 (toList!708 (+!88 lt!29844 lt!29846))))) Nil!1456)))))

(declare-fun b!69418 () Bool)

(assert (=> b!69418 (= e!45441 call!5922)))

(declare-fun bm!5917 () Bool)

(assert (=> bm!5917 (= call!5921 call!5922)))

(declare-fun d!15143 () Bool)

(assert (=> d!15143 e!45438))

(declare-fun res!37236 () Bool)

(assert (=> d!15143 (=> (not res!37236) (not e!45438))))

(assert (=> d!15143 (= res!37236 (isStrictlySorted!277 lt!30541))))

(assert (=> d!15143 (= lt!30541 e!45441)))

(assert (=> d!15143 (= c!9925 (and ((_ is Cons!1455) (t!4954 (toList!708 (+!88 lt!29844 lt!29846)))) (bvslt (_1!1057 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29846))))) (_1!1057 lt!29850))))))

(assert (=> d!15143 (isStrictlySorted!277 (t!4954 (toList!708 (+!88 lt!29844 lt!29846))))))

(assert (=> d!15143 (= (insertStrictlySorted!52 (t!4954 (toList!708 (+!88 lt!29844 lt!29846))) (_1!1057 lt!29850) (_2!1057 lt!29850)) lt!30541)))

(declare-fun b!69419 () Bool)

(assert (=> b!69419 (= e!45438 (contains!713 lt!30541 (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun bm!5919 () Bool)

(assert (=> bm!5919 (= call!5920 call!5921)))

(assert (= (and d!15143 c!9925) b!69418))

(assert (= (and d!15143 (not c!9925)) b!69416))

(assert (= (and b!69416 c!9927) b!69410))

(assert (= (and b!69416 (not c!9927)) b!69414))

(assert (= (and b!69414 c!9928) b!69413))

(assert (= (and b!69414 (not c!9928)) b!69412))

(assert (= (or b!69413 b!69412) bm!5919))

(assert (= (or b!69410 bm!5919) bm!5917))

(assert (= (or b!69418 bm!5917) bm!5918))

(assert (= (and bm!5918 c!9926) b!69411))

(assert (= (and bm!5918 (not c!9926)) b!69417))

(assert (= (and d!15143 res!37236) b!69415))

(assert (= (and b!69415 res!37237) b!69419))

(declare-fun m!65723 () Bool)

(assert (=> d!15143 m!65723))

(declare-fun m!65725 () Bool)

(assert (=> d!15143 m!65725))

(declare-fun m!65727 () Bool)

(assert (=> bm!5918 m!65727))

(declare-fun m!65729 () Bool)

(assert (=> b!69419 m!65729))

(declare-fun m!65731 () Bool)

(assert (=> b!69415 m!65731))

(declare-fun m!65733 () Bool)

(assert (=> b!69411 m!65733))

(assert (=> b!69040 d!15143))

(declare-fun b!69438 () Bool)

(declare-fun e!45452 () Bool)

(declare-fun lt!30546 () SeekEntryResult!228)

(assert (=> b!69438 (= e!45452 (bvsge (x!10842 lt!30546) #b01111111111111111111111111111110))))

(declare-fun b!69439 () Bool)

(declare-fun e!45456 () SeekEntryResult!228)

(declare-fun e!45455 () SeekEntryResult!228)

(assert (=> b!69439 (= e!45456 e!45455)))

(declare-fun c!9937 () Bool)

(declare-fun lt!30547 () (_ BitVec 64))

(assert (=> b!69439 (= c!9937 (or (= lt!30547 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (= (bvadd lt!30547 lt!30547) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69440 () Bool)

(assert (=> b!69440 (and (bvsge (index!3043 lt!30546) #b00000000000000000000000000000000) (bvslt (index!3043 lt!30546) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun e!45453 () Bool)

(assert (=> b!69440 (= e!45453 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3043 lt!30546)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69441 () Bool)

(assert (=> b!69441 (and (bvsge (index!3043 lt!30546) #b00000000000000000000000000000000) (bvslt (index!3043 lt!30546) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun res!37244 () Bool)

(assert (=> b!69441 (= res!37244 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3043 lt!30546)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!69441 (=> res!37244 e!45453)))

(declare-fun e!45454 () Bool)

(assert (=> b!69441 (= e!45454 e!45453)))

(declare-fun d!15145 () Bool)

(assert (=> d!15145 e!45452))

(declare-fun c!9935 () Bool)

(assert (=> d!15145 (= c!9935 (and ((_ is Intermediate!228) lt!30546) (undefined!1040 lt!30546)))))

(assert (=> d!15145 (= lt!30546 e!45456)))

(declare-fun c!9936 () Bool)

(assert (=> d!15145 (= c!9936 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!15145 (= lt!30547 (select (arr!1832 (_keys!3811 newMap!16)) (toIndex!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6112 newMap!16))))))

(assert (=> d!15145 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15145 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6112 newMap!16)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)) lt!30546)))

(declare-fun b!69442 () Bool)

(assert (=> b!69442 (= e!45455 (Intermediate!228 false (toIndex!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6112 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!69443 () Bool)

(assert (=> b!69443 (and (bvsge (index!3043 lt!30546) #b00000000000000000000000000000000) (bvslt (index!3043 lt!30546) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun res!37246 () Bool)

(assert (=> b!69443 (= res!37246 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3043 lt!30546)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69443 (=> res!37246 e!45453)))

(declare-fun b!69444 () Bool)

(assert (=> b!69444 (= e!45456 (Intermediate!228 true (toIndex!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6112 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!69445 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!69445 (= e!45455 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6112 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6112 newMap!16)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun b!69446 () Bool)

(assert (=> b!69446 (= e!45452 e!45454)))

(declare-fun res!37245 () Bool)

(assert (=> b!69446 (= res!37245 (and ((_ is Intermediate!228) lt!30546) (not (undefined!1040 lt!30546)) (bvslt (x!10842 lt!30546) #b01111111111111111111111111111110) (bvsge (x!10842 lt!30546) #b00000000000000000000000000000000) (bvsge (x!10842 lt!30546) #b00000000000000000000000000000000)))))

(assert (=> b!69446 (=> (not res!37245) (not e!45454))))

(assert (= (and d!15145 c!9936) b!69444))

(assert (= (and d!15145 (not c!9936)) b!69439))

(assert (= (and b!69439 c!9937) b!69442))

(assert (= (and b!69439 (not c!9937)) b!69445))

(assert (= (and d!15145 c!9935) b!69438))

(assert (= (and d!15145 (not c!9935)) b!69446))

(assert (= (and b!69446 res!37245) b!69441))

(assert (= (and b!69441 (not res!37244)) b!69443))

(assert (= (and b!69443 (not res!37246)) b!69440))

(declare-fun m!65735 () Bool)

(assert (=> b!69441 m!65735))

(assert (=> b!69440 m!65735))

(assert (=> b!69443 m!65735))

(assert (=> b!69445 m!65045))

(declare-fun m!65737 () Bool)

(assert (=> b!69445 m!65737))

(assert (=> b!69445 m!65737))

(assert (=> b!69445 m!64329))

(declare-fun m!65739 () Bool)

(assert (=> b!69445 m!65739))

(assert (=> d!15145 m!65045))

(declare-fun m!65741 () Bool)

(assert (=> d!15145 m!65741))

(assert (=> d!15145 m!64725))

(assert (=> d!14929 d!15145))

(declare-fun d!15147 () Bool)

(declare-fun lt!30553 () (_ BitVec 32))

(declare-fun lt!30552 () (_ BitVec 32))

(assert (=> d!15147 (= lt!30553 (bvmul (bvxor lt!30552 (bvlshr lt!30552 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!15147 (= lt!30552 ((_ extract 31 0) (bvand (bvxor (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvlshr (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!15147 (and (bvsge (mask!6112 newMap!16) #b00000000000000000000000000000000) (let ((res!37247 (let ((h!2044 ((_ extract 31 0) (bvand (bvxor (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvlshr (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!10944 (bvmul (bvxor h!2044 (bvlshr h!2044 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!10944 (bvlshr x!10944 #b00000000000000000000000000001101)) (mask!6112 newMap!16)))))) (and (bvslt res!37247 (bvadd (mask!6112 newMap!16) #b00000000000000000000000000000001)) (bvsge res!37247 #b00000000000000000000000000000000))))))

(assert (=> d!15147 (= (toIndex!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6112 newMap!16)) (bvand (bvxor lt!30553 (bvlshr lt!30553 #b00000000000000000000000000001101)) (mask!6112 newMap!16)))))

(assert (=> d!14929 d!15147))

(assert (=> d!14929 d!15065))

(declare-fun d!15149 () Bool)

(assert (=> d!15149 (= (get!1134 (getValueByKey!132 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2500 (getValueByKey!132 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14991 d!15149))

(declare-fun b!69450 () Bool)

(declare-fun e!45458 () Option!138)

(assert (=> b!69450 (= e!45458 None!136)))

(declare-fun b!69449 () Bool)

(assert (=> b!69449 (= e!45458 (getValueByKey!132 (t!4954 (toList!708 lt!30085)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69447 () Bool)

(declare-fun e!45457 () Option!138)

(assert (=> b!69447 (= e!45457 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30085)))))))

(declare-fun d!15151 () Bool)

(declare-fun c!9938 () Bool)

(assert (=> d!15151 (= c!9938 (and ((_ is Cons!1455) (toList!708 lt!30085)) (= (_1!1057 (h!2040 (toList!708 lt!30085))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15151 (= (getValueByKey!132 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000) e!45457)))

(declare-fun b!69448 () Bool)

(assert (=> b!69448 (= e!45457 e!45458)))

(declare-fun c!9939 () Bool)

(assert (=> b!69448 (= c!9939 (and ((_ is Cons!1455) (toList!708 lt!30085)) (not (= (_1!1057 (h!2040 (toList!708 lt!30085))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15151 c!9938) b!69447))

(assert (= (and d!15151 (not c!9938)) b!69448))

(assert (= (and b!69448 c!9939) b!69449))

(assert (= (and b!69448 (not c!9939)) b!69450))

(declare-fun m!65743 () Bool)

(assert (=> b!69449 m!65743))

(assert (=> d!14991 d!15151))

(declare-fun d!15153 () Bool)

(assert (=> d!15153 (= (isDefined!84 (getValueByKey!132 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))))) (not (isEmpty!317 (getValueByKey!132 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))))

(declare-fun bs!2994 () Bool)

(assert (= bs!2994 d!15153))

(assert (=> bs!2994 m!65273))

(declare-fun m!65745 () Bool)

(assert (=> bs!2994 m!65745))

(assert (=> b!69169 d!15153))

(declare-fun b!69454 () Bool)

(declare-fun e!45460 () Option!138)

(assert (=> b!69454 (= e!45460 None!136)))

(declare-fun b!69453 () Bool)

(assert (=> b!69453 (= e!45460 (getValueByKey!132 (t!4954 (toList!708 e!44994)) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))

(declare-fun b!69451 () Bool)

(declare-fun e!45459 () Option!138)

(assert (=> b!69451 (= e!45459 (Some!137 (_2!1057 (h!2040 (toList!708 e!44994)))))))

(declare-fun c!9940 () Bool)

(declare-fun d!15155 () Bool)

(assert (=> d!15155 (= c!9940 (and ((_ is Cons!1455) (toList!708 e!44994)) (= (_1!1057 (h!2040 (toList!708 e!44994))) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))))))))

(assert (=> d!15155 (= (getValueByKey!132 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))) e!45459)))

(declare-fun b!69452 () Bool)

(assert (=> b!69452 (= e!45459 e!45460)))

(declare-fun c!9941 () Bool)

(assert (=> b!69452 (= c!9941 (and ((_ is Cons!1455) (toList!708 e!44994)) (not (= (_1!1057 (h!2040 (toList!708 e!44994))) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))))

(assert (= (and d!15155 c!9940) b!69451))

(assert (= (and d!15155 (not c!9940)) b!69452))

(assert (= (and b!69452 c!9941) b!69453))

(assert (= (and b!69452 (not c!9941)) b!69454))

(declare-fun m!65747 () Bool)

(assert (=> b!69453 m!65747))

(assert (=> b!69169 d!15155))

(declare-fun lt!30554 () Bool)

(declare-fun d!15157 () Bool)

(assert (=> d!15157 (= lt!30554 (select (content!74 (toList!708 lt!30367)) (tuple2!2093 lt!30108 lt!30113)))))

(declare-fun e!45461 () Bool)

(assert (=> d!15157 (= lt!30554 e!45461)))

(declare-fun res!37248 () Bool)

(assert (=> d!15157 (=> (not res!37248) (not e!45461))))

(assert (=> d!15157 (= res!37248 ((_ is Cons!1455) (toList!708 lt!30367)))))

(assert (=> d!15157 (= (contains!713 (toList!708 lt!30367) (tuple2!2093 lt!30108 lt!30113)) lt!30554)))

(declare-fun b!69455 () Bool)

(declare-fun e!45462 () Bool)

(assert (=> b!69455 (= e!45461 e!45462)))

(declare-fun res!37249 () Bool)

(assert (=> b!69455 (=> res!37249 e!45462)))

(assert (=> b!69455 (= res!37249 (= (h!2040 (toList!708 lt!30367)) (tuple2!2093 lt!30108 lt!30113)))))

(declare-fun b!69456 () Bool)

(assert (=> b!69456 (= e!45462 (contains!713 (t!4954 (toList!708 lt!30367)) (tuple2!2093 lt!30108 lt!30113)))))

(assert (= (and d!15157 res!37248) b!69455))

(assert (= (and b!69455 (not res!37249)) b!69456))

(declare-fun m!65749 () Bool)

(assert (=> d!15157 m!65749))

(declare-fun m!65751 () Bool)

(assert (=> d!15157 m!65751))

(declare-fun m!65753 () Bool)

(assert (=> b!69456 m!65753))

(assert (=> b!69112 d!15157))

(declare-fun d!15159 () Bool)

(assert (=> d!15159 (isDefined!84 (getValueByKey!132 (toList!708 lt!30132) (_1!1057 lt!29846)))))

(declare-fun lt!30555 () Unit!1909)

(assert (=> d!15159 (= lt!30555 (choose!395 (toList!708 lt!30132) (_1!1057 lt!29846)))))

(declare-fun e!45463 () Bool)

(assert (=> d!15159 e!45463))

(declare-fun res!37250 () Bool)

(assert (=> d!15159 (=> (not res!37250) (not e!45463))))

(assert (=> d!15159 (= res!37250 (isStrictlySorted!277 (toList!708 lt!30132)))))

(assert (=> d!15159 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30132) (_1!1057 lt!29846)) lt!30555)))

(declare-fun b!69457 () Bool)

(assert (=> b!69457 (= e!45463 (containsKey!135 (toList!708 lt!30132) (_1!1057 lt!29846)))))

(assert (= (and d!15159 res!37250) b!69457))

(assert (=> d!15159 m!64693))

(assert (=> d!15159 m!64693))

(assert (=> d!15159 m!65515))

(declare-fun m!65755 () Bool)

(assert (=> d!15159 m!65755))

(declare-fun m!65757 () Bool)

(assert (=> d!15159 m!65757))

(assert (=> b!69457 m!65511))

(assert (=> b!69275 d!15159))

(declare-fun d!15161 () Bool)

(assert (=> d!15161 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!30132) (_1!1057 lt!29846))) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!30132) (_1!1057 lt!29846)))))))

(declare-fun bs!2995 () Bool)

(assert (= bs!2995 d!15161))

(assert (=> bs!2995 m!64693))

(declare-fun m!65759 () Bool)

(assert (=> bs!2995 m!65759))

(assert (=> b!69275 d!15161))

(assert (=> b!69275 d!14905))

(declare-fun b!69458 () Bool)

(declare-fun e!45464 () (_ BitVec 32))

(declare-fun call!5923 () (_ BitVec 32))

(assert (=> b!69458 (= e!45464 call!5923)))

(declare-fun b!69459 () Bool)

(assert (=> b!69459 (= e!45464 (bvadd #b00000000000000000000000000000001 call!5923))))

(declare-fun d!15163 () Bool)

(declare-fun lt!30556 () (_ BitVec 32))

(assert (=> d!15163 (and (bvsge lt!30556 #b00000000000000000000000000000000) (bvsle lt!30556 (bvsub (size!2068 (_keys!3811 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!45465 () (_ BitVec 32))

(assert (=> d!15163 (= lt!30556 e!45465)))

(declare-fun c!9942 () Bool)

(assert (=> d!15163 (= c!9942 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!15163 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2068 (_keys!3811 newMap!16)) (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!15163 (= (arrayCountValidKeys!0 (_keys!3811 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))) lt!30556)))

(declare-fun b!69460 () Bool)

(assert (=> b!69460 (= e!45465 e!45464)))

(declare-fun c!9943 () Bool)

(assert (=> b!69460 (= c!9943 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!5920 () Bool)

(assert (=> bm!5920 (= call!5923 (arrayCountValidKeys!0 (_keys!3811 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69461 () Bool)

(assert (=> b!69461 (= e!45465 #b00000000000000000000000000000000)))

(assert (= (and d!15163 c!9942) b!69461))

(assert (= (and d!15163 (not c!9942)) b!69460))

(assert (= (and b!69460 c!9943) b!69459))

(assert (= (and b!69460 (not c!9943)) b!69458))

(assert (= (or b!69459 b!69458) bm!5920))

(declare-fun m!65761 () Bool)

(assert (=> b!69460 m!65761))

(assert (=> b!69460 m!65761))

(declare-fun m!65763 () Bool)

(assert (=> b!69460 m!65763))

(declare-fun m!65765 () Bool)

(assert (=> bm!5920 m!65765))

(assert (=> bm!5895 d!15163))

(declare-fun d!15165 () Bool)

(assert (=> d!15165 (= (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107)) (not (isEmpty!317 (getValueByKey!132 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107))))))

(declare-fun bs!2996 () Bool)

(assert (= bs!2996 d!15165))

(assert (=> bs!2996 m!65123))

(declare-fun m!65767 () Bool)

(assert (=> bs!2996 m!65767))

(assert (=> b!69108 d!15165))

(declare-fun b!69465 () Bool)

(declare-fun e!45467 () Option!138)

(assert (=> b!69465 (= e!45467 None!136)))

(declare-fun b!69464 () Bool)

(assert (=> b!69464 (= e!45467 (getValueByKey!132 (t!4954 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)))) lt!30107))))

(declare-fun e!45466 () Option!138)

(declare-fun b!69462 () Bool)

(assert (=> b!69462 (= e!45466 (Some!137 (_2!1057 (h!2040 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)))))))))

(declare-fun c!9944 () Bool)

(declare-fun d!15167 () Bool)

(assert (=> d!15167 (= c!9944 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))))) lt!30107)))))

(assert (=> d!15167 (= (getValueByKey!132 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107) e!45466)))

(declare-fun b!69463 () Bool)

(assert (=> b!69463 (= e!45466 e!45467)))

(declare-fun c!9945 () Bool)

(assert (=> b!69463 (= c!9945 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)))) (not (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))))) lt!30107))))))

(assert (= (and d!15167 c!9944) b!69462))

(assert (= (and d!15167 (not c!9944)) b!69463))

(assert (= (and b!69463 c!9945) b!69464))

(assert (= (and b!69463 (not c!9945)) b!69465))

(declare-fun m!65769 () Bool)

(assert (=> b!69464 m!65769))

(assert (=> b!69108 d!15167))

(declare-fun d!15169 () Bool)

(assert (=> d!15169 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2997 () Bool)

(assert (= bs!2997 d!15169))

(assert (=> bs!2997 m!65501))

(declare-fun m!65771 () Bool)

(assert (=> bs!2997 m!65771))

(assert (=> b!69274 d!15169))

(declare-fun b!69469 () Bool)

(declare-fun e!45469 () Option!138)

(assert (=> b!69469 (= e!45469 None!136)))

(declare-fun b!69468 () Bool)

(assert (=> b!69468 (= e!45469 (getValueByKey!132 (t!4954 (toList!708 lt!30109)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69466 () Bool)

(declare-fun e!45468 () Option!138)

(assert (=> b!69466 (= e!45468 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30109)))))))

(declare-fun d!15171 () Bool)

(declare-fun c!9946 () Bool)

(assert (=> d!15171 (= c!9946 (and ((_ is Cons!1455) (toList!708 lt!30109)) (= (_1!1057 (h!2040 (toList!708 lt!30109))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15171 (= (getValueByKey!132 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45468)))

(declare-fun b!69467 () Bool)

(assert (=> b!69467 (= e!45468 e!45469)))

(declare-fun c!9947 () Bool)

(assert (=> b!69467 (= c!9947 (and ((_ is Cons!1455) (toList!708 lt!30109)) (not (= (_1!1057 (h!2040 (toList!708 lt!30109))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!15171 c!9946) b!69466))

(assert (= (and d!15171 (not c!9946)) b!69467))

(assert (= (and b!69467 c!9947) b!69468))

(assert (= (and b!69467 (not c!9947)) b!69469))

(assert (=> b!69468 m!64501))

(declare-fun m!65773 () Bool)

(assert (=> b!69468 m!65773))

(assert (=> b!69274 d!15171))

(declare-fun d!15173 () Bool)

(assert (=> d!15173 (= (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68843 d!15173))

(declare-fun d!15175 () Bool)

(assert (=> d!15175 (= (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30092)) (v!2500 (getValueByKey!132 (toList!708 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30092)))))

(assert (=> d!14877 d!15175))

(declare-fun b!69473 () Bool)

(declare-fun e!45471 () Option!138)

(assert (=> b!69473 (= e!45471 None!136)))

(declare-fun b!69472 () Bool)

(assert (=> b!69472 (= e!45471 (getValueByKey!132 (t!4954 (toList!708 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) lt!30092))))

(declare-fun b!69470 () Bool)

(declare-fun e!45470 () Option!138)

(assert (=> b!69470 (= e!45470 (Some!137 (_2!1057 (h!2040 (toList!708 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun c!9948 () Bool)

(declare-fun d!15177 () Bool)

(assert (=> d!15177 (= c!9948 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30092)))))

(assert (=> d!15177 (= (getValueByKey!132 (toList!708 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30092) e!45470)))

(declare-fun b!69471 () Bool)

(assert (=> b!69471 (= e!45470 e!45471)))

(declare-fun c!9949 () Bool)

(assert (=> b!69471 (= c!9949 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) (not (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30092))))))

(assert (= (and d!15177 c!9948) b!69470))

(assert (= (and d!15177 (not c!9948)) b!69471))

(assert (= (and b!69471 c!9949) b!69472))

(assert (= (and b!69471 (not c!9949)) b!69473))

(declare-fun m!65775 () Bool)

(assert (=> b!69472 m!65775))

(assert (=> d!14877 d!15177))

(declare-fun lt!30557 () Bool)

(declare-fun d!15179 () Bool)

(assert (=> d!15179 (= lt!30557 (select (content!74 (toList!708 lt!30433)) (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun e!45472 () Bool)

(assert (=> d!15179 (= lt!30557 e!45472)))

(declare-fun res!37251 () Bool)

(assert (=> d!15179 (=> (not res!37251) (not e!45472))))

(assert (=> d!15179 (= res!37251 ((_ is Cons!1455) (toList!708 lt!30433)))))

(assert (=> d!15179 (= (contains!713 (toList!708 lt!30433) (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!30557)))

(declare-fun b!69474 () Bool)

(declare-fun e!45473 () Bool)

(assert (=> b!69474 (= e!45472 e!45473)))

(declare-fun res!37252 () Bool)

(assert (=> b!69474 (=> res!37252 e!45473)))

(assert (=> b!69474 (= res!37252 (= (h!2040 (toList!708 lt!30433)) (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!69475 () Bool)

(assert (=> b!69475 (= e!45473 (contains!713 (t!4954 (toList!708 lt!30433)) (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (= (and d!15179 res!37251) b!69474))

(assert (= (and b!69474 (not res!37252)) b!69475))

(declare-fun m!65777 () Bool)

(assert (=> d!15179 m!65777))

(declare-fun m!65779 () Bool)

(assert (=> d!15179 m!65779))

(declare-fun m!65781 () Bool)

(assert (=> b!69475 m!65781))

(assert (=> b!69198 d!15179))

(declare-fun b!69479 () Bool)

(declare-fun e!45475 () Option!138)

(assert (=> b!69479 (= e!45475 None!136)))

(declare-fun b!69478 () Bool)

(assert (=> b!69478 (= e!45475 (getValueByKey!132 (t!4954 (toList!708 lt!30371)) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69476 () Bool)

(declare-fun e!45474 () Option!138)

(assert (=> b!69476 (= e!45474 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30371)))))))

(declare-fun d!15181 () Bool)

(declare-fun c!9950 () Bool)

(assert (=> d!15181 (= c!9950 (and ((_ is Cons!1455) (toList!708 lt!30371)) (= (_1!1057 (h!2040 (toList!708 lt!30371))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15181 (= (getValueByKey!132 (toList!708 lt!30371) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45474)))

(declare-fun b!69477 () Bool)

(assert (=> b!69477 (= e!45474 e!45475)))

(declare-fun c!9951 () Bool)

(assert (=> b!69477 (= c!9951 (and ((_ is Cons!1455) (toList!708 lt!30371)) (not (= (_1!1057 (h!2040 (toList!708 lt!30371))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15181 c!9950) b!69476))

(assert (= (and d!15181 (not c!9950)) b!69477))

(assert (= (and b!69477 c!9951) b!69478))

(assert (= (and b!69477 (not c!9951)) b!69479))

(declare-fun m!65783 () Bool)

(assert (=> b!69478 m!65783))

(assert (=> b!69119 d!15181))

(declare-fun d!15183 () Bool)

(declare-fun res!37253 () Bool)

(declare-fun e!45476 () Bool)

(assert (=> d!15183 (=> (not res!37253) (not e!45476))))

(assert (=> d!15183 (= res!37253 (simpleValid!49 (_2!1058 lt!30308)))))

(assert (=> d!15183 (= (valid!292 (_2!1058 lt!30308)) e!45476)))

(declare-fun b!69480 () Bool)

(declare-fun res!37254 () Bool)

(assert (=> b!69480 (=> (not res!37254) (not e!45476))))

(assert (=> b!69480 (= res!37254 (= (arrayCountValidKeys!0 (_keys!3811 (_2!1058 lt!30308)) #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30308)))) (_size!387 (_2!1058 lt!30308))))))

(declare-fun b!69481 () Bool)

(declare-fun res!37255 () Bool)

(assert (=> b!69481 (=> (not res!37255) (not e!45476))))

(assert (=> b!69481 (= res!37255 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3811 (_2!1058 lt!30308)) (mask!6112 (_2!1058 lt!30308))))))

(declare-fun b!69482 () Bool)

(assert (=> b!69482 (= e!45476 (arrayNoDuplicates!0 (_keys!3811 (_2!1058 lt!30308)) #b00000000000000000000000000000000 Nil!1457))))

(assert (= (and d!15183 res!37253) b!69480))

(assert (= (and b!69480 res!37254) b!69481))

(assert (= (and b!69481 res!37255) b!69482))

(declare-fun m!65785 () Bool)

(assert (=> d!15183 m!65785))

(declare-fun m!65787 () Bool)

(assert (=> b!69480 m!65787))

(declare-fun m!65789 () Bool)

(assert (=> b!69481 m!65789))

(declare-fun m!65791 () Bool)

(assert (=> b!69482 m!65791))

(assert (=> b!68985 d!15183))

(assert (=> bm!5859 d!14981))

(declare-fun d!15185 () Bool)

(declare-fun lt!30558 () Bool)

(assert (=> d!15185 (= lt!30558 (select (content!75 Nil!1457) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!45478 () Bool)

(assert (=> d!15185 (= lt!30558 e!45478)))

(declare-fun res!37256 () Bool)

(assert (=> d!15185 (=> (not res!37256) (not e!45478))))

(assert (=> d!15185 (= res!37256 ((_ is Cons!1456) Nil!1457))))

(assert (=> d!15185 (= (contains!712 Nil!1457 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) lt!30558)))

(declare-fun b!69483 () Bool)

(declare-fun e!45477 () Bool)

(assert (=> b!69483 (= e!45478 e!45477)))

(declare-fun res!37257 () Bool)

(assert (=> b!69483 (=> res!37257 e!45477)))

(assert (=> b!69483 (= res!37257 (= (h!2041 Nil!1457) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69484 () Bool)

(assert (=> b!69484 (= e!45477 (contains!712 (t!4955 Nil!1457) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!15185 res!37256) b!69483))

(assert (= (and b!69483 (not res!37257)) b!69484))

(assert (=> d!15185 m!65435))

(assert (=> d!15185 m!64745))

(declare-fun m!65793 () Bool)

(assert (=> d!15185 m!65793))

(assert (=> b!69484 m!64745))

(declare-fun m!65795 () Bool)

(assert (=> b!69484 m!65795))

(assert (=> b!69208 d!15185))

(declare-fun d!15187 () Bool)

(assert (=> d!15187 (= (isDefined!84 (getValueByKey!132 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))) (not (isEmpty!317 (getValueByKey!132 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun bs!2998 () Bool)

(assert (= bs!2998 d!15187))

(assert (=> bs!2998 m!64741))

(declare-fun m!65797 () Bool)

(assert (=> bs!2998 m!65797))

(assert (=> b!68831 d!15187))

(declare-fun b!69488 () Bool)

(declare-fun e!45480 () Option!138)

(assert (=> b!69488 (= e!45480 None!136)))

(declare-fun b!69487 () Bool)

(assert (=> b!69487 (= e!45480 (getValueByKey!132 (t!4954 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69485 () Bool)

(declare-fun e!45479 () Option!138)

(assert (=> b!69485 (= e!45479 (Some!137 (_2!1057 (h!2040 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))))))

(declare-fun c!9952 () Bool)

(declare-fun d!15189 () Bool)

(assert (=> d!15189 (= c!9952 (and ((_ is Cons!1455) (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))) (= (_1!1057 (h!2040 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15189 (= (getValueByKey!132 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45479)))

(declare-fun b!69486 () Bool)

(assert (=> b!69486 (= e!45479 e!45480)))

(declare-fun c!9953 () Bool)

(assert (=> b!69486 (= c!9953 (and ((_ is Cons!1455) (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))) (not (= (_1!1057 (h!2040 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(assert (= (and d!15189 c!9952) b!69485))

(assert (= (and d!15189 (not c!9952)) b!69486))

(assert (= (and b!69486 c!9953) b!69487))

(assert (= (and b!69486 (not c!9953)) b!69488))

(assert (=> b!69487 m!64329))

(declare-fun m!65799 () Bool)

(assert (=> b!69487 m!65799))

(assert (=> b!68831 d!15189))

(declare-fun d!15191 () Bool)

(assert (=> d!15191 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2999 () Bool)

(assert (= bs!2999 d!15191))

(assert (=> bs!2999 m!65063))

(declare-fun m!65801 () Bool)

(assert (=> bs!2999 m!65801))

(assert (=> b!69071 d!15191))

(assert (=> b!69071 d!15151))

(declare-fun d!15193 () Bool)

(assert (=> d!15193 (= (get!1134 (getValueByKey!132 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2500 (getValueByKey!132 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14969 d!15193))

(declare-fun b!69492 () Bool)

(declare-fun e!45482 () Option!138)

(assert (=> b!69492 (= e!45482 None!136)))

(declare-fun b!69491 () Bool)

(assert (=> b!69491 (= e!45482 (getValueByKey!132 (t!4954 (toList!708 lt!30085)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69489 () Bool)

(declare-fun e!45481 () Option!138)

(assert (=> b!69489 (= e!45481 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30085)))))))

(declare-fun d!15195 () Bool)

(declare-fun c!9954 () Bool)

(assert (=> d!15195 (= c!9954 (and ((_ is Cons!1455) (toList!708 lt!30085)) (= (_1!1057 (h!2040 (toList!708 lt!30085))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15195 (= (getValueByKey!132 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000) e!45481)))

(declare-fun b!69490 () Bool)

(assert (=> b!69490 (= e!45481 e!45482)))

(declare-fun c!9955 () Bool)

(assert (=> b!69490 (= c!9955 (and ((_ is Cons!1455) (toList!708 lt!30085)) (not (= (_1!1057 (h!2040 (toList!708 lt!30085))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15195 c!9954) b!69489))

(assert (= (and d!15195 (not c!9954)) b!69490))

(assert (= (and b!69490 c!9955) b!69491))

(assert (= (and b!69490 (not c!9955)) b!69492))

(declare-fun m!65803 () Bool)

(assert (=> b!69491 m!65803))

(assert (=> d!14969 d!15195))

(declare-fun b!69505 () Bool)

(declare-fun c!9964 () Bool)

(declare-fun lt!30564 () (_ BitVec 64))

(assert (=> b!69505 (= c!9964 (= lt!30564 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45490 () SeekEntryResult!228)

(declare-fun e!45491 () SeekEntryResult!228)

(assert (=> b!69505 (= e!45490 e!45491)))

(declare-fun b!69506 () Bool)

(assert (=> b!69506 (= e!45491 (MissingVacant!228 (index!3043 lt!30334)))))

(declare-fun b!69507 () Bool)

(assert (=> b!69507 (= e!45490 (Found!228 (index!3043 lt!30334)))))

(declare-fun b!69508 () Bool)

(declare-fun e!45489 () SeekEntryResult!228)

(assert (=> b!69508 (= e!45489 Undefined!228)))

(declare-fun b!69509 () Bool)

(assert (=> b!69509 (= e!45491 (seekKeyOrZeroReturnVacant!0 (bvadd (x!10842 lt!30334) #b00000000000000000000000000000001) (nextIndex!0 (index!3043 lt!30334) (bvadd (x!10842 lt!30334) #b00000000000000000000000000000001) (mask!6112 newMap!16)) (index!3043 lt!30334) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun d!15197 () Bool)

(declare-fun lt!30563 () SeekEntryResult!228)

(assert (=> d!15197 (and (or ((_ is Undefined!228) lt!30563) (not ((_ is Found!228) lt!30563)) (and (bvsge (index!3042 lt!30563) #b00000000000000000000000000000000) (bvslt (index!3042 lt!30563) (size!2068 (_keys!3811 newMap!16))))) (or ((_ is Undefined!228) lt!30563) ((_ is Found!228) lt!30563) (not ((_ is MissingVacant!228) lt!30563)) (not (= (index!3044 lt!30563) (index!3043 lt!30334))) (and (bvsge (index!3044 lt!30563) #b00000000000000000000000000000000) (bvslt (index!3044 lt!30563) (size!2068 (_keys!3811 newMap!16))))) (or ((_ is Undefined!228) lt!30563) (ite ((_ is Found!228) lt!30563) (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30563)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (and ((_ is MissingVacant!228) lt!30563) (= (index!3044 lt!30563) (index!3043 lt!30334)) (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3044 lt!30563)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!15197 (= lt!30563 e!45489)))

(declare-fun c!9963 () Bool)

(assert (=> d!15197 (= c!9963 (bvsge (x!10842 lt!30334) #b01111111111111111111111111111110))))

(assert (=> d!15197 (= lt!30564 (select (arr!1832 (_keys!3811 newMap!16)) (index!3043 lt!30334)))))

(assert (=> d!15197 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15197 (= (seekKeyOrZeroReturnVacant!0 (x!10842 lt!30334) (index!3043 lt!30334) (index!3043 lt!30334) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)) lt!30563)))

(declare-fun b!69510 () Bool)

(assert (=> b!69510 (= e!45489 e!45490)))

(declare-fun c!9962 () Bool)

(assert (=> b!69510 (= c!9962 (= lt!30564 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15197 c!9963) b!69508))

(assert (= (and d!15197 (not c!9963)) b!69510))

(assert (= (and b!69510 c!9962) b!69507))

(assert (= (and b!69510 (not c!9962)) b!69505))

(assert (= (and b!69505 c!9964) b!69506))

(assert (= (and b!69505 (not c!9964)) b!69509))

(declare-fun m!65805 () Bool)

(assert (=> b!69509 m!65805))

(assert (=> b!69509 m!65805))

(assert (=> b!69509 m!64329))

(declare-fun m!65807 () Bool)

(assert (=> b!69509 m!65807))

(declare-fun m!65809 () Bool)

(assert (=> d!15197 m!65809))

(declare-fun m!65811 () Bool)

(assert (=> d!15197 m!65811))

(assert (=> d!15197 m!65043))

(assert (=> d!15197 m!64725))

(assert (=> b!69063 d!15197))

(declare-fun d!15199 () Bool)

(declare-fun e!45492 () Bool)

(assert (=> d!15199 e!45492))

(declare-fun res!37258 () Bool)

(assert (=> d!15199 (=> (not res!37258) (not e!45492))))

(declare-fun lt!30567 () ListLongMap!1385)

(assert (=> d!15199 (= res!37258 (contains!710 lt!30567 (_1!1057 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(declare-fun lt!30565 () List!1459)

(assert (=> d!15199 (= lt!30567 (ListLongMap!1386 lt!30565))))

(declare-fun lt!30568 () Unit!1909)

(declare-fun lt!30566 () Unit!1909)

(assert (=> d!15199 (= lt!30568 lt!30566)))

(assert (=> d!15199 (= (getValueByKey!132 lt!30565 (_1!1057 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) (Some!137 (_2!1057 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(assert (=> d!15199 (= lt!30566 (lemmaContainsTupThenGetReturnValue!49 lt!30565 (_1!1057 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) (_2!1057 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(assert (=> d!15199 (= lt!30565 (insertStrictlySorted!52 (toList!708 lt!30457) (_1!1057 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) (_2!1057 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(assert (=> d!15199 (= (+!88 lt!30457 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) lt!30567)))

(declare-fun b!69511 () Bool)

(declare-fun res!37259 () Bool)

(assert (=> b!69511 (=> (not res!37259) (not e!45492))))

(assert (=> b!69511 (= res!37259 (= (getValueByKey!132 (toList!708 lt!30567) (_1!1057 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) (Some!137 (_2!1057 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))))

(declare-fun b!69512 () Bool)

(assert (=> b!69512 (= e!45492 (contains!713 (toList!708 lt!30567) (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))

(assert (= (and d!15199 res!37258) b!69511))

(assert (= (and b!69511 res!37259) b!69512))

(declare-fun m!65813 () Bool)

(assert (=> d!15199 m!65813))

(declare-fun m!65815 () Bool)

(assert (=> d!15199 m!65815))

(declare-fun m!65817 () Bool)

(assert (=> d!15199 m!65817))

(declare-fun m!65819 () Bool)

(assert (=> d!15199 m!65819))

(declare-fun m!65821 () Bool)

(assert (=> b!69511 m!65821))

(declare-fun m!65823 () Bool)

(assert (=> b!69512 m!65823))

(assert (=> b!69218 d!15199))

(declare-fun d!15201 () Bool)

(declare-fun e!45493 () Bool)

(assert (=> d!15201 e!45493))

(declare-fun res!37260 () Bool)

(assert (=> d!15201 (=> (not res!37260) (not e!45493))))

(declare-fun lt!30571 () ListLongMap!1385)

(assert (=> d!15201 (= res!37260 (contains!710 lt!30571 (_1!1057 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))))))

(declare-fun lt!30569 () List!1459)

(assert (=> d!15201 (= lt!30571 (ListLongMap!1386 lt!30569))))

(declare-fun lt!30572 () Unit!1909)

(declare-fun lt!30570 () Unit!1909)

(assert (=> d!15201 (= lt!30572 lt!30570)))

(assert (=> d!15201 (= (getValueByKey!132 lt!30569 (_1!1057 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))) (Some!137 (_2!1057 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15201 (= lt!30570 (lemmaContainsTupThenGetReturnValue!49 lt!30569 (_1!1057 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) (_2!1057 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15201 (= lt!30569 (insertStrictlySorted!52 (toList!708 lt!30446) (_1!1057 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) (_2!1057 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15201 (= (+!88 lt!30446 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) lt!30571)))

(declare-fun b!69513 () Bool)

(declare-fun res!37261 () Bool)

(assert (=> b!69513 (=> (not res!37261) (not e!45493))))

(assert (=> b!69513 (= res!37261 (= (getValueByKey!132 (toList!708 lt!30571) (_1!1057 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))) (Some!137 (_2!1057 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))))))))

(declare-fun b!69514 () Bool)

(assert (=> b!69514 (= e!45493 (contains!713 (toList!708 lt!30571) (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))))))

(assert (= (and d!15201 res!37260) b!69513))

(assert (= (and b!69513 res!37261) b!69514))

(declare-fun m!65825 () Bool)

(assert (=> d!15201 m!65825))

(declare-fun m!65827 () Bool)

(assert (=> d!15201 m!65827))

(declare-fun m!65829 () Bool)

(assert (=> d!15201 m!65829))

(declare-fun m!65831 () Bool)

(assert (=> d!15201 m!65831))

(declare-fun m!65833 () Bool)

(assert (=> b!69513 m!65833))

(declare-fun m!65835 () Bool)

(assert (=> b!69514 m!65835))

(assert (=> b!69218 d!15201))

(declare-fun d!15203 () Bool)

(declare-fun e!45495 () Bool)

(assert (=> d!15203 e!45495))

(declare-fun res!37262 () Bool)

(assert (=> d!15203 (=> res!37262 e!45495)))

(declare-fun lt!30576 () Bool)

(assert (=> d!15203 (= res!37262 (not lt!30576))))

(declare-fun lt!30575 () Bool)

(assert (=> d!15203 (= lt!30576 lt!30575)))

(declare-fun lt!30573 () Unit!1909)

(declare-fun e!45494 () Unit!1909)

(assert (=> d!15203 (= lt!30573 e!45494)))

(declare-fun c!9965 () Bool)

(assert (=> d!15203 (= c!9965 lt!30575)))

(assert (=> d!15203 (= lt!30575 (containsKey!135 (toList!708 (+!88 lt!30446 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))) lt!30451))))

(assert (=> d!15203 (= (contains!710 (+!88 lt!30446 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) lt!30451) lt!30576)))

(declare-fun b!69515 () Bool)

(declare-fun lt!30574 () Unit!1909)

(assert (=> b!69515 (= e!45494 lt!30574)))

(assert (=> b!69515 (= lt!30574 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (+!88 lt!30446 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))) lt!30451))))

(assert (=> b!69515 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30446 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))) lt!30451))))

(declare-fun b!69516 () Bool)

(declare-fun Unit!1948 () Unit!1909)

(assert (=> b!69516 (= e!45494 Unit!1948)))

(declare-fun b!69517 () Bool)

(assert (=> b!69517 (= e!45495 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30446 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))) lt!30451)))))

(assert (= (and d!15203 c!9965) b!69515))

(assert (= (and d!15203 (not c!9965)) b!69516))

(assert (= (and d!15203 (not res!37262)) b!69517))

(declare-fun m!65837 () Bool)

(assert (=> d!15203 m!65837))

(declare-fun m!65839 () Bool)

(assert (=> b!69515 m!65839))

(declare-fun m!65841 () Bool)

(assert (=> b!69515 m!65841))

(assert (=> b!69515 m!65841))

(declare-fun m!65843 () Bool)

(assert (=> b!69515 m!65843))

(assert (=> b!69517 m!65841))

(assert (=> b!69517 m!65841))

(assert (=> b!69517 m!65843))

(assert (=> b!69218 d!15203))

(declare-fun d!15205 () Bool)

(declare-fun e!45496 () Bool)

(assert (=> d!15205 e!45496))

(declare-fun res!37263 () Bool)

(assert (=> d!15205 (=> (not res!37263) (not e!45496))))

(declare-fun lt!30579 () ListLongMap!1385)

(assert (=> d!15205 (= res!37263 (contains!710 lt!30579 (_1!1057 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))))))

(declare-fun lt!30577 () List!1459)

(assert (=> d!15205 (= lt!30579 (ListLongMap!1386 lt!30577))))

(declare-fun lt!30580 () Unit!1909)

(declare-fun lt!30578 () Unit!1909)

(assert (=> d!15205 (= lt!30580 lt!30578)))

(assert (=> d!15205 (= (getValueByKey!132 lt!30577 (_1!1057 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))) (Some!137 (_2!1057 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15205 (= lt!30578 (lemmaContainsTupThenGetReturnValue!49 lt!30577 (_1!1057 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) (_2!1057 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15205 (= lt!30577 (insertStrictlySorted!52 (toList!708 lt!30464) (_1!1057 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) (_2!1057 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15205 (= (+!88 lt!30464 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) lt!30579)))

(declare-fun b!69518 () Bool)

(declare-fun res!37264 () Bool)

(assert (=> b!69518 (=> (not res!37264) (not e!45496))))

(assert (=> b!69518 (= res!37264 (= (getValueByKey!132 (toList!708 lt!30579) (_1!1057 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))) (Some!137 (_2!1057 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))))))))

(declare-fun b!69519 () Bool)

(assert (=> b!69519 (= e!45496 (contains!713 (toList!708 lt!30579) (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))))))

(assert (= (and d!15205 res!37263) b!69518))

(assert (= (and b!69518 res!37264) b!69519))

(declare-fun m!65845 () Bool)

(assert (=> d!15205 m!65845))

(declare-fun m!65847 () Bool)

(assert (=> d!15205 m!65847))

(declare-fun m!65849 () Bool)

(assert (=> d!15205 m!65849))

(declare-fun m!65851 () Bool)

(assert (=> d!15205 m!65851))

(declare-fun m!65853 () Bool)

(assert (=> b!69518 m!65853))

(declare-fun m!65855 () Bool)

(assert (=> b!69519 m!65855))

(assert (=> b!69218 d!15205))

(declare-fun b!69520 () Bool)

(declare-fun e!45502 () Bool)

(declare-fun e!45497 () Bool)

(assert (=> b!69520 (= e!45502 e!45497)))

(declare-fun c!9966 () Bool)

(declare-fun e!45501 () Bool)

(assert (=> b!69520 (= c!9966 e!45501)))

(declare-fun res!37266 () Bool)

(assert (=> b!69520 (=> (not res!37266) (not e!45501))))

(assert (=> b!69520 (= res!37266 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69521 () Bool)

(declare-fun e!45499 () Bool)

(declare-fun lt!30583 () ListLongMap!1385)

(assert (=> b!69521 (= e!45499 (isEmpty!316 lt!30583))))

(declare-fun bm!5921 () Bool)

(declare-fun call!5924 () ListLongMap!1385)

(assert (=> bm!5921 (= call!5924 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) (mask!6112 newMap!16) (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16)))))

(declare-fun b!69522 () Bool)

(declare-fun res!37267 () Bool)

(assert (=> b!69522 (=> (not res!37267) (not e!45502))))

(assert (=> b!69522 (= res!37267 (not (contains!710 lt!30583 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69523 () Bool)

(declare-fun lt!30586 () Unit!1909)

(declare-fun lt!30585 () Unit!1909)

(assert (=> b!69523 (= lt!30586 lt!30585)))

(declare-fun lt!30581 () (_ BitVec 64))

(declare-fun lt!30587 () V!2921)

(declare-fun lt!30582 () (_ BitVec 64))

(declare-fun lt!30584 () ListLongMap!1385)

(assert (=> b!69523 (not (contains!710 (+!88 lt!30584 (tuple2!2093 lt!30582 lt!30587)) lt!30581))))

(assert (=> b!69523 (= lt!30585 (addStillNotContains!24 lt!30584 lt!30582 lt!30587 lt!30581))))

(assert (=> b!69523 (= lt!30581 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69523 (= lt!30587 (get!1130 (select (arr!1833 (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69523 (= lt!30582 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69523 (= lt!30584 call!5924)))

(declare-fun e!45503 () ListLongMap!1385)

(assert (=> b!69523 (= e!45503 (+!88 call!5924 (tuple2!2093 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) (get!1130 (select (arr!1833 (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69524 () Bool)

(assert (=> b!69524 (= e!45503 call!5924)))

(declare-fun b!69526 () Bool)

(assert (=> b!69526 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(assert (=> b!69526 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))))))))

(declare-fun e!45500 () Bool)

(assert (=> b!69526 (= e!45500 (= (apply!73 lt!30583 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69527 () Bool)

(declare-fun e!45498 () ListLongMap!1385)

(assert (=> b!69527 (= e!45498 (ListLongMap!1386 Nil!1456))))

(declare-fun b!69528 () Bool)

(assert (=> b!69528 (= e!45497 e!45500)))

(assert (=> b!69528 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun res!37268 () Bool)

(assert (=> b!69528 (= res!37268 (contains!710 lt!30583 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69528 (=> (not res!37268) (not e!45500))))

(declare-fun b!69529 () Bool)

(assert (=> b!69529 (= e!45501 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69529 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!69530 () Bool)

(assert (=> b!69530 (= e!45498 e!45503)))

(declare-fun c!9969 () Bool)

(assert (=> b!69530 (= c!9969 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69531 () Bool)

(assert (=> b!69531 (= e!45499 (= lt!30583 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) (mask!6112 newMap!16) (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16))))))

(declare-fun b!69525 () Bool)

(assert (=> b!69525 (= e!45497 e!45499)))

(declare-fun c!9968 () Bool)

(assert (=> b!69525 (= c!9968 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun d!15207 () Bool)

(assert (=> d!15207 e!45502))

(declare-fun res!37265 () Bool)

(assert (=> d!15207 (=> (not res!37265) (not e!45502))))

(assert (=> d!15207 (= res!37265 (not (contains!710 lt!30583 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15207 (= lt!30583 e!45498)))

(declare-fun c!9967 () Bool)

(assert (=> d!15207 (= c!9967 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!15207 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15207 (= (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) (mask!6112 newMap!16) (ite c!9730 (ite c!9727 lt!30025 lt!30024) (extraKeys!2034 newMap!16)) (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30583)))

(assert (= (and d!15207 c!9967) b!69527))

(assert (= (and d!15207 (not c!9967)) b!69530))

(assert (= (and b!69530 c!9969) b!69523))

(assert (= (and b!69530 (not c!9969)) b!69524))

(assert (= (or b!69523 b!69524) bm!5921))

(assert (= (and d!15207 res!37265) b!69522))

(assert (= (and b!69522 res!37267) b!69520))

(assert (= (and b!69520 res!37266) b!69529))

(assert (= (and b!69520 c!9966) b!69528))

(assert (= (and b!69520 (not c!9966)) b!69525))

(assert (= (and b!69528 res!37268) b!69526))

(assert (= (and b!69525 c!9968) b!69531))

(assert (= (and b!69525 (not c!9968)) b!69521))

(declare-fun b_lambda!3117 () Bool)

(assert (=> (not b_lambda!3117) (not b!69523)))

(assert (=> b!69523 t!4967))

(declare-fun b_and!4269 () Bool)

(assert (= b_and!4265 (and (=> t!4967 result!2615) b_and!4269)))

(assert (=> b!69523 t!4969))

(declare-fun b_and!4271 () Bool)

(assert (= b_and!4267 (and (=> t!4969 result!2617) b_and!4271)))

(declare-fun b_lambda!3119 () Bool)

(assert (=> (not b_lambda!3119) (not b!69526)))

(assert (=> b!69526 t!4967))

(declare-fun b_and!4273 () Bool)

(assert (= b_and!4269 (and (=> t!4967 result!2615) b_and!4273)))

(assert (=> b!69526 t!4969))

(declare-fun b_and!4275 () Bool)

(assert (= b_and!4271 (and (=> t!4969 result!2617) b_and!4275)))

(declare-fun m!65857 () Bool)

(assert (=> b!69531 m!65857))

(declare-fun m!65859 () Bool)

(assert (=> b!69521 m!65859))

(assert (=> b!69528 m!64745))

(assert (=> b!69528 m!64745))

(declare-fun m!65861 () Bool)

(assert (=> b!69528 m!65861))

(assert (=> bm!5921 m!65857))

(assert (=> b!69529 m!64745))

(assert (=> b!69529 m!64745))

(assert (=> b!69529 m!64747))

(assert (=> b!69526 m!64745))

(declare-fun m!65863 () Bool)

(assert (=> b!69526 m!65863))

(assert (=> b!69526 m!65387))

(assert (=> b!69526 m!64745))

(assert (=> b!69526 m!64757))

(assert (=> b!69526 m!65387))

(assert (=> b!69526 m!64757))

(assert (=> b!69526 m!65391))

(assert (=> b!69523 m!65387))

(declare-fun m!65865 () Bool)

(assert (=> b!69523 m!65865))

(declare-fun m!65867 () Bool)

(assert (=> b!69523 m!65867))

(assert (=> b!69523 m!65867))

(declare-fun m!65869 () Bool)

(assert (=> b!69523 m!65869))

(assert (=> b!69523 m!64745))

(declare-fun m!65871 () Bool)

(assert (=> b!69523 m!65871))

(assert (=> b!69523 m!64757))

(assert (=> b!69523 m!65387))

(assert (=> b!69523 m!64757))

(assert (=> b!69523 m!65391))

(assert (=> b!69530 m!64745))

(assert (=> b!69530 m!64745))

(assert (=> b!69530 m!64747))

(declare-fun m!65873 () Bool)

(assert (=> b!69522 m!65873))

(declare-fun m!65875 () Bool)

(assert (=> d!15207 m!65875))

(assert (=> d!15207 m!64725))

(assert (=> b!69218 d!15207))

(declare-fun d!15209 () Bool)

(assert (=> d!15209 (contains!710 (+!88 lt!30446 (tuple2!2093 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) lt!30451)))

(declare-fun lt!30588 () Unit!1909)

(assert (=> d!15209 (= lt!30588 (choose!391 lt!30446 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) lt!30451))))

(assert (=> d!15209 (contains!710 lt!30446 lt!30451)))

(assert (=> d!15209 (= (addStillContains!49 lt!30446 lt!30462 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) lt!30451) lt!30588)))

(declare-fun bs!3000 () Bool)

(assert (= bs!3000 d!15209))

(assert (=> bs!3000 m!65399))

(assert (=> bs!3000 m!65399))

(assert (=> bs!3000 m!65409))

(declare-fun m!65877 () Bool)

(assert (=> bs!3000 m!65877))

(declare-fun m!65879 () Bool)

(assert (=> bs!3000 m!65879))

(assert (=> b!69218 d!15209))

(declare-fun d!15211 () Bool)

(assert (=> d!15211 (= (apply!73 (+!88 lt!30457 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) lt!30466) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30457 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) lt!30466)))))

(declare-fun bs!3001 () Bool)

(assert (= bs!3001 d!15211))

(declare-fun m!65881 () Bool)

(assert (=> bs!3001 m!65881))

(assert (=> bs!3001 m!65881))

(declare-fun m!65883 () Bool)

(assert (=> bs!3001 m!65883))

(assert (=> b!69218 d!15211))

(declare-fun d!15213 () Bool)

(declare-fun e!45504 () Bool)

(assert (=> d!15213 e!45504))

(declare-fun res!37269 () Bool)

(assert (=> d!15213 (=> (not res!37269) (not e!45504))))

(declare-fun lt!30591 () ListLongMap!1385)

(assert (=> d!15213 (= res!37269 (contains!710 lt!30591 (_1!1057 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(declare-fun lt!30589 () List!1459)

(assert (=> d!15213 (= lt!30591 (ListLongMap!1386 lt!30589))))

(declare-fun lt!30592 () Unit!1909)

(declare-fun lt!30590 () Unit!1909)

(assert (=> d!15213 (= lt!30592 lt!30590)))

(assert (=> d!15213 (= (getValueByKey!132 lt!30589 (_1!1057 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) (Some!137 (_2!1057 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(assert (=> d!15213 (= lt!30590 (lemmaContainsTupThenGetReturnValue!49 lt!30589 (_1!1057 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) (_2!1057 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(assert (=> d!15213 (= lt!30589 (insertStrictlySorted!52 (toList!708 lt!30461) (_1!1057 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) (_2!1057 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(assert (=> d!15213 (= (+!88 lt!30461 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) lt!30591)))

(declare-fun b!69532 () Bool)

(declare-fun res!37270 () Bool)

(assert (=> b!69532 (=> (not res!37270) (not e!45504))))

(assert (=> b!69532 (= res!37270 (= (getValueByKey!132 (toList!708 lt!30591) (_1!1057 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) (Some!137 (_2!1057 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))))

(declare-fun b!69533 () Bool)

(assert (=> b!69533 (= e!45504 (contains!713 (toList!708 lt!30591) (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))

(assert (= (and d!15213 res!37269) b!69532))

(assert (= (and b!69532 res!37270) b!69533))

(declare-fun m!65885 () Bool)

(assert (=> d!15213 m!65885))

(declare-fun m!65887 () Bool)

(assert (=> d!15213 m!65887))

(declare-fun m!65889 () Bool)

(assert (=> d!15213 m!65889))

(declare-fun m!65891 () Bool)

(assert (=> d!15213 m!65891))

(declare-fun m!65893 () Bool)

(assert (=> b!69532 m!65893))

(declare-fun m!65895 () Bool)

(assert (=> b!69533 m!65895))

(assert (=> b!69218 d!15213))

(declare-fun d!15215 () Bool)

(assert (=> d!15215 (= (apply!73 lt!30464 lt!30458) (get!1134 (getValueByKey!132 (toList!708 lt!30464) lt!30458)))))

(declare-fun bs!3002 () Bool)

(assert (= bs!3002 d!15215))

(declare-fun m!65897 () Bool)

(assert (=> bs!3002 m!65897))

(assert (=> bs!3002 m!65897))

(declare-fun m!65899 () Bool)

(assert (=> bs!3002 m!65899))

(assert (=> b!69218 d!15215))

(declare-fun d!15217 () Bool)

(assert (=> d!15217 (= (apply!73 lt!30457 lt!30466) (get!1134 (getValueByKey!132 (toList!708 lt!30457) lt!30466)))))

(declare-fun bs!3003 () Bool)

(assert (= bs!3003 d!15217))

(declare-fun m!65901 () Bool)

(assert (=> bs!3003 m!65901))

(assert (=> bs!3003 m!65901))

(declare-fun m!65903 () Bool)

(assert (=> bs!3003 m!65903))

(assert (=> b!69218 d!15217))

(declare-fun d!15219 () Bool)

(assert (=> d!15219 (= (apply!73 (+!88 lt!30461 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) lt!30445) (apply!73 lt!30461 lt!30445))))

(declare-fun lt!30593 () Unit!1909)

(assert (=> d!15219 (= lt!30593 (choose!392 lt!30461 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) lt!30445))))

(declare-fun e!45505 () Bool)

(assert (=> d!15219 e!45505))

(declare-fun res!37271 () Bool)

(assert (=> d!15219 (=> (not res!37271) (not e!45505))))

(assert (=> d!15219 (= res!37271 (contains!710 lt!30461 lt!30445))))

(assert (=> d!15219 (= (addApplyDifferent!49 lt!30461 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) lt!30445) lt!30593)))

(declare-fun b!69534 () Bool)

(assert (=> b!69534 (= e!45505 (not (= lt!30445 lt!30453)))))

(assert (= (and d!15219 res!37271) b!69534))

(declare-fun m!65905 () Bool)

(assert (=> d!15219 m!65905))

(assert (=> d!15219 m!65395))

(assert (=> d!15219 m!65397))

(assert (=> d!15219 m!65395))

(declare-fun m!65907 () Bool)

(assert (=> d!15219 m!65907))

(assert (=> d!15219 m!65419))

(assert (=> b!69218 d!15219))

(declare-fun d!15221 () Bool)

(assert (=> d!15221 (= (apply!73 (+!88 lt!30464 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) lt!30458) (apply!73 lt!30464 lt!30458))))

(declare-fun lt!30594 () Unit!1909)

(assert (=> d!15221 (= lt!30594 (choose!392 lt!30464 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) lt!30458))))

(declare-fun e!45506 () Bool)

(assert (=> d!15221 e!45506))

(declare-fun res!37272 () Bool)

(assert (=> d!15221 (=> (not res!37272) (not e!45506))))

(assert (=> d!15221 (= res!37272 (contains!710 lt!30464 lt!30458))))

(assert (=> d!15221 (= (addApplyDifferent!49 lt!30464 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)) lt!30458) lt!30594)))

(declare-fun b!69535 () Bool)

(assert (=> b!69535 (= e!45506 (not (= lt!30458 lt!30465)))))

(assert (= (and d!15221 res!37272) b!69535))

(declare-fun m!65909 () Bool)

(assert (=> d!15221 m!65909))

(assert (=> d!15221 m!65401))

(assert (=> d!15221 m!65403))

(assert (=> d!15221 m!65401))

(declare-fun m!65911 () Bool)

(assert (=> d!15221 m!65911))

(assert (=> d!15221 m!65405))

(assert (=> b!69218 d!15221))

(declare-fun d!15223 () Bool)

(assert (=> d!15223 (= (apply!73 (+!88 lt!30461 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) lt!30445) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30461 (tuple2!2093 lt!30453 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) lt!30445)))))

(declare-fun bs!3004 () Bool)

(assert (= bs!3004 d!15223))

(declare-fun m!65913 () Bool)

(assert (=> bs!3004 m!65913))

(assert (=> bs!3004 m!65913))

(declare-fun m!65915 () Bool)

(assert (=> bs!3004 m!65915))

(assert (=> b!69218 d!15223))

(declare-fun d!15225 () Bool)

(assert (=> d!15225 (= (apply!73 lt!30461 lt!30445) (get!1134 (getValueByKey!132 (toList!708 lt!30461) lt!30445)))))

(declare-fun bs!3005 () Bool)

(assert (= bs!3005 d!15225))

(declare-fun m!65917 () Bool)

(assert (=> bs!3005 m!65917))

(assert (=> bs!3005 m!65917))

(declare-fun m!65919 () Bool)

(assert (=> bs!3005 m!65919))

(assert (=> b!69218 d!15225))

(declare-fun d!15227 () Bool)

(assert (=> d!15227 (= (apply!73 (+!88 lt!30464 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16)))) lt!30458) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30464 (tuple2!2093 lt!30465 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))))) lt!30458)))))

(declare-fun bs!3006 () Bool)

(assert (= bs!3006 d!15227))

(declare-fun m!65921 () Bool)

(assert (=> bs!3006 m!65921))

(assert (=> bs!3006 m!65921))

(declare-fun m!65923 () Bool)

(assert (=> bs!3006 m!65923))

(assert (=> b!69218 d!15227))

(declare-fun d!15229 () Bool)

(assert (=> d!15229 (= (apply!73 (+!88 lt!30457 (tuple2!2093 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) lt!30466) (apply!73 lt!30457 lt!30466))))

(declare-fun lt!30595 () Unit!1909)

(assert (=> d!15229 (= lt!30595 (choose!392 lt!30457 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) lt!30466))))

(declare-fun e!45507 () Bool)

(assert (=> d!15229 e!45507))

(declare-fun res!37273 () Bool)

(assert (=> d!15229 (=> (not res!37273) (not e!45507))))

(assert (=> d!15229 (= res!37273 (contains!710 lt!30457 lt!30466))))

(assert (=> d!15229 (= (addApplyDifferent!49 lt!30457 lt!30447 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)) lt!30466) lt!30595)))

(declare-fun b!69536 () Bool)

(assert (=> b!69536 (= e!45507 (not (= lt!30466 lt!30447)))))

(assert (= (and d!15229 res!37273) b!69536))

(declare-fun m!65925 () Bool)

(assert (=> d!15229 m!65925))

(assert (=> d!15229 m!65411))

(assert (=> d!15229 m!65413))

(assert (=> d!15229 m!65411))

(declare-fun m!65927 () Bool)

(assert (=> d!15229 m!65927))

(assert (=> d!15229 m!65425))

(assert (=> b!69218 d!15229))

(declare-fun d!15231 () Bool)

(declare-fun e!45509 () Bool)

(assert (=> d!15231 e!45509))

(declare-fun res!37274 () Bool)

(assert (=> d!15231 (=> res!37274 e!45509)))

(declare-fun lt!30599 () Bool)

(assert (=> d!15231 (= res!37274 (not lt!30599))))

(declare-fun lt!30598 () Bool)

(assert (=> d!15231 (= lt!30599 lt!30598)))

(declare-fun lt!30596 () Unit!1909)

(declare-fun e!45508 () Unit!1909)

(assert (=> d!15231 (= lt!30596 e!45508)))

(declare-fun c!9970 () Bool)

(assert (=> d!15231 (= c!9970 lt!30598)))

(assert (=> d!15231 (= lt!30598 (containsKey!135 (toList!708 lt!30367) (_1!1057 (tuple2!2093 lt!30108 lt!30113))))))

(assert (=> d!15231 (= (contains!710 lt!30367 (_1!1057 (tuple2!2093 lt!30108 lt!30113))) lt!30599)))

(declare-fun b!69537 () Bool)

(declare-fun lt!30597 () Unit!1909)

(assert (=> b!69537 (= e!45508 lt!30597)))

(assert (=> b!69537 (= lt!30597 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30367) (_1!1057 (tuple2!2093 lt!30108 lt!30113))))))

(assert (=> b!69537 (isDefined!84 (getValueByKey!132 (toList!708 lt!30367) (_1!1057 (tuple2!2093 lt!30108 lt!30113))))))

(declare-fun b!69538 () Bool)

(declare-fun Unit!1949 () Unit!1909)

(assert (=> b!69538 (= e!45508 Unit!1949)))

(declare-fun b!69539 () Bool)

(assert (=> b!69539 (= e!45509 (isDefined!84 (getValueByKey!132 (toList!708 lt!30367) (_1!1057 (tuple2!2093 lt!30108 lt!30113)))))))

(assert (= (and d!15231 c!9970) b!69537))

(assert (= (and d!15231 (not c!9970)) b!69538))

(assert (= (and d!15231 (not res!37274)) b!69539))

(declare-fun m!65929 () Bool)

(assert (=> d!15231 m!65929))

(declare-fun m!65931 () Bool)

(assert (=> b!69537 m!65931))

(assert (=> b!69537 m!65147))

(assert (=> b!69537 m!65147))

(declare-fun m!65933 () Bool)

(assert (=> b!69537 m!65933))

(assert (=> b!69539 m!65147))

(assert (=> b!69539 m!65147))

(assert (=> b!69539 m!65933))

(assert (=> d!14955 d!15231))

(declare-fun b!69543 () Bool)

(declare-fun e!45511 () Option!138)

(assert (=> b!69543 (= e!45511 None!136)))

(declare-fun b!69542 () Bool)

(assert (=> b!69542 (= e!45511 (getValueByKey!132 (t!4954 lt!30365) (_1!1057 (tuple2!2093 lt!30108 lt!30113))))))

(declare-fun b!69540 () Bool)

(declare-fun e!45510 () Option!138)

(assert (=> b!69540 (= e!45510 (Some!137 (_2!1057 (h!2040 lt!30365))))))

(declare-fun d!15233 () Bool)

(declare-fun c!9971 () Bool)

(assert (=> d!15233 (= c!9971 (and ((_ is Cons!1455) lt!30365) (= (_1!1057 (h!2040 lt!30365)) (_1!1057 (tuple2!2093 lt!30108 lt!30113)))))))

(assert (=> d!15233 (= (getValueByKey!132 lt!30365 (_1!1057 (tuple2!2093 lt!30108 lt!30113))) e!45510)))

(declare-fun b!69541 () Bool)

(assert (=> b!69541 (= e!45510 e!45511)))

(declare-fun c!9972 () Bool)

(assert (=> b!69541 (= c!9972 (and ((_ is Cons!1455) lt!30365) (not (= (_1!1057 (h!2040 lt!30365)) (_1!1057 (tuple2!2093 lt!30108 lt!30113))))))))

(assert (= (and d!15233 c!9971) b!69540))

(assert (= (and d!15233 (not c!9971)) b!69541))

(assert (= (and b!69541 c!9972) b!69542))

(assert (= (and b!69541 (not c!9972)) b!69543))

(declare-fun m!65935 () Bool)

(assert (=> b!69542 m!65935))

(assert (=> d!14955 d!15233))

(declare-fun d!15235 () Bool)

(assert (=> d!15235 (= (getValueByKey!132 lt!30365 (_1!1057 (tuple2!2093 lt!30108 lt!30113))) (Some!137 (_2!1057 (tuple2!2093 lt!30108 lt!30113))))))

(declare-fun lt!30600 () Unit!1909)

(assert (=> d!15235 (= lt!30600 (choose!394 lt!30365 (_1!1057 (tuple2!2093 lt!30108 lt!30113)) (_2!1057 (tuple2!2093 lt!30108 lt!30113))))))

(declare-fun e!45512 () Bool)

(assert (=> d!15235 e!45512))

(declare-fun res!37275 () Bool)

(assert (=> d!15235 (=> (not res!37275) (not e!45512))))

(assert (=> d!15235 (= res!37275 (isStrictlySorted!277 lt!30365))))

(assert (=> d!15235 (= (lemmaContainsTupThenGetReturnValue!49 lt!30365 (_1!1057 (tuple2!2093 lt!30108 lt!30113)) (_2!1057 (tuple2!2093 lt!30108 lt!30113))) lt!30600)))

(declare-fun b!69544 () Bool)

(declare-fun res!37276 () Bool)

(assert (=> b!69544 (=> (not res!37276) (not e!45512))))

(assert (=> b!69544 (= res!37276 (containsKey!135 lt!30365 (_1!1057 (tuple2!2093 lt!30108 lt!30113))))))

(declare-fun b!69545 () Bool)

(assert (=> b!69545 (= e!45512 (contains!713 lt!30365 (tuple2!2093 (_1!1057 (tuple2!2093 lt!30108 lt!30113)) (_2!1057 (tuple2!2093 lt!30108 lt!30113)))))))

(assert (= (and d!15235 res!37275) b!69544))

(assert (= (and b!69544 res!37276) b!69545))

(assert (=> d!15235 m!65141))

(declare-fun m!65937 () Bool)

(assert (=> d!15235 m!65937))

(declare-fun m!65939 () Bool)

(assert (=> d!15235 m!65939))

(declare-fun m!65941 () Bool)

(assert (=> b!69544 m!65941))

(declare-fun m!65943 () Bool)

(assert (=> b!69545 m!65943))

(assert (=> d!14955 d!15235))

(declare-fun b!69546 () Bool)

(declare-fun e!45515 () List!1459)

(declare-fun call!5926 () List!1459)

(assert (=> b!69546 (= e!45515 call!5926)))

(declare-fun e!45513 () List!1459)

(declare-fun b!69547 () Bool)

(assert (=> b!69547 (= e!45513 (insertStrictlySorted!52 (t!4954 (toList!708 lt!30110)) (_1!1057 (tuple2!2093 lt!30108 lt!30113)) (_2!1057 (tuple2!2093 lt!30108 lt!30113))))))

(declare-fun b!69548 () Bool)

(declare-fun e!45516 () List!1459)

(declare-fun call!5925 () List!1459)

(assert (=> b!69548 (= e!45516 call!5925)))

(declare-fun b!69549 () Bool)

(assert (=> b!69549 (= e!45516 call!5925)))

(declare-fun c!9976 () Bool)

(declare-fun b!69550 () Bool)

(assert (=> b!69550 (= c!9976 (and ((_ is Cons!1455) (toList!708 lt!30110)) (bvsgt (_1!1057 (h!2040 (toList!708 lt!30110))) (_1!1057 (tuple2!2093 lt!30108 lt!30113)))))))

(assert (=> b!69550 (= e!45515 e!45516)))

(declare-fun b!69551 () Bool)

(declare-fun res!37278 () Bool)

(declare-fun e!45514 () Bool)

(assert (=> b!69551 (=> (not res!37278) (not e!45514))))

(declare-fun lt!30601 () List!1459)

(assert (=> b!69551 (= res!37278 (containsKey!135 lt!30601 (_1!1057 (tuple2!2093 lt!30108 lt!30113))))))

(declare-fun c!9973 () Bool)

(declare-fun call!5927 () List!1459)

(declare-fun bm!5923 () Bool)

(assert (=> bm!5923 (= call!5927 ($colon$colon!63 e!45513 (ite c!9973 (h!2040 (toList!708 lt!30110)) (tuple2!2093 (_1!1057 (tuple2!2093 lt!30108 lt!30113)) (_2!1057 (tuple2!2093 lt!30108 lt!30113))))))))

(declare-fun c!9974 () Bool)

(assert (=> bm!5923 (= c!9974 c!9973)))

(declare-fun b!69552 () Bool)

(declare-fun e!45517 () List!1459)

(assert (=> b!69552 (= e!45517 e!45515)))

(declare-fun c!9975 () Bool)

(assert (=> b!69552 (= c!9975 (and ((_ is Cons!1455) (toList!708 lt!30110)) (= (_1!1057 (h!2040 (toList!708 lt!30110))) (_1!1057 (tuple2!2093 lt!30108 lt!30113)))))))

(declare-fun b!69553 () Bool)

(assert (=> b!69553 (= e!45513 (ite c!9975 (t!4954 (toList!708 lt!30110)) (ite c!9976 (Cons!1455 (h!2040 (toList!708 lt!30110)) (t!4954 (toList!708 lt!30110))) Nil!1456)))))

(declare-fun b!69554 () Bool)

(assert (=> b!69554 (= e!45517 call!5927)))

(declare-fun bm!5922 () Bool)

(assert (=> bm!5922 (= call!5926 call!5927)))

(declare-fun d!15237 () Bool)

(assert (=> d!15237 e!45514))

(declare-fun res!37277 () Bool)

(assert (=> d!15237 (=> (not res!37277) (not e!45514))))

(assert (=> d!15237 (= res!37277 (isStrictlySorted!277 lt!30601))))

(assert (=> d!15237 (= lt!30601 e!45517)))

(assert (=> d!15237 (= c!9973 (and ((_ is Cons!1455) (toList!708 lt!30110)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30110))) (_1!1057 (tuple2!2093 lt!30108 lt!30113)))))))

(assert (=> d!15237 (isStrictlySorted!277 (toList!708 lt!30110))))

(assert (=> d!15237 (= (insertStrictlySorted!52 (toList!708 lt!30110) (_1!1057 (tuple2!2093 lt!30108 lt!30113)) (_2!1057 (tuple2!2093 lt!30108 lt!30113))) lt!30601)))

(declare-fun b!69555 () Bool)

(assert (=> b!69555 (= e!45514 (contains!713 lt!30601 (tuple2!2093 (_1!1057 (tuple2!2093 lt!30108 lt!30113)) (_2!1057 (tuple2!2093 lt!30108 lt!30113)))))))

(declare-fun bm!5924 () Bool)

(assert (=> bm!5924 (= call!5925 call!5926)))

(assert (= (and d!15237 c!9973) b!69554))

(assert (= (and d!15237 (not c!9973)) b!69552))

(assert (= (and b!69552 c!9975) b!69546))

(assert (= (and b!69552 (not c!9975)) b!69550))

(assert (= (and b!69550 c!9976) b!69549))

(assert (= (and b!69550 (not c!9976)) b!69548))

(assert (= (or b!69549 b!69548) bm!5924))

(assert (= (or b!69546 bm!5924) bm!5922))

(assert (= (or b!69554 bm!5922) bm!5923))

(assert (= (and bm!5923 c!9974) b!69547))

(assert (= (and bm!5923 (not c!9974)) b!69553))

(assert (= (and d!15237 res!37277) b!69551))

(assert (= (and b!69551 res!37278) b!69555))

(declare-fun m!65945 () Bool)

(assert (=> d!15237 m!65945))

(declare-fun m!65947 () Bool)

(assert (=> d!15237 m!65947))

(declare-fun m!65949 () Bool)

(assert (=> bm!5923 m!65949))

(declare-fun m!65951 () Bool)

(assert (=> b!69555 m!65951))

(declare-fun m!65953 () Bool)

(assert (=> b!69551 m!65953))

(declare-fun m!65955 () Bool)

(assert (=> b!69547 m!65955))

(assert (=> d!14955 d!15237))

(declare-fun d!15239 () Bool)

(declare-fun res!37279 () Bool)

(declare-fun e!45518 () Bool)

(assert (=> d!15239 (=> res!37279 e!45518)))

(assert (=> d!15239 (= res!37279 (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15239 (= (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!45518)))

(declare-fun b!69556 () Bool)

(declare-fun e!45519 () Bool)

(assert (=> b!69556 (= e!45518 e!45519)))

(declare-fun res!37280 () Bool)

(assert (=> b!69556 (=> (not res!37280) (not e!45519))))

(assert (=> b!69556 (= res!37280 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69557 () Bool)

(assert (=> b!69557 (= e!45519 (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!15239 (not res!37279)) b!69556))

(assert (= (and b!69556 res!37280) b!69557))

(declare-fun m!65957 () Bool)

(assert (=> d!15239 m!65957))

(assert (=> b!69557 m!64329))

(declare-fun m!65959 () Bool)

(assert (=> b!69557 m!65959))

(assert (=> b!69068 d!15239))

(declare-fun d!15241 () Bool)

(declare-fun e!45521 () Bool)

(assert (=> d!15241 e!45521))

(declare-fun res!37281 () Bool)

(assert (=> d!15241 (=> res!37281 e!45521)))

(declare-fun lt!30605 () Bool)

(assert (=> d!15241 (= res!37281 (not lt!30605))))

(declare-fun lt!30604 () Bool)

(assert (=> d!15241 (= lt!30605 lt!30604)))

(declare-fun lt!30602 () Unit!1909)

(declare-fun e!45520 () Unit!1909)

(assert (=> d!15241 (= lt!30602 e!45520)))

(declare-fun c!9977 () Bool)

(assert (=> d!15241 (= c!9977 lt!30604)))

(assert (=> d!15241 (= lt!30604 (containsKey!135 (toList!708 lt!30192) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15241 (= (contains!710 lt!30192 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30605)))

(declare-fun b!69558 () Bool)

(declare-fun lt!30603 () Unit!1909)

(assert (=> b!69558 (= e!45520 lt!30603)))

(assert (=> b!69558 (= lt!30603 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30192) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!69558 (isDefined!84 (getValueByKey!132 (toList!708 lt!30192) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69559 () Bool)

(declare-fun Unit!1950 () Unit!1909)

(assert (=> b!69559 (= e!45520 Unit!1950)))

(declare-fun b!69560 () Bool)

(assert (=> b!69560 (= e!45521 (isDefined!84 (getValueByKey!132 (toList!708 lt!30192) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15241 c!9977) b!69558))

(assert (= (and d!15241 (not c!9977)) b!69559))

(assert (= (and d!15241 (not res!37281)) b!69560))

(declare-fun m!65961 () Bool)

(assert (=> d!15241 m!65961))

(declare-fun m!65963 () Bool)

(assert (=> b!69558 m!65963))

(assert (=> b!69558 m!64861))

(assert (=> b!69558 m!64861))

(declare-fun m!65965 () Bool)

(assert (=> b!69558 m!65965))

(assert (=> b!69560 m!64861))

(assert (=> b!69560 m!64861))

(assert (=> b!69560 m!65965))

(assert (=> d!14883 d!15241))

(declare-fun b!69564 () Bool)

(declare-fun e!45523 () Option!138)

(assert (=> b!69564 (= e!45523 None!136)))

(declare-fun b!69563 () Bool)

(assert (=> b!69563 (= e!45523 (getValueByKey!132 (t!4954 lt!30190) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69561 () Bool)

(declare-fun e!45522 () Option!138)

(assert (=> b!69561 (= e!45522 (Some!137 (_2!1057 (h!2040 lt!30190))))))

(declare-fun c!9978 () Bool)

(declare-fun d!15243 () Bool)

(assert (=> d!15243 (= c!9978 (and ((_ is Cons!1455) lt!30190) (= (_1!1057 (h!2040 lt!30190)) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15243 (= (getValueByKey!132 lt!30190 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45522)))

(declare-fun b!69562 () Bool)

(assert (=> b!69562 (= e!45522 e!45523)))

(declare-fun c!9979 () Bool)

(assert (=> b!69562 (= c!9979 (and ((_ is Cons!1455) lt!30190) (not (= (_1!1057 (h!2040 lt!30190)) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15243 c!9978) b!69561))

(assert (= (and d!15243 (not c!9978)) b!69562))

(assert (= (and b!69562 c!9979) b!69563))

(assert (= (and b!69562 (not c!9979)) b!69564))

(declare-fun m!65967 () Bool)

(assert (=> b!69563 m!65967))

(assert (=> d!14883 d!15243))

(declare-fun d!15245 () Bool)

(assert (=> d!15245 (= (getValueByKey!132 lt!30190 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30606 () Unit!1909)

(assert (=> d!15245 (= lt!30606 (choose!394 lt!30190 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45524 () Bool)

(assert (=> d!15245 e!45524))

(declare-fun res!37282 () Bool)

(assert (=> d!15245 (=> (not res!37282) (not e!45524))))

(assert (=> d!15245 (= res!37282 (isStrictlySorted!277 lt!30190))))

(assert (=> d!15245 (= (lemmaContainsTupThenGetReturnValue!49 lt!30190 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30606)))

(declare-fun b!69565 () Bool)

(declare-fun res!37283 () Bool)

(assert (=> b!69565 (=> (not res!37283) (not e!45524))))

(assert (=> b!69565 (= res!37283 (containsKey!135 lt!30190 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69566 () Bool)

(assert (=> b!69566 (= e!45524 (contains!713 lt!30190 (tuple2!2093 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15245 res!37282) b!69565))

(assert (= (and b!69565 res!37283) b!69566))

(assert (=> d!15245 m!64855))

(declare-fun m!65969 () Bool)

(assert (=> d!15245 m!65969))

(declare-fun m!65971 () Bool)

(assert (=> d!15245 m!65971))

(declare-fun m!65973 () Bool)

(assert (=> b!69565 m!65973))

(declare-fun m!65975 () Bool)

(assert (=> b!69566 m!65975))

(assert (=> d!14883 d!15245))

(declare-fun b!69567 () Bool)

(declare-fun e!45527 () List!1459)

(declare-fun call!5929 () List!1459)

(assert (=> b!69567 (= e!45527 call!5929)))

(declare-fun e!45525 () List!1459)

(declare-fun b!69568 () Bool)

(assert (=> b!69568 (= e!45525 (insertStrictlySorted!52 (t!4954 (toList!708 lt!30090)) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69569 () Bool)

(declare-fun e!45528 () List!1459)

(declare-fun call!5928 () List!1459)

(assert (=> b!69569 (= e!45528 call!5928)))

(declare-fun b!69570 () Bool)

(assert (=> b!69570 (= e!45528 call!5928)))

(declare-fun b!69571 () Bool)

(declare-fun c!9983 () Bool)

(assert (=> b!69571 (= c!9983 (and ((_ is Cons!1455) (toList!708 lt!30090)) (bvsgt (_1!1057 (h!2040 (toList!708 lt!30090))) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!69571 (= e!45527 e!45528)))

(declare-fun b!69572 () Bool)

(declare-fun res!37285 () Bool)

(declare-fun e!45526 () Bool)

(assert (=> b!69572 (=> (not res!37285) (not e!45526))))

(declare-fun lt!30607 () List!1459)

(assert (=> b!69572 (= res!37285 (containsKey!135 lt!30607 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun bm!5926 () Bool)

(declare-fun call!5930 () List!1459)

(declare-fun c!9980 () Bool)

(assert (=> bm!5926 (= call!5930 ($colon$colon!63 e!45525 (ite c!9980 (h!2040 (toList!708 lt!30090)) (tuple2!2093 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!9981 () Bool)

(assert (=> bm!5926 (= c!9981 c!9980)))

(declare-fun b!69573 () Bool)

(declare-fun e!45529 () List!1459)

(assert (=> b!69573 (= e!45529 e!45527)))

(declare-fun c!9982 () Bool)

(assert (=> b!69573 (= c!9982 (and ((_ is Cons!1455) (toList!708 lt!30090)) (= (_1!1057 (h!2040 (toList!708 lt!30090))) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69574 () Bool)

(assert (=> b!69574 (= e!45525 (ite c!9982 (t!4954 (toList!708 lt!30090)) (ite c!9983 (Cons!1455 (h!2040 (toList!708 lt!30090)) (t!4954 (toList!708 lt!30090))) Nil!1456)))))

(declare-fun b!69575 () Bool)

(assert (=> b!69575 (= e!45529 call!5930)))

(declare-fun bm!5925 () Bool)

(assert (=> bm!5925 (= call!5929 call!5930)))

(declare-fun d!15247 () Bool)

(assert (=> d!15247 e!45526))

(declare-fun res!37284 () Bool)

(assert (=> d!15247 (=> (not res!37284) (not e!45526))))

(assert (=> d!15247 (= res!37284 (isStrictlySorted!277 lt!30607))))

(assert (=> d!15247 (= lt!30607 e!45529)))

(assert (=> d!15247 (= c!9980 (and ((_ is Cons!1455) (toList!708 lt!30090)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30090))) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15247 (isStrictlySorted!277 (toList!708 lt!30090))))

(assert (=> d!15247 (= (insertStrictlySorted!52 (toList!708 lt!30090) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30607)))

(declare-fun b!69576 () Bool)

(assert (=> b!69576 (= e!45526 (contains!713 lt!30607 (tuple2!2093 (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun bm!5927 () Bool)

(assert (=> bm!5927 (= call!5928 call!5929)))

(assert (= (and d!15247 c!9980) b!69575))

(assert (= (and d!15247 (not c!9980)) b!69573))

(assert (= (and b!69573 c!9982) b!69567))

(assert (= (and b!69573 (not c!9982)) b!69571))

(assert (= (and b!69571 c!9983) b!69570))

(assert (= (and b!69571 (not c!9983)) b!69569))

(assert (= (or b!69570 b!69569) bm!5927))

(assert (= (or b!69567 bm!5927) bm!5925))

(assert (= (or b!69575 bm!5925) bm!5926))

(assert (= (and bm!5926 c!9981) b!69568))

(assert (= (and bm!5926 (not c!9981)) b!69574))

(assert (= (and d!15247 res!37284) b!69572))

(assert (= (and b!69572 res!37285) b!69576))

(declare-fun m!65977 () Bool)

(assert (=> d!15247 m!65977))

(declare-fun m!65979 () Bool)

(assert (=> d!15247 m!65979))

(declare-fun m!65981 () Bool)

(assert (=> bm!5926 m!65981))

(declare-fun m!65983 () Bool)

(assert (=> b!69576 m!65983))

(declare-fun m!65985 () Bool)

(assert (=> b!69572 m!65985))

(declare-fun m!65987 () Bool)

(assert (=> b!69568 m!65987))

(assert (=> d!14883 d!15247))

(declare-fun d!15249 () Bool)

(declare-fun lt!30608 () Bool)

(assert (=> d!15249 (= lt!30608 (select (content!74 (t!4954 (toList!708 lt!30128))) lt!29846))))

(declare-fun e!45530 () Bool)

(assert (=> d!15249 (= lt!30608 e!45530)))

(declare-fun res!37286 () Bool)

(assert (=> d!15249 (=> (not res!37286) (not e!45530))))

(assert (=> d!15249 (= res!37286 ((_ is Cons!1455) (t!4954 (toList!708 lt!30128))))))

(assert (=> d!15249 (= (contains!713 (t!4954 (toList!708 lt!30128)) lt!29846) lt!30608)))

(declare-fun b!69577 () Bool)

(declare-fun e!45531 () Bool)

(assert (=> b!69577 (= e!45530 e!45531)))

(declare-fun res!37287 () Bool)

(assert (=> b!69577 (=> res!37287 e!45531)))

(assert (=> b!69577 (= res!37287 (= (h!2040 (t!4954 (toList!708 lt!30128))) lt!29846))))

(declare-fun b!69578 () Bool)

(assert (=> b!69578 (= e!45531 (contains!713 (t!4954 (t!4954 (toList!708 lt!30128))) lt!29846))))

(assert (= (and d!15249 res!37286) b!69577))

(assert (= (and b!69577 (not res!37287)) b!69578))

(assert (=> d!15249 m!65561))

(declare-fun m!65989 () Bool)

(assert (=> d!15249 m!65989))

(declare-fun m!65991 () Bool)

(assert (=> b!69578 m!65991))

(assert (=> b!69196 d!15249))

(declare-fun d!15251 () Bool)

(declare-fun lt!30609 () Bool)

(assert (=> d!15251 (= lt!30609 (select (content!74 lt!30404) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun e!45532 () Bool)

(assert (=> d!15251 (= lt!30609 e!45532)))

(declare-fun res!37288 () Bool)

(assert (=> d!15251 (=> (not res!37288) (not e!45532))))

(assert (=> d!15251 (= res!37288 ((_ is Cons!1455) lt!30404))))

(assert (=> d!15251 (= (contains!713 lt!30404 (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))) lt!30609)))

(declare-fun b!69579 () Bool)

(declare-fun e!45533 () Bool)

(assert (=> b!69579 (= e!45532 e!45533)))

(declare-fun res!37289 () Bool)

(assert (=> b!69579 (=> res!37289 e!45533)))

(assert (=> b!69579 (= res!37289 (= (h!2040 lt!30404) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun b!69580 () Bool)

(assert (=> b!69580 (= e!45533 (contains!713 (t!4954 lt!30404) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(assert (= (and d!15251 res!37288) b!69579))

(assert (= (and b!69579 (not res!37289)) b!69580))

(declare-fun m!65993 () Bool)

(assert (=> d!15251 m!65993))

(declare-fun m!65995 () Bool)

(assert (=> d!15251 m!65995))

(declare-fun m!65997 () Bool)

(assert (=> b!69580 m!65997))

(assert (=> b!69162 d!15251))

(declare-fun d!15253 () Bool)

(assert (=> d!15253 (= (get!1134 (getValueByKey!132 (toList!708 lt!30083) lt!30092)) (v!2500 (getValueByKey!132 (toList!708 lt!30083) lt!30092)))))

(assert (=> d!14891 d!15253))

(declare-fun b!69584 () Bool)

(declare-fun e!45535 () Option!138)

(assert (=> b!69584 (= e!45535 None!136)))

(declare-fun b!69583 () Bool)

(assert (=> b!69583 (= e!45535 (getValueByKey!132 (t!4954 (toList!708 lt!30083)) lt!30092))))

(declare-fun b!69581 () Bool)

(declare-fun e!45534 () Option!138)

(assert (=> b!69581 (= e!45534 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30083)))))))

(declare-fun d!15255 () Bool)

(declare-fun c!9984 () Bool)

(assert (=> d!15255 (= c!9984 (and ((_ is Cons!1455) (toList!708 lt!30083)) (= (_1!1057 (h!2040 (toList!708 lt!30083))) lt!30092)))))

(assert (=> d!15255 (= (getValueByKey!132 (toList!708 lt!30083) lt!30092) e!45534)))

(declare-fun b!69582 () Bool)

(assert (=> b!69582 (= e!45534 e!45535)))

(declare-fun c!9985 () Bool)

(assert (=> b!69582 (= c!9985 (and ((_ is Cons!1455) (toList!708 lt!30083)) (not (= (_1!1057 (h!2040 (toList!708 lt!30083))) lt!30092))))))

(assert (= (and d!15255 c!9984) b!69581))

(assert (= (and d!15255 (not c!9984)) b!69582))

(assert (= (and b!69582 c!9985) b!69583))

(assert (= (and b!69582 (not c!9985)) b!69584))

(declare-fun m!65999 () Bool)

(assert (=> b!69583 m!65999))

(assert (=> d!14891 d!15255))

(declare-fun d!15257 () Bool)

(declare-fun res!37290 () Bool)

(declare-fun e!45536 () Bool)

(assert (=> d!15257 (=> res!37290 e!45536)))

(assert (=> d!15257 (= res!37290 (and ((_ is Cons!1455) (toList!708 lt!30132)) (= (_1!1057 (h!2040 (toList!708 lt!30132))) (_1!1057 lt!29846))))))

(assert (=> d!15257 (= (containsKey!135 (toList!708 lt!30132) (_1!1057 lt!29846)) e!45536)))

(declare-fun b!69585 () Bool)

(declare-fun e!45537 () Bool)

(assert (=> b!69585 (= e!45536 e!45537)))

(declare-fun res!37291 () Bool)

(assert (=> b!69585 (=> (not res!37291) (not e!45537))))

(assert (=> b!69585 (= res!37291 (and (or (not ((_ is Cons!1455) (toList!708 lt!30132))) (bvsle (_1!1057 (h!2040 (toList!708 lt!30132))) (_1!1057 lt!29846))) ((_ is Cons!1455) (toList!708 lt!30132)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30132))) (_1!1057 lt!29846))))))

(declare-fun b!69586 () Bool)

(assert (=> b!69586 (= e!45537 (containsKey!135 (t!4954 (toList!708 lt!30132)) (_1!1057 lt!29846)))))

(assert (= (and d!15257 (not res!37290)) b!69585))

(assert (= (and b!69585 res!37291) b!69586))

(declare-fun m!66001 () Bool)

(assert (=> b!69586 m!66001))

(assert (=> d!15049 d!15257))

(declare-fun d!15259 () Bool)

(assert (=> d!15259 (contains!710 (getCurrentListMap!406 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))

(assert (=> d!15259 true))

(declare-fun _$16!90 () Unit!1909)

(assert (=> d!15259 (= (choose!389 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3042 lt!30008) (defaultEntry!2167 newMap!16)) _$16!90)))

(declare-fun bs!3007 () Bool)

(assert (= bs!3007 d!15259))

(assert (=> bs!3007 m!64727))

(assert (=> bs!3007 m!64533))

(assert (=> bs!3007 m!64727))

(assert (=> bs!3007 m!64533))

(assert (=> bs!3007 m!64729))

(assert (=> d!14855 d!15259))

(assert (=> d!14855 d!15065))

(declare-fun b!69587 () Bool)

(declare-fun e!45540 () Bool)

(declare-fun call!5931 () Bool)

(assert (=> b!69587 (= e!45540 call!5931)))

(declare-fun b!69588 () Bool)

(declare-fun e!45538 () Bool)

(declare-fun e!45539 () Bool)

(assert (=> b!69588 (= e!45538 e!45539)))

(declare-fun c!9986 () Bool)

(assert (=> b!69588 (= c!9986 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000)))))

(declare-fun d!15261 () Bool)

(declare-fun res!37293 () Bool)

(assert (=> d!15261 (=> res!37293 e!45538)))

(assert (=> d!15261 (= res!37293 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))))))

(assert (=> d!15261 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3811 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016))) e!45538)))

(declare-fun bm!5928 () Bool)

(assert (=> bm!5928 (= call!5931 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3811 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016))))))

(declare-fun b!69589 () Bool)

(assert (=> b!69589 (= e!45539 call!5931)))

(declare-fun b!69590 () Bool)

(assert (=> b!69590 (= e!45539 e!45540)))

(declare-fun lt!30611 () (_ BitVec 64))

(assert (=> b!69590 (= lt!30611 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000))))

(declare-fun lt!30612 () Unit!1909)

(assert (=> b!69590 (= lt!30612 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3811 (_2!1058 lt!30016)) lt!30611 #b00000000000000000000000000000000))))

(assert (=> b!69590 (arrayContainsKey!0 (_keys!3811 (_2!1058 lt!30016)) lt!30611 #b00000000000000000000000000000000)))

(declare-fun lt!30610 () Unit!1909)

(assert (=> b!69590 (= lt!30610 lt!30612)))

(declare-fun res!37292 () Bool)

(assert (=> b!69590 (= res!37292 (= (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000) (_keys!3811 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016))) (Found!228 #b00000000000000000000000000000000)))))

(assert (=> b!69590 (=> (not res!37292) (not e!45540))))

(assert (= (and d!15261 (not res!37293)) b!69588))

(assert (= (and b!69588 c!9986) b!69590))

(assert (= (and b!69588 (not c!9986)) b!69589))

(assert (= (and b!69590 res!37292) b!69587))

(assert (= (or b!69587 b!69589) bm!5928))

(assert (=> b!69588 m!65709))

(assert (=> b!69588 m!65709))

(assert (=> b!69588 m!65711))

(declare-fun m!66003 () Bool)

(assert (=> bm!5928 m!66003))

(assert (=> b!69590 m!65709))

(declare-fun m!66005 () Bool)

(assert (=> b!69590 m!66005))

(declare-fun m!66007 () Bool)

(assert (=> b!69590 m!66007))

(assert (=> b!69590 m!65709))

(declare-fun m!66009 () Bool)

(assert (=> b!69590 m!66009))

(assert (=> b!69171 d!15261))

(declare-fun d!15263 () Bool)

(assert (=> d!15263 (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!30613 () Unit!1909)

(assert (=> d!15263 (= lt!30613 (choose!395 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45541 () Bool)

(assert (=> d!15263 e!45541))

(declare-fun res!37294 () Bool)

(assert (=> d!15263 (=> (not res!37294) (not e!45541))))

(assert (=> d!15263 (= res!37294 (isStrictlySorted!277 (toList!708 lt!30085)))))

(assert (=> d!15263 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30613)))

(declare-fun b!69591 () Bool)

(assert (=> b!69591 (= e!45541 (containsKey!135 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15263 res!37294) b!69591))

(assert (=> d!15263 m!64501))

(assert (=> d!15263 m!64991))

(assert (=> d!15263 m!64991))

(assert (=> d!15263 m!65011))

(assert (=> d!15263 m!64501))

(declare-fun m!66011 () Bool)

(assert (=> d!15263 m!66011))

(declare-fun m!66013 () Bool)

(assert (=> d!15263 m!66013))

(assert (=> b!69591 m!64501))

(assert (=> b!69591 m!65007))

(assert (=> b!69003 d!15263))

(assert (=> b!69003 d!15061))

(assert (=> b!69003 d!15063))

(declare-fun lt!30614 () Bool)

(declare-fun d!15265 () Bool)

(assert (=> d!15265 (= lt!30614 (select (content!74 (toList!708 lt!30208)) (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45542 () Bool)

(assert (=> d!15265 (= lt!30614 e!45542)))

(declare-fun res!37295 () Bool)

(assert (=> d!15265 (=> (not res!37295) (not e!45542))))

(assert (=> d!15265 (= res!37295 ((_ is Cons!1455) (toList!708 lt!30208)))))

(assert (=> d!15265 (= (contains!713 (toList!708 lt!30208) (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30614)))

(declare-fun b!69592 () Bool)

(declare-fun e!45543 () Bool)

(assert (=> b!69592 (= e!45542 e!45543)))

(declare-fun res!37296 () Bool)

(assert (=> b!69592 (=> res!37296 e!45543)))

(assert (=> b!69592 (= res!37296 (= (h!2040 (toList!708 lt!30208)) (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69593 () Bool)

(assert (=> b!69593 (= e!45543 (contains!713 (t!4954 (toList!708 lt!30208)) (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15265 res!37295) b!69592))

(assert (= (and b!69592 (not res!37296)) b!69593))

(declare-fun m!66015 () Bool)

(assert (=> d!15265 m!66015))

(declare-fun m!66017 () Bool)

(assert (=> d!15265 m!66017))

(declare-fun m!66019 () Bool)

(assert (=> b!69593 m!66019))

(assert (=> b!68904 d!15265))

(assert (=> d!15021 d!15065))

(declare-fun d!15267 () Bool)

(declare-fun e!45545 () Bool)

(assert (=> d!15267 e!45545))

(declare-fun res!37297 () Bool)

(assert (=> d!15267 (=> res!37297 e!45545)))

(declare-fun lt!30618 () Bool)

(assert (=> d!15267 (= res!37297 (not lt!30618))))

(declare-fun lt!30617 () Bool)

(assert (=> d!15267 (= lt!30618 lt!30617)))

(declare-fun lt!30615 () Unit!1909)

(declare-fun e!45544 () Unit!1909)

(assert (=> d!15267 (= lt!30615 e!45544)))

(declare-fun c!9987 () Bool)

(assert (=> d!15267 (= c!9987 lt!30617)))

(assert (=> d!15267 (= lt!30617 (containsKey!135 (toList!708 lt!30459) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15267 (= (contains!710 lt!30459 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30618)))

(declare-fun b!69594 () Bool)

(declare-fun lt!30616 () Unit!1909)

(assert (=> b!69594 (= e!45544 lt!30616)))

(assert (=> b!69594 (= lt!30616 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30459) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69594 (isDefined!84 (getValueByKey!132 (toList!708 lt!30459) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69595 () Bool)

(declare-fun Unit!1951 () Unit!1909)

(assert (=> b!69595 (= e!45544 Unit!1951)))

(declare-fun b!69596 () Bool)

(assert (=> b!69596 (= e!45545 (isDefined!84 (getValueByKey!132 (toList!708 lt!30459) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15267 c!9987) b!69594))

(assert (= (and d!15267 (not c!9987)) b!69595))

(assert (= (and d!15267 (not res!37297)) b!69596))

(declare-fun m!66021 () Bool)

(assert (=> d!15267 m!66021))

(declare-fun m!66023 () Bool)

(assert (=> b!69594 m!66023))

(declare-fun m!66025 () Bool)

(assert (=> b!69594 m!66025))

(assert (=> b!69594 m!66025))

(declare-fun m!66027 () Bool)

(assert (=> b!69594 m!66027))

(assert (=> b!69596 m!66025))

(assert (=> b!69596 m!66025))

(assert (=> b!69596 m!66027))

(assert (=> bm!5899 d!15267))

(declare-fun b!69600 () Bool)

(declare-fun e!45547 () Option!138)

(assert (=> b!69600 (= e!45547 None!136)))

(declare-fun b!69599 () Bool)

(assert (=> b!69599 (= e!45547 (getValueByKey!132 (t!4954 (toList!708 lt!30367)) (_1!1057 (tuple2!2093 lt!30108 lt!30113))))))

(declare-fun b!69597 () Bool)

(declare-fun e!45546 () Option!138)

(assert (=> b!69597 (= e!45546 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30367)))))))

(declare-fun d!15269 () Bool)

(declare-fun c!9988 () Bool)

(assert (=> d!15269 (= c!9988 (and ((_ is Cons!1455) (toList!708 lt!30367)) (= (_1!1057 (h!2040 (toList!708 lt!30367))) (_1!1057 (tuple2!2093 lt!30108 lt!30113)))))))

(assert (=> d!15269 (= (getValueByKey!132 (toList!708 lt!30367) (_1!1057 (tuple2!2093 lt!30108 lt!30113))) e!45546)))

(declare-fun b!69598 () Bool)

(assert (=> b!69598 (= e!45546 e!45547)))

(declare-fun c!9989 () Bool)

(assert (=> b!69598 (= c!9989 (and ((_ is Cons!1455) (toList!708 lt!30367)) (not (= (_1!1057 (h!2040 (toList!708 lt!30367))) (_1!1057 (tuple2!2093 lt!30108 lt!30113))))))))

(assert (= (and d!15269 c!9988) b!69597))

(assert (= (and d!15269 (not c!9988)) b!69598))

(assert (= (and b!69598 c!9989) b!69599))

(assert (= (and b!69598 (not c!9989)) b!69600))

(declare-fun m!66029 () Bool)

(assert (=> b!69599 m!66029))

(assert (=> b!69111 d!15269))

(assert (=> b!69185 d!15173))

(declare-fun d!15271 () Bool)

(declare-fun c!9990 () Bool)

(assert (=> d!15271 (= c!9990 ((_ is Nil!1456) (toList!708 lt!30124)))))

(declare-fun e!45548 () (InoxSet tuple2!2092))

(assert (=> d!15271 (= (content!74 (toList!708 lt!30124)) e!45548)))

(declare-fun b!69601 () Bool)

(assert (=> b!69601 (= e!45548 ((as const (Array tuple2!2092 Bool)) false))))

(declare-fun b!69602 () Bool)

(assert (=> b!69602 (= e!45548 ((_ map or) (store ((as const (Array tuple2!2092 Bool)) false) (h!2040 (toList!708 lt!30124)) true) (content!74 (t!4954 (toList!708 lt!30124)))))))

(assert (= (and d!15271 c!9990) b!69601))

(assert (= (and d!15271 (not c!9990)) b!69602))

(declare-fun m!66031 () Bool)

(assert (=> b!69602 m!66031))

(declare-fun m!66033 () Bool)

(assert (=> b!69602 m!66033))

(assert (=> d!14983 d!15271))

(declare-fun b!69606 () Bool)

(declare-fun e!45550 () Option!138)

(assert (=> b!69606 (= e!45550 None!136)))

(declare-fun b!69605 () Bool)

(assert (=> b!69605 (= e!45550 (getValueByKey!132 (t!4954 (t!4954 lt!30126)) (_1!1057 lt!29846)))))

(declare-fun b!69603 () Bool)

(declare-fun e!45549 () Option!138)

(assert (=> b!69603 (= e!45549 (Some!137 (_2!1057 (h!2040 (t!4954 lt!30126)))))))

(declare-fun d!15273 () Bool)

(declare-fun c!9991 () Bool)

(assert (=> d!15273 (= c!9991 (and ((_ is Cons!1455) (t!4954 lt!30126)) (= (_1!1057 (h!2040 (t!4954 lt!30126))) (_1!1057 lt!29846))))))

(assert (=> d!15273 (= (getValueByKey!132 (t!4954 lt!30126) (_1!1057 lt!29846)) e!45549)))

(declare-fun b!69604 () Bool)

(assert (=> b!69604 (= e!45549 e!45550)))

(declare-fun c!9992 () Bool)

(assert (=> b!69604 (= c!9992 (and ((_ is Cons!1455) (t!4954 lt!30126)) (not (= (_1!1057 (h!2040 (t!4954 lt!30126))) (_1!1057 lt!29846)))))))

(assert (= (and d!15273 c!9991) b!69603))

(assert (= (and d!15273 (not c!9991)) b!69604))

(assert (= (and b!69604 c!9992) b!69605))

(assert (= (and b!69604 (not c!9992)) b!69606))

(declare-fun m!66035 () Bool)

(assert (=> b!69605 m!66035))

(assert (=> b!69252 d!15273))

(declare-fun b!69610 () Bool)

(declare-fun e!45552 () Option!138)

(assert (=> b!69610 (= e!45552 None!136)))

(declare-fun b!69609 () Bool)

(assert (=> b!69609 (= e!45552 (getValueByKey!132 (t!4954 (toList!708 lt!30192)) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69607 () Bool)

(declare-fun e!45551 () Option!138)

(assert (=> b!69607 (= e!45551 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30192)))))))

(declare-fun d!15275 () Bool)

(declare-fun c!9993 () Bool)

(assert (=> d!15275 (= c!9993 (and ((_ is Cons!1455) (toList!708 lt!30192)) (= (_1!1057 (h!2040 (toList!708 lt!30192))) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15275 (= (getValueByKey!132 (toList!708 lt!30192) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45551)))

(declare-fun b!69608 () Bool)

(assert (=> b!69608 (= e!45551 e!45552)))

(declare-fun c!9994 () Bool)

(assert (=> b!69608 (= c!9994 (and ((_ is Cons!1455) (toList!708 lt!30192)) (not (= (_1!1057 (h!2040 (toList!708 lt!30192))) (_1!1057 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15275 c!9993) b!69607))

(assert (= (and d!15275 (not c!9993)) b!69608))

(assert (= (and b!69608 c!9994) b!69609))

(assert (= (and b!69608 (not c!9994)) b!69610))

(declare-fun m!66037 () Bool)

(assert (=> b!69609 m!66037))

(assert (=> b!68891 d!15275))

(declare-fun d!15277 () Bool)

(declare-fun e!45554 () Bool)

(assert (=> d!15277 e!45554))

(declare-fun res!37298 () Bool)

(assert (=> d!15277 (=> res!37298 e!45554)))

(declare-fun lt!30622 () Bool)

(assert (=> d!15277 (= res!37298 (not lt!30622))))

(declare-fun lt!30621 () Bool)

(assert (=> d!15277 (= lt!30622 lt!30621)))

(declare-fun lt!30619 () Unit!1909)

(declare-fun e!45553 () Unit!1909)

(assert (=> d!15277 (= lt!30619 e!45553)))

(declare-fun c!9995 () Bool)

(assert (=> d!15277 (= c!9995 lt!30621)))

(assert (=> d!15277 (= lt!30621 (containsKey!135 (toList!708 lt!30433) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15277 (= (contains!710 lt!30433 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) lt!30622)))

(declare-fun b!69611 () Bool)

(declare-fun lt!30620 () Unit!1909)

(assert (=> b!69611 (= e!45553 lt!30620)))

(assert (=> b!69611 (= lt!30620 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30433) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> b!69611 (isDefined!84 (getValueByKey!132 (toList!708 lt!30433) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!69612 () Bool)

(declare-fun Unit!1952 () Unit!1909)

(assert (=> b!69612 (= e!45553 Unit!1952)))

(declare-fun b!69613 () Bool)

(assert (=> b!69613 (= e!45554 (isDefined!84 (getValueByKey!132 (toList!708 lt!30433) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (= (and d!15277 c!9995) b!69611))

(assert (= (and d!15277 (not c!9995)) b!69612))

(assert (= (and d!15277 (not res!37298)) b!69613))

(declare-fun m!66039 () Bool)

(assert (=> d!15277 m!66039))

(declare-fun m!66041 () Bool)

(assert (=> b!69611 m!66041))

(assert (=> b!69611 m!65357))

(assert (=> b!69611 m!65357))

(declare-fun m!66043 () Bool)

(assert (=> b!69611 m!66043))

(assert (=> b!69613 m!65357))

(assert (=> b!69613 m!65357))

(assert (=> b!69613 m!66043))

(assert (=> d!15007 d!15277))

(declare-fun b!69617 () Bool)

(declare-fun e!45556 () Option!138)

(assert (=> b!69617 (= e!45556 None!136)))

(declare-fun b!69616 () Bool)

(assert (=> b!69616 (= e!45556 (getValueByKey!132 (t!4954 lt!30431) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!69614 () Bool)

(declare-fun e!45555 () Option!138)

(assert (=> b!69614 (= e!45555 (Some!137 (_2!1057 (h!2040 lt!30431))))))

(declare-fun d!15279 () Bool)

(declare-fun c!9996 () Bool)

(assert (=> d!15279 (= c!9996 (and ((_ is Cons!1455) lt!30431) (= (_1!1057 (h!2040 lt!30431)) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (=> d!15279 (= (getValueByKey!132 lt!30431 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) e!45555)))

(declare-fun b!69615 () Bool)

(assert (=> b!69615 (= e!45555 e!45556)))

(declare-fun c!9997 () Bool)

(assert (=> b!69615 (= c!9997 (and ((_ is Cons!1455) lt!30431) (not (= (_1!1057 (h!2040 lt!30431)) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))))

(assert (= (and d!15279 c!9996) b!69614))

(assert (= (and d!15279 (not c!9996)) b!69615))

(assert (= (and b!69615 c!9997) b!69616))

(assert (= (and b!69615 (not c!9997)) b!69617))

(declare-fun m!66045 () Bool)

(assert (=> b!69616 m!66045))

(assert (=> d!15007 d!15279))

(declare-fun d!15281 () Bool)

(assert (=> d!15281 (= (getValueByKey!132 lt!30431 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) (Some!137 (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun lt!30623 () Unit!1909)

(assert (=> d!15281 (= lt!30623 (choose!394 lt!30431 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun e!45557 () Bool)

(assert (=> d!15281 e!45557))

(declare-fun res!37299 () Bool)

(assert (=> d!15281 (=> (not res!37299) (not e!45557))))

(assert (=> d!15281 (= res!37299 (isStrictlySorted!277 lt!30431))))

(assert (=> d!15281 (= (lemmaContainsTupThenGetReturnValue!49 lt!30431 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) lt!30623)))

(declare-fun b!69618 () Bool)

(declare-fun res!37300 () Bool)

(assert (=> b!69618 (=> (not res!37300) (not e!45557))))

(assert (=> b!69618 (= res!37300 (containsKey!135 lt!30431 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!69619 () Bool)

(assert (=> b!69619 (= e!45557 (contains!713 lt!30431 (tuple2!2093 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (= (and d!15281 res!37299) b!69618))

(assert (= (and b!69618 res!37300) b!69619))

(assert (=> d!15281 m!65351))

(declare-fun m!66047 () Bool)

(assert (=> d!15281 m!66047))

(declare-fun m!66049 () Bool)

(assert (=> d!15281 m!66049))

(declare-fun m!66051 () Bool)

(assert (=> b!69618 m!66051))

(declare-fun m!66053 () Bool)

(assert (=> b!69619 m!66053))

(assert (=> d!15007 d!15281))

(declare-fun b!69620 () Bool)

(declare-fun e!45560 () List!1459)

(declare-fun call!5933 () List!1459)

(assert (=> b!69620 (= e!45560 call!5933)))

(declare-fun b!69621 () Bool)

(declare-fun e!45558 () List!1459)

(assert (=> b!69621 (= e!45558 (insertStrictlySorted!52 (t!4954 (toList!708 e!45001)) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!69622 () Bool)

(declare-fun e!45561 () List!1459)

(declare-fun call!5932 () List!1459)

(assert (=> b!69622 (= e!45561 call!5932)))

(declare-fun b!69623 () Bool)

(assert (=> b!69623 (= e!45561 call!5932)))

(declare-fun c!10001 () Bool)

(declare-fun b!69624 () Bool)

(assert (=> b!69624 (= c!10001 (and ((_ is Cons!1455) (toList!708 e!45001)) (bvsgt (_1!1057 (h!2040 (toList!708 e!45001))) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (=> b!69624 (= e!45560 e!45561)))

(declare-fun b!69625 () Bool)

(declare-fun res!37302 () Bool)

(declare-fun e!45559 () Bool)

(assert (=> b!69625 (=> (not res!37302) (not e!45559))))

(declare-fun lt!30624 () List!1459)

(assert (=> b!69625 (= res!37302 (containsKey!135 lt!30624 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun bm!5930 () Bool)

(declare-fun call!5934 () List!1459)

(declare-fun c!9998 () Bool)

(assert (=> bm!5930 (= call!5934 ($colon$colon!63 e!45558 (ite c!9998 (h!2040 (toList!708 e!45001)) (tuple2!2093 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))))

(declare-fun c!9999 () Bool)

(assert (=> bm!5930 (= c!9999 c!9998)))

(declare-fun b!69626 () Bool)

(declare-fun e!45562 () List!1459)

(assert (=> b!69626 (= e!45562 e!45560)))

(declare-fun c!10000 () Bool)

(assert (=> b!69626 (= c!10000 (and ((_ is Cons!1455) (toList!708 e!45001)) (= (_1!1057 (h!2040 (toList!708 e!45001))) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(declare-fun b!69627 () Bool)

(assert (=> b!69627 (= e!45558 (ite c!10000 (t!4954 (toList!708 e!45001)) (ite c!10001 (Cons!1455 (h!2040 (toList!708 e!45001)) (t!4954 (toList!708 e!45001))) Nil!1456)))))

(declare-fun b!69628 () Bool)

(assert (=> b!69628 (= e!45562 call!5934)))

(declare-fun bm!5929 () Bool)

(assert (=> bm!5929 (= call!5933 call!5934)))

(declare-fun d!15283 () Bool)

(assert (=> d!15283 e!45559))

(declare-fun res!37301 () Bool)

(assert (=> d!15283 (=> (not res!37301) (not e!45559))))

(assert (=> d!15283 (= res!37301 (isStrictlySorted!277 lt!30624))))

(assert (=> d!15283 (= lt!30624 e!45562)))

(assert (=> d!15283 (= c!9998 (and ((_ is Cons!1455) (toList!708 e!45001)) (bvslt (_1!1057 (h!2040 (toList!708 e!45001))) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (=> d!15283 (isStrictlySorted!277 (toList!708 e!45001))))

(assert (=> d!15283 (= (insertStrictlySorted!52 (toList!708 e!45001) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) lt!30624)))

(declare-fun b!69629 () Bool)

(assert (=> b!69629 (= e!45559 (contains!713 lt!30624 (tuple2!2093 (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_2!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(declare-fun bm!5931 () Bool)

(assert (=> bm!5931 (= call!5932 call!5933)))

(assert (= (and d!15283 c!9998) b!69628))

(assert (= (and d!15283 (not c!9998)) b!69626))

(assert (= (and b!69626 c!10000) b!69620))

(assert (= (and b!69626 (not c!10000)) b!69624))

(assert (= (and b!69624 c!10001) b!69623))

(assert (= (and b!69624 (not c!10001)) b!69622))

(assert (= (or b!69623 b!69622) bm!5931))

(assert (= (or b!69620 bm!5931) bm!5929))

(assert (= (or b!69628 bm!5929) bm!5930))

(assert (= (and bm!5930 c!9999) b!69621))

(assert (= (and bm!5930 (not c!9999)) b!69627))

(assert (= (and d!15283 res!37301) b!69625))

(assert (= (and b!69625 res!37302) b!69629))

(declare-fun m!66055 () Bool)

(assert (=> d!15283 m!66055))

(declare-fun m!66057 () Bool)

(assert (=> d!15283 m!66057))

(declare-fun m!66059 () Bool)

(assert (=> bm!5930 m!66059))

(declare-fun m!66061 () Bool)

(assert (=> b!69629 m!66061))

(declare-fun m!66063 () Bool)

(assert (=> b!69625 m!66063))

(declare-fun m!66065 () Bool)

(assert (=> b!69621 m!66065))

(assert (=> d!15007 d!15283))

(declare-fun d!15285 () Bool)

(declare-fun res!37303 () Bool)

(declare-fun e!45563 () Bool)

(assert (=> d!15285 (=> res!37303 e!45563)))

(assert (=> d!15285 (= res!37303 (and ((_ is Cons!1455) lt!30482) (= (_1!1057 (h!2040 lt!30482)) (_1!1057 lt!29846))))))

(assert (=> d!15285 (= (containsKey!135 lt!30482 (_1!1057 lt!29846)) e!45563)))

(declare-fun b!69630 () Bool)

(declare-fun e!45564 () Bool)

(assert (=> b!69630 (= e!45563 e!45564)))

(declare-fun res!37304 () Bool)

(assert (=> b!69630 (=> (not res!37304) (not e!45564))))

(assert (=> b!69630 (= res!37304 (and (or (not ((_ is Cons!1455) lt!30482)) (bvsle (_1!1057 (h!2040 lt!30482)) (_1!1057 lt!29846))) ((_ is Cons!1455) lt!30482) (bvslt (_1!1057 (h!2040 lt!30482)) (_1!1057 lt!29846))))))

(declare-fun b!69631 () Bool)

(assert (=> b!69631 (= e!45564 (containsKey!135 (t!4954 lt!30482) (_1!1057 lt!29846)))))

(assert (= (and d!15285 (not res!37303)) b!69630))

(assert (= (and b!69630 res!37304) b!69631))

(declare-fun m!66067 () Bool)

(assert (=> b!69631 m!66067))

(assert (=> b!69261 d!15285))

(declare-fun lt!30625 () Bool)

(declare-fun d!15287 () Bool)

(assert (=> d!15287 (= lt!30625 (select (content!75 (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!45566 () Bool)

(assert (=> d!15287 (= lt!30625 e!45566)))

(declare-fun res!37305 () Bool)

(assert (=> d!15287 (=> (not res!37305) (not e!45566))))

(assert (=> d!15287 (= res!37305 ((_ is Cons!1456) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)))))

(assert (=> d!15287 (= (contains!712 (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!30625)))

(declare-fun b!69632 () Bool)

(declare-fun e!45565 () Bool)

(assert (=> b!69632 (= e!45566 e!45565)))

(declare-fun res!37306 () Bool)

(assert (=> b!69632 (=> res!37306 e!45565)))

(assert (=> b!69632 (= res!37306 (= (h!2041 (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69633 () Bool)

(assert (=> b!69633 (= e!45565 (contains!712 (t!4955 (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!15287 res!37305) b!69632))

(assert (= (and b!69632 (not res!37306)) b!69633))

(declare-fun m!66069 () Bool)

(assert (=> d!15287 m!66069))

(assert (=> d!15287 m!65093))

(declare-fun m!66071 () Bool)

(assert (=> d!15287 m!66071))

(assert (=> b!69633 m!65093))

(declare-fun m!66073 () Bool)

(assert (=> b!69633 m!66073))

(assert (=> b!69087 d!15287))

(declare-fun d!15289 () Bool)

(declare-fun e!45568 () Bool)

(assert (=> d!15289 e!45568))

(declare-fun res!37307 () Bool)

(assert (=> d!15289 (=> res!37307 e!45568)))

(declare-fun lt!30629 () Bool)

(assert (=> d!15289 (= res!37307 (not lt!30629))))

(declare-fun lt!30628 () Bool)

(assert (=> d!15289 (= lt!30629 lt!30628)))

(declare-fun lt!30626 () Unit!1909)

(declare-fun e!45567 () Unit!1909)

(assert (=> d!15289 (= lt!30626 e!45567)))

(declare-fun c!10002 () Bool)

(assert (=> d!15289 (= c!10002 lt!30628)))

(assert (=> d!15289 (= lt!30628 (containsKey!135 (toList!708 lt!30387) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15289 (= (contains!710 lt!30387 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) lt!30629)))

(declare-fun b!69634 () Bool)

(declare-fun lt!30627 () Unit!1909)

(assert (=> b!69634 (= e!45567 lt!30627)))

(assert (=> b!69634 (= lt!30627 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30387) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69634 (isDefined!84 (getValueByKey!132 (toList!708 lt!30387) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69635 () Bool)

(declare-fun Unit!1953 () Unit!1909)

(assert (=> b!69635 (= e!45567 Unit!1953)))

(declare-fun b!69636 () Bool)

(assert (=> b!69636 (= e!45568 (isDefined!84 (getValueByKey!132 (toList!708 lt!30387) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15289 c!10002) b!69634))

(assert (= (and d!15289 (not c!10002)) b!69635))

(assert (= (and d!15289 (not res!37307)) b!69636))

(assert (=> d!15289 m!64745))

(declare-fun m!66075 () Bool)

(assert (=> d!15289 m!66075))

(assert (=> b!69634 m!64745))

(declare-fun m!66077 () Bool)

(assert (=> b!69634 m!66077))

(assert (=> b!69634 m!64745))

(declare-fun m!66079 () Bool)

(assert (=> b!69634 m!66079))

(assert (=> b!69634 m!66079))

(declare-fun m!66081 () Bool)

(assert (=> b!69634 m!66081))

(assert (=> b!69636 m!64745))

(assert (=> b!69636 m!66079))

(assert (=> b!69636 m!66079))

(assert (=> b!69636 m!66081))

(assert (=> b!69124 d!15289))

(declare-fun d!15291 () Bool)

(assert (=> d!15291 (isDefined!84 (getValueByKey!132 (toList!708 lt!30128) (_1!1057 lt!29846)))))

(declare-fun lt!30630 () Unit!1909)

(assert (=> d!15291 (= lt!30630 (choose!395 (toList!708 lt!30128) (_1!1057 lt!29846)))))

(declare-fun e!45569 () Bool)

(assert (=> d!15291 e!45569))

(declare-fun res!37308 () Bool)

(assert (=> d!15291 (=> (not res!37308) (not e!45569))))

(assert (=> d!15291 (= res!37308 (isStrictlySorted!277 (toList!708 lt!30128)))))

(assert (=> d!15291 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30128) (_1!1057 lt!29846)) lt!30630)))

(declare-fun b!69637 () Bool)

(assert (=> b!69637 (= e!45569 (containsKey!135 (toList!708 lt!30128) (_1!1057 lt!29846)))))

(assert (= (and d!15291 res!37308) b!69637))

(assert (=> d!15291 m!64681))

(assert (=> d!15291 m!64681))

(assert (=> d!15291 m!65459))

(declare-fun m!66083 () Bool)

(assert (=> d!15291 m!66083))

(declare-fun m!66085 () Bool)

(assert (=> d!15291 m!66085))

(assert (=> b!69637 m!65455))

(assert (=> b!69247 d!15291))

(assert (=> b!69247 d!15083))

(assert (=> b!69247 d!14865))

(declare-fun d!15293 () Bool)

(assert (=> d!15293 (= (apply!73 lt!30459 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1134 (getValueByKey!132 (toList!708 lt!30459) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3008 () Bool)

(assert (= bs!3008 d!15293))

(assert (=> bs!3008 m!65695))

(assert (=> bs!3008 m!65695))

(declare-fun m!66087 () Bool)

(assert (=> bs!3008 m!66087))

(assert (=> b!69229 d!15293))

(declare-fun d!15295 () Bool)

(assert (=> d!15295 (= (apply!73 lt!30343 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1134 (getValueByKey!132 (toList!708 lt!30343) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3009 () Bool)

(assert (= bs!3009 d!15295))

(assert (=> bs!3009 m!65055))

(assert (=> bs!3009 m!65589))

(assert (=> bs!3009 m!65589))

(declare-fun m!66089 () Bool)

(assert (=> bs!3009 m!66089))

(assert (=> b!69078 d!15295))

(declare-fun d!15297 () Bool)

(declare-fun c!10003 () Bool)

(assert (=> d!15297 (= c!10003 ((_ is ValueCellFull!884) (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!45570 () V!2921)

(assert (=> d!15297 (= (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45570)))

(declare-fun b!69638 () Bool)

(assert (=> b!69638 (= e!45570 (get!1132 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69639 () Bool)

(assert (=> b!69639 (= e!45570 (get!1133 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15297 c!10003) b!69638))

(assert (= (and d!15297 (not c!10003)) b!69639))

(assert (=> b!69638 m!65077))

(assert (=> b!69638 m!64379))

(declare-fun m!66091 () Bool)

(assert (=> b!69638 m!66091))

(assert (=> b!69639 m!65077))

(assert (=> b!69639 m!64379))

(declare-fun m!66093 () Bool)

(assert (=> b!69639 m!66093))

(assert (=> b!69078 d!15297))

(declare-fun d!15299 () Bool)

(declare-fun res!37309 () Bool)

(declare-fun e!45571 () Bool)

(assert (=> d!15299 (=> res!37309 e!45571)))

(assert (=> d!15299 (= res!37309 (and ((_ is Cons!1455) (toList!708 lt!30085)) (= (_1!1057 (h!2040 (toList!708 lt!30085))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15299 (= (containsKey!135 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45571)))

(declare-fun b!69640 () Bool)

(declare-fun e!45572 () Bool)

(assert (=> b!69640 (= e!45571 e!45572)))

(declare-fun res!37310 () Bool)

(assert (=> b!69640 (=> (not res!37310) (not e!45572))))

(assert (=> b!69640 (= res!37310 (and (or (not ((_ is Cons!1455) (toList!708 lt!30085))) (bvsle (_1!1057 (h!2040 (toList!708 lt!30085))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1455) (toList!708 lt!30085)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30085))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!69641 () Bool)

(assert (=> b!69641 (= e!45572 (containsKey!135 (t!4954 (toList!708 lt!30085)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15299 (not res!37309)) b!69640))

(assert (= (and b!69640 res!37310) b!69641))

(assert (=> b!69641 m!64501))

(declare-fun m!66095 () Bool)

(assert (=> b!69641 m!66095))

(assert (=> d!14919 d!15299))

(declare-fun d!15301 () Bool)

(declare-fun e!45574 () Bool)

(assert (=> d!15301 e!45574))

(declare-fun res!37311 () Bool)

(assert (=> d!15301 (=> res!37311 e!45574)))

(declare-fun lt!30634 () Bool)

(assert (=> d!15301 (= res!37311 (not lt!30634))))

(declare-fun lt!30633 () Bool)

(assert (=> d!15301 (= lt!30634 lt!30633)))

(declare-fun lt!30631 () Unit!1909)

(declare-fun e!45573 () Unit!1909)

(assert (=> d!15301 (= lt!30631 e!45573)))

(declare-fun c!10004 () Bool)

(assert (=> d!15301 (= c!10004 lt!30633)))

(assert (=> d!15301 (= lt!30633 (containsKey!135 (toList!708 lt!30208) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15301 (= (contains!710 lt!30208 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30634)))

(declare-fun b!69642 () Bool)

(declare-fun lt!30632 () Unit!1909)

(assert (=> b!69642 (= e!45573 lt!30632)))

(assert (=> b!69642 (= lt!30632 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30208) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!69642 (isDefined!84 (getValueByKey!132 (toList!708 lt!30208) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69643 () Bool)

(declare-fun Unit!1954 () Unit!1909)

(assert (=> b!69643 (= e!45573 Unit!1954)))

(declare-fun b!69644 () Bool)

(assert (=> b!69644 (= e!45574 (isDefined!84 (getValueByKey!132 (toList!708 lt!30208) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15301 c!10004) b!69642))

(assert (= (and d!15301 (not c!10004)) b!69643))

(assert (= (and d!15301 (not res!37311)) b!69644))

(declare-fun m!66097 () Bool)

(assert (=> d!15301 m!66097))

(declare-fun m!66099 () Bool)

(assert (=> b!69642 m!66099))

(assert (=> b!69642 m!64909))

(assert (=> b!69642 m!64909))

(declare-fun m!66101 () Bool)

(assert (=> b!69642 m!66101))

(assert (=> b!69644 m!64909))

(assert (=> b!69644 m!64909))

(assert (=> b!69644 m!66101))

(assert (=> d!14901 d!15301))

(declare-fun b!69648 () Bool)

(declare-fun e!45576 () Option!138)

(assert (=> b!69648 (= e!45576 None!136)))

(declare-fun b!69647 () Bool)

(assert (=> b!69647 (= e!45576 (getValueByKey!132 (t!4954 lt!30206) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69645 () Bool)

(declare-fun e!45575 () Option!138)

(assert (=> b!69645 (= e!45575 (Some!137 (_2!1057 (h!2040 lt!30206))))))

(declare-fun c!10005 () Bool)

(declare-fun d!15303 () Bool)

(assert (=> d!15303 (= c!10005 (and ((_ is Cons!1455) lt!30206) (= (_1!1057 (h!2040 lt!30206)) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15303 (= (getValueByKey!132 lt!30206 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45575)))

(declare-fun b!69646 () Bool)

(assert (=> b!69646 (= e!45575 e!45576)))

(declare-fun c!10006 () Bool)

(assert (=> b!69646 (= c!10006 (and ((_ is Cons!1455) lt!30206) (not (= (_1!1057 (h!2040 lt!30206)) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15303 c!10005) b!69645))

(assert (= (and d!15303 (not c!10005)) b!69646))

(assert (= (and b!69646 c!10006) b!69647))

(assert (= (and b!69646 (not c!10006)) b!69648))

(declare-fun m!66103 () Bool)

(assert (=> b!69647 m!66103))

(assert (=> d!14901 d!15303))

(declare-fun d!15305 () Bool)

(assert (=> d!15305 (= (getValueByKey!132 lt!30206 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30635 () Unit!1909)

(assert (=> d!15305 (= lt!30635 (choose!394 lt!30206 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45577 () Bool)

(assert (=> d!15305 e!45577))

(declare-fun res!37312 () Bool)

(assert (=> d!15305 (=> (not res!37312) (not e!45577))))

(assert (=> d!15305 (= res!37312 (isStrictlySorted!277 lt!30206))))

(assert (=> d!15305 (= (lemmaContainsTupThenGetReturnValue!49 lt!30206 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30635)))

(declare-fun b!69649 () Bool)

(declare-fun res!37313 () Bool)

(assert (=> b!69649 (=> (not res!37313) (not e!45577))))

(assert (=> b!69649 (= res!37313 (containsKey!135 lt!30206 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69650 () Bool)

(assert (=> b!69650 (= e!45577 (contains!713 lt!30206 (tuple2!2093 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15305 res!37312) b!69649))

(assert (= (and b!69649 res!37313) b!69650))

(assert (=> d!15305 m!64903))

(declare-fun m!66105 () Bool)

(assert (=> d!15305 m!66105))

(declare-fun m!66107 () Bool)

(assert (=> d!15305 m!66107))

(declare-fun m!66109 () Bool)

(assert (=> b!69649 m!66109))

(declare-fun m!66111 () Bool)

(assert (=> b!69650 m!66111))

(assert (=> d!14901 d!15305))

(declare-fun b!69651 () Bool)

(declare-fun e!45580 () List!1459)

(declare-fun call!5936 () List!1459)

(assert (=> b!69651 (= e!45580 call!5936)))

(declare-fun e!45578 () List!1459)

(declare-fun b!69652 () Bool)

(assert (=> b!69652 (= e!45578 (insertStrictlySorted!52 (t!4954 (toList!708 lt!30072)) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69653 () Bool)

(declare-fun e!45581 () List!1459)

(declare-fun call!5935 () List!1459)

(assert (=> b!69653 (= e!45581 call!5935)))

(declare-fun b!69654 () Bool)

(assert (=> b!69654 (= e!45581 call!5935)))

(declare-fun c!10010 () Bool)

(declare-fun b!69655 () Bool)

(assert (=> b!69655 (= c!10010 (and ((_ is Cons!1455) (toList!708 lt!30072)) (bvsgt (_1!1057 (h!2040 (toList!708 lt!30072))) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!69655 (= e!45580 e!45581)))

(declare-fun b!69656 () Bool)

(declare-fun res!37315 () Bool)

(declare-fun e!45579 () Bool)

(assert (=> b!69656 (=> (not res!37315) (not e!45579))))

(declare-fun lt!30636 () List!1459)

(assert (=> b!69656 (= res!37315 (containsKey!135 lt!30636 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun bm!5933 () Bool)

(declare-fun call!5937 () List!1459)

(declare-fun c!10007 () Bool)

(assert (=> bm!5933 (= call!5937 ($colon$colon!63 e!45578 (ite c!10007 (h!2040 (toList!708 lt!30072)) (tuple2!2093 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!10008 () Bool)

(assert (=> bm!5933 (= c!10008 c!10007)))

(declare-fun b!69657 () Bool)

(declare-fun e!45582 () List!1459)

(assert (=> b!69657 (= e!45582 e!45580)))

(declare-fun c!10009 () Bool)

(assert (=> b!69657 (= c!10009 (and ((_ is Cons!1455) (toList!708 lt!30072)) (= (_1!1057 (h!2040 (toList!708 lt!30072))) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69658 () Bool)

(assert (=> b!69658 (= e!45578 (ite c!10009 (t!4954 (toList!708 lt!30072)) (ite c!10010 (Cons!1455 (h!2040 (toList!708 lt!30072)) (t!4954 (toList!708 lt!30072))) Nil!1456)))))

(declare-fun b!69659 () Bool)

(assert (=> b!69659 (= e!45582 call!5937)))

(declare-fun bm!5932 () Bool)

(assert (=> bm!5932 (= call!5936 call!5937)))

(declare-fun d!15307 () Bool)

(assert (=> d!15307 e!45579))

(declare-fun res!37314 () Bool)

(assert (=> d!15307 (=> (not res!37314) (not e!45579))))

(assert (=> d!15307 (= res!37314 (isStrictlySorted!277 lt!30636))))

(assert (=> d!15307 (= lt!30636 e!45582)))

(assert (=> d!15307 (= c!10007 (and ((_ is Cons!1455) (toList!708 lt!30072)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30072))) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15307 (isStrictlySorted!277 (toList!708 lt!30072))))

(assert (=> d!15307 (= (insertStrictlySorted!52 (toList!708 lt!30072) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30636)))

(declare-fun b!69660 () Bool)

(assert (=> b!69660 (= e!45579 (contains!713 lt!30636 (tuple2!2093 (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun bm!5934 () Bool)

(assert (=> bm!5934 (= call!5935 call!5936)))

(assert (= (and d!15307 c!10007) b!69659))

(assert (= (and d!15307 (not c!10007)) b!69657))

(assert (= (and b!69657 c!10009) b!69651))

(assert (= (and b!69657 (not c!10009)) b!69655))

(assert (= (and b!69655 c!10010) b!69654))

(assert (= (and b!69655 (not c!10010)) b!69653))

(assert (= (or b!69654 b!69653) bm!5934))

(assert (= (or b!69651 bm!5934) bm!5932))

(assert (= (or b!69659 bm!5932) bm!5933))

(assert (= (and bm!5933 c!10008) b!69652))

(assert (= (and bm!5933 (not c!10008)) b!69658))

(assert (= (and d!15307 res!37314) b!69656))

(assert (= (and b!69656 res!37315) b!69660))

(declare-fun m!66113 () Bool)

(assert (=> d!15307 m!66113))

(declare-fun m!66115 () Bool)

(assert (=> d!15307 m!66115))

(declare-fun m!66117 () Bool)

(assert (=> bm!5933 m!66117))

(declare-fun m!66119 () Bool)

(assert (=> b!69660 m!66119))

(declare-fun m!66121 () Bool)

(assert (=> b!69656 m!66121))

(declare-fun m!66123 () Bool)

(assert (=> b!69652 m!66123))

(assert (=> d!14901 d!15307))

(declare-fun d!15309 () Bool)

(declare-fun e!45583 () Bool)

(assert (=> d!15309 e!45583))

(declare-fun res!37316 () Bool)

(assert (=> d!15309 (=> (not res!37316) (not e!45583))))

(declare-fun lt!30639 () ListLongMap!1385)

(assert (=> d!15309 (= res!37316 (contains!710 lt!30639 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun lt!30637 () List!1459)

(assert (=> d!15309 (= lt!30639 (ListLongMap!1386 lt!30637))))

(declare-fun lt!30640 () Unit!1909)

(declare-fun lt!30638 () Unit!1909)

(assert (=> d!15309 (= lt!30640 lt!30638)))

(assert (=> d!15309 (= (getValueByKey!132 lt!30637 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15309 (= lt!30638 (lemmaContainsTupThenGetReturnValue!49 lt!30637 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15309 (= lt!30637 (insertStrictlySorted!52 (toList!708 call!5853) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15309 (= (+!88 call!5853 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) lt!30639)))

(declare-fun b!69661 () Bool)

(declare-fun res!37317 () Bool)

(assert (=> b!69661 (=> (not res!37317) (not e!45583))))

(assert (=> b!69661 (= res!37317 (= (getValueByKey!132 (toList!708 lt!30639) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(declare-fun b!69662 () Bool)

(assert (=> b!69662 (= e!45583 (contains!713 (toList!708 lt!30639) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(assert (= (and d!15309 res!37316) b!69661))

(assert (= (and b!69661 res!37317) b!69662))

(declare-fun m!66125 () Bool)

(assert (=> d!15309 m!66125))

(declare-fun m!66127 () Bool)

(assert (=> d!15309 m!66127))

(declare-fun m!66129 () Bool)

(assert (=> d!15309 m!66129))

(declare-fun m!66131 () Bool)

(assert (=> d!15309 m!66131))

(declare-fun m!66133 () Bool)

(assert (=> b!69661 m!66133))

(declare-fun m!66135 () Bool)

(assert (=> b!69662 m!66135))

(assert (=> b!68842 d!15309))

(declare-fun b!69666 () Bool)

(declare-fun e!45585 () Option!138)

(assert (=> b!69666 (= e!45585 None!136)))

(declare-fun b!69665 () Bool)

(assert (=> b!69665 (= e!45585 (getValueByKey!132 (t!4954 (toList!708 lt!30433)) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!69663 () Bool)

(declare-fun e!45584 () Option!138)

(assert (=> b!69663 (= e!45584 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30433)))))))

(declare-fun c!10011 () Bool)

(declare-fun d!15311 () Bool)

(assert (=> d!15311 (= c!10011 (and ((_ is Cons!1455) (toList!708 lt!30433)) (= (_1!1057 (h!2040 (toList!708 lt!30433))) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (=> d!15311 (= (getValueByKey!132 (toList!708 lt!30433) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) e!45584)))

(declare-fun b!69664 () Bool)

(assert (=> b!69664 (= e!45584 e!45585)))

(declare-fun c!10012 () Bool)

(assert (=> b!69664 (= c!10012 (and ((_ is Cons!1455) (toList!708 lt!30433)) (not (= (_1!1057 (h!2040 (toList!708 lt!30433))) (_1!1057 (ite c!9730 (ite c!9727 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))))

(assert (= (and d!15311 c!10011) b!69663))

(assert (= (and d!15311 (not c!10011)) b!69664))

(assert (= (and b!69664 c!10012) b!69665))

(assert (= (and b!69664 (not c!10012)) b!69666))

(declare-fun m!66137 () Bool)

(assert (=> b!69665 m!66137))

(assert (=> b!69197 d!15311))

(assert (=> d!14949 d!14951))

(assert (=> d!14949 d!14955))

(declare-fun d!15313 () Bool)

(assert (=> d!15313 (not (contains!710 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)) lt!30107))))

(assert (=> d!15313 true))

(declare-fun _$36!295 () Unit!1909)

(assert (=> d!15313 (= (choose!396 lt!30110 lt!30108 lt!30113 lt!30107) _$36!295)))

(declare-fun bs!3010 () Bool)

(assert (= bs!3010 d!15313))

(assert (=> bs!3010 m!64651))

(assert (=> bs!3010 m!64651))

(assert (=> bs!3010 m!64653))

(assert (=> d!14949 d!15313))

(declare-fun d!15315 () Bool)

(declare-fun e!45587 () Bool)

(assert (=> d!15315 e!45587))

(declare-fun res!37318 () Bool)

(assert (=> d!15315 (=> res!37318 e!45587)))

(declare-fun lt!30644 () Bool)

(assert (=> d!15315 (= res!37318 (not lt!30644))))

(declare-fun lt!30643 () Bool)

(assert (=> d!15315 (= lt!30644 lt!30643)))

(declare-fun lt!30641 () Unit!1909)

(declare-fun e!45586 () Unit!1909)

(assert (=> d!15315 (= lt!30641 e!45586)))

(declare-fun c!10013 () Bool)

(assert (=> d!15315 (= c!10013 lt!30643)))

(assert (=> d!15315 (= lt!30643 (containsKey!135 (toList!708 lt!30110) lt!30107))))

(assert (=> d!15315 (= (contains!710 lt!30110 lt!30107) lt!30644)))

(declare-fun b!69668 () Bool)

(declare-fun lt!30642 () Unit!1909)

(assert (=> b!69668 (= e!45586 lt!30642)))

(assert (=> b!69668 (= lt!30642 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30110) lt!30107))))

(assert (=> b!69668 (isDefined!84 (getValueByKey!132 (toList!708 lt!30110) lt!30107))))

(declare-fun b!69669 () Bool)

(declare-fun Unit!1955 () Unit!1909)

(assert (=> b!69669 (= e!45586 Unit!1955)))

(declare-fun b!69670 () Bool)

(assert (=> b!69670 (= e!45587 (isDefined!84 (getValueByKey!132 (toList!708 lt!30110) lt!30107)))))

(assert (= (and d!15315 c!10013) b!69668))

(assert (= (and d!15315 (not c!10013)) b!69669))

(assert (= (and d!15315 (not res!37318)) b!69670))

(declare-fun m!66139 () Bool)

(assert (=> d!15315 m!66139))

(declare-fun m!66141 () Bool)

(assert (=> b!69668 m!66141))

(declare-fun m!66143 () Bool)

(assert (=> b!69668 m!66143))

(assert (=> b!69668 m!66143))

(declare-fun m!66145 () Bool)

(assert (=> b!69668 m!66145))

(assert (=> b!69670 m!66143))

(assert (=> b!69670 m!66143))

(assert (=> b!69670 m!66145))

(assert (=> d!14949 d!15315))

(declare-fun d!15317 () Bool)

(assert (=> d!15317 (= (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077)) (not (isEmpty!317 (getValueByKey!132 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077))))))

(declare-fun bs!3011 () Bool)

(assert (= bs!3011 d!15317))

(assert (=> bs!3011 m!64873))

(declare-fun m!66147 () Bool)

(assert (=> bs!3011 m!66147))

(assert (=> b!68895 d!15317))

(declare-fun b!69674 () Bool)

(declare-fun e!45589 () Option!138)

(assert (=> b!69674 (= e!45589 None!136)))

(declare-fun b!69673 () Bool)

(assert (=> b!69673 (= e!45589 (getValueByKey!132 (t!4954 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) lt!30077))))

(declare-fun b!69671 () Bool)

(declare-fun e!45588 () Option!138)

(assert (=> b!69671 (= e!45588 (Some!137 (_2!1057 (h!2040 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun c!10014 () Bool)

(declare-fun d!15319 () Bool)

(assert (=> d!15319 (= c!10014 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30077)))))

(assert (=> d!15319 (= (getValueByKey!132 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077) e!45588)))

(declare-fun b!69672 () Bool)

(assert (=> b!69672 (= e!45588 e!45589)))

(declare-fun c!10015 () Bool)

(assert (=> b!69672 (= c!10015 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (not (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30077))))))

(assert (= (and d!15319 c!10014) b!69671))

(assert (= (and d!15319 (not c!10014)) b!69672))

(assert (= (and b!69672 c!10015) b!69673))

(assert (= (and b!69672 (not c!10015)) b!69674))

(declare-fun m!66149 () Bool)

(assert (=> b!69673 m!66149))

(assert (=> b!68895 d!15319))

(declare-fun b!69675 () Bool)

(declare-fun e!45591 () Bool)

(declare-fun e!45590 () Bool)

(assert (=> b!69675 (= e!45591 e!45590)))

(declare-fun c!10016 () Bool)

(assert (=> b!69675 (= c!10016 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!69676 () Bool)

(declare-fun call!5938 () Bool)

(assert (=> b!69676 (= e!45590 call!5938)))

(declare-fun d!15321 () Bool)

(declare-fun res!37321 () Bool)

(declare-fun e!45592 () Bool)

(assert (=> d!15321 (=> res!37321 e!45592)))

(assert (=> d!15321 (= res!37321 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!15321 (= (arrayNoDuplicates!0 (_keys!3811 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9861 (Cons!1456 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) Nil!1457) Nil!1457)) e!45592)))

(declare-fun b!69677 () Bool)

(assert (=> b!69677 (= e!45592 e!45591)))

(declare-fun res!37319 () Bool)

(assert (=> b!69677 (=> (not res!37319) (not e!45591))))

(declare-fun e!45593 () Bool)

(assert (=> b!69677 (= res!37319 (not e!45593))))

(declare-fun res!37320 () Bool)

(assert (=> b!69677 (=> (not res!37320) (not e!45593))))

(assert (=> b!69677 (= res!37320 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!5935 () Bool)

(assert (=> bm!5935 (= call!5938 (arrayNoDuplicates!0 (_keys!3811 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10016 (Cons!1456 (select (arr!1832 (_keys!3811 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!9861 (Cons!1456 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) Nil!1457) Nil!1457)) (ite c!9861 (Cons!1456 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) Nil!1457) Nil!1457))))))

(declare-fun b!69678 () Bool)

(assert (=> b!69678 (= e!45593 (contains!712 (ite c!9861 (Cons!1456 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) Nil!1457) Nil!1457) (select (arr!1832 (_keys!3811 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!69679 () Bool)

(assert (=> b!69679 (= e!45590 call!5938)))

(assert (= (and d!15321 (not res!37321)) b!69677))

(assert (= (and b!69677 res!37320) b!69678))

(assert (= (and b!69677 res!37319) b!69675))

(assert (= (and b!69675 c!10016) b!69676))

(assert (= (and b!69675 (not c!10016)) b!69679))

(assert (= (or b!69676 b!69679) bm!5935))

(assert (=> b!69675 m!65761))

(assert (=> b!69675 m!65761))

(assert (=> b!69675 m!65763))

(assert (=> b!69677 m!65761))

(assert (=> b!69677 m!65761))

(assert (=> b!69677 m!65763))

(assert (=> bm!5935 m!65761))

(declare-fun m!66151 () Bool)

(assert (=> bm!5935 m!66151))

(assert (=> b!69678 m!65761))

(assert (=> b!69678 m!65761))

(declare-fun m!66153 () Bool)

(assert (=> b!69678 m!66153))

(assert (=> bm!5896 d!15321))

(assert (=> d!14943 d!14945))

(assert (=> d!14943 d!14947))

(declare-fun d!15323 () Bool)

(assert (=> d!15323 (isDefined!84 (getValueByKey!132 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15323 true))

(declare-fun _$12!317 () Unit!1909)

(assert (=> d!15323 (= (choose!395 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) _$12!317)))

(declare-fun bs!3012 () Bool)

(assert (= bs!3012 d!15323))

(assert (=> bs!3012 m!64329))

(assert (=> bs!3012 m!64521))

(assert (=> bs!3012 m!64521))

(assert (=> bs!3012 m!64523))

(assert (=> d!14943 d!15323))

(declare-fun d!15325 () Bool)

(declare-fun res!37326 () Bool)

(declare-fun e!45598 () Bool)

(assert (=> d!15325 (=> res!37326 e!45598)))

(assert (=> d!15325 (= res!37326 (or ((_ is Nil!1456) (toList!708 lt!29848)) ((_ is Nil!1456) (t!4954 (toList!708 lt!29848)))))))

(assert (=> d!15325 (= (isStrictlySorted!277 (toList!708 lt!29848)) e!45598)))

(declare-fun b!69684 () Bool)

(declare-fun e!45599 () Bool)

(assert (=> b!69684 (= e!45598 e!45599)))

(declare-fun res!37327 () Bool)

(assert (=> b!69684 (=> (not res!37327) (not e!45599))))

(assert (=> b!69684 (= res!37327 (bvslt (_1!1057 (h!2040 (toList!708 lt!29848))) (_1!1057 (h!2040 (t!4954 (toList!708 lt!29848))))))))

(declare-fun b!69685 () Bool)

(assert (=> b!69685 (= e!45599 (isStrictlySorted!277 (t!4954 (toList!708 lt!29848))))))

(assert (= (and d!15325 (not res!37326)) b!69684))

(assert (= (and b!69684 res!37327) b!69685))

(declare-fun m!66155 () Bool)

(assert (=> b!69685 m!66155))

(assert (=> d!14943 d!15325))

(assert (=> b!69129 d!15173))

(assert (=> d!15001 d!14997))

(assert (=> d!15001 d!15003))

(assert (=> d!15001 d!14995))

(assert (=> d!15001 d!14999))

(declare-fun d!15327 () Bool)

(assert (=> d!15327 (= (apply!73 lt!30459 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1134 (getValueByKey!132 (toList!708 lt!30459) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3013 () Bool)

(assert (= bs!3013 d!15327))

(assert (=> bs!3013 m!66025))

(assert (=> bs!3013 m!66025))

(declare-fun m!66157 () Bool)

(assert (=> bs!3013 m!66157))

(assert (=> b!69217 d!15327))

(assert (=> d!14925 d!14923))

(declare-fun d!15329 () Bool)

(assert (=> d!15329 (= (getValueByKey!132 lt!30122 (_1!1057 lt!29850)) (Some!137 (_2!1057 lt!29850)))))

(assert (=> d!15329 true))

(declare-fun _$22!373 () Unit!1909)

(assert (=> d!15329 (= (choose!394 lt!30122 (_1!1057 lt!29850) (_2!1057 lt!29850)) _$22!373)))

(declare-fun bs!3014 () Bool)

(assert (= bs!3014 d!15329))

(assert (=> bs!3014 m!64663))

(assert (=> d!14925 d!15329))

(declare-fun d!15331 () Bool)

(declare-fun res!37328 () Bool)

(declare-fun e!45600 () Bool)

(assert (=> d!15331 (=> res!37328 e!45600)))

(assert (=> d!15331 (= res!37328 (or ((_ is Nil!1456) lt!30122) ((_ is Nil!1456) (t!4954 lt!30122))))))

(assert (=> d!15331 (= (isStrictlySorted!277 lt!30122) e!45600)))

(declare-fun b!69686 () Bool)

(declare-fun e!45601 () Bool)

(assert (=> b!69686 (= e!45600 e!45601)))

(declare-fun res!37329 () Bool)

(assert (=> b!69686 (=> (not res!37329) (not e!45601))))

(assert (=> b!69686 (= res!37329 (bvslt (_1!1057 (h!2040 lt!30122)) (_1!1057 (h!2040 (t!4954 lt!30122)))))))

(declare-fun b!69687 () Bool)

(assert (=> b!69687 (= e!45601 (isStrictlySorted!277 (t!4954 lt!30122)))))

(assert (= (and d!15331 (not res!37328)) b!69686))

(assert (= (and b!69686 res!37329) b!69687))

(declare-fun m!66159 () Bool)

(assert (=> b!69687 m!66159))

(assert (=> d!14925 d!15331))

(assert (=> d!14977 d!14975))

(declare-fun d!15333 () Bool)

(assert (=> d!15333 (= (getValueByKey!132 lt!30134 (_1!1057 lt!29850)) (Some!137 (_2!1057 lt!29850)))))

(assert (=> d!15333 true))

(declare-fun _$22!374 () Unit!1909)

(assert (=> d!15333 (= (choose!394 lt!30134 (_1!1057 lt!29850) (_2!1057 lt!29850)) _$22!374)))

(declare-fun bs!3015 () Bool)

(assert (= bs!3015 d!15333))

(assert (=> bs!3015 m!64699))

(assert (=> d!14977 d!15333))

(declare-fun d!15335 () Bool)

(declare-fun res!37330 () Bool)

(declare-fun e!45602 () Bool)

(assert (=> d!15335 (=> res!37330 e!45602)))

(assert (=> d!15335 (= res!37330 (or ((_ is Nil!1456) lt!30134) ((_ is Nil!1456) (t!4954 lt!30134))))))

(assert (=> d!15335 (= (isStrictlySorted!277 lt!30134) e!45602)))

(declare-fun b!69688 () Bool)

(declare-fun e!45603 () Bool)

(assert (=> b!69688 (= e!45602 e!45603)))

(declare-fun res!37331 () Bool)

(assert (=> b!69688 (=> (not res!37331) (not e!45603))))

(assert (=> b!69688 (= res!37331 (bvslt (_1!1057 (h!2040 lt!30134)) (_1!1057 (h!2040 (t!4954 lt!30134)))))))

(declare-fun b!69689 () Bool)

(assert (=> b!69689 (= e!45603 (isStrictlySorted!277 (t!4954 lt!30134)))))

(assert (= (and d!15335 (not res!37330)) b!69688))

(assert (= (and b!69688 res!37331) b!69689))

(declare-fun m!66161 () Bool)

(assert (=> b!69689 m!66161))

(assert (=> d!14977 d!15335))

(declare-fun b!69690 () Bool)

(declare-fun e!45606 () Bool)

(declare-fun call!5939 () Bool)

(assert (=> b!69690 (= e!45606 call!5939)))

(declare-fun b!69691 () Bool)

(declare-fun e!45604 () Bool)

(declare-fun e!45605 () Bool)

(assert (=> b!69691 (= e!45604 e!45605)))

(declare-fun c!10017 () Bool)

(assert (=> b!69691 (= c!10017 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!15337 () Bool)

(declare-fun res!37333 () Bool)

(assert (=> d!15337 (=> res!37333 e!45604)))

(assert (=> d!15337 (= res!37333 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!15337 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3811 newMap!16) (mask!6112 newMap!16)) e!45604)))

(declare-fun bm!5936 () Bool)

(assert (=> bm!5936 (= call!5939 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(declare-fun b!69692 () Bool)

(assert (=> b!69692 (= e!45605 call!5939)))

(declare-fun b!69693 () Bool)

(assert (=> b!69693 (= e!45605 e!45606)))

(declare-fun lt!30646 () (_ BitVec 64))

(assert (=> b!69693 (= lt!30646 (select (arr!1832 (_keys!3811 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!30647 () Unit!1909)

(assert (=> b!69693 (= lt!30647 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3811 newMap!16) lt!30646 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!69693 (arrayContainsKey!0 (_keys!3811 newMap!16) lt!30646 #b00000000000000000000000000000000)))

(declare-fun lt!30645 () Unit!1909)

(assert (=> b!69693 (= lt!30645 lt!30647)))

(declare-fun res!37332 () Bool)

(assert (=> b!69693 (= res!37332 (= (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3811 newMap!16) (mask!6112 newMap!16)) (Found!228 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!69693 (=> (not res!37332) (not e!45606))))

(assert (= (and d!15337 (not res!37333)) b!69691))

(assert (= (and b!69691 c!10017) b!69693))

(assert (= (and b!69691 (not c!10017)) b!69692))

(assert (= (and b!69693 res!37332) b!69690))

(assert (= (or b!69690 b!69692) bm!5936))

(assert (=> b!69691 m!65761))

(assert (=> b!69691 m!65761))

(assert (=> b!69691 m!65763))

(declare-fun m!66163 () Bool)

(assert (=> bm!5936 m!66163))

(assert (=> b!69693 m!65761))

(declare-fun m!66165 () Bool)

(assert (=> b!69693 m!66165))

(declare-fun m!66167 () Bool)

(assert (=> b!69693 m!66167))

(assert (=> b!69693 m!65761))

(declare-fun m!66169 () Bool)

(assert (=> b!69693 m!66169))

(assert (=> bm!5853 d!15337))

(declare-fun b!69697 () Bool)

(declare-fun e!45608 () Option!138)

(assert (=> b!69697 (= e!45608 None!136)))

(declare-fun b!69696 () Bool)

(assert (=> b!69696 (= e!45608 (getValueByKey!132 (t!4954 (toList!708 lt!30208)) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69694 () Bool)

(declare-fun e!45607 () Option!138)

(assert (=> b!69694 (= e!45607 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30208)))))))

(declare-fun c!10018 () Bool)

(declare-fun d!15339 () Bool)

(assert (=> d!15339 (= c!10018 (and ((_ is Cons!1455) (toList!708 lt!30208)) (= (_1!1057 (h!2040 (toList!708 lt!30208))) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15339 (= (getValueByKey!132 (toList!708 lt!30208) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45607)))

(declare-fun b!69695 () Bool)

(assert (=> b!69695 (= e!45607 e!45608)))

(declare-fun c!10019 () Bool)

(assert (=> b!69695 (= c!10019 (and ((_ is Cons!1455) (toList!708 lt!30208)) (not (= (_1!1057 (h!2040 (toList!708 lt!30208))) (_1!1057 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15339 c!10018) b!69694))

(assert (= (and d!15339 (not c!10018)) b!69695))

(assert (= (and b!69695 c!10019) b!69696))

(assert (= (and b!69695 (not c!10019)) b!69697))

(declare-fun m!66171 () Bool)

(assert (=> b!69696 m!66171))

(assert (=> b!68903 d!15339))

(assert (=> d!14971 d!14819))

(assert (=> bm!5871 d!14981))

(assert (=> d!14909 d!14929))

(declare-fun b!69714 () Bool)

(declare-fun res!37345 () Bool)

(declare-fun e!45617 () Bool)

(assert (=> b!69714 (=> (not res!37345) (not e!45617))))

(declare-fun lt!30650 () SeekEntryResult!228)

(assert (=> b!69714 (= res!37345 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3044 lt!30650)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5941 () Bool)

(declare-fun call!5945 () Bool)

(assert (=> bm!5941 (= call!5945 (arrayContainsKey!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!5942 () Bool)

(declare-fun call!5944 () Bool)

(declare-fun c!10024 () Bool)

(assert (=> bm!5942 (= call!5944 (inRange!0 (ite c!10024 (index!3041 lt!30650) (index!3044 lt!30650)) (mask!6112 newMap!16)))))

(declare-fun b!69715 () Bool)

(declare-fun e!45618 () Bool)

(assert (=> b!69715 (= e!45618 ((_ is Undefined!228) lt!30650))))

(declare-fun d!15341 () Bool)

(declare-fun e!45620 () Bool)

(assert (=> d!15341 e!45620))

(assert (=> d!15341 (= c!10024 ((_ is MissingZero!228) lt!30650))))

(assert (=> d!15341 (= lt!30650 (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(assert (=> d!15341 true))

(declare-fun _$34!791 () Unit!1909)

(assert (=> d!15341 (= (choose!393 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)) _$34!791)))

(declare-fun b!69716 () Bool)

(declare-fun res!37344 () Bool)

(assert (=> b!69716 (= res!37344 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3041 lt!30650)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45619 () Bool)

(assert (=> b!69716 (=> (not res!37344) (not e!45619))))

(declare-fun b!69717 () Bool)

(assert (=> b!69717 (= e!45620 e!45619)))

(declare-fun res!37342 () Bool)

(assert (=> b!69717 (= res!37342 call!5944)))

(assert (=> b!69717 (=> (not res!37342) (not e!45619))))

(declare-fun b!69718 () Bool)

(assert (=> b!69718 (= e!45617 (not call!5945))))

(declare-fun b!69719 () Bool)

(declare-fun res!37343 () Bool)

(assert (=> b!69719 (=> (not res!37343) (not e!45617))))

(assert (=> b!69719 (= res!37343 call!5944)))

(assert (=> b!69719 (= e!45618 e!45617)))

(declare-fun b!69720 () Bool)

(assert (=> b!69720 (= e!45619 (not call!5945))))

(declare-fun b!69721 () Bool)

(assert (=> b!69721 (= e!45620 e!45618)))

(declare-fun c!10025 () Bool)

(assert (=> b!69721 (= c!10025 ((_ is MissingVacant!228) lt!30650))))

(assert (= (and d!15341 c!10024) b!69717))

(assert (= (and d!15341 (not c!10024)) b!69721))

(assert (= (and b!69717 res!37342) b!69716))

(assert (= (and b!69716 res!37344) b!69720))

(assert (= (and b!69721 c!10025) b!69719))

(assert (= (and b!69721 (not c!10025)) b!69715))

(assert (= (and b!69719 res!37343) b!69714))

(assert (= (and b!69714 res!37345) b!69718))

(assert (= (or b!69717 b!69719) bm!5942))

(assert (= (or b!69720 b!69718) bm!5941))

(assert (=> bm!5941 m!64329))

(assert (=> bm!5941 m!64565))

(declare-fun m!66173 () Bool)

(assert (=> b!69716 m!66173))

(declare-fun m!66175 () Bool)

(assert (=> bm!5942 m!66175))

(declare-fun m!66177 () Bool)

(assert (=> b!69714 m!66177))

(assert (=> d!15341 m!64329))

(assert (=> d!15341 m!64537))

(assert (=> d!14909 d!15341))

(assert (=> d!14909 d!15065))

(declare-fun d!15343 () Bool)

(declare-fun res!37346 () Bool)

(declare-fun e!45621 () Bool)

(assert (=> d!15343 (=> res!37346 e!45621)))

(assert (=> d!15343 (= res!37346 (and ((_ is Cons!1455) (toList!708 lt!30128)) (= (_1!1057 (h!2040 (toList!708 lt!30128))) (_1!1057 lt!29846))))))

(assert (=> d!15343 (= (containsKey!135 (toList!708 lt!30128) (_1!1057 lt!29846)) e!45621)))

(declare-fun b!69722 () Bool)

(declare-fun e!45622 () Bool)

(assert (=> b!69722 (= e!45621 e!45622)))

(declare-fun res!37347 () Bool)

(assert (=> b!69722 (=> (not res!37347) (not e!45622))))

(assert (=> b!69722 (= res!37347 (and (or (not ((_ is Cons!1455) (toList!708 lt!30128))) (bvsle (_1!1057 (h!2040 (toList!708 lt!30128))) (_1!1057 lt!29846))) ((_ is Cons!1455) (toList!708 lt!30128)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30128))) (_1!1057 lt!29846))))))

(declare-fun b!69723 () Bool)

(assert (=> b!69723 (= e!45622 (containsKey!135 (t!4954 (toList!708 lt!30128)) (_1!1057 lt!29846)))))

(assert (= (and d!15343 (not res!37346)) b!69722))

(assert (= (and b!69722 res!37347) b!69723))

(declare-fun m!66179 () Bool)

(assert (=> b!69723 m!66179))

(assert (=> d!15033 d!15343))

(declare-fun b!69724 () Bool)

(declare-fun e!45623 () (_ BitVec 32))

(declare-fun call!5946 () (_ BitVec 32))

(assert (=> b!69724 (= e!45623 call!5946)))

(declare-fun b!69725 () Bool)

(assert (=> b!69725 (= e!45623 (bvadd #b00000000000000000000000000000001 call!5946))))

(declare-fun d!15345 () Bool)

(declare-fun lt!30651 () (_ BitVec 32))

(assert (=> d!15345 (and (bvsge lt!30651 #b00000000000000000000000000000000) (bvsle lt!30651 (bvsub (size!2068 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000)))))

(declare-fun e!45624 () (_ BitVec 32))

(assert (=> d!15345 (= lt!30651 e!45624)))

(declare-fun c!10026 () Bool)

(assert (=> d!15345 (= c!10026 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))))))

(assert (=> d!15345 (and (bvsle #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2068 (_keys!3811 (_2!1058 lt!30016))) (size!2068 (_keys!3811 (_2!1058 lt!30016)))))))

(assert (=> d!15345 (= (arrayCountValidKeys!0 (_keys!3811 (_2!1058 lt!30016)) #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))) lt!30651)))

(declare-fun b!69726 () Bool)

(assert (=> b!69726 (= e!45624 e!45623)))

(declare-fun c!10027 () Bool)

(assert (=> b!69726 (= c!10027 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000)))))

(declare-fun bm!5943 () Bool)

(assert (=> bm!5943 (= call!5946 (arrayCountValidKeys!0 (_keys!3811 (_2!1058 lt!30016)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (_2!1058 lt!30016)))))))

(declare-fun b!69727 () Bool)

(assert (=> b!69727 (= e!45624 #b00000000000000000000000000000000)))

(assert (= (and d!15345 c!10026) b!69727))

(assert (= (and d!15345 (not c!10026)) b!69726))

(assert (= (and b!69726 c!10027) b!69725))

(assert (= (and b!69726 (not c!10027)) b!69724))

(assert (= (or b!69725 b!69724) bm!5943))

(assert (=> b!69726 m!65709))

(assert (=> b!69726 m!65709))

(assert (=> b!69726 m!65711))

(declare-fun m!66181 () Bool)

(assert (=> bm!5943 m!66181))

(assert (=> b!69170 d!15345))

(declare-fun d!15347 () Bool)

(assert (=> d!15347 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107))))

(declare-fun lt!30652 () Unit!1909)

(assert (=> d!15347 (= lt!30652 (choose!395 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107))))

(declare-fun e!45625 () Bool)

(assert (=> d!15347 e!45625))

(declare-fun res!37348 () Bool)

(assert (=> d!15347 (=> (not res!37348) (not e!45625))))

(assert (=> d!15347 (= res!37348 (isStrictlySorted!277 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)))))))

(assert (=> d!15347 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107) lt!30652)))

(declare-fun b!69728 () Bool)

(assert (=> b!69728 (= e!45625 (containsKey!135 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107))))

(assert (= (and d!15347 res!37348) b!69728))

(assert (=> d!15347 m!65123))

(assert (=> d!15347 m!65123))

(assert (=> d!15347 m!65125))

(declare-fun m!66183 () Bool)

(assert (=> d!15347 m!66183))

(declare-fun m!66185 () Bool)

(assert (=> d!15347 m!66185))

(assert (=> b!69728 m!65119))

(assert (=> b!69106 d!15347))

(assert (=> b!69106 d!15165))

(assert (=> b!69106 d!15167))

(declare-fun d!15349 () Bool)

(declare-fun e!45628 () Bool)

(assert (=> d!15349 e!45628))

(declare-fun res!37351 () Bool)

(assert (=> d!15349 (=> (not res!37351) (not e!45628))))

(assert (=> d!15349 (= res!37351 (and (bvsge (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000000) (bvslt (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (size!2068 (_keys!3811 newMap!16)))))))

(declare-fun lt!30655 () Unit!1909)

(declare-fun choose!102 ((_ BitVec 64) array!3837 (_ BitVec 32) (_ BitVec 32)) Unit!1909)

(assert (=> d!15349 (= lt!30655 (choose!102 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (mask!6112 newMap!16)))))

(assert (=> d!15349 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15349 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (mask!6112 newMap!16)) lt!30655)))

(declare-fun b!69731 () Bool)

(assert (=> b!69731 (= e!45628 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (mask!6112 newMap!16)))))

(assert (= (and d!15349 res!37351) b!69731))

(assert (=> d!15349 m!64329))

(declare-fun m!66187 () Bool)

(assert (=> d!15349 m!66187))

(assert (=> d!15349 m!64725))

(assert (=> b!69731 m!64987))

(assert (=> b!69731 m!64967))

(assert (=> d!14911 d!15349))

(declare-fun d!15351 () Bool)

(declare-fun e!45629 () Bool)

(assert (=> d!15351 e!45629))

(declare-fun res!37352 () Bool)

(assert (=> d!15351 (=> (not res!37352) (not e!45629))))

(assert (=> d!15351 (= res!37352 (and (bvsge (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000000) (bvslt (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (size!2068 lt!30297))))))

(declare-fun lt!30656 () Unit!1909)

(assert (=> d!15351 (= lt!30656 (choose!389 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (defaultEntry!2167 newMap!16)))))

(assert (=> d!15351 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15351 (= (lemmaValidKeyInArrayIsInListMap!82 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (defaultEntry!2167 newMap!16)) lt!30656)))

(declare-fun b!69732 () Bool)

(assert (=> b!69732 (= e!45629 (contains!710 (getCurrentListMap!406 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1832 lt!30297) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)))))))

(assert (= (and d!15351 res!37352) b!69732))

(declare-fun m!66189 () Bool)

(assert (=> d!15351 m!66189))

(assert (=> d!15351 m!64725))

(assert (=> b!69732 m!64957))

(declare-fun m!66191 () Bool)

(assert (=> b!69732 m!66191))

(assert (=> b!69732 m!64957))

(assert (=> b!69732 m!66191))

(declare-fun m!66193 () Bool)

(assert (=> b!69732 m!66193))

(assert (=> d!14911 d!15351))

(declare-fun b!69733 () Bool)

(declare-fun e!45631 () Bool)

(declare-fun e!45630 () Bool)

(assert (=> b!69733 (= e!45631 e!45630)))

(declare-fun c!10028 () Bool)

(assert (=> b!69733 (= c!10028 (validKeyInArray!0 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) lt!30295)))))

(declare-fun b!69734 () Bool)

(declare-fun call!5947 () Bool)

(assert (=> b!69734 (= e!45630 call!5947)))

(declare-fun d!15353 () Bool)

(declare-fun res!37355 () Bool)

(declare-fun e!45632 () Bool)

(assert (=> d!15353 (=> res!37355 e!45632)))

(assert (=> d!15353 (= res!37355 (bvsge lt!30295 (size!2068 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))))

(assert (=> d!15353 (= (arrayNoDuplicates!0 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) lt!30295 lt!30303) e!45632)))

(declare-fun b!69735 () Bool)

(assert (=> b!69735 (= e!45632 e!45631)))

(declare-fun res!37353 () Bool)

(assert (=> b!69735 (=> (not res!37353) (not e!45631))))

(declare-fun e!45633 () Bool)

(assert (=> b!69735 (= res!37353 (not e!45633))))

(declare-fun res!37354 () Bool)

(assert (=> b!69735 (=> (not res!37354) (not e!45633))))

(assert (=> b!69735 (= res!37354 (validKeyInArray!0 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) lt!30295)))))

(declare-fun bm!5944 () Bool)

(assert (=> bm!5944 (= call!5947 (arrayNoDuplicates!0 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (bvadd lt!30295 #b00000000000000000000000000000001) (ite c!10028 (Cons!1456 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) lt!30295) lt!30303) lt!30303)))))

(declare-fun b!69736 () Bool)

(assert (=> b!69736 (= e!45633 (contains!712 lt!30303 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) lt!30295)))))

(declare-fun b!69737 () Bool)

(assert (=> b!69737 (= e!45630 call!5947)))

(assert (= (and d!15353 (not res!37355)) b!69735))

(assert (= (and b!69735 res!37354) b!69736))

(assert (= (and b!69735 res!37353) b!69733))

(assert (= (and b!69733 c!10028) b!69734))

(assert (= (and b!69733 (not c!10028)) b!69737))

(assert (= (or b!69734 b!69737) bm!5944))

(declare-fun m!66195 () Bool)

(assert (=> b!69733 m!66195))

(assert (=> b!69733 m!66195))

(declare-fun m!66197 () Bool)

(assert (=> b!69733 m!66197))

(assert (=> b!69735 m!66195))

(assert (=> b!69735 m!66195))

(assert (=> b!69735 m!66197))

(assert (=> bm!5944 m!66195))

(declare-fun m!66199 () Bool)

(assert (=> bm!5944 m!66199))

(assert (=> b!69736 m!66195))

(assert (=> b!69736 m!66195))

(declare-fun m!66201 () Bool)

(assert (=> b!69736 m!66201))

(assert (=> d!14911 d!15353))

(declare-fun d!15355 () Bool)

(declare-fun e!45636 () Bool)

(assert (=> d!15355 e!45636))

(declare-fun res!37358 () Bool)

(assert (=> d!15355 (=> (not res!37358) (not e!45636))))

(assert (=> d!15355 (= res!37358 (and (bvsge (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000000) (bvslt (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (size!2068 (_keys!3811 newMap!16))) (bvslt (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (size!2069 (_values!2150 newMap!16)))))))

(declare-fun lt!30659 () Unit!1909)

(declare-fun choose!400 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) (_ BitVec 64) V!2921 Int) Unit!1909)

(assert (=> d!15355 (= lt!30659 (choose!400 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15355 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15355 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!11 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 (defaultEntry!2167 newMap!16)) lt!30659)))

(declare-fun b!69740 () Bool)

(assert (=> b!69740 (= e!45636 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (getCurrentListMap!406 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))))))

(assert (= (and d!15355 res!37358) b!69740))

(assert (=> d!15355 m!64329))

(declare-fun m!66203 () Bool)

(assert (=> d!15355 m!66203))

(assert (=> d!15355 m!64725))

(assert (=> b!69740 m!64983))

(assert (=> b!69740 m!64987))

(assert (=> b!69740 m!64525))

(assert (=> b!69740 m!64733))

(assert (=> b!69740 m!64971))

(assert (=> b!69740 m!64525))

(assert (=> d!14911 d!15355))

(declare-fun b!69750 () Bool)

(declare-fun res!37369 () Bool)

(declare-fun e!45642 () Bool)

(assert (=> b!69750 (=> (not res!37369) (not e!45642))))

(assert (=> b!69750 (= res!37369 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69749 () Bool)

(declare-fun res!37367 () Bool)

(assert (=> b!69749 (=> (not res!37367) (not e!45642))))

(assert (=> b!69749 (= res!37367 (not (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))))))))

(declare-fun d!15357 () Bool)

(declare-fun e!45641 () Bool)

(assert (=> d!15357 e!45641))

(declare-fun res!37368 () Bool)

(assert (=> d!15357 (=> (not res!37368) (not e!45641))))

(assert (=> d!15357 (= res!37368 (and (bvsge (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000000) (bvslt (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (size!2068 (_keys!3811 newMap!16)))))))

(declare-fun lt!30662 () Unit!1909)

(declare-fun choose!1 (array!3837 (_ BitVec 32) (_ BitVec 64)) Unit!1909)

(assert (=> d!15357 (= lt!30662 (choose!1 (_keys!3811 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15357 e!45642))

(declare-fun res!37370 () Bool)

(assert (=> d!15357 (=> (not res!37370) (not e!45642))))

(assert (=> d!15357 (= res!37370 (and (bvsge (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000000) (bvslt (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (size!2068 (_keys!3811 newMap!16)))))))

(assert (=> d!15357 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3811 newMap!16) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30662)))

(declare-fun b!69751 () Bool)

(assert (=> b!69751 (= e!45642 (bvslt (size!2068 (_keys!3811 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!69752 () Bool)

(assert (=> b!69752 (= e!45641 (= (arrayCountValidKeys!0 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3811 newMap!16) #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!15357 res!37370) b!69749))

(assert (= (and b!69749 res!37367) b!69750))

(assert (= (and b!69750 res!37369) b!69751))

(assert (= (and d!15357 res!37368) b!69752))

(assert (=> b!69750 m!64329))

(assert (=> b!69750 m!64507))

(declare-fun m!66205 () Bool)

(assert (=> b!69749 m!66205))

(assert (=> b!69749 m!66205))

(declare-fun m!66207 () Bool)

(assert (=> b!69749 m!66207))

(assert (=> d!15357 m!64329))

(declare-fun m!66209 () Bool)

(assert (=> d!15357 m!66209))

(assert (=> b!69752 m!64987))

(assert (=> b!69752 m!64963))

(assert (=> b!69752 m!64583))

(assert (=> d!14911 d!15357))

(assert (=> d!14911 d!14859))

(assert (=> d!14911 d!14831))

(declare-fun d!15359 () Bool)

(assert (=> d!15359 (= (arrayCountValidKeys!0 lt!30292 (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (bvadd (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!30665 () Unit!1909)

(declare-fun choose!2 (array!3837 (_ BitVec 32)) Unit!1909)

(assert (=> d!15359 (= lt!30665 (choose!2 lt!30292 (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))))))

(declare-fun e!45645 () Bool)

(assert (=> d!15359 e!45645))

(declare-fun res!37375 () Bool)

(assert (=> d!15359 (=> (not res!37375) (not e!45645))))

(assert (=> d!15359 (= res!37375 (and (bvsge (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000000) (bvslt (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (size!2068 lt!30292))))))

(assert (=> d!15359 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!30292 (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))) lt!30665)))

(declare-fun b!69757 () Bool)

(declare-fun res!37376 () Bool)

(assert (=> b!69757 (=> (not res!37376) (not e!45645))))

(assert (=> b!69757 (= res!37376 (validKeyInArray!0 (select (arr!1832 lt!30292) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)))))))

(declare-fun b!69758 () Bool)

(assert (=> b!69758 (= e!45645 (bvslt (size!2068 lt!30292) #b01111111111111111111111111111111))))

(assert (= (and d!15359 res!37375) b!69757))

(assert (= (and b!69757 res!37376) b!69758))

(assert (=> d!15359 m!64981))

(declare-fun m!66211 () Bool)

(assert (=> d!15359 m!66211))

(declare-fun m!66213 () Bool)

(assert (=> b!69757 m!66213))

(assert (=> b!69757 m!66213))

(declare-fun m!66215 () Bool)

(assert (=> b!69757 m!66215))

(assert (=> d!14911 d!15359))

(assert (=> d!14911 d!14981))

(declare-fun d!15361 () Bool)

(declare-fun e!45647 () Bool)

(assert (=> d!15361 e!45647))

(declare-fun res!37377 () Bool)

(assert (=> d!15361 (=> res!37377 e!45647)))

(declare-fun lt!30669 () Bool)

(assert (=> d!15361 (= res!37377 (not lt!30669))))

(declare-fun lt!30668 () Bool)

(assert (=> d!15361 (= lt!30669 lt!30668)))

(declare-fun lt!30666 () Unit!1909)

(declare-fun e!45646 () Unit!1909)

(assert (=> d!15361 (= lt!30666 e!45646)))

(declare-fun c!10029 () Bool)

(assert (=> d!15361 (= c!10029 lt!30668)))

(assert (=> d!15361 (= lt!30668 (containsKey!135 (toList!708 (getCurrentListMap!406 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)))))))

(assert (=> d!15361 (= (contains!710 (getCurrentListMap!406 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)))) lt!30669)))

(declare-fun b!69759 () Bool)

(declare-fun lt!30667 () Unit!1909)

(assert (=> b!69759 (= e!45646 lt!30667)))

(assert (=> b!69759 (= lt!30667 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (getCurrentListMap!406 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)))))))

(assert (=> b!69759 (isDefined!84 (getValueByKey!132 (toList!708 (getCurrentListMap!406 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)))))))

(declare-fun b!69760 () Bool)

(declare-fun Unit!1956 () Unit!1909)

(assert (=> b!69760 (= e!45646 Unit!1956)))

(declare-fun b!69761 () Bool)

(assert (=> b!69761 (= e!45647 (isDefined!84 (getValueByKey!132 (toList!708 (getCurrentListMap!406 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))))))))

(assert (= (and d!15361 c!10029) b!69759))

(assert (= (and d!15361 (not c!10029)) b!69760))

(assert (= (and d!15361 (not res!37377)) b!69761))

(assert (=> d!15361 m!64955))

(declare-fun m!66217 () Bool)

(assert (=> d!15361 m!66217))

(assert (=> b!69759 m!64955))

(declare-fun m!66219 () Bool)

(assert (=> b!69759 m!66219))

(assert (=> b!69759 m!64955))

(declare-fun m!66221 () Bool)

(assert (=> b!69759 m!66221))

(assert (=> b!69759 m!66221))

(declare-fun m!66223 () Bool)

(assert (=> b!69759 m!66223))

(assert (=> b!69761 m!64955))

(assert (=> b!69761 m!66221))

(assert (=> b!69761 m!66221))

(assert (=> b!69761 m!66223))

(assert (=> d!14911 d!15361))

(assert (=> d!14911 d!14993))

(declare-fun b!69762 () Bool)

(declare-fun e!45650 () Bool)

(declare-fun call!5948 () Bool)

(assert (=> b!69762 (= e!45650 call!5948)))

(declare-fun b!69763 () Bool)

(declare-fun e!45648 () Bool)

(declare-fun e!45649 () Bool)

(assert (=> b!69763 (= e!45648 e!45649)))

(declare-fun c!10030 () Bool)

(assert (=> b!69763 (= c!10030 (validKeyInArray!0 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!15363 () Bool)

(declare-fun res!37379 () Bool)

(assert (=> d!15363 (=> res!37379 e!45648)))

(assert (=> d!15363 (= res!37379 (bvsge #b00000000000000000000000000000000 (size!2068 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))))

(assert (=> d!15363 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (mask!6112 newMap!16)) e!45648)))

(declare-fun bm!5945 () Bool)

(assert (=> bm!5945 (= call!5948 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (mask!6112 newMap!16)))))

(declare-fun b!69764 () Bool)

(assert (=> b!69764 (= e!45649 call!5948)))

(declare-fun b!69765 () Bool)

(assert (=> b!69765 (= e!45649 e!45650)))

(declare-fun lt!30671 () (_ BitVec 64))

(assert (=> b!69765 (= lt!30671 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30672 () Unit!1909)

(assert (=> b!69765 (= lt!30672 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) lt!30671 #b00000000000000000000000000000000))))

(assert (=> b!69765 (arrayContainsKey!0 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) lt!30671 #b00000000000000000000000000000000)))

(declare-fun lt!30670 () Unit!1909)

(assert (=> b!69765 (= lt!30670 lt!30672)))

(declare-fun res!37378 () Bool)

(assert (=> b!69765 (= res!37378 (= (seekEntryOrOpen!0 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000) (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (mask!6112 newMap!16)) (Found!228 #b00000000000000000000000000000000)))))

(assert (=> b!69765 (=> (not res!37378) (not e!45650))))

(assert (= (and d!15363 (not res!37379)) b!69763))

(assert (= (and b!69763 c!10030) b!69765))

(assert (= (and b!69763 (not c!10030)) b!69764))

(assert (= (and b!69765 res!37378) b!69762))

(assert (= (or b!69762 b!69764) bm!5945))

(declare-fun m!66225 () Bool)

(assert (=> b!69763 m!66225))

(assert (=> b!69763 m!66225))

(declare-fun m!66227 () Bool)

(assert (=> b!69763 m!66227))

(declare-fun m!66229 () Bool)

(assert (=> bm!5945 m!66229))

(assert (=> b!69765 m!66225))

(declare-fun m!66231 () Bool)

(assert (=> b!69765 m!66231))

(declare-fun m!66233 () Bool)

(assert (=> b!69765 m!66233))

(assert (=> b!69765 m!66225))

(declare-fun m!66235 () Bool)

(assert (=> b!69765 m!66235))

(assert (=> d!14911 d!15363))

(declare-fun b!69766 () Bool)

(declare-fun e!45651 () Bool)

(declare-fun lt!30687 () ListLongMap!1385)

(assert (=> b!69766 (= e!45651 (= (apply!73 lt!30687 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!69767 () Bool)

(declare-fun e!45653 () Unit!1909)

(declare-fun lt!30684 () Unit!1909)

(assert (=> b!69767 (= e!45653 lt!30684)))

(declare-fun lt!30674 () ListLongMap!1385)

(assert (=> b!69767 (= lt!30674 (getCurrentListMapNoExtraKeys!53 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30690 () (_ BitVec 64))

(assert (=> b!69767 (= lt!30690 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30679 () (_ BitVec 64))

(assert (=> b!69767 (= lt!30679 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30678 () Unit!1909)

(assert (=> b!69767 (= lt!30678 (addStillContains!49 lt!30674 lt!30690 (zeroValue!2073 newMap!16) lt!30679))))

(assert (=> b!69767 (contains!710 (+!88 lt!30674 (tuple2!2093 lt!30690 (zeroValue!2073 newMap!16))) lt!30679)))

(declare-fun lt!30688 () Unit!1909)

(assert (=> b!69767 (= lt!30688 lt!30678)))

(declare-fun lt!30685 () ListLongMap!1385)

(assert (=> b!69767 (= lt!30685 (getCurrentListMapNoExtraKeys!53 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30675 () (_ BitVec 64))

(assert (=> b!69767 (= lt!30675 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30694 () (_ BitVec 64))

(assert (=> b!69767 (= lt!30694 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30682 () Unit!1909)

(assert (=> b!69767 (= lt!30682 (addApplyDifferent!49 lt!30685 lt!30675 (minValue!2073 newMap!16) lt!30694))))

(assert (=> b!69767 (= (apply!73 (+!88 lt!30685 (tuple2!2093 lt!30675 (minValue!2073 newMap!16))) lt!30694) (apply!73 lt!30685 lt!30694))))

(declare-fun lt!30676 () Unit!1909)

(assert (=> b!69767 (= lt!30676 lt!30682)))

(declare-fun lt!30692 () ListLongMap!1385)

(assert (=> b!69767 (= lt!30692 (getCurrentListMapNoExtraKeys!53 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30693 () (_ BitVec 64))

(assert (=> b!69767 (= lt!30693 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30686 () (_ BitVec 64))

(assert (=> b!69767 (= lt!30686 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30691 () Unit!1909)

(assert (=> b!69767 (= lt!30691 (addApplyDifferent!49 lt!30692 lt!30693 (zeroValue!2073 newMap!16) lt!30686))))

(assert (=> b!69767 (= (apply!73 (+!88 lt!30692 (tuple2!2093 lt!30693 (zeroValue!2073 newMap!16))) lt!30686) (apply!73 lt!30692 lt!30686))))

(declare-fun lt!30677 () Unit!1909)

(assert (=> b!69767 (= lt!30677 lt!30691)))

(declare-fun lt!30689 () ListLongMap!1385)

(assert (=> b!69767 (= lt!30689 (getCurrentListMapNoExtraKeys!53 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30681 () (_ BitVec 64))

(assert (=> b!69767 (= lt!30681 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30673 () (_ BitVec 64))

(assert (=> b!69767 (= lt!30673 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!69767 (= lt!30684 (addApplyDifferent!49 lt!30689 lt!30681 (minValue!2073 newMap!16) lt!30673))))

(assert (=> b!69767 (= (apply!73 (+!88 lt!30689 (tuple2!2093 lt!30681 (minValue!2073 newMap!16))) lt!30673) (apply!73 lt!30689 lt!30673))))

(declare-fun bm!5946 () Bool)

(declare-fun call!5954 () ListLongMap!1385)

(declare-fun call!5955 () ListLongMap!1385)

(assert (=> bm!5946 (= call!5954 call!5955)))

(declare-fun b!69768 () Bool)

(declare-fun e!45657 () Bool)

(assert (=> b!69768 (= e!45657 (= (apply!73 lt!30687 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69768 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))))))

(assert (=> b!69768 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun call!5953 () ListLongMap!1385)

(declare-fun bm!5947 () Bool)

(assert (=> bm!5947 (= call!5953 (getCurrentListMapNoExtraKeys!53 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69769 () Bool)

(declare-fun e!45655 () Bool)

(assert (=> b!69769 (= e!45655 e!45657)))

(declare-fun res!37388 () Bool)

(assert (=> b!69769 (=> (not res!37388) (not e!45657))))

(assert (=> b!69769 (= res!37388 (contains!710 lt!30687 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!69769 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun b!69770 () Bool)

(declare-fun e!45661 () ListLongMap!1385)

(assert (=> b!69770 (= e!45661 call!5954)))

(declare-fun b!69771 () Bool)

(declare-fun e!45656 () ListLongMap!1385)

(declare-fun call!5951 () ListLongMap!1385)

(assert (=> b!69771 (= e!45656 call!5951)))

(declare-fun b!69772 () Bool)

(declare-fun res!37383 () Bool)

(declare-fun e!45659 () Bool)

(assert (=> b!69772 (=> (not res!37383) (not e!45659))))

(declare-fun e!45654 () Bool)

(assert (=> b!69772 (= res!37383 e!45654)))

(declare-fun c!10033 () Bool)

(assert (=> b!69772 (= c!10033 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!15365 () Bool)

(assert (=> d!15365 e!45659))

(declare-fun res!37387 () Bool)

(assert (=> d!15365 (=> (not res!37387) (not e!45659))))

(assert (=> d!15365 (= res!37387 (or (bvsge #b00000000000000000000000000000000 (size!2068 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))))))

(declare-fun lt!30680 () ListLongMap!1385)

(assert (=> d!15365 (= lt!30687 lt!30680)))

(declare-fun lt!30683 () Unit!1909)

(assert (=> d!15365 (= lt!30683 e!45653)))

(declare-fun c!10035 () Bool)

(declare-fun e!45658 () Bool)

(assert (=> d!15365 (= c!10035 e!45658)))

(declare-fun res!37385 () Bool)

(assert (=> d!15365 (=> (not res!37385) (not e!45658))))

(assert (=> d!15365 (= res!37385 (bvslt #b00000000000000000000000000000000 (size!2068 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun e!45662 () ListLongMap!1385)

(assert (=> d!15365 (= lt!30680 e!45662)))

(declare-fun c!10031 () Bool)

(assert (=> d!15365 (= c!10031 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15365 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15365 (= (getCurrentListMap!406 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30687)))

(declare-fun bm!5948 () Bool)

(declare-fun call!5952 () Bool)

(assert (=> bm!5948 (= call!5952 (contains!710 lt!30687 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5949 () Bool)

(declare-fun call!5949 () Bool)

(assert (=> bm!5949 (= call!5949 (contains!710 lt!30687 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69773 () Bool)

(declare-fun e!45660 () Bool)

(assert (=> b!69773 (= e!45660 e!45651)))

(declare-fun res!37382 () Bool)

(assert (=> b!69773 (= res!37382 call!5952)))

(assert (=> b!69773 (=> (not res!37382) (not e!45651))))

(declare-fun bm!5950 () Bool)

(declare-fun call!5950 () ListLongMap!1385)

(assert (=> bm!5950 (= call!5951 call!5950)))

(declare-fun e!45663 () Bool)

(declare-fun b!69774 () Bool)

(assert (=> b!69774 (= e!45663 (validKeyInArray!0 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!69775 () Bool)

(assert (=> b!69775 (= e!45662 e!45661)))

(declare-fun c!10034 () Bool)

(assert (=> b!69775 (= c!10034 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69776 () Bool)

(assert (=> b!69776 (= e!45662 (+!88 call!5955 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69777 () Bool)

(assert (=> b!69777 (= e!45658 (validKeyInArray!0 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!69778 () Bool)

(declare-fun e!45652 () Bool)

(assert (=> b!69778 (= e!45652 (= (apply!73 lt!30687 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun b!69779 () Bool)

(assert (=> b!69779 (= e!45659 e!45660)))

(declare-fun c!10036 () Bool)

(assert (=> b!69779 (= c!10036 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69780 () Bool)

(declare-fun c!10032 () Bool)

(assert (=> b!69780 (= c!10032 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69780 (= e!45661 e!45656)))

(declare-fun bm!5951 () Bool)

(assert (=> bm!5951 (= call!5955 (+!88 (ite c!10031 call!5953 (ite c!10034 call!5950 call!5951)) (ite (or c!10031 c!10034) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!69781 () Bool)

(assert (=> b!69781 (= e!45660 (not call!5952))))

(declare-fun b!69782 () Bool)

(assert (=> b!69782 (= e!45654 (not call!5949))))

(declare-fun b!69783 () Bool)

(declare-fun res!37386 () Bool)

(assert (=> b!69783 (=> (not res!37386) (not e!45659))))

(assert (=> b!69783 (= res!37386 e!45655)))

(declare-fun res!37384 () Bool)

(assert (=> b!69783 (=> res!37384 e!45655)))

(assert (=> b!69783 (= res!37384 (not e!45663))))

(declare-fun res!37381 () Bool)

(assert (=> b!69783 (=> (not res!37381) (not e!45663))))

(assert (=> b!69783 (= res!37381 (bvslt #b00000000000000000000000000000000 (size!2068 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun b!69784 () Bool)

(assert (=> b!69784 (= e!45654 e!45652)))

(declare-fun res!37380 () Bool)

(assert (=> b!69784 (= res!37380 call!5949)))

(assert (=> b!69784 (=> (not res!37380) (not e!45652))))

(declare-fun b!69785 () Bool)

(assert (=> b!69785 (= e!45656 call!5954)))

(declare-fun bm!5952 () Bool)

(assert (=> bm!5952 (= call!5950 call!5953)))

(declare-fun b!69786 () Bool)

(declare-fun Unit!1957 () Unit!1909)

(assert (=> b!69786 (= e!45653 Unit!1957)))

(assert (= (and d!15365 c!10031) b!69776))

(assert (= (and d!15365 (not c!10031)) b!69775))

(assert (= (and b!69775 c!10034) b!69770))

(assert (= (and b!69775 (not c!10034)) b!69780))

(assert (= (and b!69780 c!10032) b!69785))

(assert (= (and b!69780 (not c!10032)) b!69771))

(assert (= (or b!69785 b!69771) bm!5950))

(assert (= (or b!69770 bm!5950) bm!5952))

(assert (= (or b!69770 b!69785) bm!5946))

(assert (= (or b!69776 bm!5952) bm!5947))

(assert (= (or b!69776 bm!5946) bm!5951))

(assert (= (and d!15365 res!37385) b!69777))

(assert (= (and d!15365 c!10035) b!69767))

(assert (= (and d!15365 (not c!10035)) b!69786))

(assert (= (and d!15365 res!37387) b!69783))

(assert (= (and b!69783 res!37381) b!69774))

(assert (= (and b!69783 (not res!37384)) b!69769))

(assert (= (and b!69769 res!37388) b!69768))

(assert (= (and b!69783 res!37386) b!69772))

(assert (= (and b!69772 c!10033) b!69784))

(assert (= (and b!69772 (not c!10033)) b!69782))

(assert (= (and b!69784 res!37380) b!69778))

(assert (= (or b!69784 b!69782) bm!5949))

(assert (= (and b!69772 res!37383) b!69779))

(assert (= (and b!69779 c!10036) b!69773))

(assert (= (and b!69779 (not c!10036)) b!69781))

(assert (= (and b!69773 res!37382) b!69766))

(assert (= (or b!69773 b!69781) bm!5948))

(declare-fun b_lambda!3121 () Bool)

(assert (=> (not b_lambda!3121) (not b!69768)))

(assert (=> b!69768 t!4967))

(declare-fun b_and!4277 () Bool)

(assert (= b_and!4273 (and (=> t!4967 result!2615) b_and!4277)))

(assert (=> b!69768 t!4969))

(declare-fun b_and!4279 () Bool)

(assert (= b_and!4275 (and (=> t!4969 result!2617) b_and!4279)))

(assert (=> b!69774 m!66225))

(assert (=> b!69774 m!66225))

(assert (=> b!69774 m!66227))

(declare-fun m!66237 () Bool)

(assert (=> b!69778 m!66237))

(declare-fun m!66239 () Bool)

(assert (=> b!69776 m!66239))

(declare-fun m!66241 () Bool)

(assert (=> b!69768 m!66241))

(assert (=> b!69768 m!66225))

(assert (=> b!69768 m!66225))

(declare-fun m!66243 () Bool)

(assert (=> b!69768 m!66243))

(assert (=> b!69768 m!66241))

(assert (=> b!69768 m!64757))

(declare-fun m!66245 () Bool)

(assert (=> b!69768 m!66245))

(assert (=> b!69768 m!64757))

(declare-fun m!66247 () Bool)

(assert (=> bm!5949 m!66247))

(assert (=> d!15365 m!64725))

(declare-fun m!66249 () Bool)

(assert (=> b!69767 m!66249))

(declare-fun m!66251 () Bool)

(assert (=> b!69767 m!66251))

(declare-fun m!66253 () Bool)

(assert (=> b!69767 m!66253))

(declare-fun m!66255 () Bool)

(assert (=> b!69767 m!66255))

(declare-fun m!66257 () Bool)

(assert (=> b!69767 m!66257))

(declare-fun m!66259 () Bool)

(assert (=> b!69767 m!66259))

(declare-fun m!66261 () Bool)

(assert (=> b!69767 m!66261))

(assert (=> b!69767 m!66253))

(declare-fun m!66263 () Bool)

(assert (=> b!69767 m!66263))

(assert (=> b!69767 m!66255))

(declare-fun m!66265 () Bool)

(assert (=> b!69767 m!66265))

(declare-fun m!66267 () Bool)

(assert (=> b!69767 m!66267))

(declare-fun m!66269 () Bool)

(assert (=> b!69767 m!66269))

(assert (=> b!69767 m!66249))

(declare-fun m!66271 () Bool)

(assert (=> b!69767 m!66271))

(declare-fun m!66273 () Bool)

(assert (=> b!69767 m!66273))

(assert (=> b!69767 m!66265))

(declare-fun m!66275 () Bool)

(assert (=> b!69767 m!66275))

(assert (=> b!69767 m!66225))

(declare-fun m!66277 () Bool)

(assert (=> b!69767 m!66277))

(declare-fun m!66279 () Bool)

(assert (=> b!69767 m!66279))

(assert (=> bm!5947 m!66275))

(assert (=> b!69769 m!66225))

(assert (=> b!69769 m!66225))

(declare-fun m!66281 () Bool)

(assert (=> b!69769 m!66281))

(assert (=> b!69777 m!66225))

(assert (=> b!69777 m!66225))

(assert (=> b!69777 m!66227))

(declare-fun m!66283 () Bool)

(assert (=> bm!5951 m!66283))

(declare-fun m!66285 () Bool)

(assert (=> b!69766 m!66285))

(declare-fun m!66287 () Bool)

(assert (=> bm!5948 m!66287))

(assert (=> d!14911 d!15365))

(declare-fun d!15367 () Bool)

(declare-fun res!37389 () Bool)

(declare-fun e!45664 () Bool)

(assert (=> d!15367 (=> res!37389 e!45664)))

(assert (=> d!15367 (= res!37389 (= (select (arr!1832 lt!30296) #b00000000000000000000000000000000) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15367 (= (arrayContainsKey!0 lt!30296 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000) e!45664)))

(declare-fun b!69787 () Bool)

(declare-fun e!45665 () Bool)

(assert (=> b!69787 (= e!45664 e!45665)))

(declare-fun res!37390 () Bool)

(assert (=> b!69787 (=> (not res!37390) (not e!45665))))

(assert (=> b!69787 (= res!37390 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 lt!30296)))))

(declare-fun b!69788 () Bool)

(assert (=> b!69788 (= e!45665 (arrayContainsKey!0 lt!30296 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!15367 (not res!37389)) b!69787))

(assert (= (and b!69787 res!37390) b!69788))

(declare-fun m!66289 () Bool)

(assert (=> d!15367 m!66289))

(assert (=> b!69788 m!64329))

(declare-fun m!66291 () Bool)

(assert (=> b!69788 m!66291))

(assert (=> d!14911 d!15367))

(declare-fun d!15369 () Bool)

(declare-fun e!45666 () Bool)

(assert (=> d!15369 e!45666))

(declare-fun res!37391 () Bool)

(assert (=> d!15369 (=> (not res!37391) (not e!45666))))

(declare-fun lt!30697 () ListLongMap!1385)

(assert (=> d!15369 (= res!37391 (contains!710 lt!30697 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun lt!30695 () List!1459)

(assert (=> d!15369 (= lt!30697 (ListLongMap!1386 lt!30695))))

(declare-fun lt!30698 () Unit!1909)

(declare-fun lt!30696 () Unit!1909)

(assert (=> d!15369 (= lt!30698 lt!30696)))

(assert (=> d!15369 (= (getValueByKey!132 lt!30695 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15369 (= lt!30696 (lemmaContainsTupThenGetReturnValue!49 lt!30695 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15369 (= lt!30695 (insertStrictlySorted!52 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15369 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) lt!30697)))

(declare-fun b!69789 () Bool)

(declare-fun res!37392 () Bool)

(assert (=> b!69789 (=> (not res!37392) (not e!45666))))

(assert (=> b!69789 (= res!37392 (= (getValueByKey!132 (toList!708 lt!30697) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!69790 () Bool)

(assert (=> b!69790 (= e!45666 (contains!713 (toList!708 lt!30697) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(assert (= (and d!15369 res!37391) b!69789))

(assert (= (and b!69789 res!37392) b!69790))

(declare-fun m!66293 () Bool)

(assert (=> d!15369 m!66293))

(declare-fun m!66295 () Bool)

(assert (=> d!15369 m!66295))

(declare-fun m!66297 () Bool)

(assert (=> d!15369 m!66297))

(declare-fun m!66299 () Bool)

(assert (=> d!15369 m!66299))

(declare-fun m!66301 () Bool)

(assert (=> b!69789 m!66301))

(declare-fun m!66303 () Bool)

(assert (=> b!69790 m!66303))

(assert (=> d!14911 d!15369))

(declare-fun d!15371 () Bool)

(assert (=> d!15371 (arrayContainsKey!0 lt!30296 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!30699 () Unit!1909)

(assert (=> d!15371 (= lt!30699 (choose!13 lt!30296 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))))))

(assert (=> d!15371 (bvsge (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000000)))

(assert (=> d!15371 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!30296 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008))) lt!30699)))

(declare-fun bs!3016 () Bool)

(assert (= bs!3016 d!15371))

(assert (=> bs!3016 m!64329))

(assert (=> bs!3016 m!64961))

(assert (=> bs!3016 m!64329))

(declare-fun m!66305 () Bool)

(assert (=> bs!3016 m!66305))

(assert (=> d!14911 d!15371))

(declare-fun b!69791 () Bool)

(declare-fun e!45667 () (_ BitVec 32))

(declare-fun call!5956 () (_ BitVec 32))

(assert (=> b!69791 (= e!45667 call!5956)))

(declare-fun b!69792 () Bool)

(assert (=> b!69792 (= e!45667 (bvadd #b00000000000000000000000000000001 call!5956))))

(declare-fun lt!30700 () (_ BitVec 32))

(declare-fun d!15373 () Bool)

(assert (=> d!15373 (and (bvsge lt!30700 #b00000000000000000000000000000000) (bvsle lt!30700 (bvsub (size!2068 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!45668 () (_ BitVec 32))

(assert (=> d!15373 (= lt!30700 e!45668)))

(declare-fun c!10037 () Bool)

(assert (=> d!15373 (= c!10037 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!15373 (and (bvsle #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2068 (_keys!3811 newMap!16)) (size!2068 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))))))))

(assert (=> d!15373 (= (arrayCountValidKeys!0 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) lt!30700)))

(declare-fun b!69793 () Bool)

(assert (=> b!69793 (= e!45668 e!45667)))

(declare-fun c!10038 () Bool)

(assert (=> b!69793 (= c!10038 (validKeyInArray!0 (select (arr!1832 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!5953 () Bool)

(assert (=> bm!5953 (= call!5956 (arrayCountValidKeys!0 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69794 () Bool)

(assert (=> b!69794 (= e!45668 #b00000000000000000000000000000000)))

(assert (= (and d!15373 c!10037) b!69794))

(assert (= (and d!15373 (not c!10037)) b!69793))

(assert (= (and b!69793 c!10038) b!69792))

(assert (= (and b!69793 (not c!10038)) b!69791))

(assert (= (or b!69792 b!69791) bm!5953))

(assert (=> b!69793 m!66225))

(assert (=> b!69793 m!66225))

(assert (=> b!69793 m!66227))

(declare-fun m!66307 () Bool)

(assert (=> bm!5953 m!66307))

(assert (=> d!14911 d!15373))

(declare-fun b!69795 () Bool)

(declare-fun e!45669 () (_ BitVec 32))

(declare-fun call!5957 () (_ BitVec 32))

(assert (=> b!69795 (= e!45669 call!5957)))

(declare-fun b!69796 () Bool)

(assert (=> b!69796 (= e!45669 (bvadd #b00000000000000000000000000000001 call!5957))))

(declare-fun d!15375 () Bool)

(declare-fun lt!30701 () (_ BitVec 32))

(assert (=> d!15375 (and (bvsge lt!30701 #b00000000000000000000000000000000) (bvsle lt!30701 (bvsub (size!2068 lt!30292) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)))))))

(declare-fun e!45670 () (_ BitVec 32))

(assert (=> d!15375 (= lt!30701 e!45670)))

(declare-fun c!10039 () Bool)

(assert (=> d!15375 (= c!10039 (bvsge (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (bvadd (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000001)))))

(assert (=> d!15375 (and (bvsle (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (bvadd (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000001)) (bvsge (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000001) (size!2068 lt!30292)))))

(assert (=> d!15375 (= (arrayCountValidKeys!0 lt!30292 (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (bvadd (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000001)) lt!30701)))

(declare-fun b!69797 () Bool)

(assert (=> b!69797 (= e!45670 e!45669)))

(declare-fun c!10040 () Bool)

(assert (=> b!69797 (= c!10040 (validKeyInArray!0 (select (arr!1832 lt!30292) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)))))))

(declare-fun bm!5954 () Bool)

(assert (=> bm!5954 (= call!5957 (arrayCountValidKeys!0 lt!30292 (bvadd (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000001) (bvadd (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000001)))))

(declare-fun b!69798 () Bool)

(assert (=> b!69798 (= e!45670 #b00000000000000000000000000000000)))

(assert (= (and d!15375 c!10039) b!69798))

(assert (= (and d!15375 (not c!10039)) b!69797))

(assert (= (and b!69797 c!10040) b!69796))

(assert (= (and b!69797 (not c!10040)) b!69795))

(assert (= (or b!69796 b!69795) bm!5954))

(assert (=> b!69797 m!66213))

(assert (=> b!69797 m!66213))

(assert (=> b!69797 m!66215))

(declare-fun m!66309 () Bool)

(assert (=> bm!5954 m!66309))

(assert (=> d!14911 d!15375))

(declare-fun d!15377 () Bool)

(declare-fun e!45673 () Bool)

(assert (=> d!15377 e!45673))

(declare-fun res!37395 () Bool)

(assert (=> d!15377 (=> (not res!37395) (not e!45673))))

(assert (=> d!15377 (= res!37395 (and (bvsge (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) #b00000000000000000000000000000000) (bvslt (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (size!2068 (_keys!3811 newMap!16)))))))

(declare-fun lt!30704 () Unit!1909)

(declare-fun choose!41 (array!3837 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1460) Unit!1909)

(assert (=> d!15377 (= lt!30704 (choose!41 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) lt!30295 lt!30303))))

(assert (=> d!15377 (bvslt (size!2068 (_keys!3811 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!15377 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) lt!30295 lt!30303) lt!30704)))

(declare-fun b!69801 () Bool)

(assert (=> b!69801 (= e!45673 (arrayNoDuplicates!0 (array!3838 (store (arr!1832 (_keys!3811 newMap!16)) (ite c!9729 (index!3044 lt!30008) (index!3041 lt!30008)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2068 (_keys!3811 newMap!16))) lt!30295 lt!30303))))

(assert (= (and d!15377 res!37395) b!69801))

(assert (=> d!15377 m!64329))

(declare-fun m!66311 () Bool)

(assert (=> d!15377 m!66311))

(assert (=> b!69801 m!64987))

(assert (=> b!69801 m!64973))

(assert (=> d!14911 d!15377))

(assert (=> d!14911 d!14861))

(declare-fun b!69802 () Bool)

(declare-fun e!45674 () Bool)

(declare-fun lt!30719 () ListLongMap!1385)

(assert (=> b!69802 (= e!45674 (= (apply!73 lt!30719 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!69803 () Bool)

(declare-fun e!45676 () Unit!1909)

(declare-fun lt!30716 () Unit!1909)

(assert (=> b!69803 (= e!45676 lt!30716)))

(declare-fun lt!30706 () ListLongMap!1385)

(assert (=> b!69803 (= lt!30706 (getCurrentListMapNoExtraKeys!53 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30722 () (_ BitVec 64))

(assert (=> b!69803 (= lt!30722 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30711 () (_ BitVec 64))

(assert (=> b!69803 (= lt!30711 (select (arr!1832 lt!30297) #b00000000000000000000000000000000))))

(declare-fun lt!30710 () Unit!1909)

(assert (=> b!69803 (= lt!30710 (addStillContains!49 lt!30706 lt!30722 (zeroValue!2073 newMap!16) lt!30711))))

(assert (=> b!69803 (contains!710 (+!88 lt!30706 (tuple2!2093 lt!30722 (zeroValue!2073 newMap!16))) lt!30711)))

(declare-fun lt!30720 () Unit!1909)

(assert (=> b!69803 (= lt!30720 lt!30710)))

(declare-fun lt!30717 () ListLongMap!1385)

(assert (=> b!69803 (= lt!30717 (getCurrentListMapNoExtraKeys!53 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30707 () (_ BitVec 64))

(assert (=> b!69803 (= lt!30707 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30726 () (_ BitVec 64))

(assert (=> b!69803 (= lt!30726 (select (arr!1832 lt!30297) #b00000000000000000000000000000000))))

(declare-fun lt!30714 () Unit!1909)

(assert (=> b!69803 (= lt!30714 (addApplyDifferent!49 lt!30717 lt!30707 (minValue!2073 newMap!16) lt!30726))))

(assert (=> b!69803 (= (apply!73 (+!88 lt!30717 (tuple2!2093 lt!30707 (minValue!2073 newMap!16))) lt!30726) (apply!73 lt!30717 lt!30726))))

(declare-fun lt!30708 () Unit!1909)

(assert (=> b!69803 (= lt!30708 lt!30714)))

(declare-fun lt!30724 () ListLongMap!1385)

(assert (=> b!69803 (= lt!30724 (getCurrentListMapNoExtraKeys!53 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30725 () (_ BitVec 64))

(assert (=> b!69803 (= lt!30725 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30718 () (_ BitVec 64))

(assert (=> b!69803 (= lt!30718 (select (arr!1832 lt!30297) #b00000000000000000000000000000000))))

(declare-fun lt!30723 () Unit!1909)

(assert (=> b!69803 (= lt!30723 (addApplyDifferent!49 lt!30724 lt!30725 (zeroValue!2073 newMap!16) lt!30718))))

(assert (=> b!69803 (= (apply!73 (+!88 lt!30724 (tuple2!2093 lt!30725 (zeroValue!2073 newMap!16))) lt!30718) (apply!73 lt!30724 lt!30718))))

(declare-fun lt!30709 () Unit!1909)

(assert (=> b!69803 (= lt!30709 lt!30723)))

(declare-fun lt!30721 () ListLongMap!1385)

(assert (=> b!69803 (= lt!30721 (getCurrentListMapNoExtraKeys!53 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30713 () (_ BitVec 64))

(assert (=> b!69803 (= lt!30713 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30705 () (_ BitVec 64))

(assert (=> b!69803 (= lt!30705 (select (arr!1832 lt!30297) #b00000000000000000000000000000000))))

(assert (=> b!69803 (= lt!30716 (addApplyDifferent!49 lt!30721 lt!30713 (minValue!2073 newMap!16) lt!30705))))

(assert (=> b!69803 (= (apply!73 (+!88 lt!30721 (tuple2!2093 lt!30713 (minValue!2073 newMap!16))) lt!30705) (apply!73 lt!30721 lt!30705))))

(declare-fun bm!5955 () Bool)

(declare-fun call!5963 () ListLongMap!1385)

(declare-fun call!5964 () ListLongMap!1385)

(assert (=> bm!5955 (= call!5963 call!5964)))

(declare-fun e!45680 () Bool)

(declare-fun b!69804 () Bool)

(assert (=> b!69804 (= e!45680 (= (apply!73 lt!30719 (select (arr!1832 lt!30297) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 lt!30298) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69804 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 lt!30298)))))

(assert (=> b!69804 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 lt!30297)))))

(declare-fun bm!5956 () Bool)

(declare-fun call!5962 () ListLongMap!1385)

(assert (=> bm!5956 (= call!5962 (getCurrentListMapNoExtraKeys!53 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69805 () Bool)

(declare-fun e!45678 () Bool)

(assert (=> b!69805 (= e!45678 e!45680)))

(declare-fun res!37404 () Bool)

(assert (=> b!69805 (=> (not res!37404) (not e!45680))))

(assert (=> b!69805 (= res!37404 (contains!710 lt!30719 (select (arr!1832 lt!30297) #b00000000000000000000000000000000)))))

(assert (=> b!69805 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 lt!30297)))))

(declare-fun b!69806 () Bool)

(declare-fun e!45684 () ListLongMap!1385)

(assert (=> b!69806 (= e!45684 call!5963)))

(declare-fun b!69807 () Bool)

(declare-fun e!45679 () ListLongMap!1385)

(declare-fun call!5960 () ListLongMap!1385)

(assert (=> b!69807 (= e!45679 call!5960)))

(declare-fun b!69808 () Bool)

(declare-fun res!37399 () Bool)

(declare-fun e!45682 () Bool)

(assert (=> b!69808 (=> (not res!37399) (not e!45682))))

(declare-fun e!45677 () Bool)

(assert (=> b!69808 (= res!37399 e!45677)))

(declare-fun c!10043 () Bool)

(assert (=> b!69808 (= c!10043 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!15379 () Bool)

(assert (=> d!15379 e!45682))

(declare-fun res!37403 () Bool)

(assert (=> d!15379 (=> (not res!37403) (not e!45682))))

(assert (=> d!15379 (= res!37403 (or (bvsge #b00000000000000000000000000000000 (size!2068 lt!30297)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 lt!30297)))))))

(declare-fun lt!30712 () ListLongMap!1385)

(assert (=> d!15379 (= lt!30719 lt!30712)))

(declare-fun lt!30715 () Unit!1909)

(assert (=> d!15379 (= lt!30715 e!45676)))

(declare-fun c!10045 () Bool)

(declare-fun e!45681 () Bool)

(assert (=> d!15379 (= c!10045 e!45681)))

(declare-fun res!37401 () Bool)

(assert (=> d!15379 (=> (not res!37401) (not e!45681))))

(assert (=> d!15379 (= res!37401 (bvslt #b00000000000000000000000000000000 (size!2068 lt!30297)))))

(declare-fun e!45685 () ListLongMap!1385)

(assert (=> d!15379 (= lt!30712 e!45685)))

(declare-fun c!10041 () Bool)

(assert (=> d!15379 (= c!10041 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15379 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15379 (= (getCurrentListMap!406 lt!30297 lt!30298 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30719)))

(declare-fun bm!5957 () Bool)

(declare-fun call!5961 () Bool)

(assert (=> bm!5957 (= call!5961 (contains!710 lt!30719 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5958 () Bool)

(declare-fun call!5958 () Bool)

(assert (=> bm!5958 (= call!5958 (contains!710 lt!30719 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69809 () Bool)

(declare-fun e!45683 () Bool)

(assert (=> b!69809 (= e!45683 e!45674)))

(declare-fun res!37398 () Bool)

(assert (=> b!69809 (= res!37398 call!5961)))

(assert (=> b!69809 (=> (not res!37398) (not e!45674))))

(declare-fun bm!5959 () Bool)

(declare-fun call!5959 () ListLongMap!1385)

(assert (=> bm!5959 (= call!5960 call!5959)))

(declare-fun b!69810 () Bool)

(declare-fun e!45686 () Bool)

(assert (=> b!69810 (= e!45686 (validKeyInArray!0 (select (arr!1832 lt!30297) #b00000000000000000000000000000000)))))

(declare-fun b!69811 () Bool)

(assert (=> b!69811 (= e!45685 e!45684)))

(declare-fun c!10044 () Bool)

(assert (=> b!69811 (= c!10044 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69812 () Bool)

(assert (=> b!69812 (= e!45685 (+!88 call!5964 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69813 () Bool)

(assert (=> b!69813 (= e!45681 (validKeyInArray!0 (select (arr!1832 lt!30297) #b00000000000000000000000000000000)))))

(declare-fun b!69814 () Bool)

(declare-fun e!45675 () Bool)

(assert (=> b!69814 (= e!45675 (= (apply!73 lt!30719 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun b!69815 () Bool)

(assert (=> b!69815 (= e!45682 e!45683)))

(declare-fun c!10046 () Bool)

(assert (=> b!69815 (= c!10046 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69816 () Bool)

(declare-fun c!10042 () Bool)

(assert (=> b!69816 (= c!10042 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69816 (= e!45684 e!45679)))

(declare-fun bm!5960 () Bool)

(assert (=> bm!5960 (= call!5964 (+!88 (ite c!10041 call!5962 (ite c!10044 call!5959 call!5960)) (ite (or c!10041 c!10044) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!69817 () Bool)

(assert (=> b!69817 (= e!45683 (not call!5961))))

(declare-fun b!69818 () Bool)

(assert (=> b!69818 (= e!45677 (not call!5958))))

(declare-fun b!69819 () Bool)

(declare-fun res!37402 () Bool)

(assert (=> b!69819 (=> (not res!37402) (not e!45682))))

(assert (=> b!69819 (= res!37402 e!45678)))

(declare-fun res!37400 () Bool)

(assert (=> b!69819 (=> res!37400 e!45678)))

(assert (=> b!69819 (= res!37400 (not e!45686))))

(declare-fun res!37397 () Bool)

(assert (=> b!69819 (=> (not res!37397) (not e!45686))))

(assert (=> b!69819 (= res!37397 (bvslt #b00000000000000000000000000000000 (size!2068 lt!30297)))))

(declare-fun b!69820 () Bool)

(assert (=> b!69820 (= e!45677 e!45675)))

(declare-fun res!37396 () Bool)

(assert (=> b!69820 (= res!37396 call!5958)))

(assert (=> b!69820 (=> (not res!37396) (not e!45675))))

(declare-fun b!69821 () Bool)

(assert (=> b!69821 (= e!45679 call!5963)))

(declare-fun bm!5961 () Bool)

(assert (=> bm!5961 (= call!5959 call!5962)))

(declare-fun b!69822 () Bool)

(declare-fun Unit!1958 () Unit!1909)

(assert (=> b!69822 (= e!45676 Unit!1958)))

(assert (= (and d!15379 c!10041) b!69812))

(assert (= (and d!15379 (not c!10041)) b!69811))

(assert (= (and b!69811 c!10044) b!69806))

(assert (= (and b!69811 (not c!10044)) b!69816))

(assert (= (and b!69816 c!10042) b!69821))

(assert (= (and b!69816 (not c!10042)) b!69807))

(assert (= (or b!69821 b!69807) bm!5959))

(assert (= (or b!69806 bm!5959) bm!5961))

(assert (= (or b!69806 b!69821) bm!5955))

(assert (= (or b!69812 bm!5961) bm!5956))

(assert (= (or b!69812 bm!5955) bm!5960))

(assert (= (and d!15379 res!37401) b!69813))

(assert (= (and d!15379 c!10045) b!69803))

(assert (= (and d!15379 (not c!10045)) b!69822))

(assert (= (and d!15379 res!37403) b!69819))

(assert (= (and b!69819 res!37397) b!69810))

(assert (= (and b!69819 (not res!37400)) b!69805))

(assert (= (and b!69805 res!37404) b!69804))

(assert (= (and b!69819 res!37402) b!69808))

(assert (= (and b!69808 c!10043) b!69820))

(assert (= (and b!69808 (not c!10043)) b!69818))

(assert (= (and b!69820 res!37396) b!69814))

(assert (= (or b!69820 b!69818) bm!5958))

(assert (= (and b!69808 res!37399) b!69815))

(assert (= (and b!69815 c!10046) b!69809))

(assert (= (and b!69815 (not c!10046)) b!69817))

(assert (= (and b!69809 res!37398) b!69802))

(assert (= (or b!69809 b!69817) bm!5957))

(declare-fun b_lambda!3123 () Bool)

(assert (=> (not b_lambda!3123) (not b!69804)))

(assert (=> b!69804 t!4967))

(declare-fun b_and!4281 () Bool)

(assert (= b_and!4277 (and (=> t!4967 result!2615) b_and!4281)))

(assert (=> b!69804 t!4969))

(declare-fun b_and!4283 () Bool)

(assert (= b_and!4279 (and (=> t!4969 result!2617) b_and!4283)))

(declare-fun m!66313 () Bool)

(assert (=> b!69810 m!66313))

(assert (=> b!69810 m!66313))

(declare-fun m!66315 () Bool)

(assert (=> b!69810 m!66315))

(declare-fun m!66317 () Bool)

(assert (=> b!69814 m!66317))

(declare-fun m!66319 () Bool)

(assert (=> b!69812 m!66319))

(declare-fun m!66321 () Bool)

(assert (=> b!69804 m!66321))

(assert (=> b!69804 m!66313))

(assert (=> b!69804 m!66313))

(declare-fun m!66323 () Bool)

(assert (=> b!69804 m!66323))

(assert (=> b!69804 m!66321))

(assert (=> b!69804 m!64757))

(declare-fun m!66325 () Bool)

(assert (=> b!69804 m!66325))

(assert (=> b!69804 m!64757))

(declare-fun m!66327 () Bool)

(assert (=> bm!5958 m!66327))

(assert (=> d!15379 m!64725))

(declare-fun m!66329 () Bool)

(assert (=> b!69803 m!66329))

(declare-fun m!66331 () Bool)

(assert (=> b!69803 m!66331))

(declare-fun m!66333 () Bool)

(assert (=> b!69803 m!66333))

(declare-fun m!66335 () Bool)

(assert (=> b!69803 m!66335))

(declare-fun m!66337 () Bool)

(assert (=> b!69803 m!66337))

(declare-fun m!66339 () Bool)

(assert (=> b!69803 m!66339))

(declare-fun m!66341 () Bool)

(assert (=> b!69803 m!66341))

(assert (=> b!69803 m!66333))

(declare-fun m!66343 () Bool)

(assert (=> b!69803 m!66343))

(assert (=> b!69803 m!66335))

(declare-fun m!66345 () Bool)

(assert (=> b!69803 m!66345))

(declare-fun m!66347 () Bool)

(assert (=> b!69803 m!66347))

(declare-fun m!66349 () Bool)

(assert (=> b!69803 m!66349))

(assert (=> b!69803 m!66329))

(declare-fun m!66351 () Bool)

(assert (=> b!69803 m!66351))

(declare-fun m!66353 () Bool)

(assert (=> b!69803 m!66353))

(assert (=> b!69803 m!66345))

(declare-fun m!66355 () Bool)

(assert (=> b!69803 m!66355))

(assert (=> b!69803 m!66313))

(declare-fun m!66357 () Bool)

(assert (=> b!69803 m!66357))

(declare-fun m!66359 () Bool)

(assert (=> b!69803 m!66359))

(assert (=> bm!5956 m!66355))

(assert (=> b!69805 m!66313))

(assert (=> b!69805 m!66313))

(declare-fun m!66361 () Bool)

(assert (=> b!69805 m!66361))

(assert (=> b!69813 m!66313))

(assert (=> b!69813 m!66313))

(assert (=> b!69813 m!66315))

(declare-fun m!66363 () Bool)

(assert (=> bm!5960 m!66363))

(declare-fun m!66365 () Bool)

(assert (=> b!69802 m!66365))

(declare-fun m!66367 () Bool)

(assert (=> bm!5957 m!66367))

(assert (=> d!14911 d!15379))

(declare-fun d!15381 () Bool)

(assert (=> d!15381 (= (get!1134 (getValueByKey!132 (toList!708 lt!30087) lt!30071)) (v!2500 (getValueByKey!132 (toList!708 lt!30087) lt!30071)))))

(assert (=> d!14893 d!15381))

(declare-fun b!69826 () Bool)

(declare-fun e!45688 () Option!138)

(assert (=> b!69826 (= e!45688 None!136)))

(declare-fun b!69825 () Bool)

(assert (=> b!69825 (= e!45688 (getValueByKey!132 (t!4954 (toList!708 lt!30087)) lt!30071))))

(declare-fun b!69823 () Bool)

(declare-fun e!45687 () Option!138)

(assert (=> b!69823 (= e!45687 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30087)))))))

(declare-fun d!15383 () Bool)

(declare-fun c!10047 () Bool)

(assert (=> d!15383 (= c!10047 (and ((_ is Cons!1455) (toList!708 lt!30087)) (= (_1!1057 (h!2040 (toList!708 lt!30087))) lt!30071)))))

(assert (=> d!15383 (= (getValueByKey!132 (toList!708 lt!30087) lt!30071) e!45687)))

(declare-fun b!69824 () Bool)

(assert (=> b!69824 (= e!45687 e!45688)))

(declare-fun c!10048 () Bool)

(assert (=> b!69824 (= c!10048 (and ((_ is Cons!1455) (toList!708 lt!30087)) (not (= (_1!1057 (h!2040 (toList!708 lt!30087))) lt!30071))))))

(assert (= (and d!15383 c!10047) b!69823))

(assert (= (and d!15383 (not c!10047)) b!69824))

(assert (= (and b!69824 c!10048) b!69825))

(assert (= (and b!69824 (not c!10048)) b!69826))

(declare-fun m!66369 () Bool)

(assert (=> b!69825 m!66369))

(assert (=> d!14893 d!15383))

(assert (=> d!14907 d!15065))

(declare-fun d!15385 () Bool)

(assert (=> d!15385 (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!30727 () Unit!1909)

(assert (=> d!15385 (= lt!30727 (choose!395 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45689 () Bool)

(assert (=> d!15385 e!45689))

(declare-fun res!37405 () Bool)

(assert (=> d!15385 (=> (not res!37405) (not e!45689))))

(assert (=> d!15385 (= res!37405 (isStrictlySorted!277 (toList!708 lt!30109)))))

(assert (=> d!15385 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30727)))

(declare-fun b!69827 () Bool)

(assert (=> b!69827 (= e!45689 (containsKey!135 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15385 res!37405) b!69827))

(assert (=> d!15385 m!64501))

(assert (=> d!15385 m!65501))

(assert (=> d!15385 m!65501))

(assert (=> d!15385 m!65503))

(assert (=> d!15385 m!64501))

(declare-fun m!66371 () Bool)

(assert (=> d!15385 m!66371))

(declare-fun m!66373 () Bool)

(assert (=> d!15385 m!66373))

(assert (=> b!69827 m!64501))

(assert (=> b!69827 m!65497))

(assert (=> b!69272 d!15385))

(assert (=> b!69272 d!15169))

(assert (=> b!69272 d!15171))

(declare-fun d!15387 () Bool)

(assert (=> d!15387 (isDefined!84 (getValueByKey!132 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))

(declare-fun lt!30728 () Unit!1909)

(assert (=> d!15387 (= lt!30728 (choose!395 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))

(declare-fun e!45690 () Bool)

(assert (=> d!15387 e!45690))

(declare-fun res!37406 () Bool)

(assert (=> d!15387 (=> (not res!37406) (not e!45690))))

(assert (=> d!15387 (= res!37406 (isStrictlySorted!277 (toList!708 e!44994)))))

(assert (=> d!15387 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))) lt!30728)))

(declare-fun b!69828 () Bool)

(assert (=> b!69828 (= e!45690 (containsKey!135 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))

(assert (= (and d!15387 res!37406) b!69828))

(assert (=> d!15387 m!65273))

(assert (=> d!15387 m!65273))

(assert (=> d!15387 m!65275))

(declare-fun m!66375 () Bool)

(assert (=> d!15387 m!66375))

(declare-fun m!66377 () Bool)

(assert (=> d!15387 m!66377))

(assert (=> b!69828 m!65269))

(assert (=> b!69167 d!15387))

(assert (=> b!69167 d!15153))

(assert (=> b!69167 d!15155))

(declare-fun b!69829 () Bool)

(declare-fun e!45692 () Bool)

(declare-fun e!45691 () Bool)

(assert (=> b!69829 (= e!45692 e!45691)))

(declare-fun c!10049 () Bool)

(assert (=> b!69829 (= c!10049 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!69830 () Bool)

(declare-fun call!5965 () Bool)

(assert (=> b!69830 (= e!45691 call!5965)))

(declare-fun d!15389 () Bool)

(declare-fun res!37409 () Bool)

(declare-fun e!45693 () Bool)

(assert (=> d!15389 (=> res!37409 e!45693)))

(assert (=> d!15389 (= res!37409 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15389 (= (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9834 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457))) e!45693)))

(declare-fun b!69831 () Bool)

(assert (=> b!69831 (= e!45693 e!45692)))

(declare-fun res!37407 () Bool)

(assert (=> b!69831 (=> (not res!37407) (not e!45692))))

(declare-fun e!45694 () Bool)

(assert (=> b!69831 (= res!37407 (not e!45694))))

(declare-fun res!37408 () Bool)

(assert (=> b!69831 (=> (not res!37408) (not e!45694))))

(assert (=> b!69831 (= res!37408 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!5962 () Bool)

(assert (=> bm!5962 (= call!5965 (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10049 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!9834 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457))) (ite c!9834 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)))))))

(declare-fun b!69832 () Bool)

(assert (=> b!69832 (= e!45694 (contains!712 (ite c!9834 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)) (ite c!9684 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1457) Nil!1457)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!69833 () Bool)

(assert (=> b!69833 (= e!45691 call!5965)))

(assert (= (and d!15389 (not res!37409)) b!69831))

(assert (= (and b!69831 res!37408) b!69832))

(assert (= (and b!69831 res!37407) b!69829))

(assert (= (and b!69829 c!10049) b!69830))

(assert (= (and b!69829 (not c!10049)) b!69833))

(assert (= (or b!69830 b!69833) bm!5962))

(declare-fun m!66379 () Bool)

(assert (=> b!69829 m!66379))

(assert (=> b!69829 m!66379))

(declare-fun m!66381 () Bool)

(assert (=> b!69829 m!66381))

(assert (=> b!69831 m!66379))

(assert (=> b!69831 m!66379))

(assert (=> b!69831 m!66381))

(assert (=> bm!5962 m!66379))

(declare-fun m!66383 () Bool)

(assert (=> bm!5962 m!66383))

(assert (=> b!69832 m!66379))

(assert (=> b!69832 m!66379))

(declare-fun m!66385 () Bool)

(assert (=> b!69832 m!66385))

(assert (=> bm!5882 d!15389))

(declare-fun b!69834 () Bool)

(declare-fun e!45695 () Bool)

(declare-fun lt!30743 () ListLongMap!1385)

(assert (=> b!69834 (= e!45695 (= (apply!73 lt!30743 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 (_2!1058 lt!30016))))))

(declare-fun b!69835 () Bool)

(declare-fun e!45697 () Unit!1909)

(declare-fun lt!30740 () Unit!1909)

(assert (=> b!69835 (= e!45697 lt!30740)))

(declare-fun lt!30730 () ListLongMap!1385)

(assert (=> b!69835 (= lt!30730 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (_2!1058 lt!30016)) (_values!2150 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016)) (extraKeys!2034 (_2!1058 lt!30016)) (zeroValue!2073 (_2!1058 lt!30016)) (minValue!2073 (_2!1058 lt!30016)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1058 lt!30016))))))

(declare-fun lt!30746 () (_ BitVec 64))

(assert (=> b!69835 (= lt!30746 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30735 () (_ BitVec 64))

(assert (=> b!69835 (= lt!30735 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000))))

(declare-fun lt!30734 () Unit!1909)

(assert (=> b!69835 (= lt!30734 (addStillContains!49 lt!30730 lt!30746 (zeroValue!2073 (_2!1058 lt!30016)) lt!30735))))

(assert (=> b!69835 (contains!710 (+!88 lt!30730 (tuple2!2093 lt!30746 (zeroValue!2073 (_2!1058 lt!30016)))) lt!30735)))

(declare-fun lt!30744 () Unit!1909)

(assert (=> b!69835 (= lt!30744 lt!30734)))

(declare-fun lt!30741 () ListLongMap!1385)

(assert (=> b!69835 (= lt!30741 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (_2!1058 lt!30016)) (_values!2150 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016)) (extraKeys!2034 (_2!1058 lt!30016)) (zeroValue!2073 (_2!1058 lt!30016)) (minValue!2073 (_2!1058 lt!30016)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1058 lt!30016))))))

(declare-fun lt!30731 () (_ BitVec 64))

(assert (=> b!69835 (= lt!30731 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30750 () (_ BitVec 64))

(assert (=> b!69835 (= lt!30750 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000))))

(declare-fun lt!30738 () Unit!1909)

(assert (=> b!69835 (= lt!30738 (addApplyDifferent!49 lt!30741 lt!30731 (minValue!2073 (_2!1058 lt!30016)) lt!30750))))

(assert (=> b!69835 (= (apply!73 (+!88 lt!30741 (tuple2!2093 lt!30731 (minValue!2073 (_2!1058 lt!30016)))) lt!30750) (apply!73 lt!30741 lt!30750))))

(declare-fun lt!30732 () Unit!1909)

(assert (=> b!69835 (= lt!30732 lt!30738)))

(declare-fun lt!30748 () ListLongMap!1385)

(assert (=> b!69835 (= lt!30748 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (_2!1058 lt!30016)) (_values!2150 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016)) (extraKeys!2034 (_2!1058 lt!30016)) (zeroValue!2073 (_2!1058 lt!30016)) (minValue!2073 (_2!1058 lt!30016)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1058 lt!30016))))))

(declare-fun lt!30749 () (_ BitVec 64))

(assert (=> b!69835 (= lt!30749 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30742 () (_ BitVec 64))

(assert (=> b!69835 (= lt!30742 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000))))

(declare-fun lt!30747 () Unit!1909)

(assert (=> b!69835 (= lt!30747 (addApplyDifferent!49 lt!30748 lt!30749 (zeroValue!2073 (_2!1058 lt!30016)) lt!30742))))

(assert (=> b!69835 (= (apply!73 (+!88 lt!30748 (tuple2!2093 lt!30749 (zeroValue!2073 (_2!1058 lt!30016)))) lt!30742) (apply!73 lt!30748 lt!30742))))

(declare-fun lt!30733 () Unit!1909)

(assert (=> b!69835 (= lt!30733 lt!30747)))

(declare-fun lt!30745 () ListLongMap!1385)

(assert (=> b!69835 (= lt!30745 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (_2!1058 lt!30016)) (_values!2150 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016)) (extraKeys!2034 (_2!1058 lt!30016)) (zeroValue!2073 (_2!1058 lt!30016)) (minValue!2073 (_2!1058 lt!30016)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1058 lt!30016))))))

(declare-fun lt!30737 () (_ BitVec 64))

(assert (=> b!69835 (= lt!30737 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30729 () (_ BitVec 64))

(assert (=> b!69835 (= lt!30729 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000))))

(assert (=> b!69835 (= lt!30740 (addApplyDifferent!49 lt!30745 lt!30737 (minValue!2073 (_2!1058 lt!30016)) lt!30729))))

(assert (=> b!69835 (= (apply!73 (+!88 lt!30745 (tuple2!2093 lt!30737 (minValue!2073 (_2!1058 lt!30016)))) lt!30729) (apply!73 lt!30745 lt!30729))))

(declare-fun bm!5963 () Bool)

(declare-fun call!5971 () ListLongMap!1385)

(declare-fun call!5972 () ListLongMap!1385)

(assert (=> bm!5963 (= call!5971 call!5972)))

(declare-fun b!69836 () Bool)

(declare-fun e!45701 () Bool)

(assert (=> b!69836 (= e!45701 (= (apply!73 lt!30743 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (_values!2150 (_2!1058 lt!30016))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 (_2!1058 lt!30016)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69836 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_values!2150 (_2!1058 lt!30016)))))))

(assert (=> b!69836 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))))))

(declare-fun bm!5964 () Bool)

(declare-fun call!5970 () ListLongMap!1385)

(assert (=> bm!5964 (= call!5970 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (_2!1058 lt!30016)) (_values!2150 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016)) (extraKeys!2034 (_2!1058 lt!30016)) (zeroValue!2073 (_2!1058 lt!30016)) (minValue!2073 (_2!1058 lt!30016)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1058 lt!30016))))))

(declare-fun b!69837 () Bool)

(declare-fun e!45699 () Bool)

(assert (=> b!69837 (= e!45699 e!45701)))

(declare-fun res!37418 () Bool)

(assert (=> b!69837 (=> (not res!37418) (not e!45701))))

(assert (=> b!69837 (= res!37418 (contains!710 lt!30743 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000)))))

(assert (=> b!69837 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))))))

(declare-fun b!69838 () Bool)

(declare-fun e!45705 () ListLongMap!1385)

(assert (=> b!69838 (= e!45705 call!5971)))

(declare-fun b!69839 () Bool)

(declare-fun e!45700 () ListLongMap!1385)

(declare-fun call!5968 () ListLongMap!1385)

(assert (=> b!69839 (= e!45700 call!5968)))

(declare-fun b!69840 () Bool)

(declare-fun res!37413 () Bool)

(declare-fun e!45703 () Bool)

(assert (=> b!69840 (=> (not res!37413) (not e!45703))))

(declare-fun e!45698 () Bool)

(assert (=> b!69840 (= res!37413 e!45698)))

(declare-fun c!10052 () Bool)

(assert (=> b!69840 (= c!10052 (not (= (bvand (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!15391 () Bool)

(assert (=> d!15391 e!45703))

(declare-fun res!37417 () Bool)

(assert (=> d!15391 (=> (not res!37417) (not e!45703))))

(assert (=> d!15391 (= res!37417 (or (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))))))))

(declare-fun lt!30736 () ListLongMap!1385)

(assert (=> d!15391 (= lt!30743 lt!30736)))

(declare-fun lt!30739 () Unit!1909)

(assert (=> d!15391 (= lt!30739 e!45697)))

(declare-fun c!10054 () Bool)

(declare-fun e!45702 () Bool)

(assert (=> d!15391 (= c!10054 e!45702)))

(declare-fun res!37415 () Bool)

(assert (=> d!15391 (=> (not res!37415) (not e!45702))))

(assert (=> d!15391 (= res!37415 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))))))

(declare-fun e!45706 () ListLongMap!1385)

(assert (=> d!15391 (= lt!30736 e!45706)))

(declare-fun c!10050 () Bool)

(assert (=> d!15391 (= c!10050 (and (not (= (bvand (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15391 (validMask!0 (mask!6112 (_2!1058 lt!30016)))))

(assert (=> d!15391 (= (getCurrentListMap!406 (_keys!3811 (_2!1058 lt!30016)) (_values!2150 (_2!1058 lt!30016)) (mask!6112 (_2!1058 lt!30016)) (extraKeys!2034 (_2!1058 lt!30016)) (zeroValue!2073 (_2!1058 lt!30016)) (minValue!2073 (_2!1058 lt!30016)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1058 lt!30016))) lt!30743)))

(declare-fun bm!5965 () Bool)

(declare-fun call!5969 () Bool)

(assert (=> bm!5965 (= call!5969 (contains!710 lt!30743 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5966 () Bool)

(declare-fun call!5966 () Bool)

(assert (=> bm!5966 (= call!5966 (contains!710 lt!30743 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69841 () Bool)

(declare-fun e!45704 () Bool)

(assert (=> b!69841 (= e!45704 e!45695)))

(declare-fun res!37412 () Bool)

(assert (=> b!69841 (= res!37412 call!5969)))

(assert (=> b!69841 (=> (not res!37412) (not e!45695))))

(declare-fun bm!5967 () Bool)

(declare-fun call!5967 () ListLongMap!1385)

(assert (=> bm!5967 (= call!5968 call!5967)))

(declare-fun b!69842 () Bool)

(declare-fun e!45707 () Bool)

(assert (=> b!69842 (= e!45707 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000)))))

(declare-fun b!69843 () Bool)

(assert (=> b!69843 (= e!45706 e!45705)))

(declare-fun c!10053 () Bool)

(assert (=> b!69843 (= c!10053 (and (not (= (bvand (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69844 () Bool)

(assert (=> b!69844 (= e!45706 (+!88 call!5972 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (_2!1058 lt!30016)))))))

(declare-fun b!69845 () Bool)

(assert (=> b!69845 (= e!45702 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (_2!1058 lt!30016))) #b00000000000000000000000000000000)))))

(declare-fun b!69846 () Bool)

(declare-fun e!45696 () Bool)

(assert (=> b!69846 (= e!45696 (= (apply!73 lt!30743 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 (_2!1058 lt!30016))))))

(declare-fun b!69847 () Bool)

(assert (=> b!69847 (= e!45703 e!45704)))

(declare-fun c!10055 () Bool)

(assert (=> b!69847 (= c!10055 (not (= (bvand (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69848 () Bool)

(declare-fun c!10051 () Bool)

(assert (=> b!69848 (= c!10051 (and (not (= (bvand (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69848 (= e!45705 e!45700)))

(declare-fun bm!5968 () Bool)

(assert (=> bm!5968 (= call!5972 (+!88 (ite c!10050 call!5970 (ite c!10053 call!5967 call!5968)) (ite (or c!10050 c!10053) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (_2!1058 lt!30016))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (_2!1058 lt!30016))))))))

(declare-fun b!69849 () Bool)

(assert (=> b!69849 (= e!45704 (not call!5969))))

(declare-fun b!69850 () Bool)

(assert (=> b!69850 (= e!45698 (not call!5966))))

(declare-fun b!69851 () Bool)

(declare-fun res!37416 () Bool)

(assert (=> b!69851 (=> (not res!37416) (not e!45703))))

(assert (=> b!69851 (= res!37416 e!45699)))

(declare-fun res!37414 () Bool)

(assert (=> b!69851 (=> res!37414 e!45699)))

(assert (=> b!69851 (= res!37414 (not e!45707))))

(declare-fun res!37411 () Bool)

(assert (=> b!69851 (=> (not res!37411) (not e!45707))))

(assert (=> b!69851 (= res!37411 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 (_2!1058 lt!30016)))))))

(declare-fun b!69852 () Bool)

(assert (=> b!69852 (= e!45698 e!45696)))

(declare-fun res!37410 () Bool)

(assert (=> b!69852 (= res!37410 call!5966)))

(assert (=> b!69852 (=> (not res!37410) (not e!45696))))

(declare-fun b!69853 () Bool)

(assert (=> b!69853 (= e!45700 call!5971)))

(declare-fun bm!5969 () Bool)

(assert (=> bm!5969 (= call!5967 call!5970)))

(declare-fun b!69854 () Bool)

(declare-fun Unit!1959 () Unit!1909)

(assert (=> b!69854 (= e!45697 Unit!1959)))

(assert (= (and d!15391 c!10050) b!69844))

(assert (= (and d!15391 (not c!10050)) b!69843))

(assert (= (and b!69843 c!10053) b!69838))

(assert (= (and b!69843 (not c!10053)) b!69848))

(assert (= (and b!69848 c!10051) b!69853))

(assert (= (and b!69848 (not c!10051)) b!69839))

(assert (= (or b!69853 b!69839) bm!5967))

(assert (= (or b!69838 bm!5967) bm!5969))

(assert (= (or b!69838 b!69853) bm!5963))

(assert (= (or b!69844 bm!5969) bm!5964))

(assert (= (or b!69844 bm!5963) bm!5968))

(assert (= (and d!15391 res!37415) b!69845))

(assert (= (and d!15391 c!10054) b!69835))

(assert (= (and d!15391 (not c!10054)) b!69854))

(assert (= (and d!15391 res!37417) b!69851))

(assert (= (and b!69851 res!37411) b!69842))

(assert (= (and b!69851 (not res!37414)) b!69837))

(assert (= (and b!69837 res!37418) b!69836))

(assert (= (and b!69851 res!37416) b!69840))

(assert (= (and b!69840 c!10052) b!69852))

(assert (= (and b!69840 (not c!10052)) b!69850))

(assert (= (and b!69852 res!37410) b!69846))

(assert (= (or b!69852 b!69850) bm!5966))

(assert (= (and b!69840 res!37413) b!69847))

(assert (= (and b!69847 c!10055) b!69841))

(assert (= (and b!69847 (not c!10055)) b!69849))

(assert (= (and b!69841 res!37412) b!69834))

(assert (= (or b!69841 b!69849) bm!5965))

(declare-fun b_lambda!3125 () Bool)

(assert (=> (not b_lambda!3125) (not b!69836)))

(declare-fun tb!1485 () Bool)

(declare-fun t!4972 () Bool)

(assert (=> (and b!68389 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 (_2!1058 lt!30016))) t!4972) tb!1485))

(declare-fun result!2619 () Bool)

(assert (=> tb!1485 (= result!2619 tp_is_empty!2455)))

(assert (=> b!69836 t!4972))

(declare-fun b_and!4285 () Bool)

(assert (= b_and!4281 (and (=> t!4972 result!2619) b_and!4285)))

(declare-fun tb!1487 () Bool)

(declare-fun t!4974 () Bool)

(assert (=> (and b!68379 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (_2!1058 lt!30016))) t!4974) tb!1487))

(declare-fun result!2621 () Bool)

(assert (= result!2621 result!2619))

(assert (=> b!69836 t!4974))

(declare-fun b_and!4287 () Bool)

(assert (= b_and!4283 (and (=> t!4974 result!2621) b_and!4287)))

(assert (=> b!69842 m!65709))

(assert (=> b!69842 m!65709))

(assert (=> b!69842 m!65711))

(declare-fun m!66387 () Bool)

(assert (=> b!69846 m!66387))

(declare-fun m!66389 () Bool)

(assert (=> b!69844 m!66389))

(declare-fun m!66391 () Bool)

(assert (=> b!69836 m!66391))

(assert (=> b!69836 m!65709))

(assert (=> b!69836 m!65709))

(declare-fun m!66393 () Bool)

(assert (=> b!69836 m!66393))

(assert (=> b!69836 m!66391))

(declare-fun m!66395 () Bool)

(assert (=> b!69836 m!66395))

(declare-fun m!66397 () Bool)

(assert (=> b!69836 m!66397))

(assert (=> b!69836 m!66395))

(declare-fun m!66399 () Bool)

(assert (=> bm!5966 m!66399))

(declare-fun m!66401 () Bool)

(assert (=> d!15391 m!66401))

(declare-fun m!66403 () Bool)

(assert (=> b!69835 m!66403))

(declare-fun m!66405 () Bool)

(assert (=> b!69835 m!66405))

(declare-fun m!66407 () Bool)

(assert (=> b!69835 m!66407))

(declare-fun m!66409 () Bool)

(assert (=> b!69835 m!66409))

(declare-fun m!66411 () Bool)

(assert (=> b!69835 m!66411))

(declare-fun m!66413 () Bool)

(assert (=> b!69835 m!66413))

(declare-fun m!66415 () Bool)

(assert (=> b!69835 m!66415))

(assert (=> b!69835 m!66407))

(declare-fun m!66417 () Bool)

(assert (=> b!69835 m!66417))

(assert (=> b!69835 m!66409))

(declare-fun m!66419 () Bool)

(assert (=> b!69835 m!66419))

(declare-fun m!66421 () Bool)

(assert (=> b!69835 m!66421))

(declare-fun m!66423 () Bool)

(assert (=> b!69835 m!66423))

(assert (=> b!69835 m!66403))

(declare-fun m!66425 () Bool)

(assert (=> b!69835 m!66425))

(declare-fun m!66427 () Bool)

(assert (=> b!69835 m!66427))

(assert (=> b!69835 m!66419))

(declare-fun m!66429 () Bool)

(assert (=> b!69835 m!66429))

(assert (=> b!69835 m!65709))

(declare-fun m!66431 () Bool)

(assert (=> b!69835 m!66431))

(declare-fun m!66433 () Bool)

(assert (=> b!69835 m!66433))

(assert (=> bm!5964 m!66429))

(assert (=> b!69837 m!65709))

(assert (=> b!69837 m!65709))

(declare-fun m!66435 () Bool)

(assert (=> b!69837 m!66435))

(assert (=> b!69845 m!65709))

(assert (=> b!69845 m!65709))

(assert (=> b!69845 m!65711))

(declare-fun m!66437 () Bool)

(assert (=> bm!5968 m!66437))

(declare-fun m!66439 () Bool)

(assert (=> b!69834 m!66439))

(declare-fun m!66441 () Bool)

(assert (=> bm!5965 m!66441))

(assert (=> d!14961 d!15391))

(declare-fun b!69855 () Bool)

(declare-fun e!45713 () Bool)

(declare-fun e!45708 () Bool)

(assert (=> b!69855 (= e!45713 e!45708)))

(declare-fun c!10056 () Bool)

(declare-fun e!45712 () Bool)

(assert (=> b!69855 (= c!10056 e!45712)))

(declare-fun res!37420 () Bool)

(assert (=> b!69855 (=> (not res!37420) (not e!45712))))

(assert (=> b!69855 (= res!37420 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69856 () Bool)

(declare-fun e!45710 () Bool)

(declare-fun lt!30753 () ListLongMap!1385)

(assert (=> b!69856 (= e!45710 (isEmpty!316 lt!30753))))

(declare-fun bm!5970 () Bool)

(declare-fun call!5973 () ListLongMap!1385)

(assert (=> bm!5970 (= call!5973 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite c!9730 (_values!2150 newMap!16) lt!30013) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16)))))

(declare-fun b!69857 () Bool)

(declare-fun res!37421 () Bool)

(assert (=> b!69857 (=> (not res!37421) (not e!45713))))

(assert (=> b!69857 (= res!37421 (not (contains!710 lt!30753 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69858 () Bool)

(declare-fun lt!30756 () Unit!1909)

(declare-fun lt!30755 () Unit!1909)

(assert (=> b!69858 (= lt!30756 lt!30755)))

(declare-fun lt!30754 () ListLongMap!1385)

(declare-fun lt!30752 () (_ BitVec 64))

(declare-fun lt!30757 () V!2921)

(declare-fun lt!30751 () (_ BitVec 64))

(assert (=> b!69858 (not (contains!710 (+!88 lt!30754 (tuple2!2093 lt!30752 lt!30757)) lt!30751))))

(assert (=> b!69858 (= lt!30755 (addStillNotContains!24 lt!30754 lt!30752 lt!30757 lt!30751))))

(assert (=> b!69858 (= lt!30751 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69858 (= lt!30757 (get!1130 (select (arr!1833 (ite c!9730 (_values!2150 newMap!16) lt!30013)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69858 (= lt!30752 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69858 (= lt!30754 call!5973)))

(declare-fun e!45714 () ListLongMap!1385)

(assert (=> b!69858 (= e!45714 (+!88 call!5973 (tuple2!2093 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) (get!1130 (select (arr!1833 (ite c!9730 (_values!2150 newMap!16) lt!30013)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69859 () Bool)

(assert (=> b!69859 (= e!45714 call!5973)))

(declare-fun b!69861 () Bool)

(assert (=> b!69861 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(assert (=> b!69861 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (ite c!9730 (_values!2150 newMap!16) lt!30013))))))

(declare-fun e!45711 () Bool)

(assert (=> b!69861 (= e!45711 (= (apply!73 lt!30753 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (ite c!9730 (_values!2150 newMap!16) lt!30013)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69862 () Bool)

(declare-fun e!45709 () ListLongMap!1385)

(assert (=> b!69862 (= e!45709 (ListLongMap!1386 Nil!1456))))

(declare-fun b!69863 () Bool)

(assert (=> b!69863 (= e!45708 e!45711)))

(assert (=> b!69863 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun res!37422 () Bool)

(assert (=> b!69863 (= res!37422 (contains!710 lt!30753 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69863 (=> (not res!37422) (not e!45711))))

(declare-fun b!69864 () Bool)

(assert (=> b!69864 (= e!45712 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69864 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!69865 () Bool)

(assert (=> b!69865 (= e!45709 e!45714)))

(declare-fun c!10059 () Bool)

(assert (=> b!69865 (= c!10059 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69866 () Bool)

(assert (=> b!69866 (= e!45710 (= lt!30753 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite c!9730 (_values!2150 newMap!16) lt!30013) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16))))))

(declare-fun b!69860 () Bool)

(assert (=> b!69860 (= e!45708 e!45710)))

(declare-fun c!10058 () Bool)

(assert (=> b!69860 (= c!10058 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun d!15393 () Bool)

(assert (=> d!15393 e!45713))

(declare-fun res!37419 () Bool)

(assert (=> d!15393 (=> (not res!37419) (not e!45713))))

(assert (=> d!15393 (= res!37419 (not (contains!710 lt!30753 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15393 (= lt!30753 e!45709)))

(declare-fun c!10057 () Bool)

(assert (=> d!15393 (= c!10057 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!15393 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15393 (= (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (ite c!9730 (_values!2150 newMap!16) lt!30013) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30753)))

(assert (= (and d!15393 c!10057) b!69862))

(assert (= (and d!15393 (not c!10057)) b!69865))

(assert (= (and b!69865 c!10059) b!69858))

(assert (= (and b!69865 (not c!10059)) b!69859))

(assert (= (or b!69858 b!69859) bm!5970))

(assert (= (and d!15393 res!37419) b!69857))

(assert (= (and b!69857 res!37421) b!69855))

(assert (= (and b!69855 res!37420) b!69864))

(assert (= (and b!69855 c!10056) b!69863))

(assert (= (and b!69855 (not c!10056)) b!69860))

(assert (= (and b!69863 res!37422) b!69861))

(assert (= (and b!69860 c!10058) b!69866))

(assert (= (and b!69860 (not c!10058)) b!69856))

(declare-fun b_lambda!3127 () Bool)

(assert (=> (not b_lambda!3127) (not b!69858)))

(assert (=> b!69858 t!4967))

(declare-fun b_and!4289 () Bool)

(assert (= b_and!4285 (and (=> t!4967 result!2615) b_and!4289)))

(assert (=> b!69858 t!4969))

(declare-fun b_and!4291 () Bool)

(assert (= b_and!4287 (and (=> t!4969 result!2617) b_and!4291)))

(declare-fun b_lambda!3129 () Bool)

(assert (=> (not b_lambda!3129) (not b!69861)))

(assert (=> b!69861 t!4967))

(declare-fun b_and!4293 () Bool)

(assert (= b_and!4289 (and (=> t!4967 result!2615) b_and!4293)))

(assert (=> b!69861 t!4969))

(declare-fun b_and!4295 () Bool)

(assert (= b_and!4291 (and (=> t!4969 result!2617) b_and!4295)))

(declare-fun m!66443 () Bool)

(assert (=> b!69866 m!66443))

(declare-fun m!66445 () Bool)

(assert (=> b!69856 m!66445))

(assert (=> b!69863 m!64745))

(assert (=> b!69863 m!64745))

(declare-fun m!66447 () Bool)

(assert (=> b!69863 m!66447))

(assert (=> bm!5970 m!66443))

(assert (=> b!69864 m!64745))

(assert (=> b!69864 m!64745))

(assert (=> b!69864 m!64747))

(assert (=> b!69861 m!64745))

(declare-fun m!66449 () Bool)

(assert (=> b!69861 m!66449))

(assert (=> b!69861 m!65169))

(assert (=> b!69861 m!64745))

(assert (=> b!69861 m!64757))

(assert (=> b!69861 m!65169))

(assert (=> b!69861 m!64757))

(assert (=> b!69861 m!65173))

(assert (=> b!69858 m!65169))

(declare-fun m!66451 () Bool)

(assert (=> b!69858 m!66451))

(declare-fun m!66453 () Bool)

(assert (=> b!69858 m!66453))

(assert (=> b!69858 m!66453))

(declare-fun m!66455 () Bool)

(assert (=> b!69858 m!66455))

(assert (=> b!69858 m!64745))

(declare-fun m!66457 () Bool)

(assert (=> b!69858 m!66457))

(assert (=> b!69858 m!64757))

(assert (=> b!69858 m!65169))

(assert (=> b!69858 m!64757))

(assert (=> b!69858 m!65173))

(assert (=> b!69865 m!64745))

(assert (=> b!69865 m!64745))

(assert (=> b!69865 m!64747))

(declare-fun m!66459 () Bool)

(assert (=> b!69857 m!66459))

(declare-fun m!66461 () Bool)

(assert (=> d!15393 m!66461))

(assert (=> d!15393 m!64725))

(assert (=> bm!5884 d!15393))

(declare-fun d!15395 () Bool)

(assert (=> d!15395 (= ($colon$colon!63 e!45210 (ite c!9816 (h!2040 (toList!708 (+!88 lt!29844 lt!29846))) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850)))) (Cons!1455 (ite c!9816 (h!2040 (toList!708 (+!88 lt!29844 lt!29846))) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))) e!45210))))

(assert (=> bm!5879 d!15395))

(declare-fun d!15397 () Bool)

(declare-fun lt!30758 () Bool)

(assert (=> d!15397 (= lt!30758 (select (content!74 (t!4954 (toList!708 lt!30124))) lt!29850))))

(declare-fun e!45715 () Bool)

(assert (=> d!15397 (= lt!30758 e!45715)))

(declare-fun res!37423 () Bool)

(assert (=> d!15397 (=> (not res!37423) (not e!45715))))

(assert (=> d!15397 (= res!37423 ((_ is Cons!1455) (t!4954 (toList!708 lt!30124))))))

(assert (=> d!15397 (= (contains!713 (t!4954 (toList!708 lt!30124)) lt!29850) lt!30758)))

(declare-fun b!69867 () Bool)

(declare-fun e!45716 () Bool)

(assert (=> b!69867 (= e!45715 e!45716)))

(declare-fun res!37424 () Bool)

(assert (=> b!69867 (=> res!37424 e!45716)))

(assert (=> b!69867 (= res!37424 (= (h!2040 (t!4954 (toList!708 lt!30124))) lt!29850))))

(declare-fun b!69868 () Bool)

(assert (=> b!69868 (= e!45716 (contains!713 (t!4954 (t!4954 (toList!708 lt!30124))) lt!29850))))

(assert (= (and d!15397 res!37423) b!69867))

(assert (= (and b!69867 (not res!37424)) b!69868))

(assert (=> d!15397 m!66033))

(declare-fun m!66463 () Bool)

(assert (=> d!15397 m!66463))

(declare-fun m!66465 () Bool)

(assert (=> b!69868 m!66465))

(assert (=> b!69166 d!15397))

(declare-fun d!15399 () Bool)

(declare-fun lt!30759 () Bool)

(assert (=> d!15399 (= lt!30759 (select (content!74 lt!30499) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun e!45717 () Bool)

(assert (=> d!15399 (= lt!30759 e!45717)))

(declare-fun res!37425 () Bool)

(assert (=> d!15399 (=> (not res!37425) (not e!45717))))

(assert (=> d!15399 (= res!37425 ((_ is Cons!1455) lt!30499))))

(assert (=> d!15399 (= (contains!713 lt!30499 (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))) lt!30759)))

(declare-fun b!69869 () Bool)

(declare-fun e!45718 () Bool)

(assert (=> b!69869 (= e!45717 e!45718)))

(declare-fun res!37426 () Bool)

(assert (=> b!69869 (=> res!37426 e!45718)))

(assert (=> b!69869 (= res!37426 (= (h!2040 lt!30499) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun b!69870 () Bool)

(assert (=> b!69870 (= e!45718 (contains!713 (t!4954 lt!30499) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(assert (= (and d!15399 res!37425) b!69869))

(assert (= (and b!69869 (not res!37426)) b!69870))

(declare-fun m!66467 () Bool)

(assert (=> d!15399 m!66467))

(declare-fun m!66469 () Bool)

(assert (=> d!15399 m!66469))

(declare-fun m!66471 () Bool)

(assert (=> b!69870 m!66471))

(assert (=> b!69293 d!15399))

(declare-fun b!69871 () Bool)

(declare-fun e!45721 () List!1459)

(declare-fun call!5975 () List!1459)

(assert (=> b!69871 (= e!45721 call!5975)))

(declare-fun b!69872 () Bool)

(declare-fun e!45719 () List!1459)

(assert (=> b!69872 (= e!45719 (insertStrictlySorted!52 (t!4954 (t!4954 (toList!708 lt!29844))) (_1!1057 lt!29850) (_2!1057 lt!29850)))))

(declare-fun b!69873 () Bool)

(declare-fun e!45722 () List!1459)

(declare-fun call!5974 () List!1459)

(assert (=> b!69873 (= e!45722 call!5974)))

(declare-fun b!69874 () Bool)

(assert (=> b!69874 (= e!45722 call!5974)))

(declare-fun b!69875 () Bool)

(declare-fun c!10063 () Bool)

(assert (=> b!69875 (= c!10063 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!29844))) (bvsgt (_1!1057 (h!2040 (t!4954 (toList!708 lt!29844)))) (_1!1057 lt!29850))))))

(assert (=> b!69875 (= e!45721 e!45722)))

(declare-fun b!69876 () Bool)

(declare-fun res!37428 () Bool)

(declare-fun e!45720 () Bool)

(assert (=> b!69876 (=> (not res!37428) (not e!45720))))

(declare-fun lt!30760 () List!1459)

(assert (=> b!69876 (= res!37428 (containsKey!135 lt!30760 (_1!1057 lt!29850)))))

(declare-fun call!5976 () List!1459)

(declare-fun c!10060 () Bool)

(declare-fun bm!5972 () Bool)

(assert (=> bm!5972 (= call!5976 ($colon$colon!63 e!45719 (ite c!10060 (h!2040 (t!4954 (toList!708 lt!29844))) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850)))))))

(declare-fun c!10061 () Bool)

(assert (=> bm!5972 (= c!10061 c!10060)))

(declare-fun b!69877 () Bool)

(declare-fun e!45723 () List!1459)

(assert (=> b!69877 (= e!45723 e!45721)))

(declare-fun c!10062 () Bool)

(assert (=> b!69877 (= c!10062 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!29844))) (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!29844)))) (_1!1057 lt!29850))))))

(declare-fun b!69878 () Bool)

(assert (=> b!69878 (= e!45719 (ite c!10062 (t!4954 (t!4954 (toList!708 lt!29844))) (ite c!10063 (Cons!1455 (h!2040 (t!4954 (toList!708 lt!29844))) (t!4954 (t!4954 (toList!708 lt!29844)))) Nil!1456)))))

(declare-fun b!69879 () Bool)

(assert (=> b!69879 (= e!45723 call!5976)))

(declare-fun bm!5971 () Bool)

(assert (=> bm!5971 (= call!5975 call!5976)))

(declare-fun d!15401 () Bool)

(assert (=> d!15401 e!45720))

(declare-fun res!37427 () Bool)

(assert (=> d!15401 (=> (not res!37427) (not e!45720))))

(assert (=> d!15401 (= res!37427 (isStrictlySorted!277 lt!30760))))

(assert (=> d!15401 (= lt!30760 e!45723)))

(assert (=> d!15401 (= c!10060 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!29844))) (bvslt (_1!1057 (h!2040 (t!4954 (toList!708 lt!29844)))) (_1!1057 lt!29850))))))

(assert (=> d!15401 (isStrictlySorted!277 (t!4954 (toList!708 lt!29844)))))

(assert (=> d!15401 (= (insertStrictlySorted!52 (t!4954 (toList!708 lt!29844)) (_1!1057 lt!29850) (_2!1057 lt!29850)) lt!30760)))

(declare-fun b!69880 () Bool)

(assert (=> b!69880 (= e!45720 (contains!713 lt!30760 (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun bm!5973 () Bool)

(assert (=> bm!5973 (= call!5974 call!5975)))

(assert (= (and d!15401 c!10060) b!69879))

(assert (= (and d!15401 (not c!10060)) b!69877))

(assert (= (and b!69877 c!10062) b!69871))

(assert (= (and b!69877 (not c!10062)) b!69875))

(assert (= (and b!69875 c!10063) b!69874))

(assert (= (and b!69875 (not c!10063)) b!69873))

(assert (= (or b!69874 b!69873) bm!5973))

(assert (= (or b!69871 bm!5973) bm!5971))

(assert (= (or b!69879 bm!5971) bm!5972))

(assert (= (and bm!5972 c!10061) b!69872))

(assert (= (and bm!5972 (not c!10061)) b!69878))

(assert (= (and d!15401 res!37427) b!69876))

(assert (= (and b!69876 res!37428) b!69880))

(declare-fun m!66473 () Bool)

(assert (=> d!15401 m!66473))

(declare-fun m!66475 () Bool)

(assert (=> d!15401 m!66475))

(declare-fun m!66477 () Bool)

(assert (=> bm!5972 m!66477))

(declare-fun m!66479 () Bool)

(assert (=> b!69880 m!66479))

(declare-fun m!66481 () Bool)

(assert (=> b!69876 m!66481))

(declare-fun m!66483 () Bool)

(assert (=> b!69872 m!66483))

(assert (=> b!69154 d!15401))

(declare-fun d!15403 () Bool)

(declare-fun res!37429 () Bool)

(declare-fun e!45724 () Bool)

(assert (=> d!15403 (=> res!37429 e!45724)))

(assert (=> d!15403 (= res!37429 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!29848))) (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!29848)))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15403 (= (containsKey!135 (t!4954 (toList!708 lt!29848)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45724)))

(declare-fun b!69881 () Bool)

(declare-fun e!45725 () Bool)

(assert (=> b!69881 (= e!45724 e!45725)))

(declare-fun res!37430 () Bool)

(assert (=> b!69881 (=> (not res!37430) (not e!45725))))

(assert (=> b!69881 (= res!37430 (and (or (not ((_ is Cons!1455) (t!4954 (toList!708 lt!29848)))) (bvsle (_1!1057 (h!2040 (t!4954 (toList!708 lt!29848)))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1455) (t!4954 (toList!708 lt!29848))) (bvslt (_1!1057 (h!2040 (t!4954 (toList!708 lt!29848)))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!69882 () Bool)

(assert (=> b!69882 (= e!45725 (containsKey!135 (t!4954 (t!4954 (toList!708 lt!29848))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15403 (not res!37429)) b!69881))

(assert (= (and b!69881 res!37430) b!69882))

(assert (=> b!69882 m!64329))

(declare-fun m!66485 () Bool)

(assert (=> b!69882 m!66485))

(assert (=> b!68872 d!15403))

(assert (=> b!69097 d!14867))

(declare-fun d!15405 () Bool)

(assert (=> d!15405 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (getCurrentListMap!406 (_keys!3811 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15405 true))

(declare-fun _$5!74 () Unit!1909)

(assert (=> d!15405 (= (choose!390 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3042 lt!30008) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849 (defaultEntry!2167 newMap!16)) _$5!74)))

(declare-fun bs!3017 () Bool)

(assert (= bs!3017 d!15405))

(assert (=> bs!3017 m!64525))

(assert (=> bs!3017 m!64525))

(assert (=> bs!3017 m!64733))

(assert (=> bs!3017 m!64545))

(assert (=> bs!3017 m!64735))

(assert (=> d!14857 d!15405))

(assert (=> d!14857 d!15065))

(declare-fun d!15407 () Bool)

(assert (=> d!15407 (= (isDefined!84 (getValueByKey!132 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))) (not (isEmpty!317 (getValueByKey!132 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun bs!3018 () Bool)

(assert (= bs!3018 d!15407))

(assert (=> bs!3018 m!65379))

(declare-fun m!66487 () Bool)

(assert (=> bs!3018 m!66487))

(assert (=> b!69216 d!15407))

(declare-fun b!69886 () Bool)

(declare-fun e!45727 () Option!138)

(assert (=> b!69886 (= e!45727 None!136)))

(declare-fun b!69885 () Bool)

(assert (=> b!69885 (= e!45727 (getValueByKey!132 (t!4954 (toList!708 call!5809)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69883 () Bool)

(declare-fun e!45726 () Option!138)

(assert (=> b!69883 (= e!45726 (Some!137 (_2!1057 (h!2040 (toList!708 call!5809)))))))

(declare-fun c!10064 () Bool)

(declare-fun d!15409 () Bool)

(assert (=> d!15409 (= c!10064 (and ((_ is Cons!1455) (toList!708 call!5809)) (= (_1!1057 (h!2040 (toList!708 call!5809))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15409 (= (getValueByKey!132 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45726)))

(declare-fun b!69884 () Bool)

(assert (=> b!69884 (= e!45726 e!45727)))

(declare-fun c!10065 () Bool)

(assert (=> b!69884 (= c!10065 (and ((_ is Cons!1455) (toList!708 call!5809)) (not (= (_1!1057 (h!2040 (toList!708 call!5809))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(assert (= (and d!15409 c!10064) b!69883))

(assert (= (and d!15409 (not c!10064)) b!69884))

(assert (= (and b!69884 c!10065) b!69885))

(assert (= (and b!69884 (not c!10065)) b!69886))

(assert (=> b!69885 m!64329))

(declare-fun m!66489 () Bool)

(assert (=> b!69885 m!66489))

(assert (=> b!69216 d!15409))

(declare-fun d!15411 () Bool)

(assert (=> d!15411 (isDefined!84 (getValueByKey!132 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!30761 () Unit!1909)

(assert (=> d!15411 (= lt!30761 (choose!395 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!45728 () Bool)

(assert (=> d!15411 e!45728))

(declare-fun res!37431 () Bool)

(assert (=> d!15411 (=> (not res!37431) (not e!45728))))

(assert (=> d!15411 (= res!37431 (isStrictlySorted!277 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))))

(assert (=> d!15411 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30761)))

(declare-fun b!69887 () Bool)

(assert (=> b!69887 (= e!45728 (containsKey!135 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15411 res!37431) b!69887))

(assert (=> d!15411 m!64329))

(assert (=> d!15411 m!64741))

(assert (=> d!15411 m!64741))

(assert (=> d!15411 m!64743))

(assert (=> d!15411 m!64329))

(declare-fun m!66491 () Bool)

(assert (=> d!15411 m!66491))

(declare-fun m!66493 () Bool)

(assert (=> d!15411 m!66493))

(assert (=> b!69887 m!64329))

(assert (=> b!69887 m!64737))

(assert (=> b!68829 d!15411))

(assert (=> b!68829 d!15187))

(assert (=> b!68829 d!15189))

(assert (=> b!69207 d!15173))

(declare-fun d!15413 () Bool)

(declare-fun res!37432 () Bool)

(declare-fun e!45729 () Bool)

(assert (=> d!15413 (=> res!37432 e!45729)))

(assert (=> d!15413 (= res!37432 (or ((_ is Nil!1456) lt!30327) ((_ is Nil!1456) (t!4954 lt!30327))))))

(assert (=> d!15413 (= (isStrictlySorted!277 lt!30327) e!45729)))

(declare-fun b!69888 () Bool)

(declare-fun e!45730 () Bool)

(assert (=> b!69888 (= e!45729 e!45730)))

(declare-fun res!37433 () Bool)

(assert (=> b!69888 (=> (not res!37433) (not e!45730))))

(assert (=> b!69888 (= res!37433 (bvslt (_1!1057 (h!2040 lt!30327)) (_1!1057 (h!2040 (t!4954 lt!30327)))))))

(declare-fun b!69889 () Bool)

(assert (=> b!69889 (= e!45730 (isStrictlySorted!277 (t!4954 lt!30327)))))

(assert (= (and d!15413 (not res!37432)) b!69888))

(assert (= (and b!69888 res!37433) b!69889))

(declare-fun m!66495 () Bool)

(assert (=> b!69889 m!66495))

(assert (=> d!14927 d!15413))

(declare-fun d!15415 () Bool)

(declare-fun res!37434 () Bool)

(declare-fun e!45731 () Bool)

(assert (=> d!15415 (=> res!37434 e!45731)))

(assert (=> d!15415 (= res!37434 (or ((_ is Nil!1456) (toList!708 (+!88 lt!29844 lt!29846))) ((_ is Nil!1456) (t!4954 (toList!708 (+!88 lt!29844 lt!29846))))))))

(assert (=> d!15415 (= (isStrictlySorted!277 (toList!708 (+!88 lt!29844 lt!29846))) e!45731)))

(declare-fun b!69890 () Bool)

(declare-fun e!45732 () Bool)

(assert (=> b!69890 (= e!45731 e!45732)))

(declare-fun res!37435 () Bool)

(assert (=> b!69890 (=> (not res!37435) (not e!45732))))

(assert (=> b!69890 (= res!37435 (bvslt (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 lt!29846)))) (_1!1057 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29846)))))))))

(declare-fun b!69891 () Bool)

(assert (=> b!69891 (= e!45732 (isStrictlySorted!277 (t!4954 (toList!708 (+!88 lt!29844 lt!29846)))))))

(assert (= (and d!15415 (not res!37434)) b!69890))

(assert (= (and b!69890 res!37435) b!69891))

(assert (=> b!69891 m!65725))

(assert (=> d!14927 d!15415))

(assert (=> b!69228 d!15173))

(declare-fun d!15417 () Bool)

(assert (=> d!15417 (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30762 () Unit!1909)

(assert (=> d!15417 (= lt!30762 (choose!395 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45733 () Bool)

(assert (=> d!15417 e!45733))

(declare-fun res!37436 () Bool)

(assert (=> d!15417 (=> (not res!37436) (not e!45733))))

(assert (=> d!15417 (= res!37436 (isStrictlySorted!277 (toList!708 lt!30085)))))

(assert (=> d!15417 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000) lt!30762)))

(declare-fun b!69892 () Bool)

(assert (=> b!69892 (= e!45733 (containsKey!135 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15417 res!37436) b!69892))

(assert (=> d!15417 m!65063))

(assert (=> d!15417 m!65063))

(assert (=> d!15417 m!65065))

(declare-fun m!66497 () Bool)

(assert (=> d!15417 m!66497))

(assert (=> d!15417 m!66013))

(assert (=> b!69892 m!65059))

(assert (=> b!69069 d!15417))

(assert (=> b!69069 d!15191))

(assert (=> b!69069 d!15151))

(declare-fun d!15419 () Bool)

(declare-fun res!37437 () Bool)

(declare-fun e!45734 () Bool)

(assert (=> d!15419 (=> res!37437 e!45734)))

(assert (=> d!15419 (= res!37437 (or ((_ is Nil!1456) lt!30404) ((_ is Nil!1456) (t!4954 lt!30404))))))

(assert (=> d!15419 (= (isStrictlySorted!277 lt!30404) e!45734)))

(declare-fun b!69893 () Bool)

(declare-fun e!45735 () Bool)

(assert (=> b!69893 (= e!45734 e!45735)))

(declare-fun res!37438 () Bool)

(assert (=> b!69893 (=> (not res!37438) (not e!45735))))

(assert (=> b!69893 (= res!37438 (bvslt (_1!1057 (h!2040 lt!30404)) (_1!1057 (h!2040 (t!4954 lt!30404)))))))

(declare-fun b!69894 () Bool)

(assert (=> b!69894 (= e!45735 (isStrictlySorted!277 (t!4954 lt!30404)))))

(assert (= (and d!15419 (not res!37437)) b!69893))

(assert (= (and b!69893 res!37438) b!69894))

(declare-fun m!66499 () Bool)

(assert (=> b!69894 m!66499))

(assert (=> d!14979 d!15419))

(declare-fun d!15421 () Bool)

(declare-fun res!37439 () Bool)

(declare-fun e!45736 () Bool)

(assert (=> d!15421 (=> res!37439 e!45736)))

(assert (=> d!15421 (= res!37439 (or ((_ is Nil!1456) (toList!708 lt!29844)) ((_ is Nil!1456) (t!4954 (toList!708 lt!29844)))))))

(assert (=> d!15421 (= (isStrictlySorted!277 (toList!708 lt!29844)) e!45736)))

(declare-fun b!69895 () Bool)

(declare-fun e!45737 () Bool)

(assert (=> b!69895 (= e!45736 e!45737)))

(declare-fun res!37440 () Bool)

(assert (=> b!69895 (=> (not res!37440) (not e!45737))))

(assert (=> b!69895 (= res!37440 (bvslt (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 (h!2040 (t!4954 (toList!708 lt!29844))))))))

(declare-fun b!69896 () Bool)

(assert (=> b!69896 (= e!45737 (isStrictlySorted!277 (t!4954 (toList!708 lt!29844))))))

(assert (= (and d!15421 (not res!37439)) b!69895))

(assert (= (and b!69895 res!37440) b!69896))

(assert (=> b!69896 m!66475))

(assert (=> d!14979 d!15421))

(declare-fun d!15423 () Bool)

(assert (=> d!15423 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3019 () Bool)

(assert (= bs!3019 d!15423))

(assert (=> bs!3019 m!65229))

(declare-fun m!66501 () Bool)

(assert (=> bs!3019 m!66501))

(assert (=> b!69268 d!15423))

(assert (=> b!69268 d!15195))

(declare-fun d!15425 () Bool)

(assert (=> d!15425 (= (get!1134 (getValueByKey!132 (toList!708 lt!30090) lt!30084)) (v!2500 (getValueByKey!132 (toList!708 lt!30090) lt!30084)))))

(assert (=> d!14885 d!15425))

(declare-fun b!69900 () Bool)

(declare-fun e!45739 () Option!138)

(assert (=> b!69900 (= e!45739 None!136)))

(declare-fun b!69899 () Bool)

(assert (=> b!69899 (= e!45739 (getValueByKey!132 (t!4954 (toList!708 lt!30090)) lt!30084))))

(declare-fun b!69897 () Bool)

(declare-fun e!45738 () Option!138)

(assert (=> b!69897 (= e!45738 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30090)))))))

(declare-fun d!15427 () Bool)

(declare-fun c!10066 () Bool)

(assert (=> d!15427 (= c!10066 (and ((_ is Cons!1455) (toList!708 lt!30090)) (= (_1!1057 (h!2040 (toList!708 lt!30090))) lt!30084)))))

(assert (=> d!15427 (= (getValueByKey!132 (toList!708 lt!30090) lt!30084) e!45738)))

(declare-fun b!69898 () Bool)

(assert (=> b!69898 (= e!45738 e!45739)))

(declare-fun c!10067 () Bool)

(assert (=> b!69898 (= c!10067 (and ((_ is Cons!1455) (toList!708 lt!30090)) (not (= (_1!1057 (h!2040 (toList!708 lt!30090))) lt!30084))))))

(assert (= (and d!15427 c!10066) b!69897))

(assert (= (and d!15427 (not c!10066)) b!69898))

(assert (= (and b!69898 c!10067) b!69899))

(assert (= (and b!69898 (not c!10067)) b!69900))

(declare-fun m!66503 () Bool)

(assert (=> b!69899 m!66503))

(assert (=> d!14885 d!15427))

(declare-fun d!15429 () Bool)

(declare-fun res!37441 () Bool)

(declare-fun e!45740 () Bool)

(assert (=> d!15429 (=> res!37441 e!45740)))

(assert (=> d!15429 (= res!37441 (and ((_ is Cons!1455) (toList!708 e!44994)) (= (_1!1057 (h!2040 (toList!708 e!44994))) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))))))))

(assert (=> d!15429 (= (containsKey!135 (toList!708 e!44994) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))) e!45740)))

(declare-fun b!69901 () Bool)

(declare-fun e!45741 () Bool)

(assert (=> b!69901 (= e!45740 e!45741)))

(declare-fun res!37442 () Bool)

(assert (=> b!69901 (=> (not res!37442) (not e!45741))))

(assert (=> b!69901 (= res!37442 (and (or (not ((_ is Cons!1455) (toList!708 e!44994))) (bvsle (_1!1057 (h!2040 (toList!708 e!44994))) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))))) ((_ is Cons!1455) (toList!708 e!44994)) (bvslt (_1!1057 (h!2040 (toList!708 e!44994))) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))))))))

(declare-fun b!69902 () Bool)

(assert (=> b!69902 (= e!45741 (containsKey!135 (t!4954 (toList!708 e!44994)) (ite c!9732 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))

(assert (= (and d!15429 (not res!37441)) b!69901))

(assert (= (and b!69901 res!37442) b!69902))

(declare-fun m!66505 () Bool)

(assert (=> b!69902 m!66505))

(assert (=> d!14985 d!15429))

(declare-fun d!15431 () Bool)

(declare-fun res!37443 () Bool)

(declare-fun e!45742 () Bool)

(assert (=> d!15431 (=> res!37443 e!45742)))

(assert (=> d!15431 (= res!37443 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))))) lt!30107)))))

(assert (=> d!15431 (= (containsKey!135 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))) lt!30107) e!45742)))

(declare-fun b!69903 () Bool)

(declare-fun e!45743 () Bool)

(assert (=> b!69903 (= e!45742 e!45743)))

(declare-fun res!37444 () Bool)

(assert (=> b!69903 (=> (not res!37444) (not e!45743))))

(assert (=> b!69903 (= res!37444 (and (or (not ((_ is Cons!1455) (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))))) (bvsle (_1!1057 (h!2040 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))))) lt!30107)) ((_ is Cons!1455) (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)))) (bvslt (_1!1057 (h!2040 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113))))) lt!30107)))))

(declare-fun b!69904 () Bool)

(assert (=> b!69904 (= e!45743 (containsKey!135 (t!4954 (toList!708 (+!88 lt!30110 (tuple2!2093 lt!30108 lt!30113)))) lt!30107))))

(assert (= (and d!15431 (not res!37443)) b!69903))

(assert (= (and b!69903 res!37444) b!69904))

(declare-fun m!66507 () Bool)

(assert (=> b!69904 m!66507))

(assert (=> d!14951 d!15431))

(assert (=> b!68828 d!15369))

(assert (=> b!68828 d!14861))

(declare-fun b!69905 () Bool)

(declare-fun e!45744 () Bool)

(declare-fun lt!30777 () ListLongMap!1385)

(assert (=> b!69905 (= e!45744 (= (apply!73 lt!30777 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!69906 () Bool)

(declare-fun e!45746 () Unit!1909)

(declare-fun lt!30774 () Unit!1909)

(assert (=> b!69906 (= e!45746 lt!30774)))

(declare-fun lt!30764 () ListLongMap!1385)

(assert (=> b!69906 (= lt!30764 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30780 () (_ BitVec 64))

(assert (=> b!69906 (= lt!30780 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30769 () (_ BitVec 64))

(assert (=> b!69906 (= lt!30769 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30768 () Unit!1909)

(assert (=> b!69906 (= lt!30768 (addStillContains!49 lt!30764 lt!30780 (zeroValue!2073 newMap!16) lt!30769))))

(assert (=> b!69906 (contains!710 (+!88 lt!30764 (tuple2!2093 lt!30780 (zeroValue!2073 newMap!16))) lt!30769)))

(declare-fun lt!30778 () Unit!1909)

(assert (=> b!69906 (= lt!30778 lt!30768)))

(declare-fun lt!30775 () ListLongMap!1385)

(assert (=> b!69906 (= lt!30775 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30765 () (_ BitVec 64))

(assert (=> b!69906 (= lt!30765 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30784 () (_ BitVec 64))

(assert (=> b!69906 (= lt!30784 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30772 () Unit!1909)

(assert (=> b!69906 (= lt!30772 (addApplyDifferent!49 lt!30775 lt!30765 (minValue!2073 newMap!16) lt!30784))))

(assert (=> b!69906 (= (apply!73 (+!88 lt!30775 (tuple2!2093 lt!30765 (minValue!2073 newMap!16))) lt!30784) (apply!73 lt!30775 lt!30784))))

(declare-fun lt!30766 () Unit!1909)

(assert (=> b!69906 (= lt!30766 lt!30772)))

(declare-fun lt!30782 () ListLongMap!1385)

(assert (=> b!69906 (= lt!30782 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30783 () (_ BitVec 64))

(assert (=> b!69906 (= lt!30783 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30776 () (_ BitVec 64))

(assert (=> b!69906 (= lt!30776 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30781 () Unit!1909)

(assert (=> b!69906 (= lt!30781 (addApplyDifferent!49 lt!30782 lt!30783 (zeroValue!2073 newMap!16) lt!30776))))

(assert (=> b!69906 (= (apply!73 (+!88 lt!30782 (tuple2!2093 lt!30783 (zeroValue!2073 newMap!16))) lt!30776) (apply!73 lt!30782 lt!30776))))

(declare-fun lt!30767 () Unit!1909)

(assert (=> b!69906 (= lt!30767 lt!30781)))

(declare-fun lt!30779 () ListLongMap!1385)

(assert (=> b!69906 (= lt!30779 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30771 () (_ BitVec 64))

(assert (=> b!69906 (= lt!30771 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30763 () (_ BitVec 64))

(assert (=> b!69906 (= lt!30763 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69906 (= lt!30774 (addApplyDifferent!49 lt!30779 lt!30771 (minValue!2073 newMap!16) lt!30763))))

(assert (=> b!69906 (= (apply!73 (+!88 lt!30779 (tuple2!2093 lt!30771 (minValue!2073 newMap!16))) lt!30763) (apply!73 lt!30779 lt!30763))))

(declare-fun bm!5974 () Bool)

(declare-fun call!5982 () ListLongMap!1385)

(declare-fun call!5983 () ListLongMap!1385)

(assert (=> bm!5974 (= call!5982 call!5983)))

(declare-fun b!69907 () Bool)

(declare-fun e!45750 () Bool)

(assert (=> b!69907 (= e!45750 (= (apply!73 lt!30777 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69907 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))))))

(assert (=> b!69907 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun call!5981 () ListLongMap!1385)

(declare-fun bm!5975 () Bool)

(assert (=> bm!5975 (= call!5981 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69908 () Bool)

(declare-fun e!45748 () Bool)

(assert (=> b!69908 (= e!45748 e!45750)))

(declare-fun res!37453 () Bool)

(assert (=> b!69908 (=> (not res!37453) (not e!45750))))

(assert (=> b!69908 (= res!37453 (contains!710 lt!30777 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69908 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69909 () Bool)

(declare-fun e!45754 () ListLongMap!1385)

(assert (=> b!69909 (= e!45754 call!5982)))

(declare-fun b!69910 () Bool)

(declare-fun e!45749 () ListLongMap!1385)

(declare-fun call!5979 () ListLongMap!1385)

(assert (=> b!69910 (= e!45749 call!5979)))

(declare-fun b!69911 () Bool)

(declare-fun res!37448 () Bool)

(declare-fun e!45752 () Bool)

(assert (=> b!69911 (=> (not res!37448) (not e!45752))))

(declare-fun e!45747 () Bool)

(assert (=> b!69911 (= res!37448 e!45747)))

(declare-fun c!10070 () Bool)

(assert (=> b!69911 (= c!10070 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!15433 () Bool)

(assert (=> d!15433 e!45752))

(declare-fun res!37452 () Bool)

(assert (=> d!15433 (=> (not res!37452) (not e!45752))))

(assert (=> d!15433 (= res!37452 (or (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun lt!30770 () ListLongMap!1385)

(assert (=> d!15433 (= lt!30777 lt!30770)))

(declare-fun lt!30773 () Unit!1909)

(assert (=> d!15433 (= lt!30773 e!45746)))

(declare-fun c!10072 () Bool)

(declare-fun e!45751 () Bool)

(assert (=> d!15433 (= c!10072 e!45751)))

(declare-fun res!37450 () Bool)

(assert (=> d!15433 (=> (not res!37450) (not e!45751))))

(assert (=> d!15433 (= res!37450 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun e!45755 () ListLongMap!1385)

(assert (=> d!15433 (= lt!30770 e!45755)))

(declare-fun c!10068 () Bool)

(assert (=> d!15433 (= c!10068 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15433 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15433 (= (getCurrentListMap!406 (_keys!3811 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30777)))

(declare-fun bm!5976 () Bool)

(declare-fun call!5980 () Bool)

(assert (=> bm!5976 (= call!5980 (contains!710 lt!30777 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5977 () Bool)

(declare-fun call!5977 () Bool)

(assert (=> bm!5977 (= call!5977 (contains!710 lt!30777 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69912 () Bool)

(declare-fun e!45753 () Bool)

(assert (=> b!69912 (= e!45753 e!45744)))

(declare-fun res!37447 () Bool)

(assert (=> b!69912 (= res!37447 call!5980)))

(assert (=> b!69912 (=> (not res!37447) (not e!45744))))

(declare-fun bm!5978 () Bool)

(declare-fun call!5978 () ListLongMap!1385)

(assert (=> bm!5978 (= call!5979 call!5978)))

(declare-fun b!69913 () Bool)

(declare-fun e!45756 () Bool)

(assert (=> b!69913 (= e!45756 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69914 () Bool)

(assert (=> b!69914 (= e!45755 e!45754)))

(declare-fun c!10071 () Bool)

(assert (=> b!69914 (= c!10071 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69915 () Bool)

(assert (=> b!69915 (= e!45755 (+!88 call!5983 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69916 () Bool)

(assert (=> b!69916 (= e!45751 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69917 () Bool)

(declare-fun e!45745 () Bool)

(assert (=> b!69917 (= e!45745 (= (apply!73 lt!30777 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun b!69918 () Bool)

(assert (=> b!69918 (= e!45752 e!45753)))

(declare-fun c!10073 () Bool)

(assert (=> b!69918 (= c!10073 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69919 () Bool)

(declare-fun c!10069 () Bool)

(assert (=> b!69919 (= c!10069 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69919 (= e!45754 e!45749)))

(declare-fun bm!5979 () Bool)

(assert (=> bm!5979 (= call!5983 (+!88 (ite c!10068 call!5981 (ite c!10071 call!5978 call!5979)) (ite (or c!10068 c!10071) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!69920 () Bool)

(assert (=> b!69920 (= e!45753 (not call!5980))))

(declare-fun b!69921 () Bool)

(assert (=> b!69921 (= e!45747 (not call!5977))))

(declare-fun b!69922 () Bool)

(declare-fun res!37451 () Bool)

(assert (=> b!69922 (=> (not res!37451) (not e!45752))))

(assert (=> b!69922 (= res!37451 e!45748)))

(declare-fun res!37449 () Bool)

(assert (=> b!69922 (=> res!37449 e!45748)))

(assert (=> b!69922 (= res!37449 (not e!45756))))

(declare-fun res!37446 () Bool)

(assert (=> b!69922 (=> (not res!37446) (not e!45756))))

(assert (=> b!69922 (= res!37446 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69923 () Bool)

(assert (=> b!69923 (= e!45747 e!45745)))

(declare-fun res!37445 () Bool)

(assert (=> b!69923 (= res!37445 call!5977)))

(assert (=> b!69923 (=> (not res!37445) (not e!45745))))

(declare-fun b!69924 () Bool)

(assert (=> b!69924 (= e!45749 call!5982)))

(declare-fun bm!5980 () Bool)

(assert (=> bm!5980 (= call!5978 call!5981)))

(declare-fun b!69925 () Bool)

(declare-fun Unit!1960 () Unit!1909)

(assert (=> b!69925 (= e!45746 Unit!1960)))

(assert (= (and d!15433 c!10068) b!69915))

(assert (= (and d!15433 (not c!10068)) b!69914))

(assert (= (and b!69914 c!10071) b!69909))

(assert (= (and b!69914 (not c!10071)) b!69919))

(assert (= (and b!69919 c!10069) b!69924))

(assert (= (and b!69919 (not c!10069)) b!69910))

(assert (= (or b!69924 b!69910) bm!5978))

(assert (= (or b!69909 bm!5978) bm!5980))

(assert (= (or b!69909 b!69924) bm!5974))

(assert (= (or b!69915 bm!5980) bm!5975))

(assert (= (or b!69915 bm!5974) bm!5979))

(assert (= (and d!15433 res!37450) b!69916))

(assert (= (and d!15433 c!10072) b!69906))

(assert (= (and d!15433 (not c!10072)) b!69925))

(assert (= (and d!15433 res!37452) b!69922))

(assert (= (and b!69922 res!37446) b!69913))

(assert (= (and b!69922 (not res!37449)) b!69908))

(assert (= (and b!69908 res!37453) b!69907))

(assert (= (and b!69922 res!37451) b!69911))

(assert (= (and b!69911 c!10070) b!69923))

(assert (= (and b!69911 (not c!10070)) b!69921))

(assert (= (and b!69923 res!37445) b!69917))

(assert (= (or b!69923 b!69921) bm!5977))

(assert (= (and b!69911 res!37448) b!69918))

(assert (= (and b!69918 c!10073) b!69912))

(assert (= (and b!69918 (not c!10073)) b!69920))

(assert (= (and b!69912 res!37447) b!69905))

(assert (= (or b!69912 b!69920) bm!5976))

(declare-fun b_lambda!3131 () Bool)

(assert (=> (not b_lambda!3131) (not b!69907)))

(assert (=> b!69907 t!4967))

(declare-fun b_and!4297 () Bool)

(assert (= b_and!4293 (and (=> t!4967 result!2615) b_and!4297)))

(assert (=> b!69907 t!4969))

(declare-fun b_and!4299 () Bool)

(assert (= b_and!4295 (and (=> t!4969 result!2617) b_and!4299)))

(assert (=> b!69913 m!64745))

(assert (=> b!69913 m!64745))

(assert (=> b!69913 m!64747))

(declare-fun m!66509 () Bool)

(assert (=> b!69917 m!66509))

(declare-fun m!66511 () Bool)

(assert (=> b!69915 m!66511))

(declare-fun m!66513 () Bool)

(assert (=> b!69907 m!66513))

(assert (=> b!69907 m!64745))

(assert (=> b!69907 m!64745))

(declare-fun m!66515 () Bool)

(assert (=> b!69907 m!66515))

(assert (=> b!69907 m!66513))

(assert (=> b!69907 m!64757))

(declare-fun m!66517 () Bool)

(assert (=> b!69907 m!66517))

(assert (=> b!69907 m!64757))

(declare-fun m!66519 () Bool)

(assert (=> bm!5977 m!66519))

(assert (=> d!15433 m!64725))

(declare-fun m!66521 () Bool)

(assert (=> b!69906 m!66521))

(declare-fun m!66523 () Bool)

(assert (=> b!69906 m!66523))

(declare-fun m!66525 () Bool)

(assert (=> b!69906 m!66525))

(declare-fun m!66527 () Bool)

(assert (=> b!69906 m!66527))

(declare-fun m!66529 () Bool)

(assert (=> b!69906 m!66529))

(declare-fun m!66531 () Bool)

(assert (=> b!69906 m!66531))

(declare-fun m!66533 () Bool)

(assert (=> b!69906 m!66533))

(assert (=> b!69906 m!66525))

(declare-fun m!66535 () Bool)

(assert (=> b!69906 m!66535))

(assert (=> b!69906 m!66527))

(declare-fun m!66537 () Bool)

(assert (=> b!69906 m!66537))

(declare-fun m!66539 () Bool)

(assert (=> b!69906 m!66539))

(declare-fun m!66541 () Bool)

(assert (=> b!69906 m!66541))

(assert (=> b!69906 m!66521))

(declare-fun m!66543 () Bool)

(assert (=> b!69906 m!66543))

(declare-fun m!66545 () Bool)

(assert (=> b!69906 m!66545))

(assert (=> b!69906 m!66537))

(declare-fun m!66547 () Bool)

(assert (=> b!69906 m!66547))

(assert (=> b!69906 m!64745))

(declare-fun m!66549 () Bool)

(assert (=> b!69906 m!66549))

(declare-fun m!66551 () Bool)

(assert (=> b!69906 m!66551))

(assert (=> bm!5975 m!66547))

(assert (=> b!69908 m!64745))

(assert (=> b!69908 m!64745))

(declare-fun m!66553 () Bool)

(assert (=> b!69908 m!66553))

(assert (=> b!69916 m!64745))

(assert (=> b!69916 m!64745))

(assert (=> b!69916 m!64747))

(declare-fun m!66555 () Bool)

(assert (=> bm!5979 m!66555))

(declare-fun m!66557 () Bool)

(assert (=> b!69905 m!66557))

(declare-fun m!66559 () Bool)

(assert (=> bm!5976 m!66559))

(assert (=> b!68828 d!15433))

(declare-fun d!15435 () Bool)

(declare-fun lt!30785 () Bool)

(assert (=> d!15435 (= lt!30785 (select (content!74 (toList!708 lt!30416)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(declare-fun e!45757 () Bool)

(assert (=> d!15435 (= lt!30785 e!45757)))

(declare-fun res!37454 () Bool)

(assert (=> d!15435 (=> (not res!37454) (not e!45757))))

(assert (=> d!15435 (= res!37454 ((_ is Cons!1455) (toList!708 lt!30416)))))

(assert (=> d!15435 (= (contains!713 (toList!708 lt!30416) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) lt!30785)))

(declare-fun b!69926 () Bool)

(declare-fun e!45758 () Bool)

(assert (=> b!69926 (= e!45757 e!45758)))

(declare-fun res!37455 () Bool)

(assert (=> b!69926 (=> res!37455 e!45758)))

(assert (=> b!69926 (= res!37455 (= (h!2040 (toList!708 lt!30416)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(declare-fun b!69927 () Bool)

(assert (=> b!69927 (= e!45758 (contains!713 (t!4954 (toList!708 lt!30416)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(assert (= (and d!15435 res!37454) b!69926))

(assert (= (and b!69926 (not res!37455)) b!69927))

(declare-fun m!66561 () Bool)

(assert (=> d!15435 m!66561))

(declare-fun m!66563 () Bool)

(assert (=> d!15435 m!66563))

(declare-fun m!66565 () Bool)

(assert (=> b!69927 m!66565))

(assert (=> b!69188 d!15435))

(declare-fun d!15437 () Bool)

(declare-fun res!37456 () Bool)

(declare-fun e!45759 () Bool)

(assert (=> d!15437 (=> res!37456 e!45759)))

(assert (=> d!15437 (= res!37456 (and ((_ is Cons!1455) (toList!708 lt!30109)) (= (_1!1057 (h!2040 (toList!708 lt!30109))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15437 (= (containsKey!135 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45759)))

(declare-fun b!69928 () Bool)

(declare-fun e!45760 () Bool)

(assert (=> b!69928 (= e!45759 e!45760)))

(declare-fun res!37457 () Bool)

(assert (=> b!69928 (=> (not res!37457) (not e!45760))))

(assert (=> b!69928 (= res!37457 (and (or (not ((_ is Cons!1455) (toList!708 lt!30109))) (bvsle (_1!1057 (h!2040 (toList!708 lt!30109))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1455) (toList!708 lt!30109)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30109))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!69929 () Bool)

(assert (=> b!69929 (= e!45760 (containsKey!135 (t!4954 (toList!708 lt!30109)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15437 (not res!37456)) b!69928))

(assert (= (and b!69928 res!37457) b!69929))

(assert (=> b!69929 m!64501))

(declare-fun m!66567 () Bool)

(assert (=> b!69929 m!66567))

(assert (=> d!15045 d!15437))

(assert (=> b!68886 d!15173))

(assert (=> b!69117 d!14815))

(declare-fun d!15439 () Bool)

(declare-fun lt!30786 () Bool)

(assert (=> d!15439 (= lt!30786 (select (content!74 (toList!708 lt!30212)) (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45761 () Bool)

(assert (=> d!15439 (= lt!30786 e!45761)))

(declare-fun res!37458 () Bool)

(assert (=> d!15439 (=> (not res!37458) (not e!45761))))

(assert (=> d!15439 (= res!37458 ((_ is Cons!1455) (toList!708 lt!30212)))))

(assert (=> d!15439 (= (contains!713 (toList!708 lt!30212) (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30786)))

(declare-fun b!69930 () Bool)

(declare-fun e!45762 () Bool)

(assert (=> b!69930 (= e!45761 e!45762)))

(declare-fun res!37459 () Bool)

(assert (=> b!69930 (=> res!37459 e!45762)))

(assert (=> b!69930 (= res!37459 (= (h!2040 (toList!708 lt!30212)) (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69931 () Bool)

(assert (=> b!69931 (= e!45762 (contains!713 (t!4954 (toList!708 lt!30212)) (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15439 res!37458) b!69930))

(assert (= (and b!69930 (not res!37459)) b!69931))

(declare-fun m!66569 () Bool)

(assert (=> d!15439 m!66569))

(declare-fun m!66571 () Bool)

(assert (=> d!15439 m!66571))

(declare-fun m!66573 () Bool)

(assert (=> b!69931 m!66573))

(assert (=> b!68906 d!15439))

(declare-fun d!15441 () Bool)

(declare-fun e!45764 () Bool)

(assert (=> d!15441 e!45764))

(declare-fun res!37460 () Bool)

(assert (=> d!15441 (=> res!37460 e!45764)))

(declare-fun lt!30790 () Bool)

(assert (=> d!15441 (= res!37460 (not lt!30790))))

(declare-fun lt!30789 () Bool)

(assert (=> d!15441 (= lt!30790 lt!30789)))

(declare-fun lt!30787 () Unit!1909)

(declare-fun e!45763 () Unit!1909)

(assert (=> d!15441 (= lt!30787 e!45763)))

(declare-fun c!10074 () Bool)

(assert (=> d!15441 (= c!10074 lt!30789)))

(assert (=> d!15441 (= lt!30789 (containsKey!135 (toList!708 lt!30165) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15441 (= (contains!710 lt!30165 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) lt!30790)))

(declare-fun b!69932 () Bool)

(declare-fun lt!30788 () Unit!1909)

(assert (=> b!69932 (= e!45763 lt!30788)))

(assert (=> b!69932 (= lt!30788 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30165) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69932 (isDefined!84 (getValueByKey!132 (toList!708 lt!30165) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69933 () Bool)

(declare-fun Unit!1961 () Unit!1909)

(assert (=> b!69933 (= e!45763 Unit!1961)))

(declare-fun b!69934 () Bool)

(assert (=> b!69934 (= e!45764 (isDefined!84 (getValueByKey!132 (toList!708 lt!30165) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15441 c!10074) b!69932))

(assert (= (and d!15441 (not c!10074)) b!69933))

(assert (= (and d!15441 (not res!37460)) b!69934))

(assert (=> d!15441 m!64745))

(declare-fun m!66575 () Bool)

(assert (=> d!15441 m!66575))

(assert (=> b!69932 m!64745))

(declare-fun m!66577 () Bool)

(assert (=> b!69932 m!66577))

(assert (=> b!69932 m!64745))

(declare-fun m!66579 () Bool)

(assert (=> b!69932 m!66579))

(assert (=> b!69932 m!66579))

(declare-fun m!66581 () Bool)

(assert (=> b!69932 m!66581))

(assert (=> b!69934 m!64745))

(assert (=> b!69934 m!66579))

(assert (=> b!69934 m!66579))

(assert (=> b!69934 m!66581))

(assert (=> b!68835 d!15441))

(declare-fun b!69937 () Bool)

(declare-fun res!37463 () Bool)

(declare-fun e!45765 () Bool)

(assert (=> b!69937 (=> (not res!37463) (not e!45765))))

(assert (=> b!69937 (= res!37463 (= (size!2074 (v!2494 (underlying!253 thiss!992))) (bvadd (_size!387 (v!2494 (underlying!253 thiss!992))) (bvsdiv (bvadd (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!69936 () Bool)

(declare-fun res!37464 () Bool)

(assert (=> b!69936 (=> (not res!37464) (not e!45765))))

(assert (=> b!69936 (= res!37464 (bvsge (size!2074 (v!2494 (underlying!253 thiss!992))) (_size!387 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun d!15443 () Bool)

(declare-fun res!37461 () Bool)

(assert (=> d!15443 (=> (not res!37461) (not e!45765))))

(assert (=> d!15443 (= res!37461 (validMask!0 (mask!6112 (v!2494 (underlying!253 thiss!992)))))))

(assert (=> d!15443 (= (simpleValid!49 (v!2494 (underlying!253 thiss!992))) e!45765)))

(declare-fun b!69935 () Bool)

(declare-fun res!37462 () Bool)

(assert (=> b!69935 (=> (not res!37462) (not e!45765))))

(assert (=> b!69935 (= res!37462 (and (= (size!2069 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001)) (= (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (size!2069 (_values!2150 (v!2494 (underlying!253 thiss!992))))) (bvsge (_size!387 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!387 (v!2494 (underlying!253 thiss!992))) (bvadd (mask!6112 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!69938 () Bool)

(assert (=> b!69938 (= e!45765 (and (bvsge (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!387 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!15443 res!37461) b!69935))

(assert (= (and b!69935 res!37462) b!69936))

(assert (= (and b!69936 res!37464) b!69937))

(assert (= (and b!69937 res!37463) b!69938))

(declare-fun m!66583 () Bool)

(assert (=> b!69937 m!66583))

(assert (=> b!69936 m!66583))

(assert (=> d!15443 m!64349))

(assert (=> d!15043 d!15443))

(declare-fun d!15445 () Bool)

(declare-fun e!45767 () Bool)

(assert (=> d!15445 e!45767))

(declare-fun res!37465 () Bool)

(assert (=> d!15445 (=> res!37465 e!45767)))

(declare-fun lt!30794 () Bool)

(assert (=> d!15445 (= res!37465 (not lt!30794))))

(declare-fun lt!30793 () Bool)

(assert (=> d!15445 (= lt!30794 lt!30793)))

(declare-fun lt!30791 () Unit!1909)

(declare-fun e!45766 () Unit!1909)

(assert (=> d!15445 (= lt!30791 e!45766)))

(declare-fun c!10075 () Bool)

(assert (=> d!15445 (= c!10075 lt!30793)))

(assert (=> d!15445 (= lt!30793 (containsKey!135 (toList!708 (map!1146 (_2!1058 lt!30308))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15445 (= (contains!710 (map!1146 (_2!1058 lt!30308)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30794)))

(declare-fun b!69939 () Bool)

(declare-fun lt!30792 () Unit!1909)

(assert (=> b!69939 (= e!45766 lt!30792)))

(assert (=> b!69939 (= lt!30792 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (map!1146 (_2!1058 lt!30308))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!69939 (isDefined!84 (getValueByKey!132 (toList!708 (map!1146 (_2!1058 lt!30308))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69940 () Bool)

(declare-fun Unit!1962 () Unit!1909)

(assert (=> b!69940 (= e!45766 Unit!1962)))

(declare-fun b!69941 () Bool)

(assert (=> b!69941 (= e!45767 (isDefined!84 (getValueByKey!132 (toList!708 (map!1146 (_2!1058 lt!30308))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!15445 c!10075) b!69939))

(assert (= (and d!15445 (not c!10075)) b!69940))

(assert (= (and d!15445 (not res!37465)) b!69941))

(assert (=> d!15445 m!64329))

(declare-fun m!66585 () Bool)

(assert (=> d!15445 m!66585))

(assert (=> b!69939 m!64329))

(declare-fun m!66587 () Bool)

(assert (=> b!69939 m!66587))

(assert (=> b!69939 m!64329))

(declare-fun m!66589 () Bool)

(assert (=> b!69939 m!66589))

(assert (=> b!69939 m!66589))

(declare-fun m!66591 () Bool)

(assert (=> b!69939 m!66591))

(assert (=> b!69941 m!64329))

(assert (=> b!69941 m!66589))

(assert (=> b!69941 m!66589))

(assert (=> b!69941 m!66591))

(assert (=> b!68997 d!15445))

(declare-fun d!15447 () Bool)

(assert (=> d!15447 (= (map!1146 (_2!1058 lt!30308)) (getCurrentListMap!406 (_keys!3811 (_2!1058 lt!30308)) (_values!2150 (_2!1058 lt!30308)) (mask!6112 (_2!1058 lt!30308)) (extraKeys!2034 (_2!1058 lt!30308)) (zeroValue!2073 (_2!1058 lt!30308)) (minValue!2073 (_2!1058 lt!30308)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1058 lt!30308))))))

(declare-fun bs!3020 () Bool)

(assert (= bs!3020 d!15447))

(declare-fun m!66593 () Bool)

(assert (=> bs!3020 m!66593))

(assert (=> b!68997 d!15447))

(declare-fun d!15449 () Bool)

(declare-fun e!45768 () Bool)

(assert (=> d!15449 e!45768))

(declare-fun res!37466 () Bool)

(assert (=> d!15449 (=> (not res!37466) (not e!45768))))

(declare-fun lt!30797 () ListLongMap!1385)

(assert (=> d!15449 (= res!37466 (contains!710 lt!30797 (_1!1057 (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(declare-fun lt!30795 () List!1459)

(assert (=> d!15449 (= lt!30797 (ListLongMap!1386 lt!30795))))

(declare-fun lt!30798 () Unit!1909)

(declare-fun lt!30796 () Unit!1909)

(assert (=> d!15449 (= lt!30798 lt!30796)))

(assert (=> d!15449 (= (getValueByKey!132 lt!30795 (_1!1057 (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))) (Some!137 (_2!1057 (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15449 (= lt!30796 (lemmaContainsTupThenGetReturnValue!49 lt!30795 (_1!1057 (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (_2!1057 (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15449 (= lt!30795 (insertStrictlySorted!52 (toList!708 (ite c!9841 call!5890 (ite c!9844 call!5887 call!5888))) (_1!1057 (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (_2!1057 (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15449 (= (+!88 (ite c!9841 call!5890 (ite c!9844 call!5887 call!5888)) (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) lt!30797)))

(declare-fun b!69942 () Bool)

(declare-fun res!37467 () Bool)

(assert (=> b!69942 (=> (not res!37467) (not e!45768))))

(assert (=> b!69942 (= res!37467 (= (getValueByKey!132 (toList!708 lt!30797) (_1!1057 (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))) (Some!137 (_2!1057 (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))))

(declare-fun b!69943 () Bool)

(assert (=> b!69943 (= e!45768 (contains!713 (toList!708 lt!30797) (ite (or c!9841 c!9844) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (= (and d!15449 res!37466) b!69942))

(assert (= (and b!69942 res!37467) b!69943))

(declare-fun m!66595 () Bool)

(assert (=> d!15449 m!66595))

(declare-fun m!66597 () Bool)

(assert (=> d!15449 m!66597))

(declare-fun m!66599 () Bool)

(assert (=> d!15449 m!66599))

(declare-fun m!66601 () Bool)

(assert (=> d!15449 m!66601))

(declare-fun m!66603 () Bool)

(assert (=> b!69942 m!66603))

(declare-fun m!66605 () Bool)

(assert (=> b!69943 m!66605))

(assert (=> bm!5888 d!15449))

(declare-fun d!15451 () Bool)

(declare-fun lt!30799 () Bool)

(assert (=> d!15451 (= lt!30799 (select (content!74 (toList!708 lt!30175)) (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45769 () Bool)

(assert (=> d!15451 (= lt!30799 e!45769)))

(declare-fun res!37468 () Bool)

(assert (=> d!15451 (=> (not res!37468) (not e!45769))))

(assert (=> d!15451 (= res!37468 ((_ is Cons!1455) (toList!708 lt!30175)))))

(assert (=> d!15451 (= (contains!713 (toList!708 lt!30175) (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30799)))

(declare-fun b!69944 () Bool)

(declare-fun e!45770 () Bool)

(assert (=> b!69944 (= e!45769 e!45770)))

(declare-fun res!37469 () Bool)

(assert (=> b!69944 (=> res!37469 e!45770)))

(assert (=> b!69944 (= res!37469 (= (h!2040 (toList!708 lt!30175)) (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69945 () Bool)

(assert (=> b!69945 (= e!45770 (contains!713 (t!4954 (toList!708 lt!30175)) (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (= (and d!15451 res!37468) b!69944))

(assert (= (and b!69944 (not res!37469)) b!69945))

(declare-fun m!66607 () Bool)

(assert (=> d!15451 m!66607))

(declare-fun m!66609 () Bool)

(assert (=> d!15451 m!66609))

(declare-fun m!66611 () Bool)

(assert (=> b!69945 m!66611))

(assert (=> b!68854 d!15451))

(assert (=> d!15009 d!14929))

(declare-fun d!15453 () Bool)

(declare-fun e!45773 () Bool)

(assert (=> d!15453 e!45773))

(declare-fun res!37475 () Bool)

(assert (=> d!15453 (=> (not res!37475) (not e!45773))))

(declare-fun lt!30802 () SeekEntryResult!228)

(assert (=> d!15453 (= res!37475 ((_ is Found!228) lt!30802))))

(assert (=> d!15453 (= lt!30802 (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3811 newMap!16) (mask!6112 newMap!16)))))

(assert (=> d!15453 true))

(declare-fun _$33!54 () Unit!1909)

(assert (=> d!15453 (= (choose!397 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)) _$33!54)))

(declare-fun b!69950 () Bool)

(declare-fun res!37474 () Bool)

(assert (=> b!69950 (=> (not res!37474) (not e!45773))))

(assert (=> b!69950 (= res!37474 (inRange!0 (index!3042 lt!30802) (mask!6112 newMap!16)))))

(declare-fun b!69951 () Bool)

(assert (=> b!69951 (= e!45773 (= (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30802)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15453 res!37475) b!69950))

(assert (= (and b!69950 res!37474) b!69951))

(assert (=> d!15453 m!64329))

(assert (=> d!15453 m!64537))

(declare-fun m!66613 () Bool)

(assert (=> b!69950 m!66613))

(declare-fun m!66615 () Bool)

(assert (=> b!69951 m!66615))

(assert (=> d!15009 d!15453))

(assert (=> d!15009 d!15065))

(declare-fun d!15455 () Bool)

(assert (=> d!15455 (= (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69086 d!15455))

(declare-fun d!15457 () Bool)

(assert (=> d!15457 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3021 () Bool)

(assert (= bs!3021 d!15457))

(assert (=> bs!3021 m!65003))

(declare-fun m!66617 () Bool)

(assert (=> bs!3021 m!66617))

(assert (=> b!69002 d!15457))

(declare-fun b!69955 () Bool)

(declare-fun e!45775 () Option!138)

(assert (=> b!69955 (= e!45775 None!136)))

(declare-fun b!69954 () Bool)

(assert (=> b!69954 (= e!45775 (getValueByKey!132 (t!4954 (toList!708 lt!30109)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69952 () Bool)

(declare-fun e!45774 () Option!138)

(assert (=> b!69952 (= e!45774 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30109)))))))

(declare-fun d!15459 () Bool)

(declare-fun c!10076 () Bool)

(assert (=> d!15459 (= c!10076 (and ((_ is Cons!1455) (toList!708 lt!30109)) (= (_1!1057 (h!2040 (toList!708 lt!30109))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15459 (= (getValueByKey!132 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000) e!45774)))

(declare-fun b!69953 () Bool)

(assert (=> b!69953 (= e!45774 e!45775)))

(declare-fun c!10077 () Bool)

(assert (=> b!69953 (= c!10077 (and ((_ is Cons!1455) (toList!708 lt!30109)) (not (= (_1!1057 (h!2040 (toList!708 lt!30109))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15459 c!10076) b!69952))

(assert (= (and d!15459 (not c!10076)) b!69953))

(assert (= (and b!69953 c!10077) b!69954))

(assert (= (and b!69953 (not c!10077)) b!69955))

(declare-fun m!66619 () Bool)

(assert (=> b!69954 m!66619))

(assert (=> b!69002 d!15459))

(assert (=> d!14899 d!14877))

(assert (=> d!14899 d!14903))

(declare-fun d!15461 () Bool)

(declare-fun e!45777 () Bool)

(assert (=> d!15461 e!45777))

(declare-fun res!37476 () Bool)

(assert (=> d!15461 (=> res!37476 e!45777)))

(declare-fun lt!30806 () Bool)

(assert (=> d!15461 (= res!37476 (not lt!30806))))

(declare-fun lt!30805 () Bool)

(assert (=> d!15461 (= lt!30806 lt!30805)))

(declare-fun lt!30803 () Unit!1909)

(declare-fun e!45776 () Unit!1909)

(assert (=> d!15461 (= lt!30803 e!45776)))

(declare-fun c!10078 () Bool)

(assert (=> d!15461 (= c!10078 lt!30805)))

(assert (=> d!15461 (= lt!30805 (containsKey!135 (toList!708 lt!30083) lt!30092))))

(assert (=> d!15461 (= (contains!710 lt!30083 lt!30092) lt!30806)))

(declare-fun b!69956 () Bool)

(declare-fun lt!30804 () Unit!1909)

(assert (=> b!69956 (= e!45776 lt!30804)))

(assert (=> b!69956 (= lt!30804 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30083) lt!30092))))

(assert (=> b!69956 (isDefined!84 (getValueByKey!132 (toList!708 lt!30083) lt!30092))))

(declare-fun b!69957 () Bool)

(declare-fun Unit!1963 () Unit!1909)

(assert (=> b!69957 (= e!45776 Unit!1963)))

(declare-fun b!69958 () Bool)

(assert (=> b!69958 (= e!45777 (isDefined!84 (getValueByKey!132 (toList!708 lt!30083) lt!30092)))))

(assert (= (and d!15461 c!10078) b!69956))

(assert (= (and d!15461 (not c!10078)) b!69957))

(assert (= (and d!15461 (not res!37476)) b!69958))

(declare-fun m!66621 () Bool)

(assert (=> d!15461 m!66621))

(declare-fun m!66623 () Bool)

(assert (=> b!69956 m!66623))

(assert (=> b!69956 m!64881))

(assert (=> b!69956 m!64881))

(declare-fun m!66625 () Bool)

(assert (=> b!69956 m!66625))

(assert (=> b!69958 m!64881))

(assert (=> b!69958 m!64881))

(assert (=> b!69958 m!66625))

(assert (=> d!14899 d!15461))

(assert (=> d!14899 d!14891))

(declare-fun d!15463 () Bool)

(assert (=> d!15463 (= (apply!73 (+!88 lt!30083 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30092) (apply!73 lt!30083 lt!30092))))

(assert (=> d!15463 true))

(declare-fun _$34!794 () Unit!1909)

(assert (=> d!15463 (= (choose!392 lt!30083 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30092) _$34!794)))

(declare-fun bs!3022 () Bool)

(assert (= bs!3022 d!15463))

(assert (=> bs!3022 m!64619))

(assert (=> bs!3022 m!64619))

(assert (=> bs!3022 m!64621))

(assert (=> bs!3022 m!64631))

(assert (=> d!14899 d!15463))

(declare-fun d!15465 () Bool)

(declare-fun res!37477 () Bool)

(declare-fun e!45778 () Bool)

(assert (=> d!15465 (=> res!37477 e!45778)))

(assert (=> d!15465 (= res!37477 (and ((_ is Cons!1455) (toList!708 lt!30085)) (= (_1!1057 (h!2040 (toList!708 lt!30085))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15465 (= (containsKey!135 (toList!708 lt!30085) #b1000000000000000000000000000000000000000000000000000000000000000) e!45778)))

(declare-fun b!69960 () Bool)

(declare-fun e!45779 () Bool)

(assert (=> b!69960 (= e!45778 e!45779)))

(declare-fun res!37478 () Bool)

(assert (=> b!69960 (=> (not res!37478) (not e!45779))))

(assert (=> b!69960 (= res!37478 (and (or (not ((_ is Cons!1455) (toList!708 lt!30085))) (bvsle (_1!1057 (h!2040 (toList!708 lt!30085))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1455) (toList!708 lt!30085)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30085))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69961 () Bool)

(assert (=> b!69961 (= e!45779 (containsKey!135 (t!4954 (toList!708 lt!30085)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15465 (not res!37477)) b!69960))

(assert (= (and b!69960 res!37478) b!69961))

(declare-fun m!66627 () Bool)

(assert (=> b!69961 m!66627))

(assert (=> d!14933 d!15465))

(assert (=> d!14871 d!14815))

(declare-fun d!15467 () Bool)

(declare-fun res!37479 () Bool)

(declare-fun e!45780 () Bool)

(assert (=> d!15467 (=> res!37479 e!45780)))

(assert (=> d!15467 (= res!37479 (and ((_ is Cons!1455) (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))) (= (_1!1057 (h!2040 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15467 (= (containsKey!135 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45780)))

(declare-fun b!69962 () Bool)

(declare-fun e!45781 () Bool)

(assert (=> b!69962 (= e!45780 e!45781)))

(declare-fun res!37480 () Bool)

(assert (=> b!69962 (=> (not res!37480) (not e!45781))))

(assert (=> b!69962 (= res!37480 (and (or (not ((_ is Cons!1455) (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))))) (bvsle (_1!1057 (h!2040 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1455) (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))) (bvslt (_1!1057 (h!2040 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!69963 () Bool)

(assert (=> b!69963 (= e!45781 (containsKey!135 (t!4954 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15467 (not res!37479)) b!69962))

(assert (= (and b!69962 res!37480) b!69963))

(assert (=> b!69963 m!64329))

(declare-fun m!66629 () Bool)

(assert (=> b!69963 m!66629))

(assert (=> d!14859 d!15467))

(declare-fun d!15469 () Bool)

(assert (=> d!15469 (= (get!1133 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68999 d!15469))

(declare-fun b!69967 () Bool)

(declare-fun e!45783 () Option!138)

(assert (=> b!69967 (= e!45783 None!136)))

(declare-fun b!69966 () Bool)

(assert (=> b!69966 (= e!45783 (getValueByKey!132 (t!4954 (t!4954 (toList!708 lt!30136))) (_1!1057 lt!29850)))))

(declare-fun b!69964 () Bool)

(declare-fun e!45782 () Option!138)

(assert (=> b!69964 (= e!45782 (Some!137 (_2!1057 (h!2040 (t!4954 (toList!708 lt!30136))))))))

(declare-fun d!15471 () Bool)

(declare-fun c!10079 () Bool)

(assert (=> d!15471 (= c!10079 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!30136))) (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!30136)))) (_1!1057 lt!29850))))))

(assert (=> d!15471 (= (getValueByKey!132 (t!4954 (toList!708 lt!30136)) (_1!1057 lt!29850)) e!45782)))

(declare-fun b!69965 () Bool)

(assert (=> b!69965 (= e!45782 e!45783)))

(declare-fun c!10080 () Bool)

(assert (=> b!69965 (= c!10080 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!30136))) (not (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!30136)))) (_1!1057 lt!29850)))))))

(assert (= (and d!15471 c!10079) b!69964))

(assert (= (and d!15471 (not c!10079)) b!69965))

(assert (= (and b!69965 c!10080) b!69966))

(assert (= (and b!69965 (not c!10080)) b!69967))

(declare-fun m!66631 () Bool)

(assert (=> b!69966 m!66631))

(assert (=> b!69212 d!15471))

(declare-fun d!15473 () Bool)

(declare-fun e!45784 () Bool)

(assert (=> d!15473 e!45784))

(declare-fun res!37481 () Bool)

(assert (=> d!15473 (=> (not res!37481) (not e!45784))))

(declare-fun lt!30809 () ListLongMap!1385)

(assert (=> d!15473 (= res!37481 (contains!710 lt!30809 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(declare-fun lt!30807 () List!1459)

(assert (=> d!15473 (= lt!30809 (ListLongMap!1386 lt!30807))))

(declare-fun lt!30810 () Unit!1909)

(declare-fun lt!30808 () Unit!1909)

(assert (=> d!15473 (= lt!30810 lt!30808)))

(assert (=> d!15473 (= (getValueByKey!132 lt!30807 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(assert (=> d!15473 (= lt!30808 (lemmaContainsTupThenGetReturnValue!49 lt!30807 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(assert (=> d!15473 (= lt!30807 (insertStrictlySorted!52 (toList!708 call!5906) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(assert (=> d!15473 (= (+!88 call!5906 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))) lt!30809)))

(declare-fun b!69968 () Bool)

(declare-fun res!37482 () Bool)

(assert (=> b!69968 (=> (not res!37482) (not e!45784))))

(assert (=> b!69968 (= res!37482 (= (getValueByKey!132 (toList!708 lt!30809) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))))

(declare-fun b!69969 () Bool)

(assert (=> b!69969 (= e!45784 (contains!713 (toList!708 lt!30809) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))

(assert (= (and d!15473 res!37481) b!69968))

(assert (= (and b!69968 res!37482) b!69969))

(declare-fun m!66633 () Bool)

(assert (=> d!15473 m!66633))

(declare-fun m!66635 () Bool)

(assert (=> d!15473 m!66635))

(declare-fun m!66637 () Bool)

(assert (=> d!15473 m!66637))

(declare-fun m!66639 () Bool)

(assert (=> d!15473 m!66639))

(declare-fun m!66641 () Bool)

(assert (=> b!69968 m!66641))

(declare-fun m!66643 () Bool)

(assert (=> b!69969 m!66643))

(assert (=> b!69227 d!15473))

(assert (=> d!15053 d!15051))

(declare-fun d!15475 () Bool)

(assert (=> d!15475 (= (getValueByKey!132 lt!30130 (_1!1057 lt!29846)) (Some!137 (_2!1057 lt!29846)))))

(assert (=> d!15475 true))

(declare-fun _$22!375 () Unit!1909)

(assert (=> d!15475 (= (choose!394 lt!30130 (_1!1057 lt!29846) (_2!1057 lt!29846)) _$22!375)))

(declare-fun bs!3023 () Bool)

(assert (= bs!3023 d!15475))

(assert (=> bs!3023 m!64687))

(assert (=> d!15053 d!15475))

(declare-fun d!15477 () Bool)

(declare-fun res!37483 () Bool)

(declare-fun e!45785 () Bool)

(assert (=> d!15477 (=> res!37483 e!45785)))

(assert (=> d!15477 (= res!37483 (or ((_ is Nil!1456) lt!30130) ((_ is Nil!1456) (t!4954 lt!30130))))))

(assert (=> d!15477 (= (isStrictlySorted!277 lt!30130) e!45785)))

(declare-fun b!69970 () Bool)

(declare-fun e!45786 () Bool)

(assert (=> b!69970 (= e!45785 e!45786)))

(declare-fun res!37484 () Bool)

(assert (=> b!69970 (=> (not res!37484) (not e!45786))))

(assert (=> b!69970 (= res!37484 (bvslt (_1!1057 (h!2040 lt!30130)) (_1!1057 (h!2040 (t!4954 lt!30130)))))))

(declare-fun b!69971 () Bool)

(assert (=> b!69971 (= e!45786 (isStrictlySorted!277 (t!4954 lt!30130)))))

(assert (= (and d!15477 (not res!37483)) b!69970))

(assert (= (and b!69970 res!37484) b!69971))

(declare-fun m!66645 () Bool)

(assert (=> b!69971 m!66645))

(assert (=> d!15053 d!15477))

(assert (=> b!68840 d!15173))

(declare-fun d!15479 () Bool)

(declare-fun e!45787 () Bool)

(assert (=> d!15479 e!45787))

(declare-fun res!37485 () Bool)

(assert (=> d!15479 (=> (not res!37485) (not e!45787))))

(declare-fun lt!30813 () ListLongMap!1385)

(assert (=> d!15479 (= res!37485 (contains!710 lt!30813 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849))))))

(declare-fun lt!30811 () List!1459)

(assert (=> d!15479 (= lt!30813 (ListLongMap!1386 lt!30811))))

(declare-fun lt!30814 () Unit!1909)

(declare-fun lt!30812 () Unit!1909)

(assert (=> d!15479 (= lt!30814 lt!30812)))

(assert (=> d!15479 (= (getValueByKey!132 lt!30811 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849))) (Some!137 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849))))))

(assert (=> d!15479 (= lt!30812 (lemmaContainsTupThenGetReturnValue!49 lt!30811 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849))))))

(assert (=> d!15479 (= lt!30811 (insertStrictlySorted!52 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849))))))

(assert (=> d!15479 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849)) lt!30813)))

(declare-fun b!69972 () Bool)

(declare-fun res!37486 () Bool)

(assert (=> b!69972 (=> (not res!37486) (not e!45787))))

(assert (=> b!69972 (= res!37486 (= (getValueByKey!132 (toList!708 lt!30813) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849))) (Some!137 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849)))))))

(declare-fun b!69973 () Bool)

(assert (=> b!69973 (= e!45787 (contains!713 (toList!708 lt!30813) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849)))))

(assert (= (and d!15479 res!37485) b!69972))

(assert (= (and b!69972 res!37486) b!69973))

(declare-fun m!66647 () Bool)

(assert (=> d!15479 m!66647))

(declare-fun m!66649 () Bool)

(assert (=> d!15479 m!66649))

(declare-fun m!66651 () Bool)

(assert (=> d!15479 m!66651))

(declare-fun m!66653 () Bool)

(assert (=> d!15479 m!66653))

(declare-fun m!66655 () Bool)

(assert (=> b!69972 m!66655))

(declare-fun m!66657 () Bool)

(assert (=> b!69973 m!66657))

(assert (=> d!15027 d!15479))

(declare-fun b!69974 () Bool)

(declare-fun e!45788 () Bool)

(declare-fun lt!30829 () ListLongMap!1385)

(assert (=> b!69974 (= e!45788 (= (apply!73 lt!30829 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!69975 () Bool)

(declare-fun e!45790 () Unit!1909)

(declare-fun lt!30826 () Unit!1909)

(assert (=> b!69975 (= e!45790 lt!30826)))

(declare-fun lt!30816 () ListLongMap!1385)

(assert (=> b!69975 (= lt!30816 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30025 lt!29849 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30832 () (_ BitVec 64))

(assert (=> b!69975 (= lt!30832 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30821 () (_ BitVec 64))

(assert (=> b!69975 (= lt!30821 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30820 () Unit!1909)

(assert (=> b!69975 (= lt!30820 (addStillContains!49 lt!30816 lt!30832 lt!29849 lt!30821))))

(assert (=> b!69975 (contains!710 (+!88 lt!30816 (tuple2!2093 lt!30832 lt!29849)) lt!30821)))

(declare-fun lt!30830 () Unit!1909)

(assert (=> b!69975 (= lt!30830 lt!30820)))

(declare-fun lt!30827 () ListLongMap!1385)

(assert (=> b!69975 (= lt!30827 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30025 lt!29849 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30817 () (_ BitVec 64))

(assert (=> b!69975 (= lt!30817 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30836 () (_ BitVec 64))

(assert (=> b!69975 (= lt!30836 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30824 () Unit!1909)

(assert (=> b!69975 (= lt!30824 (addApplyDifferent!49 lt!30827 lt!30817 (minValue!2073 newMap!16) lt!30836))))

(assert (=> b!69975 (= (apply!73 (+!88 lt!30827 (tuple2!2093 lt!30817 (minValue!2073 newMap!16))) lt!30836) (apply!73 lt!30827 lt!30836))))

(declare-fun lt!30818 () Unit!1909)

(assert (=> b!69975 (= lt!30818 lt!30824)))

(declare-fun lt!30834 () ListLongMap!1385)

(assert (=> b!69975 (= lt!30834 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30025 lt!29849 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30835 () (_ BitVec 64))

(assert (=> b!69975 (= lt!30835 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30828 () (_ BitVec 64))

(assert (=> b!69975 (= lt!30828 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30833 () Unit!1909)

(assert (=> b!69975 (= lt!30833 (addApplyDifferent!49 lt!30834 lt!30835 lt!29849 lt!30828))))

(assert (=> b!69975 (= (apply!73 (+!88 lt!30834 (tuple2!2093 lt!30835 lt!29849)) lt!30828) (apply!73 lt!30834 lt!30828))))

(declare-fun lt!30819 () Unit!1909)

(assert (=> b!69975 (= lt!30819 lt!30833)))

(declare-fun lt!30831 () ListLongMap!1385)

(assert (=> b!69975 (= lt!30831 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30025 lt!29849 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30823 () (_ BitVec 64))

(assert (=> b!69975 (= lt!30823 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30815 () (_ BitVec 64))

(assert (=> b!69975 (= lt!30815 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69975 (= lt!30826 (addApplyDifferent!49 lt!30831 lt!30823 (minValue!2073 newMap!16) lt!30815))))

(assert (=> b!69975 (= (apply!73 (+!88 lt!30831 (tuple2!2093 lt!30823 (minValue!2073 newMap!16))) lt!30815) (apply!73 lt!30831 lt!30815))))

(declare-fun bm!5981 () Bool)

(declare-fun call!5989 () ListLongMap!1385)

(declare-fun call!5990 () ListLongMap!1385)

(assert (=> bm!5981 (= call!5989 call!5990)))

(declare-fun b!69976 () Bool)

(declare-fun e!45794 () Bool)

(assert (=> b!69976 (= e!45794 (= (apply!73 lt!30829 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69976 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_values!2150 newMap!16))))))

(assert (=> b!69976 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun call!5988 () ListLongMap!1385)

(declare-fun bm!5982 () Bool)

(assert (=> bm!5982 (= call!5988 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30025 lt!29849 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69977 () Bool)

(declare-fun e!45792 () Bool)

(assert (=> b!69977 (= e!45792 e!45794)))

(declare-fun res!37495 () Bool)

(assert (=> b!69977 (=> (not res!37495) (not e!45794))))

(assert (=> b!69977 (= res!37495 (contains!710 lt!30829 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69977 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69978 () Bool)

(declare-fun e!45798 () ListLongMap!1385)

(assert (=> b!69978 (= e!45798 call!5989)))

(declare-fun b!69979 () Bool)

(declare-fun e!45793 () ListLongMap!1385)

(declare-fun call!5986 () ListLongMap!1385)

(assert (=> b!69979 (= e!45793 call!5986)))

(declare-fun b!69980 () Bool)

(declare-fun res!37490 () Bool)

(declare-fun e!45796 () Bool)

(assert (=> b!69980 (=> (not res!37490) (not e!45796))))

(declare-fun e!45791 () Bool)

(assert (=> b!69980 (= res!37490 e!45791)))

(declare-fun c!10083 () Bool)

(assert (=> b!69980 (= c!10083 (not (= (bvand lt!30025 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!15481 () Bool)

(assert (=> d!15481 e!45796))

(declare-fun res!37494 () Bool)

(assert (=> d!15481 (=> (not res!37494) (not e!45796))))

(assert (=> d!15481 (= res!37494 (or (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun lt!30822 () ListLongMap!1385)

(assert (=> d!15481 (= lt!30829 lt!30822)))

(declare-fun lt!30825 () Unit!1909)

(assert (=> d!15481 (= lt!30825 e!45790)))

(declare-fun c!10085 () Bool)

(declare-fun e!45795 () Bool)

(assert (=> d!15481 (= c!10085 e!45795)))

(declare-fun res!37492 () Bool)

(assert (=> d!15481 (=> (not res!37492) (not e!45795))))

(assert (=> d!15481 (= res!37492 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun e!45799 () ListLongMap!1385)

(assert (=> d!15481 (= lt!30822 e!45799)))

(declare-fun c!10081 () Bool)

(assert (=> d!15481 (= c!10081 (and (not (= (bvand lt!30025 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!30025 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15481 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15481 (= (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30025 lt!29849 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30829)))

(declare-fun bm!5983 () Bool)

(declare-fun call!5987 () Bool)

(assert (=> bm!5983 (= call!5987 (contains!710 lt!30829 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5984 () Bool)

(declare-fun call!5984 () Bool)

(assert (=> bm!5984 (= call!5984 (contains!710 lt!30829 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69981 () Bool)

(declare-fun e!45797 () Bool)

(assert (=> b!69981 (= e!45797 e!45788)))

(declare-fun res!37489 () Bool)

(assert (=> b!69981 (= res!37489 call!5987)))

(assert (=> b!69981 (=> (not res!37489) (not e!45788))))

(declare-fun bm!5985 () Bool)

(declare-fun call!5985 () ListLongMap!1385)

(assert (=> bm!5985 (= call!5986 call!5985)))

(declare-fun b!69982 () Bool)

(declare-fun e!45800 () Bool)

(assert (=> b!69982 (= e!45800 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69983 () Bool)

(assert (=> b!69983 (= e!45799 e!45798)))

(declare-fun c!10084 () Bool)

(assert (=> b!69983 (= c!10084 (and (not (= (bvand lt!30025 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!30025 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69984 () Bool)

(assert (=> b!69984 (= e!45799 (+!88 call!5990 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69985 () Bool)

(assert (=> b!69985 (= e!45795 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69986 () Bool)

(declare-fun e!45789 () Bool)

(assert (=> b!69986 (= e!45789 (= (apply!73 lt!30829 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29849))))

(declare-fun b!69987 () Bool)

(assert (=> b!69987 (= e!45796 e!45797)))

(declare-fun c!10086 () Bool)

(assert (=> b!69987 (= c!10086 (not (= (bvand lt!30025 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69988 () Bool)

(declare-fun c!10082 () Bool)

(assert (=> b!69988 (= c!10082 (and (not (= (bvand lt!30025 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!30025 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69988 (= e!45798 e!45793)))

(declare-fun bm!5986 () Bool)

(assert (=> bm!5986 (= call!5990 (+!88 (ite c!10081 call!5988 (ite c!10084 call!5985 call!5986)) (ite (or c!10081 c!10084) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!69989 () Bool)

(assert (=> b!69989 (= e!45797 (not call!5987))))

(declare-fun b!69990 () Bool)

(assert (=> b!69990 (= e!45791 (not call!5984))))

(declare-fun b!69991 () Bool)

(declare-fun res!37493 () Bool)

(assert (=> b!69991 (=> (not res!37493) (not e!45796))))

(assert (=> b!69991 (= res!37493 e!45792)))

(declare-fun res!37491 () Bool)

(assert (=> b!69991 (=> res!37491 e!45792)))

(assert (=> b!69991 (= res!37491 (not e!45800))))

(declare-fun res!37488 () Bool)

(assert (=> b!69991 (=> (not res!37488) (not e!45800))))

(assert (=> b!69991 (= res!37488 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!69992 () Bool)

(assert (=> b!69992 (= e!45791 e!45789)))

(declare-fun res!37487 () Bool)

(assert (=> b!69992 (= res!37487 call!5984)))

(assert (=> b!69992 (=> (not res!37487) (not e!45789))))

(declare-fun b!69993 () Bool)

(assert (=> b!69993 (= e!45793 call!5989)))

(declare-fun bm!5987 () Bool)

(assert (=> bm!5987 (= call!5985 call!5988)))

(declare-fun b!69994 () Bool)

(declare-fun Unit!1964 () Unit!1909)

(assert (=> b!69994 (= e!45790 Unit!1964)))

(assert (= (and d!15481 c!10081) b!69984))

(assert (= (and d!15481 (not c!10081)) b!69983))

(assert (= (and b!69983 c!10084) b!69978))

(assert (= (and b!69983 (not c!10084)) b!69988))

(assert (= (and b!69988 c!10082) b!69993))

(assert (= (and b!69988 (not c!10082)) b!69979))

(assert (= (or b!69993 b!69979) bm!5985))

(assert (= (or b!69978 bm!5985) bm!5987))

(assert (= (or b!69978 b!69993) bm!5981))

(assert (= (or b!69984 bm!5987) bm!5982))

(assert (= (or b!69984 bm!5981) bm!5986))

(assert (= (and d!15481 res!37492) b!69985))

(assert (= (and d!15481 c!10085) b!69975))

(assert (= (and d!15481 (not c!10085)) b!69994))

(assert (= (and d!15481 res!37494) b!69991))

(assert (= (and b!69991 res!37488) b!69982))

(assert (= (and b!69991 (not res!37491)) b!69977))

(assert (= (and b!69977 res!37495) b!69976))

(assert (= (and b!69991 res!37493) b!69980))

(assert (= (and b!69980 c!10083) b!69992))

(assert (= (and b!69980 (not c!10083)) b!69990))

(assert (= (and b!69992 res!37487) b!69986))

(assert (= (or b!69992 b!69990) bm!5984))

(assert (= (and b!69980 res!37490) b!69987))

(assert (= (and b!69987 c!10086) b!69981))

(assert (= (and b!69987 (not c!10086)) b!69989))

(assert (= (and b!69981 res!37489) b!69974))

(assert (= (or b!69981 b!69989) bm!5983))

(declare-fun b_lambda!3133 () Bool)

(assert (=> (not b_lambda!3133) (not b!69976)))

(assert (=> b!69976 t!4967))

(declare-fun b_and!4301 () Bool)

(assert (= b_and!4297 (and (=> t!4967 result!2615) b_and!4301)))

(assert (=> b!69976 t!4969))

(declare-fun b_and!4303 () Bool)

(assert (= b_and!4299 (and (=> t!4969 result!2617) b_and!4303)))

(assert (=> b!69982 m!64745))

(assert (=> b!69982 m!64745))

(assert (=> b!69982 m!64747))

(declare-fun m!66659 () Bool)

(assert (=> b!69986 m!66659))

(declare-fun m!66661 () Bool)

(assert (=> b!69984 m!66661))

(assert (=> b!69976 m!64753))

(assert (=> b!69976 m!64745))

(assert (=> b!69976 m!64745))

(declare-fun m!66663 () Bool)

(assert (=> b!69976 m!66663))

(assert (=> b!69976 m!64753))

(assert (=> b!69976 m!64757))

(assert (=> b!69976 m!64759))

(assert (=> b!69976 m!64757))

(declare-fun m!66665 () Bool)

(assert (=> bm!5984 m!66665))

(assert (=> d!15481 m!64725))

(declare-fun m!66667 () Bool)

(assert (=> b!69975 m!66667))

(declare-fun m!66669 () Bool)

(assert (=> b!69975 m!66669))

(declare-fun m!66671 () Bool)

(assert (=> b!69975 m!66671))

(declare-fun m!66673 () Bool)

(assert (=> b!69975 m!66673))

(declare-fun m!66675 () Bool)

(assert (=> b!69975 m!66675))

(declare-fun m!66677 () Bool)

(assert (=> b!69975 m!66677))

(declare-fun m!66679 () Bool)

(assert (=> b!69975 m!66679))

(assert (=> b!69975 m!66671))

(declare-fun m!66681 () Bool)

(assert (=> b!69975 m!66681))

(assert (=> b!69975 m!66673))

(declare-fun m!66683 () Bool)

(assert (=> b!69975 m!66683))

(declare-fun m!66685 () Bool)

(assert (=> b!69975 m!66685))

(declare-fun m!66687 () Bool)

(assert (=> b!69975 m!66687))

(assert (=> b!69975 m!66667))

(declare-fun m!66689 () Bool)

(assert (=> b!69975 m!66689))

(declare-fun m!66691 () Bool)

(assert (=> b!69975 m!66691))

(assert (=> b!69975 m!66683))

(declare-fun m!66693 () Bool)

(assert (=> b!69975 m!66693))

(assert (=> b!69975 m!64745))

(declare-fun m!66695 () Bool)

(assert (=> b!69975 m!66695))

(declare-fun m!66697 () Bool)

(assert (=> b!69975 m!66697))

(assert (=> bm!5982 m!66693))

(assert (=> b!69977 m!64745))

(assert (=> b!69977 m!64745))

(declare-fun m!66699 () Bool)

(assert (=> b!69977 m!66699))

(assert (=> b!69985 m!64745))

(assert (=> b!69985 m!64745))

(assert (=> b!69985 m!64747))

(declare-fun m!66701 () Bool)

(assert (=> bm!5986 m!66701))

(declare-fun m!66703 () Bool)

(assert (=> b!69974 m!66703))

(declare-fun m!66705 () Bool)

(assert (=> bm!5983 m!66705))

(assert (=> d!15027 d!15481))

(assert (=> d!15027 d!14861))

(assert (=> d!15027 d!15065))

(declare-fun d!15483 () Bool)

(assert (=> d!15483 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30025 lt!29849 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15483 true))

(declare-fun _$7!56 () Unit!1909)

(assert (=> d!15483 (= (choose!398 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) lt!30025 (zeroValue!2073 newMap!16) lt!29849 (minValue!2073 newMap!16) (defaultEntry!2167 newMap!16)) _$7!56)))

(declare-fun bs!3024 () Bool)

(assert (= bs!3024 d!15483))

(assert (=> bs!3024 m!64525))

(assert (=> bs!3024 m!64525))

(assert (=> bs!3024 m!65451))

(assert (=> bs!3024 m!65449))

(assert (=> d!15027 d!15483))

(declare-fun d!15485 () Bool)

(declare-fun lt!30837 () Bool)

(assert (=> d!15485 (= lt!30837 (select (content!74 lt!30482) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun e!45801 () Bool)

(assert (=> d!15485 (= lt!30837 e!45801)))

(declare-fun res!37496 () Bool)

(assert (=> d!15485 (=> (not res!37496) (not e!45801))))

(assert (=> d!15485 (= res!37496 ((_ is Cons!1455) lt!30482))))

(assert (=> d!15485 (= (contains!713 lt!30482 (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))) lt!30837)))

(declare-fun b!69995 () Bool)

(declare-fun e!45802 () Bool)

(assert (=> b!69995 (= e!45801 e!45802)))

(declare-fun res!37497 () Bool)

(assert (=> b!69995 (=> res!37497 e!45802)))

(assert (=> b!69995 (= res!37497 (= (h!2040 lt!30482) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun b!69996 () Bool)

(assert (=> b!69996 (= e!45802 (contains!713 (t!4954 lt!30482) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(assert (= (and d!15485 res!37496) b!69995))

(assert (= (and b!69995 (not res!37497)) b!69996))

(declare-fun m!66707 () Bool)

(assert (=> d!15485 m!66707))

(declare-fun m!66709 () Bool)

(assert (=> d!15485 m!66709))

(declare-fun m!66711 () Bool)

(assert (=> b!69996 m!66711))

(assert (=> b!69265 d!15485))

(declare-fun d!15487 () Bool)

(assert (=> d!15487 (= (apply!73 lt!30387 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1134 (getValueByKey!132 (toList!708 lt!30387) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3025 () Bool)

(assert (= bs!3025 d!15487))

(assert (=> bs!3025 m!64745))

(assert (=> bs!3025 m!66079))

(assert (=> bs!3025 m!66079))

(declare-fun m!66713 () Bool)

(assert (=> bs!3025 m!66713))

(assert (=> b!69123 d!15487))

(declare-fun c!10087 () Bool)

(declare-fun d!15489 () Bool)

(assert (=> d!15489 (= c!10087 ((_ is ValueCellFull!884) (select (arr!1833 (ite c!9730 (_values!2150 newMap!16) lt!30013)) #b00000000000000000000000000000000)))))

(declare-fun e!45803 () V!2921)

(assert (=> d!15489 (= (get!1130 (select (arr!1833 (ite c!9730 (_values!2150 newMap!16) lt!30013)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45803)))

(declare-fun b!69997 () Bool)

(assert (=> b!69997 (= e!45803 (get!1132 (select (arr!1833 (ite c!9730 (_values!2150 newMap!16) lt!30013)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69998 () Bool)

(assert (=> b!69998 (= e!45803 (get!1133 (select (arr!1833 (ite c!9730 (_values!2150 newMap!16) lt!30013)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15489 c!10087) b!69997))

(assert (= (and d!15489 (not c!10087)) b!69998))

(assert (=> b!69997 m!65169))

(assert (=> b!69997 m!64757))

(declare-fun m!66715 () Bool)

(assert (=> b!69997 m!66715))

(assert (=> b!69998 m!65169))

(assert (=> b!69998 m!64757))

(declare-fun m!66717 () Bool)

(assert (=> b!69998 m!66717))

(assert (=> b!69123 d!15489))

(assert (=> b!68982 d!14909))

(declare-fun d!15491 () Bool)

(assert (=> d!15491 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077))))

(declare-fun lt!30838 () Unit!1909)

(assert (=> d!15491 (= lt!30838 (choose!395 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077))))

(declare-fun e!45804 () Bool)

(assert (=> d!15491 e!45804))

(declare-fun res!37498 () Bool)

(assert (=> d!15491 (=> (not res!37498) (not e!45804))))

(assert (=> d!15491 (= res!37498 (isStrictlySorted!277 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15491 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077) lt!30838)))

(declare-fun b!69999 () Bool)

(assert (=> b!69999 (= e!45804 (containsKey!135 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077))))

(assert (= (and d!15491 res!37498) b!69999))

(assert (=> d!15491 m!64873))

(assert (=> d!15491 m!64873))

(assert (=> d!15491 m!64875))

(declare-fun m!66719 () Bool)

(assert (=> d!15491 m!66719))

(declare-fun m!66721 () Bool)

(assert (=> d!15491 m!66721))

(assert (=> b!69999 m!64869))

(assert (=> b!68893 d!15491))

(assert (=> b!68893 d!15317))

(assert (=> b!68893 d!15319))

(declare-fun d!15493 () Bool)

(declare-fun e!45806 () Bool)

(assert (=> d!15493 e!45806))

(declare-fun res!37499 () Bool)

(assert (=> d!15493 (=> res!37499 e!45806)))

(declare-fun lt!30842 () Bool)

(assert (=> d!15493 (= res!37499 (not lt!30842))))

(declare-fun lt!30841 () Bool)

(assert (=> d!15493 (= lt!30842 lt!30841)))

(declare-fun lt!30839 () Unit!1909)

(declare-fun e!45805 () Unit!1909)

(assert (=> d!15493 (= lt!30839 e!45805)))

(declare-fun c!10088 () Bool)

(assert (=> d!15493 (= c!10088 lt!30841)))

(assert (=> d!15493 (= lt!30841 (containsKey!135 (toList!708 lt!30416) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15493 (= (contains!710 lt!30416 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!30842)))

(declare-fun b!70000 () Bool)

(declare-fun lt!30840 () Unit!1909)

(assert (=> b!70000 (= e!45805 lt!30840)))

(assert (=> b!70000 (= lt!30840 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30416) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> b!70000 (isDefined!84 (getValueByKey!132 (toList!708 lt!30416) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70001 () Bool)

(declare-fun Unit!1965 () Unit!1909)

(assert (=> b!70001 (= e!45805 Unit!1965)))

(declare-fun b!70002 () Bool)

(assert (=> b!70002 (= e!45806 (isDefined!84 (getValueByKey!132 (toList!708 lt!30416) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (= (and d!15493 c!10088) b!70000))

(assert (= (and d!15493 (not c!10088)) b!70001))

(assert (= (and d!15493 (not res!37499)) b!70002))

(declare-fun m!66723 () Bool)

(assert (=> d!15493 m!66723))

(declare-fun m!66725 () Bool)

(assert (=> b!70000 m!66725))

(assert (=> b!70000 m!65303))

(assert (=> b!70000 m!65303))

(declare-fun m!66727 () Bool)

(assert (=> b!70000 m!66727))

(assert (=> b!70002 m!65303))

(assert (=> b!70002 m!65303))

(assert (=> b!70002 m!66727))

(assert (=> d!14995 d!15493))

(declare-fun b!70006 () Bool)

(declare-fun e!45808 () Option!138)

(assert (=> b!70006 (= e!45808 None!136)))

(declare-fun b!70005 () Bool)

(assert (=> b!70005 (= e!45808 (getValueByKey!132 (t!4954 lt!30414) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70003 () Bool)

(declare-fun e!45807 () Option!138)

(assert (=> b!70003 (= e!45807 (Some!137 (_2!1057 (h!2040 lt!30414))))))

(declare-fun c!10089 () Bool)

(declare-fun d!15495 () Bool)

(assert (=> d!15495 (= c!10089 (and ((_ is Cons!1455) lt!30414) (= (_1!1057 (h!2040 lt!30414)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15495 (= (getValueByKey!132 lt!30414 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) e!45807)))

(declare-fun b!70004 () Bool)

(assert (=> b!70004 (= e!45807 e!45808)))

(declare-fun c!10090 () Bool)

(assert (=> b!70004 (= c!10090 (and ((_ is Cons!1455) lt!30414) (not (= (_1!1057 (h!2040 lt!30414)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (= (and d!15495 c!10089) b!70003))

(assert (= (and d!15495 (not c!10089)) b!70004))

(assert (= (and b!70004 c!10090) b!70005))

(assert (= (and b!70004 (not c!10090)) b!70006))

(declare-fun m!66729 () Bool)

(assert (=> b!70005 m!66729))

(assert (=> d!14995 d!15495))

(declare-fun d!15497 () Bool)

(assert (=> d!15497 (= (getValueByKey!132 lt!30414 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun lt!30843 () Unit!1909)

(assert (=> d!15497 (= lt!30843 (choose!394 lt!30414 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun e!45809 () Bool)

(assert (=> d!15497 e!45809))

(declare-fun res!37500 () Bool)

(assert (=> d!15497 (=> (not res!37500) (not e!45809))))

(assert (=> d!15497 (= res!37500 (isStrictlySorted!277 lt!30414))))

(assert (=> d!15497 (= (lemmaContainsTupThenGetReturnValue!49 lt!30414 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!30843)))

(declare-fun b!70007 () Bool)

(declare-fun res!37501 () Bool)

(assert (=> b!70007 (=> (not res!37501) (not e!45809))))

(assert (=> b!70007 (= res!37501 (containsKey!135 lt!30414 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70008 () Bool)

(assert (=> b!70008 (= e!45809 (contains!713 lt!30414 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (= (and d!15497 res!37500) b!70007))

(assert (= (and b!70007 res!37501) b!70008))

(assert (=> d!15497 m!65297))

(declare-fun m!66731 () Bool)

(assert (=> d!15497 m!66731))

(declare-fun m!66733 () Bool)

(assert (=> d!15497 m!66733))

(declare-fun m!66735 () Bool)

(assert (=> b!70007 m!66735))

(declare-fun m!66737 () Bool)

(assert (=> b!70008 m!66737))

(assert (=> d!14995 d!15497))

(declare-fun b!70009 () Bool)

(declare-fun e!45812 () List!1459)

(declare-fun call!5992 () List!1459)

(assert (=> b!70009 (= e!45812 call!5992)))

(declare-fun e!45810 () List!1459)

(declare-fun b!70010 () Bool)

(assert (=> b!70010 (= e!45810 (insertStrictlySorted!52 (t!4954 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70011 () Bool)

(declare-fun e!45813 () List!1459)

(declare-fun call!5991 () List!1459)

(assert (=> b!70011 (= e!45813 call!5991)))

(declare-fun b!70012 () Bool)

(assert (=> b!70012 (= e!45813 call!5991)))

(declare-fun b!70013 () Bool)

(declare-fun c!10094 () Bool)

(assert (=> b!70013 (= c!10094 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (bvsgt (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> b!70013 (= e!45812 e!45813)))

(declare-fun b!70014 () Bool)

(declare-fun res!37503 () Bool)

(declare-fun e!45811 () Bool)

(assert (=> b!70014 (=> (not res!37503) (not e!45811))))

(declare-fun lt!30844 () List!1459)

(assert (=> b!70014 (= res!37503 (containsKey!135 lt!30844 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun call!5993 () List!1459)

(declare-fun bm!5989 () Bool)

(declare-fun c!10091 () Bool)

(assert (=> bm!5989 (= call!5993 ($colon$colon!63 e!45810 (ite c!10091 (h!2040 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(declare-fun c!10092 () Bool)

(assert (=> bm!5989 (= c!10092 c!10091)))

(declare-fun b!70015 () Bool)

(declare-fun e!45814 () List!1459)

(assert (=> b!70015 (= e!45814 e!45812)))

(declare-fun c!10093 () Bool)

(assert (=> b!70015 (= c!10093 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!70016 () Bool)

(assert (=> b!70016 (= e!45810 (ite c!10093 (t!4954 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (ite c!10094 (Cons!1455 (h!2040 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (t!4954 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) Nil!1456)))))

(declare-fun b!70017 () Bool)

(assert (=> b!70017 (= e!45814 call!5993)))

(declare-fun bm!5988 () Bool)

(assert (=> bm!5988 (= call!5992 call!5993)))

(declare-fun d!15499 () Bool)

(assert (=> d!15499 e!45811))

(declare-fun res!37502 () Bool)

(assert (=> d!15499 (=> (not res!37502) (not e!45811))))

(assert (=> d!15499 (= res!37502 (isStrictlySorted!277 lt!30844))))

(assert (=> d!15499 (= lt!30844 e!45814)))

(assert (=> d!15499 (= c!10091 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (bvslt (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15499 (isStrictlySorted!277 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15499 (= (insertStrictlySorted!52 (toList!708 (+!88 lt!29844 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!30844)))

(declare-fun b!70018 () Bool)

(assert (=> b!70018 (= e!45811 (contains!713 lt!30844 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun bm!5990 () Bool)

(assert (=> bm!5990 (= call!5991 call!5992)))

(assert (= (and d!15499 c!10091) b!70017))

(assert (= (and d!15499 (not c!10091)) b!70015))

(assert (= (and b!70015 c!10093) b!70009))

(assert (= (and b!70015 (not c!10093)) b!70013))

(assert (= (and b!70013 c!10094) b!70012))

(assert (= (and b!70013 (not c!10094)) b!70011))

(assert (= (or b!70012 b!70011) bm!5990))

(assert (= (or b!70009 bm!5990) bm!5988))

(assert (= (or b!70017 bm!5988) bm!5989))

(assert (= (and bm!5989 c!10092) b!70010))

(assert (= (and bm!5989 (not c!10092)) b!70016))

(assert (= (and d!15499 res!37502) b!70014))

(assert (= (and b!70014 res!37503) b!70018))

(declare-fun m!66739 () Bool)

(assert (=> d!15499 m!66739))

(declare-fun m!66741 () Bool)

(assert (=> d!15499 m!66741))

(declare-fun m!66743 () Bool)

(assert (=> bm!5989 m!66743))

(declare-fun m!66745 () Bool)

(assert (=> b!70018 m!66745))

(declare-fun m!66747 () Bool)

(assert (=> b!70014 m!66747))

(declare-fun m!66749 () Bool)

(assert (=> b!70010 m!66749))

(assert (=> d!14995 d!15499))

(assert (=> d!14895 d!14879))

(assert (=> d!14895 d!14885))

(declare-fun d!15501 () Bool)

(assert (=> d!15501 (= (apply!73 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30084) (apply!73 lt!30090 lt!30084))))

(assert (=> d!15501 true))

(declare-fun _$34!795 () Unit!1909)

(assert (=> d!15501 (= (choose!392 lt!30090 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30084) _$34!795)))

(declare-fun bs!3026 () Bool)

(assert (= bs!3026 d!15501))

(assert (=> bs!3026 m!64609))

(assert (=> bs!3026 m!64609))

(assert (=> bs!3026 m!64611))

(assert (=> bs!3026 m!64613))

(assert (=> d!14895 d!15501))

(declare-fun d!15503 () Bool)

(declare-fun e!45816 () Bool)

(assert (=> d!15503 e!45816))

(declare-fun res!37504 () Bool)

(assert (=> d!15503 (=> res!37504 e!45816)))

(declare-fun lt!30848 () Bool)

(assert (=> d!15503 (= res!37504 (not lt!30848))))

(declare-fun lt!30847 () Bool)

(assert (=> d!15503 (= lt!30848 lt!30847)))

(declare-fun lt!30845 () Unit!1909)

(declare-fun e!45815 () Unit!1909)

(assert (=> d!15503 (= lt!30845 e!45815)))

(declare-fun c!10095 () Bool)

(assert (=> d!15503 (= c!10095 lt!30847)))

(assert (=> d!15503 (= lt!30847 (containsKey!135 (toList!708 lt!30090) lt!30084))))

(assert (=> d!15503 (= (contains!710 lt!30090 lt!30084) lt!30848)))

(declare-fun b!70019 () Bool)

(declare-fun lt!30846 () Unit!1909)

(assert (=> b!70019 (= e!45815 lt!30846)))

(assert (=> b!70019 (= lt!30846 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30090) lt!30084))))

(assert (=> b!70019 (isDefined!84 (getValueByKey!132 (toList!708 lt!30090) lt!30084))))

(declare-fun b!70020 () Bool)

(declare-fun Unit!1966 () Unit!1909)

(assert (=> b!70020 (= e!45815 Unit!1966)))

(declare-fun b!70021 () Bool)

(assert (=> b!70021 (= e!45816 (isDefined!84 (getValueByKey!132 (toList!708 lt!30090) lt!30084)))))

(assert (= (and d!15503 c!10095) b!70019))

(assert (= (and d!15503 (not c!10095)) b!70020))

(assert (= (and d!15503 (not res!37504)) b!70021))

(declare-fun m!66751 () Bool)

(assert (=> d!15503 m!66751))

(declare-fun m!66753 () Bool)

(assert (=> b!70019 m!66753))

(assert (=> b!70019 m!64865))

(assert (=> b!70019 m!64865))

(declare-fun m!66755 () Bool)

(assert (=> b!70019 m!66755))

(assert (=> b!70021 m!64865))

(assert (=> b!70021 m!64865))

(assert (=> b!70021 m!66755))

(assert (=> d!14895 d!15503))

(assert (=> d!14895 d!14883))

(declare-fun d!15505 () Bool)

(declare-fun e!45818 () Bool)

(assert (=> d!15505 e!45818))

(declare-fun res!37505 () Bool)

(assert (=> d!15505 (=> res!37505 e!45818)))

(declare-fun lt!30852 () Bool)

(assert (=> d!15505 (= res!37505 (not lt!30852))))

(declare-fun lt!30851 () Bool)

(assert (=> d!15505 (= lt!30852 lt!30851)))

(declare-fun lt!30849 () Unit!1909)

(declare-fun e!45817 () Unit!1909)

(assert (=> d!15505 (= lt!30849 e!45817)))

(declare-fun c!10096 () Bool)

(assert (=> d!15505 (= c!10096 lt!30851)))

(assert (=> d!15505 (= lt!30851 (containsKey!135 (toList!708 lt!30212) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15505 (= (contains!710 lt!30212 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30852)))

(declare-fun b!70022 () Bool)

(declare-fun lt!30850 () Unit!1909)

(assert (=> b!70022 (= e!45817 lt!30850)))

(assert (=> b!70022 (= lt!30850 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30212) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!70022 (isDefined!84 (getValueByKey!132 (toList!708 lt!30212) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70023 () Bool)

(declare-fun Unit!1967 () Unit!1909)

(assert (=> b!70023 (= e!45817 Unit!1967)))

(declare-fun b!70024 () Bool)

(assert (=> b!70024 (= e!45818 (isDefined!84 (getValueByKey!132 (toList!708 lt!30212) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15505 c!10096) b!70022))

(assert (= (and d!15505 (not c!10096)) b!70023))

(assert (= (and d!15505 (not res!37505)) b!70024))

(declare-fun m!66757 () Bool)

(assert (=> d!15505 m!66757))

(declare-fun m!66759 () Bool)

(assert (=> b!70022 m!66759))

(assert (=> b!70022 m!64921))

(assert (=> b!70022 m!64921))

(declare-fun m!66761 () Bool)

(assert (=> b!70022 m!66761))

(assert (=> b!70024 m!64921))

(assert (=> b!70024 m!64921))

(assert (=> b!70024 m!66761))

(assert (=> d!14903 d!15505))

(declare-fun b!70028 () Bool)

(declare-fun e!45820 () Option!138)

(assert (=> b!70028 (= e!45820 None!136)))

(declare-fun b!70027 () Bool)

(assert (=> b!70027 (= e!45820 (getValueByKey!132 (t!4954 lt!30210) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70025 () Bool)

(declare-fun e!45819 () Option!138)

(assert (=> b!70025 (= e!45819 (Some!137 (_2!1057 (h!2040 lt!30210))))))

(declare-fun d!15507 () Bool)

(declare-fun c!10097 () Bool)

(assert (=> d!15507 (= c!10097 (and ((_ is Cons!1455) lt!30210) (= (_1!1057 (h!2040 lt!30210)) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15507 (= (getValueByKey!132 lt!30210 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45819)))

(declare-fun b!70026 () Bool)

(assert (=> b!70026 (= e!45819 e!45820)))

(declare-fun c!10098 () Bool)

(assert (=> b!70026 (= c!10098 (and ((_ is Cons!1455) lt!30210) (not (= (_1!1057 (h!2040 lt!30210)) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15507 c!10097) b!70025))

(assert (= (and d!15507 (not c!10097)) b!70026))

(assert (= (and b!70026 c!10098) b!70027))

(assert (= (and b!70026 (not c!10098)) b!70028))

(declare-fun m!66763 () Bool)

(assert (=> b!70027 m!66763))

(assert (=> d!14903 d!15507))

(declare-fun d!15509 () Bool)

(assert (=> d!15509 (= (getValueByKey!132 lt!30210 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30853 () Unit!1909)

(assert (=> d!15509 (= lt!30853 (choose!394 lt!30210 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45821 () Bool)

(assert (=> d!15509 e!45821))

(declare-fun res!37506 () Bool)

(assert (=> d!15509 (=> (not res!37506) (not e!45821))))

(assert (=> d!15509 (= res!37506 (isStrictlySorted!277 lt!30210))))

(assert (=> d!15509 (= (lemmaContainsTupThenGetReturnValue!49 lt!30210 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30853)))

(declare-fun b!70029 () Bool)

(declare-fun res!37507 () Bool)

(assert (=> b!70029 (=> (not res!37507) (not e!45821))))

(assert (=> b!70029 (= res!37507 (containsKey!135 lt!30210 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70030 () Bool)

(assert (=> b!70030 (= e!45821 (contains!713 lt!30210 (tuple2!2093 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15509 res!37506) b!70029))

(assert (= (and b!70029 res!37507) b!70030))

(assert (=> d!15509 m!64915))

(declare-fun m!66765 () Bool)

(assert (=> d!15509 m!66765))

(declare-fun m!66767 () Bool)

(assert (=> d!15509 m!66767))

(declare-fun m!66769 () Bool)

(assert (=> b!70029 m!66769))

(declare-fun m!66771 () Bool)

(assert (=> b!70030 m!66771))

(assert (=> d!14903 d!15509))

(declare-fun b!70031 () Bool)

(declare-fun e!45824 () List!1459)

(declare-fun call!5995 () List!1459)

(assert (=> b!70031 (= e!45824 call!5995)))

(declare-fun b!70032 () Bool)

(declare-fun e!45822 () List!1459)

(assert (=> b!70032 (= e!45822 (insertStrictlySorted!52 (t!4954 (toList!708 lt!30083)) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70033 () Bool)

(declare-fun e!45825 () List!1459)

(declare-fun call!5994 () List!1459)

(assert (=> b!70033 (= e!45825 call!5994)))

(declare-fun b!70034 () Bool)

(assert (=> b!70034 (= e!45825 call!5994)))

(declare-fun c!10102 () Bool)

(declare-fun b!70035 () Bool)

(assert (=> b!70035 (= c!10102 (and ((_ is Cons!1455) (toList!708 lt!30083)) (bvsgt (_1!1057 (h!2040 (toList!708 lt!30083))) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!70035 (= e!45824 e!45825)))

(declare-fun b!70036 () Bool)

(declare-fun res!37509 () Bool)

(declare-fun e!45823 () Bool)

(assert (=> b!70036 (=> (not res!37509) (not e!45823))))

(declare-fun lt!30854 () List!1459)

(assert (=> b!70036 (= res!37509 (containsKey!135 lt!30854 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun bm!5992 () Bool)

(declare-fun c!10099 () Bool)

(declare-fun call!5996 () List!1459)

(assert (=> bm!5992 (= call!5996 ($colon$colon!63 e!45822 (ite c!10099 (h!2040 (toList!708 lt!30083)) (tuple2!2093 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!10100 () Bool)

(assert (=> bm!5992 (= c!10100 c!10099)))

(declare-fun b!70037 () Bool)

(declare-fun e!45826 () List!1459)

(assert (=> b!70037 (= e!45826 e!45824)))

(declare-fun c!10101 () Bool)

(assert (=> b!70037 (= c!10101 (and ((_ is Cons!1455) (toList!708 lt!30083)) (= (_1!1057 (h!2040 (toList!708 lt!30083))) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70038 () Bool)

(assert (=> b!70038 (= e!45822 (ite c!10101 (t!4954 (toList!708 lt!30083)) (ite c!10102 (Cons!1455 (h!2040 (toList!708 lt!30083)) (t!4954 (toList!708 lt!30083))) Nil!1456)))))

(declare-fun b!70039 () Bool)

(assert (=> b!70039 (= e!45826 call!5996)))

(declare-fun bm!5991 () Bool)

(assert (=> bm!5991 (= call!5995 call!5996)))

(declare-fun d!15511 () Bool)

(assert (=> d!15511 e!45823))

(declare-fun res!37508 () Bool)

(assert (=> d!15511 (=> (not res!37508) (not e!45823))))

(assert (=> d!15511 (= res!37508 (isStrictlySorted!277 lt!30854))))

(assert (=> d!15511 (= lt!30854 e!45826)))

(assert (=> d!15511 (= c!10099 (and ((_ is Cons!1455) (toList!708 lt!30083)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30083))) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15511 (isStrictlySorted!277 (toList!708 lt!30083))))

(assert (=> d!15511 (= (insertStrictlySorted!52 (toList!708 lt!30083) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30854)))

(declare-fun b!70040 () Bool)

(assert (=> b!70040 (= e!45823 (contains!713 lt!30854 (tuple2!2093 (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun bm!5993 () Bool)

(assert (=> bm!5993 (= call!5994 call!5995)))

(assert (= (and d!15511 c!10099) b!70039))

(assert (= (and d!15511 (not c!10099)) b!70037))

(assert (= (and b!70037 c!10101) b!70031))

(assert (= (and b!70037 (not c!10101)) b!70035))

(assert (= (and b!70035 c!10102) b!70034))

(assert (= (and b!70035 (not c!10102)) b!70033))

(assert (= (or b!70034 b!70033) bm!5993))

(assert (= (or b!70031 bm!5993) bm!5991))

(assert (= (or b!70039 bm!5991) bm!5992))

(assert (= (and bm!5992 c!10100) b!70032))

(assert (= (and bm!5992 (not c!10100)) b!70038))

(assert (= (and d!15511 res!37508) b!70036))

(assert (= (and b!70036 res!37509) b!70040))

(declare-fun m!66773 () Bool)

(assert (=> d!15511 m!66773))

(declare-fun m!66775 () Bool)

(assert (=> d!15511 m!66775))

(declare-fun m!66777 () Bool)

(assert (=> bm!5992 m!66777))

(declare-fun m!66779 () Bool)

(assert (=> b!70040 m!66779))

(declare-fun m!66781 () Bool)

(assert (=> b!70036 m!66781))

(declare-fun m!66783 () Bool)

(assert (=> b!70032 m!66783))

(assert (=> d!14903 d!15511))

(declare-fun d!15513 () Bool)

(declare-fun e!45828 () Bool)

(assert (=> d!15513 e!45828))

(declare-fun res!37510 () Bool)

(assert (=> d!15513 (=> res!37510 e!45828)))

(declare-fun lt!30858 () Bool)

(assert (=> d!15513 (= res!37510 (not lt!30858))))

(declare-fun lt!30857 () Bool)

(assert (=> d!15513 (= lt!30858 lt!30857)))

(declare-fun lt!30855 () Unit!1909)

(declare-fun e!45827 () Unit!1909)

(assert (=> d!15513 (= lt!30855 e!45827)))

(declare-fun c!10103 () Bool)

(assert (=> d!15513 (= c!10103 lt!30857)))

(assert (=> d!15513 (= lt!30857 (containsKey!135 (toList!708 lt!30175) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15513 (= (contains!710 lt!30175 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) lt!30858)))

(declare-fun b!70041 () Bool)

(declare-fun lt!30856 () Unit!1909)

(assert (=> b!70041 (= e!45827 lt!30856)))

(assert (=> b!70041 (= lt!30856 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30175) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!70041 (isDefined!84 (getValueByKey!132 (toList!708 lt!30175) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70042 () Bool)

(declare-fun Unit!1968 () Unit!1909)

(assert (=> b!70042 (= e!45827 Unit!1968)))

(declare-fun b!70043 () Bool)

(assert (=> b!70043 (= e!45828 (isDefined!84 (getValueByKey!132 (toList!708 lt!30175) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15513 c!10103) b!70041))

(assert (= (and d!15513 (not c!10103)) b!70042))

(assert (= (and d!15513 (not res!37510)) b!70043))

(declare-fun m!66785 () Bool)

(assert (=> d!15513 m!66785))

(declare-fun m!66787 () Bool)

(assert (=> b!70041 m!66787))

(assert (=> b!70041 m!64811))

(assert (=> b!70041 m!64811))

(declare-fun m!66789 () Bool)

(assert (=> b!70041 m!66789))

(assert (=> b!70043 m!64811))

(assert (=> b!70043 m!64811))

(assert (=> b!70043 m!66789))

(assert (=> d!14863 d!15513))

(declare-fun b!70047 () Bool)

(declare-fun e!45830 () Option!138)

(assert (=> b!70047 (= e!45830 None!136)))

(declare-fun b!70046 () Bool)

(assert (=> b!70046 (= e!45830 (getValueByKey!132 (t!4954 lt!30173) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70044 () Bool)

(declare-fun e!45829 () Option!138)

(assert (=> b!70044 (= e!45829 (Some!137 (_2!1057 (h!2040 lt!30173))))))

(declare-fun c!10104 () Bool)

(declare-fun d!15515 () Bool)

(assert (=> d!15515 (= c!10104 (and ((_ is Cons!1455) lt!30173) (= (_1!1057 (h!2040 lt!30173)) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (=> d!15515 (= (getValueByKey!132 lt!30173 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) e!45829)))

(declare-fun b!70045 () Bool)

(assert (=> b!70045 (= e!45829 e!45830)))

(declare-fun c!10105 () Bool)

(assert (=> b!70045 (= c!10105 (and ((_ is Cons!1455) lt!30173) (not (= (_1!1057 (h!2040 lt!30173)) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))))

(assert (= (and d!15515 c!10104) b!70044))

(assert (= (and d!15515 (not c!10104)) b!70045))

(assert (= (and b!70045 c!10105) b!70046))

(assert (= (and b!70045 (not c!10105)) b!70047))

(declare-fun m!66791 () Bool)

(assert (=> b!70046 m!66791))

(assert (=> d!14863 d!15515))

(declare-fun d!15517 () Bool)

(assert (=> d!15517 (= (getValueByKey!132 lt!30173 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) (Some!137 (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun lt!30859 () Unit!1909)

(assert (=> d!15517 (= lt!30859 (choose!394 lt!30173 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun e!45831 () Bool)

(assert (=> d!15517 e!45831))

(declare-fun res!37511 () Bool)

(assert (=> d!15517 (=> (not res!37511) (not e!45831))))

(assert (=> d!15517 (= res!37511 (isStrictlySorted!277 lt!30173))))

(assert (=> d!15517 (= (lemmaContainsTupThenGetReturnValue!49 lt!30173 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) lt!30859)))

(declare-fun b!70048 () Bool)

(declare-fun res!37512 () Bool)

(assert (=> b!70048 (=> (not res!37512) (not e!45831))))

(assert (=> b!70048 (= res!37512 (containsKey!135 lt!30173 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70049 () Bool)

(assert (=> b!70049 (= e!45831 (contains!713 lt!30173 (tuple2!2093 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15517 res!37511) b!70048))

(assert (= (and b!70048 res!37512) b!70049))

(assert (=> d!15517 m!64805))

(declare-fun m!66793 () Bool)

(assert (=> d!15517 m!66793))

(declare-fun m!66795 () Bool)

(assert (=> d!15517 m!66795))

(declare-fun m!66797 () Bool)

(assert (=> b!70048 m!66797))

(declare-fun m!66799 () Bool)

(assert (=> b!70049 m!66799))

(assert (=> d!14863 d!15517))

(declare-fun b!70050 () Bool)

(declare-fun e!45834 () List!1459)

(declare-fun call!5998 () List!1459)

(assert (=> b!70050 (= e!45834 call!5998)))

(declare-fun e!45832 () List!1459)

(declare-fun b!70051 () Bool)

(assert (=> b!70051 (= e!45832 (insertStrictlySorted!52 (t!4954 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839)))) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70052 () Bool)

(declare-fun e!45835 () List!1459)

(declare-fun call!5997 () List!1459)

(assert (=> b!70052 (= e!45835 call!5997)))

(declare-fun b!70053 () Bool)

(assert (=> b!70053 (= e!45835 call!5997)))

(declare-fun b!70054 () Bool)

(declare-fun c!10109 () Bool)

(assert (=> b!70054 (= c!10109 (and ((_ is Cons!1455) (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839)))) (bvsgt (_1!1057 (h!2040 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839))))) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (=> b!70054 (= e!45834 e!45835)))

(declare-fun b!70055 () Bool)

(declare-fun res!37514 () Bool)

(declare-fun e!45833 () Bool)

(assert (=> b!70055 (=> (not res!37514) (not e!45833))))

(declare-fun lt!30860 () List!1459)

(assert (=> b!70055 (= res!37514 (containsKey!135 lt!30860 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun bm!5995 () Bool)

(declare-fun c!10106 () Bool)

(declare-fun call!5999 () List!1459)

(assert (=> bm!5995 (= call!5999 ($colon$colon!63 e!45832 (ite c!10106 (h!2040 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839)))) (tuple2!2093 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun c!10107 () Bool)

(assert (=> bm!5995 (= c!10107 c!10106)))

(declare-fun b!70056 () Bool)

(declare-fun e!45836 () List!1459)

(assert (=> b!70056 (= e!45836 e!45834)))

(declare-fun c!10108 () Bool)

(assert (=> b!70056 (= c!10108 (and ((_ is Cons!1455) (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839)))) (= (_1!1057 (h!2040 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839))))) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!70057 () Bool)

(assert (=> b!70057 (= e!45832 (ite c!10108 (t!4954 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839)))) (ite c!10109 (Cons!1455 (h!2040 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839)))) (t!4954 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839))))) Nil!1456)))))

(declare-fun b!70058 () Bool)

(assert (=> b!70058 (= e!45836 call!5999)))

(declare-fun bm!5994 () Bool)

(assert (=> bm!5994 (= call!5998 call!5999)))

(declare-fun d!15519 () Bool)

(assert (=> d!15519 e!45833))

(declare-fun res!37513 () Bool)

(assert (=> d!15519 (=> (not res!37513) (not e!45833))))

(assert (=> d!15519 (= res!37513 (isStrictlySorted!277 lt!30860))))

(assert (=> d!15519 (= lt!30860 e!45836)))

(assert (=> d!15519 (= c!10106 (and ((_ is Cons!1455) (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839)))) (bvslt (_1!1057 (h!2040 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839))))) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (=> d!15519 (isStrictlySorted!277 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839))))))

(assert (=> d!15519 (= (insertStrictlySorted!52 (toList!708 (ite c!9745 call!5841 (ite c!9748 call!5838 call!5839))) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) lt!30860)))

(declare-fun b!70059 () Bool)

(assert (=> b!70059 (= e!45833 (contains!713 lt!30860 (tuple2!2093 (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (_2!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun bm!5996 () Bool)

(assert (=> bm!5996 (= call!5997 call!5998)))

(assert (= (and d!15519 c!10106) b!70058))

(assert (= (and d!15519 (not c!10106)) b!70056))

(assert (= (and b!70056 c!10108) b!70050))

(assert (= (and b!70056 (not c!10108)) b!70054))

(assert (= (and b!70054 c!10109) b!70053))

(assert (= (and b!70054 (not c!10109)) b!70052))

(assert (= (or b!70053 b!70052) bm!5996))

(assert (= (or b!70050 bm!5996) bm!5994))

(assert (= (or b!70058 bm!5994) bm!5995))

(assert (= (and bm!5995 c!10107) b!70051))

(assert (= (and bm!5995 (not c!10107)) b!70057))

(assert (= (and d!15519 res!37513) b!70055))

(assert (= (and b!70055 res!37514) b!70059))

(declare-fun m!66801 () Bool)

(assert (=> d!15519 m!66801))

(declare-fun m!66803 () Bool)

(assert (=> d!15519 m!66803))

(declare-fun m!66805 () Bool)

(assert (=> bm!5995 m!66805))

(declare-fun m!66807 () Bool)

(assert (=> b!70059 m!66807))

(declare-fun m!66809 () Bool)

(assert (=> b!70055 m!66809))

(declare-fun m!66811 () Bool)

(assert (=> b!70051 m!66811))

(assert (=> d!14863 d!15519))

(declare-fun b!70063 () Bool)

(declare-fun e!45838 () Option!138)

(assert (=> b!70063 (= e!45838 None!136)))

(declare-fun b!70062 () Bool)

(assert (=> b!70062 (= e!45838 (getValueByKey!132 (t!4954 (toList!708 lt!30416)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70060 () Bool)

(declare-fun e!45837 () Option!138)

(assert (=> b!70060 (= e!45837 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30416)))))))

(declare-fun d!15521 () Bool)

(declare-fun c!10110 () Bool)

(assert (=> d!15521 (= c!10110 (and ((_ is Cons!1455) (toList!708 lt!30416)) (= (_1!1057 (h!2040 (toList!708 lt!30416))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15521 (= (getValueByKey!132 (toList!708 lt!30416) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) e!45837)))

(declare-fun b!70061 () Bool)

(assert (=> b!70061 (= e!45837 e!45838)))

(declare-fun c!10111 () Bool)

(assert (=> b!70061 (= c!10111 (and ((_ is Cons!1455) (toList!708 lt!30416)) (not (= (_1!1057 (h!2040 (toList!708 lt!30416))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (= (and d!15521 c!10110) b!70060))

(assert (= (and d!15521 (not c!10110)) b!70061))

(assert (= (and b!70061 c!10111) b!70062))

(assert (= (and b!70061 (not c!10111)) b!70063))

(declare-fun m!66813 () Bool)

(assert (=> b!70062 m!66813))

(assert (=> b!69187 d!15521))

(declare-fun b!70064 () Bool)

(declare-fun e!45841 () List!1459)

(declare-fun call!6001 () List!1459)

(assert (=> b!70064 (= e!45841 call!6001)))

(declare-fun b!70065 () Bool)

(declare-fun e!45839 () List!1459)

(assert (=> b!70065 (= e!45839 (insertStrictlySorted!52 (t!4954 (t!4954 (toList!708 lt!29844))) (_1!1057 lt!29846) (_2!1057 lt!29846)))))

(declare-fun b!70066 () Bool)

(declare-fun e!45842 () List!1459)

(declare-fun call!6000 () List!1459)

(assert (=> b!70066 (= e!45842 call!6000)))

(declare-fun b!70067 () Bool)

(assert (=> b!70067 (= e!45842 call!6000)))

(declare-fun b!70068 () Bool)

(declare-fun c!10115 () Bool)

(assert (=> b!70068 (= c!10115 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!29844))) (bvsgt (_1!1057 (h!2040 (t!4954 (toList!708 lt!29844)))) (_1!1057 lt!29846))))))

(assert (=> b!70068 (= e!45841 e!45842)))

(declare-fun b!70069 () Bool)

(declare-fun res!37516 () Bool)

(declare-fun e!45840 () Bool)

(assert (=> b!70069 (=> (not res!37516) (not e!45840))))

(declare-fun lt!30861 () List!1459)

(assert (=> b!70069 (= res!37516 (containsKey!135 lt!30861 (_1!1057 lt!29846)))))

(declare-fun c!10112 () Bool)

(declare-fun call!6002 () List!1459)

(declare-fun bm!5998 () Bool)

(assert (=> bm!5998 (= call!6002 ($colon$colon!63 e!45839 (ite c!10112 (h!2040 (t!4954 (toList!708 lt!29844))) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846)))))))

(declare-fun c!10113 () Bool)

(assert (=> bm!5998 (= c!10113 c!10112)))

(declare-fun b!70070 () Bool)

(declare-fun e!45843 () List!1459)

(assert (=> b!70070 (= e!45843 e!45841)))

(declare-fun c!10114 () Bool)

(assert (=> b!70070 (= c!10114 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!29844))) (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!29844)))) (_1!1057 lt!29846))))))

(declare-fun b!70071 () Bool)

(assert (=> b!70071 (= e!45839 (ite c!10114 (t!4954 (t!4954 (toList!708 lt!29844))) (ite c!10115 (Cons!1455 (h!2040 (t!4954 (toList!708 lt!29844))) (t!4954 (t!4954 (toList!708 lt!29844)))) Nil!1456)))))

(declare-fun b!70072 () Bool)

(assert (=> b!70072 (= e!45843 call!6002)))

(declare-fun bm!5997 () Bool)

(assert (=> bm!5997 (= call!6001 call!6002)))

(declare-fun d!15523 () Bool)

(assert (=> d!15523 e!45840))

(declare-fun res!37515 () Bool)

(assert (=> d!15523 (=> (not res!37515) (not e!45840))))

(assert (=> d!15523 (= res!37515 (isStrictlySorted!277 lt!30861))))

(assert (=> d!15523 (= lt!30861 e!45843)))

(assert (=> d!15523 (= c!10112 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!29844))) (bvslt (_1!1057 (h!2040 (t!4954 (toList!708 lt!29844)))) (_1!1057 lt!29846))))))

(assert (=> d!15523 (isStrictlySorted!277 (t!4954 (toList!708 lt!29844)))))

(assert (=> d!15523 (= (insertStrictlySorted!52 (t!4954 (toList!708 lt!29844)) (_1!1057 lt!29846) (_2!1057 lt!29846)) lt!30861)))

(declare-fun b!70073 () Bool)

(assert (=> b!70073 (= e!45840 (contains!713 lt!30861 (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun bm!5999 () Bool)

(assert (=> bm!5999 (= call!6000 call!6001)))

(assert (= (and d!15523 c!10112) b!70072))

(assert (= (and d!15523 (not c!10112)) b!70070))

(assert (= (and b!70070 c!10114) b!70064))

(assert (= (and b!70070 (not c!10114)) b!70068))

(assert (= (and b!70068 c!10115) b!70067))

(assert (= (and b!70068 (not c!10115)) b!70066))

(assert (= (or b!70067 b!70066) bm!5999))

(assert (= (or b!70064 bm!5999) bm!5997))

(assert (= (or b!70072 bm!5997) bm!5998))

(assert (= (and bm!5998 c!10113) b!70065))

(assert (= (and bm!5998 (not c!10113)) b!70071))

(assert (= (and d!15523 res!37515) b!70069))

(assert (= (and b!70069 res!37516) b!70073))

(declare-fun m!66815 () Bool)

(assert (=> d!15523 m!66815))

(assert (=> d!15523 m!66475))

(declare-fun m!66817 () Bool)

(assert (=> bm!5998 m!66817))

(declare-fun m!66819 () Bool)

(assert (=> b!70073 m!66819))

(declare-fun m!66821 () Bool)

(assert (=> b!70069 m!66821))

(declare-fun m!66823 () Bool)

(assert (=> b!70065 m!66823))

(assert (=> b!69285 d!15523))

(declare-fun b!70077 () Bool)

(declare-fun e!45845 () Option!138)

(assert (=> b!70077 (= e!45845 None!136)))

(declare-fun b!70076 () Bool)

(assert (=> b!70076 (= e!45845 (getValueByKey!132 (t!4954 (t!4954 (toList!708 lt!30128))) (_1!1057 lt!29846)))))

(declare-fun b!70074 () Bool)

(declare-fun e!45844 () Option!138)

(assert (=> b!70074 (= e!45844 (Some!137 (_2!1057 (h!2040 (t!4954 (toList!708 lt!30128))))))))

(declare-fun d!15525 () Bool)

(declare-fun c!10116 () Bool)

(assert (=> d!15525 (= c!10116 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!30128))) (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!30128)))) (_1!1057 lt!29846))))))

(assert (=> d!15525 (= (getValueByKey!132 (t!4954 (toList!708 lt!30128)) (_1!1057 lt!29846)) e!45844)))

(declare-fun b!70075 () Bool)

(assert (=> b!70075 (= e!45844 e!45845)))

(declare-fun c!10117 () Bool)

(assert (=> b!70075 (= c!10117 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!30128))) (not (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!30128)))) (_1!1057 lt!29846)))))))

(assert (= (and d!15525 c!10116) b!70074))

(assert (= (and d!15525 (not c!10116)) b!70075))

(assert (= (and b!70075 c!10117) b!70076))

(assert (= (and b!70075 (not c!10117)) b!70077))

(declare-fun m!66825 () Bool)

(assert (=> b!70076 m!66825))

(assert (=> b!68865 d!15525))

(declare-fun b!70081 () Bool)

(declare-fun e!45847 () Option!138)

(assert (=> b!70081 (= e!45847 None!136)))

(declare-fun b!70080 () Bool)

(assert (=> b!70080 (= e!45847 (getValueByKey!132 (t!4954 (toList!708 lt!30212)) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70078 () Bool)

(declare-fun e!45846 () Option!138)

(assert (=> b!70078 (= e!45846 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30212)))))))

(declare-fun c!10118 () Bool)

(declare-fun d!15527 () Bool)

(assert (=> d!15527 (= c!10118 (and ((_ is Cons!1455) (toList!708 lt!30212)) (= (_1!1057 (h!2040 (toList!708 lt!30212))) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15527 (= (getValueByKey!132 (toList!708 lt!30212) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45846)))

(declare-fun b!70079 () Bool)

(assert (=> b!70079 (= e!45846 e!45847)))

(declare-fun c!10119 () Bool)

(assert (=> b!70079 (= c!10119 (and ((_ is Cons!1455) (toList!708 lt!30212)) (not (= (_1!1057 (h!2040 (toList!708 lt!30212))) (_1!1057 (tuple2!2093 lt!30073 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15527 c!10118) b!70078))

(assert (= (and d!15527 (not c!10118)) b!70079))

(assert (= (and b!70079 c!10119) b!70080))

(assert (= (and b!70079 (not c!10119)) b!70081))

(declare-fun m!66827 () Bool)

(assert (=> b!70080 m!66827))

(assert (=> b!68905 d!15527))

(declare-fun b!70082 () Bool)

(declare-fun e!45853 () Bool)

(declare-fun e!45848 () Bool)

(assert (=> b!70082 (= e!45853 e!45848)))

(declare-fun c!10120 () Bool)

(declare-fun e!45852 () Bool)

(assert (=> b!70082 (= c!10120 e!45852)))

(declare-fun res!37518 () Bool)

(assert (=> b!70082 (=> (not res!37518) (not e!45852))))

(assert (=> b!70082 (= res!37518 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!70083 () Bool)

(declare-fun e!45850 () Bool)

(declare-fun lt!30864 () ListLongMap!1385)

(assert (=> b!70083 (= e!45850 (isEmpty!316 lt!30864))))

(declare-fun bm!6000 () Bool)

(declare-fun call!6003 () ListLongMap!1385)

(assert (=> bm!6000 (= call!6003 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16)))))

(declare-fun b!70084 () Bool)

(declare-fun res!37519 () Bool)

(assert (=> b!70084 (=> (not res!37519) (not e!45853))))

(assert (=> b!70084 (= res!37519 (not (contains!710 lt!30864 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70085 () Bool)

(declare-fun lt!30867 () Unit!1909)

(declare-fun lt!30866 () Unit!1909)

(assert (=> b!70085 (= lt!30867 lt!30866)))

(declare-fun lt!30865 () ListLongMap!1385)

(declare-fun lt!30862 () (_ BitVec 64))

(declare-fun lt!30868 () V!2921)

(declare-fun lt!30863 () (_ BitVec 64))

(assert (=> b!70085 (not (contains!710 (+!88 lt!30865 (tuple2!2093 lt!30863 lt!30868)) lt!30862))))

(assert (=> b!70085 (= lt!30866 (addStillNotContains!24 lt!30865 lt!30863 lt!30868 lt!30862))))

(assert (=> b!70085 (= lt!30862 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!70085 (= lt!30868 (get!1130 (select (arr!1833 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!70085 (= lt!30863 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70085 (= lt!30865 call!6003)))

(declare-fun e!45854 () ListLongMap!1385)

(assert (=> b!70085 (= e!45854 (+!88 call!6003 (tuple2!2093 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000) (get!1130 (select (arr!1833 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!70086 () Bool)

(assert (=> b!70086 (= e!45854 call!6003)))

(declare-fun b!70088 () Bool)

(assert (=> b!70088 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(assert (=> b!70088 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_values!2150 newMap!16))))))

(declare-fun e!45851 () Bool)

(assert (=> b!70088 (= e!45851 (= (apply!73 lt!30864 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!70089 () Bool)

(declare-fun e!45849 () ListLongMap!1385)

(assert (=> b!70089 (= e!45849 (ListLongMap!1386 Nil!1456))))

(declare-fun b!70090 () Bool)

(assert (=> b!70090 (= e!45848 e!45851)))

(assert (=> b!70090 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun res!37520 () Bool)

(assert (=> b!70090 (= res!37520 (contains!710 lt!30864 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70090 (=> (not res!37520) (not e!45851))))

(declare-fun b!70091 () Bool)

(assert (=> b!70091 (= e!45852 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70091 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!70092 () Bool)

(assert (=> b!70092 (= e!45849 e!45854)))

(declare-fun c!10123 () Bool)

(assert (=> b!70092 (= c!10123 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70093 () Bool)

(assert (=> b!70093 (= e!45850 (= lt!30864 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16))))))

(declare-fun b!70087 () Bool)

(assert (=> b!70087 (= e!45848 e!45850)))

(declare-fun c!10122 () Bool)

(assert (=> b!70087 (= c!10122 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun d!15529 () Bool)

(assert (=> d!15529 e!45853))

(declare-fun res!37517 () Bool)

(assert (=> d!15529 (=> (not res!37517) (not e!45853))))

(assert (=> d!15529 (= res!37517 (not (contains!710 lt!30864 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15529 (= lt!30864 e!45849)))

(declare-fun c!10121 () Bool)

(assert (=> d!15529 (= c!10121 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(assert (=> d!15529 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15529 (= (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30864)))

(assert (= (and d!15529 c!10121) b!70089))

(assert (= (and d!15529 (not c!10121)) b!70092))

(assert (= (and b!70092 c!10123) b!70085))

(assert (= (and b!70092 (not c!10123)) b!70086))

(assert (= (or b!70085 b!70086) bm!6000))

(assert (= (and d!15529 res!37517) b!70084))

(assert (= (and b!70084 res!37519) b!70082))

(assert (= (and b!70082 res!37518) b!70091))

(assert (= (and b!70082 c!10120) b!70090))

(assert (= (and b!70082 (not c!10120)) b!70087))

(assert (= (and b!70090 res!37520) b!70088))

(assert (= (and b!70087 c!10122) b!70093))

(assert (= (and b!70087 (not c!10122)) b!70083))

(declare-fun b_lambda!3135 () Bool)

(assert (=> (not b_lambda!3135) (not b!70085)))

(assert (=> b!70085 t!4967))

(declare-fun b_and!4305 () Bool)

(assert (= b_and!4301 (and (=> t!4967 result!2615) b_and!4305)))

(assert (=> b!70085 t!4969))

(declare-fun b_and!4307 () Bool)

(assert (= b_and!4303 (and (=> t!4969 result!2617) b_and!4307)))

(declare-fun b_lambda!3137 () Bool)

(assert (=> (not b_lambda!3137) (not b!70088)))

(assert (=> b!70088 t!4967))

(declare-fun b_and!4309 () Bool)

(assert (= b_and!4305 (and (=> t!4967 result!2615) b_and!4309)))

(assert (=> b!70088 t!4969))

(declare-fun b_and!4311 () Bool)

(assert (= b_and!4307 (and (=> t!4969 result!2617) b_and!4311)))

(declare-fun m!66829 () Bool)

(assert (=> b!70093 m!66829))

(declare-fun m!66831 () Bool)

(assert (=> b!70083 m!66831))

(assert (=> b!70090 m!64745))

(assert (=> b!70090 m!64745))

(declare-fun m!66833 () Bool)

(assert (=> b!70090 m!66833))

(assert (=> bm!6000 m!66829))

(assert (=> b!70091 m!64745))

(assert (=> b!70091 m!64745))

(assert (=> b!70091 m!64747))

(assert (=> b!70088 m!64745))

(declare-fun m!66835 () Bool)

(assert (=> b!70088 m!66835))

(assert (=> b!70088 m!64753))

(assert (=> b!70088 m!64745))

(assert (=> b!70088 m!64757))

(assert (=> b!70088 m!64753))

(assert (=> b!70088 m!64757))

(assert (=> b!70088 m!64759))

(assert (=> b!70085 m!64753))

(declare-fun m!66837 () Bool)

(assert (=> b!70085 m!66837))

(declare-fun m!66839 () Bool)

(assert (=> b!70085 m!66839))

(assert (=> b!70085 m!66839))

(declare-fun m!66841 () Bool)

(assert (=> b!70085 m!66841))

(assert (=> b!70085 m!64745))

(declare-fun m!66843 () Bool)

(assert (=> b!70085 m!66843))

(assert (=> b!70085 m!64757))

(assert (=> b!70085 m!64753))

(assert (=> b!70085 m!64757))

(assert (=> b!70085 m!64759))

(assert (=> b!70092 m!64745))

(assert (=> b!70092 m!64745))

(assert (=> b!70092 m!64747))

(declare-fun m!66845 () Bool)

(assert (=> b!70084 m!66845))

(declare-fun m!66847 () Bool)

(assert (=> d!15529 m!66847))

(assert (=> d!15529 m!64725))

(assert (=> bm!5845 d!15529))

(declare-fun d!15531 () Bool)

(declare-fun lt!30869 () Bool)

(assert (=> d!15531 (= lt!30869 (select (content!74 lt!30122) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun e!45855 () Bool)

(assert (=> d!15531 (= lt!30869 e!45855)))

(declare-fun res!37521 () Bool)

(assert (=> d!15531 (=> (not res!37521) (not e!45855))))

(assert (=> d!15531 (= res!37521 ((_ is Cons!1455) lt!30122))))

(assert (=> d!15531 (= (contains!713 lt!30122 (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))) lt!30869)))

(declare-fun b!70094 () Bool)

(declare-fun e!45856 () Bool)

(assert (=> b!70094 (= e!45855 e!45856)))

(declare-fun res!37522 () Bool)

(assert (=> b!70094 (=> res!37522 e!45856)))

(assert (=> b!70094 (= res!37522 (= (h!2040 lt!30122) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun b!70095 () Bool)

(assert (=> b!70095 (= e!45856 (contains!713 (t!4954 lt!30122) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(assert (= (and d!15531 res!37521) b!70094))

(assert (= (and b!70094 (not res!37522)) b!70095))

(declare-fun m!66849 () Bool)

(assert (=> d!15531 m!66849))

(declare-fun m!66851 () Bool)

(assert (=> d!15531 m!66851))

(declare-fun m!66853 () Bool)

(assert (=> b!70095 m!66853))

(assert (=> b!69018 d!15531))

(declare-fun d!15533 () Bool)

(declare-fun lt!30870 () Bool)

(assert (=> d!15533 (= lt!30870 (select (content!74 lt!30134) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun e!45857 () Bool)

(assert (=> d!15533 (= lt!30870 e!45857)))

(declare-fun res!37523 () Bool)

(assert (=> d!15533 (=> (not res!37523) (not e!45857))))

(assert (=> d!15533 (= res!37523 ((_ is Cons!1455) lt!30134))))

(assert (=> d!15533 (= (contains!713 lt!30134 (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))) lt!30870)))

(declare-fun b!70096 () Bool)

(declare-fun e!45858 () Bool)

(assert (=> b!70096 (= e!45857 e!45858)))

(declare-fun res!37524 () Bool)

(assert (=> b!70096 (=> res!37524 e!45858)))

(assert (=> b!70096 (= res!37524 (= (h!2040 lt!30134) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun b!70097 () Bool)

(assert (=> b!70097 (= e!45858 (contains!713 (t!4954 lt!30134) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(assert (= (and d!15533 res!37523) b!70096))

(assert (= (and b!70096 (not res!37524)) b!70097))

(declare-fun m!66855 () Bool)

(assert (=> d!15533 m!66855))

(declare-fun m!66857 () Bool)

(assert (=> d!15533 m!66857))

(declare-fun m!66859 () Bool)

(assert (=> b!70097 m!66859))

(assert (=> b!69152 d!15533))

(declare-fun d!15535 () Bool)

(declare-fun res!37525 () Bool)

(declare-fun e!45859 () Bool)

(assert (=> d!15535 (=> res!37525 e!45859)))

(assert (=> d!15535 (= res!37525 (or ((_ is Nil!1456) lt!30499) ((_ is Nil!1456) (t!4954 lt!30499))))))

(assert (=> d!15535 (= (isStrictlySorted!277 lt!30499) e!45859)))

(declare-fun b!70098 () Bool)

(declare-fun e!45860 () Bool)

(assert (=> b!70098 (= e!45859 e!45860)))

(declare-fun res!37526 () Bool)

(assert (=> b!70098 (=> (not res!37526) (not e!45860))))

(assert (=> b!70098 (= res!37526 (bvslt (_1!1057 (h!2040 lt!30499)) (_1!1057 (h!2040 (t!4954 lt!30499)))))))

(declare-fun b!70099 () Bool)

(assert (=> b!70099 (= e!45860 (isStrictlySorted!277 (t!4954 lt!30499)))))

(assert (= (and d!15535 (not res!37525)) b!70098))

(assert (= (and b!70098 res!37526) b!70099))

(declare-fun m!66861 () Bool)

(assert (=> b!70099 m!66861))

(assert (=> d!15055 d!15535))

(assert (=> d!15055 d!15421))

(declare-fun d!15537 () Bool)

(declare-fun e!45862 () Bool)

(assert (=> d!15537 e!45862))

(declare-fun res!37527 () Bool)

(assert (=> d!15537 (=> res!37527 e!45862)))

(declare-fun lt!30874 () Bool)

(assert (=> d!15537 (= res!37527 (not lt!30874))))

(declare-fun lt!30873 () Bool)

(assert (=> d!15537 (= lt!30874 lt!30873)))

(declare-fun lt!30871 () Unit!1909)

(declare-fun e!45861 () Unit!1909)

(assert (=> d!15537 (= lt!30871 e!45861)))

(declare-fun c!10124 () Bool)

(assert (=> d!15537 (= c!10124 lt!30873)))

(assert (=> d!15537 (= lt!30873 (containsKey!135 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))))))

(assert (=> d!15537 (= (contains!710 (getCurrentListMap!406 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))) lt!30874)))

(declare-fun b!70100 () Bool)

(declare-fun lt!30872 () Unit!1909)

(assert (=> b!70100 (= e!45861 lt!30872)))

(assert (=> b!70100 (= lt!30872 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))))))

(assert (=> b!70100 (isDefined!84 (getValueByKey!132 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008))))))

(declare-fun b!70101 () Bool)

(declare-fun Unit!1969 () Unit!1909)

(assert (=> b!70101 (= e!45861 Unit!1969)))

(declare-fun b!70102 () Bool)

(assert (=> b!70102 (= e!45862 (isDefined!84 (getValueByKey!132 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1832 (_keys!3811 newMap!16)) (index!3042 lt!30008)))))))

(assert (= (and d!15537 c!10124) b!70100))

(assert (= (and d!15537 (not c!10124)) b!70101))

(assert (= (and d!15537 (not res!37527)) b!70102))

(assert (=> d!15537 m!64533))

(declare-fun m!66863 () Bool)

(assert (=> d!15537 m!66863))

(assert (=> b!70100 m!64533))

(declare-fun m!66865 () Bool)

(assert (=> b!70100 m!66865))

(assert (=> b!70100 m!64533))

(declare-fun m!66867 () Bool)

(assert (=> b!70100 m!66867))

(assert (=> b!70100 m!66867))

(declare-fun m!66869 () Bool)

(assert (=> b!70100 m!66869))

(assert (=> b!70102 m!64533))

(assert (=> b!70102 m!66867))

(assert (=> b!70102 m!66867))

(assert (=> b!70102 m!66869))

(assert (=> b!68825 d!15537))

(declare-fun b!70103 () Bool)

(declare-fun e!45863 () Bool)

(declare-fun lt!30889 () ListLongMap!1385)

(assert (=> b!70103 (= e!45863 (= (apply!73 lt!30889 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!70104 () Bool)

(declare-fun e!45865 () Unit!1909)

(declare-fun lt!30886 () Unit!1909)

(assert (=> b!70104 (= e!45865 lt!30886)))

(declare-fun lt!30876 () ListLongMap!1385)

(assert (=> b!70104 (= lt!30876 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30892 () (_ BitVec 64))

(assert (=> b!70104 (= lt!30892 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30881 () (_ BitVec 64))

(assert (=> b!70104 (= lt!30881 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30880 () Unit!1909)

(assert (=> b!70104 (= lt!30880 (addStillContains!49 lt!30876 lt!30892 (zeroValue!2073 newMap!16) lt!30881))))

(assert (=> b!70104 (contains!710 (+!88 lt!30876 (tuple2!2093 lt!30892 (zeroValue!2073 newMap!16))) lt!30881)))

(declare-fun lt!30890 () Unit!1909)

(assert (=> b!70104 (= lt!30890 lt!30880)))

(declare-fun lt!30887 () ListLongMap!1385)

(assert (=> b!70104 (= lt!30887 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30877 () (_ BitVec 64))

(assert (=> b!70104 (= lt!30877 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30896 () (_ BitVec 64))

(assert (=> b!70104 (= lt!30896 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30884 () Unit!1909)

(assert (=> b!70104 (= lt!30884 (addApplyDifferent!49 lt!30887 lt!30877 (minValue!2073 newMap!16) lt!30896))))

(assert (=> b!70104 (= (apply!73 (+!88 lt!30887 (tuple2!2093 lt!30877 (minValue!2073 newMap!16))) lt!30896) (apply!73 lt!30887 lt!30896))))

(declare-fun lt!30878 () Unit!1909)

(assert (=> b!70104 (= lt!30878 lt!30884)))

(declare-fun lt!30894 () ListLongMap!1385)

(assert (=> b!70104 (= lt!30894 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30895 () (_ BitVec 64))

(assert (=> b!70104 (= lt!30895 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30888 () (_ BitVec 64))

(assert (=> b!70104 (= lt!30888 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30893 () Unit!1909)

(assert (=> b!70104 (= lt!30893 (addApplyDifferent!49 lt!30894 lt!30895 (zeroValue!2073 newMap!16) lt!30888))))

(assert (=> b!70104 (= (apply!73 (+!88 lt!30894 (tuple2!2093 lt!30895 (zeroValue!2073 newMap!16))) lt!30888) (apply!73 lt!30894 lt!30888))))

(declare-fun lt!30879 () Unit!1909)

(assert (=> b!70104 (= lt!30879 lt!30893)))

(declare-fun lt!30891 () ListLongMap!1385)

(assert (=> b!70104 (= lt!30891 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30883 () (_ BitVec 64))

(assert (=> b!70104 (= lt!30883 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30875 () (_ BitVec 64))

(assert (=> b!70104 (= lt!30875 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70104 (= lt!30886 (addApplyDifferent!49 lt!30891 lt!30883 (minValue!2073 newMap!16) lt!30875))))

(assert (=> b!70104 (= (apply!73 (+!88 lt!30891 (tuple2!2093 lt!30883 (minValue!2073 newMap!16))) lt!30875) (apply!73 lt!30891 lt!30875))))

(declare-fun bm!6001 () Bool)

(declare-fun call!6009 () ListLongMap!1385)

(declare-fun call!6010 () ListLongMap!1385)

(assert (=> bm!6001 (= call!6009 call!6010)))

(declare-fun b!70105 () Bool)

(declare-fun e!45869 () Bool)

(assert (=> b!70105 (= e!45869 (= (apply!73 lt!30889 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 lt!30013) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70105 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 lt!30013)))))

(assert (=> b!70105 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun bm!6002 () Bool)

(declare-fun call!6008 () ListLongMap!1385)

(assert (=> bm!6002 (= call!6008 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!70106 () Bool)

(declare-fun e!45867 () Bool)

(assert (=> b!70106 (= e!45867 e!45869)))

(declare-fun res!37536 () Bool)

(assert (=> b!70106 (=> (not res!37536) (not e!45869))))

(assert (=> b!70106 (= res!37536 (contains!710 lt!30889 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70106 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!70107 () Bool)

(declare-fun e!45873 () ListLongMap!1385)

(assert (=> b!70107 (= e!45873 call!6009)))

(declare-fun b!70108 () Bool)

(declare-fun e!45868 () ListLongMap!1385)

(declare-fun call!6006 () ListLongMap!1385)

(assert (=> b!70108 (= e!45868 call!6006)))

(declare-fun b!70109 () Bool)

(declare-fun res!37531 () Bool)

(declare-fun e!45871 () Bool)

(assert (=> b!70109 (=> (not res!37531) (not e!45871))))

(declare-fun e!45866 () Bool)

(assert (=> b!70109 (= res!37531 e!45866)))

(declare-fun c!10127 () Bool)

(assert (=> b!70109 (= c!10127 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!15539 () Bool)

(assert (=> d!15539 e!45871))

(declare-fun res!37535 () Bool)

(assert (=> d!15539 (=> (not res!37535) (not e!45871))))

(assert (=> d!15539 (= res!37535 (or (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun lt!30882 () ListLongMap!1385)

(assert (=> d!15539 (= lt!30889 lt!30882)))

(declare-fun lt!30885 () Unit!1909)

(assert (=> d!15539 (= lt!30885 e!45865)))

(declare-fun c!10129 () Bool)

(declare-fun e!45870 () Bool)

(assert (=> d!15539 (= c!10129 e!45870)))

(declare-fun res!37533 () Bool)

(assert (=> d!15539 (=> (not res!37533) (not e!45870))))

(assert (=> d!15539 (= res!37533 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun e!45874 () ListLongMap!1385)

(assert (=> d!15539 (= lt!30882 e!45874)))

(declare-fun c!10125 () Bool)

(assert (=> d!15539 (= c!10125 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15539 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15539 (= (getCurrentListMap!406 (_keys!3811 newMap!16) lt!30013 (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30889)))

(declare-fun bm!6003 () Bool)

(declare-fun call!6007 () Bool)

(assert (=> bm!6003 (= call!6007 (contains!710 lt!30889 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6004 () Bool)

(declare-fun call!6004 () Bool)

(assert (=> bm!6004 (= call!6004 (contains!710 lt!30889 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70110 () Bool)

(declare-fun e!45872 () Bool)

(assert (=> b!70110 (= e!45872 e!45863)))

(declare-fun res!37530 () Bool)

(assert (=> b!70110 (= res!37530 call!6007)))

(assert (=> b!70110 (=> (not res!37530) (not e!45863))))

(declare-fun bm!6005 () Bool)

(declare-fun call!6005 () ListLongMap!1385)

(assert (=> bm!6005 (= call!6006 call!6005)))

(declare-fun b!70111 () Bool)

(declare-fun e!45875 () Bool)

(assert (=> b!70111 (= e!45875 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70112 () Bool)

(assert (=> b!70112 (= e!45874 e!45873)))

(declare-fun c!10128 () Bool)

(assert (=> b!70112 (= c!10128 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70113 () Bool)

(assert (=> b!70113 (= e!45874 (+!88 call!6010 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!70114 () Bool)

(assert (=> b!70114 (= e!45870 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70115 () Bool)

(declare-fun e!45864 () Bool)

(assert (=> b!70115 (= e!45864 (= (apply!73 lt!30889 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun b!70116 () Bool)

(assert (=> b!70116 (= e!45871 e!45872)))

(declare-fun c!10130 () Bool)

(assert (=> b!70116 (= c!10130 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70117 () Bool)

(declare-fun c!10126 () Bool)

(assert (=> b!70117 (= c!10126 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!70117 (= e!45873 e!45868)))

(declare-fun bm!6006 () Bool)

(assert (=> bm!6006 (= call!6010 (+!88 (ite c!10125 call!6008 (ite c!10128 call!6005 call!6006)) (ite (or c!10125 c!10128) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!70118 () Bool)

(assert (=> b!70118 (= e!45872 (not call!6007))))

(declare-fun b!70119 () Bool)

(assert (=> b!70119 (= e!45866 (not call!6004))))

(declare-fun b!70120 () Bool)

(declare-fun res!37534 () Bool)

(assert (=> b!70120 (=> (not res!37534) (not e!45871))))

(assert (=> b!70120 (= res!37534 e!45867)))

(declare-fun res!37532 () Bool)

(assert (=> b!70120 (=> res!37532 e!45867)))

(assert (=> b!70120 (= res!37532 (not e!45875))))

(declare-fun res!37529 () Bool)

(assert (=> b!70120 (=> (not res!37529) (not e!45875))))

(assert (=> b!70120 (= res!37529 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!70121 () Bool)

(assert (=> b!70121 (= e!45866 e!45864)))

(declare-fun res!37528 () Bool)

(assert (=> b!70121 (= res!37528 call!6004)))

(assert (=> b!70121 (=> (not res!37528) (not e!45864))))

(declare-fun b!70122 () Bool)

(assert (=> b!70122 (= e!45868 call!6009)))

(declare-fun bm!6007 () Bool)

(assert (=> bm!6007 (= call!6005 call!6008)))

(declare-fun b!70123 () Bool)

(declare-fun Unit!1970 () Unit!1909)

(assert (=> b!70123 (= e!45865 Unit!1970)))

(assert (= (and d!15539 c!10125) b!70113))

(assert (= (and d!15539 (not c!10125)) b!70112))

(assert (= (and b!70112 c!10128) b!70107))

(assert (= (and b!70112 (not c!10128)) b!70117))

(assert (= (and b!70117 c!10126) b!70122))

(assert (= (and b!70117 (not c!10126)) b!70108))

(assert (= (or b!70122 b!70108) bm!6005))

(assert (= (or b!70107 bm!6005) bm!6007))

(assert (= (or b!70107 b!70122) bm!6001))

(assert (= (or b!70113 bm!6007) bm!6002))

(assert (= (or b!70113 bm!6001) bm!6006))

(assert (= (and d!15539 res!37533) b!70114))

(assert (= (and d!15539 c!10129) b!70104))

(assert (= (and d!15539 (not c!10129)) b!70123))

(assert (= (and d!15539 res!37535) b!70120))

(assert (= (and b!70120 res!37529) b!70111))

(assert (= (and b!70120 (not res!37532)) b!70106))

(assert (= (and b!70106 res!37536) b!70105))

(assert (= (and b!70120 res!37534) b!70109))

(assert (= (and b!70109 c!10127) b!70121))

(assert (= (and b!70109 (not c!10127)) b!70119))

(assert (= (and b!70121 res!37528) b!70115))

(assert (= (or b!70121 b!70119) bm!6004))

(assert (= (and b!70109 res!37531) b!70116))

(assert (= (and b!70116 c!10130) b!70110))

(assert (= (and b!70116 (not c!10130)) b!70118))

(assert (= (and b!70110 res!37530) b!70103))

(assert (= (or b!70110 b!70118) bm!6003))

(declare-fun b_lambda!3139 () Bool)

(assert (=> (not b_lambda!3139) (not b!70105)))

(assert (=> b!70105 t!4967))

(declare-fun b_and!4313 () Bool)

(assert (= b_and!4309 (and (=> t!4967 result!2615) b_and!4313)))

(assert (=> b!70105 t!4969))

(declare-fun b_and!4315 () Bool)

(assert (= b_and!4311 (and (=> t!4969 result!2617) b_and!4315)))

(assert (=> b!70111 m!64745))

(assert (=> b!70111 m!64745))

(assert (=> b!70111 m!64747))

(declare-fun m!66871 () Bool)

(assert (=> b!70115 m!66871))

(declare-fun m!66873 () Bool)

(assert (=> b!70113 m!66873))

(declare-fun m!66875 () Bool)

(assert (=> b!70105 m!66875))

(assert (=> b!70105 m!64745))

(assert (=> b!70105 m!64745))

(declare-fun m!66877 () Bool)

(assert (=> b!70105 m!66877))

(assert (=> b!70105 m!66875))

(assert (=> b!70105 m!64757))

(declare-fun m!66879 () Bool)

(assert (=> b!70105 m!66879))

(assert (=> b!70105 m!64757))

(declare-fun m!66881 () Bool)

(assert (=> bm!6004 m!66881))

(assert (=> d!15539 m!64725))

(declare-fun m!66883 () Bool)

(assert (=> b!70104 m!66883))

(declare-fun m!66885 () Bool)

(assert (=> b!70104 m!66885))

(declare-fun m!66887 () Bool)

(assert (=> b!70104 m!66887))

(declare-fun m!66889 () Bool)

(assert (=> b!70104 m!66889))

(declare-fun m!66891 () Bool)

(assert (=> b!70104 m!66891))

(declare-fun m!66893 () Bool)

(assert (=> b!70104 m!66893))

(declare-fun m!66895 () Bool)

(assert (=> b!70104 m!66895))

(assert (=> b!70104 m!66887))

(declare-fun m!66897 () Bool)

(assert (=> b!70104 m!66897))

(assert (=> b!70104 m!66889))

(declare-fun m!66899 () Bool)

(assert (=> b!70104 m!66899))

(declare-fun m!66901 () Bool)

(assert (=> b!70104 m!66901))

(declare-fun m!66903 () Bool)

(assert (=> b!70104 m!66903))

(assert (=> b!70104 m!66883))

(declare-fun m!66905 () Bool)

(assert (=> b!70104 m!66905))

(declare-fun m!66907 () Bool)

(assert (=> b!70104 m!66907))

(assert (=> b!70104 m!66899))

(declare-fun m!66909 () Bool)

(assert (=> b!70104 m!66909))

(assert (=> b!70104 m!64745))

(declare-fun m!66911 () Bool)

(assert (=> b!70104 m!66911))

(declare-fun m!66913 () Bool)

(assert (=> b!70104 m!66913))

(assert (=> bm!6002 m!66909))

(assert (=> b!70106 m!64745))

(assert (=> b!70106 m!64745))

(declare-fun m!66915 () Bool)

(assert (=> b!70106 m!66915))

(assert (=> b!70114 m!64745))

(assert (=> b!70114 m!64745))

(assert (=> b!70114 m!64747))

(declare-fun m!66917 () Bool)

(assert (=> bm!6006 m!66917))

(declare-fun m!66919 () Bool)

(assert (=> b!70103 m!66919))

(declare-fun m!66921 () Bool)

(assert (=> bm!6003 m!66921))

(assert (=> b!68825 d!15539))

(declare-fun b!70127 () Bool)

(declare-fun e!45877 () Option!138)

(assert (=> b!70127 (= e!45877 None!136)))

(declare-fun b!70126 () Bool)

(assert (=> b!70126 (= e!45877 (getValueByKey!132 (t!4954 (toList!708 lt!30175)) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70124 () Bool)

(declare-fun e!45876 () Option!138)

(assert (=> b!70124 (= e!45876 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30175)))))))

(declare-fun c!10131 () Bool)

(declare-fun d!15541 () Bool)

(assert (=> d!15541 (= c!10131 (and ((_ is Cons!1455) (toList!708 lt!30175)) (= (_1!1057 (h!2040 (toList!708 lt!30175))) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (=> d!15541 (= (getValueByKey!132 (toList!708 lt!30175) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))) e!45876)))

(declare-fun b!70125 () Bool)

(assert (=> b!70125 (= e!45876 e!45877)))

(declare-fun c!10132 () Bool)

(assert (=> b!70125 (= c!10132 (and ((_ is Cons!1455) (toList!708 lt!30175)) (not (= (_1!1057 (h!2040 (toList!708 lt!30175))) (_1!1057 (ite (or c!9745 c!9748) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))))

(assert (= (and d!15541 c!10131) b!70124))

(assert (= (and d!15541 (not c!10131)) b!70125))

(assert (= (and b!70125 c!10132) b!70126))

(assert (= (and b!70125 (not c!10132)) b!70127))

(declare-fun m!66923 () Bool)

(assert (=> b!70126 m!66923))

(assert (=> b!68853 d!15541))

(declare-fun d!15543 () Bool)

(declare-fun res!37537 () Bool)

(declare-fun e!45878 () Bool)

(assert (=> d!15543 (=> res!37537 e!45878)))

(assert (=> d!15543 (= res!37537 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30077)))))

(assert (=> d!15543 (= (containsKey!135 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30077) e!45878)))

(declare-fun b!70128 () Bool)

(declare-fun e!45879 () Bool)

(assert (=> b!70128 (= e!45878 e!45879)))

(declare-fun res!37538 () Bool)

(assert (=> b!70128 (=> (not res!37538) (not e!45879))))

(assert (=> b!70128 (= res!37538 (and (or (not ((_ is Cons!1455) (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) (bvsle (_1!1057 (h!2040 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30077)) ((_ is Cons!1455) (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (bvslt (_1!1057 (h!2040 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30077)))))

(declare-fun b!70129 () Bool)

(assert (=> b!70129 (= e!45879 (containsKey!135 (t!4954 (toList!708 (+!88 lt!30072 (tuple2!2093 lt!30088 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) lt!30077))))

(assert (= (and d!15543 (not res!37537)) b!70128))

(assert (= (and b!70128 res!37538) b!70129))

(declare-fun m!66925 () Bool)

(assert (=> b!70129 m!66925))

(assert (=> d!14887 d!15543))

(declare-fun d!15545 () Bool)

(declare-fun res!37539 () Bool)

(declare-fun e!45880 () Bool)

(assert (=> d!15545 (=> res!37539 e!45880)))

(assert (=> d!15545 (= res!37539 (and ((_ is Cons!1455) lt!30327) (= (_1!1057 (h!2040 lt!30327)) (_1!1057 lt!29850))))))

(assert (=> d!15545 (= (containsKey!135 lt!30327 (_1!1057 lt!29850)) e!45880)))

(declare-fun b!70130 () Bool)

(declare-fun e!45881 () Bool)

(assert (=> b!70130 (= e!45880 e!45881)))

(declare-fun res!37540 () Bool)

(assert (=> b!70130 (=> (not res!37540) (not e!45881))))

(assert (=> b!70130 (= res!37540 (and (or (not ((_ is Cons!1455) lt!30327)) (bvsle (_1!1057 (h!2040 lt!30327)) (_1!1057 lt!29850))) ((_ is Cons!1455) lt!30327) (bvslt (_1!1057 (h!2040 lt!30327)) (_1!1057 lt!29850))))))

(declare-fun b!70131 () Bool)

(assert (=> b!70131 (= e!45881 (containsKey!135 (t!4954 lt!30327) (_1!1057 lt!29850)))))

(assert (= (and d!15545 (not res!37539)) b!70130))

(assert (= (and b!70130 res!37540) b!70131))

(declare-fun m!66927 () Bool)

(assert (=> b!70131 m!66927))

(assert (=> b!69044 d!15545))

(declare-fun d!15547 () Bool)

(assert (=> d!15547 (= (inRange!0 (ite c!9788 (index!3041 lt!30218) (index!3044 lt!30218)) (mask!6112 newMap!16)) (and (bvsge (ite c!9788 (index!3041 lt!30218) (index!3044 lt!30218)) #b00000000000000000000000000000000) (bvslt (ite c!9788 (index!3041 lt!30218) (index!3044 lt!30218)) (bvadd (mask!6112 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5858 d!15547))

(declare-fun d!15549 () Bool)

(assert (=> d!15549 (= (get!1132 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2493 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68998 d!15549))

(declare-fun b!70132 () Bool)

(declare-fun e!45883 () Bool)

(declare-fun e!45882 () Bool)

(assert (=> b!70132 (= e!45883 e!45882)))

(declare-fun c!10133 () Bool)

(assert (=> b!70132 (= c!10133 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!70133 () Bool)

(declare-fun call!6011 () Bool)

(assert (=> b!70133 (= e!45882 call!6011)))

(declare-fun d!15551 () Bool)

(declare-fun res!37543 () Bool)

(declare-fun e!45884 () Bool)

(assert (=> d!15551 (=> res!37543 e!45884)))

(assert (=> d!15551 (= res!37543 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15551 (= (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 Nil!1457) e!45884)))

(declare-fun b!70134 () Bool)

(assert (=> b!70134 (= e!45884 e!45883)))

(declare-fun res!37541 () Bool)

(assert (=> b!70134 (=> (not res!37541) (not e!45883))))

(declare-fun e!45885 () Bool)

(assert (=> b!70134 (= res!37541 (not e!45885))))

(declare-fun res!37542 () Bool)

(assert (=> b!70134 (=> (not res!37542) (not e!45885))))

(assert (=> b!70134 (= res!37542 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6008 () Bool)

(assert (=> bm!6008 (= call!6011 (arrayNoDuplicates!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10133 (Cons!1456 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000) Nil!1457) Nil!1457)))))

(declare-fun b!70135 () Bool)

(assert (=> b!70135 (= e!45885 (contains!712 Nil!1457 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!70136 () Bool)

(assert (=> b!70136 (= e!45882 call!6011)))

(assert (= (and d!15551 (not res!37543)) b!70134))

(assert (= (and b!70134 res!37542) b!70135))

(assert (= (and b!70134 res!37541) b!70132))

(assert (= (and b!70132 c!10133) b!70133))

(assert (= (and b!70132 (not c!10133)) b!70136))

(assert (= (or b!70133 b!70136) bm!6008))

(declare-fun m!66929 () Bool)

(assert (=> b!70132 m!66929))

(assert (=> b!70132 m!66929))

(declare-fun m!66931 () Bool)

(assert (=> b!70132 m!66931))

(assert (=> b!70134 m!66929))

(assert (=> b!70134 m!66929))

(assert (=> b!70134 m!66931))

(assert (=> bm!6008 m!66929))

(declare-fun m!66933 () Bool)

(assert (=> bm!6008 m!66933))

(assert (=> b!70135 m!66929))

(assert (=> b!70135 m!66929))

(declare-fun m!66935 () Bool)

(assert (=> b!70135 m!66935))

(assert (=> b!69271 d!15551))

(declare-fun d!15553 () Bool)

(assert (=> d!15553 (isDefined!84 (getValueByKey!132 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!30897 () Unit!1909)

(assert (=> d!15553 (= lt!30897 (choose!395 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!45886 () Bool)

(assert (=> d!15553 e!45886))

(declare-fun res!37544 () Bool)

(assert (=> d!15553 (=> (not res!37544) (not e!45886))))

(assert (=> d!15553 (= res!37544 (isStrictlySorted!277 (toList!708 call!5809)))))

(assert (=> d!15553 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30897)))

(declare-fun b!70137 () Bool)

(assert (=> b!70137 (= e!45886 (containsKey!135 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15553 res!37544) b!70137))

(assert (=> d!15553 m!64329))

(assert (=> d!15553 m!65379))

(assert (=> d!15553 m!65379))

(assert (=> d!15553 m!65381))

(assert (=> d!15553 m!64329))

(declare-fun m!66937 () Bool)

(assert (=> d!15553 m!66937))

(declare-fun m!66939 () Bool)

(assert (=> d!15553 m!66939))

(assert (=> b!70137 m!64329))

(assert (=> b!70137 m!65375))

(assert (=> b!69214 d!15553))

(assert (=> b!69214 d!15407))

(assert (=> b!69214 d!15409))

(assert (=> d!15037 d!15035))

(declare-fun d!15555 () Bool)

(assert (=> d!15555 (= (getValueByKey!132 lt!30126 (_1!1057 lt!29846)) (Some!137 (_2!1057 lt!29846)))))

(assert (=> d!15555 true))

(declare-fun _$22!376 () Unit!1909)

(assert (=> d!15555 (= (choose!394 lt!30126 (_1!1057 lt!29846) (_2!1057 lt!29846)) _$22!376)))

(declare-fun bs!3027 () Bool)

(assert (= bs!3027 d!15555))

(assert (=> bs!3027 m!64675))

(assert (=> d!15037 d!15555))

(declare-fun d!15557 () Bool)

(declare-fun res!37545 () Bool)

(declare-fun e!45887 () Bool)

(assert (=> d!15557 (=> res!37545 e!45887)))

(assert (=> d!15557 (= res!37545 (or ((_ is Nil!1456) lt!30126) ((_ is Nil!1456) (t!4954 lt!30126))))))

(assert (=> d!15557 (= (isStrictlySorted!277 lt!30126) e!45887)))

(declare-fun b!70138 () Bool)

(declare-fun e!45888 () Bool)

(assert (=> b!70138 (= e!45887 e!45888)))

(declare-fun res!37546 () Bool)

(assert (=> b!70138 (=> (not res!37546) (not e!45888))))

(assert (=> b!70138 (= res!37546 (bvslt (_1!1057 (h!2040 lt!30126)) (_1!1057 (h!2040 (t!4954 lt!30126)))))))

(declare-fun b!70139 () Bool)

(assert (=> b!70139 (= e!45888 (isStrictlySorted!277 (t!4954 lt!30126)))))

(assert (= (and d!15557 (not res!37545)) b!70138))

(assert (= (and b!70138 res!37546) b!70139))

(declare-fun m!66941 () Bool)

(assert (=> b!70139 m!66941))

(assert (=> d!15037 d!15557))

(declare-fun d!15559 () Bool)

(declare-fun e!45890 () Bool)

(assert (=> d!15559 e!45890))

(declare-fun res!37547 () Bool)

(assert (=> d!15559 (=> res!37547 e!45890)))

(declare-fun lt!30901 () Bool)

(assert (=> d!15559 (= res!37547 (not lt!30901))))

(declare-fun lt!30900 () Bool)

(assert (=> d!15559 (= lt!30901 lt!30900)))

(declare-fun lt!30898 () Unit!1909)

(declare-fun e!45889 () Unit!1909)

(assert (=> d!15559 (= lt!30898 e!45889)))

(declare-fun c!10134 () Bool)

(assert (=> d!15559 (= c!10134 lt!30900)))

(assert (=> d!15559 (= lt!30900 (containsKey!135 (toList!708 (+!88 lt!30344 (tuple2!2093 lt!30342 lt!30347))) lt!30341))))

(assert (=> d!15559 (= (contains!710 (+!88 lt!30344 (tuple2!2093 lt!30342 lt!30347)) lt!30341) lt!30901)))

(declare-fun b!70140 () Bool)

(declare-fun lt!30899 () Unit!1909)

(assert (=> b!70140 (= e!45889 lt!30899)))

(assert (=> b!70140 (= lt!30899 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (+!88 lt!30344 (tuple2!2093 lt!30342 lt!30347))) lt!30341))))

(assert (=> b!70140 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30344 (tuple2!2093 lt!30342 lt!30347))) lt!30341))))

(declare-fun b!70141 () Bool)

(declare-fun Unit!1971 () Unit!1909)

(assert (=> b!70141 (= e!45889 Unit!1971)))

(declare-fun b!70142 () Bool)

(assert (=> b!70142 (= e!45890 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30344 (tuple2!2093 lt!30342 lt!30347))) lt!30341)))))

(assert (= (and d!15559 c!10134) b!70140))

(assert (= (and d!15559 (not c!10134)) b!70141))

(assert (= (and d!15559 (not res!37547)) b!70142))

(declare-fun m!66943 () Bool)

(assert (=> d!15559 m!66943))

(declare-fun m!66945 () Bool)

(assert (=> b!70140 m!66945))

(declare-fun m!66947 () Bool)

(assert (=> b!70140 m!66947))

(assert (=> b!70140 m!66947))

(declare-fun m!66949 () Bool)

(assert (=> b!70140 m!66949))

(assert (=> b!70142 m!66947))

(assert (=> b!70142 m!66947))

(assert (=> b!70142 m!66949))

(assert (=> b!69075 d!15559))

(assert (=> b!69075 d!15297))

(declare-fun d!15561 () Bool)

(declare-fun e!45891 () Bool)

(assert (=> d!15561 e!45891))

(declare-fun res!37548 () Bool)

(assert (=> d!15561 (=> (not res!37548) (not e!45891))))

(declare-fun lt!30904 () ListLongMap!1385)

(assert (=> d!15561 (= res!37548 (contains!710 lt!30904 (_1!1057 (tuple2!2093 lt!30342 lt!30347))))))

(declare-fun lt!30902 () List!1459)

(assert (=> d!15561 (= lt!30904 (ListLongMap!1386 lt!30902))))

(declare-fun lt!30905 () Unit!1909)

(declare-fun lt!30903 () Unit!1909)

(assert (=> d!15561 (= lt!30905 lt!30903)))

(assert (=> d!15561 (= (getValueByKey!132 lt!30902 (_1!1057 (tuple2!2093 lt!30342 lt!30347))) (Some!137 (_2!1057 (tuple2!2093 lt!30342 lt!30347))))))

(assert (=> d!15561 (= lt!30903 (lemmaContainsTupThenGetReturnValue!49 lt!30902 (_1!1057 (tuple2!2093 lt!30342 lt!30347)) (_2!1057 (tuple2!2093 lt!30342 lt!30347))))))

(assert (=> d!15561 (= lt!30902 (insertStrictlySorted!52 (toList!708 lt!30344) (_1!1057 (tuple2!2093 lt!30342 lt!30347)) (_2!1057 (tuple2!2093 lt!30342 lt!30347))))))

(assert (=> d!15561 (= (+!88 lt!30344 (tuple2!2093 lt!30342 lt!30347)) lt!30904)))

(declare-fun b!70143 () Bool)

(declare-fun res!37549 () Bool)

(assert (=> b!70143 (=> (not res!37549) (not e!45891))))

(assert (=> b!70143 (= res!37549 (= (getValueByKey!132 (toList!708 lt!30904) (_1!1057 (tuple2!2093 lt!30342 lt!30347))) (Some!137 (_2!1057 (tuple2!2093 lt!30342 lt!30347)))))))

(declare-fun b!70144 () Bool)

(assert (=> b!70144 (= e!45891 (contains!713 (toList!708 lt!30904) (tuple2!2093 lt!30342 lt!30347)))))

(assert (= (and d!15561 res!37548) b!70143))

(assert (= (and b!70143 res!37549) b!70144))

(declare-fun m!66951 () Bool)

(assert (=> d!15561 m!66951))

(declare-fun m!66953 () Bool)

(assert (=> d!15561 m!66953))

(declare-fun m!66955 () Bool)

(assert (=> d!15561 m!66955))

(declare-fun m!66957 () Bool)

(assert (=> d!15561 m!66957))

(declare-fun m!66959 () Bool)

(assert (=> b!70143 m!66959))

(declare-fun m!66961 () Bool)

(assert (=> b!70144 m!66961))

(assert (=> b!69075 d!15561))

(declare-fun d!15563 () Bool)

(declare-fun e!45892 () Bool)

(assert (=> d!15563 e!45892))

(declare-fun res!37550 () Bool)

(assert (=> d!15563 (=> (not res!37550) (not e!45892))))

(declare-fun lt!30908 () ListLongMap!1385)

(assert (=> d!15563 (= res!37550 (contains!710 lt!30908 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!30906 () List!1459)

(assert (=> d!15563 (= lt!30908 (ListLongMap!1386 lt!30906))))

(declare-fun lt!30909 () Unit!1909)

(declare-fun lt!30907 () Unit!1909)

(assert (=> d!15563 (= lt!30909 lt!30907)))

(assert (=> d!15563 (= (getValueByKey!132 lt!30906 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15563 (= lt!30907 (lemmaContainsTupThenGetReturnValue!49 lt!30906 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15563 (= lt!30906 (insertStrictlySorted!52 (toList!708 call!5884) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15563 (= (+!88 call!5884 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30908)))

(declare-fun b!70145 () Bool)

(declare-fun res!37551 () Bool)

(assert (=> b!70145 (=> (not res!37551) (not e!45892))))

(assert (=> b!70145 (= res!37551 (= (getValueByKey!132 (toList!708 lt!30908) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!70146 () Bool)

(assert (=> b!70146 (= e!45892 (contains!713 (toList!708 lt!30908) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15563 res!37550) b!70145))

(assert (= (and b!70145 res!37551) b!70146))

(declare-fun m!66963 () Bool)

(assert (=> d!15563 m!66963))

(declare-fun m!66965 () Bool)

(assert (=> d!15563 m!66965))

(declare-fun m!66967 () Bool)

(assert (=> d!15563 m!66967))

(declare-fun m!66969 () Bool)

(assert (=> d!15563 m!66969))

(declare-fun m!66971 () Bool)

(assert (=> b!70145 m!66971))

(declare-fun m!66973 () Bool)

(assert (=> b!70146 m!66973))

(assert (=> b!69075 d!15563))

(declare-fun d!15565 () Bool)

(assert (=> d!15565 (not (contains!710 (+!88 lt!30344 (tuple2!2093 lt!30342 lt!30347)) lt!30341))))

(declare-fun lt!30910 () Unit!1909)

(assert (=> d!15565 (= lt!30910 (choose!396 lt!30344 lt!30342 lt!30347 lt!30341))))

(declare-fun e!45893 () Bool)

(assert (=> d!15565 e!45893))

(declare-fun res!37552 () Bool)

(assert (=> d!15565 (=> (not res!37552) (not e!45893))))

(assert (=> d!15565 (= res!37552 (not (contains!710 lt!30344 lt!30341)))))

(assert (=> d!15565 (= (addStillNotContains!24 lt!30344 lt!30342 lt!30347 lt!30341) lt!30910)))

(declare-fun b!70147 () Bool)

(assert (=> b!70147 (= e!45893 (not (= lt!30342 lt!30341)))))

(assert (= (and d!15565 res!37552) b!70147))

(assert (=> d!15565 m!65083))

(assert (=> d!15565 m!65083))

(assert (=> d!15565 m!65085))

(declare-fun m!66975 () Bool)

(assert (=> d!15565 m!66975))

(declare-fun m!66977 () Bool)

(assert (=> d!15565 m!66977))

(assert (=> b!69075 d!15565))

(declare-fun d!15567 () Bool)

(assert (=> d!15567 (isDefined!84 (getValueByKey!132 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30911 () Unit!1909)

(assert (=> d!15567 (= lt!30911 (choose!395 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45894 () Bool)

(assert (=> d!15567 e!45894))

(declare-fun res!37553 () Bool)

(assert (=> d!15567 (=> (not res!37553) (not e!45894))))

(assert (=> d!15567 (= res!37553 (isStrictlySorted!277 (toList!708 lt!30085)))))

(assert (=> d!15567 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000) lt!30911)))

(declare-fun b!70148 () Bool)

(assert (=> b!70148 (= e!45894 (containsKey!135 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15567 res!37553) b!70148))

(assert (=> d!15567 m!65229))

(assert (=> d!15567 m!65229))

(assert (=> d!15567 m!65487))

(declare-fun m!66979 () Bool)

(assert (=> d!15567 m!66979))

(assert (=> d!15567 m!66013))

(assert (=> b!70148 m!65483))

(assert (=> b!69266 d!15567))

(assert (=> b!69266 d!15423))

(assert (=> b!69266 d!15195))

(assert (=> b!69205 d!15173))

(declare-fun d!15569 () Bool)

(assert (=> d!15569 (= (isEmpty!318 (toList!708 lt!30109)) ((_ is Nil!1456) (toList!708 lt!30109)))))

(assert (=> d!15017 d!15569))

(declare-fun d!15571 () Bool)

(assert (=> d!15571 (= (isEmpty!317 (getValueByKey!132 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))) (not ((_ is Some!137) (getValueByKey!132 (toList!708 lt!29848) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(assert (=> d!14945 d!15571))

(assert (=> bm!5870 d!14929))

(declare-fun d!15573 () Bool)

(declare-fun e!45896 () Bool)

(assert (=> d!15573 e!45896))

(declare-fun res!37554 () Bool)

(assert (=> d!15573 (=> res!37554 e!45896)))

(declare-fun lt!30915 () Bool)

(assert (=> d!15573 (= res!37554 (not lt!30915))))

(declare-fun lt!30914 () Bool)

(assert (=> d!15573 (= lt!30915 lt!30914)))

(declare-fun lt!30912 () Unit!1909)

(declare-fun e!45895 () Unit!1909)

(assert (=> d!15573 (= lt!30912 e!45895)))

(declare-fun c!10135 () Bool)

(assert (=> d!15573 (= c!10135 lt!30914)))

(assert (=> d!15573 (= lt!30914 (containsKey!135 (toList!708 lt!30387) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15573 (= (contains!710 lt!30387 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30915)))

(declare-fun b!70149 () Bool)

(declare-fun lt!30913 () Unit!1909)

(assert (=> b!70149 (= e!45895 lt!30913)))

(assert (=> b!70149 (= lt!30913 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30387) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70149 (isDefined!84 (getValueByKey!132 (toList!708 lt!30387) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70150 () Bool)

(declare-fun Unit!1972 () Unit!1909)

(assert (=> b!70150 (= e!45895 Unit!1972)))

(declare-fun b!70151 () Bool)

(assert (=> b!70151 (= e!45896 (isDefined!84 (getValueByKey!132 (toList!708 lt!30387) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15573 c!10135) b!70149))

(assert (= (and d!15573 (not c!10135)) b!70150))

(assert (= (and d!15573 (not res!37554)) b!70151))

(declare-fun m!66981 () Bool)

(assert (=> d!15573 m!66981))

(declare-fun m!66983 () Bool)

(assert (=> b!70149 m!66983))

(declare-fun m!66985 () Bool)

(assert (=> b!70149 m!66985))

(assert (=> b!70149 m!66985))

(declare-fun m!66987 () Bool)

(assert (=> b!70149 m!66987))

(assert (=> b!70151 m!66985))

(assert (=> b!70151 m!66985))

(assert (=> b!70151 m!66987))

(assert (=> bm!5886 d!15573))

(assert (=> d!14897 d!14875))

(declare-fun d!15575 () Bool)

(assert (=> d!15575 (= (apply!73 (+!88 lt!30087 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30071) (apply!73 lt!30087 lt!30071))))

(assert (=> d!15575 true))

(declare-fun _$34!796 () Unit!1909)

(assert (=> d!15575 (= (choose!392 lt!30087 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))) lt!30071) _$34!796)))

(declare-fun bs!3028 () Bool)

(assert (= bs!3028 d!15575))

(assert (=> bs!3028 m!64603))

(assert (=> bs!3028 m!64603))

(assert (=> bs!3028 m!64605))

(assert (=> bs!3028 m!64627))

(assert (=> d!14897 d!15575))

(assert (=> d!14897 d!14881))

(assert (=> d!14897 d!14893))

(declare-fun d!15577 () Bool)

(declare-fun e!45898 () Bool)

(assert (=> d!15577 e!45898))

(declare-fun res!37555 () Bool)

(assert (=> d!15577 (=> res!37555 e!45898)))

(declare-fun lt!30919 () Bool)

(assert (=> d!15577 (= res!37555 (not lt!30919))))

(declare-fun lt!30918 () Bool)

(assert (=> d!15577 (= lt!30919 lt!30918)))

(declare-fun lt!30916 () Unit!1909)

(declare-fun e!45897 () Unit!1909)

(assert (=> d!15577 (= lt!30916 e!45897)))

(declare-fun c!10136 () Bool)

(assert (=> d!15577 (= c!10136 lt!30918)))

(assert (=> d!15577 (= lt!30918 (containsKey!135 (toList!708 lt!30087) lt!30071))))

(assert (=> d!15577 (= (contains!710 lt!30087 lt!30071) lt!30919)))

(declare-fun b!70152 () Bool)

(declare-fun lt!30917 () Unit!1909)

(assert (=> b!70152 (= e!45897 lt!30917)))

(assert (=> b!70152 (= lt!30917 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30087) lt!30071))))

(assert (=> b!70152 (isDefined!84 (getValueByKey!132 (toList!708 lt!30087) lt!30071))))

(declare-fun b!70153 () Bool)

(declare-fun Unit!1973 () Unit!1909)

(assert (=> b!70153 (= e!45897 Unit!1973)))

(declare-fun b!70154 () Bool)

(assert (=> b!70154 (= e!45898 (isDefined!84 (getValueByKey!132 (toList!708 lt!30087) lt!30071)))))

(assert (= (and d!15577 c!10136) b!70152))

(assert (= (and d!15577 (not c!10136)) b!70153))

(assert (= (and d!15577 (not res!37555)) b!70154))

(declare-fun m!66989 () Bool)

(assert (=> d!15577 m!66989))

(declare-fun m!66991 () Bool)

(assert (=> b!70152 m!66991))

(assert (=> b!70152 m!64885))

(assert (=> b!70152 m!64885))

(declare-fun m!66993 () Bool)

(assert (=> b!70152 m!66993))

(assert (=> b!70154 m!64885))

(assert (=> b!70154 m!64885))

(assert (=> b!70154 m!66993))

(assert (=> d!14897 d!15577))

(declare-fun d!15579 () Bool)

(declare-fun e!45899 () Bool)

(assert (=> d!15579 e!45899))

(declare-fun res!37556 () Bool)

(assert (=> d!15579 (=> (not res!37556) (not e!45899))))

(declare-fun lt!30922 () ListLongMap!1385)

(assert (=> d!15579 (= res!37556 (contains!710 lt!30922 (_1!1057 (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(declare-fun lt!30920 () List!1459)

(assert (=> d!15579 (= lt!30922 (ListLongMap!1386 lt!30920))))

(declare-fun lt!30923 () Unit!1909)

(declare-fun lt!30921 () Unit!1909)

(assert (=> d!15579 (= lt!30923 lt!30921)))

(assert (=> d!15579 (= (getValueByKey!132 lt!30920 (_1!1057 (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))) (Some!137 (_2!1057 (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15579 (= lt!30921 (lemmaContainsTupThenGetReturnValue!49 lt!30920 (_1!1057 (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (_2!1057 (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15579 (= lt!30920 (insertStrictlySorted!52 (toList!708 (ite c!9764 call!5851 (ite c!9767 call!5848 call!5849))) (_1!1057 (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (_2!1057 (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15579 (= (+!88 (ite c!9764 call!5851 (ite c!9767 call!5848 call!5849)) (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) lt!30922)))

(declare-fun b!70155 () Bool)

(declare-fun res!37557 () Bool)

(assert (=> b!70155 (=> (not res!37557) (not e!45899))))

(assert (=> b!70155 (= res!37557 (= (getValueByKey!132 (toList!708 lt!30922) (_1!1057 (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))) (Some!137 (_2!1057 (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))))

(declare-fun b!70156 () Bool)

(assert (=> b!70156 (= e!45899 (contains!713 (toList!708 lt!30922) (ite (or c!9764 c!9767) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (= (and d!15579 res!37556) b!70155))

(assert (= (and b!70155 res!37557) b!70156))

(declare-fun m!66995 () Bool)

(assert (=> d!15579 m!66995))

(declare-fun m!66997 () Bool)

(assert (=> d!15579 m!66997))

(declare-fun m!66999 () Bool)

(assert (=> d!15579 m!66999))

(declare-fun m!67001 () Bool)

(assert (=> d!15579 m!67001))

(declare-fun m!67003 () Bool)

(assert (=> b!70155 m!67003))

(declare-fun m!67005 () Bool)

(assert (=> b!70156 m!67005))

(assert (=> bm!5849 d!15579))

(declare-fun d!15581 () Bool)

(assert (=> d!15581 (= ($colon$colon!63 e!45280 (ite c!9850 (h!2040 (toList!708 lt!29844)) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850)))) (Cons!1455 (ite c!9850 (h!2040 (toList!708 lt!29844)) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))) e!45280))))

(assert (=> bm!5891 d!15581))

(declare-fun b!70157 () Bool)

(declare-fun e!45905 () Bool)

(declare-fun e!45900 () Bool)

(assert (=> b!70157 (= e!45905 e!45900)))

(declare-fun c!10137 () Bool)

(declare-fun e!45904 () Bool)

(assert (=> b!70157 (= c!10137 e!45904)))

(declare-fun res!37559 () Bool)

(assert (=> b!70157 (=> (not res!37559) (not e!45904))))

(assert (=> b!70157 (= res!37559 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70158 () Bool)

(declare-fun e!45902 () Bool)

(declare-fun lt!30926 () ListLongMap!1385)

(assert (=> b!70158 (= e!45902 (isEmpty!316 lt!30926))))

(declare-fun bm!6009 () Bool)

(declare-fun call!6012 () ListLongMap!1385)

(assert (=> bm!6009 (= call!6012 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!70159 () Bool)

(declare-fun res!37560 () Bool)

(assert (=> b!70159 (=> (not res!37560) (not e!45905))))

(assert (=> b!70159 (= res!37560 (not (contains!710 lt!30926 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70160 () Bool)

(declare-fun lt!30929 () Unit!1909)

(declare-fun lt!30928 () Unit!1909)

(assert (=> b!70160 (= lt!30929 lt!30928)))

(declare-fun lt!30924 () (_ BitVec 64))

(declare-fun lt!30930 () V!2921)

(declare-fun lt!30925 () (_ BitVec 64))

(declare-fun lt!30927 () ListLongMap!1385)

(assert (=> b!70160 (not (contains!710 (+!88 lt!30927 (tuple2!2093 lt!30925 lt!30930)) lt!30924))))

(assert (=> b!70160 (= lt!30928 (addStillNotContains!24 lt!30927 lt!30925 lt!30930 lt!30924))))

(assert (=> b!70160 (= lt!30924 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!70160 (= lt!30930 (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!70160 (= lt!30925 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!70160 (= lt!30927 call!6012)))

(declare-fun e!45906 () ListLongMap!1385)

(assert (=> b!70160 (= e!45906 (+!88 call!6012 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!70161 () Bool)

(assert (=> b!70161 (= e!45906 call!6012)))

(declare-fun b!70163 () Bool)

(assert (=> b!70163 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!70163 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_values!2150 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45903 () Bool)

(assert (=> b!70163 (= e!45903 (= (apply!73 lt!30926 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!70164 () Bool)

(declare-fun e!45901 () ListLongMap!1385)

(assert (=> b!70164 (= e!45901 (ListLongMap!1386 Nil!1456))))

(declare-fun b!70165 () Bool)

(assert (=> b!70165 (= e!45900 e!45903)))

(assert (=> b!70165 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun res!37561 () Bool)

(assert (=> b!70165 (= res!37561 (contains!710 lt!30926 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!70165 (=> (not res!37561) (not e!45903))))

(declare-fun b!70166 () Bool)

(assert (=> b!70166 (= e!45904 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!70166 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!70167 () Bool)

(assert (=> b!70167 (= e!45901 e!45906)))

(declare-fun c!10140 () Bool)

(assert (=> b!70167 (= c!10140 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!70168 () Bool)

(assert (=> b!70168 (= e!45902 (= lt!30926 (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70162 () Bool)

(assert (=> b!70162 (= e!45900 e!45902)))

(declare-fun c!10139 () Bool)

(assert (=> b!70162 (= c!10139 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun d!15583 () Bool)

(assert (=> d!15583 e!45905))

(declare-fun res!37558 () Bool)

(assert (=> d!15583 (=> (not res!37558) (not e!45905))))

(assert (=> d!15583 (= res!37558 (not (contains!710 lt!30926 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15583 (= lt!30926 e!45901)))

(declare-fun c!10138 () Bool)

(assert (=> d!15583 (= c!10138 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15583 (validMask!0 (mask!6112 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!15583 (= (getCurrentListMapNoExtraKeys!53 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (_values!2150 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992))) (extraKeys!2034 (v!2494 (underlying!253 thiss!992))) (zeroValue!2073 (v!2494 (underlying!253 thiss!992))) (minValue!2073 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992)))) lt!30926)))

(assert (= (and d!15583 c!10138) b!70164))

(assert (= (and d!15583 (not c!10138)) b!70167))

(assert (= (and b!70167 c!10140) b!70160))

(assert (= (and b!70167 (not c!10140)) b!70161))

(assert (= (or b!70160 b!70161) bm!6009))

(assert (= (and d!15583 res!37558) b!70159))

(assert (= (and b!70159 res!37560) b!70157))

(assert (= (and b!70157 res!37559) b!70166))

(assert (= (and b!70157 c!10137) b!70165))

(assert (= (and b!70157 (not c!10137)) b!70162))

(assert (= (and b!70165 res!37561) b!70163))

(assert (= (and b!70162 c!10139) b!70168))

(assert (= (and b!70162 (not c!10139)) b!70158))

(declare-fun b_lambda!3141 () Bool)

(assert (=> (not b_lambda!3141) (not b!70160)))

(assert (=> b!70160 t!4951))

(declare-fun b_and!4317 () Bool)

(assert (= b_and!4313 (and (=> t!4951 result!2595) b_and!4317)))

(assert (=> b!70160 t!4953))

(declare-fun b_and!4319 () Bool)

(assert (= b_and!4315 (and (=> t!4953 result!2599) b_and!4319)))

(declare-fun b_lambda!3143 () Bool)

(assert (=> (not b_lambda!3143) (not b!70163)))

(assert (=> b!70163 t!4951))

(declare-fun b_and!4321 () Bool)

(assert (= b_and!4317 (and (=> t!4951 result!2595) b_and!4321)))

(assert (=> b!70163 t!4953))

(declare-fun b_and!4323 () Bool)

(assert (= b_and!4319 (and (=> t!4953 result!2599) b_and!4323)))

(declare-fun m!67007 () Bool)

(assert (=> b!70168 m!67007))

(declare-fun m!67009 () Bool)

(assert (=> b!70158 m!67009))

(assert (=> b!70165 m!65957))

(assert (=> b!70165 m!65957))

(declare-fun m!67011 () Bool)

(assert (=> b!70165 m!67011))

(assert (=> bm!6009 m!67007))

(assert (=> b!70166 m!65957))

(assert (=> b!70166 m!65957))

(declare-fun m!67013 () Bool)

(assert (=> b!70166 m!67013))

(assert (=> b!70163 m!65957))

(declare-fun m!67015 () Bool)

(assert (=> b!70163 m!67015))

(declare-fun m!67017 () Bool)

(assert (=> b!70163 m!67017))

(assert (=> b!70163 m!65957))

(assert (=> b!70163 m!64379))

(assert (=> b!70163 m!67017))

(assert (=> b!70163 m!64379))

(declare-fun m!67019 () Bool)

(assert (=> b!70163 m!67019))

(assert (=> b!70160 m!67017))

(declare-fun m!67021 () Bool)

(assert (=> b!70160 m!67021))

(declare-fun m!67023 () Bool)

(assert (=> b!70160 m!67023))

(assert (=> b!70160 m!67023))

(declare-fun m!67025 () Bool)

(assert (=> b!70160 m!67025))

(assert (=> b!70160 m!65957))

(declare-fun m!67027 () Bool)

(assert (=> b!70160 m!67027))

(assert (=> b!70160 m!64379))

(assert (=> b!70160 m!67017))

(assert (=> b!70160 m!64379))

(assert (=> b!70160 m!67019))

(assert (=> b!70167 m!65957))

(assert (=> b!70167 m!65957))

(assert (=> b!70167 m!67013))

(declare-fun m!67029 () Bool)

(assert (=> b!70159 m!67029))

(declare-fun m!67031 () Bool)

(assert (=> d!15583 m!67031))

(assert (=> d!15583 m!64349))

(assert (=> b!69083 d!15583))

(declare-fun lt!30931 () Bool)

(declare-fun d!15585 () Bool)

(assert (=> d!15585 (= lt!30931 (select (content!74 (toList!708 lt!30428)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(declare-fun e!45907 () Bool)

(assert (=> d!15585 (= lt!30931 e!45907)))

(declare-fun res!37562 () Bool)

(assert (=> d!15585 (=> (not res!37562) (not e!45907))))

(assert (=> d!15585 (= res!37562 ((_ is Cons!1455) (toList!708 lt!30428)))))

(assert (=> d!15585 (= (contains!713 (toList!708 lt!30428) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) lt!30931)))

(declare-fun b!70169 () Bool)

(declare-fun e!45908 () Bool)

(assert (=> b!70169 (= e!45907 e!45908)))

(declare-fun res!37563 () Bool)

(assert (=> b!70169 (=> res!37563 e!45908)))

(assert (=> b!70169 (= res!37563 (= (h!2040 (toList!708 lt!30428)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(declare-fun b!70170 () Bool)

(assert (=> b!70170 (= e!45908 (contains!713 (t!4954 (toList!708 lt!30428)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(assert (= (and d!15585 res!37562) b!70169))

(assert (= (and b!70169 (not res!37563)) b!70170))

(declare-fun m!67033 () Bool)

(assert (=> d!15585 m!67033))

(declare-fun m!67035 () Bool)

(assert (=> d!15585 m!67035))

(declare-fun m!67037 () Bool)

(assert (=> b!70170 m!67037))

(assert (=> b!69194 d!15585))

(declare-fun d!15587 () Bool)

(declare-fun res!37564 () Bool)

(declare-fun e!45909 () Bool)

(assert (=> d!15587 (=> res!37564 e!45909)))

(assert (=> d!15587 (= res!37564 (= (select (arr!1832 (_keys!3811 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15587 (= (arrayContainsKey!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!45909)))

(declare-fun b!70171 () Bool)

(declare-fun e!45910 () Bool)

(assert (=> b!70171 (= e!45909 e!45910)))

(declare-fun res!37565 () Bool)

(assert (=> b!70171 (=> (not res!37565) (not e!45910))))

(assert (=> b!70171 (= res!37565 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!70172 () Bool)

(assert (=> b!70172 (= e!45910 (arrayContainsKey!0 (_keys!3811 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!15587 (not res!37564)) b!70171))

(assert (= (and b!70171 res!37565) b!70172))

(assert (=> d!15587 m!65761))

(assert (=> b!70172 m!64329))

(declare-fun m!67039 () Bool)

(assert (=> b!70172 m!67039))

(assert (=> b!69164 d!15587))

(declare-fun d!15589 () Bool)

(assert (=> d!15589 (= (apply!73 lt!30165 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1134 (getValueByKey!132 (toList!708 lt!30165) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3029 () Bool)

(assert (= bs!3029 d!15589))

(assert (=> bs!3029 m!64745))

(assert (=> bs!3029 m!66579))

(assert (=> bs!3029 m!66579))

(declare-fun m!67041 () Bool)

(assert (=> bs!3029 m!67041))

(assert (=> b!68834 d!15589))

(declare-fun d!15591 () Bool)

(declare-fun c!10141 () Bool)

(assert (=> d!15591 (= c!10141 ((_ is ValueCellFull!884) (select (arr!1833 (_values!2150 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!45911 () V!2921)

(assert (=> d!15591 (= (get!1130 (select (arr!1833 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45911)))

(declare-fun b!70173 () Bool)

(assert (=> b!70173 (= e!45911 (get!1132 (select (arr!1833 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70174 () Bool)

(assert (=> b!70174 (= e!45911 (get!1133 (select (arr!1833 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15591 c!10141) b!70173))

(assert (= (and d!15591 (not c!10141)) b!70174))

(assert (=> b!70173 m!64753))

(assert (=> b!70173 m!64757))

(declare-fun m!67043 () Bool)

(assert (=> b!70173 m!67043))

(assert (=> b!70174 m!64753))

(assert (=> b!70174 m!64757))

(declare-fun m!67045 () Bool)

(assert (=> b!70174 m!67045))

(assert (=> b!68834 d!15591))

(declare-fun d!15593 () Bool)

(assert (=> d!15593 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3030 () Bool)

(assert (= bs!3030 d!15593))

(assert (=> bs!3030 m!65445))

(declare-fun m!67047 () Bool)

(assert (=> bs!3030 m!67047))

(assert (=> b!69246 d!15593))

(declare-fun b!70178 () Bool)

(declare-fun e!45913 () Option!138)

(assert (=> b!70178 (= e!45913 None!136)))

(declare-fun b!70177 () Bool)

(assert (=> b!70177 (= e!45913 (getValueByKey!132 (t!4954 (toList!708 lt!30109)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70175 () Bool)

(declare-fun e!45912 () Option!138)

(assert (=> b!70175 (= e!45912 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30109)))))))

(declare-fun d!15595 () Bool)

(declare-fun c!10142 () Bool)

(assert (=> d!15595 (= c!10142 (and ((_ is Cons!1455) (toList!708 lt!30109)) (= (_1!1057 (h!2040 (toList!708 lt!30109))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15595 (= (getValueByKey!132 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000) e!45912)))

(declare-fun b!70176 () Bool)

(assert (=> b!70176 (= e!45912 e!45913)))

(declare-fun c!10143 () Bool)

(assert (=> b!70176 (= c!10143 (and ((_ is Cons!1455) (toList!708 lt!30109)) (not (= (_1!1057 (h!2040 (toList!708 lt!30109))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15595 c!10142) b!70175))

(assert (= (and d!15595 (not c!10142)) b!70176))

(assert (= (and b!70176 c!10143) b!70177))

(assert (= (and b!70176 (not c!10143)) b!70178))

(declare-fun m!67049 () Bool)

(assert (=> b!70177 m!67049))

(assert (=> b!69246 d!15595))

(declare-fun d!15597 () Bool)

(declare-fun res!37566 () Bool)

(declare-fun e!45914 () Bool)

(assert (=> d!15597 (=> res!37566 e!45914)))

(assert (=> d!15597 (= res!37566 (and ((_ is Cons!1455) lt!30122) (= (_1!1057 (h!2040 lt!30122)) (_1!1057 lt!29850))))))

(assert (=> d!15597 (= (containsKey!135 lt!30122 (_1!1057 lt!29850)) e!45914)))

(declare-fun b!70179 () Bool)

(declare-fun e!45915 () Bool)

(assert (=> b!70179 (= e!45914 e!45915)))

(declare-fun res!37567 () Bool)

(assert (=> b!70179 (=> (not res!37567) (not e!45915))))

(assert (=> b!70179 (= res!37567 (and (or (not ((_ is Cons!1455) lt!30122)) (bvsle (_1!1057 (h!2040 lt!30122)) (_1!1057 lt!29850))) ((_ is Cons!1455) lt!30122) (bvslt (_1!1057 (h!2040 lt!30122)) (_1!1057 lt!29850))))))

(declare-fun b!70180 () Bool)

(assert (=> b!70180 (= e!45915 (containsKey!135 (t!4954 lt!30122) (_1!1057 lt!29850)))))

(assert (= (and d!15597 (not res!37566)) b!70179))

(assert (= (and b!70179 res!37567) b!70180))

(declare-fun m!67051 () Bool)

(assert (=> b!70180 m!67051))

(assert (=> b!69017 d!15597))

(declare-fun d!15599 () Bool)

(declare-fun res!37568 () Bool)

(declare-fun e!45916 () Bool)

(assert (=> d!15599 (=> res!37568 e!45916)))

(assert (=> d!15599 (= res!37568 (and ((_ is Cons!1455) (toList!708 call!5809)) (= (_1!1057 (h!2040 (toList!708 call!5809))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15599 (= (containsKey!135 (toList!708 call!5809) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45916)))

(declare-fun b!70181 () Bool)

(declare-fun e!45917 () Bool)

(assert (=> b!70181 (= e!45916 e!45917)))

(declare-fun res!37569 () Bool)

(assert (=> b!70181 (=> (not res!37569) (not e!45917))))

(assert (=> b!70181 (= res!37569 (and (or (not ((_ is Cons!1455) (toList!708 call!5809))) (bvsle (_1!1057 (h!2040 (toList!708 call!5809))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1455) (toList!708 call!5809)) (bvslt (_1!1057 (h!2040 (toList!708 call!5809))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!70182 () Bool)

(assert (=> b!70182 (= e!45917 (containsKey!135 (t!4954 (toList!708 call!5809)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15599 (not res!37568)) b!70181))

(assert (= (and b!70181 res!37569) b!70182))

(assert (=> b!70182 m!64329))

(declare-fun m!67053 () Bool)

(assert (=> b!70182 m!67053))

(assert (=> d!15019 d!15599))

(declare-fun b!70183 () Bool)

(declare-fun e!45920 () List!1459)

(declare-fun call!6014 () List!1459)

(assert (=> b!70183 (= e!45920 call!6014)))

(declare-fun b!70184 () Bool)

(declare-fun e!45918 () List!1459)

(assert (=> b!70184 (= e!45918 (insertStrictlySorted!52 (t!4954 (t!4954 (toList!708 (+!88 lt!29844 lt!29850)))) (_1!1057 lt!29846) (_2!1057 lt!29846)))))

(declare-fun b!70185 () Bool)

(declare-fun e!45921 () List!1459)

(declare-fun call!6013 () List!1459)

(assert (=> b!70185 (= e!45921 call!6013)))

(declare-fun b!70186 () Bool)

(assert (=> b!70186 (= e!45921 call!6013)))

(declare-fun b!70187 () Bool)

(declare-fun c!10147 () Bool)

(assert (=> b!70187 (= c!10147 (and ((_ is Cons!1455) (t!4954 (toList!708 (+!88 lt!29844 lt!29850)))) (bvsgt (_1!1057 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29850))))) (_1!1057 lt!29846))))))

(assert (=> b!70187 (= e!45920 e!45921)))

(declare-fun b!70188 () Bool)

(declare-fun res!37571 () Bool)

(declare-fun e!45919 () Bool)

(assert (=> b!70188 (=> (not res!37571) (not e!45919))))

(declare-fun lt!30932 () List!1459)

(assert (=> b!70188 (= res!37571 (containsKey!135 lt!30932 (_1!1057 lt!29846)))))

(declare-fun bm!6011 () Bool)

(declare-fun c!10144 () Bool)

(declare-fun call!6015 () List!1459)

(assert (=> bm!6011 (= call!6015 ($colon$colon!63 e!45918 (ite c!10144 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29850)))) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846)))))))

(declare-fun c!10145 () Bool)

(assert (=> bm!6011 (= c!10145 c!10144)))

(declare-fun b!70189 () Bool)

(declare-fun e!45922 () List!1459)

(assert (=> b!70189 (= e!45922 e!45920)))

(declare-fun c!10146 () Bool)

(assert (=> b!70189 (= c!10146 (and ((_ is Cons!1455) (t!4954 (toList!708 (+!88 lt!29844 lt!29850)))) (= (_1!1057 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29850))))) (_1!1057 lt!29846))))))

(declare-fun b!70190 () Bool)

(assert (=> b!70190 (= e!45918 (ite c!10146 (t!4954 (t!4954 (toList!708 (+!88 lt!29844 lt!29850)))) (ite c!10147 (Cons!1455 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29850)))) (t!4954 (t!4954 (toList!708 (+!88 lt!29844 lt!29850))))) Nil!1456)))))

(declare-fun b!70191 () Bool)

(assert (=> b!70191 (= e!45922 call!6015)))

(declare-fun bm!6010 () Bool)

(assert (=> bm!6010 (= call!6014 call!6015)))

(declare-fun d!15601 () Bool)

(assert (=> d!15601 e!45919))

(declare-fun res!37570 () Bool)

(assert (=> d!15601 (=> (not res!37570) (not e!45919))))

(assert (=> d!15601 (= res!37570 (isStrictlySorted!277 lt!30932))))

(assert (=> d!15601 (= lt!30932 e!45922)))

(assert (=> d!15601 (= c!10144 (and ((_ is Cons!1455) (t!4954 (toList!708 (+!88 lt!29844 lt!29850)))) (bvslt (_1!1057 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29850))))) (_1!1057 lt!29846))))))

(assert (=> d!15601 (isStrictlySorted!277 (t!4954 (toList!708 (+!88 lt!29844 lt!29850))))))

(assert (=> d!15601 (= (insertStrictlySorted!52 (t!4954 (toList!708 (+!88 lt!29844 lt!29850))) (_1!1057 lt!29846) (_2!1057 lt!29846)) lt!30932)))

(declare-fun b!70192 () Bool)

(assert (=> b!70192 (= e!45919 (contains!713 lt!30932 (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun bm!6012 () Bool)

(assert (=> bm!6012 (= call!6013 call!6014)))

(assert (= (and d!15601 c!10144) b!70191))

(assert (= (and d!15601 (not c!10144)) b!70189))

(assert (= (and b!70189 c!10146) b!70183))

(assert (= (and b!70189 (not c!10146)) b!70187))

(assert (= (and b!70187 c!10147) b!70186))

(assert (= (and b!70187 (not c!10147)) b!70185))

(assert (= (or b!70186 b!70185) bm!6012))

(assert (= (or b!70183 bm!6012) bm!6010))

(assert (= (or b!70191 bm!6010) bm!6011))

(assert (= (and bm!6011 c!10145) b!70184))

(assert (= (and bm!6011 (not c!10145)) b!70190))

(assert (= (and d!15601 res!37570) b!70188))

(assert (= (and b!70188 res!37571) b!70192))

(declare-fun m!67055 () Bool)

(assert (=> d!15601 m!67055))

(declare-fun m!67057 () Bool)

(assert (=> d!15601 m!67057))

(declare-fun m!67059 () Bool)

(assert (=> bm!6011 m!67059))

(declare-fun m!67061 () Bool)

(assert (=> b!70192 m!67061))

(declare-fun m!67063 () Bool)

(assert (=> b!70188 m!67063))

(declare-fun m!67065 () Bool)

(assert (=> b!70184 m!67065))

(assert (=> b!69257 d!15601))

(declare-fun d!15603 () Bool)

(assert (=> d!15603 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!30124) (_1!1057 lt!29850))) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!30124) (_1!1057 lt!29850)))))))

(declare-fun bs!3031 () Bool)

(assert (= bs!3031 d!15603))

(assert (=> bs!3031 m!64669))

(declare-fun m!67067 () Bool)

(assert (=> bs!3031 m!67067))

(assert (=> b!69008 d!15603))

(assert (=> b!69008 d!14869))

(declare-fun d!15605 () Bool)

(declare-fun e!45924 () Bool)

(assert (=> d!15605 e!45924))

(declare-fun res!37572 () Bool)

(assert (=> d!15605 (=> res!37572 e!45924)))

(declare-fun lt!30936 () Bool)

(assert (=> d!15605 (= res!37572 (not lt!30936))))

(declare-fun lt!30935 () Bool)

(assert (=> d!15605 (= lt!30936 lt!30935)))

(declare-fun lt!30933 () Unit!1909)

(declare-fun e!45923 () Unit!1909)

(assert (=> d!15605 (= lt!30933 e!45923)))

(declare-fun c!10148 () Bool)

(assert (=> d!15605 (= c!10148 lt!30935)))

(assert (=> d!15605 (= lt!30935 (containsKey!135 (toList!708 lt!30459) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15605 (= (contains!710 lt!30459 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) lt!30936)))

(declare-fun b!70193 () Bool)

(declare-fun lt!30934 () Unit!1909)

(assert (=> b!70193 (= e!45923 lt!30934)))

(assert (=> b!70193 (= lt!30934 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30459) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70193 (isDefined!84 (getValueByKey!132 (toList!708 lt!30459) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70194 () Bool)

(declare-fun Unit!1974 () Unit!1909)

(assert (=> b!70194 (= e!45923 Unit!1974)))

(declare-fun b!70195 () Bool)

(assert (=> b!70195 (= e!45924 (isDefined!84 (getValueByKey!132 (toList!708 lt!30459) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15605 c!10148) b!70193))

(assert (= (and d!15605 (not c!10148)) b!70194))

(assert (= (and d!15605 (not res!37572)) b!70195))

(assert (=> d!15605 m!64745))

(declare-fun m!67069 () Bool)

(assert (=> d!15605 m!67069))

(assert (=> b!70193 m!64745))

(declare-fun m!67071 () Bool)

(assert (=> b!70193 m!67071))

(assert (=> b!70193 m!64745))

(declare-fun m!67073 () Bool)

(assert (=> b!70193 m!67073))

(assert (=> b!70193 m!67073))

(declare-fun m!67075 () Bool)

(assert (=> b!70193 m!67075))

(assert (=> b!70195 m!64745))

(assert (=> b!70195 m!67073))

(assert (=> b!70195 m!67073))

(assert (=> b!70195 m!67075))

(assert (=> b!69220 d!15605))

(declare-fun d!15607 () Bool)

(assert (=> d!15607 (= (isDefined!84 (getValueByKey!132 (toList!708 lt!30136) (_1!1057 lt!29850))) (not (isEmpty!317 (getValueByKey!132 (toList!708 lt!30136) (_1!1057 lt!29850)))))))

(declare-fun bs!3032 () Bool)

(assert (= bs!3032 d!15607))

(assert (=> bs!3032 m!64705))

(declare-fun m!67077 () Bool)

(assert (=> bs!3032 m!67077))

(assert (=> b!69146 d!15607))

(assert (=> b!69146 d!15013))

(declare-fun d!15609 () Bool)

(declare-fun lt!30937 () Bool)

(assert (=> d!15609 (= lt!30937 (select (content!74 (toList!708 lt!30420)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45925 () Bool)

(assert (=> d!15609 (= lt!30937 e!45925)))

(declare-fun res!37573 () Bool)

(assert (=> d!15609 (=> (not res!37573) (not e!45925))))

(assert (=> d!15609 (= res!37573 ((_ is Cons!1455) (toList!708 lt!30420)))))

(assert (=> d!15609 (= (contains!713 (toList!708 lt!30420) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30937)))

(declare-fun b!70196 () Bool)

(declare-fun e!45926 () Bool)

(assert (=> b!70196 (= e!45925 e!45926)))

(declare-fun res!37574 () Bool)

(assert (=> b!70196 (=> res!37574 e!45926)))

(assert (=> b!70196 (= res!37574 (= (h!2040 (toList!708 lt!30420)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70197 () Bool)

(assert (=> b!70197 (= e!45926 (contains!713 (t!4954 (toList!708 lt!30420)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15609 res!37573) b!70196))

(assert (= (and b!70196 (not res!37574)) b!70197))

(declare-fun m!67079 () Bool)

(assert (=> d!15609 m!67079))

(declare-fun m!67081 () Bool)

(assert (=> d!15609 m!67081))

(declare-fun m!67083 () Bool)

(assert (=> b!70197 m!67083))

(assert (=> b!69190 d!15609))

(declare-fun d!15611 () Bool)

(assert (=> d!15611 (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30938 () Unit!1909)

(assert (=> d!15611 (= lt!30938 (choose!395 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45927 () Bool)

(assert (=> d!15611 e!45927))

(declare-fun res!37575 () Bool)

(assert (=> d!15611 (=> (not res!37575) (not e!45927))))

(assert (=> d!15611 (= res!37575 (isStrictlySorted!277 (toList!708 lt!30109)))))

(assert (=> d!15611 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000) lt!30938)))

(declare-fun b!70198 () Bool)

(assert (=> b!70198 (= e!45927 (containsKey!135 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15611 res!37575) b!70198))

(assert (=> d!15611 m!65003))

(assert (=> d!15611 m!65003))

(assert (=> d!15611 m!65005))

(declare-fun m!67085 () Bool)

(assert (=> d!15611 m!67085))

(assert (=> d!15611 m!66373))

(assert (=> b!70198 m!64999))

(assert (=> b!69000 d!15611))

(assert (=> b!69000 d!15457))

(assert (=> b!69000 d!15459))

(assert (=> b!69084 d!15455))

(declare-fun d!15613 () Bool)

(declare-fun res!37576 () Bool)

(declare-fun e!45928 () Bool)

(assert (=> d!15613 (=> res!37576 e!45928)))

(assert (=> d!15613 (= res!37576 (or ((_ is Nil!1456) lt!30482) ((_ is Nil!1456) (t!4954 lt!30482))))))

(assert (=> d!15613 (= (isStrictlySorted!277 lt!30482) e!45928)))

(declare-fun b!70199 () Bool)

(declare-fun e!45929 () Bool)

(assert (=> b!70199 (= e!45928 e!45929)))

(declare-fun res!37577 () Bool)

(assert (=> b!70199 (=> (not res!37577) (not e!45929))))

(assert (=> b!70199 (= res!37577 (bvslt (_1!1057 (h!2040 lt!30482)) (_1!1057 (h!2040 (t!4954 lt!30482)))))))

(declare-fun b!70200 () Bool)

(assert (=> b!70200 (= e!45929 (isStrictlySorted!277 (t!4954 lt!30482)))))

(assert (= (and d!15613 (not res!37576)) b!70199))

(assert (= (and b!70199 res!37577) b!70200))

(declare-fun m!67087 () Bool)

(assert (=> b!70200 m!67087))

(assert (=> d!15039 d!15613))

(declare-fun d!15615 () Bool)

(declare-fun res!37578 () Bool)

(declare-fun e!45930 () Bool)

(assert (=> d!15615 (=> res!37578 e!45930)))

(assert (=> d!15615 (= res!37578 (or ((_ is Nil!1456) (toList!708 (+!88 lt!29844 lt!29850))) ((_ is Nil!1456) (t!4954 (toList!708 (+!88 lt!29844 lt!29850))))))))

(assert (=> d!15615 (= (isStrictlySorted!277 (toList!708 (+!88 lt!29844 lt!29850))) e!45930)))

(declare-fun b!70201 () Bool)

(declare-fun e!45931 () Bool)

(assert (=> b!70201 (= e!45930 e!45931)))

(declare-fun res!37579 () Bool)

(assert (=> b!70201 (=> (not res!37579) (not e!45931))))

(assert (=> b!70201 (= res!37579 (bvslt (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 lt!29850)))) (_1!1057 (h!2040 (t!4954 (toList!708 (+!88 lt!29844 lt!29850)))))))))

(declare-fun b!70202 () Bool)

(assert (=> b!70202 (= e!45931 (isStrictlySorted!277 (t!4954 (toList!708 (+!88 lt!29844 lt!29850)))))))

(assert (= (and d!15615 (not res!37578)) b!70201))

(assert (= (and b!70201 res!37579) b!70202))

(assert (=> b!70202 m!67057))

(assert (=> d!15039 d!15615))

(declare-fun d!15617 () Bool)

(declare-fun res!37580 () Bool)

(declare-fun e!45932 () Bool)

(assert (=> d!15617 (=> res!37580 e!45932)))

(assert (=> d!15617 (= res!37580 (and ((_ is Cons!1455) lt!30134) (= (_1!1057 (h!2040 lt!30134)) (_1!1057 lt!29850))))))

(assert (=> d!15617 (= (containsKey!135 lt!30134 (_1!1057 lt!29850)) e!45932)))

(declare-fun b!70203 () Bool)

(declare-fun e!45933 () Bool)

(assert (=> b!70203 (= e!45932 e!45933)))

(declare-fun res!37581 () Bool)

(assert (=> b!70203 (=> (not res!37581) (not e!45933))))

(assert (=> b!70203 (= res!37581 (and (or (not ((_ is Cons!1455) lt!30134)) (bvsle (_1!1057 (h!2040 lt!30134)) (_1!1057 lt!29850))) ((_ is Cons!1455) lt!30134) (bvslt (_1!1057 (h!2040 lt!30134)) (_1!1057 lt!29850))))))

(declare-fun b!70204 () Bool)

(assert (=> b!70204 (= e!45933 (containsKey!135 (t!4954 lt!30134) (_1!1057 lt!29850)))))

(assert (= (and d!15617 (not res!37580)) b!70203))

(assert (= (and b!70203 res!37581) b!70204))

(declare-fun m!67089 () Bool)

(assert (=> b!70204 m!67089))

(assert (=> b!69151 d!15617))

(declare-fun d!15619 () Bool)

(declare-fun res!37582 () Bool)

(declare-fun e!45934 () Bool)

(assert (=> d!15619 (=> res!37582 e!45934)))

(assert (=> d!15619 (= res!37582 (and ((_ is Cons!1455) (toList!708 lt!30085)) (= (_1!1057 (h!2040 (toList!708 lt!30085))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15619 (= (containsKey!135 (toList!708 lt!30085) #b0000000000000000000000000000000000000000000000000000000000000000) e!45934)))

(declare-fun b!70205 () Bool)

(declare-fun e!45935 () Bool)

(assert (=> b!70205 (= e!45934 e!45935)))

(declare-fun res!37583 () Bool)

(assert (=> b!70205 (=> (not res!37583) (not e!45935))))

(assert (=> b!70205 (= res!37583 (and (or (not ((_ is Cons!1455) (toList!708 lt!30085))) (bvsle (_1!1057 (h!2040 (toList!708 lt!30085))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1455) (toList!708 lt!30085)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30085))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70206 () Bool)

(assert (=> b!70206 (= e!45935 (containsKey!135 (t!4954 (toList!708 lt!30085)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15619 (not res!37582)) b!70205))

(assert (= (and b!70205 res!37583) b!70206))

(declare-fun m!67091 () Bool)

(assert (=> b!70206 m!67091))

(assert (=> d!15041 d!15619))

(declare-fun d!15621 () Bool)

(assert (=> d!15621 (= (inRange!0 (ite c!9800 (index!3042 lt!30287) (ite c!9801 (index!3041 lt!30302) (index!3044 lt!30302))) (mask!6112 newMap!16)) (and (bvsge (ite c!9800 (index!3042 lt!30287) (ite c!9801 (index!3041 lt!30302) (index!3044 lt!30302))) #b00000000000000000000000000000000) (bvslt (ite c!9800 (index!3042 lt!30287) (ite c!9801 (index!3041 lt!30302) (index!3044 lt!30302))) (bvadd (mask!6112 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5868 d!15621))

(declare-fun d!15623 () Bool)

(declare-fun e!45937 () Bool)

(assert (=> d!15623 e!45937))

(declare-fun res!37584 () Bool)

(assert (=> d!15623 (=> res!37584 e!45937)))

(declare-fun lt!30942 () Bool)

(assert (=> d!15623 (= res!37584 (not lt!30942))))

(declare-fun lt!30941 () Bool)

(assert (=> d!15623 (= lt!30942 lt!30941)))

(declare-fun lt!30939 () Unit!1909)

(declare-fun e!45936 () Unit!1909)

(assert (=> d!15623 (= lt!30939 e!45936)))

(declare-fun c!10149 () Bool)

(assert (=> d!15623 (= c!10149 lt!30941)))

(assert (=> d!15623 (= lt!30941 (containsKey!135 (toList!708 lt!30428) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15623 (= (contains!710 lt!30428 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!30942)))

(declare-fun b!70207 () Bool)

(declare-fun lt!30940 () Unit!1909)

(assert (=> b!70207 (= e!45936 lt!30940)))

(assert (=> b!70207 (= lt!30940 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30428) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> b!70207 (isDefined!84 (getValueByKey!132 (toList!708 lt!30428) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70208 () Bool)

(declare-fun Unit!1975 () Unit!1909)

(assert (=> b!70208 (= e!45936 Unit!1975)))

(declare-fun b!70209 () Bool)

(assert (=> b!70209 (= e!45937 (isDefined!84 (getValueByKey!132 (toList!708 lt!30428) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (= (and d!15623 c!10149) b!70207))

(assert (= (and d!15623 (not c!10149)) b!70208))

(assert (= (and d!15623 (not res!37584)) b!70209))

(declare-fun m!67093 () Bool)

(assert (=> d!15623 m!67093))

(declare-fun m!67095 () Bool)

(assert (=> b!70207 m!67095))

(assert (=> b!70207 m!65339))

(assert (=> b!70207 m!65339))

(declare-fun m!67097 () Bool)

(assert (=> b!70207 m!67097))

(assert (=> b!70209 m!65339))

(assert (=> b!70209 m!65339))

(assert (=> b!70209 m!67097))

(assert (=> d!15003 d!15623))

(declare-fun b!70213 () Bool)

(declare-fun e!45939 () Option!138)

(assert (=> b!70213 (= e!45939 None!136)))

(declare-fun b!70212 () Bool)

(assert (=> b!70212 (= e!45939 (getValueByKey!132 (t!4954 lt!30426) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70210 () Bool)

(declare-fun e!45938 () Option!138)

(assert (=> b!70210 (= e!45938 (Some!137 (_2!1057 (h!2040 lt!30426))))))

(declare-fun c!10150 () Bool)

(declare-fun d!15625 () Bool)

(assert (=> d!15625 (= c!10150 (and ((_ is Cons!1455) lt!30426) (= (_1!1057 (h!2040 lt!30426)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15625 (= (getValueByKey!132 lt!30426 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) e!45938)))

(declare-fun b!70211 () Bool)

(assert (=> b!70211 (= e!45938 e!45939)))

(declare-fun c!10151 () Bool)

(assert (=> b!70211 (= c!10151 (and ((_ is Cons!1455) lt!30426) (not (= (_1!1057 (h!2040 lt!30426)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (= (and d!15625 c!10150) b!70210))

(assert (= (and d!15625 (not c!10150)) b!70211))

(assert (= (and b!70211 c!10151) b!70212))

(assert (= (and b!70211 (not c!10151)) b!70213))

(declare-fun m!67099 () Bool)

(assert (=> b!70212 m!67099))

(assert (=> d!15003 d!15625))

(declare-fun d!15627 () Bool)

(assert (=> d!15627 (= (getValueByKey!132 lt!30426 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun lt!30943 () Unit!1909)

(assert (=> d!15627 (= lt!30943 (choose!394 lt!30426 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun e!45940 () Bool)

(assert (=> d!15627 e!45940))

(declare-fun res!37585 () Bool)

(assert (=> d!15627 (=> (not res!37585) (not e!45940))))

(assert (=> d!15627 (= res!37585 (isStrictlySorted!277 lt!30426))))

(assert (=> d!15627 (= (lemmaContainsTupThenGetReturnValue!49 lt!30426 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!30943)))

(declare-fun b!70214 () Bool)

(declare-fun res!37586 () Bool)

(assert (=> b!70214 (=> (not res!37586) (not e!45940))))

(assert (=> b!70214 (= res!37586 (containsKey!135 lt!30426 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70215 () Bool)

(assert (=> b!70215 (= e!45940 (contains!713 lt!30426 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (= (and d!15627 res!37585) b!70214))

(assert (= (and b!70214 res!37586) b!70215))

(assert (=> d!15627 m!65333))

(declare-fun m!67101 () Bool)

(assert (=> d!15627 m!67101))

(declare-fun m!67103 () Bool)

(assert (=> d!15627 m!67103))

(declare-fun m!67105 () Bool)

(assert (=> b!70214 m!67105))

(declare-fun m!67107 () Bool)

(assert (=> b!70215 m!67107))

(assert (=> d!15003 d!15627))

(declare-fun b!70216 () Bool)

(declare-fun e!45943 () List!1459)

(declare-fun call!6017 () List!1459)

(assert (=> b!70216 (= e!45943 call!6017)))

(declare-fun e!45941 () List!1459)

(declare-fun b!70217 () Bool)

(assert (=> b!70217 (= e!45941 (insertStrictlySorted!52 (t!4954 (toList!708 lt!29844)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70218 () Bool)

(declare-fun e!45944 () List!1459)

(declare-fun call!6016 () List!1459)

(assert (=> b!70218 (= e!45944 call!6016)))

(declare-fun b!70219 () Bool)

(assert (=> b!70219 (= e!45944 call!6016)))

(declare-fun b!70220 () Bool)

(declare-fun c!10155 () Bool)

(assert (=> b!70220 (= c!10155 (and ((_ is Cons!1455) (toList!708 lt!29844)) (bvsgt (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> b!70220 (= e!45943 e!45944)))

(declare-fun b!70221 () Bool)

(declare-fun res!37588 () Bool)

(declare-fun e!45942 () Bool)

(assert (=> b!70221 (=> (not res!37588) (not e!45942))))

(declare-fun lt!30944 () List!1459)

(assert (=> b!70221 (= res!37588 (containsKey!135 lt!30944 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun c!10152 () Bool)

(declare-fun call!6018 () List!1459)

(declare-fun bm!6014 () Bool)

(assert (=> bm!6014 (= call!6018 ($colon$colon!63 e!45941 (ite c!10152 (h!2040 (toList!708 lt!29844)) (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(declare-fun c!10153 () Bool)

(assert (=> bm!6014 (= c!10153 c!10152)))

(declare-fun b!70222 () Bool)

(declare-fun e!45945 () List!1459)

(assert (=> b!70222 (= e!45945 e!45943)))

(declare-fun c!10154 () Bool)

(assert (=> b!70222 (= c!10154 (and ((_ is Cons!1455) (toList!708 lt!29844)) (= (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!70223 () Bool)

(assert (=> b!70223 (= e!45941 (ite c!10154 (t!4954 (toList!708 lt!29844)) (ite c!10155 (Cons!1455 (h!2040 (toList!708 lt!29844)) (t!4954 (toList!708 lt!29844))) Nil!1456)))))

(declare-fun b!70224 () Bool)

(assert (=> b!70224 (= e!45945 call!6018)))

(declare-fun bm!6013 () Bool)

(assert (=> bm!6013 (= call!6017 call!6018)))

(declare-fun d!15629 () Bool)

(assert (=> d!15629 e!45942))

(declare-fun res!37587 () Bool)

(assert (=> d!15629 (=> (not res!37587) (not e!45942))))

(assert (=> d!15629 (= res!37587 (isStrictlySorted!277 lt!30944))))

(assert (=> d!15629 (= lt!30944 e!45945)))

(assert (=> d!15629 (= c!10152 (and ((_ is Cons!1455) (toList!708 lt!29844)) (bvslt (_1!1057 (h!2040 (toList!708 lt!29844))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15629 (isStrictlySorted!277 (toList!708 lt!29844))))

(assert (=> d!15629 (= (insertStrictlySorted!52 (toList!708 lt!29844) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!30944)))

(declare-fun b!70225 () Bool)

(assert (=> b!70225 (= e!45942 (contains!713 lt!30944 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun bm!6015 () Bool)

(assert (=> bm!6015 (= call!6016 call!6017)))

(assert (= (and d!15629 c!10152) b!70224))

(assert (= (and d!15629 (not c!10152)) b!70222))

(assert (= (and b!70222 c!10154) b!70216))

(assert (= (and b!70222 (not c!10154)) b!70220))

(assert (= (and b!70220 c!10155) b!70219))

(assert (= (and b!70220 (not c!10155)) b!70218))

(assert (= (or b!70219 b!70218) bm!6015))

(assert (= (or b!70216 bm!6015) bm!6013))

(assert (= (or b!70224 bm!6013) bm!6014))

(assert (= (and bm!6014 c!10153) b!70217))

(assert (= (and bm!6014 (not c!10153)) b!70223))

(assert (= (and d!15629 res!37587) b!70221))

(assert (= (and b!70221 res!37588) b!70225))

(declare-fun m!67109 () Bool)

(assert (=> d!15629 m!67109))

(assert (=> d!15629 m!65251))

(declare-fun m!67111 () Bool)

(assert (=> bm!6014 m!67111))

(declare-fun m!67113 () Bool)

(assert (=> b!70225 m!67113))

(declare-fun m!67115 () Bool)

(assert (=> b!70221 m!67115))

(declare-fun m!67117 () Bool)

(assert (=> b!70217 m!67117))

(assert (=> d!15003 d!15629))

(declare-fun b!70226 () Bool)

(declare-fun e!45948 () Bool)

(declare-fun call!6019 () Bool)

(assert (=> b!70226 (= e!45948 call!6019)))

(declare-fun b!70227 () Bool)

(declare-fun e!45946 () Bool)

(declare-fun e!45947 () Bool)

(assert (=> b!70227 (= e!45946 e!45947)))

(declare-fun c!10156 () Bool)

(assert (=> b!70227 (= c!10156 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!15631 () Bool)

(declare-fun res!37590 () Bool)

(assert (=> d!15631 (=> res!37590 e!45946)))

(assert (=> d!15631 (= res!37590 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15631 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992)))) e!45946)))

(declare-fun bm!6016 () Bool)

(assert (=> bm!6016 (= call!6019 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3811 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!70228 () Bool)

(assert (=> b!70228 (= e!45947 call!6019)))

(declare-fun b!70229 () Bool)

(assert (=> b!70229 (= e!45947 e!45948)))

(declare-fun lt!30946 () (_ BitVec 64))

(assert (=> b!70229 (= lt!30946 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!30947 () Unit!1909)

(assert (=> b!70229 (= lt!30947 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) lt!30946 #b00000000000000000000000000000000))))

(assert (=> b!70229 (arrayContainsKey!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) lt!30946 #b00000000000000000000000000000000)))

(declare-fun lt!30945 () Unit!1909)

(assert (=> b!70229 (= lt!30945 lt!30947)))

(declare-fun res!37589 () Bool)

(assert (=> b!70229 (= res!37589 (= (seekEntryOrOpen!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000) (_keys!3811 (v!2494 (underlying!253 thiss!992))) (mask!6112 (v!2494 (underlying!253 thiss!992)))) (Found!228 #b00000000000000000000000000000000)))))

(assert (=> b!70229 (=> (not res!37589) (not e!45948))))

(assert (= (and d!15631 (not res!37590)) b!70227))

(assert (= (and b!70227 c!10156) b!70229))

(assert (= (and b!70227 (not c!10156)) b!70228))

(assert (= (and b!70229 res!37589) b!70226))

(assert (= (or b!70226 b!70228) bm!6016))

(assert (=> b!70227 m!66929))

(assert (=> b!70227 m!66929))

(assert (=> b!70227 m!66931))

(declare-fun m!67119 () Bool)

(assert (=> bm!6016 m!67119))

(assert (=> b!70229 m!66929))

(declare-fun m!67121 () Bool)

(assert (=> b!70229 m!67121))

(declare-fun m!67123 () Bool)

(assert (=> b!70229 m!67123))

(assert (=> b!70229 m!66929))

(declare-fun m!67125 () Bool)

(assert (=> b!70229 m!67125))

(assert (=> b!69270 d!15631))

(declare-fun d!15633 () Bool)

(assert (=> d!15633 (= (apply!73 lt!30389 lt!30373) (get!1134 (getValueByKey!132 (toList!708 lt!30389) lt!30373)))))

(declare-fun bs!3033 () Bool)

(assert (= bs!3033 d!15633))

(declare-fun m!67127 () Bool)

(assert (=> bs!3033 m!67127))

(assert (=> bs!3033 m!67127))

(declare-fun m!67129 () Bool)

(assert (=> bs!3033 m!67129))

(assert (=> b!69122 d!15633))

(declare-fun d!15635 () Bool)

(assert (=> d!15635 (= (apply!73 (+!88 lt!30389 (tuple2!2093 lt!30381 (minValue!2073 newMap!16))) lt!30373) (apply!73 lt!30389 lt!30373))))

(declare-fun lt!30948 () Unit!1909)

(assert (=> d!15635 (= lt!30948 (choose!392 lt!30389 lt!30381 (minValue!2073 newMap!16) lt!30373))))

(declare-fun e!45949 () Bool)

(assert (=> d!15635 e!45949))

(declare-fun res!37591 () Bool)

(assert (=> d!15635 (=> (not res!37591) (not e!45949))))

(assert (=> d!15635 (= res!37591 (contains!710 lt!30389 lt!30373))))

(assert (=> d!15635 (= (addApplyDifferent!49 lt!30389 lt!30381 (minValue!2073 newMap!16) lt!30373) lt!30948)))

(declare-fun b!70230 () Bool)

(assert (=> b!70230 (= e!45949 (not (= lt!30373 lt!30381)))))

(assert (= (and d!15635 res!37591) b!70230))

(declare-fun m!67131 () Bool)

(assert (=> d!15635 m!67131))

(assert (=> d!15635 m!65177))

(assert (=> d!15635 m!65179))

(assert (=> d!15635 m!65177))

(declare-fun m!67133 () Bool)

(assert (=> d!15635 m!67133))

(assert (=> d!15635 m!65201))

(assert (=> b!69122 d!15635))

(declare-fun d!15637 () Bool)

(declare-fun e!45950 () Bool)

(assert (=> d!15637 e!45950))

(declare-fun res!37592 () Bool)

(assert (=> d!15637 (=> (not res!37592) (not e!45950))))

(declare-fun lt!30951 () ListLongMap!1385)

(assert (=> d!15637 (= res!37592 (contains!710 lt!30951 (_1!1057 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16)))))))

(declare-fun lt!30949 () List!1459)

(assert (=> d!15637 (= lt!30951 (ListLongMap!1386 lt!30949))))

(declare-fun lt!30952 () Unit!1909)

(declare-fun lt!30950 () Unit!1909)

(assert (=> d!15637 (= lt!30952 lt!30950)))

(assert (=> d!15637 (= (getValueByKey!132 lt!30949 (_1!1057 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15637 (= lt!30950 (lemmaContainsTupThenGetReturnValue!49 lt!30949 (_1!1057 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15637 (= lt!30949 (insertStrictlySorted!52 (toList!708 lt!30392) (_1!1057 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15637 (= (+!88 lt!30392 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16))) lt!30951)))

(declare-fun b!70231 () Bool)

(declare-fun res!37593 () Bool)

(assert (=> b!70231 (=> (not res!37593) (not e!45950))))

(assert (=> b!70231 (= res!37593 (= (getValueByKey!132 (toList!708 lt!30951) (_1!1057 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16))))))))

(declare-fun b!70232 () Bool)

(assert (=> b!70232 (= e!45950 (contains!713 (toList!708 lt!30951) (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16))))))

(assert (= (and d!15637 res!37592) b!70231))

(assert (= (and b!70231 res!37593) b!70232))

(declare-fun m!67135 () Bool)

(assert (=> d!15637 m!67135))

(declare-fun m!67137 () Bool)

(assert (=> d!15637 m!67137))

(declare-fun m!67139 () Bool)

(assert (=> d!15637 m!67139))

(declare-fun m!67141 () Bool)

(assert (=> d!15637 m!67141))

(declare-fun m!67143 () Bool)

(assert (=> b!70231 m!67143))

(declare-fun m!67145 () Bool)

(assert (=> b!70232 m!67145))

(assert (=> b!69122 d!15637))

(declare-fun d!15639 () Bool)

(assert (=> d!15639 (= (apply!73 lt!30392 lt!30386) (get!1134 (getValueByKey!132 (toList!708 lt!30392) lt!30386)))))

(declare-fun bs!3034 () Bool)

(assert (= bs!3034 d!15639))

(declare-fun m!67147 () Bool)

(assert (=> bs!3034 m!67147))

(assert (=> bs!3034 m!67147))

(declare-fun m!67149 () Bool)

(assert (=> bs!3034 m!67149))

(assert (=> b!69122 d!15639))

(declare-fun d!15641 () Bool)

(declare-fun e!45951 () Bool)

(assert (=> d!15641 e!45951))

(declare-fun res!37594 () Bool)

(assert (=> d!15641 (=> (not res!37594) (not e!45951))))

(declare-fun lt!30955 () ListLongMap!1385)

(assert (=> d!15641 (= res!37594 (contains!710 lt!30955 (_1!1057 (tuple2!2093 lt!30381 (minValue!2073 newMap!16)))))))

(declare-fun lt!30953 () List!1459)

(assert (=> d!15641 (= lt!30955 (ListLongMap!1386 lt!30953))))

(declare-fun lt!30956 () Unit!1909)

(declare-fun lt!30954 () Unit!1909)

(assert (=> d!15641 (= lt!30956 lt!30954)))

(assert (=> d!15641 (= (getValueByKey!132 lt!30953 (_1!1057 (tuple2!2093 lt!30381 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30381 (minValue!2073 newMap!16)))))))

(assert (=> d!15641 (= lt!30954 (lemmaContainsTupThenGetReturnValue!49 lt!30953 (_1!1057 (tuple2!2093 lt!30381 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30381 (minValue!2073 newMap!16)))))))

(assert (=> d!15641 (= lt!30953 (insertStrictlySorted!52 (toList!708 lt!30389) (_1!1057 (tuple2!2093 lt!30381 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30381 (minValue!2073 newMap!16)))))))

(assert (=> d!15641 (= (+!88 lt!30389 (tuple2!2093 lt!30381 (minValue!2073 newMap!16))) lt!30955)))

(declare-fun b!70233 () Bool)

(declare-fun res!37595 () Bool)

(assert (=> b!70233 (=> (not res!37595) (not e!45951))))

(assert (=> b!70233 (= res!37595 (= (getValueByKey!132 (toList!708 lt!30955) (_1!1057 (tuple2!2093 lt!30381 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30381 (minValue!2073 newMap!16))))))))

(declare-fun b!70234 () Bool)

(assert (=> b!70234 (= e!45951 (contains!713 (toList!708 lt!30955) (tuple2!2093 lt!30381 (minValue!2073 newMap!16))))))

(assert (= (and d!15641 res!37594) b!70233))

(assert (= (and b!70233 res!37595) b!70234))

(declare-fun m!67151 () Bool)

(assert (=> d!15641 m!67151))

(declare-fun m!67153 () Bool)

(assert (=> d!15641 m!67153))

(declare-fun m!67155 () Bool)

(assert (=> d!15641 m!67155))

(declare-fun m!67157 () Bool)

(assert (=> d!15641 m!67157))

(declare-fun m!67159 () Bool)

(assert (=> b!70233 m!67159))

(declare-fun m!67161 () Bool)

(assert (=> b!70234 m!67161))

(assert (=> b!69122 d!15641))

(declare-fun d!15643 () Bool)

(declare-fun e!45952 () Bool)

(assert (=> d!15643 e!45952))

(declare-fun res!37596 () Bool)

(assert (=> d!15643 (=> (not res!37596) (not e!45952))))

(declare-fun lt!30959 () ListLongMap!1385)

(assert (=> d!15643 (= res!37596 (contains!710 lt!30959 (_1!1057 (tuple2!2093 lt!30375 (minValue!2073 newMap!16)))))))

(declare-fun lt!30957 () List!1459)

(assert (=> d!15643 (= lt!30959 (ListLongMap!1386 lt!30957))))

(declare-fun lt!30960 () Unit!1909)

(declare-fun lt!30958 () Unit!1909)

(assert (=> d!15643 (= lt!30960 lt!30958)))

(assert (=> d!15643 (= (getValueByKey!132 lt!30957 (_1!1057 (tuple2!2093 lt!30375 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30375 (minValue!2073 newMap!16)))))))

(assert (=> d!15643 (= lt!30958 (lemmaContainsTupThenGetReturnValue!49 lt!30957 (_1!1057 (tuple2!2093 lt!30375 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30375 (minValue!2073 newMap!16)))))))

(assert (=> d!15643 (= lt!30957 (insertStrictlySorted!52 (toList!708 lt!30385) (_1!1057 (tuple2!2093 lt!30375 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30375 (minValue!2073 newMap!16)))))))

(assert (=> d!15643 (= (+!88 lt!30385 (tuple2!2093 lt!30375 (minValue!2073 newMap!16))) lt!30959)))

(declare-fun b!70235 () Bool)

(declare-fun res!37597 () Bool)

(assert (=> b!70235 (=> (not res!37597) (not e!45952))))

(assert (=> b!70235 (= res!37597 (= (getValueByKey!132 (toList!708 lt!30959) (_1!1057 (tuple2!2093 lt!30375 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30375 (minValue!2073 newMap!16))))))))

(declare-fun b!70236 () Bool)

(assert (=> b!70236 (= e!45952 (contains!713 (toList!708 lt!30959) (tuple2!2093 lt!30375 (minValue!2073 newMap!16))))))

(assert (= (and d!15643 res!37596) b!70235))

(assert (= (and b!70235 res!37597) b!70236))

(declare-fun m!67163 () Bool)

(assert (=> d!15643 m!67163))

(declare-fun m!67165 () Bool)

(assert (=> d!15643 m!67165))

(declare-fun m!67167 () Bool)

(assert (=> d!15643 m!67167))

(declare-fun m!67169 () Bool)

(assert (=> d!15643 m!67169))

(declare-fun m!67171 () Bool)

(assert (=> b!70235 m!67171))

(declare-fun m!67173 () Bool)

(assert (=> b!70236 m!67173))

(assert (=> b!69122 d!15643))

(declare-fun d!15645 () Bool)

(assert (=> d!15645 (= (apply!73 (+!88 lt!30392 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16))) lt!30386) (apply!73 lt!30392 lt!30386))))

(declare-fun lt!30961 () Unit!1909)

(assert (=> d!15645 (= lt!30961 (choose!392 lt!30392 lt!30393 (zeroValue!2073 newMap!16) lt!30386))))

(declare-fun e!45953 () Bool)

(assert (=> d!15645 e!45953))

(declare-fun res!37598 () Bool)

(assert (=> d!15645 (=> (not res!37598) (not e!45953))))

(assert (=> d!15645 (= res!37598 (contains!710 lt!30392 lt!30386))))

(assert (=> d!15645 (= (addApplyDifferent!49 lt!30392 lt!30393 (zeroValue!2073 newMap!16) lt!30386) lt!30961)))

(declare-fun b!70237 () Bool)

(assert (=> b!70237 (= e!45953 (not (= lt!30386 lt!30393)))))

(assert (= (and d!15645 res!37598) b!70237))

(declare-fun m!67175 () Bool)

(assert (=> d!15645 m!67175))

(assert (=> d!15645 m!65183))

(assert (=> d!15645 m!65185))

(assert (=> d!15645 m!65183))

(declare-fun m!67177 () Bool)

(assert (=> d!15645 m!67177))

(assert (=> d!15645 m!65187))

(assert (=> b!69122 d!15645))

(declare-fun d!15647 () Bool)

(assert (=> d!15647 (= (apply!73 lt!30385 lt!30394) (get!1134 (getValueByKey!132 (toList!708 lt!30385) lt!30394)))))

(declare-fun bs!3035 () Bool)

(assert (= bs!3035 d!15647))

(declare-fun m!67179 () Bool)

(assert (=> bs!3035 m!67179))

(assert (=> bs!3035 m!67179))

(declare-fun m!67181 () Bool)

(assert (=> bs!3035 m!67181))

(assert (=> b!69122 d!15647))

(assert (=> b!69122 d!15393))

(declare-fun d!15649 () Bool)

(assert (=> d!15649 (= (apply!73 (+!88 lt!30385 (tuple2!2093 lt!30375 (minValue!2073 newMap!16))) lt!30394) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30385 (tuple2!2093 lt!30375 (minValue!2073 newMap!16)))) lt!30394)))))

(declare-fun bs!3036 () Bool)

(assert (= bs!3036 d!15649))

(declare-fun m!67183 () Bool)

(assert (=> bs!3036 m!67183))

(assert (=> bs!3036 m!67183))

(declare-fun m!67185 () Bool)

(assert (=> bs!3036 m!67185))

(assert (=> b!69122 d!15649))

(declare-fun d!15651 () Bool)

(declare-fun e!45955 () Bool)

(assert (=> d!15651 e!45955))

(declare-fun res!37599 () Bool)

(assert (=> d!15651 (=> res!37599 e!45955)))

(declare-fun lt!30965 () Bool)

(assert (=> d!15651 (= res!37599 (not lt!30965))))

(declare-fun lt!30964 () Bool)

(assert (=> d!15651 (= lt!30965 lt!30964)))

(declare-fun lt!30962 () Unit!1909)

(declare-fun e!45954 () Unit!1909)

(assert (=> d!15651 (= lt!30962 e!45954)))

(declare-fun c!10157 () Bool)

(assert (=> d!15651 (= c!10157 lt!30964)))

(assert (=> d!15651 (= lt!30964 (containsKey!135 (toList!708 (+!88 lt!30374 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16)))) lt!30379))))

(assert (=> d!15651 (= (contains!710 (+!88 lt!30374 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16))) lt!30379) lt!30965)))

(declare-fun b!70238 () Bool)

(declare-fun lt!30963 () Unit!1909)

(assert (=> b!70238 (= e!45954 lt!30963)))

(assert (=> b!70238 (= lt!30963 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (+!88 lt!30374 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16)))) lt!30379))))

(assert (=> b!70238 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30374 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16)))) lt!30379))))

(declare-fun b!70239 () Bool)

(declare-fun Unit!1976 () Unit!1909)

(assert (=> b!70239 (= e!45954 Unit!1976)))

(declare-fun b!70240 () Bool)

(assert (=> b!70240 (= e!45955 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30374 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16)))) lt!30379)))))

(assert (= (and d!15651 c!10157) b!70238))

(assert (= (and d!15651 (not c!10157)) b!70239))

(assert (= (and d!15651 (not res!37599)) b!70240))

(declare-fun m!67187 () Bool)

(assert (=> d!15651 m!67187))

(declare-fun m!67189 () Bool)

(assert (=> b!70238 m!67189))

(declare-fun m!67191 () Bool)

(assert (=> b!70238 m!67191))

(assert (=> b!70238 m!67191))

(declare-fun m!67193 () Bool)

(assert (=> b!70238 m!67193))

(assert (=> b!70240 m!67191))

(assert (=> b!70240 m!67191))

(assert (=> b!70240 m!67193))

(assert (=> b!69122 d!15651))

(declare-fun d!15653 () Bool)

(declare-fun e!45956 () Bool)

(assert (=> d!15653 e!45956))

(declare-fun res!37600 () Bool)

(assert (=> d!15653 (=> (not res!37600) (not e!45956))))

(declare-fun lt!30968 () ListLongMap!1385)

(assert (=> d!15653 (= res!37600 (contains!710 lt!30968 (_1!1057 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16)))))))

(declare-fun lt!30966 () List!1459)

(assert (=> d!15653 (= lt!30968 (ListLongMap!1386 lt!30966))))

(declare-fun lt!30969 () Unit!1909)

(declare-fun lt!30967 () Unit!1909)

(assert (=> d!15653 (= lt!30969 lt!30967)))

(assert (=> d!15653 (= (getValueByKey!132 lt!30966 (_1!1057 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15653 (= lt!30967 (lemmaContainsTupThenGetReturnValue!49 lt!30966 (_1!1057 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15653 (= lt!30966 (insertStrictlySorted!52 (toList!708 lt!30374) (_1!1057 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15653 (= (+!88 lt!30374 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16))) lt!30968)))

(declare-fun b!70241 () Bool)

(declare-fun res!37601 () Bool)

(assert (=> b!70241 (=> (not res!37601) (not e!45956))))

(assert (=> b!70241 (= res!37601 (= (getValueByKey!132 (toList!708 lt!30968) (_1!1057 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16))))))))

(declare-fun b!70242 () Bool)

(assert (=> b!70242 (= e!45956 (contains!713 (toList!708 lt!30968) (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16))))))

(assert (= (and d!15653 res!37600) b!70241))

(assert (= (and b!70241 res!37601) b!70242))

(declare-fun m!67195 () Bool)

(assert (=> d!15653 m!67195))

(declare-fun m!67197 () Bool)

(assert (=> d!15653 m!67197))

(declare-fun m!67199 () Bool)

(assert (=> d!15653 m!67199))

(declare-fun m!67201 () Bool)

(assert (=> d!15653 m!67201))

(declare-fun m!67203 () Bool)

(assert (=> b!70241 m!67203))

(declare-fun m!67205 () Bool)

(assert (=> b!70242 m!67205))

(assert (=> b!69122 d!15653))

(declare-fun d!15655 () Bool)

(assert (=> d!15655 (= (apply!73 (+!88 lt!30385 (tuple2!2093 lt!30375 (minValue!2073 newMap!16))) lt!30394) (apply!73 lt!30385 lt!30394))))

(declare-fun lt!30970 () Unit!1909)

(assert (=> d!15655 (= lt!30970 (choose!392 lt!30385 lt!30375 (minValue!2073 newMap!16) lt!30394))))

(declare-fun e!45957 () Bool)

(assert (=> d!15655 e!45957))

(declare-fun res!37602 () Bool)

(assert (=> d!15655 (=> (not res!37602) (not e!45957))))

(assert (=> d!15655 (= res!37602 (contains!710 lt!30385 lt!30394))))

(assert (=> d!15655 (= (addApplyDifferent!49 lt!30385 lt!30375 (minValue!2073 newMap!16) lt!30394) lt!30970)))

(declare-fun b!70243 () Bool)

(assert (=> b!70243 (= e!45957 (not (= lt!30394 lt!30375)))))

(assert (= (and d!15655 res!37602) b!70243))

(declare-fun m!67207 () Bool)

(assert (=> d!15655 m!67207))

(assert (=> d!15655 m!65193))

(assert (=> d!15655 m!65195))

(assert (=> d!15655 m!65193))

(declare-fun m!67209 () Bool)

(assert (=> d!15655 m!67209))

(assert (=> d!15655 m!65207))

(assert (=> b!69122 d!15655))

(declare-fun d!15657 () Bool)

(assert (=> d!15657 (= (apply!73 (+!88 lt!30392 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16))) lt!30386) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30392 (tuple2!2093 lt!30393 (zeroValue!2073 newMap!16)))) lt!30386)))))

(declare-fun bs!3037 () Bool)

(assert (= bs!3037 d!15657))

(declare-fun m!67211 () Bool)

(assert (=> bs!3037 m!67211))

(assert (=> bs!3037 m!67211))

(declare-fun m!67213 () Bool)

(assert (=> bs!3037 m!67213))

(assert (=> b!69122 d!15657))

(declare-fun d!15659 () Bool)

(assert (=> d!15659 (contains!710 (+!88 lt!30374 (tuple2!2093 lt!30390 (zeroValue!2073 newMap!16))) lt!30379)))

(declare-fun lt!30971 () Unit!1909)

(assert (=> d!15659 (= lt!30971 (choose!391 lt!30374 lt!30390 (zeroValue!2073 newMap!16) lt!30379))))

(assert (=> d!15659 (contains!710 lt!30374 lt!30379)))

(assert (=> d!15659 (= (addStillContains!49 lt!30374 lt!30390 (zeroValue!2073 newMap!16) lt!30379) lt!30971)))

(declare-fun bs!3038 () Bool)

(assert (= bs!3038 d!15659))

(assert (=> bs!3038 m!65181))

(assert (=> bs!3038 m!65181))

(assert (=> bs!3038 m!65191))

(declare-fun m!67215 () Bool)

(assert (=> bs!3038 m!67215))

(declare-fun m!67217 () Bool)

(assert (=> bs!3038 m!67217))

(assert (=> b!69122 d!15659))

(declare-fun d!15661 () Bool)

(assert (=> d!15661 (= (apply!73 (+!88 lt!30389 (tuple2!2093 lt!30381 (minValue!2073 newMap!16))) lt!30373) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30389 (tuple2!2093 lt!30381 (minValue!2073 newMap!16)))) lt!30373)))))

(declare-fun bs!3039 () Bool)

(assert (= bs!3039 d!15661))

(declare-fun m!67219 () Bool)

(assert (=> bs!3039 m!67219))

(assert (=> bs!3039 m!67219))

(declare-fun m!67221 () Bool)

(assert (=> bs!3039 m!67221))

(assert (=> b!69122 d!15661))

(assert (=> b!69225 d!15173))

(declare-fun d!15663 () Bool)

(declare-fun e!45959 () Bool)

(assert (=> d!15663 e!45959))

(declare-fun res!37603 () Bool)

(assert (=> d!15663 (=> res!37603 e!45959)))

(declare-fun lt!30975 () Bool)

(assert (=> d!15663 (= res!37603 (not lt!30975))))

(declare-fun lt!30974 () Bool)

(assert (=> d!15663 (= lt!30975 lt!30974)))

(declare-fun lt!30972 () Unit!1909)

(declare-fun e!45958 () Unit!1909)

(assert (=> d!15663 (= lt!30972 e!45958)))

(declare-fun c!10158 () Bool)

(assert (=> d!15663 (= c!10158 lt!30974)))

(assert (=> d!15663 (= lt!30974 (containsKey!135 (toList!708 lt!30343) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15663 (= (contains!710 lt!30343 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30975)))

(declare-fun b!70244 () Bool)

(declare-fun lt!30973 () Unit!1909)

(assert (=> b!70244 (= e!45958 lt!30973)))

(assert (=> b!70244 (= lt!30973 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30343) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70244 (isDefined!84 (getValueByKey!132 (toList!708 lt!30343) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70245 () Bool)

(declare-fun Unit!1977 () Unit!1909)

(assert (=> b!70245 (= e!45958 Unit!1977)))

(declare-fun b!70246 () Bool)

(assert (=> b!70246 (= e!45959 (isDefined!84 (getValueByKey!132 (toList!708 lt!30343) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15663 c!10158) b!70244))

(assert (= (and d!15663 (not c!10158)) b!70245))

(assert (= (and d!15663 (not res!37603)) b!70246))

(declare-fun m!67223 () Bool)

(assert (=> d!15663 m!67223))

(declare-fun m!67225 () Bool)

(assert (=> b!70244 m!67225))

(declare-fun m!67227 () Bool)

(assert (=> b!70244 m!67227))

(assert (=> b!70244 m!67227))

(declare-fun m!67229 () Bool)

(assert (=> b!70244 m!67229))

(assert (=> b!70246 m!67227))

(assert (=> b!70246 m!67227))

(assert (=> b!70246 m!67229))

(assert (=> b!69074 d!15663))

(declare-fun d!15665 () Bool)

(declare-fun e!45961 () Bool)

(assert (=> d!15665 e!45961))

(declare-fun res!37604 () Bool)

(assert (=> d!15665 (=> res!37604 e!45961)))

(declare-fun lt!30979 () Bool)

(assert (=> d!15665 (= res!37604 (not lt!30979))))

(declare-fun lt!30978 () Bool)

(assert (=> d!15665 (= lt!30979 lt!30978)))

(declare-fun lt!30976 () Unit!1909)

(declare-fun e!45960 () Unit!1909)

(assert (=> d!15665 (= lt!30976 e!45960)))

(declare-fun c!10159 () Bool)

(assert (=> d!15665 (= c!10159 lt!30978)))

(assert (=> d!15665 (= lt!30978 (containsKey!135 (toList!708 lt!30420) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15665 (= (contains!710 lt!30420 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30979)))

(declare-fun b!70247 () Bool)

(declare-fun lt!30977 () Unit!1909)

(assert (=> b!70247 (= e!45960 lt!30977)))

(assert (=> b!70247 (= lt!30977 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30420) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!70247 (isDefined!84 (getValueByKey!132 (toList!708 lt!30420) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70248 () Bool)

(declare-fun Unit!1978 () Unit!1909)

(assert (=> b!70248 (= e!45960 Unit!1978)))

(declare-fun b!70249 () Bool)

(assert (=> b!70249 (= e!45961 (isDefined!84 (getValueByKey!132 (toList!708 lt!30420) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15665 c!10159) b!70247))

(assert (= (and d!15665 (not c!10159)) b!70248))

(assert (= (and d!15665 (not res!37604)) b!70249))

(declare-fun m!67231 () Bool)

(assert (=> d!15665 m!67231))

(declare-fun m!67233 () Bool)

(assert (=> b!70247 m!67233))

(assert (=> b!70247 m!65315))

(assert (=> b!70247 m!65315))

(declare-fun m!67235 () Bool)

(assert (=> b!70247 m!67235))

(assert (=> b!70249 m!65315))

(assert (=> b!70249 m!65315))

(assert (=> b!70249 m!67235))

(assert (=> d!14997 d!15665))

(declare-fun b!70253 () Bool)

(declare-fun e!45963 () Option!138)

(assert (=> b!70253 (= e!45963 None!136)))

(declare-fun b!70252 () Bool)

(assert (=> b!70252 (= e!45963 (getValueByKey!132 (t!4954 lt!30418) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70250 () Bool)

(declare-fun e!45962 () Option!138)

(assert (=> b!70250 (= e!45962 (Some!137 (_2!1057 (h!2040 lt!30418))))))

(declare-fun d!15667 () Bool)

(declare-fun c!10160 () Bool)

(assert (=> d!15667 (= c!10160 (and ((_ is Cons!1455) lt!30418) (= (_1!1057 (h!2040 lt!30418)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15667 (= (getValueByKey!132 lt!30418 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45962)))

(declare-fun b!70251 () Bool)

(assert (=> b!70251 (= e!45962 e!45963)))

(declare-fun c!10161 () Bool)

(assert (=> b!70251 (= c!10161 (and ((_ is Cons!1455) lt!30418) (not (= (_1!1057 (h!2040 lt!30418)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15667 c!10160) b!70250))

(assert (= (and d!15667 (not c!10160)) b!70251))

(assert (= (and b!70251 c!10161) b!70252))

(assert (= (and b!70251 (not c!10161)) b!70253))

(declare-fun m!67237 () Bool)

(assert (=> b!70252 m!67237))

(assert (=> d!14997 d!15667))

(declare-fun d!15669 () Bool)

(assert (=> d!15669 (= (getValueByKey!132 lt!30418 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30980 () Unit!1909)

(assert (=> d!15669 (= lt!30980 (choose!394 lt!30418 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45964 () Bool)

(assert (=> d!15669 e!45964))

(declare-fun res!37605 () Bool)

(assert (=> d!15669 (=> (not res!37605) (not e!45964))))

(assert (=> d!15669 (= res!37605 (isStrictlySorted!277 lt!30418))))

(assert (=> d!15669 (= (lemmaContainsTupThenGetReturnValue!49 lt!30418 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30980)))

(declare-fun b!70254 () Bool)

(declare-fun res!37606 () Bool)

(assert (=> b!70254 (=> (not res!37606) (not e!45964))))

(assert (=> b!70254 (= res!37606 (containsKey!135 lt!30418 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70255 () Bool)

(assert (=> b!70255 (= e!45964 (contains!713 lt!30418 (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15669 res!37605) b!70254))

(assert (= (and b!70254 res!37606) b!70255))

(assert (=> d!15669 m!65309))

(declare-fun m!67239 () Bool)

(assert (=> d!15669 m!67239))

(declare-fun m!67241 () Bool)

(assert (=> d!15669 m!67241))

(declare-fun m!67243 () Bool)

(assert (=> b!70254 m!67243))

(declare-fun m!67245 () Bool)

(assert (=> b!70255 m!67245))

(assert (=> d!14997 d!15669))

(declare-fun b!70256 () Bool)

(declare-fun e!45967 () List!1459)

(declare-fun call!6021 () List!1459)

(assert (=> b!70256 (= e!45967 call!6021)))

(declare-fun b!70257 () Bool)

(declare-fun e!45965 () List!1459)

(assert (=> b!70257 (= e!45965 (insertStrictlySorted!52 (t!4954 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70258 () Bool)

(declare-fun e!45968 () List!1459)

(declare-fun call!6020 () List!1459)

(assert (=> b!70258 (= e!45968 call!6020)))

(declare-fun b!70259 () Bool)

(assert (=> b!70259 (= e!45968 call!6020)))

(declare-fun c!10165 () Bool)

(declare-fun b!70260 () Bool)

(assert (=> b!70260 (= c!10165 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) (bvsgt (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!70260 (= e!45967 e!45968)))

(declare-fun b!70261 () Bool)

(declare-fun res!37608 () Bool)

(declare-fun e!45966 () Bool)

(assert (=> b!70261 (=> (not res!37608) (not e!45966))))

(declare-fun lt!30981 () List!1459)

(assert (=> b!70261 (= res!37608 (containsKey!135 lt!30981 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun call!6022 () List!1459)

(declare-fun bm!6018 () Bool)

(declare-fun c!10162 () Bool)

(assert (=> bm!6018 (= call!6022 ($colon$colon!63 e!45965 (ite c!10162 (h!2040 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!10163 () Bool)

(assert (=> bm!6018 (= c!10163 c!10162)))

(declare-fun b!70262 () Bool)

(declare-fun e!45969 () List!1459)

(assert (=> b!70262 (= e!45969 e!45967)))

(declare-fun c!10164 () Bool)

(assert (=> b!70262 (= c!10164 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70263 () Bool)

(assert (=> b!70263 (= e!45965 (ite c!10164 (t!4954 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) (ite c!10165 (Cons!1455 (h!2040 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) (t!4954 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))) Nil!1456)))))

(declare-fun b!70264 () Bool)

(assert (=> b!70264 (= e!45969 call!6022)))

(declare-fun bm!6017 () Bool)

(assert (=> bm!6017 (= call!6021 call!6022)))

(declare-fun d!15671 () Bool)

(assert (=> d!15671 e!45966))

(declare-fun res!37607 () Bool)

(assert (=> d!15671 (=> (not res!37607) (not e!45966))))

(assert (=> d!15671 (= res!37607 (isStrictlySorted!277 lt!30981))))

(assert (=> d!15671 (= lt!30981 e!45969)))

(assert (=> d!15671 (= c!10162 (and ((_ is Cons!1455) (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))) (bvslt (_1!1057 (h!2040 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15671 (isStrictlySorted!277 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15671 (= (insertStrictlySorted!52 (toList!708 (+!88 lt!29844 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30981)))

(declare-fun b!70265 () Bool)

(assert (=> b!70265 (= e!45966 (contains!713 lt!30981 (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun bm!6019 () Bool)

(assert (=> bm!6019 (= call!6020 call!6021)))

(assert (= (and d!15671 c!10162) b!70264))

(assert (= (and d!15671 (not c!10162)) b!70262))

(assert (= (and b!70262 c!10164) b!70256))

(assert (= (and b!70262 (not c!10164)) b!70260))

(assert (= (and b!70260 c!10165) b!70259))

(assert (= (and b!70260 (not c!10165)) b!70258))

(assert (= (or b!70259 b!70258) bm!6019))

(assert (= (or b!70256 bm!6019) bm!6017))

(assert (= (or b!70264 bm!6017) bm!6018))

(assert (= (and bm!6018 c!10163) b!70257))

(assert (= (and bm!6018 (not c!10163)) b!70263))

(assert (= (and d!15671 res!37607) b!70261))

(assert (= (and b!70261 res!37608) b!70265))

(declare-fun m!67247 () Bool)

(assert (=> d!15671 m!67247))

(declare-fun m!67249 () Bool)

(assert (=> d!15671 m!67249))

(declare-fun m!67251 () Bool)

(assert (=> bm!6018 m!67251))

(declare-fun m!67253 () Bool)

(assert (=> b!70265 m!67253))

(declare-fun m!67255 () Bool)

(assert (=> b!70261 m!67255))

(declare-fun m!67257 () Bool)

(assert (=> b!70257 m!67257))

(assert (=> d!14997 d!15671))

(assert (=> d!14963 d!15065))

(declare-fun d!15673 () Bool)

(declare-fun lt!30982 () Bool)

(assert (=> d!15673 (= lt!30982 (select (content!74 lt!30130) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun e!45970 () Bool)

(assert (=> d!15673 (= lt!30982 e!45970)))

(declare-fun res!37609 () Bool)

(assert (=> d!15673 (=> (not res!37609) (not e!45970))))

(assert (=> d!15673 (= res!37609 ((_ is Cons!1455) lt!30130))))

(assert (=> d!15673 (= (contains!713 lt!30130 (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))) lt!30982)))

(declare-fun b!70266 () Bool)

(declare-fun e!45971 () Bool)

(assert (=> b!70266 (= e!45970 e!45971)))

(declare-fun res!37610 () Bool)

(assert (=> b!70266 (=> res!37610 e!45971)))

(assert (=> b!70266 (= res!37610 (= (h!2040 lt!30130) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun b!70267 () Bool)

(assert (=> b!70267 (= e!45971 (contains!713 (t!4954 lt!30130) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(assert (= (and d!15673 res!37609) b!70266))

(assert (= (and b!70266 (not res!37610)) b!70267))

(declare-fun m!67259 () Bool)

(assert (=> d!15673 m!67259))

(declare-fun m!67261 () Bool)

(assert (=> d!15673 m!67261))

(declare-fun m!67263 () Bool)

(assert (=> b!70267 m!67263))

(assert (=> b!69283 d!15673))

(declare-fun b!70271 () Bool)

(declare-fun e!45973 () Option!138)

(assert (=> b!70271 (= e!45973 None!136)))

(declare-fun b!70270 () Bool)

(assert (=> b!70270 (= e!45973 (getValueByKey!132 (t!4954 (toList!708 lt!30428)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70268 () Bool)

(declare-fun e!45972 () Option!138)

(assert (=> b!70268 (= e!45972 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30428)))))))

(declare-fun c!10166 () Bool)

(declare-fun d!15675 () Bool)

(assert (=> d!15675 (= c!10166 (and ((_ is Cons!1455) (toList!708 lt!30428)) (= (_1!1057 (h!2040 (toList!708 lt!30428))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15675 (= (getValueByKey!132 (toList!708 lt!30428) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) e!45972)))

(declare-fun b!70269 () Bool)

(assert (=> b!70269 (= e!45972 e!45973)))

(declare-fun c!10167 () Bool)

(assert (=> b!70269 (= c!10167 (and ((_ is Cons!1455) (toList!708 lt!30428)) (not (= (_1!1057 (h!2040 (toList!708 lt!30428))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (= (and d!15675 c!10166) b!70268))

(assert (= (and d!15675 (not c!10166)) b!70269))

(assert (= (and b!70269 c!10167) b!70270))

(assert (= (and b!70269 (not c!10167)) b!70271))

(declare-fun m!67265 () Bool)

(assert (=> b!70270 m!67265))

(assert (=> b!69193 d!15675))

(declare-fun d!15677 () Bool)

(declare-fun res!37611 () Bool)

(declare-fun e!45974 () Bool)

(assert (=> d!15677 (=> res!37611 e!45974)))

(assert (=> d!15677 (= res!37611 (and ((_ is Cons!1455) (toList!708 lt!30109)) (= (_1!1057 (h!2040 (toList!708 lt!30109))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15677 (= (containsKey!135 (toList!708 lt!30109) #b0000000000000000000000000000000000000000000000000000000000000000) e!45974)))

(declare-fun b!70272 () Bool)

(declare-fun e!45975 () Bool)

(assert (=> b!70272 (= e!45974 e!45975)))

(declare-fun res!37612 () Bool)

(assert (=> b!70272 (=> (not res!37612) (not e!45975))))

(assert (=> b!70272 (= res!37612 (and (or (not ((_ is Cons!1455) (toList!708 lt!30109))) (bvsle (_1!1057 (h!2040 (toList!708 lt!30109))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1455) (toList!708 lt!30109)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30109))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70273 () Bool)

(assert (=> b!70273 (= e!45975 (containsKey!135 (t!4954 (toList!708 lt!30109)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15677 (not res!37611)) b!70272))

(assert (= (and b!70272 res!37612) b!70273))

(declare-fun m!67267 () Bool)

(assert (=> b!70273 m!67267))

(assert (=> d!14917 d!15677))

(declare-fun d!15679 () Bool)

(declare-fun e!45977 () Bool)

(assert (=> d!15679 e!45977))

(declare-fun res!37613 () Bool)

(assert (=> d!15679 (=> res!37613 e!45977)))

(declare-fun lt!30986 () Bool)

(assert (=> d!15679 (= res!37613 (not lt!30986))))

(declare-fun lt!30985 () Bool)

(assert (=> d!15679 (= lt!30986 lt!30985)))

(declare-fun lt!30983 () Unit!1909)

(declare-fun e!45976 () Unit!1909)

(assert (=> d!15679 (= lt!30983 e!45976)))

(declare-fun c!10168 () Bool)

(assert (=> d!15679 (= c!10168 lt!30985)))

(assert (=> d!15679 (= lt!30985 (containsKey!135 (toList!708 lt!30387) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15679 (= (contains!710 lt!30387 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30986)))

(declare-fun b!70274 () Bool)

(declare-fun lt!30984 () Unit!1909)

(assert (=> b!70274 (= e!45976 lt!30984)))

(assert (=> b!70274 (= lt!30984 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30387) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70274 (isDefined!84 (getValueByKey!132 (toList!708 lt!30387) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70275 () Bool)

(declare-fun Unit!1979 () Unit!1909)

(assert (=> b!70275 (= e!45976 Unit!1979)))

(declare-fun b!70276 () Bool)

(assert (=> b!70276 (= e!45977 (isDefined!84 (getValueByKey!132 (toList!708 lt!30387) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15679 c!10168) b!70274))

(assert (= (and d!15679 (not c!10168)) b!70275))

(assert (= (and d!15679 (not res!37613)) b!70276))

(declare-fun m!67269 () Bool)

(assert (=> d!15679 m!67269))

(declare-fun m!67271 () Bool)

(assert (=> b!70274 m!67271))

(declare-fun m!67273 () Bool)

(assert (=> b!70274 m!67273))

(assert (=> b!70274 m!67273))

(declare-fun m!67275 () Bool)

(assert (=> b!70274 m!67275))

(assert (=> b!70276 m!67273))

(assert (=> b!70276 m!67273))

(assert (=> b!70276 m!67275))

(assert (=> bm!5885 d!15679))

(declare-fun d!15681 () Bool)

(assert (=> d!15681 (= (get!1134 (getValueByKey!132 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2500 (getValueByKey!132 (toList!708 lt!30085) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14913 d!15681))

(assert (=> d!14913 d!15063))

(declare-fun d!15683 () Bool)

(assert (=> d!15683 (= (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69082 d!15683))

(assert (=> bm!5898 d!15207))

(declare-fun b!70280 () Bool)

(declare-fun e!45979 () Option!138)

(assert (=> b!70280 (= e!45979 None!136)))

(declare-fun b!70279 () Bool)

(assert (=> b!70279 (= e!45979 (getValueByKey!132 (t!4954 (toList!708 lt!30420)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70277 () Bool)

(declare-fun e!45978 () Option!138)

(assert (=> b!70277 (= e!45978 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30420)))))))

(declare-fun d!15685 () Bool)

(declare-fun c!10169 () Bool)

(assert (=> d!15685 (= c!10169 (and ((_ is Cons!1455) (toList!708 lt!30420)) (= (_1!1057 (h!2040 (toList!708 lt!30420))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15685 (= (getValueByKey!132 (toList!708 lt!30420) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!45978)))

(declare-fun b!70278 () Bool)

(assert (=> b!70278 (= e!45978 e!45979)))

(declare-fun c!10170 () Bool)

(assert (=> b!70278 (= c!10170 (and ((_ is Cons!1455) (toList!708 lt!30420)) (not (= (_1!1057 (h!2040 (toList!708 lt!30420))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15685 c!10169) b!70277))

(assert (= (and d!15685 (not c!10169)) b!70278))

(assert (= (and b!70278 c!10170) b!70279))

(assert (= (and b!70278 (not c!10170)) b!70280))

(declare-fun m!67277 () Bool)

(assert (=> b!70279 m!67277))

(assert (=> b!69189 d!15685))

(declare-fun d!15687 () Bool)

(declare-fun lt!30987 () Bool)

(assert (=> d!15687 (= lt!30987 (select (content!74 (toList!708 lt!30397)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(declare-fun e!45980 () Bool)

(assert (=> d!15687 (= lt!30987 e!45980)))

(declare-fun res!37614 () Bool)

(assert (=> d!15687 (=> (not res!37614) (not e!45980))))

(assert (=> d!15687 (= res!37614 ((_ is Cons!1455) (toList!708 lt!30397)))))

(assert (=> d!15687 (= (contains!713 (toList!708 lt!30397) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) lt!30987)))

(declare-fun b!70281 () Bool)

(declare-fun e!45981 () Bool)

(assert (=> b!70281 (= e!45980 e!45981)))

(declare-fun res!37615 () Bool)

(assert (=> b!70281 (=> res!37615 e!45981)))

(assert (=> b!70281 (= res!37615 (= (h!2040 (toList!708 lt!30397)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(declare-fun b!70282 () Bool)

(assert (=> b!70282 (= e!45981 (contains!713 (t!4954 (toList!708 lt!30397)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(assert (= (and d!15687 res!37614) b!70281))

(assert (= (and b!70281 (not res!37615)) b!70282))

(declare-fun m!67279 () Bool)

(assert (=> d!15687 m!67279))

(declare-fun m!67281 () Bool)

(assert (=> d!15687 m!67281))

(declare-fun m!67283 () Bool)

(assert (=> b!70282 m!67283))

(assert (=> b!69143 d!15687))

(declare-fun d!15689 () Bool)

(declare-fun lt!30988 () Bool)

(assert (=> d!15689 (= lt!30988 (select (content!74 (toList!708 lt!30188)) (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45982 () Bool)

(assert (=> d!15689 (= lt!30988 e!45982)))

(declare-fun res!37616 () Bool)

(assert (=> d!15689 (=> (not res!37616) (not e!45982))))

(assert (=> d!15689 (= res!37616 ((_ is Cons!1455) (toList!708 lt!30188)))))

(assert (=> d!15689 (= (contains!713 (toList!708 lt!30188) (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!30988)))

(declare-fun b!70283 () Bool)

(declare-fun e!45983 () Bool)

(assert (=> b!70283 (= e!45982 e!45983)))

(declare-fun res!37617 () Bool)

(assert (=> b!70283 (=> res!37617 e!45983)))

(assert (=> b!70283 (= res!37617 (= (h!2040 (toList!708 lt!30188)) (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70284 () Bool)

(assert (=> b!70284 (= e!45983 (contains!713 (t!4954 (toList!708 lt!30188)) (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15689 res!37616) b!70283))

(assert (= (and b!70283 (not res!37617)) b!70284))

(declare-fun m!67285 () Bool)

(assert (=> d!15689 m!67285))

(declare-fun m!67287 () Bool)

(assert (=> d!15689 m!67287))

(declare-fun m!67289 () Bool)

(assert (=> b!70284 m!67289))

(assert (=> b!68890 d!15689))

(assert (=> b!68994 d!15447))

(declare-fun d!15691 () Bool)

(declare-fun e!45984 () Bool)

(assert (=> d!15691 e!45984))

(declare-fun res!37618 () Bool)

(assert (=> d!15691 (=> (not res!37618) (not e!45984))))

(declare-fun lt!30991 () ListLongMap!1385)

(assert (=> d!15691 (= res!37618 (contains!710 lt!30991 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun lt!30989 () List!1459)

(assert (=> d!15691 (= lt!30991 (ListLongMap!1386 lt!30989))))

(declare-fun lt!30992 () Unit!1909)

(declare-fun lt!30990 () Unit!1909)

(assert (=> d!15691 (= lt!30992 lt!30990)))

(assert (=> d!15691 (= (getValueByKey!132 lt!30989 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15691 (= lt!30990 (lemmaContainsTupThenGetReturnValue!49 lt!30989 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15691 (= lt!30989 (insertStrictlySorted!52 (toList!708 (map!1146 newMap!16)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15691 (= (+!88 (map!1146 newMap!16) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) lt!30991)))

(declare-fun b!70285 () Bool)

(declare-fun res!37619 () Bool)

(assert (=> b!70285 (=> (not res!37619) (not e!45984))))

(assert (=> b!70285 (= res!37619 (= (getValueByKey!132 (toList!708 lt!30991) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!70286 () Bool)

(assert (=> b!70286 (= e!45984 (contains!713 (toList!708 lt!30991) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))

(assert (= (and d!15691 res!37618) b!70285))

(assert (= (and b!70285 res!37619) b!70286))

(declare-fun m!67291 () Bool)

(assert (=> d!15691 m!67291))

(declare-fun m!67293 () Bool)

(assert (=> d!15691 m!67293))

(declare-fun m!67295 () Bool)

(assert (=> d!15691 m!67295))

(declare-fun m!67297 () Bool)

(assert (=> d!15691 m!67297))

(declare-fun m!67299 () Bool)

(assert (=> b!70285 m!67299))

(declare-fun m!67301 () Bool)

(assert (=> b!70286 m!67301))

(assert (=> b!68994 d!15691))

(assert (=> b!68994 d!14833))

(declare-fun d!15693 () Bool)

(assert (=> d!15693 (= (get!1134 (getValueByKey!132 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2500 (getValueByKey!132 (toList!708 lt!30109) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15057 d!15693))

(assert (=> d!15057 d!15171))

(declare-fun d!15695 () Bool)

(assert (=> d!15695 (= (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30084)) (v!2500 (getValueByKey!132 (toList!708 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30084)))))

(assert (=> d!14879 d!15695))

(declare-fun b!70290 () Bool)

(declare-fun e!45986 () Option!138)

(assert (=> b!70290 (= e!45986 None!136)))

(declare-fun b!70289 () Bool)

(assert (=> b!70289 (= e!45986 (getValueByKey!132 (t!4954 (toList!708 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) lt!30084))))

(declare-fun e!45985 () Option!138)

(declare-fun b!70287 () Bool)

(assert (=> b!70287 (= e!45985 (Some!137 (_2!1057 (h!2040 (toList!708 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun d!15697 () Bool)

(declare-fun c!10171 () Bool)

(assert (=> d!15697 (= c!10171 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30084)))))

(assert (=> d!15697 (= (getValueByKey!132 (toList!708 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!30084) e!45985)))

(declare-fun b!70288 () Bool)

(assert (=> b!70288 (= e!45985 e!45986)))

(declare-fun c!10172 () Bool)

(assert (=> b!70288 (= c!10172 (and ((_ is Cons!1455) (toList!708 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))) (not (= (_1!1057 (h!2040 (toList!708 (+!88 lt!30090 (tuple2!2093 lt!30091 (zeroValue!2073 (v!2494 (underlying!253 thiss!992)))))))) lt!30084))))))

(assert (= (and d!15697 c!10171) b!70287))

(assert (= (and d!15697 (not c!10171)) b!70288))

(assert (= (and b!70288 c!10172) b!70289))

(assert (= (and b!70288 (not c!10172)) b!70290))

(declare-fun m!67303 () Bool)

(assert (=> b!70289 m!67303))

(assert (=> d!14879 d!15697))

(declare-fun d!15699 () Bool)

(assert (=> d!15699 (= (apply!73 lt!30387 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1134 (getValueByKey!132 (toList!708 lt!30387) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3040 () Bool)

(assert (= bs!3040 d!15699))

(assert (=> bs!3040 m!66985))

(assert (=> bs!3040 m!66985))

(declare-fun m!67305 () Bool)

(assert (=> bs!3040 m!67305))

(assert (=> b!69133 d!15699))

(declare-fun d!15701 () Bool)

(assert (=> d!15701 (= ($colon$colon!63 e!45359 (ite c!9884 (h!2040 (toList!708 lt!29844)) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846)))) (Cons!1455 (ite c!9884 (h!2040 (toList!708 lt!29844)) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))) e!45359))))

(assert (=> bm!5908 d!15701))

(declare-fun lt!30993 () Bool)

(declare-fun d!15703 () Bool)

(assert (=> d!15703 (= lt!30993 (select (content!74 (toList!708 lt!30363)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!45987 () Bool)

(assert (=> d!15703 (= lt!30993 e!45987)))

(declare-fun res!37620 () Bool)

(assert (=> d!15703 (=> (not res!37620) (not e!45987))))

(assert (=> d!15703 (= res!37620 ((_ is Cons!1455) (toList!708 lt!30363)))))

(assert (=> d!15703 (= (contains!713 (toList!708 lt!30363) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30993)))

(declare-fun b!70291 () Bool)

(declare-fun e!45988 () Bool)

(assert (=> b!70291 (= e!45987 e!45988)))

(declare-fun res!37621 () Bool)

(assert (=> b!70291 (=> res!37621 e!45988)))

(assert (=> b!70291 (= res!37621 (= (h!2040 (toList!708 lt!30363)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!70292 () Bool)

(assert (=> b!70292 (= e!45988 (contains!713 (t!4954 (toList!708 lt!30363)) (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15703 res!37620) b!70291))

(assert (= (and b!70291 (not res!37621)) b!70292))

(declare-fun m!67307 () Bool)

(assert (=> d!15703 m!67307))

(declare-fun m!67309 () Bool)

(assert (=> d!15703 m!67309))

(declare-fun m!67311 () Bool)

(assert (=> b!70292 m!67311))

(assert (=> b!69110 d!15703))

(assert (=> bm!5881 d!15583))

(declare-fun d!15705 () Bool)

(declare-fun e!45990 () Bool)

(assert (=> d!15705 e!45990))

(declare-fun res!37622 () Bool)

(assert (=> d!15705 (=> res!37622 e!45990)))

(declare-fun lt!30997 () Bool)

(assert (=> d!15705 (= res!37622 (not lt!30997))))

(declare-fun lt!30996 () Bool)

(assert (=> d!15705 (= lt!30997 lt!30996)))

(declare-fun lt!30994 () Unit!1909)

(declare-fun e!45989 () Unit!1909)

(assert (=> d!15705 (= lt!30994 e!45989)))

(declare-fun c!10173 () Bool)

(assert (=> d!15705 (= c!10173 lt!30996)))

(assert (=> d!15705 (= lt!30996 (containsKey!135 (toList!708 lt!30165) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15705 (= (contains!710 lt!30165 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30997)))

(declare-fun b!70293 () Bool)

(declare-fun lt!30995 () Unit!1909)

(assert (=> b!70293 (= e!45989 lt!30995)))

(assert (=> b!70293 (= lt!30995 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30165) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70293 (isDefined!84 (getValueByKey!132 (toList!708 lt!30165) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70294 () Bool)

(declare-fun Unit!1980 () Unit!1909)

(assert (=> b!70294 (= e!45989 Unit!1980)))

(declare-fun b!70295 () Bool)

(assert (=> b!70295 (= e!45990 (isDefined!84 (getValueByKey!132 (toList!708 lt!30165) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15705 c!10173) b!70293))

(assert (= (and d!15705 (not c!10173)) b!70294))

(assert (= (and d!15705 (not res!37622)) b!70295))

(declare-fun m!67313 () Bool)

(assert (=> d!15705 m!67313))

(declare-fun m!67315 () Bool)

(assert (=> b!70293 m!67315))

(assert (=> b!70293 m!65581))

(assert (=> b!70293 m!65581))

(declare-fun m!67317 () Bool)

(assert (=> b!70293 m!67317))

(assert (=> b!70295 m!65581))

(assert (=> b!70295 m!65581))

(assert (=> b!70295 m!67317))

(assert (=> bm!5847 d!15705))

(declare-fun d!15707 () Bool)

(assert (=> d!15707 (contains!710 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))

(declare-fun lt!31000 () Unit!1909)

(declare-fun choose!401 (array!3837 array!3839 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) (_ BitVec 32) Int) Unit!1909)

(assert (=> d!15707 (= lt!31000 (choose!401 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15707 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15707 (= (lemmaArrayContainsKeyThenInListMap!11 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!31000)))

(declare-fun bs!3041 () Bool)

(assert (= bs!3041 d!15707))

(assert (=> bs!3041 m!64525))

(assert (=> bs!3041 m!64525))

(assert (=> bs!3041 m!64329))

(assert (=> bs!3041 m!64549))

(assert (=> bs!3041 m!64329))

(declare-fun m!67319 () Bool)

(assert (=> bs!3041 m!67319))

(assert (=> bs!3041 m!64725))

(assert (=> b!68981 d!15707))

(assert (=> b!68981 d!14859))

(assert (=> b!68981 d!14861))

(declare-fun d!15709 () Bool)

(assert (=> d!15709 (= (apply!73 lt!30387 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1134 (getValueByKey!132 (toList!708 lt!30387) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3042 () Bool)

(assert (= bs!3042 d!15709))

(assert (=> bs!3042 m!67273))

(assert (=> bs!3042 m!67273))

(declare-fun m!67321 () Bool)

(assert (=> bs!3042 m!67321))

(assert (=> b!69121 d!15709))

(declare-fun b!70296 () Bool)

(declare-fun e!45991 () (_ BitVec 32))

(declare-fun call!6023 () (_ BitVec 32))

(assert (=> b!70296 (= e!45991 call!6023)))

(declare-fun b!70297 () Bool)

(assert (=> b!70297 (= e!45991 (bvadd #b00000000000000000000000000000001 call!6023))))

(declare-fun d!15711 () Bool)

(declare-fun lt!31001 () (_ BitVec 32))

(assert (=> d!15711 (and (bvsge lt!31001 #b00000000000000000000000000000000) (bvsle lt!31001 (bvsub (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!45992 () (_ BitVec 32))

(assert (=> d!15711 (= lt!31001 e!45992)))

(declare-fun c!10174 () Bool)

(assert (=> d!15711 (= c!10174 (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15711 (and (bvsle #b00000000000000000000000000000000 (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15711 (= (arrayCountValidKeys!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))) lt!31001)))

(declare-fun b!70298 () Bool)

(assert (=> b!70298 (= e!45992 e!45991)))

(declare-fun c!10175 () Bool)

(assert (=> b!70298 (= c!10175 (validKeyInArray!0 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6020 () Bool)

(assert (=> bm!6020 (= call!6023 (arrayCountValidKeys!0 (_keys!3811 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2068 (_keys!3811 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70299 () Bool)

(assert (=> b!70299 (= e!45992 #b00000000000000000000000000000000)))

(assert (= (and d!15711 c!10174) b!70299))

(assert (= (and d!15711 (not c!10174)) b!70298))

(assert (= (and b!70298 c!10175) b!70297))

(assert (= (and b!70298 (not c!10175)) b!70296))

(assert (= (or b!70297 b!70296) bm!6020))

(assert (=> b!70298 m!66929))

(assert (=> b!70298 m!66929))

(assert (=> b!70298 m!66931))

(declare-fun m!67323 () Bool)

(assert (=> bm!6020 m!67323))

(assert (=> b!69269 d!15711))

(declare-fun b!70303 () Bool)

(declare-fun e!45994 () Option!138)

(assert (=> b!70303 (= e!45994 None!136)))

(declare-fun b!70302 () Bool)

(assert (=> b!70302 (= e!45994 (getValueByKey!132 (t!4954 (t!4954 (toList!708 lt!29848))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!70300 () Bool)

(declare-fun e!45993 () Option!138)

(assert (=> b!70300 (= e!45993 (Some!137 (_2!1057 (h!2040 (t!4954 (toList!708 lt!29848))))))))

(declare-fun c!10176 () Bool)

(declare-fun d!15713 () Bool)

(assert (=> d!15713 (= c!10176 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!29848))) (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!29848)))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15713 (= (getValueByKey!132 (t!4954 (toList!708 lt!29848)) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45993)))

(declare-fun b!70301 () Bool)

(assert (=> b!70301 (= e!45993 e!45994)))

(declare-fun c!10177 () Bool)

(assert (=> b!70301 (= c!10177 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!29848))) (not (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!29848)))) (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(assert (= (and d!15713 c!10176) b!70300))

(assert (= (and d!15713 (not c!10176)) b!70301))

(assert (= (and b!70301 c!10177) b!70302))

(assert (= (and b!70301 (not c!10177)) b!70303))

(assert (=> b!70302 m!64329))

(declare-fun m!67325 () Bool)

(assert (=> b!70302 m!67325))

(assert (=> b!69100 d!15713))

(assert (=> b!69277 d!15161))

(assert (=> b!69277 d!14905))

(declare-fun d!15715 () Bool)

(declare-fun e!45996 () Bool)

(assert (=> d!15715 e!45996))

(declare-fun res!37623 () Bool)

(assert (=> d!15715 (=> res!37623 e!45996)))

(declare-fun lt!31005 () Bool)

(assert (=> d!15715 (= res!37623 (not lt!31005))))

(declare-fun lt!31004 () Bool)

(assert (=> d!15715 (= lt!31005 lt!31004)))

(declare-fun lt!31002 () Unit!1909)

(declare-fun e!45995 () Unit!1909)

(assert (=> d!15715 (= lt!31002 e!45995)))

(declare-fun c!10178 () Bool)

(assert (=> d!15715 (= c!10178 lt!31004)))

(assert (=> d!15715 (= lt!31004 (containsKey!135 (toList!708 lt!30397) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> d!15715 (= (contains!710 lt!30397 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!31005)))

(declare-fun b!70304 () Bool)

(declare-fun lt!31003 () Unit!1909)

(assert (=> b!70304 (= e!45995 lt!31003)))

(assert (=> b!70304 (= lt!31003 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30397) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(assert (=> b!70304 (isDefined!84 (getValueByKey!132 (toList!708 lt!30397) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70305 () Bool)

(declare-fun Unit!1981 () Unit!1909)

(assert (=> b!70305 (= e!45995 Unit!1981)))

(declare-fun b!70306 () Bool)

(assert (=> b!70306 (= e!45996 (isDefined!84 (getValueByKey!132 (toList!708 lt!30397) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (= (and d!15715 c!10178) b!70304))

(assert (= (and d!15715 (not c!10178)) b!70305))

(assert (= (and d!15715 (not res!37623)) b!70306))

(declare-fun m!67327 () Bool)

(assert (=> d!15715 m!67327))

(declare-fun m!67329 () Bool)

(assert (=> b!70304 m!67329))

(assert (=> b!70304 m!65225))

(assert (=> b!70304 m!65225))

(declare-fun m!67331 () Bool)

(assert (=> b!70304 m!67331))

(assert (=> b!70306 m!65225))

(assert (=> b!70306 m!65225))

(assert (=> b!70306 m!67331))

(assert (=> d!14967 d!15715))

(declare-fun b!70310 () Bool)

(declare-fun e!45998 () Option!138)

(assert (=> b!70310 (= e!45998 None!136)))

(declare-fun b!70309 () Bool)

(assert (=> b!70309 (= e!45998 (getValueByKey!132 (t!4954 lt!30395) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70307 () Bool)

(declare-fun e!45997 () Option!138)

(assert (=> b!70307 (= e!45997 (Some!137 (_2!1057 (h!2040 lt!30395))))))

(declare-fun d!15717 () Bool)

(declare-fun c!10179 () Bool)

(assert (=> d!15717 (= c!10179 (and ((_ is Cons!1455) lt!30395) (= (_1!1057 (h!2040 lt!30395)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15717 (= (getValueByKey!132 lt!30395 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) e!45997)))

(declare-fun b!70308 () Bool)

(assert (=> b!70308 (= e!45997 e!45998)))

(declare-fun c!10180 () Bool)

(assert (=> b!70308 (= c!10180 (and ((_ is Cons!1455) lt!30395) (not (= (_1!1057 (h!2040 lt!30395)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (= (and d!15717 c!10179) b!70307))

(assert (= (and d!15717 (not c!10179)) b!70308))

(assert (= (and b!70308 c!10180) b!70309))

(assert (= (and b!70308 (not c!10180)) b!70310))

(declare-fun m!67333 () Bool)

(assert (=> b!70309 m!67333))

(assert (=> d!14967 d!15717))

(declare-fun d!15719 () Bool)

(assert (=> d!15719 (= (getValueByKey!132 lt!30395 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun lt!31006 () Unit!1909)

(assert (=> d!15719 (= lt!31006 (choose!394 lt!30395 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun e!45999 () Bool)

(assert (=> d!15719 e!45999))

(declare-fun res!37624 () Bool)

(assert (=> d!15719 (=> (not res!37624) (not e!45999))))

(assert (=> d!15719 (= res!37624 (isStrictlySorted!277 lt!30395))))

(assert (=> d!15719 (= (lemmaContainsTupThenGetReturnValue!49 lt!30395 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!31006)))

(declare-fun b!70311 () Bool)

(declare-fun res!37625 () Bool)

(assert (=> b!70311 (=> (not res!37625) (not e!45999))))

(assert (=> b!70311 (= res!37625 (containsKey!135 lt!30395 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70312 () Bool)

(assert (=> b!70312 (= e!45999 (contains!713 lt!30395 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (= (and d!15719 res!37624) b!70311))

(assert (= (and b!70311 res!37625) b!70312))

(assert (=> d!15719 m!65219))

(declare-fun m!67335 () Bool)

(assert (=> d!15719 m!67335))

(declare-fun m!67337 () Bool)

(assert (=> d!15719 m!67337))

(declare-fun m!67339 () Bool)

(assert (=> b!70311 m!67339))

(declare-fun m!67341 () Bool)

(assert (=> b!70312 m!67341))

(assert (=> d!14967 d!15719))

(declare-fun b!70313 () Bool)

(declare-fun e!46002 () List!1459)

(declare-fun call!6025 () List!1459)

(assert (=> b!70313 (= e!46002 call!6025)))

(declare-fun b!70314 () Bool)

(declare-fun e!46000 () List!1459)

(assert (=> b!70314 (= e!46000 (insertStrictlySorted!52 (t!4954 (toList!708 call!5803)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70315 () Bool)

(declare-fun e!46003 () List!1459)

(declare-fun call!6024 () List!1459)

(assert (=> b!70315 (= e!46003 call!6024)))

(declare-fun b!70316 () Bool)

(assert (=> b!70316 (= e!46003 call!6024)))

(declare-fun b!70317 () Bool)

(declare-fun c!10184 () Bool)

(assert (=> b!70317 (= c!10184 (and ((_ is Cons!1455) (toList!708 call!5803)) (bvsgt (_1!1057 (h!2040 (toList!708 call!5803))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> b!70317 (= e!46002 e!46003)))

(declare-fun b!70318 () Bool)

(declare-fun res!37627 () Bool)

(declare-fun e!46001 () Bool)

(assert (=> b!70318 (=> (not res!37627) (not e!46001))))

(declare-fun lt!31007 () List!1459)

(assert (=> b!70318 (= res!37627 (containsKey!135 lt!31007 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun call!6026 () List!1459)

(declare-fun c!10181 () Bool)

(declare-fun bm!6022 () Bool)

(assert (=> bm!6022 (= call!6026 ($colon$colon!63 e!46000 (ite c!10181 (h!2040 (toList!708 call!5803)) (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(declare-fun c!10182 () Bool)

(assert (=> bm!6022 (= c!10182 c!10181)))

(declare-fun b!70319 () Bool)

(declare-fun e!46004 () List!1459)

(assert (=> b!70319 (= e!46004 e!46002)))

(declare-fun c!10183 () Bool)

(assert (=> b!70319 (= c!10183 (and ((_ is Cons!1455) (toList!708 call!5803)) (= (_1!1057 (h!2040 (toList!708 call!5803))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun b!70320 () Bool)

(assert (=> b!70320 (= e!46000 (ite c!10183 (t!4954 (toList!708 call!5803)) (ite c!10184 (Cons!1455 (h!2040 (toList!708 call!5803)) (t!4954 (toList!708 call!5803))) Nil!1456)))))

(declare-fun b!70321 () Bool)

(assert (=> b!70321 (= e!46004 call!6026)))

(declare-fun bm!6021 () Bool)

(assert (=> bm!6021 (= call!6025 call!6026)))

(declare-fun d!15721 () Bool)

(assert (=> d!15721 e!46001))

(declare-fun res!37626 () Bool)

(assert (=> d!15721 (=> (not res!37626) (not e!46001))))

(assert (=> d!15721 (= res!37626 (isStrictlySorted!277 lt!31007))))

(assert (=> d!15721 (= lt!31007 e!46004)))

(assert (=> d!15721 (= c!10181 (and ((_ is Cons!1455) (toList!708 call!5803)) (bvslt (_1!1057 (h!2040 (toList!708 call!5803))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15721 (isStrictlySorted!277 (toList!708 call!5803))))

(assert (=> d!15721 (= (insertStrictlySorted!52 (toList!708 call!5803) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) lt!31007)))

(declare-fun b!70322 () Bool)

(assert (=> b!70322 (= e!46001 (contains!713 lt!31007 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(declare-fun bm!6023 () Bool)

(assert (=> bm!6023 (= call!6024 call!6025)))

(assert (= (and d!15721 c!10181) b!70321))

(assert (= (and d!15721 (not c!10181)) b!70319))

(assert (= (and b!70319 c!10183) b!70313))

(assert (= (and b!70319 (not c!10183)) b!70317))

(assert (= (and b!70317 c!10184) b!70316))

(assert (= (and b!70317 (not c!10184)) b!70315))

(assert (= (or b!70316 b!70315) bm!6023))

(assert (= (or b!70313 bm!6023) bm!6021))

(assert (= (or b!70321 bm!6021) bm!6022))

(assert (= (and bm!6022 c!10182) b!70314))

(assert (= (and bm!6022 (not c!10182)) b!70320))

(assert (= (and d!15721 res!37626) b!70318))

(assert (= (and b!70318 res!37627) b!70322))

(declare-fun m!67343 () Bool)

(assert (=> d!15721 m!67343))

(declare-fun m!67345 () Bool)

(assert (=> d!15721 m!67345))

(declare-fun m!67347 () Bool)

(assert (=> bm!6022 m!67347))

(declare-fun m!67349 () Bool)

(assert (=> b!70322 m!67349))

(declare-fun m!67351 () Bool)

(assert (=> b!70318 m!67351))

(declare-fun m!67353 () Bool)

(assert (=> b!70314 m!67353))

(assert (=> d!14967 d!15721))

(declare-fun d!15723 () Bool)

(declare-fun c!10185 () Bool)

(assert (=> d!15723 (= c!10185 ((_ is Nil!1456) (toList!708 lt!30132)))))

(declare-fun e!46005 () (InoxSet tuple2!2092))

(assert (=> d!15723 (= (content!74 (toList!708 lt!30132)) e!46005)))

(declare-fun b!70323 () Bool)

(assert (=> b!70323 (= e!46005 ((as const (Array tuple2!2092 Bool)) false))))

(declare-fun b!70324 () Bool)

(assert (=> b!70324 (= e!46005 ((_ map or) (store ((as const (Array tuple2!2092 Bool)) false) (h!2040 (toList!708 lt!30132)) true) (content!74 (t!4954 (toList!708 lt!30132)))))))

(assert (= (and d!15723 c!10185) b!70323))

(assert (= (and d!15723 (not c!10185)) b!70324))

(declare-fun m!67355 () Bool)

(assert (=> b!70324 m!67355))

(assert (=> b!70324 m!65621))

(assert (=> d!14989 d!15723))

(declare-fun d!15725 () Bool)

(declare-fun e!46007 () Bool)

(assert (=> d!15725 e!46007))

(declare-fun res!37628 () Bool)

(assert (=> d!15725 (=> res!37628 e!46007)))

(declare-fun lt!31011 () Bool)

(assert (=> d!15725 (= res!37628 (not lt!31011))))

(declare-fun lt!31010 () Bool)

(assert (=> d!15725 (= lt!31011 lt!31010)))

(declare-fun lt!31008 () Unit!1909)

(declare-fun e!46006 () Unit!1909)

(assert (=> d!15725 (= lt!31008 e!46006)))

(declare-fun c!10186 () Bool)

(assert (=> d!15725 (= c!10186 lt!31010)))

(assert (=> d!15725 (= lt!31010 (containsKey!135 (toList!708 lt!30188) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15725 (= (contains!710 lt!30188 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!31011)))

(declare-fun b!70325 () Bool)

(declare-fun lt!31009 () Unit!1909)

(assert (=> b!70325 (= e!46006 lt!31009)))

(assert (=> b!70325 (= lt!31009 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30188) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!70325 (isDefined!84 (getValueByKey!132 (toList!708 lt!30188) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70326 () Bool)

(declare-fun Unit!1982 () Unit!1909)

(assert (=> b!70326 (= e!46006 Unit!1982)))

(declare-fun b!70327 () Bool)

(assert (=> b!70327 (= e!46007 (isDefined!84 (getValueByKey!132 (toList!708 lt!30188) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15725 c!10186) b!70325))

(assert (= (and d!15725 (not c!10186)) b!70326))

(assert (= (and d!15725 (not res!37628)) b!70327))

(declare-fun m!67357 () Bool)

(assert (=> d!15725 m!67357))

(declare-fun m!67359 () Bool)

(assert (=> b!70325 m!67359))

(assert (=> b!70325 m!64837))

(assert (=> b!70325 m!64837))

(declare-fun m!67361 () Bool)

(assert (=> b!70325 m!67361))

(assert (=> b!70327 m!64837))

(assert (=> b!70327 m!64837))

(assert (=> b!70327 m!67361))

(assert (=> d!14875 d!15725))

(declare-fun b!70331 () Bool)

(declare-fun e!46009 () Option!138)

(assert (=> b!70331 (= e!46009 None!136)))

(declare-fun b!70330 () Bool)

(assert (=> b!70330 (= e!46009 (getValueByKey!132 (t!4954 lt!30186) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70328 () Bool)

(declare-fun e!46008 () Option!138)

(assert (=> b!70328 (= e!46008 (Some!137 (_2!1057 (h!2040 lt!30186))))))

(declare-fun c!10187 () Bool)

(declare-fun d!15727 () Bool)

(assert (=> d!15727 (= c!10187 (and ((_ is Cons!1455) lt!30186) (= (_1!1057 (h!2040 lt!30186)) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15727 (= (getValueByKey!132 lt!30186 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!46008)))

(declare-fun b!70329 () Bool)

(assert (=> b!70329 (= e!46008 e!46009)))

(declare-fun c!10188 () Bool)

(assert (=> b!70329 (= c!10188 (and ((_ is Cons!1455) lt!30186) (not (= (_1!1057 (h!2040 lt!30186)) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15727 c!10187) b!70328))

(assert (= (and d!15727 (not c!10187)) b!70329))

(assert (= (and b!70329 c!10188) b!70330))

(assert (= (and b!70329 (not c!10188)) b!70331))

(declare-fun m!67363 () Bool)

(assert (=> b!70330 m!67363))

(assert (=> d!14875 d!15727))

(declare-fun d!15729 () Bool)

(assert (=> d!15729 (= (getValueByKey!132 lt!30186 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) (Some!137 (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!31012 () Unit!1909)

(assert (=> d!15729 (= lt!31012 (choose!394 lt!30186 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!46010 () Bool)

(assert (=> d!15729 e!46010))

(declare-fun res!37629 () Bool)

(assert (=> d!15729 (=> (not res!37629) (not e!46010))))

(assert (=> d!15729 (= res!37629 (isStrictlySorted!277 lt!30186))))

(assert (=> d!15729 (= (lemmaContainsTupThenGetReturnValue!49 lt!30186 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!31012)))

(declare-fun b!70332 () Bool)

(declare-fun res!37630 () Bool)

(assert (=> b!70332 (=> (not res!37630) (not e!46010))))

(assert (=> b!70332 (= res!37630 (containsKey!135 lt!30186 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70333 () Bool)

(assert (=> b!70333 (= e!46010 (contains!713 lt!30186 (tuple2!2093 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15729 res!37629) b!70332))

(assert (= (and b!70332 res!37630) b!70333))

(assert (=> d!15729 m!64831))

(declare-fun m!67365 () Bool)

(assert (=> d!15729 m!67365))

(declare-fun m!67367 () Bool)

(assert (=> d!15729 m!67367))

(declare-fun m!67369 () Bool)

(assert (=> b!70332 m!67369))

(declare-fun m!67371 () Bool)

(assert (=> b!70333 m!67371))

(assert (=> d!14875 d!15729))

(declare-fun b!70334 () Bool)

(declare-fun e!46013 () List!1459)

(declare-fun call!6028 () List!1459)

(assert (=> b!70334 (= e!46013 call!6028)))

(declare-fun b!70335 () Bool)

(declare-fun e!46011 () List!1459)

(assert (=> b!70335 (= e!46011 (insertStrictlySorted!52 (t!4954 (toList!708 lt!30087)) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70336 () Bool)

(declare-fun e!46014 () List!1459)

(declare-fun call!6027 () List!1459)

(assert (=> b!70336 (= e!46014 call!6027)))

(declare-fun b!70337 () Bool)

(assert (=> b!70337 (= e!46014 call!6027)))

(declare-fun c!10192 () Bool)

(declare-fun b!70338 () Bool)

(assert (=> b!70338 (= c!10192 (and ((_ is Cons!1455) (toList!708 lt!30087)) (bvsgt (_1!1057 (h!2040 (toList!708 lt!30087))) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!70338 (= e!46013 e!46014)))

(declare-fun b!70339 () Bool)

(declare-fun res!37632 () Bool)

(declare-fun e!46012 () Bool)

(assert (=> b!70339 (=> (not res!37632) (not e!46012))))

(declare-fun lt!31013 () List!1459)

(assert (=> b!70339 (= res!37632 (containsKey!135 lt!31013 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun call!6029 () List!1459)

(declare-fun c!10189 () Bool)

(declare-fun bm!6025 () Bool)

(assert (=> bm!6025 (= call!6029 ($colon$colon!63 e!46011 (ite c!10189 (h!2040 (toList!708 lt!30087)) (tuple2!2093 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!10190 () Bool)

(assert (=> bm!6025 (= c!10190 c!10189)))

(declare-fun b!70340 () Bool)

(declare-fun e!46015 () List!1459)

(assert (=> b!70340 (= e!46015 e!46013)))

(declare-fun c!10191 () Bool)

(assert (=> b!70340 (= c!10191 (and ((_ is Cons!1455) (toList!708 lt!30087)) (= (_1!1057 (h!2040 (toList!708 lt!30087))) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70341 () Bool)

(assert (=> b!70341 (= e!46011 (ite c!10191 (t!4954 (toList!708 lt!30087)) (ite c!10192 (Cons!1455 (h!2040 (toList!708 lt!30087)) (t!4954 (toList!708 lt!30087))) Nil!1456)))))

(declare-fun b!70342 () Bool)

(assert (=> b!70342 (= e!46015 call!6029)))

(declare-fun bm!6024 () Bool)

(assert (=> bm!6024 (= call!6028 call!6029)))

(declare-fun d!15731 () Bool)

(assert (=> d!15731 e!46012))

(declare-fun res!37631 () Bool)

(assert (=> d!15731 (=> (not res!37631) (not e!46012))))

(assert (=> d!15731 (= res!37631 (isStrictlySorted!277 lt!31013))))

(assert (=> d!15731 (= lt!31013 e!46015)))

(assert (=> d!15731 (= c!10189 (and ((_ is Cons!1455) (toList!708 lt!30087)) (bvslt (_1!1057 (h!2040 (toList!708 lt!30087))) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15731 (isStrictlySorted!277 (toList!708 lt!30087))))

(assert (=> d!15731 (= (insertStrictlySorted!52 (toList!708 lt!30087) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) lt!31013)))

(declare-fun b!70343 () Bool)

(assert (=> b!70343 (= e!46012 (contains!713 lt!31013 (tuple2!2093 (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))) (_2!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun bm!6026 () Bool)

(assert (=> bm!6026 (= call!6027 call!6028)))

(assert (= (and d!15731 c!10189) b!70342))

(assert (= (and d!15731 (not c!10189)) b!70340))

(assert (= (and b!70340 c!10191) b!70334))

(assert (= (and b!70340 (not c!10191)) b!70338))

(assert (= (and b!70338 c!10192) b!70337))

(assert (= (and b!70338 (not c!10192)) b!70336))

(assert (= (or b!70337 b!70336) bm!6026))

(assert (= (or b!70334 bm!6026) bm!6024))

(assert (= (or b!70342 bm!6024) bm!6025))

(assert (= (and bm!6025 c!10190) b!70335))

(assert (= (and bm!6025 (not c!10190)) b!70341))

(assert (= (and d!15731 res!37631) b!70339))

(assert (= (and b!70339 res!37632) b!70343))

(declare-fun m!67373 () Bool)

(assert (=> d!15731 m!67373))

(declare-fun m!67375 () Bool)

(assert (=> d!15731 m!67375))

(declare-fun m!67377 () Bool)

(assert (=> bm!6025 m!67377))

(declare-fun m!67379 () Bool)

(assert (=> b!70343 m!67379))

(declare-fun m!67381 () Bool)

(assert (=> b!70339 m!67381))

(declare-fun m!67383 () Bool)

(assert (=> b!70335 m!67383))

(assert (=> d!14875 d!15731))

(assert (=> b!69081 d!15683))

(assert (=> b!68921 d!15087))

(declare-fun d!15733 () Bool)

(declare-fun e!46016 () Bool)

(assert (=> d!15733 e!46016))

(declare-fun res!37633 () Bool)

(assert (=> d!15733 (=> (not res!37633) (not e!46016))))

(declare-fun lt!31016 () ListLongMap!1385)

(assert (=> d!15733 (= res!37633 (contains!710 lt!31016 (_1!1057 (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))))

(declare-fun lt!31014 () List!1459)

(assert (=> d!15733 (= lt!31016 (ListLongMap!1386 lt!31014))))

(declare-fun lt!31017 () Unit!1909)

(declare-fun lt!31015 () Unit!1909)

(assert (=> d!15733 (= lt!31017 lt!31015)))

(assert (=> d!15733 (= (getValueByKey!132 lt!31014 (_1!1057 (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))) (Some!137 (_2!1057 (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))))

(assert (=> d!15733 (= lt!31015 (lemmaContainsTupThenGetReturnValue!49 lt!31014 (_1!1057 (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) (_2!1057 (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))))

(assert (=> d!15733 (= lt!31014 (insertStrictlySorted!52 (toList!708 (ite c!9865 call!5904 (ite c!9868 call!5901 call!5902))) (_1!1057 (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) (_2!1057 (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))))))

(assert (=> d!15733 (= (+!88 (ite c!9865 call!5904 (ite c!9868 call!5901 call!5902)) (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))) lt!31016)))

(declare-fun b!70344 () Bool)

(declare-fun res!37634 () Bool)

(assert (=> b!70344 (=> (not res!37634) (not e!46016))))

(assert (=> b!70344 (= res!37634 (= (getValueByKey!132 (toList!708 lt!31016) (_1!1057 (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16)))))) (Some!137 (_2!1057 (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))))

(declare-fun b!70345 () Bool)

(assert (=> b!70345 (= e!46016 (contains!713 (toList!708 lt!31016) (ite (or c!9865 c!9868) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9730 c!9727) lt!29849 (zeroValue!2073 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9730 (ite c!9727 (minValue!2073 newMap!16) lt!29849) (minValue!2073 newMap!16))))))))

(assert (= (and d!15733 res!37633) b!70344))

(assert (= (and b!70344 res!37634) b!70345))

(declare-fun m!67385 () Bool)

(assert (=> d!15733 m!67385))

(declare-fun m!67387 () Bool)

(assert (=> d!15733 m!67387))

(declare-fun m!67389 () Bool)

(assert (=> d!15733 m!67389))

(declare-fun m!67391 () Bool)

(assert (=> d!15733 m!67391))

(declare-fun m!67393 () Bool)

(assert (=> b!70344 m!67393))

(declare-fun m!67395 () Bool)

(assert (=> b!70345 m!67395))

(assert (=> bm!5902 d!15733))

(declare-fun b!70349 () Bool)

(declare-fun e!46018 () Option!138)

(assert (=> b!70349 (= e!46018 None!136)))

(declare-fun b!70348 () Bool)

(assert (=> b!70348 (= e!46018 (getValueByKey!132 (t!4954 (t!4954 lt!30134)) (_1!1057 lt!29850)))))

(declare-fun b!70346 () Bool)

(declare-fun e!46017 () Option!138)

(assert (=> b!70346 (= e!46017 (Some!137 (_2!1057 (h!2040 (t!4954 lt!30134)))))))

(declare-fun d!15735 () Bool)

(declare-fun c!10193 () Bool)

(assert (=> d!15735 (= c!10193 (and ((_ is Cons!1455) (t!4954 lt!30134)) (= (_1!1057 (h!2040 (t!4954 lt!30134))) (_1!1057 lt!29850))))))

(assert (=> d!15735 (= (getValueByKey!132 (t!4954 lt!30134) (_1!1057 lt!29850)) e!46017)))

(declare-fun b!70347 () Bool)

(assert (=> b!70347 (= e!46017 e!46018)))

(declare-fun c!10194 () Bool)

(assert (=> b!70347 (= c!10194 (and ((_ is Cons!1455) (t!4954 lt!30134)) (not (= (_1!1057 (h!2040 (t!4954 lt!30134))) (_1!1057 lt!29850)))))))

(assert (= (and d!15735 c!10193) b!70346))

(assert (= (and d!15735 (not c!10193)) b!70347))

(assert (= (and b!70347 c!10194) b!70348))

(assert (= (and b!70347 (not c!10194)) b!70349))

(declare-fun m!67397 () Bool)

(assert (=> b!70348 m!67397))

(assert (=> b!69149 d!15735))

(declare-fun b!70353 () Bool)

(declare-fun e!46020 () Option!138)

(assert (=> b!70353 (= e!46020 None!136)))

(declare-fun b!70352 () Bool)

(assert (=> b!70352 (= e!46020 (getValueByKey!132 (t!4954 (t!4954 lt!30122)) (_1!1057 lt!29850)))))

(declare-fun b!70350 () Bool)

(declare-fun e!46019 () Option!138)

(assert (=> b!70350 (= e!46019 (Some!137 (_2!1057 (h!2040 (t!4954 lt!30122)))))))

(declare-fun d!15737 () Bool)

(declare-fun c!10195 () Bool)

(assert (=> d!15737 (= c!10195 (and ((_ is Cons!1455) (t!4954 lt!30122)) (= (_1!1057 (h!2040 (t!4954 lt!30122))) (_1!1057 lt!29850))))))

(assert (=> d!15737 (= (getValueByKey!132 (t!4954 lt!30122) (_1!1057 lt!29850)) e!46019)))

(declare-fun b!70351 () Bool)

(assert (=> b!70351 (= e!46019 e!46020)))

(declare-fun c!10196 () Bool)

(assert (=> b!70351 (= c!10196 (and ((_ is Cons!1455) (t!4954 lt!30122)) (not (= (_1!1057 (h!2040 (t!4954 lt!30122))) (_1!1057 lt!29850)))))))

(assert (= (and d!15737 c!10195) b!70350))

(assert (= (and d!15737 (not c!10195)) b!70351))

(assert (= (and b!70351 c!10196) b!70352))

(assert (= (and b!70351 (not c!10196)) b!70353))

(declare-fun m!67399 () Bool)

(assert (=> b!70352 m!67399))

(assert (=> b!69011 d!15737))

(declare-fun d!15739 () Bool)

(declare-fun res!37635 () Bool)

(declare-fun e!46021 () Bool)

(assert (=> d!15739 (=> res!37635 e!46021)))

(assert (=> d!15739 (= res!37635 (and ((_ is Cons!1455) lt!30130) (= (_1!1057 (h!2040 lt!30130)) (_1!1057 lt!29846))))))

(assert (=> d!15739 (= (containsKey!135 lt!30130 (_1!1057 lt!29846)) e!46021)))

(declare-fun b!70354 () Bool)

(declare-fun e!46022 () Bool)

(assert (=> b!70354 (= e!46021 e!46022)))

(declare-fun res!37636 () Bool)

(assert (=> b!70354 (=> (not res!37636) (not e!46022))))

(assert (=> b!70354 (= res!37636 (and (or (not ((_ is Cons!1455) lt!30130)) (bvsle (_1!1057 (h!2040 lt!30130)) (_1!1057 lt!29846))) ((_ is Cons!1455) lt!30130) (bvslt (_1!1057 (h!2040 lt!30130)) (_1!1057 lt!29846))))))

(declare-fun b!70355 () Bool)

(assert (=> b!70355 (= e!46022 (containsKey!135 (t!4954 lt!30130) (_1!1057 lt!29846)))))

(assert (= (and d!15739 (not res!37635)) b!70354))

(assert (= (and b!70354 res!37636) b!70355))

(declare-fun m!67401 () Bool)

(assert (=> b!70355 m!67401))

(assert (=> b!69282 d!15739))

(declare-fun d!15741 () Bool)

(assert (=> d!15741 (= (inRange!0 (index!3042 lt!30439) (mask!6112 newMap!16)) (and (bvsge (index!3042 lt!30439) #b00000000000000000000000000000000) (bvslt (index!3042 lt!30439) (bvadd (mask!6112 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!69203 d!15741))

(declare-fun d!15743 () Bool)

(declare-fun lt!31018 () Bool)

(assert (=> d!15743 (= lt!31018 (select (content!74 lt!30327) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun e!46023 () Bool)

(assert (=> d!15743 (= lt!31018 e!46023)))

(declare-fun res!37637 () Bool)

(assert (=> d!15743 (=> (not res!37637) (not e!46023))))

(assert (=> d!15743 (= res!37637 ((_ is Cons!1455) lt!30327))))

(assert (=> d!15743 (= (contains!713 lt!30327 (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))) lt!31018)))

(declare-fun b!70356 () Bool)

(declare-fun e!46024 () Bool)

(assert (=> b!70356 (= e!46023 e!46024)))

(declare-fun res!37638 () Bool)

(assert (=> b!70356 (=> res!37638 e!46024)))

(assert (=> b!70356 (= res!37638 (= (h!2040 lt!30327) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(declare-fun b!70357 () Bool)

(assert (=> b!70357 (= e!46024 (contains!713 (t!4954 lt!30327) (tuple2!2093 (_1!1057 lt!29850) (_2!1057 lt!29850))))))

(assert (= (and d!15743 res!37637) b!70356))

(assert (= (and b!70356 (not res!37638)) b!70357))

(declare-fun m!67403 () Bool)

(assert (=> d!15743 m!67403))

(declare-fun m!67405 () Bool)

(assert (=> d!15743 m!67405))

(declare-fun m!67407 () Bool)

(assert (=> b!70357 m!67407))

(assert (=> b!69048 d!15743))

(declare-fun d!15745 () Bool)

(declare-fun res!37639 () Bool)

(declare-fun e!46025 () Bool)

(assert (=> d!15745 (=> res!37639 e!46025)))

(assert (=> d!15745 (= res!37639 (and ((_ is Cons!1455) lt!30404) (= (_1!1057 (h!2040 lt!30404)) (_1!1057 lt!29850))))))

(assert (=> d!15745 (= (containsKey!135 lt!30404 (_1!1057 lt!29850)) e!46025)))

(declare-fun b!70358 () Bool)

(declare-fun e!46026 () Bool)

(assert (=> b!70358 (= e!46025 e!46026)))

(declare-fun res!37640 () Bool)

(assert (=> b!70358 (=> (not res!37640) (not e!46026))))

(assert (=> b!70358 (= res!37640 (and (or (not ((_ is Cons!1455) lt!30404)) (bvsle (_1!1057 (h!2040 lt!30404)) (_1!1057 lt!29850))) ((_ is Cons!1455) lt!30404) (bvslt (_1!1057 (h!2040 lt!30404)) (_1!1057 lt!29850))))))

(declare-fun b!70359 () Bool)

(assert (=> b!70359 (= e!46026 (containsKey!135 (t!4954 lt!30404) (_1!1057 lt!29850)))))

(assert (= (and d!15745 (not res!37639)) b!70358))

(assert (= (and b!70358 res!37640) b!70359))

(declare-fun m!67409 () Bool)

(assert (=> b!70359 m!67409))

(assert (=> b!69158 d!15745))

(declare-fun b!70362 () Bool)

(declare-fun res!37643 () Bool)

(declare-fun e!46027 () Bool)

(assert (=> b!70362 (=> (not res!37643) (not e!46027))))

(assert (=> b!70362 (= res!37643 (= (size!2074 (_2!1058 lt!30016)) (bvadd (_size!387 (_2!1058 lt!30016)) (bvsdiv (bvadd (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!70361 () Bool)

(declare-fun res!37644 () Bool)

(assert (=> b!70361 (=> (not res!37644) (not e!46027))))

(assert (=> b!70361 (= res!37644 (bvsge (size!2074 (_2!1058 lt!30016)) (_size!387 (_2!1058 lt!30016))))))

(declare-fun d!15747 () Bool)

(declare-fun res!37641 () Bool)

(assert (=> d!15747 (=> (not res!37641) (not e!46027))))

(assert (=> d!15747 (= res!37641 (validMask!0 (mask!6112 (_2!1058 lt!30016))))))

(assert (=> d!15747 (= (simpleValid!49 (_2!1058 lt!30016)) e!46027)))

(declare-fun b!70360 () Bool)

(declare-fun res!37642 () Bool)

(assert (=> b!70360 (=> (not res!37642) (not e!46027))))

(assert (=> b!70360 (= res!37642 (and (= (size!2069 (_values!2150 (_2!1058 lt!30016))) (bvadd (mask!6112 (_2!1058 lt!30016)) #b00000000000000000000000000000001)) (= (size!2068 (_keys!3811 (_2!1058 lt!30016))) (size!2069 (_values!2150 (_2!1058 lt!30016)))) (bvsge (_size!387 (_2!1058 lt!30016)) #b00000000000000000000000000000000) (bvsle (_size!387 (_2!1058 lt!30016)) (bvadd (mask!6112 (_2!1058 lt!30016)) #b00000000000000000000000000000001))))))

(declare-fun b!70363 () Bool)

(assert (=> b!70363 (= e!46027 (and (bvsge (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000000) (bvsle (extraKeys!2034 (_2!1058 lt!30016)) #b00000000000000000000000000000011) (bvsge (_vacant!387 (_2!1058 lt!30016)) #b00000000000000000000000000000000)))))

(assert (= (and d!15747 res!37641) b!70360))

(assert (= (and b!70360 res!37642) b!70361))

(assert (= (and b!70361 res!37644) b!70362))

(assert (= (and b!70362 res!37643) b!70363))

(declare-fun m!67411 () Bool)

(assert (=> b!70362 m!67411))

(assert (=> b!70361 m!67411))

(assert (=> d!15747 m!66401))

(assert (=> d!14987 d!15747))

(declare-fun d!15749 () Bool)

(assert (=> d!15749 (= (content!75 Nil!1457) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!15023 d!15749))

(declare-fun d!15751 () Bool)

(declare-fun c!10197 () Bool)

(assert (=> d!15751 (= c!10197 ((_ is Nil!1456) (toList!708 lt!30136)))))

(declare-fun e!46028 () (InoxSet tuple2!2092))

(assert (=> d!15751 (= (content!74 (toList!708 lt!30136)) e!46028)))

(declare-fun b!70364 () Bool)

(assert (=> b!70364 (= e!46028 ((as const (Array tuple2!2092 Bool)) false))))

(declare-fun b!70365 () Bool)

(assert (=> b!70365 (= e!46028 ((_ map or) (store ((as const (Array tuple2!2092 Bool)) false) (h!2040 (toList!708 lt!30136)) true) (content!74 (t!4954 (toList!708 lt!30136)))))))

(assert (= (and d!15751 c!10197) b!70364))

(assert (= (and d!15751 (not c!10197)) b!70365))

(declare-fun m!67413 () Bool)

(assert (=> b!70365 m!67413))

(declare-fun m!67415 () Bool)

(assert (=> b!70365 m!67415))

(assert (=> d!14939 d!15751))

(declare-fun d!15753 () Bool)

(declare-fun lt!31019 () Bool)

(assert (=> d!15753 (= lt!31019 (select (content!74 lt!30126) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun e!46029 () Bool)

(assert (=> d!15753 (= lt!31019 e!46029)))

(declare-fun res!37645 () Bool)

(assert (=> d!15753 (=> (not res!37645) (not e!46029))))

(assert (=> d!15753 (= res!37645 ((_ is Cons!1455) lt!30126))))

(assert (=> d!15753 (= (contains!713 lt!30126 (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))) lt!31019)))

(declare-fun b!70366 () Bool)

(declare-fun e!46030 () Bool)

(assert (=> b!70366 (= e!46029 e!46030)))

(declare-fun res!37646 () Bool)

(assert (=> b!70366 (=> res!37646 e!46030)))

(assert (=> b!70366 (= res!37646 (= (h!2040 lt!30126) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(declare-fun b!70367 () Bool)

(assert (=> b!70367 (= e!46030 (contains!713 (t!4954 lt!30126) (tuple2!2093 (_1!1057 lt!29846) (_2!1057 lt!29846))))))

(assert (= (and d!15753 res!37645) b!70366))

(assert (= (and b!70366 (not res!37646)) b!70367))

(declare-fun m!67417 () Bool)

(assert (=> d!15753 m!67417))

(declare-fun m!67419 () Bool)

(assert (=> d!15753 m!67419))

(declare-fun m!67421 () Bool)

(assert (=> b!70367 m!67421))

(assert (=> b!69255 d!15753))

(declare-fun d!15755 () Bool)

(declare-fun e!46032 () Bool)

(assert (=> d!15755 e!46032))

(declare-fun res!37647 () Bool)

(assert (=> d!15755 (=> res!37647 e!46032)))

(declare-fun lt!31023 () Bool)

(assert (=> d!15755 (= res!37647 (not lt!31023))))

(declare-fun lt!31022 () Bool)

(assert (=> d!15755 (= lt!31023 lt!31022)))

(declare-fun lt!31020 () Unit!1909)

(declare-fun e!46031 () Unit!1909)

(assert (=> d!15755 (= lt!31020 e!46031)))

(declare-fun c!10198 () Bool)

(assert (=> d!15755 (= c!10198 lt!31022)))

(assert (=> d!15755 (= lt!31022 (containsKey!135 (toList!708 lt!30363) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15755 (= (contains!710 lt!30363 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!31023)))

(declare-fun b!70368 () Bool)

(declare-fun lt!31021 () Unit!1909)

(assert (=> b!70368 (= e!46031 lt!31021)))

(assert (=> b!70368 (= lt!31021 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30363) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!70368 (isDefined!84 (getValueByKey!132 (toList!708 lt!30363) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70369 () Bool)

(declare-fun Unit!1983 () Unit!1909)

(assert (=> b!70369 (= e!46031 Unit!1983)))

(declare-fun b!70370 () Bool)

(assert (=> b!70370 (= e!46032 (isDefined!84 (getValueByKey!132 (toList!708 lt!30363) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!15755 c!10198) b!70368))

(assert (= (and d!15755 (not c!10198)) b!70369))

(assert (= (and d!15755 (not res!37647)) b!70370))

(declare-fun m!67423 () Bool)

(assert (=> d!15755 m!67423))

(declare-fun m!67425 () Bool)

(assert (=> b!70368 m!67425))

(assert (=> b!70368 m!65135))

(assert (=> b!70368 m!65135))

(declare-fun m!67427 () Bool)

(assert (=> b!70368 m!67427))

(assert (=> b!70370 m!65135))

(assert (=> b!70370 m!65135))

(assert (=> b!70370 m!67427))

(assert (=> d!14953 d!15755))

(declare-fun b!70374 () Bool)

(declare-fun e!46034 () Option!138)

(assert (=> b!70374 (= e!46034 None!136)))

(declare-fun b!70373 () Bool)

(assert (=> b!70373 (= e!46034 (getValueByKey!132 (t!4954 lt!30361) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70371 () Bool)

(declare-fun e!46033 () Option!138)

(assert (=> b!70371 (= e!46033 (Some!137 (_2!1057 (h!2040 lt!30361))))))

(declare-fun c!10199 () Bool)

(declare-fun d!15757 () Bool)

(assert (=> d!15757 (= c!10199 (and ((_ is Cons!1455) lt!30361) (= (_1!1057 (h!2040 lt!30361)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!15757 (= (getValueByKey!132 lt!30361 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!46033)))

(declare-fun b!70372 () Bool)

(assert (=> b!70372 (= e!46033 e!46034)))

(declare-fun c!10200 () Bool)

(assert (=> b!70372 (= c!10200 (and ((_ is Cons!1455) lt!30361) (not (= (_1!1057 (h!2040 lt!30361)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!15757 c!10199) b!70371))

(assert (= (and d!15757 (not c!10199)) b!70372))

(assert (= (and b!70372 c!10200) b!70373))

(assert (= (and b!70372 (not c!10200)) b!70374))

(declare-fun m!67429 () Bool)

(assert (=> b!70373 m!67429))

(assert (=> d!14953 d!15757))

(declare-fun d!15759 () Bool)

(assert (=> d!15759 (= (getValueByKey!132 lt!30361 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!31024 () Unit!1909)

(assert (=> d!15759 (= lt!31024 (choose!394 lt!30361 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!46035 () Bool)

(assert (=> d!15759 e!46035))

(declare-fun res!37648 () Bool)

(assert (=> d!15759 (=> (not res!37648) (not e!46035))))

(assert (=> d!15759 (= res!37648 (isStrictlySorted!277 lt!30361))))

(assert (=> d!15759 (= (lemmaContainsTupThenGetReturnValue!49 lt!30361 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!31024)))

(declare-fun b!70375 () Bool)

(declare-fun res!37649 () Bool)

(assert (=> b!70375 (=> (not res!37649) (not e!46035))))

(assert (=> b!70375 (= res!37649 (containsKey!135 lt!30361 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70376 () Bool)

(assert (=> b!70376 (= e!46035 (contains!713 lt!30361 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!15759 res!37648) b!70375))

(assert (= (and b!70375 res!37649) b!70376))

(assert (=> d!15759 m!65129))

(declare-fun m!67431 () Bool)

(assert (=> d!15759 m!67431))

(declare-fun m!67433 () Bool)

(assert (=> d!15759 m!67433))

(declare-fun m!67435 () Bool)

(assert (=> b!70375 m!67435))

(declare-fun m!67437 () Bool)

(assert (=> b!70376 m!67437))

(assert (=> d!14953 d!15759))

(declare-fun b!70377 () Bool)

(declare-fun e!46038 () List!1459)

(declare-fun call!6031 () List!1459)

(assert (=> b!70377 (= e!46038 call!6031)))

(declare-fun e!46036 () List!1459)

(declare-fun b!70378 () Bool)

(assert (=> b!70378 (= e!46036 (insertStrictlySorted!52 (t!4954 (toList!708 call!5846)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70379 () Bool)

(declare-fun e!46039 () List!1459)

(declare-fun call!6030 () List!1459)

(assert (=> b!70379 (= e!46039 call!6030)))

(declare-fun b!70380 () Bool)

(assert (=> b!70380 (= e!46039 call!6030)))

(declare-fun b!70381 () Bool)

(declare-fun c!10204 () Bool)

(assert (=> b!70381 (= c!10204 (and ((_ is Cons!1455) (toList!708 call!5846)) (bvsgt (_1!1057 (h!2040 (toList!708 call!5846))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!70381 (= e!46038 e!46039)))

(declare-fun b!70382 () Bool)

(declare-fun res!37651 () Bool)

(declare-fun e!46037 () Bool)

(assert (=> b!70382 (=> (not res!37651) (not e!46037))))

(declare-fun lt!31025 () List!1459)

(assert (=> b!70382 (= res!37651 (containsKey!135 lt!31025 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!6028 () Bool)

(declare-fun c!10201 () Bool)

(declare-fun call!6032 () List!1459)

(assert (=> bm!6028 (= call!6032 ($colon$colon!63 e!46036 (ite c!10201 (h!2040 (toList!708 call!5846)) (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!10202 () Bool)

(assert (=> bm!6028 (= c!10202 c!10201)))

(declare-fun b!70383 () Bool)

(declare-fun e!46040 () List!1459)

(assert (=> b!70383 (= e!46040 e!46038)))

(declare-fun c!10203 () Bool)

(assert (=> b!70383 (= c!10203 (and ((_ is Cons!1455) (toList!708 call!5846)) (= (_1!1057 (h!2040 (toList!708 call!5846))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!70384 () Bool)

(assert (=> b!70384 (= e!46036 (ite c!10203 (t!4954 (toList!708 call!5846)) (ite c!10204 (Cons!1455 (h!2040 (toList!708 call!5846)) (t!4954 (toList!708 call!5846))) Nil!1456)))))

(declare-fun b!70385 () Bool)

(assert (=> b!70385 (= e!46040 call!6032)))

(declare-fun bm!6027 () Bool)

(assert (=> bm!6027 (= call!6031 call!6032)))

(declare-fun d!15761 () Bool)

(assert (=> d!15761 e!46037))

(declare-fun res!37650 () Bool)

(assert (=> d!15761 (=> (not res!37650) (not e!46037))))

(assert (=> d!15761 (= res!37650 (isStrictlySorted!277 lt!31025))))

(assert (=> d!15761 (= lt!31025 e!46040)))

(assert (=> d!15761 (= c!10201 (and ((_ is Cons!1455) (toList!708 call!5846)) (bvslt (_1!1057 (h!2040 (toList!708 call!5846))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!15761 (isStrictlySorted!277 (toList!708 call!5846))))

(assert (=> d!15761 (= (insertStrictlySorted!52 (toList!708 call!5846) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!31025)))

(declare-fun b!70386 () Bool)

(assert (=> b!70386 (= e!46037 (contains!713 lt!31025 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1130 (select (arr!1833 (_values!2150 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!6029 () Bool)

(assert (=> bm!6029 (= call!6030 call!6031)))

(assert (= (and d!15761 c!10201) b!70385))

(assert (= (and d!15761 (not c!10201)) b!70383))

(assert (= (and b!70383 c!10203) b!70377))

(assert (= (and b!70383 (not c!10203)) b!70381))

(assert (= (and b!70381 c!10204) b!70380))

(assert (= (and b!70381 (not c!10204)) b!70379))

(assert (= (or b!70380 b!70379) bm!6029))

(assert (= (or b!70377 bm!6029) bm!6027))

(assert (= (or b!70385 bm!6027) bm!6028))

(assert (= (and bm!6028 c!10202) b!70378))

(assert (= (and bm!6028 (not c!10202)) b!70384))

(assert (= (and d!15761 res!37650) b!70382))

(assert (= (and b!70382 res!37651) b!70386))

(declare-fun m!67439 () Bool)

(assert (=> d!15761 m!67439))

(declare-fun m!67441 () Bool)

(assert (=> d!15761 m!67441))

(declare-fun m!67443 () Bool)

(assert (=> bm!6028 m!67443))

(declare-fun m!67445 () Bool)

(assert (=> b!70386 m!67445))

(declare-fun m!67447 () Bool)

(assert (=> b!70382 m!67447))

(declare-fun m!67449 () Bool)

(assert (=> b!70378 m!67449))

(assert (=> d!14953 d!15761))

(declare-fun d!15763 () Bool)

(assert (=> d!15763 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30024 (zeroValue!2073 newMap!16) lt!29849 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15763 true))

(declare-fun _$8!58 () Unit!1909)

(assert (=> d!15763 (= (choose!399 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) lt!30024 (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) lt!29849 (defaultEntry!2167 newMap!16)) _$8!58)))

(declare-fun bs!3043 () Bool)

(assert (= bs!3043 d!15763))

(assert (=> bs!3043 m!64525))

(assert (=> bs!3043 m!64525))

(assert (=> bs!3043 m!65505))

(assert (=> bs!3043 m!65509))

(assert (=> d!15047 d!15763))

(assert (=> d!15047 d!14861))

(assert (=> d!15047 d!15065))

(declare-fun d!15765 () Bool)

(declare-fun e!46041 () Bool)

(assert (=> d!15765 e!46041))

(declare-fun res!37652 () Bool)

(assert (=> d!15765 (=> (not res!37652) (not e!46041))))

(declare-fun lt!31028 () ListLongMap!1385)

(assert (=> d!15765 (= res!37652 (contains!710 lt!31028 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849))))))

(declare-fun lt!31026 () List!1459)

(assert (=> d!15765 (= lt!31028 (ListLongMap!1386 lt!31026))))

(declare-fun lt!31029 () Unit!1909)

(declare-fun lt!31027 () Unit!1909)

(assert (=> d!15765 (= lt!31029 lt!31027)))

(assert (=> d!15765 (= (getValueByKey!132 lt!31026 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849))))))

(assert (=> d!15765 (= lt!31027 (lemmaContainsTupThenGetReturnValue!49 lt!31026 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849))))))

(assert (=> d!15765 (= lt!31026 (insertStrictlySorted!52 (toList!708 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849))))))

(assert (=> d!15765 (= (+!88 (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)) lt!31028)))

(declare-fun b!70387 () Bool)

(declare-fun res!37653 () Bool)

(assert (=> b!70387 (=> (not res!37653) (not e!46041))))

(assert (=> b!70387 (= res!37653 (= (getValueByKey!132 (toList!708 lt!31028) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849))) (Some!137 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)))))))

(declare-fun b!70388 () Bool)

(assert (=> b!70388 (= e!46041 (contains!713 (toList!708 lt!31028) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)))))

(assert (= (and d!15765 res!37652) b!70387))

(assert (= (and b!70387 res!37653) b!70388))

(declare-fun m!67451 () Bool)

(assert (=> d!15765 m!67451))

(declare-fun m!67453 () Bool)

(assert (=> d!15765 m!67453))

(declare-fun m!67455 () Bool)

(assert (=> d!15765 m!67455))

(declare-fun m!67457 () Bool)

(assert (=> d!15765 m!67457))

(declare-fun m!67459 () Bool)

(assert (=> b!70387 m!67459))

(declare-fun m!67461 () Bool)

(assert (=> b!70388 m!67461))

(assert (=> d!15047 d!15765))

(declare-fun b!70389 () Bool)

(declare-fun e!46042 () Bool)

(declare-fun lt!31044 () ListLongMap!1385)

(assert (=> b!70389 (= e!46042 (= (apply!73 lt!31044 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29849))))

(declare-fun b!70390 () Bool)

(declare-fun e!46044 () Unit!1909)

(declare-fun lt!31041 () Unit!1909)

(assert (=> b!70390 (= e!46044 lt!31041)))

(declare-fun lt!31031 () ListLongMap!1385)

(assert (=> b!70390 (= lt!31031 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30024 (zeroValue!2073 newMap!16) lt!29849 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!31047 () (_ BitVec 64))

(assert (=> b!70390 (= lt!31047 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31036 () (_ BitVec 64))

(assert (=> b!70390 (= lt!31036 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31035 () Unit!1909)

(assert (=> b!70390 (= lt!31035 (addStillContains!49 lt!31031 lt!31047 (zeroValue!2073 newMap!16) lt!31036))))

(assert (=> b!70390 (contains!710 (+!88 lt!31031 (tuple2!2093 lt!31047 (zeroValue!2073 newMap!16))) lt!31036)))

(declare-fun lt!31045 () Unit!1909)

(assert (=> b!70390 (= lt!31045 lt!31035)))

(declare-fun lt!31042 () ListLongMap!1385)

(assert (=> b!70390 (= lt!31042 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30024 (zeroValue!2073 newMap!16) lt!29849 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!31032 () (_ BitVec 64))

(assert (=> b!70390 (= lt!31032 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31051 () (_ BitVec 64))

(assert (=> b!70390 (= lt!31051 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31039 () Unit!1909)

(assert (=> b!70390 (= lt!31039 (addApplyDifferent!49 lt!31042 lt!31032 lt!29849 lt!31051))))

(assert (=> b!70390 (= (apply!73 (+!88 lt!31042 (tuple2!2093 lt!31032 lt!29849)) lt!31051) (apply!73 lt!31042 lt!31051))))

(declare-fun lt!31033 () Unit!1909)

(assert (=> b!70390 (= lt!31033 lt!31039)))

(declare-fun lt!31049 () ListLongMap!1385)

(assert (=> b!70390 (= lt!31049 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30024 (zeroValue!2073 newMap!16) lt!29849 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!31050 () (_ BitVec 64))

(assert (=> b!70390 (= lt!31050 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31043 () (_ BitVec 64))

(assert (=> b!70390 (= lt!31043 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31048 () Unit!1909)

(assert (=> b!70390 (= lt!31048 (addApplyDifferent!49 lt!31049 lt!31050 (zeroValue!2073 newMap!16) lt!31043))))

(assert (=> b!70390 (= (apply!73 (+!88 lt!31049 (tuple2!2093 lt!31050 (zeroValue!2073 newMap!16))) lt!31043) (apply!73 lt!31049 lt!31043))))

(declare-fun lt!31034 () Unit!1909)

(assert (=> b!70390 (= lt!31034 lt!31048)))

(declare-fun lt!31046 () ListLongMap!1385)

(assert (=> b!70390 (= lt!31046 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30024 (zeroValue!2073 newMap!16) lt!29849 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!31038 () (_ BitVec 64))

(assert (=> b!70390 (= lt!31038 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31030 () (_ BitVec 64))

(assert (=> b!70390 (= lt!31030 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70390 (= lt!31041 (addApplyDifferent!49 lt!31046 lt!31038 lt!29849 lt!31030))))

(assert (=> b!70390 (= (apply!73 (+!88 lt!31046 (tuple2!2093 lt!31038 lt!29849)) lt!31030) (apply!73 lt!31046 lt!31030))))

(declare-fun bm!6030 () Bool)

(declare-fun call!6038 () ListLongMap!1385)

(declare-fun call!6039 () ListLongMap!1385)

(assert (=> bm!6030 (= call!6038 call!6039)))

(declare-fun b!70391 () Bool)

(declare-fun e!46048 () Bool)

(assert (=> b!70391 (= e!46048 (= (apply!73 lt!31044 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (select (arr!1833 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70391 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_values!2150 newMap!16))))))

(assert (=> b!70391 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun bm!6031 () Bool)

(declare-fun call!6037 () ListLongMap!1385)

(assert (=> bm!6031 (= call!6037 (getCurrentListMapNoExtraKeys!53 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30024 (zeroValue!2073 newMap!16) lt!29849 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!70392 () Bool)

(declare-fun e!46046 () Bool)

(assert (=> b!70392 (= e!46046 e!46048)))

(declare-fun res!37662 () Bool)

(assert (=> b!70392 (=> (not res!37662) (not e!46048))))

(assert (=> b!70392 (= res!37662 (contains!710 lt!31044 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70392 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!70393 () Bool)

(declare-fun e!46052 () ListLongMap!1385)

(assert (=> b!70393 (= e!46052 call!6038)))

(declare-fun b!70394 () Bool)

(declare-fun e!46047 () ListLongMap!1385)

(declare-fun call!6035 () ListLongMap!1385)

(assert (=> b!70394 (= e!46047 call!6035)))

(declare-fun b!70395 () Bool)

(declare-fun res!37657 () Bool)

(declare-fun e!46050 () Bool)

(assert (=> b!70395 (=> (not res!37657) (not e!46050))))

(declare-fun e!46045 () Bool)

(assert (=> b!70395 (= res!37657 e!46045)))

(declare-fun c!10207 () Bool)

(assert (=> b!70395 (= c!10207 (not (= (bvand lt!30024 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!15767 () Bool)

(assert (=> d!15767 e!46050))

(declare-fun res!37661 () Bool)

(assert (=> d!15767 (=> (not res!37661) (not e!46050))))

(assert (=> d!15767 (= res!37661 (or (bvsge #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))))

(declare-fun lt!31037 () ListLongMap!1385)

(assert (=> d!15767 (= lt!31044 lt!31037)))

(declare-fun lt!31040 () Unit!1909)

(assert (=> d!15767 (= lt!31040 e!46044)))

(declare-fun c!10209 () Bool)

(declare-fun e!46049 () Bool)

(assert (=> d!15767 (= c!10209 e!46049)))

(declare-fun res!37659 () Bool)

(assert (=> d!15767 (=> (not res!37659) (not e!46049))))

(assert (=> d!15767 (= res!37659 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun e!46053 () ListLongMap!1385)

(assert (=> d!15767 (= lt!31037 e!46053)))

(declare-fun c!10205 () Bool)

(assert (=> d!15767 (= c!10205 (and (not (= (bvand lt!30024 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!30024 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15767 (validMask!0 (mask!6112 newMap!16))))

(assert (=> d!15767 (= (getCurrentListMap!406 (_keys!3811 newMap!16) (_values!2150 newMap!16) (mask!6112 newMap!16) lt!30024 (zeroValue!2073 newMap!16) lt!29849 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!31044)))

(declare-fun bm!6032 () Bool)

(declare-fun call!6036 () Bool)

(assert (=> bm!6032 (= call!6036 (contains!710 lt!31044 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6033 () Bool)

(declare-fun call!6033 () Bool)

(assert (=> bm!6033 (= call!6033 (contains!710 lt!31044 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70396 () Bool)

(declare-fun e!46051 () Bool)

(assert (=> b!70396 (= e!46051 e!46042)))

(declare-fun res!37656 () Bool)

(assert (=> b!70396 (= res!37656 call!6036)))

(assert (=> b!70396 (=> (not res!37656) (not e!46042))))

(declare-fun bm!6034 () Bool)

(declare-fun call!6034 () ListLongMap!1385)

(assert (=> bm!6034 (= call!6035 call!6034)))

(declare-fun b!70397 () Bool)

(declare-fun e!46054 () Bool)

(assert (=> b!70397 (= e!46054 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70398 () Bool)

(assert (=> b!70398 (= e!46053 e!46052)))

(declare-fun c!10208 () Bool)

(assert (=> b!70398 (= c!10208 (and (not (= (bvand lt!30024 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!30024 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70399 () Bool)

(assert (=> b!70399 (= e!46053 (+!88 call!6039 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849)))))

(declare-fun b!70400 () Bool)

(assert (=> b!70400 (= e!46049 (validKeyInArray!0 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70401 () Bool)

(declare-fun e!46043 () Bool)

(assert (=> b!70401 (= e!46043 (= (apply!73 lt!31044 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun b!70402 () Bool)

(assert (=> b!70402 (= e!46050 e!46051)))

(declare-fun c!10210 () Bool)

(assert (=> b!70402 (= c!10210 (not (= (bvand lt!30024 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70403 () Bool)

(declare-fun c!10206 () Bool)

(assert (=> b!70403 (= c!10206 (and (not (= (bvand lt!30024 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!30024 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!70403 (= e!46052 e!46047)))

(declare-fun bm!6035 () Bool)

(assert (=> bm!6035 (= call!6039 (+!88 (ite c!10205 call!6037 (ite c!10208 call!6034 call!6035)) (ite (or c!10205 c!10208) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29849))))))

(declare-fun b!70404 () Bool)

(assert (=> b!70404 (= e!46051 (not call!6036))))

(declare-fun b!70405 () Bool)

(assert (=> b!70405 (= e!46045 (not call!6033))))

(declare-fun b!70406 () Bool)

(declare-fun res!37660 () Bool)

(assert (=> b!70406 (=> (not res!37660) (not e!46050))))

(assert (=> b!70406 (= res!37660 e!46046)))

(declare-fun res!37658 () Bool)

(assert (=> b!70406 (=> res!37658 e!46046)))

(assert (=> b!70406 (= res!37658 (not e!46054))))

(declare-fun res!37655 () Bool)

(assert (=> b!70406 (=> (not res!37655) (not e!46054))))

(assert (=> b!70406 (= res!37655 (bvslt #b00000000000000000000000000000000 (size!2068 (_keys!3811 newMap!16))))))

(declare-fun b!70407 () Bool)

(assert (=> b!70407 (= e!46045 e!46043)))

(declare-fun res!37654 () Bool)

(assert (=> b!70407 (= res!37654 call!6033)))

(assert (=> b!70407 (=> (not res!37654) (not e!46043))))

(declare-fun b!70408 () Bool)

(assert (=> b!70408 (= e!46047 call!6038)))

(declare-fun bm!6036 () Bool)

(assert (=> bm!6036 (= call!6034 call!6037)))

(declare-fun b!70409 () Bool)

(declare-fun Unit!1984 () Unit!1909)

(assert (=> b!70409 (= e!46044 Unit!1984)))

(assert (= (and d!15767 c!10205) b!70399))

(assert (= (and d!15767 (not c!10205)) b!70398))

(assert (= (and b!70398 c!10208) b!70393))

(assert (= (and b!70398 (not c!10208)) b!70403))

(assert (= (and b!70403 c!10206) b!70408))

(assert (= (and b!70403 (not c!10206)) b!70394))

(assert (= (or b!70408 b!70394) bm!6034))

(assert (= (or b!70393 bm!6034) bm!6036))

(assert (= (or b!70393 b!70408) bm!6030))

(assert (= (or b!70399 bm!6036) bm!6031))

(assert (= (or b!70399 bm!6030) bm!6035))

(assert (= (and d!15767 res!37659) b!70400))

(assert (= (and d!15767 c!10209) b!70390))

(assert (= (and d!15767 (not c!10209)) b!70409))

(assert (= (and d!15767 res!37661) b!70406))

(assert (= (and b!70406 res!37655) b!70397))

(assert (= (and b!70406 (not res!37658)) b!70392))

(assert (= (and b!70392 res!37662) b!70391))

(assert (= (and b!70406 res!37660) b!70395))

(assert (= (and b!70395 c!10207) b!70407))

(assert (= (and b!70395 (not c!10207)) b!70405))

(assert (= (and b!70407 res!37654) b!70401))

(assert (= (or b!70407 b!70405) bm!6033))

(assert (= (and b!70395 res!37657) b!70402))

(assert (= (and b!70402 c!10210) b!70396))

(assert (= (and b!70402 (not c!10210)) b!70404))

(assert (= (and b!70396 res!37656) b!70389))

(assert (= (or b!70396 b!70404) bm!6032))

(declare-fun b_lambda!3145 () Bool)

(assert (=> (not b_lambda!3145) (not b!70391)))

(assert (=> b!70391 t!4967))

(declare-fun b_and!4325 () Bool)

(assert (= b_and!4321 (and (=> t!4967 result!2615) b_and!4325)))

(assert (=> b!70391 t!4969))

(declare-fun b_and!4327 () Bool)

(assert (= b_and!4323 (and (=> t!4969 result!2617) b_and!4327)))

(assert (=> b!70397 m!64745))

(assert (=> b!70397 m!64745))

(assert (=> b!70397 m!64747))

(declare-fun m!67463 () Bool)

(assert (=> b!70401 m!67463))

(declare-fun m!67465 () Bool)

(assert (=> b!70399 m!67465))

(assert (=> b!70391 m!64753))

(assert (=> b!70391 m!64745))

(assert (=> b!70391 m!64745))

(declare-fun m!67467 () Bool)

(assert (=> b!70391 m!67467))

(assert (=> b!70391 m!64753))

(assert (=> b!70391 m!64757))

(assert (=> b!70391 m!64759))

(assert (=> b!70391 m!64757))

(declare-fun m!67469 () Bool)

(assert (=> bm!6033 m!67469))

(assert (=> d!15767 m!64725))

(declare-fun m!67471 () Bool)

(assert (=> b!70390 m!67471))

(declare-fun m!67473 () Bool)

(assert (=> b!70390 m!67473))

(declare-fun m!67475 () Bool)

(assert (=> b!70390 m!67475))

(declare-fun m!67477 () Bool)

(assert (=> b!70390 m!67477))

(declare-fun m!67479 () Bool)

(assert (=> b!70390 m!67479))

(declare-fun m!67481 () Bool)

(assert (=> b!70390 m!67481))

(declare-fun m!67483 () Bool)

(assert (=> b!70390 m!67483))

(assert (=> b!70390 m!67475))

(declare-fun m!67485 () Bool)

(assert (=> b!70390 m!67485))

(assert (=> b!70390 m!67477))

(declare-fun m!67487 () Bool)

(assert (=> b!70390 m!67487))

(declare-fun m!67489 () Bool)

(assert (=> b!70390 m!67489))

(declare-fun m!67491 () Bool)

(assert (=> b!70390 m!67491))

(assert (=> b!70390 m!67471))

(declare-fun m!67493 () Bool)

(assert (=> b!70390 m!67493))

(declare-fun m!67495 () Bool)

(assert (=> b!70390 m!67495))

(assert (=> b!70390 m!67487))

(declare-fun m!67497 () Bool)

(assert (=> b!70390 m!67497))

(assert (=> b!70390 m!64745))

(declare-fun m!67499 () Bool)

(assert (=> b!70390 m!67499))

(declare-fun m!67501 () Bool)

(assert (=> b!70390 m!67501))

(assert (=> bm!6031 m!67497))

(assert (=> b!70392 m!64745))

(assert (=> b!70392 m!64745))

(declare-fun m!67503 () Bool)

(assert (=> b!70392 m!67503))

(assert (=> b!70400 m!64745))

(assert (=> b!70400 m!64745))

(assert (=> b!70400 m!64747))

(declare-fun m!67505 () Bool)

(assert (=> bm!6035 m!67505))

(declare-fun m!67507 () Bool)

(assert (=> b!70389 m!67507))

(declare-fun m!67509 () Bool)

(assert (=> bm!6032 m!67509))

(assert (=> d!15047 d!15767))

(declare-fun d!15769 () Bool)

(assert (=> d!15769 (isDefined!84 (getValueByKey!132 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!31052 () Unit!1909)

(assert (=> d!15769 (= lt!31052 (choose!395 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46055 () Bool)

(assert (=> d!15769 e!46055))

(declare-fun res!37663 () Bool)

(assert (=> d!15769 (=> (not res!37663) (not e!46055))))

(assert (=> d!15769 (= res!37663 (isStrictlySorted!277 (toList!708 lt!30109)))))

(assert (=> d!15769 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000) lt!31052)))

(declare-fun b!70410 () Bool)

(assert (=> b!70410 (= e!46055 (containsKey!135 (toList!708 lt!30109) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15769 res!37663) b!70410))

(assert (=> d!15769 m!65445))

(assert (=> d!15769 m!65445))

(assert (=> d!15769 m!65447))

(declare-fun m!67511 () Bool)

(assert (=> d!15769 m!67511))

(assert (=> d!15769 m!66373))

(assert (=> b!70410 m!65441))

(assert (=> b!69244 d!15769))

(assert (=> b!69244 d!15593))

(assert (=> b!69244 d!15595))

(declare-fun b!70414 () Bool)

(declare-fun e!46057 () Option!138)

(assert (=> b!70414 (= e!46057 None!136)))

(declare-fun b!70413 () Bool)

(assert (=> b!70413 (= e!46057 (getValueByKey!132 (t!4954 (toList!708 lt!30397)) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))

(declare-fun b!70411 () Bool)

(declare-fun e!46056 () Option!138)

(assert (=> b!70411 (= e!46056 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30397)))))))

(declare-fun d!15771 () Bool)

(declare-fun c!10211 () Bool)

(assert (=> d!15771 (= c!10211 (and ((_ is Cons!1455) (toList!708 lt!30397)) (= (_1!1057 (h!2040 (toList!708 lt!30397))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849)))))))

(assert (=> d!15771 (= (getValueByKey!132 (toList!708 lt!30397) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))) e!46056)))

(declare-fun b!70412 () Bool)

(assert (=> b!70412 (= e!46056 e!46057)))

(declare-fun c!10212 () Bool)

(assert (=> b!70412 (= c!10212 (and ((_ is Cons!1455) (toList!708 lt!30397)) (not (= (_1!1057 (h!2040 (toList!708 lt!30397))) (_1!1057 (tuple2!2093 (select (arr!1832 (_keys!3811 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29849))))))))

(assert (= (and d!15771 c!10211) b!70411))

(assert (= (and d!15771 (not c!10211)) b!70412))

(assert (= (and b!70412 c!10212) b!70413))

(assert (= (and b!70412 (not c!10212)) b!70414))

(declare-fun m!67513 () Bool)

(assert (=> b!70413 m!67513))

(assert (=> b!69142 d!15771))

(declare-fun b!70418 () Bool)

(declare-fun e!46059 () Option!138)

(assert (=> b!70418 (= e!46059 None!136)))

(declare-fun b!70417 () Bool)

(assert (=> b!70417 (= e!46059 (getValueByKey!132 (t!4954 (toList!708 lt!30188)) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70415 () Bool)

(declare-fun e!46058 () Option!138)

(assert (=> b!70415 (= e!46058 (Some!137 (_2!1057 (h!2040 (toList!708 lt!30188)))))))

(declare-fun c!10213 () Bool)

(declare-fun d!15773 () Bool)

(assert (=> d!15773 (= c!10213 (and ((_ is Cons!1455) (toList!708 lt!30188)) (= (_1!1057 (h!2040 (toList!708 lt!30188))) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15773 (= (getValueByKey!132 (toList!708 lt!30188) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))) e!46058)))

(declare-fun b!70416 () Bool)

(assert (=> b!70416 (= e!46058 e!46059)))

(declare-fun c!10214 () Bool)

(assert (=> b!70416 (= c!10214 (and ((_ is Cons!1455) (toList!708 lt!30188)) (not (= (_1!1057 (h!2040 (toList!708 lt!30188))) (_1!1057 (tuple2!2093 lt!30079 (minValue!2073 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15773 c!10213) b!70415))

(assert (= (and d!15773 (not c!10213)) b!70416))

(assert (= (and b!70416 c!10214) b!70417))

(assert (= (and b!70416 (not c!10214)) b!70418))

(declare-fun m!67515 () Bool)

(assert (=> b!70417 m!67515))

(assert (=> b!68889 d!15773))

(declare-fun d!15775 () Bool)

(assert (=> d!15775 (isDefined!84 (getValueByKey!132 (toList!708 lt!30124) (_1!1057 lt!29850)))))

(declare-fun lt!31053 () Unit!1909)

(assert (=> d!15775 (= lt!31053 (choose!395 (toList!708 lt!30124) (_1!1057 lt!29850)))))

(declare-fun e!46060 () Bool)

(assert (=> d!15775 e!46060))

(declare-fun res!37664 () Bool)

(assert (=> d!15775 (=> (not res!37664) (not e!46060))))

(assert (=> d!15775 (= res!37664 (isStrictlySorted!277 (toList!708 lt!30124)))))

(assert (=> d!15775 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30124) (_1!1057 lt!29850)) lt!31053)))

(declare-fun b!70419 () Bool)

(assert (=> b!70419 (= e!46060 (containsKey!135 (toList!708 lt!30124) (_1!1057 lt!29850)))))

(assert (= (and d!15775 res!37664) b!70419))

(assert (=> d!15775 m!64669))

(assert (=> d!15775 m!64669))

(assert (=> d!15775 m!65017))

(declare-fun m!67517 () Bool)

(assert (=> d!15775 m!67517))

(declare-fun m!67519 () Bool)

(assert (=> d!15775 m!67519))

(assert (=> b!70419 m!65013))

(assert (=> b!69006 d!15775))

(assert (=> b!69006 d!15603))

(assert (=> b!69006 d!14869))

(declare-fun d!15777 () Bool)

(assert (=> d!15777 (= (apply!73 lt!30459 (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000)) (get!1134 (getValueByKey!132 (toList!708 lt!30459) (select (arr!1832 (_keys!3811 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3044 () Bool)

(assert (= bs!3044 d!15777))

(assert (=> bs!3044 m!64745))

(assert (=> bs!3044 m!67073))

(assert (=> bs!3044 m!67073))

(declare-fun m!67521 () Bool)

(assert (=> bs!3044 m!67521))

(assert (=> b!69219 d!15777))

(declare-fun c!10215 () Bool)

(declare-fun d!15779 () Bool)

(assert (=> d!15779 (= c!10215 ((_ is ValueCellFull!884) (select (arr!1833 (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!46061 () V!2921)

(assert (=> d!15779 (= (get!1130 (select (arr!1833 (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46061)))

(declare-fun b!70420 () Bool)

(assert (=> b!70420 (= e!46061 (get!1132 (select (arr!1833 (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70421 () Bool)

(assert (=> b!70421 (= e!46061 (get!1133 (select (arr!1833 (ite (or c!9730 c!9732) (_values!2150 newMap!16) (array!3840 (store (arr!1833 (_values!2150 newMap!16)) (index!3042 lt!30008) (ValueCellFull!884 lt!29849)) (size!2069 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15779 c!10215) b!70420))

(assert (= (and d!15779 (not c!10215)) b!70421))

(assert (=> b!70420 m!65387))

(assert (=> b!70420 m!64757))

(declare-fun m!67523 () Bool)

(assert (=> b!70420 m!67523))

(assert (=> b!70421 m!65387))

(assert (=> b!70421 m!64757))

(declare-fun m!67525 () Bool)

(assert (=> b!70421 m!67525))

(assert (=> b!69219 d!15779))

(declare-fun d!15781 () Bool)

(assert (=> d!15781 (isDefined!84 (getValueByKey!132 (toList!708 lt!30136) (_1!1057 lt!29850)))))

(declare-fun lt!31054 () Unit!1909)

(assert (=> d!15781 (= lt!31054 (choose!395 (toList!708 lt!30136) (_1!1057 lt!29850)))))

(declare-fun e!46062 () Bool)

(assert (=> d!15781 e!46062))

(declare-fun res!37665 () Bool)

(assert (=> d!15781 (=> (not res!37665) (not e!46062))))

(assert (=> d!15781 (= res!37665 (isStrictlySorted!277 (toList!708 lt!30136)))))

(assert (=> d!15781 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30136) (_1!1057 lt!29850)) lt!31054)))

(declare-fun b!70422 () Bool)

(assert (=> b!70422 (= e!46062 (containsKey!135 (toList!708 lt!30136) (_1!1057 lt!29850)))))

(assert (= (and d!15781 res!37665) b!70422))

(assert (=> d!15781 m!64705))

(assert (=> d!15781 m!64705))

(assert (=> d!15781 m!65237))

(declare-fun m!67527 () Bool)

(assert (=> d!15781 m!67527))

(declare-fun m!67529 () Bool)

(assert (=> d!15781 m!67529))

(assert (=> b!70422 m!65233))

(assert (=> b!69144 d!15781))

(assert (=> b!69144 d!15607))

(assert (=> b!69144 d!15013))

(declare-fun d!15783 () Bool)

(assert (=> d!15783 (= (apply!73 (+!88 lt!30163 (tuple2!2093 lt!30153 (minValue!2073 newMap!16))) lt!30172) (apply!73 lt!30163 lt!30172))))

(declare-fun lt!31055 () Unit!1909)

(assert (=> d!15783 (= lt!31055 (choose!392 lt!30163 lt!30153 (minValue!2073 newMap!16) lt!30172))))

(declare-fun e!46063 () Bool)

(assert (=> d!15783 e!46063))

(declare-fun res!37666 () Bool)

(assert (=> d!15783 (=> (not res!37666) (not e!46063))))

(assert (=> d!15783 (= res!37666 (contains!710 lt!30163 lt!30172))))

(assert (=> d!15783 (= (addApplyDifferent!49 lt!30163 lt!30153 (minValue!2073 newMap!16) lt!30172) lt!31055)))

(declare-fun b!70423 () Bool)

(assert (=> b!70423 (= e!46063 (not (= lt!30172 lt!30153)))))

(assert (= (and d!15783 res!37666) b!70423))

(declare-fun m!67531 () Bool)

(assert (=> d!15783 m!67531))

(assert (=> d!15783 m!64779))

(assert (=> d!15783 m!64781))

(assert (=> d!15783 m!64779))

(declare-fun m!67533 () Bool)

(assert (=> d!15783 m!67533))

(assert (=> d!15783 m!64793))

(assert (=> b!68833 d!15783))

(declare-fun d!15785 () Bool)

(declare-fun e!46064 () Bool)

(assert (=> d!15785 e!46064))

(declare-fun res!37667 () Bool)

(assert (=> d!15785 (=> (not res!37667) (not e!46064))))

(declare-fun lt!31058 () ListLongMap!1385)

(assert (=> d!15785 (= res!37667 (contains!710 lt!31058 (_1!1057 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16)))))))

(declare-fun lt!31056 () List!1459)

(assert (=> d!15785 (= lt!31058 (ListLongMap!1386 lt!31056))))

(declare-fun lt!31059 () Unit!1909)

(declare-fun lt!31057 () Unit!1909)

(assert (=> d!15785 (= lt!31059 lt!31057)))

(assert (=> d!15785 (= (getValueByKey!132 lt!31056 (_1!1057 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15785 (= lt!31057 (lemmaContainsTupThenGetReturnValue!49 lt!31056 (_1!1057 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15785 (= lt!31056 (insertStrictlySorted!52 (toList!708 lt!30170) (_1!1057 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15785 (= (+!88 lt!30170 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16))) lt!31058)))

(declare-fun b!70424 () Bool)

(declare-fun res!37668 () Bool)

(assert (=> b!70424 (=> (not res!37668) (not e!46064))))

(assert (=> b!70424 (= res!37668 (= (getValueByKey!132 (toList!708 lt!31058) (_1!1057 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16))))))))

(declare-fun b!70425 () Bool)

(assert (=> b!70425 (= e!46064 (contains!713 (toList!708 lt!31058) (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16))))))

(assert (= (and d!15785 res!37667) b!70424))

(assert (= (and b!70424 res!37668) b!70425))

(declare-fun m!67535 () Bool)

(assert (=> d!15785 m!67535))

(declare-fun m!67537 () Bool)

(assert (=> d!15785 m!67537))

(declare-fun m!67539 () Bool)

(assert (=> d!15785 m!67539))

(declare-fun m!67541 () Bool)

(assert (=> d!15785 m!67541))

(declare-fun m!67543 () Bool)

(assert (=> b!70424 m!67543))

(declare-fun m!67545 () Bool)

(assert (=> b!70425 m!67545))

(assert (=> b!68833 d!15785))

(declare-fun d!15787 () Bool)

(assert (=> d!15787 (contains!710 (+!88 lt!30152 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16))) lt!30157)))

(declare-fun lt!31060 () Unit!1909)

(assert (=> d!15787 (= lt!31060 (choose!391 lt!30152 lt!30168 (zeroValue!2073 newMap!16) lt!30157))))

(assert (=> d!15787 (contains!710 lt!30152 lt!30157)))

(assert (=> d!15787 (= (addStillContains!49 lt!30152 lt!30168 (zeroValue!2073 newMap!16) lt!30157) lt!31060)))

(declare-fun bs!3045 () Bool)

(assert (= bs!3045 d!15787))

(assert (=> bs!3045 m!64767))

(assert (=> bs!3045 m!64767))

(assert (=> bs!3045 m!64777))

(declare-fun m!67547 () Bool)

(assert (=> bs!3045 m!67547))

(declare-fun m!67549 () Bool)

(assert (=> bs!3045 m!67549))

(assert (=> b!68833 d!15787))

(declare-fun d!15789 () Bool)

(declare-fun e!46065 () Bool)

(assert (=> d!15789 e!46065))

(declare-fun res!37669 () Bool)

(assert (=> d!15789 (=> (not res!37669) (not e!46065))))

(declare-fun lt!31063 () ListLongMap!1385)

(assert (=> d!15789 (= res!37669 (contains!710 lt!31063 (_1!1057 (tuple2!2093 lt!30153 (minValue!2073 newMap!16)))))))

(declare-fun lt!31061 () List!1459)

(assert (=> d!15789 (= lt!31063 (ListLongMap!1386 lt!31061))))

(declare-fun lt!31064 () Unit!1909)

(declare-fun lt!31062 () Unit!1909)

(assert (=> d!15789 (= lt!31064 lt!31062)))

(assert (=> d!15789 (= (getValueByKey!132 lt!31061 (_1!1057 (tuple2!2093 lt!30153 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30153 (minValue!2073 newMap!16)))))))

(assert (=> d!15789 (= lt!31062 (lemmaContainsTupThenGetReturnValue!49 lt!31061 (_1!1057 (tuple2!2093 lt!30153 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30153 (minValue!2073 newMap!16)))))))

(assert (=> d!15789 (= lt!31061 (insertStrictlySorted!52 (toList!708 lt!30163) (_1!1057 (tuple2!2093 lt!30153 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30153 (minValue!2073 newMap!16)))))))

(assert (=> d!15789 (= (+!88 lt!30163 (tuple2!2093 lt!30153 (minValue!2073 newMap!16))) lt!31063)))

(declare-fun b!70426 () Bool)

(declare-fun res!37670 () Bool)

(assert (=> b!70426 (=> (not res!37670) (not e!46065))))

(assert (=> b!70426 (= res!37670 (= (getValueByKey!132 (toList!708 lt!31063) (_1!1057 (tuple2!2093 lt!30153 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30153 (minValue!2073 newMap!16))))))))

(declare-fun b!70427 () Bool)

(assert (=> b!70427 (= e!46065 (contains!713 (toList!708 lt!31063) (tuple2!2093 lt!30153 (minValue!2073 newMap!16))))))

(assert (= (and d!15789 res!37669) b!70426))

(assert (= (and b!70426 res!37670) b!70427))

(declare-fun m!67551 () Bool)

(assert (=> d!15789 m!67551))

(declare-fun m!67553 () Bool)

(assert (=> d!15789 m!67553))

(declare-fun m!67555 () Bool)

(assert (=> d!15789 m!67555))

(declare-fun m!67557 () Bool)

(assert (=> d!15789 m!67557))

(declare-fun m!67559 () Bool)

(assert (=> b!70426 m!67559))

(declare-fun m!67561 () Bool)

(assert (=> b!70427 m!67561))

(assert (=> b!68833 d!15789))

(declare-fun d!15791 () Bool)

(assert (=> d!15791 (= (apply!73 (+!88 lt!30170 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16))) lt!30164) (apply!73 lt!30170 lt!30164))))

(declare-fun lt!31065 () Unit!1909)

(assert (=> d!15791 (= lt!31065 (choose!392 lt!30170 lt!30171 (zeroValue!2073 newMap!16) lt!30164))))

(declare-fun e!46066 () Bool)

(assert (=> d!15791 e!46066))

(declare-fun res!37671 () Bool)

(assert (=> d!15791 (=> (not res!37671) (not e!46066))))

(assert (=> d!15791 (= res!37671 (contains!710 lt!30170 lt!30164))))

(assert (=> d!15791 (= (addApplyDifferent!49 lt!30170 lt!30171 (zeroValue!2073 newMap!16) lt!30164) lt!31065)))

(declare-fun b!70428 () Bool)

(assert (=> b!70428 (= e!46066 (not (= lt!30164 lt!30171)))))

(assert (= (and d!15791 res!37671) b!70428))

(declare-fun m!67563 () Bool)

(assert (=> d!15791 m!67563))

(assert (=> d!15791 m!64769))

(assert (=> d!15791 m!64771))

(assert (=> d!15791 m!64769))

(declare-fun m!67565 () Bool)

(assert (=> d!15791 m!67565))

(assert (=> d!15791 m!64773))

(assert (=> b!68833 d!15791))

(declare-fun d!15793 () Bool)

(declare-fun e!46067 () Bool)

(assert (=> d!15793 e!46067))

(declare-fun res!37672 () Bool)

(assert (=> d!15793 (=> (not res!37672) (not e!46067))))

(declare-fun lt!31068 () ListLongMap!1385)

(assert (=> d!15793 (= res!37672 (contains!710 lt!31068 (_1!1057 (tuple2!2093 lt!30159 (minValue!2073 newMap!16)))))))

(declare-fun lt!31066 () List!1459)

(assert (=> d!15793 (= lt!31068 (ListLongMap!1386 lt!31066))))

(declare-fun lt!31069 () Unit!1909)

(declare-fun lt!31067 () Unit!1909)

(assert (=> d!15793 (= lt!31069 lt!31067)))

(assert (=> d!15793 (= (getValueByKey!132 lt!31066 (_1!1057 (tuple2!2093 lt!30159 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30159 (minValue!2073 newMap!16)))))))

(assert (=> d!15793 (= lt!31067 (lemmaContainsTupThenGetReturnValue!49 lt!31066 (_1!1057 (tuple2!2093 lt!30159 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30159 (minValue!2073 newMap!16)))))))

(assert (=> d!15793 (= lt!31066 (insertStrictlySorted!52 (toList!708 lt!30167) (_1!1057 (tuple2!2093 lt!30159 (minValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30159 (minValue!2073 newMap!16)))))))

(assert (=> d!15793 (= (+!88 lt!30167 (tuple2!2093 lt!30159 (minValue!2073 newMap!16))) lt!31068)))

(declare-fun b!70429 () Bool)

(declare-fun res!37673 () Bool)

(assert (=> b!70429 (=> (not res!37673) (not e!46067))))

(assert (=> b!70429 (= res!37673 (= (getValueByKey!132 (toList!708 lt!31068) (_1!1057 (tuple2!2093 lt!30159 (minValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30159 (minValue!2073 newMap!16))))))))

(declare-fun b!70430 () Bool)

(assert (=> b!70430 (= e!46067 (contains!713 (toList!708 lt!31068) (tuple2!2093 lt!30159 (minValue!2073 newMap!16))))))

(assert (= (and d!15793 res!37672) b!70429))

(assert (= (and b!70429 res!37673) b!70430))

(declare-fun m!67567 () Bool)

(assert (=> d!15793 m!67567))

(declare-fun m!67569 () Bool)

(assert (=> d!15793 m!67569))

(declare-fun m!67571 () Bool)

(assert (=> d!15793 m!67571))

(declare-fun m!67573 () Bool)

(assert (=> d!15793 m!67573))

(declare-fun m!67575 () Bool)

(assert (=> b!70429 m!67575))

(declare-fun m!67577 () Bool)

(assert (=> b!70430 m!67577))

(assert (=> b!68833 d!15793))

(declare-fun d!15795 () Bool)

(assert (=> d!15795 (= (apply!73 (+!88 lt!30170 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16))) lt!30164) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30170 (tuple2!2093 lt!30171 (zeroValue!2073 newMap!16)))) lt!30164)))))

(declare-fun bs!3046 () Bool)

(assert (= bs!3046 d!15795))

(declare-fun m!67579 () Bool)

(assert (=> bs!3046 m!67579))

(assert (=> bs!3046 m!67579))

(declare-fun m!67581 () Bool)

(assert (=> bs!3046 m!67581))

(assert (=> b!68833 d!15795))

(declare-fun d!15797 () Bool)

(assert (=> d!15797 (= (apply!73 lt!30163 lt!30172) (get!1134 (getValueByKey!132 (toList!708 lt!30163) lt!30172)))))

(declare-fun bs!3047 () Bool)

(assert (= bs!3047 d!15797))

(declare-fun m!67583 () Bool)

(assert (=> bs!3047 m!67583))

(assert (=> bs!3047 m!67583))

(declare-fun m!67585 () Bool)

(assert (=> bs!3047 m!67585))

(assert (=> b!68833 d!15797))

(declare-fun d!15799 () Bool)

(assert (=> d!15799 (= (apply!73 lt!30167 lt!30151) (get!1134 (getValueByKey!132 (toList!708 lt!30167) lt!30151)))))

(declare-fun bs!3048 () Bool)

(assert (= bs!3048 d!15799))

(declare-fun m!67587 () Bool)

(assert (=> bs!3048 m!67587))

(assert (=> bs!3048 m!67587))

(declare-fun m!67589 () Bool)

(assert (=> bs!3048 m!67589))

(assert (=> b!68833 d!15799))

(declare-fun d!15801 () Bool)

(assert (=> d!15801 (= (apply!73 (+!88 lt!30163 (tuple2!2093 lt!30153 (minValue!2073 newMap!16))) lt!30172) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30163 (tuple2!2093 lt!30153 (minValue!2073 newMap!16)))) lt!30172)))))

(declare-fun bs!3049 () Bool)

(assert (= bs!3049 d!15801))

(declare-fun m!67591 () Bool)

(assert (=> bs!3049 m!67591))

(assert (=> bs!3049 m!67591))

(declare-fun m!67593 () Bool)

(assert (=> bs!3049 m!67593))

(assert (=> b!68833 d!15801))

(declare-fun d!15803 () Bool)

(assert (=> d!15803 (= (apply!73 lt!30170 lt!30164) (get!1134 (getValueByKey!132 (toList!708 lt!30170) lt!30164)))))

(declare-fun bs!3050 () Bool)

(assert (= bs!3050 d!15803))

(declare-fun m!67595 () Bool)

(assert (=> bs!3050 m!67595))

(assert (=> bs!3050 m!67595))

(declare-fun m!67597 () Bool)

(assert (=> bs!3050 m!67597))

(assert (=> b!68833 d!15803))

(declare-fun d!15805 () Bool)

(assert (=> d!15805 (= (apply!73 (+!88 lt!30167 (tuple2!2093 lt!30159 (minValue!2073 newMap!16))) lt!30151) (get!1134 (getValueByKey!132 (toList!708 (+!88 lt!30167 (tuple2!2093 lt!30159 (minValue!2073 newMap!16)))) lt!30151)))))

(declare-fun bs!3051 () Bool)

(assert (= bs!3051 d!15805))

(declare-fun m!67599 () Bool)

(assert (=> bs!3051 m!67599))

(assert (=> bs!3051 m!67599))

(declare-fun m!67601 () Bool)

(assert (=> bs!3051 m!67601))

(assert (=> b!68833 d!15805))

(declare-fun d!15807 () Bool)

(declare-fun e!46068 () Bool)

(assert (=> d!15807 e!46068))

(declare-fun res!37674 () Bool)

(assert (=> d!15807 (=> (not res!37674) (not e!46068))))

(declare-fun lt!31072 () ListLongMap!1385)

(assert (=> d!15807 (= res!37674 (contains!710 lt!31072 (_1!1057 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16)))))))

(declare-fun lt!31070 () List!1459)

(assert (=> d!15807 (= lt!31072 (ListLongMap!1386 lt!31070))))

(declare-fun lt!31073 () Unit!1909)

(declare-fun lt!31071 () Unit!1909)

(assert (=> d!15807 (= lt!31073 lt!31071)))

(assert (=> d!15807 (= (getValueByKey!132 lt!31070 (_1!1057 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15807 (= lt!31071 (lemmaContainsTupThenGetReturnValue!49 lt!31070 (_1!1057 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15807 (= lt!31070 (insertStrictlySorted!52 (toList!708 lt!30152) (_1!1057 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16))) (_2!1057 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15807 (= (+!88 lt!30152 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16))) lt!31072)))

(declare-fun b!70431 () Bool)

(declare-fun res!37675 () Bool)

(assert (=> b!70431 (=> (not res!37675) (not e!46068))))

(assert (=> b!70431 (= res!37675 (= (getValueByKey!132 (toList!708 lt!31072) (_1!1057 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16)))) (Some!137 (_2!1057 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16))))))))

(declare-fun b!70432 () Bool)

(assert (=> b!70432 (= e!46068 (contains!713 (toList!708 lt!31072) (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16))))))

(assert (= (and d!15807 res!37674) b!70431))

(assert (= (and b!70431 res!37675) b!70432))

(declare-fun m!67603 () Bool)

(assert (=> d!15807 m!67603))

(declare-fun m!67605 () Bool)

(assert (=> d!15807 m!67605))

(declare-fun m!67607 () Bool)

(assert (=> d!15807 m!67607))

(declare-fun m!67609 () Bool)

(assert (=> d!15807 m!67609))

(declare-fun m!67611 () Bool)

(assert (=> b!70431 m!67611))

(declare-fun m!67613 () Bool)

(assert (=> b!70432 m!67613))

(assert (=> b!68833 d!15807))

(declare-fun d!15809 () Bool)

(declare-fun e!46070 () Bool)

(assert (=> d!15809 e!46070))

(declare-fun res!37676 () Bool)

(assert (=> d!15809 (=> res!37676 e!46070)))

(declare-fun lt!31077 () Bool)

(assert (=> d!15809 (= res!37676 (not lt!31077))))

(declare-fun lt!31076 () Bool)

(assert (=> d!15809 (= lt!31077 lt!31076)))

(declare-fun lt!31074 () Unit!1909)

(declare-fun e!46069 () Unit!1909)

(assert (=> d!15809 (= lt!31074 e!46069)))

(declare-fun c!10216 () Bool)

(assert (=> d!15809 (= c!10216 lt!31076)))

(assert (=> d!15809 (= lt!31076 (containsKey!135 (toList!708 (+!88 lt!30152 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16)))) lt!30157))))

(assert (=> d!15809 (= (contains!710 (+!88 lt!30152 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16))) lt!30157) lt!31077)))

(declare-fun b!70433 () Bool)

(declare-fun lt!31075 () Unit!1909)

(assert (=> b!70433 (= e!46069 lt!31075)))

(assert (=> b!70433 (= lt!31075 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 (+!88 lt!30152 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16)))) lt!30157))))

(assert (=> b!70433 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30152 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16)))) lt!30157))))

(declare-fun b!70434 () Bool)

(declare-fun Unit!1985 () Unit!1909)

(assert (=> b!70434 (= e!46069 Unit!1985)))

(declare-fun b!70435 () Bool)

(assert (=> b!70435 (= e!46070 (isDefined!84 (getValueByKey!132 (toList!708 (+!88 lt!30152 (tuple2!2093 lt!30168 (zeroValue!2073 newMap!16)))) lt!30157)))))

(assert (= (and d!15809 c!10216) b!70433))

(assert (= (and d!15809 (not c!10216)) b!70434))

(assert (= (and d!15809 (not res!37676)) b!70435))

(declare-fun m!67615 () Bool)

(assert (=> d!15809 m!67615))

(declare-fun m!67617 () Bool)

(assert (=> b!70433 m!67617))

(declare-fun m!67619 () Bool)

(assert (=> b!70433 m!67619))

(assert (=> b!70433 m!67619))

(declare-fun m!67621 () Bool)

(assert (=> b!70433 m!67621))

(assert (=> b!70435 m!67619))

(assert (=> b!70435 m!67619))

(assert (=> b!70435 m!67621))

(assert (=> b!68833 d!15809))

(declare-fun d!15811 () Bool)

(assert (=> d!15811 (= (apply!73 (+!88 lt!30167 (tuple2!2093 lt!30159 (minValue!2073 newMap!16))) lt!30151) (apply!73 lt!30167 lt!30151))))

(declare-fun lt!31078 () Unit!1909)

(assert (=> d!15811 (= lt!31078 (choose!392 lt!30167 lt!30159 (minValue!2073 newMap!16) lt!30151))))

(declare-fun e!46071 () Bool)

(assert (=> d!15811 e!46071))

(declare-fun res!37677 () Bool)

(assert (=> d!15811 (=> (not res!37677) (not e!46071))))

(assert (=> d!15811 (= res!37677 (contains!710 lt!30167 lt!30151))))

(assert (=> d!15811 (= (addApplyDifferent!49 lt!30167 lt!30159 (minValue!2073 newMap!16) lt!30151) lt!31078)))

(declare-fun b!70436 () Bool)

(assert (=> b!70436 (= e!46071 (not (= lt!30151 lt!30159)))))

(assert (= (and d!15811 res!37677) b!70436))

(declare-fun m!67623 () Bool)

(assert (=> d!15811 m!67623))

(assert (=> d!15811 m!64763))

(assert (=> d!15811 m!64765))

(assert (=> d!15811 m!64763))

(declare-fun m!67625 () Bool)

(assert (=> d!15811 m!67625))

(assert (=> d!15811 m!64787))

(assert (=> b!68833 d!15811))

(assert (=> b!68833 d!15529))

(declare-fun d!15813 () Bool)

(declare-fun e!46073 () Bool)

(assert (=> d!15813 e!46073))

(declare-fun res!37678 () Bool)

(assert (=> d!15813 (=> res!37678 e!46073)))

(declare-fun lt!31082 () Bool)

(assert (=> d!15813 (= res!37678 (not lt!31082))))

(declare-fun lt!31081 () Bool)

(assert (=> d!15813 (= lt!31082 lt!31081)))

(declare-fun lt!31079 () Unit!1909)

(declare-fun e!46072 () Unit!1909)

(assert (=> d!15813 (= lt!31079 e!46072)))

(declare-fun c!10217 () Bool)

(assert (=> d!15813 (= c!10217 lt!31081)))

(assert (=> d!15813 (= lt!31081 (containsKey!135 (toList!708 lt!30343) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15813 (= (contains!710 lt!30343 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31082)))

(declare-fun b!70437 () Bool)

(declare-fun lt!31080 () Unit!1909)

(assert (=> b!70437 (= e!46072 lt!31080)))

(assert (=> b!70437 (= lt!31080 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!708 lt!30343) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70437 (isDefined!84 (getValueByKey!132 (toList!708 lt!30343) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70438 () Bool)

(declare-fun Unit!1986 () Unit!1909)

(assert (=> b!70438 (= e!46072 Unit!1986)))

(declare-fun b!70439 () Bool)

(assert (=> b!70439 (= e!46073 (isDefined!84 (getValueByKey!132 (toList!708 lt!30343) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15813 c!10217) b!70437))

(assert (= (and d!15813 (not c!10217)) b!70438))

(assert (= (and d!15813 (not res!37678)) b!70439))

(declare-fun m!67627 () Bool)

(assert (=> d!15813 m!67627))

(declare-fun m!67629 () Bool)

(assert (=> b!70437 m!67629))

(declare-fun m!67631 () Bool)

(assert (=> b!70437 m!67631))

(assert (=> b!70437 m!67631))

(declare-fun m!67633 () Bool)

(assert (=> b!70437 m!67633))

(assert (=> b!70439 m!67631))

(assert (=> b!70439 m!67631))

(assert (=> b!70439 m!67633))

(assert (=> d!14935 d!15813))

(assert (=> d!14935 d!14849))

(declare-fun d!15815 () Bool)

(declare-fun lt!31083 () Bool)

(assert (=> d!15815 (= lt!31083 (select (content!74 (toList!708 lt!30424)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!46074 () Bool)

(assert (=> d!15815 (= lt!31083 e!46074)))

(declare-fun res!37679 () Bool)

(assert (=> d!15815 (=> (not res!37679) (not e!46074))))

(assert (=> d!15815 (= res!37679 ((_ is Cons!1455) (toList!708 lt!30424)))))

(assert (=> d!15815 (= (contains!713 (toList!708 lt!30424) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))) lt!31083)))

(declare-fun b!70440 () Bool)

(declare-fun e!46075 () Bool)

(assert (=> b!70440 (= e!46074 e!46075)))

(declare-fun res!37680 () Bool)

(assert (=> b!70440 (=> res!37680 e!46075)))

(assert (=> b!70440 (= res!37680 (= (h!2040 (toList!708 lt!30424)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70441 () Bool)

(assert (=> b!70441 (= e!46075 (contains!713 (t!4954 (toList!708 lt!30424)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15815 res!37679) b!70440))

(assert (= (and b!70440 (not res!37680)) b!70441))

(declare-fun m!67635 () Bool)

(assert (=> d!15815 m!67635))

(declare-fun m!67637 () Bool)

(assert (=> d!15815 m!67637))

(declare-fun m!67639 () Bool)

(assert (=> b!70441 m!67639))

(assert (=> b!69192 d!15815))

(declare-fun d!15817 () Bool)

(assert (not d!15817))

(assert (=> b!69243 d!15817))

(declare-fun b!70445 () Bool)

(declare-fun e!46077 () Option!138)

(assert (=> b!70445 (= e!46077 None!136)))

(declare-fun b!70444 () Bool)

(assert (=> b!70444 (= e!46077 (getValueByKey!132 (t!4954 (t!4954 (toList!708 lt!30132))) (_1!1057 lt!29846)))))

(declare-fun b!70442 () Bool)

(declare-fun e!46076 () Option!138)

(assert (=> b!70442 (= e!46076 (Some!137 (_2!1057 (h!2040 (t!4954 (toList!708 lt!30132))))))))

(declare-fun d!15819 () Bool)

(declare-fun c!10218 () Bool)

(assert (=> d!15819 (= c!10218 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!30132))) (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!30132)))) (_1!1057 lt!29846))))))

(assert (=> d!15819 (= (getValueByKey!132 (t!4954 (toList!708 lt!30132)) (_1!1057 lt!29846)) e!46076)))

(declare-fun b!70443 () Bool)

(assert (=> b!70443 (= e!46076 e!46077)))

(declare-fun c!10219 () Bool)

(assert (=> b!70443 (= c!10219 (and ((_ is Cons!1455) (t!4954 (toList!708 lt!30132))) (not (= (_1!1057 (h!2040 (t!4954 (toList!708 lt!30132)))) (_1!1057 lt!29846)))))))

(assert (= (and d!15819 c!10218) b!70442))

(assert (= (and d!15819 (not c!10218)) b!70443))

(assert (= (and b!70443 c!10219) b!70444))

(assert (= (and b!70443 (not c!10219)) b!70445))

(declare-fun m!67641 () Bool)

(assert (=> b!70444 m!67641))

(assert (=> b!68909 d!15819))

(assert (=> b!68993 d!15009))

(assert (=> b!69132 d!15173))

(declare-fun d!15821 () Bool)

(declare-fun lt!31084 () Bool)

(assert (=> d!15821 (= lt!31084 (select (content!74 (t!4954 (toList!708 lt!30136))) lt!29850))))

(declare-fun e!46078 () Bool)

(assert (=> d!15821 (= lt!31084 e!46078)))

(declare-fun res!37681 () Bool)

(assert (=> d!15821 (=> (not res!37681) (not e!46078))))

(assert (=> d!15821 (= res!37681 ((_ is Cons!1455) (t!4954 (toList!708 lt!30136))))))

(assert (=> d!15821 (= (contains!713 (t!4954 (toList!708 lt!30136)) lt!29850) lt!31084)))

(declare-fun b!70446 () Bool)

(declare-fun e!46079 () Bool)

(assert (=> b!70446 (= e!46078 e!46079)))

(declare-fun res!37682 () Bool)

(assert (=> b!70446 (=> res!37682 e!46079)))

(assert (=> b!70446 (= res!37682 (= (h!2040 (t!4954 (toList!708 lt!30136))) lt!29850))))

(declare-fun b!70447 () Bool)

(assert (=> b!70447 (= e!46079 (contains!713 (t!4954 (t!4954 (toList!708 lt!30136))) lt!29850))))

(assert (= (and d!15821 res!37681) b!70446))

(assert (= (and b!70446 (not res!37682)) b!70447))

(assert (=> d!15821 m!67415))

(declare-fun m!67643 () Bool)

(assert (=> d!15821 m!67643))

(declare-fun m!67645 () Bool)

(assert (=> b!70447 m!67645))

(assert (=> b!69094 d!15821))

(declare-fun b!70449 () Bool)

(declare-fun e!46081 () Bool)

(assert (=> b!70449 (= e!46081 tp_is_empty!2455)))

(declare-fun mapNonEmpty!3115 () Bool)

(declare-fun mapRes!3115 () Bool)

(declare-fun tp!8425 () Bool)

(declare-fun e!46080 () Bool)

(assert (=> mapNonEmpty!3115 (= mapRes!3115 (and tp!8425 e!46080))))

(declare-fun mapRest!3115 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapValue!3115 () ValueCell!884)

(declare-fun mapKey!3115 () (_ BitVec 32))

(assert (=> mapNonEmpty!3115 (= mapRest!3113 (store mapRest!3115 mapKey!3115 mapValue!3115))))

(declare-fun mapIsEmpty!3115 () Bool)

(assert (=> mapIsEmpty!3115 mapRes!3115))

(declare-fun b!70448 () Bool)

(assert (=> b!70448 (= e!46080 tp_is_empty!2455)))

(declare-fun condMapEmpty!3115 () Bool)

(declare-fun mapDefault!3115 () ValueCell!884)

(assert (=> mapNonEmpty!3113 (= condMapEmpty!3115 (= mapRest!3113 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3115)))))

(assert (=> mapNonEmpty!3113 (= tp!8423 (and e!46081 mapRes!3115))))

(assert (= (and mapNonEmpty!3113 condMapEmpty!3115) mapIsEmpty!3115))

(assert (= (and mapNonEmpty!3113 (not condMapEmpty!3115)) mapNonEmpty!3115))

(assert (= (and mapNonEmpty!3115 ((_ is ValueCellFull!884) mapValue!3115)) b!70448))

(assert (= (and mapNonEmpty!3113 ((_ is ValueCellFull!884) mapDefault!3115)) b!70449))

(declare-fun m!67647 () Bool)

(assert (=> mapNonEmpty!3115 m!67647))

(declare-fun b!70451 () Bool)

(declare-fun e!46083 () Bool)

(assert (=> b!70451 (= e!46083 tp_is_empty!2455)))

(declare-fun mapNonEmpty!3116 () Bool)

(declare-fun mapRes!3116 () Bool)

(declare-fun tp!8426 () Bool)

(declare-fun e!46082 () Bool)

(assert (=> mapNonEmpty!3116 (= mapRes!3116 (and tp!8426 e!46082))))

(declare-fun mapRest!3116 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapKey!3116 () (_ BitVec 32))

(declare-fun mapValue!3116 () ValueCell!884)

(assert (=> mapNonEmpty!3116 (= mapRest!3114 (store mapRest!3116 mapKey!3116 mapValue!3116))))

(declare-fun mapIsEmpty!3116 () Bool)

(assert (=> mapIsEmpty!3116 mapRes!3116))

(declare-fun b!70450 () Bool)

(assert (=> b!70450 (= e!46082 tp_is_empty!2455)))

(declare-fun condMapEmpty!3116 () Bool)

(declare-fun mapDefault!3116 () ValueCell!884)

(assert (=> mapNonEmpty!3114 (= condMapEmpty!3116 (= mapRest!3114 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3116)))))

(assert (=> mapNonEmpty!3114 (= tp!8424 (and e!46083 mapRes!3116))))

(assert (= (and mapNonEmpty!3114 condMapEmpty!3116) mapIsEmpty!3116))

(assert (= (and mapNonEmpty!3114 (not condMapEmpty!3116)) mapNonEmpty!3116))

(assert (= (and mapNonEmpty!3116 ((_ is ValueCellFull!884) mapValue!3116)) b!70450))

(assert (= (and mapNonEmpty!3114 ((_ is ValueCellFull!884) mapDefault!3116)) b!70451))

(declare-fun m!67649 () Bool)

(assert (=> mapNonEmpty!3116 m!67649))

(declare-fun b_lambda!3147 () Bool)

(assert (= b_lambda!3143 (or (and b!68389 b_free!2077) (and b!68379 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))) b_lambda!3147)))

(declare-fun b_lambda!3149 () Bool)

(assert (= b_lambda!3135 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3149)))

(declare-fun b_lambda!3151 () Bool)

(assert (= b_lambda!3141 (or (and b!68389 b_free!2077) (and b!68379 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))))) b_lambda!3151)))

(declare-fun b_lambda!3153 () Bool)

(assert (= b_lambda!3123 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3153)))

(declare-fun b_lambda!3155 () Bool)

(assert (= b_lambda!3129 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3155)))

(declare-fun b_lambda!3157 () Bool)

(assert (= b_lambda!3139 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3157)))

(declare-fun b_lambda!3159 () Bool)

(assert (= b_lambda!3127 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3159)))

(declare-fun b_lambda!3161 () Bool)

(assert (= b_lambda!3137 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3161)))

(declare-fun b_lambda!3163 () Bool)

(assert (= b_lambda!3145 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3163)))

(declare-fun b_lambda!3165 () Bool)

(assert (= b_lambda!3117 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3165)))

(declare-fun b_lambda!3167 () Bool)

(assert (= b_lambda!3119 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3167)))

(declare-fun b_lambda!3169 () Bool)

(assert (= b_lambda!3131 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3169)))

(declare-fun b_lambda!3171 () Bool)

(assert (= b_lambda!3133 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3171)))

(declare-fun b_lambda!3173 () Bool)

(assert (= b_lambda!3121 (or (and b!68389 b_free!2077 (= (defaultEntry!2167 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68379 b_free!2079) b_lambda!3173)))

(check-sat (not b!69482) (not b!69761) (not b!70024) (not b!70427) (not d!15203) (not b_lambda!3159) (not d!15295) (not d!15123) (not d!15357) (not bm!6002) (not b!69731) (not b!70217) (not b!69693) (not b!69445) (not b!69813) (not d!15407) (not b!69306) (not d!15539) (not b!70010) (not b!69373) (not d!15501) (not d!15513) (not bm!5960) (not b!69958) (not b!69896) (not b!69956) (not b_lambda!3113) (not d!15283) (not b!70390) (not b!69545) (not b!69966) (not b!69542) (not b!69396) (not b!70041) (not b!69858) (not d!15669) (not d!15223) tp_is_empty!2455 (not b!69580) (not bm!5983) (not b!69905) (not d!15481) (not b_lambda!3157) (not d!15327) (not b!69304) (not b!70202) (not bm!5942) (not b!69334) (not mapNonEmpty!3116) (not bm!5982) (not d!15401) (not b!70106) (not b!70193) (not d!15259) (not b!70432) (not b!69985) (not b!69453) (not b!70429) (not b!70173) (not b_lambda!3125) (not bm!6008) (not b_lambda!3167) (not b!69678) (not d!15809) (not b!70387) (not b!70140) (not b!69831) (not b!70298) (not b!69644) (not d!15127) (not b!69814) (not b!69329) (not b!69836) (not d!15101) (not b!70000) (not b!70032) (not d!15405) (not d!15517) (not b!70027) (not b_lambda!3169) (not b!70021) (not bm!6031) (not bm!5930) (not b!70343) (not b!69568) (not b!69857) (not b!69927) (not b!69353) (not b!69411) (not b!69576) (not b!69872) (not b!69555) (not d!15191) (not bm!5958) (not bm!5968) (not bm!6022) (not b!70348) (not b!69969) (not d!15249) (not d!15509) (not b!70090) (not b!69383) (not d!15317) (not b!70293) (not b!69641) (not b!70311) (not b!69943) (not d!15657) (not d!15567) (not b!70375) (not d!15763) (not b!70049) (not bm!5954) (not d!15347) (not b!69511) (not b!70214) (not b_lambda!3083) (not d!15411) (not bm!5943) (not b!69382) (not d!15143) (not d!15531) (not b!70292) (not b!69616) (not b!70111) (not d!15555) (not d!15497) (not b!69588) (not b!70197) (not d!15813) (not bm!5933) (not b!70097) (not bm!5923) (not b!69631) (not d!15755) (not d!15491) (not b!70249) (not d!15729) (not b!69732) (not b!69950) (not d!15721) (not d!15787) (not bm!5941) (not b!69318) (not bm!6035) (not b_next!2077) (not d!15765) (not b!70084) (not d!15661) (not b!69596) (not d!15483) (not d!15803) (not b!69778) (not b!70146) (not bm!6014) (not b!70174) (not b!69512) (not d!15361) (not bm!5948) (not b!69509) (not b!70046) (not b!69828) (not d!15629) (not b!69578) (not bm!5926) (not d!15083) (not d!15603) (not b!69352) (not bm!5947) (not bm!6011) (not b!70367) (not b!70113) (not bm!5989) (not d!15329) (not b!70165) (not d!15553) (not b!69665) (not b!69314) (not b_lambda!3161) (not b!69475) (not d!15179) (not b!69941) (not b!69961) (not d!15633) (not d!15703) (not b!69997) (not b_lambda!3155) (not d!15061) (not b!69491) (not d!15499) (not b!69394) (not b!69887) (not b!69328) (not mapNonEmpty!3115) (not d!15673) (not b!70413) (not d!15443) (not d!15221) (not d!15165) (not b!70093) (not d!15719) (not b!69354) (not b!70131) (not b!70167) (not d!15097) (not bm!5995) (not b!70159) (not b!70170) (not b!69917) (not b!69829) (not d!15447) (not b!70231) (not b!69673) (not d!15231) (not d!15687) (not d!15263) (not b!69832) (not b!69802) (not bm!5972) (not bm!6009) (not b!69696) (not d!15473) (not b!70359) (not b!70304) (not d!15585) (not b!69984) (not b!70137) (not b!69845) (not b!70439) (not d!15185) (not bm!5936) (not b!69513) (not d!15671) (not bm!5984) (not b!70244) (not b!70184) (not b!70163) (not b!69419) (not b!70156) (not b!69894) (not d!15199) (not bm!5918) (not b!69560) (not b!69810) (not b!69539) (not b!70080) (not b_lambda!3111) (not b!69963) (not d!15743) (not d!15777) (not d!15769) (not bm!5956) (not b!69342) (not b!70325) (not bm!5976) (not b!70261) (not b!69449) (not b!70177) (not b!69380) (not b!69805) (not b!70444) (not b!70247) (not b!69998) (not d!15071) (not d!15235) (not b!70286) (not bm!5957) (not b!69996) (not d!15103) (not b!70421) (not d!15783) (not b!70433) (not bm!5949) (not d!15601) (not b!69357) (not b!70235) (not b!69974) (not b!69656) (not d!15689) (not b!69757) (not b!70246) (not b!70142) (not b!70435) (not d!15251) (not b!69660) (not b!70355) (not b!69759) (not b!69691) (not bm!5986) (not b!70368) (not d!15237) (not b!70397) (not b!69971) (not b!70055) (not b!70007) (not bm!5992) (not d!15705) (not b!69415) (not b!69625) (not d!15537) (not b!70069) (not b!70327) (not b!69662) (not b!69856) (not b!70447) (not d!15417) (not b!70400) (not b!69532) (not b!70095) (not d!15747) (not b!69326) (not b!70410) (not b!69331) (not d!15475) (not b!69880) (not b!70085) (not bm!5953) (not b!69812) (not d!15131) (not b!69300) (not b!69908) (not b!70388) (not b!69406) (not b!69605) (not b!70333) (not b!70322) (not d!15579) (not b!69650) (not b!70284) (not b!70378) (not b!69827) (not b!69766) (not b!69405) (not d!15397) (not b!69882) (not b!70129) (not b!69844) (not b!70254) (not bm!6016) (not b!69468) (not b_lambda!3095) (not d!15637) (not b!70389) (not b!70352) (not d!15505) (not d!15561) (not d!15201) (not b!70215) (not bm!6006) (not b!70430) (not b!69457) (not b!70376) (not b!70204) (not b!69563) (not b!70192) (not d!15563) (not b!70100) (not b!69936) (not b!69642) (not bm!6003) (not b!69765) (not b!70422) (not b!70314) (not b!69308) (not b!70149) (not d!15341) (not b_next!2079) (not d!15761) (not b!69639) (not b!69456) (not b!69521) (not b!69687) (not d!15129) (not b!70225) (not d!15607) (not b!69621) (not d!15211) (not b!69803) (not b!69866) (not d!15441) (not b!70265) (not b!70295) (not b!69593) (not b!70357) (not b!69649) (not bm!5945) (not bm!5911) (not d!15691) (not b!69611) (not b!70312) (not bm!5965) (not b!70274) (not d!15641) (not d!15715) (not b_lambda!3147) (not d!15573) (not b!70234) (not b!69916) (not d!15307) (not b!70135) (not b!69931) (not d!15795) (not d!15463) (not b!70051) (not bm!5979) (not d!15399) (not d!15385) (not b!69906) (not d!15511) (not bm!6020) (not b!69609) (not b!70238) (not b_lambda!3109) (not b!70030) (not d!15575) (not b!69972) (not b!70198) (not b!69767) (not b!70431) (not d!15089) (not d!15219) (not b!70132) (not b!70361) (not d!15821) (not b!70382) (not b!69375) (not b!70279) (not b!70065) (not b!70417) (not b!70330) (not b_lambda!3093) (not b!70114) (not b!69723) (not d!15457) (not b!69902) (not b!70126) (not b!70099) (not d!15485) (not b!70145) (not d!15449) (not b!69324) (not b!70289) (not b!69529) (not b!70180) (not b!69637) (not b!70401) (not b!69804) (not bm!6000) (not b!70232) (not b!70043) (not d!15559) (not d!15775) (not b!69733) (not b!69899) (not b!69484) (not b!69929) (not d!15379) (not d!15639) (not b!70200) (not b!70036) (not d!15393) (not b!69976) (not b!70362) (not b!69790) (not b!69591) (not b!70154) (not b!70143) (not b!69937) (not d!15731) (not d!15589) (not b!70344) (not b!69986) (not d!15349) (not b!70309) (not b!69863) (not b!69891) (not b!70420) (not bm!5998) (not b!69480) (not b_lambda!3107) (not b!70014) (not b_lambda!3151) (not b!69590) (not d!15791) (not b!69668) (not d!15577) (not b!70062) (not d!15801) (not bm!5921) (not b!69834) (not b!69968) (not bm!6018) (not d!15267) (not d!15359) (not b!69363) (not d!15323) (not b!70242) (not d!15659) (not b!69740) (not b!70255) (not b!70373) (not d!15759) (not b!70370) (not b!70424) (not b!69942) (not d!15635) (not b!70345) (not d!15365) (not b!69670) (not d!15811) (not b!69409) (not b!69332) (not b!69776) (not d!15301) (not b!69835) (not b!69885) (not b!70241) (not d!15207) (not b!69586) (not b_lambda!3163) (not d!15753) (not b!69544) (not b!69594) (not d!15665) (not b!69316) (not d!15781) (not b!69629) (not b!69837) (not b!70365) (not b!69530) b_and!4327 (not d!15217) (not d!15529) (not b!69531) (not d!15487) (not d!15369) (not b!69321) (not b!70158) (not b!69599) (not b!70332) (not b!69774) (not b!69801) (not b!69636) (not b_lambda!3165) (not b!70059) (not b!70257) (not b!70048) (not b!70008) (not b!70206) (not b!69403) (not d!15767) (not d!15565) (not b!69613) (not d!15209) (not d!15137) (not d!15793) (not b!69652) (not b!69350) (not b!69763) (not b!69685) (not b!69752) (not d!15197) (not b!69360) (not b_lambda!3091) (not b!69517) (not d!15161) (not b!69677) (not b!70282) (not d!15227) (not d!15707) (not b!70102) (not d!15645) (not d!15287) (not d!15815) (not b!70188) (not b!69661) (not b!70073) (not d!15371) (not b!70227) (not d!15169) (not d!15313) (not b!70339) (not d!15107) (not b!70151) (not d!15797) (not d!15069) (not d!15733) (not d!15725) (not b!70306) (not b!69402) (not b!70252) (not b!69385) (not d!15593) (not d!15627) (not b!70148) (not b!69865) (not d!15451) (not b!69999) (not b!70285) (not b!69939) (not d!15157) (not d!15391) (not b!70155) (not d!15159) (not b!69400) (not b!69518) (not b!70088) (not d!15333) (not bm!6025) (not b!69537) (not b!70267) (not d!15305) (not bm!6032) (not b!69346) (not d!15387) (not bm!5970) (not b!69583) b_and!4325 (not d!15351) (not d!15187) (not b!69870) (not b!69789) (not d!15611) (not b!69523) (not b!70005) (not d!15605) (not bm!5916) (not b!69793) (not b!70166) (not b!69369) (not b!69638) (not d!15789) (not b!69788) (not b!70104) (not b!69889) (not b!70160) (not b!70229) (not bm!5928) (not d!15265) (not d!15377) (not b!69842) (not b!70139) (not b!69533) (not b!69528) (not d!15523) (not b_lambda!3173) (not d!15205) (not bm!5951) (not d!15799) (not bm!6033) (not d!15533) (not b!69975) (not b!70040) (not d!15709) (not b!70076) (not b!69398) (not d!15113) (not b!70144) (not b!69526) (not b!69768) (not b!69982) (not b!69337) (not d!15135) (not b!70115) (not b!69634) (not d!15623) (not b!69915) (not b!69934) (not d!15699) (not b!69973) (not b!69689) (not b!70302) (not b!70083) (not d!15439) (not bm!5920) (not b!70441) (not b!69861) (not b!70221) (not d!15807) (not d!15213) (not d!15109) (not b!70152) (not d!15145) (not d!15315) (not d!15785) (not b!69868) (not b!69864) (not b!69633) (not d!15503) (not b!70092) (not b!69825) (not b!69522) (not d!15309) (not b!69515) (not b!70437) (not bm!5975) (not b!70233) (not b!70168) (not b!70134) (not bm!5966) (not b!69892) (not d!15105) (not b!69932) (not d!15291) (not bm!5944) (not b!70207) (not d!15355) (not d!15117) (not bm!5977) (not bm!5935) (not d!15433) (not b!70273) (not d!15453) (not b!69481) (not b!69558) (not b!69647) (not b!70386) (not b!69750) (not bm!5964) (not b_lambda!3153) (not b!69557) (not b!70091) (not d!15241) (not b!69514) (not d!15245) (not b!70195) (not b!69735) (not b_lambda!3115) (not b!69547) (not b!70029) (not bm!6004) (not d!15583) (not d!15653) (not b!69846) (not b!70399) (not b!69464) (not d!15141) (not b!69377) (not b!69472) (not d!15609) (not b!70335) (not d!15647) (not b!70391) (not b!69618) (not b!70392) (not b!70022) (not b!70105) (not b!69602) (not b!69566) (not d!15423) (not d!15225) (not d!15643) (not d!15461) (not b!69797) (not b!70212) (not b!69460) (not bm!5962) (not b!70236) (not d!15679) (not d!15479) (not b!69904) (not b!69977) (not b!69519) (not d!15445) (not d!15215) (not b!69726) (not b!69907) (not b!69749) (not b!69945) (not b_lambda!3171) (not b!70240) (not b!70018) (not b!69389) (not d!15651) (not b!70425) (not b!70209) (not b!70426) (not d!15519) (not d!15649) (not b!70172) (not b!70276) (not d!15095) (not d!15293) (not b!70270) (not b!69619) (not b!69487) (not d!15289) (not b!69572) (not b!70324) (not d!15281) (not b!69913) (not bm!5914) (not b!70103) (not b!70019) (not b!69728) (not b!69777) (not d!15093) (not b!69551) (not d!15247) (not b!69478) (not d!15277) (not b_lambda!3149) (not bm!6028) (not b!69565) (not b!69876) (not d!15229) (not d!15153) (not d!15805) (not b!69954) (not b!69675) (not b!70419) (not b!69736) (not d!15663) (not b!69769) (not b!69340) (not d!15655) (not b!69339) (not b!69393) (not d!15183) (not b!70002) (not b!70318) (not b!70182) (not d!15435) (not d!15493))
(check-sat b_and!4325 b_and!4327 (not b_next!2077) (not b_next!2079))
